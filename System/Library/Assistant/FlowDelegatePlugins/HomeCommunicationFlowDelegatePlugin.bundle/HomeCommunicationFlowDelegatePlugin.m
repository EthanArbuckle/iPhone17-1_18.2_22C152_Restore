uint64_t sub_4478()
{
  return swift_initClassMetadata2();
}

uint64_t sub_44D4(uint64_t a1, uint64_t a2, void (*a3)(void *))
{
  sub_48AC(&qword_BBB00);
  __chkstk_darwin();
  v6 = (uint64_t *)((char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_4BCC();
  void *v6 = *(void *)(v3 + *(void *)(qword_BFDE0 + v7 + 16));
  uint64_t v8 = enum case for AppResolutionResult.selected(_:);
  uint64_t v9 = sub_8E4F0();
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v6, v8, v9);
  swift_storeEnumTagMultiPayload();
  swift_retain();
  a3(v6);
  return sub_48F0((uint64_t)v6);
}

void sub_45F0(uint64_t a1)
{
}

void sub_4614()
{
}

void sub_4644(uint64_t a1)
{
}

void sub_4668(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v3 = swift_allocObject();
  a2(v3);
  __break(1u);
}

void sub_4698()
{
}

void sub_46C8()
{
}

void sub_46E8()
{
}

uint64_t sub_4718()
{
  sub_4BCC();
  sub_4950(v0 + *(void *)(qword_BFDE0 + v1 + 8));
  sub_4BCC();

  return swift_release();
}

void *sub_4774()
{
  uint64_t v0 = (void *)sub_8E4E0();
  sub_4950((uint64_t)v0 + *(void *)(qword_BFDE0 + *v0 + 8));
  swift_release();
  return v0;
}

uint64_t sub_4810()
{
  uint64_t v0 = sub_4774();

  return _swift_deallocClassInstance(v0, 64, 7);
}

uint64_t type metadata accessor for AnnouncementAppSelectionService()
{
  return sub_49A0();
}

void type metadata accessor for INSendAnnouncementIntentResponseCode(uint64_t a1)
{
}

void type metadata accessor for INSendAnnouncementRecipientUnsupportedReason(uint64_t a1)
{
}

void type metadata accessor for INSendAnnouncementAnnouncementUnsupportedReason(uint64_t a1)
{
}

Swift::Int sub_4894()
{
  return sub_4B84(*v0);
}

void sub_489C(uint64_t a1)
{
  sub_4B18(a1, *v1);
}

Swift::Int sub_48A4(uint64_t a1)
{
  return sub_4B40(a1, *v1);
}

uint64_t sub_48AC(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_48F0(uint64_t a1)
{
  uint64_t v2 = sub_48AC(&qword_BBB00);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_4950(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_49A0()
{
  return swift_getGenericMetadata();
}

void type metadata accessor for INDeviceIdiom(uint64_t a1)
{
}

void type metadata accessor for INIntentSlotValueType(uint64_t a1)
{
}

void sub_49F8(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

BOOL sub_4A40(uint64_t *a1, uint64_t *a2)
{
  return sub_4B0C(*a1, *a2);
}

void sub_4A4C(uint64_t a1@<X8>)
{
  sub_4A80();
  *(void *)a1 = v2;
  *(unsigned char *)(a1 + 8) = v3 & 1;
}

uint64_t sub_4A88@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4 = *v2;
  uint64_t result = SendAnnouncementNeedsValueModel.init(targetName:)(*(Swift::String_optional *)(&a1 - 1)).targetName.value._countAndFlagsBits;
  *a2 = result;
  return result;
}

unint64_t sub_4AB8()
{
  unint64_t result = qword_BBB18;
  if (!qword_BBB18)
  {
    type metadata accessor for INIntentSlotValueType(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BBB18);
  }
  return result;
}

BOOL sub_4B0C(uint64_t a1, uint64_t a2)
{
  return a1 == a2;
}

void sub_4B18(uint64_t a1, Swift::UInt a2)
{
}

Swift::Int sub_4B40(uint64_t a1, Swift::UInt a2)
{
  return sub_8EF20();
}

Swift::Int sub_4B84(Swift::UInt a1)
{
  return sub_8EF20();
}

uint64_t sub_4BE0()
{
  return swift_initClassMetadata2();
}

void sub_4C24(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_8D8B0();
  sub_5190();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_48AC(&qword_BBF00);
  __chkstk_darwin(v10 - 8);
  v12 = (char *)v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_8CF30();
  sub_5190();
  uint64_t v15 = v14;
  uint64_t v17 = __chkstk_darwin(v16);
  v39 = (char *)v37 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v17);
  v21 = (char *)v37 - v20;
  __chkstk_darwin(v19);
  v23 = (char *)v37 - v22;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, a1, v4);
  sub_7365C((uint64_t)v9, (uint64_t)v12);
  uint64_t v24 = type metadata accessor for SmsNLIntent();
  if (_s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0((uint64_t)v12, 1, v24) == 1)
  {
    sub_509C((uint64_t)v12);
    (*(void (**)(uint64_t, void, uint64_t))(v15 + 104))(a2, enum case for SiriKitConfirmationState.unset(_:), v13);
  }
  else
  {
    sub_73C34((uint64_t)v23);
    sub_5134((uint64_t)v12);
    (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(a2, v23, v13);
  }
  v25 = v21;
  if (qword_BB830 != -1) {
    swift_once();
  }
  uint64_t v26 = sub_8E730();
  sub_50FC(v26, (uint64_t)qword_BFEC8);
  v27 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  v27(v25, a2, v13);
  v28 = sub_8E710();
  os_log_type_t v29 = sub_8EB00();
  if (os_log_type_enabled(v28, v29))
  {
    v30 = (uint8_t *)swift_slowAlloc();
    uint64_t v38 = swift_slowAlloc();
    uint64_t v41 = v38;
    *(_DWORD *)v30 = 136315138;
    v37[1] = v30 + 4;
    v27(v39, (uint64_t)v25, v13);
    uint64_t v31 = sub_8E8E0();
    uint64_t v40 = sub_8758C(v31, v32, &v41);
    sub_8EBD0();
    swift_bridgeObjectRelease();
    uint64_t v33 = sub_51AC();
    v34(v33);
    _os_log_impl(&dword_0, v28, v29, "Returning confirmation state: %s.", v30, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v35 = sub_51AC();
    v36(v35);
  }
}

uint64_t sub_4FF8()
{
  return sub_8D490();
}

uint64_t sub_502C()
{
  uint64_t v0 = sub_8D4B0();

  return _swift_deallocClassInstance(v0, 16, 7);
}

uint64_t type metadata accessor for AnnouncementBaseRCHFlowDelegate()
{
  return sub_49A0();
}

uint64_t _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t sub_509C(uint64_t a1)
{
  uint64_t v2 = sub_48AC(&qword_BBF00);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_50FC(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t sub_5134(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SmsNLIntent();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_51AC()
{
  return v0;
}

id sub_51C0(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_8CAC0();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  sub_8CAB0();
  uint64_t v10 = sub_8CA90();
  uint64_t v12 = v11;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_54F0(v10, v12, v9, (SEL *)&selRef_setAceId_);

  id v13 = v9;
  if (a3)
  {
    NSString v14 = sub_8E8C0();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v14 = 0;
  }
  [v9 setAppId:v14];

  sub_555C();
  id v15 = a1;
  id v16 = sub_537C(v15);
  [v9 setIntent:v16];

  return v9;
}

id sub_537C(void *a1)
{
  id v2 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  uint64_t v3 = sub_5480([a1 backingStore]);
  if (v4 >> 60 == 15)
  {
    Class isa = 0;
  }
  else
  {
    uint64_t v6 = v3;
    unint64_t v7 = v4;
    Class isa = sub_8CA60().super.isa;
    sub_559C(v6, v7);
  }
  [v2 setData:isa];

  id v8 = [a1 typeName];
  uint64_t v9 = sub_8E8D0();
  uint64_t v11 = v10;

  sub_54F0(v9, v11, v2, (SEL *)&selRef_setTypeName_);
  return v2;
}

uint64_t sub_5480(void *a1)
{
  id v2 = [a1 data];

  if (!v2) {
    return 0;
  }
  uint64_t v3 = sub_8CA70();

  return v3;
}

void sub_54F0(uint64_t a1, uint64_t a2, void *a3, SEL *a4)
{
  NSString v6 = sub_8E8C0();
  swift_bridgeObjectRelease();
  objc_msgSend(a3, *a4, v6);
}

unint64_t sub_555C()
{
  unint64_t result = qword_BBF08;
  if (!qword_BBF08)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_BBF08);
  }
  return result;
}

uint64_t sub_559C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_55B0(a1, a2);
  }
  return a1;
}

uint64_t sub_55B0(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

uint64_t sub_5608()
{
  swift_unknownObjectRelease();

  return _swift_deallocClassInstance(v0, 32, 7);
}

uint64_t type metadata accessor for AppIntentDispatcher()
{
  return self;
}

ValueMetadata *type metadata accessor for AppIntentTransformer()
{
  return &type metadata for AppIntentTransformer;
}

void *sub_5674(uint64_t a1)
{
  uint64_t v2 = sub_8DF10();
  sub_5190();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  sub_6FF0();
  uint64_t v48 = v6;
  sub_6FC4();
  __chkstk_darwin(v7);
  v47 = (char *)&v36 - v8;
  uint64_t v40 = sub_8DD40();
  sub_5190();
  uint64_t v10 = v9;
  __chkstk_darwin(v11);
  sub_6FF0();
  uint64_t v49 = v12;
  sub_6FC4();
  __chkstk_darwin(v13);
  id v15 = (char *)&v36 - v14;
  id v16 = &_swiftEmptyArrayStorage;
  v51 = &_swiftEmptyArrayStorage;
  uint64_t v17 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (v17)
  {
    uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
    uint64_t v18 = v10 + 16;
    v45 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    unint64_t v38 = (*(unsigned __int8 *)(v18 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 64);
    uint64_t v39 = v2;
    uint64_t v21 = a1 + v38;
    unsigned int v44 = enum case for IdentifierAppBundle.abHomeKit(_:);
    v42 = (void (**)(uint64_t, uint64_t))(v4 + 8);
    v43 = (void (**)(uint64_t, void, uint64_t))(v4 + 104);
    uint64_t v36 = a1;
    v37 = (void (**)(char *, uint64_t))(v18 - 8);
    uint64_t v46 = v18;
    uint64_t v41 = (void (**)(uint64_t))(v18 + 16);
    uint64_t v22 = v40;
    v23 = v47;
    do
    {
      uint64_t v50 = v17;
      v45(v15, v21, v22);
      sub_8DCD0();
      uint64_t v24 = v15;
      uint64_t v25 = v48;
      (*v43)(v48, v44, v2);
      char v26 = sub_8DEF0();
      v27 = *v42;
      (*v42)(v25, v2);
      v27((uint64_t)v23, v2);
      if (v26)
      {
        v28 = *v41;
        sub_7074();
        v28(v29);
        v30 = v51;
        id v15 = v24;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_57AD8(0, v30[2] + 1, 1);
          v30 = v51;
        }
        uint64_t v31 = v50;
        unint64_t v33 = v30[2];
        unint64_t v32 = v30[3];
        if (v33 >= v32 >> 1)
        {
          sub_57AD8(v32 > 1, v33 + 1, 1);
          v30 = v51;
        }
        v30[2] = v33 + 1;
        uint64_t v22 = v40;
        sub_7074();
        v28(v34);
        v51 = v30;
        uint64_t v2 = v39;
      }
      else
      {
        (*v37)(v24, v22);
        id v15 = v24;
        uint64_t v31 = v50;
      }
      v21 += v20;
      uint64_t v17 = v31 - 1;
    }
    while (v17);
    id v16 = v51;
  }
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t sub_5998(uint64_t a1)
{
  uint64_t v2 = sub_8DD40();
  sub_5190();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  sub_6FF0();
  uint64_t v52 = v6;
  sub_6FC4();
  __chkstk_darwin(v7);
  v54 = (char *)v44 - v8;
  uint64_t v9 = &_swiftEmptyDictionarySingleton;
  v55 = &_swiftEmptyDictionarySingleton;
  uint64_t v10 = *(void *)(a1 + 16);
  if (!v10) {
    return (uint64_t)v9;
  }
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  uint64_t v11 = v4 + 16;
  uint64_t v13 = *(unsigned __int8 *)(v11 + 64);
  uint64_t v14 = (v13 + 32) & ~v13;
  uint64_t v15 = a1 + v14;
  uint64_t v16 = *(void *)(v11 + 56);
  uint64_t v50 = v14;
  v51 = v12;
  uint64_t v46 = v13 | 7;
  uint64_t v47 = v16 + v14;
  v53 = (void (**)(void))(v11 + 16);
  v44[1] = a1;
  swift_bridgeObjectRetain();
  long long v45 = xmmword_8FA10;
  uint64_t v48 = v2;
  uint64_t v49 = v16;
  while (1)
  {
    uint64_t v17 = v11;
    v51(v54, v15, v2);
    unint64_t v18 = sub_8DCF0();
    int v19 = v18;
    uint64_t v20 = HIDWORD(v18) & 1;
    uint64_t v21 = v18;
    unint64_t v23 = sub_5E198(v18 | (unint64_t)(v20 << 32));
    uint64_t v24 = v9[2];
    BOOL v25 = (v22 & 1) == 0;
    uint64_t v26 = v24 + v25;
    if (__OFADD__(v24, v25)) {
      break;
    }
    char v27 = v22;
    if (v9[3] < v26)
    {
      sub_6CC8(v26, 1);
      uint64_t v9 = v55;
      unint64_t v28 = sub_5E198(v21 | (v20 << 32));
      if ((v27 & 1) != (v29 & 1)) {
        goto LABEL_20;
      }
      unint64_t v23 = v28;
    }
    if (v27)
    {
      uint64_t v30 = v9[7];
      uint64_t v31 = *v53;
      sub_7074();
      v31();
      uint64_t v32 = *(void *)(v30 + 8 * v23);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)(v30 + 8 * v23) = v32;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        uint64_t v32 = sub_769EC(0, *(void *)(v32 + 16) + 1, 1, v32);
        *(void *)(v30 + 8 * v23) = v32;
      }
      unint64_t v35 = *(void *)(v32 + 16);
      unint64_t v34 = *(void *)(v32 + 24);
      if (v35 >= v34 >> 1)
      {
        uint64_t v32 = sub_769EC(v34 > 1, v35 + 1, 1, v32);
        *(void *)(v30 + 8 * v23) = v32;
      }
      uint64_t v11 = v17;
      *(void *)(v32 + 16) = v35 + 1;
      uint64_t v36 = v49;
      uint64_t v2 = v48;
      sub_7074();
      v31();
    }
    else
    {
      sub_48AC(&qword_BBFD0);
      uint64_t v37 = swift_allocObject();
      *(_OWORD *)(v37 + 16) = v45;
      sub_7004();
      v38();
      v9[(v23 >> 6) + 8] |= 1 << v23;
      uint64_t v39 = v9[6] + 8 * v23;
      *(_DWORD *)uint64_t v39 = v19;
      *(unsigned char *)(v39 + 4) = v20;
      *(void *)(v9[7] + 8 * v23) = v37;
      uint64_t v40 = v9[2];
      BOOL v41 = __OFADD__(v40, 1);
      uint64_t v42 = v40 + 1;
      if (v41) {
        goto LABEL_19;
      }
      v9[2] = v42;
      uint64_t v11 = v17;
      uint64_t v36 = v49;
    }
    v15 += v36;
    if (!--v10)
    {
      swift_bridgeObjectRelease();
      return (uint64_t)v9;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  sub_48AC(&qword_BBFD8);
  uint64_t result = sub_8EE80();
  __break(1u);
  return result;
}

uint64_t sub_5CC0(uint64_t *a1, uint64_t *a2)
{
  double v3 = v2;
  v188 = a2;
  uint64_t v5 = sub_8DF30();
  sub_5190();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  v175 = (char *)v149 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_48AC(&qword_BBFB8);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v13 = (char *)v149 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  sub_6FE4();
  uint64_t v157 = v14;
  sub_6FC4();
  __chkstk_darwin(v15);
  sub_6FE4();
  uint64_t v170 = v16;
  sub_6FC4();
  __chkstk_darwin(v17);
  int v19 = (char *)v149 - v18;
  uint64_t v20 = sub_48AC(&qword_BBFC0);
  __chkstk_darwin(v20 - 8);
  sub_6FF0();
  uint64_t v158 = v21;
  sub_6FC4();
  __chkstk_darwin(v22);
  sub_6FE4();
  uint64_t v165 = v23;
  sub_6FC4();
  __chkstk_darwin(v24);
  sub_6FE4();
  uint64_t v164 = v25;
  sub_6FC4();
  __chkstk_darwin(v26);
  sub_6FE4();
  uint64_t v159 = v27;
  sub_6FC4();
  __chkstk_darwin(v28);
  sub_6FE4();
  uint64_t v167 = v29;
  sub_6FC4();
  __chkstk_darwin(v30);
  sub_6FE4();
  uint64_t v166 = v31;
  sub_6FC4();
  __chkstk_darwin(v32);
  sub_6FE4();
  uint64_t v171 = v33;
  sub_6FC4();
  __chkstk_darwin(v34);
  sub_6FE4();
  uint64_t v169 = v35;
  sub_6FC4();
  __chkstk_darwin(v36);
  sub_6FE4();
  uint64_t v172 = v37;
  sub_6FC4();
  __chkstk_darwin(v38);
  sub_6FE4();
  uint64_t v179 = v39;
  sub_6FC4();
  uint64_t v41 = __chkstk_darwin(v40);
  v43 = (char *)v149 - v42;
  __chkstk_darwin(v41);
  long long v45 = (char *)v149 - v44;
  uint64_t v180 = sub_8DD40();
  sub_5190();
  __chkstk_darwin(v46);
  sub_6FF0();
  uint64_t v163 = v47;
  sub_6FC4();
  uint64_t v49 = __chkstk_darwin(v48);
  __chkstk_darwin(v49);
  sub_6FE4();
  uint64_t v168 = v50;
  sub_6FC4();
  uint64_t v52 = __chkstk_darwin(v51);
  uint64_t v53 = __chkstk_darwin(v52);
  uint64_t v54 = __chkstk_darwin(v53);
  __chkstk_darwin(v54);
  sub_6FE4();
  v183 = v55;
  sub_6FC4();
  __chkstk_darwin(v56);
  uint64_t v63 = *a1;
  uint64_t v64 = *(void *)(*a1 + 16);
  if (!v64) {
    return 0;
  }
  v156 = (char *)v149 - v59;
  uint64_t v173 = v58;
  uint64_t v151 = v57;
  v149[2] = v62;
  v149[1] = v61;
  v155 = v13;
  double v161 = v3;
  uint64_t v154 = *v188;
  uint64_t v160 = v60;
  uint64_t v66 = *(void *)(v60 + 16);
  uint64_t v65 = v60 + 16;
  v187[1] = v66;
  unint64_t v152 = (*(unsigned __int8 *)(v65 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v65 + 64);
  uint64_t v67 = v63 + v152;
  uint64_t v68 = *(void *)(v65 + 56);
  int v184 = enum case for IdentifierNamespace.nsMatchInfo(_:);
  v187[0] = v7 + 104;
  uint64_t v174 = v7 + 32;
  v181 = (void (**)(void))(v7 + 8);
  v188 = (uint64_t *)v65;
  uint64_t v185 = v68;
  v186 = (void (**)(void, uint64_t))(v65 - 8);
  uint64_t v162 = v63;
  swift_bridgeObjectRetain();
  uint64_t v150 = v67;
  uint64_t v153 = v64;
  uint64_t v69 = v64;
  uint64_t v70 = v180;
  uint64_t v176 = v10;
  v178 = v45;
  while (1)
  {
    sub_7098();
    v71();
    sub_8DCE0();
    v182 = *(void (**)(void))v187[0];
    sub_711C();
    v72();
    sub_7140();
    uint64_t v73 = (uint64_t)&v19[*(int *)(v10 + 48)];
    sub_6BB4((uint64_t)v45, (uint64_t)v19);
    sub_6BB4((uint64_t)v43, v73);
    sub_6FA4((uint64_t)v19);
    if (v75) {
      break;
    }
    uint64_t v74 = v179;
    sub_6BB4((uint64_t)v19, v179);
    sub_6FA4(v73);
    if (v75)
    {
      uint64_t v76 = sub_70A8();
      v77(v76);
      long long v45 = v178;
LABEL_11:
      sub_6C1C((uint64_t)v19, &qword_BBFB8);
      sub_6C1C((uint64_t)v43, &qword_BBFC0);
      sub_6C1C((uint64_t)v45, &qword_BBFC0);
      v83 = v183;
      goto LABEL_13;
    }
    v78 = v175;
    sub_7004();
    v79();
    sub_6C78();
    LODWORD(v177) = sub_8E8B0();
    v80 = *v181;
    ((void (*)(uint64_t, uint64_t))*v181)(v74, v5);
    v81 = v78;
    uint64_t v10 = v176;
    ((void (*)(char *, uint64_t))v80)(v81, v5);
    uint64_t v70 = v180;
    sub_6C1C((uint64_t)v19, &qword_BBFC0);
    sub_6C1C((uint64_t)v43, &qword_BBFC0);
    long long v45 = v178;
    sub_6C1C((uint64_t)v178, &qword_BBFC0);
    v83 = v183;
    if (v177) {
      goto LABEL_16;
    }
LABEL_13:
    (*v186)(v83, v70);
    v67 += v185;
    if (!--v69) {
      goto LABEL_14;
    }
  }
  sub_6FA4(v73);
  if (!v75) {
    goto LABEL_11;
  }
  sub_6C1C((uint64_t)v19, &qword_BBFC0);
  sub_6C1C((uint64_t)v43, &qword_BBFC0);
  sub_6C1C((uint64_t)v45, &qword_BBFC0);
  v83 = v183;
LABEL_16:
  swift_bridgeObjectRelease();
  uint64_t v84 = v160 + 32;
  v85 = v156;
  v178 = *(char **)(v160 + 32);
  ((void (*)(char *, void (*)(void, void), uint64_t))v178)(v156, v83, v70);
  *(double *)&uint64_t v86 = COERCE_DOUBLE(sub_8DCB0());
  char v88 = v87;
  uint64_t v160 = v84;
  v183 = *(void (**)(void, void))(v84 - 24);
  v183(v85, v70);
  if (v88) {
    return 0;
  }
  uint64_t v89 = *(void *)(v154 + 16);
  if (!v89) {
    return 1;
  }
  double v90 = *(double *)&v86;
  uint64_t v91 = v154 + v152;
  swift_bridgeObjectRetain();
  uint64_t v179 = v91;
  uint64_t v177 = v89;
  uint64_t v92 = v89;
  v93 = v182;
  uint64_t v95 = v169;
  uint64_t v94 = v170;
  uint64_t v96 = v172;
  while (1)
  {
    sub_7098();
    v97();
    sub_8DCE0();
    sub_711C();
    v93();
    sub_7140();
    uint64_t v98 = v94 + *(int *)(v176 + 48);
    sub_6BB4(v96, v94);
    sub_6BB4(v95, v98);
    sub_6FA4(v94);
    if (v75) {
      break;
    }
    sub_6BB4(v94, v171);
    sub_6FA4(v98);
    if (!v99)
    {
      sub_7004();
      v102();
      sub_6C78();
      char v103 = sub_70DC();
      uint64_t v104 = v5;
      v105 = *v181;
      sub_7110();
      v105();
      uint64_t v94 = v170;
      sub_7110();
      v105();
      v93 = v182;
      uint64_t v5 = v104;
      uint64_t v95 = v169;
      sub_6C1C(v94, &qword_BBFC0);
      sub_6C1C(v95, &qword_BBFC0);
      uint64_t v106 = v172;
      sub_6C1C(v172, &qword_BBFC0);
      uint64_t v96 = v106;
      if (v103) {
        goto LABEL_32;
      }
      goto LABEL_29;
    }
    uint64_t v100 = sub_70A8();
    v101(v100);
    uint64_t v96 = v172;
LABEL_27:
    sub_6C1C(v94, &qword_BBFB8);
    sub_6C1C(v95, &qword_BBFC0);
    sub_6C1C(v96, &qword_BBFC0);
LABEL_29:
    sub_6FD0();
    v107();
    v91 += v185;
    if (!--v92)
    {
LABEL_30:
      swift_bridgeObjectRelease();
      return 1;
    }
  }
  sub_6FA4(v98);
  if (!v75) {
    goto LABEL_27;
  }
  sub_6C1C(v94, &qword_BBFC0);
  sub_6C1C(v95, &qword_BBFC0);
  sub_6C1C(v96, &qword_BBFC0);
LABEL_32:
  swift_bridgeObjectRelease();
  sub_7014();
  v108();
  double v109 = COERCE_DOUBLE(sub_8DCB0());
  char v111 = v110;
  sub_6FD0();
  v112();
  if (v111) {
    return 1;
  }
  if (v90 != v109) {
    return v109 < v90;
  }
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v113 = 0;
  uint64_t v114 = v157;
  uint64_t v115 = v150;
  while (2)
  {
    uint64_t v116 = v113 + 1;
    if (!__OFADD__(v113, 1))
    {
      uint64_t v117 = v168;
      uint64_t v118 = v115;
      sub_7098();
      v119();
      sub_8DCE0();
      sub_70F8((uint64_t)&v192);
      sub_711C();
      v120();
      sub_702C();
      sub_6BB4(v117, *(uint64_t *)&v109);
      sub_6FA4(v114);
      if (v75)
      {
        sub_6FA4(*(uint64_t *)&v109);
        if (v75)
        {
          sub_6C1C(v114, &qword_BBFC0);
          sub_7080((uint64_t)&v192);
          sub_7080((uint64_t)&v191);
LABEL_64:
          swift_bridgeObjectRelease();
          sub_7014();
          v141();
          uint64_t v142 = sub_8DD20();
          uint64_t v144 = v143;
          sub_6FD0();
          v145();
          if (v142 != 0xD00000000000001BLL || v144 != 0x8000000000095600)
          {
            char v146 = sub_8EE40();
            swift_bridgeObjectRelease();
            uint64_t result = 0;
            double v109 = v161;
            if (v146) {
              return result;
            }
LABEL_48:
            uint64_t result = swift_bridgeObjectRetain();
            uint64_t v128 = 0;
            v129 = v182;
            uint64_t v130 = v179;
            uint64_t v131 = (uint64_t)v155;
            while (2)
            {
              uint64_t v132 = v128 + 1;
              if (__OFADD__(v128, 1)) {
                goto LABEL_70;
              }
              uint64_t v133 = v163;
              uint64_t v179 = v130;
              sub_7098();
              v134();
              sub_8DCE0();
              sub_70F8((uint64_t)&v190);
              sub_711C();
              v129();
              sub_702C();
              sub_6BB4(v133, *(uint64_t *)&v109);
              sub_6FA4(v131);
              if (v75)
              {
                sub_6FA4(*(uint64_t *)&v109);
                if (v75)
                {
                  sub_7080((uint64_t)v187);
                  sub_7080((uint64_t)&v190);
                  sub_7080((uint64_t)&v189);
LABEL_68:
                  swift_bridgeObjectRelease();
                  sub_7014();
                  v147();
                  sub_8DD20();
                  sub_6FD0();
                  v148();
                  goto LABEL_30;
                }
              }
              else
              {
                sub_6BB4(v131, v158);
                sub_6FA4(*(uint64_t *)&v109);
                if (!v135)
                {
                  sub_7004();
                  v138();
                  sub_6C78();
                  double v109 = COERCE_DOUBLE(sub_70DC());
                  v139 = *v181;
                  sub_7110();
                  v139();
                  sub_7110();
                  v139();
                  v129 = v182;
                  sub_6C1C(v131, &qword_BBFC0);
                  sub_7128((uint64_t)&v190);
                  sub_7128((uint64_t)&v189);
                  if (LOBYTE(v109)) {
                    goto LABEL_68;
                  }
                  goto LABEL_60;
                }
                uint64_t v136 = sub_70C4();
                v137(v136);
              }
              sub_6C1C((uint64_t)v155, &qword_BBFB8);
              double v109 = COERCE_DOUBLE(&qword_BBFC0);
              sub_6C1C(v165, &qword_BBFC0);
              sub_7080((uint64_t)&v189);
LABEL_60:
              sub_6FD0();
              uint64_t result = v140();
              ++v128;
              uint64_t v130 = v179 + v185;
              if (v132 == v177) {
                goto LABEL_30;
              }
              continue;
            }
          }
LABEL_14:
          swift_bridgeObjectRelease();
          return 0;
        }
      }
      else
      {
        sub_6BB4(v114, v159);
        sub_6FA4(*(uint64_t *)&v109);
        if (!v121)
        {
          v124 = v175;
          sub_7004();
          v125();
          sub_6C78();
          double v109 = COERCE_DOUBLE(sub_70DC());
          v126 = *v181;
          ((void (*)(uint64_t, uint64_t))*v181)(v159, v5);
          ((void (*)(char *, uint64_t))v126)(v124, v5);
          uint64_t v114 = v157;
          sub_6C1C(v157, &qword_BBFC0);
          sub_7128((uint64_t)&v192);
          sub_7128((uint64_t)&v191);
          if (LOBYTE(v109)) {
            goto LABEL_64;
          }
LABEL_46:
          sub_6FD0();
          uint64_t result = v127();
          ++v113;
          uint64_t v115 = v118 + v185;
          if (v116 == v153)
          {
            swift_bridgeObjectRelease();
            goto LABEL_48;
          }
          continue;
        }
        uint64_t v122 = sub_70C4();
        v123(v122);
      }
      sub_6C1C(v114, &qword_BBFB8);
      double v109 = COERCE_DOUBLE(&qword_BBFC0);
      sub_6C1C(v167, &qword_BBFC0);
      sub_7080((uint64_t)&v191);
      goto LABEL_46;
    }
    break;
  }
  __break(1u);
LABEL_70:
  __break(1u);
  return result;
}

uint64_t _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_6BB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_48AC(&qword_BBFC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_6C1C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_48AC(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_6C78()
{
  unint64_t result = qword_BBFC8;
  if (!qword_BBFC8)
  {
    sub_8DF30();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BBFC8);
  }
  return result;
}

unint64_t sub_6CC8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_48AC(&qword_BBFE0);
  uint64_t v6 = (void *)sub_8ED50();
  if (*(void *)(v5 + 16))
  {
    uint64_t v24 = v3;
    uint64_t v7 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v8 = (void *)(v5 + 64);
    uint64_t v9 = -1;
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v11 = (unint64_t)(v7 + 63) >> 6;
    unint64_t result = swift_retain();
    int64_t v13 = 0;
    if (!v10) {
      goto LABEL_6;
    }
LABEL_5:
    unint64_t v14 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    for (unint64_t i = v14 | (v13 << 6); ; unint64_t i = __clz(__rbit64(v17)) + (v13 << 6))
    {
      int v19 = (unsigned int *)(*(void *)(v5 + 48) + 8 * i);
      uint64_t v20 = *v19;
      unsigned __int8 v21 = *((unsigned char *)v19 + 4);
      uint64_t v22 = *(void *)(*(void *)(v5 + 56) + 8 * i);
      if ((a2 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      unint64_t result = sub_6ECC(v20 | ((unint64_t)v21 << 32), v22, v6);
      if (v10) {
        goto LABEL_5;
      }
LABEL_6:
      int64_t v16 = v13 + 1;
      if (__OFADD__(v13, 1))
      {
        __break(1u);
LABEL_29:
        __break(1u);
        return result;
      }
      if (v16 >= v11) {
        goto LABEL_22;
      }
      unint64_t v17 = v8[v16];
      ++v13;
      if (!v17)
      {
        int64_t v13 = v16 + 1;
        if (v16 + 1 >= v11) {
          goto LABEL_22;
        }
        unint64_t v17 = v8[v13];
        if (!v17)
        {
          int64_t v18 = v16 + 2;
          if (v18 >= v11)
          {
LABEL_22:
            swift_release();
            uint64_t v3 = v24;
            if (a2)
            {
              uint64_t v23 = 1 << *(unsigned char *)(v5 + 32);
              if (v23 > 63) {
                sub_77C14(0, (unint64_t)(v23 + 63) >> 6, (void *)(v5 + 64));
              }
              else {
                *uint64_t v8 = -1 << v23;
              }
              *(void *)(v5 + 16) = 0;
            }
            break;
          }
          unint64_t v17 = v8[v18];
          if (!v17)
          {
            while (1)
            {
              int64_t v13 = v18 + 1;
              if (__OFADD__(v18, 1)) {
                goto LABEL_29;
              }
              if (v13 >= v11) {
                goto LABEL_22;
              }
              unint64_t v17 = v8[v13];
              ++v18;
              if (v17) {
                goto LABEL_17;
              }
            }
          }
          int64_t v13 = v18;
        }
      }
LABEL_17:
      unint64_t v10 = (v17 - 1) & v17;
    }
  }
  unint64_t result = swift_release();
  *uint64_t v3 = v6;
  return result;
}

unint64_t sub_6ECC(uint64_t a1, uint64_t a2, void *a3)
{
  sub_8EEE0();
  if ((a1 & 0x100000000) != 0)
  {
    sub_8EF00(0);
  }
  else
  {
    sub_8EF00(1u);
    sub_8EF10(a1);
  }
  sub_8EF20();
  unint64_t result = sub_8EC00();
  *(void *)((char *)a3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
  uint64_t v7 = a3[6] + 8 * result;
  *(_DWORD *)uint64_t v7 = a1;
  *(unsigned char *)(v7 + 4) = BYTE4(a1) & 1;
  *(void *)(a3[7] + 8 * result) = a2;
  ++a3[2];
  return result;
}

uint64_t sub_6FA4(uint64_t a1)
{
  return _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0(a1, 1, v1);
}

uint64_t sub_702C()
{
  _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(v0, 0, 1, v1);
  return sub_6BB4(v3, v2);
}

uint64_t sub_7080@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(a1 - 256);
  return sub_6C1C(v3, v1);
}

uint64_t sub_70A8()
{
  return v0;
}

uint64_t sub_70C4()
{
  return v0;
}

uint64_t sub_70DC()
{
  return sub_8E8B0();
}

uint64_t sub_70F8@<X0>(uint64_t a1@<X8>)
{
  return *(void *)(a1 - 256);
}

uint64_t sub_7128@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(a1 - 256);
  return sub_6C1C(v3, v1);
}

uint64_t sub_7140()
{
  return _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(v1, 0, 1, v0);
}

uint64_t sub_7160()
{
  return 1;
}

uint64_t sub_7168()
{
  return sub_8CE00();
}

uint64_t sub_71C4(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_71E4, 0, 0);
}

uint64_t sub_71E4()
{
  sub_8D2A0();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_7244()
{
  return _swift_deallocClassInstance(v0, 16, 7);
}

uint64_t type metadata accessor for BaseFlow()
{
  return self;
}

uint64_t sub_7278(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_7328;
  return Flow.onAsync(input:)(a1, a2, a3);
}

uint64_t sub_7328(uint64_t a1)
{
  sub_7614();
  uint64_t v5 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

uint64_t sub_7400()
{
  return sub_7168();
}

uint64_t sub_7424(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_74BC;
  return sub_71C4(a1);
}

uint64_t sub_74BC()
{
  sub_7614();
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_758C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for BaseFlow();

  return Flow<>.exitValue.getter(v3, a2);
}

unint64_t sub_75C8()
{
  unint64_t result = qword_BC0B0;
  if (!qword_BC0B0)
  {
    type metadata accessor for BaseFlow();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BC0B0);
  }
  return result;
}

HomeCommunicationFlowDelegatePlugin::ABCErrorType_optional __swiftcall ABCErrorType.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v6._countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._rawValue = &off_B2DA0;
  v6._object = object;
  Swift::Int v3 = sub_8ED80(v2, v6);
  swift_bridgeObjectRelease();
  if (v3 == 1) {
    v4.value = HomeCommunicationFlowDelegatePlugin_ABCErrorType_error;
  }
  else {
    v4.value = HomeCommunicationFlowDelegatePlugin_ABCErrorType_unknownDefault;
  }
  if (v3) {
    return v4;
  }
  else {
    return 0;
  }
}

uint64_t ABCErrorType.rawValue.getter(char a1)
{
  if (a1) {
    return 0x726F727265;
  }
  else {
    return 0x6775626564;
  }
}

uint64_t sub_76A8(char *a1, char *a2)
{
  return sub_249F0(*a1, *a2);
}

Swift::Int sub_76B4()
{
  return sub_24C1C();
}

uint64_t sub_76BC()
{
  return sub_250C8();
}

Swift::Int sub_76C4()
{
  return sub_252DC();
}

HomeCommunicationFlowDelegatePlugin::ABCErrorType_optional sub_76CC@<W0>(Swift::String *a1@<X0>, HomeCommunicationFlowDelegatePlugin::ABCErrorType_optional *a2@<X8>)
{
  result.value = ABCErrorType.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

uint64_t sub_76FC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = ABCErrorType.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

HomeCommunicationFlowDelegatePlugin::ABCErrorSubType_optional __swiftcall ABCErrorSubType.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v5._countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._rawValue = &off_B2DF0;
  v5._object = object;
  unint64_t v3 = sub_8ED80(v2, v5);
  swift_bridgeObjectRelease();
  if (v3 >= 4) {
    return (HomeCommunicationFlowDelegatePlugin::ABCErrorSubType_optional)4;
  }
  else {
    return (HomeCommunicationFlowDelegatePlugin::ABCErrorSubType_optional)v3;
  }
}

unint64_t ABCErrorSubType.rawValue.getter(char a1)
{
  unint64_t result = 0xD00000000000001ELL;
  switch(a1)
  {
    case 1:
    case 2:
      unint64_t result = 0xD000000000000010;
      break;
    case 3:
      unint64_t result = 0x636972656E6567;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_780C()
{
  unint64_t result = qword_BC0B8;
  if (!qword_BC0B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BC0B8);
  }
  return result;
}

uint64_t sub_7858(char *a1, char *a2)
{
  return sub_24814(*a1, *a2);
}

unint64_t sub_7868()
{
  unint64_t result = qword_BC0C0[0];
  if (!qword_BC0C0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_BC0C0);
  }
  return result;
}

Swift::Int sub_78B4()
{
  return sub_24C28();
}

uint64_t sub_78BC()
{
  return sub_24FA0();
}

Swift::Int sub_78C4(uint64_t a1)
{
  return sub_253BC(a1, *v1);
}

HomeCommunicationFlowDelegatePlugin::ABCErrorSubType_optional sub_78CC@<W0>(Swift::String *a1@<X0>, HomeCommunicationFlowDelegatePlugin::ABCErrorSubType_optional *a2@<X8>)
{
  result.value = ABCErrorSubType.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

unint64_t sub_78FC@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = ABCErrorSubType.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unsigned char *initializeBufferWithCopyOfBuffer for ABCErrorType(unsigned char *result, unsigned char *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for ABCErrorType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFF)
  {
    if (a2 + 1 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 1) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 2;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v5 = v6 - 2;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for ABCErrorType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x7A8CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_7AB4(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_7ABC(unsigned char *result, char a2)
{
  *unint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for ABCErrorType()
{
  return &type metadata for ABCErrorType;
}

uint64_t getEnumTagSinglePayload for ABCErrorSubType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFD)
  {
    if (a2 + 3 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 3) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 4;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v5 = v6 - 4;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for ABCErrorSubType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x7C2CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

unsigned char *sub_7C54(unsigned char *result, char a2)
{
  *unint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for ABCErrorSubType()
{
  return &type metadata for ABCErrorSubType;
}

uint64_t sub_7C6C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_7CC8(uint64_t a1, void (*a2)(uint64_t, uint64_t), uint64_t a3, uint64_t a4, unint64_t a5)
{
  sub_8D4C(a1, (uint64_t)v21, &qword_BC148);
  uint64_t v8 = v21[0];
  uint64_t v9 = v21[1];
  uint64_t v10 = v21[2];
  uint64_t v11 = v21[3];
  uint64_t v12 = v21[4];
  uint64_t v13 = v21[5];
  sub_8EB4();
  uint64_t v14 = v22;
  if (v22)
  {
    swift_errorRetain();
  }
  else
  {
    v20[0] = v8;
    v20[1] = v9;
    v20[2] = v10;
    v20[3] = v11;
    v20[4] = v12;
    v20[5] = v13;
    v20[6] = v5;
    v20[7] = v6;
    sub_8CBC(a1, (void (*)(void, void, void, void, void, void, void, void, char))sub_8DB0);
    sub_7DCC(v20, a4, a5, &v19);
    sub_8CBC(a1, (void (*)(void, void, void, void, void, void, void, void, char))sub_8E28);
    uint64_t v8 = v19;
  }
  a2(v8, v14);
  return sub_8CB0(v8, v14);
}

void sub_7DCC(uint64_t *a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v5 = a1[1];
  uint64_t v55 = *a1;
  uint64_t v6 = a1[3];
  uint64_t v57 = a1[2];
  uint64_t v48 = a1[5];
  uint64_t v50 = a1[4];
  uint64_t v7 = a1[7];
  uint64_t v43 = a1[6];
  if (qword_BB860 != -1) {
    swift_once();
  }
  uint64_t v8 = (void *)sub_8D1C0();
  if (qword_BB868 != -1) {
    swift_once();
  }
  uint64_t v60 = a2;
  unint64_t v44 = v7;
  long long v45 = (void *)sub_8D1C0();
  if (qword_BB870 != -1) {
    swift_once();
  }
  uint64_t v52 = (void *)sub_8D1C0();
  sub_8D10(0, (unint64_t *)&qword_BE190);
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_8E8D0();
  uint64_t v11 = v10;
  uint64_t v12 = sub_8E8D0();
  uint64_t v14 = v13;
  sub_48AC(&qword_BE170);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_8FC30;
  *(void *)(v15 + 32) = v8;
  uint64_t v61 = v15;
  sub_8EA50();
  id v58 = v8;
  id v47 = sub_4B3F4(v55, v5, v9, v11, v12, v14, v61);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v16 = sub_8E8D0();
  uint64_t v18 = v17;
  uint64_t v19 = sub_8E8D0();
  uint64_t v21 = v20;
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_8FC30;
  *(void *)(v22 + 32) = v45;
  uint64_t v61 = v22;
  sub_8EA50();
  id v56 = v45;
  id v46 = sub_4B3F4(v57, v6, v16, v18, v19, v21, v61);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v23 = sub_8E8D0();
  uint64_t v25 = v24;
  uint64_t v26 = sub_8E8D0();
  uint64_t v28 = v27;
  uint64_t v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_8FC30;
  *(void *)(v29 + 32) = v52;
  uint64_t v61 = v29;
  sub_8EA50();
  id v53 = v52;
  id v30 = sub_4B3F4(v50, v48, v23, v25, v26, v28, v61);
  sub_8D10(0, &qword_BC150);
  id v31 = v30;
  id v32 = v46;
  id v51 = v47;
  id v49 = sub_4B4C0(v31, v32, v51);
  if (a3)
  {
    unint64_t v33 = a3;
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v33 = v44;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v60 = v43;
  }
  uint64_t v34 = qword_BB830;
  swift_bridgeObjectRetain();
  if (v34 != -1) {
    swift_once();
  }
  uint64_t v35 = sub_8E730();
  sub_50FC(v35, (uint64_t)qword_BFEC8);
  swift_bridgeObjectRetain_n();
  uint64_t v36 = sub_8E710();
  os_log_type_t v37 = sub_8EB00();
  if (os_log_type_enabled(v36, v37))
  {
    uint64_t v38 = (uint8_t *)swift_slowAlloc();
    uint64_t v61 = swift_slowAlloc();
    *(_DWORD *)uint64_t v38 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v39 = v60;
    sub_8758C(v60, v33, &v61);
    sub_8EBD0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_0, v36, v37, "Making a CarPlay snippet to stop announcements with an announcer name: %s.", v38, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    uint64_t v39 = v60;
  }
  uint64_t v40 = swift_allocObject();
  *(_OWORD *)(v40 + 16) = xmmword_8FC30;
  sub_8D10(0, &qword_BC158);
  id v41 = v49;
  *(void *)(v40 + 32) = sub_4B6A0(v39, v33, v41);
  uint64_t v61 = v40;
  sub_8EA50();
  uint64_t v42 = v61;

  *a4 = v42;
}

uint64_t sub_83EC(uint64_t a1, void (*a2)(uint64_t, uint64_t), uint64_t a3, void *a4)
{
  sub_8D4C(a1, (uint64_t)v19, &qword_BC160);
  uint64_t v7 = v19[0];
  uint64_t v8 = v19[1];
  uint64_t v9 = v19[2];
  uint64_t v10 = v19[3];
  uint64_t v12 = v19[4];
  uint64_t v11 = v19[5];
  sub_8EB4();
  uint64_t v13 = v20;
  if (v20)
  {
    swift_errorRetain();
  }
  else
  {
    v18[0] = v7;
    v18[1] = v8;
    v18[2] = v9;
    v18[3] = v10;
    v18[4] = v12;
    v18[5] = v11;
    v18[6] = v4;
    v18[7] = v5;
    sub_8CBC(a1, (void (*)(void, void, void, void, void, void, void, void, char))sub_8DB0);
    sub_84F0(v18, a4, &v17);
    sub_8CBC(a1, (void (*)(void, void, void, void, void, void, void, void, char))sub_8E28);
    uint64_t v7 = v17;
  }
  a2(v7, v13);
  return sub_8CB0(v7, v13);
}

void sub_84F0(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[3];
  uint64_t v56 = *a1;
  uint64_t v58 = a1[2];
  uint64_t v50 = a1[4];
  uint64_t v49 = a1[5];
  unint64_t v45 = a1[7];
  uint64_t v46 = a1[6];
  if (qword_BB860 != -1) {
    swift_once();
  }
  uint64_t v54 = v4;
  uint64_t v5 = (void *)sub_8D1C0();
  if (qword_BB858 != -1) {
    swift_once();
  }
  uint64_t v6 = (void *)sub_8D1C0();
  if (qword_BB870 != -1) {
    swift_once();
  }
  uint64_t v52 = (void *)sub_8D1C0();
  sub_8D10(0, (unint64_t *)&qword_BE190);
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_8E8D0();
  uint64_t v9 = v8;
  uint64_t v10 = sub_8E8D0();
  uint64_t v12 = v11;
  sub_48AC(&qword_BE170);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_8FC30;
  *(void *)(v13 + 32) = v5;
  uint64_t v61 = v13;
  sub_8EA50();
  id v59 = v5;
  id v48 = sub_4B3F4(v56, v3, v7, v9, v10, v12, v61);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = sub_8E8D0();
  uint64_t v16 = v15;
  uint64_t v17 = sub_8E8D0();
  uint64_t v19 = v18;
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_8FC30;
  *(void *)(v20 + 32) = v6;
  uint64_t v61 = v20;
  sub_8EA50();
  id v57 = v6;
  id v47 = sub_4B3F4(v58, v54, v14, v16, v17, v19, v61);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v21 = sub_8E8D0();
  uint64_t v23 = v22;
  uint64_t v24 = sub_8E8D0();
  uint64_t v26 = v25;
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_8FC30;
  *(void *)(v27 + 32) = v52;
  uint64_t v61 = v27;
  sub_8EA50();
  id v53 = v52;
  id v28 = sub_4B3F4(v50, v49, v21, v23, v24, v26, v61);
  id v29 = a2;
  uint64_t v30 = sub_75EE8();

  uint64_t v31 = sub_7646C(v30);
  unint64_t v33 = v32;
  swift_bridgeObjectRelease();
  if (!v33)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v33 = v45;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v31 = v46;
  }
  sub_8D10(0, &qword_BC150);
  id v34 = v28;
  id v35 = v47;
  id v36 = v48;
  id v37 = sub_4B4C0(v34, v35, v36);
  if (qword_BB830 != -1) {
    swift_once();
  }
  uint64_t v38 = sub_8E730();
  sub_50FC(v38, (uint64_t)qword_BFEC8);
  swift_bridgeObjectRetain_n();
  uint64_t v39 = sub_8E710();
  os_log_type_t v40 = sub_8EB00();
  if (os_log_type_enabled(v39, v40))
  {
    id v55 = v36;
    id v41 = (uint8_t *)swift_slowAlloc();
    uint64_t v61 = swift_slowAlloc();
    *(_DWORD *)id v41 = 136315138;
    swift_bridgeObjectRetain();
    sub_8758C(v31, v33, &v61);
    sub_8EBD0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_0, v39, v40, "Making a CarPlay snippet to play announcements with an announcer name: %s.", v41, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    id v36 = v55;
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v42 = swift_allocObject();
  *(_OWORD *)(v42 + 16) = xmmword_8FC30;
  sub_8D10(0, &qword_BC158);
  id v43 = v37;
  *(void *)(v42 + 32) = sub_4B6A0(v31, v33, v43);
  uint64_t v61 = v42;
  sub_8EA50();
  uint64_t v44 = v61;

  *a3 = v44;
}

void sub_8B20()
{
}

void sub_8B40()
{
}

uint64_t sub_8B70()
{
  sub_4BCC();
  swift_release();
  sub_4BCC();
  uint64_t v2 = v0 + *(void *)(qword_BFE00 + v1 + 24);

  return sub_4950(v2);
}

void *sub_8BCC()
{
  uint64_t v0 = (void *)sub_8D600();
  swift_release();
  sub_4950((uint64_t)v0 + *(void *)(qword_BFE00 + *v0 + 24));
  return v0;
}

uint64_t sub_8C68()
{
  uint64_t v0 = sub_8BCC();

  return _swift_deallocClassInstance(v0, 64, 7);
}

uint64_t type metadata accessor for CarPlayAceViewProvider()
{
  return sub_49A0();
}

uint64_t sub_8CB0(uint64_t a1, char a2)
{
  if (a2) {
    return swift_errorRelease();
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_8CBC(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, char))
{
  char v4 = *(unsigned char *)(a1 + 64);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), v4);
  return a1;
}

uint64_t sub_8D10(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_8D4C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_48AC(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_8DB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  if (a9)
  {
    return swift_errorRetain();
  }
  else
  {
    sub_8EA0(a1, a2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_8E28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  if (a9)
  {
    return swift_errorRelease();
  }
  else
  {
    sub_8EA0(a1, a2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_8EA0(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_8EB4()
{
  return sub_8D4C(v1, v2 - 160, v0);
}

uint64_t property wrapper backing initializer of CarPlayIntercomControlModel.playStopText()
{
  return sub_8CB10();
}

uint64_t CarPlayIntercomControlModel.playStopText.getter()
{
  sub_48AC(&qword_BC168);
  sub_8CB30();
  return v1;
}

uint64_t CarPlayIntercomControlModel.playStopText.setter()
{
  return sub_8CB40();
}

uint64_t (*CarPlayIntercomControlModel.playStopText.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  sub_48AC(&qword_BC168);
  v2[4] = sub_8CB20();
  return sub_8FDC;
}

uint64_t CarPlayIntercomControlModel.replyText.getter()
{
  type metadata accessor for CarPlayIntercomControlModel();
  sub_48AC(&qword_BC168);
  sub_8CB30();
  return v1;
}

uint64_t type metadata accessor for CarPlayIntercomControlModel()
{
  uint64_t result = qword_BC218;
  if (!qword_BC218) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t CarPlayIntercomControlModel.replyText.setter()
{
  return sub_8CB40();
}

uint64_t (*CarPlayIntercomControlModel.replyText.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for CarPlayIntercomControlModel();
  sub_48AC(&qword_BC168);
  v2[4] = sub_8CB20();
  return sub_8FDC;
}

uint64_t property wrapper backing initializer of CarPlayIntercomControlModel.isPlaying()
{
  return sub_8CB10();
}

uint64_t CarPlayIntercomControlModel.isPlaying.getter()
{
  type metadata accessor for CarPlayIntercomControlModel();
  sub_48AC(&qword_BC170);
  sub_8CB30();
  return v1;
}

uint64_t CarPlayIntercomControlModel.isPlaying.setter()
{
  return sub_8CB40();
}

uint64_t (*CarPlayIntercomControlModel.isPlaying.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for CarPlayIntercomControlModel();
  sub_48AC(&qword_BC170);
  v2[4] = sub_8CB20();
  return sub_8FDC;
}

void sub_9288(void *a1)
{
  unsigned __int8 v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 32))(*a1, 0);

  free(v1);
}

void *CarPlayIntercomControlModel.responseViewId.unsafeMutableAddressor()
{
  return &static CarPlayIntercomControlModel.responseViewId;
}

unint64_t static CarPlayIntercomControlModel.responseViewId.getter()
{
  return 0xD00000000000002BLL;
}

uint64_t CarPlayIntercomControlModel.init(playStopText:replyText:isPlaying:)()
{
  return sub_8CB10();
}

BOOL sub_9398(char a1, char a2)
{
  return a1 == a2;
}

void sub_93A8(uint64_t a1, unsigned __int8 a2)
{
}

uint64_t sub_93D0(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x706F745379616C70 && a2 == 0xEC00000074786554;
  if (v3 || (sub_8EE40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x786554796C706572 && a2 == 0xE900000000000074;
    if (v6 || (sub_8EE40() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x6E6979616C507369 && a2 == 0xE900000000000067)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v8 = sub_8EE40();
      swift_bridgeObjectRelease();
      if (v8) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_952C()
{
  return 3;
}

Swift::Int sub_9534(unsigned __int8 a1)
{
  return sub_8EF20();
}

uint64_t sub_957C()
{
  return 0;
}

uint64_t sub_9588(char a1)
{
  return *(void *)&aPlaystopreplyt[8 * a1];
}

BOOL sub_95A8(char *a1, char *a2)
{
  return sub_9398(*a1, *a2);
}

Swift::Int sub_95B4()
{
  return sub_9534(*v0);
}

void sub_95BC(uint64_t a1)
{
  sub_93A8(a1, *v1);
}

Swift::Int sub_95C4()
{
  Swift::UInt v1 = *v0;
  sub_8EEE0();
  sub_8EEF0(v1);
  return sub_8EF20();
}

uint64_t sub_9608()
{
  return sub_9588(*v0);
}

uint64_t sub_9610@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_93D0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_9638()
{
  return sub_957C();
}

uint64_t sub_9658@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_952C();
  *a1 = result;
  return result;
}

uint64_t sub_9680(uint64_t a1)
{
  unint64_t v2 = sub_9904();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_96BC(uint64_t a1)
{
  unint64_t v2 = sub_9904();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t CarPlayIntercomControlModel.encode(to:)(void *a1)
{
  uint64_t v3 = sub_48AC(&qword_BC178);
  sub_5190();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  sub_AAA8();
  uint64_t v9 = v8 - v7;
  sub_98C0(a1, a1[3]);
  sub_9904();
  sub_8EF50();
  sub_48AC(&qword_BC168);
  sub_9DF0(&qword_BC188);
  sub_AAFC();
  if (!v1)
  {
    type metadata accessor for CarPlayIntercomControlModel();
    sub_AAFC();
    sub_48AC(&qword_BC170);
    sub_9998(&qword_BC190);
    sub_8EE00();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v9, v3);
}

void *sub_98C0(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_9904()
{
  unint64_t result = qword_BC180;
  if (!qword_BC180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BC180);
  }
  return result;
}

uint64_t sub_9950(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_9998(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_9950(&qword_BC170);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t CarPlayIntercomControlModel.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v34 = a2;
  uint64_t v36 = sub_48AC(&qword_BC170);
  sub_5190();
  uint64_t v33 = v4;
  __chkstk_darwin(v5);
  sub_AAA8();
  uint64_t v35 = v7 - v6;
  uint64_t v8 = sub_48AC(&qword_BC168);
  sub_5190();
  uint64_t v37 = v9;
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v39 = (char *)&v30 - v14;
  uint64_t v40 = sub_48AC(&qword_BC198);
  sub_5190();
  uint64_t v38 = v15;
  __chkstk_darwin(v16);
  sub_AAA8();
  uint64_t v17 = type metadata accessor for CarPlayIntercomControlModel();
  __chkstk_darwin(v17);
  sub_AAA8();
  uint64_t v20 = v19 - v18;
  uint64_t v21 = a1[3];
  id v41 = a1;
  sub_98C0(a1, v21);
  sub_9904();
  sub_8EF40();
  if (v2) {
    return sub_4950((uint64_t)v41);
  }
  uint64_t v31 = v17;
  uint64_t v32 = v20;
  char v44 = 0;
  sub_9DF0(&qword_BC1A0);
  uint64_t v22 = v39;
  sub_AAB8();
  uint64_t v39 = *(char **)(v37 + 32);
  ((void (*)(uint64_t, char *, uint64_t))v39)(v32, v22, v8);
  char v43 = 1;
  uint64_t v23 = v13;
  sub_AAB8();
  uint64_t v24 = v32;
  ((void (*)(uint64_t, char *, uint64_t))v39)(v32 + *(int *)(v31 + 20), v23, v8);
  char v42 = 2;
  sub_9998(&qword_BC1A8);
  uint64_t v26 = v35;
  uint64_t v25 = v36;
  sub_8EDC0();
  uint64_t v27 = sub_AAE0();
  v28(v27);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 32))(v24 + *(int *)(v31 + 24), v26, v25);
  sub_9E58(v24, v34);
  sub_4950((uint64_t)v41);
  return sub_9EBC(v24);
}

uint64_t sub_9DF0(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_9950(&qword_BC168);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_9E58(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CarPlayIntercomControlModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_9EBC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CarPlayIntercomControlModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_9F18()
{
  return sub_9F80(&qword_BC1B0);
}

uint64_t sub_9F4C()
{
  return sub_9F80(&qword_BC1B8);
}

uint64_t sub_9F80(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for CarPlayIntercomControlModel();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_9FC4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return CarPlayIntercomControlModel.init(from:)(a1, a2);
}

uint64_t sub_9FDC(void *a1)
{
  return CarPlayIntercomControlModel.encode(to:)(a1);
}

uint64_t *initializeBufferWithCopyOfBuffer for CarPlayIntercomControlModel(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_48AC(&qword_BC168);
    uint64_t v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + *(int *)(a3 + 20)), (uint64_t *)((char *)a2 + *(int *)(a3 + 20)), v7);
    uint64_t v9 = *(int *)(a3 + 24);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_48AC(&qword_BC170);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
  }
  return a1;
}

uint64_t destroy for CarPlayIntercomControlModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_48AC(&qword_BC168);
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  v5(a1 + *(int *)(a2 + 20), v4);
  uint64_t v6 = a1 + *(int *)(a2 + 24);
  uint64_t v7 = sub_48AC(&qword_BC170);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);

  return v8(v6, v7);
}

uint64_t initializeWithCopy for CarPlayIntercomControlModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_48AC(&qword_BC168);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_48AC(&qword_BC170);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  return a1;
}

uint64_t assignWithCopy for CarPlayIntercomControlModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_48AC(&qword_BC168);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_48AC(&qword_BC170);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 24))(v9, v10, v11);
  return a1;
}

uint64_t initializeWithTake for CarPlayIntercomControlModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_48AC(&qword_BC168);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_48AC(&qword_BC170);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  return a1;
}

uint64_t assignWithTake for CarPlayIntercomControlModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_48AC(&qword_BC168);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_48AC(&qword_BC170);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for CarPlayIntercomControlModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_A5BC);
}

uint64_t sub_A5BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_48AC(&qword_BC168);
  sub_AA90();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
  }
  else
  {
    uint64_t v8 = sub_48AC(&qword_BC170);
    uint64_t v9 = a1 + *(int *)(a3 + 24);
  }

  return _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0(v9, a2, v8);
}

uint64_t storeEnumTagSinglePayload for CarPlayIntercomControlModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_A654);
}

uint64_t sub_A654(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_48AC(&qword_BC168);
  sub_AA90();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    uint64_t v10 = sub_48AC(&qword_BC170);
    uint64_t v11 = a1 + *(int *)(a4 + 24);
  }

  return _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(v11, a2, a2, v10);
}

void sub_A6E0()
{
  sub_A7C8(319, (unint64_t *)&qword_BC228);
  if (v0 <= 0x3F)
  {
    sub_A7C8(319, (unint64_t *)&unk_BC230);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_A7C8(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_8CB50();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

uint64_t getEnumTagSinglePayload for CarPlayIntercomControlModel.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFE)
  {
    if (a2 + 2 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 2) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 3;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v5 = v6 - 3;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for CarPlayIntercomControlModel.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xA964);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CarPlayIntercomControlModel.CodingKeys()
{
  return &type metadata for CarPlayIntercomControlModel.CodingKeys;
}

unint64_t sub_A9A0()
{
  unint64_t result = qword_BC268;
  if (!qword_BC268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BC268);
  }
  return result;
}

unint64_t sub_A9F0()
{
  unint64_t result = qword_BC270;
  if (!qword_BC270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BC270);
  }
  return result;
}

unint64_t sub_AA40()
{
  unint64_t result = qword_BC278;
  if (!qword_BC278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BC278);
  }
  return result;
}

uint64_t sub_AAB8()
{
  return sub_8EDC0();
}

uint64_t sub_AAE0()
{
  return v0;
}

uint64_t sub_AAFC()
{
  return sub_8EE00();
}

void sub_AB20()
{
  sub_8E390();
  sub_8E380();
  if (qword_BB830 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_8E730();
  sub_50FC(v0, (uint64_t)qword_BFEC8);
  oslog = sub_8E710();
  os_log_type_t v1 = sub_8EB00();
  if (os_log_type_enabled(oslog, v1))
  {
    int v2 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)int v2 = 0;
    _os_log_impl(&dword_0, oslog, v1, "#CATBundleRegisterer Registering HomeCommunicationFlowDelegatePlugin bundle with DialogEngine", v2, 2u);
    swift_slowDealloc();
  }
}

uint64_t type metadata accessor for CATBundleRegisterer()
{
  return self;
}

uint64_t sub_AC44()
{
  if (sub_8D0A0()) {
    return 7;
  }
  sub_ACE4();
  if (sub_8D0B0()) {
    return 2;
  }
  sub_ACE4();
  if (sub_8D0D0()) {
    return 3;
  }
  sub_ACE4();
  if (sub_8D100()) {
    return 4;
  }
  sub_ACE4();
  if (sub_8D0F0()) {
    return 5;
  }
  sub_ACE4();
  if (sub_8D0E0()) {
    return 6;
  }
  else {
    return 1;
  }
}

uint64_t sub_ACE4()
{
  return v0;
}

uint64_t sub_ACF0()
{
  if (qword_BB830 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_8E730();
  sub_50FC(v0, (uint64_t)qword_BFEC8);
  os_log_type_t v1 = sub_8E710();
  os_log_type_t v2 = sub_8EB00();
  if (os_log_type_enabled(v1, v2))
  {
    int v3 = (uint8_t *)sub_CCE4();
    *(_WORD *)int v3 = 0;
    _os_log_impl(&dword_0, v1, v2, "#DirectInvocationHomeCommunicationFlow on(input:) returning true", v3, 2u);
    sub_CC2C();
  }

  return 1;
}

uint64_t sub_ADBC()
{
  return sub_8CE00();
}

uint64_t sub_AE4C()
{
  sub_CC60();
  v1[78] = v0;
  v1[77] = v2;
  uint64_t v3 = sub_8D860();
  v1[79] = v3;
  sub_CB1C(v3);
  v1[80] = v4;
  v1[81] = sub_CBA4();
  uint64_t v5 = sub_8D8B0();
  v1[82] = v5;
  sub_CB1C(v5);
  v1[83] = v6;
  v1[84] = sub_CBA4();
  return _swift_task_switch(sub_AF10, 0, 0);
}

uint64_t sub_AF10()
{
  uint64_t v109 = v0;
  if (qword_BB830 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_8E730();
  os_log_type_t v2 = sub_50FC(v1, (uint64_t)qword_BFEC8);
  uint64_t v3 = sub_8E710();
  os_log_type_t v4 = sub_8EB00();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)sub_CCE4();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl(&dword_0, v3, v4, "#DirectInvocationHomeCommunicationFlow executing", v5, 2u);
    sub_CC2C();
  }
  uint64_t v6 = *(void *)(v0 + 672);
  uint64_t v7 = *(void *)(v0 + 664);
  uint64_t v8 = *(void *)(v0 + 656);
  uint64_t v9 = *(void *)(v0 + 624);

  uint64_t v10 = v9 + OBJC_IVAR____TtC35HomeCommunicationFlowDelegatePlugin37DirectInvocationHomeCommunicationFlow_sharedGlobals;
  sub_98C0((void *)(v9+ OBJC_IVAR____TtC35HomeCommunicationFlowDelegatePlugin37DirectInvocationHomeCommunicationFlow_sharedGlobals), *(void *)(v9+ OBJC_IVAR____TtC35HomeCommunicationFlowDelegatePlugin37DirectInvocationHomeCommunicationFlow_sharedGlobals+ 24));
  swift_retain();
  sub_8D840();
  sub_2FE2C(v6, v0 + 56);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  if (*(void *)(v0 + 80))
  {
    uint64_t v11 = v0 + 16;
    sub_C928((long long *)(v0 + 56), v0 + 16);
    sub_8D8C0();
    sub_48AC(&qword_BC428);
    sub_CB8C();
    uint64_t v12 = (void *)sub_7E1D8(v108);
    uint64_t v13 = *(void *)((char *)v12 + *(void *)(qword_BFDE0 + *v12 + 16));
    swift_retain();
    swift_release();
    uint64_t v14 = *(void *)(v0 + 40);
    uint64_t v15 = *(void *)(v0 + 48);
    sub_98C0((void *)(v0 + 16), v14);
    uint64_t v107 = v0 + 176;
    switch((*(unsigned __int8 (**)(uint64_t, uint64_t))(v15 + 16))(v14, v15))
    {
      case 0u:
        uint64_t v16 = sub_CB44();
        v17(v16);
        sub_CCCC();
        sub_C940(v10, v0 + 336);
        sub_C9A4(v0 + 336, *(void *)(v0 + 360));
        sub_CB04();
        sub_CBA4();
        sub_CC44();
        v18();
        swift_retain();
        sub_CCAC();
        sub_4950(v0 + 336);
        swift_task_dealloc();
        uint64_t AnnouncementFlow = type metadata accessor for SendAnnouncementFlow();
        *(void *)(v0 + 200) = AnnouncementFlow;
        uint64_t v20 = sub_CABC(&qword_BC430, (void (*)(uint64_t))type metadata accessor for SendAnnouncementFlow);
        uint64_t v21 = sub_CC8C(v20);
        os_log_type_t v22 = sub_8EB00();
        if (!sub_CBBC(v22)) {
          goto LABEL_25;
        }
        uint64_t v23 = "#DirectInvocationHomeCommunicationFlow pushing send flow";
        goto LABEL_23;
      case 1u:
        uint64_t v40 = sub_CB44();
        v41(v40);
        sub_CCCC();
        sub_C940(v10, v0 + 416);
        sub_C9A4(v0 + 416, *(void *)(v0 + 440));
        sub_CB04();
        sub_CBA4();
        sub_CC44();
        v42();
        swift_retain();
        sub_CCAC();
        sub_4950(v0 + 416);
        swift_task_dealloc();
        uint64_t AnnouncementFlow = type metadata accessor for SendAnnouncementFlow();
        *(void *)(v0 + 200) = AnnouncementFlow;
        uint64_t v43 = sub_CABC(&qword_BC430, (void (*)(uint64_t))type metadata accessor for SendAnnouncementFlow);
        uint64_t v21 = sub_CC8C(v43);
        os_log_type_t v44 = sub_8EB00();
        if (!sub_CBBC(v44)) {
          goto LABEL_25;
        }
        uint64_t v23 = "#DirectInvocationHomeCommunicationFlow pushing reply flow";
        goto LABEL_23;
      case 2u:
        uint64_t v102 = *(void *)(v0 + 648);
        sub_CB68();
        v45();
        sub_CCCC();
        sub_C940(v10, v0 + 136);
        sub_C9A4(v0 + 136, *(void *)(v0 + 160));
        sub_CB04();
        uint64_t v47 = v46;
        uint64_t v99 = sub_CBA4();
        (*(void (**)(void))(v47 + 16))();
        uint64_t v48 = type metadata accessor for SharedGlobals();
        *(void *)(v0 + 120) = v48;
        *(void *)(v0 + 128) = &off_B6D60;
        uint64_t v49 = sub_C9F4((uint64_t *)(v0 + 96));
        sub_CA58(v99, (uint64_t)v49);
        uint64_t AnnouncementFlow = type metadata accessor for ReadAnnouncementFlow();
        uint64_t v50 = (uint64_t *)sub_CB8C();
        uint64_t v51 = *(void *)(v0 + 120);
        uint64_t v52 = sub_C9A4(v0 + 96, v51);
        sub_CB04();
        uint64_t v54 = v53;
        uint64_t v55 = sub_CBA4();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v54 + 16))(v55, v52, v51);
        v50[11] = v48;
        v50[12] = (uint64_t)&off_B6D60;
        uint64_t v56 = sub_C9F4(v50 + 8);
        sub_CA58(v55, (uint64_t)v56);
        uint64_t v57 = sub_CC04(OBJC_IVAR____TtC35HomeCommunicationFlowDelegatePlugin20ReadAnnouncementFlow_input);
        uint64_t v59 = v58(v57);
        sub_CD10(v59, v60, v61, v62, v63, v64, v65, v66, v96, v0 + 96, v99, v101, (long long *)(v0 + 256), v102, v0 + 136, v0 + 16, v107, v13);
        sub_4950(v97);
        swift_task_dealloc();
        sub_4950(v104);
        swift_task_dealloc();
        *(void *)(v0 + 200) = AnnouncementFlow;
        uint64_t v67 = sub_CABC(&qword_BC440, (void (*)(uint64_t))type metadata accessor for ReadAnnouncementFlow);
        uint64_t v21 = sub_CC6C(v67);
        os_log_type_t v68 = sub_8EB00();
        if (!sub_CBBC(v68)) {
          goto LABEL_24;
        }
        uint64_t v23 = "#DirectInvocationHomeCommunicationFlow pushing reading flow";
        goto LABEL_22;
      case 3u:
        uint64_t v103 = *(void *)(v0 + 648);
        sub_CB68();
        v69();
        sub_C940(v0 + 16, v0 + 456);
        sub_C940(v10, v0 + 496);
        sub_C9A4(v0 + 496, *(void *)(v0 + 520));
        sub_CB04();
        uint64_t v71 = v70;
        uint64_t v100 = sub_CBA4();
        (*(void (**)(void))(v71 + 16))();
        uint64_t v72 = type metadata accessor for SharedGlobals();
        *(void *)(v0 + 560) = v72;
        *(void *)(v0 + 568) = &off_B6D60;
        uint64_t v73 = sub_C9F4((uint64_t *)(v0 + 536));
        sub_CA58(v100, (uint64_t)v73);
        uint64_t AnnouncementFlow = type metadata accessor for StopAnnouncementFlow();
        uint64_t v74 = (uint64_t *)sub_CB8C();
        uint64_t v75 = *(void *)(v0 + 560);
        uint64_t v76 = sub_C9A4(v0 + 536, v75);
        sub_CB04();
        uint64_t v78 = v77;
        uint64_t v79 = sub_CBA4();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v78 + 16))(v79, v76, v75);
        v74[11] = v72;
        v74[12] = (uint64_t)&off_B6D60;
        v80 = sub_C9F4(v74 + 8);
        sub_CA58(v79, (uint64_t)v80);
        uint64_t v81 = sub_CC04(OBJC_IVAR____TtC35HomeCommunicationFlowDelegatePlugin20StopAnnouncementFlow_input);
        uint64_t v83 = v82(v81);
        sub_CD10(v83, v84, v85, v86, v87, v88, v89, v90, v96, v0 + 536, v100, v101, (long long *)(v0 + 456), v103, v0 + 496, v0 + 16, v107, v13);
        sub_4950(v98);
        swift_task_dealloc();
        sub_4950(v105);
        swift_task_dealloc();
        *(void *)(v0 + 200) = AnnouncementFlow;
        uint64_t v91 = sub_CABC(&qword_BC438, (void (*)(uint64_t))type metadata accessor for StopAnnouncementFlow);
        uint64_t v21 = sub_CC6C(v91);
        os_log_type_t v92 = sub_8EB00();
        if (sub_CBBC(v92))
        {
          uint64_t v23 = "#DirectInvocationHomeCommunicationFlow pushing stop flow";
LABEL_22:
          uint64_t v11 = v106;
LABEL_23:
          v93 = (void *)v107;
          uint64_t v94 = (uint8_t *)sub_CCE4();
          *(_WORD *)uint64_t v94 = 0;
          _os_log_impl(&dword_0, v21, v2, v23, v94, 2u);
          sub_CC2C();
        }
        else
        {
LABEL_24:
          uint64_t v11 = v106;
LABEL_25:
          v93 = (void *)v107;
        }

        sub_98C0(v93, AnnouncementFlow);
        sub_8D280();
        swift_release();
        sub_4950((uint64_t)v93);
LABEL_29:
        sub_4950(v11);
        swift_task_dealloc();
        swift_task_dealloc();
        sub_CC20();
        uint64_t result = v95();
        break;
      default:
        sub_CCCC();
        id v29 = sub_8E710();
        os_log_type_t v30 = sub_8EB10();
        if (os_log_type_enabled(v29, v30))
        {
          uint64_t v31 = (uint8_t *)swift_slowAlloc();
          v108[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v31 = 136315138;
          uint64_t v32 = *(void *)(v0 + 240);
          uint64_t v33 = *(void *)(v0 + 248);
          sub_98C0((void *)(v0 + 216), v32);
          char v34 = (*(uint64_t (**)(uint64_t, uint64_t))(v33 + 16))(v32, v33);
          id v35 = sub_1CFF0(v34);
          id v36 = [v35 _className];

          uint64_t v37 = sub_8E8D0();
          unint64_t v39 = v38;

          *(void *)(v0 + 600) = sub_8758C(v37, v39, v108);
          sub_8EBD0();
          swift_bridgeObjectRelease();
          sub_4950(v0 + 216);
          _os_log_impl(&dword_0, v29, v30, "#DirectInvocationHomeCommunicationFlow failed to get flow from announcementType%s", v31, 0xCu);
          swift_arrayDestroy();
          sub_CC2C();
          uint64_t v11 = v0 + 16;
          sub_CC2C();
        }
        else
        {
          sub_4950(v0 + 216);
        }

        sub_8D2A0();
        swift_release();
        goto LABEL_29;
    }
  }
  else
  {
    sub_C7DC(v0 + 56);
    uint64_t v24 = sub_8E710();
    os_log_type_t v25 = sub_8EB10();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = (uint8_t *)sub_CCE4();
      *(_WORD *)uint64_t v26 = 0;
      _os_log_impl(&dword_0, v24, v25, "#DirectInvocationHomeCommunicationFlow failed to get nlIntent from parse. Returning nil", v26, 2u);
      sub_CC2C();
    }

    uint64_t v27 = (void *)swift_task_alloc();
    *(void *)(v0 + 680) = v27;
    *uint64_t v27 = v0;
    v27[1] = sub_BA48;
    return sub_4EDBC();
  }
  return result;
}

uint64_t sub_BA48(uint64_t a1)
{
  sub_7614();
  uint64_t v5 = v4;
  uint64_t v6 = *v2;
  sub_CB34();
  *uint64_t v7 = v6;
  swift_task_dealloc();
  if (v1)
  {
    swift_errorRelease();
    uint64_t v8 = sub_BCD8;
  }
  else
  {
    *(void *)(v5 + 688) = a1;
    uint64_t v8 = sub_BB48;
  }
  return _swift_task_switch(v8, 0, 0);
}

uint64_t sub_BB48()
{
  uint64_t v1 = (void *)v0[86];
  uint64_t v2 = v0[78];
  sub_8D640();
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  sub_8CC00();
  sub_CB8C();
  swift_retain();
  id v4 = v1;
  uint64_t v5 = sub_8CBF0();
  type metadata accessor for RadarUtils();
  uint64_t inited = swift_initStackObject();
  sub_8E330();
  sub_CB8C();
  *(void *)(inited + 16) = sub_CBD8();
  char v7 = sub_CCFC();
  sub_3A6A0(v7, v8);
  swift_release();
  v0[76] = v5;
  sub_8D280();
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  sub_CC20();
  return v9();
}

uint64_t sub_BCD8()
{
  id v1 = [objc_allocWithZone((Class)DialogExecutionResult) init];
  uint64_t v2 = *(void *)(v0 + 624);
  sub_8D640();
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  sub_8CC00();
  sub_CB8C();
  swift_retain();
  id v4 = v1;
  uint64_t v5 = sub_8CBF0();
  type metadata accessor for RadarUtils();
  uint64_t inited = swift_initStackObject();
  sub_8E330();
  sub_CB8C();
  *(void *)(inited + 16) = sub_CBD8();
  char v7 = sub_CCFC();
  sub_3A6A0(v7, v8);
  swift_release();
  *(void *)(v0 + 608) = v5;
  sub_8D280();
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  sub_CC20();
  return v9();
}

uint64_t sub_BE80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a1;
  v3[4] = a3;
  sub_8D160();
  v3[5] = swift_task_alloc();
  uint64_t v4 = sub_8D760();
  v3[6] = v4;
  v3[7] = *(void *)(v4 - 8);
  v3[8] = swift_task_alloc();
  return _swift_task_switch(sub_BF6C, 0, 0);
}

uint64_t sub_BF6C()
{
  id v1 = (void *)v0[4];
  uint64_t v2 = sub_8D3A0();
  sub_CB8C();
  v0[2] = sub_8D390();
  sub_48AC(&qword_BE170);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_8FC30;
  *(void *)(v3 + 32) = v1;
  uint64_t v9 = v3;
  sub_8EA50();
  v0[9] = v9;
  id v4 = v1;
  sub_8D150();
  sub_8D6E0();
  uint64_t v5 = (void *)swift_task_alloc();
  v0[10] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_C0C8;
  uint64_t v6 = v0[8];
  uint64_t v7 = v0[3];
  return dispatch thunk of ResponseGenerating.makeResponseOutput(dialog:outputGenerationManifest:)(v7, v9, v6, v2, &protocol witness table for ResponseFactory);
}

uint64_t sub_C0C8()
{
  sub_7614();
  uint64_t v2 = v1[8];
  uint64_t v3 = v1[7];
  uint64_t v4 = v1[6];
  uint64_t v5 = *v0;
  sub_CB34();
  void *v6 = v5;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return _swift_task_switch(sub_C210, 0, 0);
}

uint64_t sub_C210()
{
  sub_CC60();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_CC20();
  return v0();
}

uint64_t sub_C284()
{
  return sub_8D750();
}

uint64_t sub_C2B4()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC35HomeCommunicationFlowDelegatePlugin37DirectInvocationHomeCommunicationFlow_input;
  uint64_t v2 = sub_8D860();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_4950(v0 + OBJC_IVAR____TtC35HomeCommunicationFlowDelegatePlugin37DirectInvocationHomeCommunicationFlow_sharedGlobals);
  swift_release();
  return v0;
}

uint64_t sub_C338()
{
  sub_C2B4();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return _swift_deallocClassInstance(v0, v1, v2);
}

uint64_t sub_C390()
{
  return type metadata accessor for DirectInvocationHomeCommunicationFlow();
}

uint64_t type metadata accessor for DirectInvocationHomeCommunicationFlow()
{
  uint64_t result = qword_BC348;
  if (!qword_BC348) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_C3E0()
{
  uint64_t result = sub_8D860();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_C488()
{
  return 1;
}

uint64_t sub_C4A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_C554;
  return Flow.onAsync(input:)(a1, a2, a3);
}

uint64_t sub_C554()
{
  sub_CC60();
  uint64_t v2 = v1;
  sub_7614();
  uint64_t v3 = *v0;
  sub_CB34();
  *uint64_t v4 = v3;
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v3 + 8);
  return v5(v2);
}

uint64_t sub_C620()
{
  return sub_ADBC();
}

uint64_t sub_C644()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_C6E0;
  return sub_AE4C();
}

uint64_t sub_C6E0()
{
  sub_CC60();
  sub_7614();
  uint64_t v1 = *v0;
  sub_CB34();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_CC20();
  return v3();
}

uint64_t sub_C7A0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for DirectInvocationHomeCommunicationFlow();

  return Flow<>.exitValue.getter(v3, a2);
}

uint64_t sub_C7DC(uint64_t a1)
{
  uint64_t v2 = sub_48AC(&qword_BC410);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_C83C()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_C87C(uint64_t a1)
{
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  void *v6 = v2;
  v6[1] = sub_C6E0;
  return sub_BE80(a1, v5, v4);
}

uint64_t sub_C928(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_C940(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_C9A4(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t *sub_C9F4(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_CA58(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SharedGlobals();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_CABC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_CB1C(uint64_t a1)
{
  return a1 - 8;
}

uint64_t sub_CB44()
{
  return *(void *)(v0 + 648);
}

uint64_t sub_CB8C()
{
  return swift_allocObject();
}

uint64_t sub_CBA4()
{
  return swift_task_alloc();
}

BOOL sub_CBBC(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t sub_CBD8()
{
  return sub_8E320();
}

uint64_t sub_CC04@<X0>(uint64_t a1@<X8>)
{
  return v1 + a1;
}

uint64_t sub_CC20()
{
  return v0 + 8;
}

uint64_t sub_CC2C()
{
  return swift_slowDealloc();
}

uint64_t sub_CC6C(uint64_t a1)
{
  *(void *)(v1 + 208) = a1;
  *(void *)(v1 + 176) = v2;
  return sub_8E710();
}

uint64_t sub_CC8C(uint64_t a1)
{
  *(void *)(v2 + 208) = a1;
  *(void *)(v2 + 176) = v1;
  return sub_8E710();
}

void *sub_CCAC()
{
  return sub_17818(v1, v2, v0, v3);
}

uint64_t sub_CCCC()
{
  return sub_C940(v1, v0);
}

uint64_t sub_CCE4()
{
  return swift_slowAlloc();
}

uint64_t sub_CCFC()
{
  return 1;
}

uint64_t sub_CD10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, long long *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  sub_C928(a13, v18 + 16);
  *(void *)(v18 + 56) = a18;
  return swift_retain();
}

uint64_t sub_CD48(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(unsigned char *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  *(void *)(v6 + 32) = a3;
  *(void *)(v6 + 40) = a4;
  *(void *)(v6 + 48) = a5;
  *(void *)(v6 + 56) = a6;
  return v6;
}

uint64_t sub_CD60()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_CD98()
{
  sub_CD60();

  return _swift_deallocClassInstance(v0, 64, 7);
}

uint64_t type metadata accessor for DirectInvocationHomeCommunicationNLIntent()
{
  return self;
}

uint64_t sub_CDF0()
{
  return *(unsigned __int8 *)(*(void *)v0 + 16);
}

uint64_t sub_CDFC()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_CE08()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_CE14()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_CE20()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_CE54(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return sub_227E8(a1, WitnessTable);
}

unint64_t sub_CEA8(uint64_t a1)
{
  unint64_t result = sub_CED0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_CED0()
{
  unint64_t result = qword_BC510;
  if (!qword_BC510)
  {
    type metadata accessor for DirectInvocationHomeCommunicationNLIntent();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BC510);
  }
  return result;
}

id sub_CF1C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = self;
  sub_98C0(a1, a1[3]);
  uint64_t v5 = (void *)sub_8D110();
  id v6 = [v4 runSiriKitExecutorCommandWithContext:v5 payload:v2];

  return v6;
}

void sub_CFB0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  void (*v19)(long long *__return_ptr, uint64_t);
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t);
  uint64_t v29;
  void (*v30)(uint64_t);
  _OWORD *v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(long long *__return_ptr, char *);
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  long long v42[2];
  char v43[16];

  unint64_t v39 = a2;
  id v41 = a3;
  uint64_t v4 = sub_8D890();
  sub_5190();
  uint64_t v6 = v5;
  uint64_t v8 = *(void *)(v7 + 64);
  uint64_t v10 = __chkstk_darwin(v9);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v39 - v11;
  uint64_t v13 = sub_48AC(&qword_BC5B8);
  sub_5190();
  uint64_t v40 = v14;
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_BB7E0 != -1) {
    swift_once();
  }
  uint64_t v18 = sub_48AC(&qword_BC5C0);
  sub_50FC(v18, (uint64_t)qword_BFE28);
  uint64_t v19 = (void (*)(long long *__return_ptr, uint64_t))sub_8E2C0();
  v19(v42, a1);
  swift_release();
  if (LOBYTE(v42[0]) == 7)
  {
    if (qword_BB830 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_8E730();
    sub_50FC(v20, (uint64_t)qword_BFEC8);
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
    uint64_t v21 = sub_8E710();
    os_log_type_t v22 = sub_8EB10();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      *(void *)&v42[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v23 = 136315138;
      uint64_t v24 = sub_8D870();
      uint64_t v26 = sub_8758C(v24, v25, (uint64_t *)v42);
      sub_E1D0(v26);
      sub_8EBD0();
      swift_bridgeObjectRelease();
      uint64_t v27 = sub_E1E4();
      v28(v27);
      swift_arrayDestroy();
      sub_CC2C();
      sub_CC2C();
    }
    else
    {
      id v29 = sub_E1E4();
      v30(v29);
    }

    uint64_t v31 = (_OWORD *)v41;
    *(void *)(v41 + 32) = 0;
    *uint64_t v31 = 0u;
    v31[1] = 0u;
  }
  else
  {
    uint64_t v32 = v39;
    LODWORD(v39) = LOBYTE(v42[0]);
    sub_C940(v32, (uint64_t)v42);
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v12, a1, v4);
    uint64_t v33 = (*(unsigned __int8 *)(v6 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    char v34 = swift_allocObject();
    sub_C928(v42, v34 + 16);
    (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v34 + v33, v12, v4);
    id v35 = type metadata accessor for DirectInvocationHomeCommunicationNLIntent();
    sub_8E2B0();
    id v36 = (void (*)(long long *__return_ptr, char *))sub_8E2C0();
    (*(void (**)(char *, uint64_t))(v40 + 8))(v17, v13);
    v43[0] = v39;
    v36(v42, v43);
    swift_release();
    unint64_t v38 = (void *)v41;
    uint64_t v37 = *(void *)&v42[0];
    *(void *)(v41 + 24) = v35;
    v38[4] = sub_E11C();
    *unint64_t v38 = v37;
  }
}

uint64_t type metadata accessor for DirectInvocationTransformer()
{
  return self;
}

uint64_t sub_D588()
{
  uint64_t v0 = sub_48AC(&qword_BC5C0);
  sub_E16C(v0, qword_BFE28);
  sub_50FC(v0, (uint64_t)qword_BFE28);
  sub_8D890();
  sub_48AC(&qword_BC5E8);
  return sub_8E2B0();
}

void sub_D614(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4 = sub_8D890();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_8D870();
  uint64_t v10 = v8;
  if (v9 == 0xD00000000000003ALL && v8 == 0x8000000000096120
    || (sub_8EE40() & 1) != 0
    || v9 == 0xD000000000000047 && v10 == 0x8000000000096160
    || (sub_8EE40() & 1) != 0
    || v9 == 0xD000000000000036 && v10 == 0x80000000000961B0
    || (sub_8EE40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    char v11 = 2;
  }
  else if (v9 == 0xD000000000000036 && v10 == 0x80000000000961F0 || (sub_8EE40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    char v11 = 3;
  }
  else if (v9 == 0xD000000000000037 && v10 == 0x8000000000096230 || (sub_8EE40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    char v11 = 1;
  }
  else if (v9 == 0xD000000000000036 && v10 == 0x8000000000096270)
  {
    swift_bridgeObjectRelease();
    char v11 = 0;
  }
  else
  {
    char v12 = sub_8EE40();
    swift_bridgeObjectRelease();
    char v11 = 0;
    if ((v12 & 1) == 0)
    {
      if (qword_BB830 != -1) {
        swift_once();
      }
      uint64_t v13 = sub_8E730();
      sub_50FC(v13, (uint64_t)qword_BFEC8);
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
      uint64_t v14 = sub_8E710();
      os_log_type_t v15 = sub_8EB00();
      int v16 = v15;
      if (os_log_type_enabled(v14, v15))
      {
        uint64_t v17 = (uint8_t *)swift_slowAlloc();
        uint64_t v22 = swift_slowAlloc();
        uint64_t v24 = v22;
        *(_DWORD *)uint64_t v17 = 136315138;
        uint64_t v20 = v17 + 4;
        int v21 = v16;
        uint64_t v18 = sub_8D870();
        uint64_t v23 = sub_8758C(v18, v19, &v24);
        sub_8EBD0();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      }

      char v11 = 7;
    }
  }
  *a2 = v11;
}

uint64_t sub_DA84@<X0>(unsigned __int8 *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_48AC(&qword_BC5D0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v9 = *a1;
  if (!v9)
  {
    uint64_t v20 = sub_8D880();
    if (v20)
    {
      sub_5C020(0x73656D6F68, 0xE500000000000000, v20, &v32);
      swift_bridgeObjectRelease();
      if (*((void *)&v33 + 1))
      {
        sub_48AC(&qword_BC5E0);
        if (swift_dynamicCast())
        {
          unint64_t v19 = (void *)v34;
          goto LABEL_22;
        }
LABEL_21:
        unint64_t v19 = &_swiftEmptyArrayStorage;
LABEL_22:
        uint64_t v28 = sub_8D880();
        if (v28)
        {
          sub_5C020(0x736D6F6F72, 0xE500000000000000, v28, &v32);
          swift_bridgeObjectRelease();
          if (*((void *)&v33 + 1))
          {
            sub_48AC(&qword_BC5E0);
            if (swift_dynamicCast())
            {
              uint64_t v18 = (void *)v34;
              goto LABEL_29;
            }
LABEL_28:
            uint64_t v18 = &_swiftEmptyArrayStorage;
LABEL_29:
            uint64_t v29 = sub_8D880();
            if (v29)
            {
              sub_5C020(0x73656E6F7ALL, 0xE500000000000000, v29, &v32);
              swift_bridgeObjectRelease();
              if (*((void *)&v33 + 1))
              {
                sub_48AC(&qword_BC5E0);
                if (swift_dynamicCast())
                {
                  uint64_t v17 = (void *)v34;
LABEL_36:
                  unint64_t v15 = 0;
                  uint64_t v16 = 0;
                  goto LABEL_37;
                }
LABEL_35:
                uint64_t v17 = &_swiftEmptyArrayStorage;
                goto LABEL_36;
              }
            }
            else
            {
              long long v32 = 0u;
              long long v33 = 0u;
            }
            sub_6C1C((uint64_t)&v32, &qword_BC5D8);
            goto LABEL_35;
          }
        }
        else
        {
          long long v32 = 0u;
          long long v33 = 0u;
        }
        sub_6C1C((uint64_t)&v32, &qword_BC5D8);
        goto LABEL_28;
      }
    }
    else
    {
      long long v32 = 0u;
      long long v33 = 0u;
    }
    sub_6C1C((uint64_t)&v32, &qword_BC5D8);
    goto LABEL_21;
  }
  if (v9 == 1)
  {
    sub_310F0();
    uint64_t v10 = sub_8E7F0();
    if (_s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0((uint64_t)v8, 1, v10) != 1)
    {
      uint64_t v16 = sub_8E7E0();
      unint64_t v15 = v21;
      (*(void (**)(char *, uint64_t))(*(void *)(v10 - 8) + 8))(v8, v10);
      uint64_t v22 = qword_BB830;
      swift_bridgeObjectRetain();
      if (v22 != -1) {
        swift_once();
      }
      uint64_t v23 = sub_8E730();
      sub_50FC(v23, (uint64_t)qword_BFEC8);
      swift_bridgeObjectRetain();
      uint64_t v24 = sub_8E710();
      os_log_type_t v25 = sub_8EB00();
      if (os_log_type_enabled(v24, v25))
      {
        v31[1] = v3;
        uint64_t v26 = (uint8_t *)swift_slowAlloc();
        uint64_t v27 = swift_slowAlloc();
        v31[0] = a2;
        *(void *)&long long v32 = v27;
        *(_DWORD *)uint64_t v26 = 136315138;
        swift_bridgeObjectRetain();
        uint64_t v34 = sub_8758C(v16, v15, (uint64_t *)&v32);
        sub_8EBD0();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_0, v24, v25, "DirectInvocationTransformer replying to intercom with id=%s", v26, 0xCu);
        swift_arrayDestroy();
        a2 = (uint64_t *)v31[0];
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      goto LABEL_10;
    }
    sub_6C1C((uint64_t)v8, &qword_BC5D0);
    if (qword_BB830 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_8E730();
    sub_50FC(v11, (uint64_t)qword_BFEC8);
    char v12 = sub_8E710();
    os_log_type_t v13 = sub_8EB10();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v14 = 0;
      _os_log_impl(&dword_0, v12, v13, "#DirectInvocationTransformer replying to intercom through direct invocation but found no announcement ID", v14, 2u);
      swift_slowDealloc();
    }
  }
  unint64_t v15 = 0;
  uint64_t v16 = 0;
LABEL_10:
  uint64_t v17 = &_swiftEmptyArrayStorage;
  uint64_t v18 = &_swiftEmptyArrayStorage;
  unint64_t v19 = &_swiftEmptyArrayStorage;
LABEL_37:
  type metadata accessor for DirectInvocationHomeCommunicationNLIntent();
  swift_allocObject();
  uint64_t result = sub_CD48(v9, v16, v15, (uint64_t)v19, (uint64_t)v18, (uint64_t)v17);
  *a2 = result;
  return result;
}

uint64_t sub_DFF8()
{
  uint64_t v1 = sub_8D890();
  sub_5190();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = (v6 + 56) & ~v6;
  uint64_t v8 = v7 + *(void *)(v5 + 64);
  uint64_t v9 = v6 | 7;
  sub_4950(v0 + 16);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0 + v7, v1);

  return _swift_deallocObject(v0, v8, v9);
}

uint64_t sub_E09C@<X0>(unsigned __int8 *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_DA84(a1, a2);
}

unint64_t sub_E11C()
{
  unint64_t result = qword_BC5C8;
  if (!qword_BC5C8)
  {
    type metadata accessor for DirectInvocationHomeCommunicationNLIntent();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BC5C8);
  }
  return result;
}

uint64_t *sub_E16C(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_E1D0(uint64_t a1)
{
  *(void *)(v1 - 96) = a1;
  return v1 - 96;
}

uint64_t sub_E1E4()
{
  return v0;
}

uint64_t type metadata accessor for DisplayTextTemplatingService()
{
  uint64_t result = qword_BC5F8;
  if (!qword_BC5F8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_E240()
{
  return swift_initClassMetadata2();
}

uint64_t sub_E290(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v26 = a1;
  uint64_t v8 = sub_48AC(&qword_BC648);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_8CAE0();
  sub_5190();
  uint64_t v13 = v12;
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v4 + qword_BC5F0) = a4;
  sub_98C0(a3, a3[3]);
  swift_retain();
  sub_8D080();
  uint64_t v17 = sub_8CAD0();
  uint64_t v19 = v18;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v11);
  v28[0] = v17;
  v28[1] = v19;
  v27[0] = 45;
  v27[1] = 0xE100000000000000;
  v28[5] = 95;
  v28[6] = 0xE100000000000000;
  sub_F5CC();
  sub_8EBF0();
  swift_bridgeObjectRelease();
  type metadata accessor for INIntentSlotValueType(0);
  sub_F618();
  sub_8E880();
  sub_C940(a2, (uint64_t)v28);
  sub_C940((uint64_t)a3, (uint64_t)v27);
  uint64_t v20 = sub_8D790();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = v26;
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v10, v26, v20);
  _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0((uint64_t)v10, 0, 1, v20);
  uint64_t v23 = sub_8D500();
  swift_release();
  sub_4950(a2);
  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v22, v20);
  sub_4950((uint64_t)a3);
  return v23;
}

uint64_t sub_E56C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_allocObject();
  v5[2] = v2;
  v5[3] = a1;
  v5[4] = a2;
  swift_retain();
  swift_retain();
  sub_1344C();

  return swift_release();
}

uint64_t sub_E610(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_48AC(&qword_BC660);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8 - 8);
  sub_F678(a1, (uint64_t)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v11 = (*(unsigned __int8 *)(v9 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = a2;
  v12[3] = a3;
  v12[4] = a4;
  sub_F6E4((uint64_t)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t)v12 + v11);
  swift_retain();
  swift_retain();
  sub_133D4();
  return swift_release();
}

uint64_t sub_E750(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_48AC(&qword_BC660);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  uint64_t v13 = __chkstk_darwin(v10 - 8);
  uint64_t v14 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v22 - v15;
  sub_F678(a1, (uint64_t)&v22 - v15);
  sub_F678(a5, (uint64_t)v14);
  uint64_t v17 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v18 = (v17 + 40) & ~v17;
  uint64_t v19 = (v12 + v17 + v18) & ~v17;
  uint64_t v20 = (void *)swift_allocObject();
  v20[2] = a2;
  v20[3] = a3;
  v20[4] = a4;
  sub_F6E4((uint64_t)v16, (uint64_t)v20 + v18);
  sub_F6E4((uint64_t)v14, (uint64_t)v20 + v19);
  swift_retain();
  swift_retain();
  sub_13424();
  return swift_release();
}

uint64_t sub_E8E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v27[1] = a2;
  uint64_t v11 = sub_48AC(&qword_BC660);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  uint64_t v14 = __chkstk_darwin(v11 - 8);
  uint64_t v15 = (char *)v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)v27 - v17;
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)v27 - v19;
  sub_F678(a1, (uint64_t)v27 - v19);
  sub_F678(a5, (uint64_t)v18);
  sub_F678(a6, (uint64_t)v15);
  uint64_t v21 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v22 = (v21 + 32) & ~v21;
  uint64_t v23 = (v13 + v21 + v22) & ~v21;
  uint64_t v24 = (v13 + v21 + v23) & ~v21;
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = a3;
  *(void *)(v25 + 24) = a4;
  sub_F6E4((uint64_t)v20, v25 + v22);
  sub_F6E4((uint64_t)v18, v25 + v23);
  sub_F6E4((uint64_t)v15, v25 + v24);
  swift_retain();
  sub_133AC();
  return swift_release();
}

uint64_t sub_EAB0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_allocObject();
  v5[2] = v2;
  v5[3] = a1;
  v5[4] = a2;
  swift_retain();
  swift_retain();
  sub_133FC();

  return swift_release();
}

uint64_t sub_EB54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_48AC(&qword_BC660);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8 - 8);
  sub_F678(a1, (uint64_t)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v11 = (*(unsigned __int8 *)(v9 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = a2;
  v12[3] = a3;
  v12[4] = a4;
  sub_F6E4((uint64_t)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t)v12 + v11);
  swift_retain();
  swift_retain();
  sub_133D4();
  return swift_release();
}

uint64_t sub_EC94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_48AC(&qword_BC660);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  uint64_t v13 = __chkstk_darwin(v10 - 8);
  uint64_t v14 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v22 - v15;
  sub_F678(a1, (uint64_t)&v22 - v15);
  sub_F678(a5, (uint64_t)v14);
  uint64_t v17 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v18 = (v17 + 40) & ~v17;
  uint64_t v19 = (v12 + v17 + v18) & ~v17;
  uint64_t v20 = (void *)swift_allocObject();
  v20[2] = a2;
  v20[3] = a3;
  v20[4] = a4;
  sub_F6E4((uint64_t)v16, (uint64_t)v20 + v18);
  sub_F6E4((uint64_t)v14, (uint64_t)v20 + v19);
  swift_retain();
  swift_retain();
  sub_13424();
  return swift_release();
}

uint64_t sub_EE24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v27[1] = a2;
  uint64_t v11 = sub_48AC(&qword_BC660);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  uint64_t v14 = __chkstk_darwin(v11 - 8);
  uint64_t v15 = (char *)v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)v27 - v17;
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)v27 - v19;
  sub_F678(a1, (uint64_t)v27 - v19);
  sub_F678(a5, (uint64_t)v18);
  sub_F678(a6, (uint64_t)v15);
  uint64_t v21 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v22 = (v21 + 32) & ~v21;
  uint64_t v23 = (v13 + v21 + v22) & ~v21;
  uint64_t v24 = (v13 + v21 + v23) & ~v21;
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = a3;
  *(void *)(v25 + 24) = a4;
  sub_F6E4((uint64_t)v20, v25 + v22);
  sub_F6E4((uint64_t)v18, v25 + v23);
  sub_F6E4((uint64_t)v15, v25 + v24);
  swift_retain();
  sub_133AC();
  return swift_release();
}

uint64_t sub_EFF4(uint64_t a1, void (*a2)(uint64_t *), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v49 = a6;
  uint64_t v52 = a5;
  uint64_t v54 = a3;
  uint64_t v55 = a2;
  uint64_t v8 = sub_8D3E0();
  sub_5190();
  uint64_t v10 = v9;
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v50 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v51 = (char *)&v47 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v53 = (void (*)(void))((char *)&v47 - v17);
  __chkstk_darwin(v16);
  uint64_t v19 = (void (*)(void))((char *)&v47 - v18);
  uint64_t v20 = sub_48AC(&qword_BC660);
  uint64_t v21 = __chkstk_darwin(v20);
  uint64_t v23 = (uint64_t *)((char *)&v47 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v24 = __chkstk_darwin(v21);
  uint64_t v26 = (uint64_t *)((char *)&v47 - v25);
  uint64_t v27 = __chkstk_darwin(v24);
  uint64_t v29 = (uint64_t *)((char *)&v47 - v28);
  __chkstk_darwin(v27);
  uint64_t v31 = (uint64_t *)((char *)&v47 - v30);
  sub_F678(a1, (uint64_t)&v47 - v30);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v32 = 0;
    sub_FDE4();
    uint64_t v34 = *v31;
    LOBYTE(v26) = 1;
  }
  else
  {
    id v35 = v19;
    a1 = v10 + 32;
    uint64_t v19 = *(void (**)(void))(v10 + 32);
    uint64_t v48 = v35;
    v19();
    sub_F678(a4, (uint64_t)v29);
    uint64_t v36 = v8;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v52 = 0;
      uint64_t v49 = 0;
      sub_FDE4();
      uint64_t v34 = *v29;
      sub_FE0C();
    }
    else
    {
      sub_FDFC();
      v19();
      sub_F678(v52, (uint64_t)v26);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v52 = 0;
        uint64_t v49 = 0;
        sub_FDE4();
        uint64_t v34 = *v26;
        sub_FE0C();
      }
      else
      {
        unint64_t v39 = v51;
        sub_FDFC();
        v19();
        sub_F678(v49, (uint64_t)v23);
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        LOBYTE(v26) = EnumCaseMultiPayload == 1;
        if (EnumCaseMultiPayload == 1)
        {
          uint64_t v52 = 0;
          uint64_t v49 = 0;
          sub_FDE4();
          uint64_t v34 = *v23;
          char v42 = *(void (**)(char *, uint64_t))(v10 + 8);
          id v41 = v39;
          uint64_t v29 = (uint64_t *)v8;
        }
        else
        {
          sub_FDFC();
          v19();
          sub_F3F8(&v56);
          uint64_t v34 = v56;
          uint64_t v52 = v57;
          a1 = v59;
          uint64_t v49 = v58;
          a4 = v60;
          uint64_t v19 = v61;
          uint64_t v47 = *(void (**)(char *, uint64_t))(v10 + 8);
          uint64_t v29 = (uint64_t *)v8;
          uint64_t v8 = v62;
          uint64_t v20 = v63;
          v47(v50, v36);
          id v41 = v51;
          char v42 = v47;
        }
        uint64_t v43 = v42;
        v42(v41, (uint64_t)v29);
        unint64_t v38 = (void (*)(void (*)(void), uint64_t *))v43;
      }
      os_log_type_t v44 = v38;
      v38(v53, v29);
      uint64_t v37 = v44;
    }
    v37(v48, v29);
    uint64_t v32 = v52;
    uint64_t v33 = v49;
  }
  uint64_t v56 = v34;
  uint64_t v57 = v32;
  uint64_t v58 = v33;
  uint64_t v59 = a1;
  uint64_t v60 = a4;
  uint64_t v61 = v19;
  uint64_t v62 = v8;
  uint64_t v63 = v20;
  char v64 = (char)v26;
  uint64_t v45 = v33;
  v55(&v56);
  return sub_FD30(v34, v32, v45, a1, a4, (uint64_t)v19, v8, v20, (char)v26);
}

void *sub_F3F8@<X0>(void *a1@<X8>)
{
  uint64_t result = (void *)sub_8D3C0();
  if (!result[2])
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v4 = result[4];
  uint64_t v3 = result[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t result = (void *)sub_8D3C0();
  if (!result[2])
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v6 = result[4];
  uint64_t v5 = result[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t result = (void *)sub_8D3C0();
  if (!result[2])
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v8 = result[4];
  uint64_t v7 = result[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t result = (void *)sub_8D3C0();
  if (result[2])
  {
    uint64_t v10 = result[4];
    uint64_t v9 = result[5];
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRelease();
    *a1 = v4;
    a1[1] = v3;
    a1[2] = v6;
    a1[3] = v5;
    a1[4] = v8;
    a1[5] = v7;
    a1[6] = v10;
    a1[7] = v9;
    return result;
  }
LABEL_9:
  __break(1u);
  return result;
}

void sub_F504()
{
}

void sub_F534()
{
}

uint64_t sub_F564()
{
  return swift_release();
}

uint64_t sub_F574()
{
  uint64_t v0 = sub_8D520();
  swift_release();

  return _swift_deallocClassInstance(v0, 24, 7);
}

uint64_t sub_F5C4()
{
  return type metadata accessor for DisplayTextTemplatingService();
}

unint64_t sub_F5CC()
{
  unint64_t result = qword_BC650;
  if (!qword_BC650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BC650);
  }
  return result;
}

unint64_t sub_F618()
{
  unint64_t result = qword_BC658;
  if (!qword_BC658)
  {
    type metadata accessor for INIntentSlotValueType(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BC658);
  }
  return result;
}

uint64_t sub_F66C(uint64_t a1)
{
  return sub_EB54(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_F678(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_48AC(&qword_BC660);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_F6E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_48AC(&qword_BC660);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_F74C(uint64_t a1)
{
  return sub_F8D4(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char *))sub_EC94);
}

uint64_t sub_F768(uint64_t a1)
{
  return sub_FAA4(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char *, char *))sub_EE24);
}

uint64_t sub_F78C()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_F7CC(uint64_t a1)
{
  return sub_E610(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_F7DC()
{
  sub_48AC(&qword_BC660);
  sub_FDB4();
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 40) & ~v2;
  uint64_t v5 = *(void *)(v4 + 64);
  swift_release();
  swift_release();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_errorRelease();
  }
  else
  {
    sub_8D3E0();
    sub_FDD0();
    (*(void (**)(uint64_t))(v6 + 8))(v0 + v3);
  }

  return _swift_deallocObject(v0, v3 + v5, v2 | 7);
}

uint64_t sub_F8BC(uint64_t a1)
{
  return sub_F8D4(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char *))sub_E750);
}

uint64_t sub_F8D4(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, char *))
{
  uint64_t v4 = *(void *)(sub_48AC(&qword_BC660) - 8);
  uint64_t v5 = v2[2];
  uint64_t v6 = v2[3];
  uint64_t v7 = v2[4];
  uint64_t v8 = (char *)v2 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return a2(a1, v5, v6, v7, v8);
}

uint64_t sub_F968()
{
  sub_48AC(&qword_BC660);
  sub_FDB4();
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v4 = *(void *)(v3 + 64);
  swift_release();
  swift_release();
  if (sub_FE30() == 1)
  {
    swift_errorRelease();
  }
  else
  {
    sub_8D3E0();
    sub_FDD0();
    uint64_t v5 = sub_FE24();
    v6(v5);
  }
  if (sub_FE30() == 1)
  {
    swift_errorRelease();
  }
  else
  {
    sub_8D3E0();
    sub_FDD0();
    uint64_t v7 = sub_FE24();
    v8(v7);
  }

  return _swift_deallocObject(v0, ((v4 + v2 + ((v2 + 40) & ~v2)) & ~v2) + v4, v2 | 7);
}

uint64_t sub_FA8C(uint64_t a1)
{
  return sub_FAA4(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char *, char *))sub_E8E0);
}

uint64_t sub_FAA4(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, char *, char *))
{
  uint64_t v4 = sub_48AC(&qword_BC660);
  sub_CB1C(v4);
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v10 = (v9 + 40) & ~v9;
  uint64_t v11 = *((void *)v2 + 2);
  uint64_t v12 = *((void *)v2 + 3);
  uint64_t v13 = *((void *)v2 + 4);
  uint64_t v14 = &v2[(*(void *)(v8 + 64) + v9 + v10) & ~v9];

  return a2(a1, v11, v12, v13, &v2[v10], v14);
}

uint64_t sub_FB40()
{
  sub_48AC(&qword_BC660);
  sub_FDB4();
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v4 = *(void *)(v3 + 64);
  swift_release();
  if (sub_FE30() == 1)
  {
    swift_errorRelease();
  }
  else
  {
    sub_8D3E0();
    sub_FDD0();
    uint64_t v5 = sub_FE24();
    v6(v5);
  }
  if (sub_FE30() == 1)
  {
    swift_errorRelease();
  }
  else
  {
    sub_8D3E0();
    sub_FDD0();
    uint64_t v7 = sub_FE24();
    v8(v7);
  }
  if (sub_FE30() == 1)
  {
    swift_errorRelease();
  }
  else
  {
    sub_8D3E0();
    sub_FDD0();
    uint64_t v9 = sub_FE24();
    v10(v9);
  }

  return _swift_deallocObject(v0, ((v4 + v2 + ((v4 + v2 + ((v2 + 32) & ~v2)) & ~v2)) & ~v2) + v4, v2 | 7);
}

uint64_t sub_FCB0(uint64_t a1)
{
  uint64_t v3 = sub_48AC(&qword_BC660);
  sub_CB1C(v3);
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v8 = *(unsigned __int8 *)(v5 + 80);
  return sub_EFF4(a1, *(void (**)(uint64_t *))(v1 + 16), *(void *)(v1 + 24), v1 + ((v8 + 32) & ~v8), v1 + ((*(void *)(v7 + 64) + v8 + ((v8 + 32) & ~v8)) & ~v8), v1 + ((*(void *)(v7 + 64) + v8 + ((*(void *)(v7 + 64) + v8 + ((v8 + 32) & ~v8)) & ~v8)) & ~v8));
}

uint64_t sub_FD30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  if (a9)
  {
    return swift_errorRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_FE24()
{
  return v0;
}

uint64_t sub_FE30()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_FE48(void (*a1)(uint64_t *__return_ptr, char *))
{
  uint64_t v3 = sub_8D3E0();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_48AC(&qword_BC660);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_F678(v1, (uint64_t)v9);
  if (swift_getEnumCaseMultiPayload() == 1) {
    return *(void *)v9;
  }
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v9, v3);
  a1(&v13, v6);
  uint64_t v10 = v13;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return v10;
}

uint64_t sub_FFDC@<X0>(uint64_t a1@<X0>, void *a2@<X3>, void *a3@<X4>, void *a4@<X8>)
{
  if (qword_BB830 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_8E730();
  sub_50FC(v8, (uint64_t)qword_BFEC8);
  uint64_t v9 = sub_8E710();
  os_log_type_t v10 = sub_8EB00();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v11 = 0;
    _os_log_impl(&dword_0, v9, v10, "[SendAnnouncementViewBuilders] Providing ErrorButtonBuilder", v11, 2u);
    sub_1108C();
  }

  sub_98C0(a3, a3[3]);
  if ((sub_8D0D0() & 1) == 0)
  {
    if (qword_BB7F0 != -1) {
      swift_once();
    }
    swift_bridgeObjectRetain();
  }
  sub_8E4C0();
  uint64_t v12 = sub_8E4A0();
  [a2 code];
  uint64_t v13 = sub_8E710();
  os_log_type_t v14 = sub_8EB00();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v15 = 0;
    _os_log_impl(&dword_0, v13, v14, "[SendAnnouncementViewBuilders] Defaulting to Home app button", v15, 2u);
    sub_1108C();
  }

  sub_8D10(0, &qword_BC688);
  uint64_t v16 = sub_8EB80();
  sub_C940((uint64_t)a3, (uint64_t)v20);
  a4[3] = &type metadata for ButtonBuilder;
  a4[4] = &off_B5458;
  uint64_t v17 = (void *)swift_allocObject();
  *a4 = v17;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a1;
  *(void *)(v18 + 24) = v12;
  v17[2] = sub_10B8C;
  v17[3] = v18;
  v17[4] = v16;
  sub_C928(v20, (uint64_t)(v17 + 5));
  return swift_retain();
}

uint64_t sub_102AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1058C(a1, a2, a3, "ButtonBuilder: Building button views for Watch", (uint64_t)&unk_B5300, (uint64_t)sub_10A28);
}

void sub_102D4(unint64_t a1@<X1>, void *a2@<X2>, unint64_t *a3@<X8>)
{
  uint64_t v6 = *(void *)(sub_8D3D0() + 16);
  swift_bridgeObjectRelease();
  unint64_t v7 = a1 >> 62;
  if (v6)
  {
    if (v7)
    {
      sub_8D10(0, &qword_BC668);
      swift_bridgeObjectRetain();
      uint64_t v14 = sub_8ED30();
      swift_bridgeObjectRelease();
      a1 = v14;
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_8EE50();
      sub_8D10(0, &qword_BC668);
    }
    sub_8D10(0, (unint64_t *)&unk_BC670);
    uint64_t v8 = (void *)sub_8D3C0();
    if (v8[2])
    {
      uint64_t v9 = v8[4];
      uint64_t v10 = v8[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      sub_48AC(&qword_BE170);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_8FC30;
      *(void *)(v11 + 32) = a2[2];
      uint64_t v16 = v11;
      sub_8EA50();
      swift_unknownObjectRetain();
      id v12 = sub_4B05C(v9, v10, v16, 1);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v15 = a1;
      swift_bridgeObjectRetain();
      a2 = v12;
      sub_8EA10();
      if (*(void *)((char *)&dword_10 + (v15 & 0xFFFFFFFFFFFFFF8)) < *(void *)((char *)&dword_18
                                                                                    + (v15 & 0xFFFFFFFFFFFFFF8)) >> 1)
      {
LABEL_6:
        sub_8EA80();
        sub_8EA50();
        uint64_t v13 = v15;
        swift_bridgeObjectRelease();

        goto LABEL_7;
      }
    }
    else
    {
      __break(1u);
    }
    sub_8EA60();
    goto LABEL_6;
  }
  if (!v7)
  {
    swift_bridgeObjectRetain();
    sub_8EE50();
    sub_8D10(0, &qword_BC668);
    goto LABEL_10;
  }
  sub_8D10(0, &qword_BC668);
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_8ED30();
  swift_bridgeObjectRelease();
LABEL_7:
  a1 = v13;
LABEL_10:
  *a3 = a1;
}

uint64_t sub_10564(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1058C(a1, a2, a3, "ButtonBuilder: Building button views for Phone", (uint64_t)&unk_B5328, (uint64_t)sub_10AC4);
}

uint64_t sub_1058C(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9 = v6;
  if (qword_BB830 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_8E730();
  sub_50FC(v13, (uint64_t)qword_BFEC8);
  uint64_t v14 = sub_8E710();
  os_log_type_t v15 = sub_8EAF0();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v16 = 0;
    _os_log_impl(&dword_0, v14, v15, a4, v16, 2u);
    sub_1108C();
  }

  uint64_t v17 = *v9;
  sub_109EC((uint64_t)v9, (uint64_t)v22);
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a2;
  *(void *)(v18 + 24) = a3;
  *(void *)(v18 + 32) = a1;
  long long v19 = v22[1];
  *(_OWORD *)(v18 + 40) = v22[0];
  *(_OWORD *)(v18 + 56) = v19;
  long long v20 = v22[3];
  *(_OWORD *)(v18 + 72) = v22[2];
  *(_OWORD *)(v18 + 88) = v20;
  swift_retain();
  swift_bridgeObjectRetain();
  v17(a6, v18);
  return swift_release();
}

uint64_t sub_106FC(uint64_t a1, void (*a2)(uint64_t, void), uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t *__return_ptr, char *))
{
  uint64_t v7 = sub_FE48(a6);
  char v9 = v8 & 1;
  a2(v7, v8 & 1);
  return sub_8CB0(v7, v9);
}

void sub_10770(unint64_t a1@<X1>, void *a2@<X2>, unint64_t *a3@<X8>)
{
  uint64_t v6 = *(void *)(sub_8D3D0() + 16);
  swift_bridgeObjectRelease();
  unint64_t v7 = a1 >> 62;
  if (v6)
  {
    if (v7)
    {
      sub_8D10(0, &qword_BC668);
      swift_bridgeObjectRetain();
      uint64_t v14 = sub_8ED30();
      swift_bridgeObjectRelease();
      a1 = v14;
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_8EE50();
      sub_8D10(0, &qword_BC668);
    }
    sub_8D10(0, &qword_BC680);
    char v8 = (void *)sub_8D3C0();
    if (v8[2])
    {
      uint64_t v9 = v8[4];
      uint64_t v10 = v8[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      sub_48AC(&qword_BE170);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_8FC30;
      *(void *)(v11 + 32) = a2[2];
      uint64_t v16 = v11;
      sub_8EA50();
      swift_unknownObjectRetain();
      id v12 = sub_4B18C(v9, v10, v16);
      uint64_t v15 = a1;
      swift_bridgeObjectRetain();
      a2 = v12;
      sub_8EA10();
      if (*(void *)((char *)&dword_10 + (v15 & 0xFFFFFFFFFFFFFF8)) < *(void *)((char *)&dword_18
                                                                                    + (v15 & 0xFFFFFFFFFFFFFF8)) >> 1)
      {
LABEL_6:
        sub_8EA80();
        sub_8EA50();
        uint64_t v13 = v15;
        swift_bridgeObjectRelease();

        goto LABEL_7;
      }
    }
    else
    {
      __break(1u);
    }
    sub_8EA60();
    goto LABEL_6;
  }
  if (!v7)
  {
    swift_bridgeObjectRetain();
    sub_8EE50();
    sub_8D10(0, &qword_BC668);
    goto LABEL_10;
  }
  sub_8D10(0, &qword_BC668);
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_8ED30();
  swift_bridgeObjectRelease();
LABEL_7:
  a1 = v13;
LABEL_10:
  *a3 = a1;
}

uint64_t sub_109EC(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_10A28(uint64_t a1)
{
  return sub_106FC(a1, *(void (**)(uint64_t, void))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), v1 + 40, (void (*)(uint64_t *__return_ptr, char *))sub_10A60);
}

void sub_10A60(unint64_t *a1@<X8>)
{
  sub_102D4(*(void *)(v1 + 16), *(void **)(v1 + 24), a1);
}

uint64_t sub_10A6C()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  sub_4950(v0 + 64);

  return _swift_deallocObject(v0, 104, 7);
}

uint64_t sub_10AC4(uint64_t a1)
{
  return sub_106FC(a1, *(void (**)(uint64_t, void))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), v1 + 40, (void (*)(uint64_t *__return_ptr, char *))sub_10AFC);
}

void sub_10AFC(unint64_t *a1@<X8>)
{
  sub_10770(*(void *)(v1 + 16), *(void **)(v1 + 24), a1);
}

uint64_t sub_10B04()
{
  swift_release();
  swift_unknownObjectRelease();
  sub_4950(v0 + 40);

  return _swift_deallocObject(v0, 80, 7);
}

uint64_t sub_10B4C()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_10B8C(uint64_t a1, uint64_t a2)
{
  sub_6E5F0(*(void *)(v2 + 24), a1, a2);
}

uint64_t initializeBufferWithCopyOfBuffer for ButtonBuilder(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for ButtonBuilder(uint64_t a1)
{
  swift_release();
  swift_unknownObjectRelease();

  return sub_4950(a1 + 24);
}

uint64_t initializeWithCopy for ButtonBuilder(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v4 = a2 + 24;
  long long v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 48) = v5;
  uint64_t v6 = v5;
  unint64_t v7 = **(void (***)(uint64_t, uint64_t, uint64_t))(v5 - 8);
  swift_retain();
  swift_unknownObjectRetain();
  v7(a1 + 24, v4, v6);
  return a1;
}

void *assignWithCopy for ButtonBuilder(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  sub_10D40(a1 + 3, a2 + 3);
  return a1;
}

uint64_t *sub_10D40(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    uint64_t v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        unint64_t result = (uint64_t *)swift_release();
        *uint64_t v3 = v12;
      }
      else
      {
        uint64_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *unint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

__n128 initializeWithTake for ButtonBuilder(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for ButtonBuilder(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_unknownObjectRelease();
  sub_4950(a1 + 24);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for ButtonBuilder(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 64))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ButtonBuilder(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ButtonBuilder()
{
  return &type metadata for ButtonBuilder;
}

uint64_t sub_1108C()
{
  return swift_slowDealloc();
}

uint64_t HomeAppLaunchModel.buttonLabel.getter()
{
  type metadata accessor for HomeAppLaunchModel();
  sub_48AC(&qword_BC168);
  sub_8CB30();
  return v1;
}

uint64_t type metadata accessor for HomeAppLaunchModel()
{
  uint64_t result = qword_BC710;
  if (!qword_BC710) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t HomeAppLaunchModel.buttonLabel.setter()
{
  return sub_8CB40();
}

uint64_t (*HomeAppLaunchModel.buttonLabel.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for HomeAppLaunchModel();
  sub_48AC(&qword_BC168);
  v2[4] = sub_8CB20();
  return sub_8FDC;
}

void *HomeAppLaunchModel.responseViewId.unsafeMutableAddressor()
{
  return &static HomeAppLaunchModel.responseViewId;
}

unint64_t static HomeAppLaunchModel.responseViewId.getter()
{
  return 0xD00000000000001FLL;
}

BOOL sub_11230(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

void sub_11240(uint64_t a1, char a2)
{
}

uint64_t sub_11268(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x6449656C646E7562 && a2 == 0xE800000000000000;
  if (v3 || (sub_8EE40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x614C6E6F74747562 && a2 == 0xEB000000006C6562)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_8EE40();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_11360()
{
  return 2;
}

Swift::Int sub_11368(char a1)
{
  return sub_8EF20();
}

uint64_t sub_113B0(char a1)
{
  if (a1) {
    return 0x614C6E6F74747562;
  }
  else {
    return 0x6449656C646E7562;
  }
}

BOOL sub_113F0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_11230(*a1, *a2);
}

Swift::Int sub_113FC()
{
  return sub_11368(*v0);
}

void sub_11404(uint64_t a1)
{
  sub_11240(a1, *v1);
}

uint64_t sub_1140C()
{
  return sub_113B0(*v0);
}

uint64_t sub_11414@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_11268(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1143C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_11360();
  *a1 = result;
  return result;
}

uint64_t sub_11464(uint64_t a1)
{
  unint64_t v2 = sub_11634();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_114A0(uint64_t a1)
{
  unint64_t v2 = sub_11634();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t HomeAppLaunchModel.encode(to:)(void *a1)
{
  uint64_t v3 = sub_48AC(&qword_BC690);
  sub_5190();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  sub_AAA8();
  uint64_t v9 = v8 - v7;
  sub_98C0(a1, a1[3]);
  sub_11634();
  sub_8EF50();
  sub_48AC(&qword_BC168);
  sub_9DF0(&qword_BC188);
  sub_AAFC();
  if (!v1)
  {
    type metadata accessor for HomeAppLaunchModel();
    sub_AAFC();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v9, v3);
}

unint64_t sub_11634()
{
  unint64_t result = qword_BC698;
  if (!qword_BC698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BC698);
  }
  return result;
}

uint64_t HomeAppLaunchModel.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v28 = a2;
  uint64_t v33 = sub_48AC(&qword_BC168);
  sub_5190();
  uint64_t v30 = v4;
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v31 = (char *)&v24 - v9;
  uint64_t v32 = sub_48AC(&qword_BC6A0);
  sub_5190();
  uint64_t v29 = v10;
  __chkstk_darwin(v11);
  sub_AAA8();
  uint64_t v12 = type metadata accessor for HomeAppLaunchModel();
  __chkstk_darwin(v12);
  sub_AAA8();
  uint64_t v15 = v14 - v13;
  sub_98C0(a1, a1[3]);
  sub_11634();
  sub_8EF40();
  if (v2) {
    return sub_4950((uint64_t)a1);
  }
  uint64_t v25 = v12;
  uint64_t v26 = v8;
  uint64_t v27 = v15;
  uint64_t v16 = v30;
  char v35 = 0;
  uint64_t v17 = sub_9DF0(&qword_BC1A0);
  uint64_t v18 = v31;
  sub_8EDC0();
  uint64_t v24 = v17;
  uint64_t v31 = *(char **)(v16 + 32);
  ((void (*)(uint64_t, char *, uint64_t))v31)(v27, v18, v33);
  char v34 = 1;
  long long v19 = v26;
  sub_8EDC0();
  uint64_t v20 = sub_122A0();
  v21(v20);
  uint64_t v22 = v27;
  ((void (*)(uint64_t, char *, uint64_t))v31)(v27 + *(int *)(v25 + 20), v19, v33);
  sub_11974(v22, v28);
  sub_4950((uint64_t)a1);
  return sub_119D8(v22);
}

uint64_t sub_11974(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HomeAppLaunchModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_119D8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for HomeAppLaunchModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_11A34()
{
  return sub_11A9C(&qword_BC6A8);
}

uint64_t sub_11A68()
{
  return sub_11A9C(&qword_BC6B0);
}

uint64_t sub_11A9C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for HomeAppLaunchModel();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_11AE0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return HomeAppLaunchModel.init(from:)(a1, a2);
}

uint64_t sub_11AF8(void *a1)
{
  return HomeAppLaunchModel.encode(to:)(a1);
}

uint64_t *initializeBufferWithCopyOfBuffer for HomeAppLaunchModel(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_48AC(&qword_BC168);
    uint64_t v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + *(int *)(a3 + 20)), (uint64_t *)((char *)a2 + *(int *)(a3 + 20)), v7);
  }
  return a1;
}

uint64_t destroy for HomeAppLaunchModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_48AC(&qword_BC168);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v7)((void *)(v4 - 8), a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);

  return v7(v5, v4);
}

uint64_t initializeWithCopy for HomeAppLaunchModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_48AC(&qword_BC168);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t assignWithCopy for HomeAppLaunchModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_48AC(&qword_BC168);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t initializeWithTake for HomeAppLaunchModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_48AC(&qword_BC168);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t assignWithTake for HomeAppLaunchModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_48AC(&qword_BC168);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for HomeAppLaunchModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_11F24);
}

uint64_t sub_11F24(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_48AC(&qword_BC168);

  return _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for HomeAppLaunchModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_11F84);
}

uint64_t sub_11F84(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_48AC(&qword_BC168);

  return _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(a1, a2, a2, v4);
}

void sub_11FD4()
{
  sub_12060();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_12060()
{
  if (!qword_BC228)
  {
    unint64_t v0 = sub_8CB50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_BC228);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for HomeAppLaunchModel.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x12178);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HomeAppLaunchModel.CodingKeys()
{
  return &type metadata for HomeAppLaunchModel.CodingKeys;
}

unint64_t sub_121B4()
{
  unint64_t result = qword_BC748;
  if (!qword_BC748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BC748);
  }
  return result;
}

unint64_t sub_12204()
{
  unint64_t result = qword_BC750;
  if (!qword_BC750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BC750);
  }
  return result;
}

unint64_t sub_12254()
{
  unint64_t result = qword_BC758;
  if (!qword_BC758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BC758);
  }
  return result;
}

uint64_t sub_122A0()
{
  return v0;
}

uint64_t sub_122B4()
{
  sub_48AC(&qword_BC760);
  swift_allocObject();
  uint64_t result = sub_8DBE0();
  qword_BFE50 = result;
  return result;
}

uint64_t type metadata accessor for HomeCommunicationCATs()
{
  uint64_t result = qword_BC768;
  if (!qword_BC768) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1235C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1239C(uint64_t a1, uint64_t a2)
{
  return sub_123F0(a1, a2);
}

uint64_t sub_123F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_8E460();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_48AC(&qword_BC7B8);
  __chkstk_darwin(v8 - 8);
  sub_12590(a1, (uint64_t)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  uint64_t v10 = sub_8E340();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a2, v4);
  sub_125F8(a1);
  return v10;
}

uint64_t sub_12558()
{
  uint64_t v0 = sub_8E370();

  return _swift_deallocClassInstance(v0, 16, 7);
}

uint64_t sub_12588()
{
  return type metadata accessor for HomeCommunicationCATs();
}

uint64_t sub_12590(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_48AC(&qword_BC7B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_125F8(uint64_t a1)
{
  uint64_t v2 = sub_48AC(&qword_BC7B8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for HomeCommunicationCATsSimple()
{
  uint64_t result = qword_BC7C0;
  if (!qword_BC7C0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_126A0()
{
  return swift_initClassMetadata2();
}

uint64_t sub_126E0()
{
  int v3 = (char *)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:)
     + async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_127A0;
  return ((uint64_t (*)(unint64_t, unint64_t, void *))v3)(0xD000000000000021, 0x8000000000096550, _swiftEmptyArrayStorage);
}

uint64_t sub_127A0(uint64_t a1)
{
  uint64_t v7 = *v2;
  uint64_t v4 = swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (!v1) {
    uint64_t v4 = a1;
  }
  return v5(v4);
}

uint64_t sub_128A0(uint64_t a1, uint64_t a2)
{
  return sub_128F4(a1, a2);
}

uint64_t sub_128F4(uint64_t a1, uint64_t a2)
{
  sub_8E460();
  sub_12B34();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_AAA8();
  uint64_t v10 = v9 - v8;
  uint64_t v11 = sub_48AC(&qword_BC7B8);
  __chkstk_darwin(v11 - 8);
  sub_AAA8();
  sub_12590(a1, v13 - v12);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v10, a2, v2);
  uint64_t v14 = sub_8E3E0();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a2, v2);
  sub_125F8(a1);
  return v14;
}

uint64_t sub_12A20(uint64_t a1, uint64_t a2)
{
  sub_8E460();
  sub_12B34();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  sub_AAA8();
  uint64_t v9 = v8 - v7;
  swift_allocObject();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v9, a2, v2);
  uint64_t v10 = sub_8E3F0();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a2, v2);
  return v10;
}

uint64_t sub_12AFC()
{
  uint64_t v0 = sub_8E410();

  return _swift_deallocClassInstance(v0, 16, 7);
}

uint64_t sub_12B2C()
{
  return type metadata accessor for HomeCommunicationCATsSimple();
}

void sub_12B54()
{
  unk_BFE87 = -18;
}

void sub_12B84()
{
  qword_BFE88 = 0x7865646E69;
  unk_BFE90 = 0xE500000000000000;
}

uint64_t sub_12BA4(uint64_t a1, void *a2)
{
  v2._rawValue = &off_B2D00;
  return sub_12BBC(a1, a2, v2);
}

uint64_t sub_12BB0(uint64_t a1, void *a2)
{
  v2._rawValue = &off_B2D50;
  return sub_12BBC(a1, a2, v2);
}

uint64_t sub_12BBC(uint64_t a1, void *a2, Swift::OpaquePointer a3)
{
  v8._countAndFlagsBits = a1;
  v8._object = a2;
  Swift::Int v5 = sub_8ED80(a3, v8);
  swift_bridgeObjectRelease();
  if (v5 == 1) {
    unsigned int v6 = 1;
  }
  else {
    unsigned int v6 = 2;
  }
  if (v5) {
    return v6;
  }
  else {
    return 0;
  }
}

void sub_12C0C()
{
  qword_BFE98 = 0x6C646E7542707061;
  qword_BFEA0 = 0xEB00000000644965;
}

uint64_t sub_12C38@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  if (qword_BB800 != -1) {
    swift_once();
  }
  if (!*(void *)(a1 + 16))
  {
    long long v22 = 0u;
    long long v23 = 0u;
    goto LABEL_16;
  }
  uint64_t v4 = qword_BFEA0;
  uint64_t v5 = qword_BFE98;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_5E228(v5, v4);
  if ((v7 & 1) == 0)
  {
    long long v22 = 0u;
    long long v23 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  sub_12FA8(*(void *)(a1 + 56) + 32 * v6, (uint64_t)&v22);
  swift_bridgeObjectRelease();
  if (!*((void *)&v23 + 1))
  {
LABEL_16:
    swift_bridgeObjectRelease();
    uint64_t result = sub_12F48((uint64_t)&v22);
LABEL_17:
    uint64_t v8 = 0;
    uint64_t v9 = 0;
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    uint64_t v14 = 0;
    uint64_t v15 = 0;
    uint64_t v16 = 0;
    uint64_t v17 = 0;
LABEL_18:
    uint64_t v18 = 0;
    goto LABEL_19;
  }
  if ((sub_132E8() & 1) == 0)
  {
    uint64_t result = swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  uint64_t v8 = v20;
  uint64_t v9 = v21;
  sub_5C020(0x65636E756F6E6E61, 0xEE006449746E656DLL, a1, &v22);
  if (*((void *)&v23 + 1))
  {
    int v10 = sub_132E8();
    if (v10) {
      uint64_t v11 = v20;
    }
    else {
      uint64_t v11 = 0;
    }
    if (v10) {
      uint64_t v12 = v21;
    }
    else {
      uint64_t v12 = 0;
    }
  }
  else
  {
    sub_12F48((uint64_t)&v22);
    uint64_t v11 = 0;
    uint64_t v12 = 0;
  }
  sub_5C020(0xD000000000000010, 0x8000000000096580, a1, &v22);
  if (*((void *)&v23 + 1))
  {
    int v19 = sub_132E8();
    if (v19) {
      uint64_t v14 = v20;
    }
    else {
      uint64_t v14 = 0;
    }
    if (v19) {
      uint64_t v15 = v21;
    }
    else {
      uint64_t v15 = 0;
    }
  }
  else
  {
    sub_12F48((uint64_t)&v22);
    uint64_t v14 = 0;
    uint64_t v15 = 0;
  }
  sub_13308(1701670760, &v22);
  if (*((void *)&v23 + 1))
  {
    sub_48AC(&qword_BC5E0);
    if (sub_132E8()) {
      uint64_t v16 = v20;
    }
    else {
      uint64_t v16 = 0;
    }
  }
  else
  {
    sub_12F48((uint64_t)&v22);
    uint64_t v16 = 0;
  }
  sub_13308(1836019570, &v22);
  if (*((void *)&v23 + 1))
  {
    sub_48AC(&qword_BC5E0);
    if (sub_132E8()) {
      uint64_t v17 = v20;
    }
    else {
      uint64_t v17 = 0;
    }
  }
  else
  {
    sub_12F48((uint64_t)&v22);
    uint64_t v17 = 0;
  }
  sub_13308(1701736314, &v22);
  swift_bridgeObjectRelease();
  if (!*((void *)&v23 + 1))
  {
    uint64_t result = sub_12F48((uint64_t)&v22);
    goto LABEL_18;
  }
  sub_48AC(&qword_BC5E0);
  uint64_t result = swift_dynamicCast();
  uint64_t v18 = v20;
  if (!result) {
    uint64_t v18 = 0;
  }
LABEL_19:
  *a2 = v8;
  a2[1] = v9;
  a2[2] = v11;
  a2[3] = v12;
  a2[4] = v14;
  a2[5] = v15;
  a2[6] = v16;
  a2[7] = v17;
  a2[8] = v18;
  return result;
}

uint64_t sub_12F48(uint64_t a1)
{
  uint64_t v2 = sub_48AC(&qword_BC5D8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_12FA8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t destroy for HomeCommunicationDirectInvocation()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for HomeCommunicationDirectInvocation(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for HomeCommunicationDirectInvocation(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *initializeWithTake for HomeCommunicationDirectInvocation(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x48uLL);
}

uint64_t assignWithTake for HomeCommunicationDirectInvocation(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for HomeCommunicationDirectInvocation(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 72))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for HomeCommunicationDirectInvocation(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HomeCommunicationDirectInvocation()
{
  return &type metadata for HomeCommunicationDirectInvocation;
}

uint64_t sub_132E8()
{
  return swift_dynamicCast();
}

double sub_13308@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  unint64_t v4 = a1 & 0xFFFF0000FFFFFFFFLL | 0x7300000000;
  return sub_5C020(v4, 0xE500000000000000, v2, a2);
}

uint64_t type metadata accessor for HomeCommunicationDisplayTextCATs()
{
  uint64_t result = qword_BC818;
  if (!qword_BC818) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1336C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_133AC()
{
  return sub_13638();
}

uint64_t sub_133D4()
{
  return sub_13638();
}

uint64_t sub_133FC()
{
  return sub_13638();
}

uint64_t sub_13424()
{
  return sub_13638();
}

uint64_t sub_1344C()
{
  return sub_13638();
}

uint64_t sub_13474(uint64_t a1, uint64_t a2)
{
  return sub_134C8(a1, a2);
}

uint64_t sub_134C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_8E460();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  char v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_48AC(&qword_BC7B8);
  __chkstk_darwin(v8 - 8);
  sub_12590(a1, (uint64_t)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  uint64_t v10 = sub_8E340();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a2, v4);
  sub_125F8(a1);
  return v10;
}

uint64_t sub_13630()
{
  return type metadata accessor for HomeCommunicationDisplayTextCATs();
}

uint64_t sub_13638()
{
  return sub_8E350();
}

uint64_t type metadata accessor for HomeCommunicationDisplayTextCATsSimple()
{
  uint64_t result = qword_BC868;
  if (!qword_BC868) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_13688()
{
  return swift_initClassMetadata2();
}

uint64_t sub_136C8()
{
  return 0x74706D6F7270;
}

BOOL sub_136EC@<W0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  v3._rawValue = &off_B3F70;
  BOOL result = sub_13A64(*(void *)a1, *(void **)(a1 + 8), v3);
  *a2 = result;
  return result;
}

uint64_t sub_1372C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_136C8();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_13754()
{
  sub_1425C();
  uint64_t v1 = sub_14204();
  sub_14268(v1);
  sub_13F1C();
  sub_14224();
  *uint64_t v0 = v2;
  v0[1] = sub_14200;
  sub_14250();
  unint64_t v3 = sub_14234();
  return v4(v3);
}

uint64_t sub_137FC()
{
  return 2036427888;
}

BOOL sub_13818@<W0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  v3._rawValue = &off_B3FA8;
  BOOL result = sub_13A64(*(void *)a1, *(void **)(a1 + 8), v3);
  *a2 = result;
  return result;
}

uint64_t sub_13858@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_137FC();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_13880()
{
  sub_1425C();
  uint64_t v1 = sub_14204();
  sub_14268(v1);
  sub_13ED0();
  sub_14224();
  *uint64_t v0 = v2;
  v0[1] = sub_127A0;
  sub_14250();
  unint64_t v3 = sub_14234();
  return v4(v3);
}

uint64_t sub_13928()
{
  return 0x796C706572;
}

BOOL sub_13948@<W0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  v3._rawValue = &off_B3FE0;
  BOOL result = sub_13A64(*(void *)a1, *(void **)(a1 + 8), v3);
  *a2 = result;
  return result;
}

uint64_t sub_13988@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_13928();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_139B0()
{
  sub_1425C();
  uint64_t v1 = sub_14204();
  sub_14268(v1);
  sub_13E84();
  sub_14224();
  *uint64_t v0 = v2;
  v0[1] = sub_14200;
  sub_14250();
  return v4(0xD00000000000002CLL);
}

BOOL sub_13A64(uint64_t a1, void *a2, Swift::OpaquePointer a3)
{
  v7._countAndFlagsBits = a1;
  v7._object = a2;
  Swift::Int v5 = sub_8ED80(a3, v7);
  swift_bridgeObjectRelease();
  return v5 != 0;
}

uint64_t sub_13AA8()
{
  return 1886352499;
}

BOOL sub_13AC4@<W0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  v3._rawValue = &off_B4018;
  BOOL result = sub_13A64(*(void *)a1, *(void **)(a1 + 8), v3);
  *a2 = result;
  return result;
}

uint64_t sub_13B04@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_13AA8();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_13B2C()
{
  sub_1425C();
  uint64_t v1 = sub_14204();
  sub_14268(v1);
  sub_13E38();
  sub_14224();
  *uint64_t v0 = v2;
  v0[1] = sub_14200;
  sub_14250();
  unint64_t v3 = sub_14234();
  return v4(v3);
}

uint64_t sub_13BD4(uint64_t a1, uint64_t a2)
{
  return sub_13C28(a1, a2);
}

uint64_t sub_13C28(uint64_t a1, uint64_t a2)
{
  sub_8E460();
  sub_12B34();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_AAA8();
  uint64_t v10 = v9 - v8;
  uint64_t v11 = sub_48AC(&qword_BC7B8);
  __chkstk_darwin(v11 - 8);
  sub_AAA8();
  sub_12590(a1, v13 - v12);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v10, a2, v2);
  uint64_t v14 = sub_8E3E0();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a2, v2);
  sub_125F8(a1);
  return v14;
}

uint64_t sub_13D54(uint64_t a1, uint64_t a2)
{
  sub_8E460();
  sub_12B34();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  sub_AAA8();
  uint64_t v9 = v8 - v7;
  swift_allocObject();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v9, a2, v2);
  uint64_t v10 = sub_8E3F0();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a2, v2);
  return v10;
}

uint64_t sub_13E30()
{
  return type metadata accessor for HomeCommunicationDisplayTextCATsSimple();
}

unint64_t sub_13E38()
{
  unint64_t result = qword_BC8D8;
  if (!qword_BC8D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BC8D8);
  }
  return result;
}

unint64_t sub_13E84()
{
  unint64_t result = qword_BC8E0;
  if (!qword_BC8E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BC8E0);
  }
  return result;
}

unint64_t sub_13ED0()
{
  unint64_t result = qword_BC8E8;
  if (!qword_BC8E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BC8E8);
  }
  return result;
}

unint64_t sub_13F1C()
{
  unint64_t result = qword_BC8F0;
  if (!qword_BC8F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BC8F0);
  }
  return result;
}

uint64_t sub_13F74()
{
  return 0;
}

void type metadata accessor for HomeCommunicationDisplayTextCATsSimple.HomeNamePromptDialogIds()
{
}

void type metadata accessor for HomeCommunicationDisplayTextCATsSimple.PlayButtonTextDialogIds()
{
}

void type metadata accessor for HomeCommunicationDisplayTextCATsSimple.ReplyButtonTextDialogIds()
{
}

uint64_t getEnumTagSinglePayload for SendAnnouncementCATsSimple.OpenHomeAppDialogIds(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *sub_13FF0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1408CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

void type metadata accessor for HomeCommunicationDisplayTextCATsSimple.StopButtonTextDialogIds()
{
}

unint64_t sub_140C4()
{
  unint64_t result = qword_BC8F8;
  if (!qword_BC8F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BC8F8);
  }
  return result;
}

unint64_t sub_14114()
{
  unint64_t result = qword_BC900;
  if (!qword_BC900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BC900);
  }
  return result;
}

unint64_t sub_14164()
{
  unint64_t result = qword_BC908;
  if (!qword_BC908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BC908);
  }
  return result;
}

unint64_t sub_141B4()
{
  unint64_t result = qword_BC910;
  if (!qword_BC910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BC910);
  }
  return result;
}

uint64_t sub_14204()
{
  return swift_task_alloc();
}

unint64_t sub_14234()
{
  return 0xD00000000000002BLL;
}

uint64_t sub_14268(uint64_t result)
{
  *(void *)(v1 + 16) = result;
  return result;
}

uint64_t sub_14274()
{
  return sub_14E68(&qword_BC918, (void (*)(uint64_t))type metadata accessor for HomeCommunicationError);
}

uint64_t type metadata accessor for HomeCommunicationError(uint64_t a1)
{
  return sub_14ED0(a1, qword_BC998);
}

uint64_t sub_142DC@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for RadarUtils();
  uint64_t inited = swift_initStackObject();
  sub_8E330();
  swift_allocObject();
  *(void *)(inited + 16) = sub_160C4();
  sub_3A798(1);
  swift_release();
  swift_initStackObject();
  swift_allocObject();
  sub_160C4();
  sub_8EC40(40);
  v9._countAndFlagsBits = 0xD000000000000026;
  v9._object = (void *)0x8000000000096780;
  sub_8E960(v9);
  type metadata accessor for HomeCommunicationError(0);
  sub_8ED10();
  uint64_t v7 = sub_144B4();
  uint64_t v8 = v4;
  v10._countAndFlagsBits = 2570;
  v10._object = (void *)0xE200000000000000;
  sub_8E960(v10);
  os_log_type_t v5 = sub_14AA4();
  sub_3AB88(0, 0xE000000000000000, v7, v8, v5);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_15FB0(v1, a1, (void (*)(void))type metadata accessor for HomeCommunicationError);
}

uint64_t sub_144B4()
{
  uint64_t v1 = type metadata accessor for HomeCommunicationParseError(0);
  __chkstk_darwin(v1 - 8);
  sub_AAA8();
  uint64_t v4 = v3 - v2;
  type metadata accessor for HomeCommunicationError(0);
  sub_16058();
  __chkstk_darwin(v5);
  sub_160AC();
  sub_15FB0((uint64_t)v0, (uint64_t)v0, (void (*)(void))type metadata accessor for HomeCommunicationError);
  uint64_t v6 = 0xD000000000000021;
  uint64_t v7 = (void *)0x80000000000969B0;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_16078();
      swift_bridgeObjectRelease();
      uint64_t v11 = 0xD00000000000001ALL;
      goto LABEL_5;
    case 2u:
      sub_16010();
      sub_8EC40(26);
      swift_bridgeObjectRelease();
      uint64_t v11 = 0xD000000000000018;
LABEL_5:
      sub_16068(v11);
      goto LABEL_15;
    case 3u:
      sub_15EF4((uint64_t)v0, v4);
      v17._countAndFlagsBits = sub_148D8();
      sub_8E960(v17);
      swift_bridgeObjectRelease();
      sub_15F58(v4, (void (*)(void))type metadata accessor for HomeCommunicationParseError);
      break;
    case 4u:
      sub_16078();
      swift_bridgeObjectRelease();
      sub_16034(0xD000000000000019);
      swift_bridgeObjectRelease();
      v12._countAndFlagsBits = 32;
      goto LABEL_12;
    case 5u:
      sub_16010();
      sub_8EC40(20);
      swift_bridgeObjectRelease();
      goto LABEL_15;
    case 6u:
      uint64_t v13 = v0[2];
      uint64_t v14 = (void *)v0[3];
      sub_16024();
      sub_8EC40(39);
      swift_bridgeObjectRelease();
      sub_16034(0xD00000000000001ELL);
      swift_bridgeObjectRelease();
      v18._countAndFlagsBits = 544175136;
      v18._object = (void *)0xE400000000000000;
      sub_8E960(v18);
      v19._countAndFlagsBits = v13;
      v19._object = v14;
      sub_8E960(v19);
      swift_bridgeObjectRelease();
      v12._countAndFlagsBits = 46;
      goto LABEL_12;
    case 7u:
      sub_16010();
      sub_8EC40(57);
      sub_160E4();
      v10._countAndFlagsBits = 0xD000000000000037;
      v10._object = (void *)0x8000000000096910;
      goto LABEL_14;
    case 8u:
      sub_8EC40(20);
      sub_160E4();
      v20._object = (void *)0x80000000000968F0;
      v20._countAndFlagsBits = 0xD000000000000012;
      sub_8E960(v20);
      type metadata accessor for INSendAnnouncementIntentResponseCode(0);
      sub_8ED10();
      break;
    case 9u:
      sub_16010();
      sub_8EC40(53);
      sub_160E4();
      v21._countAndFlagsBits = 0xD000000000000032;
      v21._object = (void *)0x8000000000096890;
      sub_8E960(v21);
      v22._countAndFlagsBits = 0xD000000000000021;
      v22._object = (void *)0x80000000000969B0;
      sub_8E960(v22);
      swift_bridgeObjectRelease();
      v12._countAndFlagsBits = 34;
LABEL_12:
      v12._object = (void *)0xE100000000000000;
      sub_8E960(v12);
      break;
    case 0xAu:
      break;
    default:
      uint64_t v6 = *v0;
      uint64_t v7 = (void *)v0[1];
      uint64_t v8 = v0[2];
      Swift::String v9 = (void *)v0[3];
      sub_16024();
      sub_8EC40(37);
      swift_bridgeObjectRelease();
      sub_16068(0xD00000000000001FLL);
      v16._countAndFlagsBits = v8;
      v16._object = v9;
      sub_8E960(v16);
      swift_bridgeObjectRelease();
      v10._countAndFlagsBits = 8250;
      v10._object = (void *)0xE200000000000000;
LABEL_14:
      sub_8E960(v10);
LABEL_15:
      v23._countAndFlagsBits = v6;
      v23._object = v7;
      sub_8E960(v23);
      swift_bridgeObjectRelease();
      break;
  }
  sub_8EC40(27);
  swift_bridgeObjectRelease();
  sub_16034(0xD000000000000019);
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_148D8()
{
  uint64_t v1 = sub_8D8B0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v14 - v6;
  uint64_t v8 = type metadata accessor for HomeCommunicationParseError(0);
  __chkstk_darwin(v8 - 8);
  sub_AAA8();
  uint64_t v11 = v10 - v9;
  sub_15FB0(v0, v10 - v9, (void (*)(void))type metadata accessor for HomeCommunicationParseError);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 32))(v7, v11, v1);
  sub_16024();
  sub_8EC40(21);
  swift_bridgeObjectRelease();
  sub_16068(0xD000000000000013);
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v5, v7, v1);
  v15._countAndFlagsBits = sub_72D0C((uint64_t)v5);
  sub_8E960(v15);
  swift_bridgeObjectRelease();
  uint64_t v12 = v14;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v1);
  return v12;
}

uint64_t sub_14AA4()
{
  type metadata accessor for HomeCommunicationParseError(0);
  sub_16058();
  __chkstk_darwin(v1);
  sub_AAA8();
  uint64_t v4 = v3 - v2;
  type metadata accessor for HomeCommunicationError(0);
  sub_16058();
  __chkstk_darwin(v5);
  sub_160AC();
  sub_15FB0(v0, v0, (void (*)(void))type metadata accessor for HomeCommunicationError);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_16010();
      sub_8EC40(30);
      swift_bridgeObjectRelease();
      sub_160F0();
      uint64_t v7 = v6 | 0xC;
      goto LABEL_11;
    case 2u:
      sub_16010();
      sub_8EC40(27);
      swift_bridgeObjectRelease();
      sub_1609C();
      goto LABEL_11;
    case 3u:
      sub_15EF4(v0, v4);
      sub_16024();
      v16._countAndFlagsBits = 0x7272456573726170;
      v16._object = (void *)0xEB000000003A726FLL;
      sub_8E960(v16);
      sub_8ED10();
      uint64_t v8 = v15;
      sub_15F58(v4, (void (*)(void))type metadata accessor for HomeCommunicationParseError);
      return v8;
    case 4u:
      sub_16010();
      sub_8EC40(24);
      swift_bridgeObjectRelease();
      sub_160F0();
      uint64_t v7 = v9 | 6;
      goto LABEL_11;
    case 5u:
      sub_16010();
      sub_8EC40(18);
      swift_bridgeObjectRelease();
      sub_160F0();
      goto LABEL_11;
    case 6u:
      uint64_t v10 = *(void *)(v0 + 16);
      uint64_t v11 = *(void **)(v0 + 24);
      sub_16024();
      sub_8EC40(38);
      swift_bridgeObjectRelease();
      sub_1609C();
      sub_16034(v12);
      swift_bridgeObjectRelease();
      v17._countAndFlagsBits = 0x3D74757074756F20;
      v17._object = (void *)0xE800000000000000;
      sub_8E960(v17);
      v18._countAndFlagsBits = v10;
      v18._object = v11;
      sub_8E960(v18);
      goto LABEL_12;
    case 8u:
      sub_16024();
      sub_8EC40(22);
      sub_160E4();
      sub_160F0();
      v19._countAndFlagsBits = v13 | 4;
      v19._object = (void *)0x80000000000967D0;
      sub_8E960(v19);
      type metadata accessor for INSendAnnouncementIntentResponseCode(0);
      sub_8ED10();
      goto LABEL_13;
    case 9u:
      sub_16010();
      sub_8EC40(29);
      swift_bridgeObjectRelease();
      sub_1609C();
LABEL_11:
      sub_16034(v7);
LABEL_12:
      swift_bridgeObjectRelease();
LABEL_13:
      uint64_t v8 = v15;
      break;
    default:
      sub_15F58(v0, (void (*)(void))type metadata accessor for HomeCommunicationError);
      uint64_t v8 = 0;
      break;
  }
  return v8;
}

uint64_t sub_14E20()
{
  return sub_14E68(&qword_BC920, (void (*)(uint64_t))type metadata accessor for HomeCommunicationParseError);
}

uint64_t sub_14E68(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for HomeCommunicationParseError(uint64_t a1)
{
  return sub_14ED0(a1, (uint64_t *)&unk_BCA48);
}

uint64_t sub_14ED0(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for HomeCommunicationError(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 6u:
        uint64_t v7 = a2[1];
        *a1 = *a2;
        a1[1] = v7;
        uint64_t v8 = a2[2];
        uint64_t v9 = a2[3];
        a1[2] = v8;
        a1[3] = v9;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_8;
      case 1u:
      case 2u:
      case 4u:
      case 5u:
      case 7u:
      case 9u:
        uint64_t v12 = a2[1];
        *a1 = *a2;
        a1[1] = v12;
        swift_bridgeObjectRetain();
        goto LABEL_8;
      case 3u:
        uint64_t v11 = sub_8D8B0();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
LABEL_8:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

uint64_t destroy for HomeCommunicationError(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 6:
      swift_bridgeObjectRelease();
      goto LABEL_3;
    case 1:
    case 2:
    case 4:
    case 5:
    case 7:
    case 9:
LABEL_3:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    case 3:
      uint64_t v3 = sub_8D8B0();
      uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
      uint64_t result = v4(a1, v3);
      break;
    default:
      return result;
  }
  return result;
}

void *initializeWithCopy for HomeCommunicationError(void *a1, void *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 6u:
      uint64_t v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      uint64_t v7 = a2[2];
      uint64_t v8 = a2[3];
      a1[2] = v7;
      a1[3] = v8;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_6;
    case 1u:
    case 2u:
    case 4u:
    case 5u:
    case 7u:
    case 9u:
      uint64_t v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      swift_bridgeObjectRetain();
      goto LABEL_6;
    case 3u:
      uint64_t v9 = sub_8D8B0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
LABEL_6:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

void *assignWithCopy for HomeCommunicationError(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_15F58((uint64_t)a1, (void (*)(void))type metadata accessor for HomeCommunicationError);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 6u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_7;
      case 1u:
      case 2u:
      case 4u:
      case 5u:
      case 7u:
      case 9u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        goto LABEL_7;
      case 3u:
        uint64_t v6 = sub_8D8B0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
LABEL_7:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

void *initializeWithTake for HomeCommunicationError(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 3)
  {
    uint64_t v6 = sub_8D8B0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for HomeCommunicationError(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_15F58((uint64_t)a1, (void (*)(void))type metadata accessor for HomeCommunicationError);
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      uint64_t v6 = sub_8D8B0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_15860()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_15870()
{
  uint64_t result = sub_8D8B0();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for HomeCommunicationParseError(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = sub_8D8B0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  return a1;
}

uint64_t destroy for HomeCommunicationParseError(uint64_t a1)
{
  uint64_t v2 = sub_8D8B0();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t initializeWithCopy for HomeCommunicationParseError(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_8D8B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for HomeCommunicationParseError(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_8D8B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for HomeCommunicationParseError(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_8D8B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for HomeCommunicationParseError(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_8D8B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for HomeCommunicationParseError(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_48AC(&qword_BC9D0);

  return _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for HomeCommunicationParseError(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_48AC(&qword_BC9D0);

  return _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(a1, a2, a3, v6);
}

uint64_t sub_15C7C(uint64_t a1)
{
  uint64_t result = sub_8D8B0();
  if (v3 <= 0x3F)
  {
    uint64_t v4 = *(void *)(result - 8);
    swift_initEnumMetadataSingleCase();
    uint64_t result = 0;
    *(_DWORD *)(*(void *)(a1 - 8) + 84) = *(_DWORD *)(v4 + 84);
  }
  return result;
}

uint64_t destroy for AppIntentDispatcherError()
{
  swift_bridgeObjectRelease();

  return swift_errorRelease();
}

void *_s35HomeCommunicationFlowDelegatePlugin24AppIntentDispatcherErrorOwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[2];
  swift_bridgeObjectRetain();
  swift_errorRetain();
  a1[2] = v4;
  return a1;
}

void *assignWithCopy for AppIntentDispatcherError(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[2];
  swift_errorRetain();
  a1[2] = v4;
  swift_errorRelease();
  return a1;
}

__n128 initializeWithTake for AppIntentDispatcherError(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for AppIntentDispatcherError(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_errorRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AppIntentDispatcherError(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 24))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AppIntentDispatcherError(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AppIntentDispatcherError()
{
  return &type metadata for AppIntentDispatcherError;
}

uint64_t sub_15EF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HomeCommunicationParseError(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_15F58(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_16058();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_15FB0(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_16058();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

void sub_16010()
{
  *(void *)(v0 - 64) = 0;
  *(void *)(v0 - 56) = 0xE000000000000000;
}

void sub_16024()
{
  *(void *)(v0 - 64) = 0;
  *(void *)(v0 - 56) = 0xE000000000000000;
}

void sub_16034(uint64_t a1@<X8>)
{
  *(void *)(v4 - 64) = a1;
  *(void *)(v4 - 56) = (v1 - 32) | 0x8000000000000000;
  v6._countAndFlagsBits = v2;
  v6._object = v3;
  sub_8E960(v6);
}

void sub_16068(uint64_t a1@<X8>)
{
  *(void *)(v2 - 64) = a1;
  *(void *)(v2 - 56) = (v1 - 32) | 0x8000000000000000;
}

void sub_16078()
{
  *(void *)(v0 - 64) = 0;
  *(void *)(v0 - 56) = 0xE000000000000000;
  sub_8EC40(28);
}

uint64_t sub_160C4()
{
  return sub_8E320();
}

void sub_160E4()
{
  uint64_t v1 = *(void *)(v0 - 56);
  *(void *)(v0 - 64) = *(void *)(v0 - 64);
  *(void *)(v0 - 56) = v1;
}

void sub_160FC()
{
}

void sub_16124()
{
}

void sub_16134()
{
}

void sub_16154()
{
}

Swift::Int sub_1617C()
{
  return sub_8EF20();
}

Swift::Int sub_161C8()
{
  return sub_8EF20();
}

void sub_16208()
{
}

void sub_16218()
{
}

unsigned char *sub_16228(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x162F4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

void type metadata accessor for SiriNLFeature()
{
}

void type metadata accessor for HomeCommunicationFeatureFlags()
{
}

unsigned char *sub_16334(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *__n128 result = a2;
        return result;
      case 2:
        *(_WORD *)__n128 result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)__n128 result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *__n128 result = 0;
      break;
    case 2:
      *(_WORD *)__n128 result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x163D0);
    case 4:
      *(_DWORD *)__n128 result = 0;
      break;
    default:
      return result;
  }
  return result;
}

void type metadata accessor for RFFeature()
{
}

unint64_t sub_16408()
{
  unint64_t result = qword_BCA58;
  if (!qword_BCA58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BCA58);
  }
  return result;
}

unint64_t sub_16458()
{
  unint64_t result = qword_BCA60;
  if (!qword_BCA60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BCA60);
  }
  return result;
}

uint64_t sub_164AC()
{
  if (sub_501F0(0)) {
    char v0 = sub_501F0(1) ^ 1;
  }
  else {
    char v0 = 1;
  }
  return v0 & 1;
}

uint64_t sub_164E4()
{
  sub_4950(v0 + 16);

  return _swift_deallocClassInstance(v0, 56, 7);
}

uint64_t type metadata accessor for HomeCommunicationFeatureManager()
{
  return self;
}

uint64_t sub_16540()
{
  return sub_8CE00();
}

uint64_t sub_165D0()
{
  sub_CC60();
  v1[24] = v2;
  v1[25] = v0;
  uint64_t v3 = sub_8D860();
  v1[26] = v3;
  v1[27] = *(void *)(v3 - 8);
  v1[28] = swift_task_alloc();
  v1[29] = swift_task_alloc();
  return _swift_task_switch(sub_1669C, 0, 0);
}

uint64_t sub_1669C()
{
  uint64_t v47 = v0;
  uint64_t v1 = *(void *)(v0 + 200) + OBJC_IVAR____TtC35HomeCommunicationFlowDelegatePlugin21HomeCommunicationFlow_input;
  uint64_t v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 216) + 16);
  v2(*(void *)(v0 + 232), v1, *(void *)(v0 + 208));
  uint64_t v3 = sub_16E04(v0 + 56);
  unint64_t v5 = v4;
  unsigned int v6 = *(void (**)(void))(*(void *)(v0 + 216) + 8);
  sub_18FA4();
  v6();
  char v42 = (void *)(v0 + 96);
  uint64_t v41 = v3;
  uint64_t v45 = (void *)(v0 + 16);
  sub_C928((long long *)(v0 + 56), v0 + 16);
  if (qword_BB830 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_8E730();
  sub_50FC(v7, (uint64_t)qword_BFEC8);
  swift_bridgeObjectRetain_n();
  uint64_t v8 = sub_8E710();
  os_log_type_t v9 = sub_8EB00();
  uint64_t v43 = v6;
  os_log_type_t v44 = v2;
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    v46[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136315138;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 184) = sub_8758C(v41, v5, v46);
    sub_8EBD0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_0, v8, v9, "#HomeCommunicationFlow Chose SKIntent name: %s. ", v10, 0xCu);
    swift_arrayDestroy();
    sub_CC2C();
    sub_CC2C();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v11 = *(void *)(v0 + 200);
  sub_8D8C0();
  sub_48AC(&qword_BC428);
  swift_allocObject();
  uint64_t v12 = (void *)sub_7E1D8(v46);
  uint64_t v13 = *(void *)((char *)v12 + *(void *)(qword_BFDE0 + *v12 + 16));
  swift_retain();
  swift_release();
  sub_C940(v11 + 16, (uint64_t)v42);
  uint64_t v14 = sub_98C0(v42, *(void *)(v0 + 120));
  char v15 = sub_18C54((uint64_t)v14, v45);
  sub_4950((uint64_t)v42);
  uint64_t v16 = *(void *)(v0 + 224);
  if (v15 == 7)
  {
    swift_bridgeObjectRelease();
    uint64_t v17 = sub_18F8C();
    v18(v17);
    uint64_t v19 = *(void *)(v0 + 40);
    uint64_t v20 = *(void *)(v0 + 48);
    sub_98C0(v45, v19);
    unsigned __int8 v21 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 16))(v19, v20);
    uint64_t v22 = sub_17050(v16, (uint64_t)v45, v21, v13);
    sub_18FA4();
    v43();
    if (v22)
    {
      sub_8D290();
      swift_release();
      swift_release();
      uint64_t v23 = v0 + 16;
    }
    else
    {
      swift_retain_n();
      uint64_t v30 = sub_8E710();
      os_log_type_t v31 = sub_8EB10();
      if (os_log_type_enabled(v30, v31))
      {
        uint64_t v32 = *(void *)(v0 + 224);
        uint64_t v33 = *(void *)(v0 + 208);
        char v34 = (uint8_t *)swift_slowAlloc();
        v46[0] = swift_slowAlloc();
        *(_DWORD *)char v34 = 136315138;
        v44(v32, v1, v33);
        sub_18F2C(&qword_BCCA0, (void (*)(uint64_t))&type metadata accessor for Input);
        uint64_t v35 = sub_8EE20();
        unint64_t v37 = v36;
        sub_18FA4();
        v38();
        *(void *)(v0 + 176) = sub_8758C(v35, v37, v46);
        sub_8EBD0();
        swift_bridgeObjectRelease();
        swift_release_n();
        _os_log_impl(&dword_0, v30, v31, "HomeCommunicationFlow unable to find flow for input %s", v34, 0xCu);
        swift_arrayDestroy();
        sub_CC2C();
        sub_CC2C();
      }
      else
      {
        swift_release_n();
      }

      sub_8D2A0();
      swift_release();
      uint64_t v23 = v0 + 16;
    }
  }
  else
  {
    uint64_t v24 = sub_18F8C();
    v25(v24);
    sub_1714C(v15, v26, v45, v27, v28, v13);
    swift_release();
    swift_bridgeObjectRelease();
    sub_18FA4();
    v29();
    uint64_t v23 = v0 + 16;
  }
  sub_4950(v23);
  swift_task_dealloc();
  swift_task_dealloc();
  sub_CC20();
  return v39();
}

uint64_t sub_16E04(uint64_t a1)
{
  uint64_t v5 = sub_8D8B0();
  sub_CB04();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  sub_18F74();
  sub_98C0((void *)(v1 + 16), *(void *)(v1 + 40));
  swift_retain();
  sub_8D840();
  sub_2FE2C(v3, (uint64_t)&v14);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v3, v5);
  if (v15)
  {
    sub_C928(&v14, (uint64_t)v16);
    sub_C940(v1 + 16, (uint64_t)&v14);
    id v9 = sub_255FC(v16);
    sub_4950((uint64_t)&v14);
    if (!v2)
    {
      sub_C940((uint64_t)v16, a1);
      id v12 = [v9 _className];
      a1 = sub_8E8D0();
    }
    sub_4950((uint64_t)v16);
  }
  else
  {
    sub_C7DC((uint64_t)&v14);
    uint64_t v10 = sub_8E300();
    sub_18F2C(&qword_BCC98, (void (*)(uint64_t))&type metadata accessor for TransformationError);
    swift_allocError();
    *uint64_t v11 = 0xD00000000000001FLL;
    v11[1] = 0x8000000000096BD0;
    (*(void (**)(void *, void, uint64_t))(*(void *)(v10 - 8) + 104))(v11, enum case for TransformationError.cannotTransform(_:), v10);
    swift_willThrow();
  }
  return a1;
}

uint64_t sub_17050(uint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  uint64_t v8 = sub_8D8B0();
  sub_CB04();
  uint64_t v10 = v9;
  __chkstk_darwin(v11);
  sub_AAA8();
  uint64_t v14 = v13 - v12;
  sub_8D840();
  sub_C940(v4 + 16, (uint64_t)v18);
  uint64_t v15 = sub_98C0(v18, v18[3]);
  uint64_t v16 = sub_17E0C(v14, a3, a4, a2, (uint64_t)v15);
  sub_4950((uint64_t)v18);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v14, v8);
  return v16;
}

uint64_t sub_1714C(char a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v11 = sub_8E460();
  __chkstk_darwin(v11 - 8);
  sub_18F74();
  sub_C940(v6 + 16, (uint64_t)&v27);
  type metadata accessor for SendAnnouncementCATsSimple();
  swift_retain();
  sub_8E450();
  uint64_t v12 = sub_8E400();
  type metadata accessor for ReadAnnouncementCATsSimple();
  sub_8E450();
  uint64_t v13 = sub_8E400();
  type metadata accessor for SkipAnnouncementCATsSimple();
  sub_8E450();
  uint64_t v14 = sub_8E400();
  sub_C9A4((uint64_t)&v27, v28);
  sub_CB04();
  __chkstk_darwin(v15);
  sub_AAA8();
  uint64_t v18 = v17 - v16;
  (*(void (**)(uint64_t))(v19 + 16))(v17 - v16);
  sub_17BD8(a1, v18, a6, v12, v13, v14);
  sub_4950((uint64_t)&v27);
  sub_98C0((void *)(v7 + OBJC_IVAR____TtC35HomeCommunicationFlowDelegatePlugin21HomeCommunicationFlow_siriKitEventSender), *(void *)(v7 + OBJC_IVAR____TtC35HomeCommunicationFlowDelegatePlugin21HomeCommunicationFlow_siriKitEventSender + 24));
  sub_8D050();
  uint64_t v20 = a3[3];
  uint64_t v21 = a3[4];
  sub_98C0(a3, v20);
  char v22 = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 16))(v20, v21);
  id v23 = sub_1CFF0(v22);
  id v24 = [v23 _className];

  sub_8E8D0();
  sub_C940((uint64_t)a3, (uint64_t)&v27);
  uint64_t v25 = swift_allocObject();
  sub_C928(&v27, v25 + 16);
  sub_8D040();
  sub_8CEC0();
  swift_release();
  sub_8D640();
  sub_8CC00();
  swift_allocObject();
  swift_retain();
  *(void *)&long long v27 = sub_8CBF0();
  sub_8D280();
  swift_release();
  return swift_release();
}

uint64_t sub_17480(uint64_t a1, void *a2)
{
  return sub_8D030();
}

uint64_t sub_174AC(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_C6E0;
  return sub_85B54(a1);
}

uint64_t sub_17548()
{
  sub_4950(v0 + 16);
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC35HomeCommunicationFlowDelegatePlugin21HomeCommunicationFlow_input;
  uint64_t v2 = sub_8D860();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_4950(v0 + OBJC_IVAR____TtC35HomeCommunicationFlowDelegatePlugin21HomeCommunicationFlow_siriKitEventSender);
  return v0;
}

uint64_t sub_175CC()
{
  sub_17548();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return _swift_deallocClassInstance(v0, v1, v2);
}

uint64_t sub_17624()
{
  return type metadata accessor for HomeCommunicationFlow();
}

uint64_t type metadata accessor for HomeCommunicationFlow()
{
  uint64_t result = qword_BCB58;
  if (!qword_BCB58) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_17674()
{
  uint64_t result = sub_8D860();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1771C()
{
  return sub_16540();
}

uint64_t sub_17740()
{
  unint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *unint64_t v1 = v0;
  v1[1] = sub_C6E0;
  return sub_165D0();
}

uint64_t sub_177DC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for HomeCommunicationFlow();

  return Flow<>.exitValue.getter(v3, a2);
}

void *sub_17818(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_8D860();
  sub_CB04();
  uint64_t v10 = v9;
  __chkstk_darwin(v11);
  sub_AAA8();
  uint64_t v14 = v13 - v12;
  uint64_t v15 = type metadata accessor for SharedGlobals();
  v35[3] = v15;
  v35[4] = (uint64_t)&off_B6D60;
  uint64_t v16 = sub_C9F4(v35);
  sub_CA58(a4, (uint64_t)v16);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v14, a1, v8);
  sub_C940(a2, (uint64_t)v34);
  sub_C940((uint64_t)v35, (uint64_t)v32);
  sub_C9A4((uint64_t)v32, v33);
  sub_CB04();
  __chkstk_darwin(v17);
  sub_18F74();
  (*(void (**)(uint64_t))(v18 + 16))(v4);
  uint64_t v30 = v15;
  os_log_type_t v31 = &off_B6D60;
  uint64_t v19 = sub_C9F4(v29);
  sub_CA58(v4, (uint64_t)v19);
  type metadata accessor for SendAnnouncementFlow();
  uint64_t v20 = (void *)swift_allocObject();
  sub_C9A4((uint64_t)v29, v30);
  sub_CB04();
  __chkstk_darwin(v21);
  sub_AAA8();
  uint64_t v24 = v23 - v22;
  (*(void (**)(uint64_t))(v25 + 16))(v23 - v22);
  v20[11] = v15;
  v20[12] = &off_B6D60;
  uint64_t v26 = sub_C9F4(v20 + 8);
  sub_CA58(v24, (uint64_t)v26);
  *((unsigned char *)v20 + OBJC_IVAR____TtC35HomeCommunicationFlowDelegatePlugin20SendAnnouncementFlow_state) = 0;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))((uint64_t)v20 + OBJC_IVAR____TtC35HomeCommunicationFlowDelegatePlugin20SendAnnouncementFlow_input, v14, v8);
  sub_C928(v34, (uint64_t)(v20 + 2));
  v20[7] = a3;
  sub_4950((uint64_t)v29);
  sub_4950((uint64_t)v32);
  sub_4950((uint64_t)v35);
  sub_4950(a2);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(a1, v8);
  return v20;
}

uint64_t sub_17ABC(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14 = sub_8D160();
  __chkstk_darwin(v14 - 8);
  uint64_t v18 = type metadata accessor for SharedGlobals();
  uint64_t v19 = &off_B6D60;
  uint64_t v15 = sub_C9F4((uint64_t *)&v17);
  sub_CA58(a2, (uint64_t)v15);
  sub_8D130();
  sub_8D6E0();
  *(unsigned char *)(a7 + 16) = a1;
  sub_C928(&v17, a7 + 24);
  *(void *)(a7 + 64) = a3;
  *(void *)(a7 + 72) = a4;
  *(void *)(a7 + 80) = a5;
  *(void *)(a7 + 88) = a6;
  return a7;
}

uint64_t sub_17BD8(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v22 = type metadata accessor for SharedGlobals();
  uint64_t v23 = &off_B6D60;
  uint64_t v12 = sub_C9F4(v21);
  sub_CA58(a2, (uint64_t)v12);
  type metadata accessor for UnsupportedFlowOutputFactory();
  uint64_t v13 = swift_allocObject();
  uint64_t v14 = sub_C9A4((uint64_t)v21, v22);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v21[-1] - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v17 + 16))(v16);
  uint64_t v18 = sub_17ABC(a1, (uint64_t)v16, a3, a4, a5, a6, v13);
  sub_4950((uint64_t)v21);
  return v18;
}

uint64_t sub_17D34()
{
  sub_4950(v0 + 16);

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_17D6C(uint64_t a1)
{
  return sub_17480(a1, (void *)(v1 + 16));
}

uint64_t sub_17D74()
{
  sub_CC60();
  uint64_t v2 = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_C6E0;
  return sub_174AC(v2);
}

uint64_t sub_17E0C(uint64_t a1, unsigned __int8 a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v81 = (uint64_t *)a4;
  uint64_t v83 = a3;
  uint64_t v80 = a1;
  unsigned int v7 = a2;
  uint64_t v8 = sub_8E730();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v80 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_8D8B0();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v80 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = sub_8D860();
  uint64_t v85 = *(void *)(v86 - 8);
  uint64_t v16 = __chkstk_darwin(v86);
  v82 = (char *)&v80 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v84 = (char *)&v80 - v18;
  uint64_t v19 = type metadata accessor for SharedGlobals();
  v93[3] = v19;
  v93[4] = (uint64_t)&off_B6D60;
  uint64_t v20 = sub_C9F4(v93);
  sub_18BF0(a5, (uint64_t)v20);
  if (v7 == 7) {
    goto LABEL_2;
  }
  if (v7 < 2)
  {
    if (qword_BB830 != -1) {
      swift_once();
    }
    sub_50FC(v8, (uint64_t)qword_BFEC8);
    uint64_t v47 = sub_8E710();
    os_log_type_t v48 = sub_8EB00();
    if (os_log_type_enabled(v47, v48))
    {
      uint64_t v49 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v49 = 0;
      _os_log_impl(&dword_0, v47, v48, "#HomeCommunicationRequestSupportPolicy calling SendAnnouncementFlow", v49, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v80, v12);
    uint64_t v50 = v84;
    sub_8D850();
    uint64_t v51 = v85;
    uint64_t v52 = (uint64_t)v82;
    uint64_t v53 = v86;
    (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v82, v50, v86);
    sub_C940((uint64_t)v81, (uint64_t)v92);
    sub_C940((uint64_t)v93, (uint64_t)v90);
    uint64_t v54 = sub_C9A4((uint64_t)v90, v91);
    __chkstk_darwin(v54);
    uint64_t v56 = (char *)&v80 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v57 + 16))(v56);
    uint64_t v58 = v83;
    swift_retain();
    uint64_t v59 = sub_17818(v52, (uint64_t)v92, v58, (uint64_t)v56);
    sub_4950((uint64_t)v90);
    sub_59024();
    *(void *)&v92[0] = v59;
    type metadata accessor for SendAnnouncementFlow();
    sub_18F2C(&qword_BC430, (void (*)(uint64_t))type metadata accessor for SendAnnouncementFlow);
    uint64_t v60 = sub_8CDF0();
    (*(void (**)(char *, uint64_t))(v51 + 8))(v50, v53);
    goto LABEL_29;
  }
  if (v7 == 3)
  {
    if (qword_BB830 != -1) {
      swift_once();
    }
    sub_50FC(v8, (uint64_t)qword_BFEC8);
    char v64 = sub_8E710();
    os_log_type_t v65 = sub_8EB00();
    if (os_log_type_enabled(v64, v65))
    {
      uint64_t v66 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v66 = 0;
      _os_log_impl(&dword_0, v64, v65, "#HomeCommunicationRequestSupportPolicy calling StopAnnouncementFlow", v66, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v80, v12);
    uint64_t v30 = v84;
    sub_8D850();
    uint64_t v31 = v85;
    uint64_t v67 = v82;
    uint64_t v33 = v86;
    (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v82, v30, v86);
    sub_C940((uint64_t)v81, (uint64_t)v92);
    sub_C940((uint64_t)v93, (uint64_t)v90);
    uint64_t v68 = sub_C9A4((uint64_t)v90, v91);
    uint64_t v81 = &v80;
    __chkstk_darwin(v68);
    uint64_t v70 = (char *)&v80 - ((v69 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v71 + 16))(v70);
    uint64_t v88 = v19;
    uint64_t v89 = &off_B6D60;
    uint64_t v72 = sub_C9F4(v87);
    sub_CA58((uint64_t)v70, (uint64_t)v72);
    type metadata accessor for StopAnnouncementFlow();
    uint64_t v73 = (void *)swift_allocObject();
    uint64_t v74 = sub_C9A4((uint64_t)v87, v88);
    __chkstk_darwin(v74);
    uint64_t v76 = (char *)&v80 - ((v75 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v77 + 16))(v76);
    v73[11] = v19;
    v73[12] = &off_B6D60;
    uint64_t v78 = sub_C9F4(v73 + 8);
    sub_CA58((uint64_t)v76, (uint64_t)v78);
    (*(void (**)(uint64_t, char *, uint64_t))(v31 + 32))((uint64_t)v73 + OBJC_IVAR____TtC35HomeCommunicationFlowDelegatePlugin20StopAnnouncementFlow_input, v67, v33);
    sub_C928(v92, (uint64_t)(v73 + 2));
    v73[7] = v83;
    swift_retain();
    sub_4950((uint64_t)v87);
    sub_4950((uint64_t)v90);
    sub_79110();
    *(void *)&v92[0] = v73;
    uint64_t v45 = &qword_BC438;
    uint64_t v46 = type metadata accessor for StopAnnouncementFlow;
    goto LABEL_28;
  }
  if (v7 == 2)
  {
    if (qword_BB830 != -1) {
      swift_once();
    }
    sub_50FC(v8, (uint64_t)qword_BFEC8);
    long long v27 = sub_8E710();
    os_log_type_t v28 = sub_8EB00();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v29 = 0;
      _os_log_impl(&dword_0, v27, v28, "#HomeCommunicationRequestSupportPolicy calling ReadAnnouncementFlow", v29, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v80, v12);
    uint64_t v30 = v84;
    sub_8D850();
    uint64_t v31 = v85;
    uint64_t v32 = v82;
    uint64_t v33 = v86;
    (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v82, v30, v86);
    sub_C940((uint64_t)v81, (uint64_t)v92);
    sub_C940((uint64_t)v93, (uint64_t)v90);
    uint64_t v34 = sub_C9A4((uint64_t)v90, v91);
    uint64_t v81 = &v80;
    __chkstk_darwin(v34);
    unint64_t v36 = (char *)&v80 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v37 + 16))(v36);
    uint64_t v88 = v19;
    uint64_t v89 = &off_B6D60;
    unint64_t v38 = sub_C9F4(v87);
    sub_CA58((uint64_t)v36, (uint64_t)v38);
    type metadata accessor for ReadAnnouncementFlow();
    unint64_t v39 = (void *)swift_allocObject();
    uint64_t v40 = sub_C9A4((uint64_t)v87, v88);
    __chkstk_darwin(v40);
    char v42 = (char *)&v80 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v43 + 16))(v42);
    v39[11] = v19;
    v39[12] = &off_B6D60;
    os_log_type_t v44 = sub_C9F4(v39 + 8);
    sub_CA58((uint64_t)v42, (uint64_t)v44);
    (*(void (**)(uint64_t, char *, uint64_t))(v31 + 32))((uint64_t)v39 + OBJC_IVAR____TtC35HomeCommunicationFlowDelegatePlugin20ReadAnnouncementFlow_input, v32, v33);
    sub_C928(v92, (uint64_t)(v39 + 2));
    v39[7] = v83;
    swift_retain();
    sub_4950((uint64_t)v87);
    sub_4950((uint64_t)v90);
    sub_3E0C4();
    *(void *)&v92[0] = v39;
    uint64_t v45 = &qword_BC440;
    uint64_t v46 = type metadata accessor for ReadAnnouncementFlow;
LABEL_28:
    sub_18F2C(v45, (void (*)(uint64_t))v46);
    uint64_t v60 = sub_8CDF0();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v30, v33);
LABEL_29:
    swift_release();
    goto LABEL_30;
  }
LABEL_2:
  if (qword_BB830 != -1) {
    swift_once();
  }
  uint64_t v21 = sub_50FC(v8, (uint64_t)qword_BFEC8);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v21, v8);
  uint64_t v22 = sub_8E710();
  os_log_type_t v23 = sub_8EB10();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = (uint8_t *)swift_slowAlloc();
    *(void *)&v92[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v24 = 136315138;
    if (a2 == 7)
    {
      unint64_t v25 = 0xEF3E656D616E2073;
      uint64_t v26 = 0x73616C63206F4E3CLL;
    }
    else
    {
      id v61 = sub_1CFF0(a2);
      id v62 = [v61 _className];

      uint64_t v26 = sub_8E8D0();
      unint64_t v25 = v63;
    }
    v90[0] = sub_8758C(v26, v25, (uint64_t *)v92);
    sub_8EBD0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v22, v23, "#HomeCommunicationRequestSupportPolicy unknown HomeCommunicationIntentClassName. Can't find an intent matching \"%s\"", v24, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  uint64_t v60 = 0;
LABEL_30:
  sub_4950((uint64_t)v93);
  return v60;
}

uint64_t sub_18BF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SharedGlobals();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_18C54(uint64_t a1, void *a2)
{
  if (qword_BB850 != -1) {
    swift_once();
  }
  sub_98C0(qword_BFF00, qword_BFF18);
  if ((sub_802B4() & 1) == 0) {
    return 1;
  }
  uint64_t v3 = a2[3];
  uint64_t v4 = a2[4];
  sub_98C0(a2, v3);
  uint64_t v5 = *(void *)((*(uint64_t (**)(uint64_t, uint64_t))(v4 + 144))(v3, v4) + 16);
  swift_bridgeObjectRelease();
  if (v5)
  {
    uint64_t v6 = a2[3];
    uint64_t v7 = a2[4];
    sub_98C0(a2, v6);
    uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 144))(v6, v7);
    uint64_t v9 = *(void *)(v8 + 16);
    if (!v9)
    {
LABEL_11:
      swift_bridgeObjectRelease();
      return 6;
    }
    uint64_t v10 = (void *)(v8 + 56);
    while (*(v10 - 1) == 0xD00000000000001BLL && *v10 == 0x8000000000095600 || (sub_8EE40() & 1) != 0)
    {
      v10 += 4;
      if (!--v9) {
        goto LABEL_11;
      }
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v12 = a2[3];
  uint64_t v13 = a2[4];
  sub_98C0(a2, v12);
  char v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 40))(v12, v13);
  sub_C940((uint64_t)a2, (uint64_t)v24);
  if (v14)
  {
    uint64_t v15 = v25;
    uint64_t v16 = v26;
    sub_98C0(v24, v25);
    char v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 48))(v15, v16);
    sub_4950((uint64_t)v24);
    if ((v17 & 1) == 0) {
      return 0;
    }
  }
  else
  {
    sub_4950((uint64_t)v24);
  }
  uint64_t v18 = a2[3];
  uint64_t v19 = a2[4];
  sub_98C0(a2, v18);
  if ((*(unsigned __int8 (**)(uint64_t, uint64_t))(v19 + 16))(v18, v19) == 4) {
    return 3;
  }
  uint64_t v20 = a2[3];
  uint64_t v21 = a2[4];
  sub_98C0(a2, v20);
  if ((*(unsigned __int8 (**)(uint64_t, uint64_t))(v21 + 16))(v20, v21) == 5) {
    return 4;
  }
  uint64_t v22 = a2[3];
  uint64_t v23 = a2[4];
  sub_98C0(a2, v22);
  if ((*(unsigned __int8 (**)(uint64_t, uint64_t))(v23 + 16))(v22, v23) == 6) {
    return 5;
  }
  else {
    return 7;
  }
}

uint64_t sub_18F2C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_18F8C()
{
  return v0;
}

uint64_t sub_18FB0@<X0>(uint64_t a1@<X8>)
{
  sub_8E270();
  if (sub_8E260())
  {
    sub_8E240();
    swift_release();
    sub_8D550();
    swift_release();
    uint64_t v2 = 0;
  }
  else
  {
    uint64_t v2 = 1;
  }
  uint64_t v3 = sub_8D230();

  return _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(a1, v2, 1, v3);
}

uint64_t sub_19048()
{
  uint64_t v0 = type metadata accessor for SharedGlobals();
  uint64_t v1 = v0 - 8;
  __chkstk_darwin(v0);
  sub_6FF0();
  uint64_t v28 = v2;
  __chkstk_darwin(v3);
  uint64_t v5 = (uint64_t *)((char *)&v26 - v4);
  uint64_t v30 = &unk_B5928;
  uint64_t v31 = &off_B59C8;
  type metadata accessor for HomeCommunicationFeatureManager();
  uint64_t v6 = swift_allocObject();
  sub_C9A4((uint64_t)v29, (uint64_t)&unk_B5928);
  sub_CB04();
  uint64_t v8 = v7;
  __chkstk_darwin(v9);
  uint64_t v10 = *(void (**)(void))(v8 + 16);
  v10();
  *(void *)(v6 + 40) = &unk_B5928;
  *(void *)(v6 + 48) = &off_B59C8;
  sub_4950((uint64_t)v29);
  unsigned int v27 = [self isAnnounceEnabled];
  uint64_t v30 = &unk_B5928;
  uint64_t v31 = &off_B59C8;
  uint64_t v11 = swift_allocObject();
  uint64_t v12 = sub_C9A4((uint64_t)v29, (uint64_t)&unk_B5928);
  __chkstk_darwin(v12);
  v10();
  *(void *)(v11 + 40) = &unk_B5928;
  *(void *)(v11 + 48) = &off_B59C8;
  sub_4950((uint64_t)v29);
  uint64_t v13 = type metadata accessor for SKFlowFactory();
  uint64_t v14 = sub_1CD10();
  v5[5] = v13;
  v5[6] = (uint64_t)&off_B6DE8;
  v5[2] = v14;
  sub_18FB0((uint64_t)v5 + *(int *)(v1 + 36));
  uint64_t v15 = type metadata accessor for RadarUtils();
  uint64_t v16 = swift_allocObject();
  sub_8E330();
  swift_allocObject();
  *(void *)(v16 + 16) = sub_8E320();
  char v17 = (uint64_t *)((char *)v5 + *(int *)(v1 + 40));
  v17[3] = v15;
  v17[4] = (uint64_t)&off_B65B0;
  *char v17 = v16;
  sub_8E610();
  uint64_t v18 = sub_8E600();
  *uint64_t v5 = v11;
  type metadata accessor for DirectInvocationTransformer();
  uint64_t v19 = sub_1CD10();
  type metadata accessor for NLTransformer();
  uint64_t v20 = swift_allocObject();
  uint64_t v21 = swift_retain();
  v5[1] = sub_1BF7C(v21, v18, v19, v20);
  type metadata accessor for CATBundleRegisterer();
  uint64_t v22 = sub_1CD10();
  uint64_t v23 = v28;
  sub_18BF0((uint64_t)v5, v28);
  uint64_t v24 = sub_1BD84(v6, v27, v23, v22);
  sub_1C83C((uint64_t)v5, (void (*)(void))type metadata accessor for SharedGlobals);
  return v24;
}

uint64_t sub_19364@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  sub_8D8B0();
  sub_CB04();
  uint64_t v7 = v6;
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  if (qword_BB830 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_8E730();
  uint64_t v13 = sub_50FC(v12, (uint64_t)qword_BFEC8);
  uint64_t v14 = *(void (**)(void))(v7 + 16);
  uint64_t v36 = a1;
  sub_1CC24();
  v14();
  uint64_t v35 = v13;
  uint64_t v15 = sub_8E710();
  os_log_type_t v16 = sub_8EB00();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = sub_1CBDC();
    uint64_t v33 = v3;
    uint64_t v18 = (uint8_t *)v17;
    uint64_t v32 = sub_1CC0C();
    uint64_t v38 = v32;
    uint64_t v34 = a2;
    *(_DWORD *)uint64_t v18 = 136315138;
    uint64_t v31 = v18 + 4;
    sub_1CC24();
    v14();
    uint64_t v19 = sub_72D0C((uint64_t)v11);
    uint64_t v37 = sub_8758C(v19, v20, &v38);
    sub_8EBD0();
    swift_bridgeObjectRelease();
    uint64_t v21 = sub_1CD28();
    v22(v21);
    _os_log_impl(&dword_0, v15, v16, "#HomeCommunicationFlowDelegatePlugin executing findFlowForX with parse: %s", v18, 0xCu);
    swift_arrayDestroy();
    sub_CC2C();
    sub_CC2C();
  }
  else
  {
    uint64_t v23 = sub_1CD28();
    v24(v23);
  }

  if (sub_19624(v36))
  {
    sub_8CE50();
    return swift_release();
  }
  else
  {
    uint64_t v26 = (void *)sub_8E710();
    os_log_type_t v27 = sub_8EB10();
    if (sub_1CAE4(v27))
    {
      uint64_t v28 = (_WORD *)sub_CCE4();
      sub_1CC78(v28);
      sub_CC2C();
    }

    return sub_8CE40();
  }
}

uint64_t sub_19624(uint64_t a1)
{
  uint64_t v2 = sub_8D890();
  sub_CB04();
  uint64_t v304 = v3;
  __chkstk_darwin(v4);
  sub_6FF0();
  sub_1CCC8();
  __chkstk_darwin(v5);
  sub_1CDE8((uint64_t)&v294 - v6);
  uint64_t v7 = sub_48AC(&qword_BCD80);
  uint64_t v8 = sub_1CCBC(v7);
  __chkstk_darwin(v8);
  sub_1CA70();
  sub_1CDE8(v9);
  uint64_t v10 = sub_48AC(&qword_BCD88);
  uint64_t v11 = sub_1CCBC(v10);
  __chkstk_darwin(v11);
  sub_1CA70();
  sub_1CDE8(v12);
  uint64_t v13 = sub_48AC(&qword_BCD90);
  uint64_t v14 = sub_1CCBC(v13);
  __chkstk_darwin(v14);
  sub_1CA70();
  sub_1CDE8(v15);
  uint64_t v16 = sub_48AC(&qword_BCD98);
  uint64_t v17 = sub_1CCBC(v16);
  __chkstk_darwin(v17);
  sub_1CA70();
  sub_1CBCC(v18);
  uint64_t v19 = sub_8E460();
  uint64_t v20 = sub_1CCBC(v19);
  __chkstk_darwin(v20);
  sub_1CA70();
  uint64_t v320 = v21;
  uint64_t v302 = sub_8E3D0();
  sub_CB04();
  uint64_t v322 = v22;
  __chkstk_darwin(v23);
  sub_1CA70();
  sub_1CBCC(v24);
  uint64_t v309 = type metadata accessor for SmsNLIntent();
  sub_16058();
  __chkstk_darwin(v25);
  sub_6FF0();
  sub_1CCC8();
  __chkstk_darwin(v26);
  sub_1CBCC((uint64_t)&v294 - v27);
  uint64_t v314 = sub_8E1C0();
  sub_CB04();
  uint64_t v29 = v28;
  __chkstk_darwin(v30);
  sub_6FF0();
  sub_1CCC8();
  __chkstk_darwin(v31);
  sub_1CBCC((uint64_t)&v294 - v32);
  uint64_t v306 = sub_8D860();
  sub_CB04();
  uint64_t v305 = v33;
  __chkstk_darwin(v34);
  sub_1CA70();
  uint64_t v316 = v35;
  uint64_t v36 = sub_8D8B0();
  sub_CB04();
  uint64_t v38 = v37;
  uint64_t v40 = __chkstk_darwin(v39);
  char v42 = (char *)&v294 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = __chkstk_darwin(v40);
  uint64_t v45 = (uint8_t *)&v294 - v44;
  uint64_t v46 = __chkstk_darwin(v43);
  v323 = (char *)&v294 - v47;
  __chkstk_darwin(v46);
  if (qword_BB830 != -1) {
    swift_once();
  }
  v321 = v45;
  v298 = v42;
  uint64_t v312 = v2;
  uint64_t v48 = sub_8E730();
  uint64_t v49 = (uint8_t *)sub_50FC(v48, (uint64_t)qword_BFEC8);
  uint64_t v50 = *(void (**)(void))(v38 + 16);
  sub_1CCF4();
  v50();
  v325 = v49;
  uint64_t v51 = sub_8E710();
  os_log_type_t v52 = sub_8EB00();
  os_log_t v324 = v51;
  BOOL v53 = os_log_type_enabled(v51, v52);
  uint64_t v317 = v29;
  v318 = v50;
  uint64_t v319 = v38 + 16;
  if (v53)
  {
    uint64_t v54 = sub_1CBDC();
    uint64_t v313 = a1;
    uint64_t v55 = (uint8_t *)v54;
    v295 = (unint64_t *)sub_1CC0C();
    v330 = v295;
    *(_DWORD *)uint64_t v55 = 136315138;
    uint64_t v56 = (uint64_t)v323;
    sub_1CCF4();
    v50();
    uint64_t v57 = sub_72D0C(v56);
    uint64_t v59 = sub_8758C(v57, v58, (uint64_t *)&v330);
    sub_1CB9C(v59);
    sub_8EBD0();
    uint64_t v60 = v326;
    swift_bridgeObjectRelease();
    id v61 = *(void (**)(void))(v38 + 8);
    sub_1CB7C();
    v61();
    os_log_t v62 = v324;
    _os_log_impl(&dword_0, v324, v52, "#HomeCommunicationFlowDelegatePlugin Executing makeFlowFor with parse: %s", v55, 0xCu);
    swift_arrayDestroy();
    sub_CC2C();
    uint64_t v63 = v313;
    sub_CC2C();

    char v64 = v36;
  }
  else
  {
    uint64_t v63 = a1;
    id v61 = *(void (**)(void))(v38 + 8);
    sub_1CB7C();
    v61();

    char v64 = v36;
    uint64_t v60 = v326;
  }
  if (*((unsigned char *)v60 + 16) != 1)
  {
    uint64_t v81 = v325;
    v82 = (void *)sub_8E710();
    os_log_type_t v83 = sub_8EB00();
    if (sub_1CAE4(v83))
    {
      uint64_t v84 = (_WORD *)sub_CCE4();
      sub_1CC78(v84);
      sub_1CA90(&dword_0, v85, v86, "The entire Home Communication feature is disabled.");
      sub_CC2C();
    }

    sub_C940((uint64_t)(v60 + 4), (uint64_t)&v330);
    type metadata accessor for HomeCommunicationCATsSimple();
    sub_1CBB0();
    uint64_t v87 = sub_1CAB0();
    sub_1CC48(v87);
    sub_1CB1C();
    uint64_t v88 = sub_1CAB0();
    sub_1CC30(v88);
    sub_1CB1C();
    uint64_t v89 = sub_1CAB0();
    type metadata accessor for SkipAnnouncementCATsSimple();
    sub_1CB1C();
    sub_1CAB0();
    sub_1CD88();
    sub_CB04();
    __chkstk_darwin(v90);
    os_log_type_t v92 = sub_1CA18(v91, v294);
    v93(v92);
    uint64_t v94 = type metadata accessor for SharedGlobals();
    uint64_t v328 = v94;
    v329 = &off_B6D60;
    uint64_t v95 = sub_C9F4((uint64_t *)&v327);
    sub_CA58((uint64_t)v61, (uint64_t)v95);
    type metadata accessor for UnsupportedDialogFlow();
    uint64_t v96 = (uint64_t *)sub_1CB4C();
    sub_C9A4((uint64_t)&v327, v328);
    sub_CB04();
    __chkstk_darwin(v97);
    uint64_t v99 = (char *)&v294 - ((v98 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_1CA84();
    v100();
    v96[6] = v94;
    v96[7] = (uint64_t)&off_B6D60;
    uint64_t v101 = sub_C9F4(v96 + 3);
    sub_CA58((uint64_t)v99, (uint64_t)v101);
    v96[2] = 0;
    uint64_t v102 = v325;
    v96[8] = (uint64_t)v326;
    v96[9] = (uint64_t)v102;
    v96[10] = v89;
    v96[11] = (uint64_t)v81;
    sub_4950((uint64_t)&v327);
    sub_4950((uint64_t)&v330);
    v330 = (unint64_t *)v96;
    sub_1C7F4(&qword_BCDA0, 255, (void (*)(uint64_t))type metadata accessor for UnsupportedDialogFlow);
    uint64_t v80 = sub_1CCA0();
    goto LABEL_15;
  }
  os_log_type_t v65 = v321;
  uint64_t v66 = v318;
  sub_1CC24();
  v66();
  int v67 = (*(uint64_t (**)(uint8_t *, NSObject *))(v38 + 88))(v65, v64);
  if (v67 == enum case for Parse.NLv3IntentOnly(_:))
  {
    ((void (*)(uint8_t *, NSObject *))v61)(v65, v64);
LABEL_9:
    uint64_t v68 = v325;
    uint64_t v69 = (void *)sub_8E710();
    os_log_type_t v70 = sub_8EB00();
    if (sub_1CAE4(v70))
    {
      uint64_t v71 = (_WORD *)sub_CCE4();
      sub_1CC78(v71);
      sub_1CA90(&dword_0, v72, v73, "#HomeCommunicationFlowDelegatePlugin NLv3/NLv4/USO");
      sub_CC2C();
    }

    sub_1CC24();
    v66();
    uint64_t v74 = v316;
    sub_8D850();
    sub_C940((uint64_t)(v60 + 4), (uint64_t)&v330);
    sub_8CEB0();
    sub_1CCD8();
    sub_CB04();
    __chkstk_darwin(v75);
    uint64_t v77 = sub_1CA44(v76, v294);
    v78(v77);
    uint64_t v79 = (unint64_t *)sub_1C428(v74, (uint64_t)v68, &v327);
    sub_4950((uint64_t)&v330);
    v330 = v79;
    type metadata accessor for HomeCommunicationFlow();
    sub_1C7F4(&qword_BCCA8, 255, (void (*)(uint64_t))type metadata accessor for HomeCommunicationFlow);
    uint64_t v80 = sub_1CB00();
LABEL_15:
    swift_release();
    return v80;
  }
  int v104 = v67;
  if (v67 == enum case for Parse.NLv3IntentPlusServerConversion(_:))
  {
    uint64_t v105 = v321;
    (*(void (**)(uint8_t *, NSObject *))(v38 + 96))(v321, v64);
    uint64_t v106 = sub_48AC(&qword_BCDA8);
    uint64_t v107 = v105;
    v108 = (uint64_t *)v314;
    uint64_t v109 = *(NSObject **)&v105[*(int *)(v106 + 48)];
    (*(void (**)(uint64_t, uint8_t *, uint64_t))(v317 + 32))(v315, v107, v314);
    os_log_t v324 = v109;
    uint64_t v110 = (char *)sub_8D8A0();
    self;
    if (sub_1CD50())
    {
      v323 = v110;
      char v111 = *(void (**)(void))(v317 + 16);
      uint64_t v112 = v307;
      sub_1CCF4();
      v111();
      uint64_t v113 = sub_8E710();
      uint64_t v114 = v108;
      os_log_type_t v115 = sub_8EB00();
      if (os_log_type_enabled(v113, v115))
      {
        uint64_t v116 = (uint8_t *)sub_1CBDC();
        v330 = (unint64_t *)sub_1CC0C();
        *(_DWORD *)uint64_t v116 = 136315138;
        v321 = v116 + 4;
        sub_1C7F4(&qword_BCE18, 255, (void (*)(uint64_t))&type metadata accessor for NLIntent);
        uint64_t v117 = sub_8EE20();
        uint64_t v119 = sub_8758C(v117, v118, (uint64_t *)&v330);
        sub_1CB9C(v119);
        sub_8EBD0();
        swift_bridgeObjectRelease();
        v120 = *(void (**)(void))(v317 + 8);
        sub_1CB7C();
        v121();
        _os_log_impl(&dword_0, v113, v115, "NL intent: %s", v116, 0xCu);
        swift_arrayDestroy();
        sub_CC2C();
        sub_CC2C();
      }
      else
      {
        v120 = *(void (**)(void))(v317 + 8);
        ((void (*)(uint64_t, uint64_t *))v120)(v112, v114);
      }

      v108 = v310;
      uint64_t v142 = v308;
      sub_1CB68();
      v111();
      BOOL v143 = sub_73D78();
      sub_1C83C(v142, (void (*)(void))type metadata accessor for SmsNLIntent);
      if (v143)
      {
        sub_1CB68();
        v111();
        if (qword_BB8E0 != -1) {
          swift_once();
        }
        sub_1C7F4(&qword_BCDF0, 255, (void (*)(uint64_t))type metadata accessor for SmsNLIntent);
        uint64_t v144 = sub_8DF70();
        sub_1C83C(v142, (void (*)(void))type metadata accessor for SmsNLIntent);
        int64_t v145 = *(void *)(v144 + 16);
        uint64_t v146 = v302;
        if (v145)
        {
          v330 = (unint64_t *)&_swiftEmptyArrayStorage;
          sub_57B3C(0, v145, 0);
          v147 = v330;
          uint64_t v148 = v144 + 40;
          do
          {
            swift_bridgeObjectRetain();
            sub_8E3A0();
            v330 = v147;
            unint64_t v150 = v147[2];
            unint64_t v149 = v147[3];
            if (v150 >= v149 >> 1)
            {
              sub_57B3C(v149 > 1, v150 + 1, 1);
              v147 = v330;
            }
            v148 += 16;
            v147[2] = v150 + 1;
            (*(void (**)(unint64_t, uint64_t *, uint64_t))(v322 + 32))((unint64_t)v147+ ((*(unsigned __int8 *)(v322 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v322 + 80))+ *(void *)(v322 + 72) * v150, v108, v146);
            --v145;
          }
          while (v145);
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRelease();
          v147 = (unint64_t *)&_swiftEmptyArrayStorage;
        }
        swift_bridgeObjectRetain_n();
        v241 = sub_8E710();
        os_log_type_t v242 = sub_8EB00();
        if (os_log_type_enabled(v241, v242))
        {
          v243 = (uint8_t *)sub_1CBDC();
          v330 = (unint64_t *)sub_1CC0C();
          *(_DWORD *)v243 = 136315138;
          swift_bridgeObjectRetain();
          uint64_t v244 = sub_8EA40();
          unint64_t v246 = v245;
          swift_bridgeObjectRelease();
          uint64_t v247 = sub_8758C(v244, v246, (uint64_t *)&v330);
          sub_1CC60(v247);
          sub_8EBD0();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_0, v241, v242, "Non-existing targets - %s, cannot receive announcements.", v243, 0xCu);
          swift_arrayDestroy();
          sub_CC2C();
          sub_CC2C();
        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        sub_1CAC8();
        type metadata accessor for HomeCommunicationCATsSimple();
        sub_8E450();
        uint64_t v248 = sub_1CB34();
        sub_1CC48(v248);
        sub_1CBF4();
        uint64_t v249 = sub_1CB34();
        sub_1CC30(v249);
        sub_1CBF4();
        uint64_t v322 = sub_1CB34();
        type metadata accessor for SkipAnnouncementCATsSimple();
        sub_1CBF4();
        uint64_t v250 = sub_1CB34();
        sub_C9A4((uint64_t)&v330, v331);
        sub_CB04();
        __chkstk_darwin(v251);
        sub_AAA8();
        uint64_t v254 = v253 - v252;
        sub_1CA84();
        v255();
        uint64_t v256 = type metadata accessor for SharedGlobals();
        uint64_t v328 = v256;
        v329 = &off_B6D60;
        v257 = sub_C9F4((uint64_t *)&v327);
        sub_CA58(v254, (uint64_t)v257);
        type metadata accessor for UnsupportedDialogFlow();
        v258 = (uint64_t *)swift_allocObject();
        sub_C9A4((uint64_t)&v327, v328);
        sub_CB04();
        __chkstk_darwin(v259);
        v261 = (char *)&v294 - ((v260 + 15) & 0xFFFFFFFFFFFFFFF0);
        sub_1CA84();
        v262();
        v258[6] = v256;
        v258[7] = (uint64_t)&off_B6D60;
        v263 = sub_C9F4(v258 + 3);
        sub_CA58((uint64_t)v261, (uint64_t)v263);
        v258[2] = (uint64_t)v147;
        v264 = v325;
        v258[8] = (uint64_t)v326;
        v258[9] = (uint64_t)v264;
        v258[10] = v322;
        v258[11] = v250;
        sub_4950((uint64_t)&v327);
        sub_4950((uint64_t)&v330);
        v330 = (unint64_t *)v258;
        sub_1C7F4(&qword_BCDA0, 255, (void (*)(uint64_t))type metadata accessor for UnsupportedDialogFlow);
        uint64_t v80 = sub_8CDF0();
        goto LABEL_65;
      }
      uint64_t v151 = v300;
      sub_1CB68();
      v111();
      if (qword_BB8B8 != -1) {
        swift_once();
      }
      sub_1C7F4(&qword_BCDF0, 255, (void (*)(uint64_t))type metadata accessor for SmsNLIntent);
      uint64_t v152 = v301;
      sub_8DF40();
      uint64_t v153 = sub_8DF80();
      int v154 = _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0(v152, 1, v153);
      sub_1C9C8(v152, &qword_BCD98);
      sub_1C83C(v151, (void (*)(void))type metadata accessor for SmsNLIntent);
      if (v154 == 1)
      {
        sub_1CAC8();
        sub_8D8C0();
        sub_1CCD8();
        sub_CB04();
        __chkstk_darwin(v155);
        uint64_t v157 = sub_1CA44(v156, v294);
        v158(v157);
        sub_1C564((uint64_t)&v327, v151, 0);
        sub_4950((uint64_t)&v330);
        uint64_t v159 = sub_48AC(&qword_BCDF8);
        uint64_t v160 = v299;
        sub_1CDA8(v299, v161, v162, v159);
        type metadata accessor for SendAnnouncementRCHFlowDelegate();
        sub_1C7F4(&qword_BCE00, 255, (void (*)(uint64_t))type metadata accessor for SendAnnouncementRCHFlowDelegate);
        uint64_t v163 = (unint64_t *)sub_8D380();
        swift_release();
        sub_1C9C8(v160, &qword_BCD90);
        v330 = v163;
        sub_48AC(&qword_BCE08);
        sub_1C7A4(&qword_BCE10, &qword_BCE08);
        uint64_t v80 = sub_1CB00();
        swift_release();

        swift_release();
        sub_1CB7C();
        v120();
        return v80;
      }
      uint64_t v190 = v325;
      uint64_t v191 = (void *)sub_8E710();
      os_log_type_t v192 = sub_8EB00();
      if (sub_1CAE4(v192))
      {
        v193 = (_WORD *)sub_CCE4();
        sub_1CC78(v193);
        sub_1CA90(&dword_0, v194, v195, "Announcing to a contact or relationship isn't supported.");
        sub_CC2C();
      }

      sub_1CAC8();
      type metadata accessor for HomeCommunicationCATsSimple();
      sub_1CBB0();
      uint64_t v196 = sub_1CAB0();
      sub_1CC48(v196);
      sub_1CB1C();
      uint64_t v197 = sub_1CAB0();
      sub_1CC30(v197);
      sub_1CB1C();
      uint64_t v198 = sub_1CAB0();
      type metadata accessor for SkipAnnouncementCATsSimple();
      sub_1CB1C();
      sub_1CAB0();
      sub_1CD68();
      sub_CB04();
      __chkstk_darwin(v199);
      v201 = (char *)&v294 - ((v200 + 15) & 0xFFFFFFFFFFFFFFF0);
      sub_1CA84();
      v202();
      uint64_t v203 = type metadata accessor for SharedGlobals();
      uint64_t v328 = v203;
      v329 = &off_B6D60;
      v204 = sub_C9F4((uint64_t *)&v327);
      sub_CA58((uint64_t)v201, (uint64_t)v204);
      type metadata accessor for UnsupportedDialogFlow();
      sub_1CB4C();
      sub_1CDF4();
      sub_CB04();
      __chkstk_darwin(v205);
      v207 = (char *)&v294 - ((v206 + 15) & 0xFFFFFFFFFFFFFFF0);
      sub_1CA84();
      v208();
      v108[6] = v203;
      v108[7] = (uint64_t)&off_B6D60;
      v209 = sub_C9F4(v108 + 3);
      sub_CA58((uint64_t)v207, (uint64_t)v209);
      uint64_t v210 = 1;
LABEL_53:
      sub_1CD3C(v210);
      v108[10] = v198;
      v108[11] = (uint64_t)v190;
      sub_4950((uint64_t)&v327);
      sub_4950((uint64_t)&v330);
      v330 = (unint64_t *)v108;
      sub_1C7F4(&qword_BCDA0, 255, (void (*)(uint64_t))type metadata accessor for UnsupportedDialogFlow);
      uint64_t v80 = sub_1CCA0();
LABEL_65:
      swift_release();

LABEL_66:
      swift_release();
      sub_1CB88();
      goto LABEL_71;
    }
    self;
    uint64_t v135 = sub_1CD50();
    if (v135)
    {
      uint64_t v136 = (void *)v135;
      v137 = v110;
      if ([v136 userNotificationType] == (char *)&dword_0 + 2)
      {
        v138 = (void *)sub_8E710();
        os_log_type_t v139 = sub_8EB10();
        if (sub_1CC84(v139))
        {
          *(_WORD *)sub_CCE4() = 0;
          sub_1CDC8(&dword_0, v140, v141, "Delivery failure occurred while attempting to read announcements on airpods.");
          sub_CC2C();
        }

        type metadata accessor for BaseFlow();
        v330 = (unint64_t *)sub_1CD10();
        sub_1C7F4((unint64_t *)&qword_BC0B0, 255, (void (*)(uint64_t))type metadata accessor for BaseFlow);
        uint64_t v80 = sub_1CB00();
      }
      else
      {
        if ([v136 readType] == (char *)&dword_0 + 2)
        {
          v220 = (void *)sub_8E710();
          os_log_type_t v221 = sub_8EB00();
          if (sub_1CC84(v221))
          {
            *(_WORD *)sub_CCE4() = 0;
            sub_1CDC8(&dword_0, v222, v223, "Repeating announcements isn't supported.");
            sub_CC2C();
          }

          sub_1CAC8();
          uint64_t v224 = type metadata accessor for HomeCommunicationCATsSimple();
          sub_8E450();
          uint64_t v225 = sub_1CB34();
          sub_1CC48(v225);
          sub_1CBF4();
          uint64_t v226 = sub_1CB34();
          sub_1CC30(v226);
          sub_1CBF4();
          v323 = (char *)sub_1CB34();
          type metadata accessor for SkipAnnouncementCATsSimple();
          sub_1CBF4();
          sub_1CB34();
          sub_1CD88();
          sub_CB04();
          __chkstk_darwin(v227);
          sub_AAA8();
          uint64_t v230 = v229 - v228;
          sub_1CA84();
          v231();
          uint64_t v232 = type metadata accessor for SharedGlobals();
          uint64_t v328 = v232;
          v329 = &off_B6D60;
          v233 = sub_C9F4((uint64_t *)&v327);
          sub_CA58(v230, (uint64_t)v233);
          type metadata accessor for UnsupportedDialogFlow();
          v234 = (uint64_t *)sub_1CB4C();
          sub_C9A4((uint64_t)&v327, v328);
          sub_CB04();
          __chkstk_darwin(v235);
          sub_AAA8();
          uint64_t v238 = v237 - v236;
          sub_1CA84();
          v239();
          v234[6] = v232;
          v234[7] = (uint64_t)&off_B6D60;
          v240 = sub_C9F4(v234 + 3);
          sub_CA58(v238, (uint64_t)v240);
          sub_1CD3C(2);
          v234[10] = (uint64_t)v323;
          v234[11] = v224;
          sub_4950((uint64_t)&v327);
          sub_4950((uint64_t)&v330);
          v330 = (unint64_t *)v234;
          sub_1C7F4(&qword_BCDA0, 255, (void (*)(uint64_t))type metadata accessor for UnsupportedDialogFlow);
          uint64_t v80 = sub_1CCA0();
          swift_release();

          goto LABEL_66;
        }
        sub_1CAC8();
        sub_8D8C0();
        sub_C9A4((uint64_t)&v330, v331);
        sub_CB04();
        __chkstk_darwin(v265);
        v267 = (char *)&v294 - ((v266 + 15) & 0xFFFFFFFFFFFFFFF0);
        sub_1CA84();
        v268();
        sub_1C6A0((uint64_t)&v327, (uint64_t)v267, (void (*)(void))type metadata accessor for ReadAnnouncementRCHFlowDelegate, &qword_BE058, &qword_BE060);
        sub_4950((uint64_t)&v330);
        uint64_t v269 = sub_48AC(&qword_BCDD0);
        uint64_t v270 = v296;
        sub_1CDA8(v296, v271, v272, v269);
        type metadata accessor for ReadAnnouncementRCHFlowDelegate();
        sub_1C7F4(&qword_BCDD8, 255, (void (*)(uint64_t))type metadata accessor for ReadAnnouncementRCHFlowDelegate);
        v273 = (unint64_t *)sub_8D380();
        swift_release();
        sub_1C9C8(v270, &qword_BCD88);
        v330 = v273;
        sub_48AC(&qword_BCDE0);
        sub_1C7A4(&qword_BCDE8, &qword_BCDE0);
        uint64_t v80 = sub_8CDF0();
      }
      swift_release();

      swift_release();
      goto LABEL_71;
    }
    self;
    if (sub_1CD50())
    {
      sub_1CAC8();
      sub_8D8C0();
      sub_1CCD8();
      sub_CB04();
      __chkstk_darwin(v211);
      v213 = sub_1CA44(v212, v294);
      v214(v213);
      sub_1C6A0((uint64_t)&v327, (uint64_t)v109, (void (*)(void))type metadata accessor for StopAnnouncementRCHFlowDelegate, &qword_BF890, &qword_BF898);
      sub_4950((uint64_t)&v330);
      uint64_t v215 = sub_48AC(&qword_BCDB0);
      uint64_t v216 = v297;
      sub_1CDA8(v297, v217, v218, v215);
      type metadata accessor for StopAnnouncementRCHFlowDelegate();
      sub_1C7F4(&qword_BCDB8, 255, (void (*)(uint64_t))type metadata accessor for StopAnnouncementRCHFlowDelegate);
      v219 = (unint64_t *)sub_8D380();
      swift_release();
      sub_1C9C8(v216, &qword_BCD80);
      v330 = v219;
      sub_48AC(&qword_BCDC0);
      sub_1C7A4(&qword_BCDC8, &qword_BCDC0);
      uint64_t v80 = sub_1CB00();
      swift_release();

      swift_release();
      sub_1CB88();
LABEL_71:
      sub_1CD04();
      v274();
      return v80;
    }
    self;
    if (sub_1CD50())
    {
      v323 = v110;
      uint64_t v190 = v325;
      v275 = (void *)sub_8E710();
      os_log_type_t v276 = sub_8EB00();
      if (sub_1CAE4(v276))
      {
        v277 = (_WORD *)sub_CCE4();
        sub_1CC78(v277);
        sub_1CA90(&dword_0, v278, v279, "Skipping announcements isn't supported.");
        sub_CC2C();
      }

      sub_1CAC8();
      type metadata accessor for HomeCommunicationCATsSimple();
      sub_1CBB0();
      uint64_t v280 = sub_1CAB0();
      sub_1CC48(v280);
      sub_1CB1C();
      uint64_t v281 = sub_1CAB0();
      sub_1CC30(v281);
      sub_1CB1C();
      uint64_t v198 = sub_1CAB0();
      type metadata accessor for SkipAnnouncementCATsSimple();
      sub_1CB1C();
      sub_1CAB0();
      sub_1CD68();
      sub_CB04();
      __chkstk_darwin(v282);
      v284 = (char *)&v294 - ((v283 + 15) & 0xFFFFFFFFFFFFFFF0);
      sub_1CA84();
      v285();
      uint64_t v286 = type metadata accessor for SharedGlobals();
      uint64_t v328 = v286;
      v329 = &off_B6D60;
      v287 = sub_C9F4((uint64_t *)&v327);
      sub_CA58((uint64_t)v284, (uint64_t)v287);
      type metadata accessor for UnsupportedDialogFlow();
      sub_1CB4C();
      sub_1CDF4();
      sub_CB04();
      __chkstk_darwin(v288);
      v290 = (char *)&v294 - ((v289 + 15) & 0xFFFFFFFFFFFFFFF0);
      sub_1CA84();
      v291();
      v108[6] = v286;
      v108[7] = (uint64_t)&off_B6D60;
      v292 = sub_C9F4(v108 + 3);
      sub_CA58((uint64_t)v290, (uint64_t)v292);
      uint64_t v210 = 3;
      goto LABEL_53;
    }

    swift_release();
    sub_1CB88();
    sub_1CD04();
    v293();
    goto LABEL_48;
  }
  if (v67 != enum case for Parse.directInvocation(_:))
  {
    if (v67 == enum case for Parse.NLv4IntentOnly(_:))
    {
      (*(void (**)(uint8_t *, NSObject *))(v38 + 96))(v321, v64);
      swift_unknownObjectRelease();
      goto LABEL_9;
    }
    uint64_t v179 = v60;
    int v180 = enum case for Parse.uso(_:);
    sub_1CB7C();
    v61();
    BOOL v181 = v104 == v180;
    uint64_t v60 = v179;
    if (v181) {
      goto LABEL_9;
    }
LABEL_48:
    v182 = v298;
    sub_1CC24();
    v66();
    v183 = sub_8E710();
    os_log_type_t v184 = sub_8EB10();
    if (sub_1CC84(v184))
    {
      uint64_t v185 = (uint8_t *)sub_1CBDC();
      v326 = (uint64_t *)sub_1CC0C();
      v330 = (unint64_t *)v326;
      v325 = v185;
      *(_DWORD *)uint64_t v185 = 136315138;
      uint64_t v186 = (uint64_t)v323;
      ((void (*)(char *, char *, NSObject *))v66)(v323, v182, v64);
      uint64_t v187 = sub_72D0C(v186);
      uint64_t v189 = sub_8758C(v187, v188, (uint64_t *)&v330);
      sub_1CB9C(v189);
      sub_8EBD0();
      swift_bridgeObjectRelease();
      sub_1CB7C();
      v61();
      _os_log_impl(&dword_0, v183, (os_log_type_t)v66, "#HomeCommunicationFlowDelegatePlugin unsupportedParse %s", v325, 0xCu);
      swift_arrayDestroy();
      sub_CC2C();
      sub_CC2C();
    }
    else
    {
      ((void (*)(char *, NSObject *))v61)(v182, v64);
    }

    return 0;
  }
  uint64_t v313 = v63;
  uint64_t v122 = *(void (**)(uint8_t *, NSObject *))(v38 + 96);
  v123 = v321;
  os_log_t v324 = v64;
  v122(v321, v64);
  uint64_t v124 = v304;
  uint64_t v125 = v311;
  uint64_t v126 = v312;
  (*(void (**)(uint64_t, uint8_t *, uint64_t))(v304 + 32))(v311, v123, v312);
  uint64_t v127 = v303;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v124 + 16))(v303, v125, v126);
  uint64_t v128 = sub_8E710();
  os_log_type_t v129 = sub_8EB00();
  if (os_log_type_enabled(v128, v129))
  {
    uint64_t v130 = (uint8_t *)sub_1CBDC();
    v330 = (unint64_t *)sub_1CC0C();
    *(_DWORD *)uint64_t v130 = 136315138;
    uint64_t v131 = sub_8D870();
    uint64_t v133 = sub_8758C(v131, v132, (uint64_t *)&v330);
    sub_1CC60(v133);
    uint64_t v60 = v326;
    sub_8EBD0();
    swift_bridgeObjectRelease();
    v325 = *(uint8_t **)(v124 + 8);
    sub_1CB7C();
    v134();
    _os_log_impl(&dword_0, v128, v129, "#HomeCommunicationFlowDelegatePlugin pushing DirectInvocationHomeCommunicationFlow for DI with id=%s", v130, 0xCu);
    swift_arrayDestroy();
    sub_CC2C();
    uint64_t v66 = v318;
    sub_CC2C();
  }
  else
  {
    v325 = *(uint8_t **)(v124 + 8);
    ((void (*)(uint64_t, uint64_t))v325)(v127, v126);
  }

  ((void (*)(char *, uint64_t, os_log_t))v66)(v323, v313, v324);
  uint64_t v164 = v316;
  sub_8D850();
  sub_C940((uint64_t)(v60 + 4), (uint64_t)&v330);
  type metadata accessor for SendAnnouncementCATsSimple();
  sub_1CBB0();
  uint64_t v165 = sub_1CAB0();
  sub_C9A4((uint64_t)&v330, v331);
  v326 = &v294;
  sub_CB04();
  __chkstk_darwin(v166);
  uint64_t v168 = (char *)&v294 - ((v167 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1CA84();
  v169();
  uint64_t v170 = type metadata accessor for SharedGlobals();
  uint64_t v328 = v170;
  v329 = &off_B6D60;
  uint64_t v171 = sub_C9F4((uint64_t *)&v327);
  sub_CA58((uint64_t)v168, (uint64_t)v171);
  type metadata accessor for DirectInvocationHomeCommunicationFlow();
  uint64_t v172 = (char *)swift_allocObject();
  sub_C9A4((uint64_t)&v327, v328);
  sub_CB04();
  __chkstk_darwin(v173);
  v175 = sub_1CA18(v174, v294);
  v176(v175);
  uint64_t v177 = (uint64_t *)&v172[OBJC_IVAR____TtC35HomeCommunicationFlowDelegatePlugin37DirectInvocationHomeCommunicationFlow_sharedGlobals];
  v177[3] = v170;
  v177[4] = (uint64_t)&off_B6D60;
  v178 = sub_C9F4(v177);
  sub_CA58(v126, (uint64_t)v178);
  (*(void (**)(char *, uint64_t, uint64_t))(v305 + 32))(&v172[OBJC_IVAR____TtC35HomeCommunicationFlowDelegatePlugin37DirectInvocationHomeCommunicationFlow_input], v164, v306);
  *(void *)&v172[OBJC_IVAR____TtC35HomeCommunicationFlowDelegatePlugin37DirectInvocationHomeCommunicationFlow_sendAnnouncementCATsSimple] = v165;
  sub_4950((uint64_t)&v327);
  sub_4950((uint64_t)&v330);
  v330 = (unint64_t *)v172;
  sub_1C7F4(&qword_BC448, 255, (void (*)(uint64_t))type metadata accessor for DirectInvocationHomeCommunicationFlow);
  uint64_t v80 = sub_1CB00();
  swift_release();
  ((void (*)(uint64_t, uint64_t))v325)(v311, v312);
  return v80;
}

uint64_t sub_1B99C()
{
  swift_release();
  sub_4950(v0 + 32);

  return _swift_deallocClassInstance(v0, 72, 7);
}

uint64_t type metadata accessor for HomeCommunicationFlowDelegatePlugin()
{
  return self;
}

uint64_t sub_1BA00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_19364(a1, a2);
}

uint64_t sub_1BA24@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_19048();
  *a1 = result;
  return result;
}

uint64_t sub_1BA60(uint64_t a1, uint64_t a2)
{
  return sub_1C7F4(&qword_BCD78, a2, (void (*)(uint64_t))type metadata accessor for HomeCommunicationFlowDelegatePlugin);
}

uint64_t sub_1BAA8(uint64_t a1, uint64_t a2, long long *a3, uint64_t a4)
{
  uint64_t v17 = type metadata accessor for SharedGlobals();
  uint64_t v18 = &off_B6D60;
  uint64_t v8 = sub_C9F4((uint64_t *)&v16);
  sub_CA58(a2, (uint64_t)v8);
  *(void *)(a4 + 56) = &_swiftEmptyArrayStorage;
  if (qword_BB830 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_8E730();
  sub_50FC(v9, (uint64_t)qword_BFEC8);
  uint64_t v10 = sub_8E710();
  os_log_type_t v11 = sub_8EB00();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v12 = 0;
    _os_log_impl(&dword_0, v10, v11, "#HomeCommunicationFlow state is initialized.", v12, 2u);
    swift_slowDealloc();
  }

  uint64_t v13 = a4 + OBJC_IVAR____TtC35HomeCommunicationFlowDelegatePlugin21HomeCommunicationFlow_input;
  uint64_t v14 = sub_8D860();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v13, a1, v14);
  sub_C928(&v16, a4 + 16);
  sub_C928(a3, a4 + OBJC_IVAR____TtC35HomeCommunicationFlowDelegatePlugin21HomeCommunicationFlow_siriKitEventSender);
  return a4;
}

uint64_t sub_1BC40(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v17[3] = type metadata accessor for SharedGlobals();
  v17[4] = (uint64_t)&off_B6D60;
  uint64_t v10 = sub_C9F4(v17);
  sub_CA58(a3, (uint64_t)v10);
  uint64_t v11 = type metadata accessor for CATBundleRegisterer();
  v16[3] = v11;
  v16[4] = &off_B50A0;
  v16[0] = a4;
  *(unsigned char *)(a5 + 16) = a2;
  *(void *)(a5 + 24) = a1;
  sub_C940((uint64_t)v17, a5 + 32);
  sub_98C0(v16, v11);
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v13 = self;
  swift_retain();
  id v14 = objc_msgSend(v13, "bundleForClass:", ObjCClassFromMetadata, v16[0]);
  sub_AB20();
  swift_release();

  sub_4950((uint64_t)v17);
  sub_4950((uint64_t)v16);
  return a5;
}

uint64_t sub_1BD84(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v23 = type metadata accessor for SharedGlobals();
  uint64_t v24 = &off_B6D60;
  uint64_t v8 = sub_C9F4(v22);
  sub_CA58(a3, (uint64_t)v8);
  uint64_t v9 = type metadata accessor for CATBundleRegisterer();
  uint64_t v21[3] = v9;
  v21[4] = &off_B50A0;
  v21[0] = a4;
  type metadata accessor for HomeCommunicationFlowDelegatePlugin();
  uint64_t v10 = swift_allocObject();
  uint64_t v11 = sub_C9A4((uint64_t)v22, v23);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v14 + 16))(v13);
  uint64_t v15 = sub_C9A4((uint64_t)v21, v9);
  __chkstk_darwin(v15);
  uint64_t v17 = (void *)((char *)v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v18 + 16))(v17);
  uint64_t v19 = sub_1BC40(a1, a2, (uint64_t)v13, *v17, v10);
  sub_4950((uint64_t)v21);
  sub_4950((uint64_t)v22);
  return v19;
}

uint64_t sub_1BF7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v12 = sub_8E610();
  uint64_t v13 = &protocol witness table for ReferenceResolutionClient;
  *(void *)&long long v11 = a2;
  *(void *)(a4 + 24) = _swiftEmptyArrayStorage;
  *(_OWORD *)(a4 + 32) = 0u;
  *(_OWORD *)(a4 + 48) = 0u;
  *(_OWORD *)(a4 + 64) = xmmword_90B30;
  type metadata accessor for NLv4Transformer(0);
  uint64_t v8 = swift_allocObject();
  swift_retain();
  uint64_t v9 = swift_retain();
  *(void *)(a4 + 16) = sub_1C044(v9, a2, v8);
  sub_C928(&v11, a4 + 96);
  *(void *)(a4 + 80) = a1;
  *(void *)(a4 + 88) = a3;
  return a4;
}

uint64_t sub_1C044(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_48AC(&qword_BCE20);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = &v18[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v20[3] = sub_8E610();
  v20[4] = &protocol witness table for ReferenceResolutionClient;
  v20[0] = a2;
  sub_C940((uint64_t)v20, (uint64_t)v19);
  sub_1C890((uint64_t)v19, (uint64_t)v18);
  uint64_t v10 = swift_allocObject();
  sub_1C940((uint64_t)v18, v10 + 16);
  *(void *)(v10 + 56) = a1;
  type metadata accessor for TransformerInput(0);
  swift_retain();
  sub_48AC(&qword_BC410);
  sub_8E2B0();
  sub_1C9C8((uint64_t)v19, &qword_BCE28);
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v7 + 32))(a3 + OBJC_IVAR____TtC35HomeCommunicationFlowDelegatePlugin15NLv4Transformer_transformer, v9, v6);
  *(void *)(a3 + OBJC_IVAR____TtC35HomeCommunicationFlowDelegatePlugin15NLv4Transformer_featureManager) = a1;
  uint64_t v11 = qword_BB830;
  swift_retain();
  if (v11 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_8E730();
  sub_50FC(v12, (uint64_t)qword_BFEC8);
  uint64_t v13 = sub_8E710();
  os_log_type_t v14 = sub_8EB00();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v15 = 0;
    _os_log_impl(&dword_0, v13, v14, "#NLv4Transformer is initiated, this function should be only be called once for each makeFlowFor function", v15, 2u);
    swift_slowDealloc();
  }

  swift_release();
  sub_4950((uint64_t)v20);
  return a3;
}

uint64_t sub_1C2B8(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  v11[3] = type metadata accessor for SharedGlobals();
  v11[4] = (uint64_t)&off_B6D60;
  uint64_t v8 = sub_C9F4(v11);
  sub_CA58(a2, (uint64_t)v8);
  sub_C940(a1, a4 + qword_BED18);
  sub_C940((uint64_t)v11, a4 + qword_BED20);
  *(unsigned char *)(a4 + qword_BED28) = a3;
  uint64_t v9 = sub_8D490();
  sub_4950((uint64_t)v11);
  sub_4950(a1);
  return v9;
}

uint64_t sub_1C378(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  v13[3] = type metadata accessor for SharedGlobals();
  v13[4] = (uint64_t)&off_B6D60;
  uint64_t v10 = sub_C9F4(v13);
  sub_CA58(a2, (uint64_t)v10);
  sub_C940(a1, a3 + *a4);
  sub_C940((uint64_t)v13, a3 + *a5);
  uint64_t v11 = sub_8D490();
  sub_4950((uint64_t)v13);
  sub_4950(a1);
  return v11;
}

uint64_t sub_1C428(uint64_t a1, uint64_t a2, long long *a3)
{
  uint64_t v16 = type metadata accessor for SharedGlobals();
  uint64_t v17 = &off_B6D60;
  uint64_t v6 = sub_C9F4(v15);
  sub_CA58(a2, (uint64_t)v6);
  type metadata accessor for HomeCommunicationFlow();
  uint64_t v7 = swift_allocObject();
  uint64_t v8 = sub_C9A4((uint64_t)v15, v16);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v15[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v11 + 16))(v10);
  uint64_t v12 = sub_1BAA8(a1, (uint64_t)v10, a3, v7);
  sub_4950((uint64_t)v15);
  return v12;
}

uint64_t sub_1C564(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v16 = type metadata accessor for SharedGlobals();
  uint64_t v17 = &off_B6D60;
  uint64_t v6 = sub_C9F4(v15);
  sub_CA58(a2, (uint64_t)v6);
  type metadata accessor for SendAnnouncementRCHFlowDelegate();
  uint64_t v7 = swift_allocObject();
  uint64_t v8 = sub_C9A4((uint64_t)v15, v16);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v15[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v11 + 16))(v10);
  uint64_t v12 = sub_1C2B8(a1, (uint64_t)v10, a3, v7);
  sub_4950((uint64_t)v15);
  return v12;
}

uint64_t sub_1C6A0(uint64_t a1, uint64_t a2, void (*a3)(void), void *a4, void *a5)
{
  uint64_t v21 = type metadata accessor for SharedGlobals();
  uint64_t v22 = &off_B6D60;
  uint64_t v11 = sub_C9F4(v20);
  sub_CA58(a2, (uint64_t)v11);
  a3(0);
  uint64_t v12 = swift_allocObject();
  sub_C9A4((uint64_t)v20, v21);
  sub_CB04();
  __chkstk_darwin(v13);
  uint64_t v15 = sub_1CA18(v14, v19);
  v16(v15);
  uint64_t v17 = sub_1C378(a1, v5, v12, a4, a5);
  sub_4950((uint64_t)v20);
  return v17;
}

uint64_t sub_1C7A4(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_9950(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C7F4(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C83C(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_16058();
  sub_1CD04();
  v3();
  return a1;
}

uint64_t sub_1C890(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_48AC(&qword_BCE28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C8F8()
{
  if (*(void *)(v0 + 40)) {
    sub_4950(v0 + 16);
  }
  swift_release();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1C940(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_48AC(&qword_BCE28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C9A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_321A0(a1, (const char *)(v2 + 16), *(uint8_t **)(v2 + 56), a2);
}

uint64_t sub_1C9C8(uint64_t a1, uint64_t *a2)
{
  sub_48AC(a2);
  sub_16058();
  sub_1CD04();
  v3();
  return a1;
}

char *sub_1CA18@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  return (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

char *sub_1CA44@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  return (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_1CA90(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v5, a4, v6, 2u);
}

uint64_t sub_1CAB0()
{
  return sub_8E400();
}

uint64_t sub_1CAC8()
{
  uint64_t v2 = *(void *)(v0 - 176) + 32;
  return sub_C940(v2, v0 - 128);
}

BOOL sub_1CAE4(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t sub_1CB00()
{
  return sub_8CDF0();
}

uint64_t sub_1CB1C()
{
  return sub_8E450();
}

uint64_t sub_1CB34()
{
  return sub_8E400();
}

uint64_t sub_1CB4C()
{
  return swift_allocObject();
}

uint64_t sub_1CB88()
{
  return *(void *)(v0 - 264);
}

uint64_t sub_1CB9C(uint64_t a1)
{
  *(void *)(v1 - 168) = a1;
  return v1 - 168;
}

uint64_t sub_1CBB0()
{
  return sub_8E450();
}

uint64_t sub_1CBCC@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 256) = a1;
  return 0;
}

uint64_t sub_1CBDC()
{
  return swift_slowAlloc();
}

uint64_t sub_1CBF4()
{
  return sub_8E450();
}

uint64_t sub_1CC0C()
{
  return swift_slowAlloc();
}

uint64_t sub_1CC30(uint64_t a1)
{
  *(void *)(v1 - 184) = a1;
  return type metadata accessor for ReadAnnouncementCATsSimple();
}

uint64_t sub_1CC48(uint64_t a1)
{
  *(void *)(v1 - 176) = a1;
  return type metadata accessor for SendAnnouncementCATsSimple();
}

uint64_t sub_1CC60(uint64_t a1)
{
  *(void *)(v1 - 168) = a1;
  return v1 - 168;
}

_WORD *sub_1CC78(_WORD *result)
{
  *uint64_t result = 0;
  return result;
}

BOOL sub_1CC84(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t sub_1CCA0()
{
  return sub_8CDF0();
}

uint64_t sub_1CCBC(uint64_t a1)
{
  return a1 - 8;
}

void sub_1CCC8()
{
  *(void *)(v1 - 256) = v0;
}

uint64_t sub_1CCD8()
{
  uint64_t v2 = *(void *)(v0 - 104);
  return sub_C9A4(v0 - 128, v2);
}

uint64_t sub_1CD10()
{
  return swift_allocObject();
}

uint64_t sub_1CD28()
{
  return v0;
}

void sub_1CD3C(uint64_t a1@<X8>)
{
  v1[2] = a1;
  uint64_t v3 = *(void *)(v2 - 184);
  v1[8] = *(void *)(v2 - 176);
  v1[9] = v3;
}

uint64_t sub_1CD50()
{
  return swift_dynamicCastObjCClass();
}

uint64_t sub_1CD68()
{
  uint64_t v2 = *(void *)(v0 - 104);
  return sub_C9A4(v0 - 128, v2);
}

uint64_t sub_1CD88()
{
  uint64_t v2 = *(void *)(v0 - 104);
  return sub_C9A4(v0 - 128, v2);
}

uint64_t sub_1CDA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return 0;
}

void sub_1CDC8(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v5, a4, v6, 2u);
}

void sub_1CDE8(uint64_t a1@<X8>)
{
  *(void *)(v1 - 256) = a1;
}

uint64_t sub_1CDF4()
{
  uint64_t v2 = *(void *)(v0 - 144);
  return sub_C9A4(v0 - 168, v2);
}

uint64_t getEnumTagSinglePayload for HomeCommunicationIntentClassNames(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFA)
  {
    if (a2 + 6 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 6) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 7;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v5 = v6 - 7;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for HomeCommunicationIntentClassNames(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1CF68);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HomeCommunicationIntentClassNames()
{
  return &type metadata for HomeCommunicationIntentClassNames;
}

unint64_t sub_1CFA4()
{
  unint64_t result = qword_BCE58;
  if (!qword_BCE58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BCE58);
  }
  return result;
}

id sub_1CFF0(char a1)
{
  switch(a1)
  {
    case 2:
    case 4:
      if (qword_BB810 != -1) {
        swift_once();
      }
      uint64_t v1 = &qword_BCE38;
      break;
    case 3:
      if (qword_BB818 != -1) {
        swift_once();
      }
      uint64_t v1 = &qword_BCE40;
      break;
    case 5:
      if (qword_BB820 != -1) {
        swift_once();
      }
      uint64_t v1 = &qword_BCE48;
      break;
    case 6:
      if (qword_BB828 != -1) {
        swift_once();
      }
      uint64_t v1 = &qword_BCE50;
      break;
    default:
      if (qword_BB808 != -1) {
        swift_once();
      }
      uint64_t v1 = &qword_BCE30;
      break;
  }
  int v2 = (void *)*v1;

  return v2;
}

id sub_1D180()
{
  id result = [objc_allocWithZone((Class)INSendAnnouncementIntent) init];
  qword_BCE30 = (uint64_t)result;
  return result;
}

id sub_1D1B4()
{
  id result = [objc_allocWithZone((Class)INReadAnnouncementIntent) init];
  qword_BCE38 = (uint64_t)result;
  return result;
}

id sub_1D1E8()
{
  id result = [objc_allocWithZone((Class)INStopAnnouncementIntent) init];
  qword_BCE40 = (uint64_t)result;
  return result;
}

id sub_1D21C()
{
  id result = [objc_allocWithZone((Class)INSkipAnnouncementIntent) init];
  qword_BCE48 = (uint64_t)result;
  return result;
}

id sub_1D250()
{
  id result = [objc_allocWithZone((Class)INIntent) init];
  qword_BCE50 = (uint64_t)result;
  return result;
}

uint64_t sub_1D284()
{
  uint64_t v0 = sub_8E730();
  sub_E16C(v0, qword_BFEC8);
  sub_50FC(v0, (uint64_t)qword_BFEC8);
  return sub_8E720();
}

uint64_t sub_1D308()
{
  sub_1D370();
  uint64_t result = sub_8EB90();
  qword_BCE60 = result;
  return result;
}

unint64_t sub_1D370()
{
  unint64_t result = qword_BCE68;
  if (!qword_BCE68)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_BCE68);
  }
  return result;
}

uint64_t *sub_1D3B0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_8E700();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
    v9[16] = v10[16];
  }
  return a1;
}

uint64_t sub_1D48C(uint64_t a1)
{
  uint64_t v2 = sub_8E700();
  int v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_1D4F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_8E700();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *(unsigned char *)(v8 + 16) = *(unsigned char *)(v9 + 16);
  return a1;
}

uint64_t sub_1D57C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_8E700();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)uint64_t v8 = *(void *)v9;
  *(void *)(v8 + 8) = *(void *)(v9 + 8);
  *(unsigned char *)(v8 + 16) = *(unsigned char *)(v9 + 16);
  return a1;
}

uint64_t sub_1D610(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_8E700();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *(unsigned char *)(v8 + 16) = *(unsigned char *)(v9 + 16);
  return a1;
}

uint64_t sub_1D69C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_8E700();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *(unsigned char *)(v8 + 16) = *(unsigned char *)(v9 + 16);
  return a1;
}

uint64_t sub_1D728(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1D73C);
}

uint64_t sub_1D73C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_8E700();

  return _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0(a1, a2, v4);
}

uint64_t sub_1D784(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1D798);
}

uint64_t sub_1D798(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_8E700();

  return _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(a1, a2, a2, v4);
}

uint64_t type metadata accessor for SignpostLog.Signpost()
{
  uint64_t result = qword_BCEC8;
  if (!qword_BCEC8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1D82C()
{
  uint64_t result = sub_8E700();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_1D8C0(void *a1)
{
  id v2 = [objc_allocWithZone((Class)FLOWSchemaFLOWDomainContext) init];
  if (v2)
  {
    int v3 = v2;
    uint64_t v4 = [objc_allocWithZone((Class)FLOWSchemaFLOWHomeCommunicationContext) init];
    if (v4)
    {
      int v5 = v4;
      sub_1DA1C(a1, v4);
      [v3 setHomeCommunicationContext:v5];
      [v3 setHasHomeCommunicationContext:1];
      goto LABEL_10;
    }
  }
  if (qword_BB830 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_8E730();
  sub_50FC(v6, (uint64_t)qword_BFEC8);
  int v5 = sub_8E710();
  os_log_type_t v7 = sub_8EB10();
  if (os_log_type_enabled(v5, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl(&dword_0, v5, v7, "#HomeCommunicationDomainContextMetricsUtils returning without logging homeCommunication domain context", v8, 2u);
    swift_slowDealloc();
  }
  int v3 = 0;
LABEL_10:

  return v3;
}

void sub_1DA1C(void *a1, void *a2)
{
  if (qword_BB830 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_8E730();
  sub_50FC(v4, (uint64_t)qword_BFEC8);
  sub_C940((uint64_t)a1, (uint64_t)v19);
  int v5 = sub_8E710();
  os_log_type_t v6 = sub_8EB00();
  if (os_log_type_enabled(v5, v6))
  {
    os_log_type_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    uint64_t v18 = v16;
    *(_DWORD *)os_log_type_t v7 = 136315138;
    v15[1] = v7 + 4;
    uint64_t v8 = sub_98C0(v19, v19[3]);
    __chkstk_darwin(v8);
    (*(void (**)(char *))(v10 + 16))((char *)v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
    uint64_t v11 = sub_8E8F0();
    uint64_t v17 = sub_8758C(v11, v12, &v18);
    sub_8EBD0();
    swift_bridgeObjectRelease();
    sub_4950((uint64_t)v19);
    _os_log_impl(&dword_0, v5, v6, "#HomeCommunicationDomainContextMetricsUtils addTaskType with homeCommunicationNLIntent: %s", v7, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_4950((uint64_t)v19);
  }

  uint64_t v13 = a1[3];
  uint64_t v14 = a1[4];
  sub_98C0(a1, v13);
  switch((*(unsigned __int8 (**)(uint64_t, uint64_t))(v14 + 16))(v13, v14))
  {
    case 0u:
      [a2 setTaskType:1];
      goto LABEL_10;
    case 1u:
      [a2 setTaskType:2];
LABEL_10:
      sub_1DD58(a1, a2);
      break;
    case 2u:
      [a2 setTaskType:3];
      break;
    case 3u:
      [a2 setTaskType:4];
      break;
    default:
      [a2 setTaskType:0];
      break;
  }
}

void sub_1DD58(void *a1, void *a2)
{
  if (qword_BB830 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_8E730();
  sub_50FC(v4, (uint64_t)qword_BFEC8);
  int v5 = sub_8E710();
  os_log_type_t v6 = sub_8EB00();
  if (os_log_type_enabled(v5, v6))
  {
    os_log_type_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v7 = 0;
    _os_log_impl(&dword_0, v5, v6, "#HomeCommunicationDomainContextMetricsUtils addTargetType for send or reply announcement", v7, 2u);
    swift_slowDealloc();
  }

  uint64_t v8 = [objc_allocWithZone((Class)FLOWSchemaFLOWHomeCommunicationSendOrReply) init];
  if (v8)
  {
    uint64_t v41 = v8;
    uint64_t v9 = a1[3];
    uint64_t v10 = a1[4];
    sub_98C0(a1, v9);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 112);
    uint64_t v12 = *(void *)(v11(v9, v10) + 16);
    swift_bridgeObjectRelease();
    BOOL v13 = v12 == 0;
    if (v12)
    {
      for (uint64_t i = *(void *)(v11(v9, v10) + 16); i; --i)
        [v41 addTargetType:5];
      swift_bridgeObjectRelease();
    }
    uint64_t v15 = a1[3];
    uint64_t v16 = a1[4];
    sub_98C0(a1, v15);
    uint64_t v17 = *(void *)((*(uint64_t (**)(uint64_t, uint64_t))(v16 + 96))(v15, v16) + 16);
    swift_bridgeObjectRelease();
    if (v17)
    {
      uint64_t v18 = a1[3];
      uint64_t v19 = a1[4];
      sub_98C0(a1, v18);
      for (uint64_t j = *(void *)((*(uint64_t (**)(uint64_t, uint64_t))(v19 + 96))(v18, v19) + 16); j; --j)
        [v41 addTargetType:3];
      swift_bridgeObjectRelease();
      BOOL v13 = 0;
    }
    uint64_t v21 = a1[3];
    uint64_t v22 = a1[4];
    sub_98C0(a1, v21);
    uint64_t v23 = *(void *)((*(uint64_t (**)(uint64_t, uint64_t))(v22 + 104))(v21, v22) + 16);
    swift_bridgeObjectRelease();
    if (v23)
    {
      uint64_t v24 = a1[3];
      uint64_t v25 = a1[4];
      sub_98C0(a1, v24);
      for (uint64_t k = *(void *)((*(uint64_t (**)(uint64_t, uint64_t))(v25 + 104))(v24, v25) + 16); k; --k)
        [v41 addTargetType:4];
      swift_bridgeObjectRelease();
      BOOL v13 = 0;
    }
    uint64_t v27 = a1[3];
    uint64_t v28 = a1[4];
    sub_98C0(a1, v27);
    uint64_t v29 = *(void *)((*(uint64_t (**)(uint64_t, uint64_t))(v28 + 72))(v27, v28) + 16);
    swift_bridgeObjectRelease();
    if (v29)
    {
      uint64_t v30 = a1[3];
      uint64_t v31 = a1[4];
      sub_98C0(a1, v30);
      for (uint64_t m = *(void *)((*(uint64_t (**)(uint64_t, uint64_t))(v31 + 72))(v30, v31) + 16); m; --m)
        [v41 addTargetType:0];
      swift_bridgeObjectRelease();
      BOOL v13 = 0;
    }
    uint64_t v33 = a1[3];
    uint64_t v34 = a1[4];
    sub_98C0(a1, v33);
    if ((*(uint64_t (**)(uint64_t, uint64_t))(v34 + 40))(v33, v34))
    {
      [v41 addTargetType:6];
      BOOL v13 = 0;
    }
    uint64_t v35 = a1[3];
    uint64_t v36 = a1[4];
    sub_98C0(a1, v35);
    char v37 = (*(uint64_t (**)(uint64_t, uint64_t))(v36 + 64))(v35, v36);
    if ((v37 & 1) != 0 || v13)
    {
      if (v37) {
        uint64_t v38 = 2;
      }
      else {
        uint64_t v38 = 1;
      }
      [v41 addTargetType:v38];
    }
    [a2 setSendOrReplyContext:v41];
    [a2 setHasSendOrReplyContext:1];
  }
  else
  {
    uint64_t v41 = sub_8E710();
    os_log_type_t v39 = sub_8EB10();
    if (os_log_type_enabled(v41, v39))
    {
      uint64_t v40 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v40 = 0;
      _os_log_impl(&dword_0, v41, v39, "#HomeCommunicationDomainContextMetricsUtils returning without logging homeCommunication entityType", v40, 2u);
      swift_slowDealloc();
    }
  }
}

unint64_t sub_1E228(char a1)
{
  sub_8EC40(20);
  swift_bridgeObjectRelease();
  unint64_t v2 = sub_1E2CC(a1);
  uint64_t v4 = sub_80050(v2, v3);
  os_log_type_t v6 = v5;
  swift_bridgeObjectRelease();
  v8._countAndFlagsBits = v4;
  v8._object = v6;
  sub_8E960(v8);
  swift_bridgeObjectRelease();
  return 0xD000000000000012;
}

unint64_t sub_1E2CC(char a1)
{
  unint64_t result = 0xD000000000000012;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x62726556736D73;
      break;
    case 2:
      unint64_t result = 0x6E756F4E736D73;
      break;
    case 3:
      unint64_t result = 0x69666E6F43736D73;
      break;
    case 4:
      unint64_t result = 0x617373654D736D73;
      break;
    case 5:
      return result;
    default:
      unint64_t result = 7564659;
      break;
  }
  return result;
}

unint64_t sub_1E3A4(uint64_t a1, uint64_t a2, char a3)
{
  unint64_t v4 = sub_1E228(a3);
  v5._countAndFlagsBits = 0x2E65756C61562ELL;
  v5._object = (void *)0xE700000000000000;
  sub_8E960(v5);
  v6._countAndFlagsBits = sub_8E900();
  sub_8E960(v6);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1E424(char a1)
{
  return qword_90E50[a1];
}

uint64_t sub_1E444(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_B4050;
  v6._object = a2;
  unint64_t v4 = sub_8ED80(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 4) {
    return 4;
  }
  else {
    return v4;
  }
}

uint64_t sub_1E490()
{
  return sub_246D0();
}

Swift::Int sub_1E49C()
{
  return sub_24C80();
}

uint64_t sub_1E4A4()
{
  return sub_24E9C();
}

Swift::Int sub_1E4AC(uint64_t a1)
{
  return sub_25498(a1, *v1);
}

uint64_t sub_1E4B4@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1E444(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_1E4E4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1E424(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_1E510(void *a1@<X8>)
{
  *a1 = &off_B40D0;
}

uint64_t sub_1E520(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1E9E8();
  unint64_t v5 = sub_1EA34();
  unint64_t v6 = sub_1EA80();

  return static TerminalNodeBoundedSemanticValue<>.fromIntentNodeValue(_:)(a1, a2, v4, v5, v6);
}

uint64_t sub_1E594()
{
  sub_48AC(&qword_BCF00);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_90CE0;
  sub_8E900();
  sub_F5CC();
  uint64_t v1 = sub_8EBF0();
  uint64_t v3 = v2;
  swift_bridgeObjectRelease();
  unint64_t v4 = sub_1E3A4(v1, v3, 3);
  uint64_t v6 = v5;
  swift_bridgeObjectRelease();
  *(void *)(v0 + 32) = v4;
  *(void *)(v0 + 40) = v6;
  sub_8E900();
  uint64_t v7 = sub_1EACC();
  uint64_t v9 = v8;
  swift_bridgeObjectRelease();
  unint64_t v10 = sub_1E3A4(v7, v9, 1);
  uint64_t v12 = v11;
  swift_bridgeObjectRelease();
  *(void *)(v0 + 48) = v10;
  *(void *)(v0 + 56) = v12;
  sub_8E900();
  uint64_t v13 = sub_1EACC();
  uint64_t v15 = v14;
  swift_bridgeObjectRelease();
  unint64_t v16 = sub_1E3A4(v13, v15, 1);
  uint64_t v18 = v17;
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v0 + 64) = v16;
  *(void *)(v0 + 72) = v18;
  qword_BFEE0 = v0;
  return result;
}

unint64_t sub_1E738()
{
  sub_48AC(&qword_BCF00);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_90CF0;
  *(void *)(v0 + 32) = sub_1E228(3);
  *(void *)(v0 + 40) = v1;
  unint64_t result = sub_1E228(1);
  *(void *)(v0 + 48) = result;
  *(void *)(v0 + 56) = v3;
  qword_BFEE8 = v0;
  return result;
}

unsigned char *storeEnumTagSinglePayload for SmsConfirmationSemantics(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1E868);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SmsConfirmationSemantics()
{
  return &type metadata for SmsConfirmationSemantics;
}

unint64_t sub_1E8A4()
{
  unint64_t result = qword_BCF08;
  if (!qword_BCF08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BCF08);
  }
  return result;
}

unint64_t sub_1E8F4()
{
  unint64_t result = qword_BCF10;
  if (!qword_BCF10)
  {
    sub_9950(&qword_BCF18);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BCF10);
  }
  return result;
}

unint64_t sub_1E94C()
{
  unint64_t result = qword_BCF20;
  if (!qword_BCF20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BCF20);
  }
  return result;
}

unint64_t sub_1E99C()
{
  unint64_t result = qword_BCF28;
  if (!qword_BCF28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BCF28);
  }
  return result;
}

unint64_t sub_1E9E8()
{
  unint64_t result = qword_BCF30;
  if (!qword_BCF30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BCF30);
  }
  return result;
}

unint64_t sub_1EA34()
{
  unint64_t result = qword_BCF38;
  if (!qword_BCF38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BCF38);
  }
  return result;
}

unint64_t sub_1EA80()
{
  unint64_t result = qword_BCF40[0];
  if (!qword_BCF40[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_BCF40);
  }
  return result;
}

uint64_t sub_1EACC()
{
  return sub_8EBF0();
}

uint64_t sub_1EB18()
{
  return swift_initClassMetadata2();
}

void sub_1EB5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_222DC();
  char v37 = v12;
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  sub_4BCC();
  uint64_t v17 = sub_48AC(&qword_BCFC8);
  uint64_t v18 = sub_1CCBC(v17);
  __chkstk_darwin(v18);
  sub_AAA8();
  uint64_t v21 = v20 - v19;
  uint64_t v22 = sub_8D370();
  sub_5190();
  __chkstk_darwin(v23);
  sub_AAA8();
  swift_bridgeObjectRetain();
  if (sub_25C44(v16, v14))
  {
    sub_8D6B0();
    sub_8D6C0();
    sub_2224C();
    v30(v24, v25, v26, v27, v28, v29, v30, v31, a9, a10, a11, a12);
  }
  else
  {
    sub_1F040();
    sub_222F4();
    v32();
    sub_223A4();
    _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(v33, v34, v35, v22);
    v37(v21);
    sub_221F4(v21, &qword_BCFC8);
    sub_2249C();
    v36();
    sub_2224C();
  }
}

void sub_1ED28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_222DC();
  uint64_t v50 = v13;
  uint64_t v15 = v14;
  uint64_t v17 = v16;
  sub_4BCC();
  uint64_t v18 = sub_48AC(&qword_BCFC8);
  uint64_t v19 = sub_1CCBC(v18);
  __chkstk_darwin(v19);
  sub_AAA8();
  uint64_t v22 = v21 - v20;
  uint64_t v23 = sub_8D370();
  sub_5190();
  uint64_t v49 = v24;
  __chkstk_darwin(v25);
  sub_22300();
  swift_bridgeObjectRetain();
  if (sub_25C44(v17, v15))
  {
    sub_8D6B0();
    sub_8D6C0();
    sub_2224C();
    v32(v26, v27, v28, v29, v30, v31, v32, v33, a9, a10, a11, a12);
  }
  else
  {
    sub_8D360();
    sub_8D2F0();
    sub_1E228(0);
    sub_8D320();
    sub_48AC(&qword_BCF00);
    uint64_t v34 = swift_allocObject();
    *(_OWORD *)(v34 + 16) = xmmword_90CE0;
    uint64_t v35 = sub_8E900();
    uint64_t v37 = v36;
    v51[0] = v35;
    v51[1] = v36;
    sub_F5CC();
    sub_8EBF0();
    sub_22340();
    sub_223FC();
    sub_223E0();
    *(void *)(v34 + 32) = v37;
    *(void *)(v34 + 40) = v51;
    uint64_t v38 = sub_8E900();
    sub_22264(v38, v39);
    sub_22340();
    sub_223FC();
    sub_223E0();
    *(void *)(v34 + 48) = v37;
    *(void *)(v34 + 56) = v51;
    uint64_t v40 = sub_224E8();
    sub_22264(v40, v41);
    sub_22340();
    sub_223FC();
    sub_223E0();
    *(void *)(v34 + 64) = v37;
    *(void *)(v34 + 72) = v51;
    sub_8D340();
    uint64_t v42 = sub_223C8();
    *(_OWORD *)(v42 + 16) = xmmword_8FA10;
    *(void *)(v42 + 32) = sub_1E228(3);
    *(void *)(v42 + 40) = v43;
    sub_8D350();
    sub_222F4();
    v48(v44, v45, v46, v47);
    _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(v22, 0, 1, v23);
    v50(v22);
    sub_221F4(v22, &qword_BCFC8);
    (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v12, v23);
    sub_2224C();
  }
}

uint64_t sub_1F040()
{
  if (qword_BB830 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_8E730();
  sub_50FC(v0, (uint64_t)qword_BFEC8);
  uint64_t v1 = sub_8E710();
  os_log_type_t v2 = sub_8EB00();
  if (os_log_type_enabled(v1, v2))
  {
    int v3 = (uint8_t *)sub_CCE4();
    *(_WORD *)int v3 = 0;
    _os_log_impl(&dword_0, v1, v2, "#HomeCommunicationNLContextProvider generateNLContextForAnnouncement", v3, 2u);
    sub_CC2C();
  }

  sub_8D360();
  sub_1E228(0);
  sub_8D330();
  sub_48AC(&qword_BCF00);
  uint64_t v4 = sub_223C8();
  *(_OWORD *)(v4 + 16) = xmmword_8FA10;
  sub_224E8();
  sub_F5CC();
  uint64_t v5 = sub_22418();
  uint64_t v7 = v6;
  swift_bridgeObjectRelease();
  unint64_t v8 = sub_1E3A4(v5, v7, 3);
  uint64_t v10 = v9;
  swift_bridgeObjectRelease();
  *(void *)(v4 + 32) = v8;
  *(void *)(v4 + 40) = v10;
  sub_8D300();
  uint64_t v11 = sub_223C8();
  *(_OWORD *)(v11 + 16) = xmmword_8FA10;
  *(void *)(v11 + 32) = sub_1E228(4);
  *(void *)(v11 + 40) = v12;
  sub_8D310();
  sub_1F214();
  return sub_8D2E0();
}

void sub_1F214()
{
  sub_222DC();
  sub_8DA80();
  sub_5190();
  uint64_t v50 = v1;
  uint64_t v51 = v2;
  __chkstk_darwin(v1);
  sub_1CA70();
  uint64_t v49 = v3;
  uint64_t v4 = sub_8D920();
  uint64_t v5 = sub_1CCBC(v4);
  __chkstk_darwin(v5);
  sub_2236C();
  uint64_t v6 = sub_8D9F0();
  sub_5190();
  uint64_t v8 = v7;
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v44 - v13;
  uint64_t v15 = sub_48AC(&qword_BD000);
  uint64_t v16 = sub_1CCBC(v15);
  __chkstk_darwin(v16);
  sub_22300();
  sub_8E170();
  sub_CB8C();
  uint64_t v17 = sub_8E160();
  sub_8E130();
  sub_CB8C();
  uint64_t v18 = sub_8E120();
  sub_8E110();
  sub_8E040();
  sub_48AC(&qword_BE170);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_8FC30;
  *(void *)(v19 + 32) = v17;
  uint64_t v55 = v19;
  sub_8EA50();
  uint64_t v20 = sub_8DEA0();
  _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(v0, 1, 1, v20);
  uint64_t v52 = v17;
  swift_retain();
  uint64_t v21 = sub_8DE50();
  swift_bridgeObjectRelease();
  sub_221F4(v0, &qword_BD000);
  sub_8D9E0();
  uint64_t v53 = v21;
  sub_8DB00();
  uint64_t v47 = v8;
  uint64_t v48 = v12;
  uint64_t v22 = v49;
  sub_8D9D0();
  if (qword_BB830 != -1) {
    swift_once();
  }
  uint64_t v23 = sub_8E730();
  sub_50FC(v23, (uint64_t)qword_BFEC8);
  uint64_t v24 = (void *)sub_8E710();
  os_log_type_t v25 = sub_8EB00();
  uint64_t v26 = v6;
  uint64_t v27 = v22;
  if (sub_22324(v25))
  {
    uint64_t v28 = sub_1CBDC();
    uint64_t v46 = v18;
    uint64_t v29 = (uint8_t *)v28;
    uint64_t v45 = sub_1CC0C();
    uint64_t v55 = v45;
    *(_DWORD *)uint64_t v29 = 136315138;
    uint64_t v44 = v29 + 4;
    sub_22508();
    uint64_t v31 = v47;
    uint64_t v30 = (uint64_t)v48;
    sub_222F4();
    v32();
    uint64_t v33 = sub_6AC9C(v30);
    uint64_t v54 = sub_8758C(v33, v34, &v55);
    sub_8EBD0();
    swift_bridgeObjectRelease();
    sub_22490();
    _os_log_impl(v35, v36, v37, v38, v29, 0xCu);
    swift_arrayDestroy();
    sub_CC2C();
    sub_CC2C();

    uint64_t v39 = v50;
    uint64_t v40 = v51;
  }
  else
  {

    uint64_t v39 = v50;
    uint64_t v40 = v51;
    uint64_t v31 = v47;
  }
  sub_8DA70();
  sub_22508();
  sub_222F4();
  v41();
  sub_8DA60();
  sub_48AC(&qword_BD010);
  unint64_t v42 = (*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
  uint64_t v43 = swift_allocObject();
  *(_OWORD *)(v43 + 16) = xmmword_8FA10;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v40 + 32))(v43 + v42, v27, v39);
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v14, v26);
  sub_2224C();
}

void sub_1F84C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_222DC();
  uint64_t v13 = v12;
  uint64_t v15 = v14;
  uint64_t v17 = v16;
  sub_4BCC();
  uint64_t v18 = sub_48AC(&qword_BCFC8);
  uint64_t v19 = sub_1CCBC(v18);
  __chkstk_darwin(v19);
  sub_1CA70();
  uint64_t v103 = v20;
  sub_22360();
  uint64_t v102 = sub_8D370();
  sub_5190();
  uint64_t v22 = v21;
  __chkstk_darwin(v23);
  sub_6FF0();
  sub_6FC4();
  __chkstk_darwin(v24);
  sub_22520();
  uint64_t v104 = v25;
  if (qword_BB830 != -1) {
    swift_once();
  }
  uint64_t v26 = sub_8E730();
  sub_50FC(v26, (uint64_t)qword_BFEC8);
  uint64_t v27 = (void *)sub_8E710();
  os_log_type_t v28 = sub_8EB00();
  uint64_t v105 = v22;
  if (sub_22324(v28))
  {
    uint64_t v29 = (uint8_t *)sub_CCE4();
    *(_WORD *)uint64_t v29 = 0;
    sub_22490();
    _os_log_impl(v30, v31, v32, v33, v29, 2u);
    uint64_t v22 = v105;
    sub_CC2C();
  }

  swift_bridgeObjectRetain();
  if (sub_25C44(v17, v15) == 1)
  {
    sub_8D360();
    sub_1E228(0);
    sub_8D320();
    sub_48AC(&qword_BCF00);
    uint64_t v34 = sub_223C8();
    *(_OWORD *)(v34 + 16) = xmmword_8FA10;
    v106[0] = sub_8E900();
    v106[1] = v35;
    uint64_t v107 = 32;
    unint64_t v108 = 0xE100000000000000;
    uint64_t v109 = 95;
    unint64_t v110 = 0xE100000000000000;
    sub_F5CC();
    uint64_t v36 = sub_22418();
    uint64_t v38 = v37;
    swift_bridgeObjectRelease();
    unint64_t v39 = sub_1E3A4(v36, v38, 3);
    uint64_t v41 = v40;
    swift_bridgeObjectRelease();
    *(void *)(v34 + 32) = v39;
    *(void *)(v34 + 40) = v41;
    sub_8D340();
    uint64_t v42 = sub_2EE0C();
    unint64_t v43 = (unint64_t)sub_6D5C8(v42);
    swift_bridgeObjectRelease();
    if (!v43)
    {
LABEL_35:
      uint64_t v88 = sub_8E710();
      os_log_type_t v89 = sub_8EB00();
      if (os_log_type_enabled(v88, v89))
      {
        uint64_t v90 = (_DWORD *)sub_1CBDC();
        v106[0] = sub_1CC0C();
        *uint64_t v90 = 136315138;
        uint64_t v91 = v104;
        sub_22508();
        uint64_t v92 = v102;
        sub_222F4();
        v93();
        uint64_t v94 = sub_8E8E0();
        uint64_t v109 = sub_8758C(v94, v95, v106);
        uint64_t v22 = v105;
        sub_8EBD0();
        swift_bridgeObjectRelease();
        sub_224BC(&dword_0, v96, v97, "#HomeCommunicationNLContextProvider nlContext: %s");
        swift_arrayDestroy();
        sub_CC2C();
        sub_CC2C();
      }
      else
      {

        uint64_t v92 = v102;
        uint64_t v91 = v104;
      }
      sub_22508();
      sub_222F4();
      v98();
      sub_223A4();
      _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(v99, v100, v101, v92);
      v13(v103);
      sub_221F4(v103, &qword_BCFC8);
      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v91, v92);
      sub_2224C();
      return;
    }
    uint64_t v44 = sub_223C8();
    *(_OWORD *)(v44 + 16) = xmmword_8FA10;
    *(void *)(v44 + 32) = sub_1E228(5);
    *(void *)(v44 + 40) = v45;
    sub_8D350();
    sub_8D2F0();
    swift_bridgeObjectRetain_n();
    uint64_t v46 = sub_8E710();
    os_log_type_t v47 = sub_8EB00();
    if (os_log_type_enabled(v46, v47))
    {
      uint64_t v48 = (_DWORD *)sub_1CBDC();
      v106[0] = sub_1CC0C();
      *uint64_t v48 = 136315138;
      sub_8D10(0, (unint64_t *)&qword_BCFD8);
      swift_bridgeObjectRetain();
      uint64_t v49 = sub_8EA40();
      unint64_t v51 = v50;
      swift_bridgeObjectRelease();
      uint64_t v52 = v49;
      uint64_t v22 = v105;
      uint64_t v107 = sub_8758C(v52, v51, v106);
      sub_8EBD0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      sub_224BC(&dword_0, v53, v54, "#HomeCommunicationNLContextProvider makeDisambiguationSDAForFilters for homes: %s");
      swift_arrayDestroy();
      sub_CC2C();
      sub_CC2C();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    if (v43 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v70 = sub_8ED40();
      if (v70) {
        goto LABEL_17;
      }
    }
    else
    {
      uint64_t v70 = *(void *)((char *)&dword_10 + (v43 & 0xFFFFFFFFFFFFFF8));
      swift_bridgeObjectRetain();
      if (v70)
      {
LABEL_17:
        if (v70 < 1)
        {
          __break(1u);
          return;
        }
        uint64_t v71 = 0;
        uint64_t v72 = (char *)_swiftEmptyArrayStorage;
        do
        {
          if ((v43 & 0xC000000000000001) != 0) {
            id v73 = (id)sub_8EC70();
          }
          else {
            id v73 = *(id *)(v43 + 8 * v71 + 32);
          }
          uint64_t v74 = v73;
          id v75 = [v73 home];
          if (v75)
          {
            uint64_t v76 = v75;
            id v77 = [v75 spokenPhrase];

            uint64_t v78 = sub_8E8D0();
            uint64_t v80 = v79;

            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              uint64_t v84 = (char *)sub_22454();
              uint64_t v72 = sub_768FC(v84, v85, v86, (uint64_t)v72);
            }
            unint64_t v82 = *((void *)v72 + 2);
            unint64_t v81 = *((void *)v72 + 3);
            if (v82 >= v81 >> 1) {
              uint64_t v72 = sub_768FC((char *)(v81 > 1), v82 + 1, 1, (uint64_t)v72);
            }
            *((void *)v72 + 2) = v82 + 1;
            os_log_type_t v83 = &v72[16 * v82];
            *((void *)v83 + 4) = v78;
            *((void *)v83 + 5) = v80;
            uint64_t v22 = v105;
          }
          else
          {
          }
          ++v71;
        }
        while (v70 != v71);
      }
    }
    swift_bridgeObjectRelease();
    if (qword_BB7E8 != -1) {
      swift_once();
    }
    uint64_t v87 = qword_BFE50;
    v106[3] = sub_48AC(&qword_BC760);
    v106[4] = sub_22080();
    v106[0] = v87;
    swift_retain();
    sub_212EC();
    sub_4950((uint64_t)v106);
    sub_8D2D0();
    sub_21778();
    swift_bridgeObjectRelease();
    sub_8D2C0();
    sub_20108();
    swift_bridgeObjectRelease();
    sub_8D2E0();
    goto LABEL_35;
  }
  uint64_t v55 = (void *)sub_8E710();
  os_log_type_t v56 = sub_8EB10();
  if (sub_22324(v56))
  {
    uint64_t v57 = (uint8_t *)sub_CCE4();
    *(_WORD *)uint64_t v57 = 0;
    sub_22490();
    _os_log_impl(v58, v59, v60, v61, v57, 2u);
    sub_CC2C();
  }

  sub_8D6B0();
  sub_8D6C0();
  sub_2224C();
  v68(v62, v63, v64, v65, v66, v67, v68, v69, a9, a10, a11, a12);
}

void sub_20108()
{
  sub_222DC();
  uint64_t v1 = v0;
  uint64_t v2 = sub_8DA80();
  sub_5190();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  sub_1CA70();
  uint64_t v102 = v6;
  sub_22360();
  uint64_t v101 = sub_8DAB0();
  sub_5190();
  uint64_t v100 = v7;
  __chkstk_darwin(v8);
  sub_6FF0();
  v98[3] = v9;
  sub_6FC4();
  __chkstk_darwin(v10);
  sub_22520();
  uint64_t v99 = v11;
  uint64_t v12 = sub_8D920();
  uint64_t v13 = sub_1CCBC(v12);
  __chkstk_darwin(v13);
  sub_AAA8();
  uint64_t v16 = v15 - v14;
  uint64_t v136 = sub_8DA40();
  sub_5190();
  uint64_t v18 = v17;
  __chkstk_darwin(v19);
  uint64_t v128 = (char *)v98 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_6FC4();
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)v98 - v22;
  uint64_t v24 = sub_8D9C0();
  sub_5190();
  uint64_t v26 = v25;
  __chkstk_darwin(v27);
  sub_222BC(v28, v98[0]);
  __chkstk_darwin(v29);
  sub_22520();
  uint64_t v129 = v30;
  sub_22360();
  uint64_t v121 = sub_8DC00();
  sub_5190();
  uint64_t v32 = v31;
  __chkstk_darwin(v33);
  sub_1CA70();
  uint64_t v125 = v34;
  uint64_t v35 = sub_48AC(&qword_BD000);
  uint64_t v36 = sub_1CCBC(v35);
  __chkstk_darwin(v36);
  sub_1CA70();
  uint64_t v124 = v37;
  sub_22360();
  uint64_t v123 = sub_8DD80();
  sub_5190();
  uint64_t v39 = v38;
  __chkstk_darwin(v40);
  sub_1CA70();
  uint64_t v122 = v41;
  unint64_t v141 = (unint64_t)_swiftEmptyArrayStorage;
  if (*(void *)(v1 + 16))
  {
    uint64_t v134 = *(void *)(v1 + 16);
    v98[1] = v4;
    v98[2] = v2;
    uint64_t v115 = sub_8D10(0, &qword_BD008);
    uint64_t v120 = v39 + 104;
    uint64_t v119 = v39 + 8;
    unsigned int v118 = enum case for IdentifierValue.vHomeAutomationHome(_:);
    uint64_t v114 = v32 + 8;
    uint64_t v126 = (void (**)(void))(v18 + 16);
    uint64_t v110 = v26 + 16;
    uint64_t v109 = v26 + 32;
    uint64_t v111 = v26;
    uint64_t v112 = v26 + 8;
    uint64_t v113 = v18 + 8;
    uint64_t v104 = &v140;
    uint64_t v117 = sub_8DBB0();
    swift_bridgeObjectRetain();
    uint64_t v42 = 0;
    unint64_t v43 = _swiftEmptyArrayStorage;
    v98[0] = v1;
    uint64_t v44 = v1 + 40;
    *((void *)&v45 + 1) = 3;
    long long v116 = xmmword_8FC30;
    *(void *)&long long v45 = 136315138;
    long long v105 = v45;
    uint64_t v103 = (char *)&type metadata for Any + 8;
    uint64_t v108 = v16;
    uint64_t v127 = v24;
    while (1)
    {
      uint64_t v133 = v44;
      sub_CB8C();
      swift_bridgeObjectRetain();
      uint64_t v4 = sub_8DBA0();
      sub_22318();
      v46(v122, v118, v123);
      sub_20D78();
      swift_bridgeObjectRelease();
      sub_22318();
      sub_1CD04();
      v48(v47);
      sub_8E150();
      sub_CB8C();
      uint64_t v2 = sub_8E140();
      swift_retain();
      sub_8DB80();
      swift_release();
      sub_48AC(&qword_BE170);
      uint64_t v49 = swift_allocObject();
      *(_OWORD *)(v49 + 16) = v116;
      *(void *)(v49 + 32) = v2;
      v138[0] = v49;
      sub_8EA50();
      uint64_t v50 = sub_8DEA0();
      uint64_t v51 = v124;
      _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(v124, 1, 1, v50);
      swift_retain();
      uint64_t v52 = sub_8DE50();
      swift_bridgeObjectRelease();
      sub_221F4(v51, &qword_BD000);
      uint64_t v137 = v52;
      sub_8E1A0();
      if (v42) {
        break;
      }
      uint64_t v53 = (void *)sub_8EB30();
      sub_22318();
      sub_1CD04();
      v55(v54);
      id v56 = objc_allocWithZone((Class)SIRINLUUserStatedTask);
      id v132 = v53;
      id v57 = objc_msgSend(v56, "initWithTask:", v53, v98[0]);
      sub_8EA10();
      if (*(void *)((char *)&dword_10 + (v141 & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18
                                                                                      + (v141 & 0xFFFFFFFFFFFFFF8)) >> 1)
        sub_8EA60();
      sub_8EA80();
      sub_8EA50();
      uint64_t v58 = v129;
      sub_8D9B0();
      sub_8DA30();
      sub_8DB00();
      id v130 = v57;
      swift_beginAccess();
      sub_8DA20();
      swift_endAccess();
      os_log_t v59 = *v126;
      sub_222F4();
      v59();
      sub_8D9A0();
      sub_22318();
      v60(v135, v58, v127);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        char v77 = sub_22464();
        unint64_t v43 = (void *)sub_76D40(v77, v78, v79, v80);
      }
      unint64_t v62 = v43[2];
      unint64_t v61 = v43[3];
      uint64_t v131 = v2;
      if (v62 >= v61 >> 1)
      {
        char v81 = sub_2243C(v61);
        unint64_t v43 = (void *)sub_76D40(v81, v82, v83, v84);
      }
      uint64_t v2 = (uint64_t)v23;
      v43[2] = v62 + 1;
      sub_223B0();
      sub_224DC();
      v63();
      if (qword_BB830 != -1) {
        swift_once();
      }
      uint64_t v64 = sub_8E730();
      sub_50FC(v64, (uint64_t)qword_BFEC8);
      uint64_t v65 = sub_8E710();
      os_log_type_t v66 = sub_8EB00();
      if (os_log_type_enabled(v65, v66))
      {
        uint64_t v67 = sub_1CBDC();
        uint64_t v107 = v43;
        uint64_t v68 = (uint8_t *)v67;
        v138[0] = sub_1CC0C();
        *(_DWORD *)uint64_t v68 = v105;
        uint64_t v69 = (uint64_t)v128;
        uint64_t v106 = 0;
        sub_222F4();
        v70();
        uint64_t v71 = sub_6AE2C(v69);
        uint64_t v139 = sub_8758C(v71, v72, v138);
        sub_8EBD0();
        swift_bridgeObjectRelease();
        os_log_type_t v73 = v66;
        uint64_t v23 = (char *)v2;
        _os_log_impl(&dword_0, v65, v73, "#HomeCommunicationNLContextProvider Building UserStatedTask for disambiguating between homes: %s", v68, 0xCu);
        swift_arrayDestroy();
        sub_CC2C();
        unint64_t v43 = v107;
        sub_CC2C();
        swift_release();
        swift_release();

        swift_release();
        sub_22318();
        sub_1CD04();
        v74();
        sub_22318();
        uint64_t v42 = v106;
      }
      else
      {
        swift_release();
        swift_release();

        swift_release();
        sub_2247C();
        sub_1CD04();
        v75();
        sub_22318();
        uint64_t v23 = (char *)v2;
      }
      sub_1CD04();
      v76();
      uint64_t v44 = v133 + 16;
      if (!--v134)
      {
        swift_bridgeObjectRelease();
        sub_224A8();
        goto LABEL_24;
      }
    }
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    if (qword_BB830 != -1) {
      swift_once();
    }
    uint64_t v85 = sub_8E730();
    sub_50FC(v85, (uint64_t)qword_BFEC8);
    swift_errorRetain();
    swift_errorRetain();
    char v86 = sub_8E710();
    os_log_type_t v87 = sub_8EB10();
    if (os_log_type_enabled(v86, v87))
    {
      uint64_t v88 = (uint8_t *)sub_1CBDC();
      uint64_t v2 = sub_1CC0C();
      v138[0] = v2;
      *(_DWORD *)uint64_t v88 = v105;
      uint64_t v4 = (uint64_t)(v88 + 12);
      uint64_t v139 = v42;
      swift_errorRetain();
      sub_48AC(&qword_BD018);
      uint64_t v89 = sub_8E8E0();
      uint64_t v139 = sub_8758C(v89, v90, v138);
      sub_8EBD0();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl(&dword_0, v86, v87, "#HomeCommunicationNLContextProvider Error building system dialog act for disambiguation: %s", v88, 0xCu);
      swift_arrayDestroy();
      sub_CC2C();
      sub_CC2C();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
    sub_224A8();
  }
  else
  {
LABEL_24:
    swift_bridgeObjectRelease();
  }
  uint64_t v91 = v99;
  sub_8DAA0();
  sub_8DA90();
  uint64_t v92 = v102;
  sub_8DA70();
  uint64_t v93 = v100;
  uint64_t v94 = v101;
  sub_222F4();
  v95();
  sub_8DA50();
  sub_48AC(&qword_BD010);
  unint64_t v96 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v97 = swift_allocObject();
  *(_OWORD *)(v97 + 16) = xmmword_8FA10;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v97 + v96, v92, v2);
  (*(void (**)(uint64_t, uint64_t))(v93 + 8))(v91, v94);
  sub_2224C();
}

void sub_20D78()
{
  sub_222DC();
  uint64_t v53 = v3;
  uint64_t v4 = sub_48AC(&qword_BCFF8);
  uint64_t v5 = sub_1CCBC(v4);
  __chkstk_darwin(v5);
  sub_22300();
  uint64_t v6 = sub_48AC(&qword_BBFC0);
  uint64_t v7 = sub_1CCBC(v6);
  __chkstk_darwin(v7);
  sub_AAA8();
  uint64_t v10 = v9 - v8;
  uint64_t v51 = sub_8DD80();
  sub_5190();
  uint64_t v50 = v11;
  __chkstk_darwin(v12);
  sub_22388();
  sub_8DF30();
  sub_5190();
  uint64_t v48 = v14;
  uint64_t v49 = v13;
  __chkstk_darwin(v13);
  sub_2236C();
  uint64_t v15 = sub_8DF10();
  sub_5190();
  uint64_t v17 = v16;
  __chkstk_darwin(v18);
  sub_1CA70();
  uint64_t v20 = v19;
  sub_22360();
  sub_8DD40();
  sub_5190();
  uint64_t v52 = v21;
  __chkstk_darwin(v22);
  sub_6FF0();
  sub_6FC4();
  __chkstk_darwin(v23);
  sub_22520();
  sub_8DB90();
  sub_8DFE0();
  unint64_t v24 = sub_8DE70();
  if (v24)
  {
    unint64_t v25 = v24;
    if (v24 >> 62)
    {
      uint64_t v26 = sub_8ED40();
      if (v26)
      {
LABEL_4:
        if (__OFSUB__(v26, 1))
        {
          __break(1u);
        }
        else
        {
          uint64_t v46 = v1;
          sub_2E448(v26 - 1, (v25 & 0xC000000000000001) == 0, v25);
          uint64_t v45 = v10;
          uint64_t v47 = v2;
          if ((v25 & 0xC000000000000001) == 0)
          {
            swift_retain();
LABEL_7:
            swift_bridgeObjectRelease();
            unsigned int v44 = enum case for IdentifierAppBundle.abHomeKit(_:);
            unint64_t v43 = *(void (**)(uint64_t))(v17 + 104);
            v43(v20);
            swift_bridgeObjectRetain();
            sub_8DF00();
            (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v20, v15);
            uint64_t v42 = *(void (**)(uint64_t, void, uint64_t))(v48 + 104);
            v42(v0, enum case for IdentifierNamespace.nsSemanticValue(_:), v49);
            sub_8DF20();
            sub_2249C();
            v27();
            sub_8DD10();
            sub_8DC20();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 16))(v47, v53, v51);
            ((void (*)(uint64_t, void, uint64_t))v43)(v20, v44, v15);
            v42(v45, enum case for IdentifierNamespace.nsHomeKitEntityType(_:), v49);
            sub_223A4();
            _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(v28, v29, v30, v49);
            uint64_t v31 = enum case for UsoIdentifier.NluComponent.unknown(_:);
            uint64_t v32 = sub_8DCC0();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 104))(v46, v31, v32);
            sub_223A4();
            _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(v33, v34, v35, v32);
            sub_8DD00();
            sub_8DC20();
            swift_release();
            uint64_t v36 = *(void (**)(void))(v52 + 8);
            sub_2249C();
            v36();
            sub_2249C();
            v36();
            sub_2224C();
            return;
          }
        }
        sub_8EC70();
        goto LABEL_7;
      }
    }
    else
    {
      uint64_t v26 = *(void *)((char *)&dword_10 + (v24 & 0xFFFFFFFFFFFFFF8));
      if (v26) {
        goto LABEL_4;
      }
    }
    swift_bridgeObjectRelease();
  }
  if (qword_BB830 != -1) {
    swift_once();
  }
  uint64_t v37 = sub_8E730();
  sub_50FC(v37, (uint64_t)qword_BFEC8);
  uint64_t v54 = sub_8E710();
  os_log_type_t v38 = sub_8EB10();
  if (os_log_type_enabled(v54, v38))
  {
    uint64_t v39 = (uint8_t *)sub_CCE4();
    *(_WORD *)uint64_t v39 = 0;
    _os_log_impl(&dword_0, v54, v38, "Unable to get name string builder", v39, 2u);
    sub_CC2C();
  }
  sub_2224C();
}

void sub_212EC()
{
  sub_222DC();
  uint64_t v76 = v0;
  uint64_t v2 = v1;
  uint64_t v3 = sub_8D800();
  sub_5190();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  sub_1CA70();
  uint64_t v67 = v7;
  uint64_t v8 = sub_48AC(&qword_BCFF0);
  uint64_t v9 = sub_1CCBC(v8);
  __chkstk_darwin(v9);
  sub_1CA70();
  uint64_t v75 = v10;
  sub_22360();
  uint64_t v74 = sub_8D180();
  sub_5190();
  uint64_t v12 = v11;
  __chkstk_darwin(v13);
  sub_22388();
  uint64_t v80 = sub_8D1E0();
  sub_5190();
  __chkstk_darwin(v14);
  sub_222BC(v15, v64);
  __chkstk_darwin(v16);
  int64_t v78 = (char *)&v64 - v17;
  sub_6FC4();
  uint64_t v19 = __chkstk_darwin(v18);
  sub_2252C(v19, v20, v21, v22, v23, v24, v25, v26, v64);
  uint64_t v28 = _swiftEmptyArrayStorage;
  char v81 = _swiftEmptyArrayStorage;
  uint64_t v29 = *(void *)(v2 + 16);
  if (v29)
  {
    uint64_t v65 = v5;
    uint64_t v66 = v3;
    char v77 = (void (**)(uint64_t))(v27 + 16);
    uint64_t v69 = v12 + 32;
    uint64_t v70 = v27 + 32;
    uint64_t v71 = v27;
    uint64_t v68 = v27 + 8;
    swift_bridgeObjectRetain();
    uint64_t v64 = v2;
    uint64_t v30 = (void *)(v2 + 40);
    uint64_t v72 = v12;
    do
    {
      uint64_t v31 = HIBYTE(*v30) & 0xFLL;
      if ((*v30 & 0x2000000000000000) == 0) {
        uint64_t v31 = *(v30 - 1) & 0xFFFFFFFFFFFFLL;
      }
      if (v31)
      {
        uint64_t v32 = v76;
        sub_98C0(v76, v76[3]);
        swift_bridgeObjectRetain();
        sub_8DC10();
        sub_98C0(v32, v32[3]);
        sub_73E74();
        sub_8D1D0();
        uint64_t v33 = *v77;
        sub_222F4();
        v33(v34);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          char v51 = sub_22464();
          uint64_t v28 = (void *)sub_76CB0(v51, v52, v53, v54);
        }
        unint64_t v36 = v28[2];
        unint64_t v35 = v28[3];
        if (v36 >= v35 >> 1)
        {
          char v55 = sub_2243C(v35);
          uint64_t v28 = (void *)sub_76CB0(v55, v56, v57, v58);
        }
        v28[2] = v36 + 1;
        sub_223B0();
        uint64_t v37 = v80;
        sub_224DC();
        v39(v38);
        uint64_t v40 = v79;
        ((void (*)(uint64_t, uint64_t, uint64_t))v33)(v75, v79, v37);
        sub_223A4();
        _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(v41, v42, v43, v37);
        ((void (*)(uint64_t, uint64_t, uint64_t))v33)(v73, v40, v37);
        sub_8D170();
        uint64_t v44 = (uint64_t)v81;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          char v59 = sub_22454();
          uint64_t v44 = sub_76A34(v59, v60, v61, v44);
        }
        unint64_t v46 = *(void *)(v44 + 16);
        unint64_t v45 = *(void *)(v44 + 24);
        if (v46 >= v45 >> 1) {
          uint64_t v44 = sub_76A34(v45 > 1, v46 + 1, 1, v44);
        }
        *(void *)(v44 + 16) = v46 + 1;
        sub_224DC();
        v48(v47);
        char v81 = (void *)v44;
        sub_1CD04();
        v50(v49);
      }
      v30 += 2;
      --v29;
    }
    while (v29);
    swift_bridgeObjectRelease();
    uint64_t v5 = v65;
    uint64_t v3 = v66;
  }
  if (qword_BB8D8 != -1) {
    swift_once();
  }
  sub_8DBF0();
  uint64_t v62 = v67;
  sub_8D7E0();
  uint64_t v63 = sub_8D7F0();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v62, v3);
  sub_2DC04(v63);
  sub_2224C();
}

void sub_21778()
{
  sub_222DC();
  unint64_t v1 = v0;
  uint64_t v76 = sub_8CAC0();
  sub_5190();
  uint64_t v3 = v2;
  __chkstk_darwin(v4);
  sub_1CA70();
  uint64_t v75 = v5;
  sub_22360();
  uint64_t v6 = sub_8E7F0();
  sub_5190();
  uint64_t v62 = v7;
  __chkstk_darwin(v8);
  uint64_t v67 = (char *)v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_6FC4();
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v13 = (char *)v58 - v12;
  uint64_t v14 = __chkstk_darwin(v11);
  sub_2252C(v14, v15, v16, v17, v18, v19, v20, v21, v58[0]);
  uint64_t v22 = sub_48AC(&qword_BCFE0);
  uint64_t v23 = sub_1CCBC(v22);
  __chkstk_darwin(v23);
  sub_222BC(v24, v58[0]);
  __chkstk_darwin(v25);
  uint64_t v73 = (char *)v58 - v26;
  sub_6FC4();
  __chkstk_darwin(v27);
  uint64_t v29 = (char *)v58 - v28;
  sub_8E7A0();
  sub_CB8C();
  uint64_t v77 = sub_8E790();
  if (!(v1 >> 62))
  {
    uint64_t v30 = *(void *)((char *)&dword_10 + (v1 & 0xFFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain();
    if (v30) {
      goto LABEL_3;
    }
LABEL_25:
    swift_release();
    swift_bridgeObjectRelease();
    sub_2224C();
    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v30 = sub_8ED40();
  if (!v30) {
    goto LABEL_25;
  }
LABEL_3:
  if (v30 >= 1)
  {
    char v61 = v13;
    uint64_t v32 = 0;
    unint64_t v79 = v1 & 0xC000000000000001;
    uint64_t v70 = v3 + 8;
    uint64_t v65 = (void (**)(char *, uint64_t))(v62 + 8);
    uint64_t v66 = (void (**)(void))(v62 + 16);
    uint64_t v60 = v62 + 32;
    int64_t v78 = _swiftEmptyArrayStorage;
    unint64_t v69 = 0x8000000000096CB0;
    *(void *)&long long v31 = 136315138;
    long long v59 = v31;
    v58[1] = (uint64_t)&type metadata for Any + 8;
    uint64_t v63 = v29;
    uint64_t v71 = v30;
    unint64_t v72 = v1;
    uint64_t v68 = v6;
    do
    {
      if (v79) {
        id v33 = (id)sub_8EC70();
      }
      else {
        id v33 = *(id *)(v1 + 8 * v32 + 32);
      }
      uint64_t v34 = v33;
      if (sub_21E98(v33))
      {
        uint64_t v35 = sub_8E770();
        _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0((uint64_t)v29, 1, 1, v35);
        uint64_t v36 = (uint64_t)v73;
        sub_8E780();
        sub_221F4((uint64_t)v29, &qword_BCFE0);
        _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(v36, 0, 1, v35);
        sub_220D4(v36, (uint64_t)v29);
        sub_8CAB0();
        sub_8CA90();
        sub_1CD04();
        v37();
        sub_2213C((uint64_t)v29, v74);
        sub_8D10(0, (unint64_t *)&qword_BCFD8);
        swift_retain();
        id v38 = v34;
        sub_8E7D0();
        id v64 = v38;
        uint64_t v39 = v68;
        if (qword_BB830 != -1) {
          swift_once();
        }
        uint64_t v40 = sub_8E730();
        sub_50FC(v40, (uint64_t)qword_BFEC8);
        uint64_t v41 = *v66;
        uint64_t v42 = v61;
        sub_222F4();
        v41();
        uint64_t v43 = sub_8E710();
        os_log_type_t v44 = sub_8EB00();
        if (os_log_type_enabled(v43, v44))
        {
          uint64_t v45 = sub_1CBDC();
          uint64_t v81 = sub_1CC0C();
          *(_DWORD *)uint64_t v45 = v59;
          sub_221A4();
          uint64_t v46 = sub_8EE20();
          *(void *)(v45 + 4) = sub_8758C(v46, v47, &v81);
          swift_bridgeObjectRelease();
          uint64_t v48 = *v65;
          (*v65)(v42, v68);
          _os_log_impl(&dword_0, v43, v44, "#HomeCommunicationNLContextProvider rrEntity: %s", (uint8_t *)v45, 0xCu);
          swift_arrayDestroy();
          sub_CC2C();
          uint64_t v39 = v68;
          sub_CC2C();
        }
        else
        {
          uint64_t v48 = *v65;
          (*v65)(v42, v39);
        }

        sub_222F4();
        v41();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v1 = v72;
        if (isUniquelyReferenced_nonNull_native)
        {
          uint64_t v50 = (uint64_t)v78;
        }
        else
        {
          char v54 = sub_22454();
          uint64_t v50 = sub_76CF8(v54, v55, v56, v57);
        }
        unint64_t v52 = *(void *)(v50 + 16);
        unint64_t v51 = *(void *)(v50 + 24);
        if (v52 >= v51 >> 1) {
          uint64_t v50 = sub_76CF8(v51 > 1, v52 + 1, 1, v50);
        }
        *(void *)(v50 + 16) = v52 + 1;
        int64_t v78 = (void *)v50;
        sub_224DC();
        v53();
        swift_release();

        v48(v80, v39);
        uint64_t v29 = v63;
        sub_221F4((uint64_t)v63, &qword_BCFE0);
        uint64_t v30 = v71;
      }
      else
      {
      }
      ++v32;
    }
    while (v30 != v32);
    goto LABEL_25;
  }
  __break(1u);
}

uint64_t sub_21E98(void *a1)
{
  uint64_t v2 = sub_8DD80();
  sub_5190();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  sub_AAA8();
  uint64_t v8 = v7 - v6;
  id v9 = [a1 home];
  if (v9)
  {
    uint64_t v10 = v9;
    id v11 = [v9 spokenPhrase];

    sub_8E8D0();
  }
  sub_8DBB0();
  sub_CB8C();
  sub_8DBA0();
  (*(void (**)(uint64_t, void, uint64_t))(v4 + 104))(v8, enum case for IdentifierValue.vHomeAutomationHome(_:), v2);
  sub_20D78();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v8, v2);
  uint64_t v12 = sub_8DFD0();
  swift_release();
  return v12;
}

uint64_t sub_22004()
{
  return sub_8D6A0();
}

uint64_t sub_22038()
{
  uint64_t v0 = sub_8D6D0();

  return _swift_deallocClassInstance(v0, 16, 7);
}

uint64_t type metadata accessor for HomeCommunicationNLContextProvider()
{
  return sub_49A0();
}

unint64_t sub_22080()
{
  unint64_t result = qword_BCFD0;
  if (!qword_BCFD0)
  {
    sub_9950(&qword_BC760);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BCFD0);
  }
  return result;
}

uint64_t sub_220D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_48AC(&qword_BCFE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2213C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_48AC(&qword_BCFE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_221A4()
{
  unint64_t result = qword_BCFE8;
  if (!qword_BCFE8)
  {
    sub_8E7F0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BCFE8);
  }
  return result;
}

uint64_t sub_221F4(uint64_t a1, uint64_t *a2)
{
  sub_48AC(a2);
  sub_1CD04();
  v3();
  return a1;
}

uint64_t sub_22264(uint64_t a1, uint64_t a2)
{
  *(void *)(v3 - 96) = a1;
  *(void *)(v3 - 88) = a2;
  *(void *)(v3 - 112) = 32;
  *(void *)(v3 - 104) = v2;
  *(void *)(v3 - 128) = 95;
  *(void *)(v3 - 120) = v2;
  return sub_8EBF0();
}

void sub_222BC(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 160) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

BOOL sub_22324(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t sub_22340()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_22360()
{
  return 0;
}

uint64_t sub_2236C()
{
  return 0;
}

uint64_t sub_22388()
{
  return 0;
}

uint64_t sub_223C8()
{
  return swift_allocObject();
}

uint64_t sub_223E0()
{
  return swift_bridgeObjectRelease();
}

unint64_t sub_223FC()
{
  return sub_1E3A4(v0, v1, 3);
}

uint64_t sub_22418()
{
  return sub_8EBF0();
}

BOOL sub_2243C@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

uint64_t sub_22454()
{
  return 0;
}

uint64_t sub_22464()
{
  return 0;
}

uint64_t sub_2247C()
{
  return v0;
}

void sub_224BC(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0xCu);
}

uint64_t sub_224E8()
{
  return sub_8E900();
}

uint64_t sub_22508()
{
  return swift_beginAccess();
}

void sub_2252C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v10 - 112) = (char *)&a9 - v9;
}

double sub_22540@<D0>(uint64_t a1@<X8>)
{
  return sub_22558(a1);
}

double sub_22558@<D0>(uint64_t a1@<X8>)
{
  *(void *)(a1 + 32) = 0;
  double result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t sub_22568()
{
  return 7;
}

BOOL sub_22578()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 96) + 16);
  sub_23008(v0, (uint64_t)v7);
  if (v1)
  {
    sub_23064((uint64_t)v7);
    sub_23008(v0, (uint64_t)v5);
  }
  else
  {
    uint64_t v2 = *(void *)(v8 + 16);
    sub_23064((uint64_t)v7);
    sub_23008(v0, (uint64_t)v5);
    if (!v2)
    {
      BOOL v3 = *(void *)(v6 + 16) != 0;
      goto LABEL_5;
    }
  }
  BOOL v3 = 1;
LABEL_5:
  sub_23064((uint64_t)v5);
  return v3;
}

BOOL sub_22610(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 - 8);
  uint64_t v5 = __chkstk_darwin(a1);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v5);
  uint64_t v10 = (char *)&v20 - v9;
  uint64_t v12 = *(void *)((*(uint64_t (**)(uint64_t))(v11 + 112))(v8) + 16);
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void (**)(void))(v4 + 16);
  sub_234A0();
  v13();
  if (v12)
  {
    BOOL v14 = 1;
  }
  else
  {
    uint64_t v15 = *(void *)((*(uint64_t (**)(uint64_t, uint64_t))(a2 + 104))(a1, a2) + 16);
    swift_bridgeObjectRelease();
    BOOL v14 = v15 != 0;
  }
  uint64_t v16 = *(void (**)(char *, uint64_t))(v4 + 8);
  v16(v10, a1);
  sub_234A0();
  v13();
  if (v14)
  {
    BOOL v17 = 1;
  }
  else
  {
    uint64_t v18 = *(void *)((*(uint64_t (**)(uint64_t, uint64_t))(a2 + 96))(a1, a2) + 16);
    swift_bridgeObjectRelease();
    BOOL v17 = v18 != 0;
  }
  v16(v7, a1);
  return v17;
}

void *sub_227CC()
{
  return &_swiftEmptyArrayStorage;
}

uint64_t sub_227E0()
{
  return 0;
}

uint64_t sub_227E8(uint64_t a1, uint64_t a2)
{
  uint64_t v66 = 0;
  unint64_t v67 = 0xE000000000000000;
  sub_8EC40(478);
  uint64_t v70 = 0;
  unint64_t v71 = 0xE000000000000000;
  v4._uint64_t countAndFlagsBits = 0xD000000000000023;
  sub_233FC(v4, (uint64_t)"HomeCommunicationNLIntent:\n    app=");
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a2 + 24))(&v66, a1, a2);
  uint64_t v5 = v68;
  if (v68)
  {
    uint64_t v6 = v69;
    sub_98C0(&v66, v68);
    uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v5, v6);
    uint64_t v9 = v8;
    sub_4950((uint64_t)&v66);
    if (v9) {
      goto LABEL_6;
    }
  }
  else
  {
    sub_22E54((uint64_t)&v66);
  }
  swift_bridgeObjectRelease();
  uint64_t v9 = (void *)0xE300000000000000;
  uint64_t v7 = 7104878;
LABEL_6:
  v72._uint64_t countAndFlagsBits = v7;
  v72._object = v9;
  sub_8E960(v72);
  swift_bridgeObjectRelease();
  sub_2346C();
  uint64_t countAndFlagsBits = v73._countAndFlagsBits;
  sub_8E960(v73);
  uint64_t v10 = sub_233E8();
  char v12 = v11(v10);
  v13._uint64_t countAndFlagsBits = 7104878;
  if (v12 != 7) {
    v13._uint64_t countAndFlagsBits = sub_73FA8(v12);
  }
  sub_2343C(v13);
  swift_bridgeObjectRelease();
  v14._uint64_t countAndFlagsBits = 0xD000000000000013;
  sub_233FC(v14, (uint64_t)"\n    hasSmsContact=");
  uint64_t v15 = sub_233E8();
  if (v16(v15)) {
    v17._uint64_t countAndFlagsBits = 1702195828;
  }
  else {
    v17._uint64_t countAndFlagsBits = 0x65736C6166;
  }
  sub_2343C(v17);
  swift_bridgeObjectRelease();
  v18._uint64_t countAndFlagsBits = 0xD00000000000001DLL;
  sub_233FC(v18, (uint64_t)"\n    hasEverywhereOrEveryone=");
  uint64_t v19 = sub_233E8();
  if (v20(v19)) {
    v21._uint64_t countAndFlagsBits = 1702195828;
  }
  else {
    v21._uint64_t countAndFlagsBits = 0x65736C6166;
  }
  sub_2343C(v21);
  swift_bridgeObjectRelease();
  v22._uint64_t countAndFlagsBits = 0xD000000000000027;
  sub_233FC(v22, (uint64_t)"\n    homeAutomationUnknownDestinations=");
  uint64_t v23 = sub_233E8();
  v24(v23);
  v74._uint64_t countAndFlagsBits = sub_8EA40();
  sub_8E960(v74);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v75._uint64_t countAndFlagsBits = 0xD00000000000001FLL;
  sub_2343C(v75);
  uint64_t v25 = sub_233E8();
  v26(v25);
  v76._uint64_t countAndFlagsBits = sub_8EA40();
  sub_23454(v76);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v27._uint64_t countAndFlagsBits = 0xD000000000000021;
  sub_233FC(v27, (uint64_t)"\n    homeAutomationServiceGroups=");
  uint64_t v28 = sub_233E8();
  v29(v28);
  v77._uint64_t countAndFlagsBits = sub_234B4();
  sub_23454(v77);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23418((uint64_t)"\n    homeAutomationZones=");
  uint64_t v30 = sub_233E8();
  v31(v30);
  v78._uint64_t countAndFlagsBits = sub_234B4();
  sub_23454(v78);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23418((uint64_t)"\n    homeAutomationHomes=");
  uint64_t v32 = *(void (**)(uint64_t))(a2 + 112);
  uint64_t v33 = sub_2347C();
  v32(v33);
  v79._uint64_t countAndFlagsBits = sub_234B4();
  sub_23454(v79);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23418((uint64_t)"\n    homeAutomationRooms=");
  uint64_t v34 = sub_233E8();
  v35(v34);
  v80._uint64_t countAndFlagsBits = sub_234B4();
  sub_23454(v80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v36._uint64_t countAndFlagsBits = 0xD000000000000011;
  sub_233FC(v36, (uint64_t)"\n    startTimeMs=");
  uint64_t v37 = sub_233E8();
  uint64_t v66 = v38(v37);
  LOBYTE(v67) = v39 & 1;
  sub_48AC(&qword_BD030);
  v81._uint64_t countAndFlagsBits = sub_8E8E0();
  sub_23454(v81);
  swift_bridgeObjectRelease();
  v82._uint64_t countAndFlagsBits = 0x646E65202020200ALL;
  v82._object = (void *)0xEF3D734D656D6954;
  sub_8E960(v82);
  uint64_t v40 = sub_233E8();
  uint64_t v66 = v41(v40);
  LOBYTE(v67) = v42 & 1;
  v83._uint64_t countAndFlagsBits = sub_8E8E0();
  sub_8E960(v83);
  swift_bridgeObjectRelease();
  sub_2346C();
  v84._uint64_t countAndFlagsBits = countAndFlagsBits;
  sub_8E960(v84);
  uint64_t v43 = sub_233E8();
  v45._uint64_t countAndFlagsBits = v44(v43);
  if (v45._object)
  {
    object = v45._object;
  }
  else
  {
    v45._uint64_t countAndFlagsBits = 0;
    object = (void *)0xE000000000000000;
  }
  v45._object = object;
  sub_8E960(v45);
  swift_bridgeObjectRelease();
  v85._uint64_t countAndFlagsBits = 0xD00000000000001FLL;
  v85._object = (void *)0x8000000000096D90;
  sub_8E960(v85);
  uint64_t v47 = sub_2347C();
  v32(v47);
  v86._uint64_t countAndFlagsBits = sub_8EA40();
  sub_8E960(v86);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2346C();
  v87._uint64_t countAndFlagsBits = 0xD00000000000001DLL;
  sub_8E960(v87);
  uint64_t v48 = sub_233E8();
  v50._uint64_t countAndFlagsBits = v49(v48);
  uint64_t v51 = 7104878;
  if (!v50._object) {
    v50._uint64_t countAndFlagsBits = 7104878;
  }
  unint64_t v52 = (void *)0xE300000000000000;
  sub_2343C(v50);
  swift_bridgeObjectRelease();
  v53._uint64_t countAndFlagsBits = 0xD000000000000023;
  sub_233FC(v53, (uint64_t)"\n    homeCommunicationConfirmation=");
  uint64_t v54 = sub_233E8();
  v88._uint64_t countAndFlagsBits = qword_91088[v55(v54)];
  sub_2343C(v88);
  swift_bridgeObjectRelease();
  v56._uint64_t countAndFlagsBits = 0xD000000000000010;
  sub_233FC(v56, (uint64_t)"\n    homeFilter=");
  uint64_t v57 = sub_233E8();
  long long v59 = (void *)v58(v57);
  if (v59)
  {
    uint64_t v60 = v59;
    id v61 = [v59 entityName];

    if (v61)
    {
      id v62 = [v61 spokenPhrase];

      uint64_t v51 = sub_8E8D0();
      unint64_t v52 = v63;
    }
  }
  v89._uint64_t countAndFlagsBits = v51;
  v89._object = v52;
  sub_8E960(v89);
  swift_bridgeObjectRelease();
  return v70;
}

uint64_t sub_22E34(char a1)
{
  return qword_910C8[a1];
}

uint64_t sub_22E54(uint64_t a1)
{
  uint64_t v2 = sub_48AC(&qword_BD028);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_22EB4(uint64_t a1, void *a2)
{
  v6._uint64_t countAndFlagsBits = a1;
  v3._rawValue = &off_B4160;
  v6._object = a2;
  unint64_t v4 = sub_8ED80(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 3) {
    return 3;
  }
  else {
    return v4;
  }
}

uint64_t sub_22F00()
{
  return sub_24A80();
}

Swift::Int sub_22F0C()
{
  return sub_24CD8();
}

uint64_t sub_22F14()
{
  return sub_25170();
}

Swift::Int sub_22F1C()
{
  return sub_2521C();
}

uint64_t sub_22F24@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_22EB4(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_22F54@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_22E34(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_22F80(void *a1@<X8>)
{
  *a1 = &off_B41C8;
}

uint64_t sub_22F90(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_23304();
  unint64_t v5 = sub_23350();
  unint64_t v6 = sub_2339C();

  return static TerminalNodeBoundedSemanticValue<>.fromIntentNodeValue(_:)(a1, a2, v4, v5, v6);
}

uint64_t sub_23008(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_23064(uint64_t a1)
{
  return a1;
}

unsigned char *storeEnumTagSinglePayload for HomeCommunicationConfirmation(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x23184);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HomeCommunicationConfirmation()
{
  return &type metadata for HomeCommunicationConfirmation;
}

unint64_t sub_231C0()
{
  unint64_t result = qword_BD038;
  if (!qword_BD038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BD038);
  }
  return result;
}

unint64_t sub_23210()
{
  unint64_t result = qword_BD040;
  if (!qword_BD040)
  {
    sub_9950(&qword_BD048);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BD040);
  }
  return result;
}

unint64_t sub_23268()
{
  unint64_t result = qword_BD050;
  if (!qword_BD050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BD050);
  }
  return result;
}

unint64_t sub_232B8()
{
  unint64_t result = qword_BD058;
  if (!qword_BD058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BD058);
  }
  return result;
}

unint64_t sub_23304()
{
  unint64_t result = qword_BD060;
  if (!qword_BD060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BD060);
  }
  return result;
}

unint64_t sub_23350()
{
  unint64_t result = qword_BD068;
  if (!qword_BD068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BD068);
  }
  return result;
}

unint64_t sub_2339C()
{
  unint64_t result = qword_BD070;
  if (!qword_BD070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BD070);
  }
  return result;
}

uint64_t sub_233E8()
{
  return v0;
}

void sub_233FC(Swift::String a1@<X1:X0>, uint64_t a2@<X8>)
{
  a1._object = (void *)((a2 - 32) | 0x8000000000000000);
  sub_8E960(a1);
}

void sub_23418(uint64_t a1@<X8>)
{
  v2._uint64_t countAndFlagsBits = 0xD000000000000019;
  v2._object = (void *)((a1 - 32) | 0x8000000000000000);
  sub_8E960(v2);
}

void sub_2343C(Swift::String a1)
{
  a1._object = v1;
  sub_8E960(a1);
}

void sub_23454(Swift::String a1)
{
  sub_8E960(a1);
}

uint64_t sub_2347C()
{
  return v0;
}

uint64_t sub_23494()
{
  return 0;
}

uint64_t sub_234B4()
{
  return sub_8EA40();
}

uint64_t sub_234CC()
{
  uint64_t v29 = 0;
  unint64_t v30 = 0xE000000000000000;
  sub_8EC40(478);
  uint64_t v33 = 0;
  unint64_t v34 = 0xE000000000000000;
  v35._uint64_t countAndFlagsBits = 0xD000000000000023;
  v35._object = (void *)0x8000000000096CD0;
  sub_8E960(v35);
  sub_24518(v0 + 8, (uint64_t)&v29);
  uint64_t v1 = v31;
  if (v31)
  {
    uint64_t v2 = v32;
    sub_98C0(&v29, v31);
    uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
    uint64_t v5 = v4;
    sub_4950((uint64_t)&v29);
    if (v5) {
      goto LABEL_6;
    }
  }
  else
  {
    sub_22E54((uint64_t)&v29);
  }
  swift_bridgeObjectRelease();
  uint64_t v5 = (void *)0xE300000000000000;
  uint64_t v3 = 7104878;
LABEL_6:
  v36._uint64_t countAndFlagsBits = v3;
  v36._object = v5;
  sub_8E960(v36);
  swift_bridgeObjectRelease();
  v37._uint64_t countAndFlagsBits = 0xD000000000000014;
  v37._object = (void *)0x8000000000096D00;
  sub_8E960(v37);
  int v6 = *(unsigned __int8 *)(v0 + 48);
  if (v6 == 7)
  {
    object = (void *)0xE300000000000000;
    v8._uint64_t countAndFlagsBits = 7104878;
  }
  else
  {
    v8._uint64_t countAndFlagsBits = sub_73FA8(v6);
    object = v8._object;
  }
  v8._object = object;
  sub_8E960(v8);
  swift_bridgeObjectRelease();
  v38._uint64_t countAndFlagsBits = 0xD000000000000013;
  v38._object = (void *)0x8000000000096D20;
  sub_8E960(v38);
  if (*(unsigned char *)(v0 + 49)) {
    v9._uint64_t countAndFlagsBits = 1702195828;
  }
  else {
    v9._uint64_t countAndFlagsBits = 0x65736C6166;
  }
  if (*(unsigned char *)(v0 + 49)) {
    uint64_t v10 = (void *)0xE400000000000000;
  }
  else {
    uint64_t v10 = (void *)0xE500000000000000;
  }
  v9._object = v10;
  sub_8E960(v9);
  swift_bridgeObjectRelease();
  v39._object = (void *)0x8000000000096D40;
  v39._uint64_t countAndFlagsBits = 0xD00000000000001DLL;
  sub_8E960(v39);
  if (*(unsigned char *)(v0 + 51)) {
    v11._uint64_t countAndFlagsBits = 1702195828;
  }
  else {
    v11._uint64_t countAndFlagsBits = 0x65736C6166;
  }
  if (*(unsigned char *)(v0 + 51)) {
    char v12 = (void *)0xE400000000000000;
  }
  else {
    char v12 = (void *)0xE500000000000000;
  }
  v11._object = v12;
  sub_8E960(v11);
  swift_bridgeObjectRelease();
  v40._uint64_t countAndFlagsBits = 0xD000000000000027;
  v40._object = (void *)0x8000000000096D60;
  sub_8E960(v40);
  swift_bridgeObjectRetain();
  v41._uint64_t countAndFlagsBits = sub_8EA40();
  sub_8E960(v41);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v42._uint64_t countAndFlagsBits = 0xD00000000000001FLL;
  v42._object = (void *)0x8000000000096D90;
  sub_8E960(v42);
  swift_bridgeObjectRetain();
  v43._uint64_t countAndFlagsBits = sub_8EA40();
  sub_8E960(v43);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v44._uint64_t countAndFlagsBits = 0xD000000000000021;
  v44._object = (void *)0x8000000000096DB0;
  sub_8E960(v44);
  swift_bridgeObjectRetain();
  v45._uint64_t countAndFlagsBits = sub_8EA40();
  sub_8E960(v45);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v46._object = (void *)0x8000000000096DE0;
  v46._uint64_t countAndFlagsBits = 0xD000000000000019;
  sub_8E960(v46);
  swift_bridgeObjectRetain();
  v47._uint64_t countAndFlagsBits = sub_8EA40();
  sub_8E960(v47);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v48._object = (void *)0x8000000000096E00;
  v48._uint64_t countAndFlagsBits = 0xD000000000000019;
  sub_8E960(v48);
  swift_bridgeObjectRetain();
  v49._uint64_t countAndFlagsBits = sub_8EA40();
  sub_8E960(v49);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v50._object = (void *)0x8000000000096E20;
  v50._uint64_t countAndFlagsBits = 0xD000000000000019;
  sub_8E960(v50);
  swift_bridgeObjectRetain();
  v51._uint64_t countAndFlagsBits = sub_8EA40();
  sub_8E960(v51);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v52._uint64_t countAndFlagsBits = 0xD000000000000011;
  v52._object = (void *)0x8000000000096E40;
  sub_8E960(v52);
  char v13 = *(unsigned char *)(v0 + 120);
  uint64_t v29 = *(void *)(v0 + 112);
  LOBYTE(v30) = v13;
  sub_48AC(&qword_BD030);
  v53._uint64_t countAndFlagsBits = sub_8E8E0();
  sub_8E960(v53);
  swift_bridgeObjectRelease();
  v54._uint64_t countAndFlagsBits = 0x646E65202020200ALL;
  v54._object = (void *)0xEF3D734D656D6954;
  sub_8E960(v54);
  char v14 = *(unsigned char *)(v0 + 136);
  uint64_t v29 = *(void *)(v0 + 128);
  LOBYTE(v30) = v14;
  v55._uint64_t countAndFlagsBits = sub_8E8E0();
  sub_8E960(v55);
  swift_bridgeObjectRelease();
  v56._object = (void *)0x8000000000096E60;
  v56._uint64_t countAndFlagsBits = 0xD000000000000014;
  sub_8E960(v56);
  uint64_t v15 = *(void *)(v0 + 152);
  if (v15) {
    uint64_t v16 = *(void *)(v0 + 144);
  }
  else {
    uint64_t v16 = 0;
  }
  if (v15) {
    Swift::String v17 = *(void **)(v0 + 152);
  }
  else {
    Swift::String v17 = (void *)0xE000000000000000;
  }
  swift_bridgeObjectRetain();
  v57._uint64_t countAndFlagsBits = v16;
  v57._object = v17;
  sub_8E960(v57);
  swift_bridgeObjectRelease();
  v58._uint64_t countAndFlagsBits = 0xD00000000000001FLL;
  v58._object = (void *)0x8000000000096D90;
  sub_8E960(v58);
  swift_bridgeObjectRetain();
  v59._uint64_t countAndFlagsBits = sub_8EA40();
  sub_8E960(v59);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v60._object = (void *)0x8000000000096E80;
  v60._uint64_t countAndFlagsBits = 0xD00000000000001DLL;
  sub_8E960(v60);
  if (*(void *)(v0 + 176))
  {
    uint64_t v18 = *(void *)(v0 + 168);
    uint64_t v19 = *(void **)(v0 + 176);
  }
  else
  {
    uint64_t v19 = (void *)0xE300000000000000;
    uint64_t v18 = 7104878;
  }
  swift_bridgeObjectRetain();
  v61._uint64_t countAndFlagsBits = v18;
  v61._object = v19;
  sub_8E960(v61);
  swift_bridgeObjectRelease();
  v62._uint64_t countAndFlagsBits = 0xD000000000000023;
  v62._object = (void *)0x8000000000096EA0;
  sub_8E960(v62);
  uint64_t v20 = *(char *)(v0 + 184);
  v63._uint64_t countAndFlagsBits = qword_91168[v20];
  v63._object = (void *)qword_91188[v20];
  sub_8E960(v63);
  swift_bridgeObjectRelease();
  v64._uint64_t countAndFlagsBits = 0xD000000000000010;
  v64._object = (void *)0x8000000000096ED0;
  sub_8E960(v64);
  Swift::String v21 = *(void **)(v0 + 192);
  if (v21 && (id v22 = [v21 entityName]) != 0)
  {
    uint64_t v23 = v22;
    id v24 = [v22 spokenPhrase];

    uint64_t v25 = sub_8E8D0();
    Swift::String v27 = v26;
  }
  else
  {
    Swift::String v27 = (void *)0xE300000000000000;
    uint64_t v25 = 7104878;
  }
  v65._uint64_t countAndFlagsBits = v25;
  v65._object = v27;
  sub_8E960(v65);
  swift_bridgeObjectRelease();
  return v33;
}

double sub_23B54@<D0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v6 = 0;
  memset(v5, 0, sizeof(v5));
  *(unsigned char *)a2 = 0;
  sub_23D08((uint64_t)v5, a2 + 8);
  *(void *)&double result = 2031623;
  *(_DWORD *)(a2 + 48) = 2031623;
  *(void *)(a2 + 56) = &_swiftEmptyArrayStorage;
  *(void *)(a2 + 64) = &_swiftEmptyArrayStorage;
  *(void *)(a2 + 72) = &_swiftEmptyArrayStorage;
  *(void *)(a2 + 80) = &_swiftEmptyArrayStorage;
  *(void *)(a2 + 88) = &_swiftEmptyArrayStorage;
  *(void *)(a2 + 96) = &_swiftEmptyArrayStorage;
  *(void *)(a2 + 104) = 0;
  *(void *)(a2 + 112) = 0;
  *(unsigned char *)(a2 + 120) = 1;
  *(void *)(a2 + 128) = 0;
  *(unsigned char *)(a2 + 136) = 1;
  *(void *)(a2 + 144) = 0;
  *(void *)(a2 + 152) = 0;
  *(void *)(a2 + 168) = 0;
  *(void *)(a2 + 176) = 0;
  *(void *)(a2 + 160) = &_swiftEmptyArrayStorage;
  *(unsigned char *)(a2 + 184) = a1;
  *(void *)(a2 + 192) = 0;
  return result;
}

__n128 sub_23BE4@<Q0>(char a1@<W0>, uint64_t a2@<X1>, char a3@<W2>, char a4@<W3>, char a5@<W4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, long long a10, long long a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, char a16, long long a17, __n128 a18, uint64_t a19, char a20,uint64_t a21)
{
  *(unsigned char *)a9 = a1;
  sub_23D08(a2, a9 + 8);
  *(unsigned char *)(a9 + 48) = a3;
  *(unsigned char *)(a9 + 49) = a4;
  *(unsigned char *)(a9 + 50) = a5;
  *(unsigned char *)(a9 + 51) = a6;
  *(void *)(a9 + 56) = a7;
  *(void *)(a9 + 64) = a8;
  *(_OWORD *)(a9 + 72) = a10;
  *(_OWORD *)(a9 + 88) = a11;
  *(void *)(a9 + 104) = a12;
  *(void *)(a9 + 112) = a13;
  *(unsigned char *)(a9 + 120) = a14 & 1;
  *(void *)(a9 + 128) = a15;
  *(unsigned char *)(a9 + 136) = a16 & 1;
  __n128 result = a18;
  *(_OWORD *)(a9 + 144) = a17;
  *(__n128 *)(a9 + 160) = a18;
  *(void *)(a9 + 176) = a19;
  *(unsigned char *)(a9 + 184) = a20;
  *(void *)(a9 + 192) = a21;
  return result;
}

uint64_t sub_23D08(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_48AC(&qword_BD028);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void destroy for HomeCommunicationNLv4Intent(uint64_t a1)
{
  if (*(void *)(a1 + 32)) {
    sub_4950(a1 + 8);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void **)(a1 + 192);
}

uint64_t initializeWithCopy for HomeCommunicationNLv4Intent(uint64_t a1, char *a2)
{
  char v5 = *a2;
  uint64_t v4 = a2 + 8;
  *(unsigned char *)a1 = v5;
  uint64_t v6 = a1 + 8;
  uint64_t v7 = *((void *)a2 + 4);
  if (v7)
  {
    uint64_t v8 = *((void *)a2 + 5);
    *(void *)(a1 + 32) = v7;
    *(void *)(a1 + 40) = v8;
    (**(void (***)(uint64_t, uint64_t))(v7 - 8))(v6, (uint64_t)v4);
  }
  else
  {
    long long v9 = *((_OWORD *)v4 + 1);
    *(_OWORD *)uint64_t v6 = *(_OWORD *)v4;
    *(_OWORD *)(v6 + 16) = v9;
    *(void *)(v6 + 32) = *((void *)v4 + 4);
  }
  *(_DWORD *)(a1 + 48) = *((_DWORD *)a2 + 12);
  uint64_t v10 = *((void *)a2 + 8);
  *(void *)(a1 + 56) = *((void *)a2 + 7);
  *(void *)(a1 + 64) = v10;
  uint64_t v11 = *((void *)a2 + 10);
  *(void *)(a1 + 72) = *((void *)a2 + 9);
  *(void *)(a1 + 80) = v11;
  uint64_t v12 = *((void *)a2 + 12);
  *(void *)(a1 + 88) = *((void *)a2 + 11);
  *(void *)(a1 + 96) = v12;
  uint64_t v13 = *((void *)a2 + 14);
  uint64_t v14 = *((void *)a2 + 13);
  *(unsigned char *)(a1 + 120) = a2[120];
  *(void *)(a1 + 104) = v14;
  *(void *)(a1 + 112) = v13;
  *(void *)(a1 + 128) = *((void *)a2 + 16);
  *(unsigned char *)(a1 + 136) = a2[136];
  uint64_t v15 = *((void *)a2 + 19);
  *(void *)(a1 + 144) = *((void *)a2 + 18);
  *(void *)(a1 + 152) = v15;
  uint64_t v16 = *((void *)a2 + 21);
  *(void *)(a1 + 160) = *((void *)a2 + 20);
  *(void *)(a1 + 168) = v16;
  *(void *)(a1 + 176) = *((void *)a2 + 22);
  *(unsigned char *)(a1 + 184) = a2[184];
  Swift::String v17 = (void *)*((void *)a2 + 24);
  *(void *)(a1 + 192) = v17;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v18 = v17;
  return a1;
}

uint64_t assignWithCopy for HomeCommunicationNLv4Intent(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = a1 + 8;
  char v5 = (long long *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 32);
  if (!*(void *)(a1 + 32))
  {
    if (v6)
    {
      *(void *)(a1 + 32) = v6;
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 8, a2 + 8);
      goto LABEL_8;
    }
LABEL_7:
    long long v7 = *v5;
    long long v8 = v5[1];
    *(void *)(v4 + 32) = *((void *)v5 + 4);
    *(_OWORD *)uint64_t v4 = v7;
    *(_OWORD *)(v4 + 16) = v8;
    goto LABEL_8;
  }
  if (!v6)
  {
    sub_4950(a1 + 8);
    goto LABEL_7;
  }
  sub_10D40((uint64_t *)(a1 + 8), (uint64_t *)(a2 + 8));
LABEL_8:
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
  *(unsigned char *)(a1 + 50) = *(unsigned char *)(a2 + 50);
  *(unsigned char *)(a1 + 51) = *(unsigned char *)(a2 + 51);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_retain();
  swift_release();
  uint64_t v9 = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(void *)(a1 + 112) = v9;
  uint64_t v10 = *(void *)(a2 + 128);
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  *(void *)(a1 + 128) = v10;
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  uint64_t v11 = *(void **)(a1 + 192);
  uint64_t v12 = *(void **)(a2 + 192);
  *(void *)(a1 + 192) = v12;
  id v13 = v12;

  return a1;
}

void *initializeWithTake for HomeCommunicationNLv4Intent(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xC8uLL);
}

uint64_t assignWithTake for HomeCommunicationNLv4Intent(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = a1 + 8;
  if (*(void *)(a1 + 32)) {
    sub_4950(a1 + 8);
  }
  long long v5 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)uint64_t v4 = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(v4 + 16) = v5;
  *(void *)(v4 + 32) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
  *(unsigned char *)(a1 + 50) = *(unsigned char *)(a2 + 50);
  *(unsigned char *)(a1 + 51) = *(unsigned char *)(a2 + 51);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_release();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  uint64_t v6 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v7;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  long long v8 = *(void **)(a1 + 192);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);

  return a1;
}

uint64_t getEnumTagSinglePayload for HomeCommunicationNLv4Intent(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 200))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 56);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for HomeCommunicationNLv4Intent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 200) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 56) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 200) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HomeCommunicationNLv4Intent()
{
  return &type metadata for HomeCommunicationNLv4Intent;
}

uint64_t sub_2439C()
{
  return *v0;
}

uint64_t sub_243A4@<X0>(uint64_t a1@<X8>)
{
  return sub_24518(v1 + 8, a1);
}

uint64_t sub_243B0()
{
  return *(unsigned __int8 *)(v0 + 48);
}

uint64_t sub_243B8()
{
  return *(unsigned __int8 *)(v0 + 49);
}

uint64_t sub_243C0()
{
  return *(unsigned __int8 *)(v0 + 51);
}

uint64_t sub_243C8()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_243D0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_243D8()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_243E0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_243E8()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_243F0()
{
  return *(void *)(v0 + 112);
}

uint64_t sub_243FC()
{
  return *(void *)(v0 + 128);
}

uint64_t sub_24408()
{
  uint64_t v1 = *(void *)(v0 + 144);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_24438()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_24440()
{
  uint64_t v1 = *(void *)(v0 + 168);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_24470()
{
  return *(unsigned __int8 *)(v0 + 184);
}

void *sub_24478()
{
  uint64_t v1 = *(void **)(v0 + 192);
  id v2 = v1;
  return v1;
}

unint64_t sub_244A4(uint64_t a1)
{
  unint64_t result = sub_244CC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_244CC()
{
  unint64_t result = qword_BD078;
  if (!qword_BD078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BD078);
  }
  return result;
}

uint64_t sub_24518(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_48AC(&qword_BD028);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unsigned char *storeEnumTagSinglePayload for UnsupportedHomeCommunication(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2464CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UnsupportedHomeCommunication()
{
  return &type metadata for UnsupportedHomeCommunication;
}

uint64_t sub_24684(uint64_t a1, uint64_t a2)
{
  return sub_24AEC(a1, a2, (uint64_t (*)(void))sub_7DAA8);
}

uint64_t sub_2469C(uint64_t a1, uint64_t a2)
{
  return sub_24AEC(a1, a2, (uint64_t (*)(void))sub_66700);
}

uint64_t sub_246B4(uint64_t a1, uint64_t a2)
{
  return sub_24AEC(a1, a2, (uint64_t (*)(void))sub_46950);
}

uint64_t sub_246D0()
{
  sub_25BE8();
  BOOL v2 = v2 && v0 == v1;
  if (v2) {
    char v3 = 1;
  }
  else {
    char v3 = sub_25B90();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_2473C(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x79726576696C6564;
  }
  else {
    uint64_t v3 = 0x65636E756F6E6E61;
  }
  if (v2) {
    unint64_t v4 = 0xEC000000746E656DLL;
  }
  else {
    unint64_t v4 = 0xEF6572756C696146;
  }
  if (a2) {
    uint64_t v5 = 0x79726576696C6564;
  }
  else {
    uint64_t v5 = 0x65636E756F6E6E61;
  }
  if (a2) {
    unint64_t v6 = 0xEF6572756C696146;
  }
  else {
    unint64_t v6 = 0xEC000000746E656DLL;
  }
  if (v3 == v5 && v4 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_25B90();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_247E4(uint64_t a1, uint64_t a2)
{
  return sub_24AEC(a1, a2, (uint64_t (*)(void))sub_73FA8);
}

uint64_t sub_247FC(uint64_t a1, uint64_t a2)
{
  return sub_24AEC(a1, a2, (uint64_t (*)(void))sub_75020);
}

uint64_t sub_24814(char a1, char a2)
{
  unint64_t v3 = 0xD00000000000001ELL;
  unint64_t v4 = 0x8000000000095640;
  switch(a1)
  {
    case 1:
      uint64_t v5 = "NLv3IntentPlusServerConversion";
      goto LABEL_4;
    case 2:
      uint64_t v5 = "directInvocation";
LABEL_4:
      unint64_t v4 = (unint64_t)v5 | 0x8000000000000000;
      unint64_t v3 = 0xD000000000000010;
      break;
    case 3:
      unint64_t v4 = 0xE700000000000000;
      unint64_t v3 = 0x636972656E6567;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xD00000000000001ELL;
  unint64_t v7 = 0x8000000000095640;
  switch(a2)
  {
    case 1:
      char v8 = "NLv3IntentPlusServerConversion";
      goto LABEL_9;
    case 2:
      char v8 = "directInvocation";
LABEL_9:
      unint64_t v7 = (unint64_t)v8 | 0x8000000000000000;
      unint64_t v6 = 0xD000000000000010;
      break;
    case 3:
      unint64_t v7 = 0xE700000000000000;
      unint64_t v6 = 0x636972656E6567;
      break;
    default:
      break;
  }
  if (v3 == v6 && v4 == v7) {
    char v10 = 1;
  }
  else {
    char v10 = sub_25B90();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v10 & 1;
}

uint64_t sub_24968(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x746165706572;
  }
  else {
    uint64_t v3 = 1684104562;
  }
  if (v2) {
    unint64_t v4 = 0xE400000000000000;
  }
  else {
    unint64_t v4 = 0xE600000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x746165706572;
  }
  else {
    uint64_t v5 = 1684104562;
  }
  if (a2) {
    unint64_t v6 = 0xE600000000000000;
  }
  else {
    unint64_t v6 = 0xE400000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_25B90();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_249F0(char a1, char a2)
{
  if (a1) {
    uint64_t v2 = 0x726F727265;
  }
  else {
    uint64_t v2 = 0x6775626564;
  }
  if (a2) {
    uint64_t v3 = 0x726F727265;
  }
  else {
    uint64_t v3 = 0x6775626564;
  }
  if (v2 == v3) {
    char v4 = 1;
  }
  else {
    char v4 = sub_8EE40();
  }
  swift_bridgeObjectRelease_n();
  return v4 & 1;
}

uint64_t sub_24A68(uint64_t a1, uint64_t a2)
{
  return sub_24AEC(a1, a2, (uint64_t (*)(void))sub_2F620);
}

uint64_t sub_24A80()
{
  sub_25BE8();
  BOOL v2 = v2 && v0 == v1;
  if (v2) {
    char v3 = 1;
  }
  else {
    char v3 = sub_25B90();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_24AEC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3();
  uint64_t v7 = v6;
  if (v5 == ((uint64_t (*)(uint64_t))a3)(a2) && v7 == v8) {
    char v10 = 1;
  }
  else {
    char v10 = sub_25B90();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v10 & 1;
}

uint64_t sub_24B74()
{
  sub_8E2A0();
  sub_25B40();
  sub_8EA00();
  sub_8EA00();
  if (v5 == v3 && v6 == v4) {
    char v1 = 1;
  }
  else {
    char v1 = sub_25B90();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1 & 1;
}

Swift::Int sub_24C1C()
{
  return sub_252DC();
}

Swift::Int sub_24C28()
{
  return sub_24C98();
}

Swift::Int sub_24C40()
{
  return sub_24D38();
}

Swift::Int sub_24C54()
{
  return sub_25BE0();
}

Swift::Int sub_24C60()
{
  return sub_24D38();
}

Swift::Int sub_24C74()
{
  return sub_25BE0();
}

Swift::Int sub_24C80()
{
  return sub_24C98();
}

Swift::Int sub_24C98()
{
  sub_25C24();
  v0(v3, v1);
  return sub_8EF20();
}

Swift::Int sub_24CD8()
{
  return sub_2521C();
}

Swift::Int sub_24CE4()
{
  return sub_24DE8();
}

Swift::Int sub_24CFC()
{
  return sub_25348();
}

Swift::Int sub_24D08()
{
  return sub_24DE8();
}

Swift::Int sub_24D20()
{
  return sub_24D38();
}

Swift::Int sub_24D38()
{
  return sub_8EF20();
}

Swift::Int sub_24D88()
{
  return sub_24DE8();
}

Swift::Int sub_24DA0()
{
  return sub_24DE8();
}

Swift::Int sub_24DB8()
{
  return sub_24DE8();
}

Swift::Int sub_24DD0()
{
  return sub_24DE8();
}

Swift::Int sub_24DE8()
{
  sub_25C24();
  v0(v1);
  sub_25C00();
  swift_bridgeObjectRelease();
  return sub_8EF20();
}

Swift::Int sub_24E30()
{
  return sub_25404();
}

uint64_t sub_24E3C(uint64_t a1, uint64_t a2)
{
  return sub_251C4(a1, a2, (void (*)(uint64_t))sub_7DAA8);
}

uint64_t sub_24E54(uint64_t a1, uint64_t a2)
{
  return sub_251C4(a1, a2, (void (*)(uint64_t))sub_66700);
}

uint64_t sub_24E6C(uint64_t a1, uint64_t a2)
{
  return sub_251C4(a1, a2, (void (*)(uint64_t))sub_46950);
}

uint64_t sub_24E84()
{
  return sub_8E930();
}

uint64_t sub_24E9C()
{
  sub_8E930();

  return swift_bridgeObjectRelease();
}

uint64_t sub_24EF0()
{
  sub_8E930();

  return swift_bridgeObjectRelease();
}

uint64_t sub_24F70(uint64_t a1, uint64_t a2)
{
  return sub_251C4(a1, a2, (void (*)(uint64_t))sub_73FA8);
}

uint64_t sub_24F88(uint64_t a1, uint64_t a2)
{
  return sub_251C4(a1, a2, (void (*)(uint64_t))sub_75020);
}

uint64_t sub_24FA0()
{
  sub_8E930();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25068()
{
  sub_8E930();

  return swift_bridgeObjectRelease();
}

uint64_t sub_250C8()
{
  sub_8E930();

  return swift_bridgeObjectRelease();
}

uint64_t sub_25118(uint64_t a1, uint64_t a2)
{
  return sub_251C4(a1, a2, (void (*)(uint64_t))sub_2F620);
}

uint64_t sub_25130()
{
  return sub_8E930();
}

uint64_t sub_25144()
{
  return sub_8E930();
}

uint64_t sub_25158()
{
  return sub_25BD8();
}

uint64_t sub_25164()
{
  return sub_25BD8();
}

uint64_t sub_25170()
{
  sub_8E930();

  return swift_bridgeObjectRelease();
}

uint64_t sub_251C4(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  a3(a2);
  sub_8E930();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_2521C()
{
  return sub_8EF20();
}

Swift::Int sub_25284()
{
  return sub_25BD0();
}

Swift::Int sub_25290()
{
  return sub_25BD0();
}

Swift::Int sub_2529C()
{
  return sub_25514();
}

Swift::Int sub_252B0()
{
  return sub_25514();
}

Swift::Int sub_252C4(uint64_t a1, uint64_t a2)
{
  return sub_255A8(a1, a2, (void (*)(uint64_t))sub_2F620);
}

Swift::Int sub_252DC()
{
  return sub_8EF20();
}

Swift::Int sub_25348()
{
  return sub_8EF20();
}

Swift::Int sub_253BC(uint64_t a1, uint64_t a2)
{
  return sub_254B0(a1, a2, (void (*)(unsigned char *, uint64_t))sub_24FA0);
}

Swift::Int sub_253D4(uint64_t a1, uint64_t a2)
{
  return sub_255A8(a1, a2, (void (*)(uint64_t))sub_75020);
}

Swift::Int sub_253EC(uint64_t a1, uint64_t a2)
{
  return sub_255A8(a1, a2, (void (*)(uint64_t))sub_73FA8);
}

Swift::Int sub_25404()
{
  return sub_8EF20();
}

Swift::Int sub_25498(uint64_t a1, uint64_t a2)
{
  return sub_254B0(a1, a2, (void (*)(unsigned char *, uint64_t))sub_24E9C);
}

Swift::Int sub_254B0(uint64_t a1, uint64_t a2, void (*a3)(unsigned char *, uint64_t))
{
  sub_8EEE0();
  a3(v6, a2);
  return sub_8EF20();
}

Swift::Int sub_254FC()
{
  return sub_25514();
}

Swift::Int sub_25514()
{
  return sub_8EF20();
}

Swift::Int sub_25560(uint64_t a1, uint64_t a2)
{
  return sub_255A8(a1, a2, (void (*)(uint64_t))sub_46950);
}

Swift::Int sub_25578(uint64_t a1, uint64_t a2)
{
  return sub_255A8(a1, a2, (void (*)(uint64_t))sub_66700);
}

Swift::Int sub_25590(uint64_t a1, uint64_t a2)
{
  return sub_255A8(a1, a2, (void (*)(uint64_t))sub_7DAA8);
}

Swift::Int sub_255A8(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  return sub_8EF20();
}

id sub_255FC(void *a1)
{
  uint64_t v1 = a1[3];
  uint64_t v2 = a1[4];
  sub_98C0(a1, v1);
  switch((*(unsigned __int8 (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2))
  {
    case 2u:
    case 4u:
      if (qword_BB810 != -1) {
        swift_once();
      }
      uint64_t v3 = &qword_BCE38;
      break;
    case 3u:
      if (qword_BB818 != -1) {
        swift_once();
      }
      uint64_t v3 = &qword_BCE40;
      break;
    case 5u:
      if (qword_BB820 != -1) {
        swift_once();
      }
      uint64_t v3 = &qword_BCE48;
      break;
    case 6u:
      if (qword_BB828 != -1) {
        swift_once();
      }
      uint64_t v3 = &qword_BCE50;
      break;
    default:
      if (qword_BB808 != -1) {
        swift_once();
      }
      uint64_t v3 = &qword_BCE30;
      break;
  }
  return (id)*v3;
}

uint64_t sub_257C4()
{
  uint64_t v0 = type metadata accessor for SystemAppFinder();
  uint64_t result = swift_allocObject();
  qword_BFF18 = v0;
  unk_BFF20 = &off_B7050;
  qword_BFF00 = result;
  return result;
}

uint64_t sub_25810(char a1)
{
  uint64_t result = 0xD000000000000012;
  switch(a1)
  {
    case 1:
      uint64_t result = 0xD000000000000019;
      break;
    case 2:
      uint64_t result = 0xD000000000000022;
      break;
    case 3:
      uint64_t result = 0xD000000000000011;
      break;
    case 4:
      uint64_t result = sub_25BAC();
      break;
    case 6:
      uint64_t result = 0xD00000000000001DLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_258C4(char a1)
{
  uint64_t result = 0xD000000000000012;
  switch(a1)
  {
    case 1:
      uint64_t result = 0xD000000000000019;
      break;
    case 2:
      uint64_t result = 0xD000000000000022;
      break;
    case 3:
      uint64_t result = 0xD000000000000011;
      break;
    case 4:
      uint64_t result = sub_25BAC();
      break;
    case 6:
      uint64_t result = 0xD00000000000001DLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_25978(uint64_t a1, void *a2)
{
  v6._uint64_t countAndFlagsBits = a1;
  v3._rawValue = &off_B41F0;
  v6._object = a2;
  unint64_t v4 = sub_8ED80(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 7) {
    return 7;
  }
  else {
    return v4;
  }
}

uint64_t sub_259C4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_24AEC(*a1, *a2, (uint64_t (*)(void))sub_258C4) & 1;
}

Swift::Int sub_259FC()
{
  return sub_24DE8();
}

uint64_t sub_25A2C(uint64_t a1)
{
  return sub_251C4(a1, *v1, (void (*)(uint64_t))sub_258C4);
}

Swift::Int sub_25A5C(uint64_t a1)
{
  return sub_255A8(a1, *v1, (void (*)(uint64_t))sub_258C4);
}

uint64_t sub_25A8C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_25978(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_25ABC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_258C4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_25AE8()
{
  return sub_25810(*v0);
}

unint64_t sub_25AF4()
{
  unint64_t result = qword_BD080;
  if (!qword_BD080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BD080);
  }
  return result;
}

unint64_t sub_25B40()
{
  unint64_t result = qword_BD088;
  if (!qword_BD088)
  {
    sub_8E2A0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BD088);
  }
  return result;
}

uint64_t sub_25B90()
{
  return sub_8EE40();
}

uint64_t sub_25BAC()
{
  return 0x726F707075736E75;
}

Swift::Int sub_25BD0()
{
  return sub_25514();
}

uint64_t sub_25BD8()
{
  return sub_8E930();
}

Swift::Int sub_25BE0()
{
  return sub_24D38();
}

uint64_t sub_25C00()
{
  return sub_8E930();
}

uint64_t sub_25C24()
{
  return sub_8EEE0();
}

uint64_t sub_25C44(uint64_t a1, void *a2)
{
  v6._uint64_t countAndFlagsBits = a1;
  v3._rawValue = &off_B40F8;
  v6._object = a2;
  unint64_t v4 = sub_8ED80(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 3) {
    return 3;
  }
  else {
    return v4;
  }
}

void *HomeCommunicationSnippetModel.bundleName.unsafeMutableAddressor()
{
  return &static HomeCommunicationSnippetModel.bundleName;
}

unint64_t static HomeCommunicationSnippetModel.bundleName.getter()
{
  return 0xD000000000000019;
}

uint64_t HomeCommunicationSnippetModel.snippetHidden(for:idiom:)()
{
  uint64_t v3 = v0;
  uint64_t v4 = sub_8E280();
  sub_5190();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_295E8();
  type metadata accessor for HomeCommunicationSnippetModel();
  sub_16058();
  __chkstk_darwin(v8);
  sub_295C0();
  sub_25E88(v3, v2);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(uint64_t, void, uint64_t))(v6 + 104))(v1, enum case for DeviceIdiom.car(_:), v4);
    sub_27AD0(&qword_BD090, (void (*)(uint64_t))&type metadata accessor for DeviceIdiom);
    char v9 = sub_8E8B0();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1, v4);
    char v10 = v9 ^ 1;
  }
  else
  {
    char v10 = 0;
  }
  sub_2626C(v2, (void (*)(void))type metadata accessor for HomeCommunicationSnippetModel);
  return v10 & 1;
}

uint64_t type metadata accessor for HomeCommunicationSnippetModel()
{
  uint64_t result = qword_BD1C0;
  if (!qword_BD1C0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_25E88(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HomeCommunicationSnippetModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t HomeCommunicationSnippetModel.description.getter()
{
  type metadata accessor for HomeDisambiguationModel(0);
  sub_16058();
  __chkstk_darwin(v3);
  sub_295E8();
  type metadata accessor for CarPlayIntercomControlModel();
  sub_16058();
  __chkstk_darwin(v4);
  sub_295C0();
  type metadata accessor for HomeAppLaunchModel();
  sub_16058();
  __chkstk_darwin(v5);
  sub_AAA8();
  uint64_t v8 = v7 - v6;
  type metadata accessor for HomeCommunicationSnippetModel();
  sub_16058();
  __chkstk_darwin(v9);
  sub_AAA8();
  uint64_t v12 = v11 - v10;
  sub_25E88(v0, v11 - v10);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_279E0(v12, v2, (void (*)(void))type metadata accessor for CarPlayIntercomControlModel);
      sub_295D8();
      sub_8EC40(27);
      sub_29674();
      v23._uint64_t countAndFlagsBits = v17 + 4;
      v23._object = (void *)0x8000000000096F50;
      sub_8E960(v23);
      sub_8ED10();
      v24._uint64_t countAndFlagsBits = 41;
      v24._object = (void *)0xE100000000000000;
      sub_8E960(v24);
      uint64_t v13 = v19;
      uint64_t v14 = (void (*)(void))type metadata accessor for CarPlayIntercomControlModel;
      uint64_t v15 = v2;
      goto LABEL_6;
    case 2u:
      sub_279E0(v12, v1, (void (*)(void))type metadata accessor for HomeDisambiguationModel);
      sub_295D8();
      sub_8EC40(22);
      v21._object = (void *)0x8000000000096F30;
      v21._uint64_t countAndFlagsBits = 0xD000000000000014;
      sub_8E960(v21);
      sub_8ED10();
      uint64_t v13 = v19;
      uint64_t v14 = (void (*)(void))type metadata accessor for HomeDisambiguationModel;
      uint64_t v15 = v1;
      goto LABEL_6;
    case 3u:
      sub_295D8();
      sub_8EC40(30);
      sub_29674();
      v22._uint64_t countAndFlagsBits = v16 | 8;
      v22._object = (void *)0x8000000000096F10;
      sub_8E960(v22);
      sub_8ED10();
      swift_bridgeObjectRelease();
      return v19;
    default:
      sub_279E0(v12, v8, (void (*)(void))type metadata accessor for HomeAppLaunchModel);
      sub_295D8();
      v20._uint64_t countAndFlagsBits = 0x6E75614C7070612ELL;
      v20._object = (void *)0xEB00000000286863;
      sub_8E960(v20);
      sub_8ED10();
      uint64_t v13 = v19;
      uint64_t v14 = (void (*)(void))type metadata accessor for HomeAppLaunchModel;
      uint64_t v15 = v8;
LABEL_6:
      sub_2626C(v15, v14);
      return v13;
  }
}

uint64_t sub_2626C(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_16058();
  sub_1CD04();
  v3();
  return a1;
}

uint64_t sub_262C0(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x636E75614C707061 && a2 == 0xE900000000000068;
  if (v3 || (sub_8EE40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x8000000000096FA0 || (sub_8EE40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000000096FC0 || (sub_8EE40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x8000000000096FE0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_8EE40();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_26460()
{
  return 4;
}

unint64_t sub_26468(char a1)
{
  unint64_t result = 0xD000000000000016;
  switch(a1)
  {
    case 1:
      return result;
    case 2:
      unint64_t result = 0xD000000000000012;
      break;
    case 3:
      unint64_t result = 0xD00000000000001ALL;
      break;
    default:
      unint64_t result = 0x636E75614C707061;
      break;
  }
  return result;
}

uint64_t sub_2650C()
{
  return 12383;
}

uint64_t sub_26518(uint64_t a1, uint64_t a2)
{
  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_8EE40();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

Swift::Int sub_26588()
{
  return sub_1617C();
}

uint64_t sub_265A8(uint64_t a1)
{
  unint64_t v2 = sub_2708C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_265E4(uint64_t a1)
{
  unint64_t v2 = sub_2708C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_26620(uint64_t a1)
{
  unint64_t v2 = sub_27040();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_2665C(uint64_t a1)
{
  unint64_t v2 = sub_27040();

  return CodingKey.debugDescription.getter(a1, v2);
}

unint64_t sub_26698()
{
  return sub_26468(*v0);
}

uint64_t sub_266A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_262C0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_266C8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_26460();
  *a1 = result;
  return result;
}

uint64_t sub_266F0(uint64_t a1)
{
  unint64_t v2 = sub_26F10();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_2672C(uint64_t a1)
{
  unint64_t v2 = sub_26F10();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_26768@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_26518(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_26794()
{
  return sub_957C();
}

uint64_t sub_267B0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_7160();
  *a1 = result & 1;
  return result;
}

uint64_t sub_267DC(uint64_t a1)
{
  unint64_t v2 = sub_26FF4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_26818(uint64_t a1)
{
  unint64_t v2 = sub_26FF4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_26854(uint64_t a1)
{
  unint64_t v2 = sub_26F5C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_26890(uint64_t a1)
{
  unint64_t v2 = sub_26F5C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t HomeCommunicationSnippetModel.encode(to:)(void *a1)
{
  sub_48AC(&qword_BD098);
  sub_5190();
  __chkstk_darwin(v3);
  sub_1CA70();
  sub_48AC(&qword_BD0A0);
  sub_5190();
  __chkstk_darwin(v4);
  sub_29604(v5, v33);
  type metadata accessor for HomeDisambiguationModel(0);
  sub_16058();
  __chkstk_darwin(v6);
  sub_29620(v7, v34);
  sub_48AC(&qword_BD0A8);
  sub_5190();
  __chkstk_darwin(v8);
  sub_1CA70();
  type metadata accessor for CarPlayIntercomControlModel();
  sub_16058();
  __chkstk_darwin(v9);
  sub_1CA70();
  uint64_t v35 = v10;
  sub_48AC(&qword_BD0B0);
  sub_5190();
  __chkstk_darwin(v11);
  sub_AAA8();
  type metadata accessor for HomeAppLaunchModel();
  sub_16058();
  __chkstk_darwin(v12);
  sub_AAA8();
  uint64_t v15 = v14 - v13;
  type metadata accessor for HomeCommunicationSnippetModel();
  sub_16058();
  __chkstk_darwin(v16);
  sub_295C0();
  sub_48AC(&qword_BD0B8);
  sub_5190();
  uint64_t v37 = v17;
  __chkstk_darwin(v18);
  sub_AAA8();
  uint64_t v21 = v20 - v19;
  uint64_t v22 = a1[4];
  sub_98C0(a1, a1[3]);
  sub_26F10();
  sub_8EF50();
  sub_25E88(v38, v1);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v26 = v35;
      sub_279E0(v1, v35, (void (*)(void))type metadata accessor for CarPlayIntercomControlModel);
      sub_27040();
      sub_2959C();
      sub_27AD0(&qword_BC1B8, (void (*)(uint64_t))type metadata accessor for CarPlayIntercomControlModel);
      sub_8EE00();
      sub_1CD04();
      v32();
      uint64_t v28 = type metadata accessor for CarPlayIntercomControlModel;
      goto LABEL_6;
    case 2u:
      uint64_t v26 = v36;
      sub_279E0(v1, v36, (void (*)(void))type metadata accessor for HomeDisambiguationModel);
      sub_26FF4();
      sub_2959C();
      sub_27AD0(&qword_BD0E0, (void (*)(uint64_t))type metadata accessor for HomeDisambiguationModel);
      sub_8EE00();
      sub_1CD04();
      v27();
      uint64_t v28 = (uint64_t (*)())type metadata accessor for HomeDisambiguationModel;
LABEL_6:
      Swift::String v24 = v28;
      uint64_t v25 = v26;
      goto LABEL_7;
    case 3u:
      sub_26F5C();
      sub_8EDE0();
      sub_26FA8();
      sub_8EE00();
      sub_1CD04();
      v29();
      sub_1CD04();
      v30();
      return swift_bridgeObjectRelease();
    default:
      sub_279E0(v1, v15, (void (*)(void))type metadata accessor for HomeAppLaunchModel);
      sub_2708C();
      sub_2959C();
      sub_27AD0(&qword_BC6B0, (void (*)(uint64_t))type metadata accessor for HomeAppLaunchModel);
      sub_8EE00();
      sub_1CD04();
      v23();
      Swift::String v24 = type metadata accessor for HomeAppLaunchModel;
      uint64_t v25 = v15;
LABEL_7:
      sub_2626C(v25, (void (*)(void))v24);
      return (*(uint64_t (**)(uint64_t, uint64_t))(v37 + 8))(v21, v22);
  }
}

unint64_t sub_26F10()
{
  unint64_t result = qword_BD0C0;
  if (!qword_BD0C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BD0C0);
  }
  return result;
}

unint64_t sub_26F5C()
{
  unint64_t result = qword_BD0C8;
  if (!qword_BD0C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BD0C8);
  }
  return result;
}

unint64_t sub_26FA8()
{
  unint64_t result = qword_BD0D0;
  if (!qword_BD0D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BD0D0);
  }
  return result;
}

unint64_t sub_26FF4()
{
  unint64_t result = qword_BD0D8;
  if (!qword_BD0D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BD0D8);
  }
  return result;
}

unint64_t sub_27040()
{
  unint64_t result = qword_BD0E8;
  if (!qword_BD0E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BD0E8);
  }
  return result;
}

unint64_t sub_2708C()
{
  unint64_t result = qword_BD0F0;
  if (!qword_BD0F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BD0F0);
  }
  return result;
}

uint64_t HomeCommunicationSnippetModel.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v75 = a2;
  sub_48AC(&qword_BD0F8);
  sub_5190();
  uint64_t v73 = v4;
  uint64_t v74 = v3;
  __chkstk_darwin(v3);
  sub_1CA70();
  uint64_t v76 = v5;
  sub_48AC(&qword_BD100);
  sub_5190();
  uint64_t v71 = v7;
  uint64_t v72 = v6;
  __chkstk_darwin(v6);
  sub_1CA70();
  uint64_t v77 = v8;
  uint64_t v80 = sub_48AC(&qword_BD108);
  sub_5190();
  uint64_t v70 = v9;
  __chkstk_darwin(v10);
  sub_29604(v11, v63);
  sub_48AC(&qword_BD110);
  sub_5190();
  uint64_t v68 = v13;
  uint64_t v69 = v12;
  __chkstk_darwin(v12);
  sub_29620(v14, v63);
  sub_48AC(&qword_BD118);
  sub_5190();
  uint64_t v78 = v16;
  uint64_t v79 = v15;
  __chkstk_darwin(v15);
  sub_AAA8();
  uint64_t v19 = v18 - v17;
  uint64_t v81 = type metadata accessor for HomeCommunicationSnippetModel();
  sub_16058();
  uint64_t v21 = __chkstk_darwin(v20);
  Swift::String v23 = (char *)&v63 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __chkstk_darwin(v21);
  uint64_t v26 = (char *)&v63 - v25;
  uint64_t v27 = __chkstk_darwin(v24);
  uint64_t v29 = (char *)&v63 - v28;
  uint64_t v30 = __chkstk_darwin(v27);
  uint64_t v32 = (char *)&v63 - v31;
  __chkstk_darwin(v30);
  uint64_t v34 = (char *)&v63 - v33;
  uint64_t v35 = a1[3];
  Swift::String v82 = a1;
  sub_98C0(a1, v35);
  sub_26F10();
  uint64_t v36 = (uint64_t)v84;
  sub_8EF40();
  if (!v36)
  {
    uint64_t v66 = v32;
    unint64_t v67 = v29;
    Swift::String v64 = v23;
    Swift::String v65 = v26;
    uint64_t v37 = v81;
    Swift::String v84 = v34;
    uint64_t v38 = v79;
    uint64_t v39 = sub_8EDD0();
    uint64_t v40 = *(void *)(v39 + 16);
    if (v40
      && (uint64_t v63 = 0,
          uint64_t v41 = *(unsigned __int8 *)(v39 + 32),
          sub_294F4(1, v40, v39, v39 + 32, 0, (2 * v40) | 1),
          uint64_t v43 = v42,
          unint64_t v45 = v44,
          swift_bridgeObjectRelease(),
          v43 == v45 >> 1))
    {
      switch(v41)
      {
        case 1:
          LOBYTE(v83[0]) = 1;
          sub_27040();
          sub_2957C((uint64_t)&type metadata for HomeCommunicationSnippetModel.CarPlayIntercomControlCodingKeys, (uint64_t)v83);
          type metadata accessor for CarPlayIntercomControlModel();
          sub_27AD0(&qword_BC1B0, (void (*)(uint64_t))type metadata accessor for CarPlayIntercomControlModel);
          sub_29654();
          sub_1CD04();
          v54();
          swift_unknownObjectRelease();
          sub_1CD04();
          v55();
          Swift::String v53 = v67;
          goto LABEL_11;
        case 2:
          LOBYTE(v83[0]) = 2;
          sub_26FF4();
          sub_2957C((uint64_t)&type metadata for HomeCommunicationSnippetModel.HomeDisambiguationCodingKeys, (uint64_t)v83);
          type metadata accessor for HomeDisambiguationModel(0);
          sub_27AD0(&qword_BD130, (void (*)(uint64_t))type metadata accessor for HomeDisambiguationModel);
          uint64_t v49 = (uint64_t)v65;
          sub_8EDC0();
          sub_29688();
          sub_1CD04();
          v56();
          swift_unknownObjectRelease();
          sub_1CD04();
          v57();
          swift_storeEnumTagMultiPayload();
          uint64_t v58 = v49;
          goto LABEL_12;
        case 3:
          LOBYTE(v83[0]) = 3;
          sub_26F5C();
          sub_2957C((uint64_t)&type metadata for HomeCommunicationSnippetModel.SendAnnouncementNeedsValueCodingKeys, (uint64_t)v83);
          sub_27994();
          sub_8EDC0();
          sub_1CD04();
          v59();
          swift_unknownObjectRelease();
          uint64_t v60 = sub_2963C();
          v61(v60);
          Swift::String v53 = v64;
          *Swift::String v64 = v83[0];
          goto LABEL_11;
        default:
          LOBYTE(v83[0]) = 0;
          sub_2708C();
          sub_2957C((uint64_t)&type metadata for HomeCommunicationSnippetModel.AppLaunchCodingKeys, (uint64_t)v83);
          type metadata accessor for HomeAppLaunchModel();
          sub_27AD0(&qword_BC6A8, (void (*)(uint64_t))type metadata accessor for HomeAppLaunchModel);
          sub_29654();
          sub_1CD04();
          v51();
          swift_unknownObjectRelease();
          sub_1CD04();
          v52();
          Swift::String v53 = v66;
LABEL_11:
          swift_storeEnumTagMultiPayload();
          uint64_t v58 = (uint64_t)v53;
LABEL_12:
          uint64_t v62 = (uint64_t)v84;
          sub_279E0(v58, (uint64_t)v84, (void (*)(void))type metadata accessor for HomeCommunicationSnippetModel);
          sub_279E0(v62, v75, (void (*)(void))type metadata accessor for HomeCommunicationSnippetModel);
          break;
      }
    }
    else
    {
      uint64_t v46 = sub_8ECA0();
      swift_allocError();
      Swift::String v48 = v47;
      sub_48AC(&qword_BD120);
      *Swift::String v48 = v37;
      sub_8EDA0();
      sub_8EC90();
      (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v46 - 8) + 104))(v48, enum case for DecodingError.typeMismatch(_:), v46);
      swift_willThrow();
      swift_unknownObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v78 + 8))(v19, v38);
    }
  }
  return sub_4950((uint64_t)v82);
}

uint64_t sub_27964@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return HomeCommunicationSnippetModel.init(from:)(a1, a2);
}

uint64_t sub_2797C(void *a1)
{
  return HomeCommunicationSnippetModel.encode(to:)(a1);
}

unint64_t sub_27994()
{
  unint64_t result = qword_BD128;
  if (!qword_BD128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BD128);
  }
  return result;
}

uint64_t sub_279E0(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_16058();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_27A40()
{
  return sub_27AD0(&qword_BD138, (void (*)(uint64_t))type metadata accessor for HomeCommunicationSnippetModel);
}

uint64_t sub_27A88()
{
  return sub_27AD0(&qword_BD140, (void (*)(uint64_t))type metadata accessor for HomeCommunicationSnippetModel);
}

uint64_t sub_27AD0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for HomeCommunicationSnippetModel(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v22 = sub_48AC(&qword_BC168);
        Swift::String v23 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v22 - 8) + 16);
        v23(a1, a2, v22);
        uint64_t v24 = type metadata accessor for CarPlayIntercomControlModel();
        v23((uint64_t *)((char *)a1 + *(int *)(v24 + 20)), (uint64_t *)((char *)a2 + *(int *)(v24 + 20)), v22);
        uint64_t v25 = *(int *)(v24 + 24);
        uint64_t v26 = (char *)a1 + v25;
        uint64_t v27 = (char *)a2 + v25;
        uint64_t v28 = sub_48AC(&qword_BC170);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
        break;
      case 2u:
        uint64_t v10 = sub_48AC(&qword_BC168);
        uint64_t v11 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v10 - 8) + 16);
        v11(a1, a2, v10);
        uint64_t v12 = (int *)type metadata accessor for HomeDisambiguationModel(0);
        uint64_t v13 = v12[5];
        uint64_t v14 = (char *)a1 + v13;
        uint64_t v15 = (char *)a2 + v13;
        uint64_t v16 = sub_48AC(&qword_BD148);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
        uint64_t v17 = v12[6];
        uint64_t v18 = (char *)a1 + v17;
        uint64_t v19 = (char *)a2 + v17;
        uint64_t v20 = sub_48AC(&qword_BC170);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
        v11((uint64_t *)((char *)a1 + v12[7]), (uint64_t *)((char *)a2 + v12[7]), v10);
        break;
      case 3u:
        uint64_t v21 = a2[1];
        *a1 = *a2;
        a1[1] = v21;
        swift_bridgeObjectRetain();
        break;
      default:
        uint64_t v6 = sub_48AC(&qword_BC168);
        uint64_t v7 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16);
        v7(a1, a2, v6);
        uint64_t v8 = type metadata accessor for HomeAppLaunchModel();
        v7((uint64_t *)((char *)a1 + *(int *)(v8 + 20)), (uint64_t *)((char *)a2 + *(int *)(v8 + 20)), v6);
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for HomeCommunicationSnippetModel(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      uint64_t v3 = sub_48AC(&qword_BC168);
      uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
      ((void (*)(void *__return_ptr, uint64_t, uint64_t))v18)((void *)(v3 - 8), a1, v3);
      uint64_t v4 = *(int *)(type metadata accessor for HomeAppLaunchModel() + 20);
      goto LABEL_5;
    case 1:
      uint64_t v5 = sub_48AC(&qword_BC168);
      uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
      v6(a1, v5);
      uint64_t v7 = type metadata accessor for CarPlayIntercomControlModel();
      v6(a1 + *(int *)(v7 + 20), v5);
      uint64_t v8 = a1 + *(int *)(v7 + 24);
      uint64_t v9 = sub_48AC(&qword_BC170);
      uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
      uint64_t v11 = v9;
      uint64_t v12 = v8;
      goto LABEL_6;
    case 2:
      uint64_t v3 = sub_48AC(&qword_BC168);
      uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
      ((void (*)(void *__return_ptr, uint64_t, uint64_t))v18)((void *)(v3 - 8), a1, v3);
      uint64_t v13 = (int *)type metadata accessor for HomeDisambiguationModel(0);
      uint64_t v14 = a1 + v13[5];
      uint64_t v15 = sub_48AC(&qword_BD148);
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
      uint64_t v16 = a1 + v13[6];
      uint64_t v17 = sub_48AC(&qword_BC170);
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
      uint64_t v4 = v13[7];
LABEL_5:
      uint64_t v12 = a1 + v4;
      uint64_t v11 = v3;
      uint64_t v10 = v18;
LABEL_6:
      uint64_t result = v10(v12, v11);
      break;
    case 3:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

void *initializeWithCopy for HomeCommunicationSnippetModel(void *a1, void *a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v19 = sub_48AC(&qword_BC168);
      uint64_t v20 = *(void (**)(void *, void *, uint64_t))(*(void *)(v19 - 8) + 16);
      v20(a1, a2, v19);
      uint64_t v21 = type metadata accessor for CarPlayIntercomControlModel();
      v20((void *)((char *)a1 + *(int *)(v21 + 20)), (void *)((char *)a2 + *(int *)(v21 + 20)), v19);
      uint64_t v22 = *(int *)(v21 + 24);
      Swift::String v23 = (char *)a1 + v22;
      uint64_t v24 = (char *)a2 + v22;
      uint64_t v25 = sub_48AC(&qword_BC170);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
      break;
    case 2u:
      uint64_t v7 = sub_48AC(&qword_BC168);
      uint64_t v8 = *(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16);
      v8(a1, a2, v7);
      uint64_t v9 = (int *)type metadata accessor for HomeDisambiguationModel(0);
      uint64_t v10 = v9[5];
      uint64_t v11 = (char *)a1 + v10;
      uint64_t v12 = (char *)a2 + v10;
      uint64_t v13 = sub_48AC(&qword_BD148);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
      uint64_t v14 = v9[6];
      uint64_t v15 = (char *)a1 + v14;
      uint64_t v16 = (char *)a2 + v14;
      uint64_t v17 = sub_48AC(&qword_BC170);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
      v8((void *)((char *)a1 + v9[7]), (void *)((char *)a2 + v9[7]), v7);
      break;
    case 3u:
      uint64_t v18 = a2[1];
      *a1 = *a2;
      a1[1] = v18;
      swift_bridgeObjectRetain();
      break;
    default:
      uint64_t v4 = sub_48AC(&qword_BC168);
      uint64_t v5 = *(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16);
      v5(a1, a2, v4);
      uint64_t v6 = type metadata accessor for HomeAppLaunchModel();
      v5((void *)((char *)a1 + *(int *)(v6 + 20)), (void *)((char *)a2 + *(int *)(v6 + 20)), v4);
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *assignWithCopy for HomeCommunicationSnippetModel(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_2626C((uint64_t)a1, (void (*)(void))type metadata accessor for HomeCommunicationSnippetModel);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v7 = sub_48AC(&qword_BC168);
        uint64_t v8 = *(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16);
        v8(a1, a2, v7);
        uint64_t v9 = type metadata accessor for CarPlayIntercomControlModel();
        v8((void *)((char *)a1 + *(int *)(v9 + 20)), (void *)((char *)a2 + *(int *)(v9 + 20)), v7);
        uint64_t v10 = *(int *)(v9 + 24);
        uint64_t v11 = (char *)a1 + v10;
        uint64_t v12 = (char *)a2 + v10;
        uint64_t v13 = sub_48AC(&qword_BC170);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
        break;
      case 2u:
        uint64_t v14 = sub_48AC(&qword_BC168);
        uint64_t v15 = *(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16);
        v15(a1, a2, v14);
        uint64_t v16 = (int *)type metadata accessor for HomeDisambiguationModel(0);
        uint64_t v17 = v16[5];
        uint64_t v18 = (char *)a1 + v17;
        uint64_t v19 = (char *)a2 + v17;
        uint64_t v20 = sub_48AC(&qword_BD148);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
        uint64_t v21 = v16[6];
        uint64_t v22 = (char *)a1 + v21;
        Swift::String v23 = (char *)a2 + v21;
        uint64_t v24 = sub_48AC(&qword_BC170);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
        v15((void *)((char *)a1 + v16[7]), (void *)((char *)a2 + v16[7]), v14);
        break;
      case 3u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        break;
      default:
        uint64_t v4 = sub_48AC(&qword_BC168);
        uint64_t v5 = *(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16);
        v5(a1, a2, v4);
        uint64_t v6 = type metadata accessor for HomeAppLaunchModel();
        v5((void *)((char *)a1 + *(int *)(v6 + 20)), (void *)((char *)a2 + *(int *)(v6 + 20)), v4);
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *initializeWithTake for HomeCommunicationSnippetModel(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v10 = sub_48AC(&qword_BC168);
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32);
    v11(a1, a2, v10);
    uint64_t v12 = (int *)type metadata accessor for HomeDisambiguationModel(0);
    uint64_t v13 = v12[5];
    uint64_t v14 = &a1[v13];
    uint64_t v15 = &a2[v13];
    uint64_t v16 = sub_48AC(&qword_BD148);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
    uint64_t v17 = v12[6];
    uint64_t v18 = &a1[v17];
    uint64_t v19 = &a2[v17];
    uint64_t v20 = sub_48AC(&qword_BC170);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
    v11(&a1[v12[7]], &a2[v12[7]], v10);
  }
  else if (EnumCaseMultiPayload == 1)
  {
    uint64_t v21 = sub_48AC(&qword_BC168);
    uint64_t v22 = *(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32);
    v22(a1, a2, v21);
    uint64_t v23 = type metadata accessor for CarPlayIntercomControlModel();
    v22(&a1[*(int *)(v23 + 20)], &a2[*(int *)(v23 + 20)], v21);
    uint64_t v24 = *(int *)(v23 + 24);
    uint64_t v25 = &a1[v24];
    uint64_t v26 = &a2[v24];
    uint64_t v27 = sub_48AC(&qword_BC170);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 32))(v25, v26, v27);
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      return a1;
    }
    uint64_t v7 = sub_48AC(&qword_BC168);
    uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32);
    v8(a1, a2, v7);
    uint64_t v9 = type metadata accessor for HomeAppLaunchModel();
    v8(&a1[*(int *)(v9 + 20)], &a2[*(int *)(v9 + 20)], v7);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

char *assignWithTake for HomeCommunicationSnippetModel(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_2626C((uint64_t)a1, (void (*)(void))type metadata accessor for HomeCommunicationSnippetModel);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v10 = sub_48AC(&qword_BC168);
      uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32);
      v11(a1, a2, v10);
      uint64_t v12 = (int *)type metadata accessor for HomeDisambiguationModel(0);
      uint64_t v13 = v12[5];
      uint64_t v14 = &a1[v13];
      uint64_t v15 = &a2[v13];
      uint64_t v16 = sub_48AC(&qword_BD148);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
      uint64_t v17 = v12[6];
      uint64_t v18 = &a1[v17];
      uint64_t v19 = &a2[v17];
      uint64_t v20 = sub_48AC(&qword_BC170);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
      v11(&a1[v12[7]], &a2[v12[7]], v10);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v21 = sub_48AC(&qword_BC168);
      uint64_t v22 = *(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32);
      v22(a1, a2, v21);
      uint64_t v23 = type metadata accessor for CarPlayIntercomControlModel();
      v22(&a1[*(int *)(v23 + 20)], &a2[*(int *)(v23 + 20)], v21);
      uint64_t v24 = *(int *)(v23 + 24);
      uint64_t v25 = &a1[v24];
      uint64_t v26 = &a2[v24];
      uint64_t v27 = sub_48AC(&qword_BC170);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 32))(v25, v26, v27);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        return a1;
      }
      uint64_t v7 = sub_48AC(&qword_BC168);
      uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32);
      v8(a1, a2, v7);
      uint64_t v9 = type metadata accessor for HomeAppLaunchModel();
      v8(&a1[*(int *)(v9 + 20)], &a2[*(int *)(v9 + 20)], v7);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_28D2C()
{
  uint64_t result = type metadata accessor for HomeAppLaunchModel();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for CarPlayIntercomControlModel();
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for HomeDisambiguationModel(319);
      if (v3 <= 0x3F)
      {
        swift_initEnumMetadataMultiPayload();
        return 0;
      }
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for HomeCommunicationSnippetModel.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x28F00);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HomeCommunicationSnippetModel.CodingKeys()
{
  return &type metadata for HomeCommunicationSnippetModel.CodingKeys;
}

ValueMetadata *type metadata accessor for HomeCommunicationSnippetModel.AppLaunchCodingKeys()
{
  return &type metadata for HomeCommunicationSnippetModel.AppLaunchCodingKeys;
}

ValueMetadata *type metadata accessor for HomeCommunicationSnippetModel.CarPlayIntercomControlCodingKeys()
{
  return &type metadata for HomeCommunicationSnippetModel.CarPlayIntercomControlCodingKeys;
}

ValueMetadata *type metadata accessor for HomeCommunicationSnippetModel.HomeDisambiguationCodingKeys()
{
  return &type metadata for HomeCommunicationSnippetModel.HomeDisambiguationCodingKeys;
}

unsigned char *_s35HomeCommunicationFlowDelegatePlugin29HomeCommunicationSnippetModelO19AppLaunchCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x29008);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for HomeCommunicationSnippetModel.SendAnnouncementNeedsValueCodingKeys()
{
  return &type metadata for HomeCommunicationSnippetModel.SendAnnouncementNeedsValueCodingKeys;
}

unint64_t sub_29044()
{
  unint64_t result = qword_BD1F8;
  if (!qword_BD1F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BD1F8);
  }
  return result;
}

unint64_t sub_29094()
{
  unint64_t result = qword_BD200;
  if (!qword_BD200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BD200);
  }
  return result;
}

unint64_t sub_290E4()
{
  unint64_t result = qword_BD208;
  if (!qword_BD208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BD208);
  }
  return result;
}

unint64_t sub_29134()
{
  unint64_t result = qword_BD210;
  if (!qword_BD210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BD210);
  }
  return result;
}

unint64_t sub_29184()
{
  unint64_t result = qword_BD218;
  if (!qword_BD218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BD218);
  }
  return result;
}

unint64_t sub_291D4()
{
  unint64_t result = qword_BD220;
  if (!qword_BD220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BD220);
  }
  return result;
}

unint64_t sub_29224()
{
  unint64_t result = qword_BD228;
  if (!qword_BD228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BD228);
  }
  return result;
}

unint64_t sub_29274()
{
  unint64_t result = qword_BD230;
  if (!qword_BD230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BD230);
  }
  return result;
}

unint64_t sub_292C4()
{
  unint64_t result = qword_BD238;
  if (!qword_BD238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BD238);
  }
  return result;
}

unint64_t sub_29314()
{
  unint64_t result = qword_BD240;
  if (!qword_BD240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BD240);
  }
  return result;
}

unint64_t sub_29364()
{
  unint64_t result = qword_BD248;
  if (!qword_BD248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BD248);
  }
  return result;
}

unint64_t sub_293B4()
{
  unint64_t result = qword_BD250;
  if (!qword_BD250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BD250);
  }
  return result;
}

unint64_t sub_29404()
{
  unint64_t result = qword_BD258;
  if (!qword_BD258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BD258);
  }
  return result;
}

unint64_t sub_29454()
{
  unint64_t result = qword_BD260;
  if (!qword_BD260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BD260);
  }
  return result;
}

unint64_t sub_294A4()
{
  unint64_t result = qword_BD268;
  if (!qword_BD268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BD268);
  }
  return result;
}

uint64_t sub_294F4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  if (result < a5)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if ((uint64_t)(a6 >> 1) < result || (uint64_t)(a6 >> 1) < a2) {
    goto LABEL_10;
  }
  if (a2 < a5)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if ((a2 & 0x8000000000000000) == 0) {
    return swift_unknownObjectRetain();
  }
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_2957C(uint64_t a1, uint64_t a2)
{
  return KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)(a1, a2, v2, a1);
}

uint64_t sub_2959C()
{
  return sub_8EDE0();
}

void sub_295D8()
{
  *(void *)(v0 - 96) = 0;
  *(void *)(v0 - 88) = 0xE000000000000000;
}

uint64_t sub_295E8()
{
  return 0;
}

void sub_29604(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 176) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_29620(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 184) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_2963C()
{
  return v0;
}

uint64_t sub_29654()
{
  return sub_8EDC0();
}

void sub_29674()
{
  uint64_t v1 = *(void *)(v0 - 88);
  *(void *)(v0 - 96) = *(void *)(v0 - 96);
  *(void *)(v0 - 88) = v1;
}

uint64_t sub_29688()
{
  return v0;
}

uint64_t sub_2969C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_29890(a1, 1886352499, a3, &qword_BFF28, &qword_BFF30);
}

uint64_t sub_296B4(uint64_t a1)
{
  return sub_296EC(a1, 0x796C706572, 0xE500000000000000, &qword_BFF38, &qword_BFF40);
}

uint64_t sub_296D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_29890(a1, 1684104562, a3, &qword_BFF48, &qword_BFF50);
}

uint64_t sub_296EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, void *a5)
{
  sub_8D690();
  swift_allocObject();
  sub_8D680();
  sub_8D660();
  swift_release();
  sub_2985C();
  sub_8D660();
  swift_release();
  uint64_t v7 = sub_8D670();
  uint64_t v9 = v8;
  uint64_t result = swift_release();
  *a4 = v7;
  *a5 = v9;
  return result;
}

uint64_t sub_297A8()
{
  sub_8D690();
  swift_allocObject();
  sub_8D680();
  sub_8D660();
  swift_release();
  sub_2985C();
  sub_8D660();
  swift_release();
  uint64_t v0 = sub_8D670();
  uint64_t v2 = v1;
  uint64_t result = swift_release();
  qword_BFF58 = v0;
  unk_BFF60 = v2;
  return result;
}

uint64_t sub_2985C()
{
  return 0x6E756F4E736D73;
}

uint64_t sub_29890(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, void *a5)
{
  return sub_296EC(a1, a2, 0xE400000000000000, a4, a5);
}

uint64_t HomeTarget.hash(into:)()
{
  sub_8CAC0();
  sub_29F4C((uint64_t)&unk_BD270);

  return sub_8E890();
}

uint64_t HomeTarget.id.getter@<X0>(uint64_t a1@<X8>)
{
  sub_8CAC0();
  sub_16058();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);

  return v5(a1, v1, v3);
}

uint64_t property wrapper backing initializer of HomeTarget.selectHomeAction()
{
  sub_299C8();

  return sub_8CAF0();
}

unint64_t sub_299C8()
{
  unint64_t result = qword_BD278;
  if (!qword_BD278)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_BD278);
  }
  return result;
}

uint64_t HomeTarget.init(id:name:selectHomeAction:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_8CAC0();
  sub_5190();
  uint64_t v6 = v5;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(a2, a1, v4);
  type metadata accessor for HomeTarget(0);
  sub_8CB10();
  sub_299C8();
  sub_8CAF0();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1, v4);
}

uint64_t type metadata accessor for HomeTarget(uint64_t a1)
{
  return sub_14ED0(a1, (uint64_t *)&unk_BD370);
}

uint64_t sub_29B1C(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v3 || (sub_8EE40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 1701667182 && a2 == 0xE400000000000000;
    if (v6 || (sub_8EE40() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000010 && a2 == 0x8000000000097030)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v7 = sub_8EE40();
      swift_bridgeObjectRelease();
      if (v7) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_29C34(char a1)
{
  if (a1 == 2) {
    return 0xD000000000000010;
  }
  if (a1 == 1) {
    return 1701667182;
  }
  return 25705;
}

uint64_t sub_29C84()
{
  return sub_29C34(*v0);
}

uint64_t sub_29C8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_29B1C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_29CB4(uint64_t a1)
{
  unint64_t v2 = sub_29F00();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_29CF0(uint64_t a1)
{
  unint64_t v2 = sub_29F00();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t HomeTarget.encode(to:)(void *a1)
{
  sub_48AC(&qword_BD280);
  sub_5190();
  __chkstk_darwin(v3);
  sub_98C0(a1, a1[3]);
  sub_29F00();
  sub_2CF28();
  sub_8CAC0();
  sub_29F4C((uint64_t)&unk_BD290);
  sub_2CEB0();
  if (!v1)
  {
    type metadata accessor for HomeTarget(0);
    sub_2CF68();
    sub_48AC(&qword_BC168);
    sub_2A590((uint64_t)&qword_BC188);
    sub_2CF00();
    sub_2CEB0();
    sub_2CF48();
    sub_48AC(&qword_BD298);
    sub_2A5F4((uint64_t)&unk_BD2A0);
    sub_2CF14();
    sub_2CEB0();
  }
  uint64_t v4 = sub_2CED4();
  return v5(v4);
}

unint64_t sub_29F00()
{
  unint64_t result = qword_BD288;
  if (!qword_BD288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BD288);
  }
  return result;
}

unint64_t sub_29F4C(uint64_t a1)
{
  unint64_t result = sub_2CEC8(a1);
  if (!result)
  {
    v3(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

Swift::Int HomeTarget.hashValue.getter()
{
  return sub_8EF20();
}

uint64_t HomeTarget.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v21 = sub_48AC(&qword_BD298);
  sub_5190();
  uint64_t v19 = v3;
  __chkstk_darwin(v4);
  sub_1CA70();
  uint64_t v22 = v5;
  sub_48AC(&qword_BC168);
  sub_5190();
  __chkstk_darwin(v6);
  sub_AAA8();
  sub_8CAC0();
  sub_5190();
  __chkstk_darwin(v7);
  sub_1CA70();
  sub_48AC(&qword_BD2A8);
  sub_5190();
  __chkstk_darwin(v8);
  sub_AAA8();
  uint64_t v9 = type metadata accessor for HomeTarget(0);
  sub_16058();
  __chkstk_darwin(v10);
  sub_AAA8();
  uint64_t v13 = v12 - v11;
  sub_98C0(a1, a1[3]);
  sub_29F00();
  sub_8EF40();
  if (v23) {
    return sub_4950((uint64_t)a1);
  }
  sub_29F4C((uint64_t)&unk_BD2B0);
  sub_8EDC0();
  sub_7074();
  v14();
  sub_2A590((uint64_t)&qword_BC1A0);
  sub_8EDC0();
  sub_7074();
  v15();
  sub_2CF48();
  sub_2A5F4((uint64_t)&unk_BD2B8);
  sub_8EDC0();
  uint64_t v16 = sub_2CEEC();
  v17(v16);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 32))(v13 + *(int *)(v9 + 24), v22, v21);
  sub_2B3E4(v13, a2, (void (*)(void))type metadata accessor for HomeTarget);
  sub_4950((uint64_t)a1);
  return sub_2B444(v13, (void (*)(void))type metadata accessor for HomeTarget);
}

uint64_t sub_2A46C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_8CAC0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t sub_2A4D4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return HomeTarget.init(from:)(a1, a2);
}

uint64_t sub_2A4EC(void *a1)
{
  return HomeTarget.encode(to:)(a1);
}

Swift::Int sub_2A50C()
{
  return sub_8EF20();
}

unint64_t sub_2A590(uint64_t a1)
{
  unint64_t result = sub_2CEC8(a1);
  if (!result)
  {
    sub_9950(&qword_BC168);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t sub_2A5F4(uint64_t a1)
{
  unint64_t result = sub_2CEC8(a1);
  if (!result)
  {
    sub_9950(&qword_BD298);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

uint64_t property wrapper backing initializer of HomeDisambiguationModel.homeTargets()
{
  return sub_8CB10();
}

void *HomeDisambiguationModel.responseViewId.unsafeMutableAddressor()
{
  return &static HomeDisambiguationModel.responseViewId;
}

unint64_t static HomeDisambiguationModel.responseViewId.getter()
{
  return 0xD000000000000028;
}

uint64_t sub_2A6AC(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x6449656C646E7562 && a2 == 0xE800000000000000;
  if (v3 || (sub_8EE40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x67726154656D6F68 && a2 == 0xEB00000000737465;
    if (v6 || (sub_8EE40() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000013 && a2 == 0x8000000000097050 || (sub_8EE40() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else if (a1 == 0x74706D6F7270 && a2 == 0xE600000000000000)
    {
      swift_bridgeObjectRelease();
      return 3;
    }
    else
    {
      char v8 = sub_8EE40();
      swift_bridgeObjectRelease();
      if (v8) {
        return 3;
      }
      else {
        return 4;
      }
    }
  }
}

unint64_t sub_2A850(char a1)
{
  unint64_t result = 0xD000000000000013;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x67726154656D6F68;
      break;
    case 2:
      return result;
    case 3:
      unint64_t result = 0x74706D6F7270;
      break;
    default:
      unint64_t result = 0x6449656C646E7562;
      break;
  }
  return result;
}

Swift::Int sub_2A8EC()
{
  return sub_9534(*v0);
}

unint64_t sub_2A908()
{
  return sub_2A850(*v0);
}

uint64_t sub_2A910@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2A6AC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2A938(uint64_t a1)
{
  unint64_t v2 = sub_2ABB4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_2A974(uint64_t a1)
{
  unint64_t v2 = sub_2ABB4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t HomeDisambiguationModel.encode(to:)(void *a1)
{
  sub_48AC(&qword_BD2C8);
  sub_5190();
  __chkstk_darwin(v3);
  sub_98C0(a1, a1[3]);
  sub_2ABB4();
  sub_2CF28();
  sub_48AC(&qword_BC168);
  sub_2A590((uint64_t)&qword_BC188);
  sub_2CEB0();
  if (!v1)
  {
    type metadata accessor for HomeDisambiguationModel(0);
    sub_2CF68();
    sub_48AC(&qword_BD148);
    sub_2B308((uint64_t)&unk_BD2D8);
    sub_2CF00();
    sub_2CEB0();
    sub_2CF48();
    sub_48AC(&qword_BC170);
    sub_2ACB0((uint64_t)&qword_BC190);
    sub_2CF14();
    sub_2CEB0();
    sub_2CEB0();
  }
  uint64_t v4 = sub_2CED4();
  return v5(v4);
}

unint64_t sub_2ABB4()
{
  unint64_t result = qword_BD2D0;
  if (!qword_BD2D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BD2D0);
  }
  return result;
}

uint64_t type metadata accessor for HomeDisambiguationModel(uint64_t a1)
{
  return sub_14ED0(a1, (uint64_t *)&unk_BD410);
}

unint64_t sub_2AC20(uint64_t a1)
{
  unint64_t result = sub_2CEC8(a1);
  if (!result)
  {
    uint64_t v4 = v3;
    sub_9950(&qword_BD2C0);
    sub_29F4C(v4);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t sub_2ACB0(uint64_t a1)
{
  unint64_t result = sub_2CEC8(a1);
  if (!result)
  {
    sub_9950(&qword_BC170);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

uint64_t sub_2AD14()
{
  return sub_8CB10();
}

uint64_t HomeDisambiguationModel.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v43 = a2;
  uint64_t v51 = sub_48AC(&qword_BC170);
  sub_5190();
  uint64_t v45 = v3;
  __chkstk_darwin(v4);
  sub_1CA70();
  uint64_t v44 = v5;
  uint64_t v46 = sub_48AC(&qword_BD148);
  sub_5190();
  uint64_t v50 = v6;
  __chkstk_darwin(v7);
  sub_1CA70();
  uint64_t v49 = v8;
  uint64_t v9 = sub_48AC(&qword_BC168);
  sub_5190();
  uint64_t v47 = v10;
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  Swift::String v52 = (char *)&v38 - v15;
  uint64_t v54 = sub_48AC(&qword_BD300);
  sub_5190();
  uint64_t v48 = v16;
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for HomeDisambiguationModel(0);
  sub_16058();
  __chkstk_darwin(v21);
  sub_AAA8();
  uint64_t v24 = v23 - v22;
  sub_98C0(a1, a1[3]);
  sub_2ABB4();
  Swift::String v53 = v19;
  uint64_t v25 = (uint64_t)v55;
  sub_8EF40();
  if (v25) {
    return sub_4950((uint64_t)a1);
  }
  uint64_t v42 = v14;
  uint64_t v26 = v20;
  Swift::String v55 = a1;
  char v58 = 0;
  unint64_t v27 = sub_2A590((uint64_t)&qword_BC1A0);
  sub_8EDC0();
  unint64_t v40 = v27;
  uint64_t v41 = v24;
  uint64_t v28 = (char *)v9;
  uint64_t v29 = *(void (**)(uint64_t, char *))(v47 + 32);
  uint64_t v30 = v52;
  Swift::String v52 = v28;
  v29(v24, v30);
  char v57 = 1;
  sub_2B308((uint64_t)&unk_BD308);
  sub_8EDC0();
  uint64_t v39 = (void (*)(uint64_t, char *, char *))v29;
  sub_7074();
  v31();
  sub_2CF48();
  sub_2ACB0((uint64_t)&qword_BC1A8);
  sub_8EDC0();
  uint64_t v32 = v41;
  sub_7074();
  v33();
  char v56 = 3;
  uint64_t v34 = v52;
  sub_8EDC0();
  uint64_t v35 = sub_2CE98();
  v36(v35);
  v39(v32 + *(int *)(v26 + 28), v42, v34);
  sub_2B3E4(v32, v43, (void (*)(void))type metadata accessor for HomeDisambiguationModel);
  sub_4950((uint64_t)v55);
  return sub_2B444(v32, (void (*)(void))type metadata accessor for HomeDisambiguationModel);
}

unint64_t sub_2B308(uint64_t a1)
{
  unint64_t result = sub_2CEC8(a1);
  if (!result)
  {
    sub_9950(&qword_BD148);
    sub_2AC20((uint64_t)&unk_BD2E0);
    sub_2AC20((uint64_t)&unk_BD2F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

uint64_t sub_2B3E4(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_16058();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_2B444(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_16058();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

unint64_t sub_2B49C()
{
  return sub_29F4C((uint64_t)&unk_BD2E8);
}

unint64_t sub_2B4E4()
{
  return sub_29F4C((uint64_t)&unk_BD2F8);
}

unint64_t sub_2B52C()
{
  return sub_29F4C((uint64_t)&unk_BD270);
}

unint64_t sub_2B574()
{
  return sub_29F4C((uint64_t)&unk_BD310);
}

unint64_t sub_2B5BC()
{
  return sub_29F4C((uint64_t)&qword_BD130);
}

unint64_t sub_2B604()
{
  return sub_29F4C((uint64_t)&qword_BD0E0);
}

uint64_t sub_2B64C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return HomeDisambiguationModel.init(from:)(a1, a2);
}

uint64_t sub_2B664(void *a1)
{
  return HomeDisambiguationModel.encode(to:)(a1);
}

uint64_t *initializeBufferWithCopyOfBuffer for HomeTarget(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_8CAC0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_48AC(&qword_BC168);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = *(int *)(a3 + 24);
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_48AC(&qword_BD298);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  }
  return a1;
}

uint64_t destroy for HomeTarget(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_8CAC0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_48AC(&qword_BC168);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  uint64_t v8 = sub_48AC(&qword_BD298);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);

  return v9(v7, v8);
}

uint64_t initializeWithCopy for HomeTarget(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_8CAC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_48AC(&qword_BC168);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_48AC(&qword_BD298);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  return a1;
}

uint64_t assignWithCopy for HomeTarget(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_8CAC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_48AC(&qword_BC168);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_48AC(&qword_BD298);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  return a1;
}

uint64_t initializeWithTake for HomeTarget(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_8CAC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_48AC(&qword_BC168);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_48AC(&qword_BD298);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for HomeTarget(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_8CAC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_48AC(&qword_BC168);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_48AC(&qword_BD298);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for HomeTarget(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_2BD28);
}

uint64_t sub_2BD28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_8CAC0();
  sub_AA90();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
  }
  else
  {
    sub_48AC(&qword_BC168);
    sub_AA90();
    if (*(_DWORD *)(v11 + 84) == a2)
    {
      uint64_t v8 = v10;
      uint64_t v12 = *(int *)(a3 + 20);
    }
    else
    {
      uint64_t v8 = sub_48AC(&qword_BD298);
      uint64_t v12 = *(int *)(a3 + 24);
    }
    uint64_t v9 = a1 + v12;
  }

  return _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0(v9, a2, v8);
}

uint64_t storeEnumTagSinglePayload for HomeTarget(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_2BDE4);
}

uint64_t sub_2BDE4()
{
  sub_2CF54();
  sub_8CAC0();
  sub_AA90();
  if (*(_DWORD *)(v5 + 84) == v3)
  {
    uint64_t v6 = v4;
    uint64_t v7 = v1;
  }
  else
  {
    sub_48AC(&qword_BC168);
    sub_AA90();
    if (*(_DWORD *)(v9 + 84) == v3)
    {
      uint64_t v6 = v8;
      uint64_t v10 = *(int *)(v2 + 20);
    }
    else
    {
      uint64_t v6 = sub_48AC(&qword_BD298);
      uint64_t v10 = *(int *)(v2 + 24);
    }
    uint64_t v7 = v1 + v10;
  }

  return _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(v7, v0, v0, v6);
}

void sub_2BE88()
{
  sub_8CAC0();
  if (v0 <= 0x3F)
  {
    sub_A7C8(319, (unint64_t *)&qword_BC228);
    if (v1 <= 0x3F)
    {
      sub_2BF9C();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_2BF9C()
{
  if (!qword_BD380)
  {
    sub_299C8();
    unint64_t v0 = sub_8CB00();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_BD380);
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for HomeDisambiguationModel(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_48AC(&qword_BC168);
    uint64_t v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    uint64_t v9 = a3[5];
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_48AC(&qword_BD148);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    uint64_t v13 = a3[6];
    uint64_t v14 = (char *)a1 + v13;
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = sub_48AC(&qword_BC170);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    v8((uint64_t *)((char *)a1 + a3[7]), (uint64_t *)((char *)a2 + a3[7]), v7);
  }
  return a1;
}

uint64_t destroy for HomeDisambiguationModel(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_48AC(&qword_BC168);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v11)((void *)(v4 - 8), a1, v4);
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = sub_48AC(&qword_BD148);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  uint64_t v8 = sub_48AC(&qword_BC170);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];

  return v11(v9, v4);
}

uint64_t initializeWithCopy for HomeDisambiguationModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_48AC(&qword_BC168);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_48AC(&qword_BD148);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  uint64_t v12 = a3[6];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_48AC(&qword_BC170);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  v7(a1 + a3[7], a2 + a3[7], v6);
  return a1;
}

uint64_t assignWithCopy for HomeDisambiguationModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_48AC(&qword_BC168);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_48AC(&qword_BD148);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 24))(v9, v10, v11);
  uint64_t v12 = a3[6];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_48AC(&qword_BC170);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 24))(v13, v14, v15);
  v7(a1 + a3[7], a2 + a3[7], v6);
  return a1;
}

uint64_t initializeWithTake for HomeDisambiguationModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_48AC(&qword_BC168);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_48AC(&qword_BD148);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  uint64_t v12 = a3[6];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_48AC(&qword_BC170);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
  v7(a1 + a3[7], a2 + a3[7], v6);
  return a1;
}

uint64_t assignWithTake for HomeDisambiguationModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_48AC(&qword_BC168);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_48AC(&qword_BD148);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  uint64_t v12 = a3[6];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_48AC(&qword_BC170);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  v7(a1 + a3[7], a2 + a3[7], v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for HomeDisambiguationModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_2C7B0);
}

uint64_t sub_2C7B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_48AC(&qword_BC168);
  sub_AA90();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
  }
  else
  {
    sub_48AC(&qword_BD148);
    sub_AA90();
    if (*(_DWORD *)(v11 + 84) == a2)
    {
      uint64_t v8 = v10;
      uint64_t v12 = *(int *)(a3 + 20);
    }
    else
    {
      uint64_t v8 = sub_48AC(&qword_BC170);
      uint64_t v12 = *(int *)(a3 + 24);
    }
    uint64_t v9 = a1 + v12;
  }

  return _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0(v9, a2, v8);
}

uint64_t storeEnumTagSinglePayload for HomeDisambiguationModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_2C870);
}

uint64_t sub_2C870()
{
  sub_2CF54();
  sub_48AC(&qword_BC168);
  sub_AA90();
  if (*(_DWORD *)(v5 + 84) == v3)
  {
    uint64_t v6 = v4;
    uint64_t v7 = v1;
  }
  else
  {
    sub_48AC(&qword_BD148);
    sub_AA90();
    if (*(_DWORD *)(v9 + 84) == v3)
    {
      uint64_t v6 = v8;
      uint64_t v10 = *(int *)(v2 + 20);
    }
    else
    {
      uint64_t v6 = sub_48AC(&qword_BC170);
      uint64_t v10 = *(int *)(v2 + 24);
    }
    uint64_t v7 = v1 + v10;
  }

  return _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(v7, v0, v0, v6);
}

void sub_2C918()
{
  sub_A7C8(319, (unint64_t *)&qword_BC228);
  if (v0 <= 0x3F)
  {
    sub_2CA3C();
    if (v1 <= 0x3F)
    {
      sub_A7C8(319, (unint64_t *)&unk_BC230);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_2CA3C()
{
  if (!qword_BD420)
  {
    sub_9950(&qword_BD2C0);
    unint64_t v0 = sub_8CB50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_BD420);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for HomeDisambiguationModel.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2CB64);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HomeDisambiguationModel.CodingKeys()
{
  return &type metadata for HomeDisambiguationModel.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for HomeTarget.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2CC68);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HomeTarget.CodingKeys()
{
  return &type metadata for HomeTarget.CodingKeys;
}

unint64_t sub_2CCA4()
{
  unint64_t result = qword_BD458;
  if (!qword_BD458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BD458);
  }
  return result;
}

unint64_t sub_2CCF4()
{
  unint64_t result = qword_BD460;
  if (!qword_BD460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BD460);
  }
  return result;
}

unint64_t sub_2CD44()
{
  unint64_t result = qword_BD468;
  if (!qword_BD468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BD468);
  }
  return result;
}

unint64_t sub_2CD94()
{
  unint64_t result = qword_BD470;
  if (!qword_BD470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BD470);
  }
  return result;
}

unint64_t sub_2CDE4()
{
  unint64_t result = qword_BD478;
  if (!qword_BD478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BD478);
  }
  return result;
}

unint64_t sub_2CE34()
{
  unint64_t result = qword_BD480;
  if (!qword_BD480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BD480);
  }
  return result;
}

uint64_t sub_2CE98()
{
  return *(void *)(v0 - 104);
}

uint64_t sub_2CEB0()
{
  return sub_8EE00();
}

uint64_t sub_2CEC8(uint64_t a1)
{
  return *(void *)a1;
}

uint64_t sub_2CED4()
{
  return v0;
}

uint64_t sub_2CEEC()
{
  return *(void *)(v0 - 104);
}

uint64_t sub_2CF00()
{
  return v0;
}

uint64_t sub_2CF14()
{
  return v0;
}

uint64_t sub_2CF28()
{
  return sub_8EF50();
}

void sub_2CF48()
{
  *(unsigned char *)(v0 - 67) = 2;
}

void sub_2CF68()
{
  *(unsigned char *)(v0 - 66) = 1;
}

char *sub_2CF7C(unint64_t a1, char a2, uint64_t a3, uint64_t (*a4)(void, void), uint64_t a5)
{
  uint64_t v9 = a2 & 1;
  uint64_t v10 = sub_8E730();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_BB830 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_50FC(v10, (uint64_t)qword_BFEC8);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v14, v10);
  sub_2D42C(a1, v9);
  sub_2D42C(a1, v9);
  uint64_t v15 = sub_8E710();
  int v16 = sub_8EB00();
  if (os_log_type_enabled(v15, (os_log_type_t)v16))
  {
    int v40 = v16;
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    uint64_t v39 = swift_slowAlloc();
    uint64_t v48 = v39;
    uint64_t v41 = v17;
    os_log_t v42 = v15;
    *(_DWORD *)uint64_t v17 = 136315138;
    uint64_t v44 = v11;
    uint64_t v45 = v10;
    uint64_t v43 = v13;
    if (v9)
    {
      swift_errorRetain();
      uint64_t v18 = (void *)a1;
    }
    else
    {
      uint64_t v38 = a3;
      if (a1 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v19 = sub_8ED40();
        sub_8CB0(a1, 0);
      }
      else
      {
        uint64_t v19 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
      }
      uint64_t v18 = _swiftEmptyArrayStorage;
      if (v19)
      {
        HIDWORD(v35) = 0;
        uint64_t v36 = a5;
        uint64_t v37 = a4;
        uint64_t v46 = _swiftEmptyArrayStorage;
        unint64_t result = sub_57BA0(0, v19 & ~(v19 >> 63), 0);
        if (v19 < 0)
        {
          __break(1u);
          return result;
        }
        uint64_t v21 = 0;
        uint64_t v18 = v46;
        do
        {
          if ((a1 & 0xC000000000000001) != 0) {
            id v22 = (id)sub_8EC70();
          }
          else {
            id v22 = *(id *)(a1 + 8 * v21 + 32);
          }
          uint64_t v23 = v22;
          uint64_t v24 = sub_2D438(v22);
          unint64_t v26 = v25;

          if (v26) {
            uint64_t v27 = v24;
          }
          else {
            uint64_t v27 = 0x416E776F6E6B6E55;
          }
          if (!v26) {
            unint64_t v26 = 0xEE00776569566563;
          }
          uint64_t v46 = v18;
          unint64_t v29 = v18[2];
          unint64_t v28 = v18[3];
          if (v29 >= v28 >> 1)
          {
            sub_57BA0((char *)(v28 > 1), v29 + 1, 1);
            uint64_t v18 = v46;
          }
          ++v21;
          v18[2] = v29 + 1;
          uint64_t v30 = &v18[2 * v29];
          v30[4] = v27;
          v30[5] = v26;
        }
        while (v19 != v21);
        a4 = v37;
        uint64_t v9 = HIDWORD(v35);
      }
    }
    uint64_t v31 = v41;
    uint64_t v46 = v18;
    BOOL v47 = v9 != 0;
    sub_48AC(&qword_BD488);
    uint64_t v32 = sub_8E8E0();
    uint64_t v46 = (void *)sub_8758C(v32, v33, &v48);
    sub_8EBD0();
    swift_bridgeObjectRelease();
    sub_8CB0(a1, v9);
    sub_8CB0(a1, v9);
    os_log_t v34 = v42;
    _os_log_impl(&dword_0, v42, (os_log_type_t)v40, "IdiomSensitiveViewBuilder: Built views: %s", v31, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v44 + 8))(v43, v45);
  }
  else
  {
    sub_8CB0(a1, v9);
    sub_8CB0(a1, v9);

    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  sub_8EB40();
  if (qword_BB838 != -1) {
    swift_once();
  }
  type metadata accessor for SignpostLog.Signpost();
  sub_8E6E0();
  return (char *)a4(a1, v9);
}

uint64_t sub_2D42C(uint64_t a1, char a2)
{
  if (a2) {
    return swift_errorRetain();
  }
  else {
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_2D438(void *a1)
{
  id v1 = [a1 encodedClassName];
  if (!v1) {
    return 0;
  }
  unint64_t v2 = v1;
  uint64_t v3 = sub_8E8D0();

  return v3;
}

void sub_2D49C()
{
  id v1 = [v0 home];
  if (v1)
  {
    id v12 = v1;
    sub_8EB20();
  }
  else
  {
    if (qword_BB830 != -1) {
      swift_once();
    }
    uint64_t v2 = sub_8E730();
    sub_50FC(v2, (uint64_t)qword_BFEC8);
    id v3 = v0;
    unsigned int v4 = sub_8E710();
    os_log_type_t v5 = sub_8EB10();
    if (os_log_type_enabled(v4, v5))
    {
      unsigned int v6 = (uint8_t *)swift_slowAlloc();
      uint64_t v13 = swift_slowAlloc();
      *(_DWORD *)unsigned int v6 = 136315138;
      id v7 = v3;
      id v8 = [v7 description];
      uint64_t v9 = sub_8E8D0();
      unint64_t v11 = v10;

      sub_8758C(v9, v11, &v13);
      sub_8EBD0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v4, v5, "#%s error in fetching homeName. Setting empty String", v6, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    sub_8E3A0();
  }
}

void *sub_2D6EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a1 + 16);
  if (v6)
  {
    sub_8ECE0();
    uint64_t v7 = a1 + 40;
    do
    {
      id v8 = objc_allocWithZone((Class)INSpeakableString);
      swift_bridgeObjectRetain();
      NSString v9 = sub_8E8C0();
      id v10 = [v8 initWithSpokenPhrase:v9];

      id v11 = objc_allocWithZone((Class)INHomeFilter);
      uint64_t v12 = sub_2DB2C();
      sub_2D9F8(v12, v13, v14, v15, v16, v17, v10, 0, v37, v38, v39, SHIBYTE(v39));
      swift_bridgeObjectRelease();
      sub_8ECC0();
      sub_8ECF0();
      sub_8ED00();
      sub_8ECD0();
      v7 += 16;
      --v6;
    }
    while (v6);
  }
  sub_2DC44((unint64_t)_swiftEmptyArrayStorage);
  uint64_t v18 = *(void *)(a2 + 16);
  if (v18)
  {
    sub_8ECE0();
    uint64_t v19 = a2 + 40;
    do
    {
      id v20 = objc_allocWithZone((Class)INSpeakableString);
      swift_bridgeObjectRetain();
      NSString v21 = sub_8E8C0();
      id v22 = [v20 initWithSpokenPhrase:v21];

      id v23 = objc_allocWithZone((Class)INHomeFilter);
      sub_2D9F8(0, 0, 1, 37, 0, 37, 0, 0, 0, v22, 0, 0);
      swift_bridgeObjectRelease();
      sub_8ECC0();
      sub_8ECF0();
      sub_8ED00();
      sub_8ECD0();
      v19 += 16;
      --v18;
    }
    while (v18);
  }
  sub_2DC44((unint64_t)_swiftEmptyArrayStorage);
  uint64_t v24 = *(void *)(a3 + 16);
  if (v24)
  {
    sub_8ECE0();
    uint64_t v25 = a3 + 40;
    do
    {
      id v26 = objc_allocWithZone((Class)INSpeakableString);
      swift_bridgeObjectRetain();
      NSString v27 = sub_8E8C0();
      id v28 = [v26 initWithSpokenPhrase:v27];

      id v29 = objc_allocWithZone((Class)INHomeFilter);
      uint64_t v30 = sub_2DB2C();
      sub_2D9F8(v30, v31, v32, v33, v34, v35, 0, v28, v37, v38, v39, SHIBYTE(v39));
      swift_bridgeObjectRelease();
      sub_8ECC0();
      sub_8ECF0();
      sub_8ED00();
      sub_8ECD0();
      v25 += 16;
      --v24;
    }
    while (v24);
  }
  sub_2DC44((unint64_t)_swiftEmptyArrayStorage);
  return _swiftEmptyArrayStorage;
}

id sub_2D9F8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, void *a7, void *a8, void *a9, void *a10, char a11, char a12)
{
  uint64_t v13 = v12;
  uint64_t v15 = a7;
  uint64_t v16 = a6;
  uint64_t v19 = a3;
  char v21 = a12;
  char v22 = a11;
  uint64_t v24 = a9;
  id v23 = a10;
  if (a1)
  {
    os_log_t v34 = a5;
    uint64_t v25 = a8;
    NSString v27 = v13;
    v29.super.Class isa = sub_8EA20().super.isa;
    swift_bridgeObjectRelease();
    char v21 = a12;
    char v22 = a11;
    uint64_t v19 = a3;
    uint64_t v13 = v27;
    uint64_t v16 = a6;
    a8 = v25;
    id v23 = a10;
    uint64_t v15 = a7;
    uint64_t v24 = a9;
    a5 = v34;
  }
  else
  {
    v29.super.Class isa = 0;
  }
  BYTE1(v32) = v21 & 1;
  LOBYTE(v32) = v22 & 1;
  id v30 = objc_msgSend(v13, "initWithEntityIdentifiers:entityName:entityType:outerDeviceType:outerDeviceName:deviceType:home:zone:group:room:isExcludeFilter:hasAllQuantifier:", v29.super.isa, a2, v19, a4, a5, v16, v15, a8, v24, v23, v32);

  return v30;
}

uint64_t sub_2DB2C()
{
  return 0;
}

unint64_t sub_2DB54(uint64_t a1)
{
  if (a1 == 1) {
    return 0xD000000000000018;
  }
  sub_8EC40(22);
  swift_bridgeObjectRelease();
  v3._uint64_t countAndFlagsBits = sub_2DB54(a1);
  sub_8E960(v3);
  swift_bridgeObjectRelease();
  return 0xD000000000000014;
}

uint64_t sub_2DBFC()
{
  return INSendAnnouncementAnnouncementUnsupportedReason.description.getter(*v0);
}

uint64_t sub_2DC04(uint64_t a1)
{
  return sub_2DE4C(a1, (uint64_t (*)(void))sub_76A34, sub_77350, (uint64_t (*)(void))&type metadata accessor for DisplayHint);
}

uint64_t sub_2DC44(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_8ED40();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
  }
  if ((unint64_t)*v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_8ED40();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = *(void *)((char *)&dword_10 + (*v1 & 0xFFFFFFFFFFFFFF8));
  }
  if (__OFADD__(v4, v3))
  {
    __break(1u);
    goto LABEL_22;
  }
  unint64_t v5 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *id v1 = v5;
  if (isUniquelyReferenced_nonNull_bridgeObject)
  {
    if ((v5 & 0x8000000000000000) == 0 && (v5 & 0x4000000000000000) == 0)
    {
      uint64_t v7 = v5 & 0xFFFFFFFFFFFFFF8;
      if (v4 + v3 <= *(void *)((char *)&dword_18 + (v5 & 0xFFFFFFFFFFFFFF8)) >> 1) {
        goto LABEL_12;
      }
    }
  }
  if (v5 >> 62) {
    goto LABEL_23;
  }
  while (1)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_8EC80();
    swift_bridgeObjectRelease();
    *id v1 = v8;
    uint64_t v7 = v8 & 0xFFFFFFFFFFFFFF8;
LABEL_12:
    uint64_t result = sub_2E4D0(v7 + 8 * *(void *)(v7 + 16) + 32, (*(void *)(v7 + 24) >> 1) - *(void *)(v7 + 16), a1);
    if (v10 >= v3) {
      break;
    }
LABEL_22:
    __break(1u);
LABEL_23:
    swift_bridgeObjectRetain();
    sub_8ED40();
    swift_bridgeObjectRelease();
  }
  if (v10 >= 1)
  {
    uint64_t v11 = *(void *)((char *)&dword_10 + (*v1 & 0xFFFFFFFFFFFFFF8));
    BOOL v12 = __OFADD__(v11, v10);
    uint64_t v13 = v11 + v10;
    if (v12)
    {
      __break(1u);
      return result;
    }
    *(void *)((char *)&dword_10 + (*v1 & 0xFFFFFFFFFFFFFF8)) = v13;
  }
  swift_bridgeObjectRelease();

  return sub_8EA50();
}

uint64_t sub_2DE0C(uint64_t a1)
{
  return sub_2DE4C(a1, (uint64_t (*)(void))sub_76D88, sub_77338, (uint64_t (*)(void))&type metadata accessor for SpeakableString);
}

uint64_t sub_2DE4C(uint64_t result, uint64_t (*a2)(void), uint64_t (*a3)(unint64_t, uint64_t, unint64_t), uint64_t (*a4)(void))
{
  uint64_t v5 = *(void *)(result + 16);
  uint64_t v6 = *v4;
  uint64_t v7 = *(void *)(*v4 + 16);
  if (__OFADD__(v7, v5))
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v11 = result;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (!result || v7 + v5 > *(void *)(v6 + 24) >> 1)
  {
    uint64_t result = a2();
    uint64_t v6 = result;
  }
  if (!*(void *)(v11 + 16))
  {
    if (!v5) {
      goto LABEL_11;
    }
    goto LABEL_13;
  }
  uint64_t v12 = *(void *)(v6 + 16);
  uint64_t v13 = (*(void *)(v6 + 24) >> 1) - v12;
  uint64_t v14 = a4(0);
  uint64_t v16 = *(void *)(v14 - 8);
  uint64_t result = v14 - 8;
  uint64_t v15 = v16;
  if (v13 < v5)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t result = a3(v11 + v17, v5, v6 + v17 + *(void *)(v15 + 72) * v12);
  if (!v5)
  {
LABEL_11:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v4 = v6;
    return result;
  }
  uint64_t v18 = *(void *)(v6 + 16);
  BOOL v19 = __OFADD__(v18, v5);
  uint64_t v20 = v18 + v5;
  if (!v19)
  {
    *(void *)(v6 + 16) = v20;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
  return result;
}

uint64_t sub_2DF8C()
{
  return sub_2DFA4((SEL *)&selRef_home);
}

uint64_t sub_2DF98()
{
  return sub_2DFA4((SEL *)&selRef_room);
}

uint64_t sub_2DFA4(SEL *a1)
{
  uint64_t v3 = sub_48AC(&qword_BD490);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_8E3D0();
  uint64_t v28 = *(void *)(v6 - 8);
  uint64_t v7 = __chkstk_darwin(v6);
  id v30 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  NSString v27 = (char *)&v25 - v9;
  uint64_t v10 = sub_2E470(v1);
  if (v10) {
    unint64_t v11 = v10;
  }
  else {
    unint64_t v11 = (unint64_t)_swiftEmptyArrayStorage;
  }
  if (!(v11 >> 62))
  {
    uint64_t v12 = *(void *)((char *)&dword_10 + (v11 & 0xFFFFFFFFFFFFFF8));
    uint64_t result = swift_bridgeObjectRetain();
    if (v12) {
      goto LABEL_6;
    }
LABEL_24:
    uint64_t v16 = _swiftEmptyArrayStorage;
LABEL_25:
    swift_bridgeObjectRelease_n();
    return (uint64_t)v16;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_8ED40();
  uint64_t v12 = result;
  if (!result) {
    goto LABEL_24;
  }
LABEL_6:
  if (v12 >= 1)
  {
    uint64_t v14 = 0;
    unint64_t v29 = v11 & 0xC000000000000001;
    uint64_t v15 = (void (**)(void))(v28 + 32);
    uint64_t v16 = _swiftEmptyArrayStorage;
    id v26 = a1;
    do
    {
      if (v29) {
        id v17 = (id)sub_8EC70();
      }
      else {
        id v17 = *(id *)(v11 + 8 * v14 + 32);
      }
      uint64_t v18 = v17;
      id v19 = [v17 *a1];
      if (v19)
      {
        uint64_t v20 = v19;
        sub_8EB20();

        uint64_t v21 = 0;
      }
      else
      {
        uint64_t v21 = 1;
      }
      _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0((uint64_t)v5, v21, 1, v6);

      if (_s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0((uint64_t)v5, 1, v6) == 1)
      {
        sub_2E798((uint64_t)v5);
      }
      else
      {
        char v22 = *v15;
        sub_2E8AC();
        v22();
        sub_2E8AC();
        v22();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v16 = (void *)sub_76D88(0, v16[2] + 1, 1, (uint64_t)v16);
        }
        unint64_t v24 = v16[2];
        unint64_t v23 = v16[3];
        if (v24 >= v23 >> 1) {
          uint64_t v16 = (void *)sub_76D88(v23 > 1, v24 + 1, 1, (uint64_t)v16);
        }
        v16[2] = v24 + 1;
        sub_2E8AC();
        v22();
        a1 = v26;
      }
      ++v14;
    }
    while (v12 != v14);
    goto LABEL_25;
  }
  __break(1u);
  return result;
}

void *sub_2E2C4()
{
  uint64_t v0 = sub_2DFA4((SEL *)&selRef_home);
  sub_2DE4C(v0, (uint64_t (*)(void))sub_76D88, sub_77338, (uint64_t (*)(void))&type metadata accessor for SpeakableString);
  uint64_t v1 = sub_2DFA4((SEL *)&selRef_room);
  sub_2E88C(v1);
  uint64_t v2 = sub_2DFA4((SEL *)&selRef_zone);
  sub_2E88C(v2);
  return _swiftEmptyArrayStorage;
}

void *sub_2E390()
{
  uint64_t v0 = sub_2DFA4((SEL *)&selRef_room);
  sub_2DE4C(v0, (uint64_t (*)(void))sub_76D88, sub_77338, (uint64_t (*)(void))&type metadata accessor for SpeakableString);
  uint64_t v1 = sub_2DFA4((SEL *)&selRef_zone);
  sub_2E88C(v1);
  return _swiftEmptyArrayStorage;
}

unint64_t sub_2E44C(unint64_t result, char a2, uint64_t a3)
{
  if (a2)
  {
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(void *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFFF8)) > result)
    {
      return result;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_2E470(void *a1)
{
  id v1 = [a1 recipients];
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  sub_2E7F8();
  uint64_t v3 = sub_8EA30();

  return v3;
}

uint64_t sub_2E4D0(uint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v5 = result;
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_8ED40();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFFF8));
    if (!v7) {
      return a3;
    }
  }
  if (v5)
  {
    if (v6)
    {
      swift_bridgeObjectRetain();
      uint64_t v8 = sub_8ED40();
      uint64_t result = swift_bridgeObjectRelease();
      if (v8 <= a2)
      {
        if (v7 >= 1)
        {
          sub_2E838();
          swift_bridgeObjectRetain();
          for (unint64_t i = 0; i != v7; ++i)
          {
            sub_48AC(&qword_BD498);
            uint64_t v10 = sub_2E660(v13, i, a3);
            id v12 = *v11;
            ((void (*)(void *, void))v10)(v13, 0);
            *(void *)(v5 + 8 * i) = v12;
          }
          swift_bridgeObjectRelease();
          return a3;
        }
        goto LABEL_16;
      }
    }
    else
    {
      if (*(void *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFFF8)) <= a2)
      {
        sub_77368((a3 & 0xFFFFFFFFFFFFFF8) + 32, *(void *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFFF8)));
        return a3;
      }
      __break(1u);
    }
    __break(1u);
LABEL_16:
    __break(1u);
  }
  __break(1u);
  return result;
}

void (*sub_2E660(void *a1, unint64_t a2, uint64_t a3))(void *a1)
{
  unint64_t v6 = malloc(0x28uLL);
  *a1 = v6;
  v6[4] = sub_2E710(v6, a2, a3);
  return sub_2E6C8;
}

void sub_2E6C8(void *a1)
{
  id v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

void (*sub_2E710(void *a1, unint64_t a2, uint64_t a3))(id *a1)
{
  unint64_t v6 = a3 & 0xC000000000000001;
  sub_2E44C(a2, (a3 & 0xC000000000000001) == 0, a3);
  if (v6) {
    id v7 = (id)sub_8EC70();
  }
  else {
    id v7 = *(id *)(a3 + 8 * a2 + 32);
  }
  *a1 = v7;
  return sub_2E790;
}

void sub_2E790(id *a1)
{
}

uint64_t sub_2E798(uint64_t a1)
{
  uint64_t v2 = sub_48AC(&qword_BD490);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_2E7F8()
{
  unint64_t result = qword_BCFD8;
  if (!qword_BCFD8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_BCFD8);
  }
  return result;
}

unint64_t sub_2E838()
{
  unint64_t result = qword_BD4A0;
  if (!qword_BD4A0)
  {
    sub_9950(&qword_BD498);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BD4A0);
  }
  return result;
}

uint64_t sub_2E88C(uint64_t a1)
{
  return sub_2DE4C(a1, v1, v2, v3);
}

uint64_t sub_2E8BC()
{
  return sub_2E8E0((SEL *)&selRef_home);
}

uint64_t sub_2E8C8()
{
  return sub_2E8E0((SEL *)&selRef_room);
}

uint64_t sub_2E8D4()
{
  return sub_2E8E0((SEL *)&selRef_zone);
}

uint64_t sub_2E8E0(SEL *a1)
{
  unint64_t v29 = a1;
  uint64_t v2 = sub_48AC(&qword_BD490);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_8E3D0();
  uint64_t v28 = *(void *)(v5 - 8);
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v31 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  NSString v27 = (char *)&v26 - v8;
  uint64_t v9 = sub_2EC38(v1);
  if (v9) {
    unint64_t v10 = v9;
  }
  else {
    unint64_t v10 = (unint64_t)_swiftEmptyArrayStorage;
  }
  if (!(v10 >> 62))
  {
    uint64_t v11 = *(void *)((char *)&dword_10 + (v10 & 0xFFFFFFFFFFFFFF8));
    uint64_t result = swift_bridgeObjectRetain();
    if (v11) {
      goto LABEL_6;
    }
LABEL_25:
    uint64_t v15 = (char *)_swiftEmptyArrayStorage;
LABEL_26:
    swift_bridgeObjectRelease_n();
    return (uint64_t)v15;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_8ED40();
  uint64_t v11 = result;
  if (!result) {
    goto LABEL_25;
  }
LABEL_6:
  if (v11 >= 1)
  {
    uint64_t v13 = 0;
    unint64_t v30 = v10 & 0xC000000000000001;
    uint64_t v14 = (void (**)(char *, char *, uint64_t))(v28 + 32);
    uint64_t v15 = (char *)_swiftEmptyArrayStorage;
    do
    {
      if (v30) {
        id v16 = (id)sub_8EC70();
      }
      else {
        id v16 = *(id *)(v10 + 8 * v13 + 32);
      }
      id v17 = v16;
      id v18 = [v16 originator];
      if (v18 && (id v19 = v18, v20 = [v18 *v29], v19, v20))
      {
        sub_8EB20();

        uint64_t v21 = 0;
      }
      else
      {
        uint64_t v21 = 1;
      }
      _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0((uint64_t)v4, v21, 1, v5);

      if (_s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0((uint64_t)v4, 1, v5) == 1)
      {
        sub_2E798((uint64_t)v4);
      }
      else
      {
        char v22 = *v14;
        unint64_t v23 = v27;
        (*v14)(v27, v4, v5);
        v22(v31, v23, v5);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v15 = (char *)sub_76D88(0, *((void *)v15 + 2) + 1, 1, (uint64_t)v15);
        }
        unint64_t v25 = *((void *)v15 + 2);
        unint64_t v24 = *((void *)v15 + 3);
        if (v25 >= v24 >> 1) {
          uint64_t v15 = (char *)sub_76D88(v24 > 1, v25 + 1, 1, (uint64_t)v15);
        }
        *((void *)v15 + 2) = v25 + 1;
        v22(&v15[((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80))+ *(void *)(v28 + 72) * v25], v31, v5);
      }
      ++v13;
    }
    while (v11 != v13);
    goto LABEL_26;
  }
  __break(1u);
  return result;
}

uint64_t sub_2EC38(void *a1)
{
  id v1 = [a1 sentAnnouncements];
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  sub_2EC98();
  uint64_t v3 = sub_8EA30();

  return v3;
}

unint64_t sub_2EC98()
{
  unint64_t result = qword_BD4A8;
  if (!qword_BD4A8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_BD4A8);
  }
  return result;
}

unint64_t INSendAnnouncementRecipientUnsupportedReason.description.getter(uint64_t a1)
{
  uint64_t v3 = a1 - 1;
  unint64_t result = 0xD000000000000011;
  switch(v3)
  {
    case 0:
      unint64_t result = 0x4E7465677261742ELL;
      break;
    case 1:
      return result;
    case 2:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 3:
      unint64_t result = 0xD00000000000001DLL;
      break;
    default:
      v5[4] = v1;
      v5[5] = v2;
      sub_8EC40(16);
      swift_bridgeObjectRelease();
      strcpy((char *)v5, "Unknown code: ");
      HIBYTE(v5[1]) = -18;
      v6._uint64_t countAndFlagsBits = INSendAnnouncementRecipientUnsupportedReason.description.getter(0xD000000000000011);
      sub_8E960(v6);
      swift_bridgeObjectRelease();
      unint64_t result = v5[0];
      break;
  }
  return result;
}

unint64_t sub_2EE04()
{
  return INSendAnnouncementRecipientUnsupportedReason.description.getter(*v0);
}

uint64_t sub_2EE0C()
{
  id v1 = [v0 disambiguationItems];
  uint64_t v2 = sub_8EA30();

  uint64_t v3 = *(void *)(v2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v4 = &selRef_alternatives;
  if (v3) {
    uint64_t v4 = &selRef_disambiguationItems;
  }
  id v5 = [v0 *v4];
  uint64_t v6 = sub_8EA30();

  return v6;
}

uint64_t sub_2EEBC()
{
  uint64_t v0 = sub_8D3B0();
  if (!v0) {
    return 0;
  }
  id v1 = (void *)v0;
  uint64_t v2 = sub_2EF1C();

  return v2;
}

uint64_t sub_2EF1C()
{
  id v1 = v0;
  sub_8CAD0();
  sub_F5CC();
  uint64_t v2 = sub_8EBF0();
  uint64_t v4 = v3;
  swift_bridgeObjectRelease();
  uint64_t v5 = sub_2FB3C(v0);
  if (!v5) {
    goto LABEL_15;
  }
  uint64_t v6 = v5;
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_5C084(v2, v4, v6);
  uint64_t v9 = v8;
  swift_bridgeObjectRelease();
  if (!v9)
  {
    char v10 = sub_2F138();
    if (v10 != 95)
    {
      char v11 = v10;
      if (qword_BB878 != -1) {
        swift_once();
      }
      uint64_t v12 = sub_5C0DC(v11, qword_BD4B0);
      if (v12)
      {
        uint64_t v13 = v12;
        uint64_t v14 = *(void *)(v12 + 16);
        if (v14)
        {
          uint64_t v15 = 0;
          while (1)
          {
            uint64_t v16 = sub_2F620(*(unsigned char *)(v13 + v15 + 32));
            if (*(void *)(v6 + 16))
            {
              unint64_t v18 = sub_5E228(v16, v17);
              if (v19) {
                break;
              }
            }
            ++v15;
            swift_bridgeObjectRelease();
            if (v14 == v15) {
              goto LABEL_14;
            }
          }
          uint64_t v7 = *(void *)(*(void *)(v6 + 56) + 16 * v18);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
LABEL_14:
        swift_bridgeObjectRelease();
      }
    }
LABEL_15:
    swift_bridgeObjectRelease();
    return sub_2FBA0(v1);
  }
  swift_bridgeObjectRelease();
LABEL_4:
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t type metadata accessor for AppInfoBuilder()
{
  return self;
}

uint64_t sub_2F138()
{
  uint64_t v0 = sub_8EE60();
  swift_bridgeObjectRelease();
  uint64_t v1 = 0;
  uint64_t result = 2;
  switch(v0)
  {
    case 0:
      goto LABEL_3;
    case 1:
      uint64_t v1 = 1;
LABEL_3:
      uint64_t result = v1;
      break;
    case 2:
      return result;
    case 3:
      uint64_t result = 3;
      break;
    case 4:
      uint64_t result = 4;
      break;
    case 5:
      uint64_t result = 5;
      break;
    case 6:
      uint64_t result = 6;
      break;
    case 7:
      uint64_t result = 7;
      break;
    case 8:
      uint64_t result = 8;
      break;
    case 9:
      uint64_t result = 9;
      break;
    case 10:
      uint64_t result = 10;
      break;
    case 11:
      uint64_t result = 11;
      break;
    case 12:
      uint64_t result = 12;
      break;
    case 13:
      uint64_t result = 13;
      break;
    case 14:
      uint64_t result = 14;
      break;
    case 15:
      uint64_t result = 15;
      break;
    case 16:
      uint64_t result = 16;
      break;
    case 17:
      uint64_t result = 17;
      break;
    case 18:
      uint64_t result = 18;
      break;
    case 19:
      uint64_t result = 19;
      break;
    case 20:
      uint64_t result = 20;
      break;
    case 21:
      uint64_t result = 21;
      break;
    case 22:
      uint64_t result = 22;
      break;
    case 23:
      uint64_t result = 23;
      break;
    case 24:
      uint64_t result = 24;
      break;
    case 25:
      uint64_t result = 25;
      break;
    case 26:
      uint64_t result = 26;
      break;
    case 27:
      uint64_t result = 27;
      break;
    case 28:
      uint64_t result = 28;
      break;
    case 29:
      uint64_t result = 29;
      break;
    case 30:
      uint64_t result = 30;
      break;
    case 31:
      uint64_t result = 31;
      break;
    case 32:
      uint64_t result = 32;
      break;
    case 33:
      uint64_t result = 33;
      break;
    case 34:
      uint64_t result = 34;
      break;
    case 35:
      uint64_t result = 35;
      break;
    case 36:
      uint64_t result = 36;
      break;
    case 37:
      uint64_t result = 37;
      break;
    case 38:
      uint64_t result = 38;
      break;
    case 39:
      uint64_t result = 39;
      break;
    case 40:
      uint64_t result = 40;
      break;
    case 41:
      uint64_t result = 41;
      break;
    case 42:
      uint64_t result = 42;
      break;
    case 43:
      uint64_t result = 43;
      break;
    case 44:
      uint64_t result = 44;
      break;
    case 45:
      uint64_t result = 45;
      break;
    case 46:
      uint64_t result = 46;
      break;
    case 47:
      uint64_t result = 47;
      break;
    case 48:
      uint64_t result = 48;
      break;
    case 49:
      uint64_t result = 49;
      break;
    case 50:
      uint64_t result = 50;
      break;
    case 51:
      uint64_t result = 51;
      break;
    case 52:
      uint64_t result = 52;
      break;
    case 53:
      uint64_t result = 53;
      break;
    case 54:
      uint64_t result = 54;
      break;
    case 55:
      uint64_t result = 55;
      break;
    case 56:
      uint64_t result = 56;
      break;
    case 57:
      uint64_t result = 57;
      break;
    case 58:
      uint64_t result = 58;
      break;
    case 59:
      uint64_t result = 59;
      break;
    case 60:
      uint64_t result = 60;
      break;
    case 61:
      uint64_t result = 61;
      break;
    case 62:
      uint64_t result = 62;
      break;
    case 63:
      uint64_t result = 63;
      break;
    case 64:
      uint64_t result = 64;
      break;
    case 65:
      uint64_t result = 65;
      break;
    case 66:
      uint64_t result = 66;
      break;
    case 67:
      uint64_t result = 67;
      break;
    case 68:
      uint64_t result = 68;
      break;
    case 69:
      uint64_t result = 69;
      break;
    case 70:
      uint64_t result = 70;
      break;
    case 71:
      uint64_t result = 71;
      break;
    case 72:
      uint64_t result = 72;
      break;
    case 73:
      uint64_t result = 73;
      break;
    case 74:
      uint64_t result = 74;
      break;
    case 75:
      uint64_t result = 75;
      break;
    case 76:
      uint64_t result = 76;
      break;
    case 77:
      uint64_t result = 77;
      break;
    case 78:
      uint64_t result = 78;
      break;
    case 79:
      uint64_t result = 79;
      break;
    case 80:
      uint64_t result = 80;
      break;
    case 81:
      uint64_t result = 81;
      break;
    case 82:
      uint64_t result = 82;
      break;
    case 83:
      uint64_t result = 83;
      break;
    case 84:
      uint64_t result = 84;
      break;
    case 85:
      uint64_t result = 85;
      break;
    case 86:
      uint64_t result = 86;
      break;
    case 87:
      uint64_t result = 87;
      break;
    case 88:
      uint64_t result = 88;
      break;
    case 89:
      uint64_t result = 89;
      break;
    case 90:
      uint64_t result = 90;
      break;
    case 91:
      uint64_t result = 91;
      break;
    case 92:
      uint64_t result = 92;
      break;
    case 93:
      uint64_t result = 93;
      break;
    case 94:
      uint64_t result = 94;
      break;
    default:
      uint64_t result = 95;
      break;
  }
  return result;
}

uint64_t sub_2F620(char a1)
{
  return qword_91FF8[a1];
}

uint64_t sub_2F640(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_24A68(*a1, *a2);
}

Swift::Int sub_2F64C()
{
  return sub_24CE4();
}

uint64_t sub_2F654(uint64_t a1)
{
  return sub_25118(a1, *v1);
}

Swift::Int sub_2F65C(uint64_t a1)
{
  return sub_252C4(a1, *v1);
}

uint64_t sub_2F664@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_2F138();
  *a1 = result;
  return result;
}

uint64_t sub_2F694@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_2F620(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_2F6C0()
{
  sub_48AC(&qword_BD558);
  uint64_t inited = swift_initStackObject();
  *(unsigned char *)(inited + 32) = 1;
  *(void *)(inited + 40) = &off_B3778;
  *(unsigned char *)(inited + 48) = 8;
  *(void *)(inited + 56) = &off_B37A0;
  *(unsigned char *)(inited + 64) = 10;
  *(void *)(inited + 72) = &off_B37C8;
  *(unsigned char *)(inited + 80) = 11;
  *(void *)(inited + 88) = &off_B37F0;
  *(unsigned char *)(inited + 96) = 12;
  *(void *)(inited + 104) = &off_B3818;
  *(unsigned char *)(inited + 112) = 16;
  *(void *)(inited + 120) = &off_B3840;
  *(unsigned char *)(inited + 128) = 17;
  *(void *)(inited + 136) = &off_B3868;
  *(unsigned char *)(inited + 144) = 18;
  *(void *)(inited + 152) = &off_B3890;
  *(unsigned char *)(inited + 160) = 20;
  *(void *)(inited + 168) = &off_B38B8;
  *(unsigned char *)(inited + 176) = 22;
  *(void *)(inited + 184) = &off_B38E0;
  *(unsigned char *)(inited + 192) = 21;
  *(void *)(inited + 200) = &off_B3908;
  *(unsigned char *)(inited + 208) = 19;
  *(void *)(inited + 216) = &off_B3930;
  *(unsigned char *)(inited + 224) = 23;
  *(void *)(inited + 232) = &off_B3958;
  *(unsigned char *)(inited + 240) = 27;
  *(void *)(inited + 248) = &off_B3980;
  *(unsigned char *)(inited + 256) = 30;
  *(void *)(inited + 264) = &off_B39A8;
  *(unsigned char *)(inited + 272) = 28;
  *(void *)(inited + 280) = &off_B39D0;
  *(unsigned char *)(inited + 288) = 29;
  *(void *)(inited + 296) = &off_B39F8;
  *(unsigned char *)(inited + 304) = 32;
  *(void *)(inited + 312) = &off_B3A20;
  *(unsigned char *)(inited + 320) = 34;
  *(void *)(inited + 328) = &off_B3A48;
  *(unsigned char *)(inited + 336) = 35;
  *(void *)(inited + 344) = &off_B3A70;
  *(unsigned char *)(inited + 352) = 37;
  *(void *)(inited + 360) = &off_B3A98;
  *(unsigned char *)(inited + 368) = 36;
  *(void *)(inited + 376) = &off_B3AC0;
  *(unsigned char *)(inited + 384) = 39;
  *(void *)(inited + 392) = &off_B3AE8;
  *(unsigned char *)(inited + 400) = 45;
  *(void *)(inited + 408) = &off_B3B10;
  *(unsigned char *)(inited + 416) = 46;
  *(void *)(inited + 424) = &off_B3B38;
  *(unsigned char *)(inited + 432) = 52;
  *(void *)(inited + 440) = &off_B3B60;
  *(unsigned char *)(inited + 448) = 54;
  *(void *)(inited + 456) = &off_B3B88;
  *(unsigned char *)(inited + 464) = 56;
  *(void *)(inited + 472) = &off_B3BB0;
  *(unsigned char *)(inited + 480) = 58;
  *(void *)(inited + 488) = &off_B3BD8;
  *(unsigned char *)(inited + 496) = 62;
  *(void *)(inited + 504) = &off_B3C00;
  *(unsigned char *)(inited + 512) = 67;
  *(void *)(inited + 520) = &off_B3C28;
  *(unsigned char *)(inited + 528) = 68;
  *(void *)(inited + 536) = &off_B3C50;
  *(unsigned char *)(inited + 544) = 72;
  *(void *)(inited + 552) = &off_B3C78;
  *(unsigned char *)(inited + 560) = 76;
  *(void *)(inited + 568) = &off_B3CA0;
  *(unsigned char *)(inited + 576) = 78;
  *(void *)(inited + 584) = &off_B3CC8;
  *(unsigned char *)(inited + 592) = 80;
  *(void *)(inited + 600) = &off_B3CF0;
  *(unsigned char *)(inited + 608) = 84;
  *(void *)(inited + 616) = &off_B3D18;
  *(unsigned char *)(inited + 624) = 94;
  *(void *)(inited + 632) = &off_B3D40;
  *(unsigned char *)(inited + 640) = 92;
  *(void *)(inited + 648) = &off_B3D68;
  *(unsigned char *)(inited + 656) = 15;
  *(void *)(inited + 664) = &off_B3D90;
  *(void *)(inited + 680) = &off_B3DB8;
  *(unsigned char *)(inited + 688) = 26;
  *(void *)(inited + 696) = &off_B3DE0;
  *(unsigned char *)(inited + 704) = 66;
  *(void *)(inited + 712) = &off_B3E08;
  *(unsigned char *)(inited + 720) = 57;
  *(void *)(inited + 728) = &off_B3E30;
  *(unsigned char *)(inited + 736) = 89;
  *(void *)(inited + 744) = &off_B3E58;
  *(unsigned char *)(inited + 752) = 91;
  *(void *)(inited + 760) = &off_B3E80;
  *(unsigned char *)(inited + 768) = 90;
  *(void *)(inited + 776) = &off_B3EA8;
  *(unsigned char *)(inited + 784) = 93;
  *(_OWORD *)(inited + 16) = xmmword_91F00;
  *(void *)(inited + 792) = &off_B3ED0;
  *(unsigned char *)(inited + 800) = 88;
  *(unsigned char *)(inited + 672) = 0;
  *(void *)(inited + 808) = &off_B3EF8;
  *(unsigned char *)(inited + 816) = 87;
  *(void *)(inited + 824) = &off_B3F20;
  *(unsigned char *)(inited + 832) = 86;
  *(void *)(inited + 840) = &off_B3F48;
  sub_48AC(&qword_BD560);
  sub_2FC04();
  uint64_t result = sub_8E880();
  qword_BD4B0 = result;
  return result;
}

uint64_t sub_2FB3C(void *a1)
{
  id v1 = [a1 appNameMap];
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  uint64_t v3 = sub_8E870();

  return v3;
}

uint64_t sub_2FBA0(void *a1)
{
  id v1 = [a1 displayAppName];
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  uint64_t v3 = sub_8E8D0();

  return v3;
}

unint64_t sub_2FC04()
{
  unint64_t result = qword_BD568;
  if (!qword_BD568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BD568);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for SiriLocales(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xA2)
  {
    if (a2 + 94 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 94) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 95;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x5F;
  int v5 = v6 - 95;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for SiriLocales(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 94 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 94) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xA2) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xA1)
  {
    unsigned int v6 = ((a2 - 162) >> 8) + 1;
    *unint64_t result = a2 + 94;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2FDA4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 94;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SiriLocales()
{
  return &type metadata for SiriLocales;
}

unint64_t sub_2FDE0()
{
  unint64_t result = qword_BD570;
  if (!qword_BD570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BD570);
  }
  return result;
}

void sub_2FE2C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v81 = a2;
  uint64_t v79 = sub_8D890();
  sub_5190();
  uint64_t v77 = v3;
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v80 = (char *)&v75 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v78 = (char *)&v75 - v7;
  uint64_t v8 = sub_8D8E0();
  sub_5190();
  uint64_t v75 = v9;
  __chkstk_darwin(v10);
  sub_AAA8();
  uint64_t v13 = v12 - v11;
  uint64_t v14 = sub_48AC(&qword_BD900);
  __chkstk_darwin(v14 - 8);
  sub_AAA8();
  uint64_t v17 = v16 - v15;
  uint64_t v18 = sub_8D940();
  sub_5190();
  uint64_t v76 = v19;
  uint64_t v21 = __chkstk_darwin(v20);
  unint64_t v23 = (char *)&v75 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  unint64_t v25 = (char *)&v75 - v24;
  uint64_t v26 = sub_8D8B0();
  sub_5190();
  uint64_t v28 = v27;
  __chkstk_darwin(v29);
  sub_AAA8();
  uint64_t v32 = (uint64_t *)(v31 - v30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16))(v31 - v30, a1, v26);
  int v33 = (*(uint64_t (**)(uint64_t *, uint64_t))(v28 + 88))(v32, v26);
  if (v33 == enum case for Parse.NLv3IntentOnly(_:))
  {
    uint64_t v34 = sub_3109C();
    v35(v34);
LABEL_5:
    sub_310B4();
    return;
  }
  if (v33 == enum case for Parse.NLv3IntentPlusServerConversion(_:))
  {
    uint64_t v36 = sub_31084();
    v37(v36);
    sub_48AC(&qword_BCDA8);
    swift_release();
    sub_8E1C0();
    sub_16058();
    (*(void (**)(uint64_t *))(v38 + 8))(v32);
    goto LABEL_5;
  }
  if (v33 == enum case for Parse.directInvocation(_:))
  {
    uint64_t v39 = sub_31084();
    v40(v39);
    uint64_t v41 = v77;
    uint64_t v42 = (uint64_t)v78;
    uint64_t v43 = v79;
    sub_7074();
    v44();
    if (qword_BB830 != -1) {
      swift_once();
    }
    uint64_t v45 = sub_8E730();
    sub_50FC(v45, (uint64_t)qword_BFEC8);
    uint64_t v46 = v80;
    (*(void (**)(char *, uint64_t, uint64_t))(v41 + 16))(v80, v42, v43);
    BOOL v47 = sub_8E710();
    os_log_type_t v48 = sub_8EB00();
    if (os_log_type_enabled(v47, v48))
    {
      uint64_t v49 = (uint8_t *)swift_slowAlloc();
      uint64_t v76 = swift_slowAlloc();
      uint64_t v83 = v76;
      *(_DWORD *)uint64_t v49 = 136315138;
      uint64_t v50 = sub_8D870();
      uint64_t v82 = sub_8758C(v50, v51, &v83);
      sub_8EBD0();
      swift_bridgeObjectRelease();
      Swift::String v52 = *(void (**)(char *, uint64_t))(v41 + 8);
      v52(v80, v43);
      _os_log_impl(&dword_0, v47, v48, "#NLTransformer building HomeCommunicationNLIntent for direct invocation %s", v49, 0xCu);
      swift_arrayDestroy();
      sub_CC2C();
      sub_CC2C();
    }
    else
    {
      Swift::String v52 = *(void (**)(char *, uint64_t))(v41 + 8);
      v52(v46, v43);
    }

    sub_30B4C(v42, v81);
    v52((char *)v42, v43);
  }
  else if (v33 == enum case for Parse.NLv4IntentOnly(_:))
  {
    uint64_t v53 = sub_31084();
    v54(v53);
    uint64_t v55 = *v32;
    sub_8DAE0();
    if (_s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0(v17, 1, v18) == 1)
    {
      sub_31030(v17, &qword_BD900);
      if (qword_BB830 != -1) {
        swift_once();
      }
      uint64_t v56 = sub_8E730();
      sub_50FC(v56, (uint64_t)qword_BFEC8);
      swift_unknownObjectRetain_n();
      char v57 = sub_8E710();
      os_log_type_t v58 = sub_8EB10();
      if (os_log_type_enabled(v57, v58))
      {
        Swift::String v59 = (uint8_t *)swift_slowAlloc();
        uint64_t v60 = swift_slowAlloc();
        uint64_t v82 = v55;
        uint64_t v83 = v60;
        *(_DWORD *)Swift::String v59 = 136315138;
        swift_unknownObjectRetain();
        sub_48AC(&qword_BD6F0);
        uint64_t v61 = sub_8E8E0();
        uint64_t v82 = sub_8758C(v61, v62, &v83);
        sub_8EBD0();
        swift_unknownObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_0, v57, v58, "#NLTransformer Couldn't transform UserDialogAct %s into UserParse to get the UDAs.", v59, 0xCu);
        swift_arrayDestroy();
        sub_CC2C();
        sub_CC2C();
        swift_unknownObjectRelease();
      }
      else
      {

        swift_unknownObjectRelease_n();
      }
      goto LABEL_5;
    }
    uint64_t v67 = v76;
    sub_7074();
    v68();
    sub_30650(v81);
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v67 + 8))(v25, v18);
  }
  else if (v33 == enum case for Parse.uso(_:))
  {
    uint64_t v63 = sub_31084();
    v64(v63);
    uint64_t v65 = v75;
    sub_7074();
    v66();
    sub_8D8D0();
    sub_30650(v81);
    (*(void (**)(char *, uint64_t))(v76 + 8))(v23, v18);
    (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v13, v8);
  }
  else
  {
    if (qword_BB830 != -1) {
      swift_once();
    }
    uint64_t v69 = sub_8E730();
    sub_50FC(v69, (uint64_t)qword_BFEC8);
    uint64_t v70 = sub_8E710();
    os_log_type_t v71 = sub_8EB10();
    if (os_log_type_enabled(v70, v71))
    {
      uint64_t v72 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v72 = 0;
      _os_log_impl(&dword_0, v70, v71, "NLTransformer got an unknown parse", v72, 2u);
      sub_CC2C();
    }

    sub_310B4();
    uint64_t v73 = sub_3109C();
    v74(v73);
  }
}

void sub_30650(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_48AC((uint64_t *)&unk_BD6E0);
  __chkstk_darwin(v2 - 8);
  sub_AAA8();
  uint64_t v5 = v4 - v3;
  uint64_t v6 = sub_8D9C0();
  sub_5190();
  uint64_t v8 = v7;
  __chkstk_darwin(v9);
  sub_AAA8();
  uint64_t v12 = v11 - v10;
  uint64_t v13 = sub_8D930();
  sub_765B8(v13, v5);
  swift_bridgeObjectRelease();
  if (_s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0(v5, 1, v6) == 1)
  {
    sub_31030(v5, (uint64_t *)&unk_BD6E0);
    if (qword_BB830 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_8E730();
    sub_50FC(v14, (uint64_t)qword_BFEC8);
    uint64_t v15 = sub_8E710();
    os_log_type_t v16 = sub_8EB10();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v17 = 0;
      _os_log_impl(&dword_0, v15, v16, "#NLTransformer No user dialog act found in userParse.", v17, 2u);
      sub_CC2C();
    }

    *(void *)(a1 + 32) = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  else
  {
    sub_7074();
    v18();
    sub_30878(&v19);
    sub_30F6C((uint64_t)&v20, a1, &qword_BC410);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v12, v6);
  }
}

uint64_t sub_30878@<X0>(uint64_t *a1@<X8>)
{
  swift_beginAccess();
  sub_30ED8(v1 + 32, (uint64_t)&v12, (uint64_t *)&unk_BD6D0);
  if (v13[3] == 1)
  {
    sub_31030((uint64_t)&v12, (uint64_t *)&unk_BD6D0);
    memset(v14, 0, sizeof(v14));
    uint64_t v15 = 0;
  }
  else
  {
    sub_30ED8((uint64_t)v13, (uint64_t)v14, &qword_BC410);
    sub_31030((uint64_t)&v12, (uint64_t *)&unk_BD6D0);
  }
  sub_314EC();
  if (qword_BB830 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_8E730();
  sub_50FC(v3, (uint64_t)qword_BFEC8);
  sub_30ED8((uint64_t)v11, (uint64_t)&v12, &qword_BC410);
  uint64_t v4 = sub_8E710();
  os_log_type_t v5 = sub_8EB00();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    v10[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136315138;
    sub_48AC(&qword_BC410);
    uint64_t v7 = sub_8EBA0();
    sub_8758C(v7, v8, v10);
    sub_8EBD0();
    swift_bridgeObjectRelease();
    sub_31030((uint64_t)&v12, &qword_BC410);
    _os_log_impl(&dword_0, v4, v5, "#NLv4Transformer found no cached result. Transformation generated HomeCommunicationNLIntent: %s", v6, 0xCu);
    swift_arrayDestroy();
    sub_CC2C();
    sub_CC2C();
  }
  else
  {

    sub_31030((uint64_t)&v12, &qword_BC410);
  }
  sub_31030((uint64_t)v14, &qword_BC410);
  *a1 = 1;
  sub_30F6C((uint64_t)v11, (uint64_t)(a1 + 1), &qword_BC410);
  sub_30F34(a1, &v12);
  sub_30F6C((uint64_t)&v12, (uint64_t)v10, (uint64_t *)&unk_BD6D0);
  swift_beginAccess();
  sub_30FC8((uint64_t)v10, v1 + 32);
  return swift_endAccess();
}

uint64_t sub_30B4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  swift_retain();
  sub_CFB0(a1, v2 + 96, a2);

  return swift_release();
}

uint64_t sub_30BB0()
{
  swift_release();
  swift_bridgeObjectRelease();
  sub_31030(v0 + 32, (uint64_t *)&unk_BD6D0);
  swift_release();
  swift_release();
  sub_4950(v0 + 96);
  return v0;
}

uint64_t sub_30C00()
{
  sub_30BB0();

  return _swift_deallocClassInstance(v0, 136, 7);
}

uint64_t type metadata accessor for NLTransformer()
{
  return self;
}

uint64_t destroy for TransformationResult(uint64_t result)
{
  if (*(void *)(result + 32)) {
    return sub_4950(result + 8);
  }
  return result;
}

void *initializeWithCopy for TransformationResult(void *a1, uint64_t *a2)
{
  uint64_t v5 = *a2;
  uint64_t v4 = a2 + 1;
  *a1 = v5;
  uint64_t v6 = a1 + 1;
  uint64_t v7 = a2[4];
  if (v7)
  {
    uint64_t v8 = a2[5];
    a1[4] = v7;
    a1[5] = v8;
    (**(void (***)(void *, void *))(v7 - 8))(v6, v4);
  }
  else
  {
    long long v9 = *((_OWORD *)v4 + 1);
    *(_OWORD *)uint64_t v6 = *(_OWORD *)v4;
    *((_OWORD *)v6 + 1) = v9;
    v6[4] = v4[4];
  }
  return a1;
}

void *assignWithCopy for TransformationResult(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v3 = a1 + 1;
  uint64_t v4 = a2 + 1;
  uint64_t v5 = a2[4];
  if (!a1[4])
  {
    if (v5)
    {
      a1[4] = v5;
      a1[5] = a2[5];
      (**(void (***)(uint64_t, uint64_t))(v5 - 8))((uint64_t)(a1 + 1), (uint64_t)(a2 + 1));
      return a1;
    }
LABEL_7:
    long long v6 = *(_OWORD *)v4;
    long long v7 = *((_OWORD *)v4 + 1);
    v3[4] = v4[4];
    *(_OWORD *)uint64_t v3 = v6;
    *((_OWORD *)v3 + 1) = v7;
    return a1;
  }
  if (!v5)
  {
    sub_4950((uint64_t)(a1 + 1));
    goto LABEL_7;
  }
  sub_10D40(a1 + 1, a2 + 1);
  return a1;
}

__n128 initializeWithTake for TransformationResult(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

void *assignWithTake for TransformationResult(void *a1, uint64_t a2)
{
  *a1 = *(void *)a2;
  uint64_t v4 = a1 + 1;
  if (a1[4]) {
    sub_4950((uint64_t)(a1 + 1));
  }
  long long v5 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)uint64_t v4 = *(_OWORD *)(a2 + 8);
  *((_OWORD *)v4 + 1) = v5;
  v4[4] = *(void *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for TransformationResult(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 48))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      unint64_t v3 = *(void *)(a1 + 32);
      if (v3 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TransformationResult(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 48) = 0;
    }
    if (a2) {
      *(void *)(result + 32) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TransformationResult()
{
  return &type metadata for TransformationResult;
}

uint64_t sub_30ED8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_48AC(a3);
  sub_16058();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

void *sub_30F34(uint64_t *a1, void *a2)
{
  return a2;
}

uint64_t sub_30F6C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_48AC(a3);
  sub_16058();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_30FC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_48AC((uint64_t *)&unk_BD6D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_31030(uint64_t a1, uint64_t *a2)
{
  sub_48AC(a2);
  sub_16058();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_31084()
{
  return v0;
}

uint64_t sub_3109C()
{
  return v0;
}

double sub_310B4()
{
  uint64_t v1 = *(void *)(v0 - 104);
  *(void *)(v1 + 32) = 0;
  double result = 0.0;
  *(_OWORD *)uint64_t v1 = 0u;
  *(_OWORD *)(v1 + 16) = 0u;
  return result;
}

uint64_t sub_310C8(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  BOOL v3 = v2 == 0;
  return !a2 || v3;
}

void sub_310F0()
{
  sub_222DC();
  BOOL v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = sub_48AC(&qword_BC5D0);
  uint64_t v7 = sub_1CCBC(v6);
  __chkstk_darwin(v7);
  uint64_t v8 = sub_39834();
  sub_5190();
  uint64_t v10 = v9;
  uint64_t v12 = __chkstk_darwin(v11);
  __chkstk_darwin(v12);
  sub_3994C();
  sub_8E130();
  swift_allocObject();
  sub_8E120();
  uint64_t v13 = (uint8_t *)sub_8DFD0();
  swift_release();
  if (v13)
  {
    uint64_t v35 = v5;
    uint64_t v14 = (uint64_t *)v3[3];
    uint64_t v15 = v3[4];
    sub_98C0(v3, (uint64_t)v14);
    sub_49470(v13, v14, v15, v1);
    sub_39674(v1, 1, v8);
    if (!v16)
    {
      uint64_t v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32);
      v22(v0, v1, v8);
      if (qword_BB830 != -1) {
        swift_once();
      }
      uint64_t v23 = sub_8E730();
      sub_50FC(v23, (uint64_t)qword_BFEC8);
      sub_222F4();
      v24();
      unint64_t v25 = sub_8E710();
      os_log_type_t v26 = sub_8EB00();
      if (os_log_type_enabled(v25, v26))
      {
        uint64_t v27 = (uint8_t *)sub_1CBDC();
        uint64_t v36 = sub_1CC0C();
        *(_DWORD *)uint64_t v27 = 136315138;
        sub_390B0((unint64_t *)&qword_BCFE8, (void (*)(uint64_t))&type metadata accessor for RREntity);
        uint64_t v28 = sub_8EE20();
        uint64_t v30 = sub_8758C(v28, v29, &v36);
        sub_E1D0(v30);
        sub_8EBD0();
        swift_bridgeObjectRelease();
        uint64_t v31 = sub_39978();
        v32(v31);
        _os_log_impl(&dword_0, v25, v26, "#NLv4Transformer announcement is present: %s", v27, 0xCu);
        swift_arrayDestroy();
        sub_CC2C();
        sub_CC2C();

        swift_release();
      }
      else
      {
        swift_release();
        uint64_t v33 = sub_39978();
        v34(v33);
      }
      uint64_t v5 = v35;
      v22(v35, v0, v8);
      uint64_t v21 = 0;
      goto LABEL_16;
    }
    swift_release();
    sub_1C9C8(v1, &qword_BC5D0);
    uint64_t v5 = v35;
  }
  if (qword_BB830 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_8E730();
  uint64_t v18 = sub_3978C(v17, (uint64_t)qword_BFEC8);
  os_log_type_t v19 = sub_8EB00();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = (uint8_t *)sub_CCE4();
    *(_WORD *)uint64_t v20 = 0;
    _os_log_impl(&dword_0, v18, v19, "#NLv4Transformer announcement is not present", v20, 2u);
    sub_CC2C();
  }

  uint64_t v21 = 1;
LABEL_16:
  _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(v5, v21, 1, v8);
  sub_2224C();
}

void sub_314EC()
{
  void (*v32)(uint64_t *__return_ptr, uint64_t);
  uint64_t v33;
  uint64_t v34[2];
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44[5];

  sub_222DC();
  uint64_t v39 = v0;
  uint64_t v42 = v3;
  uint64_t v43 = v4;
  uint64_t v6 = v5;
  int v40 = type metadata accessor for TransformerInput(0);
  sub_16058();
  __chkstk_darwin(v7);
  sub_3985C(v8, v34[0]);
  uint64_t v9 = sub_8D9C0();
  sub_5190();
  uint64_t v11 = v10;
  __chkstk_darwin(v12);
  sub_39818();
  __chkstk_darwin(v13);
  uint64_t v38 = (char *)v34 - v14;
  sub_6FC4();
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)v34 - v16;
  if (qword_BB830 != -1) {
    swift_once();
  }
  uint64_t v18 = sub_8E730();
  uint64_t v19 = sub_50FC(v18, (uint64_t)qword_BFEC8);
  uint64_t v20 = *(void (**)(void))(v11 + 16);
  sub_396C4();
  v20();
  uint64_t v37 = v19;
  uint64_t v21 = sub_8E710();
  os_log_type_t v22 = sub_8EB00();
  if (sub_22324(v22))
  {
    uint64_t v23 = sub_1CBDC();
    v34[1] = v2;
    uint64_t v24 = (uint8_t *)v23;
    uint64_t v25 = sub_1CC0C();
    v34[0] = v6;
    v44[0] = v25;
    uint64_t v36 = v11;
    *(_DWORD *)uint64_t v24 = 136315138;
    uint64_t v35 = (void (*)(char *, uint64_t))(v24 + 4);
    uint64_t v26 = (uint64_t)v38;
    ((void (*)(char *, char *, uint64_t))v20)(v38, v17, v9);
    uint64_t v27 = sub_6AC54(v26);
    uint64_t v29 = sub_8758C(v27, v28, v44);
    sub_399BC(v29);
    uint64_t v30 = v36;
    sub_8EBD0();
    swift_bridgeObjectRelease();
    uint64_t v35 = *(void (**)(char *, uint64_t))(v30 + 8);
    sub_1CB7C();
    v31();
    _os_log_impl(&dword_0, v21, v1, "#NLv4Transformer attempting to transform %s into HomeCommunicationNLIntent.", v24, 0xCu);
    swift_arrayDestroy();
    sub_CC2C();
    sub_CC2C();
  }
  else
  {
    uint64_t v35 = *(void (**)(char *, uint64_t))(v11 + 8);
    v35(v17, v9);
  }

  sub_48AC(&qword_BCE20);
  uint64_t v32 = (void (*)(uint64_t *__return_ptr, uint64_t))sub_8E2C0();
  uint64_t v33 = v41;
  sub_396C4();
  v20();
  sub_30ED8(v42, v33 + *(int *)(v40 + 20), &qword_BC410);
  v32(v44, v33);
  swift_release();
  sub_38248(v33);
  sub_30F6C((uint64_t)v44, v43, &qword_BC410);
  sub_2224C();
}

uint64_t sub_31954()
{
  sub_48AC(&qword_BCE20);
  sub_16058();
  sub_1CD04();
  v1();
  swift_release();
  uint64_t v2 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v3 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return _swift_deallocClassInstance(v0, v2, v3);
}

uint64_t sub_319FC()
{
  return type metadata accessor for NLv4Transformer(0);
}

uint64_t type metadata accessor for NLv4Transformer(uint64_t a1)
{
  return sub_14ED0(a1, (uint64_t *)&unk_BD730);
}

void sub_31A24()
{
  sub_31AC0();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_31AC0()
{
  if (!qword_BD740)
  {
    type metadata accessor for TransformerInput(255);
    sub_9950(&qword_BC410);
    unint64_t v0 = sub_8E2D0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_BD740);
    }
  }
}

uint64_t type metadata accessor for TransformerInput(uint64_t a1)
{
  return sub_14ED0(a1, qword_BD828);
}

uint64_t *sub_31B4C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_8D9C0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = *(uint64_t *)((char *)a2 + v8 + 24);
    if (v11)
    {
      uint64_t v12 = *((void *)v10 + 4);
      *((void *)v9 + 3) = v11;
      *((void *)v9 + 4) = v12;
      (**(void (***)(void))(v11 - 8))();
    }
    else
    {
      long long v14 = *((_OWORD *)v10 + 1);
      *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
      *((_OWORD *)v9 + 1) = v14;
      *((void *)v9 + 4) = *((void *)v10 + 4);
    }
  }
  return a1;
}

uint64_t sub_31C64(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_8D9C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t result = a1 + *(int *)(a2 + 20);
  if (*(void *)(result + 24)) {
    return sub_4950(result);
  }
  return result;
}

uint64_t sub_31CD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_8D9C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(a2 + v7 + 24);
  if (v10)
  {
    uint64_t v11 = *(void *)(v9 + 32);
    *(void *)(v8 + 24) = v10;
    *(void *)(v8 + 32) = v11;
    (**(void (***)(void))(v10 - 8))();
  }
  else
  {
    long long v12 = *(_OWORD *)(v9 + 16);
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
    *(_OWORD *)(v8 + 16) = v12;
    *(void *)(v8 + 32) = *(void *)(v9 + 32);
  }
  return a1;
}

uint64_t sub_31D9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_8D9C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (long long *)(a2 + v7);
  uint64_t v10 = *((void *)v9 + 3);
  if (!*(void *)(a1 + v7 + 24))
  {
    if (v10)
    {
      *(void *)(v8 + 24) = v10;
      *(void *)(v8 + 32) = *((void *)v9 + 4);
      (**(void (***)(uint64_t, long long *))(v10 - 8))(v8, v9);
      return a1;
    }
LABEL_7:
    long long v11 = *v9;
    long long v12 = v9[1];
    *(void *)(v8 + 32) = *((void *)v9 + 4);
    *(_OWORD *)uint64_t v8 = v11;
    *(_OWORD *)(v8 + 16) = v12;
    return a1;
  }
  if (!v10)
  {
    sub_4950(v8);
    goto LABEL_7;
  }
  sub_10D40((uint64_t *)v8, (uint64_t *)v9);
  return a1;
}

uint64_t sub_31E94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_8D9C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  long long v10 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v10;
  *(void *)(v8 + 32) = *(void *)(v9 + 32);
  return a1;
}

uint64_t sub_31F20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_8D9C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  if (*(void *)(a1 + v7 + 24)) {
    sub_4950(a1 + v7);
  }
  long long v9 = *(_OWORD *)(a2 + v7 + 16);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)(a2 + v7);
  *(_OWORD *)(v8 + 16) = v9;
  *(void *)(v8 + 32) = *(void *)(a2 + v7 + 32);
  return a1;
}

uint64_t sub_31FBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_31FD0);
}

uint64_t sub_31FD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_8D9C0();
  sub_AA90();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0(a1, a2, v6);
  }
  else
  {
    unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 20) + 24);
    if (v9 >= 0xFFFFFFFF) {
      LODWORD(v9) = -1;
    }
    int v10 = v9 - 1;
    if (v10 < 0) {
      int v10 = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_3206C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_32080);
}

void sub_32080(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_8D9C0();
  sub_AA90();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(a1, a2, a2, v8);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 24) = a2;
  }
}

uint64_t sub_3210C()
{
  uint64_t result = sub_8D9C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_321A0@<X0>(uint64_t a1@<X0>, const char *a2@<X1>, uint8_t *a3@<X2>, uint64_t a4@<X8>)
{
  void (*v24)(unsigned char *__return_ptr, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  BOOL v34;
  uint64_t v35;
  uint8_t *v36;
  uint64_t v37;
  unint64_t v38;
  os_log_t v39;
  void *v40;
  uint64_t v41;
  NSObject *v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  void *v46;
  NSObject *v47;
  NSObject *v48;
  os_log_type_t v49;
  uint8_t *v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(long long *__return_ptr, unsigned char *);
  unsigned int v57;
  uint64_t v58;
  void (*v59)(unsigned char *__return_ptr, long long *);
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t (*v63)(uint64_t);
  uint8_t *v64;
  uint64_t v65;
  NSObject *v66;
  os_log_type_t v67;
  BOOL v68;
  uint8_t *v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  os_log_type_t v73;
  os_log_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  char v80;
  NSObject *v81;
  NSObject *v82;
  char v83;
  char v84;
  char v85;
  char v86;
  NSObject *v87;
  os_log_type_t v88;
  int v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  void (*v100)(void);
  objc_class *v101;
  objc_class *v102;
  objc_class *v103;
  objc_class *v104;
  objc_class *v105;
  objc_class *v106;
  objc_class *v107;
  objc_class *v108;
  uint64_t v109;
  char *v110;
  char *v111;
  uint8_t **v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint8_t *v116;
  char v117;
  unint64_t v118;
  unint64_t v119;
  unint64_t v120;
  char *v121;
  char *v122;
  char *v123;
  unint64_t v124;
  char *v125;
  unint64_t v126;
  BOOL v127;
  int64_t v128;
  char v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char v133;
  int v134;
  unint64_t v135;
  uint64_t v136;
  uint64_t v137;
  NSObject *v138;
  char v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t *v143;
  uint64_t v144;
  long long v145;
  long long v146;
  const char *v147;
  unint64_t v148;
  const char *v149;
  unint64_t v150;
  const char *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  unint64_t v155;
  char *v156;
  unsigned int v157;
  os_log_t v158;
  uint64_t v159;
  uint8_t *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  char *v165;
  char *v166;
  unint64_t v167;
  uint64_t v168;
  uint64_t *v169;
  const char *v170;
  uint8_t *v171;
  unsigned char v172[200];
  NSObject *v173;
  char v174;
  uint64_t v175;
  unsigned __int8 v176;
  long long v177;
  long long v178;
  uint64_t v179;
  uint64_t v180;

  uint64_t v171 = a3;
  uint64_t v8 = sub_48AC(&qword_BC5D0);
  uint64_t v9 = sub_1CCBC(v8);
  uint64_t v10 = __chkstk_darwin(v9);
  long long v12 = (char *)&v147 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  long long v14 = (char *)&v147 - v13;
  uint64_t v15 = sub_8D9C0();
  sub_5190();
  uint64_t v17 = v16;
  __chkstk_darwin(v18);
  sub_22300();
  sub_222F4();
  v19();
  sub_33458((uint64_t)&v177);
  if (*((void *)&v178 + 1))
  {
    uint64_t v20 = sub_398A8();
    v21(v20);
    sub_C928(&v177, (uint64_t)v172);
    return sub_C928((long long *)v172, a4);
  }
  uint64_t v168 = a1;
  uint64_t v169 = (uint64_t *)a4;
  uint64_t v170 = a2;
  uint64_t v166 = v14;
  uint64_t v167 = (unint64_t)v12;
  sub_1C9C8((uint64_t)&v177, &qword_BC410);
  if (qword_BB880 != -1) {
    swift_once();
  }
  uint64_t v23 = sub_48AC(&qword_BD868);
  uint64_t v24 = (void (*)(unsigned char *__return_ptr, uint64_t))sub_39878(v23, (uint64_t)qword_BFF68);
  uint64_t v25 = v180;
  v24(v172, v4);
  if (v25)
  {
    swift_release();
    uint64_t v26 = sub_398A8();
    return v27(v26);
  }
  int v180 = 0;
  uint64_t v162 = v4;
  swift_release();
  uint64_t v29 = *(void *)v172;
  unint64_t v28 = *(void *)&v172[8];
  if (qword_BB830 != -1) {
    swift_once();
  }
  uint64_t v30 = sub_8E730();
  uint64_t v31 = sub_50FC(v30, (uint64_t)qword_BFEC8);
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  uint64_t v165 = (char *)v31;
  uint64_t v32 = sub_8E710();
  uint64_t v33 = sub_8EB00();
  uint64_t v34 = os_log_type_enabled(v32, v33);
  uint64_t v163 = v28;
  uint64_t v164 = v17;
  uint64_t v161 = v15;
  if (v34)
  {
    uint64_t v35 = v29;
    uint64_t v36 = (uint8_t *)sub_1CBDC();
    *(void *)&uint64_t v177 = swift_slowAlloc();
    *(_DWORD *)uint64_t v36 = 136315138;
    uint64_t v160 = v36 + 4;
    *(void *)uint64_t v172 = v35;
    *(void *)&v172[8] = v28;
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v37 = sub_8E8E0();
    *(void *)uint64_t v172 = sub_8758C(v37, v38, (uint64_t *)&v177);
    sub_8EBD0();
    swift_bridgeObjectRelease_n();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v32, v33, "#NLv4Transformer userDialogActParse %s into homeCommunicationNLIntent.", v36, 0xCu);
    swift_arrayDestroy();
    sub_CC2C();
    uint64_t v29 = v35;
    sub_CC2C();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release_n();
  }
  sub_30ED8((uint64_t)v170, (uint64_t)&v177, &qword_BCE28);
  uint64_t v39 = (os_log_t)_swiftEmptyArrayStorage;
  if (*((void *)&v178 + 1))
  {
    sub_C928(&v177, (uint64_t)v172);
    swift_retain();
    int v40 = sub_3354C();
    if (v40)
    {
      uint64_t v41 = (uint64_t)v40;
      uint64_t v159 = v29;
      uint64_t v42 = v40;
      uint64_t v43 = sub_8E710();
      uint64_t v44 = sub_8EB00();
      if (os_log_type_enabled(v43, v44))
      {
        uint64_t v45 = (uint8_t *)sub_1CBDC();
        uint64_t v46 = (void *)swift_slowAlloc();
        uint64_t v171 = v45;
        *(_DWORD *)uint64_t v45 = 138412290;
        *(void *)&uint64_t v177 = v42;
        BOOL v47 = v42;
        sub_8EBD0();
        *uint64_t v46 = v41;

        _os_log_impl(&dword_0, v43, v44, "#NLv4Transformer referenceResolution found a position reference %@", v171, 0xCu);
        sub_48AC(&qword_BD020);
        swift_arrayDestroy();
        sub_CC2C();
        sub_CC2C();
      }
      else
      {

        uint64_t v43 = v42;
      }

      uint64_t v179 = 0;
      uint64_t v177 = 0u;
      v178 = 0u;
      swift_bridgeObjectRelease();
      swift_release_n();
      uint64_t v60 = v169;
      v169[3] = (uint64_t)&type metadata for HomeCommunicationNLv4Intent;
      v60[4] = sub_38FCC();
      uint64_t v61 = swift_allocObject();
      *uint64_t v60 = v61;
      *(void *)&uint64_t v146 = _swiftEmptyArrayStorage;
      *((void *)&v146 + 1) = _swiftEmptyArrayStorage;
      *(void *)&int64_t v145 = _swiftEmptyArrayStorage;
      *((void *)&v145 + 1) = _swiftEmptyArrayStorage;
      sub_23BE4(0, (uint64_t)&v177, 7, 0, 31, 0, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)_swiftEmptyArrayStorage, v61 + 16, v145, v146, 0, 0, 1, 0, 1, 0, (__n128)(unint64_t)_swiftEmptyArrayStorage, 0,
        3,
        v41);
      sub_4950((uint64_t)v172);
      goto LABEL_30;
    }
    sub_4950((uint64_t)v172);
  }
  else
  {
    swift_retain();
    sub_1C9C8((uint64_t)&v177, &qword_BCE28);
  }
  swift_retain_n();
  os_log_type_t v48 = sub_8E710();
  uint64_t v49 = sub_8EB00();
  if (os_log_type_enabled(v48, v49))
  {
    uint64_t v50 = (uint8_t *)sub_1CBDC();
    *(void *)uint64_t v172 = swift_slowAlloc();
    *(_DWORD *)uint64_t v50 = 136315138;
    uint64_t v160 = v50 + 4;
    *(void *)&uint64_t v177 = v29;
    sub_8E1B0();
    swift_retain();
    unint64_t v51 = sub_8E8E0();
    *(void *)&uint64_t v177 = sub_8758C(v51, v52, (uint64_t *)v172);
    sub_8EBD0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v48, v49, "#NLv4Transformer homeCommUsoTask %s into homeCommunicationNLIntent.", v50, 0xCu);
    swift_arrayDestroy();
    sub_CC2C();
    sub_CC2C();
  }
  else
  {

    swift_release_n();
  }
  uint64_t v53 = v180;
  uint64_t v54 = v164;
  if (qword_BB888 != -1) {
    swift_once();
  }
  uint64_t v55 = sub_48AC(&qword_BD870);
  uint64_t v56 = (void (*)(long long *__return_ptr, unsigned char *))sub_39878(v55, (uint64_t)qword_BFF80);
  *(void *)uint64_t v172 = v29;
  v56(&v177, v172);
  if (v53)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v162, v161);
    return swift_release();
  }
  swift_release();
  char v57 = v177;
  if (qword_BB890 != -1) {
    swift_once();
  }
  os_log_type_t v58 = sub_48AC(&qword_BD878);
  Swift::String v59 = (void (*)(unsigned char *__return_ptr, long long *))sub_39878(v58, (uint64_t)qword_BFF98);
  *(void *)&uint64_t v177 = v29;
  v59(v172, &v177);
  int v180 = 0;
  swift_release();
  uint64_t v65 = *(void *)v172;
  Swift::String v64 = *(uint8_t **)&v172[8];
  sub_38F40(*(uint64_t *)v172);
  sub_38F40(v65);
  uint64_t v66 = sub_8E710();
  uint64_t v67 = sub_8EB00();
  uint64_t v68 = os_log_type_enabled(v66, v67);
  uint64_t v159 = v29;
  uint64_t v160 = v64;
  uint64_t v157 = v57;
  if (v68)
  {
    uint64_t v69 = (uint8_t *)sub_1CBDC();
    uint64_t v156 = (char *)swift_slowAlloc();
    *(void *)uint64_t v172 = v156;
    *(_DWORD *)uint64_t v69 = 136315138;
    uint64_t v158 = v66;
    if (v65 == 1)
    {
      uint64_t v70 = 0;
    }
    else
    {
      swift_retain();
      uint64_t v70 = v65;
    }
    *(void *)&uint64_t v177 = v70;
    sub_48AC(&qword_BD890);
    os_log_type_t v71 = sub_8E8E0();
    *(void *)&uint64_t v177 = sub_8758C(v71, v72, (uint64_t *)v172);
    sub_8EBD0();
    swift_bridgeObjectRelease();
    sub_38F88(v65);
    sub_38F88(v65);
    uint64_t v73 = v67;
    uint64_t v74 = v158;
    _os_log_impl(&dword_0, v158, v73, "#NLv4Transformer sendTask %s", v69, 0xCu);
    swift_arrayDestroy();
    sub_CC2C();
    sub_CC2C();

    char v57 = v157;
  }
  else
  {
    sub_38F88(v65);
    sub_38F88(v65);
  }
  uint64_t v75 = 0;
  uint64_t v76 = 0;
  v175 = 0;
  uint64_t v176 = 1;
  uint64_t v173 = 0;
  uint64_t v174 = 1;
  if (v57 <= 1)
  {
    if (v65 == 1)
    {
      uint64_t v77 = 0;
    }
    else
    {
      swift_retain();
      uint64_t v77 = v65;
    }
    uint64_t v78 = sub_338D8(v77);
    uint64_t v80 = v79;
    uint64_t v82 = v81;
    Swift::String v84 = v83;
    swift_release();
    v175 = v78;
    Swift::String v85 = v80 & 1;
    uint64_t v176 = v80 & 1;
    uint64_t v158 = v82;
    uint64_t v173 = v82;
    Swift::String v86 = v84 & 1;
    uint64_t v174 = v84 & 1;
    Swift::String v87 = sub_8E710();
    Swift::String v88 = sub_8EB00();
    Swift::String v89 = v88;
    if (os_log_type_enabled(v87, v88))
    {
      unint64_t v90 = swift_slowAlloc();
      uint64_t v165 = (char *)swift_slowAlloc();
      *(void *)&uint64_t v177 = v165;
      *(_DWORD *)unint64_t v90 = 136315394;
      LODWORD(v156) = v89;
      *(void *)uint64_t v172 = v78;
      v172[8] = v85;
      sub_48AC(&qword_BD030);
      uint64_t v91 = sub_8E8E0();
      *(void *)uint64_t v172 = sub_8758C(v91, v92, (uint64_t *)&v177);
      uint64_t v39 = (os_log_t)_swiftEmptyArrayStorage;
      sub_8EBD0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v90 + 12) = 2080;
      *(void *)uint64_t v172 = v158;
      v172[8] = v86;
      uint64_t v93 = sub_8E8E0();
      *(void *)uint64_t v172 = sub_8758C(v93, v94, (uint64_t *)&v177);
      sub_8EBD0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v87, (os_log_type_t)v156, "#NLv4Transformer startTimeMs=%s and endTimeMs=%s", (uint8_t *)v90, 0x16u);
      swift_arrayDestroy();
      sub_CC2C();
      sub_CC2C();
    }

    unint64_t v95 = (uint64_t)v166;
    sub_30ED8((uint64_t)v170, (uint64_t)&v177, &qword_BCE28);
    unint64_t v96 = v167;
    if (*((void *)&v178 + 1))
    {
      sub_C928(&v177, (uint64_t)v172);
      sub_310F0();
      sub_30ED8(v95, v96, &qword_BC5D0);
      uint64_t v97 = sub_8E7F0();
      if (_s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0(v96, 1, v97) == 1)
      {
        sub_1C9C8(v95, &qword_BC5D0);
        sub_4950((uint64_t)v172);
        sub_1C9C8(v96, &qword_BC5D0);
        uint64_t v75 = 0;
        uint64_t v76 = 0;
      }
      else
      {
        uint64_t v75 = sub_8E7E0();
        uint64_t v99 = v98;
        sub_1C9C8(v95, &qword_BC5D0);
        sub_4950((uint64_t)v172);
        sub_1CD04();
        v100();
        uint64_t v76 = v99;
      }
    }
    else
    {
      sub_1C9C8((uint64_t)&v177, &qword_BCE28);
      uint64_t v75 = 0;
      uint64_t v76 = 0;
    }
  }
  uint64_t v153 = v76;
  int v154 = v75;
  if (v65 != 1) {
    swift_retain();
  }
  sub_33C80();
  uint64_t v102 = v101;
  uint64_t v104 = v103;
  uint64_t v106 = v105;
  uint64_t v108 = v107;
  swift_release();
  if (v104)
  {
    sub_48AC(&qword_BD888);
    uint64_t v39 = (os_log_t)swift_allocObject();
    *(_OWORD *)&v39[2].Class isa = xmmword_8FA10;
    v39[4].Class isa = v102;
    v39[5].Class isa = v104;
    v39[6].Class isa = v106;
    v39[7].Class isa = v108;
    uint64_t v109 = 1;
  }
  else
  {
    uint64_t v109 = _swiftEmptyArrayStorage[2];
    uint64_t v110 = (char *)_swiftEmptyArrayStorage;
    uint64_t v111 = (char *)_swiftEmptyArrayStorage;
    uint64_t v156 = (char *)_swiftEmptyArrayStorage;
    if (!v109) {
      goto LABEL_92;
    }
  }
  uint64_t v152 = v65;
  swift_bridgeObjectRetain();
  uint64_t v158 = v39;
  uint64_t v112 = (uint8_t **)&v39[7];
  uint64_t v110 = (char *)_swiftEmptyArrayStorage;
  uint64_t v170 = "homeAutomationAccessoryName";
  uint64_t v171 = (uint8_t *)0x8000000000095620;
  uint64_t v165 = " No tasks found in input";
  uint64_t v166 = (char *)_swiftEmptyArrayStorage;
  uint64_t v167 = 0x8000000000097390;
  uint64_t v151 = "homeAutomationServiceName";
  uint64_t v155 = 0x80000000000973B0;
  uint64_t v156 = (char *)_swiftEmptyArrayStorage;
  unint64_t v149 = "homeAutomationServiceGroup";
  unint64_t v150 = 0x80000000000973D0;
  v147 = "HomeCommunication#HomeAppLaunch";
  uint64_t v148 = 0x8000000000096490;
  do
  {
    uint64_t v114 = (uint64_t)*(v112 - 3);
    uint64_t v113 = (uint64_t)*(v112 - 2);
    uint64_t v115 = (uint64_t)*(v112 - 1);
    long long v116 = *v112;
    sub_39968();
    if (v117 && v116 == v171
      || (sub_3969C() & 1) != 0
      || v115 == 0xD000000000000019 && v116 == (uint8_t *)v167
      || (sub_39A3C() & 1) != 0
      || v115 == 0xD00000000000001ALL && v116 == (uint8_t *)v155
      || (sub_39A3C() & 1) != 0)
    {
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v110 = sub_768FC(0, *((void *)v110 + 2) + 1, 1, (uint64_t)v110);
      }
      uint64_t v119 = *((void *)v110 + 2);
      unsigned int v118 = *((void *)v110 + 3);
      uint64_t v120 = v119 + 1;
      if (v119 >= v118 >> 1)
      {
        uint64_t v127 = sub_399D0(v118);
        uint64_t v121 = sub_768FC((char *)v127, v128, v129, (uint64_t)v110);
        uint64_t v110 = v121;
      }
      else
      {
        uint64_t v121 = v110;
      }
LABEL_68:
      *((void *)v121 + 2) = v120;
      uint64_t v122 = &v121[16 * v119];
      *((void *)v122 + 4) = v114;
      *((void *)v122 + 5) = v113;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_69;
    }
    sub_39968();
    if (v117 && v116 == (uint8_t *)v150 || (sub_3969C() & 1) != 0)
    {
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      uint64_t v123 = v166;
      if (swift_isUniquelyReferenced_nonNull_native()) {
        uint64_t v121 = v123;
      }
      else {
        uint64_t v121 = sub_398F4();
      }
      uint64_t v119 = *((void *)v121 + 2);
      uint64_t v124 = *((void *)v121 + 3);
      uint64_t v120 = v119 + 1;
      if (v119 >= v124 >> 1) {
        uint64_t v121 = sub_399E4((uint64_t)v121, v124);
      }
      uint64_t v166 = v121;
      goto LABEL_68;
    }
    sub_39968();
    if (v117 && v116 == (uint8_t *)v148 || (sub_3969C() & 1) != 0)
    {
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      uint64_t v125 = v156;
      if (swift_isUniquelyReferenced_nonNull_native()) {
        uint64_t v121 = v125;
      }
      else {
        uint64_t v121 = sub_398F4();
      }
      uint64_t v119 = *((void *)v121 + 2);
      uint64_t v126 = *((void *)v121 + 3);
      uint64_t v120 = v119 + 1;
      if (v119 >= v126 >> 1) {
        uint64_t v121 = sub_399E4((uint64_t)v121, v126);
      }
      uint64_t v156 = v121;
      goto LABEL_68;
    }
LABEL_69:
    v112 += 4;
    --v109;
  }
  while (v109);
  uint64_t v39 = v158;
  swift_bridgeObjectRelease();
  uint64_t v65 = v152;
  uint64_t v111 = v166;
LABEL_92:
  id v130 = type metadata accessor for TransformerInput(0);
  sub_30ED8(v168 + *(int *)(v130 + 20), (uint64_t)v172, &qword_BC410);
  uint64_t v131 = *(void *)&v172[24];
  uint64_t v166 = v111;
  if (*(void *)&v172[24])
  {
    id v132 = *(void *)&v172[32];
    sub_98C0(v172, *(uint64_t *)&v172[24]);
    uint64_t v133 = (*(uint64_t (**)(uint64_t, uint64_t))(v132 + 64))(v131, v132);
    sub_4950((uint64_t)v172);
    if (v133)
    {
      LODWORD(v168) = 1;
      goto LABEL_97;
    }
  }
  else
  {
    sub_1C9C8((uint64_t)v172, &qword_BC410);
  }
  sub_357FC();
  LODWORD(v168) = v134;
LABEL_97:
  uint64_t v158 = v39;
  uint64_t v135 = 0;
  uint64_t v179 = 0;
  uint64_t v177 = 0u;
  v178 = 0u;
  if (v65 != 1)
  {
    swift_retain();
    uint64_t v135 = v65;
  }
  LODWORD(v171) = sub_363E0(v135);
  swift_release();
  swift_beginAccess();
  uint64_t v136 = v175;
  LODWORD(v170) = v176;
  swift_beginAccess();
  uint64_t v137 = 0;
  v138 = v173;
  uint64_t v139 = v174;
  if (v65 != 1)
  {
    swift_retain();
    uint64_t v137 = v65;
  }
  uint64_t v140 = sub_36740(v137);
  uint64_t v142 = v141;
  swift_release();
  v172[0] = v157;
  sub_30F6C((uint64_t)&v177, (uint64_t)&v172[8], &qword_BD028);
  v172[48] = 7;
  v172[49] = v171 & 1;
  v172[50] = 31;
  v172[51] = v168 & 1;
  *(void *)&v172[56] = _swiftEmptyArrayStorage;
  *(void *)&v172[64] = _swiftEmptyArrayStorage;
  *(void *)&v172[72] = _swiftEmptyArrayStorage;
  *(void *)&v172[80] = v110;
  *(void *)&v172[88] = v166;
  *(void *)&v172[96] = v156;
  *(void *)&v172[104] = 0;
  *(void *)&v172[112] = v136;
  v172[120] = (_BYTE)v170;
  *(void *)&v172[128] = v138;
  v172[136] = v139;
  *(void *)&v172[144] = v154;
  *(void *)&v172[152] = v153;
  *(void *)&v172[160] = v158;
  *(void *)&v172[168] = v140;
  *(void *)&v172[176] = v142;
  v172[184] = 3;
  *(void *)&v172[192] = 0;
  BOOL v143 = v169;
  v169[3] = (uint64_t)&type metadata for HomeCommunicationNLv4Intent;
  v143[4] = sub_38FCC();
  uint64_t v144 = swift_allocObject();
  *BOOL v143 = v144;
  memcpy((void *)(v144 + 16), v172, 0xC8uLL);
  sub_38F88(v65);
  swift_bridgeObjectRelease();
  swift_release_n();
LABEL_30:
  sub_1CD04();
  return v63(v62);
}

double sub_33458@<D0>(uint64_t a1@<X8>)
{
  if (sub_8D960())
  {
    *(void *)(a1 + 24) = &type metadata for HomeCommunicationNLv4Intent;
    *(void *)(a1 + 32) = sub_38FCC();
    uint64_t v2 = swift_allocObject();
    uint64_t v3 = v2 + 16;
    *(void *)a1 = v2;
    char v4 = 0;
    return sub_23B54(v4, v3);
  }
  if (sub_8D970())
  {
    *(void *)(a1 + 24) = &type metadata for HomeCommunicationNLv4Intent;
    *(void *)(a1 + 32) = sub_38FCC();
    uint64_t v5 = swift_allocObject();
    uint64_t v3 = v5 + 16;
    *(void *)a1 = v5;
    char v4 = 1;
    return sub_23B54(v4, v3);
  }
  if (sub_8D980())
  {
    *(void *)(a1 + 24) = &type metadata for HomeCommunicationNLv4Intent;
    *(void *)(a1 + 32) = sub_38FCC();
    uint64_t v6 = swift_allocObject();
    uint64_t v3 = v6 + 16;
    *(void *)a1 = v6;
    char v4 = 2;
    return sub_23B54(v4, v3);
  }
  *(void *)(a1 + 32) = 0;
  double result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

void *sub_3354C()
{
  if (qword_BB830 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_8E730();
  sub_50FC(v0, (uint64_t)qword_BFEC8);
  unint64_t v1 = sub_8E710();
  os_log_type_t v2 = sub_8EB00();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_0, v1, v2, "#ReferenceResolution findPositionReference called", v3, 2u);
    swift_slowDealloc();
  }

  sub_8DFC0();
  if (v16[3])
  {
    sub_8E010();
    if (swift_dynamicCast())
    {
      swift_retain();
      sub_8DB40();
      swift_release();
      if (v16[0])
      {
        swift_retain();
        sub_8DC40();
        swift_release();
        sub_368B8();
        uint64_t v5 = v4;
        swift_release();
        if (v5)
        {
          id v6 = v5;
          uint64_t v7 = sub_8E710();
          os_log_type_t v8 = sub_8EB00();
          if (os_log_type_enabled(v7, v8))
          {
            uint64_t v9 = (uint8_t *)swift_slowAlloc();
            uint64_t v15 = (void *)swift_slowAlloc();
            *(_DWORD *)uint64_t v9 = 138412290;
            v16[0] = v6;
            id v10 = v6;
            sub_8EBD0();
            *uint64_t v15 = v5;

            _os_log_impl(&dword_0, v7, v8, "#ReferenceResolution SRR selected homeName: %@ as the resolution result", v9, 0xCu);
            sub_48AC(&qword_BD020);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
            swift_release();
            swift_release();
          }
          else
          {

            swift_release();
            swift_release();
          }
          return v5;
        }
        swift_release();
      }
      swift_release();
    }
  }
  else
  {
    sub_1C9C8((uint64_t)v16, &qword_BC5D8);
  }
  uint64_t v11 = sub_8E710();
  os_log_type_t v12 = sub_8EB00();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v13 = 0;
    _os_log_impl(&dword_0, v11, v12, "#ReferenceResolution returned nil", v13, 2u);
    swift_slowDealloc();
  }

  return 0;
}

uint64_t sub_338D8(uint64_t a1)
{
  uint64_t v2 = sub_48AC(&qword_BD898);
  uint64_t v3 = sub_1CCBC(v2);
  __chkstk_darwin(v3);
  sub_AAA8();
  uint64_t v6 = v5 - v4;
  uint64_t v7 = sub_48AC(&qword_BD8A0);
  uint64_t v8 = sub_1CCBC(v7);
  __chkstk_darwin(v8);
  sub_AAA8();
  uint64_t v11 = v10 - v9;
  uint64_t v12 = sub_8DD70();
  sub_5190();
  uint64_t v14 = v13;
  __chkstk_darwin(v15);
  sub_AAA8();
  uint64_t v18 = v17 - v16;
  if (!a1 || (uint64_t v19 = sub_8DC30()) == 0)
  {
    if (qword_BB830 != -1) {
      swift_once();
    }
    uint64_t v21 = sub_8E730();
    os_log_type_t v22 = (void *)sub_3978C(v21, (uint64_t)qword_BFEC8);
    os_log_type_t v23 = sub_8EB00();
    if (!sub_1CAE4(v23)) {
      goto LABEL_17;
    }
    uint64_t v24 = (_WORD *)sub_CCE4();
    sub_1CC78(v24);
    uint64_t v27 = "#NLv4Transformer Cannot get content timestamp since alignments were not found on usoCommonAnnouncement";
    goto LABEL_16;
  }
  sub_76630(v19, v6);
  swift_bridgeObjectRelease();
  uint64_t v20 = sub_8DEE0();
  sub_39674(v6, 1, v20);
  if (v30)
  {
    sub_1C9C8(v6, &qword_BD898);
    _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(v11, 1, 1, v12);
LABEL_12:
    sub_1C9C8(v11, &qword_BD8A0);
    if (qword_BB830 != -1) {
      swift_once();
    }
    uint64_t v31 = sub_8E730();
    os_log_type_t v22 = (void *)sub_3978C(v31, (uint64_t)qword_BFEC8);
    os_log_type_t v32 = sub_8EB10();
    if (!sub_1CAE4(v32)) {
      goto LABEL_17;
    }
    uint64_t v33 = (_WORD *)sub_CCE4();
    sub_1CC78(v33);
    uint64_t v27 = "#NLv4Transformer Cannot get content timestamp since spans are  missing";
LABEL_16:
    sub_1CA90(&dword_0, v25, v26, v27);
    sub_CC2C();
LABEL_17:

    return 0;
  }
  uint64_t v28 = sub_8DED0();
  sub_1CD04();
  v29();
  sub_76648(v28, v11);
  swift_bridgeObjectRelease();
  sub_39674(v11, 1, v12);
  if (v30) {
    goto LABEL_12;
  }
  sub_7074();
  v36();
  unsigned int v37 = sub_8DD60();
  if ((v37 & 0x80000000) == 0)
  {
    unsigned int v38 = v37;
    if ((sub_8DD50() & 0x80000000) == 0)
    {
      uint64_t v34 = v38;
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v18, v12);
      return v34;
    }
  }
  uint64_t result = sub_8ED20();
  __break(1u);
  return result;
}

void sub_33C80()
{
  sub_222DC();
  uint64_t v233 = v1;
  uint64_t v2 = sub_48AC(&qword_BD8D8);
  uint64_t v3 = sub_1CCBC(v2);
  __chkstk_darwin(v3);
  sub_1CA70();
  sub_1CBCC(v4);
  uint64_t v5 = sub_8CAC0();
  sub_5190();
  uint64_t v223 = v6;
  __chkstk_darwin(v7);
  sub_6FF0();
  sub_1CCC8();
  __chkstk_darwin(v8);
  sub_22520();
  sub_1CBCC(v9);
  uint64_t v10 = sub_8DF30();
  sub_5190();
  uint64_t v259 = v11;
  __chkstk_darwin(v12);
  sub_1CA70();
  uint64_t v241 = v13;
  uint64_t v260 = sub_48AC(&qword_BBFB8);
  sub_16058();
  __chkstk_darwin(v14);
  sub_6FF0();
  sub_1CCC8();
  __chkstk_darwin(v15);
  sub_6FE4();
  sub_1CCC8();
  __chkstk_darwin(v16);
  sub_3994C();
  uint64_t v17 = sub_48AC(&qword_BBFC0);
  uint64_t v18 = sub_1CCBC(v17);
  __chkstk_darwin(v18);
  sub_6FF0();
  sub_1CCC8();
  __chkstk_darwin(v19);
  sub_6FE4();
  sub_1CCC8();
  __chkstk_darwin(v20);
  sub_6FE4();
  sub_1CCC8();
  uint64_t v22 = __chkstk_darwin(v21);
  uint64_t v24 = ((char *)&v207 - v23);
  __chkstk_darwin(v22);
  sub_6FE4();
  uint64_t v251 = v25;
  sub_6FC4();
  __chkstk_darwin(v26);
  sub_6FE4();
  uint64_t v250 = v27;
  sub_6FC4();
  __chkstk_darwin(v28);
  sub_6FE4();
  sub_1CCC8();
  __chkstk_darwin(v29);
  sub_6FE4();
  uint64_t v261 = v30;
  sub_6FC4();
  __chkstk_darwin(v31);
  sub_22520();
  sub_1CBCC(v32);
  v262 = (void *)sub_8DD40();
  sub_5190();
  uint64_t v232 = v33;
  __chkstk_darwin(v34);
  sub_6FF0();
  sub_1CCC8();
  __chkstk_darwin(v35);
  sub_6FE4();
  sub_1CCC8();
  __chkstk_darwin(v36);
  sub_6FE4();
  sub_1CCC8();
  __chkstk_darwin(v37);
  sub_6FE4();
  uint64_t v249 = v38;
  sub_6FC4();
  __chkstk_darwin(v39);
  sub_6FE4();
  sub_1CCC8();
  __chkstk_darwin(v40);
  uint64_t v254 = (char *)&v207 - v41;
  sub_6FC4();
  __chkstk_darwin(v42);
  sub_22520();
  uint64_t v227 = v43;
  uint64_t v44 = sub_48AC(&qword_BD8E0);
  uint64_t v45 = sub_1CCBC(v44);
  __chkstk_darwin(v45);
  sub_6FF0();
  sub_1CCC8();
  __chkstk_darwin(v46);
  sub_22520();
  os_log_type_t v48 = v47;
  uint64_t v49 = qword_91FF8 + 8;
  if ((sub_501F0(0) & 1) == 0) {
    goto LABEL_13;
  }
  uint64_t v226 = v0;
  uint64_t v0 = v5;
  sub_397D0();
  if (v107) {
    goto LABEL_4;
  }
  while (1)
  {
    swift_once();
LABEL_4:
    uint64_t v50 = sub_8E730();
    sub_50FC(v50, (uint64_t)qword_BFEC8);
    unint64_t v51 = sub_8E710();
    os_log_type_t v52 = sub_8EB00();
    if (os_log_type_enabled(v51, v52))
    {
      uint64_t v53 = (uint8_t *)sub_CCE4();
      *(_WORD *)uint64_t v53 = 0;
      _os_log_impl(&dword_0, v51, v52, "#NLv4Transformer Checking UsoEntitySpans", v53, 2u);
      sub_CC2C();
    }

    if (v233)
    {
      uint64_t v54 = sub_88910();
      uint64_t v217 = v57;
      if (v55)
      {
        uint64_t v58 = v54;
        unint64_t v59 = v55;
        unint64_t v60 = v56;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        unint64_t v61 = v60;
        unint64_t v62 = sub_8E710();
        os_log_type_t v63 = sub_8EB00();
        if (os_log_type_enabled(v62, v63))
        {
          uint64_t v64 = swift_slowAlloc();
          v264[0] = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v64 = 136315394;
          swift_bridgeObjectRetain();
          uint64_t v263 = sub_8758C(v58, v59, (uint64_t *)v264);
          sub_8EBD0();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v64 + 12) = 2080;
          swift_bridgeObjectRetain();
          uint64_t v263 = sub_8758C(v217, v61, (uint64_t *)v264);
          sub_8EBD0();
          sub_398DC();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_0, v62, v63, "#NLv4Transformer selected home entity using UsoEntitySpan - name : %s, type : %s.", (uint8_t *)v64, 0x16u);
          swift_arrayDestroy();
          sub_CC2C();
          sub_CC2C();
        }
        else
        {

          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
        }
        goto LABEL_35;
      }
    }
    uint64_t v65 = (void *)sub_8E710();
    os_log_type_t v66 = sub_8EB00();
    if (sub_1CAE4(v66))
    {
      uint64_t v67 = (_WORD *)sub_CCE4();
      sub_1CC78(v67);
      sub_1CA90(&dword_0, v68, v69, "NLv4Transformer did not find HomeEntity using UsoEntitySpan. Checking UsoIdentifiers.");
      sub_CC2C();
    }

    uint64_t v5 = v0;
    uint64_t v0 = v226;
    uint64_t v49 = &qword_91FF8[1];
LABEL_13:
    if ((sub_164AC() & 1) == 0)
    {
      sub_397D0();
      if (!v107) {
        swift_once();
      }
      uint64_t v79 = sub_8E730();
      uint64_t v73 = (void *)sub_3978C(v79, (uint64_t)qword_BFEC8);
      os_log_type_t v80 = sub_8EB00();
      if (!sub_1CAE4(v80)) {
        goto LABEL_34;
      }
      uint64_t v81 = (_WORD *)sub_CCE4();
      sub_1CC78(v81);
      uint64_t v78 = "#NLv4Transformer interpretation group is not populated. Not proceeding with UsoIdentifier.interpretationGroup checks.";
      goto LABEL_33;
    }
    if (!v233) {
      goto LABEL_29;
    }
    sub_39A1C();
    uint64_t v70 = sub_8DE90();
    if (!v70) {
      goto LABEL_29;
    }
    uint64_t v71 = v70;
    if (!*(void *)(v70 + 16))
    {
      swift_bridgeObjectRelease();
LABEL_29:
      sub_397D0();
      if (!v107) {
        swift_once();
      }
      uint64_t v82 = sub_8E730();
      uint64_t v73 = (void *)sub_3978C(v82, (uint64_t)qword_BFEC8);
      os_log_type_t v83 = sub_8EB00();
      if (!sub_1CAE4(v83)) {
        goto LABEL_34;
      }
      Swift::String v84 = (_WORD *)sub_CCE4();
      sub_1CC78(v84);
LABEL_33:
      sub_1CA90(&dword_0, v76, v77, v78);
      sub_CC2C();
      goto LABEL_34;
    }
    sub_76660(v70, (uint64_t)v48);
    sub_39674((uint64_t)v48, 1, (uint64_t)v262);
    if (v107)
    {
      swift_bridgeObjectRelease();
      sub_1C9C8((uint64_t)v48, &qword_BD8E0);
      sub_397D0();
      if (!v107) {
        goto LABEL_120;
      }
      goto LABEL_21;
    }
    uint64_t v207 = v5;
    uint64_t v208 = sub_8DD20();
    unint64_t v209 = v85;
    uint64_t v86 = *(void *)(v232 + 8);
    uint64_t v246 = v232 + 8;
    uint64_t v258 = v86;
    sub_1CB7C();
    v87();
    Swift::String v88 = sub_5674(v71);
    swift_bridgeObjectRelease();
    sub_5998((uint64_t)v88);
    uint64_t v89 = swift_bridgeObjectRetain();
    unint64_t v90 = sub_380F8(v89);
    swift_bridgeObjectRelease();
    v264[0] = v90;
    LOBYTE(v90) = 0;
    sub_381DC(v264);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v92 = v264[0];
    uint64_t v93 = v242;
    uint64_t v220 = v264[0][2];
    if (!v220)
    {
LABEL_95:
      swift_release();
      sub_39A1C();
      uint64_t v179 = sub_8DE90();
      unint64_t v180 = v209;
      uint64_t v181 = v208;
      if (v179)
      {
        uint64_t v182 = v224;
        sub_76660(v179, v224);
        swift_bridgeObjectRelease();
        sub_39674(v182, 1, (uint64_t)v262);
        if (v107)
        {
          swift_bridgeObjectRelease();
          sub_1C9C8(v182, &qword_BD8E0);
LABEL_105:
          sub_397D0();
          if (!v107) {
            swift_once();
          }
          uint64_t v190 = sub_8E730();
          uint64_t v73 = (void *)sub_3978C(v190, (uint64_t)qword_BFEC8);
          os_log_type_t v191 = sub_8EB00();
          if (!sub_1CAE4(v191)) {
            goto LABEL_34;
          }
          os_log_type_t v192 = (_WORD *)sub_CCE4();
          sub_1CC78(v192);
          uint64_t v78 = "#NLv4Transformer no targetName name found";
          goto LABEL_33;
        }
        sub_8DD30();
        uint64_t v184 = v183;
        sub_1CD04();
        v185();
        if (v184)
        {
          sub_397D0();
          if (!v107) {
            swift_once();
          }
          uint64_t v186 = sub_8E730();
          sub_50FC(v186, (uint64_t)qword_BFEC8);
          swift_bridgeObjectRetain_n();
          uint64_t v187 = sub_8E710();
          os_log_type_t v188 = sub_8EB00();
          if (sub_39748(v188))
          {
            uint64_t v189 = (uint8_t *)sub_1CBDC();
            v264[0] = (void *)sub_1CC0C();
            *(_DWORD *)uint64_t v189 = 136315138;
            swift_bridgeObjectRetain();
            uint64_t v263 = sub_8758C(v181, v180, (uint64_t *)v264);
            sub_8EBD0();
            swift_bridgeObjectRelease_n();
            _os_log_impl(&dword_0, v187, (os_log_type_t)v90, "#NLv4Transformer targetName name: %s", v189, 0xCu);
            swift_arrayDestroy();
            sub_CC2C();
            sub_CC2C();
          }
          else
          {

            sub_398DC();
          }
          goto LABEL_35;
        }
      }
      swift_bridgeObjectRelease();
      goto LABEL_105;
    }
    unint64_t v94 = 0;
    v219 = v264[0] + 4;
    uint64_t v257 = v232 + 16;
    int v252 = enum case for IdentifierNamespace.nsSemanticValue(_:);
    v255 = (void (**)(void))(v259 + 26);
    uint64_t v236 = v259 + 8;
    uint64_t v248 = (void (**)(void))(v259 + 2);
    v213 = (uint64_t *)(v232 + 32);
    int v237 = enum case for IdentifierNamespace.nsHomeKitEntityType(_:);
    int v231 = enum case for IdentifierNamespace.nsItemId(_:);
    *(void *)&long long v91 = v49[204];
    long long v215 = v91;
    v214 = (char *)&type metadata for Any + 8;
    unint64_t v90 = &qword_BBFC0;
    uint64_t v238 = v24;
    uint64_t v95 = v246;
    uint64_t v226 = v0;
    uint64_t v218 = v264[0];
LABEL_38:
    if (v94 < v92[2]) {
      break;
    }
    __break(1u);
  }
  unint64_t v230 = v94;
  unint64_t v96 = v219[v94];
  Class isa = v96[2].isa;
  uint64_t v247 = isa;
  if (!isa)
  {
    swift_bridgeObjectRetain();
    goto LABEL_85;
  }
  sub_39934();
  uint64_t v24 = ((char *)v96 + v98);
  uint64_t v256 = *(void *)(v99 + 72);
  uint64_t v259 = *(_DWORD **)(v99 + 16);
  uint64_t v229 = v96;
  swift_bridgeObjectRetain_n();
  unint64_t v245 = v24;
  unint64_t v96 = isa;
  while (1)
  {
    uint64_t v100 = v95;
    sub_39720();
    v101();
    sub_8DCE0();
    uint64_t v102 = v261;
    uint64_t v253 = *v255;
    sub_711C();
    v103();
    sub_39764(v102);
    uint64_t v105 = v0 + v104;
    sub_30ED8((uint64_t)v93, v0, &qword_BBFC0);
    sub_30ED8(v102, v105, &qword_BBFC0);
    sub_39654(v0);
    if (v107) {
      break;
    }
    uint64_t v106 = v244;
    sub_30ED8(v0, v244, &qword_BBFC0);
    sub_39654(v105);
    if (v107)
    {
      ((void (*)(uint64_t, uint64_t))*v248)(v106, v10);
LABEL_49:
      sub_1C9C8(v0, &qword_BBFB8);
      sub_1C9C8(v261, &qword_BBFC0);
      sub_39A04();
      uint64_t v95 = v100;
      goto LABEL_51;
    }
    uint64_t v108 = sub_396D8();
    v109(v108);
    sub_390B0((unint64_t *)&qword_BBFC8, (void (*)(uint64_t))&type metadata accessor for IdentifierNamespace);
    char v110 = sub_8E8B0();
    uint64_t v111 = v0;
    uint64_t v112 = *v248;
    sub_3968C();
    v112();
    uint64_t v113 = (uint64_t)v242;
    sub_3968C();
    v112();
    unint64_t v90 = &qword_BBFC0;
    uint64_t v0 = v111;
    sub_39A04();
    sub_1C9C8(v261, &qword_BBFC0);
    uint64_t v93 = (uint64_t *)v113;
    sub_1C9C8(v113, &qword_BBFC0);
    uint64_t v95 = v100;
    if (v110) {
      goto LABEL_54;
    }
LABEL_51:
    sub_39738();
    v114();
    uint64_t v24 = ((char *)v24 + v256);
    unint64_t v96 = ((char *)v96 - 1);
    if (!v96)
    {
      sub_39704();
      goto LABEL_85;
    }
  }
  sub_39654(v105);
  if (!v107) {
    goto LABEL_49;
  }
  sub_1C9C8(v0, &qword_BBFC0);
  sub_1C9C8(v261, &qword_BBFC0);
  sub_39A04();
LABEL_54:
  sub_39704();
  uint64_t v212 = *v213;
  sub_7074();
  v115();
  uint64_t v211 = sub_8DD20();
  unint64_t v216 = v116;
  sub_39738();
  v117();
  swift_bridgeObjectRetain();
  unint64_t v96 = 0;
  uint64_t v24 = v245;
  uint64_t v118 = v235;
  uint64_t v119 = v253;
  while (2)
  {
    uint64_t v120 = ((char *)&v96->isa + 1);
    if (__OFADD__(v96, 1))
    {
      __break(1u);
LABEL_111:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v136 = v223;
      uint64_t v93 = v222;
      uint64_t v95 = v207;
      sub_7074();
      v193();
      if (qword_BB830 != -1) {
        swift_once();
      }
      uint64_t v194 = sub_8E730();
      int v195 = sub_50FC(v194, (uint64_t)qword_BFEC8);
      uint64_t v10 = v221;
      sub_222F4();
      v196();
      unint64_t v197 = v216;
      swift_bridgeObjectRetain_n();
      unint64_t v198 = v210;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      unint64_t v96 = sub_8E710();
      os_log_type_t v199 = sub_8EB00();
      if (sub_1CAE4(v199))
      {
        uint64_t v200 = swift_slowAlloc();
        v262 = (void *)swift_slowAlloc();
        v264[0] = v262;
        *(_DWORD *)uint64_t v200 = 136315906;
        LODWORD(v261) = v195;
        swift_bridgeObjectRetain();
        uint64_t v263 = sub_8758C(v211, v197, (uint64_t *)v264);
        sub_39918();
        swift_bridgeObjectRelease_n();
        uint64_t v201 = v10;
        *(_WORD *)(v200 + 12) = 2080;
        swift_bridgeObjectRetain();
        uint64_t v263 = sub_8758C(v217, v198, (uint64_t *)v264);
        sub_39918();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v200 + 22) = 2080;
        swift_bridgeObjectRetain();
        uint64_t v263 = sub_8758C((uint64_t)v119, (unint64_t)v24, (uint64_t *)v264);
        sub_39918();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v200 + 32) = 2080;
        sub_390B0(&qword_BD8E8, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v202 = v207;
        uint64_t v203 = sub_8EE20();
        uint64_t v263 = sub_8758C(v203, v204, (uint64_t *)v264);
        sub_8EBD0();
        swift_bridgeObjectRelease();
        uint64_t v205 = (void (*)(uint64_t, uint64_t))v223[1];
        v205(v201, v202);
        _os_log_impl(&dword_0, v96, (os_log_type_t)v261, "#NLv4Transformer selected home entity from identifiers - name : %s, type : %s, identifierString : %s, identifier : %s", (uint8_t *)v200, 0x2Au);
        swift_arrayDestroy();
        sub_CC2C();
        sub_CC2C();

        v205((uint64_t)v222, v202);
      }
      else
      {
LABEL_116:

        uint64_t v206 = (void (*)(uint64_t, uint64_t))v136[1];
        v206(v10, v95);
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        sub_398DC();
        v206((uint64_t)v93, v95);
      }
      goto LABEL_35;
    }
    sub_39720();
    v121();
    uint64_t v122 = v250;
    sub_8DCE0();
    uint64_t v123 = v251;
    sub_711C();
    v119();
    sub_39764(v123);
    uint64_t v125 = v118 + v124;
    uint64_t v126 = v122;
    unint64_t v90 = &qword_BBFC0;
    sub_30ED8(v126, v118, &qword_BBFC0);
    uint64_t v127 = sub_3995C();
    sub_30ED8(v127, v128, &qword_BBFC0);
    sub_39654(v118);
    if (!v107)
    {
      uint64_t v93 = &qword_BBFC0;
      sub_30ED8(v118, (uint64_t)v238, &qword_BBFC0);
      sub_39654(v125);
      if (!v129)
      {
        uint64_t v131 = sub_3995C();
        v132(v131);
        sub_390B0((unint64_t *)&qword_BBFC8, (void (*)(uint64_t))&type metadata accessor for IdentifierNamespace);
        char v133 = sub_8E8B0();
        uint64_t v134 = *v248;
        sub_3968C();
        v134();
        sub_3968C();
        v134();
        uint64_t v118 = v235;
        sub_1C9C8(v235, &qword_BBFC0);
        sub_1C9C8(v251, &qword_BBFC0);
        sub_1C9C8(v250, &qword_BBFC0);
        uint64_t v95 = v246;
        unint64_t v90 = &qword_BBFC0;
        if (v133) {
          goto LABEL_68;
        }
        goto LABEL_66;
      }
      sub_1CD04();
      v130();
      uint64_t v95 = v246;
      unint64_t v90 = &qword_BBFC0;
LABEL_64:
      sub_1C9C8(v118, &qword_BBFB8);
      sub_1C9C8(v251, &qword_BBFC0);
      sub_1C9C8(v250, &qword_BBFC0);
LABEL_66:
      sub_39738();
      v135();
      unint64_t v96 = ((char *)v96 + 1);
      uint64_t v24 = ((char *)v24 + v256);
      if (v120 == v247)
      {
        swift_bridgeObjectRelease();
        sub_39704();
        uint64_t v0 = v226;
        uint64_t v93 = v242;
        goto LABEL_85;
      }
      continue;
    }
    break;
  }
  sub_39654(v125);
  uint64_t v95 = v246;
  if (!v107) {
    goto LABEL_64;
  }
  sub_1C9C8(v118, &qword_BBFC0);
  sub_1C9C8(v251, &qword_BBFC0);
  sub_1C9C8(v250, &qword_BBFC0);
LABEL_68:
  sub_39704();
  uint64_t v136 = v262;
  sub_7074();
  v137();
  uint64_t v217 = sub_8DD20();
  unint64_t v210 = v138;
  sub_39738();
  v139();
  swift_bridgeObjectRetain();
  unint64_t v96 = 0;
  uint64_t v24 = v234;
  while (2)
  {
    uint64_t v140 = ((char *)&v96->isa + 1);
    if (__OFADD__(v96, 1))
    {
      __break(1u);
      goto LABEL_116;
    }
    sub_39720();
    v141();
    uint64_t v95 = v239;
    sub_8DCE0();
    uint64_t v142 = v240;
    sub_711C();
    v119();
    sub_39764(v142);
    uint64_t v143 = v243;
    uint64_t v145 = v243 + v144;
    uint64_t v136 = &qword_BBFC0;
    sub_30ED8(v95, v243, &qword_BBFC0);
    sub_30ED8(v142, v145, &qword_BBFC0);
    sub_39654(v143);
    if (!v107)
    {
      uint64_t v146 = sub_39990();
      sub_30ED8(v146, (uint64_t)v24, &qword_BBFC0);
      sub_39654(v145);
      if (!v147)
      {
        uint64_t v150 = sub_396D8();
        v151(v150);
        sub_390B0((unint64_t *)&qword_BBFC8, (void (*)(uint64_t))&type metadata accessor for IdentifierNamespace);
        char v152 = sub_8E8B0();
        uint64_t v136 = (uint64_t *)v248;
        uint64_t v153 = *v248;
        sub_3968C();
        v153();
        uint64_t v119 = v253;
        sub_3968C();
        v153();
        uint64_t v24 = v234;
        uint64_t v154 = sub_39990();
        sub_1C9C8(v154, &qword_BBFC0);
        sub_1C9C8(v240, &qword_BBFC0);
        sub_1C9C8(v239, &qword_BBFC0);
        uint64_t v93 = v242;
        if (v152) {
          goto LABEL_82;
        }
        goto LABEL_80;
      }
      sub_1CD04();
      v148();
      uint64_t v93 = v242;
LABEL_78:
      uint64_t v149 = sub_39990();
      sub_1C9C8(v149, &qword_BBFB8);
      sub_1C9C8(v240, &qword_BBFC0);
      sub_1C9C8(v239, &qword_BBFC0);
LABEL_80:
      sub_1CB7C();
      v155();
      unint64_t v96 = ((char *)v96 + 1);
      unint64_t v245 = ((char *)v245 + v256);
      if (v140 == v247)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_39704();
        uint64_t v0 = v226;
        uint64_t v95 = v246;
        unint64_t v90 = &qword_BBFC0;
        goto LABEL_85;
      }
      continue;
    }
    break;
  }
  sub_39654(v145);
  uint64_t v93 = v242;
  if (!v107) {
    goto LABEL_78;
  }
  uint64_t v156 = sub_39990();
  sub_1C9C8(v156, &qword_BBFC0);
  sub_1C9C8(v240, &qword_BBFC0);
  sub_1C9C8(v239, &qword_BBFC0);
LABEL_82:
  swift_bridgeObjectRelease();
  sub_7074();
  v157();
  uint64_t v119 = (void (*)(void))sub_8DD20();
  uint64_t v24 = v158;
  sub_1CB7C();
  v159();
  uint64_t v160 = v225;
  sub_8CA80();
  sub_39674(v160, 1, v207);
  uint64_t v0 = v226;
  if (!v107) {
    goto LABEL_111;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C9C8(v160, &qword_BD8D8);
  uint64_t v95 = v246;
  unint64_t v90 = &qword_BBFC0;
  unint64_t v96 = v229;
LABEL_85:
  sub_397D0();
  if (!v107) {
    swift_once();
  }
  uint64_t v161 = sub_8E730();
  sub_50FC(v161, (uint64_t)qword_BFEC8);
  swift_bridgeObjectRetain_n();
  os_log_type_t v48 = sub_8E710();
  int v162 = sub_8EB10();
  if (!os_log_type_enabled(v48, (os_log_type_t)v162))
  {

    swift_bridgeObjectRelease_n();
LABEL_94:
    uint64_t v92 = v218;
    unint64_t v94 = v230 + 1;
    if (v230 + 1 == v220) {
      goto LABEL_95;
    }
    goto LABEL_38;
  }
  LODWORD(v256) = v162;
  uint64_t v163 = (_DWORD *)swift_slowAlloc();
  uint64_t v164 = (void *)swift_slowAlloc();
  v264[0] = v164;
  *uint64_t v163 = v215;
  uint64_t v259 = v163;
  uint64_t v253 = (void (*)(void))v164;
  if (!v247)
  {
    int v170 = 0;
    uint64_t v24 = v96;
    LOBYTE(v96) = 1;
LABEL_93:
    LODWORD(v263) = v170;
    BYTE4(v263) = (_BYTE)v96;
    sub_48AC(&qword_BBFD8);
    uint64_t v172 = sub_8E8E0();
    uint64_t v174 = sub_8758C(v172, v173, (uint64_t *)v264);
    v175 = v259;
    *(void *)(v259 + 1) = v174;
    sub_398DC();
    swift_bridgeObjectRelease();
    *((_WORD *)v175 + 6) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v176 = sub_8EA40();
    unint64_t v178 = v177;
    swift_bridgeObjectRelease();
    *(void *)((char *)v175 + 14) = sub_8758C(v176, v178, (uint64_t *)v264);
    sub_398DC();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v48, (os_log_type_t)v256, "#NLv4Transformer Dropped identifier group %s: %s due to missing value", (uint8_t *)v175, 0x16u);
    swift_arrayDestroy();
    sub_CC2C();
    sub_CC2C();

    goto LABEL_94;
  }
  if (v96[2].isa)
  {
    sub_39934();
    uint64_t v166 = (char *)v96 + v165;
    uint64_t v168 = *(void (**)(uint64_t, char *, void *))(v167 + 16);
    uint64_t v247 = v48;
    v168(v228, v166, v262);
    unint64_t v169 = sub_8DCF0();
    int v170 = v169;
    uint64_t v24 = v96;
    unint64_t v96 = (HIDWORD(v169) & 1);
    os_log_type_t v48 = v247;
    sub_39738();
    v171();
    goto LABEL_93;
  }
  __break(1u);
LABEL_120:
  swift_once();
LABEL_21:
  uint64_t v72 = sub_8E730();
  uint64_t v73 = (void *)sub_3978C(v72, (uint64_t)qword_BFEC8);
  os_log_type_t v74 = sub_8EB00();
  if (sub_1CAE4(v74))
  {
    uint64_t v75 = (_WORD *)sub_CCE4();
    sub_1CC78(v75);
    uint64_t v78 = "#NLv4Transformer no targetName found";
    goto LABEL_33;
  }
LABEL_34:

LABEL_35:
  sub_2224C();
}

void sub_357FC()
{
  sub_222DC();
  uint64_t v105 = v3;
  uint64_t v5 = v4;
  unint64_t v7 = v6;
  uint64_t v99 = sub_8E000();
  sub_5190();
  uint64_t v102 = v8;
  __chkstk_darwin(v9);
  sub_1CA70();
  uint64_t v96 = v10;
  uint64_t v100 = sub_48AC(&qword_BD8A8);
  sub_16058();
  __chkstk_darwin(v11);
  sub_3985C(v12, v94);
  uint64_t v13 = sub_48AC(&qword_BD8B0);
  uint64_t v14 = sub_1CCBC(v13);
  __chkstk_darwin(v14);
  sub_6FF0();
  uint64_t v97 = v15;
  sub_6FC4();
  __chkstk_darwin(v16);
  sub_6FE4();
  uint64_t v103 = v17;
  sub_6FC4();
  __chkstk_darwin(v18);
  sub_22520();
  uint64_t v101 = v19;
  uint64_t v20 = sub_8DB60();
  sub_5190();
  uint64_t v22 = v21;
  __chkstk_darwin(v23);
  sub_AAA8();
  uint64_t v26 = v25 - v24;
  uint64_t v27 = sub_48AC(&qword_BD8B8);
  sub_16058();
  __chkstk_darwin(v28);
  sub_22300();
  uint64_t v29 = sub_48AC(&qword_BD8C0);
  uint64_t v30 = sub_1CCBC(v29);
  __chkstk_darwin(v30);
  sub_39818();
  uint64_t v32 = __chkstk_darwin(v31);
  uint64_t v34 = (char *)&v94 - v33;
  __chkstk_darwin(v32);
  sub_3994C();
  unint64_t v104 = v7;
  if (v7 == 1 || !v5) {
    _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(v0, 1, 1, v20);
  }
  else {
    sub_8DB50();
  }
  sub_711C();
  v35();
  _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0((uint64_t)v34, 0, 1, v20);
  uint64_t v36 = v1 + *(int *)(v27 + 48);
  sub_30ED8(v0, v1, &qword_BD8C0);
  sub_30ED8((uint64_t)v34, v36, &qword_BD8C0);
  sub_39674(v1, 1, v20);
  uint64_t v37 = v105;
  if (v38)
  {
    sub_1C9C8((uint64_t)v34, &qword_BD8C0);
    sub_1C9C8(v0, &qword_BD8C0);
    sub_39674(v36, 1, v20);
    if (v38)
    {
      sub_1C9C8(v1, &qword_BD8C0);
      goto LABEL_33;
    }
    goto LABEL_13;
  }
  sub_30ED8(v1, v2, &qword_BD8C0);
  sub_39674(v36, 1, v20);
  if (v38)
  {
    sub_1C9C8((uint64_t)v34, &qword_BD8C0);
    sub_1C9C8(v0, &qword_BD8C0);
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v2, v20);
LABEL_13:
    sub_1C9C8(v1, &qword_BD8B8);
    goto LABEL_14;
  }
  sub_3995C();
  sub_7074();
  v47();
  sub_390B0(&qword_BD8D0, (void (*)(uint64_t))&type metadata accessor for UsoEntity_common_UserEntity.DefinedValues);
  int v95 = sub_8E8B0();
  os_log_type_t v48 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
  v48(v26, v20);
  sub_1C9C8((uint64_t)v34, &qword_BD8C0);
  sub_1C9C8(v0, &qword_BD8C0);
  v48(v2, v20);
  sub_1C9C8(v1, &qword_BD8C0);
  if (v95)
  {
LABEL_33:
    if (qword_BB830 != -1) {
      swift_once();
    }
    uint64_t v49 = sub_8E730();
    uint64_t v50 = (void *)sub_3978C(v49, (uint64_t)qword_BFEC8);
    os_log_type_t v51 = sub_8EB00();
    if (sub_39748(v51))
    {
      os_log_type_t v52 = (_WORD *)sub_CCE4();
      sub_39A30(v52);
      unint64_t v55 = "#NLv4Transformer has everywhere in utterance";
LABEL_77:
      sub_3999C(&dword_0, v53, v54, v55);
LABEL_78:
      sub_CC2C();
      goto LABEL_79;
    }
    goto LABEL_79;
  }
LABEL_14:
  if (v104 < 2 || (unint64_t v39 = sub_8E020()) == 0)
  {
LABEL_59:
    if (qword_BB830 != -1) {
      swift_once();
    }
    uint64_t v71 = sub_8E730();
    uint64_t v72 = sub_50FC(v71, (uint64_t)qword_BFEC8);
    swift_bridgeObjectRetain_n();
    uint64_t v105 = v72;
    uint64_t v73 = sub_8E710();
    os_log_type_t v74 = sub_8EB00();
    if (os_log_type_enabled(v73, v74))
    {
      uint64_t v75 = (_DWORD *)sub_1CBDC();
      unint64_t v107 = sub_1CC0C();
      *uint64_t v75 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v76 = sub_8EA40();
      uint64_t v77 = v37;
      unint64_t v79 = v78;
      swift_bridgeObjectRelease();
      uint64_t v80 = sub_8758C(v76, v79, (uint64_t *)&v107);
      sub_E1D0(v80);
      sub_8EBD0();
      swift_bridgeObjectRelease_n();
      uint64_t v37 = v77;
      swift_bridgeObjectRelease();
      sub_398C0(&dword_0, v73, v81, "#NLv4Transformer checking if a node is room or house hint in %s");
      sub_397B4();
      sub_CC2C();
      sub_CC2C();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v82 = *(void *)(v37 + 16);
    if (!v82)
    {
LABEL_72:
      uint64_t v50 = (void *)sub_8E710();
      os_log_type_t v88 = sub_8EB00();
      if (!sub_39748(v88)) {
        goto LABEL_79;
      }
      uint64_t v89 = (_WORD *)sub_CCE4();
      sub_39A30(v89);
      sub_3999C(&dword_0, v90, v91, "#NLv4Transformer doesn't have everywhere or everyone");
      goto LABEL_78;
    }
    swift_bridgeObjectRetain();
    os_log_type_t v83 = (void *)(v37 + 56);
    while (1)
    {
      if ((v85 = *(v83 - 3), Swift::String v84 = (void *)*(v83 - 2), *(v83 - 1) == 0xD000000000000017)
        && *v83 == 0x8000000000097440
        || (sub_8EE40() & 1) != 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v86._rawValue = &off_B42B8;
        v108._uint64_t countAndFlagsBits = v85;
        v108._object = v84;
        unint64_t v87 = sub_8ED80(v86, v108);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v87 < 2) {
          break;
        }
      }
      v83 += 4;
      if (!--v82)
      {
        swift_bridgeObjectRelease();
        goto LABEL_72;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v50 = (void *)sub_8E710();
    os_log_type_t v92 = sub_8EB00();
    if (sub_39748(v92))
    {
      uint64_t v93 = (_WORD *)sub_CCE4();
      sub_39A30(v93);
      goto LABEL_77;
    }
    goto LABEL_79;
  }
  uint64_t v40 = v39;
  unint64_t v107 = (unint64_t)_swiftEmptyArrayStorage;
  if (v39 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v41 = sub_8ED40();
  }
  else
  {
    uint64_t v41 = *(void *)((char *)&dword_10 + (v39 & 0xFFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain();
  }
  uint64_t v43 = v101;
  uint64_t v42 = v102;
  uint64_t v44 = v103;
  if (v41)
  {
    if (v41 < 1)
    {
      __break(1u);
      goto LABEL_83;
    }
    for (uint64_t i = 0; i != v41; ++i)
    {
      if ((v40 & 0xC000000000000001) != 0) {
        sub_8EC70();
      }
      else {
        swift_retain();
      }
      sub_8DE60();
      if (v106)
      {
        uint64_t v46 = sub_8DE80();
        swift_release();
        swift_release();
        if (v46)
        {
          sub_8EA10();
          if (*(void *)((char *)&dword_10 + (v107 & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18
                                                                                          + (v107 & 0xFFFFFFFFFFFFFF8)) >> 1)
            sub_8EA60();
          sub_8EA80();
          sub_8EA50();
        }
      }
      else
      {
        swift_release();
      }
    }
    swift_bridgeObjectRelease();
    unint64_t v56 = v107;
    uint64_t v44 = v103;
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v56 = (unint64_t)_swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease();
  if (v56 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v57 = sub_8ED40();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v57 = *(void *)((char *)&dword_10 + (v56 & 0xFFFFFFFFFFFFFF8));
  }
  uint64_t v40 = v98;
  uint64_t v0 = v99;
  if (v57)
  {
    sub_2E448(0, (v56 & 0xC000000000000001) == 0, v56);
    if ((v56 & 0xC000000000000001) == 0)
    {
      swift_retain();
LABEL_43:
      swift_bridgeObjectRelease();
      sub_8DFF0();
      swift_release();
      goto LABEL_45;
    }
LABEL_83:
    sub_8EC70();
    goto LABEL_43;
  }
  swift_bridgeObjectRelease();
  _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(v43, 1, 1, v0);
LABEL_45:
  sub_711C();
  v58();
  _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(v44, 0, 1, v0);
  uint64_t v59 = v40 + *(int *)(v100 + 48);
  sub_30ED8(v43, v40, &qword_BD8B0);
  sub_30ED8(v44, v59, &qword_BD8B0);
  sub_39674(v40, 1, v0);
  if (v38)
  {
    sub_1C9C8(v44, &qword_BD8B0);
    sub_1C9C8(v43, &qword_BD8B0);
    sub_39674(v59, 1, v0);
    if (v38)
    {
      sub_1C9C8(v40, &qword_BD8B0);
      goto LABEL_55;
    }
    goto LABEL_53;
  }
  uint64_t v60 = v97;
  sub_30ED8(v40, v97, &qword_BD8B0);
  sub_39674(v59, 1, v0);
  if (v61)
  {
    sub_1C9C8(v44, &qword_BD8B0);
    uint64_t v62 = sub_3995C();
    sub_1C9C8(v62, v63);
    (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v60, v0);
LABEL_53:
    sub_1C9C8(v40, &qword_BD8A8);
    goto LABEL_59;
  }
  uint64_t v64 = v96;
  sub_7074();
  v65();
  sub_390B0(&qword_BD8C8, (void (*)(uint64_t))&type metadata accessor for UsoEntity_common_Quantifier.DefinedValues);
  char v66 = sub_8E8B0();
  uint64_t v67 = *(void (**)(uint64_t, uint64_t))(v42 + 8);
  v67(v64, v0);
  sub_1C9C8(v44, &qword_BD8B0);
  sub_1C9C8(v43, &qword_BD8B0);
  v67(v60, v0);
  sub_39A04();
  if ((v66 & 1) == 0) {
    goto LABEL_59;
  }
LABEL_55:
  if (qword_BB830 != -1) {
    swift_once();
  }
  uint64_t v68 = sub_8E730();
  uint64_t v50 = (void *)sub_3978C(v68, (uint64_t)qword_BFEC8);
  os_log_type_t v69 = sub_8EB00();
  if (sub_39748(v69))
  {
    uint64_t v70 = (_WORD *)sub_CCE4();
    sub_39A30(v70);
    unint64_t v55 = "#NLv4Transformer has everyone in utterance";
    goto LABEL_77;
  }
LABEL_79:

  sub_2224C();
}

unint64_t sub_363E0(unint64_t result)
{
  if (!result) {
    return result;
  }
  uint64_t result = sub_8E020();
  if (!result) {
    return result;
  }
  unint64_t v1 = result;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_8ED40();
    uint64_t v2 = result;
    if (result) {
      goto LABEL_5;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((char *)&dword_10 + (result & 0xFFFFFFFFFFFFFF8));
    uint64_t result = swift_bridgeObjectRetain();
    if (v2)
    {
LABEL_5:
      if (v2 < 1)
      {
        __break(1u);
        return result;
      }
      uint64_t v3 = 0;
      uint64_t v4 = (char *)_swiftEmptyArrayStorage;
      do
      {
        if ((v1 & 0xC000000000000001) != 0) {
          sub_8EC70();
        }
        else {
          swift_retain();
        }
        sub_8DE60();
        if (v30)
        {
          uint64_t v5 = sub_8DF90();
          uint64_t v7 = v6;
          swift_release();
          swift_release();
          if (v7)
          {
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v4 = sub_768FC(0, *((void *)v4 + 2) + 1, 1, (uint64_t)v4);
            }
            unint64_t v9 = *((void *)v4 + 2);
            unint64_t v8 = *((void *)v4 + 3);
            if (v9 >= v8 >> 1)
            {
              BOOL v11 = sub_399D0(v8);
              uint64_t v4 = sub_768FC((char *)v11, v12, v13, (uint64_t)v4);
            }
            *((void *)v4 + 2) = v9 + 1;
            uint64_t v10 = &v4[16 * v9];
            *((void *)v10 + 4) = v5;
            *((void *)v10 + 5) = v7;
          }
        }
        else
        {
          swift_release();
        }
        ++v3;
      }
      while (v2 != v3);
      goto LABEL_22;
    }
  }
  uint64_t v4 = (char *)_swiftEmptyArrayStorage;
LABEL_22:
  swift_bridgeObjectRelease_n();
  if (qword_BB830 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_8E730();
  sub_50FC(v14, (uint64_t)qword_BFEC8);
  swift_bridgeObjectRetain_n();
  uint64_t v15 = sub_8E710();
  os_log_type_t v16 = sub_8EB00();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = (_DWORD *)sub_1CBDC();
    uint64_t v30 = sub_1CC0C();
    *uint64_t v17 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_8EA40();
    unint64_t v20 = v19;
    swift_bridgeObjectRelease();
    sub_8758C(v18, v20, &v30);
    sub_397F0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    sub_398C0(&dword_0, v15, v21, "#NLv4Transformer targetName name: %s");
    sub_397B4();
    sub_CC2C();
    sub_CC2C();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  if (*((void *)v4 + 2))
  {
    uint64_t v23 = *((void *)v4 + 4);
    unint64_t v22 = *((void *)v4 + 5);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v23 = 0;
    unint64_t v22 = 0;
  }
  swift_bridgeObjectRelease();
  char v24 = sub_310C8(v23, v22);
  swift_bridgeObjectRelease();
  if (v24) {
    return 0;
  }
  uint64_t v25 = (void *)sub_8E710();
  os_log_type_t v26 = sub_8EB00();
  if (sub_1CAE4(v26))
  {
    uint64_t v27 = (_WORD *)sub_CCE4();
    sub_1CC78(v27);
    sub_1CA90(&dword_0, v28, v29, "#NLv4Transformer hasSmsContact");
    sub_CC2C();
  }

  return 1;
}

uint64_t sub_36740(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  uint64_t v1 = sub_8E030();
  unint64_t v3 = v2;
  if (!v2) {
    return 0;
  }
  uint64_t v4 = v1;
  if (qword_BB830 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_8E730();
  sub_50FC(v5, (uint64_t)qword_BFEC8);
  swift_bridgeObjectRetain_n();
  uint64_t v6 = sub_8E710();
  os_log_type_t v7 = sub_8EB00();
  if (sub_22324(v7))
  {
    unint64_t v8 = (_DWORD *)sub_1CBDC();
    uint64_t v11 = sub_1CC0C();
    *unint64_t v8 = 136315138;
    swift_bridgeObjectRetain();
    sub_8758C(v4, v3, &v11);
    sub_397F0();
    swift_bridgeObjectRelease_n();
    sub_398C0(&dword_0, v6, v9, "#NLv4Transformer speechData message : %s ");
    sub_397B4();
    sub_CC2C();
    sub_CC2C();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  return v4;
}

void sub_368B8()
{
  sub_222DC();
  uint64_t v2 = v1;
  char v61 = v3;
  uint64_t v4 = sub_48AC(&qword_BC5D0);
  uint64_t v5 = sub_1CCBC(v4);
  __chkstk_darwin(v5);
  uint64_t v6 = sub_39834();
  sub_5190();
  uint64_t v8 = v7;
  __chkstk_darwin(v9);
  sub_6FF0();
  uint64_t v59 = v10;
  sub_6FC4();
  __chkstk_darwin(v11);
  char v13 = (char *)&v58 - v12;
  if (qword_BB830 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_8E730();
  uint64_t v15 = sub_50FC(v14, (uint64_t)qword_BFEC8);
  os_log_type_t v16 = sub_8E710();
  os_log_type_t v17 = sub_8EB00();
  BOOL v18 = os_log_type_enabled(v16, v17);
  unint64_t v19 = malloc;
  uint64_t v62 = v13;
  if (v18)
  {
    uint64_t v20 = sub_1CBDC();
    uint64_t v60 = v15;
    uint64_t v21 = (uint8_t *)v20;
    v64[0] = sub_1CC0C();
    *(_DWORD *)uint64_t v21 = 136315138;
    uint64_t v22 = sub_8758C(0xD000000000000023, 0x8000000000097270, v64);
    sub_397DC(v22);
    sub_8EBD0();
    _os_log_impl(&dword_0, v16, v17, "#NLv4Transformer #ReferenceResolution %s", v21, 0xCu);
    swift_arrayDestroy();
    unint64_t v19 = malloc;
    sub_CC2C();
    uint64_t v15 = v60;
    sub_CC2C();
  }

  uint64_t v23 = *(uint64_t **)(v2 + 24);
  uint64_t v24 = *(void *)(v2 + 32);
  uint64_t v25 = (void *)sub_3995C();
  sub_98C0(v25, v26);
  sub_49470(v61, v23, v24, v0);
  sub_39674(v0, 1, v6);
  if (v27)
  {
    sub_1C9C8(v0, &qword_BC5D0);
    uint64_t v28 = (void *)sub_8E710();
    os_log_type_t v29 = sub_8EB00();
    if (sub_1CAE4(v29))
    {
      uint64_t v30 = (_WORD *)sub_CCE4();
      sub_1CC78(v30);
      sub_1CA90(&dword_0, v31, v32, "#NLv4Transformer #ReferenceResolution no entity found");
      sub_CC2C();
    }
  }
  else
  {
    sub_7074();
    v33();
    uint64_t v34 = v59;
    sub_222F4();
    v35();
    uint64_t v36 = sub_8E710();
    os_log_type_t v37 = sub_8EB00();
    if (os_log_type_enabled(v36, v37))
    {
      uint64_t v39 = sub_1CBDC();
      uint64_t v60 = v15;
      uint64_t v40 = (uint8_t *)v39;
      char v61 = (uint8_t *)sub_1CC0C();
      v64[0] = (uint64_t)v61;
      *(_DWORD *)uint64_t v40 = *((void *)v19 + 269);
      sub_390B0((unint64_t *)&qword_BCFE8, (void (*)(uint64_t))&type metadata accessor for RREntity);
      uint64_t v41 = sub_8EE20();
      uint64_t v43 = sub_8758C(v41, v42, v64);
      sub_397DC(v43);
      unint64_t v19 = malloc;
      sub_8EBD0();
      swift_bridgeObjectRelease();
      uint64_t v44 = *(uint8_t **)(v8 + 8);
      sub_1CB7C();
      v45();
      _os_log_impl(&dword_0, v36, v37, "#NLv4Transformer rrEntity : %s", v40, 0xCu);
      swift_arrayDestroy();
      sub_CC2C();
      sub_CC2C();
    }
    else
    {
      uint64_t v44 = *(uint8_t **)(v8 + 8);
      ((void (*)(uint64_t, uint64_t))v44)(v34, v6);
    }

    sub_2E7F8();
    uint64_t v46 = (void *)sub_8E7C0();
    uint64_t v58 = v8;
    BOOL v47 = v46;
    id v48 = v46;
    uint64_t v49 = sub_8E710();
    os_log_type_t v50 = sub_8EB00();
    if (os_log_type_enabled(v49, v50))
    {
      os_log_type_t v51 = (uint8_t *)sub_1CBDC();
      uint64_t v52 = sub_1CC0C();
      os_log_type_t v63 = v47;
      v64[0] = v52;
      *(_DWORD *)os_log_type_t v51 = *((void *)v19 + 269);
      id v53 = v48;
      sub_48AC(&qword_BD860);
      uint64_t v54 = sub_8E8E0();
      char v61 = v44;
      uint64_t v56 = sub_8758C(v54, v55, v64);
      sub_397DC(v56);
      sub_8EBD0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v49, v50, "#NLv4Transformer homeFilter : %s", v51, 0xCu);
      swift_arrayDestroy();
      sub_CC2C();
      sub_CC2C();

      sub_1CB7C();
      v57();
    }
    else
    {

      ((void (*)(char *, uint64_t))v44)(v62, v6);
    }
  }
  sub_2224C();
}

uint64_t sub_36E5C()
{
  uint64_t v0 = sub_48AC(&qword_BD868);
  sub_E16C(v0, qword_BFF68);
  sub_50FC(v0, (uint64_t)qword_BFF68);
  sub_8D9C0();
  return sub_8E2B0();
}

uint64_t sub_36EDC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = sub_8D920();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_8DA40();
  uint64_t v7 = *(void *)(v43 - 8);
  __chkstk_darwin(v43);
  uint64_t v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_8D950())
  {
    sub_8D990();
    if (sub_8DA00())
    {
      unint64_t v42 = a1;
      sub_8DA10();
      uint64_t v10 = sub_8D910();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      unint64_t v11 = sub_8DAF0();
      if (v1)
      {
        swift_errorRelease();
        swift_bridgeObjectRelease();
        if (qword_BB830 != -1) {
          swift_once();
        }
        uint64_t v12 = sub_8E730();
        sub_50FC(v12, (uint64_t)qword_BFEC8);
        char v13 = sub_8E710();
        os_log_type_t v14 = sub_8EB00();
        BOOL v15 = os_log_type_enabled(v13, v14);
        uint64_t v16 = v43;
        if (v15)
        {
          os_log_type_t v17 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)os_log_type_t v17 = 0;
          _os_log_impl(&dword_0, v13, v14, "#NLv4Transformer Could not convert user dialog act to task", v17, 2u);
          swift_slowDealloc();
        }

        uint64_t v18 = sub_8E300();
        sub_390B0(&qword_BCC98, (void (*)(uint64_t))&type metadata accessor for TransformationError);
        swift_allocError();
        *unint64_t v19 = 0xD00000000000003ALL;
        v19[1] = 0x8000000000097320;
        (*(void (**)(void *, void, uint64_t))(*(void *)(v18 - 8) + 104))(v19, enum case for TransformationError.cannotTransform(_:), v18);
        swift_willThrow();
        return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v16);
      }
      else
      {
        unint64_t v29 = v11;
        if (v11 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v30 = sub_8ED40();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v30 = *(void *)((char *)&dword_10 + (v11 & 0xFFFFFFFFFFFFFF8));
        }
        uint64_t v31 = v43;
        uint64_t v32 = v10;
        uint64_t v33 = v42;
        if (v30)
        {
          sub_2E448(0, (v29 & 0xC000000000000001) == 0, v29);
          if ((v29 & 0xC000000000000001) != 0)
          {
            uint64_t v34 = sub_8EC70();
          }
          else
          {
            uint64_t v34 = *(void *)(v29 + 32);
            swift_retain();
          }
          swift_bridgeObjectRelease();
          uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v31);
          *uint64_t v33 = v34;
          v33[1] = v32;
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (qword_BB830 != -1) {
            swift_once();
          }
          uint64_t v35 = sub_8E730();
          sub_50FC(v35, (uint64_t)qword_BFEC8);
          uint64_t v36 = sub_8E710();
          os_log_type_t v37 = sub_8EB00();
          if (os_log_type_enabled(v36, v37))
          {
            char v38 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)char v38 = 0;
            _os_log_impl(&dword_0, v36, v37, "#NLv4Transformer No tasks found in input", v38, 2u);
            swift_slowDealloc();
          }

          uint64_t v39 = sub_8E300();
          sub_390B0(&qword_BCC98, (void (*)(uint64_t))&type metadata accessor for TransformationError);
          swift_allocError();
          *uint64_t v40 = 0xD000000000000028;
          v40[1] = 0x8000000000097360;
          (*(void (**)(void *, void, uint64_t))(*(void *)(v39 - 8) + 104))(v40, enum case for TransformationError.cannotTransform(_:), v39);
          swift_willThrow();
          return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v31);
        }
      }
    }
    else
    {
      uint64_t v27 = sub_8E300();
      sub_390B0(&qword_BCC98, (void (*)(uint64_t))&type metadata accessor for TransformationError);
      swift_allocError();
      void *v28 = 0xD000000000000042;
      v28[1] = 0x80000000000972D0;
      (*(void (**)(void *, void, uint64_t))(*(void *)(v27 - 8) + 104))(v28, enum case for TransformationError.cannotTransform(_:), v27);
      swift_willThrow();
      return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v43);
    }
  }
  else
  {
    if (qword_BB830 != -1) {
      swift_once();
    }
    uint64_t v21 = sub_8E730();
    sub_50FC(v21, (uint64_t)qword_BFEC8);
    uint64_t v22 = sub_8E710();
    os_log_type_t v23 = sub_8EB00();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v24 = 0;
      _os_log_impl(&dword_0, v22, v23, "#NLv4Transformer does NOT have UserStatedTask", v24, 2u);
      swift_slowDealloc();
    }

    uint64_t v25 = sub_8E300();
    sub_390B0(&qword_BCC98, (void (*)(uint64_t))&type metadata accessor for TransformationError);
    swift_allocError();
    *uint64_t v26 = 0xD00000000000002DLL;
    v26[1] = 0x80000000000972A0;
    (*(void (**)(void *, void, uint64_t))(*(void *)(v25 - 8) + 104))(v26, enum case for TransformationError.cannotTransform(_:), v25);
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_376AC()
{
  uint64_t v0 = sub_48AC(&qword_BD870);
  sub_E16C(v0, qword_BFF80);
  sub_50FC(v0, (uint64_t)qword_BFF80);
  sub_8E1B0();
  return sub_8E2B0();
}

void sub_3772C(char *a1@<X8>)
{
  sub_8DFC0();
  if (!v20)
  {
    sub_1C9C8((uint64_t)&v19, &qword_BC5D8);
    if (qword_BB830 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_8E730();
    sub_50FC(v8, (uint64_t)qword_BFEC8);
    uint64_t v9 = sub_8E710();
    os_log_type_t v10 = sub_8EB10();
    if (os_log_type_enabled(v9, v10))
    {
      unint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v11 = 0;
      _os_log_impl(&dword_0, v9, v10, "#NLv4Transformer Invalid parse", v11, 2u);
      swift_slowDealloc();
    }

    char v12 = 6;
    goto LABEL_11;
  }
  sub_39104(&v19, v21);
  if (qword_BB830 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_8E730();
  sub_50FC(v2, (uint64_t)qword_BFEC8);
  sub_12FA8((uint64_t)v21, (uint64_t)&v19);
  uint64_t v3 = sub_8E710();
  os_log_type_t v4 = sub_8EAF0();
  if (os_log_type_enabled(v3, v4))
  {
    os_log_type_t v17 = a1;
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315138;
    sub_12FA8((uint64_t)&v19, (uint64_t)v18);
    uint64_t v6 = sub_8E8E0();
    v18[0] = sub_8758C(v6, v7, &v22);
    sub_8EBD0();
    swift_bridgeObjectRelease();
    sub_4950((uint64_t)&v19);
    _os_log_impl(&dword_0, v3, v4, "#NLv4Transformer usoTask converted to type %s", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    a1 = v17;
    swift_slowDealloc();
  }
  else
  {
    sub_4950((uint64_t)&v19);
  }

  sub_12FA8((uint64_t)v21, (uint64_t)&v19);
  sub_8E080();
  if (swift_dynamicCast() || (sub_8E060(), swift_dynamicCast()))
  {
    sub_4950((uint64_t)v21);
    swift_release();
    sub_4950((uint64_t)&v19);
    *a1 = 0;
    return;
  }
  sub_8E0D0();
  if (!swift_dynamicCast())
  {
    sub_8E070();
    if (swift_dynamicCast())
    {
      sub_4950((uint64_t)v21);
      swift_release();
      char v13 = 2;
      goto LABEL_24;
    }
    sub_8E0A0();
    if (swift_dynamicCast())
    {
      sub_4950((uint64_t)v21);
      swift_release();
      char v13 = 3;
      goto LABEL_24;
    }
    sub_8E100();
    if (swift_dynamicCast())
    {
      sub_4950((uint64_t)v21);
      swift_release();
      char v13 = 4;
      goto LABEL_24;
    }
    sub_8E180();
    if (!swift_dynamicCast())
    {
      sub_8E190();
      if (!swift_dynamicCast())
      {
        sub_8E090();
        if (!swift_dynamicCast())
        {
          sub_8E0E0();
          if (!swift_dynamicCast())
          {
            os_log_type_t v14 = sub_8E710();
            os_log_type_t v15 = sub_8EB10();
            if (os_log_type_enabled(v14, v15))
            {
              uint64_t v16 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)uint64_t v16 = 0;
              _os_log_impl(&dword_0, v14, v15, "#NLv4Transformer Invalid Announcement parse", v16, 2u);
              swift_slowDealloc();
            }

            sub_4950((uint64_t)v21);
            char v13 = 6;
            goto LABEL_24;
          }
        }
      }
    }
    sub_4950((uint64_t)v21);
    swift_release();
    sub_4950((uint64_t)&v19);
    char v12 = 5;
LABEL_11:
    *a1 = v12;
    return;
  }
  sub_4950((uint64_t)v21);
  swift_release();
  char v13 = 1;
LABEL_24:
  *a1 = v13;
  sub_4950((uint64_t)&v19);
}

uint64_t sub_37CB0()
{
  uint64_t v0 = sub_48AC(&qword_BD878);
  sub_E16C(v0, qword_BFF98);
  sub_50FC(v0, (uint64_t)qword_BFF98);
  sub_8E1B0();
  sub_48AC(&qword_BD8F8);
  return sub_8E2B0();
}

uint64_t sub_37D3C@<X0>(void *a1@<X8>)
{
  sub_8DFC0();
  if (v14)
  {
    sub_30ED8((uint64_t)v13, (uint64_t)v12, &qword_BC5D8);
    sub_8E080();
    if (swift_dynamicCast())
    {
      swift_retain();
      sub_8DFB0();
      swift_release();
      uint64_t v2 = v11;
      swift_retain();
      uint64_t v3 = sub_8DFA0();
      goto LABEL_6;
    }
    sub_8E0D0();
    if (swift_dynamicCast())
    {
      swift_retain();
      sub_8E0C0();
      swift_release();
      uint64_t v2 = v11;
      swift_retain();
      uint64_t v3 = sub_8E0B0();
LABEL_6:
      unint64_t v4 = v3;
      swift_release();
      if (v4)
      {
        if (v4 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v7 = sub_8ED40();
          swift_bridgeObjectRelease();
          if (v7) {
            goto LABEL_9;
          }
        }
        else if (*(void *)((char *)&dword_10 + (v4 & 0xFFFFFFFFFFFFFF8)))
        {
LABEL_9:
          sub_2E448(0, (v4 & 0xC000000000000001) == 0, v4);
          if ((v4 & 0xC000000000000001) != 0) {
            sub_8EC70();
          }
          else {
            swift_retain();
          }
          swift_bridgeObjectRelease();
          sub_8DE60();
          swift_release();
          swift_release();
          uint64_t v5 = v10;
          goto LABEL_29;
        }
        swift_release();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_release();
      }
      uint64_t v5 = 0;
LABEL_29:
      *a1 = v2;
LABEL_30:
      a1[1] = v5;
      goto LABEL_31;
    }
    sub_8E0F0();
    if (swift_dynamicCast())
    {
      swift_retain();
      unint64_t v6 = sub_8DB30();
      swift_release();
      if (v6)
      {
        if (v6 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v9 = sub_8ED40();
          swift_bridgeObjectRelease();
          if (v9) {
            goto LABEL_17;
          }
        }
        else if (*(void *)((char *)&dword_10 + (v6 & 0xFFFFFFFFFFFFFF8)))
        {
LABEL_17:
          sub_2E448(0, (v6 & 0xC000000000000001) == 0, v6);
          if ((v6 & 0xC000000000000001) != 0) {
            sub_8EC70();
          }
          else {
            swift_retain();
          }
          swift_bridgeObjectRelease();
          sub_8DE60();
          swift_release();
          swift_release();
          uint64_t v5 = v11;
          goto LABEL_37;
        }
        swift_release();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_release();
      }
      uint64_t v5 = 0;
LABEL_37:
      *a1 = 0;
      goto LABEL_30;
    }
    sub_8E070();
    if (swift_dynamicCast() || (sub_8E0A0(), swift_dynamicCast()))
    {
      swift_release();
      *(_OWORD *)a1 = xmmword_90B30;
LABEL_31:
      sub_4950((uint64_t)v12);
      return sub_1C9C8((uint64_t)v13, &qword_BC5D8);
    }
    sub_4950((uint64_t)v12);
  }
  *(_OWORD *)a1 = xmmword_90B30;
  return sub_1C9C8((uint64_t)v13, &qword_BC5D8);
}

void sub_380D8()
{
  qword_BFFB0 = 0x73656D616ELL;
  *(void *)algn_BFFB8 = 0xE500000000000000;
}

void *sub_380F8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return &_swiftEmptyArrayStorage;
  }
  sub_48AC(&qword_BD8F0);
  uint64_t v3 = (void *)swift_allocObject();
  size_t v4 = j__malloc_size(v3);
  v3[2] = v1;
  v3[3] = 2 * ((uint64_t)(v4 - 32) / 8);
  uint64_t v5 = sub_38D44((uint64_t)&v7, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_390F8();
  if (v5 != v1)
  {
    __break(1u);
    return &_swiftEmptyArrayStorage;
  }
  return v3;
}

uint64_t sub_381DC(void **a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_8BD84((uint64_t)v2);
  }
  uint64_t v3 = v2[2];
  v5[0] = (uint64_t)(v2 + 4);
  v5[1] = v3;
  uint64_t result = sub_382A4(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_38248(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TransformerInput(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_382A4(uint64_t *a1)
{
  Swift::Int v3 = a1[1];
  uint64_t result = sub_8EE10(v3);
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_134;
    }
    if (v3) {
      return sub_38994(0, v3, 1, a1);
    }
    return result;
  }
  uint64_t v5 = result;
  uint64_t result = (uint64_t)sub_8A3C4(v3 / 2);
  uint64_t v94 = result;
  uint64_t v100 = v6;
  Swift::Int v96 = v3;
  os_log_type_t v92 = a1;
  if (v3 <= 0)
  {
    uint64_t v9 = (char *)&_swiftEmptyArrayStorage;
    unint64_t v25 = *((void *)&_swiftEmptyArrayStorage + 2);
LABEL_93:
    if (v25 >= 2)
    {
      uint64_t v84 = *v92;
      do
      {
        unint64_t v85 = v25 - 2;
        if (v25 < 2) {
          goto LABEL_128;
        }
        if (!v84) {
          goto LABEL_142;
        }
        uint64_t v86 = *(void *)&v9[16 * v85 + 32];
        uint64_t v87 = *(void *)&v9[16 * v25 + 24];
        uint64_t result = sub_38A8C((uint64_t *)(v84 + 8 * v86), (uint64_t *)(v84 + 8 * *(void *)&v9[16 * v25 + 16]), v84 + 8 * v87, v100);
        if (v1) {
          goto LABEL_109;
        }
        if (v87 < v86) {
          goto LABEL_129;
        }
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_8BD70((uint64_t)v9);
          uint64_t v9 = (char *)result;
        }
        if (v85 >= *((void *)v9 + 2)) {
          goto LABEL_130;
        }
        os_log_type_t v88 = &v9[16 * v85 + 32];
        *(void *)os_log_type_t v88 = v86;
        *((void *)v88 + 1) = v87;
        unint64_t v89 = *((void *)v9 + 2);
        if (v25 > v89) {
          goto LABEL_131;
        }
        uint64_t result = (uint64_t)memmove(&v9[16 * v25 + 16], &v9[16 * v25 + 32], 16 * (v89 - v25));
        *((void *)v9 + 2) = v89 - 1;
        unint64_t v25 = v89 - 1;
        Swift::Int v3 = v96;
      }
      while (v89 > 2);
    }
    swift_bridgeObjectRelease();
    if (v3 >= -1)
    {
LABEL_112:
      *(void *)(v94 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    __break(1u);
LABEL_108:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_109:
    uint64_t result = swift_bridgeObjectRelease();
    Swift::Int v3 = v96;
LABEL_111:
    if (v3 < -1) {
      goto LABEL_135;
    }
    goto LABEL_112;
  }
  uint64_t v93 = v5;
  Swift::Int v7 = 0;
  uint64_t v8 = *a1;
  uint64_t v91 = *a1 - 8;
  uint64_t v9 = (char *)&_swiftEmptyArrayStorage;
  uint64_t v97 = *a1;
  while (1)
  {
    Swift::Int v10 = v7++;
    Swift::Int v95 = v10;
    if (v7 >= v3) {
      goto LABEL_21;
    }
    uint64_t v102 = *(void *)(v8 + 8 * v7);
    uint64_t v101 = *(void *)(v8 + 8 * v10);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    int v11 = sub_5CC0(&v102, &v101);
    if (v1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      goto LABEL_111;
    }
    int v12 = v11;
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    Swift::Int v7 = v10 + 2;
    if (v10 + 2 >= v3) {
      goto LABEL_10;
    }
    do
    {
      uint64_t v13 = v8 + 8 * v10;
      uint64_t v14 = *(void *)(v13 + 8);
      uint64_t v102 = *(void *)(v13 + 16);
      uint64_t v101 = v14;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      int v15 = sub_5CC0(&v102, &v101);
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      if ((v12 ^ v15))
      {
        Swift::Int v7 = v10 + 2;
        if (v12) {
          goto LABEL_11;
        }
LABEL_20:
        Swift::Int v10 = v95;
        goto LABEL_21;
      }
      Swift::Int v16 = v10 + 3;
      ++v10;
    }
    while (v16 < v3);
    Swift::Int v7 = v3;
LABEL_10:
    if ((v12 & 1) == 0) {
      goto LABEL_20;
    }
LABEL_11:
    Swift::Int v10 = v95;
    if (v7 < v95) {
      goto LABEL_139;
    }
    if (v95 < v7)
    {
      os_log_type_t v17 = (uint64_t *)(v91 + 8 * v7);
      Swift::Int v18 = v7;
      Swift::Int v19 = v95;
      uint64_t v20 = (uint64_t *)(v8 + 8 * v95);
      do
      {
        if (v19 != --v18)
        {
          if (!v8) {
            goto LABEL_143;
          }
          uint64_t v21 = *v20;
          *uint64_t v20 = *v17;
          *os_log_type_t v17 = v21;
        }
        ++v19;
        --v17;
        ++v20;
      }
      while (v19 < v18);
    }
LABEL_21:
    if (v7 < v3)
    {
      if (__OFSUB__(v7, v10)) {
        goto LABEL_136;
      }
      if (v7 - v10 < v93) {
        break;
      }
    }
LABEL_30:
    if (v7 < v10) {
      goto LABEL_133;
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_8BC78(0, *((void *)v9 + 2) + 1, 1, v9);
      uint64_t v9 = (char *)result;
    }
    unint64_t v24 = *((void *)v9 + 2);
    unint64_t v23 = *((void *)v9 + 3);
    unint64_t v25 = v24 + 1;
    if (v24 >= v23 >> 1)
    {
      uint64_t result = (uint64_t)sub_8BC78((char *)(v23 > 1), v24 + 1, 1, v9);
      uint64_t v9 = (char *)result;
    }
    *((void *)v9 + 2) = v25;
    uint64_t v26 = v9 + 32;
    uint64_t v27 = (Swift::Int *)&v9[16 * v24 + 32];
    *uint64_t v27 = v95;
    v27[1] = v7;
    if (v24)
    {
      Swift::Int v98 = v7;
      while (1)
      {
        unint64_t v28 = v25 - 1;
        if (v25 >= 4)
        {
          uint64_t v33 = &v26[16 * v25];
          uint64_t v34 = *((void *)v33 - 8);
          uint64_t v35 = *((void *)v33 - 7);
          BOOL v39 = __OFSUB__(v35, v34);
          uint64_t v36 = v35 - v34;
          if (v39) {
            goto LABEL_118;
          }
          uint64_t v38 = *((void *)v33 - 6);
          uint64_t v37 = *((void *)v33 - 5);
          BOOL v39 = __OFSUB__(v37, v38);
          uint64_t v31 = v37 - v38;
          char v32 = v39;
          if (v39) {
            goto LABEL_119;
          }
          unint64_t v40 = v25 - 2;
          uint64_t v41 = &v26[16 * v25 - 32];
          uint64_t v43 = *(void *)v41;
          uint64_t v42 = *((void *)v41 + 1);
          BOOL v39 = __OFSUB__(v42, v43);
          uint64_t v44 = v42 - v43;
          if (v39) {
            goto LABEL_120;
          }
          BOOL v39 = __OFADD__(v31, v44);
          uint64_t v45 = v31 + v44;
          if (v39) {
            goto LABEL_122;
          }
          if (v45 >= v36)
          {
            os_log_type_t v63 = &v26[16 * v28];
            uint64_t v65 = *(void *)v63;
            uint64_t v64 = *((void *)v63 + 1);
            BOOL v39 = __OFSUB__(v64, v65);
            uint64_t v66 = v64 - v65;
            if (v39) {
              goto LABEL_132;
            }
            BOOL v56 = v31 < v66;
            goto LABEL_68;
          }
        }
        else
        {
          if (v25 != 3)
          {
            uint64_t v57 = *((void *)v9 + 4);
            uint64_t v58 = *((void *)v9 + 5);
            BOOL v39 = __OFSUB__(v58, v57);
            uint64_t v50 = v58 - v57;
            char v51 = v39;
            goto LABEL_62;
          }
          uint64_t v30 = *((void *)v9 + 4);
          uint64_t v29 = *((void *)v9 + 5);
          BOOL v39 = __OFSUB__(v29, v30);
          uint64_t v31 = v29 - v30;
          char v32 = v39;
        }
        if (v32) {
          goto LABEL_121;
        }
        unint64_t v40 = v25 - 2;
        uint64_t v46 = &v26[16 * v25 - 32];
        uint64_t v48 = *(void *)v46;
        uint64_t v47 = *((void *)v46 + 1);
        BOOL v49 = __OFSUB__(v47, v48);
        uint64_t v50 = v47 - v48;
        char v51 = v49;
        if (v49) {
          goto LABEL_123;
        }
        uint64_t v52 = &v26[16 * v28];
        uint64_t v54 = *(void *)v52;
        uint64_t v53 = *((void *)v52 + 1);
        BOOL v39 = __OFSUB__(v53, v54);
        uint64_t v55 = v53 - v54;
        if (v39) {
          goto LABEL_125;
        }
        if (__OFADD__(v50, v55)) {
          goto LABEL_127;
        }
        if (v50 + v55 >= v31)
        {
          BOOL v56 = v31 < v55;
LABEL_68:
          if (v56) {
            unint64_t v28 = v40;
          }
          goto LABEL_70;
        }
LABEL_62:
        if (v51) {
          goto LABEL_124;
        }
        uint64_t v59 = &v26[16 * v28];
        uint64_t v61 = *(void *)v59;
        uint64_t v60 = *((void *)v59 + 1);
        BOOL v39 = __OFSUB__(v60, v61);
        uint64_t v62 = v60 - v61;
        if (v39) {
          goto LABEL_126;
        }
        if (v62 < v50) {
          goto LABEL_79;
        }
LABEL_70:
        unint64_t v67 = v28 - 1;
        if (v28 - 1 >= v25)
        {
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
          goto LABEL_138;
        }
        if (!v8) {
          goto LABEL_140;
        }
        uint64_t v68 = v8;
        os_log_type_t v69 = &v26[16 * v67];
        uint64_t v70 = *(void *)v69;
        uint64_t v71 = v26;
        unint64_t v72 = v28;
        uint64_t v73 = &v26[16 * v28];
        uint64_t v74 = *((void *)v73 + 1);
        uint64_t result = sub_38A8C((uint64_t *)(v68 + 8 * *(void *)v69), (uint64_t *)(v68 + 8 * *(void *)v73), v68 + 8 * v74, v100);
        if (v1) {
          goto LABEL_109;
        }
        if (v74 < v70) {
          goto LABEL_115;
        }
        if (v72 > *((void *)v9 + 2)) {
          goto LABEL_116;
        }
        *(void *)os_log_type_t v69 = v70;
        *(void *)&v71[16 * v67 + 8] = v74;
        unint64_t v75 = *((void *)v9 + 2);
        if (v72 >= v75) {
          goto LABEL_117;
        }
        unint64_t v25 = v75 - 1;
        uint64_t result = (uint64_t)memmove(v73, v73 + 16, 16 * (v75 - 1 - v72));
        uint64_t v26 = v71;
        *((void *)v9 + 2) = v75 - 1;
        uint64_t v8 = v97;
        Swift::Int v7 = v98;
        if (v75 <= 2) {
          goto LABEL_79;
        }
      }
    }
    unint64_t v25 = 1;
LABEL_79:
    Swift::Int v3 = v96;
    if (v7 >= v96) {
      goto LABEL_93;
    }
  }
  if (__OFADD__(v10, v93)) {
    goto LABEL_137;
  }
  if (v10 + v93 >= v3) {
    Swift::Int v22 = v3;
  }
  else {
    Swift::Int v22 = v10 + v93;
  }
  if (v22 >= v10)
  {
    if (v7 != v22)
    {
      uint64_t v90 = v9;
      uint64_t v76 = (uint64_t *)(v91 + 8 * v7);
      Swift::Int v99 = v22;
      do
      {
        uint64_t v77 = *(void *)(v8 + 8 * v7);
        Swift::Int v78 = v10;
        unint64_t v79 = v76;
        uint64_t v80 = v76;
        do
        {
          uint64_t v102 = v77;
          uint64_t v101 = *v80;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          char v81 = sub_5CC0(&v102, &v101);
          if (v1) {
            goto LABEL_108;
          }
          char v82 = v81;
          swift_bridgeObjectRelease();
          uint64_t result = swift_bridgeObjectRelease();
          if ((v82 & 1) == 0) {
            break;
          }
          if (!v8) {
            goto LABEL_141;
          }
          uint64_t v83 = *v80;
          uint64_t v77 = v80[1];
          uint64_t *v80 = v77;
          v80[1] = v83;
          --v80;
          ++v78;
        }
        while (v7 != v78);
        ++v7;
        uint64_t v76 = v79 + 1;
        Swift::Int v10 = v95;
      }
      while (v7 != v99);
      Swift::Int v7 = v99;
      uint64_t v9 = v90;
    }
    goto LABEL_30;
  }
LABEL_138:
  __break(1u);
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
  return result;
}

uint64_t sub_38994(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v5 = a3;
    uint64_t v6 = result;
    uint64_t v7 = *a4;
    uint64_t v8 = *a4 + 8 * a3 - 8;
    uint64_t v13 = result;
LABEL_4:
    uint64_t v9 = *(void *)(v7 + 8 * v5);
    Swift::Int v10 = (uint64_t *)v8;
    while (1)
    {
      uint64_t v16 = v9;
      uint64_t v15 = *v10;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v11 = sub_5CC0(&v16, &v15);
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      if (v4) {
        break;
      }
      if (v11)
      {
        if (!v7)
        {
          __break(1u);
          return result;
        }
        uint64_t v12 = *v10;
        uint64_t v9 = v10[1];
        *Swift::Int v10 = v9;
        v10[1] = v12;
        --v10;
        if (v5 != ++v6) {
          continue;
        }
      }
      ++v5;
      v8 += 8;
      uint64_t v6 = v13;
      if (v5 != a2) {
        goto LABEL_4;
      }
      return result;
    }
  }
  return result;
}

uint64_t sub_38A8C(uint64_t *a1, uint64_t *a2, unint64_t a3, uint64_t *a4)
{
  uint64_t v5 = a4;
  uint64_t v8 = a1;
  uint64_t v9 = (char *)a2 - (char *)a1;
  uint64_t v10 = a2 - a1;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = (uint64_t)(a3 - (void)a2) / 8;
  if (v10 < v12)
  {
    sub_770B8(a1, a2 - a1, a4);
    if ((unint64_t)a2 >= a3 || v9 < 8)
    {
      uint64_t v14 = v8;
      Swift::Int v18 = &v5[v10];
      goto LABEL_43;
    }
    os_log_type_t v17 = a2;
    Swift::Int v18 = &v5[v10];
    while (1)
    {
      uint64_t v40 = *v17;
      uint64_t v39 = *v5;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v19 = sub_5CC0(&v40, &v39);
      if (v4)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v33 = v18 - v5;
        uint64_t v34 = v5;
        uint64_t v35 = v8;
        goto LABEL_44;
      }
      char v20 = v19;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v20 & 1) == 0) {
        break;
      }
      uint64_t v21 = v17;
      BOOL v22 = v8 == v17++;
      if (!v22) {
        goto LABEL_20;
      }
LABEL_21:
      ++v8;
      if (v5 >= v18 || (unint64_t)v17 >= a3)
      {
        uint64_t v14 = v8;
        goto LABEL_43;
      }
    }
    uint64_t v21 = v5;
    BOOL v22 = v8 == v5++;
    if (v22) {
      goto LABEL_21;
    }
LABEL_20:
    *uint64_t v8 = *v21;
    goto LABEL_21;
  }
  sub_770B8(a2, (uint64_t)(a3 - (void)a2) / 8, a4);
  Swift::Int v18 = &v5[v12];
  uint64_t v15 = a2;
  if (v8 >= a2 || v11 < 8)
  {
    uint64_t v14 = a2;
    goto LABEL_43;
  }
  uint64_t v38 = v5;
  unint64_t v23 = (uint64_t *)(a3 - 8);
  uint64_t v14 = v15;
  uint64_t v37 = v8;
  while (1)
  {
    unint64_t v24 = (unint64_t)v18;
    uint64_t v25 = *--v18;
    uint64_t v40 = v25;
    uint64_t v26 = v14 - 1;
    uint64_t v39 = *(v14 - 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v27 = sub_5CC0(&v40, &v39);
    if (v4)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_770B8(v38, (uint64_t)(v24 - (void)v38) / 8, v14);
      return 1;
    }
    char v28 = v27;
    unint64_t v29 = (unint64_t)v14;
    uint64_t v30 = v23 + 1;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v28)
    {
      BOOL v31 = v30 != (void *)v29 || (unint64_t)v23 >= v29;
      uint64_t v14 = v26;
      Swift::Int v18 = (uint64_t *)v24;
      if (v31) {
        goto LABEL_36;
      }
    }
    else
    {
      BOOL v32 = v30 != (void *)v24 || (unint64_t)v23 >= v24;
      uint64_t v26 = v18;
      uint64_t v14 = (uint64_t *)v29;
      if (v32) {
LABEL_36:
      }
        uint64_t *v23 = *v26;
    }
    if (v14 <= v37) {
      break;
    }
    --v23;
    uint64_t v5 = v38;
    if (v18 <= v38) {
      goto LABEL_43;
    }
  }
  uint64_t v5 = v38;
LABEL_43:
  uint64_t v33 = v18 - v5;
  uint64_t v34 = v5;
  uint64_t v35 = v14;
LABEL_44:
  sub_770B8(v34, v33, v35);
  return 1;
}

uint64_t sub_38D44(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    uint64_t v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    *uint64_t v11 = *(void *)(*(void *)(a4 + 56) + 8 * v16);
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    ++v11;
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_38F40(uint64_t result)
{
  if (result != 1)
  {
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_38F88(uint64_t result)
{
  if (result != 1)
  {
    swift_release();
    return swift_release();
  }
  return result;
}

unint64_t sub_38FCC()
{
  unint64_t result = qword_BD880;
  if (!qword_BD880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BD880);
  }
  return result;
}

uint64_t sub_39018()
{
  if (*(void *)(v0 + 48)) {
    sub_4950(v0 + 24);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 216, 7);
}

uint64_t sub_390B0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_390F8()
{
  return swift_release();
}

_OWORD *sub_39104(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_39118()
{
  swift_release();

  return swift_release();
}

void *sub_39154(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_retain();
  return a1;
}

void *sub_3918C(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

__n128 initializeWithTake for SendAnnouncementNeedsValueModel(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t sub_391F8(uint64_t a1, _OWORD *a2, uint64_t a3)
{
  return sub_393B0(a1, a2, a3, (void (*)(uint64_t))&_swift_release);
}

uint64_t sub_39210(uint64_t *a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 16))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      uint64_t v3 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_39264(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)__n128 result = a2;
    }
  }
  return result;
}

void type metadata accessor for TaskAttributes()
{
}

uint64_t sub_392C4()
{
  swift_release();

  return swift_bridgeObjectRelease();
}

void *sub_39300(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_39338(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_39398(uint64_t a1, _OWORD *a2, uint64_t a3)
{
  return sub_393B0(a1, a2, a3, (void (*)(uint64_t))&_swift_bridgeObjectRelease);
}

uint64_t sub_393B0(uint64_t a1, _OWORD *a2, uint64_t a3, void (*a4)(uint64_t))
{
  swift_release();
  uint64_t v7 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *a2;
  a4(v7);
  return a1;
}

uint64_t sub_39400(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 16))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_39440(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for UserDialogActParse()
{
}

uint64_t sub_39488()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *sub_394C4(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_39504(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 sub_39574(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

void *sub_39580(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_395C8(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 32))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_39608(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for HomeAutomationTargetNode()
{
}

uint64_t sub_39654(uint64_t a1)
{
  return _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0(a1, 1, v1);
}

uint64_t sub_39674(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0(a1, a2, a3);
}

uint64_t sub_3969C()
{
  return sub_8EE40();
}

uint64_t sub_396D8()
{
  return *(void *)(v0 - 288);
}

uint64_t sub_39704()
{
  return swift_bridgeObjectRelease();
}

BOOL sub_39748(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t sub_39764(uint64_t a1)
{
  return _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(a1, 0, 1, v1);
}

uint64_t sub_3978C(uint64_t a1, uint64_t a2)
{
  sub_50FC(a1, a2);
  return sub_8E710();
}

uint64_t sub_397B4()
{
  return swift_arrayDestroy();
}

uint64_t sub_397DC(uint64_t a1)
{
  *(void *)(v1 - 104) = a1;
  return v1 - 104;
}

uint64_t sub_397F0()
{
  return sub_8EBD0();
}

uint64_t sub_39834()
{
  return sub_8E7F0();
}

void sub_3985C(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 160) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_39878(uint64_t a1, uint64_t a2)
{
  sub_50FC(a1, a2);
  return sub_8E2C0();
}

uint64_t sub_398A8()
{
  return v0;
}

void sub_398C0(void *a1, NSObject *a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, a2, v5, a4, v4, 0xCu);
}

uint64_t sub_398DC()
{
  return swift_bridgeObjectRelease_n();
}

char *sub_398F4()
{
  int64_t v2 = *(void *)(v0 + 16) + 1;
  return sub_768FC(0, v2, 1, v0);
}

uint64_t sub_39918()
{
  return sub_8EBD0();
}

uint64_t sub_3995C()
{
  return v0;
}

uint64_t sub_39978()
{
  return v0;
}

uint64_t sub_39990()
{
  return *(void *)(v0 - 272);
}

void sub_3999C(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 2u);
}

uint64_t sub_399BC(uint64_t a1)
{
  *(void *)(v1 - 136) = a1;
  return v1 - 136;
}

BOOL sub_399D0@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

char *sub_399E4@<X0>(uint64_t a1@<X3>, unint64_t a2@<X8>)
{
  return sub_768FC((char *)(a2 > 1), v2, 1, a1);
}

uint64_t sub_39A04()
{
  return sub_1C9C8(v1, v0);
}

uint64_t sub_39A1C()
{
  return 0x73656D616ELL;
}

_WORD *sub_39A30(_WORD *result)
{
  *__n128 result = 0;
  return result;
}

uint64_t sub_39A3C()
{
  return sub_8EE40();
}

uint64_t sub_39A5C()
{
  uint64_t v1 = v0;
  sub_8D8E0();
  sub_5190();
  uint64_t v50 = v3;
  uint64_t v51 = v2;
  __chkstk_darwin(v2);
  sub_AAA8();
  uint64_t v6 = v5 - v4;
  uint64_t v7 = sub_48AC(&qword_BD900);
  __chkstk_darwin(v7 - 8);
  sub_AAA8();
  uint64_t v10 = v9 - v8;
  uint64_t v11 = sub_8D940();
  sub_5190();
  uint64_t v13 = v12;
  uint64_t v15 = __chkstk_darwin(v14);
  int64_t v17 = (char *)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  int64_t v19 = (char *)&v49 - v18;
  uint64_t v20 = sub_8D8B0();
  sub_5190();
  uint64_t v22 = v21;
  __chkstk_darwin(v23);
  sub_AAA8();
  uint64_t v26 = (uint64_t *)(v25 - v24);
  char v27 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v22 + 16);
  uint64_t v52 = v1;
  v27(v26, v1, v20);
  int v28 = (*(uint64_t (**)(uint64_t *, uint64_t))(v22 + 88))(v26, v20);
  if (v28 == enum case for Parse.NLv4IntentOnly(_:))
  {
    uint64_t v29 = sub_3A688();
    v30(v29);
    uint64_t v31 = *v26;
    sub_8DAE0();
    if (_s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0(v10, 1, v11) == 1)
    {
      sub_6C1C(v10, &qword_BD900);
      if (qword_BB830 != -1) {
        swift_once();
      }
      uint64_t v32 = sub_8E730();
      sub_50FC(v32, (uint64_t)qword_BFEC8);
      swift_unknownObjectRetain_n();
      uint64_t v33 = sub_8E710();
      os_log_type_t v34 = sub_8EB10();
      if (os_log_type_enabled(v33, v34))
      {
        uint64_t v35 = (uint8_t *)swift_slowAlloc();
        uint64_t v36 = swift_slowAlloc();
        uint64_t v53 = v31;
        uint64_t v54 = v36;
        *(_DWORD *)uint64_t v35 = 136315138;
        swift_unknownObjectRetain();
        sub_48AC(&qword_BD6F0);
        uint64_t v37 = sub_8E8E0();
        uint64_t v53 = sub_8758C(v37, v38, &v54);
        sub_8EBD0();
        swift_unknownObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_0, v33, v34, "Couldn't transform UserDialogAct %s into UserParse to get the UDAs.", v35, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
        swift_unknownObjectRelease();
      }
      else
      {

        swift_unknownObjectRelease_n();
      }
      return 0;
    }
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 32))(v19, v10, v11);
    uint64_t v43 = sub_39FB8();
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v19, v11);
  }
  else
  {
    if (v28 != enum case for Parse.uso(_:))
    {
      if (qword_BB830 != -1) {
        swift_once();
      }
      uint64_t v44 = sub_8E730();
      sub_50FC(v44, (uint64_t)qword_BFEC8);
      uint64_t v45 = sub_8E710();
      os_log_type_t v46 = sub_8EB10();
      if (os_log_type_enabled(v45, v46))
      {
        uint64_t v47 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v47 = 0;
        _os_log_impl(&dword_0, v45, v46, "Direct Invocation parse in Parse.usoTask", v47, 2u);
        swift_slowDealloc();
      }

      (*(void (**)(uint64_t *, uint64_t))(v22 + 8))(v26, v20);
      return 0;
    }
    uint64_t v39 = sub_3A688();
    v40(v39);
    uint64_t v42 = v50;
    uint64_t v41 = v51;
    (*(void (**)(uint64_t, uint64_t *, uint64_t))(v50 + 32))(v6, v26, v51);
    sub_8D8D0();
    uint64_t v43 = sub_39FB8();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v17, v11);
    (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v6, v41);
  }
  return v43;
}

uint64_t sub_39FB8()
{
  void (*v33)(uint64_t *__return_ptr, char *);
  uint64_t v34;
  void v36[2];
  char *v37;
  uint64_t v38;
  void (*v39)(char *, char *, uint64_t);
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  uint64_t v0 = sub_48AC((uint64_t *)&unk_BD6E0);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)v36 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_8D9C0();
  uint64_t v42 = *(void *)(v3 - 8);
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v41 = (char *)v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)v36 - v7;
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v11 = (char *)v36 - v10;
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)v36 - v12;
  uint64_t v14 = sub_8D930();
  sub_765B8(v14, (uint64_t)v2);
  swift_bridgeObjectRelease();
  if (_s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0((uint64_t)v2, 1, v3) == 1)
  {
    sub_6C1C((uint64_t)v2, (uint64_t *)&unk_BD6E0);
    if (qword_BB830 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_8E730();
    sub_50FC(v15, (uint64_t)qword_BFEC8);
    uint64_t v16 = sub_8E710();
    os_log_type_t v17 = sub_8EB10();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v18 = 0;
      _os_log_impl(&dword_0, v16, v17, "No user dialog act found in userParse", v18, 2u);
      swift_slowDealloc();
    }

    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v13, v2, v3);
    if (qword_BB830 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_8E730();
    uint64_t v20 = sub_50FC(v19, (uint64_t)qword_BFEC8);
    uint64_t v22 = v42 + 16;
    uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v42 + 16);
    v21(v11, v13, v3);
    unint64_t v38 = v20;
    uint64_t v23 = sub_8E710();
    os_log_type_t v24 = sub_8EB00();
    BOOL v25 = os_log_type_enabled(v23, v24);
    v36[1] = v8;
    uint64_t v39 = v21;
    uint64_t v40 = v22;
    if (v25)
    {
      uint64_t v37 = v13;
      uint64_t v26 = (uint64_t)v8;
      char v27 = (uint8_t *)swift_slowAlloc();
      v36[0] = swift_slowAlloc();
      uint64_t v44 = v36[0];
      *(_DWORD *)char v27 = 136315138;
      v21((char *)v26, v11, v3);
      uint64_t v28 = sub_6AC54(v26);
      uint64_t v43 = sub_8758C(v28, v29, &v44);
      uint64_t v13 = v37;
      sub_8EBD0();
      uint64_t v30 = v42;
      swift_bridgeObjectRelease();
      uint64_t v31 = *(void (**)(char *, uint64_t))(v30 + 8);
      v31(v11, v3);
      _os_log_impl(&dword_0, v23, v24, "Attempting to transform %s into UsoTask.", v27, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      uint64_t v31 = *(void (**)(char *, uint64_t))(v42 + 8);
      v31(v11, v3);
    }

    if (qword_BB880 != -1) {
      swift_once();
    }
    uint64_t v32 = sub_48AC(&qword_BD868);
    sub_50FC(v32, (uint64_t)qword_BFF68);
    uint64_t v33 = (void (*)(uint64_t *__return_ptr, char *))sub_8E2C0();
    v33(&v44, v13);
    swift_release();
    v31(v13, v3);
    os_log_type_t v34 = v44;
    swift_bridgeObjectRelease();
  }
  return v34;
}

uint64_t sub_3A688()
{
  return v0;
}

uint64_t sub_3A6A0(char a1, char a2)
{
  uint64_t v2 = 0xD00000000000001ELL;
  unint64_t v3 = 0x8000000000095640;
  switch(a2)
  {
    case 1:
      uint64_t v4 = "directInvocation";
      goto LABEL_4;
    case 2:
      uint64_t v4 = "semaphoreTimeout";
LABEL_4:
      unint64_t v3 = (unint64_t)(v4 - 32) | 0x8000000000000000;
      uint64_t v2 = 0xD000000000000010;
      break;
    case 3:
      unint64_t v3 = 0xE700000000000000;
      uint64_t v2 = 0x636972656E6567;
      break;
    default:
      break;
  }
  if (a1) {
    uint64_t v5 = 0x726F727265;
  }
  else {
    uint64_t v5 = 0x6775626564;
  }
  sub_3A898(v5, 0xE500000000000000, v2, v3);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_3A798(char a1)
{
  if (a1) {
    uint64_t v1 = 0x726F727265;
  }
  else {
    uint64_t v1 = 0x6775626564;
  }
  type metadata accessor for HomeCommunicationError(0);
  sub_8ED10();
  sub_144B4();
  v3._uint64_t countAndFlagsBits = 10;
  v3._object = (void *)0xE100000000000000;
  sub_8E960(v3);
  v4._uint64_t countAndFlagsBits = sub_14AA4();
  sub_8E960(v4);
  swift_bridgeObjectRelease();
  sub_3A898(v1, 0xE500000000000000, 0, 0xE000000000000000);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_3A898(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  if (AFIsInternalInstall() && AFProcessIsAssistantService())
  {
    if (qword_BB830 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_8E730();
    sub_50FC(v9, (uint64_t)qword_BFEC8);
    swift_bridgeObjectRetain_n();
    uint64_t v10 = sub_8E710();
    os_log_type_t v11 = sub_8EB00();
    if (os_log_type_enabled(v10, v11))
    {
      sub_1CBDC();
      uint64_t v17 = sub_3B2B0();
      *(_DWORD *)Swift::String v4 = 136315138;
      swift_bridgeObjectRetain();
      sub_8758C(a3, a4, &v17);
      sub_3B308();
      sub_8EBD0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_0, v10, v11, "#RadarUtils logging ABC from error=%s", v4, 0xCu);
      sub_3B294();
      sub_CC2C();
      sub_3B278();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_8E310();
  }
  else
  {
    if (qword_BB830 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_8E730();
    sub_50FC(v12, (uint64_t)qword_BFEC8);
    sub_3B2CC();
    uint64_t v13 = (void *)sub_8E710();
    os_log_type_t v14 = sub_8EB00();
    if (sub_22324(v14))
    {
      sub_1CBDC();
      uint64_t v17 = sub_3B2B0();
      sub_3B31C(4.8149e-34);
      sub_8758C(a1, a2, &v17);
      sub_3B308();
      sub_8EBD0();
      swift_bridgeObjectRelease_n();
      sub_3B2E8(&dword_0, v15, v16, "#RadarUtils autoBugCapture: not an internal build. Skipping filing radar for %s");
      sub_3B294();
      sub_CC2C();
      sub_3B278();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
}

void sub_3AB68(uint64_t a1)
{
}

void sub_3AB88(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, os_log_type_t a5)
{
  uint64_t v8 = sub_48AC(&qword_BD9C8);
  __chkstk_darwin(v8 - 8);
  sub_AAA8();
  uint64_t v11 = v10 - v9;
  uint64_t v12 = sub_8E5C0();
  sub_5190();
  uint64_t v37 = v13;
  __chkstk_darwin(v14);
  sub_AAA8();
  uint64_t v17 = v16 - v15;
  uint64_t v18 = sub_8E5A0();
  sub_5190();
  uint64_t v36 = v19;
  __chkstk_darwin(v20);
  sub_AAA8();
  uint64_t v23 = v22 - v21;
  if (AFIsInternalInstall() && AFProcessIsAssistantService())
  {
    sub_8E5F0();
    swift_allocObject();
    sub_8E5E0();
    sub_8E590();
    swift_bridgeObjectRetain();
    sub_8E5B0();
    if (qword_BB830 != -1) {
      swift_once();
    }
    uint64_t v24 = sub_8E730();
    sub_50FC(v24, (uint64_t)qword_BFEC8);
    sub_3B2CC();
    BOOL v25 = sub_8E710();
    os_log_type_t v26 = sub_8EB00();
    if (sub_22324(v26))
    {
      uint64_t v35 = a1;
      char v27 = (uint8_t *)sub_1CBDC();
      uint64_t v38 = swift_slowAlloc();
      *(_DWORD *)char v27 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v28 = sub_8758C(v35, a2, &v38);
      sub_E1D0(v28);
      sub_8EBD0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_0, v25, a5, "#RadarUtils Creating radar for %s", v27, 0xCu);
      swift_arrayDestroy();
      sub_3B278();
      sub_CC2C();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 16))(v11, v17, v12);
    _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(v11, 0, 1, v12);
    sub_8E5D0();
    swift_release();
    sub_3B218(v11);
    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v17, v12);
    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v23, v18);
  }
  else
  {
    if (qword_BB830 != -1) {
      swift_once();
    }
    uint64_t v29 = sub_8E730();
    sub_50FC(v29, (uint64_t)qword_BFEC8);
    sub_3B2CC();
    uint64_t v30 = (void *)sub_8E710();
    os_log_type_t v31 = sub_8EB00();
    if (sub_22324(v31))
    {
      sub_1CBDC();
      uint64_t v38 = sub_3B2B0();
      sub_3B31C(4.8149e-34);
      uint64_t v32 = sub_8758C(a1, a2, &v38);
      sub_E1D0(v32);
      sub_8EBD0();
      swift_bridgeObjectRelease_n();
      sub_3B2E8(&dword_0, v33, v34, "#RadarUtils tapToRadar: not an internal build. Skipping filing radar for \"%s\"");
      sub_3B294();
      sub_CC2C();
      sub_3B278();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
}

void sub_3B058(uint64_t a1)
{
}

void sub_3B078(uint64_t a1, uint64_t (*a2)(void), const char *a3)
{
  if (qword_BB830 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_8E730();
  sub_50FC(v5, (uint64_t)qword_BFEC8);
  oslog = sub_8E710();
  os_log_type_t v6 = a2();
  if (os_log_type_enabled(oslog, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 67109120;
    sub_8EBD0();
    _os_log_impl(&dword_0, oslog, v6, a3, v7, 8u);
    sub_3B278();
  }
  else
  {
  }
}

uint64_t sub_3B1BC()
{
  swift_release();

  return _swift_deallocClassInstance(v0, 24, 7);
}

uint64_t type metadata accessor for RadarUtils()
{
  return self;
}

uint64_t sub_3B218(uint64_t a1)
{
  uint64_t v2 = sub_48AC(&qword_BD9C8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_3B278()
{
  return swift_slowDealloc();
}

uint64_t sub_3B294()
{
  return swift_arrayDestroy();
}

uint64_t sub_3B2B0()
{
  return swift_slowAlloc();
}

uint64_t sub_3B2CC()
{
  return swift_bridgeObjectRetain_n();
}

void sub_3B2E8(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0xCu);
}

uint64_t sub_3B31C(float a1)
{
  *uint64_t v1 = a1;
  return swift_bridgeObjectRetain();
}

unsigned char *storeEnumTagSinglePayload for ReadActionType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x3B408);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ReadActionType()
{
  return &type metadata for ReadActionType;
}

unint64_t sub_3B444()
{
  unint64_t result = qword_BD9D0;
  if (!qword_BD9D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BD9D0);
  }
  return result;
}

void sub_3B490()
{
  algn_BFFC8[7] = -18;
}

uint64_t *sub_3B4C0()
{
  if (qword_BB8A0 != -1) {
    swift_once();
  }
  return &qword_BFFC0;
}

uint64_t sub_3B50C(uint64_t a1, void *a2)
{
  v7._uint64_t countAndFlagsBits = a1;
  v3._rawValue = &off_B4308;
  v7._object = a2;
  Swift::Int v4 = sub_8ED80(v3, v7);
  swift_bridgeObjectRelease();
  if (v4 == 1) {
    unsigned int v5 = 1;
  }
  else {
    unsigned int v5 = 2;
  }
  if (v4) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t sub_3B560(char a1)
{
  if (a1) {
    return 0x746165706572;
  }
  else {
    return 1684104562;
  }
}

uint64_t sub_3B58C(char *a1, char *a2)
{
  return sub_24968(*a1, *a2);
}

Swift::Int sub_3B598()
{
  return sub_24CFC();
}

uint64_t sub_3B5A0()
{
  return sub_25068();
}

Swift::Int sub_3B5A8()
{
  return sub_25348();
}

uint64_t sub_3B5B0@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_3B50C(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_3B5E0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_3B560(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_3B60C(void *a1@<X8>)
{
  *a1 = &off_B4358;
}

uint64_t sub_3B61C()
{
  sub_3B4C0();
  uint64_t v0 = qword_BFFC0;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_3B658(uint64_t a1)
{
  unint64_t v2 = sub_3BA60();

  return static AppEnumRepresentation.lnValueType.getter(a1, v2);
}

uint64_t sub_3B694(uint64_t a1)
{
  unint64_t v2 = sub_3BA60();

  return AppEnumRepresentation.lnValue.getter(a1, v2);
}

uint64_t sub_3B6D0(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_3B8C0();

  return static IntentValueTypeIdentifiable.canConvert(_:)(a1, a2, v4);
}

uint64_t sub_3B71C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_3BA60();

  return static AppEnumRepresentation.from(_:context:)(a1, a2, a3, v6);
}

uint64_t sub_3B780(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_3B8C0();

  return static IntentValueTypeIdentifiable.canConvertFrom(_:)(a1, a2, v4);
}

unint64_t sub_3B7D0()
{
  unint64_t result = qword_BD9D8;
  if (!qword_BD9D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BD9D8);
  }
  return result;
}

unint64_t sub_3B820()
{
  unint64_t result = qword_BD9E0;
  if (!qword_BD9E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BD9E0);
  }
  return result;
}

unint64_t sub_3B870()
{
  unint64_t result = qword_BD9E8;
  if (!qword_BD9E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BD9E8);
  }
  return result;
}

unint64_t sub_3B8C0()
{
  unint64_t result = qword_BD9F0;
  if (!qword_BD9F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BD9F0);
  }
  return result;
}

unint64_t sub_3B910()
{
  unint64_t result = qword_BD9F8;
  if (!qword_BD9F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BD9F8);
  }
  return result;
}

unint64_t sub_3B960()
{
  unint64_t result = qword_BDA00;
  if (!qword_BDA00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BDA00);
  }
  return result;
}

void *sub_3B9AC()
{
  return &protocol witness table for String;
}

unint64_t sub_3B9BC()
{
  unint64_t result = qword_BDA08;
  if (!qword_BDA08)
  {
    sub_9950(&qword_BDA10);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BDA08);
  }
  return result;
}

unint64_t sub_3BA14()
{
  unint64_t result = qword_BDA18;
  if (!qword_BDA18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BDA18);
  }
  return result;
}

unint64_t sub_3BA60()
{
  unint64_t result = qword_BDA20;
  if (!qword_BDA20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BDA20);
  }
  return result;
}

uint64_t type metadata accessor for ReadAnnouncementAceViewProvider()
{
  uint64_t result = qword_BDA30;
  if (!qword_BDA30) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_3BAF4()
{
  return swift_initClassMetadata2();
}

uint64_t sub_3BB44(void *a1, uint64_t (*a2)(void *, void), uint64_t a3)
{
  id v6 = [a1 announcementRecords];
  if (!v6) {
    goto LABEL_8;
  }
  Swift::String v7 = v6;
  sub_2EC98();
  unint64_t v8 = sub_8EA30();

  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_8ED40();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v9 = *(void *)((char *)&dword_10 + (v8 & 0xFFFFFFFFFFFFFF8));
  }
  swift_bridgeObjectRelease();
  if (v9)
  {
    uint64_t v10 = (void *)swift_allocObject();
    v10[2] = a2;
    v10[3] = a3;
    v10[4] = a1;
    swift_retain();
    id v11 = a1;
    sub_E56C((uint64_t)sub_3D168, (uint64_t)v10);
    return swift_release();
  }
  else
  {
LABEL_8:
    if (qword_BB830 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_8E730();
    sub_50FC(v13, (uint64_t)qword_BFEC8);
    uint64_t v14 = sub_8E710();
    os_log_type_t v15 = sub_8EB00();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v16 = 0;
      _os_log_impl(&dword_0, v14, v15, "announcementRecords are nil or empty while making a CarPlay snippet to play announcements.", v16, 2u);
      swift_slowDealloc();
    }

    return a2(_swiftEmptyArrayStorage, 0);
  }
}

uint64_t sub_3BD74(uint64_t a1, void *a2, void *a3, uint64_t (*a4)(void *, void), uint64_t a5)
{
  uint64_t v6 = v5;
  if (qword_BB830 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_8E730();
  sub_50FC(v12, (uint64_t)qword_BFEC8);
  uint64_t v13 = sub_8E710();
  os_log_type_t v14 = sub_8EB00();
  if (os_log_type_enabled(v13, v14))
  {
    os_log_type_t v15 = (uint8_t *)sub_CCE4();
    *(_WORD *)os_log_type_t v15 = 0;
    _os_log_impl(&dword_0, v13, v14, "#ReadAnnouncementAceViewProvider makeAceViewsForInterstitials", v15, 2u);
    sub_CC2C();
  }

  swift_retain();
  swift_retain();
  id v16 = a2;
  id v17 = a3;
  swift_retain();

  return sub_3BFB4(v6, v6, a1, v16, v17, a4, a5);
}

uint64_t sub_3BEC0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t (*a5)(void *, void), uint64_t a6)
{
  sub_8D8C0();
  sub_98C0(v14, v14[3]);
  char v11 = sub_8D0F0();
  sub_4950((uint64_t)v14);
  if (v11) {
    return sub_3BB44(a4, a5, a6);
  }
  sub_48AC(&qword_BDAA8);
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, void *, uint64_t (*)(void *, void), uint64_t))sub_8D5F0();
  return v13(a2, a3, a4, a5, a6);
}

uint64_t sub_3BFB4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5, uint64_t (*a6)(void *, void), uint64_t a7)
{
  uint64_t v36 = a6;
  uint64_t v32 = a1;
  uint64_t v12 = sub_48AC(&qword_BDA80);
  __chkstk_darwin(v12 - 8);
  uint64_t v31 = (uint64_t)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_8E2A0();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v30 - v19;
  uint64_t v21 = (void *)swift_allocObject();
  _OWORD v21[2] = a2;
  uint64_t v21[3] = a3;
  v21[4] = a4;
  void v21[5] = a5;
  v21[6] = v36;
  v21[7] = a7;
  swift_retain();
  swift_retain();
  id v34 = a4;
  id v33 = a5;
  uint64_t v35 = a7;
  swift_retain();
  sub_8D8C0();
  sub_98C0(v37, v37[3]);
  sub_8D090();
  (*(void (**)(char *, void, uint64_t))(v15 + 104))(v18, enum case for InputOrigin.clientGenerated(_:), v14);
  LOBYTE(a5) = sub_24B74();
  uint64_t v22 = *(void (**)(char *, uint64_t))(v15 + 8);
  v22(v18, v14);
  v22(v20, v14);
  sub_4950((uint64_t)v37);
  if (a5)
  {
    uint64_t v23 = sub_8EAD0();
    uint64_t v24 = v31;
    _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(v31, 1, 1, v23);
    BOOL v25 = (void *)swift_allocObject();
    v25[2] = 0;
    v25[3] = 0;
    v25[4] = v32;
    v25[5] = sub_3CEB8;
    v25[6] = v21;
    swift_retain();
    swift_retain();
    sub_3C6AC(v24, (uint64_t)&unk_BDA90, (uint64_t)v25);
    swift_release();
    swift_release();
    swift_release();
    id v26 = v34;
    char v27 = v33;
  }
  else
  {
    char v27 = v33;
    id v28 = v34;
    sub_3BEC0(a2, a3, (uint64_t)v34, v33, v36, v35);
    swift_release();
    swift_release();
    id v26 = v28;
  }
  swift_release();

  return swift_release();
}

uint64_t sub_3C2E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 56) = a5;
  *(void *)(v6 + 64) = a6;
  return _swift_task_switch(sub_3C300, 0, 0);
}

uint64_t sub_3C300()
{
  sub_CC60();
  sub_8D060();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_3C398;
  return sub_46498(v0 + 16);
}

uint64_t sub_3C398()
{
  sub_CC60();
  sub_7614();
  uint64_t v3 = v2 + 16;
  uint64_t v4 = *v1;
  sub_CB34();
  *uint64_t v5 = v4;
  *(void *)(v6 + 80) = v0;
  swift_task_dealloc();
  sub_4950(v3);
  if (v0) {
    Swift::String v7 = sub_3C594;
  }
  else {
    Swift::String v7 = sub_3C488;
  }
  return _swift_task_switch(v7, 0, 0);
}

uint64_t sub_3C488()
{
  if (qword_BB830 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_8E730();
  sub_50FC(v1, (uint64_t)qword_BFEC8);
  uint64_t v2 = sub_8E710();
  os_log_type_t v3 = sub_8EB00();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)sub_CCE4();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_0, v2, v3, "#ReadAnnouncementAceViewProvider played notification sound", v4, 2u);
    sub_CC2C();
  }
  uint64_t v5 = *(void (**)(void))(v0 + 56);

  v5();
  sub_CC20();
  return v6();
}

uint64_t sub_3C594()
{
  if (qword_BB830 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_8E730();
  sub_50FC(v1, (uint64_t)qword_BFEC8);
  uint64_t v2 = sub_8E710();
  os_log_type_t v3 = sub_8EB10();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)sub_CCE4();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_0, v2, v3, "#ReadAnnouncementAceViewProvider failed to play notificaiton sound", v4, 2u);
    sub_CC2C();
  }
  swift_errorRelease();
  uint64_t v5 = *(void (**)(void))(v0 + 56);

  v5();
  sub_CC20();
  return v6();
}

uint64_t sub_3C6AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_8EAD0();
  if (_s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0(a1, 1, v6) == 1)
  {
    sub_3CFD8(a1);
  }
  else
  {
    sub_8EAC0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  }
  if (*(void *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_8EAA0();
    swift_unknownObjectRelease();
  }
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a2;
  *(void *)(v7 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_3C814(uint64_t a1, uint64_t a2, void *a3, uint64_t (*a4)(void *, void), uint64_t a5)
{
  if (qword_BB830 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_8E730();
  sub_50FC(v8, (uint64_t)qword_BFEC8);
  uint64_t v9 = sub_8E710();
  os_log_type_t v10 = sub_8EB00();
  if (os_log_type_enabled(v9, v10))
  {
    *(_WORD *)sub_CCE4() = 0;
    sub_3D174(&dword_0, v11, v12, "#ReadAnnouncementAceViewProvider makeAceViewsForHandleIntentWithUser");
    sub_CC2C();
  }

  sub_8D8C0();
  sub_98C0(v21, v21[3]);
  if ((sub_8D0F0() & 1) != 0 && (unint64_t v13 = sub_493C8(a3)) != 0)
  {
    if (v13 >> 62) {
      uint64_t v14 = sub_8ED40();
    }
    else {
      uint64_t v14 = *(void *)((char *)&dword_10 + (v13 & 0xFFFFFFFFFFFFFF8));
    }
    swift_bridgeObjectRelease();
    sub_4950((uint64_t)v21);
    if (v14)
    {
      id v15 = a3;
      uint64_t v16 = sub_75EE8();

      uint64_t v17 = sub_7646C(v16);
      uint64_t v19 = v18;
      swift_bridgeObjectRelease();
      if (v19)
      {
        sub_7637C(v17, v19, (uint64_t)a4, a5);
        return swift_bridgeObjectRelease();
      }
    }
  }
  else
  {
    sub_4950((uint64_t)v21);
  }
  return a4(_swiftEmptyArrayStorage, 0);
}

uint64_t sub_3C9DC(uint64_t a1, uint64_t a2, void *a3, uint64_t (*a4)(void *, void))
{
  if (qword_BB830 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_8E730();
  sub_50FC(v6, (uint64_t)qword_BFEC8);
  uint64_t v7 = sub_8E710();
  os_log_type_t v8 = sub_8EB00();
  if (os_log_type_enabled(v7, v8))
  {
    *(_WORD *)sub_CCE4() = 0;
    sub_3D174(&dword_0, v9, v10, "#ReadAnnouncementAceViewProvider makeCommandsAfterAceViewsForHandleIntentWithUser");
    sub_CC2C();
  }

  sub_8D8C0();
  sub_98C0(v21, v21[3]);
  if ((sub_8D0F0() & 1) == 0 || (unint64_t v11 = sub_493C8(a3)) == 0)
  {
    sub_4950((uint64_t)v21);
    return a4(_swiftEmptyArrayStorage, 0);
  }
  if (v11 >> 62) {
    uint64_t v12 = sub_8ED40();
  }
  else {
    uint64_t v12 = *(void *)((char *)&dword_10 + (v11 & 0xFFFFFFFFFFFFFF8));
  }
  swift_bridgeObjectRelease();
  sub_4950((uint64_t)v21);
  if (!v12) {
    return a4(_swiftEmptyArrayStorage, 0);
  }
  if (qword_BB858 != -1) {
    swift_once();
  }
  unint64_t v13 = (void *)sub_8D1C0();
  uint64_t v14 = sub_8E710();
  os_log_type_t v15 = sub_8EB00();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = (uint8_t *)sub_CCE4();
    *(_WORD *)uint64_t v16 = 0;
    _os_log_impl(&dword_0, v14, v15, "Sending stop announcement command in makeCommandsAfterAceViewsForHandleIntentWithUser().", v16, 2u);
    sub_CC2C();
  }

  sub_48AC(&qword_BE170);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_8FC30;
  *(void *)(v17 + 32) = v13;
  v21[0] = v17;
  sub_8EA50();
  uint64_t v18 = (void *)v21[0];
  id v19 = v13;
  a4(v18, 0);

  return swift_bridgeObjectRelease();
}

uint64_t sub_3CC58()
{
  return swift_release();
}

uint64_t sub_3CC68()
{
  uint64_t v0 = sub_764AC();
  swift_release();

  return _swift_deallocClassInstance(v0, 72, 7);
}

uint64_t sub_3CCB8()
{
  return type metadata accessor for ReadAnnouncementAceViewProvider();
}

uint64_t sub_3CCC0(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_3CD9C;
  return v6(a1);
}

uint64_t sub_3CD9C()
{
  sub_CC60();
  sub_7614();
  uint64_t v1 = *v0;
  sub_CB34();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_CC20();
  return v3();
}

uint64_t sub_3CE60()
{
  swift_release();
  swift_release();

  swift_release();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_3CEB8()
{
  return sub_3BEC0(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void **)(v0 + 40), *(uint64_t (**)(void *, void))(v0 + 48), *(void *)(v0 + 56));
}

uint64_t sub_3CEC8()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_3CF10(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_C6E0;
  return sub_3C2E0(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_3CFD8(uint64_t a1)
{
  uint64_t v2 = sub_48AC(&qword_BDA80);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_3D038()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_3D070(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_C6E0;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_BDA98 + dword_BDA98);
  return v6(a1, v4);
}

uint64_t sub_3D128()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_3D168(uint64_t a1)
{
  return sub_83EC(a1, *(void (**)(uint64_t, uint64_t))(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32));
}

void sub_3D174(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v5, a4, v6, 2u);
}

uint64_t type metadata accessor for ReadAnnouncementCATs()
{
  uint64_t result = qword_BDAB0;
  if (!qword_BDAB0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_3D1DC()
{
  return swift_initClassMetadata2();
}

uint64_t sub_3D21C()
{
  return sub_13638();
}

uint64_t sub_3D244()
{
  return sub_13638();
}

uint64_t sub_3D26C(uint64_t a1)
{
  uint64_t v2 = sub_48AC(&qword_BD490);
  __chkstk_darwin(v2 - 8);
  sub_AAA8();
  uint64_t v5 = v4 - v3;
  sub_48AC(&qword_BDB00);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_8FA10;
  uint64_t v7 = (uint64_t *)(v6 + 48);
  strcpy((char *)(v6 + 32), "announcerName");
  *(_WORD *)(v6 + 46) = -4864;
  sub_3D5F0(a1, v5, &qword_BD490);
  uint64_t v8 = sub_8E3D0();
  if (_s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0(v5, 1, v8) == 1)
  {
    sub_6C1C(v5, &qword_BD490);
    *(_OWORD *)uint64_t v7 = 0u;
    *(_OWORD *)(v6 + 64) = 0u;
  }
  else
  {
    *(void *)(v6 + 72) = v8;
    uint64_t v9 = sub_C9F4(v7);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v9, v5, v8);
  }
  sub_8E350();
  return swift_bridgeObjectRelease();
}

uint64_t sub_3D400()
{
  return sub_13638();
}

uint64_t sub_3D428(uint64_t a1, uint64_t a2)
{
  return sub_3D47C(a1, a2);
}

uint64_t sub_3D47C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_8E460();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  sub_AAA8();
  uint64_t v8 = v7 - v6;
  uint64_t v9 = sub_48AC(&qword_BC7B8);
  __chkstk_darwin(v9 - 8);
  sub_AAA8();
  sub_3D5F0(a1, v11 - v10, &qword_BC7B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v8, a2, v4);
  uint64_t v12 = sub_8E340();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a2, v4);
  sub_6C1C(a1, &qword_BC7B8);
  return v12;
}

uint64_t sub_3D5E8()
{
  return type metadata accessor for ReadAnnouncementCATs();
}

uint64_t sub_3D5F0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_48AC(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for ReadAnnouncementCATsSimple()
{
  uint64_t result = qword_BDB08;
  if (!qword_BDB08) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_3D69C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_3D6DC()
{
  sub_CC60();
  uint64_t v0 = sub_3E08C();
  uint64_t v1 = (void *)sub_3E0B8(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_3E088;
  sub_14250();
  unint64_t v3 = sub_3E0AC(48);
  return v4(v3);
}

uint64_t sub_3D77C()
{
  sub_CC60();
  uint64_t v0 = sub_3E08C();
  uint64_t v1 = (void *)sub_3E0B8(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_3E088;
  sub_14250();
  unint64_t v3 = sub_3E0AC(29);
  return v4(v3);
}

uint64_t sub_3D81C()
{
  sub_CC60();
  uint64_t v0 = sub_3E08C();
  uint64_t v1 = (void *)sub_3E0B8(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_3E088;
  sub_14250();
  unint64_t v3 = sub_3E0AC(38);
  return v4(v3);
}

uint64_t sub_3D8BC()
{
  sub_CC60();
  v1[2] = v2;
  v1[3] = v0;
  sub_48AC(&qword_BD490);
  v1[4] = swift_task_alloc();
  return _swift_task_switch(sub_3D94C, 0, 0);
}

uint64_t sub_3D94C()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = v0[2];
  sub_48AC(&qword_BDB00);
  uint64_t v3 = swift_allocObject();
  v0[5] = v3;
  *(_OWORD *)(v3 + 16) = xmmword_8FA10;
  uint64_t v4 = (uint64_t *)(v3 + 48);
  strcpy((char *)(v3 + 32), "announcerName");
  *(_WORD *)(v3 + 46) = -4864;
  sub_3D5F0(v2, v1, &qword_BD490);
  uint64_t v5 = sub_8E3D0();
  int v6 = _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0(v1, 1, v5);
  uint64_t v7 = v0[4];
  if (v6 == 1)
  {
    sub_6C1C(v0[4], &qword_BD490);
    *(_OWORD *)uint64_t v4 = 0u;
    *(_OWORD *)(v3 + 64) = 0u;
  }
  else
  {
    *(void *)(v3 + 72) = v5;
    uint64_t v8 = sub_C9F4(v4);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(v8, v7, v5);
  }
  uint64_t v9 = (void *)sub_3E08C();
  v0[6] = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_3DAF8;
  sub_14250();
  return v11(0xD000000000000025);
}

uint64_t sub_3DAF8(uint64_t a1)
{
  sub_7614();
  uint64_t v4 = *v2;
  *(void *)(v5 + 56) = v1;
  swift_task_dealloc();
  if (v1)
  {
    return _swift_task_switch(sub_3DC30, 0, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    int v6 = *(uint64_t (**)(uint64_t))(v4 + 8);
    return v6(a1);
  }
}

uint64_t sub_3DC30()
{
  sub_CC60();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_3DC98()
{
  sub_CC60();
  uint64_t v0 = sub_3E08C();
  uint64_t v1 = (void *)sub_3E0B8(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_3DD38;
  sub_14250();
  unint64_t v3 = sub_3E0AC(43);
  return v4(v3);
}

uint64_t sub_3DD38()
{
  sub_CC60();
  uint64_t v3 = v2;
  sub_7614();
  uint64_t v7 = *v1;
  uint64_t v4 = swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (!v0) {
    uint64_t v4 = v3;
  }
  return v5(v4);
}

uint64_t sub_3DE10(uint64_t a1, uint64_t a2)
{
  return sub_3DE64(a1, a2);
}

uint64_t sub_3DE64(uint64_t a1, uint64_t a2)
{
  sub_8E460();
  sub_12B34();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_AAA8();
  uint64_t v10 = v9 - v8;
  uint64_t v11 = sub_48AC(&qword_BC7B8);
  __chkstk_darwin(v11 - 8);
  sub_AAA8();
  sub_3D5F0(a1, v13 - v12, &qword_BC7B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v10, a2, v2);
  uint64_t v14 = sub_8E3E0();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a2, v2);
  sub_6C1C(a1, &qword_BC7B8);
  return v14;
}

uint64_t sub_3DFA4(uint64_t a1, uint64_t a2)
{
  sub_8E460();
  sub_12B34();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  sub_AAA8();
  uint64_t v9 = v8 - v7;
  swift_allocObject();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v9, a2, v2);
  uint64_t v10 = sub_8E3F0();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a2, v2);
  return v10;
}

uint64_t sub_3E080()
{
  return type metadata accessor for ReadAnnouncementCATsSimple();
}

uint64_t sub_3E08C()
{
  return swift_task_alloc();
}

unint64_t sub_3E0AC(uint64_t a1)
{
  return a1 & 0xFFFFFFFFFFFFLL | 0xD000000000000000;
}

uint64_t sub_3E0B8(uint64_t result)
{
  *(void *)(v1 + 16) = result;
  return result;
}

BOOL sub_3E0C4()
{
  sub_8D8B0();
  sub_CB04();
  __chkstk_darwin(v0);
  sub_8D840();
  uint64_t v1 = sub_ACE4();
  int v3 = v2(v1);
  int v4 = enum case for Parse.directInvocation(_:);
  if (v3 == enum case for Parse.directInvocation(_:))
  {
    if (qword_BB830 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_8E730();
    sub_50FC(v5, (uint64_t)qword_BFEC8);
    uint64_t v6 = sub_8E710();
    os_log_type_t v7 = sub_8EB00();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl(&dword_0, v6, v7, "#ReadAnnouncementFlow handling direct invocation.", v8, 2u);
      swift_slowDealloc();
    }
  }
  uint64_t v9 = sub_ACE4();
  v10(v9);
  return v3 == v4;
}

uint64_t sub_3E260()
{
  return sub_8CE00();
}

uint64_t sub_3E2EC(uint64_t a1)
{
  v2[29] = a1;
  v2[30] = v1;
  sub_8E460();
  v2[31] = sub_CBA4();
  uint64_t v3 = sub_48AC(&qword_BDC80);
  v2[32] = v3;
  sub_CB1C(v3);
  v2[33] = v4;
  v2[34] = swift_task_alloc();
  v2[35] = swift_task_alloc();
  uint64_t v5 = sub_8D8B0();
  v2[36] = v5;
  sub_CB1C(v5);
  v2[37] = v6;
  v2[38] = sub_CBA4();
  return _swift_task_switch(sub_3E3F0, 0, 0);
}

uint64_t sub_3E3F0()
{
  if (qword_BB830 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_8E730();
  *(void *)(v0 + 312) = sub_50FC(v1, (uint64_t)qword_BFEC8);
  uint64_t v2 = sub_8E710();
  os_log_type_t v3 = sub_8EB00();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_0, v2, v3, "#ReadAnnouncementFlow executeRCH with async producers", v4, 2u);
    swift_slowDealloc();
  }
  uint64_t v5 = *(void *)(v0 + 240);

  sub_C940(v5 + 64, v0 + 16);
  sub_C940(v5 + 16, v0 + 56);
  sub_8CEB0();
  uint64_t v6 = *(void *)(v0 + 40);
  uint64_t v7 = sub_C9A4(v0 + 16, v6);
  sub_CB04();
  uint64_t v9 = v8;
  uint64_t v10 = sub_CBA4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v10, v7, v6);
  uint64_t v11 = type metadata accessor for SharedGlobals();
  *(void *)(v0 + 160) = v11;
  *(void *)(v0 + 168) = &off_B6D60;
  uint64_t v12 = sub_C9F4((uint64_t *)(v0 + 136));
  sub_CA58(v10, (uint64_t)v12);
  type metadata accessor for ReadAnnouncementFlowStrategy();
  uint64_t v13 = (uint64_t *)swift_allocObject();
  *(void *)(v0 + 320) = v13;
  uint64_t v14 = *(void *)(v0 + 160);
  uint64_t v15 = sub_C9A4(v0 + 136, v14);
  sub_CB04();
  uint64_t v17 = v16;
  uint64_t v18 = sub_CBA4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v18, v15, v14);
  void v13[5] = v11;
  v13[6] = (uint64_t)&off_B6D60;
  id v19 = sub_C9F4(v13 + 2);
  sub_CA58(v18, (uint64_t)v19);
  sub_C928((long long *)(v0 + 56), (uint64_t)(v13 + 7));
  sub_C928((long long *)(v0 + 96), (uint64_t)(v13 + 12));
  sub_4950(v0 + 136);
  swift_task_dealloc();
  sub_4950(v0 + 16);
  swift_task_dealloc();
  sub_8D840();
  uint64_t v20 = (void *)swift_task_alloc();
  *(void *)(v0 + 328) = v20;
  *uint64_t v20 = v0;
  v20[1] = sub_3E708;
  uint64_t v21 = *(void *)(v0 + 304);
  return sub_3F92C(v21, 0);
}

uint64_t sub_3E708(uint64_t a1)
{
  uint64_t v4 = (void *)*v2;
  uint64_t v5 = (void *)*v2;
  sub_CB34();
  void *v6 = v5;
  void *v6 = *v2;
  v5[42] = v1;
  swift_task_dealloc();
  uint64_t v7 = v4[38];
  uint64_t v8 = v4[37];
  uint64_t v9 = v4[36];
  if (v1)
  {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
    uint64_t v10 = sub_3EC08;
  }
  else
  {
    v5[43] = a1;
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
    uint64_t v10 = sub_3E888;
  }
  return _swift_task_switch(v10, 0, 0);
}

uint64_t sub_3E888()
{
  uint64_t v20 = (void *)v0[43];
  uint64_t v1 = v0[35];
  uint64_t v19 = v0[33];
  uint64_t v21 = v0[32];
  uint64_t v2 = v0[30] + 64;
  uint64_t v17 = v0[30];
  uint64_t v18 = (void *)v2;
  sub_8D10(0, &qword_BDC88);
  sub_8D10(0, &qword_BDC90);
  sub_8CDD0();
  uint64_t v3 = *(void *)(v17 + 56);
  sub_C940(v2, (uint64_t)(v0 + 22));
  type metadata accessor for ReadAnnouncementCATsSimple();
  swift_retain();
  sub_8E450();
  uint64_t v4 = sub_8E400();
  type metadata accessor for HomeCommunicationDisplayTextCATsSimple();
  sub_8E450();
  uint64_t v5 = sub_8E400();
  uint64_t v6 = v0[25];
  uint64_t v7 = sub_C9A4((uint64_t)(v0 + 22), v6);
  sub_CB04();
  uint64_t v9 = v8;
  uint64_t v10 = sub_CBA4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v10, v7, v6);
  uint64_t v11 = sub_3F350(v3, v10, v4, v5);
  sub_4950((uint64_t)(v0 + 22));
  swift_task_dealloc();
  v0[27] = v11;
  type metadata accessor for ReadAnnouncementIntentHandledStrategy();
  sub_3F4E8(&qword_BDC98, (void (*)(uint64_t))type metadata accessor for ReadAnnouncementIntentHandledStrategy);
  sub_8CD30();
  sub_8CD90();
  sub_8CD40();
  sub_8CDA0();
  uint64_t v12 = sub_ACE4();
  v13(v12);
  sub_48AC(&qword_BDCA0);
  swift_allocObject();
  sub_8CDE0();
  uint64_t v14 = sub_98C0(v18, *(void *)(v17 + 88));
  sub_98C0(v14 + 2, v14[5]);
  v0[28] = sub_78DB4();
  sub_48AC(&qword_BDCA8);
  sub_3F494();
  sub_8CDF0();
  swift_release();
  sub_8D290();
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v1, v21);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v15 = (uint64_t (*)(void))v0[1];
  return v15();
}

uint64_t sub_3EC08()
{
  swift_release();
  uint64_t v1 = sub_8E710();
  os_log_type_t v2 = sub_8EB10();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_0, v1, v2, "#ReadAnnouncementFlow Error thrown while creating RCH flow", v3, 2u);
    swift_slowDealloc();
  }

  sub_8D2A0();
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_3ED1C()
{
  sub_4950(v0 + 16);
  swift_release();
  sub_4950(v0 + 64);
  uint64_t v1 = v0 + OBJC_IVAR____TtC35HomeCommunicationFlowDelegatePlugin20ReadAnnouncementFlow_input;
  uint64_t v2 = sub_8D860();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t sub_3ED98()
{
  sub_3ED1C();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return _swift_deallocClassInstance(v0, v1, v2);
}

uint64_t sub_3EDF0()
{
  return type metadata accessor for ReadAnnouncementFlow();
}

uint64_t type metadata accessor for ReadAnnouncementFlow()
{
  uint64_t result = qword_BDBB0;
  if (!qword_BDBB0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_3EE40()
{
  uint64_t result = sub_8D860();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

BOOL sub_3EEEC()
{
  return sub_3E0C4();
}

uint64_t sub_3EF08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_3EFB8;
  return Flow.onAsync(input:)(a1, a2, a3);
}

uint64_t sub_3EFB8(uint64_t a1)
{
  sub_7614();
  uint64_t v3 = *v1;
  sub_CB34();
  *uint64_t v4 = v3;
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v3 + 8);
  return v5(a1);
}

uint64_t sub_3F088()
{
  return sub_3E260();
}

uint64_t sub_3F0AC(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_3F148;
  return sub_3E2EC(a1);
}

uint64_t sub_3F148()
{
  sub_7614();
  uint64_t v1 = *v0;
  sub_CB34();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v1 + 8);
  return v3();
}

uint64_t sub_3F210(uint64_t a1, uint64_t a2)
{
  uint64_t AnnouncementFlow = type metadata accessor for ReadAnnouncementFlow();

  return Flow<>.exitValue.getter(AnnouncementFlow, a2);
}

void *sub_3F24C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v10 = sub_8D160();
  __chkstk_darwin(v10 - 8);
  uint64_t v14 = type metadata accessor for SharedGlobals();
  uint64_t v15 = &off_B6D60;
  uint64_t v11 = sub_C9F4((uint64_t *)&v13);
  sub_CA58(a2, (uint64_t)v11);
  sub_8D130();
  sub_8D6E0();
  a5[2] = a1;
  sub_C928(&v13, (uint64_t)(a5 + 3));
  a5[8] = a3;
  a5[9] = a4;
  return a5;
}

void *sub_3F350(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v18 = type metadata accessor for SharedGlobals();
  uint64_t v19 = &off_B6D60;
  uint64_t v8 = sub_C9F4(v17);
  sub_CA58(a2, (uint64_t)v8);
  type metadata accessor for ReadAnnouncementIntentHandledStrategy();
  uint64_t v9 = (void *)swift_allocObject();
  uint64_t v10 = sub_C9A4((uint64_t)v17, v18);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v17[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v13 + 16))(v12);
  uint64_t v14 = sub_3F24C(a1, (uint64_t)v12, a3, a4, v9);
  sub_4950((uint64_t)v17);
  return v14;
}

unint64_t sub_3F494()
{
  unint64_t result = qword_BDCB0;
  if (!qword_BDCB0)
  {
    sub_9950(&qword_BDCA8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BDCB0);
  }
  return result;
}

uint64_t sub_3F4E8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_3F530()
{
  uint64_t v0 = sub_8D890();
  sub_5190();
  uint64_t v2 = v1;
  __chkstk_darwin(v3);
  uint64_t v31 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_8D8B0();
  sub_5190();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_BB830 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_8E730();
  sub_50FC(v11, (uint64_t)qword_BFEC8);
  uint64_t v12 = sub_8E710();
  os_log_type_t v13 = sub_8EB00();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)sub_CCE4();
    uint64_t v30 = v5;
    *(_WORD *)uint64_t v14 = 0;
    _os_log_impl(&dword_0, v12, v13, "#ReadAnnouncementFlowStrategy.actionForInput() handling", v14, 2u);
    uint64_t v5 = v30;
    sub_CC2C();
  }

  sub_8D840();
  if ((*(unsigned int (**)(char *, uint64_t))(v7 + 88))(v10, v5) == enum case for Parse.directInvocation(_:))
  {
    (*(void (**)(char *, uint64_t))(v7 + 96))(v10, v5);
    uint64_t v15 = v31;
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v31, v10, v0);
    if (sub_8D870() == 0xD000000000000036 && v16 == 0x80000000000961B0)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v21 = sub_8EE40();
      swift_bridgeObjectRelease();
      if ((v21 & 1) == 0)
      {
        id v26 = sub_8E710();
        os_log_type_t v27 = sub_8EB00();
        if (os_log_type_enabled(v26, v27))
        {
          *(_WORD *)sub_CCE4() = 0;
          sub_404AC(&dword_0, v28, v29, "#ReadAnnouncementFlowStrategy the action is not a read direct invocation. Ignoring to let layer above handle this.");
          sub_CC2C();
        }

        sub_8D210();
        return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v15, v0);
      }
    }
    uint64_t v22 = sub_8E710();
    os_log_type_t v23 = sub_8EB00();
    if (os_log_type_enabled(v22, v23))
    {
      *(_WORD *)sub_CCE4() = 0;
      sub_404AC(&dword_0, v24, v25, "#ReadAnnouncementFlowStrategy user tapped the play button. Handling direct invocation.");
      sub_CC2C();
    }

    sub_8D200();
    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v15, v0);
  }
  uint64_t v17 = sub_8E710();
  os_log_type_t v18 = sub_8EB00();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = (uint8_t *)sub_CCE4();
    *(_WORD *)uint64_t v19 = 0;
    _os_log_impl(&dword_0, v17, v18, "#ReadAnnouncementFlowStrategy the action is not a direct invocation. Ignoring to let layer above handle this.", v19, 2u);
    sub_CC2C();
  }

  sub_8D210();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v5);
}

uint64_t sub_3F92C(uint64_t a1, uint64_t a2)
{
  *(void *)(v3 + 16) = a2;
  *(void *)(v3 + 24) = v2;
  return _swift_task_switch(sub_3F94C, 0, 0);
}

uint64_t sub_3F94C()
{
  if (qword_BB830 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_8E730();
  sub_50FC(v1, (uint64_t)qword_BFEC8);
  uint64_t v2 = sub_8E710();
  os_log_type_t v3 = sub_8EB00();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)sub_CCE4();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_0, v2, v3, "#ReadAnnouncementFlowStrategy makeIntentFromParse() called", v4, 2u);
    sub_CC2C();
  }
  uint64_t v5 = v0[2];

  uint64_t v6 = (void *)v0[2];
  if (v5)
  {
    id v18 = (id)v0[2];
  }
  else
  {
    id v7 = objc_allocWithZone((Class)INReadAnnouncementIntent);
    id v18 = sub_47CC4(1, 0, 0, 1);
  }
  uint64_t v8 = (void *)v0[3];
  sub_98C0(v8 + 12, v8[15]);
  sub_8D050();
  uint64_t v10 = v8[10];
  uint64_t v9 = v8[11];
  sub_98C0(v8 + 7, v10);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 16);
  id v12 = v6;
  char v13 = v11(v10, v9);
  id v14 = sub_1CFF0(v13);
  id v15 = [v14 _className];

  sub_8E8D0();
  swift_retain();
  sub_8D040();
  sub_8CEC0();
  swift_release();
  uint64_t v16 = (uint64_t (*)(id))v0[1];
  return v16(v18);
}

uint64_t sub_3FB9C(uint64_t a1, uint64_t a2)
{
  return sub_8D030();
}

uint64_t sub_3FBC8()
{
  sub_4950(v0 + 16);
  sub_4950(v0 + 56);
  sub_4950(v0 + 96);
  return v0;
}

uint64_t sub_3FBF8()
{
  sub_3FBC8();

  return _swift_deallocClassInstance(v0, 136, 7);
}

uint64_t type metadata accessor for ReadAnnouncementFlowStrategy()
{
  return self;
}

uint64_t sub_3FC50()
{
  return sub_3F530();
}

uint64_t sub_3FC68(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_3FD00;
  return sub_3F92C((uint64_t)v4, a2);
}

uint64_t sub_3FD00(uint64_t a1)
{
  sub_7614();
  uint64_t v4 = *v2;
  sub_CB34();
  *uint64_t v5 = v4;
  uint64_t v6 = swift_task_dealloc();
  id v7 = *(uint64_t (**)(uint64_t))(v4 + 8);
  if (!v1) {
    uint64_t v6 = a1;
  }
  return v7(v6);
}

uint64_t sub_3FDD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t AnnouncementFlowStrategy = type metadata accessor for ReadAnnouncementFlowStrategy();

  return RCHFlowStrategyAsync.makeParameterMetadata(intent:)(a1, AnnouncementFlowStrategy, a3);
}

uint64_t sub_3FE20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_404A8;
  return RCHFlowStrategyAsync.makeErrorResponse(error:)(a1, a2, a3, a4);
}

uint64_t sub_3FEE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v10;
  uint64_t AnnouncementFlowStrategy = type metadata accessor for ReadAnnouncementFlowStrategy();
  *uint64_t v10 = v5;
  v10[1] = sub_404A8;
  return ResolveConfirmFlowStrategyAsync.makeAppDoesNotSupportIntentResponse(app:intent:)(a1, a2, a3, AnnouncementFlowStrategy, a5);
}

uint64_t sub_3FFB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v10;
  uint64_t AnnouncementFlowStrategy = type metadata accessor for ReadAnnouncementFlowStrategy();
  *uint64_t v10 = v5;
  v10[1] = sub_404A8;
  return ResolveConfirmFlowStrategyAsync.makeAppNotFoundOnDeviceResponse(app:intent:)(a1, a2, a3, AnnouncementFlowStrategy, a5);
}

uint64_t sub_4007C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v10;
  uint64_t AnnouncementFlowStrategy = type metadata accessor for ReadAnnouncementFlowStrategy();
  *uint64_t v10 = v5;
  v10[1] = sub_404A8;
  return ResolveConfirmFlowStrategyAsync.makeDeviceIncompatibleResponse(app:intent:)(a1, a2, a3, AnnouncementFlowStrategy, a5);
}

uint64_t sub_40148(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  id v12 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v12;
  uint64_t AnnouncementFlowStrategy = type metadata accessor for ReadAnnouncementFlowStrategy();
  void *v12 = v6;
  v12[1] = sub_3F148;
  return ResolveConfirmFlowStrategyAsync.makeErrorResponse(error:app:intent:)(a1, a2, a3, a4, AnnouncementFlowStrategy, a6);
}

uint64_t sub_40224(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  id v12 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v12;
  uint64_t AnnouncementFlowStrategy = type metadata accessor for ReadAnnouncementFlowStrategy();
  void *v12 = v6;
  v12[1] = sub_404A8;
  return RouteConfirmIntentResponseFlowStrategyAsync.makeFailureConfirmingIntentResponse(app:intent:intentResponse:)(a1, a2, a3, a4, AnnouncementFlowStrategy, a6);
}

uint64_t sub_40300(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  uint64_t AnnouncementFlowStrategy = type metadata accessor for ReadAnnouncementFlowStrategy();
  *uint64_t v8 = v4;
  v8[1] = sub_3EFB8;
  return IntentExtensionCommunicatingAsync.makeIntentExecutionBehavior(app:intent:)(a1, a2, AnnouncementFlowStrategy, a4);
}

uint64_t sub_403C4()
{
  return sub_40460(&qword_BDD90);
}

uint64_t sub_403F8()
{
  return sub_40460(qword_BDD98);
}

uint64_t sub_4042C()
{
  return sub_40460(qword_BDDC0);
}

uint64_t sub_40460(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for ReadAnnouncementFlowStrategy();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_404A0(uint64_t a1)
{
  return sub_3FB9C(a1, v1);
}

void sub_404AC(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v5, a4, v6, 2u);
}

unint64_t sub_404CC()
{
  return 0xD000000000000013;
}

unint64_t sub_404E8()
{
  return 0xD000000000000016;
}

uint64_t sub_40508()
{
  sub_8EC40(104);
  v1._uint64_t countAndFlagsBits = 0xD000000000000025;
  v1._object = (void *)0x80000000000977B0;
  sub_8E960(v1);
  sub_8E540();
  sub_40928();
  v2._uint64_t countAndFlagsBits = 0xD000000000000021;
  v2._object = (void *)0x80000000000977E0;
  sub_8E960(v2);
  sub_8E540();
  sub_48AC(&qword_BDDD8);
  v3._uint64_t countAndFlagsBits = sub_8E8E0();
  sub_8E960(v3);
  swift_bridgeObjectRelease();
  v4._object = (void *)0x8000000000097810;
  v4._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
  sub_8E960(v4);
  sub_8E540();
  sub_40928();
  v5._uint64_t countAndFlagsBits = 10506;
  v5._object = (void *)0xE200000000000000;
  sub_8E960(v5);
  return 0;
}

uint64_t sub_40668()
{
  return sub_40508();
}

uint64_t destroy for ReadAnnouncementIntent()
{
  swift_release();
  swift_release();

  return swift_release();
}

void *_s35HomeCommunicationFlowDelegatePlugin22ReadAnnouncementIntentVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for ReadAnnouncementIntent(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for ReadAnnouncementIntent(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ReadAnnouncementIntent(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 24))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ReadAnnouncementIntent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ReadAnnouncementIntent()
{
  return &type metadata for ReadAnnouncementIntent;
}

unint64_t sub_40868()
{
  unint64_t result = qword_BDDE0;
  if (!qword_BDDE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BDDE0);
  }
  return result;
}

unint64_t sub_408B4(uint64_t a1)
{
  unint64_t result = sub_408DC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_408DC()
{
  unint64_t result = qword_BDE00;
  if (!qword_BDE00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BDE00);
  }
  return result;
}

uint64_t sub_40928()
{
  return sub_8ED10();
}

uint64_t sub_40948()
{
  sub_CC60();
  v1[121] = v0;
  v1[115] = v2;
  v1[109] = v3;
  uint64_t v4 = sub_48AC(&qword_BD490);
  sub_1CCBC(v4);
  v1[127] = sub_CBA4();
  uint64_t v5 = sub_8D760();
  v1[128] = v5;
  sub_CB1C(v5);
  v1[129] = v6;
  v1[130] = sub_CBA4();
  sub_46200();
  return _swift_task_switch(v7, v8, v9);
}

uint64_t sub_40A00()
{
  if (qword_BB830 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_8E730();
  os_log_type_t v3 = sub_50FC(v2, (uint64_t)qword_BFEC8);
  uint64_t v4 = sub_8E710();
  os_log_type_t v5 = sub_8EB00();
  if (os_log_type_enabled(v4, v5))
  {
    *(_WORD *)sub_CCE4() = 0;
    sub_46384(&dword_0, v4, v6, "#ReadAnnouncementIntentHandledStrategy makeIntentHandledResponse");
    sub_CC2C();
  }

  sub_48AC(&qword_BDF88);
  uint64_t v7 = (void *)sub_8D610();
  if (sub_460B8(v7))
  {
    sub_46404();
    if (v9) {
      uint64_t v10 = sub_8ED40();
    }
    else {
      uint64_t v10 = *(void *)(v8 + 16);
    }
    swift_bridgeObjectRelease();
    BOOL v11 = v10 == 0;
  }
  else
  {
    BOOL v11 = 1;
  }
  id v12 = (void *)(v0 + 696);
  *(unsigned char *)(v0 + 1140) = v11;
  uint64_t v13 = sub_8E710();
  os_log_type_t v14 = sub_8EB00();
  if (sub_46278(v14))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 67109120;
    *(_DWORD *)(v0 + 1136) = v11;
    id v12 = (void *)(v0 + 696);
    sub_8EBD0();
    _os_log_impl(&dword_0, v13, v1, "#ReadAnnouncementIntentHandledStrategy isAnnouncementRecordsNilOrEmpty: %{BOOL}d.", v15, 8u);
    sub_CC2C();
  }

  uint64_t v16 = *(void *)(v0 + 968);
  uint64_t v17 = swift_allocObject();
  *(void *)(v0 + 1048) = v17;
  *(unsigned char *)(v17 + 16) = v11;
  *(void *)(v17 + 24) = v16;
  swift_retain();
  swift_retain();
  sub_8D10(255, &qword_BDFD0);
  swift_asyncLet_begin();
  id v18 = sub_8E710();
  os_log_type_t v19 = sub_8EB00();
  if (sub_46278(v19))
  {
    uint64_t v20 = (_WORD *)sub_CCE4();
    sub_46378(v20);
    sub_46414(&dword_0, v18, v1, "#ReadAnnouncementIntentHandledStrategy makeCommandsAfterAceViewsForHandleIntentWithUser");
    sub_CC2C();
  }
  uint64_t v21 = *(void *)(v0 + 1040);
  uint64_t v22 = *(void *)(v0 + 1032);
  uint64_t v23 = *(void *)(v0 + 1024);
  uint64_t v24 = *(void *)(v0 + 968);

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16))(v21, v24+ OBJC_IVAR____TtC35HomeCommunicationFlowDelegatePlugin37ReadAnnouncementIntentHandledStrategy_completionOutputManifest, v23);
  sub_8D8C0();
  uint64_t v25 = *(void *)(v0 + 728);
  sub_98C0(v12, *(void *)(v0 + 720));
  char v26 = sub_8D0F0();
  sub_4950((uint64_t)v12);
  if (v26)
  {
    os_log_type_t v27 = (void *)sub_8D610();
    if (sub_460B8(v27))
    {
      sub_46404();
      uint64_t v30 = v29 ? sub_8ED40() : *(void *)(v28 + 16);
      swift_bridgeObjectRelease();
      if (v30)
      {
        if (qword_BB858 != -1) {
          swift_once();
        }
        uint64_t v31 = sub_8D1C0();
        uint64_t v32 = sub_8E710();
        os_log_type_t v33 = sub_8EB00();
        if (sub_46278(v33))
        {
          id v34 = (_WORD *)sub_CCE4();
          sub_46378(v34);
          sub_46414(&dword_0, v32, (os_log_type_t)v25, "#ReadAnnouncementIntentHandledStrategySending stop announcement command in makeCommandsAfterAceViewsForHandleIntentWithUser().");
          sub_CC2C();
        }

        sub_48AC(&qword_BE170);
        uint64_t v35 = sub_462D4();
        *(_OWORD *)(v35 + 16) = xmmword_8FC30;
        *(void *)(v35 + 32) = v31;
        sub_8EA50();
        sub_8D740();
      }
    }
    uint64_t v36 = sub_8E710();
    os_log_type_t v37 = sub_8EB00();
    if (os_log_type_enabled(v36, v37))
    {
      uint64_t v38 = (_WORD *)sub_CCE4();
      sub_46378(v38);
      sub_46414(&dword_0, v36, v37, "#ReadAnnouncementIntentHandledStrategy making intent handled output for Carplay");
      sub_CC2C();
    }

    uint64_t v39 = (void *)sub_8D610();
    uint64_t v40 = sub_75EE8();

    sub_7646C(v40);
    uint64_t v42 = v41;
    swift_bridgeObjectRelease();
    if (v42)
    {
      sub_8E910();
      swift_bridgeObjectRelease();
    }
    uint64_t v46 = v0 + 928;
    uint64_t v49 = sub_8E3D0();
    sub_46438(v49);
    sub_48AC(&qword_BE170);
    uint64_t v50 = sub_462D4();
    *(void *)(v0 + 1056) = v50;
    *(_OWORD *)(v50 + 16) = xmmword_8FC30;
    uint64_t v48 = sub_40FF0;
  }
  else
  {
    uint64_t v43 = sub_8E710();
    os_log_type_t v44 = sub_8EB00();
    if (sub_22324(v44))
    {
      uint64_t v45 = (_WORD *)sub_CCE4();
      sub_46378(v45);
      sub_46414(&dword_0, v43, v3, "#ReadAnnouncementIntentHandledStrategy making intent handled output");
      sub_CC2C();
    }

    uint64_t v46 = v0 + 784;
    *(void *)(v0 + 1096) = sub_8D3A0();
    sub_CB8C();
    *(void *)(v0 + 824) = sub_8D390();
    sub_48AC(&qword_BE170);
    uint64_t v47 = sub_462D4();
    *(void *)(v0 + 1104) = v47;
    *(_OWORD *)(v47 + 16) = xmmword_8FC30;
    uint64_t v48 = sub_4126C;
  }
  return _swift_asyncLet_get_throwing(v0 + 16, v0 + 776, v48, v46);
}

uint64_t sub_40FF0()
{
  *(void *)(v1 + 1064) = v0;
  if (v0) {
    return sub_461D8((uint64_t)sub_41568);
  }
  else {
    return sub_461D8((uint64_t)sub_4101C);
  }
}

uint64_t sub_4101C()
{
  sub_46250();
  uint64_t v1 = (void *)v0[97];
  sub_462F8(v0[132]);
  v0[134] = v6;
  id v2 = v1;
  swift_task_alloc();
  sub_4625C();
  v0[135] = v3;
  *os_log_type_t v3 = v4;
  v3[1] = sub_410E4;
  return sub_43A64();
}

uint64_t sub_410E4()
{
  sub_CC60();
  sub_7614();
  sub_461E4();
  *os_log_type_t v3 = v2;
  uint64_t v4 = *v1;
  sub_CB34();
  *os_log_type_t v5 = v4;
  *(void *)(v6 + 1088) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  sub_46200();
  return _swift_task_switch(v7, v8, v9);
}

uint64_t sub_411DC()
{
  sub_46250();
  sub_463BC();
  uint64_t v0 = sub_46238();
  v1(v0);
  uint64_t v2 = sub_461F0();
  return _swift_asyncLet_finish(v2);
}

uint64_t sub_41258()
{
  return sub_461D8((uint64_t)sub_461D4);
}

uint64_t sub_4126C()
{
  *(void *)(v1 + 1112) = v0;
  if (v0) {
    return sub_461D8((uint64_t)sub_417A4);
  }
  else {
    return sub_461D8((uint64_t)sub_41298);
  }
}

uint64_t sub_41298()
{
  sub_46250();
  uint64_t v1 = (void *)v0[97];
  sub_462F8(v0[138]);
  v0[140] = v11;
  id v2 = v1;
  swift_task_alloc();
  sub_4625C();
  v0[141] = v3;
  *os_log_type_t v3 = v4;
  v3[1] = sub_4136C;
  sub_4648C();
  return dispatch thunk of ResponseGenerating.makeResponseOutput(dialog:outputGenerationManifest:)(v5, v6, v7, v8, v9);
}

uint64_t sub_4136C()
{
  sub_CC60();
  sub_7614();
  uint64_t v1 = *v0;
  sub_CB34();
  *id v2 = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  sub_46200();
  return _swift_task_switch(v3, v4, v5);
}

uint64_t sub_41450()
{
  sub_1425C();
  (*(void (**)(void, void))(v0[129] + 8))(v0[130], v0[128]);
  swift_release();
  uint64_t v1 = sub_461F0();
  return _swift_asyncLet_finish(v1);
}

uint64_t sub_414E0()
{
  return sub_461D8((uint64_t)sub_414F4);
}

uint64_t sub_414F4()
{
  sub_CC60();
  swift_release_n();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_46228();
  return v0();
}

uint64_t sub_41568()
{
  sub_46458();
  uint64_t v1 = v0[130];
  uint64_t v2 = v0[129];
  uint64_t v3 = v0[128];
  uint64_t v4 = v0[127];
  *(void *)(v0[132] + 16) = 0;
  swift_release();
  sub_2E798(v4);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v5 = sub_461F0();
  return _swift_asyncLet_finish(v5);
}

uint64_t sub_41620()
{
  return sub_461D8((uint64_t)sub_41634);
}

uint64_t sub_41634()
{
  sub_1425C();
  sub_462B4();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_CC20();
  return v0();
}

uint64_t sub_416A4()
{
  sub_46250();
  sub_463BC();
  uint64_t v0 = sub_46238();
  v1(v0);
  uint64_t v2 = sub_461F0();
  return _swift_asyncLet_finish(v2);
}

uint64_t sub_41720()
{
  return sub_461D8((uint64_t)sub_41734);
}

uint64_t sub_41734()
{
  sub_1425C();
  sub_462B4();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_CC20();
  return v0();
}

uint64_t sub_417A4()
{
  sub_46250();
  *(void *)(*(void *)(v0 + 1104) + 16) = 0;
  swift_release();
  uint64_t v1 = sub_46238();
  v2(v1);
  swift_release();
  uint64_t v3 = sub_461F0();
  return _swift_asyncLet_finish(v3);
}

uint64_t sub_41840()
{
  return sub_461D8((uint64_t)sub_41854);
}

uint64_t sub_41854()
{
  sub_1425C();
  sub_462B4();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_CC20();
  return v0();
}

uint64_t sub_418C4(uint64_t a1, char a2, uint64_t a3)
{
  *(unsigned char *)(v3 + 96) = a2;
  *(void *)(v3 + 64) = a1;
  *(void *)(v3 + 72) = a3;
  return _swift_task_switch(sub_418E8, 0, 0);
}

uint64_t sub_418E8()
{
  sub_CC60();
  if (*(unsigned char *)(v0 + 96) == 1)
  {
    uint64_t v1 = (void *)swift_task_alloc();
    *(void *)(v0 + 80) = v1;
    *uint64_t v1 = v0;
    v1[1] = sub_419E8;
    return sub_3D81C();
  }
  else
  {
    uint64_t v3 = (void *)swift_task_alloc();
    *(void *)(v0 + 88) = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_41AEC;
    return sub_3DC98();
  }
}

uint64_t sub_419E8()
{
  sub_CC60();
  sub_7614();
  sub_461E4();
  *uint64_t v3 = v2;
  v2[2] = v1;
  v2[3] = v4;
  v2[4] = v0;
  sub_462EC();
  uint64_t v5 = *v1;
  sub_CB34();
  void *v6 = v5;
  swift_task_dealloc();
  if (v0)
  {
    sub_CC20();
    return v7();
  }
  else
  {
    sub_46200();
    return _swift_task_switch(v9, v10, v11);
  }
}

uint64_t sub_41AE0()
{
  return sub_4620C(*(void *)(v0 + 24));
}

uint64_t sub_41AEC()
{
  sub_CC60();
  sub_7614();
  sub_461E4();
  *uint64_t v3 = v2;
  v2[5] = v1;
  v2[6] = v4;
  v2[7] = v0;
  sub_462EC();
  uint64_t v5 = *v1;
  sub_CB34();
  void *v6 = v5;
  swift_task_dealloc();
  if (v0)
  {
    sub_CC20();
    return v7();
  }
  else
  {
    sub_46200();
    return _swift_task_switch(v9, v10, v11);
  }
}

uint64_t sub_41BE4()
{
  return sub_4620C(*(void *)(v0 + 48));
}

uint64_t sub_41BF0()
{
  sub_CC60();
  v1[121] = v0;
  v1[115] = v2;
  v1[109] = v3;
  uint64_t v4 = sub_48AC(&qword_BD490);
  sub_1CCBC(v4);
  v1[127] = sub_CBA4();
  uint64_t v5 = sub_48AC(&qword_BDF88);
  v1[128] = v5;
  sub_CB1C(v5);
  v1[129] = v6;
  v1[130] = *(void *)(v7 + 64);
  v1[131] = sub_CBA4();
  sub_46200();
  return _swift_task_switch(v8, v9, v10);
}

uint64_t sub_41CB4()
{
  sub_46458();
  uint64_t v1 = v0[131];
  uint64_t v2 = v0[129];
  uint64_t v3 = v0[128];
  uint64_t v4 = v0[121];
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 16))(v1, v0[115], v3);
  unint64_t v5 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v6 = swift_allocObject();
  v0[132] = v6;
  *(void *)(v6 + 16) = v4;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v2 + 32))(v6 + v5, v1, v3);
  swift_retain();
  swift_retain();
  sub_8D10(255, &qword_BDFD0);
  swift_asyncLet_begin();
  uint64_t v7 = (void *)swift_task_alloc();
  v0[133] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_41E30;
  return sub_42C24();
}

uint64_t sub_41E30()
{
  sub_CC60();
  sub_7614();
  uint64_t v1 = *v0;
  sub_CB34();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_46200();
  return _swift_task_switch(v3, v4, v5);
}

uint64_t sub_41EF8()
{
  sub_46250();
  sub_8D8C0();
  sub_98C0((void *)(v0 + 696), *(void *)(v0 + 720));
  char v1 = sub_8D0F0();
  sub_4950(v0 + 696);
  if (v1)
  {
    uint64_t v2 = (void *)sub_8D610();
    if (sub_460B8(v2))
    {
      sub_46404();
      if (v4) {
        uint64_t v5 = sub_8ED40();
      }
      else {
        uint64_t v5 = *(void *)(v3 + 16);
      }
      swift_bridgeObjectRelease();
      BOOL v6 = v5 == 0;
    }
    else
    {
      BOOL v6 = 1;
    }
    *(unsigned char *)(v0 + 1152) = v6;
    uint64_t v17 = (void *)sub_8D610();
    uint64_t v18 = sub_75EE8();

    sub_7646C(v18);
    uint64_t v20 = v19;
    swift_bridgeObjectRelease();
    if (v20)
    {
      sub_8E910();
      swift_bridgeObjectRelease();
    }
    uint64_t v21 = sub_8E3D0();
    sub_46438(v21);
    if (qword_BB830 != -1) {
      swift_once();
    }
    uint64_t v22 = sub_8E730();
    uint64_t v23 = (void *)sub_3978C(v22, (uint64_t)qword_BFEC8);
    os_log_type_t v24 = sub_8EB00();
    if (sub_22324(v24))
    {
      *(_WORD *)sub_CCE4() = 0;
      sub_404AC(&dword_0, v25, v26, "#ReadAnnouncementIntentHandledStrategy makePreHandleIntentOutput Interstitial for CarPlay");
      sub_CC2C();
    }

    sub_48AC(&qword_BE170);
    uint64_t v27 = sub_462D4();
    *(void *)(v0 + 1072) = v27;
    *(_OWORD *)(v27 + 16) = xmmword_8FC30;
    uint64_t v13 = sub_421F0;
    uint64_t v14 = v0 + 16;
    uint64_t v15 = v0 + 824;
    uint64_t v16 = v0 + 928;
  }
  else
  {
    if (qword_BB830 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_8E730();
    uint64_t v8 = (void *)sub_3978C(v7, (uint64_t)qword_BFEC8);
    os_log_type_t v9 = sub_8EB00();
    if (sub_22324(v9))
    {
      *(_WORD *)sub_CCE4() = 0;
      sub_404AC(&dword_0, v10, v11, "#ReadAnnouncementIntentHandledStrategy makePreHandleIntentOutput Interstitial");
      sub_CC2C();
    }

    *(void *)(v0 + 1112) = sub_8D3A0();
    sub_CB8C();
    *(void *)(v0 + 776) = sub_8D390();
    sub_48AC(&qword_BE170);
    uint64_t v12 = sub_462D4();
    *(void *)(v0 + 1120) = v12;
    *(_OWORD *)(v12 + 16) = xmmword_8FC30;
    uint64_t v13 = sub_42464;
    uint64_t v14 = v0 + 16;
    uint64_t v15 = v0 + 824;
    uint64_t v16 = v0 + 784;
  }
  return _swift_asyncLet_get_throwing(v14, v15, v13, v16);
}

uint64_t sub_421F0()
{
  *(void *)(v1 + 1080) = v0;
  if (v0) {
    return sub_461D8((uint64_t)sub_42760);
  }
  else {
    return sub_461D8((uint64_t)sub_4221C);
  }
}

uint64_t sub_4221C()
{
  sub_46250();
  uint64_t v1 = (void *)v0[103];
  sub_462F8(v0[134]);
  v0[136] = v6;
  id v2 = v1;
  swift_task_alloc();
  sub_4625C();
  v0[137] = v3;
  *uint64_t v3 = v4;
  v3[1] = sub_422E4;
  return sub_43A64();
}

uint64_t sub_422E4()
{
  sub_CC60();
  sub_7614();
  sub_461E4();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_CB34();
  *uint64_t v5 = v4;
  *(void *)(v6 + 1104) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  sub_46200();
  return _swift_task_switch(v7, v8, v9);
}

uint64_t sub_423DC()
{
  sub_1425C();
  sub_2E798(*(void *)(v0 + 1016));
  uint64_t v1 = sub_461F0();
  return _swift_asyncLet_finish(v1);
}

uint64_t sub_42450()
{
  return sub_461D8((uint64_t)sub_461C8);
}

uint64_t sub_42464()
{
  *(void *)(v1 + 1128) = v0;
  if (v0) {
    return sub_461D8((uint64_t)sub_42960);
  }
  else {
    return sub_461D8((uint64_t)sub_42490);
  }
}

uint64_t sub_42490()
{
  sub_46250();
  uint64_t v1 = v0[140];
  uint64_t v2 = v0[121];
  uint64_t v3 = (void *)v0[103];
  *(void *)(v1 + 32) = v3;
  uint64_t v13 = v1;
  sub_8EA50();
  v0[142] = v13;
  uint64_t v4 = v2
     + OBJC_IVAR____TtC35HomeCommunicationFlowDelegatePlugin37ReadAnnouncementIntentHandledStrategy_completionOutputManifest;
  id v5 = v3;
  swift_task_alloc();
  sub_4625C();
  v0[143] = v6;
  void *v6 = v7;
  v6[1] = sub_42580;
  sub_4648C();
  return dispatch thunk of ResponseGenerating.makeResponseOutput(dialog:outputGenerationManifest:)(v8, v9, v4, v10, v11);
}

uint64_t sub_42580()
{
  sub_CC60();
  sub_7614();
  uint64_t v1 = *v0;
  sub_CB34();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  sub_46200();
  return _swift_task_switch(v3, v4, v5);
}

uint64_t sub_42664()
{
  sub_1425C();
  swift_release();
  uint64_t v0 = sub_461F0();
  return _swift_asyncLet_finish(v0);
}

uint64_t sub_426D8()
{
  return sub_461D8((uint64_t)sub_426EC);
}

uint64_t sub_426EC()
{
  sub_CC60();
  swift_release_n();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_46228();
  return v0();
}

uint64_t sub_42760()
{
  sub_1425C();
  uint64_t v1 = *(void *)(v0 + 1016);
  *(void *)(*(void *)(v0 + 1072) + 16) = 0;
  swift_release();
  sub_2E798(v1);
  uint64_t v2 = sub_461F0();
  return _swift_asyncLet_finish(v2);
}

uint64_t sub_427E4()
{
  return sub_461D8((uint64_t)sub_427F8);
}

uint64_t sub_427F8()
{
  sub_1425C();
  sub_46294();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_CC20();
  return v0();
}

uint64_t sub_42868()
{
  sub_1425C();
  sub_2E798(*(void *)(v0 + 1016));
  uint64_t v1 = sub_461F0();
  return _swift_asyncLet_finish(v1);
}

uint64_t sub_428DC()
{
  return sub_461D8((uint64_t)sub_428F0);
}

uint64_t sub_428F0()
{
  sub_1425C();
  sub_46294();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_CC20();
  return v0();
}

uint64_t sub_42960()
{
  sub_1425C();
  *(void *)(*(void *)(v0 + 1120) + 16) = 0;
  swift_release();
  swift_release();
  uint64_t v1 = sub_461F0();
  return _swift_asyncLet_finish(v1);
}

uint64_t sub_429E0()
{
  return sub_461D8((uint64_t)sub_429F4);
}

uint64_t sub_429F4()
{
  sub_1425C();
  sub_46294();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_CC20();
  return v0();
}

uint64_t sub_42A64(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_42B04;
  return sub_432F4();
}

uint64_t sub_42B04()
{
  sub_1425C();
  uint64_t v3 = v2;
  sub_7614();
  uint64_t v5 = v4;
  sub_461E4();
  void *v6 = v5;
  uint64_t v7 = *v1;
  sub_CB34();
  *uint64_t v8 = v7;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v9 = *(uint64_t (**)(void))(v7 + 8);
    return v9();
  }
  else
  {
    *(void *)(v5 + 32) = v3;
    sub_46200();
    return _swift_task_switch(v11, v12, v13);
  }
}

uint64_t sub_42C18()
{
  return sub_4620C(*(void *)(v0 + 32));
}

uint64_t sub_42C24()
{
  sub_CC60();
  v1[18] = v0;
  uint64_t v2 = sub_8E2A0();
  v1[19] = v2;
  sub_CB1C(v2);
  v1[20] = v3;
  v1[21] = swift_task_alloc();
  v1[22] = swift_task_alloc();
  sub_46200();
  return _swift_task_switch(v4, v5, v6);
}

uint64_t sub_42CC8()
{
  uint64_t v19 = v0;
  uint64_t v1 = v0[21];
  uint64_t v2 = v0[19];
  uint64_t v3 = v0[20];
  sub_8D8C0();
  sub_4632C();
  sub_8D090();
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))(v1, enum case for InputOrigin.clientGenerated(_:), v2);
  char v4 = sub_24B74();
  uint64_t v5 = *(void (**)(void))(v3 + 8);
  sub_4642C();
  v5();
  sub_4642C();
  v5();
  sub_4950((uint64_t)(v0 + 2));
  if (v4)
  {
    sub_8D060();
    uint64_t v6 = (void *)swift_task_alloc();
    v0[23] = v6;
    void *v6 = v0;
    v6[1] = sub_43014;
    return sub_46498((uint64_t)(v0 + 12));
  }
  else
  {
    if (qword_BB830 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_8E730();
    os_log_type_t v9 = sub_50FC(v8, (uint64_t)qword_BFEC8);
    swift_retain_n();
    uint64_t v10 = sub_8E710();
    os_log_type_t v11 = sub_8EB00();
    if (sub_463A0(v11))
    {
      log = v10;
      sub_1CBDC();
      uint64_t v18 = swift_slowAlloc();
      sub_46314(4.8149e-34);
      sub_8D8C0();
      sub_98C0(v0 + 7, v0[10]);
      sub_8D090();
      uint64_t v12 = sub_8E290();
      unint64_t v14 = v13;
      sub_4642C();
      v5();
      sub_4950((uint64_t)(v0 + 7));
      v0[17] = sub_8758C(v12, v14, &v18);
      sub_8EBD0();
      swift_bridgeObjectRelease();
      swift_release_n();
      uint64_t v10 = log;
      _os_log_impl(&dword_0, log, v9, "#ReadAnnouncementIntentHandledStrategy not playing notification sound because inputOrigin is %s", buf, 0xCu);
      swift_arrayDestroy();
      sub_CC2C();
      sub_CC2C();
    }
    else
    {
      swift_release_n();
    }

    swift_task_dealloc();
    swift_task_dealloc();
    sub_CC20();
    return v15();
  }
}

uint64_t sub_43014()
{
  sub_CC60();
  sub_7614();
  sub_461E4();
  *uint64_t v3 = v2;
  uint64_t v4 = v2 + 96;
  sub_462EC();
  uint64_t v5 = *v1;
  sub_CB34();
  void *v6 = v5;
  *(void *)(v7 + 192) = v0;
  swift_task_dealloc();
  sub_4950(v4);
  sub_46200();
  return _swift_task_switch(v8, v9, v10);
}

uint64_t sub_430F8()
{
  sub_1425C();
  if (qword_BB830 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_8E730();
  uint64_t v1 = sub_3978C(v0, (uint64_t)qword_BFEC8);
  os_log_type_t v2 = sub_8EB00();
  if (sub_463A0(v2))
  {
    *(_WORD *)sub_CCE4() = 0;
    sub_46384(&dword_0, v1, v3, "#ReadAnnouncementIntentHandledStrategy played notification sound");
    sub_CC2C();
  }

  swift_task_dealloc();
  swift_task_dealloc();
  sub_CC20();
  return v4();
}

uint64_t sub_431E4()
{
  sub_1425C();
  if (qword_BB830 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_8E730();
  uint64_t v1 = sub_3978C(v0, (uint64_t)qword_BFEC8);
  os_log_type_t v2 = sub_8EB10();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)sub_CCE4();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_0, v1, v2, "#ReadAnnouncementIntentHandledStrategy failed to play notificaiton sound", v3, 2u);
    sub_CC2C();
  }
  swift_errorRelease();

  swift_task_dealloc();
  swift_task_dealloc();
  sub_CC20();
  return v4();
}

uint64_t sub_432F4()
{
  sub_CC60();
  v1[10] = v2;
  v1[11] = v0;
  uint64_t v3 = sub_48AC(&qword_BD490);
  sub_1CCBC(v3);
  v1[12] = sub_CBA4();
  uint64_t v4 = sub_48AC(&qword_BDF88);
  v1[13] = v4;
  sub_CB1C(v4);
  v1[14] = v5;
  v1[15] = sub_CBA4();
  sub_46200();
  return _swift_task_switch(v6, v7, v8);
}

uint64_t sub_433A8()
{
  uint64_t v36 = v0;
  if (qword_BB840 != -1) {
    swift_once();
  }
  if (qword_BB848 != -1) {
    swift_once();
  }
  uint64_t v2 = v0 + 2;
  uint64_t v3 = (void *)sub_482F8();
  v0[16] = (uint64_t)v3;
  if (qword_BB830 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_8E730();
  sub_50FC(v4, (uint64_t)qword_BFEC8);
  id v5 = v3;
  uint64_t v6 = sub_8E710();
  os_log_type_t v7 = sub_8EB00();
  if (sub_46278(v7))
  {
    uint64_t v8 = (uint8_t *)sub_1CBDC();
    uint64_t v9 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 138412290;
    v0[9] = (uint64_t)v5;
    id v10 = v5;
    uint64_t v2 = v0 + 2;
    sub_8EBD0();
    *uint64_t v9 = v5;

    _os_log_impl(&dword_0, v6, v1, "#ReadAnnouncementIntentHandledStrategy Submit an ace command to update background context for announcement playback: %@", v8, 0xCu);
    sub_48AC(&qword_BD020);
    swift_arrayDestroy();
    sub_CC2C();
    sub_CC2C();
  }
  else
  {
  }
  uint64_t v12 = v0[14];
  uint64_t v11 = v0[15];
  uint64_t v13 = v0[13];
  uint64_t v14 = v0[10];
  sub_8D070();
  sub_98C0(v2, v0[5]);
  sub_8D400();
  sub_4950((uint64_t)v2);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v11, v14, v13);
  uint64_t v15 = sub_8E710();
  os_log_type_t v16 = sub_8EB00();
  if (os_log_type_enabled(v15, v16))
  {
    os_log_type_t type = v16;
    sub_1CBDC();
    uint64_t v35 = swift_slowAlloc();
    sub_46314(4.8149e-34);
    v0[7] = sub_8D620();
    sub_8E4C0();
    sub_45EC0(&qword_BDFB8, (void (*)(uint64_t))&type metadata accessor for App);
    uint64_t v17 = sub_8EE20();
    unint64_t v19 = v18;
    swift_release();
    v0[8] = sub_8758C(v17, v19, &v35);
    sub_8EBD0();
    swift_bridgeObjectRelease();
    uint64_t v20 = sub_46464();
    v21(v20);
    _os_log_impl(&dword_0, v15, type, "#ReadAnnouncementIntentHandledStrategy Creating a dialog between Confirm and Handle for playing announcements using app: %s.", buf, 0xCu);
    swift_arrayDestroy();
    sub_CC2C();
    sub_CC2C();
  }
  else
  {
    uint64_t v22 = sub_46464();
    v23(v22);
  }

  os_log_type_t v24 = (void *)sub_8D610();
  uint64_t v25 = sub_75EE8();

  sub_7646C(v25);
  uint64_t v27 = v26;
  swift_bridgeObjectRelease();
  if (v27)
  {
    sub_8E910();
    swift_bridgeObjectRelease();
    uint64_t v28 = 0;
  }
  else
  {
    uint64_t v28 = 1;
  }
  uint64_t v29 = v0[12];
  uint64_t v30 = sub_8E3D0();
  _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(v29, v28, 1, v30);
  uint64_t v31 = (void *)swift_task_alloc();
  v0[17] = (uint64_t)v31;
  *uint64_t v31 = v0;
  v31[1] = sub_4387C;
  return sub_3D8BC();
}

uint64_t sub_4387C()
{
  sub_1425C();
  uint64_t v3 = v2;
  sub_7614();
  uint64_t v5 = v4;
  sub_461E4();
  void *v6 = v5;
  uint64_t v7 = *v1;
  sub_CB34();
  *uint64_t v8 = v7;
  *(void *)(v5 + 144) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(void *)(v5 + 152) = v3;
  }
  sub_46200();
  return _swift_task_switch(v9, v10, v11);
}

uint64_t sub_4396C()
{
  sub_CC60();
  uint64_t v1 = *(void *)(v0 + 96);

  sub_2E798(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v3 = *(void *)(v0 + 152);
  return v2(v3);
}

uint64_t sub_439EC()
{
  sub_CC60();
  uint64_t v1 = *(void *)(v0 + 96);

  sub_2E798(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  sub_CC20();
  return v2();
}

uint64_t sub_43A64()
{
  sub_CC60();
  *(void *)(v1 + 1640) = v0;
  *(void *)(v1 + 1592) = v2;
  *(unsigned char *)(v1 + 1817) = v3;
  *(unsigned char *)(v1 + 1816) = v4;
  *(void *)(v1 + 1544) = v5;
  uint64_t v6 = sub_8D760();
  *(void *)(v1 + 1688) = v6;
  sub_CB1C(v6);
  *(void *)(v1 + 1736) = v7;
  *(void *)(v1 + 1744) = sub_CBA4();
  uint64_t v8 = type metadata accessor for CarPlayIntercomControlModel();
  sub_1CCBC(v8);
  *(void *)(v1 + 1752) = sub_CBA4();
  sub_46200();
  return _swift_task_switch(v9, v10, v11);
}

uint64_t sub_43B20()
{
  sub_46458();
  if (*(unsigned char *)(v0 + 1816))
  {
    if (qword_BB830 != -1) {
      swift_once();
    }
    uint64_t v1 = sub_8E730();
    uint64_t v2 = sub_3978C(v1, (uint64_t)qword_BFEC8);
    os_log_type_t v3 = sub_8EB00();
    if (sub_463A0(v3))
    {
      *(_WORD *)sub_CCE4() = 0;
      sub_46384(&dword_0, v2, v4, "#ReadAnnouncementIntentHandledStrategy makeCarPlayIntercomSnippetOutput no announcements to play. Not displaying snippet, just dialog");
      sub_CC2C();
    }
    uint64_t v5 = *(void *)(v0 + 1640);

    uint64_t v6 = sub_8D3A0();
    sub_CB8C();
    *(void *)(v0 + 1496) = sub_8D390();
    uint64_t v7 = v5
       + OBJC_IVAR____TtC35HomeCommunicationFlowDelegatePlugin37ReadAnnouncementIntentHandledStrategy_completionOutputManifest;
    swift_task_alloc();
    sub_4625C();
    *(void *)(v0 + 1808) = v8;
    *uint64_t v8 = v9;
    v8[1] = sub_4439C;
    uint64_t v10 = *(void *)(v0 + 1592);
    uint64_t v11 = *(void *)(v0 + 1544);
    return dispatch thunk of ResponseGenerating.makeResponseOutput(dialog:outputGenerationManifest:)(v11, v10, v7, v6, &protocol witness table for ResponseFactory);
  }
  else
  {
    if (qword_BB830 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_8E730();
    uint64_t v13 = sub_3978C(v12, (uint64_t)qword_BFEC8);
    os_log_type_t v14 = sub_8EB00();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (_WORD *)sub_CCE4();
      sub_46378(v15);
      sub_46414(&dword_0, v13, v14, "#ReadAnnouncementIntentHandledStrategy makeCarPlayIntercomSnippetOutput");
      sub_CC2C();
    }
    uint64_t v16 = *(void *)(v0 + 1640);
    char v17 = *(unsigned char *)(v0 + 1817);

    uint64_t v18 = swift_allocObject();
    *(void *)(v0 + 1760) = v18;
    *(unsigned char *)(v18 + 16) = v17;
    *(void *)(v18 + 24) = v16;
    swift_retain();
    swift_retain();
    swift_asyncLet_begin();
    swift_retain_n();
    swift_asyncLet_begin();
    return _swift_asyncLet_get_throwing(v0 + 656, v0 + 1416, sub_43E28, v0 + 1456);
  }
}

uint64_t sub_43E28()
{
  sub_1425C();
  v1[221] = v0;
  if (v0)
  {
    sub_46200();
    return _swift_task_switch(v2, v3, v4);
  }
  else
  {
    v1[222] = v1[177];
    v1[223] = v1[178];
    swift_bridgeObjectRetain();
    return _swift_asyncLet_get_throwing(v1 + 2, v1 + 179, sub_43EF0, v1 + 172);
  }
}

uint64_t sub_43EF0()
{
  *(void *)(v1 + 1792) = v0;
  if (v0) {
    return sub_461D8((uint64_t)sub_44604);
  }
  else {
    return sub_461D8((uint64_t)sub_43F1C);
  }
}

uint64_t sub_43F1C()
{
  uint64_t v1 = v0[219];
  uint64_t v2 = v0[218];
  uint64_t v3 = v0[217];
  uint64_t v13 = v0[211];
  uint64_t v4 = v0[205];
  swift_bridgeObjectRetain();
  CarPlayIntercomControlModel.init(playStopText:replyText:isPlaying:)();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v4+ OBJC_IVAR____TtC35HomeCommunicationFlowDelegatePlugin37ReadAnnouncementIntentHandledStrategy_completionOutputManifest, v13);
  sub_8D710();
  uint64_t v5 = sub_8D3A0();
  sub_CB8C();
  v0[181] = sub_8D390();
  v0[170] = type metadata accessor for HomeCommunicationSnippetModel();
  v0[171] = sub_45EC0(&qword_BDFB0, (void (*)(uint64_t))type metadata accessor for HomeCommunicationSnippetModel);
  uint64_t v6 = sub_C9F4(v0 + 167);
  sub_9E58(v1, (uint64_t)v6);
  swift_storeEnumTagMultiPayload();
  swift_task_alloc();
  sub_4625C();
  v0[225] = (uint64_t)v7;
  *uint64_t v7 = v8;
  v7[1] = sub_4411C;
  uint64_t v9 = v0[218];
  uint64_t v10 = v0[199];
  uint64_t v11 = v0[193];
  return dispatch thunk of ResponseGenerating.makeResponseOutput(conversationModel:dialog:outputGenerationManifest:)(v11, v0 + 167, v10, v9, v5, &protocol witness table for ResponseFactory);
}

uint64_t sub_4411C()
{
  sub_CC60();
  sub_7614();
  sub_461E4();
  *uint64_t v2 = v1;
  uint64_t v3 = v1 + 1336;
  sub_462EC();
  uint64_t v4 = *v0;
  sub_CB34();
  *uint64_t v5 = v4;
  swift_task_dealloc();
  sub_4950(v3);
  sub_46200();
  return _swift_task_switch(v6, v7, v8);
}

uint64_t sub_441E8()
{
  sub_1425C();
  uint64_t v1 = v0[219];
  (*(void (**)(void, void))(v0[217] + 8))(v0[218], v0[211]);
  sub_9EBC(v1);
  swift_release();
  uint64_t v2 = sub_461F0();
  return _swift_asyncLet_finish(v2);
}

uint64_t sub_44284()
{
  return sub_461D8((uint64_t)sub_44298);
}

uint64_t sub_44298()
{
  sub_1425C();
  swift_release();
  uint64_t v0 = sub_461F0();
  return _swift_asyncLet_finish(v0);
}

uint64_t sub_4430C()
{
  return sub_461D8((uint64_t)sub_44320);
}

uint64_t sub_44320()
{
  sub_CC60();
  swift_release_n();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_46228();
  return v0();
}

uint64_t sub_4439C()
{
  sub_CC60();
  sub_7614();
  uint64_t v1 = *v0;
  sub_CB34();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_46200();
  return _swift_task_switch(v3, v4, v5);
}

uint64_t sub_44464()
{
  sub_CC60();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_46228();
  return v0();
}

uint64_t sub_444D0()
{
  return _swift_asyncLet_finish(v0 + 16);
}

uint64_t sub_444F0()
{
  return sub_461D8((uint64_t)sub_44504);
}

uint64_t sub_44504()
{
  sub_1425C();
  swift_release();
  uint64_t v0 = sub_461F0();
  return _swift_asyncLet_finish(v0);
}

uint64_t sub_44578()
{
  return sub_461D8((uint64_t)sub_4458C);
}

uint64_t sub_4458C()
{
  sub_1425C();
  sub_463E0();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_CC20();
  return v0();
}

uint64_t sub_44604()
{
  sub_1425C();
  swift_bridgeObjectRelease();
  uint64_t v0 = sub_461F0();
  return _swift_asyncLet_finish(v0);
}

uint64_t sub_44678()
{
  return sub_461D8((uint64_t)sub_4468C);
}

uint64_t sub_4468C()
{
  sub_1425C();
  swift_release();
  uint64_t v0 = sub_461F0();
  return _swift_asyncLet_finish(v0);
}

uint64_t sub_44700()
{
  return sub_461D8((uint64_t)sub_44714);
}

uint64_t sub_44714()
{
  sub_1425C();
  sub_463E0();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_CC20();
  return v0();
}

uint64_t sub_4478C(uint64_t a1, char a2, uint64_t a3)
{
  *(unsigned char *)(v3 + 96) = a2;
  *(void *)(v3 + 64) = a1;
  *(void *)(v3 + 72) = a3;
  return _swift_task_switch(sub_447B0, 0, 0);
}

uint64_t sub_447B0()
{
  sub_CC60();
  if (*(unsigned char *)(v0 + 96) == 1)
  {
    uint64_t v1 = (void *)swift_task_alloc();
    *(void *)(v0 + 80) = v1;
    *uint64_t v1 = v0;
    v1[1] = sub_448B0;
    return sub_13B2C();
  }
  else
  {
    uint64_t v3 = (void *)swift_task_alloc();
    *(void *)(v0 + 88) = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_44A14;
    return sub_13880();
  }
}

uint64_t sub_448B0()
{
  sub_CC60();
  sub_7614();
  sub_461E4();
  *uint64_t v3 = v2;
  v2[2] = v1;
  v2[3] = v4;
  v2[4] = v0;
  sub_462EC();
  uint64_t v5 = *v1;
  sub_CB34();
  void *v6 = v5;
  swift_task_dealloc();
  if (v0)
  {
    sub_CC20();
    return v7();
  }
  else
  {
    sub_46200();
    return _swift_task_switch(v9, v10, v11);
  }
}

uint64_t sub_449A8()
{
  sub_1425C();
  uint64_t v3 = *(void **)(v2 + 64);
  sub_8E440();
  sub_4635C();
  *uint64_t v3 = v0;
  v3[1] = v1;
  sub_46228();
  return v4();
}

uint64_t sub_44A14()
{
  sub_CC60();
  sub_7614();
  sub_461E4();
  *uint64_t v3 = v2;
  v2[5] = v1;
  v2[6] = v4;
  v2[7] = v0;
  sub_462EC();
  uint64_t v5 = *v1;
  sub_CB34();
  void *v6 = v5;
  swift_task_dealloc();
  if (v0)
  {
    sub_CC20();
    return v7();
  }
  else
  {
    sub_46200();
    return _swift_task_switch(v9, v10, v11);
  }
}

uint64_t sub_44B0C()
{
  sub_1425C();
  uint64_t v3 = *(void **)(v2 + 64);
  sub_8E440();
  sub_4635C();
  *uint64_t v3 = v0;
  v3[1] = v1;
  sub_46228();
  return v4();
}

uint64_t sub_44B78(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return _swift_task_switch(sub_44B98, 0, 0);
}

uint64_t sub_44B98()
{
  sub_CC60();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_44C28;
  return sub_139B0();
}

uint64_t sub_44C28()
{
  sub_1425C();
  uint64_t v3 = v2;
  sub_7614();
  uint64_t v5 = v4;
  sub_461E4();
  void *v6 = v5;
  uint64_t v7 = *v1;
  sub_CB34();
  *uint64_t v8 = v7;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v9 = *(uint64_t (**)(void))(v7 + 8);
    return v9();
  }
  else
  {
    *(void *)(v5 + 40) = v3;
    sub_46200();
    return _swift_task_switch(v11, v12, v13);
  }
}

uint64_t sub_44D3C()
{
  sub_1425C();
  uint64_t v3 = *(void **)(v2 + 16);
  sub_8E440();
  sub_4635C();
  *uint64_t v3 = v0;
  v3[1] = v1;
  sub_46228();
  return v4();
}

uint64_t sub_44DA8()
{
  sub_CC60();
  v1[19] = v2;
  v1[20] = v0;
  v1[18] = v3;
  uint64_t v4 = sub_8CAE0();
  v1[21] = v4;
  sub_CB1C(v4);
  v1[22] = v5;
  v1[23] = sub_CBA4();
  uint64_t v6 = sub_48AC(&qword_BDF88);
  v1[24] = v6;
  sub_CB1C(v6);
  v1[25] = v7;
  v1[26] = sub_CBA4();
  sub_46200();
  return _swift_task_switch(v8, v9, v10);
}

uint64_t sub_44E6C()
{
  if (qword_BB830 != -1) {
    swift_once();
  }
  uint64_t v2 = v0[25];
  uint64_t v1 = v0[26];
  uint64_t v3 = v0[24];
  uint64_t v4 = v0[19];
  uint64_t v5 = sub_8E730();
  sub_50FC(v5, (uint64_t)qword_BFEC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  uint64_t v6 = sub_8E710();
  os_log_type_t v7 = sub_8EB00();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)sub_1CBDC();
    *(_DWORD *)uint64_t v8 = 134217984;
    uint64_t v9 = (void *)sub_8D610();
    id v10 = [v9 code];

    sub_4642C();
    v11();
    v0[17] = v10;
    sub_8EBD0();
    _os_log_impl(&dword_0, v6, v7, "#ReadAnnouncementIntentHandledStrategy makeFailureHandlingIntentResponseAsync reason=%ld", v8, 0xCu);
    sub_CC2C();
  }
  else
  {
    (*(void (**)(void, void))(v0[25] + 8))(v0[26], v0[24]);
  }

  uint64_t v13 = v0[22];
  uint64_t v12 = v0[23];
  uint64_t v14 = v0[21];
  type metadata accessor for RadarUtils();
  uint64_t inited = swift_initStackObject();
  sub_8E330();
  sub_CB8C();
  *(void *)(inited + 16) = sub_8E320();
  sub_8D8C0();
  sub_4632C();
  sub_8D080();
  v0[10] = sub_8CAD0();
  v0[11] = v16;
  v0[12] = 45;
  v0[13] = 0xE100000000000000;
  v0[14] = 95;
  v0[15] = 0xE100000000000000;
  sub_F5CC();
  sub_8EBF0();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  sub_3A6A0(1, 3);
  swift_release();
  swift_bridgeObjectRelease();
  sub_4950((uint64_t)(v0 + 2));
  char v17 = (void *)swift_task_alloc();
  v0[27] = v17;
  *char v17 = v0;
  v17[1] = sub_451B0;
  return sub_3D77C();
}

uint64_t sub_451B0()
{
  sub_1425C();
  uint64_t v3 = v2;
  sub_7614();
  uint64_t v5 = v4;
  sub_461E4();
  void *v6 = v5;
  uint64_t v7 = *v1;
  sub_CB34();
  *uint64_t v8 = v7;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    sub_CC20();
    return v9();
  }
  else
  {
    *(void *)(v5 + 224) = v3;
    sub_46200();
    return _swift_task_switch(v11, v12, v13);
  }
}

uint64_t sub_452CC()
{
  sub_46458();
  uint64_t v1 = (void *)v0[28];
  uint64_t v2 = v0[20];
  uint64_t v3 = sub_8D3A0();
  sub_CB8C();
  v0[16] = sub_8D390();
  sub_48AC(&qword_BE170);
  uint64_t v4 = sub_462D4();
  *(_OWORD *)(v4 + 16) = xmmword_8FC30;
  *(void *)(v4 + 32) = v1;
  uint64_t v13 = v4;
  sub_8EA50();
  v0[29] = v13;
  uint64_t v5 = v2
     + OBJC_IVAR____TtC35HomeCommunicationFlowDelegatePlugin37ReadAnnouncementIntentHandledStrategy_completionOutputManifest;
  id v6 = v1;
  swift_task_alloc();
  sub_4625C();
  v0[30] = v7;
  *uint64_t v7 = v8;
  v7[1] = sub_453F8;
  sub_4648C();
  return dispatch thunk of ResponseGenerating.makeResponseOutput(dialog:outputGenerationManifest:)(v9, v10, v5, v3, v11);
}

uint64_t sub_453F8()
{
  sub_CC60();
  sub_7614();
  uint64_t v1 = *v0;
  sub_CB34();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  sub_46200();
  return _swift_task_switch(v3, v4, v5);
}

uint64_t sub_454DC()
{
  sub_CC60();

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_46228();
  return v1();
}

uint64_t sub_45554()
{
  swift_release();
  sub_4950(v0 + 24);
  swift_release();
  swift_release();
  uint64_t v1 = v0
     + OBJC_IVAR____TtC35HomeCommunicationFlowDelegatePlugin37ReadAnnouncementIntentHandledStrategy_completionOutputManifest;
  uint64_t v2 = sub_8D760();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t sub_455D8()
{
  sub_45554();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return _swift_deallocClassInstance(v0, v1, v2);
}

uint64_t sub_45630()
{
  return type metadata accessor for ReadAnnouncementIntentHandledStrategy();
}

uint64_t type metadata accessor for ReadAnnouncementIntentHandledStrategy()
{
  uint64_t result = qword_BDE38;
  if (!qword_BDE38) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_45680()
{
  uint64_t result = sub_8D760();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_45730(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  uint64_t AnnouncementIntentHandledStrategy = type metadata accessor for ReadAnnouncementIntentHandledStrategy();
  *uint64_t v8 = v4;
  v8[1] = sub_461CC;
  return HandleIntentFlowStrategyAsync.makePromptForDeviceUnlock(rchRecord:)(a1, a2, AnnouncementIntentHandledStrategy, a4);
}

uint64_t sub_457F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  uint64_t AnnouncementIntentHandledStrategy = type metadata accessor for ReadAnnouncementIntentHandledStrategy();
  *uint64_t v8 = v4;
  v8[1] = sub_461CC;
  return HandleIntentFlowStrategyAsync.makeHandoffForAuthenticationResponse(rchRecord:)(a1, a2, AnnouncementIntentHandledStrategy, a4);
}

uint64_t sub_458C0()
{
  unint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *unint64_t v1 = v0;
  v1[1] = sub_461CC;
  return sub_41BF0();
}

uint64_t sub_4596C()
{
  unint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *unint64_t v1 = v0;
  v1[1] = sub_461CC;
  return sub_40948();
}

uint64_t sub_45A18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  uint64_t AnnouncementIntentHandledStrategy = type metadata accessor for ReadAnnouncementIntentHandledStrategy();
  *uint64_t v8 = v4;
  v8[1] = sub_461CC;
  return HandleIntentFlowStrategyAsync.makeContinueInAppResponse(rchRecord:)(a1, a2, AnnouncementIntentHandledStrategy, a4);
}

uint64_t sub_45AE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  uint64_t AnnouncementIntentHandledStrategy = type metadata accessor for ReadAnnouncementIntentHandledStrategy();
  *uint64_t v8 = v4;
  v8[1] = sub_461CC;
  return HandleIntentFlowStrategyAsync.makeInProgressResponse(rchRecord:)(a1, a2, AnnouncementIntentHandledStrategy, a4);
}

uint64_t sub_45BA8()
{
  unint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *unint64_t v1 = v0;
  v1[1] = sub_C6E0;
  return sub_44DA8();
}

uint64_t sub_45C54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  uint64_t AnnouncementIntentHandledStrategy = type metadata accessor for ReadAnnouncementIntentHandledStrategy();
  *uint64_t v8 = v4;
  v8[1] = sub_C554;
  return IntentExtensionCommunicatingAsync.makeIntentExecutionBehavior(app:intent:)(a1, a2, AnnouncementIntentHandledStrategy, a4);
}

uint64_t sub_45D1C()
{
  return sub_45EC0(qword_BDF48, (void (*)(uint64_t))type metadata accessor for ReadAnnouncementIntentHandledStrategy);
}

uint64_t sub_45D64()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_45D9C()
{
  sub_1425C();
  uint64_t v0 = swift_task_alloc();
  unint64_t v1 = (void *)sub_46268(v0);
  *unint64_t v1 = v2;
  v1[1] = sub_461CC;
  uint64_t v3 = sub_46478();
  return sub_4478C(v3, v4, v5);
}

uint64_t sub_45E34()
{
  sub_CC60();
  uint64_t v0 = swift_task_alloc();
  unint64_t v1 = (void *)sub_46268(v0);
  *unint64_t v1 = v2;
  v1[1] = sub_461CC;
  sub_4648C();
  return sub_44B78(v3, v4);
}

uint64_t sub_45EC0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_45F08()
{
  uint64_t v1 = sub_48AC(&qword_BDF88);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_45FD8()
{
  sub_1425C();
  uint64_t v1 = v0;
  sub_48AC(&qword_BDF88);
  uint64_t v2 = swift_task_alloc();
  uint64_t v3 = (void *)sub_46268(v2);
  *uint64_t v3 = v4;
  v3[1] = sub_C6E0;
  return sub_42A64(v1);
}

uint64_t sub_460B8(void *a1)
{
  id v2 = [a1 announcementRecords];

  if (!v2) {
    return 0;
  }
  sub_8D10(0, (unint64_t *)&qword_BD4A8);
  uint64_t v3 = sub_8EA30();

  return v3;
}

uint64_t sub_46130()
{
  sub_1425C();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_46268(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_461CC;
  uint64_t v3 = sub_46478();
  return sub_418C4(v3, v4, v5);
}

uint64_t sub_461D8(uint64_t a1)
{
  return _swift_task_switch(a1, 0, 0);
}

uint64_t sub_461F0()
{
  return v0;
}

uint64_t sub_4620C@<X0>(uint64_t a1@<X8>)
{
  *uint64_t v1 = a1;
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_46228()
{
  return v0 + 8;
}

uint64_t sub_46238()
{
  return v0;
}

uint64_t sub_46268(uint64_t result)
{
  *(void *)(v1 + 16) = result;
  return result;
}

BOOL sub_46278(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t sub_46294()
{
  return swift_release_n();
}

uint64_t sub_462B4()
{
  return swift_release_n();
}

uint64_t sub_462D4()
{
  return swift_allocObject();
}

uint64_t sub_462F8@<X0>(uint64_t a1@<X8>)
{
  *(void *)(a1 + 32) = v1;
  return sub_8EA50();
}

void sub_46314(float a1)
{
  *uint64_t v1 = a1;
}

uint64_t sub_4632C()
{
  uint64_t v2 = *(void *)(v1 + 40);
  sub_98C0(v0, v2);
  return v2;
}

uint64_t sub_4635C()
{
  return swift_release();
}

_WORD *sub_46378(_WORD *result)
{
  *uint64_t result = 0;
  return result;
}

void sub_46384(void *a1, NSObject *a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, a2, v4, a4, v5, 2u);
}

BOOL sub_463A0(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t sub_463BC()
{
  uint64_t v2 = *(void *)(v0 + 1016);
  return sub_2E798(v2);
}

uint64_t sub_463E0()
{
  return swift_release_n();
}

void sub_46414(void *a1, NSObject *a2, os_log_type_t a3, const char *a4)
{
  _os_log_impl(a1, a2, a3, a4, v4, 2u);
}

uint64_t sub_46438(uint64_t a1)
{
  return _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(v2, v1, 1, a1);
}

uint64_t sub_46464()
{
  return v0;
}

uint64_t sub_46478()
{
  return v0;
}

uint64_t sub_46498(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_464B8, 0, 0);
}

uint64_t sub_464B8()
{
  id v1 = [objc_allocWithZone((Class)SAUIPlayNotificationSound) init];
  v0[3] = v1;
  uint64_t v2 = sub_8E8D0();
  sub_46860(v2, v3, v1);
  if (qword_BB830 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_8E730();
  sub_50FC(v4, (uint64_t)qword_BFEC8);
  uint64_t v5 = sub_8E710();
  os_log_type_t v6 = sub_8EB00();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl(&dword_0, v5, v6, "#ReadAnnouncementIntentHelper submitting playNotificationSound command", v7, 2u);
    swift_slowDealloc();
  }
  uint64_t v8 = (void *)v0[2];

  uint64_t v9 = v8[3];
  uint64_t v10 = v8[4];
  sub_98C0(v8, v9);
  uint64_t v11 = (void *)swift_task_alloc();
  v0[4] = v11;
  unint64_t v12 = sub_468C4();
  *uint64_t v11 = v0;
  v11[1] = sub_4667C;
  return AceServiceInvokerAsync.submit<A>(_:)(v1, v9, v12, v10);
}

uint64_t sub_4667C(void *a1)
{
  *(void *)(*(void *)v2 + 40) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = sub_467FC;
  }
  else
  {

    uint64_t v4 = sub_46798;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_46798()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_467FC()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_46860(uint64_t a1, uint64_t a2, void *a3)
{
  NSString v4 = sub_8E8C0();
  swift_bridgeObjectRelease();
  [a3 setNotificationType:v4];
}

unint64_t sub_468C4()
{
  unint64_t result = qword_BDFF0;
  if (!qword_BDFF0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_BDFF0);
  }
  return result;
}

uint64_t sub_46904(uint64_t a1, void *a2)
{
  v6._uint64_t countAndFlagsBits = a1;
  v3._rawValue = &off_B4380;
  v6._object = a2;
  unint64_t v4 = sub_8ED80(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 6) {
    return 6;
  }
  else {
    return v4;
  }
}

uint64_t sub_46950(char a1)
{
  uint64_t result = 0xD000000000000019;
  switch(a1)
  {
    case 1:
      uint64_t result = sub_47148();
      break;
    case 2:
      uint64_t result = sub_47114();
      break;
    case 3:
      uint64_t result = sub_47130();
      break;
    case 4:
      uint64_t result = 0x6572756C696166;
      break;
    case 5:
      return result;
    default:
      uint64_t result = sub_470F4();
      break;
  }
  return result;
}

uint64_t sub_469D0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_246B4(*a1, *a2);
}

Swift::Int sub_469DC()
{
  return sub_24D08();
}

uint64_t sub_469E4(uint64_t a1)
{
  return sub_24E6C(a1, *v1);
}

Swift::Int sub_469EC(uint64_t a1)
{
  return sub_25560(a1, *v1);
}

uint64_t sub_469F4@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_46904(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_46A24@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_46950(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_46A50(void *a1@<X8>)
{
  *a1 = &off_B4430;
}

uint64_t sub_46A60()
{
  uint64_t v0 = qword_BDFF8;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_46A98(uint64_t a1)
{
  unint64_t v2 = sub_470A8();

  return static AppEnumRepresentation.lnValueType.getter(a1, v2);
}

uint64_t sub_46AD4(uint64_t a1)
{
  unint64_t v2 = sub_470A8();

  return AppEnumRepresentation.lnValue.getter(a1, v2);
}

uint64_t sub_46B10(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_46F14();

  return static IntentValueTypeIdentifiable.canConvert(_:)(a1, a2, v4);
}

uint64_t sub_46B5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_470A8();

  return static AppEnumRepresentation.from(_:context:)(a1, a2, a3, v6);
}

uint64_t sub_46BC0(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_46F14();

  return static IntentValueTypeIdentifiable.canConvertFrom(_:)(a1, a2, v4);
}

uint64_t sub_46C0C(char a1)
{
  uint64_t result = 0xD000000000000019;
  switch(a1)
  {
    case 1:
      uint64_t result = sub_47148();
      break;
    case 2:
      uint64_t result = sub_47114();
      break;
    case 3:
      uint64_t result = sub_47130();
      break;
    case 4:
      uint64_t result = 0x6572756C696166;
      break;
    case 5:
      return result;
    default:
      uint64_t result = sub_470F4();
      break;
  }
  return result;
}

uint64_t sub_46C8C()
{
  return sub_46C0C(*v0);
}

uint64_t getEnumTagSinglePayload for ReadAnnouncementIntentResponseCode(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFB)
  {
    if (a2 + 5 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 5) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 6;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v5 = v6 - 6;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for ReadAnnouncementIntentResponseCode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x46DE8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ReadAnnouncementIntentResponseCode()
{
  return &type metadata for ReadAnnouncementIntentResponseCode;
}

unint64_t sub_46E24()
{
  unint64_t result = qword_BE008;
  if (!qword_BE008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BE008);
  }
  return result;
}

unint64_t sub_46E74()
{
  unint64_t result = qword_BE010;
  if (!qword_BE010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BE010);
  }
  return result;
}

unint64_t sub_46EC4()
{
  unint64_t result = qword_BE018;
  if (!qword_BE018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BE018);
  }
  return result;
}

unint64_t sub_46F14()
{
  unint64_t result = qword_BE020;
  if (!qword_BE020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BE020);
  }
  return result;
}

unint64_t sub_46F64()
{
  unint64_t result = qword_BE028;
  if (!qword_BE028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BE028);
  }
  return result;
}

unint64_t sub_46FB4()
{
  unint64_t result = qword_BE030;
  if (!qword_BE030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BE030);
  }
  return result;
}

unint64_t sub_47004()
{
  unint64_t result = qword_BE038;
  if (!qword_BE038)
  {
    sub_9950(&qword_BE040);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BE038);
  }
  return result;
}

unint64_t sub_4705C()
{
  unint64_t result = qword_BE048;
  if (!qword_BE048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BE048);
  }
  return result;
}

unint64_t sub_470A8()
{
  unint64_t result = qword_BE050;
  if (!qword_BE050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BE050);
  }
  return result;
}

uint64_t sub_470F4()
{
  return 0x6669636570736E75;
}

uint64_t sub_47114()
{
  return 0x6572676F72506E69;
}

uint64_t sub_47130()
{
  return 0x73736563637573;
}

uint64_t sub_47148()
{
  return 0x7964616572;
}

uint64_t type metadata accessor for ReadAnnouncementRCHFlowDelegate()
{
  uint64_t result = qword_BE068;
  if (!qword_BE068) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_471A4()
{
  return swift_initClassMetadata2();
}

uint64_t sub_471F0()
{
  return sub_47270((void (*)(void))type metadata accessor for ReadAnnouncementCATs, (void (*)(void))type metadata accessor for ReadAnnouncementTemplatingService, (uint64_t (*)(uint64_t, unsigned char *, unsigned char *, uint64_t))sub_483C8);
}

uint64_t sub_47230()
{
  return sub_47270((void (*)(void))type metadata accessor for HomeCommunicationDisplayTextCATs, (void (*)(void))type metadata accessor for DisplayTextTemplatingService, (uint64_t (*)(uint64_t, unsigned char *, unsigned char *, uint64_t))sub_E290);
}

uint64_t sub_47270(void (*a1)(void), void (*a2)(void), uint64_t (*a3)(uint64_t, unsigned char *, unsigned char *, uint64_t))
{
  uint64_t v7 = sub_8E460();
  __chkstk_darwin(v7 - 8);
  sub_AAA8();
  uint64_t v8 = sub_8D790();
  __chkstk_darwin(v8 - 8);
  sub_48228();
  sub_8D070();
  sub_8D8C0();
  sub_8D780();
  a1(0);
  sub_8E450();
  uint64_t v9 = sub_8E360();
  a2(0);
  swift_allocObject();
  return a3(v3, v12, v11, v9);
}

uint64_t sub_47398()
{
  return sub_8D6A0();
}

uint64_t sub_473D4()
{
  uint64_t v1 = sub_47230();
  sub_C940(v0 + qword_BE060, (uint64_t)v9);
  sub_C9A4((uint64_t)v9, v10);
  sub_CB04();
  __chkstk_darwin(v2);
  sub_AAA8();
  uint64_t v5 = v4 - v3;
  (*(void (**)(uint64_t))(v6 + 16))(v4 - v3);
  uint64_t v7 = sub_480B8(v1, v5);
  sub_4950((uint64_t)v9);
  return v7;
}

uint64_t *sub_474A4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_8D890();
  sub_CB04();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  sub_48228();
  uint64_t v9 = sub_8D8B0();
  sub_CB04();
  uint64_t v11 = v10;
  __chkstk_darwin(v12);
  sub_AAA8();
  uint64_t v15 = v14 - v13;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v14 - v13, a1, v9);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v11 + 88))(v15, v9) != enum case for Parse.directInvocation(_:))
  {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v15, v9);
    sub_48AC(&qword_BE0C0);
    uint64_t v23 = (uint64_t (*)(uint64_t, uint64_t))sub_8D4A0();
    return (uint64_t *)v23(a1, a2);
  }
  (*(void (**)(uint64_t, uint64_t))(v11 + 96))(v15, v9);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v2, v15, v5);
  uint64_t v16 = sub_8D880();
  if (!v16) {
    goto LABEL_11;
  }
  sub_12C38(v16, v61);
  sub_8D4C((uint64_t)v61, (uint64_t)v62, &qword_BE0C8);
  if (!v62[1]) {
    goto LABEL_11;
  }
  memcpy(__dst, v62, sizeof(__dst));
  unint64_t v17 = __dst[3];
  if (!__dst[3])
  {
    sub_47D48(v61);
LABEL_11:
    id v25 = [objc_allocWithZone((Class)INReadAnnouncementIntent) init];
LABEL_12:
    id v24 = v25;
    uint64_t v26 = sub_48240();
    v27(v26);
    return (uint64_t *)v24;
  }
  uint64_t v60 = __dst[2];
  uint64_t v18 = qword_BB830;
  swift_bridgeObjectRetain();
  if (v18 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_8E730();
  sub_50FC(v19, (uint64_t)qword_BFEC8);
  swift_bridgeObjectRetain_n();
  uint64_t v20 = sub_8E710();
  os_log_type_t v21 = sub_8EB00();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = (uint8_t *)swift_slowAlloc();
    uint64_t v65 = swift_slowAlloc();
    *(_DWORD *)uint64_t v22 = 136315138;
    swift_bridgeObjectRetain();
    v64[0] = sub_8758C(v60, v17, &v65);
    sub_8EBD0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_0, v20, v21, "Received DirectInvocation parse type, with announceId: %s", v22, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_8D4C((uint64_t)&__dst[4], (uint64_t)v64, &qword_BDDD8);
  sub_8D4C((uint64_t)v64, (uint64_t)&v65, &qword_BDDD8);
  unint64_t v29 = v66;
  if (!v66)
  {
    sub_47D48(v61);
LABEL_75:
    id v58 = objc_allocWithZone((Class)INReadAnnouncementIntent);
    id v25 = sub_47CC4(1, v60, v17, 1);
    goto LABEL_12;
  }
  uint64_t v30 = v65;
  sub_47E14((uint64_t)v64);
  uint64_t result = sub_47D48(v61);
  uint64_t v31 = HIBYTE(v29) & 0xF;
  uint64_t v32 = v30 & 0xFFFFFFFFFFFFLL;
  if ((v29 & 0x2000000000000000) != 0) {
    uint64_t v33 = HIBYTE(v29) & 0xF;
  }
  else {
    uint64_t v33 = v30 & 0xFFFFFFFFFFFFLL;
  }
  if (!v33)
  {
    sub_47E40((uint64_t)v64);
    goto LABEL_75;
  }
  if ((v29 & 0x1000000000000000) != 0)
  {
    uint64_t v35 = sub_5E620(v30, v29, 10);
    LOBYTE(v30) = v59;
    goto LABEL_62;
  }
  if ((v29 & 0x2000000000000000) == 0)
  {
    if ((v30 & 0x1000000000000000) != 0) {
      id v34 = (unsigned __int8 *)((v29 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      id v34 = (unsigned __int8 *)sub_8ECB0();
    }
    uint64_t v35 = (uint64_t)sub_5E608(v34, v32);
    LOBYTE(v30) = v36 & 1;
LABEL_62:
    sub_47E40((uint64_t)v64);
    if ((v30 & 1) == 0 && v35 == 2)
    {
      swift_bridgeObjectRelease();
      uint64_t v51 = sub_8E710();
      os_log_type_t v52 = sub_8EB10();
      if (os_log_type_enabled(v51, v52))
      {
        uint64_t v53 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v53 = 0;
        _os_log_impl(&dword_0, v51, v52, "DirectInvocation is a deliveryFailure notification. Returning nil.", v53, 2u);
        swift_slowDealloc();
      }

      uint64_t v54 = sub_48240();
      v55(v54);
      return 0;
    }
    goto LABEL_75;
  }
  if (v30 == 43)
  {
    if (!v31) {
      goto LABEL_79;
    }
    if (v31 == 1) {
      goto LABEL_48;
    }
    sub_481E4();
    if (!v40 & v39) {
      goto LABEL_48;
    }
    uint64_t v35 = v42;
    if (v41 != 2)
    {
      sub_481E4();
      if (!v40 & v39) {
        goto LABEL_48;
      }
      uint64_t v35 = 10 * v35 + v44;
      if (v43 != 3)
      {
        while (1)
        {
          sub_48218();
          if (!v40 & v39) {
            goto LABEL_48;
          }
          sub_481F4();
          if (!v40) {
            goto LABEL_48;
          }
          uint64_t v35 = v46 + v45;
          if (__OFADD__(v46, v45)) {
            goto LABEL_48;
          }
          sub_48208();
          if (v40) {
            goto LABEL_62;
          }
        }
      }
    }
LABEL_61:
    LOBYTE(v30) = 0;
    goto LABEL_62;
  }
  if (v30 != 45)
  {
    if (!v31 || (v30 - 48) > 9u) {
      goto LABEL_48;
    }
    uint64_t v35 = (v30 - 48);
    if (v31 != 1)
    {
      sub_481E4();
      if (!v40 & v39) {
        goto LABEL_48;
      }
      uint64_t v35 = 10 * (v30 - 48) + v48;
      if (v47 != 2)
      {
        while (1)
        {
          sub_48218();
          if (!v40 & v39) {
            goto LABEL_48;
          }
          sub_481F4();
          if (!v40) {
            goto LABEL_48;
          }
          uint64_t v35 = v50 + v49;
          if (__OFADD__(v50, v49)) {
            goto LABEL_48;
          }
          sub_48208();
          if (v40) {
            goto LABEL_62;
          }
        }
      }
    }
    goto LABEL_61;
  }
  if (v31)
  {
    if (v31 != 1)
    {
      sub_481E4();
      if (!(!v40 & v39))
      {
        if (v37 == 2)
        {
          LOBYTE(v30) = 0;
          uint64_t v35 = -(uint64_t)v38;
          goto LABEL_62;
        }
        if ((BYTE2(v30) - 48) <= 9u)
        {
          uint64_t v35 = -10 * v38 - (BYTE2(v30) - 48);
          if (v37 == 3) {
            goto LABEL_61;
          }
          while (1)
          {
            sub_48218();
            if (!v40 & v39) {
              break;
            }
            sub_481F4();
            if (!v40) {
              break;
            }
            uint64_t v35 = v57 - v56;
            if (__OFSUB__(v57, v56)) {
              break;
            }
            sub_48208();
            if (v40) {
              goto LABEL_62;
            }
          }
        }
      }
    }
LABEL_48:
    uint64_t v35 = 0;
    LOBYTE(v30) = 1;
    goto LABEL_62;
  }
  __break(1u);
LABEL_79:
  __break(1u);
  return result;
}

uint64_t sub_47B90()
{
  sub_C940(v0 + qword_BE058, (uint64_t)v2);
  sub_48AC(&qword_BE0B8);
  swift_allocObject();
  return sub_7E1D8(v2);
}

void sub_47BEC()
{
}

uint64_t sub_47C1C()
{
  sub_4950(v0 + qword_BE058);
  uint64_t v1 = v0 + qword_BE060;

  return sub_4950(v1);
}

uint64_t sub_47C5C()
{
  uint64_t v0 = sub_8D4B0();
  sub_4950(v0 + qword_BE058);
  sub_4950(v0 + qword_BE060);

  return _swift_deallocClassInstance(v0, 96, 7);
}

uint64_t sub_47CBC()
{
  return type metadata accessor for ReadAnnouncementRCHFlowDelegate();
}

id sub_47CC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a3)
  {
    NSString v7 = sub_8E8C0();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v7 = 0;
  }
  id v8 = [v4 initWithReadType:a1 startAnnouncementIdentifier:v7 userNotificationType:a4];

  return v8;
}

uint64_t *sub_47D48(uint64_t *a1)
{
  return a1;
}

uint64_t sub_47D90(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_47E14(uint64_t a1)
{
  return a1;
}

uint64_t sub_47E40(uint64_t a1)
{
  return a1;
}

uint64_t sub_47E6C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = sub_8E460();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = type metadata accessor for SharedGlobals();
  uint64_t v20[3] = v7;
  v20[4] = (uint64_t)&off_B6D60;
  id v8 = sub_C9F4(v20);
  sub_CA58(a2, (uint64_t)v8);
  type metadata accessor for ReadAnnouncementCATs();
  swift_retain();
  sub_8E450();
  *(void *)((char *)a3 + qword_BDA28) = sub_8E360();
  swift_release();
  sub_C940((uint64_t)v20, (uint64_t)v18);
  uint64_t v9 = sub_C9A4((uint64_t)v18, v19);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v17[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v12 + 16))(v11);
  uint64_t v17[3] = v7;
  v17[4] = (uint64_t)&off_B6D60;
  uint64_t v13 = sub_C9F4(v17);
  sub_CA58((uint64_t)v11, (uint64_t)v13);
  *(void *)((char *)a3 + *(void *)(qword_BFE00 + *a3 + 16)) = a1;
  sub_C940((uint64_t)v17, (uint64_t)a3 + *(void *)(qword_BFE00 + *a3 + 24));
  uint64_t v14 = sub_8D5E0();
  sub_4950((uint64_t)v17);
  sub_4950((uint64_t)v18);
  sub_4950((uint64_t)v20);
  return v14;
}

uint64_t sub_480B8(uint64_t a1, uint64_t a2)
{
  uint64_t v14 = type metadata accessor for SharedGlobals();
  uint64_t v15 = &off_B6D60;
  uint64_t v4 = sub_C9F4(v13);
  sub_CA58(a2, (uint64_t)v4);
  type metadata accessor for ReadAnnouncementAceViewProvider();
  uint64_t v5 = (void *)swift_allocObject();
  uint64_t v6 = sub_C9A4((uint64_t)v13, v14);
  __chkstk_darwin(v6);
  id v8 = (char *)&v13[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v9 + 16))(v8);
  uint64_t v10 = sub_47E6C(a1, (uint64_t)v8, v5);
  sub_4950((uint64_t)v13);
  return v10;
}

uint64_t sub_48240()
{
  return v0;
}

uint64_t type metadata accessor for ReadAnnouncementTemplatingService()
{
  uint64_t result = qword_BE0F0;
  if (!qword_BE0F0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_4829C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_482F8()
{
  uint64_t v1 = sub_8D370();
  sub_5190();
  uint64_t v3 = v2;
  __chkstk_darwin(v4);
  sub_160AC();
  sub_8D360();
  sub_8D2F0();
  sub_1E228(0);
  sub_8D320();
  swift_bridgeObjectRetain();
  sub_8D340();
  swift_bridgeObjectRetain();
  sub_8D350();
  uint64_t v5 = sub_8D2B0();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0, v1);
  return v5;
}

uint64_t sub_483C8(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v9 = sub_48AC(&qword_BC648);
  __chkstk_darwin(v9 - 8);
  sub_AAA8();
  uint64_t v12 = v11 - v10;
  uint64_t v13 = sub_8CAE0();
  sub_5190();
  uint64_t v15 = v14;
  __chkstk_darwin(v16);
  sub_AAA8();
  uint64_t v19 = v18 - v17;
  sub_C940((uint64_t)a3, v5 + qword_BE0D8);
  *(void *)(v5 + qword_BE0E8) = a4;
  sub_C940(a2, v5 + qword_BE0E0);
  sub_98C0(a3, a3[3]);
  swift_retain();
  sub_8D080();
  uint64_t v20 = sub_8CAD0();
  uint64_t v22 = v21;
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v19, v13);
  v30[0] = v20;
  v30[1] = v22;
  v29[0] = 45;
  v29[1] = 0xE100000000000000;
  v30[5] = 95;
  v30[6] = 0xE100000000000000;
  sub_F5CC();
  sub_8EBF0();
  swift_bridgeObjectRelease();
  type metadata accessor for INIntentSlotValueType(0);
  sub_49428((unint64_t *)&qword_BC658, type metadata accessor for INIntentSlotValueType);
  sub_8E880();
  sub_C940(a2, (uint64_t)v30);
  sub_C940((uint64_t)a3, (uint64_t)v29);
  uint64_t v23 = sub_8D790();
  uint64_t v24 = *(void *)(v23 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16))(v12, a1, v23);
  _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(v12, 0, 1, v23);
  uint64_t v25 = sub_8D500();
  swift_release();
  sub_4950(a2);
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(a1, v23);
  sub_4950((uint64_t)a3);
  return v25;
}

uint64_t sub_486FC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = sub_8E730();
  sub_5190();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  sub_160AC();
  if (a3 && (unint64_t v9 = sub_493C8(a3)) != 0)
  {
    if (v9 >> 62) {
      uint64_t v10 = sub_8ED40();
    }
    else {
      uint64_t v10 = *(void *)((char *)&dword_10 + (v9 & 0xFFFFFFFFFFFFFF8));
    }
    swift_bridgeObjectRelease();
    BOOL v11 = v10 == 0;
  }
  else
  {
    BOOL v11 = 1;
  }
  if (qword_BB830 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_50FC(v5, (uint64_t)qword_BFEC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v3, v12, v5);
  uint64_t v13 = sub_8E710();
  os_log_type_t v14 = sub_8EB00();
  if (os_log_type_enabled(v13, v14))
  {
    BOOL v21 = v11;
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 136315138;
    uint64_t v22 = v16;
    if (v21) {
      uint64_t v17 = 1702195828;
    }
    else {
      uint64_t v17 = 0x65736C6166;
    }
    if (v21) {
      unint64_t v18 = 0xE400000000000000;
    }
    else {
      unint64_t v18 = 0xE500000000000000;
    }
    uint64_t v19 = sub_8758C(v17, v18, &v22);
    sub_E1D0(v19);
    sub_8EBD0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v13, v14, "makeIntentHandledDialog isAnnouncementRecordsNilOrEmpty: %s.", v15, 0xCu);
    swift_arrayDestroy();
    sub_CC2C();
    BOOL v11 = v21;
    sub_CC2C();

    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v3, v5);
  }
  else
  {

    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v3, v5);
  }
  if (v11) {
    return sub_3D244();
  }
  else {
    return sub_3D400();
  }
}

void sub_489C0(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v11 = sub_48AC(&qword_BD490);
  __chkstk_darwin(v11 - 8);
  sub_AAA8();
  uint64_t v14 = v13 - v12;
  if (qword_BB840 != -1) {
    swift_once();
  }
  if (qword_BB848 != -1) {
    swift_once();
  }
  uint64_t v15 = (void *)sub_482F8();
  if (qword_BB830 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_8E730();
  sub_50FC(v16, (uint64_t)qword_BFEC8);
  id v17 = v15;
  unint64_t v18 = sub_8E710();
  os_log_type_t v19 = sub_8EB00();
  uint64_t v44 = v14;
  uint64_t v46 = a3;
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v43 = a2;
    uint64_t v20 = (uint8_t *)swift_slowAlloc();
    unsigned __int8 v42 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v20 = 138412290;
    uint64_t v47 = (uint64_t)v17;
    id v21 = v17;
    sub_8EBD0();
    *unsigned __int8 v42 = v17;

    a2 = v43;
    _os_log_impl(&dword_0, v18, v19, "Submit an ace command to update background context for announcement playback: %@", v20, 0xCu);
    sub_48AC(&qword_BD020);
    swift_arrayDestroy();
    sub_CC2C();
    sub_CC2C();
  }
  else
  {
  }
  sub_98C0((void *)(v6 + qword_BE0E0), *(void *)(v6 + qword_BE0E0 + 24));
  sub_8D400();
  if (!a3) {
    goto LABEL_16;
  }
  id v22 = a3;
  unint64_t v23 = sub_493C8(v22);
  if (v23)
  {
    uint64_t v24 = v23 >> 62 ? sub_8ED40() : *(void *)((char *)&dword_10 + (v23 & 0xFFFFFFFFFFFFFF8));
    swift_bridgeObjectRelease();
    if (v24)
    {

LABEL_16:
      swift_retain_n();
      uint64_t v25 = sub_8E710();
      os_log_type_t v26 = sub_8EB00();
      if (os_log_type_enabled(v25, v26))
      {
        uint64_t v27 = (uint8_t *)swift_slowAlloc();
        uint64_t v47 = swift_slowAlloc();
        *(_DWORD *)uint64_t v27 = 136315138;
        sub_8E4C0();
        sub_49428(&qword_BDFB8, (void (*)(uint64_t))&type metadata accessor for App);
        uint64_t v28 = sub_8EE20();
        uint64_t v30 = sub_8758C(v28, v29, &v47);
        sub_E1D0(v30);
        sub_8EBD0();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_0, v25, v26, "Creating a dialog between Confirm and Handle for playing announcements using app: %s.", v27, 0xCu);
        swift_arrayDestroy();
        sub_CC2C();
        sub_CC2C();
      }
      else
      {

        swift_release_n();
      }
      if (v46)
      {
        id v35 = v46;
        uint64_t v36 = sub_75EE8();
      }
      else
      {
        uint64_t v36 = 0;
      }
      sub_7646C(v36);
      uint64_t v38 = v37;
      swift_bridgeObjectRelease();
      if (v38)
      {
        sub_8E910();
        swift_bridgeObjectRelease();
        uint64_t v39 = 0;
      }
      else
      {
        uint64_t v39 = 1;
      }
      uint64_t v40 = sub_8E3D0();
      _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(v44, v39, 1, v40);
      uint64_t v41 = swift_allocObject();
      *(void *)(v41 + 16) = a4;
      *(void *)(v41 + 24) = a5;
      swift_retain();
      sub_3D26C(v44);

      swift_release();
      sub_6C1C(v44, &qword_BD490);
      return;
    }
  }
  uint64_t v31 = sub_8E710();
  os_log_type_t v32 = sub_8EB00();
  if (os_log_type_enabled(v31, v32))
  {
    uint64_t v33 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v33 = 0;
    _os_log_impl(&dword_0, v31, v32, "Skipping interstitial since there are no announcements to play.", v33, 2u);
    sub_CC2C();
  }

  sub_48AC(&qword_BE140);
  id v34 = (void (*)(uint64_t, uint64_t, void *, uint64_t, uint64_t))sub_8D510();
  v34(a1, a2, a3, a4, a5);
}

uint64_t sub_48FDC(uint64_t a1, void (*a2)(void *))
{
  uint64_t v4 = sub_8D3E0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_48AC(&qword_BC660);
  __chkstk_darwin(v8);
  uint64_t v10 = (uint64_t *)((char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = sub_48AC(&qword_BE148);
  __chkstk_darwin(v11);
  uint64_t v13 = (uint64_t *)((char *)&v15 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_F678(a1, (uint64_t)v10);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *uint64_t v13 = *v10;
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    (*(void (**)(char *, void *, uint64_t))(v5 + 32))(v7, v10, v4);
    (*(void (**)(void *, char *, uint64_t))(v5 + 16))(v13, v7, v4);
    _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0((uint64_t)v13, 0, 1, v4);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  a2(v13);
  return sub_6C1C((uint64_t)v13, &qword_BE148);
}

uint64_t sub_49214()
{
  return sub_3D21C();
}

void sub_49248()
{
}

void sub_49278()
{
}

uint64_t sub_492A8()
{
  sub_4950(v0 + qword_BE0D8);
  sub_4950(v0 + qword_BE0E0);

  return swift_release();
}

uint64_t sub_492F8()
{
  uint64_t v0 = sub_8D520();
  sub_4950(v0 + qword_BE0D8);
  sub_4950(v0 + qword_BE0E0);
  swift_release();
  return v0;
}

uint64_t sub_49350()
{
  uint64_t v0 = sub_492F8();

  return _swift_deallocClassInstance(v0, 104, 7);
}

uint64_t sub_49380()
{
  return type metadata accessor for ReadAnnouncementTemplatingService();
}

uint64_t sub_49388()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_493C0(uint64_t a1)
{
  return sub_48FDC(a1, *(void (**)(void *))(v1 + 16));
}

uint64_t sub_493C8(void *a1)
{
  id v1 = [a1 announcementRecords];
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  sub_2EC98();
  uint64_t v3 = sub_8EA30();

  return v3;
}

uint64_t sub_49428(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_49470@<X0>(uint8_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v153 = (char *)a3;
  uint64_t v150 = a1;
  uint64_t v151 = a2;
  uint64_t v137 = type metadata accessor for HomeCommunicationError(0);
  sub_16058();
  __chkstk_darwin(v5);
  sub_6FF0();
  uint64_t v136 = v6;
  sub_6FC4();
  __chkstk_darwin(v7);
  sub_22520();
  uint64_t v135 = v8;
  uint64_t v9 = sub_48AC(&qword_BE150);
  __chkstk_darwin(v9 - 8);
  sub_6FF0();
  unint64_t v141 = v10;
  sub_6FC4();
  __chkstk_darwin(v11);
  sub_22520();
  uint64_t v139 = (void *)v12;
  uint64_t v13 = sub_48AC(&qword_BC5D0);
  __chkstk_darwin(v13 - 8);
  sub_6FF0();
  uint64_t v140 = v14;
  sub_6FC4();
  __chkstk_darwin(v15);
  unint64_t v138 = (char *)&v133 - v16;
  sub_6FC4();
  __chkstk_darwin(v17);
  sub_22520();
  uint64_t v143 = v18;
  uint64_t v149 = sub_8E760();
  sub_5190();
  uint64_t v144 = v19;
  __chkstk_darwin(v20);
  sub_6FF0();
  uint64_t v142 = v21;
  sub_6FC4();
  __chkstk_darwin(v22);
  sub_22520();
  uint64_t v147 = v23;
  uint64_t v24 = sub_8E800();
  sub_5190();
  uint64_t v148 = v25;
  __chkstk_darwin(v26);
  sub_6FF0();
  uint64_t v134 = v27;
  sub_6FC4();
  uint64_t v29 = __chkstk_darwin(v28);
  uint64_t v31 = (uint64_t *)((char *)&v133 - v30);
  __chkstk_darwin(v29);
  uint64_t v33 = (char *)&v133 - v32;
  uint64_t v34 = sub_8E7B0();
  sub_5190();
  uint64_t v36 = v35;
  __chkstk_darwin(v37);
  sub_AAA8();
  uint64_t v40 = (uint8_t **)(v39 - v38);
  sub_48AC(&qword_BE158);
  sub_16058();
  uint64_t v42 = __chkstk_darwin(v41);
  uint64_t v44 = (uint64_t *)((char *)&v133 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v42);
  uint64_t v46 = (char *)&v133 - v45;
  uint64_t v145 = sub_8E7F0();
  uint64_t v146 = a4;
  _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(a4, 1, 1, v145);
  *uint64_t v40 = v150;
  (*(void (**)(uint8_t **, void, uint64_t))(v36 + 104))(v40, enum case for RRQuery.usoReference(_:), v34);
  swift_retain();
  sub_8E620();
  (*(void (**)(uint8_t **, uint64_t))(v36 + 8))(v40, v34);
  uint64_t v153 = v46;
  sub_4A384((uint64_t)v46, (uint64_t)v44);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v47 = *v44;
    if (qword_BB830 != -1) {
      swift_once();
    }
    uint64_t v48 = sub_8E730();
    sub_50FC(v48, (uint64_t)qword_BFEC8);
    swift_errorRetain();
    swift_errorRetain();
    unsigned __int8 v49 = sub_8E710();
    os_log_type_t v50 = sub_8EB10();
    if (os_log_type_enabled(v49, v50))
    {
      uint64_t v51 = (uint8_t *)sub_1CBDC();
      uint64_t v52 = swift_slowAlloc();
      uint64_t v154 = v47;
      v155[0] = v52;
      *(_DWORD *)uint64_t v51 = 136315138;
      swift_errorRetain();
      sub_48AC(&qword_BD018);
      uint64_t v53 = sub_8E8E0();
      uint64_t v154 = sub_8758C(v53, v54, v155);
      sub_8EBD0();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl(&dword_0, v49, v50, "#ReferenceResolution Received a failure: %s -> nil", v51, 0xCu);
      swift_arrayDestroy();
      sub_CC2C();
      sub_CC2C();
    }
    else
    {

      swift_errorRelease();
      swift_errorRelease();
    }
    swift_errorRelease();
    return sub_31030((uint64_t)v153, &qword_BE158);
  }
  uint64_t v55 = v148;
  (*(void (**)(char *, uint64_t *, uint64_t))(v148 + 32))(v33, v44, v24);
  unsigned __int8 v56 = *(void (**)(uint64_t *, char *, uint64_t))(v55 + 16);
  v56(v31, v33, v24);
  int v57 = (*(uint64_t (**)(uint64_t *, uint64_t))(v55 + 88))(v31, v24);
  uint64_t v152 = v24;
  id v58 = v33;
  if (v57 == enum case for RRResult.foundMatch(_:))
  {
    char v59 = (uint64_t *)v33;
    uint64_t v60 = sub_4A978();
    v61(v60);
    uint64_t v62 = v144;
    uint64_t v63 = v147;
    uint64_t v64 = v149;
    (*(void (**)(uint64_t, uint64_t *, uint64_t))(v144 + 32))(v147, v31, v149);
    if (qword_BB830 != -1) {
      swift_once();
    }
    uint64_t v65 = sub_8E730();
    sub_50FC(v65, (uint64_t)qword_BFEC8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v62 + 16))(v142, v63, v64);
    unint64_t v66 = sub_8E710();
    os_log_type_t v67 = sub_8EB00();
    if (os_log_type_enabled(v66, v67))
    {
      uint64_t v68 = (uint8_t *)sub_1CBDC();
      uint64_t v69 = swift_slowAlloc();
      uint64_t v151 = v59;
      v155[0] = v69;
      *(_DWORD *)uint64_t v68 = 136315138;
      sub_4A794(&qword_BE168, (void (*)(uint64_t))&type metadata accessor for RRCandidate);
      uint64_t v70 = sub_8EE20();
      uint64_t v72 = sub_8758C(v70, v71, v155);
      sub_397DC(v72);
      sub_8EBD0();
      swift_bridgeObjectRelease();
      uint64_t v73 = *(void *)(v62 + 8);
      uint64_t v74 = sub_4A9AC();
      ((void (*)(uint64_t, uint64_t))v73)(v74, v149);
      _os_log_impl(&dword_0, v66, v67, "#ReferenceResolution Found a candidate %s", v68, 0xCu);
      swift_arrayDestroy();
      uint64_t v55 = v148;
      char v59 = v151;
      sub_CC2C();
      uint64_t v64 = v149;
      sub_CC2C();
    }
    else
    {
      uint64_t v73 = *(void *)(v62 + 8);
      uint64_t v89 = sub_4A9AC();
      ((void (*)(uint64_t, uint64_t))v73)(v89, v64);
    }

    uint64_t v88 = v143;
    uint64_t v90 = v147;
    sub_8E750();
    ((void (*)(uint64_t, uint64_t))v73)(v90, v64);
    (*(void (**)(uint64_t *, uint64_t))(v55 + 8))(v59, v152);
    uint64_t v91 = sub_31030((uint64_t)v153, &qword_BE158);
    sub_4A9B8(v91, &qword_BC5D0);
    uint64_t v92 = v88;
    uint64_t v87 = 0;
    goto LABEL_40;
  }
  uint64_t v76 = v149;
  if (v57 == enum case for RRResult.needsDisambiguation(_:))
  {
    uint64_t v77 = sub_4A978();
    v78(v77);
    uint64_t v73 = *v31;
    if (qword_BB830 != -1) {
      swift_once();
    }
    uint64_t v79 = sub_8E730();
    sub_50FC(v79, (uint64_t)qword_BFEC8);
    uint64_t v80 = sub_8E710();
    os_log_type_t v81 = sub_8EB00();
    if (os_log_type_enabled(v80, v81))
    {
      char v82 = (uint8_t *)sub_CCE4();
      *(_WORD *)char v82 = 0;
      _os_log_impl(&dword_0, v80, v81, "#ReferenceResolution Found ambiguous entities -> picking most recent entry", v82, 2u);
      uint64_t v76 = v149;
      sub_CC2C();
    }

    uint64_t v83 = v141;
    sub_4A3EC(v73, v141);
    swift_bridgeObjectRelease();
    if (_s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0((uint64_t)v83, 1, v76) == 1)
    {
      uint64_t v84 = sub_4A994();
      v85(v84);
      uint64_t v86 = sub_31030((uint64_t)v153, &qword_BE158);
      sub_4A9B8(v86, &qword_BC5D0);
      sub_31030((uint64_t)v83, &qword_BE150);
      uint64_t v87 = 1;
      uint64_t v88 = v140;
LABEL_39:
      uint64_t v92 = v88;
LABEL_40:
      _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(v92, v87, 1, v145);
      return sub_4A72C(v88, v73);
    }
    uint64_t v88 = v140;
    goto LABEL_38;
  }
  if (v57 == enum case for RRResult.foundMatchPlural(_:))
  {
    uint64_t v93 = sub_4A978();
    v94(v93);
    uint64_t v73 = *v31;
    if (qword_BB830 != -1) {
      swift_once();
    }
    uint64_t v95 = sub_8E730();
    sub_50FC(v95, (uint64_t)qword_BFEC8);
    swift_bridgeObjectRetain();
    Swift::Int v96 = sub_8E710();
    os_log_type_t v97 = sub_8EB00();
    if (os_log_type_enabled(v96, v97))
    {
      Swift::Int v98 = (uint8_t *)sub_1CBDC();
      *(_DWORD *)Swift::Int v98 = 134217984;
      v155[0] = *(void *)(v73 + 16);
      sub_8EBD0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v96, v97, "#ReferenceResolution Found %ld candidates. Using the first one", v98, 0xCu);
      uint64_t v76 = v149;
      sub_CC2C();
    }
    else
    {

      swift_bridgeObjectRelease();
    }
    uint64_t v88 = (uint64_t)v138;
    uint64_t v83 = v139;
    sub_765D0(v73, (uint64_t)v139);
    swift_bridgeObjectRelease();
    if (_s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0((uint64_t)v83, 1, v76) == 1)
    {
      uint64_t v108 = sub_4A994();
      v109(v108);
      uint64_t v110 = sub_31030((uint64_t)v153, &qword_BE158);
      sub_4A9B8(v110, &qword_BC5D0);
      sub_31030((uint64_t)v83, &qword_BE150);
      uint64_t v87 = 1;
      goto LABEL_39;
    }
LABEL_38:
    sub_8E750();
    uint64_t v111 = sub_4A994();
    v112(v111);
    uint64_t v113 = sub_31030((uint64_t)v153, &qword_BE158);
    sub_4A9B8(v113, &qword_BC5D0);
    (*(void (**)(void *, uint64_t))(v144 + 8))(v83, v76);
    uint64_t v87 = 0;
    goto LABEL_39;
  }
  if (v57 == enum case for RRResult.needsDisambiguationPlural(_:))
  {
    uint64_t v99 = sub_4A978();
    v100(v99);
    swift_bridgeObjectRelease();
    if (qword_BB830 != -1) {
      swift_once();
    }
    uint64_t v101 = sub_8E730();
    sub_50FC(v101, (uint64_t)qword_BFEC8);
    uint64_t v102 = sub_8E710();
    os_log_type_t v103 = sub_8EB00();
    if (os_log_type_enabled(v102, v103))
    {
      *(_WORD *)sub_CCE4() = 0;
      sub_1CA90(&dword_0, v104, v105, "#ReferenceResolution Found disambiguationPlural -> return nil");
      sub_CC2C();
    }

    uint64_t v106 = (uint64_t)v136;
    *uint64_t v136 = 0xD00000000000002ELL;
    *(void *)(v106 + 8) = 0x8000000000097A80;
    swift_storeEnumTagMultiPayload();
    uint64_t v107 = v135;
    sub_142DC(v135);
    sub_4A6D0(v106);
    sub_4A6D0(v107);
LABEL_47:
    uint64_t v119 = sub_4A994();
    v120(v119);
    return sub_31030((uint64_t)v153, &qword_BE158);
  }
  if (v57 == enum case for RRResult.noMatch(_:))
  {
    if (qword_BB830 != -1) {
      swift_once();
    }
    uint64_t v114 = sub_8E730();
    sub_50FC(v114, (uint64_t)qword_BFEC8);
    uint64_t v115 = sub_8E710();
    os_log_type_t v116 = sub_8EB00();
    if (os_log_type_enabled(v115, v116))
    {
      *(_WORD *)sub_CCE4() = 0;
      sub_1CA90(&dword_0, v117, v118, "#ReferenceResolution No matches found");
      sub_CC2C();
    }

    goto LABEL_47;
  }
  uint64_t v151 = v31;
  if (qword_BB830 != -1) {
    swift_once();
  }
  uint64_t v121 = sub_8E730();
  sub_50FC(v121, (uint64_t)qword_BFEC8);
  v56(v134, v58, v152);
  uint64_t v122 = sub_8E710();
  os_log_type_t v123 = sub_8EB10();
  if (os_log_type_enabled(v122, v123))
  {
    uint64_t v124 = (uint8_t *)sub_1CBDC();
    v155[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v124 = 136315138;
    uint64_t v125 = v152;
    uint64_t v150 = v124 + 4;
    sub_4A794(&qword_BE160, (void (*)(uint64_t))&type metadata accessor for RRResult);
    uint64_t v126 = sub_8EE20();
    uint64_t v128 = sub_8758C(v126, v127, v155);
    sub_397DC(v128);
    sub_8EBD0();
    swift_bridgeObjectRelease();
    char v129 = *(void (**)(uint64_t, uint64_t))(v55 + 8);
    uint64_t v130 = sub_4A9AC();
    v129(v130, v125);
    _os_log_impl(&dword_0, v122, v123, "#ReferenceResolution Received unknown result type %s", v124, 0xCu);
    swift_arrayDestroy();
    sub_CC2C();
    sub_CC2C();

    v129((uint64_t)v58, v125);
  }
  else
  {

    char v129 = *(void (**)(uint64_t, uint64_t))(v55 + 8);
    uint64_t v131 = sub_4A9AC();
    uint64_t v132 = v152;
    v129(v131, v152);
    v129((uint64_t)v58, v132);
  }
  sub_31030((uint64_t)v153, &qword_BE158);
  return ((uint64_t (*)(uint64_t *, uint64_t))v129)(v151, v152);
}

uint64_t sub_4A384(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_48AC(&qword_BE158);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void *sub_4A3EC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = sub_8E760();
  sub_5190();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_AAA8();
  uint64_t v10 = v9 - v8;
  uint64_t v11 = sub_48AC(&qword_BE150);
  __chkstk_darwin(v11 - 8);
  sub_AAA8();
  uint64_t v14 = v13 - v12;
  sub_765D0(a1, v13 - v12);
  if (_s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0(v14, 1, v4) == 1)
  {
    sub_31030(v14, &qword_BE150);
    if (qword_BB830 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_8E730();
    sub_50FC(v15, (uint64_t)qword_BFEC8);
    uint64_t v16 = sub_8E710();
    os_log_type_t v17 = sub_8EB00();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = (uint8_t *)sub_CCE4();
      *(_WORD *)uint64_t v18 = 0;
      _os_log_impl(&dword_0, v16, v17, "#ReferenceResolution could not fetch score from the first candidate", v18, 2u);
      sub_CC2C();
    }

    return (void *)_s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0((uint64_t)a2, 1, 1, v4);
  }
  else
  {
    sub_8E740();
    double v21 = v20;
    uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
    uint64_t v23 = v22(v14, v4);
    uint64_t v36 = a1;
    uint64_t v24 = *(void *)(a1 + 16);
    if (v24)
    {
      uint64_t v35 = a2;
      uint64_t v27 = *(void (**)(uint64_t, unint64_t, uint64_t))(v6 + 16);
      uint64_t v25 = v6 + 16;
      uint64_t v26 = v27;
      uint64_t v28 = *(void *)(v25 + 56);
      uint64_t v29 = v24 - 1;
      unint64_t v30 = a1
          + ((*(unsigned __int8 *)(v25 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 64))
          + v28 * (v24 - 1);
      uint64_t v31 = -v28;
      while (1)
      {
        v26(v10, v30, v4);
        sub_8E740();
        double v33 = v32;
        uint64_t v23 = v22(v10, v4);
        if (v33 == v21) {
          break;
        }
        --v29;
        v30 += v31;
        if (v29 == -1)
        {
          uint64_t v29 = 0;
          break;
        }
      }
      a2 = v35;
    }
    else
    {
      uint64_t v29 = 0;
    }
    __chkstk_darwin(v23);
    *(&v35 - 2) = &v36;
    return sub_4A87C((void *(*)(void *__return_ptr, uint64_t *))sub_4A958, v29, v34, a2);
  }
}

uint64_t sub_4A6D0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for HomeCommunicationError(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_4A72C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_48AC(&qword_BC5D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_4A794(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_4A7DC@<X0>(unint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v4 = result;
    if (*(void *)(a2 + 16) > result)
    {
      uint64_t v6 = sub_8E760();
      return (*(uint64_t (**)(uint64_t, unint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a3, a2+ ((*(unsigned __int8 *)(*(void *)(v6 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v6 - 8) + 80))+ *(void *)(*(void *)(v6 - 8) + 72) * v4, v6);
    }
  }
  __break(1u);
  return result;
}

void *sub_4A87C@<X0>(void *(*a1)(void *__return_ptr, uint64_t *)@<X0>, uint64_t a2@<X2>, char a3@<W3>, void *a4@<X8>)
{
  if (a3)
  {
    uint64_t v7 = sub_8E760();
    return (void *)_s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0((uint64_t)a4, 1, 1, v7);
  }
  else
  {
    uint64_t v9 = a2;
    uint64_t result = a1(a4, &v9);
    if (!v4)
    {
      uint64_t v8 = sub_8E760();
      return (void *)_s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0((uint64_t)a4, 0, 1, v8);
    }
  }
  return result;
}

unint64_t sub_4A920@<X0>(unint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_4A7DC(*a1, *a2, a3);
}

unint64_t sub_4A958@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_4A920(a1, *(uint64_t **)(v2 + 16), a2);
}

uint64_t sub_4A978()
{
  return v0;
}

uint64_t sub_4A994()
{
  return v0;
}

uint64_t sub_4A9AC()
{
  return v0;
}

uint64_t sub_4A9B8(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *(void *)(v2 - 168);
  return sub_31030(v4, a2);
}

void *sub_4A9D0()
{
  if (!sub_39A5C())
  {
    if (qword_BB830 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_8E730();
    sub_50FC(v7, (uint64_t)qword_BFEC8);
    uint64_t v8 = sub_8E710();
    os_log_type_t v9 = sub_8EB00();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v10 = 0;
      _os_log_impl(&dword_0, v8, v9, "#ReferenceResolver couldn't extract UsoTask from Parse", v10, 2u);
      sub_CC2C();
    }

    return 0;
  }
  sub_8DFC0();
  sub_4AFF4((uint64_t)v33, (uint64_t)v32);
  if (!v32[3]) {
    goto LABEL_15;
  }
  sub_4AFF4((uint64_t)v32, (uint64_t)v31);
  sub_8E060();
  if ((swift_dynamicCast() & 1) == 0)
  {
    sub_4950((uint64_t)v31);
LABEL_15:
    if (qword_BB830 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_8E730();
    sub_50FC(v11, (uint64_t)qword_BFEC8);
    uint64_t v12 = sub_8E710();
    os_log_type_t v13 = sub_8EB10();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v14 = 0;
      _os_log_impl(&dword_0, v12, v13, "#ReferenceResolver Cannot transform UsoTask to task", v14, 2u);
      sub_CC2C();
    }

    swift_release();
    sub_12F48((uint64_t)v33);
    uint64_t v15 = v32;
    goto LABEL_30;
  }
  swift_retain();
  sub_8DB40();
  swift_release_n();
  swift_retain();
  sub_4950((uint64_t)v31);
  sub_12F48((uint64_t)v32);
  p_ivar_lyt = &HomeCommunicationFlow.ivar_lyt;
  if (!v30)
  {
LABEL_25:
    if (p_ivar_lyt[262] != (void *)-1) {
      swift_once();
    }
    uint64_t v23 = sub_8E730();
    sub_50FC(v23, (uint64_t)qword_BFEC8);
    uint64_t v24 = sub_8E710();
    os_log_type_t v25 = sub_8EB00();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v26 = 0;
      _os_log_impl(&dword_0, v24, v25, "#ReferenceResolver SRR didn't return an INHomeFilter", v26, 2u);
      sub_CC2C();
    }

    swift_release();
    swift_release();
    uint64_t v15 = (uint64_t *)v33;
LABEL_30:
    sub_12F48((uint64_t)v15);
    return 0;
  }
  if (qword_BB830 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_8E730();
  sub_50FC(v1, (uint64_t)qword_BFEC8);
  swift_retain_n();
  uint64_t v2 = sub_8E710();
  os_log_type_t v3 = sub_8EB00();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    v32[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315138;
    v31[0] = v30;
    sub_8DB70();
    swift_retain();
    uint64_t v5 = sub_8E8E0();
    v31[0] = sub_8758C(v5, v6, v32);
    sub_8EBD0();
    swift_release_n();
    p_ivar_lyt = (void **)(&HomeCommunicationFlow + 16);
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v2, v3, "#ReferenceResolver entity: %s", v4, 0xCu);
    swift_arrayDestroy();
    sub_CC2C();
    sub_CC2C();
  }
  else
  {

    swift_release_n();
  }
  swift_retain();
  sub_8DC40();
  swift_release();
  sub_368B8();
  os_log_type_t v17 = v16;
  swift_release();
  if (!v17)
  {
    swift_release();
    goto LABEL_25;
  }
  id v18 = v17;
  uint64_t v19 = sub_8E710();
  os_log_type_t v20 = sub_8EB00();
  if (os_log_type_enabled(v19, v20))
  {
    log = v19;
    double v21 = (uint8_t *)swift_slowAlloc();
    uint64_t v28 = (void *)swift_slowAlloc();
    *(_DWORD *)double v21 = 138412290;
    v32[0] = (uint64_t)v18;
    id v22 = v18;
    sub_8EBD0();
    void *v28 = v17;

    uint64_t v19 = log;
    _os_log_impl(&dword_0, log, v20, "#ReferenceResolver SRR selected homeName: %@ as the resolution result", v21, 0xCu);
    sub_48AC(&qword_BD020);
    swift_arrayDestroy();
    sub_CC2C();
    sub_CC2C();
  }
  else
  {
  }
  swift_release_n();
  swift_release();
  sub_12F48((uint64_t)v33);
  return v17;
}

uint64_t sub_4AFF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_48AC(&qword_BC5D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

id sub_4B05C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  sub_48AC(&qword_BE170);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_8FC30;
  sub_4B14C();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  *(void *)(v8 + 32) = sub_4B210(a1, a2, a3, a4);
  sub_8EA50();
  id v9 = [objc_allocWithZone((Class)SASTItemGroup) init];
  sub_4B378(v8, v9, &qword_BE180, (SEL *)&selRef_setTemplateItems_);
  return v9;
}

unint64_t sub_4B14C()
{
  unint64_t result = qword_BE178;
  if (!qword_BE178)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_BE178);
  }
  return result;
}

id sub_4B18C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v6 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  sub_4B314(a1, a2, v6);
  sub_4B378(a3, v6, &qword_BE188, (SEL *)&selRef_setCommands_);

  return v6;
}

id sub_4B210(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  id v8 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  [v8 setCentered:a4 & 1];
  id v9 = [objc_allocWithZone((Class)SASTCommandTemplateAction) init];
  sub_4B378(a3, v9, &qword_BE188, (SEL *)&selRef_setCommands_);
  [v8 setAction:v9];

  id v10 = [objc_allocWithZone((Class)SAUIDecoratedText) init];
  sub_4B314(a1, a2, v10);
  [v8 setDecoratedLabel:v10];

  return v8;
}

void sub_4B314(uint64_t a1, uint64_t a2, void *a3)
{
  NSString v4 = sub_8E8C0();
  swift_bridgeObjectRelease();
  [a3 setText:v4];
}

void sub_4B378(uint64_t a1, void *a2, uint64_t *a3, SEL *a4)
{
  sub_48AC(a3);
  Class isa = sub_8EA20().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(a2, *a4, isa);
}

id sub_4B3F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  id v14 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  sub_54F0(a1, a2, v14, (SEL *)&selRef_setLabel_);
  sub_54F0(a3, a4, v14, (SEL *)&selRef_setType_);
  sub_54F0(a5, a6, v14, (SEL *)&selRef_setIconType_);
  sub_4B728(a7, v14);

  return v14;
}

id sub_4B4C0(void *a1, void *a2, void *a3)
{
  id v7 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  uint64_t v8 = sub_4B7A0(a3);
  if (v8)
  {
    sub_48AC(&qword_BE188);
    sub_8EA20();
    uint64_t v8 = sub_4B930();
  }
  else
  {
    os_log_type_t v3 = 0;
  }
  sub_4B918(v8, "setConfirmCommands:");

  uint64_t v9 = sub_4B7A0(a2);
  if (v9)
  {
    sub_48AC(&qword_BE188);
    sub_8EA20();
    uint64_t v9 = sub_4B930();
  }
  else
  {
    os_log_type_t v3 = 0;
  }
  sub_4B918(v9, "setDenyCommands:");

  uint64_t v10 = sub_4B804(a1, (SEL *)&selRef_type);
  if (v11)
  {
    sub_8E8C0();
    uint64_t v10 = sub_4B930();
  }
  else
  {
    os_log_type_t v3 = 0;
  }
  sub_4B918(v10, "setCancelTrigger:");

  uint64_t v12 = sub_4B804(a3, (SEL *)&selRef_label);
  if (v13)
  {
    sub_8E8C0();
    uint64_t v12 = sub_4B930();
  }
  else
  {
    os_log_type_t v3 = 0;
  }
  sub_4B918(v12, "setConfirmText:");

  uint64_t v14 = sub_4B804(a2, (SEL *)&selRef_label);
  if (v15)
  {
    sub_8E8C0();
    uint64_t v14 = sub_4B930();
  }
  else
  {
    os_log_type_t v3 = 0;
  }
  sub_4B918(v14, "setDenyText:");

  sub_48AC(&qword_BE170);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_930D0;
  *(void *)(v16 + 32) = a1;
  *(void *)(v16 + 40) = a2;
  *(void *)(v16 + 48) = a3;
  uint64_t v18 = v16;
  sub_8EA50();
  sub_4B864(v18, v7);

  return v7;
}

id sub_4B6A0(uint64_t a1, uint64_t a2, void *a3)
{
  id v6 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  sub_54F0(a1, a2, v6, (SEL *)&selRef_setAnnouncerName_);
  [v6 setConfirmationOptions:a3];

  return v6;
}

void sub_4B728(uint64_t a1, void *a2)
{
  sub_48AC(&qword_BE188);
  Class isa = sub_8EA20().super.isa;
  swift_bridgeObjectRelease();
  [a2 setCommands:isa];
}

uint64_t sub_4B7A0(void *a1)
{
  id v1 = [a1 commands];
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  sub_48AC(&qword_BE188);
  uint64_t v3 = sub_8EA30();

  return v3;
}

uint64_t sub_4B804(void *a1, SEL *a2)
{
  id v2 = [a1 *a2];
  if (!v2) {
    return 0;
  }
  uint64_t v3 = v2;
  uint64_t v4 = sub_8E8D0();

  return v4;
}

void sub_4B864(uint64_t a1, void *a2)
{
  sub_4B8D8();
  Class isa = sub_8EA20().super.isa;
  swift_bridgeObjectRelease();
  [a2 setAllConfirmationOptions:isa];
}

unint64_t sub_4B8D8()
{
  unint64_t result = qword_BE190;
  if (!qword_BE190)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_BE190);
  }
  return result;
}

id sub_4B918(uint64_t a1, const char *a2)
{
  return objc_msgSend(v2, a2, v3);
}

uint64_t sub_4B930()
{
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for SendAnnouncementAceViewProvider()
{
  uint64_t result = qword_BE1B0;
  if (!qword_BE1B0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_4B990()
{
  return swift_initClassMetadata2();
}

uint64_t sub_4B9E8(uint64_t a1, uint64_t (*a2)(void, void), uint64_t a3)
{
  uint64_t v40 = a1;
  uint64_t v38 = a2;
  uint64_t v39 = a3;
  uint64_t v3 = type metadata accessor for SignpostLog.Signpost();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  uint64_t v6 = __chkstk_darwin(v3);
  id v7 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v38 - v9;
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v38 - v11;
  if (qword_BB838 != -1) {
    swift_once();
  }
  id v13 = (id)qword_BCE60;
  sub_8E6F0();
  sub_8EB50();
  sub_8E6E0();
  uint64_t v14 = &v12[*(int *)(v3 + 20)];
  *(void *)uint64_t v14 = "IdiomSensitiveViewBuilder";
  *((void *)v14 + 1) = 25;
  v14[16] = 2;
  sub_4C8B4((uint64_t)v12, (uint64_t)v10);
  sub_4C8B4((uint64_t)v10, (uint64_t)v7);
  unint64_t v15 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v16 = (v5 + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v17 = swift_allocObject();
  sub_4C9EC((uint64_t)v10, v17 + v15);
  uint64_t v18 = (void *)(v17 + v16);
  os_log_type_t v20 = v38;
  uint64_t v19 = v39;
  *uint64_t v18 = v38;
  v18[1] = v19;
  double v21 = (void *)(v41 + 24);
  sub_98C0((void *)(v41 + 24), *(void *)(v41 + 48));
  swift_retain_n();
  uint64_t v22 = (uint64_t)v7;
  if (sub_8D0D0())
  {
    sub_102AC(v40, (uint64_t)sub_4CA50, v17);
LABEL_5:
    swift_release();
    goto LABEL_28;
  }
  uint64_t v23 = v41;
  sub_98C0(v21, *(void *)(v41 + 48));
  if ((sub_8D0F0() & 1) == 0)
  {
    sub_98C0(v21, *(void *)(v23 + 48));
    if (sub_8D100())
    {
      if (qword_BB830 != -1) {
        swift_once();
      }
      uint64_t v31 = sub_8E730();
      sub_50FC(v31, (uint64_t)qword_BFEC8);
      os_log_type_t v25 = sub_8E710();
      os_log_type_t v26 = sub_8EAF0();
      BOOL v32 = os_log_type_enabled(v25, v26);
      unint64_t v28 = v40;
      if (!v32) {
        goto LABEL_25;
      }
      uint64_t v29 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v29 = 0;
      uint64_t v30 = "ButtonBuilder: Skipping button views for HomePod";
      goto LABEL_24;
    }
    sub_98C0(v21, *(void *)(v23 + 48));
    char v33 = sub_8D0C0();
    sub_109EC(v23, (uint64_t)v42);
    if (v33)
    {
      sub_4CADC((uint64_t)v42);
      unint64_t v28 = v40;
    }
    else
    {
      sub_98C0(v43, v43[3]);
      char v34 = sub_8D0B0();
      sub_4CADC((uint64_t)v42);
      unint64_t v28 = v40;
      if ((v34 & 1) == 0)
      {
        if (qword_BB830 != -1) {
          swift_once();
        }
        uint64_t v35 = sub_8E730();
        sub_50FC(v35, (uint64_t)qword_BFEC8);
        os_log_type_t v25 = sub_8E710();
        os_log_type_t v26 = sub_8EB10();
        if (!os_log_type_enabled(v25, v26)) {
          goto LABEL_25;
        }
        uint64_t v29 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v29 = 0;
        uint64_t v30 = "ButtonBuilder: Unsupported platform. Will not build an error button.";
        goto LABEL_24;
      }
    }
    sub_10564(v28, (uint64_t)sub_4CA50, v17);
    goto LABEL_5;
  }
  if (qword_BB830 != -1) {
    swift_once();
  }
  uint64_t v24 = sub_8E730();
  sub_50FC(v24, (uint64_t)qword_BFEC8);
  os_log_type_t v25 = sub_8E710();
  os_log_type_t v26 = sub_8EAF0();
  BOOL v27 = os_log_type_enabled(v25, v26);
  unint64_t v28 = v40;
  if (!v27) {
    goto LABEL_25;
  }
  uint64_t v29 = (uint8_t *)swift_slowAlloc();
  *(_WORD *)uint64_t v29 = 0;
  uint64_t v30 = "ButtonBuilder: Skipping button views for Car";
LABEL_24:
  _os_log_impl(&dword_0, v25, v26, v30, v29, 2u);
  swift_slowDealloc();
LABEL_25:

  if (v28 >> 62)
  {
    sub_8D10(0, &qword_BC668);
    swift_bridgeObjectRetain();
    unint64_t v36 = sub_8ED30();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_8EE50();
    sub_8D10(0, &qword_BC668);
    unint64_t v36 = v28;
  }
  sub_2CF7C(v36, 0, v22, v20, v19);
  swift_release();
  swift_bridgeObjectRelease();
LABEL_28:
  sub_4CB30(v22);
  swift_release();
  return sub_4CB30((uint64_t)v12);
}

uint64_t sub_4BFD4(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + qword_BE1A0) = a1;
  sub_C940(a2, v2 + qword_BE1A8);
  uint64_t v4 = sub_8D5E0();
  sub_4950(a2);
  return v4;
}

uint64_t sub_4C028(uint64_t a1, void *a2, uint64_t a3, void (*a4)(uint64_t, void))
{
  if (qword_BB830 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_8E730();
  sub_50FC(v6, (uint64_t)qword_BFEC8);
  id v7 = sub_8E710();
  os_log_type_t v8 = sub_8EB00();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl(&dword_0, v7, v8, "Making a SAIntentGroupHandleIntent that contains INPlayAnnouncementSoundIntent.", v9, 2u);
    swift_slowDealloc();
  }

  id v10 = [objc_allocWithZone((Class)INPlayAnnouncementSoundIntent) initWithSoundType:1];
  id v11 = [a2 _metadata];
  [v10 _setMetadata:v11];

  sub_8D10(0, (unint64_t *)&qword_BE200);
  id v12 = v10;
  uint64_t v13 = sub_8E4B0();
  id v15 = sub_51C0(v12, v13, v14);
  sub_48AC(&qword_BE170);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_8FC30;
  *(void *)(v16 + 32) = v15;
  uint64_t v19 = v16;
  sub_8EA50();
  id v17 = v15;
  a4(v19, 0);

  return swift_bridgeObjectRelease();
}

uint64_t sub_4C238(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t (*a6)(void, void), uint64_t a7)
{
  uint64_t v8 = v7;
  if (qword_BB830 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_8E730();
  sub_50FC(v13, (uint64_t)qword_BFEC8);
  uint64_t v14 = sub_8E710();
  os_log_type_t v15 = sub_8EB00();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v16 = 0;
    _os_log_impl(&dword_0, v14, v15, "Making a LaunchApp button.", v16, 2u);
    swift_slowDealloc();
  }

  sub_FFDC(*(void *)(v8 + qword_BE1A0), a4, (void *)(v8 + qword_BE1A8), v18);
  sub_98C0(v18, v18[3]);
  sub_4B9E8(a5, a6, a7);
  return sub_4950((uint64_t)v18);
}

uint64_t sub_4C3A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(void), uint64_t a9)
{
  os_log_type_t v25 = a8;
  uint64_t v9 = sub_8D8F0();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  id v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_BB830 != -1) {
    swift_once();
  }
  uint64_t v24 = a9;
  uint64_t v13 = sub_8E730();
  sub_50FC(v13, (uint64_t)qword_BFEC8);
  uint64_t v14 = sub_8E710();
  os_log_type_t v15 = sub_8EB00();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v16 = 0;
    _os_log_impl(&dword_0, v14, v15, "Building disambiguation snippet", v16, 2u);
    swift_slowDealloc();
  }

  sub_8CF20();
  sub_8CED0();
  sub_8CEF0();
  swift_release();
  sub_4CB8C();
  if (sub_8D0F0())
  {
    sub_8CF70();
    id v17 = (id)sub_8D010();
    swift_bridgeObjectRelease();
    sub_8CF00();
LABEL_11:

    swift_release();
    goto LABEL_12;
  }
  sub_4CB8C();
  if (sub_8D0C0())
  {
    sub_8CF70();
    (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, enum case for ImageSize.original(_:), v9);
    uint64_t v18 = (void *)sub_8D020();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    uint64_t v19 = sub_8E8D0();
    sub_4C7F8(v19, v20, v18);
    id v17 = [objc_allocWithZone((Class)SAUISash) init];
    if (qword_BB7F0 != -1) {
      swift_once();
    }
    uint64_t v21 = qword_BFE78;
    uint64_t v22 = unk_BFE80;
    swift_bridgeObjectRetain();
    sub_4C85C(v21, v22, v17);
    swift_bridgeObjectRelease();
    [v18 setSash:v17];
    sub_8CEE0();

    goto LABEL_11;
  }
LABEL_12:
  sub_8CF10();
  v25();
  swift_release();
  return swift_bridgeObjectRelease();
}

void sub_4C708()
{
}

uint64_t sub_4C738()
{
  swift_release();
  uint64_t v1 = v0 + qword_BE1A8;

  return sub_4950(v1);
}

uint64_t sub_4C778()
{
  uint64_t v0 = sub_8D600();
  swift_release();
  sub_4950(v0 + qword_BE1A8);
  return v0;
}

uint64_t sub_4C7C0()
{
  uint64_t v0 = sub_4C778();

  return _swift_deallocClassInstance(v0, 64, 7);
}

uint64_t sub_4C7F0()
{
  return type metadata accessor for SendAnnouncementAceViewProvider();
}

void sub_4C7F8(uint64_t a1, uint64_t a2, void *a3)
{
  NSString v4 = sub_8E8C0();
  swift_bridgeObjectRelease();
  [a3 setItemType:v4];
}

void sub_4C85C(uint64_t a1, uint64_t a2, void *a3)
{
  NSString v4 = sub_8E8C0();
  [a3 setApplicationBundleIdentifier:v4];
}

uint64_t sub_4C8B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SignpostLog.Signpost();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_4C918()
{
  uint64_t v1 = type metadata accessor for SignpostLog.Signpost();
  sub_CB1C(v1);
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = (v6 + 16) & ~v6;
  uint64_t v8 = v6 | 7;
  unint64_t v9 = ((*(void *)(v5 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  uint64_t v10 = v0 + v7;
  uint64_t v11 = sub_8E700();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  swift_release();

  return _swift_deallocObject(v0, v9, v8);
}

uint64_t sub_4C9EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SignpostLog.Signpost();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

char *sub_4CA50(unint64_t a1, char a2)
{
  char v4 = a2 & 1;
  uint64_t v5 = type metadata accessor for SignpostLog.Signpost();
  sub_CB1C(v5);
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  unint64_t v10 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v11 = v2 + v10;
  uint64_t v12 = v2 + ((*(void *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v13 = *(uint64_t (**)(void, void))v12;
  uint64_t v14 = *(void *)(v12 + 8);

  return sub_2CF7C(a1, v4, v11, v13, v14);
}

uint64_t sub_4CADC(uint64_t a1)
{
  return a1;
}

uint64_t sub_4CB30(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SignpostLog.Signpost();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_4CB8C()
{
  uint64_t v1 = v0[3];
  sub_98C0(v0, v1);
  return v1;
}

uint64_t sub_4CBB8()
{
  sub_CC60();
  v1[3] = v2;
  v1[4] = v0;
  sub_8D160();
  v1[5] = swift_task_alloc();
  uint64_t v3 = sub_8D760();
  v1[6] = v3;
  v1[7] = *(void *)(v3 - 8);
  v1[8] = swift_task_alloc();
  return _swift_task_switch(sub_4CCA0, 0, 0);
}

uint64_t sub_4CCA0()
{
  sub_CC60();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_4CD30;
  return sub_4F610();
}

uint64_t sub_4CD30(uint64_t a1)
{
  sub_7614();
  uint64_t v5 = v4;
  uint64_t v6 = *v2;
  sub_CB34();
  *uint64_t v7 = v6;
  swift_task_dealloc();
  if (v1)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v8 = *(uint64_t (**)(void))(v6 + 8);
    return v8();
  }
  else
  {
    *(void *)(v5 + 80) = a1;
    return _swift_task_switch(sub_4CE5C, 0, 0);
  }
}

uint64_t sub_4CE5C()
{
  uint64_t v1 = (void *)v0[10];
  uint64_t v2 = sub_8D3A0();
  swift_allocObject();
  v0[2] = sub_8D390();
  sub_48AC(&qword_BE170);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_8FC30;
  *(void *)(v3 + 32) = v1;
  uint64_t v9 = v3;
  sub_8EA50();
  v0[11] = v9;
  id v4 = v1;
  sub_8D150();
  sub_8D6E0();
  uint64_t v5 = (void *)swift_task_alloc();
  v0[12] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_4CFC4;
  uint64_t v6 = v0[8];
  uint64_t v7 = v0[3];
  return dispatch thunk of ResponseGenerating.makeResponseOutput(dialog:outputGenerationManifest:)(v7, v9, v6, v2, &protocol witness table for ResponseFactory);
}

uint64_t sub_4CFC4()
{
  sub_7614();
  uint64_t v2 = v1[8];
  uint64_t v3 = v1[7];
  uint64_t v4 = v1[6];
  uint64_t v5 = *v0;
  sub_CB34();
  void *v6 = v5;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return _swift_task_switch(sub_4D10C, 0, 0);
}

uint64_t sub_4D10C()
{
  sub_CC60();

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_4D18C()
{
  sub_4950(v0 + 16);
  swift_release();

  return _swift_deallocClassInstance(v0, 64, 7);
}

uint64_t type metadata accessor for SendAnnouncementActiveCallCheckStrategy()
{
  return self;
}

uint64_t sub_4D1F0()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_4D28C;
  return sub_4CBB8();
}

uint64_t sub_4D28C()
{
  sub_CC60();
  sub_7614();
  uint64_t v1 = *v0;
  sub_CB34();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v1 + 8);
  return v3();
}

uint64_t type metadata accessor for SendAnnouncementCATs()
{
  uint64_t result = qword_BE2C8;
  if (!qword_BE2C8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_4D398()
{
  return swift_initClassMetadata2();
}

uint64_t sub_4D3D8(uint64_t a1, char a2)
{
  sub_48AC(&qword_BDB00);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_90CF0;
  sub_4DFF0(v4);
  uint64_t v5 = sub_48AC(&qword_BE318);
  *(void *)(v4 + 48) = a1;
  *(void *)(v4 + 72) = v5;
  strcpy((char *)(v4 + 80), "isHomeTarget");
  *(unsigned char *)(v4 + 93) = 0;
  *(_WORD *)(v4 + 94) = -5120;
  *(void *)(v4 + 120) = &type metadata for Bool;
  *(unsigned char *)(v4 + 96) = a2;
  swift_bridgeObjectRetain();
  sub_4DFD8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_4D4C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_48AC(&qword_BDB00);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_90CE0;
  *(void *)(v6 + 32) = 0x746567726174;
  *(void *)(v6 + 40) = 0xE600000000000000;
  uint64_t v7 = sub_48AC(&qword_BE318);
  *(void *)(v6 + 48) = a1;
  *(void *)(v6 + 72) = v7;
  *(void *)(v6 + 80) = 0x656D614E656D6F68;
  *(void *)(v6 + 88) = 0xE900000000000073;
  *(void *)(v6 + 96) = a2;
  *(void *)(v6 + 120) = v7;
  *(void *)(v6 + 128) = 0x656369766564;
  *(void *)(v6 + 136) = 0xE600000000000000;
  if (a3)
  {
    uint64_t v8 = sub_8E430();
    uint64_t v9 = a3;
  }
  else
  {
    uint64_t v9 = 0;
    uint64_t v8 = 0;
    *(void *)(v6 + 152) = 0;
    *(void *)(v6 + 160) = 0;
  }
  *(void *)(v6 + 144) = v9;
  *(void *)(v6 + 168) = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_4DFD8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_4D5FC()
{
  return sub_13638();
}

uint64_t sub_4D624()
{
  return sub_13638();
}

uint64_t sub_4D64C()
{
  return sub_13638();
}

uint64_t sub_4D674(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_4DFD0(a1, a2, a3, 0x73746567726174, 0xE700000000000000);
}

uint64_t sub_4D6A0()
{
  return sub_13638();
}

uint64_t sub_4D6C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_4DFBC(a1, a2, a3, a4, 0x8000000000097D30);
}

uint64_t sub_4D6F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_4DFBC(a1, a2, a3, a4, 0x8000000000097D30);
}

uint64_t sub_4D718()
{
  return sub_13638();
}

uint64_t sub_4D740()
{
  return sub_13638();
}

uint64_t sub_4D768()
{
  return sub_13638();
}

uint64_t sub_4D790(uint64_t a1, char a2, char a3)
{
  sub_48AC(&qword_BDB00);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_90CE0;
  *(void *)(v6 + 32) = 0xD000000000000016;
  *(void *)(v6 + 40) = 0x8000000000097D30;
  uint64_t v7 = sub_48AC(&qword_BE318);
  *(void *)(v6 + 48) = a1;
  *(void *)(v6 + 72) = v7;
  *(void *)(v6 + 80) = 0x6970696365527369;
  *(void *)(v6 + 88) = 0xEF656D6F48746E65;
  *(unsigned char *)(v6 + 96) = a2;
  *(void *)(v6 + 120) = &type metadata for Bool;
  *(void *)(v6 + 128) = 0x796C7065527369;
  *(void *)(v6 + 136) = 0xE700000000000000;
  *(void *)(v6 + 168) = &type metadata for Bool;
  *(unsigned char *)(v6 + 144) = a3;
  swift_bridgeObjectRetain();
  sub_4DFD8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_4D8BC(uint64_t a1)
{
  uint64_t v2 = sub_48AC(&qword_BD490);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_48AC(&qword_BDB00);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_8FA10;
  uint64_t v6 = (uint64_t *)(v5 + 48);
  *(void *)(v5 + 32) = 0x656D614E707061;
  *(void *)(v5 + 40) = 0xE700000000000000;
  sub_4DF04(a1, (uint64_t)v4, &qword_BD490);
  uint64_t v7 = sub_8E3D0();
  if (_s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0((uint64_t)v4, 1, v7) == 1)
  {
    sub_4DF64((uint64_t)v4, &qword_BD490);
    *(_OWORD *)uint64_t v6 = 0u;
    *(_OWORD *)(v5 + 64) = 0u;
  }
  else
  {
    *(void *)(v5 + 72) = v7;
    sub_C9F4(v6);
    sub_4E008();
    (*(void (**)(void))(v8 + 32))();
  }
  sub_4DFD8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_4DA40()
{
  return sub_13638();
}

uint64_t sub_4DA68()
{
  return sub_13638();
}

uint64_t sub_4DA90(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_48AC(&qword_BD490);
  __chkstk_darwin(v5 - 8);
  sub_22300();
  sub_48AC(&qword_BDB00);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_90CF0;
  uint64_t v7 = (uint64_t *)(v6 + 48);
  sub_4DFF0(v6);
  sub_4DF04(a1, v2, &qword_BD490);
  uint64_t v8 = sub_8E3D0();
  if (_s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0(v2, 1, v8) == 1)
  {
    sub_4DF64(v2, &qword_BD490);
    *(_OWORD *)uint64_t v7 = 0u;
    *(_OWORD *)(v6 + 64) = 0u;
  }
  else
  {
    *(void *)(v6 + 72) = v8;
    sub_C9F4(v7);
    sub_4E008();
    (*(void (**)(void))(v9 + 32))();
  }
  *(void *)(v6 + 80) = 0x656369766564;
  *(void *)(v6 + 88) = 0xE600000000000000;
  if (a2)
  {
    uint64_t v10 = sub_8E430();
    uint64_t v11 = a2;
  }
  else
  {
    uint64_t v11 = 0;
    uint64_t v10 = 0;
    *(void *)(v6 + 104) = 0;
    *(void *)(v6 + 112) = 0;
  }
  *(void *)(v6 + 96) = v11;
  *(void *)(v6 + 120) = v10;
  swift_retain();
  sub_4DFD8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_4DC40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_4DFD0(a1, a2, a3, 0x67726154656D6F68, 0xEA00000000007465);
}

uint64_t sub_4DC70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_48AC(&qword_BDB00);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_8FA10;
  *(void *)(v8 + 32) = a4;
  *(void *)(v8 + 40) = a5;
  *(void *)(v8 + 72) = sub_48AC(&qword_BE318);
  *(void *)(v8 + 48) = a1;
  swift_bridgeObjectRetain();
  sub_8E350();

  return swift_bridgeObjectRelease();
}

uint64_t sub_4DD3C(uint64_t a1, uint64_t a2)
{
  return sub_4DD90(a1, a2);
}

uint64_t sub_4DD90(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_8E460();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  sub_22300();
  uint64_t v7 = sub_48AC(&qword_BC7B8);
  __chkstk_darwin(v7 - 8);
  sub_4DF04(a1, (uint64_t)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_BC7B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v2, a2, v5);
  uint64_t v9 = sub_8E340();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a2, v5);
  sub_4DF64(a1, &qword_BC7B8);
  return v9;
}

uint64_t sub_4DEFC()
{
  return type metadata accessor for SendAnnouncementCATs();
}

uint64_t sub_4DF04(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_48AC(a3);
  sub_4E008();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_4DF64(uint64_t a1, uint64_t *a2)
{
  sub_48AC(a2);
  sub_4E008();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_4DFBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_4DC70(a1, a2, a3, 0xD000000000000016, a5);
}

uint64_t sub_4DFD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_4DC70(a1, a2, a3, a4, a5);
}

uint64_t sub_4DFD8()
{
  return sub_8E350();
}

uint64_t sub_4DFF0(uint64_t result)
{
  *(void *)(result + 32) = 0x746567726174;
  *(void *)(result + 40) = 0xE600000000000000;
  return result;
}

uint64_t type metadata accessor for SendAnnouncementCATsSimple()
{
  uint64_t result = qword_BE320;
  if (!qword_BE320) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_4E05C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_4E09C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return sub_461D8((uint64_t)sub_4E0B8);
}

uint64_t sub_4E0B8()
{
  uint64_t v2 = v0[3];
  uint64_t v1 = v0[4];
  uint64_t v3 = v0[2];
  sub_48AC(&qword_BDB00);
  uint64_t v4 = swift_allocObject();
  v0[6] = v4;
  *(_OWORD *)(v4 + 16) = xmmword_90CE0;
  sub_50110();
  *(void *)(v5 + 32) = v6;
  *(void *)(v5 + 40) = 0xE600000000000000;
  uint64_t v7 = sub_48AC(&qword_BE318);
  *(void *)(v4 + 48) = v3;
  *(void *)(v4 + 72) = v7;
  *(void *)(v4 + 80) = 0x656D614E656D6F68;
  *(void *)(v4 + 88) = 0xE900000000000073;
  *(void *)(v4 + 96) = v2;
  *(void *)(v4 + 120) = v7;
  *(void *)(v4 + 128) = 0x656369766564;
  *(void *)(v4 + 136) = 0xE600000000000000;
  uint64_t v8 = 0;
  if (v1)
  {
    uint64_t v8 = sub_8E430();
  }
  else
  {
    *(void *)(v4 + 152) = 0;
    *(void *)(v4 + 160) = 0;
  }
  *(void *)(v4 + 144) = v1;
  *(void *)(v4 + 168) = v8;
  uint64_t v11 = (uint64_t (*)(unint64_t))((char *)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:)
                                                 + async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v9 = (void *)swift_task_alloc();
  v0[7] = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_4E240;
  sub_500E4();
  return v11(0xD000000000000026);
}

uint64_t sub_4E240()
{
  sub_1425C();
  sub_7614();
  uint64_t v3 = v2;
  sub_461E4();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_CB34();
  void *v6 = v5;
  *(void *)(v3 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_500D4();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v10 = sub_500C0();
    return v11(v10);
  }
}

uint64_t sub_4E350()
{
  sub_CC60();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_4E3B0()
{
  sub_CC60();
  uint64_t v0 = sub_3E08C();
  uint64_t v1 = (void *)sub_3E0B8(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_500BC;
  sub_14250();
  unint64_t v3 = sub_3E0AC(49);
  return v4(v3);
}

uint64_t sub_4E450()
{
  sub_CC60();
  uint64_t v0 = sub_3E08C();
  uint64_t v1 = (void *)sub_3E0B8(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_500BC;
  sub_14250();
  unint64_t v3 = sub_3E0AC(39);
  return v4(v3);
}

uint64_t sub_4E4F0()
{
  sub_CC60();
  uint64_t v0 = sub_3E08C();
  uint64_t v1 = (void *)sub_3E0B8(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_500BC;
  sub_14250();
  unint64_t v3 = sub_3E0AC(66);
  return v4(v3);
}

uint64_t sub_4E590()
{
  sub_CC60();
  uint64_t v0 = sub_3E08C();
  uint64_t v1 = (void *)sub_3E0B8(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_500BC;
  sub_14250();
  unint64_t v3 = sub_3E0AC(61);
  return v4(v3);
}

uint64_t sub_4E630(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return sub_461D8((uint64_t)sub_4E648);
}

uint64_t sub_4E648()
{
  sub_1425C();
  sub_48AC(&qword_BDB00);
  uint64_t v0 = sub_50180();
  *(_OWORD *)(sub_501E4(v0) + 16) = xmmword_8FA10;
  sub_50110();
  *(void *)(v2 + 32) = v1 & 0xFFFFFFFFFFFFLL | 0x73000000000000;
  *(void *)(v2 + 40) = 0xE700000000000000;
  uint64_t v3 = sub_48AC(&qword_BE318);
  sub_501D8(v3);
  sub_50144();
  uint64_t v4 = swift_task_alloc();
  uint64_t v5 = (void *)sub_50198(v4);
  *uint64_t v5 = v6;
  v5[1] = sub_4E73C;
  sub_500E4();
  return v8(0xD000000000000041);
}

uint64_t sub_4E73C()
{
  sub_1425C();
  sub_7614();
  uint64_t v3 = v2;
  sub_461E4();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_CB34();
  void *v6 = v5;
  *(void *)(v3 + 48) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_500D4();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v10 = sub_500C0();
    return v11(v10);
  }
}

uint64_t sub_4E84C()
{
  sub_CC60();
  uint64_t v0 = sub_3E08C();
  uint64_t v1 = (void *)sub_3E0B8(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_500BC;
  sub_14250();
  unint64_t v3 = sub_3E0AC(61);
  return v4(v3);
}

uint64_t sub_4E8EC(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return sub_461D8((uint64_t)sub_4E904);
}

uint64_t sub_4E904()
{
  sub_46250();
  sub_48AC(&qword_BDB00);
  uint64_t v0 = sub_50180();
  uint64_t v1 = sub_501E4(v0);
  *(_OWORD *)(v1 + 16) = xmmword_8FA10;
  *(void *)(v1 + 32) = 0xD000000000000016;
  *(void *)(v1 + 40) = 0x8000000000097D30;
  uint64_t v2 = sub_48AC(&qword_BE318);
  sub_501D8(v2);
  sub_50120();
  uint64_t v3 = swift_task_alloc();
  uint64_t v4 = (void *)sub_50198(v3);
  *uint64_t v4 = v5;
  v4[1] = sub_4E73C;
  uint64_t v6 = sub_500F4(0xD00000000000003DLL);
  return v7(v6);
}

uint64_t sub_4E9FC(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return sub_461D8((uint64_t)sub_4EA14);
}

uint64_t sub_4EA14()
{
  sub_46250();
  sub_48AC(&qword_BDB00);
  uint64_t v0 = sub_50180();
  uint64_t v1 = sub_501E4(v0);
  *(_OWORD *)(v1 + 16) = xmmword_8FA10;
  *(void *)(v1 + 32) = 0xD000000000000016;
  *(void *)(v1 + 40) = 0x8000000000097D30;
  uint64_t v2 = sub_48AC(&qword_BE318);
  sub_501D8(v2);
  sub_50120();
  uint64_t v3 = swift_task_alloc();
  uint64_t v4 = (void *)sub_50198(v3);
  *uint64_t v4 = v5;
  v4[1] = sub_4EB0C;
  uint64_t v6 = sub_500F4(0xD000000000000033);
  return v7(v6);
}

uint64_t sub_4EB0C()
{
  sub_1425C();
  sub_7614();
  uint64_t v3 = v2;
  sub_461E4();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_CB34();
  void *v6 = v5;
  *(void *)(v3 + 48) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_500D4();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v10 = sub_500C0();
    return v11(v10);
  }
}

uint64_t sub_4EC1C()
{
  sub_CC60();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_4EC7C()
{
  sub_CC60();
  uint64_t v0 = sub_3E08C();
  uint64_t v1 = (void *)sub_3E0B8(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_500BC;
  sub_14250();
  unint64_t v3 = sub_3E0AC(52);
  return v4(v3);
}

uint64_t sub_4ED1C()
{
  sub_CC60();
  uint64_t v0 = sub_3E08C();
  uint64_t v1 = (void *)sub_3E0B8(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_500BC;
  sub_14250();
  unint64_t v3 = sub_3E0AC(57);
  return v4(v3);
}

uint64_t sub_4EDBC()
{
  sub_CC60();
  uint64_t v0 = sub_3E08C();
  uint64_t v1 = (void *)sub_3E0B8(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_500BC;
  sub_14250();
  unint64_t v3 = sub_3E0AC(29);
  return v4(v3);
}

uint64_t sub_4EE5C(uint64_t a1, char a2, char a3)
{
  *(unsigned char *)(v4 + 57) = a3;
  *(unsigned char *)(v4 + 56) = a2;
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = v3;
  return sub_461D8((uint64_t)sub_4EE7C);
}

uint64_t sub_4EE7C()
{
  sub_46250();
  char v1 = *(unsigned char *)(v0 + 57);
  char v2 = *(unsigned char *)(v0 + 56);
  uint64_t v3 = *(void *)(v0 + 16);
  sub_48AC(&qword_BDB00);
  uint64_t v4 = swift_allocObject();
  *(void *)(v0 + 32) = v4;
  *(_OWORD *)(v4 + 16) = xmmword_90CE0;
  *(void *)(v4 + 32) = 0xD000000000000016;
  *(void *)(v4 + 40) = 0x8000000000097D30;
  uint64_t v5 = sub_48AC(&qword_BE318);
  *(void *)(v4 + 48) = v3;
  *(void *)(v4 + 72) = v5;
  *(void *)(v4 + 80) = 0x6970696365527369;
  *(void *)(v4 + 88) = 0xEF656D6F48746E65;
  *(unsigned char *)(v4 + 96) = v2;
  *(void *)(v4 + 120) = &type metadata for Bool;
  *(void *)(v4 + 128) = 0x796C7065527369;
  *(void *)(v4 + 136) = 0xE700000000000000;
  *(void *)(v4 + 168) = &type metadata for Bool;
  *(unsigned char *)(v4 + 144) = v1;
  sub_50168();
  swift_bridgeObjectRetain();
  uint64_t v6 = swift_task_alloc();
  uint64_t v7 = (void *)sub_50198(v6);
  *uint64_t v7 = v8;
  v7[1] = sub_4EB0C;
  return v10(0xD000000000000026, 0x8000000000097D50, v4);
}

BOOL sub_4EFFC(uint64_t a1, void *a2)
{
  v6._uint64_t countAndFlagsBits = a1;
  v3._rawValue = &off_B4458;
  v6._object = a2;
  Swift::Int v4 = sub_8ED80(v3, v6);
  swift_bridgeObjectRelease();
  return v4 != 0;
}

uint64_t sub_4F044()
{
  return 0x7070416E65704FLL;
}

BOOL sub_4F068@<W0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = sub_4EFFC(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_4F0A0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_4F044();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_4F0C8()
{
  sub_CC60();
  v1[2] = v2;
  v1[3] = v0;
  sub_48AC(&qword_BD490);
  v1[4] = swift_task_alloc();
  sub_46200();
  return _swift_task_switch(v3, v4, v5);
}

uint64_t sub_4F154()
{
  sub_46250();
  uint64_t v1 = v0[4];
  uint64_t v2 = v0[2];
  sub_48AC(&qword_BDB00);
  uint64_t v3 = sub_50180();
  v0[5] = v3;
  *(_OWORD *)(v3 + 16) = xmmword_8FA10;
  uint64_t v4 = (uint64_t *)(v3 + 48);
  *(void *)(v3 + 32) = 0x656D614E707061;
  *(void *)(v3 + 40) = 0xE700000000000000;
  sub_4DF04(v2, v1, &qword_BD490);
  uint64_t v5 = sub_8E3D0();
  if (sub_501A4(v5) == 1)
  {
    sub_4DF64(v0[4], &qword_BD490);
    *(_OWORD *)uint64_t v4 = 0u;
    *(_OWORD *)(v3 + 64) = 0u;
  }
  else
  {
    *(void *)(v3 + 72) = v2;
    sub_C9F4(v4);
    sub_4E008();
    (*(void (**)(void))(v6 + 32))();
  }
  uint64_t v7 = (void *)sub_3E08C();
  v0[6] = v7;
  sub_4FF48();
  *uint64_t v7 = v0;
  v7[1] = sub_4F2E8;
  sub_14250();
  return v9(0xD00000000000001CLL);
}

uint64_t sub_4F2E8()
{
  sub_1425C();
  sub_7614();
  uint64_t v3 = v2;
  sub_461E4();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_CB34();
  void *v6 = v5;
  *(void *)(v3 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_46200();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v10 = sub_501C4();
    return v11(v10);
  }
}

uint64_t sub_4F400()
{
  sub_CC60();
  uint64_t v0 = sub_3E08C();
  uint64_t v1 = (void *)sub_3E0B8(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_500BC;
  sub_14250();
  unint64_t v3 = sub_3E0AC(38);
  return v4(v3);
}

uint64_t sub_4F4A0()
{
  sub_CC60();
  uint64_t v0 = sub_3E08C();
  uint64_t v1 = (void *)sub_3E0B8(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_4F540;
  sub_14250();
  unint64_t v3 = sub_3E0AC(63);
  return v4(v3);
}

uint64_t sub_4F540()
{
  sub_CC60();
  uint64_t v3 = v2;
  sub_7614();
  uint64_t v4 = *v1;
  sub_CB34();
  *uint64_t v5 = v4;
  uint64_t v6 = swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(uint64_t))(v4 + 8);
  if (!v0) {
    uint64_t v6 = v3;
  }
  return v7(v6);
}

uint64_t sub_4F610()
{
  sub_CC60();
  uint64_t v0 = sub_3E08C();
  uint64_t v1 = (void *)sub_3E0B8(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_500BC;
  sub_14250();
  unint64_t v3 = sub_3E0AC(44);
  return v4(v3);
}

uint64_t sub_4F6B0()
{
  sub_CC60();
  uint64_t v0 = sub_3E08C();
  uint64_t v1 = (void *)sub_3E0B8(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_500BC;
  sub_14250();
  unint64_t v3 = sub_3E0AC(42);
  return v4(v3);
}

uint64_t sub_4F750()
{
  sub_CC60();
  v1[3] = v2;
  v1[4] = v0;
  v1[2] = v3;
  sub_48AC(&qword_BD490);
  v1[5] = swift_task_alloc();
  sub_46200();
  return _swift_task_switch(v4, v5, v6);
}

uint64_t sub_4F7E0()
{
  sub_46250();
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[2];
  sub_48AC(&qword_BDB00);
  uint64_t v3 = swift_allocObject();
  v0[6] = v3;
  *(_OWORD *)(v3 + 16) = xmmword_90CF0;
  uint64_t v4 = (uint64_t *)(v3 + 48);
  sub_50110();
  *(void *)(v5 + 32) = v6;
  *(void *)(v5 + 40) = 0xE600000000000000;
  sub_4DF04(v2, v1, &qword_BD490);
  uint64_t v7 = sub_8E3D0();
  if (sub_501A4(v7) == 1)
  {
    sub_4DF64(v0[5], &qword_BD490);
    *(_OWORD *)uint64_t v4 = 0u;
    *(_OWORD *)(v3 + 64) = 0u;
  }
  else
  {
    *(void *)(v3 + 72) = v2;
    sub_C9F4(v4);
    sub_4E008();
    (*(void (**)(void))(v8 + 32))();
  }
  uint64_t v9 = v0[3];
  *(void *)(v3 + 80) = 0x656369766564;
  *(void *)(v3 + 88) = 0xE600000000000000;
  uint64_t v10 = 0;
  if (v9)
  {
    uint64_t v10 = sub_8E430();
  }
  else
  {
    *(void *)(v3 + 104) = 0;
    *(void *)(v3 + 112) = 0;
  }
  *(void *)(v3 + 96) = v9;
  *(void *)(v3 + 120) = v10;
  sub_50168();
  swift_retain();
  uint64_t v11 = (void *)swift_task_alloc();
  v0[7] = v11;
  *uint64_t v11 = v0;
  v11[1] = sub_4F998;
  sub_500E4();
  return v13(0xD000000000000036);
}

uint64_t sub_4F998()
{
  sub_1425C();
  sub_7614();
  uint64_t v3 = v2;
  sub_461E4();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_CB34();
  void *v6 = v5;
  *(void *)(v3 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_46200();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v10 = sub_501C4();
    return v11(v10);
  }
}

uint64_t sub_4FAB0()
{
  sub_CC60();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_4FB18(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return sub_461D8((uint64_t)sub_4FB30);
}

uint64_t sub_4FB30()
{
  sub_1425C();
  sub_48AC(&qword_BDB00);
  uint64_t v0 = sub_50180();
  uint64_t v1 = sub_501E4(v0);
  *(_OWORD *)(v1 + 16) = xmmword_8FA10;
  *(void *)(v1 + 32) = 0x67726154656D6F68;
  *(void *)(v1 + 40) = 0xEA00000000007465;
  uint64_t v2 = sub_48AC(&qword_BE318);
  sub_501D8(v2);
  sub_50144();
  uint64_t v3 = swift_task_alloc();
  uint64_t v4 = (void *)sub_50198(v3);
  *uint64_t v4 = v5;
  v4[1] = sub_4E73C;
  sub_500E4();
  return v7(0xD000000000000033);
}

uint64_t sub_4FC30()
{
  sub_CC60();
  uint64_t v0 = sub_3E08C();
  uint64_t v1 = (void *)sub_3E0B8(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_500BC;
  sub_14250();
  unint64_t v3 = sub_3E0AC(46);
  return v4(v3);
}

uint64_t sub_4FCD0(uint64_t a1, uint64_t a2)
{
  return sub_4FD24(a1, a2);
}

uint64_t sub_4FD24(uint64_t a1, uint64_t a2)
{
  sub_8E460();
  sub_12B34();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_AAA8();
  uint64_t v10 = v9 - v8;
  uint64_t v11 = sub_48AC(&qword_BC7B8);
  __chkstk_darwin(v11 - 8);
  sub_AAA8();
  sub_4DF04(a1, v13 - v12, &qword_BC7B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v10, a2, v2);
  uint64_t v14 = sub_8E3E0();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a2, v2);
  sub_4DF64(a1, &qword_BC7B8);
  return v14;
}

uint64_t sub_4FE64(uint64_t a1, uint64_t a2)
{
  sub_8E460();
  sub_12B34();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  sub_AAA8();
  uint64_t v9 = v8 - v7;
  swift_allocObject();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v9, a2, v2);
  uint64_t v10 = sub_8E3F0();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a2, v2);
  return v10;
}

uint64_t sub_4FF40()
{
  return type metadata accessor for SendAnnouncementCATsSimple();
}

unint64_t sub_4FF48()
{
  unint64_t result = qword_BE418;
  if (!qword_BE418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BE418);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SendAnnouncementCATsSimple.OpenHomeAppDialogIds(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x50030);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SendAnnouncementCATsSimple.OpenHomeAppDialogIds()
{
  return &type metadata for SendAnnouncementCATsSimple.OpenHomeAppDialogIds;
}

unint64_t sub_5006C()
{
  unint64_t result = qword_BE420;
  if (!qword_BE420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BE420);
  }
  return result;
}

uint64_t sub_500C0()
{
  return v0;
}

uint64_t sub_500F4@<X0>(uint64_t a1@<X8>)
{
  return a1;
}

uint64_t sub_50120()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_50144()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_50168()
{
  return v0;
}

uint64_t sub_50180()
{
  return swift_allocObject();
}

uint64_t sub_50198(uint64_t result)
{
  *(void *)(v1 + 40) = result;
  return result;
}

uint64_t sub_501A4(uint64_t a1)
{
  return _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0(v1, 1, a1);
}

uint64_t sub_501C4()
{
  return v0;
}

uint64_t sub_501D8(uint64_t result)
{
  *(void *)(v1 + 72) = result;
  *(void *)(v1 + 48) = v2;
  return result;
}

uint64_t sub_501E4(uint64_t result)
{
  *(void *)(v1 + 32) = result;
  return result;
}

uint64_t sub_501F0(char a1)
{
  char v1 = a1 & 1;
  v12[3] = (uint64_t)&unk_B5908;
  v12[4] = sub_58B84();
  LOBYTE(v12[0]) = v1;
  char v2 = sub_8D900();
  sub_4950((uint64_t)v12);
  if (qword_BB830 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_8E730();
  sub_50FC(v3, (uint64_t)qword_BFEC8);
  unsigned int v4 = sub_8E710();
  os_log_type_t v5 = sub_8EB00();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = swift_slowAlloc();
    v12[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136315650;
    uint64_t v7 = sub_8EC60();
    sub_8758C(v7, v8, v12);
    sub_8EBD0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2080;
    uint64_t v9 = sub_8EC60();
    sub_8758C(v9, v10, v12);
    sub_8EBD0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 22) = 1024;
    sub_8EBD0();
    _os_log_impl(&dword_0, v4, v5, "%s/%s=%{BOOL}d", (uint8_t *)v6, 0x1Cu);
    swift_arrayDestroy();
    sub_CC2C();
    sub_CC2C();
  }

  return v2 & 1;
}

uint64_t sub_50424()
{
  v10[3] = (uint64_t)&unk_B59B8;
  v10[4] = sub_5838C();
  char v0 = sub_8D900();
  sub_4950((uint64_t)v10);
  if (qword_BB830 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_8E730();
  sub_50FC(v1, (uint64_t)qword_BFEC8);
  char v2 = sub_8E710();
  os_log_type_t v3 = sub_8EB00();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = swift_slowAlloc();
    v10[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315650;
    uint64_t v5 = sub_8EC60();
    sub_8758C(v5, v6, v10);
    sub_8EBD0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v4 + 12) = 2080;
    uint64_t v7 = sub_8EC60();
    sub_8758C(v7, v8, v10);
    sub_8EBD0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v4 + 22) = 1024;
    sub_8EBD0();
    _os_log_impl(&dword_0, v2, v3, "%s/%s=%{BOOL}d", (uint8_t *)v4, 0x1Cu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  return v0 & 1;
}

uint64_t sub_50648(uint64_t a1, uint64_t a2, void (**a3)(char *, void, uint64_t), uint64_t a4, void (*a5)(uint64_t), uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v80 = a5;
  uint64_t v13 = sub_48AC(&qword_BCFC8);
  __chkstk_darwin(v13 - 8);
  Swift::Int v78 = (char *)v74 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = sub_8D370();
  os_log_type_t v15 = *(void (***)(char *, void, uint64_t))(v77 - 8);
  uint64_t v16 = __chkstk_darwin(v77);
  uint64_t v76 = (char *)v74 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v79 = (char *)v74 - v18;
  if (qword_BB830 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_8E730();
  uint64_t v20 = sub_50FC(v19, (uint64_t)qword_BFEC8);
  uint64_t v21 = sub_8E710();
  os_log_type_t v22 = sub_8EB00();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = (uint8_t *)swift_slowAlloc();
    os_log_type_t v81 = a3;
    *(_WORD *)uint64_t v23 = 0;
    _os_log_impl(&dword_0, v21, v22, "#HomeCommunicationNLContextProvider makeNeedsDisambiguationContextFor called", v23, 2u);
    a3 = v81;
    swift_slowDealloc();
  }

  swift_bridgeObjectRetain();
  if (sub_25C44(a2, a3) == 1)
  {
    v74[3] = v7;
    sub_8D360();
    sub_1E228(0);
    sub_8D320();
    sub_48AC(&qword_BCF00);
    uint64_t v24 = swift_allocObject();
    long long v75 = xmmword_8FA10;
    *(_OWORD *)(v24 + 16) = xmmword_8FA10;
    v84[0] = sub_8E900();
    v84[1] = v25;
    uint64_t v82 = 32;
    unint64_t v83 = 0xE100000000000000;
    uint64_t v85 = 95;
    unint64_t v86 = 0xE100000000000000;
    sub_F5CC();
    uint64_t v26 = sub_8EBF0();
    uint64_t v28 = v27;
    swift_bridgeObjectRelease();
    unint64_t v29 = sub_1E3A4(v26, v28, 3);
    uint64_t v31 = v30;
    swift_bridgeObjectRelease();
    *(void *)(v24 + 32) = v29;
    *(void *)(v24 + 40) = v31;
    sub_8D340();
    uint64_t v32 = sub_2EE0C();
    unint64_t v33 = (unint64_t)sub_6D5C8(v32);
    swift_bridgeObjectRelease();
    os_log_type_t v81 = v15;
    char v34 = v80;
    if (!v33)
    {
LABEL_36:
      unint64_t v66 = sub_8E710();
      os_log_type_t v67 = sub_8EB00();
      if (os_log_type_enabled(v66, v67))
      {
        uint64_t v68 = (uint8_t *)swift_slowAlloc();
        v84[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v68 = 136315138;
        uint64_t v69 = v79;
        swift_beginAccess();
        uint64_t v70 = v77;
        ((void (**)(char *, char *, uint64_t))v81)[2](v76, v69, v77);
        uint64_t v71 = sub_8E8E0();
        uint64_t v85 = sub_8758C(v71, v72, v84);
        char v34 = v80;
        os_log_type_t v15 = v81;
        sub_8EBD0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_0, v66, v67, "#HomeCommunicationNLContextProvider nlContext: %s", v68, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        uint64_t v70 = v77;
        uint64_t v69 = v79;
      }
      swift_beginAccess();
      uint64_t v73 = (uint64_t)v78;
      ((void (**)(char *, char *, uint64_t))v15)[2](v78, v69, v70);
      _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(v73, 0, 1, v70);
      v34(v73);
      sub_31030(v73, &qword_BCFC8);
      return ((uint64_t (*)(char *, uint64_t))v15[1])(v69, v70);
    }
    uint64_t v35 = swift_allocObject();
    *(_OWORD *)(v35 + 16) = v75;
    *(void *)(v35 + 32) = sub_1E228(5);
    *(void *)(v35 + 40) = v36;
    sub_8D350();
    sub_8D2F0();
    swift_bridgeObjectRetain_n();
    uint64_t v37 = sub_8E710();
    os_log_type_t v38 = sub_8EB00();
    BOOL v39 = os_log_type_enabled(v37, v38);
    v74[1] = v20;
    if (v39)
    {
      uint64_t v40 = (uint8_t *)swift_slowAlloc();
      v84[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v40 = 136315138;
      sub_8D10(0, (unint64_t *)&qword_BCFD8);
      swift_bridgeObjectRetain();
      uint64_t v41 = sub_8EA40();
      unint64_t v43 = v42;
      swift_bridgeObjectRelease();
      uint64_t v44 = v41;
      os_log_type_t v15 = v81;
      uint64_t v82 = sub_8758C(v44, v43, v84);
      sub_8EBD0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v37, v38, "#HomeCommunicationNLContextProvider makeDisambiguationSDAForFilters for homes: %s", v40, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v74[2] = a6;
    if (v33 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t result = sub_8ED40();
      uint64_t v51 = result;
      if (result) {
        goto LABEL_17;
      }
    }
    else
    {
      uint64_t v51 = *(void *)((char *)&dword_10 + (v33 & 0xFFFFFFFFFFFFFF8));
      uint64_t result = swift_bridgeObjectRetain();
      if (v51)
      {
LABEL_17:
        if (v51 < 1)
        {
          __break(1u);
          return result;
        }
        uint64_t v52 = 0;
        uint64_t v53 = (char *)_swiftEmptyArrayStorage;
        do
        {
          if ((v33 & 0xC000000000000001) != 0) {
            id v54 = (id)sub_8EC70();
          }
          else {
            id v54 = *(id *)(v33 + 8 * v52 + 32);
          }
          uint64_t v55 = v54;
          id v56 = [v54 home];
          if (v56)
          {
            int v57 = v56;
            id v58 = [v56 spokenPhrase];

            uint64_t v59 = sub_8E8D0();
            uint64_t v61 = v60;

            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v53 = sub_768FC(0, *((void *)v53 + 2) + 1, 1, (uint64_t)v53);
            }
            unint64_t v63 = *((void *)v53 + 2);
            unint64_t v62 = *((void *)v53 + 3);
            if (v63 >= v62 >> 1) {
              uint64_t v53 = sub_768FC((char *)(v62 > 1), v63 + 1, 1, (uint64_t)v53);
            }
            *((void *)v53 + 2) = v63 + 1;
            uint64_t v64 = &v53[16 * v63];
            *((void *)v64 + 4) = v59;
            *((void *)v64 + 5) = v61;
            os_log_type_t v15 = v81;
          }
          else
          {
          }
          ++v52;
        }
        while (v51 != v52);
        goto LABEL_33;
      }
    }
    uint64_t v53 = (char *)_swiftEmptyArrayStorage;
LABEL_33:
    swift_bridgeObjectRelease();
    if (qword_BB7E8 != -1) {
      swift_once();
    }
    uint64_t v65 = qword_BFE50;
    swift_retain();
    sub_5853C((uint64_t)v53, v65);
    swift_release();
    sub_8D2D0();
    sub_52770(v33);
    swift_bridgeObjectRelease();
    sub_8D2C0();
    sub_51054((uint64_t)v53);
    swift_bridgeObjectRelease();
    sub_8D2E0();
    char v34 = v80;
    goto LABEL_36;
  }
  uint64_t v45 = sub_8E710();
  os_log_type_t v46 = sub_8EB10();
  if (os_log_type_enabled(v45, v46))
  {
    uint64_t v47 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v47 = 0;
    _os_log_impl(&dword_0, v45, v46, "Incorrect slot presented for disambiguation", v47, 2u);
    swift_slowDealloc();
  }

  sub_48AC(&qword_BE640);
  uint64_t v48 = (uint64_t (*)(uint64_t, uint64_t, void (**)(char *, void, uint64_t), uint64_t, void (*)(uint64_t), uint64_t))sub_8D6C0();
  unsigned __int8 v49 = v80;

  return v48(a1, a2, a3, a4, v49, a6);
}

uint64_t sub_51054(uint64_t a1)
{
  uint64_t v2 = sub_8D920();
  __chkstk_darwin(v2 - 8);
  uint64_t v104 = (char *)&v79 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = sub_8DA40();
  uint64_t v4 = *(void *)(v110 - 8);
  uint64_t v5 = __chkstk_darwin(v110);
  uint64_t v112 = (char *)&v79 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v122 = (char *)&v79 - v7;
  uint64_t v113 = sub_8D9C0();
  uint64_t v8 = *(void *)(v113 - 8);
  uint64_t v9 = __chkstk_darwin(v113);
  uint64_t v121 = (char *)&v79 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v109 = (char *)&v79 - v11;
  uint64_t v103 = sub_8DC00();
  uint64_t v12 = *(void *)(v103 - 8);
  __chkstk_darwin(v103);
  uint64_t v108 = (char *)&v79 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_48AC(&qword_BD000);
  __chkstk_darwin(v14 - 8);
  uint64_t v107 = (uint64_t)&v79 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = sub_8DD80();
  uint64_t v16 = *(void *)(v106 - 8);
  __chkstk_darwin(v106);
  uint64_t v105 = (char *)&v79 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_8DA80();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v79 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_8DAB0();
  uint64_t v86 = *(void *)(v22 - 8);
  uint64_t v23 = __chkstk_darwin(v22);
  uint64_t v84 = (char *)&v79 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v85 = (char *)&v79 - v25;
  unint64_t v126 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v26 = *(void *)(a1 + 16);
  if (v26)
  {
    uint64_t v80 = v22;
    os_log_type_t v81 = v21;
    uint64_t v82 = v19;
    uint64_t v83 = v18;
    uint64_t v97 = sub_8D10(0, &qword_BD008);
    uint64_t v102 = (void (**)(char *, void, uint64_t))(v16 + 104);
    uint64_t v101 = (void (**)(uint64_t, uint64_t))(v16 + 8);
    unsigned int v100 = enum case for IdentifierValue.vHomeAutomationHome(_:);
    Swift::Int v96 = (void (**)(char *, uint64_t))(v12 + 8);
    uint64_t v111 = (void (**)(char *, char *, uint64_t))(v4 + 16);
    uint64_t v92 = (void (**)(char *, char *, uint64_t))(v8 + 16);
    uint64_t v91 = v8 + 32;
    uint64_t v93 = v8;
    uint64_t v94 = (void (**)(char *, uint64_t))(v8 + 8);
    uint64_t v95 = (void (**)(char *, uint64_t))(v4 + 8);
    uint64_t v88 = &v125;
    uint64_t v99 = sub_8DBB0();
    swift_bridgeObjectRetain();
    uint64_t v27 = 0;
    uint64_t v28 = _swiftEmptyArrayStorage;
    uint64_t v79 = a1;
    unint64_t v29 = (uint64_t *)(a1 + 40);
    *((void *)&v30 + 1) = 3;
    long long v98 = xmmword_8FC30;
    *(void *)&long long v30 = 136315138;
    long long v89 = v30;
    uint64_t v87 = (char *)&type metadata for Any + 8;
    uint64_t v31 = v109;
    uint64_t v32 = v110;
    while (1)
    {
      uint64_t v33 = (uint64_t)v28;
      uint64_t v34 = v32;
      uint64_t v119 = v29;
      uint64_t v120 = v26;
      uint64_t v36 = *(v29 - 1);
      uint64_t v35 = *v29;
      swift_allocObject();
      swift_bridgeObjectRetain();
      uint64_t v37 = sub_8DBA0();
      uint64_t v38 = (uint64_t)v105;
      uint64_t v39 = v106;
      (*v102)(v105, v100, v106);
      sub_51F64(v37, v36, v35, v38);
      swift_bridgeObjectRelease();
      (*v101)(v38, v39);
      sub_8E150();
      swift_allocObject();
      uint64_t v40 = sub_8E140();
      swift_retain();
      sub_8DB80();
      swift_release();
      sub_48AC(&qword_BE170);
      uint64_t v41 = swift_allocObject();
      *(_OWORD *)(v41 + 16) = v98;
      *(void *)(v41 + 32) = v40;
      uint64_t v123 = v41;
      sub_8EA50();
      uint64_t v42 = sub_8DEA0();
      uint64_t v43 = v107;
      _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(v107, 1, 1, v42);
      swift_retain();
      uint64_t v44 = sub_8DE50();
      swift_bridgeObjectRelease();
      sub_31030(v43, &qword_BD000);
      uint64_t v45 = v108;
      sub_8E1A0();
      if (v27) {
        break;
      }
      os_log_type_t v46 = (void *)sub_8EB30();
      (*v96)(v45, v103);
      id v47 = objc_allocWithZone((Class)SIRINLUUserStatedTask);
      id v117 = v46;
      id v48 = objc_msgSend(v47, "initWithTask:", v46, v79);
      sub_8EA10();
      if (*(void *)((char *)&dword_10 + (v126 & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18
                                                                                      + (v126 & 0xFFFFFFFFFFFFFF8)) >> 1)
        sub_8EA60();
      id v116 = v48;
      sub_8EA80();
      sub_8EA50();
      sub_8D9B0();
      unsigned __int8 v49 = v122;
      sub_8DA30();
      uint64_t v118 = v44;
      sub_8DB00();
      uint64_t v32 = v34;
      uint64_t v114 = v40;
      uint64_t v115 = 0;
      swift_beginAccess();
      sub_8DA20();
      swift_endAccess();
      os_log_type_t v50 = *v111;
      (*v111)(v112, v49, v34);
      sub_8D9A0();
      uint64_t v51 = v113;
      (*v92)(v121, v31, v113);
      uint64_t v28 = (void *)v33;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v28 = (void *)sub_76D40(0, *(void *)(v33 + 16) + 1, 1, v33);
      }
      uint64_t v52 = v93;
      unint64_t v54 = v28[2];
      unint64_t v53 = v28[3];
      if (v54 >= v53 >> 1) {
        uint64_t v28 = (void *)sub_76D40(v53 > 1, v54 + 1, 1, (uint64_t)v28);
      }
      uint64_t v55 = v121;
      id v56 = v122;
      v28[2] = v54 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v52 + 32))((unint64_t)v28+ ((*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80))+ *(void *)(v52 + 72) * v54, v55, v51);
      if (qword_BB830 != -1) {
        swift_once();
      }
      uint64_t v57 = sub_8E730();
      sub_50FC(v57, (uint64_t)qword_BFEC8);
      id v58 = sub_8E710();
      os_log_type_t v59 = sub_8EB00();
      if (os_log_type_enabled(v58, v59))
      {
        uint64_t v60 = (uint8_t *)swift_slowAlloc();
        uint64_t v61 = swift_slowAlloc();
        uint64_t v90 = v28;
        uint64_t v123 = v61;
        *(_DWORD *)uint64_t v60 = v89;
        uint64_t v62 = (uint64_t)v112;
        v50(v112, v56, v110);
        uint64_t v63 = sub_6AE2C(v62);
        uint64_t v124 = sub_8758C(v63, v64, &v123);
        sub_8EBD0();
        swift_bridgeObjectRelease();
        uint64_t v65 = v56;
        _os_log_impl(&dword_0, v58, v59, "#HomeCommunicationNLContextProvider Building UserStatedTask for disambiguating between homes: %s", v60, 0xCu);
        swift_arrayDestroy();
        uint64_t v28 = v90;
        swift_slowDealloc();
        uint64_t v32 = v110;
        swift_slowDealloc();
        swift_release();
        swift_release();

        swift_release();
        uint64_t v31 = v109;
        (*v94)(v109, v113);
        (*v95)(v65, v32);
      }
      else
      {
        swift_release();
        swift_release();

        swift_release();
        unint64_t v66 = v109;
        (*v94)(v109, v51);
        os_log_type_t v67 = v56;
        uint64_t v31 = v66;
        (*v95)(v67, v32);
      }
      uint64_t v27 = v115;
      unint64_t v29 = v119 + 2;
      uint64_t v26 = v120 - 1;
      if (v120 == 1)
      {
        swift_bridgeObjectRelease();
        uint64_t v18 = v83;
        uint64_t v19 = v82;
        uint64_t v21 = v81;
        uint64_t v22 = v80;
        goto LABEL_24;
      }
    }
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    if (qword_BB830 != -1) {
      swift_once();
    }
    uint64_t v68 = sub_8E730();
    sub_50FC(v68, (uint64_t)qword_BFEC8);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v69 = sub_8E710();
    os_log_type_t v70 = sub_8EB10();
    if (os_log_type_enabled(v69, v70))
    {
      uint64_t v71 = (uint8_t *)swift_slowAlloc();
      uint64_t v123 = swift_slowAlloc();
      *(_DWORD *)uint64_t v71 = v89;
      uint64_t v124 = v27;
      swift_errorRetain();
      sub_48AC(&qword_BD018);
      uint64_t v72 = sub_8E8E0();
      uint64_t v124 = sub_8758C(v72, v73, &v123);
      sub_8EBD0();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl(&dword_0, v69, v70, "#HomeCommunicationNLContextProvider Error building system dialog act for disambiguation: %s", v71, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
    uint64_t v18 = v83;
    uint64_t v19 = v82;
    uint64_t v21 = v81;
    uint64_t v22 = v80;
  }
  else
  {
LABEL_24:
    swift_bridgeObjectRelease();
  }
  uint64_t v74 = v85;
  sub_8DAA0();
  sub_8DA90();
  sub_8DA70();
  uint64_t v75 = v86;
  (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v84, v74, v22);
  sub_8DA50();
  sub_48AC(&qword_BD010);
  unint64_t v76 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v77 = swift_allocObject();
  *(_OWORD *)(v77 + 16) = xmmword_8FA10;
  (*(void (**)(unint64_t, char *, uint64_t))(v19 + 32))(v77 + v76, v21, v18);
  (*(void (**)(char *, uint64_t))(v75 + 8))(v74, v22);
  return v77;
}

void sub_51F64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v60 = a4;
  uint64_t v5 = sub_48AC(&qword_BCFF8);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_48AC(&qword_BBFC0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = sub_8DD80();
  uint64_t v55 = *(void *)(v57 - 8);
  __chkstk_darwin(v57);
  uint64_t v12 = (char *)v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_8DF30();
  uint64_t v53 = *(void *)(v13 - 8);
  uint64_t v54 = v13;
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_8DF10();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_8DD40();
  uint64_t v58 = *(void *)(v20 - 8);
  uint64_t v59 = v20;
  uint64_t v21 = __chkstk_darwin(v20);
  id v56 = (char *)v44 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v61 = (char *)v44 - v23;
  sub_8DB90();
  sub_8DFE0();
  unint64_t v24 = sub_8DE70();
  if (v24)
  {
    unint64_t v25 = v24;
    if (v24 >> 62)
    {
      uint64_t v26 = sub_8ED40();
      if (v26)
      {
LABEL_4:
        uint64_t v51 = a2;
        uint64_t v27 = v26 - 1;
        if (__OFSUB__(v26, 1))
        {
          __break(1u);
        }
        else
        {
          os_log_type_t v50 = v7;
          sub_2E448(v26 - 1, (v25 & 0xC000000000000001) == 0, v25);
          unsigned __int8 v49 = v10;
          uint64_t v52 = v12;
          if ((v25 & 0xC000000000000001) == 0)
          {
            uint64_t v48 = *(void *)(v25 + 8 * v27 + 32);
            swift_retain();
LABEL_7:
            swift_bridgeObjectRelease();
            unsigned int v47 = enum case for IdentifierAppBundle.abHomeKit(_:);
            os_log_type_t v46 = *(void (**)(char *))(v17 + 104);
            uint64_t v28 = v19;
            v46(v19);
            swift_bridgeObjectRetain();
            uint64_t v29 = sub_8DF00();
            v44[0] = v30;
            v44[1] = v29;
            (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
            uint64_t v31 = v53;
            uint64_t v32 = v54;
            uint64_t v45 = *(void (**)(char *, void, uint64_t))(v53 + 104);
            v45(v15, enum case for IdentifierNamespace.nsSemanticValue(_:), v54);
            sub_8DF20();
            (*(void (**)(char *, uint64_t))(v31 + 8))(v15, v32);
            sub_8DD10();
            sub_8DC20();
            (*(void (**)(char *, uint64_t, uint64_t))(v55 + 16))(v52, v60, v57);
            ((void (*)(char *, void, uint64_t))v46)(v28, v47, v16);
            uint64_t v33 = (uint64_t)v49;
            v45(v49, enum case for IdentifierNamespace.nsHomeKitEntityType(_:), v32);
            _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(v33, 0, 1, v32);
            uint64_t v34 = enum case for UsoIdentifier.NluComponent.unknown(_:);
            uint64_t v35 = sub_8DCC0();
            uint64_t v36 = (uint64_t)v50;
            (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v35 - 8) + 104))(v50, v34, v35);
            _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(v36, 0, 1, v35);
            uint64_t v37 = v56;
            sub_8DD00();
            sub_8DC20();
            swift_release();
            uint64_t v38 = v59;
            uint64_t v39 = *(void (**)(char *, uint64_t))(v58 + 8);
            v39(v37, v59);
            v39(v61, v38);
            return;
          }
        }
        uint64_t v48 = sub_8EC70();
        goto LABEL_7;
      }
    }
    else
    {
      uint64_t v26 = *(void *)((char *)&dword_10 + (v24 & 0xFFFFFFFFFFFFFF8));
      if (v26) {
        goto LABEL_4;
      }
    }
    swift_bridgeObjectRelease();
  }
  if (qword_BB830 != -1) {
    swift_once();
  }
  uint64_t v40 = sub_8E730();
  sub_50FC(v40, (uint64_t)qword_BFEC8);
  uint64_t v61 = (char *)sub_8E710();
  os_log_type_t v41 = sub_8EB10();
  if (os_log_type_enabled((os_log_t)v61, v41))
  {
    uint64_t v42 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v42 = 0;
    _os_log_impl(&dword_0, (os_log_t)v61, v41, "Unable to get name string builder", v42, 2u);
    swift_slowDealloc();
  }
  os_log_t v43 = (os_log_t)v61;
}

unint64_t sub_52620()
{
  sub_48AC(&qword_BC760);
  sub_22080();
  uint64_t v0 = sub_8DC10();
  sub_765E8(v0, v1);
  uint64_t v3 = v2;
  swift_bridgeObjectRelease();
  if (v3)
  {
    uint64_t v4 = sub_8E8A0();
    uint64_t v6 = v5;
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = 0;
    uint64_t v6 = (void *)0xE000000000000000;
  }
  v10._uint64_t countAndFlagsBits = v4;
  v10._object = v6;
  sub_8E960(v10);
  swift_bridgeObjectRelease();
  uint64_t v7 = sub_8DC10();
  sub_80120(1uLL, v7, v8);
  sub_58B38();
  swift_bridgeObjectRetain();
  sub_8E950();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0xD000000000000012;
}

void *sub_52770(unint64_t a1)
{
  uint64_t v63 = sub_8CAC0();
  uint64_t v2 = *(void *)(v63 - 8);
  __chkstk_darwin(v63);
  uint64_t v62 = (char *)v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_8E7F0();
  uint64_t v50 = *(void *)(v4 - 8);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v55 = (char *)v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)v45 - v8;
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)v45 - v10;
  uint64_t v12 = sub_48AC(&qword_BCFE0);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v61 = (uint64_t)v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v60 = (char *)v45 - v16;
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)v45 - v17;
  sub_8E7A0();
  swift_allocObject();
  uint64_t v64 = sub_8E790();
  unint64_t v67 = a1;
  if (!(a1 >> 62))
  {
    uint64_t v19 = *(void *)((char *)&dword_10 + (v67 & 0xFFFFFFFFFFFFFF8));
    uint64_t result = (void *)swift_bridgeObjectRetain();
    if (v19) {
      goto LABEL_3;
    }
LABEL_25:
    swift_release();
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRetain();
  uint64_t result = (void *)sub_8ED40();
  uint64_t v19 = (uint64_t)result;
  if (!result) {
    goto LABEL_25;
  }
LABEL_3:
  if (v19 < 1)
  {
    __break(1u);
  }
  else
  {
    unsigned __int8 v49 = v9;
    uint64_t v22 = 0;
    unint64_t v66 = v67 & 0xC000000000000001;
    uint64_t v58 = (void (**)(char *, uint64_t))(v2 + 8);
    uint64_t v53 = (void (**)(char *, char *, uint64_t))(v50 + 16);
    uint64_t v52 = (void (**)(char *, uint64_t))(v50 + 8);
    uint64_t v47 = v50 + 32;
    uint64_t v65 = _swiftEmptyArrayStorage;
    unint64_t v57 = 0x8000000000096CB0;
    *(void *)&long long v21 = 136315138;
    long long v46 = v21;
    v45[1] = (char *)&type metadata for Any + 8;
    uint64_t v54 = v11;
    uint64_t v48 = v18;
    uint64_t v59 = v19;
    uint64_t v56 = v4;
    do
    {
      if (v66) {
        id v23 = (id)sub_8EC70();
      }
      else {
        id v23 = *(id *)(v67 + 8 * v22 + 32);
      }
      unint64_t v24 = v23;
      uint64_t v25 = sub_53020(v23);
      if (v25)
      {
        uint64_t v70 = v22;
        uint64_t v26 = v25;
        uint64_t v27 = sub_8E770();
        _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0((uint64_t)v18, 1, 1, v27);
        uint64_t v28 = (uint64_t)v60;
        sub_8E780();
        sub_31030((uint64_t)v18, &qword_BCFE0);
        _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(v28, 0, 1, v27);
        sub_30F6C(v28, (uint64_t)v18, &qword_BCFE0);
        uint64_t v29 = v62;
        sub_8CAB0();
        sub_8CA90();
        (*v58)(v29, v63);
        sub_30ED8((uint64_t)v18, v61, &qword_BCFE0);
        sub_8D10(0, (unint64_t *)&qword_BCFD8);
        swift_retain();
        id v68 = v24;
        uint64_t v69 = v26;
        sub_8E7D0();
        uint64_t v30 = v56;
        if (qword_BB830 != -1) {
          swift_once();
        }
        uint64_t v31 = sub_8E730();
        sub_50FC(v31, (uint64_t)qword_BFEC8);
        uint64_t v32 = v49;
        uint64_t v51 = *v53;
        v51(v49, v54, v30);
        uint64_t v33 = sub_8E710();
        os_log_type_t v34 = sub_8EB00();
        BOOL v35 = os_log_type_enabled(v33, v34);
        uint64_t v22 = v70;
        if (v35)
        {
          uint64_t v36 = swift_slowAlloc();
          v71[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v36 = v46;
          sub_58AF0((unint64_t *)&qword_BCFE8, 255, (void (*)(uint64_t))&type metadata accessor for RREntity);
          uint64_t v37 = sub_8EE20();
          *(void *)(v36 + 4) = sub_8758C(v37, v38, v71);
          swift_bridgeObjectRelease();
          uint64_t v39 = *v52;
          (*v52)(v32, v56);
          _os_log_impl(&dword_0, v33, v34, "#HomeCommunicationNLContextProvider rrEntity: %s", (uint8_t *)v36, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          uint64_t v30 = v56;
          swift_slowDealloc();
        }
        else
        {
          uint64_t v39 = *v52;
          (*v52)(v32, v30);
        }

        uint64_t v18 = v48;
        uint64_t v19 = v59;
        uint64_t v40 = v54;
        v51(v55, v54, v30);
        if (swift_isUniquelyReferenced_nonNull_native()) {
          os_log_type_t v41 = v65;
        }
        else {
          os_log_type_t v41 = (void *)sub_76CF8(0, v65[2] + 1, 1, (uint64_t)v65);
        }
        unint64_t v43 = v41[2];
        unint64_t v42 = v41[3];
        if (v43 >= v42 >> 1) {
          os_log_type_t v41 = (void *)sub_76CF8(v42 > 1, v43 + 1, 1, (uint64_t)v41);
        }
        v41[2] = v43 + 1;
        unint64_t v44 = (*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80);
        uint64_t v65 = v41;
        (*(void (**)(char *, char *, uint64_t))(v50 + 32))((char *)v41 + v44 + *(void *)(v50 + 72) * v43, v55, v30);
        swift_release();

        v39(v40, v30);
        sub_31030((uint64_t)v18, &qword_BCFE0);
      }
      else
      {
      }
      ++v22;
    }
    while (v19 != v22);
    swift_release();
    swift_bridgeObjectRelease();
    return v65;
  }
  return result;
}

uint64_t sub_53020(void *a1)
{
  uint64_t v2 = sub_8DD80();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = [a1 home];
  if (v6)
  {
    uint64_t v7 = v6;
    id v8 = [v6 spokenPhrase];

    uint64_t v9 = sub_8E8D0();
    uint64_t v11 = v10;
  }
  else
  {
    uint64_t v9 = 0;
    uint64_t v11 = 0xE000000000000000;
  }
  sub_8DBB0();
  swift_allocObject();
  uint64_t v12 = sub_8DBA0();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for IdentifierValue.vHomeAutomationHome(_:), v2);
  sub_51F64(v12, v9, v11, (uint64_t)v5);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t v13 = sub_8DFD0();
  swift_release();
  return v13;
}

uint64_t sub_531CC@<X0>(uint64_t a1@<X0>, uint8_t *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v118 = a1;
  uint64_t v5 = sub_8D860();
  sub_5190();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v112 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_8D890();
  sub_5190();
  uint64_t v114 = v11;
  uint64_t v115 = v12;
  __chkstk_darwin(v11);
  id v116 = (uint8_t *)&v112 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v120 = sub_8D8B0();
  sub_5190();
  uint64_t v15 = v14;
  uint64_t v17 = __chkstk_darwin(v16);
  uint64_t v113 = (char *)&v112 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v17);
  long long v21 = (char *)&v112 - v20;
  __chkstk_darwin(v19);
  uint64_t v119 = (char *)&v112 - v22;
  if (qword_BB830 != -1) {
    swift_once();
  }
  uint64_t v23 = sub_8E730();
  uint64_t v117 = sub_50FC(v23, (uint64_t)qword_BFEC8);
  unint64_t v24 = sub_8E710();
  os_log_type_t v25 = sub_8EB00();
  if (os_log_type_enabled(v24, v25))
  {
    uint64_t v26 = (_WORD *)sub_CCE4();
    uint64_t v112 = v10;
    sub_58C54(v26);
    _os_log_impl(&dword_0, v24, v25, "#SendAnnouncementDisambiguationStrategy actionForInput called", a2, 2u);
    uint64_t v10 = v112;
    sub_CC2C();
  }

  uint64_t v27 = v118;
  uint64_t v28 = v119;
  sub_8D840();
  uint64_t v29 = v28;
  uint64_t v30 = v120;
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v21, v29, v120);
  int v31 = (*(uint64_t (**)(char *, uint64_t))(v15 + 88))(v21, v30);
  if (v31 == enum case for Parse.NLv3IntentOnly(_:)) {
    goto LABEL_6;
  }
  if (v31 == enum case for Parse.directInvocation(_:))
  {
    uint64_t v35 = sub_58C10();
    v36(v35);
    uint64_t v37 = v115;
    unint64_t v38 = v116;
    uint64_t v39 = v114;
    (*((void (**)(uint8_t *, char *, uint64_t))v115 + 4))(v116, v21, v114);
    if (sub_8D870() == 0xD00000000000003ALL && v40 == 0x8000000000096120)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v51 = sub_8EE40();
      swift_bridgeObjectRelease();
      if ((v51 & 1) == 0)
      {
        uint64_t v88 = (void *)sub_8E710();
        os_log_type_t v89 = sub_8EB10();
        if (sub_1CC84(v89))
        {
          uint64_t v90 = (_WORD *)sub_CCE4();
          sub_58C54(v90);
          sub_1CDC8(&dword_0, v91, v92, "#SendAnnouncementDisambiguationStrategy unknown directionInvocation Identifier");
          uint64_t v37 = v115;
          sub_CC2C();
        }

        goto LABEL_61;
      }
    }
    uint64_t v52 = sub_8D880();
    if (v52)
    {
      uint64_t v53 = v52;
      if (qword_BB7F8 != -1) {
        swift_once();
      }
      uint64_t v54 = qword_BFE88;
      uint64_t v55 = unk_BFE90;
      swift_bridgeObjectRetain();
      sub_5C020(v54, v55, v53, &v125);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v126)
      {
        if (swift_dynamicCast())
        {
          uint64_t v56 = v123;
          unint64_t v57 = v3[17];
          if (v57 >> 62)
          {
            swift_bridgeObjectRetain();
            uint64_t v106 = sub_8ED40();
            swift_bridgeObjectRelease();
            if (v106) {
              goto LABEL_26;
            }
          }
          else if (*(void *)((char *)&dword_10 + (v57 & 0xFFFFFFFFFFFFFF8)))
          {
LABEL_26:
            uint64_t v58 = v3[17];
            sub_2E448(v56, (v58 & 0xC000000000000001) == 0, v58);
            if ((v58 & 0xC000000000000001) != 0)
            {
              swift_bridgeObjectRetain();
              id v59 = (id)sub_8EC70();
              swift_bridgeObjectRelease();
            }
            else
            {
              id v59 = *(id *)(v58 + 8 * v56 + 32);
            }
            uint64_t v60 = (void *)v3[16];
            v3[16] = v59;

            swift_retain_n();
            uint64_t v61 = (void *)sub_8E710();
            os_log_type_t v62 = sub_8EB00();
            if (sub_22324(v62))
            {
              uint64_t v63 = (_DWORD *)sub_1CBDC();
              *(void *)&long long v125 = sub_1CC0C();
              *uint64_t v63 = 136315138;
              uint64_t v118 = (uint64_t)(v63 + 1);
              *(void *)&long long v123 = v3[16];
              id v64 = (id)v123;
              sub_48AC(&qword_BD860);
              uint64_t v65 = sub_8E8E0();
              uint64_t v67 = sub_8758C(v65, v66, (uint64_t *)&v125);
              sub_1CB9C(v67);
              sub_8EBD0();
              swift_release_n();
              swift_bridgeObjectRelease();
              sub_58C94(&dword_0, v68, v69, "#SendAnnouncementDisambiguationStrategy selectedHome from direct invocation: %s");
              swift_arrayDestroy();
              uint64_t v39 = v114;
              sub_CC2C();
              sub_CC2C();
            }
            else
            {

              swift_release_n();
            }
LABEL_60:
            uint64_t v37 = v115;
            unint64_t v38 = v116;
            goto LABEL_61;
          }
          uint64_t v107 = (void *)sub_8E710();
          os_log_type_t v108 = sub_8EB10();
          if (sub_1CC84(v108))
          {
            uint64_t v109 = (_WORD *)sub_CCE4();
            sub_58C54(v109);
            sub_1CDC8(&dword_0, v110, v111, "#SendAnnouncementDisambiguationStrategy homesToDisambiguate is empty");
            sub_CC2C();
          }

          goto LABEL_60;
        }
      }
      else
      {
        sub_31030((uint64_t)&v125, &qword_BC5D8);
      }
      unint64_t v38 = v116;
    }
LABEL_61:
    if (v3[16]) {
      sub_8D200();
    }
    else {
      sub_8D210();
    }
    (*((void (**)(uint8_t *, uint64_t))v37 + 1))(v38, v39);
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v119, v120);
  }
  if (v31 == enum case for Parse.NLv4IntentOnly(_:))
  {
    uint64_t v49 = sub_58C10();
    v50(v49);
    swift_unknownObjectRelease();
    goto LABEL_7;
  }
  if (v31 != enum case for Parse.uso(_:))
  {
    uint64_t v70 = (void *)sub_8E710();
    os_log_type_t v71 = sub_8EB00();
    if (sub_1CC84(v71))
    {
      uint64_t v72 = (_WORD *)sub_CCE4();
      sub_58C54(v72);
      sub_1CDC8(&dword_0, v73, v74, "#SendAnnouncementDisambiguationStrategy falling through");
      sub_CC2C();
    }

    uint64_t v75 = *(void (**)(void))(v15 + 8);
    sub_58C04();
    v75();
    sub_8D210();
    sub_58C04();
    return ((uint64_t (*)(void))v75)();
  }
LABEL_6:
  (*(void (**)(char *, uint64_t))(v15 + 8))(v21, v120);
LABEL_7:
  uint64_t v32 = sub_4A9D0();
  if (v32)
  {
    uint64_t v33 = (void *)v3[16];
    v3[16] = v32;
    id v34 = v32;

    sub_8D200();
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v119, v120);
  }
  id v116 = a2;
  sub_98C0(v3 + 2, v3[5]);
  swift_retain();
  uint64_t v41 = (uint64_t)v113;
  sub_8D840();
  sub_2FE2C(v41, (uint64_t)&v123);
  swift_release();
  unint64_t v42 = *(void (**)(void))(v15 + 8);
  sub_58C04();
  v42();
  if (v124)
  {
    sub_C928(&v123, (uint64_t)&v125);
    sub_C940((uint64_t)&v125, (uint64_t)&v123);
    unint64_t v43 = sub_8E710();
    os_log_type_t v44 = sub_8EB00();
    if (os_log_type_enabled(v43, v44))
    {
      uint64_t v45 = (uint8_t *)sub_1CBDC();
      long long v46 = (void *)sub_1CC0C();
      uint64_t v118 = (uint64_t)v3;
      id v122 = v46;
      *(_DWORD *)uint64_t v45 = 136315138;
      uint64_t v115 = (void (*)(void))(v45 + 4);
      sub_98C0(&v123, v124);
      uint64_t v47 = sub_8EE20();
      uint64_t v121 = sub_8758C(v47, v48, (uint64_t *)&v122);
      sub_8EBD0();
      swift_bridgeObjectRelease();
      sub_4950((uint64_t)&v123);
      _os_log_impl(&dword_0, v43, v44, "#SendAnnouncementDisambiguationStrategy nlIntent: %s", v45, 0xCu);
      swift_arrayDestroy();
      uint64_t v3 = (void *)v118;
      sub_CC2C();
      sub_CC2C();
    }
    else
    {
      sub_4950((uint64_t)&v123);
    }

    sub_98C0(&v125, v126);
    uint64_t v85 = sub_58CC8();
    int v87 = v86(v85);
    if ((v87 - 1) >= 2)
    {
      if (!v87) {
        goto LABEL_53;
      }
      sub_98C0(&v125, v126);
      uint64_t v93 = sub_58CC8();
      uint64_t v95 = v94(v93);
      Swift::Int v96 = (void *)v3[16];
      v3[16] = v95;

      swift_retain_n();
      uint64_t v97 = (void *)sub_8E710();
      os_log_type_t v98 = sub_8EB00();
      if (sub_22324(v98))
      {
        uint64_t v115 = v42;
        uint64_t v99 = (_DWORD *)sub_1CBDC();
        uint64_t v100 = sub_1CC0C();
        *uint64_t v99 = 136315138;
        id v122 = (id)v3[16];
        *(void *)&long long v123 = v100;
        id v101 = v122;
        sub_48AC(&qword_BD860);
        uint64_t v102 = sub_8E8E0();
        id v122 = (id)sub_8758C(v102, v103, (uint64_t *)&v123);
        sub_8EBD0();
        swift_release_n();
        unint64_t v42 = v115;
        swift_bridgeObjectRelease();
        sub_58C94(&dword_0, v104, v105, "#SendAnnouncementDisambiguationStrategy selectedHome: %s");
        swift_arrayDestroy();
        sub_CC2C();
        sub_CC2C();
      }
      else
      {

        swift_release_n();
      }
      if (v3[16]) {
        sub_8D200();
      }
      else {
LABEL_53:
      }
        sub_8D210();
    }
    else
    {
      sub_8D1F0();
    }
    sub_58C04();
    v42();
    return sub_4950((uint64_t)&v125);
  }
  else
  {
    uint64_t v115 = v42;
    sub_31030((uint64_t)&v123, &qword_BC410);
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, v27, v5);
    uint64_t v77 = v5;
    Swift::Int v78 = sub_8E710();
    os_log_type_t v79 = sub_8EB10();
    if (os_log_type_enabled(v78, v79))
    {
      uint64_t v80 = v10;
      os_log_type_t v81 = (uint8_t *)sub_1CBDC();
      uint64_t v118 = sub_1CC0C();
      *(void *)&long long v125 = v118;
      *(_DWORD *)os_log_type_t v81 = 136315138;
      uint64_t v117 = (uint64_t)(v81 + 4);
      sub_8D840();
      uint64_t v82 = sub_72D0C(v41);
      uint64_t v84 = sub_8758C(v82, v83, (uint64_t *)&v125);
      sub_1CB9C(v84);
      sub_8EBD0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v80, v77);
      _os_log_impl(&dword_0, v78, v79, "#SendAnnouncementDisambiguationStrategy couldn't transform input: %s", v81, 0xCu);
      swift_arrayDestroy();
      sub_CC2C();
      sub_CC2C();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v77);
    }

    sub_8D210();
    return ((uint64_t (*)(char *, uint64_t))v115)(v119, v120);
  }
}

uint64_t sub_53E54()
{
  sub_CC60();
  v1[3] = v2;
  v1[4] = v0;
  v1[2] = v3;
  uint64_t v4 = sub_48AC(&qword_BE650);
  v1[5] = v4;
  sub_CB1C(v4);
  v1[6] = v5;
  v1[7] = sub_CBA4();
  sub_46200();
  return _swift_task_switch(v6, v7, v8);
}

uint64_t sub_53EE8()
{
  uint64_t v1 = *(void *)(v0 + 32);
  sub_48AC(&qword_BE5E0);
  uint64_t v2 = (void *)sub_8D7B0();
  sub_48AC(&qword_BE658);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_8FA10;
  uint64_t v4 = *(void **)(v1 + 128);
  *(void *)(v3 + 32) = v4;
  uint64_t v14 = v3;
  sub_8EA50();
  id v5 = v4;
  sub_48AC(&qword_BD860);
  Class isa = sub_8EA20().super.isa;
  swift_bridgeObjectRelease();
  NSString v7 = sub_8E8C0();
  objc_msgSend(v2, "setValue:forKey:", isa, v7, v14);

  uint64_t v8 = *(void **)(v1 + 128);
  if (v8) {
    sub_8D10(0, (unint64_t *)&qword_BCFD8);
  }
  id v9 = v8;
  sub_8D7B0();
  sub_8D10(0, &qword_BE660);
  sub_8D430();
  sub_58C2C();
  sub_8D4F0();
  uint64_t v10 = sub_58C2C();
  v11(v10);
  swift_task_dealloc();
  sub_46228();
  return v12();
}

uint64_t sub_540BC()
{
  sub_CC60();
  v1[231] = v0;
  v1[225] = v2;
  v1[219] = v3;
  v1[213] = v4;
  uint64_t v5 = type metadata accessor for HomeDisambiguationModel(0);
  sub_1CCBC(v5);
  v1[232] = sub_CBA4();
  uint64_t v6 = sub_8D160();
  sub_1CCBC(v6);
  v1[233] = sub_CBA4();
  uint64_t v7 = sub_8D760();
  v1[234] = v7;
  sub_CB1C(v7);
  v1[235] = v8;
  v1[236] = sub_CBA4();
  uint64_t v9 = sub_48AC(&qword_BE5E0);
  v1[237] = v9;
  sub_CB1C(v9);
  v1[238] = v10;
  v1[239] = *(void *)(v11 + 64);
  v1[240] = sub_CBA4();
  uint64_t v12 = sub_8E3D0();
  v1[241] = v12;
  sub_CB1C(v12);
  v1[242] = v13;
  v1[243] = sub_CBA4();
  uint64_t v14 = sub_8CFB0();
  v1[244] = v14;
  sub_CB1C(v14);
  v1[245] = v15;
  v1[246] = sub_CBA4();
  uint64_t v16 = sub_48AC(&qword_BCFC8);
  v1[247] = v16;
  sub_1CCBC(v16);
  v1[248] = sub_CBA4();
  sub_46200();
  return _swift_task_switch(v17, v18, v19);
}

uint64_t sub_54258()
{
  if (qword_BB830 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_8E730();
  v0[249] = sub_50FC(v1, (uint64_t)qword_BFEC8);
  uint64_t v2 = sub_8E710();
  os_log_type_t v3 = sub_8EB10();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)sub_CCE4();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_0, v2, v3, "#SendAnnouncementDisambiguationStrategy makePromptForDisambiguation called", v4, 2u);
    sub_CC2C();
  }

  sub_48AC(&qword_BE5F0);
  uint64_t v5 = sub_8D650();
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    uint64_t v7 = v0[245];
    uint64_t v9 = *(void (**)(void, unint64_t, void))(v7 + 16);
    uint64_t v8 = v7 + 16;
    unint64_t v10 = v5 + ((*(unsigned __int8 *)(v8 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 64));
    uint64_t v16 = *(void *)(v8 + 56);
    uint64_t v17 = v9;
    do
    {
      v17(v0[246], v10, v0[244]);
      sub_8CFA0();
      sub_8D10(0, (unint64_t *)&qword_BCFD8);
      if ((swift_dynamicCast() & 1) == 0) {
        v0[189] = 0;
      }
      (*(void (**)(void, void))(v8 - 8))(v0[246], v0[244]);
      if (v0[189])
      {
        sub_8EA10();
        if (*(void *)((char *)&dword_10 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8)) >> 1) {
          sub_8EA60();
        }
        sub_8EA80();
        sub_8EA50();
      }
      v10 += v16;
      --v6;
    }
    while (v6);
  }
  uint64_t v11 = v0[231];
  uint64_t v12 = v0[225];
  swift_bridgeObjectRelease();
  *(void *)(v11 + 136) = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  uint64_t v13 = swift_task_alloc();
  v0[250] = v13;
  *(void *)(v13 + 16) = v11;
  *(void *)(v13 + 24) = v12;
  uint64_t v14 = (void *)swift_task_alloc();
  v0[251] = v14;
  *uint64_t v14 = v0;
  v14[1] = sub_54570;
  sub_46200();
  return withCheckedContinuation<A>(isolation:function:_:)();
}

uint64_t sub_54570()
{
  sub_CC60();
  sub_7614();
  uint64_t v1 = *v0;
  sub_CB34();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_task_dealloc();
  sub_46200();
  return _swift_task_switch(v3, v4, v5);
}

uint64_t sub_54654()
{
  uint64_t v39 = v1;
  unint64_t v2 = *(void *)(*(void *)(v1 + 1848) + 136);
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_8ED40();
    if (v3) {
      goto LABEL_3;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    uint64_t v6 = _swiftEmptyArrayStorage;
    goto LABEL_14;
  }
  uint64_t v3 = *(void *)((char *)&dword_10 + (v2 & 0xFFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain();
  if (!v3) {
    goto LABEL_13;
  }
LABEL_3:
  unint64_t v38 = _swiftEmptyArrayStorage;
  size_t v4 = sub_57B3C(0, v3 & ~(v3 >> 63), 0);
  if (v3 < 0)
  {
    __break(1u);
    return _swift_asyncLet_finish(v4);
  }
  uint64_t v5 = 0;
  uint64_t v6 = v38;
  uint64_t v7 = *(void *)(v37 + 1936);
  unint64_t v36 = v2 & 0xC000000000000001;
  unint64_t v0 = v2;
  do
  {
    if (v36) {
      id v8 = (id)sub_8EC70();
    }
    else {
      id v8 = *(id *)(v2 + 8 * v5 + 32);
    }
    uint64_t v9 = v8;
    sub_2D49C();

    unint64_t v38 = v6;
    unint64_t v11 = v6[2];
    unint64_t v10 = v6[3];
    if (v11 >= v10 >> 1)
    {
      sub_57B3C(v10 > 1, v11 + 1, 1);
      uint64_t v6 = v38;
    }
    uint64_t v12 = *(void *)(v37 + 1944);
    uint64_t v13 = *(void *)(v37 + 1928);
    ++v5;
    v6[2] = v11 + 1;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))((unint64_t)v6+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v11, v12, v13);
    unint64_t v2 = v0;
  }
  while (v3 != v5);
  swift_bridgeObjectRelease();
LABEL_14:
  swift_bridgeObjectRetain_n();
  uint64_t v14 = sub_8E710();
  os_log_type_t v15 = sub_8EB00();
  if (sub_1CC84(v15))
  {
    uint64_t v16 = (uint8_t *)sub_1CBDC();
    unint64_t v38 = (void *)sub_1CC0C();
    *(_DWORD *)uint64_t v16 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_8EA40();
    unint64_t v19 = v18;
    swift_bridgeObjectRelease();
    *(void *)(v37 + 1656) = sub_8758C(v17, v19, (uint64_t *)&v38);
    sub_8EBD0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v14, (os_log_type_t)v0, "#SendAnnouncementDisambiguationStrategy homeNames: %s", v16, 0xCu);
    swift_arrayDestroy();
    sub_CC2C();
    sub_CC2C();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v20 = *(void *)(v37 + 1920);
  uint64_t v21 = *(void *)(v37 + 1912);
  uint64_t v22 = *(void *)(v37 + 1904);
  uint64_t v23 = *(void *)(v37 + 1896);
  uint64_t v35 = *(void *)(v37 + 1984);
  uint64_t v24 = *(void *)(v37 + 1848);
  uint64_t v25 = *(void *)(v37 + 1800);
  uint64_t v26 = swift_bridgeObjectRetain();
  *(void *)(v37 + 2016) = sub_55CE8(v26, (void (*)(void, char *))sub_5806C, v24);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16))(v20, v25, v23);
  unint64_t v27 = (*(unsigned __int8 *)(v22 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  uint64_t v28 = swift_allocObject();
  *(void *)(v37 + 2024) = v28;
  *(void *)(v28 + 16) = v24;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(v28 + v27, v20, v23);
  *(void *)(v28 + ((v21 + v27 + 7) & 0xFFFFFFFFFFFFFFF8)) = v6;
  swift_retain();
  swift_retain();
  sub_8D10(255, &qword_BDFD0);
  swift_asyncLet_begin();
  swift_retain_n();
  swift_asyncLet_begin();
  sub_8D130();
  *(void *)(swift_task_alloc() + 16) = v35;
  sub_8D6E0();
  swift_task_dealloc();
  *(void *)(v37 + 2032) = sub_8E4B0();
  *(void *)(v37 + 2040) = v29;
  if (!v29)
  {
    swift_bridgeObjectRelease();
    uint64_t v30 = sub_8E710();
    os_log_type_t v31 = sub_8EB10();
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v32 = (uint8_t *)sub_CCE4();
      *(_WORD *)uint64_t v32 = 0;
      _os_log_impl(&dword_0, v30, v31, "#SendAnnouncementDisambiguationStrategy missing app identifier", v32, 2u);
      sub_CC2C();
    }

    sub_8D1A0();
    sub_8D190();
    sub_58C2C();
    sub_58C04();
    v33();
    size_t v4 = v37 + 16;
    return _swift_asyncLet_finish(v4);
  }
  *(unsigned char *)(v37 + 2096) = sub_50424() & 1;
  return _swift_asyncLet_get_throwing(v37 + 16, v37 + 1448, sub_54C40, v37 + 1664);
}

uint64_t sub_54C40()
{
  sub_CC60();
  *(void *)(v1 + 2048) = v0;
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_46200();
  return _swift_task_switch(v2, v3, v4);
}

uint64_t sub_54CC4()
{
  uint64_t v1 = v0[232];
  swift_bridgeObjectRetain();
  sub_2AD14();
  v0[257] = sub_8D3A0();
  sub_CB8C();
  v0[183] = sub_8D390();
  v0[170] = type metadata accessor for HomeCommunicationSnippetModel();
  v0[171] = sub_58AF0(&qword_BDFB0, 255, (void (*)(uint64_t))type metadata accessor for HomeCommunicationSnippetModel);
  uint64_t v2 = sub_C9F4(v0 + 167);
  sub_582CC(v1, (uint64_t)v2);
  swift_storeEnumTagMultiPayload();
  sub_48AC(&qword_BE170);
  uint64_t v3 = swift_allocObject();
  v0[258] = v3;
  *(_OWORD *)(v3 + 16) = xmmword_8FC30;
  return _swift_asyncLet_get_throwing(v0 + 82, v0 + 195, sub_54E54, v0 + 184);
}

uint64_t sub_54E54()
{
  *(void *)(v1 + 2072) = v0;
  if (v0) {
    return sub_461D8((uint64_t)sub_554F0);
  }
  else {
    return sub_461D8((uint64_t)sub_54E80);
  }
}

uint64_t sub_54E80()
{
  uint64_t v1 = v0[258];
  uint64_t v2 = (void *)v0[195];
  *(void *)(v1 + 32) = v2;
  uint64_t v9 = v1;
  sub_8EA50();
  v0[260] = v9;
  id v3 = v2;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[261] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_54F74;
  uint64_t v5 = v0[257];
  uint64_t v6 = v0[236];
  uint64_t v7 = v0[213];
  return dispatch thunk of ResponseGenerating.makeResponseOutput(resultModel:dialog:outputGenerationManifest:)(v7, v0 + 167, v9, v6, v5, &protocol witness table for ResponseFactory);
}

uint64_t sub_54F74()
{
  sub_CC60();
  sub_7614();
  sub_461E4();
  *uint64_t v2 = v1;
  uint64_t v3 = v1 + 1336;
  uint64_t v4 = *v0;
  sub_CB34();
  *uint64_t v5 = v4;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  sub_4950(v3);
  sub_46200();
  return _swift_task_switch(v6, v7, v8);
}

uint64_t sub_55060()
{
  sub_58330(*(void *)(v0 + 1856));
  sub_58C04();
  v1();
  swift_release();
  uint64_t v2 = sub_461F0();
  return _swift_asyncLet_finish(v2);
}

uint64_t sub_55108()
{
  return sub_461D8((uint64_t)sub_5511C);
}

uint64_t sub_5511C()
{
  sub_1425C();
  sub_58CDC();
  uint64_t v0 = sub_461F0();
  return _swift_asyncLet_finish(v0);
}

uint64_t sub_55188()
{
  return sub_461D8((uint64_t)sub_5519C);
}

uint64_t sub_5519C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_58C38();
  sub_31030(*(void *)(v12 + 1984), &qword_BCFC8);
  swift_release_n();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_46228();
  sub_58C78();
  return v14(v13, v14, v15, v16, v17, v18, v19, v20, a9, a10, a11, a12);
}

uint64_t sub_55278()
{
  return sub_461D8((uint64_t)sub_5528C);
}

uint64_t sub_5528C()
{
  sub_1425C();
  sub_58CDC();
  uint64_t v0 = sub_461F0();
  return _swift_asyncLet_finish(v0);
}

uint64_t sub_552F8()
{
  return sub_461D8((uint64_t)sub_58BD4);
}

uint64_t sub_5530C()
{
  sub_1425C();
  (*(void (**)(void, void))(v0[235] + 8))(v0[236], v0[234]);
  uint64_t v1 = sub_461F0();
  return _swift_asyncLet_finish(v1);
}

uint64_t sub_55394()
{
  return sub_461D8((uint64_t)sub_553A8);
}

uint64_t sub_553A8()
{
  sub_1425C();
  sub_58CDC();
  uint64_t v0 = sub_461F0();
  return _swift_asyncLet_finish(v0);
}

uint64_t sub_55414()
{
  return sub_461D8((uint64_t)sub_55428);
}

uint64_t sub_55428(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_58C38();
  sub_58BD8();
  sub_31030(v12, &qword_BCFC8);
  swift_release_n();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_58C78();
  return v14(v13, v14, v15, v16, v17, v18, v19, v20, a9, a10, a11, a12);
}

uint64_t sub_554F0()
{
  uint64_t v1 = v0[236];
  uint64_t v2 = v0[235];
  uint64_t v3 = v0[234];
  uint64_t v4 = v0[232];
  *(void *)(v0[258] + 16) = 0;
  swift_release();
  sub_58330(v4);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  sub_4950((uint64_t)(v0 + 167));
  swift_release();
  return _swift_asyncLet_finish(v0 + 2);
}

uint64_t sub_555C8()
{
  return sub_461D8((uint64_t)sub_555DC);
}

uint64_t sub_555DC()
{
  sub_1425C();
  sub_58CDC();
  uint64_t v0 = sub_461F0();
  return _swift_asyncLet_finish(v0);
}

uint64_t sub_55648()
{
  return sub_461D8((uint64_t)sub_5565C);
}

uint64_t sub_5565C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_58C38();
  sub_58BD8();
  sub_31030(v12, &qword_BCFC8);
  swift_release_n();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_58C78();
  return v14(v13, v14, v15, v16, v17, v18, v19, v20, a9, a10, a11, a12);
}

void sub_55724(uint64_t a1, uint64_t a2)
{
  uint64_t v21 = a1;
  uint64_t v20 = sub_48AC(&qword_BE638);
  uint64_t v3 = *(void *)(v20 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin(v20);
  uint64_t v5 = sub_8D4E0();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = *(void *)(a2 + 120);
  sub_48AC(&qword_BE5E0);
  uint64_t v18 = (void *)sub_8D7B0();
  sub_8D7D0();
  uint64_t v17 = sub_8D4D0();
  uint64_t v10 = v9;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  unint64_t v11 = (void *)sub_8D7C0();
  uint64_t v12 = v20;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v21, v20);
  unint64_t v13 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v14 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v14 + v13, (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v12);
  uint64_t v15 = v18;
  sub_50648((uint64_t)v18, v17, v10, (uint64_t)v11, (void (*)(uint64_t))sub_584C8, v14);
  swift_release();

  swift_bridgeObjectRelease();
}

uint64_t sub_55978(uint64_t a1)
{
  uint64_t v2 = sub_48AC(&qword_BCFC8);
  __chkstk_darwin(v2 - 8);
  sub_30ED8(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_BCFC8);
  sub_48AC(&qword_BE638);
  return sub_8EAB0();
}

void sub_55A1C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v20 = a2;
  uint64_t v3 = type metadata accessor for HomeTarget(0);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_8CAC0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_48AC(&qword_BE5D0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_8FA10;
  if (qword_BB7F8 != -1) {
    swift_once();
  }
  uint64_t v11 = unk_BFE90;
  *(void *)(inited + 32) = qword_BFE88;
  *(void *)(inited + 40) = v11;
  *(void *)(inited + 48) = a1;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_8E880();
  sub_8D10(0, (unint64_t *)&qword_BE5D8);
  id v13 = sub_6B100();
  sub_6B174(v12);
  uint64_t v15 = v14;
  swift_bridgeObjectRelease();
  sub_6CF30(v15, v13);
  uint64_t v16 = sub_8E3C0();
  uint64_t v18 = v17;
  sub_8D8C0();
  sub_CF1C(v21);
  sub_4950((uint64_t)v21);
  sub_8CAB0();
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v5, v9, v6);
  v21[0] = v16;
  v21[1] = v18;
  sub_8CB10();
  sub_8D10(0, (unint64_t *)&qword_BD278);
  sub_8CAF0();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_583D8((uint64_t)v5, v20);
}

void *sub_55CE8(uint64_t a1, void (*a2)(void, char *), uint64_t a3)
{
  uint64_t v37 = a2;
  uint64_t v38 = a3;
  uint64_t v4 = type metadata accessor for HomeTarget(0);
  uint64_t v36 = *(void *)(v4 - 8);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_48AC(&qword_BE620);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v35 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (uint64_t *)((char *)&v28 - v11);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v28 - v13;
  uint64_t v39 = _swiftEmptyArrayStorage;
  sub_57C10(0, 0, 0);
  uint64_t v15 = v39;
  uint64_t v16 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  uint64_t v34 = v16;
  uint64_t v28 = a1;
  if (v16)
  {
    uint64_t v17 = 0;
    uint64_t v32 = sub_8E3D0();
    uint64_t v18 = *(void *)(v32 - 8);
    uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 16);
    uint64_t v30 = v18 + 16;
    os_log_type_t v31 = v19;
    uint64_t v20 = a1 + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
    uint64_t v29 = *(void *)(v18 + 72);
    uint64_t v21 = (void (**)(char *, char *, uint64_t))(v18 + 32);
    uint64_t v33 = v6;
    do
    {
      uint64_t v22 = &v35[*(int *)(v7 + 48)];
      uint64_t v23 = v32;
      v31(v22, v20, v32);
      uint64_t v24 = (char *)v12 + *(int *)(v7 + 48);
      void *v12 = v17;
      (*v21)(v24, v22, v23);
      sub_30F6C((uint64_t)v12, (uint64_t)v14, &qword_BE620);
      v37(*(void *)v14, &v14[*(int *)(v7 + 48)]);
      sub_31030((uint64_t)v14, &qword_BE620);
      uint64_t v15 = v39;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_57C10(0, v15[2] + 1, 1);
        uint64_t v15 = v39;
      }
      unint64_t v26 = v15[2];
      unint64_t v25 = v15[3];
      if (v26 >= v25 >> 1)
      {
        sub_57C10(v25 > 1, v26 + 1, 1);
        uint64_t v15 = v39;
      }
      ++v17;
      void v15[2] = v26 + 1;
      sub_583D8((uint64_t)v33, (uint64_t)v15+ ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80))+ *(void *)(v36 + 72) * v26);
      v20 += v29;
    }
    while (v34 != v17);
  }
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_5600C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return _swift_task_switch(sub_56030, 0, 0);
}

uint64_t sub_56030()
{
  sub_48AC(&qword_BE5E0);
  uint64_t v1 = (void *)sub_8D7B0();
  uint64_t v2 = sub_2E390();
  v0[6] = v2;

  sub_8E430();
  sub_8D8C0();
  uint64_t v3 = sub_8E420();
  v0[7] = v3;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[8] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_56124;
  uint64_t v5 = v0[5];
  return sub_4E09C((uint64_t)v2, v5, v3);
}

uint64_t sub_56124()
{
  sub_1425C();
  uint64_t v3 = v2;
  sub_7614();
  uint64_t v5 = v4;
  sub_461E4();
  void *v6 = v5;
  uint64_t v7 = *v1;
  sub_CB34();
  *uint64_t v8 = v7;
  *(void *)(v5 + 72) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    swift_bridgeObjectRelease();
    *(void *)(v5 + 80) = v3;
  }
  sub_46200();
  return _swift_task_switch(v9, v10, v11);
}

uint64_t sub_56224()
{
  **(void **)(v0 + 16) = *(void *)(v0 + 80);
  sub_46228();
  return v1();
}

uint64_t sub_56248()
{
  sub_CC60();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_562B0(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return _swift_task_switch(sub_562D0, 0, 0);
}

uint64_t sub_562D0()
{
  sub_CC60();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_56360;
  return sub_13754();
}

uint64_t sub_56360()
{
  sub_1425C();
  uint64_t v3 = v2;
  sub_7614();
  uint64_t v5 = v4;
  sub_461E4();
  void *v6 = v5;
  uint64_t v7 = *v1;
  sub_CB34();
  *uint64_t v8 = v7;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v9 = *(uint64_t (**)(void))(v7 + 8);
    return v9();
  }
  else
  {
    *(void *)(v5 + 40) = v3;
    sub_46200();
    return _swift_task_switch(v11, v12, v13);
  }
}

uint64_t sub_56474()
{
  sub_1425C();
  uint64_t v1 = *(uint64_t **)(v0 + 16);
  uint64_t v2 = sub_8E440();
  uint64_t v4 = v3;
  swift_release();
  *uint64_t v1 = v2;
  v1[1] = v4;
  sub_46228();
  return v5();
}

uint64_t sub_564EC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_8D1B0();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_48AC(&qword_BCFC8);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_8D720();
  sub_8D750();
  sub_30ED8(a2, (uint64_t)v9, &qword_BCFC8);
  sub_8D730();
  sub_8D710();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for ResponseType.disambiguation(_:), v3);
  return sub_8D700();
}

uint64_t sub_56660()
{
  sub_CC60();
  v1[3] = v2;
  v1[4] = v0;
  uint64_t v3 = sub_8D480();
  sub_1CCBC(v3);
  v1[5] = sub_CBA4();
  uint64_t v4 = sub_8D4E0();
  v1[6] = v4;
  sub_CB1C(v4);
  v1[7] = v5;
  v1[8] = sub_CBA4();
  sub_46200();
  return _swift_task_switch(v6, v7, v8);
}

uint64_t sub_5670C()
{
  uint64_t v12 = v0[4];
  sub_48AC(&qword_BE5E0);
  sub_8D7A0();
  uint64_t v1 = (void *)sub_8D7B0();
  sub_8D7D0();
  sub_8D4D0();
  uint64_t v2 = sub_58C2C();
  v3(v2);
  uint64_t v4 = (char *)sub_8D7C0();
  sub_568BC((uint64_t)v4, v5, v6, v7, v4);
  swift_bridgeObjectRelease();

  swift_release();
  sub_8D8C0();
  v0[2] = v12;
  type metadata accessor for SendAnnouncementDisambiguationStrategy();
  sub_58AF0(&qword_BE5E8, v8, (void (*)(uint64_t))type metadata accessor for SendAnnouncementDisambiguationStrategy);
  sub_8CC60();
  sub_8CFD0();
  sub_CB8C();
  uint64_t v9 = sub_8CFC0();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(uint64_t))v0[1];
  return v10(v9);
}

uint64_t sub_568BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5)
{
  uint64_t v7 = sub_2EE0C();
  unint64_t v8 = (unint64_t)sub_6D5C8(v7);
  if (v8)
  {
    unint64_t v9 = v8;
    if (v8 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v10 = sub_8ED40();
    }
    else
    {
      uint64_t v10 = *(void *)((char *)&dword_10 + (v8 & 0xFFFFFFFFFFFFFF8));
      swift_bridgeObjectRetain();
    }
    a5 = (char *)_swiftEmptyArrayStorage;
    if (!v10)
    {
LABEL_18:
      swift_bridgeObjectRelease_n();
      if (*((void *)a5 + 2) >= 2uLL)
      {
        if (qword_BB830 != -1) {
          swift_once();
        }
        uint64_t v36 = sub_8E730();
        sub_50FC(v36, (uint64_t)qword_BFEC8);
        swift_bridgeObjectRetain_n();
        uint64_t v37 = sub_8E710();
        os_log_type_t v38 = sub_8EB00();
        if (os_log_type_enabled(v37, v38))
        {
          uint64_t i = (uint8_t *)sub_1CBDC();
          uint64_t v49 = (void *)sub_1CC0C();
          *(_DWORD *)uint64_t i = 136315138;
          swift_bridgeObjectRetain();
          uint64_t v39 = sub_8EA40();
          unint64_t v41 = v40;
          swift_bridgeObjectRelease();
          sub_8758C(v39, v41, (uint64_t *)&v49);
          sub_58CB4();
          sub_8EBD0();
          sub_58C60();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_0, v37, v38, "#SendAnnouncementDisambiguationStrategy Disambiguating between homes : %s", i, 0xCu);
          swift_arrayDestroy();
          sub_CC2C();
          sub_CC2C();
        }
        else
        {

          sub_58C60();
        }
        if (qword_BB7E8 != -1) {
          swift_once();
        }
        swift_retain();
        unint64_t v42 = sub_8E710();
        os_log_type_t v43 = sub_8EB00();
        if (sub_22324(v43))
        {
          os_log_type_t v44 = (uint8_t *)sub_CCE4();
          *(_WORD *)os_log_type_t v44 = 0;
          _os_log_impl(&dword_0, v42, (os_log_type_t)i, "#SendAnnouncementRCHFlowDelegate isDirectInvocation in SiriX path", v44, 2u);
          sub_CC2C();
        }

        uint64_t v49 = _swiftEmptyArrayStorage;
        swift_bridgeObjectRetain();
        sub_8ECE0();
        uint64_t v45 = *((void *)a5 + 2);
        swift_bridgeObjectRetain();
        if (v45)
        {
          uint64_t v46 = 0;
          uint64_t v47 = a5 + 40;
          do
          {
            swift_bridgeObjectRetain();
            sub_56F9C(v46);
            swift_bridgeObjectRelease();
            sub_8ECC0();
            sub_8ECF0();
            sub_58C2C();
            sub_8ED00();
            sub_8ECD0();
            v47 += 16;
            ++v46;
          }
          while (v45 != v46);
        }
        swift_bridgeObjectRelease();
        swift_release();
        sub_58C60();
        sub_8CF90();
        sub_CB8C();
      }
      else
      {
        swift_bridgeObjectRelease();
        if (qword_BB830 != -1) {
          swift_once();
        }
        uint64_t v22 = sub_8E730();
        sub_50FC(v22, (uint64_t)qword_BFEC8);
        swift_bridgeObjectRetain();
        uint64_t v23 = sub_8E710();
        os_log_type_t v24 = sub_8EB10();
        if (os_log_type_enabled(v23, v24))
        {
          unint64_t v25 = (uint8_t *)sub_1CBDC();
          uint64_t v49 = (void *)sub_1CC0C();
          *(_DWORD *)unint64_t v25 = 136315138;
          swift_bridgeObjectRetain();
          uint64_t v26 = sub_8EA40();
          unint64_t v28 = v27;
          swift_bridgeObjectRelease();
          sub_8758C(v26, v28, (uint64_t *)&v49);
          sub_58CB4();
          sub_8EBD0();
          sub_58C60();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_0, v23, v24, "#SendAnnouncementDisambiguationStrategy Error disambiguating between no homes or single home : %s", v25, 0xCu);
          swift_arrayDestroy();
          sub_CC2C();
          sub_CC2C();
        }
        else
        {

          sub_58C60();
        }
        sub_8CF90();
        sub_CB8C();
      }
      return sub_8CF80();
    }
    if (v10 >= 1)
    {
      for (uint64_t i = 0; i != (uint8_t *)v10; ++i)
      {
        if ((v9 & 0xC000000000000001) != 0) {
          id v11 = (id)sub_8EC70();
        }
        else {
          id v11 = *(id *)(v9 + 8 * (void)i + 32);
        }
        uint64_t v12 = v11;
        id v13 = [v11 home];
        if (v13)
        {
          uint64_t v14 = v13;
          id v15 = [v13 spokenPhrase];

          uint64_t v16 = sub_8E8D0();
          uint64_t v18 = v17;

          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            a5 = sub_768FC(0, *((void *)a5 + 2) + 1, 1, (uint64_t)a5);
          }
          unint64_t v20 = *((void *)a5 + 2);
          unint64_t v19 = *((void *)a5 + 3);
          if (v20 >= v19 >> 1) {
            a5 = sub_768FC((char *)(v19 > 1), v20 + 1, 1, (uint64_t)a5);
          }
          *((void *)a5 + 2) = v20 + 1;
          uint64_t v21 = &a5[16 * v20];
          *((void *)v21 + 4) = v16;
          *((void *)v21 + 5) = v18;
        }
        else
        {
        }
      }
      goto LABEL_18;
    }
    __break(1u);
    goto LABEL_45;
  }
  swift_bridgeObjectRelease();
  if (qword_BB830 != -1) {
LABEL_45:
  }
    swift_once();
  uint64_t v29 = sub_8E730();
  sub_50FC(v29, (uint64_t)qword_BFEC8);
  uint64_t v30 = (void *)sub_8E710();
  os_log_type_t v31 = sub_8EB10();
  if (sub_1CC84(v31))
  {
    uint64_t v32 = (_WORD *)sub_CCE4();
    sub_58C54(v32);
    sub_1CDC8(&dword_0, v33, v34, "#SendAnnouncementDisambiguationStrategy Disambiguating items were not of type INHomeFilter");
    sub_CC2C();
  }

  id v35 = [a5 disambiguationItems];
  sub_8EA30();

  sub_8CF90();
  sub_CB8C();
  return sub_8CF80();
}

uint64_t sub_56F9C(uint64_t a1)
{
  sub_48AC(&qword_BE5D0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_8FA10;
  if (qword_BB7F8 != -1) {
    swift_once();
  }
  uint64_t v3 = unk_BFE90;
  *(void *)(inited + 32) = qword_BFE88;
  *(void *)(inited + 40) = v3;
  *(void *)(inited + 48) = a1;
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_8E880();
  sub_8D10(0, (unint64_t *)&qword_BE5D8);
  id v5 = sub_6B100();
  sub_6B174(v4);
  uint64_t v7 = v6;
  swift_bridgeObjectRelease();
  sub_6CF30(v7, v5);
  sub_8D000();
  sub_8CFE0();
  uint64_t v8 = sub_8CFF0();
  swift_release();
  sub_48AC(&qword_BE170);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_8FC30;
  *(void *)(v9 + 32) = v8;
  sub_8EA50();
  sub_8CF60();
  swift_allocObject();
  return sub_8CF40();
}

uint64_t sub_57154()
{
  sub_4950(v0 + 16);
  swift_release();
  sub_4950(v0 + 64);
  swift_release();
  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_571AC()
{
  sub_57154();

  return _swift_deallocClassInstance(v0, 144, 7);
}

uint64_t type metadata accessor for SendAnnouncementDisambiguationStrategy()
{
  return self;
}

uint64_t sub_57208(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for SendAnnouncementDisambiguationStrategy();

  return NeedsDisambiguationFlowStrategyAsync.paginationStyle(resolveRecord:)(a1, v5, a3);
}

uint64_t sub_5725C@<X0>(uint64_t a1@<X0>, uint8_t *a2@<X8>)
{
  return sub_531CC(a1, a2);
}

uint64_t sub_57280(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_5731C;
  return sub_56660();
}

uint64_t sub_5731C()
{
  sub_1425C();
  uint64_t v3 = v2;
  sub_7614();
  uint64_t v5 = v4;
  sub_461E4();
  void *v6 = v5;
  uint64_t v7 = *v1;
  sub_CB34();
  *uint64_t v8 = v7;
  swift_task_dealloc();
  if (!v0) {
    **(void **)(v5 + 16) = v3;
  }
  uint64_t v9 = *(uint64_t (**)(void))(v7 + 8);
  return v9();
}

uint64_t sub_573F8()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_58BD0;
  return sub_53E54();
}

uint64_t sub_574A4()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_4D28C;
  return sub_540BC();
}

uint64_t sub_57558(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v10;
  uint64_t v11 = type metadata accessor for SendAnnouncementDisambiguationStrategy();
  *uint64_t v10 = v5;
  v10[1] = sub_58BD0;
  return NeedsDisambiguationFlowStrategyAsync.makeRepromptOnEmptyParse(paginatedItems:resolveRecord:)(a1, a2, a3, v11, a5);
}

uint64_t sub_57624(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v10;
  uint64_t v11 = type metadata accessor for SendAnnouncementDisambiguationStrategy();
  *uint64_t v10 = v5;
  v10[1] = sub_58BD0;
  return NeedsDisambiguationFlowStrategyAsync.makeRepromptOnLowConfidence(paginatedItems:resolveRecord:)(a1, a2, a3, v11, a5);
}

uint64_t sub_576F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  uint64_t v9 = type metadata accessor for SendAnnouncementDisambiguationStrategy();
  *uint64_t v8 = v4;
  v8[1] = sub_58BD0;
  return NeedsDisambiguationFlowStrategyAsync.makePromptForDeviceUnlock(resolveRecord:)(a1, a2, v9, a4);
}

uint64_t sub_577B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  uint64_t v9 = type metadata accessor for SendAnnouncementDisambiguationStrategy();
  *uint64_t v8 = v4;
  v8[1] = sub_58BD0;
  return NeedsDisambiguationFlowStrategyAsync.makeHandoffForAuthenticationResponse(resolveRecord:)(a1, a2, v9, a4);
}

uint64_t sub_57878(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for SendAnnouncementDisambiguationStrategy();

  return NeedsDisambiguationFlowStrategyAsync.pervasiveUseCaseDescription(resolveRecord:)(a1, v5, a3);
}

uint64_t sub_578C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v12;
  uint64_t v13 = type metadata accessor for SendAnnouncementDisambiguationStrategy();
  void *v12 = v6;
  v12[1] = sub_58BD0;
  return ParameterResolutionHandlingAsync.makeFlowCancelledResponse(app:intent:parameter:)(a1, a2, a3, a4, v13, a6);
}

uint64_t sub_579A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v7 + 16) = v14;
  uint64_t v15 = type metadata accessor for SendAnnouncementDisambiguationStrategy();
  *uint64_t v14 = v7;
  v14[1] = sub_58BD0;
  return ParameterResolutionHandlingAsync.makeErrorResponse(error:app:intent:parameter:)(a1, a2, a3, a4, a5, v15, a7);
}

uint64_t sub_57A84(uint64_t a1, uint64_t a2)
{
  return sub_58AF0(qword_BE590, a2, (void (*)(uint64_t))type metadata accessor for SendAnnouncementDisambiguationStrategy);
}

void *sub_57ACC()
{
  return &protocol witness table for SiriKitDisambiguationListAdapter;
}

size_t sub_57AD8(size_t a1, int64_t a2, char a3)
{
  size_t result = sub_57ECC(a1, a2, a3, *v3, &qword_BBFD0, (uint64_t (*)(void))&type metadata accessor for UsoIdentifier, (void (*)(uint64_t, uint64_t, char *))sub_770A0, (void (*)(uint64_t, uint64_t, char *))sub_77314);
  *uint64_t v3 = result;
  return result;
}

size_t sub_57B3C(size_t a1, int64_t a2, char a3)
{
  size_t result = sub_57ECC(a1, a2, a3, *v3, &qword_BE630, (uint64_t (*)(void))&type metadata accessor for SpeakableString, (void (*)(uint64_t, uint64_t, char *))sub_770BC, (void (*)(uint64_t, uint64_t, char *))sub_77338);
  *uint64_t v3 = result;
  return result;
}

char *sub_57BA0(char *a1, int64_t a2, char a3)
{
  size_t result = sub_57CA8(a1, a2, a3, *v3);
  *uint64_t v3 = (uint64_t)result;
  return result;
}

void *sub_57BC0(void *a1, int64_t a2, char a3)
{
  size_t result = sub_57DD4(a1, a2, a3, *v3, &qword_BE670, (void (*)(uint64_t, uint64_t, void *))sub_770B8, (void (*)(uint64_t, uint64_t, void *))sub_7743C);
  *uint64_t v3 = (uint64_t)result;
  return result;
}

size_t sub_57C10(size_t a1, int64_t a2, char a3)
{
  size_t result = sub_57ECC(a1, a2, a3, *v3, &qword_BE628, type metadata accessor for HomeTarget, (void (*)(uint64_t, uint64_t, char *))sub_77148, (void (*)(uint64_t, uint64_t, char *))sub_774F4);
  *uint64_t v3 = result;
  return result;
}

void *sub_57C74(void *a1, int64_t a2, char a3, uint64_t a4)
{
  return sub_57DD4(a1, a2, a3, a4, &qword_BD8F0, (void (*)(uint64_t, uint64_t, void *))sub_770B8, (void (*)(uint64_t, uint64_t, void *))sub_7732C);
}

char *sub_57CA8(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_48AC(&qword_BCF00);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 16);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = (char *)(a4 + 32);
  if (v5)
  {
    sub_77044(v13, v8, v12);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_77264((unint64_t)v13, v8, (unint64_t)v12);
  }
  swift_release();
  return v10;
}

size_t sub_57D8C(size_t a1, int64_t a2, char a3, uint64_t a4)
{
  return sub_57ECC(a1, a2, a3, a4, &qword_BE668, (uint64_t (*)(void))&type metadata accessor for UsoEntitySpan, (void (*)(uint64_t, uint64_t, char *))sub_770D4, (void (*)(uint64_t, uint64_t, char *))sub_77424);
}

void *sub_57DD4(void *result, int64_t a2, char a3, uint64_t a4, uint64_t *a5, void (*a6)(uint64_t, uint64_t, void *), void (*a7)(uint64_t, uint64_t, void *))
{
  char v10 = (char)result;
  if (a3)
  {
    unint64_t v11 = *(void *)(a4 + 24);
    int64_t v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v12 = a2;
      }
    }
  }
  else
  {
    int64_t v12 = a2;
  }
  uint64_t v13 = *(void *)(a4 + 16);
  if (v12 <= v13) {
    uint64_t v14 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v14 = v12;
  }
  if (v14)
  {
    sub_48AC(a5);
    uint64_t v15 = (void *)swift_allocObject();
    size_t v16 = j__malloc_size(v15);
    void v15[2] = v13;
    uint64_t v15[3] = 2 * ((uint64_t)(v16 - 32) / 8);
  }
  else
  {
    uint64_t v15 = _swiftEmptyArrayStorage;
  }
  uint64_t v17 = v15 + 4;
  uint64_t v18 = a4 + 32;
  if (v10)
  {
    a6(v18, v13, v17);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    a7(v18, v13, v17);
  }
  swift_release();
  return v15;
}

size_t sub_57ECC(size_t result, int64_t a2, char a3, uint64_t a4, uint64_t *a5, uint64_t (*a6)(void), void (*a7)(uint64_t, uint64_t, char *), void (*a8)(uint64_t, uint64_t, char *))
{
  char v12 = result;
  if (a3)
  {
    unint64_t v13 = *(void *)(a4 + 24);
    int64_t v14 = v13 >> 1;
    if ((uint64_t)(v13 >> 1) < a2)
    {
      if (v14 + 0x4000000000000000 < 0)
      {
LABEL_25:
        __break(1u);
        return result;
      }
      int64_t v14 = v13 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v13 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v14 = a2;
      }
    }
  }
  else
  {
    int64_t v14 = a2;
  }
  uint64_t v15 = *(void *)(a4 + 16);
  if (v14 <= v15) {
    uint64_t v16 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v16 = v14;
  }
  if (!v16)
  {
    uint64_t v22 = &_swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_48AC(a5);
  uint64_t v17 = a6(0);
  sub_CB1C(v17);
  uint64_t v19 = *(void *)(v18 + 72);
  unint64_t v21 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  uint64_t v22 = (void *)swift_allocObject();
  size_t result = j__malloc_size(v22);
  if (!v19)
  {
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (result - v21 == 0x8000000000000000 && v19 == -1) {
    goto LABEL_24;
  }
  v22[2] = v15;
  uint64_t v22[3] = 2 * ((uint64_t)(result - v21) / v19);
LABEL_19:
  uint64_t v24 = *(void *)(a6(0) - 8);
  unint64_t v25 = (*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  uint64_t v26 = (char *)v22 + v25;
  uint64_t v27 = a4 + v25;
  if (v12)
  {
    a7(v27, v15, v26);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    a8(v27, v15, v26);
  }
  swift_release();
  return (size_t)v22;
}

void sub_58064(uint64_t a1)
{
  sub_55724(a1, *(void *)(v1 + 16));
}

void sub_5806C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t sub_58074()
{
  uint64_t v1 = sub_48AC(&qword_BE5E0);
  sub_5190();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = (v6 + 24) & ~v6;
  uint64_t v8 = v6 | 7;
  unint64_t v9 = ((*(void *)(v5 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0 + v7, v1);
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v9, v8);
}

uint64_t sub_58138()
{
  sub_1425C();
  uint64_t v3 = v2;
  uint64_t v4 = sub_48AC(&qword_BE5E0);
  sub_CB1C(v4);
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  unint64_t v9 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v10 = *(void *)(v0 + 16);
  uint64_t v11 = v0 + v9;
  uint64_t v12 = *(void *)(v0 + ((*(void *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8));
  unint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v13;
  *unint64_t v13 = v1;
  v13[1] = sub_58BD0;
  return sub_5600C(v3, v10, v11, v12);
}

uint64_t sub_5822C()
{
  sub_CC60();
  uint64_t v3 = v2;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_4D28C;
  return sub_562B0(v3, v0);
}

uint64_t sub_582C4(uint64_t a1)
{
  return sub_564EC(a1, *(void *)(v1 + 16));
}

uint64_t sub_582CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HomeDisambiguationModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_58330(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for HomeDisambiguationModel(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_5838C()
{
  unint64_t result = qword_BE618;
  if (!qword_BE618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BE618);
  }
  return result;
}

uint64_t sub_583D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HomeTarget(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_5843C()
{
  sub_48AC(&qword_BE638);
  sub_16058();
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v3 + *(void *)(v1 + 64);
  uint64_t v5 = v2 | 7;
  (*(void (**)(uint64_t))(v1 + 8))(v0 + v3);

  return _swift_deallocObject(v0, v4, v5);
}

uint64_t sub_584C8(uint64_t a1)
{
  sub_48AC(&qword_BE638);

  return sub_55978(a1);
}

void *sub_5853C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_48AC(&qword_BCFF0);
  __chkstk_darwin(v4 - 8);
  unint64_t v48 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = sub_8D180();
  uint64_t v6 = *(void *)(v47 - 8);
  __chkstk_darwin(v47);
  uint64_t v50 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_8D1E0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v46 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v45 = (char *)&v35 - v13;
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v35 - v14;
  uint64_t v16 = sub_8D800();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = a2;
  char v51 = _swiftEmptyArrayStorage;
  uint64_t v20 = *(void *)(a1 + 16);
  if (v20)
  {
    uint64_t v36 = (char *)&v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v37 = v17;
    uint64_t v38 = v16;
    uint64_t v49 = (void (**)(char *, char *, uint64_t))(v9 + 16);
    uint64_t v43 = v9;
    uint64_t v44 = v6;
    uint64_t v41 = v6 + 32;
    uint64_t v42 = v9 + 32;
    unint64_t v40 = (void (**)(char *, uint64_t))(v9 + 8);
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v39 = a1;
    unint64_t v21 = (void *)(a1 + 40);
    uint64_t v22 = _swiftEmptyArrayStorage;
    do
    {
      uint64_t v23 = HIBYTE(*v21) & 0xFLL;
      if ((*v21 & 0x2000000000000000) == 0) {
        uint64_t v23 = *(v21 - 1) & 0xFFFFFFFFFFFFLL;
      }
      if (v23)
      {
        swift_bridgeObjectRetain();
        sub_48AC(&qword_BC760);
        sub_22080();
        sub_8DC10();
        sub_52620();
        sub_8D1D0();
        uint64_t v24 = *v49;
        unint64_t v25 = v45;
        (*v49)(v45, v15, v8);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v22 = (void *)sub_76CB0(0, v22[2] + 1, 1, (uint64_t)v22);
        }
        unint64_t v27 = v22[2];
        unint64_t v26 = v22[3];
        if (v27 >= v26 >> 1) {
          uint64_t v22 = (void *)sub_76CB0(v26 > 1, v27 + 1, 1, (uint64_t)v22);
        }
        v22[2] = v27 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v43 + 32))((unint64_t)v22+ ((*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80))+ *(void *)(v43 + 72) * v27, v25, v8);
        uint64_t v28 = (uint64_t)v48;
        v24(v48, v15, v8);
        _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(v28, 0, 1, v8);
        v24(v46, v15, v8);
        sub_8D170();
        uint64_t v29 = (uint64_t)v51;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v29 = sub_76A34(0, *(void *)(v29 + 16) + 1, 1, v29);
        }
        unint64_t v31 = *(void *)(v29 + 16);
        unint64_t v30 = *(void *)(v29 + 24);
        if (v31 >= v30 >> 1) {
          uint64_t v29 = sub_76A34(v30 > 1, v31 + 1, 1, v29);
        }
        *(void *)(v29 + 16) = v31 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v44 + 32))(v29+ ((*(unsigned __int8 *)(v44 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80))+ *(void *)(v44 + 72) * v31, v50, v47);
        char v51 = (void *)v29;
        (*v40)(v15, v8);
      }
      v21 += 2;
      --v20;
    }
    while (v20);
    swift_bridgeObjectRelease();
    uint64_t v17 = v37;
    uint64_t v16 = v38;
    uint64_t v19 = v36;
  }
  else
  {
    swift_retain();
  }
  if (qword_BB8D8 != -1) {
    swift_once();
  }
  sub_8DBF0();
  sub_8D7E0();
  uint64_t v32 = sub_8D7F0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  sub_2DC04(v32);
  uint64_t v33 = v51;
  swift_release();
  return v33;
}

uint64_t sub_58AF0(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_58B38()
{
  unint64_t result = qword_BE648;
  if (!qword_BE648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BE648);
  }
  return result;
}

unint64_t sub_58B84()
{
  unint64_t result = qword_BE678;
  if (!qword_BE678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BE678);
  }
  return result;
}

uint64_t sub_58C10()
{
  return v0;
}

uint64_t sub_58C2C()
{
  return v0;
}

_WORD *sub_58C54(_WORD *result)
{
  *unint64_t result = 0;
  return result;
}

uint64_t sub_58C60()
{
  return swift_bridgeObjectRelease_n();
}

void sub_58C94(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0xCu);
}

uint64_t sub_58CC8()
{
  return v0;
}

uint64_t sub_58CDC()
{
  return swift_release();
}

void sub_58CF4()
{
  sub_8D10(0, &qword_BE660);
  sub_8D10(0, &qword_BE7F0);
  sub_8CDD0();
  sub_8CD40();
  sub_48AC(&qword_BE7D0);
  sub_8CDA0();
  if (qword_BB830 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_8E730();
  sub_50FC(v0, (uint64_t)qword_BFEC8);
  oslog = sub_8E710();
  os_log_type_t v1 = sub_8EB00();
  if (os_log_type_enabled(oslog, v1))
  {
    uint64_t v2 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v2 = 0;
    _os_log_impl(&dword_0, oslog, v1, "RCHChildFlowProducers.SendAnnouncementProducers", v2, 2u);
    swift_slowDealloc();
  }
}

void sub_58E68()
{
  if (qword_BB830 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_8E730();
  sub_50FC(v0, (uint64_t)qword_BFEC8);
  oslog = sub_8E710();
  os_log_type_t v1 = sub_8EB00();
  if (os_log_type_enabled(oslog, v1))
  {
    uint64_t v2 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    *(_DWORD *)uint64_t v2 = 136315138;
    uint64_t v3 = sub_8E8E0();
    sub_8758C(v3, v4, &v6);
    sub_8EBD0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, oslog, v1, "#SendAnnouncementFlow state => %s", v2, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
}

BOOL sub_59024()
{
  uint64_t v0 = sub_8D8B0();
  sub_CB04();
  uint64_t v2 = v1;
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_8D840();
  int v6 = (*(uint64_t (**)(char *, uint64_t))(v2 + 88))(v5, v0);
  int v7 = enum case for Parse.directInvocation(_:);
  if (v6 == enum case for Parse.directInvocation(_:))
  {
    if (qword_BB830 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_8E730();
    sub_50FC(v8, (uint64_t)qword_BFEC8);
    uint64_t v9 = sub_8E710();
    os_log_type_t v10 = sub_8EB00();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)sub_CCE4();
      *(_WORD *)uint64_t v11 = 0;
      _os_log_impl(&dword_0, v9, v10, "#ReadAnnouncementFlow handling direct invocation.", v11, 2u);
      sub_CC2C();
    }
  }
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v0);
  return v6 == v7;
}

uint64_t sub_591B8()
{
  return sub_8CE00();
}

uint64_t sub_59248()
{
  sub_CC60();
  v1[4] = v2;
  v1[5] = v0;
  uint64_t v3 = sub_8E730();
  v1[6] = v3;
  sub_CB1C(v3);
  v1[7] = v4;
  v1[8] = sub_CBA4();
  return _swift_task_switch(sub_592D8, 0, 0);
}

uint64_t sub_592D8()
{
  uint64_t v25 = v0;
  if (qword_BB830 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)(v0 + 56);
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t v3 = *(void *)(v0 + 48);
  uint64_t v4 = sub_50FC(v3, (uint64_t)qword_BFEC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  swift_retain_n();
  uint64_t v5 = sub_8E710();
  os_log_type_t v6 = sub_8EB00();
  BOOL v7 = os_log_type_enabled(v5, v6);
  uint64_t v9 = *(void *)(v0 + 56);
  uint64_t v8 = *(void *)(v0 + 64);
  os_log_type_t v10 = &qword_C0000;
  uint64_t v12 = *(void *)(v0 + 40);
  uint64_t v11 = *(void *)(v0 + 48);
  if (v7)
  {
    uint64_t v23 = *(void *)(v0 + 64);
    uint64_t v22 = *(void *)(v0 + 48);
    uint64_t v13 = swift_slowAlloc();
    uint64_t v24 = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 136315394;
    *(void *)(v0 + 16) = sub_8758C(0x2865747563657865, 0xE900000000000029, &v24);
    sub_8EBD0();
    *(_WORD *)(v13 + 12) = 2080;
    *(unsigned char *)(v0 + 80) = *(unsigned char *)(v12
                                   + OBJC_IVAR____TtC35HomeCommunicationFlowDelegatePlugin20SendAnnouncementFlow_state);
    uint64_t v14 = sub_8E8E0();
    *(void *)(v0 + 24) = sub_8758C(v14, v15, &v24);
    os_log_type_t v10 = &qword_C0000;
    sub_8EBD0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v5, v6, "#SendAnnouncementFlow %s state=%s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    sub_CC2C();
    sub_CC2C();

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v23, v22);
  }
  else
  {

    swift_release_n();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v11);
  }
  uint64_t v16 = *(void *)(v0 + 40);
  if (!*(unsigned char *)(v16 + v10[10]))
  {
    sub_59704(*(void *)(v0 + 32));
    goto LABEL_13;
  }
  if (*(unsigned char *)(v16 + v10[10]) != 1)
  {
    sub_8D2A0();
LABEL_13:
    swift_task_dealloc();
    sub_CC20();
    sub_5BFE4();
    __asm { BRAA            X1, X16 }
  }
  uint64_t v17 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v17;
  *uint64_t v17 = v0;
  v17[1] = sub_59600;
  sub_5BFE4();
  return sub_59CDC();
}

uint64_t sub_59600()
{
  sub_CC60();
  uint64_t v1 = *v0;
  sub_CB34();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v1 + 8);
  return v3();
}

uint64_t sub_59704@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_8E460();
  uint64_t v6 = sub_1CCBC(v5);
  __chkstk_darwin(v6);
  sub_22300();
  sub_8D8C0();
  sub_98C0(v35, v36);
  char v7 = sub_8D0C0();
  sub_4950((uint64_t)v35);
  if (v7)
  {
    sub_48AC(&qword_BE818);
    uint64_t v8 = sub_8CD10();
    sub_CB1C(v8);
    unint64_t v10 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_8FA10;
    v31[3] = v11 + v10;
    sub_5BDB8(v3 + 64, (uint64_t)v35);
    type metadata accessor for SendAnnouncementCATsSimple();
    sub_8E450();
    uint64_t v12 = sub_8E400();
    sub_C9A4((uint64_t)v35, v36);
    v31[1] = (uint64_t)v31;
    sub_CB04();
    __chkstk_darwin(v13);
    void v31[2] = a1;
    uint64_t v15 = sub_5BF84((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
    v16(v15);
    uint64_t v17 = type metadata accessor for SharedGlobals();
    uint64_t v33 = v17;
    uint64_t v34 = &off_B6D60;
    uint64_t v18 = sub_C9F4(v32);
    sub_CA58(a1, (uint64_t)v18);
    uint64_t v19 = type metadata accessor for SendAnnouncementActiveCallCheckStrategy();
    uint64_t v20 = (uint64_t *)swift_allocObject();
    sub_C9A4((uint64_t)v32, v33);
    sub_CB04();
    __chkstk_darwin(v21);
    sub_5BFC4(v22, v31[0]);
    sub_1CA84();
    v23();
    uint64_t v20[5] = v17;
    v20[6] = (uint64_t)&off_B6D60;
    uint64_t v24 = sub_C9F4(v20 + 2);
    sub_CA58(v2, (uint64_t)v24);
    v20[7] = v12;
    sub_4950((uint64_t)v32);
    sub_4950((uint64_t)v35);
    uint64_t v36 = v19;
    uint64_t v37 = sub_5BF3C(&qword_BE820, (void (*)(uint64_t))type metadata accessor for SendAnnouncementActiveCallCheckStrategy);
    v35[0] = v20;
    sub_8CD00();
    sub_4950((uint64_t)v35);
    uint64_t v25 = sub_8CB80();
    swift_bridgeObjectRelease();
    v35[0] = v25;
    sub_8CCD0();
    swift_retain();
    sub_8D270();
    swift_release();
    return swift_release();
  }
  else
  {
    if (qword_BB830 != -1) {
      swift_once();
    }
    uint64_t v27 = sub_8E730();
    sub_50FC(v27, (uint64_t)qword_BFEC8);
    uint64_t v28 = sub_8E710();
    os_log_type_t v29 = sub_8EB00();
    if (os_log_type_enabled(v28, v29))
    {
      unint64_t v30 = (uint8_t *)sub_CCE4();
      *(_WORD *)unint64_t v30 = 0;
      _os_log_impl(&dword_0, v28, v29, "#SendAnnouncementFlow skipping preRCHCheck for non-iOS idiom", v30, 2u);
      sub_CC2C();
    }

    sub_58E68();
    *(unsigned char *)(v3 + OBJC_IVAR____TtC35HomeCommunicationFlowDelegatePlugin20SendAnnouncementFlow_state) = 1;
    return sub_8D260();
  }
}

void sub_59B24(uint64_t a1, uint64_t a2)
{
  if (qword_BB830 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_8E730();
  sub_50FC(v3, (uint64_t)qword_BFEC8);
  uint64_t v4 = sub_8E710();
  os_log_type_t v5 = sub_8EB00();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136315138;
    uint64_t v7 = sub_8CCE0();
    sub_8758C(v7, v8, &v10);
    sub_8EBD0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v4, v5, "#SendAnnouncementFlow preRCHCheck outcome: %s", v6, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  if (sub_8CCF0()) {
    char v9 = 1;
  }
  else {
    char v9 = 2;
  }
  sub_58E68();
  *(unsigned char *)(a2 + OBJC_IVAR____TtC35HomeCommunicationFlowDelegatePlugin20SendAnnouncementFlow_state) = v9;
}

uint64_t sub_59CDC()
{
  sub_CC60();
  v1[32] = v2;
  v1[33] = v0;
  v1[31] = v3;
  uint64_t v4 = sub_48AC(&qword_BE7D0);
  sub_1CCBC(v4);
  v1[34] = sub_CBA4();
  uint64_t v5 = sub_48AC(&qword_BE7F8);
  sub_1CCBC(v5);
  v1[35] = swift_task_alloc();
  v1[36] = swift_task_alloc();
  v1[37] = swift_task_alloc();
  uint64_t v6 = sub_8D8B0();
  v1[38] = v6;
  sub_CB1C(v6);
  v1[39] = v7;
  v1[40] = sub_CBA4();
  return _swift_task_switch(sub_59DDC, 0, 0);
}

uint64_t sub_59DDC()
{
  uint64_t v1 = *(void *)(v0 + 264);
  sub_5BDB8(v1 + 64, v0 + 16);
  sub_5BDB8(v1 + 16, v0 + 56);
  sub_8CEB0();
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v3 = sub_C9A4(v0 + 16, v2);
  sub_CB04();
  uint64_t v5 = v4;
  uint64_t v6 = sub_CBA4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v6, v3, v2);
  uint64_t v7 = type metadata accessor for SharedGlobals();
  *(void *)(v0 + 328) = v7;
  *(void *)(v0 + 160) = v7;
  *(void *)(v0 + 168) = &off_B6D60;
  unint64_t v8 = sub_C9F4((uint64_t *)(v0 + 136));
  sub_CA58(v6, (uint64_t)v8);
  type metadata accessor for SendAnnouncementFlowStrategy();
  uint64_t v9 = (uint64_t *)swift_allocObject();
  *(void *)(v0 + 336) = v9;
  uint64_t v10 = *(void *)(v0 + 160);
  uint64_t v11 = sub_C9A4(v0 + 136, v10);
  sub_CB04();
  uint64_t v13 = v12;
  uint64_t v14 = sub_CBA4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v14, v11, v10);
  v9[5] = v7;
  v9[6] = (uint64_t)&off_B6D60;
  uint64_t v15 = sub_C9F4(v9 + 2);
  sub_CA58(v14, (uint64_t)v15);
  sub_C928((long long *)(v0 + 56), (uint64_t)(v9 + 7));
  sub_C928((long long *)(v0 + 96), (uint64_t)(v9 + 12));
  sub_4950(v0 + 136);
  swift_task_dealloc();
  sub_4950(v0 + 16);
  swift_task_dealloc();
  sub_8D840();
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v0 + 344) = v16;
  *uint64_t v16 = v0;
  v16[1] = sub_5A024;
  sub_5BFE4();
  return sub_5C4AC();
}

uint64_t sub_5A024()
{
  sub_7614();
  uint64_t v3 = v2[40];
  uint64_t v4 = v2[39];
  uint64_t v5 = v2[38];
  uint64_t v6 = *v1;
  sub_CB34();
  *uint64_t v7 = v6;
  *(void *)(v9 + 352) = v8;
  *(void *)(v9 + 360) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  if (v0) {
    uint64_t v10 = sub_5A7B8;
  }
  else {
    uint64_t v10 = sub_5A16C;
  }
  return _swift_task_switch(v10, 0, 0);
}

uint64_t sub_5A16C()
{
  uint64_t v42 = v0;
  id v1 = *(id *)(v0 + 352);
  sub_8D8C0();
  sub_98C0((void *)(v0 + 176), *(void *)(v0 + 200));
  [v1 _setIdiom:sub_AC44()];

  sub_4950(v0 + 176);
  if (qword_BB830 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void **)(v0 + 352);
  uint64_t v3 = sub_8E730();
  sub_50FC(v3, (uint64_t)qword_BFEC8);
  id v4 = v2;
  uint64_t v5 = sub_8E710();
  os_log_type_t v6 = sub_8EB00();
  BOOL v7 = os_log_type_enabled(v5, v6);
  uint64_t v8 = *(void **)(v0 + 352);
  if (v7)
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v41 = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136315138;
    *(void *)(v0 + 232) = [v8 _idiom];
    type metadata accessor for INDeviceIdiom(0);
    uint64_t v10 = sub_8E8E0();
    *(void *)(v0 + 240) = sub_8758C(v10, v11, &v41);
    sub_8EBD0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_0, v5, v6, "#SendAnnouncementFlow idiom set on intent : %s", v9, 0xCu);
    swift_arrayDestroy();
    sub_CC2C();
    sub_CC2C();
  }
  else
  {
  }
  uint64_t v12 = *(void *)(v0 + 328);
  uint64_t v13 = *(void *)(v0 + 288);
  uint64_t v14 = *(void *)(v0 + 264);
  uint64_t v15 = sub_98C0((void *)(v14 + 64), *(void *)(v14 + 88));
  sub_5BE18((uint64_t)v15 + *(int *)(v12 + 28), v13);
  uint64_t v16 = sub_8D230();
  if (_s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0(v13, 1, v16) == 1)
  {
    sub_8E270();
    if (sub_8E260())
    {
      sub_8E240();
      swift_release();
      sub_8D550();
      swift_release();
      uint64_t v17 = 0;
    }
    else
    {
      uint64_t v17 = 1;
    }
    uint64_t v20 = *(void *)(v0 + 288);
    _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(*(void *)(v0 + 296), v17, 1, v16);
    sub_5BE80(v20);
  }
  else
  {
    uint64_t v18 = *(void *)(v0 + 296);
    sub_4E008();
    (*(void (**)(uint64_t))(v19 + 32))(v18);
    _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(v18, 0, 1, v16);
  }
  uint64_t v21 = *(void *)(v0 + 280);
  sub_5BE18(*(void *)(v0 + 296), v21);
  int v22 = _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0(v21, 1, v16);
  uint64_t v23 = *(void *)(v0 + 280);
  if (v22 == 1)
  {
    sub_5BE80(*(void *)(v0 + 280));
  }
  else
  {
    uint64_t v24 = sub_8D220();
    unint64_t v26 = v25;
    sub_4E008();
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v23, v16);
    if (v26)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v28 = sub_8E710();
      os_log_type_t v29 = sub_8EB00();
      if (os_log_type_enabled(v28, v29))
      {
        unint64_t v30 = (uint8_t *)swift_slowAlloc();
        uint64_t v41 = swift_slowAlloc();
        *(_DWORD *)unint64_t v30 = 136315138;
        swift_bridgeObjectRetain();
        *(void *)(v0 + 224) = sub_8758C(v24, v26, &v41);
        sub_8EBD0();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_0, v28, v29, "#SendAnnouncementFlow sharedUserID: %s", v30, 0xCu);
        swift_arrayDestroy();
        sub_CC2C();
        sub_CC2C();
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

      sub_6CFB0(v24, v26, *(void **)(v0 + 352));
      goto LABEL_22;
    }
  }
  unint64_t v31 = sub_8E710();
  os_log_type_t v32 = sub_8EB00();
  if (os_log_type_enabled(v31, v32))
  {
    *(_WORD *)sub_CCE4() = 0;
    sub_5C000(&dword_0, v33, v34, "#SendAnnouncementFlow no sharedUserID was found");
    sub_CC2C();
  }

LABEL_22:
  uint64_t v35 = *(void **)(v0 + 352);
  uint64_t v36 = *(void *)(v0 + 296);
  uint64_t v37 = *(void *)(v0 + 264);
  sub_5A8F8(*(void *)(v0 + 272));
  sub_48AC(&qword_BE800);
  swift_allocObject();
  sub_8CDE0();
  uint64_t v38 = sub_98C0((void *)(v37 + 64), *(void *)(v14 + 88));
  sub_98C0(v38 + 2, v38[5]);
  *(void *)(v0 + 216) = sub_78EA8();
  sub_48AC(&qword_BE808);
  sub_5BEE0();
  sub_8CDF0();
  swift_release();
  sub_8D290();
  swift_release();
  swift_release();
  swift_release();

  sub_5BE80(v36);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_CC20();
  return v39();
}

uint64_t sub_5A7B8()
{
  swift_release();
  if (qword_BB830 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_8E730();
  sub_50FC(v0, (uint64_t)qword_BFEC8);
  id v1 = sub_8E710();
  os_log_type_t v2 = sub_8EB10();
  if (os_log_type_enabled(v1, v2))
  {
    *(_WORD *)sub_CCE4() = 0;
    sub_5C000(&dword_0, v3, v4, "#SendAnnouncementFlow Error thrown while creating RCH flow");
    sub_CC2C();
  }

  sub_8D2A0();
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_CC20();
  return v5();
}

uint64_t sub_5A8F8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v4 = v1;
  uint64_t v6 = sub_8E460();
  uint64_t v7 = sub_1CCBC(v6);
  __chkstk_darwin(v7);
  uint64_t v8 = *(void *)(v1 + 56);
  sub_58CF4();
  if (qword_BB830 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_8E730();
  sub_50FC(v9, (uint64_t)qword_BFEC8);
  uint64_t v10 = sub_8E710();
  os_log_type_t v11 = sub_8EB00();
  if (os_log_type_enabled(v10, v11))
  {
    os_log_type_t v2 = (uint8_t *)sub_CCE4();
    *(_WORD *)os_log_type_t v2 = 0;
    _os_log_impl(&dword_0, v10, v11, "#SendAnnouncementFlow async producers with app resolution", v2, 2u);
    sub_CC2C();
  }

  uint64_t v41 = v4 + 64;
  sub_5BDB8(v4 + 64, (uint64_t)v47);
  uint64_t v12 = type metadata accessor for SendAnnouncementCATsSimple();
  swift_retain();
  sub_8E450();
  uint64_t v40 = v12;
  uint64_t v13 = sub_8E400();
  sub_C9A4((uint64_t)v47, v48);
  uint64_t v43 = v4;
  sub_CB04();
  __chkstk_darwin(v14);
  sub_5BFA4(v15, v35);
  sub_1CA84();
  v16();
  uint64_t v42 = sub_5BC98(v8, (uint64_t)v2, v13, (void (*)(void))type metadata accessor for SendAnnouncementIntentHandledStrategy);
  sub_4950((uint64_t)v47);
  v47[0] = v42;
  type metadata accessor for SendAnnouncementIntentHandledStrategy();
  sub_5BF3C(&qword_BE7C8, (void (*)(uint64_t))type metadata accessor for SendAnnouncementIntentHandledStrategy);
  sub_8CD30();
  uint64_t v39 = sub_48AC(&qword_BE7D0);
  sub_8CD90();
  sub_5BDB8(v4 + 64, (uint64_t)v47);
  swift_retain();
  sub_8E450();
  uint64_t v38 = sub_8E400();
  uint64_t v17 = sub_48AC(&qword_BE7D8);
  swift_allocObject();
  uint64_t v36 = sub_8D6A0();
  sub_C9A4((uint64_t)v47, v48);
  uint64_t v37 = &v35;
  sub_CB04();
  __chkstk_darwin(v18);
  sub_5BFC4(v19, v35);
  sub_1CA84();
  v20();
  uint64_t v21 = type metadata accessor for SharedGlobals();
  uint64_t v35 = a1;
  uint64_t v45 = v21;
  uint64_t v46 = &off_B6D60;
  int v22 = sub_C9F4(v44);
  sub_CA58(v3, (uint64_t)v22);
  type metadata accessor for SendAnnouncementNeedsValueStrategy();
  uint64_t v23 = (uint64_t *)swift_allocObject();
  sub_C9A4((uint64_t)v44, v45);
  sub_CB04();
  __chkstk_darwin(v24);
  sub_5BFA4(v25, v35);
  sub_1CA84();
  v26();
  v23[5] = v21;
  v23[6] = (uint64_t)&off_B6D60;
  uint64_t v27 = sub_C9F4(v23 + 2);
  sub_CA58((uint64_t)v2, (uint64_t)v27);
  v23[7] = v38;
  v23[8] = v8;
  v23[9] = v36;
  sub_4950((uint64_t)v44);
  sub_4950((uint64_t)v47);
  v47[0] = v23;
  sub_5BF3C(&qword_BE7E0, (void (*)(uint64_t))type metadata accessor for SendAnnouncementNeedsValueStrategy);
  sub_8CD20();
  sub_8CD80();
  sub_5BDB8(v41, (uint64_t)v47);
  swift_retain();
  sub_8E450();
  uint64_t v28 = sub_8E400();
  type metadata accessor for HomeCommunicationDisplayTextCATsSimple();
  sub_8E450();
  uint64_t v29 = sub_8E400();
  swift_allocObject();
  uint64_t v30 = sub_8D6A0();
  sub_C9A4((uint64_t)v47, v48);
  sub_CB04();
  __chkstk_darwin(v31);
  sub_22300();
  sub_1CA84();
  v32();
  uint64_t v33 = sub_5BA44(v8, v17, v28, v29, v30);
  sub_4950((uint64_t)v47);
  v47[0] = v33;
  type metadata accessor for SendAnnouncementDisambiguationStrategy();
  sub_5BF3C(&qword_BE5E8, (void (*)(uint64_t))type metadata accessor for SendAnnouncementDisambiguationStrategy);
  sub_8CD50();
  sub_8CDC0();
  swift_retain();
  sub_8CDB0();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_5AF54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v41 = a1;
  uint64_t v42 = a2;
  uint64_t v4 = sub_8D4E0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_48AC(&qword_BE5E0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  os_log_type_t v11 = (char *)v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_8E460();
  __chkstk_darwin(v12 - 8);
  uint64_t v13 = *(void *)(a3 + 56);
  sub_5BDB8(a3 + 64, (uint64_t)v44);
  type metadata accessor for SendAnnouncementCATsSimple();
  swift_retain();
  sub_8E450();
  uint64_t v14 = sub_8E400();
  uint64_t v15 = sub_C9A4((uint64_t)v44, v45);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v18 + 16))(v17);
  uint64_t v19 = sub_5BC98(v13, (uint64_t)v17, v14, (void (*)(void))type metadata accessor for SendAnnouncementUnsupportedValueStrategy);
  sub_4950((uint64_t)v44);
  if (qword_BB830 != -1) {
    swift_once();
  }
  uint64_t v20 = sub_8E730();
  sub_50FC(v20, (uint64_t)qword_BFEC8);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v42, v8);
  uint64_t v21 = sub_8E710();
  os_log_type_t v22 = sub_8EB00();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = swift_slowAlloc();
    uint64_t v39 = v19;
    uint64_t v40 = v8;
    uint64_t v24 = (uint8_t *)v23;
    uint64_t v38 = swift_slowAlloc();
    v44[0] = v38;
    uint64_t v37 = v24;
    *(_DWORD *)uint64_t v24 = 136315138;
    v36[1] = v24 + 4;
    uint64_t v25 = v11;
    sub_8D7D0();
    uint64_t v26 = sub_8D4D0();
    unint64_t v28 = v27;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    uint64_t v43 = sub_8758C(v26, v28, v44);
    sub_8EBD0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v25, v40);
    _os_log_impl(&dword_0, v21, v22, "#SendAnnouncementFlow generating unsupportedFlowProducer for %s", v37, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v19 = v39;
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }

  sub_8D7D0();
  uint64_t v29 = sub_8D4D0();
  uint64_t v31 = v30;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (sub_25C44(v29, v31) == 1
    && (sub_8D8C0(), sub_98C0(v44, v45), char v32 = sub_8D0F0(), sub_4950((uint64_t)v44), (v32 & 1) == 0))
  {
    v44[0] = v19;
    type metadata accessor for SendAnnouncementUnsupportedValueStrategy();
    sub_5BF3C(&qword_BE7E8, (void (*)(uint64_t))type metadata accessor for SendAnnouncementUnsupportedValueStrategy);
    uint64_t v33 = (uint64_t (*)(uint64_t, uint64_t))sub_8CD60();
  }
  else
  {
    v44[0] = v19;
    type metadata accessor for SendAnnouncementUnsupportedValueStrategy();
    sub_5BF3C(&qword_BE7E8, (void (*)(uint64_t))type metadata accessor for SendAnnouncementUnsupportedValueStrategy);
    uint64_t v33 = (uint64_t (*)(uint64_t, uint64_t))sub_8CD70();
  }
  uint64_t v34 = v33(v41, v42);
  swift_release();
  swift_release();
  return v34;
}

uint64_t sub_5B544()
{
  sub_4950(v0 + 16);
  swift_release();
  sub_4950(v0 + 64);
  uint64_t v1 = v0 + OBJC_IVAR____TtC35HomeCommunicationFlowDelegatePlugin20SendAnnouncementFlow_input;
  sub_8D860();
  sub_4E008();
  (*(void (**)(uint64_t))(v2 + 8))(v1);
  return v0;
}

uint64_t sub_5B5BC()
{
  sub_5B544();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return _swift_deallocClassInstance(v0, v1, v2);
}

uint64_t sub_5B614()
{
  return type metadata accessor for SendAnnouncementFlow();
}

uint64_t type metadata accessor for SendAnnouncementFlow()
{
  uint64_t result = qword_BE6B0;
  if (!qword_BE6B0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_5B664()
{
  uint64_t result = sub_8D860();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SendAnnouncementFlow.State(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x5B7E4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SendAnnouncementFlow.State()
{
  return &type metadata for SendAnnouncementFlow.State;
}

unint64_t sub_5B820()
{
  unint64_t result = qword_BE7B0[0];
  if (!qword_BE7B0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_BE7B0);
  }
  return result;
}

BOOL sub_5B86C()
{
  return sub_59024();
}

uint64_t sub_5B888()
{
  return sub_591B8();
}

uint64_t sub_5B8AC()
{
  unint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *unint64_t v1 = v0;
  v1[1] = sub_C6E0;
  return sub_59248();
}

uint64_t sub_5B948(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for SendAnnouncementFlow();

  return Flow<>.exitValue.getter(v3, a2);
}

void *sub_5B984(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v16 = type metadata accessor for SharedGlobals();
  uint64_t v17 = &off_B6D60;
  uint64_t v12 = sub_C9F4(v15);
  sub_CA58(a2, (uint64_t)v12);
  a6[16] = 0;
  a6[17] = _swiftEmptyArrayStorage;
  a6[7] = a1;
  sub_5BDB8((uint64_t)v15, (uint64_t)(a6 + 2));
  a6[13] = a3;
  a6[14] = a4;
  uint64_t v13 = sub_98C0(v15, v16);
  sub_5BDB8(v13[1] + 96, (uint64_t)(a6 + 8));
  a6[15] = a5;
  sub_4950((uint64_t)v15);
  return a6;
}

void *sub_5BA44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v20 = type metadata accessor for SharedGlobals();
  uint64_t v21 = &off_B6D60;
  uint64_t v10 = sub_C9F4(v19);
  sub_CA58(a2, (uint64_t)v10);
  type metadata accessor for SendAnnouncementDisambiguationStrategy();
  os_log_type_t v11 = (void *)swift_allocObject();
  uint64_t v12 = sub_C9A4((uint64_t)v19, v20);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v19[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v15 + 16))(v14);
  uint64_t v16 = sub_5B984(a1, (uint64_t)v14, a3, a4, a5, v11);
  sub_4950((uint64_t)v19);
  return v16;
}

uint64_t sub_5BB98(uint64_t a1, uint64_t a2)
{
  return sub_5AF54(a1, a2, v2);
}

uint64_t sub_5BBA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_8D160();
  uint64_t v9 = sub_1CCBC(v8);
  __chkstk_darwin(v9);
  uint64_t v13 = type metadata accessor for SharedGlobals();
  uint64_t v14 = &off_B6D60;
  uint64_t v10 = sub_C9F4((uint64_t *)&v12);
  sub_CA58(a2, (uint64_t)v10);
  sub_8D130();
  sub_8D6E0();
  *(void *)(a4 + 64) = a1;
  sub_C928(&v12, a4 + 16);
  *(void *)(a4 + 56) = a3;
  return a4;
}

uint64_t sub_5BC98(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  uint64_t v18 = type metadata accessor for SharedGlobals();
  uint64_t v19 = &off_B6D60;
  uint64_t v9 = sub_C9F4(v17);
  sub_CA58(a2, (uint64_t)v9);
  a4(0);
  uint64_t v10 = swift_allocObject();
  sub_C9A4((uint64_t)v17, v18);
  sub_CB04();
  __chkstk_darwin(v11);
  uint64_t v13 = sub_5BF84((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14(v13);
  uint64_t v15 = sub_5BBA0(a1, v4, a3, v10);
  sub_4950((uint64_t)v17);
  return v15;
}

uint64_t sub_5BDB8(uint64_t a1, uint64_t a2)
{
  *(void *)(a2 + 24) = *(void *)(a1 + 24);
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  sub_4E008();
  (*v3)(a2);
  return a2;
}

uint64_t sub_5BE18(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_48AC(&qword_BE7F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_5BE80(uint64_t a1)
{
  uint64_t v2 = sub_48AC(&qword_BE7F8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_5BEE0()
{
  unint64_t result = qword_BE810;
  if (!qword_BE810)
  {
    sub_9950(&qword_BE808);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BE810);
  }
  return result;
}

void sub_5BF34(uint64_t a1)
{
  sub_59B24(a1, v1);
}

uint64_t sub_5BF3C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_5BF84@<X0>(uint64_t a1@<X8>)
{
  return v1 - a1;
}

char *sub_5BFA4@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  return (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

char *sub_5BFC4@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  return (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_5C000(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v5, v4, a4, v6, 2u);
}

double sub_5C020@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _OWORD *a4@<X8>)
{
  if (*(void *)(a3 + 16) && (unint64_t v6 = sub_5E228(a1, a2), (v7 & 1) != 0))
  {
    uint64_t v8 = *(void *)(a3 + 56) + 32 * v6;
    sub_12FA8(v8, (uint64_t)a4);
  }
  else
  {
    double result = 0.0;
    *a4 = 0u;
    a4[1] = 0u;
  }
  return result;
}

uint64_t sub_5C084(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!*(void *)(a3 + 16)) {
    return 0;
  }
  unint64_t v4 = sub_5E228(a1, a2);
  if ((v5 & 1) == 0) {
    return 0;
  }
  uint64_t v6 = *(void *)(*(void *)(a3 + 56) + 16 * v4);
  swift_bridgeObjectRetain();
  return v6;
}

uint64_t sub_5C0DC(char a1, uint64_t a2)
{
  if (*(void *)(a2 + 16) && (sub_5E2A0(a1), (v2 & 1) != 0)) {
    return swift_bridgeObjectRetain();
  }
  else {
    return 0;
  }
}

uint64_t sub_5C120(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16) && (sub_5E228(a1, a2), (v3 & 1) != 0)) {
    return swift_bridgeObjectRetain();
  }
  else {
    return 0;
  }
}

unint64_t sub_5C164(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = HIBYTE(a2) & 0xF;
  uint64_t v5 = a1 & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v6)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if ((a2 & 0x1000000000000000) != 0)
  {
    unint64_t v8 = sub_5E638(a1, a2, 10, (uint64_t (*)(void *, uint64_t, uint64_t))sub_5E994);
    char v10 = v22;
    goto LABEL_39;
  }
  if ((a2 & 0x2000000000000000) == 0)
  {
    if ((a1 & 0x1000000000000000) != 0) {
      char v7 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      char v7 = (unsigned __int8 *)sub_8ECB0();
    }
    unint64_t v8 = (unint64_t)sub_5E994(v7, v5);
    char v10 = v9 & 1;
    goto LABEL_39;
  }
  v23[0] = a1;
  v23[1] = a2 & 0xFFFFFFFFFFFFFFLL;
  if (a1 == 43)
  {
    if (!v4) {
      goto LABEL_52;
    }
    if (v4 == 1 || (BYTE1(a1) - 48) > 9u) {
      goto LABEL_36;
    }
    unint64_t v8 = (BYTE1(a1) - 48);
    uint64_t v15 = v4 - 2;
    if (v15)
    {
      uint64_t v16 = (unsigned __int8 *)v23 + 2;
      while (1)
      {
        unsigned int v17 = *v16 - 48;
        if (v17 > 9) {
          goto LABEL_36;
        }
        if (!is_mul_ok(v8, 0xAuLL)) {
          goto LABEL_36;
        }
        BOOL v14 = __CFADD__(10 * v8, v17);
        unint64_t v8 = 10 * v8 + v17;
        if (v14) {
          goto LABEL_36;
        }
        char v10 = 0;
        ++v16;
        if (!--v15) {
          goto LABEL_39;
        }
      }
    }
LABEL_38:
    char v10 = 0;
    goto LABEL_39;
  }
  if (a1 != 45)
  {
    if (!v4 || (a1 - 48) > 9u) {
      goto LABEL_36;
    }
    unint64_t v8 = (a1 - 48);
    uint64_t v18 = v4 - 1;
    if (v18)
    {
      uint64_t v20 = (unsigned __int8 *)v23 + 1;
      while (1)
      {
        unsigned int v21 = *v20 - 48;
        if (v21 > 9) {
          goto LABEL_36;
        }
        if (!is_mul_ok(v8, 0xAuLL)) {
          goto LABEL_36;
        }
        BOOL v14 = __CFADD__(10 * v8, v21);
        unint64_t v8 = 10 * v8 + v21;
        if (v14) {
          goto LABEL_36;
        }
        char v10 = 0;
        ++v20;
        if (!--v18) {
          goto LABEL_39;
        }
      }
    }
    goto LABEL_38;
  }
  if (v4)
  {
    if (v4 != 1 && (BYTE1(a1) - 48) <= 9u)
    {
      unint64_t v2 = 0;
      unint64_t v8 = -(uint64_t)(BYTE1(a1) - 48);
      if (BYTE1(a1) == 48)
      {
        uint64_t v11 = v4 - 2;
        if (v11)
        {
          uint64_t v12 = (unsigned __int8 *)v23 + 2;
          while (1)
          {
            unsigned int v13 = *v12 - 48;
            if (v13 > 9) {
              goto LABEL_36;
            }
            if (!is_mul_ok(v8, 0xAuLL)) {
              goto LABEL_36;
            }
            BOOL v14 = 10 * v8 >= v13;
            unint64_t v8 = 10 * v8 - v13;
            if (!v14) {
              goto LABEL_36;
            }
            char v10 = 0;
            ++v12;
            if (!--v11) {
              goto LABEL_39;
            }
          }
        }
        goto LABEL_38;
      }
      goto LABEL_53;
    }
LABEL_36:
    unint64_t v8 = 0;
    char v10 = 1;
    goto LABEL_39;
  }
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  char v10 = 1;
  unint64_t v8 = v2;
LABEL_39:
  swift_bridgeObjectRelease();
  if (v10) {
    return 0;
  }
  else {
    return v8;
  }
}

uint64_t sub_5C3D8()
{
  if (qword_BB830 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_8E730();
  sub_50FC(v1, (uint64_t)qword_BFEC8);
  unint64_t v2 = sub_8E710();
  os_log_type_t v3 = sub_8EB00();
  if (sub_1CC84(v3))
  {
    uint64_t v4 = (uint8_t *)sub_CCE4();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_0, v2, v0, "#SendAnnouncementFlowStrategy.actionForInput() handling", v4, 2u);
    sub_CC2C();
  }

  return sub_8D200();
}

uint64_t sub_5C4AC()
{
  sub_CC60();
  v1[42] = v2;
  v1[43] = v0;
  uint64_t v3 = sub_8E2A0();
  v1[44] = v3;
  v1[45] = *(void *)(v3 - 8);
  v1[46] = swift_task_alloc();
  return _swift_task_switch(sub_5C568, 0, 0);
}

void sub_5C568()
{
  uint64_t v112 = v0;
  if (qword_BB830 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_8E730();
  *(void *)(v0 + 376) = sub_50FC(v1, (uint64_t)qword_BFEC8);
  uint64_t v2 = sub_8E710();
  os_log_type_t v3 = sub_8EB00();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)sub_CCE4();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_0, v2, v3, "#SendAnnouncementFlowStrategy makeIntentFromParse() called", v4, 2u);
    sub_CC2C();
  }
  uint64_t v5 = *(void *)(v0 + 336);

  uint64_t v6 = *(void **)(v0 + 336);
  if (v5) {
    id v7 = *(id *)(v0 + 336);
  }
  else {
    id v7 = [objc_allocWithZone((Class)INSendAnnouncementIntent) init];
  }
  unint64_t v8 = *(void **)(v0 + 344);
  *(void *)(v0 + 256) = v7;
  uint64_t v9 = v8[10];
  uint64_t v10 = v8[11];
  sub_98C0(v8 + 7, v9);
  uint64_t v11 = *(unsigned __int8 (**)(uint64_t, uint64_t))(v10 + 16);
  id v12 = v6;
  if (v11(v9, v10) == 1)
  {
    id v13 = v7;
    sub_5D700(v13);

    *(void *)(v0 + 256) = v13;
  }
  sub_2E7F8();
  uint64_t v14 = v8[10];
  uint64_t v15 = v8[11];
  sub_98C0(v8 + 7, v14);
  uint64_t v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 112))(v14, v15);
  uint64_t v17 = v8[10];
  uint64_t v18 = v8[11];
  sub_98C0(v8 + 7, v17);
  uint64_t v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 96))(v17, v18);
  uint64_t v20 = v8[10];
  uint64_t v21 = v8[11];
  sub_98C0(v8 + 7, v20);
  uint64_t v22 = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 104))(v20, v21);
  unint64_t v23 = (unint64_t)sub_2D6EC(v16, v19, v22);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v23 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v27 = sub_8ED40();
    swift_bridgeObjectRelease();
    if (v27) {
      goto LABEL_12;
    }
LABEL_14:
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  if (!*(void *)((char *)&dword_10 + (v23 & 0xFFFFFFFFFFFFFF8))) {
    goto LABEL_14;
  }
LABEL_12:
  id v24 = v7;
  Class isa = sub_8EA20().super.isa;
  swift_bridgeObjectRelease();
  NSString v26 = sub_8E8C0();
  [v24 setValue:isa forKey:v26];

LABEL_15:
  uint64_t v28 = v8[10];
  uint64_t v29 = v8[11];
  sub_98C0(v8 + 7, v28);
  uint64_t v30 = (*(uint64_t (**)(uint64_t, uint64_t))(v29 + 120))(v28, v29);
  if ((v31 & 1) == 0)
  {
    *(void *)(v0 + 320) = v30;
    uint64_t v32 = v8[10];
    uint64_t v33 = v8[11];
    sub_98C0(v8 + 7, v32);
    uint64_t v34 = (*(uint64_t (**)(uint64_t, uint64_t))(v33 + 128))(v32, v33);
    if ((v35 & 1) == 0)
    {
      uint64_t v36 = (void *)(v0 + 248);
      *(void *)(v0 + 248) = v34;
      uint64_t v37 = sub_8E710();
      os_log_type_t v38 = sub_8EB00();
      if (os_log_type_enabled(v37, v38))
      {
        uint64_t v39 = swift_slowAlloc();
        *(_DWORD *)uint64_t v39 = 134218240;
        sub_22508();
        *(void *)(v0 + 312) = *(void *)(v0 + 320);
        sub_8EBD0();
        *(_WORD *)(v39 + 12) = 2048;
        sub_22508();
        *(void *)(v0 + 328) = *v36;
        sub_8EBD0();
        _os_log_impl(&dword_0, v37, v38, "#SendAnnouncementFlowStrategy startTimeMs: %llu and endTimeMs: %llu", (uint8_t *)v39, 0x16u);
        sub_CC2C();
      }
      uint64_t v109 = (void *)(v0 + 248);

      sub_8E270();
      if (sub_8E260())
      {
        os_log_type_t v108 = (void *)(v0 + 320);
        uint64_t v40 = *(void *)(v0 + 360);
        uint64_t v41 = *(void *)(v0 + 352);
        sub_8E250();
        swift_release();
        sub_8E570();
        sub_48AC(&qword_BE950);
        uint64_t v42 = *(void *)(v40 + 72);
        unint64_t v43 = (*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
        uint64_t v44 = swift_allocObject();
        *(_OWORD *)(v44 + 16) = xmmword_90CF0;
        unint64_t v45 = v44 + v43;
        uint64_t v46 = *(void (**)(unint64_t, void, uint64_t))(v40 + 104);
        v46(v45, enum case for InputOrigin.voiceTrigger(_:), v41);
        v46(v45 + v42, enum case for InputOrigin.bluetoothVoiceTrigger(_:), v41);
        sub_5E150(&qword_BE958, 255, (void (*)(uint64_t))&type metadata accessor for InputOrigin);
        if (sub_8E8B0() & 1) != 0 || (sub_8E8B0())
        {
          swift_setDeallocating();
          sub_5E0D4();
          uint64_t v47 = sub_5F10C();
          v48(v47);
          uint64_t v49 = sub_8E710();
          os_log_type_t v50 = sub_8EB00();
          if (os_log_type_enabled(v49, v50))
          {
            char v51 = (uint8_t *)sub_CCE4();
            *(_WORD *)char v51 = 0;
            _os_log_impl(&dword_0, v49, v50, "#SendAnnouncementFlowStrategy inputOrigin is voice trigger, checking voiceTriggerEventInfo for audio offset", v51, 2u);
            sub_CC2C();
          }

          uint64_t v52 = sub_8E580();
          if (v52)
          {
            uint64_t v53 = v52;
            uint64_t v54 = sub_5C084(0xD000000000000013, 0x8000000000098340, v52);
            if (v55
              && (uint64_t v56 = v54,
                  unint64_t v57 = v55,
                  uint64_t v58 = sub_5C084(0xD000000000000012, 0x8000000000098360, v53),
                  unint64_t v60 = v59,
                  swift_bridgeObjectRelease(),
                  v60)
              && (unint64_t v61 = sub_5C164(v56, v57), (v62 & 1) == 0))
            {
              unint64_t v63 = v61;
              unint64_t v64 = sub_5C164(v58, v60);
              if ((v65 & 1) == 0)
              {
                unint64_t v66 = v64;
                uint64_t v67 = sub_8E710();
                os_log_type_t v68 = sub_8EB00();
                if (os_log_type_enabled(v67, v68))
                {
                  uint64_t v69 = swift_slowAlloc();
                  *(_DWORD *)uint64_t v69 = 134218240;
                  *(void *)(v0 + 288) = v63;
                  sub_8EBD0();
                  *(_WORD *)(v69 + 12) = 2048;
                  *(void *)(v0 + 296) = v66;
                  sub_8EBD0();
                  _os_log_impl(&dword_0, v67, v68, "#SendAnnouncementFlowStrategy extraSamplesAtStart from CoreSpeech: %llu at hardwareSampleRate: %llu", (uint8_t *)v69, 0x16u);
                  sub_CC2C();
                }

                if (is_mul_ok(v63, 0x3E8uLL))
                {
                  if (v66)
                  {
                    unint64_t v70 = 1000 * v63 / v66;
                    swift_beginAccess();
                    unint64_t v71 = *v108 + v70;
                    if (!__CFADD__(*v108, v70))
                    {
                      void *v108 = v71;
                      swift_beginAccess();
                      unint64_t v72 = *v109 + v70;
                      if (!__CFADD__(*v109, v70))
                      {
                        *uint64_t v109 = v72;
                        uint64_t v73 = sub_8E710();
                        os_log_type_t v74 = sub_8EB00();
                        if (sub_1CC84(v74))
                        {
                          uint64_t v75 = swift_slowAlloc();
                          *(_DWORD *)uint64_t v75 = 134218496;
                          *(void *)(v0 + 264) = v70;
                          sub_8EBD0();
                          *(_WORD *)(v75 + 12) = 2048;
                          *(void *)(v0 + 272) = v71;
                          sub_8EBD0();
                          *(_WORD *)(v75 + 22) = 2048;
                          *(void *)(v0 + 280) = v72;
                          sub_8EBD0();
                          _os_log_impl(&dword_0, v73, (os_log_type_t)(v0 - 8), "#SendAnnouncementFlowStrategy there are extraAudioSamplesAtStartInMs: %llu. New startTimeMs=%llu new endTimeMs=%llu", (uint8_t *)v75, 0x20u);
                          sub_CC2C();
                        }
                        swift_release();
LABEL_46:

LABEL_49:
                        os_log_type_t v98 = *(void **)(v0 + 256);
                        *(void *)(v0 + 384) = v98;
                        sub_22508();
                        uint64_t v110 = *(void *)(v0 + 320);
                        sub_22508();
                        uint64_t v99 = *(void *)(v0 + 248);
                        uint64_t v100 = v8[10];
                        uint64_t v101 = v8[11];
                        sub_98C0(v8 + 7, v100);
                        uint64_t v102 = *(uint64_t (**)(uint64_t, uint64_t))(v101 + 152);
                        id v103 = v98;
                        uint64_t v104 = v102(v100, v101);
                        uint64_t v106 = v105;
                        *(void *)(v0 + 392) = v105;
                        sub_8D060();
                        uint64_t v107 = (void *)swift_task_alloc();
                        *(void *)(v0 + 400) = v107;
                        *uint64_t v107 = v0;
                        v107[1] = sub_5D264;
                        sub_628C0((uint64_t)v103, v110, v99, v104, v106, v0 + 16);
                        return;
                      }
LABEL_55:
                      __break(1u);
                      return;
                    }
LABEL_54:
                    __break(1u);
                    goto LABEL_55;
                  }
                }
                else
                {
                  __break(1u);
                }
                __break(1u);
                goto LABEL_54;
              }
            }
            else
            {
              swift_bridgeObjectRelease();
            }
          }
          swift_release();
          goto LABEL_49;
        }
        uint64_t v36 = *(void **)(v0 + 360);
        swift_setDeallocating();
        sub_5E0D4();
        uint64_t v94 = sub_5F10C();
        v95(v94);
        swift_release();
      }
      uint64_t v73 = sub_8E710();
      os_log_type_t v96 = sub_8EB00();
      if (sub_1CC84(v96))
      {
        uint64_t v97 = (uint8_t *)sub_CCE4();
        *(_WORD *)uint64_t v97 = 0;
        _os_log_impl(&dword_0, v73, (os_log_type_t)v36, "#SendAnnouncementFlowStrategy inputOrigin is not voice trigger, not checking for extraSamplesAtStart...", v97, 2u);
        sub_CC2C();
      }
      goto LABEL_46;
    }
  }
  unint64_t v76 = *(void **)(v0 + 344);
  sub_98C0(v76 + 12, v76[15]);
  sub_8D050();
  uint64_t v78 = v76[10];
  uint64_t v77 = v76[11];
  sub_98C0(v76 + 7, v78);
  char v79 = (*(uint64_t (**)(uint64_t, uint64_t))(v77 + 16))(v78, v77);
  id v80 = sub_1CFF0(v79);
  id v81 = [v80 _className];

  sub_8E8D0();
  swift_retain();
  sub_8D040();
  sub_8CEC0();
  swift_release();
  uint64_t v82 = (void *)sub_8E710();
  os_log_type_t v83 = sub_8EB00();
  if (sub_22324(v83))
  {
    uint64_t v84 = (_DWORD *)swift_slowAlloc();
    uint64_t v111 = swift_slowAlloc();
    *uint64_t v84 = 136315138;
    sub_22508();
    id v85 = *(id *)(v0 + 256);
    id v86 = [v85 description];
    uint64_t v87 = sub_8E8D0();
    unint64_t v89 = v88;

    *(void *)(v0 + 304) = sub_8758C(v87, v89, &v111);
    sub_8EBD0();
    swift_bridgeObjectRelease();
    sub_58C94(&dword_0, v90, v91, "#SendAnnouncementFlowStrategy Finished creating intent from parse: %s");
    swift_arrayDestroy();
    sub_CC2C();
    sub_CC2C();
  }

  sub_22508();
  swift_task_dealloc();
  uint64_t v92 = sub_5F124();
  v93(v92);
}

uint64_t sub_5D264(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  sub_CB34();
  uint64_t *v6 = v5;
  uint64_t *v6 = *v2;
  *(void *)(v5 + 408) = v1;
  swift_task_dealloc();
  id v7 = *(void **)(v4 + 384);
  if (v1)
  {
    sub_4950(v5 + 16);

    swift_bridgeObjectRelease();
    unint64_t v8 = sub_5D694;
  }
  else
  {
    *(void *)(v5 + 416) = a1;
    sub_4950(v5 + 16);

    swift_bridgeObjectRelease();
    unint64_t v8 = sub_5D3E4;
  }
  return _swift_task_switch(v8, 0, 0);
}

uint64_t sub_5D3E4()
{
  uint64_t v22 = v0;
  uint64_t v1 = *(void *)(v0 + 416);

  *(void *)(v0 + 256) = v1;
  uint64_t v2 = *(void **)(v0 + 344);
  sub_98C0(v2 + 12, v2[15]);
  sub_8D050();
  uint64_t v4 = v2[10];
  uint64_t v3 = v2[11];
  sub_98C0(v2 + 7, v4);
  char v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 16))(v4, v3);
  id v6 = sub_1CFF0(v5);
  id v7 = [v6 _className];

  sub_8E8D0();
  swift_retain();
  sub_8D040();
  sub_8CEC0();
  swift_release();
  unint64_t v8 = (void *)sub_8E710();
  os_log_type_t v9 = sub_8EB00();
  if (sub_22324(v9))
  {
    uint64_t v10 = (_DWORD *)swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    *uint64_t v10 = 136315138;
    sub_22508();
    id v11 = *(id *)(v0 + 256);
    id v12 = [v11 description];
    uint64_t v13 = sub_8E8D0();
    unint64_t v15 = v14;

    *(void *)(v0 + 304) = sub_8758C(v13, v15, &v21);
    sub_8EBD0();
    swift_bridgeObjectRelease();
    sub_58C94(&dword_0, v16, v17, "#SendAnnouncementFlowStrategy Finished creating intent from parse: %s");
    swift_arrayDestroy();
    sub_CC2C();
    sub_CC2C();
  }

  sub_22508();
  swift_task_dealloc();
  uint64_t v18 = sub_5F124();
  return v19(v18);
}

uint64_t sub_5D694()
{
  sub_CC60();

  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

id sub_5D700(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_48AC(&qword_BC7B8);
  __chkstk_darwin(v5 - 8);
  id v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_BB830 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_8E730();
  sub_50FC(v8, (uint64_t)qword_BFEC8);
  os_log_type_t v9 = sub_8E710();
  os_log_type_t v10 = sub_8EB00();
  if (sub_22324(v10))
  {
    id v11 = (uint8_t *)sub_CCE4();
    *(_WORD *)id v11 = 0;
    _os_log_impl(&dword_0, v9, v2, "#SendAnnouncementFlowStrategy setting reply and announcement ID", v11, 2u);
    sub_CC2C();
  }

  Class isa = sub_8EA90().super.super.isa;
  NSString v13 = sub_8E8C0();
  [a1 setValue:isa forKey:v13];

  uint64_t v14 = sub_8CA50();
  _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0((uint64_t)v7, 1, 1, v14);
  unint64_t v15 = v3 + 7;
  uint64_t v17 = v3[10];
  uint64_t v16 = v3[11];
  sub_98C0(v15, v17);
  uint64_t v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 136))(v17, v16);
  uint64_t v20 = v19;
  id v21 = objc_allocWithZone((Class)INAnnouncement);
  id v22 = sub_660C8((uint64_t)v7, v18, v20, 0, 0);
  NSString v23 = sub_8E8C0();
  [a1 setValue:v22 forKey:v23];

  id v24 = a1;
  return v24;
}

uint64_t type metadata accessor for SendAnnouncementFlowStrategy()
{
  return self;
}

uint64_t sub_5D95C()
{
  return sub_5C3D8();
}

uint64_t sub_5D974()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_4F540;
  return sub_5C4AC();
}

uint64_t sub_5DA0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for SendAnnouncementFlowStrategy();

  return RCHFlowStrategyAsync.makeParameterMetadata(intent:)(a1, v5, a3);
}

uint64_t sub_5DA58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  os_log_type_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *os_log_type_t v9 = v4;
  v9[1] = sub_58BD0;
  return RCHFlowStrategyAsync.makeErrorResponse(error:)(a1, a2, a3, a4);
}

uint64_t sub_5DB1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  os_log_type_t v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v10;
  uint64_t v11 = type metadata accessor for SendAnnouncementFlowStrategy();
  *os_log_type_t v10 = v5;
  v10[1] = sub_58BD0;
  return ResolveConfirmFlowStrategyAsync.makeAppDoesNotSupportIntentResponse(app:intent:)(a1, a2, a3, v11, a5);
}

uint64_t sub_5DBE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  os_log_type_t v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v10;
  uint64_t v11 = type metadata accessor for SendAnnouncementFlowStrategy();
  *os_log_type_t v10 = v5;
  v10[1] = sub_58BD0;
  return ResolveConfirmFlowStrategyAsync.makeAppNotFoundOnDeviceResponse(app:intent:)(a1, a2, a3, v11, a5);
}

uint64_t sub_5DCB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  os_log_type_t v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v10;
  uint64_t v11 = type metadata accessor for SendAnnouncementFlowStrategy();
  *os_log_type_t v10 = v5;
  v10[1] = sub_58BD0;
  return ResolveConfirmFlowStrategyAsync.makeDeviceIncompatibleResponse(app:intent:)(a1, a2, a3, v11, a5);
}

uint64_t sub_5DD80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  id v12 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v12;
  uint64_t v13 = type metadata accessor for SendAnnouncementFlowStrategy();
  void *v12 = v6;
  v12[1] = sub_4D28C;
  return ResolveConfirmFlowStrategyAsync.makeErrorResponse(error:app:intent:)(a1, a2, a3, a4, v13, a6);
}

uint64_t sub_5DE5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  id v12 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v12;
  uint64_t v13 = type metadata accessor for SendAnnouncementFlowStrategy();
  void *v12 = v6;
  v12[1] = sub_58BD0;
  return RouteConfirmIntentResponseFlowStrategyAsync.makeFailureConfirmingIntentResponse(app:intent:intentResponse:)(a1, a2, a3, a4, v13, a6);
}

uint64_t sub_5DF38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  uint64_t v9 = type metadata accessor for SendAnnouncementFlowStrategy();
  *uint64_t v8 = v4;
  v8[1] = sub_C554;
  return IntentExtensionCommunicatingAsync.makeIntentExecutionBehavior(app:intent:)(a1, a2, v9, a4);
}

uint64_t sub_5DFFC(uint64_t a1, uint64_t a2)
{
  return sub_5E150(&qword_BE908, a2, (void (*)(uint64_t))type metadata accessor for SendAnnouncementFlowStrategy);
}

uint64_t sub_5E044(uint64_t a1, uint64_t a2)
{
  return sub_5E150(qword_BE910, a2, (void (*)(uint64_t))type metadata accessor for SendAnnouncementFlowStrategy);
}

uint64_t sub_5E08C(uint64_t a1, uint64_t a2)
{
  return sub_5E150(qword_BE938, a2, (void (*)(uint64_t))type metadata accessor for SendAnnouncementFlowStrategy);
}

uint64_t sub_5E0D4()
{
  sub_8E2A0();
  swift_arrayDestroy();

  return _swift_deallocClassInstance(v0, 32, 7);
}

uint64_t sub_5E150(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_5E198(unint64_t a1)
{
  sub_8EEE0();
  if ((a1 & 0x100000000) != 0)
  {
    sub_8EF00(0);
  }
  else
  {
    sub_8EF00(1u);
    sub_8EF10(a1);
  }
  Swift::Int v2 = sub_8EF20();

  return sub_5E328(a1 | ((HIDWORD(a1) & 1) << 32), v2);
}

unint64_t sub_5E228(uint64_t a1, uint64_t a2)
{
  sub_8EEE0();
  sub_8E930();
  Swift::Int v4 = sub_8EF20();

  return sub_5E3AC(a1, a2, v4);
}

unint64_t sub_5E2A0(char a1)
{
  sub_8EEE0();
  sub_2F620(a1);
  sub_8E930();
  swift_bridgeObjectRelease();
  Swift::Int v2 = sub_8EF20();

  return sub_5E490(a1, v2);
}

unint64_t sub_5E328(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v6 = ~v4;
    do
    {
      uint64_t v7 = *(void *)(v2 + 48) + 8 * result;
      if (*(unsigned char *)(v7 + 4))
      {
        if ((a1 & 0x100000000) != 0) {
          return result;
        }
      }
      else if ((a1 & 0x100000000) == 0 && *(_DWORD *)v7 == a1)
      {
        return result;
      }
      unint64_t result = (result + 1) & v6;
    }
    while (((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0);
  }
  return result;
}

unint64_t sub_5E3AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    os_log_type_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_8EE40() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_8EE40() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_5E490(char a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v7 = sub_2F620(*(unsigned char *)(*(void *)(v2 + 48) + v5));
    uint64_t v9 = v8;
    if (v7 == sub_2F620(a1) && v9 == v10)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    char v12 = sub_8EE40();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v12 & 1) == 0)
    {
      uint64_t v13 = ~v4;
      unint64_t v5 = (v5 + 1) & v13;
      if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
      {
        while (1)
        {
          uint64_t v14 = sub_2F620(*(unsigned char *)(*(void *)(v2 + 48) + v5));
          uint64_t v16 = v15;
          if (v14 == sub_2F620(a1) && v16 == v17) {
            break;
          }
          char v19 = sub_8EE40();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v19 & 1) == 0)
          {
            unint64_t v5 = (v5 + 1) & v13;
            if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5)) {
              continue;
            }
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unsigned __int8 *sub_5E608(unsigned __int8 *a1, uint64_t a2)
{
  return sub_5E730(a1, a2);
}

uint64_t sub_5E620(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_5E638(a1, a2, a3, (uint64_t (*)(void *, uint64_t, uint64_t))sub_5E730);
}

uint64_t sub_5E638(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void *, uint64_t, uint64_t))
{
  uint64_t v15 = a1;
  uint64_t v16 = a2;
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_8E9E0();
  unint64_t v8 = v6;
  if ((v6 & 0x1000000000000000) == 0)
  {
    if ((v6 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v10 = HIBYTE(v8) & 0xF;
    uint64_t v15 = v7;
    uint64_t v16 = v8 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v9 = &v15;
    goto LABEL_7;
  }
  uint64_t v7 = sub_5EBF8();
  unint64_t v12 = v11;
  swift_bridgeObjectRelease();
  unint64_t v8 = v12;
  if ((v12 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v7 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = (void *)((v8 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v10 = v7 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    uint64_t v9 = (void *)sub_8ECB0();
  }
LABEL_7:
  uint64_t v13 = a4(v9, v10, a3);
  swift_bridgeObjectRelease();
  return v13;
}

unsigned __int8 *sub_5E730(unsigned __int8 *result, uint64_t a2)
{
  int v2 = *result;
  if (v2 == 43)
  {
    if (a2 >= 1)
    {
      if (a2 != 1)
      {
        sub_5F0F4();
        if (v20 ^ v21 | v19) {
          unsigned __int8 v25 = v28;
        }
        if (v20 ^ v21 | v19) {
          unsigned __int8 v26 = 65;
        }
        if (!(v20 ^ v21 | v19)) {
          unsigned __int8 v27 = 58;
        }
        if (v22)
        {
          uint64_t v13 = 0;
          uint64_t v29 = (unsigned __int8 *)(v22 + 1);
          do
          {
            unsigned int v30 = *v29;
            if (v30 < 0x30 || v30 >= v27)
            {
              if (v30 < 0x41 || v30 >= v26)
              {
                uint64_t v17 = 0;
                if (v30 < 0x61 || v30 >= v25) {
                  return (unsigned __int8 *)v17;
                }
                char v31 = -87;
              }
              else
              {
                char v31 = -55;
              }
            }
            else
            {
              char v31 = -48;
            }
            uint64_t v32 = v13 * v23;
            if ((unsigned __int128)(v13 * (__int128)v23) >> 64 != (v13 * v23) >> 63) {
              return 0;
            }
            uint64_t v13 = v32 + (v30 + v31);
            if (__OFADD__(v32, (v30 + v31))) {
              return 0;
            }
            ++v29;
            --v24;
          }
          while (v24);
          return (unsigned __int8 *)v13;
        }
        return 0;
      }
      return 0;
    }
  }
  else
  {
    if (v2 != 45)
    {
      if (a2)
      {
        sub_5F0F4();
        if (v34 ^ v35 | v33) {
          unsigned __int8 v39 = v42;
        }
        if (v34 ^ v35 | v33) {
          unsigned __int8 v40 = 65;
        }
        if (!(v34 ^ v35 | v33)) {
          unsigned __int8 v41 = 58;
        }
        if (v36)
        {
          uint64_t v43 = 0;
          do
          {
            unsigned int v44 = *v36;
            if (v44 < 0x30 || v44 >= v41)
            {
              if (v44 < 0x41 || v44 >= v40)
              {
                uint64_t v17 = 0;
                if (v44 < 0x61 || v44 >= v39) {
                  return (unsigned __int8 *)v17;
                }
                char v45 = -87;
              }
              else
              {
                char v45 = -55;
              }
            }
            else
            {
              char v45 = -48;
            }
            uint64_t v46 = v43 * v37;
            if ((unsigned __int128)(v43 * (__int128)v37) >> 64 != (v43 * v37) >> 63) {
              return 0;
            }
            uint64_t v43 = v46 + (v44 + v45);
            if (__OFADD__(v46, (v44 + v45))) {
              return 0;
            }
            ++v36;
            --v38;
          }
          while (v38);
          return (unsigned __int8 *)(v46 + (v44 + v45));
        }
        return 0;
      }
      return 0;
    }
    if (a2 >= 1)
    {
      if (a2 != 1)
      {
        sub_5F0F4();
        if (v4 ^ v5 | v3) {
          unsigned __int8 v9 = v12;
        }
        if (v4 ^ v5 | v3) {
          unsigned __int8 v10 = 65;
        }
        if (!(v4 ^ v5 | v3)) {
          unsigned __int8 v11 = 58;
        }
        if (v6)
        {
          uint64_t v13 = 0;
          for (uint64_t i = (unsigned __int8 *)(v6 + 1); ; ++i)
          {
            unsigned int v15 = *i;
            if (v15 < 0x30 || v15 >= v11)
            {
              if (v15 < 0x41 || v15 >= v10)
              {
                uint64_t v17 = 0;
                if (v15 < 0x61 || v15 >= v9) {
                  return (unsigned __int8 *)v17;
                }
                char v16 = -87;
              }
              else
              {
                char v16 = -55;
              }
            }
            else
            {
              char v16 = -48;
            }
            uint64_t v18 = v13 * v7;
            if ((unsigned __int128)(v13 * (__int128)v7) >> 64 != (v13 * v7) >> 63) {
              return 0;
            }
            uint64_t v13 = v18 - (v15 + v16);
            if (__OFSUB__(v18, (v15 + v16))) {
              return 0;
            }
            if (!--v8) {
              return (unsigned __int8 *)v13;
            }
          }
        }
        return 0;
      }
      return 0;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

unsigned __int8 *sub_5E994(unsigned __int8 *result, uint64_t a2)
{
  int v2 = *result;
  if (v2 == 43)
  {
    if (a2 >= 1)
    {
      if (a2 != 1)
      {
        sub_5F0F4();
        if (v22 ^ v23 | v21) {
          unsigned __int8 v27 = v30;
        }
        if (v22 ^ v23 | v21) {
          unsigned __int8 v28 = 65;
        }
        if (!(v22 ^ v23 | v21)) {
          unsigned __int8 v29 = 58;
        }
        if (v24)
        {
          unint64_t v13 = 0;
          char v31 = (unsigned __int8 *)(v24 + 1);
          do
          {
            unsigned int v32 = *v31;
            if (v32 < 0x30 || v32 >= v29)
            {
              if (v32 < 0x41 || v32 >= v28)
              {
                uint64_t v17 = 0;
                if (v32 < 0x61 || v32 >= v27) {
                  return (unsigned __int8 *)v17;
                }
                char v33 = -87;
              }
              else
              {
                char v33 = -55;
              }
            }
            else
            {
              char v33 = -48;
            }
            if (!is_mul_ok(v13, v25)) {
              return 0;
            }
            unint64_t v34 = v13 * v25;
            unsigned __int8 v35 = v32 + v33;
            BOOL v20 = __CFADD__(v34, v35);
            unint64_t v13 = v34 + v35;
            if (v20) {
              return 0;
            }
            ++v31;
            --v26;
          }
          while (v26);
          return (unsigned __int8 *)v13;
        }
        return 0;
      }
      return 0;
    }
  }
  else
  {
    if (v2 != 45)
    {
      if (a2)
      {
        sub_5F0F4();
        if (v37 ^ v38 | v36) {
          unsigned __int8 v42 = v45;
        }
        if (v37 ^ v38 | v36) {
          unsigned __int8 v43 = 65;
        }
        if (!(v37 ^ v38 | v36)) {
          unsigned __int8 v44 = 58;
        }
        if (v39)
        {
          unint64_t v46 = 0;
          do
          {
            unsigned int v47 = *v39;
            if (v47 < 0x30 || v47 >= v44)
            {
              if (v47 < 0x41 || v47 >= v43)
              {
                uint64_t v17 = 0;
                if (v47 < 0x61 || v47 >= v42) {
                  return (unsigned __int8 *)v17;
                }
                char v48 = -87;
              }
              else
              {
                char v48 = -55;
              }
            }
            else
            {
              char v48 = -48;
            }
            if (!is_mul_ok(v46, v40)) {
              return 0;
            }
            unint64_t v49 = v46 * v40;
            unsigned __int8 v50 = v47 + v48;
            BOOL v20 = __CFADD__(v49, v50);
            unint64_t v46 = v49 + v50;
            if (v20) {
              return 0;
            }
            ++v39;
            --v41;
          }
          while (v41);
          return (unsigned __int8 *)v46;
        }
        return 0;
      }
      return 0;
    }
    if (a2 >= 1)
    {
      if (a2 != 1)
      {
        sub_5F0F4();
        if (v4 ^ v5 | v3) {
          unsigned __int8 v9 = v12;
        }
        if (v4 ^ v5 | v3) {
          unsigned __int8 v10 = 65;
        }
        if (!(v4 ^ v5 | v3)) {
          unsigned __int8 v11 = 58;
        }
        if (v6)
        {
          unint64_t v13 = 0;
          for (uint64_t i = (unsigned __int8 *)(v6 + 1); ; ++i)
          {
            unsigned int v15 = *i;
            if (v15 < 0x30 || v15 >= v11)
            {
              if (v15 < 0x41 || v15 >= v10)
              {
                uint64_t v17 = 0;
                if (v15 < 0x61 || v15 >= v9) {
                  return (unsigned __int8 *)v17;
                }
                char v16 = -87;
              }
              else
              {
                char v16 = -55;
              }
            }
            else
            {
              char v16 = -48;
            }
            if (!is_mul_ok(v13, v7)) {
              return 0;
            }
            unint64_t v18 = v13 * v7;
            unsigned __int8 v19 = v15 + v16;
            BOOL v20 = v18 >= v19;
            unint64_t v13 = v18 - v19;
            if (!v20) {
              return 0;
            }
            if (!--v8) {
              return (unsigned __int8 *)v13;
            }
          }
        }
        return 0;
      }
      return 0;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_5EBF8()
{
  unint64_t v0 = sub_5EC64();
  uint64_t v4 = sub_5EC98(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_5EC64()
{
  return sub_8E9F0();
}

uint64_t sub_5EC98(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = sub_5EDF0(a1, a2, a3, a4);
    if (!v9
      || (uint64_t v10 = v9,
          unsigned __int8 v11 = sub_87A98(v9, 0),
          unint64_t v12 = sub_5EEF0((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4),
          swift_bridgeObjectRetain(),
          swift_bridgeObjectRelease(),
          v12 == v10))
    {
      uint64_t v13 = sub_8E920();
      swift_release();
      return v13;
    }
    __break(1u);
  }
  else
  {
    if ((a4 & 0x2000000000000000) != 0)
    {
      v14[0] = a3;
      v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
      return sub_8E920();
    }
    if ((a3 & 0x1000000000000000) != 0) {
      goto LABEL_4;
    }
  }
  sub_8ECB0();
LABEL_4:

  return sub_8E920();
}

uint64_t sub_5EDF0(uint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4)
{
  unint64_t v4 = a4;
  uint64_t v5 = a3;
  unint64_t v6 = a2;
  unint64_t v7 = a1;
  uint64_t v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0) {
    LOBYTE(v8) = 1;
  }
  uint64_t v9 = 4 << v8;
  if ((a1 & 0xC) == 4 << v8)
  {
    a1 = sub_87B00(a1, a3, a4);
    unint64_t v7 = a1;
  }
  if ((v6 & 0xC) == v9)
  {
    a1 = sub_87B00(v6, v5, v4);
    unint64_t v6 = a1;
    if ((v4 & 0x1000000000000000) == 0) {
      return (v6 >> 16) - (v7 >> 16);
    }
  }
  else if ((v4 & 0x1000000000000000) == 0)
  {
    return (v6 >> 16) - (v7 >> 16);
  }
  unint64_t v11 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0) {
    unint64_t v11 = v5 & 0xFFFFFFFFFFFFLL;
  }
  if (v11 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v11 >= v6 >> 16)
  {
    a1 = v7;
    a2 = v6;
    a3 = v5;
    a4 = v4;
    return String.UTF8View._foreignDistance(from:to:)(a1, a2, a3, a4);
  }
  __break(1u);
  return String.UTF8View._foreignDistance(from:to:)(a1, a2, a3, a4);
}

unint64_t sub_5EEF0(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  uint64_t v9 = (void *)result;
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
    unint64_t v12 = a4;
    uint64_t v11 = 0;
    goto LABEL_35;
  }
  if (a3 < 0) {
    goto LABEL_38;
  }
  unint64_t v10 = a5 >> 14;
  unint64_t v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    uint64_t v11 = 0;
    unint64_t v12 = a4;
LABEL_35:
    *uint64_t v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  uint64_t v11 = 0;
  uint64_t v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0) {
    LOBYTE(v14) = 1;
  }
  uint64_t v15 = 4 << v14;
  uint64_t v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0) {
    uint64_t v16 = a6 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v23 = v16;
  uint64_t v26 = a3 - 1;
  unint64_t v12 = a4;
  while (1)
  {
    unint64_t result = v12;
    if ((v12 & 0xC) == v15) {
      unint64_t result = sub_87B00(v12, a6, a7);
    }
    if (result >> 14 < v27 || result >> 14 >= v10) {
      break;
    }
    if ((a7 & 0x1000000000000000) != 0)
    {
      unint64_t result = sub_8E9B0();
      char v19 = result;
    }
    else
    {
      unint64_t v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        char v19 = *((unsigned char *)v28 + v18);
      }
      else
      {
        unint64_t result = v21;
        if ((a6 & 0x1000000000000000) == 0) {
          unint64_t result = sub_8ECB0();
        }
        char v19 = *(unsigned char *)(result + v18);
      }
    }
    if ((v12 & 0xC) == v15)
    {
      unint64_t result = sub_87B00(v12, a6, a7);
      unint64_t v12 = result;
      if ((a7 & 0x1000000000000000) == 0)
      {
LABEL_27:
        unint64_t v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
        goto LABEL_31;
      }
    }
    else if ((a7 & 0x1000000000000000) == 0)
    {
      goto LABEL_27;
    }
    if (v23 <= v12 >> 16) {
      goto LABEL_37;
    }
    unint64_t v12 = sub_8E980();
LABEL_31:
    *(unsigned char *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      uint64_t v11 = a3;
      goto LABEL_35;
    }
    ++v11;
    if (v10 == v12 >> 14) {
      goto LABEL_35;
    }
  }
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_5F10C()
{
  return v0;
}

uint64_t sub_5F124()
{
  return v0;
}

unint64_t sub_5F138()
{
  return 0xD000000000000016;
}

uint64_t sub_5F154()
{
  uint64_t v0 = sub_8CA50();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  unint64_t v3 = (char *)v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_48AC(&qword_BC7B8);
  __chkstk_darwin(v4 - 8);
  unint64_t v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = 0;
  unint64_t v15 = 0xE000000000000000;
  sub_8EC40(151);
  v16._uint64_t countAndFlagsBits = 0xD00000000000002CLL;
  v16._object = (void *)0x8000000000098380;
  sub_8E960(v16);
  sub_8E540();
  if (_s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0((uint64_t)v6, 1, v0))
  {
    sub_125F8((uint64_t)v6);
    uint64_t v7 = 0;
    uint64_t v8 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v3, v6, v0);
    sub_125F8((uint64_t)v6);
    uint64_t v7 = sub_8CA20();
    uint64_t v8 = v9;
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
  v13[0] = v7;
  v13[1] = v8;
  sub_48AC(&qword_BDDD8);
  v17._uint64_t countAndFlagsBits = sub_8E8E0();
  sub_5F8F8(v17);
  swift_bridgeObjectRelease();
  v18._uint64_t countAndFlagsBits = 0xD00000000000001CLL;
  v18._object = (void *)0x80000000000983B0;
  sub_8E960(v18);
  sub_8E540();
  v19._uint64_t countAndFlagsBits = sub_5F8CC();
  sub_5F8F8(v19);
  swift_bridgeObjectRelease();
  v20._uint64_t countAndFlagsBits = sub_5F8EC() | 0x5273692000000000;
  v20._object = (void *)0xED00003D796C7065;
  sub_8E960(v20);
  sub_8E540();
  if (LOBYTE(v13[0])) {
    v10._uint64_t countAndFlagsBits = 1702195828;
  }
  else {
    v10._uint64_t countAndFlagsBits = 0x65736C6166;
  }
  if (LOBYTE(v13[0])) {
    uint64_t v11 = (void *)0xE400000000000000;
  }
  else {
    uint64_t v11 = (void *)0xE500000000000000;
  }
  v10._object = v11;
  sub_8E960(v10);
  swift_bridgeObjectRelease();
  v21._uint64_t countAndFlagsBits = sub_5F8EC() | 0x6D6F682000000000;
  v21._object = (void *)0xEA00000000003D65;
  sub_8E960(v21);
  sub_8E540();
  v22._uint64_t countAndFlagsBits = sub_5F8CC();
  sub_5F8F8(v22);
  swift_bridgeObjectRelease();
  v23._uint64_t countAndFlagsBits = sub_5F8EC() | 0x6F6F722000000000;
  sub_8E960(v23);
  sub_8E540();
  sub_48AC(&qword_BE960);
  v24._uint64_t countAndFlagsBits = sub_8E8E0();
  sub_8E960(v24);
  swift_bridgeObjectRelease();
  v25._uint64_t countAndFlagsBits = sub_5F8EC() | 0x6E6F7A2000000000;
  v25._object = (void *)0xEB000000003D7365;
  sub_8E960(v25);
  sub_8E540();
  v26._uint64_t countAndFlagsBits = sub_8E8E0();
  sub_5F8F8(v26);
  swift_bridgeObjectRelease();
  v27._object = (void *)0x80000000000983D0;
  v27._uint64_t countAndFlagsBits = 0xD000000000000012;
  sub_8E960(v27);
  sub_8E540();
  v28._uint64_t countAndFlagsBits = sub_5F8CC();
  sub_8E960(v28);
  swift_bridgeObjectRelease();
  v29._uint64_t countAndFlagsBits = 10506;
  v29._object = (void *)0xE200000000000000;
  sub_8E960(v29);
  return v14;
}

uint64_t destroy for SendAnnouncementIntent()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

void *initializeWithCopy for SendAnnouncementIntent(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  a1[6] = a2[6];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for SendAnnouncementIntent(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  a1[5] = a2[5];
  swift_retain();
  swift_release();
  a1[6] = a2[6];
  swift_retain();
  swift_release();
  return a1;
}

__n128 initializeWithTake for SendAnnouncementIntent(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for SendAnnouncementIntent(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for SendAnnouncementIntent(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 56))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SendAnnouncementIntent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SendAnnouncementIntent()
{
  return &type metadata for SendAnnouncementIntent;
}

unint64_t sub_5F80C()
{
  unint64_t result = qword_BE968;
  if (!qword_BE968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BE968);
  }
  return result;
}

unint64_t sub_5F858(uint64_t a1)
{
  unint64_t result = sub_5F880();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_5F880()
{
  unint64_t result = qword_BE988;
  if (!qword_BE988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BE988);
  }
  return result;
}

uint64_t sub_5F8CC()
{
  *(_OWORD *)(v0 - 96) = *(_OWORD *)(v0 - 96);
  return sub_8E8E0();
}

uint64_t sub_5F8EC()
{
  return 538976266;
}

void sub_5F8F8(Swift::String a1)
{
  sub_8E960(a1);
}

uint64_t sub_5F910()
{
  sub_CC60();
  v1[7] = v2;
  v1[8] = v0;
  v1[6] = v3;
  sub_8D160();
  v1[9] = swift_task_alloc();
  uint64_t v4 = sub_8D760();
  v1[10] = v4;
  v1[11] = *(void *)(v4 - 8);
  v1[12] = swift_task_alloc();
  sub_46200();
  return _swift_task_switch(v5, v6, v7);
}

uint64_t sub_5F9F8()
{
  if (qword_BB830 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_8E730();
  v0[13] = sub_50FC(v1, (uint64_t)qword_BFEC8);
  uint64_t v2 = sub_8E710();
  os_log_type_t v3 = sub_8EB00();
  if (os_log_type_enabled(v2, v3))
  {
    *(_WORD *)sub_CCE4() = 0;
    sub_46384(&dword_0, v2, v4, "#SendAnnouncementIntentHandledStrategy makeIntentHandledResponseAsync with response framework adoption");
    sub_628A4();
  }

  v0[14] = sub_48AC(&qword_BEAE0);
  uint64_t v5 = (void *)sub_8D610();
  uint64_t v6 = sub_2E8BC();

  uint64_t v7 = *(void *)(v6 + 16);
  swift_bridgeObjectRelease();
  uint64_t v8 = (void *)sub_8D630();
  id v9 = [v8 isReply];

  if (v9)
  {
    char v10 = [v9 BOOLValue];
  }
  else
  {
    char v10 = 0;
  }
  uint64_t v11 = (void *)sub_8D630();
  unint64_t v12 = sub_2E2C4();
  v0[15] = v12;

  uint64_t v13 = (void *)swift_task_alloc();
  v0[16] = v13;
  *uint64_t v13 = v0;
  v13[1] = sub_5FBF4;
  return sub_4EE5C((uint64_t)v12, v7 != 0, v10);
}

uint64_t sub_5FBF4()
{
  sub_CC60();
  sub_7614();
  os_log_type_t v3 = v2;
  sub_461E4();
  *uint64_t v4 = v3;
  v3[2] = v1;
  v3[3] = v5;
  v3[4] = v0;
  sub_462EC();
  uint64_t v6 = *v1;
  sub_CB34();
  *uint64_t v7 = v6;
  v3[17] = v0;
  swift_task_dealloc();
  if (!v0) {
    swift_bridgeObjectRelease();
  }
  sub_46200();
  return _swift_task_switch(v8, v9, v10);
}

uint64_t sub_5FCDC()
{
  sub_46458();
  uint64_t v1 = sub_8E710();
  os_log_type_t v2 = sub_8EB00();
  if (os_log_type_enabled(v1, v2))
  {
    *(_WORD *)sub_CCE4() = 0;
    sub_46384(&dword_0, v1, v3, "Making a SAIntentGroupHandleIntent that contains INPlayAnnouncementSoundIntent.");
    sub_628A4();
  }
  uint64_t v4 = (void *)v0[3];
  uint64_t v5 = v0[12];

  v0[18] = v4;
  id v6 = [objc_allocWithZone((Class)INPlayAnnouncementSoundIntent) initWithSoundType:1];
  v0[19] = v6;
  id v7 = v6;
  uint64_t v8 = (void *)sub_8D630();
  id v9 = [v8 _metadata];

  [v7 _setMetadata:v9];
  uint64_t v10 = sub_8E4B0();
  uint64_t v12 = sub_61E50(v7, v10, v11);
  swift_bridgeObjectRelease();
  sub_8D130();
  *(void *)(swift_task_alloc() + 16) = v12;
  sub_8D6E0();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  sub_8D3A0();
  sub_627D4();
  v0[5] = sub_8D390();
  sub_48AC(&qword_BE170);
  uint64_t v13 = sub_462D4();
  *(_OWORD *)(v13 + 16) = xmmword_8FC30;
  *(void *)(v13 + 32) = v4;
  uint64_t v19 = v13;
  sub_8EA50();
  v0[20] = v19;
  id v14 = v4;
  uint64_t v15 = (void *)swift_task_alloc();
  v0[21] = v15;
  *uint64_t v15 = v0;
  v15[1] = sub_5FF44;
  uint64_t v16 = v0[12];
  uint64_t v17 = v0[6];
  return dispatch thunk of ResponseGenerating.makeResponseOutput(dialog:outputGenerationManifest:)(v17, v19, v16, v5, &protocol witness table for ResponseFactory);
}

uint64_t sub_5FF44()
{
  sub_CC60();
  sub_7614();
  uint64_t v1 = *v0;
  sub_CB34();
  *os_log_type_t v2 = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  sub_46200();
  return _swift_task_switch(v3, v4, v5);
}

uint64_t sub_60028()
{
  uint64_t v1 = *(void **)(v0 + 152);
  uint64_t v3 = *(void *)(v0 + 88);
  uint64_t v2 = *(void *)(v0 + 96);
  uint64_t v4 = *(void *)(v0 + 80);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_600D8()
{
  sub_CC60();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_CC20();
  return v0();
}

uint64_t sub_6014C()
{
  sub_8D720();
  sub_8D750();
  if (qword_BB830 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_8E730();
  sub_50FC(v0, (uint64_t)qword_BFEC8);
  uint64_t v1 = sub_8E710();
  os_log_type_t v2 = sub_8EB00();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_0, v1, v2, "#SendAnnouncementIntentHandledStrategy sending INPlayAnnouncementSoundIntent", v3, 2u);
    swift_slowDealloc();
  }

  swift_bridgeObjectRetain();
  return sub_8D740();
}

uint64_t sub_60258(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  sub_46200();
  return _swift_task_switch(v4, v5, v6);
}

uint64_t sub_60280()
{
  sub_1425C();
  sub_48AC(&qword_BEAE0);
  uint64_t v1 = (void *)sub_8D610();
  [v1 code];

  uint64_t v2 = (void *)sub_8D630();
  *(void *)(v0 + 40) = sub_2E2C4();

  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_60370;
  return sub_604CC();
}

uint64_t sub_60370()
{
  sub_CC60();
  sub_7614();
  uint64_t v3 = v2;
  sub_461E4();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_CB34();
  void *v6 = v5;
  *(void *)(v3 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_46200();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_CC20();
    return v10();
  }
}

uint64_t sub_60470()
{
  sub_CC60();
  swift_bridgeObjectRelease();
  sub_CC20();
  return v0();
}

uint64_t sub_604CC()
{
  sub_CC60();
  v1[32] = v2;
  v1[33] = v0;
  v1[30] = v3;
  v1[31] = v4;
  v1[34] = type metadata accessor for HomeCommunicationError(0);
  v1[35] = swift_task_alloc();
  sub_46200();
  return _swift_task_switch(v5, v6, v7);
}

uint64_t sub_6055C()
{
  if (qword_BB830 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_8E730();
  sub_50FC(v1, (uint64_t)qword_BFEC8);
  uint64_t v2 = sub_8E710();
  os_log_type_t v3 = sub_8EB00();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)sub_CCE4();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_0, v2, v3, "#SendAnnouncementIntentHandledStrategy makeFailureHandlingIntentResponseAsync with response framework adoption", v4, 2u);
    swift_slowDealloc();
  }
  uint64_t v5 = v0[31];

  switch(v5)
  {
    case 6:
      sub_62868();
      uint64_t v6 = (void *)swift_task_alloc();
      v0[37] = v6;
      void *v6 = v0;
      v6[1] = sub_60D58;
      sub_62894();
      sub_62880();
      uint64_t result = sub_4E9FC(v7);
      break;
    case 7:
      sub_62868();
      Swift::String v18 = (void *)swift_task_alloc();
      v0[38] = v18;
      *Swift::String v18 = v0;
      v18[1] = sub_60F4C;
      sub_62894();
      sub_62880();
      uint64_t result = sub_4E8EC(v19);
      break;
    case 8:
      sub_62868();
      Swift::String v21 = (void *)swift_task_alloc();
      v0[36] = v21;
      void *v21 = v0;
      v21[1] = sub_60B64;
      sub_62880();
      uint64_t result = sub_4ED1C();
      break;
    case 9:
      sub_62868();
      Swift::String v23 = (void *)swift_task_alloc();
      v0[40] = v23;
      void *v23 = v0;
      v23[1] = sub_61334;
      sub_62894();
      sub_62880();
      uint64_t result = sub_4E630(v24);
      break;
    case 10:
      sub_62868();
      Swift::String v26 = (void *)swift_task_alloc();
      v0[39] = v26;
      *Swift::String v26 = v0;
      v26[1] = sub_61140;
      sub_62880();
      uint64_t result = sub_4E450();
      break;
    case 11:
      sub_62868();
      Swift::String v28 = (void *)swift_task_alloc();
      v0[41] = v28;
      void *v28 = v0;
      v28[1] = sub_61528;
      sub_62880();
      uint64_t result = sub_4E84C();
      break;
    case 12:
      sub_62868();
      unsigned __int8 v30 = (void *)swift_task_alloc();
      v0[42] = v30;
      void *v30 = v0;
      v30[1] = sub_6171C;
      sub_62880();
      uint64_t result = sub_4EC7C();
      break;
    case 13:
      sub_62868();
      unsigned int v32 = (void *)swift_task_alloc();
      v0[43] = v32;
      *unsigned int v32 = v0;
      v32[1] = sub_61910;
      sub_62880();
      uint64_t result = sub_4E4F0();
      break;
    case 14:
      sub_62868();
      unint64_t v34 = (void *)swift_task_alloc();
      v0[44] = v34;
      *unint64_t v34 = v0;
      v34[1] = sub_61B04;
      sub_62880();
      uint64_t result = sub_4E590();
      break;
    default:
      uint64_t v10 = sub_8E710();
      os_log_type_t v11 = sub_8EB10();
      if (os_log_type_enabled(v10, v11))
      {
        *(_WORD *)sub_CCE4() = 0;
        sub_46384(&dword_0, v10, v12, "#SendAnnouncementIntentHandledStrategy makeFailureHandlingIntentResponse resulted in generic error");
        sub_628A4();
      }
      uint64_t v13 = (void *)v0[35];
      uint64_t v14 = v0[31];

      *uint64_t v13 = v14;
      swift_storeEnumTagMultiPayload();
      sub_6274C(&qword_BC918, (void (*)(uint64_t))type metadata accessor for HomeCommunicationError);
      swift_allocError();
      sub_142DC(v15);
      sub_4A6D0((uint64_t)v13);
      swift_willThrow();
      swift_task_dealloc();
      sub_CC20();
      sub_62880();
      __asm { BRAA            X1, X16 }
      return result;
  }
  return result;
}

uint64_t sub_60B64()
{
  sub_1425C();
  sub_7614();
  os_log_type_t v3 = v2;
  sub_461E4();
  *uint64_t v4 = v3;
  v3[2] = v1;
  v3[3] = v5;
  v3[4] = v0;
  sub_462EC();
  uint64_t v6 = *v1;
  sub_CB34();
  *uint64_t v7 = v6;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    sub_627F0();
    return v8();
  }
  else
  {
    sub_500D4();
    return _swift_task_switch(v10, v11, v12);
  }
}

#error "60CCC: call analysis failed (funcsize=59)"

uint64_t sub_60D58()
{
  sub_1425C();
  sub_7614();
  os_log_type_t v3 = v2;
  sub_461E4();
  *uint64_t v4 = v3;
  v3[5] = v1;
  v3[6] = v5;
  v3[7] = v0;
  sub_462EC();
  uint64_t v6 = *v1;
  sub_CB34();
  *uint64_t v7 = v6;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    sub_627F0();
    return v8();
  }
  else
  {
    sub_500D4();
    return _swift_task_switch(v10, v11, v12);
  }
}

#error "60EC0: call analysis failed (funcsize=59)"

uint64_t sub_60F4C()
{
  sub_1425C();
  sub_7614();
  os_log_type_t v3 = v2;
  sub_461E4();
  *uint64_t v4 = v3;
  v3[8] = v1;
  v3[9] = v5;
  v3[10] = v0;
  sub_462EC();
  uint64_t v6 = *v1;
  sub_CB34();
  *uint64_t v7 = v6;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    sub_627F0();
    return v8();
  }
  else
  {
    sub_500D4();
    return _swift_task_switch(v10, v11, v12);
  }
}

#error "610B4: call analysis failed (funcsize=59)"

uint64_t sub_61140()
{
  sub_1425C();
  sub_7614();
  os_log_type_t v3 = v2;
  sub_461E4();
  *uint64_t v4 = v3;
  v3[11] = v1;
  v3[12] = v5;
  v3[13] = v0;
  sub_462EC();
  uint64_t v6 = *v1;
  sub_CB34();
  *uint64_t v7 = v6;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    sub_627F0();
    return v8();
  }
  else
  {
    sub_500D4();
    return _swift_task_switch(v10, v11, v12);
  }
}

#error "612A8: call analysis failed (funcsize=59)"

uint64_t sub_61334()
{
  sub_1425C();
  sub_7614();
  os_log_type_t v3 = v2;
  sub_461E4();
  *uint64_t v4 = v3;
  v3[14] = v1;
  v3[15] = v5;
  v3[16] = v0;
  sub_462EC();
  uint64_t v6 = *v1;
  sub_CB34();
  *uint64_t v7 = v6;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    sub_627F0();
    return v8();
  }
  else
  {
    sub_500D4();
    return _swift_task_switch(v10, v11, v12);
  }
}

#error "6149C: call analysis failed (funcsize=59)"

uint64_t sub_61528()
{
  sub_1425C();
  sub_7614();
  os_log_type_t v3 = v2;
  sub_461E4();
  *uint64_t v4 = v3;
  v3[17] = v1;
  v3[18] = v5;
  v3[19] = v0;
  sub_462EC();
  uint64_t v6 = *v1;
  sub_CB34();
  *uint64_t v7 = v6;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    sub_627F0();
    return v8();
  }
  else
  {
    sub_500D4();
    return _swift_task_switch(v10, v11, v12);
  }
}

#error "61690: call analysis failed (funcsize=59)"

uint64_t sub_6171C()
{
  sub_1425C();
  sub_7614();
  os_log_type_t v3 = v2;
  sub_461E4();
  *uint64_t v4 = v3;
  v3[20] = v1;
  v3[21] = v5;
  v3[22] = v0;
  sub_462EC();
  uint64_t v6 = *v1;
  sub_CB34();
  *uint64_t v7 = v6;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    sub_627F0();
    return v8();
  }
  else
  {
    sub_500D4();
    return _swift_task_switch(v10, v11, v12);
  }
}

#error "61884: call analysis failed (funcsize=59)"

uint64_t sub_61910()
{
  sub_1425C();
  sub_7614();
  os_log_type_t v3 = v2;
  sub_461E4();
  *uint64_t v4 = v3;
  v3[23] = v1;
  v3[24] = v5;
  v3[25] = v0;
  sub_462EC();
  uint64_t v6 = *v1;
  sub_CB34();
  *uint64_t v7 = v6;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    sub_627F0();
    return v8();
  }
  else
  {
    sub_500D4();
    return _swift_task_switch(v10, v11, v12);
  }
}

#error "61A78: call analysis failed (funcsize=59)"

uint64_t sub_61B04()
{
  sub_1425C();
  sub_7614();
  os_log_type_t v3 = v2;
  sub_461E4();
  *uint64_t v4 = v3;
  v3[26] = v1;
  v3[27] = v5;
  v3[28] = v0;
  sub_462EC();
  uint64_t v6 = *v1;
  sub_CB34();
  *uint64_t v7 = v6;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    sub_627F0();
    return v8();
  }
  else
  {
    sub_500D4();
    return _swift_task_switch(v10, v11, v12);
  }
}

#error "61C6C: call analysis failed (funcsize=59)"

uint64_t sub_61CF8()
{
  sub_CC60();
  sub_7614();
  uint64_t v1 = *v0;
  sub_CB34();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  sub_46200();
  return _swift_task_switch(v3, v4, v5);
}

uint64_t sub_61DDC()
{
  sub_CC60();

  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_61E50(void *a1, uint64_t a2, uint64_t a3)
{
  sub_48AC(&qword_BE170);
  uint64_t v6 = sub_462D4();
  *(_OWORD *)(v6 + 16) = xmmword_8FC30;
  sub_6270C();
  swift_bridgeObjectRetain();
  *(void *)(v6 + 32) = sub_51C0(a1, a2, a3);
  sub_8EA50();
  return v6;
}

uint64_t sub_61EEC()
{
  sub_4950(v0 + 16);
  swift_release();
  swift_release();
  uint64_t v1 = v0
     + OBJC_IVAR____TtC35HomeCommunicationFlowDelegatePlugin37SendAnnouncementIntentHandledStrategy_completionOutputManifest;
  uint64_t v2 = sub_8D760();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t sub_61F68()
{
  sub_61EEC();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return _swift_deallocClassInstance(v0, v1, v2);
}

uint64_t sub_61FC0()
{
  return type metadata accessor for SendAnnouncementIntentHandledStrategy();
}

uint64_t type metadata accessor for SendAnnouncementIntentHandledStrategy()
{
  uint64_t result = qword_BE9C0;
  if (!qword_BE9C0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_62010()
{
  uint64_t result = sub_8D760();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_620BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  uint64_t v9 = type metadata accessor for SendAnnouncementIntentHandledStrategy();
  *uint64_t v8 = v4;
  v8[1] = sub_461CC;
  return HandleIntentFlowStrategyAsync.makePromptForDeviceUnlock(rchRecord:)(a1, a2, v9, a4);
}

uint64_t sub_62184(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  uint64_t v9 = type metadata accessor for SendAnnouncementIntentHandledStrategy();
  *uint64_t v8 = v4;
  v8[1] = sub_461CC;
  return HandleIntentFlowStrategyAsync.makeHandoffForAuthenticationResponse(rchRecord:)(a1, a2, v9, a4);
}

uint64_t sub_6224C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  uint64_t v9 = type metadata accessor for SendAnnouncementIntentHandledStrategy();
  *uint64_t v8 = v4;
  v8[1] = sub_461CC;
  return HandleIntentFlowStrategyAsync.makePreHandleIntentOutput(rchRecord:)(a1, a2, v9, a4);
}

uint64_t sub_62314()
{
  unint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *unint64_t v1 = v0;
  v1[1] = sub_461CC;
  return sub_5F910();
}

uint64_t sub_623C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  uint64_t v9 = type metadata accessor for SendAnnouncementIntentHandledStrategy();
  *uint64_t v8 = v4;
  v8[1] = sub_461CC;
  return HandleIntentFlowStrategyAsync.makeContinueInAppResponse(rchRecord:)(a1, a2, v9, a4);
}

uint64_t sub_62488(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  uint64_t v9 = type metadata accessor for SendAnnouncementIntentHandledStrategy();
  *uint64_t v8 = v4;
  v8[1] = sub_461CC;
  return HandleIntentFlowStrategyAsync.makeInProgressResponse(rchRecord:)(a1, a2, v9, a4);
}

uint64_t sub_62550(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_C6E0;
  return sub_60258(a1, a2);
}

uint64_t sub_625FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  uint64_t v9 = type metadata accessor for SendAnnouncementIntentHandledStrategy();
  *uint64_t v8 = v4;
  v8[1] = sub_C554;
  return IntentExtensionCommunicatingAsync.makeIntentExecutionBehavior(app:intent:)(a1, a2, v9, a4);
}

uint64_t sub_626C4()
{
  return sub_6274C(qword_BEAA0, (void (*)(uint64_t))type metadata accessor for SendAnnouncementIntentHandledStrategy);
}

unint64_t sub_6270C()
{
  unint64_t result = qword_BE200;
  if (!qword_BE200)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_BE200);
  }
  return result;
}

uint64_t sub_6274C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_62794()
{
  return sub_6014C();
}

uint64_t sub_627B4(__n128 *a1, __n128 a2)
{
  a1[1] = a2;
  a1[2].n128_u64[0] = v2;
  return sub_8EA50();
}

uint64_t sub_627D4()
{
  return swift_allocObject();
}

uint64_t sub_627F0()
{
  return v0 + 8;
}

uint64_t sub_62800(uint64_t result)
{
  *(void *)(v1 + 376) = result;
  return result;
}

uint64_t sub_62810()
{
  *(void *)(v0 + 360) = v1;
  return sub_8D3A0();
}

uint64_t sub_6285C(uint64_t result)
{
  *(void *)(v1 + 232) = result;
  return result;
}

void sub_62874(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  *(void *)(v10 + 368) = a10;
}

uint64_t sub_62894()
{
  return *(void *)(v0 + 256);
}

uint64_t sub_628A4()
{
  return swift_slowDealloc();
}

uint64_t sub_628C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[6] = a4;
  v6[7] = a5;
  v6[5] = a1;
  uint64_t v10 = sub_48AC(&qword_BC7B8);
  sub_1CCBC(v10);
  v6[8] = sub_CBA4();
  uint64_t v11 = sub_8E730();
  v6[9] = v11;
  sub_CB1C(v11);
  v6[10] = v12;
  v6[11] = sub_CBA4();
  uint64_t v13 = (void *)swift_task_alloc();
  v6[12] = v13;
  *uint64_t v13 = v6;
  v13[1] = sub_629C8;
  return sub_64D10((uint64_t)v13, a2, a3, a6);
}

uint64_t sub_629C8()
{
  sub_7614();
  v3[13] = v1;
  v3[14] = v2;
  v3[15] = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v4 = sub_62EE4;
  }
  else {
    uint64_t v4 = sub_62ABC;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_62ABC()
{
  uint64_t v37 = v0;
  if (qword_BB830 != -1) {
    swift_once();
  }
  sub_50FC(*(void *)(v0 + 72), (uint64_t)qword_BFEC8);
  swift_bridgeObjectRetain_n();
  uint64_t v1 = sub_8E710();
  os_log_type_t v2 = sub_8EB00();
  BOOL v3 = os_log_type_enabled(v1, v2);
  unint64_t v4 = *(void *)(v0 + 112);
  if (v3)
  {
    uint64_t v5 = *(void *)(v0 + 104);
    uint64_t v6 = (uint8_t *)sub_1CBDC();
    uint64_t v36 = sub_1CC0C();
    *(_DWORD *)uint64_t v6 = 136315138;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 32) = sub_8758C(v5, v4, &v36);
    sub_8EBD0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_0, v1, v2, "#SendAnnouncementIntentHelper extracted speech data URL is: %s", v6, 0xCu);
    swift_arrayDestroy();
    sub_CC2C();
    sub_CC2C();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  unint64_t v7 = *(void *)(v0 + 56);
  uint64_t v8 = sub_66614();
  v9(v8);
  swift_bridgeObjectRetain_n();
  uint64_t v10 = sub_8E710();
  os_log_type_t v11 = sub_8EB00();
  BOOL v12 = os_log_type_enabled(v10, v11);
  uint64_t v14 = *(void *)(v0 + 80);
  uint64_t v13 = *(void *)(v0 + 88);
  uint64_t v15 = *(void *)(v0 + 72);
  if (v12)
  {
    uint64_t v34 = *(void *)(v0 + 72);
    uint64_t v35 = *(void *)(v0 + 88);
    uint64_t v17 = *(void *)(v0 + 48);
    uint64_t v16 = *(void *)(v0 + 56);
    Swift::String v18 = (uint8_t *)sub_1CBDC();
    uint64_t v36 = sub_1CC0C();
    *(_DWORD *)Swift::String v18 = 136315138;
    if (v16)
    {
      unint64_t v19 = v7;
    }
    else
    {
      uint64_t v17 = 7104878;
      unint64_t v19 = 0xE300000000000000;
    }
    swift_bridgeObjectRetain();
    *(void *)(v0 + 24) = sub_8758C(v17, v19, &v36);
    sub_8EBD0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_0, v10, v11, "#SendAnnouncementIntentHelper speech data transcription is: %s", v18, 0xCu);
    sub_66620();
    sub_CC2C();
    sub_CC2C();

    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v35, v34);
  }
  else
  {
    swift_bridgeObjectRelease_n();

    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  }
  id v20 = [*(id *)(v0 + 40) announcement];
  sub_8CA40();
  swift_bridgeObjectRelease();
  if (v20)
  {
    uint64_t v21 = sub_663D8(v20);
    uint64_t v23 = v22;
  }
  else
  {
    uint64_t v21 = 0;
    uint64_t v23 = 0;
  }
  uint64_t v25 = *(void *)(v0 + 56);
  uint64_t v24 = *(void *)(v0 + 64);
  uint64_t v27 = *(void **)(v0 + 40);
  uint64_t v26 = *(void *)(v0 + 48);
  objc_allocWithZone((Class)INAnnouncement);
  swift_bridgeObjectRetain();
  id v28 = sub_660C8(v24, v21, v23, v26, v25);
  NSString v29 = sub_66540();
  [v27 setValue:v28 forKey:v29];

  id v30 = *(id *)(v0 + 40);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v31 = sub_6666C();
  return v32(v31);
}

uint64_t sub_62EE4()
{
  if (qword_BB830 != -1) {
    swift_once();
  }
  sub_50FC(*(void *)(v0 + 72), (uint64_t)qword_BFEC8);
  swift_errorRetain();
  swift_errorRetain();
  os_log_type_t v2 = sub_8E710();
  os_log_type_t v3 = sub_8EB10();
  if (sub_22324(v3))
  {
    unint64_t v4 = (uint8_t *)sub_1CBDC();
    uint64_t v5 = (void *)swift_slowAlloc();
    *(_DWORD *)unint64_t v4 = 138412290;
    swift_errorRetain();
    uint64_t v6 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 16) = v6;
    sub_8EBD0();
    *uint64_t v5 = v6;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl(&dword_0, v2, v1, "#SendAnnouncementIntentHelper extractSpeechData error=%@. Returning base intent.", v4, 0xCu);
    sub_48AC(&qword_BD020);
    swift_arrayDestroy();
    sub_CC2C();
    sub_CC2C();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  id v7 = *(id *)(v0 + 40);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = sub_6666C();
  return v9(v8);
}

void *sub_630DC(uint64_t a1, void *a2, void *a3)
{
  uint64_t v6 = sub_48AC(&qword_BEAE8);
  uint64_t v7 = sub_1CCBC(v6);
  __chkstk_darwin(v7);
  sub_AAA8();
  uint64_t v10 = v9 - v8;
  uint64_t v11 = sub_8DDF0();
  sub_CB04();
  uint64_t v13 = v12;
  __chkstk_darwin(v14);
  sub_AAA8();
  uint64_t v17 = v16 - v15;
  sub_63314(a1, v10);
  if (_s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0(v10, 1, v11) == 1)
  {
    sub_1C9C8(v10, &qword_BEAE8);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 32))(v17, v10, v11);
    uint64_t v18 = sub_8DDE0();
    if (v19)
    {
      uint64_t v20 = v18;
      uint64_t v21 = v19;
      uint64_t v22 = sub_8DDD0();
      if (v23) {
        uint64_t v24 = 0;
      }
      else {
        uint64_t v24 = v22;
      }
      uint64_t v25 = sub_8DDC0();
      if (v26) {
        uint64_t v27 = 60000;
      }
      else {
        uint64_t v27 = v25;
      }
      sub_63A90(a2, v24, v27, v20, v21, a3);
      swift_bridgeObjectRelease();
      uint64_t v28 = sub_66680();
      v29(v28);
      return a2;
    }
    uint64_t v30 = sub_66680();
    v31(v30);
  }
  if (qword_BB830 != -1) {
    swift_once();
  }
  uint64_t v32 = sub_8E730();
  sub_50FC(v32, (uint64_t)qword_BFEC8);
  uint64_t v33 = sub_8E710();
  os_log_type_t v34 = sub_8EB00();
  if (os_log_type_enabled(v33, v34))
  {
    uint64_t v35 = (uint8_t *)sub_CCE4();
    *(_WORD *)uint64_t v35 = 0;
    _os_log_impl(&dword_0, v33, v34, "smsMessage node was not present or no matchingSpan was set in SmsNLIntent. Skipping extractSpeechData.", v35, 2u);
    sub_CC2C();
  }

  id v36 = a2;
  return a2;
}

uint64_t sub_63314@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_48AC(&qword_BEB08);
  uint64_t v5 = sub_1CCBC(v4);
  __chkstk_darwin(v5);
  sub_AAA8();
  uint64_t v8 = v7 - v6;
  uint64_t v9 = sub_48AC(&qword_BEB10);
  uint64_t v10 = sub_1CCBC(v9);
  __chkstk_darwin(v10);
  sub_AAA8();
  uint64_t v13 = v12 - v11;
  uint64_t v14 = sub_8DE40();
  sub_CB04();
  uint64_t v84 = v15;
  __chkstk_darwin(v16);
  sub_AAA8();
  uint64_t v19 = v18 - v17;
  uint64_t v20 = sub_48AC(&qword_BEB18);
  uint64_t v21 = sub_1CCBC(v20);
  __chkstk_darwin(v21);
  sub_AAA8();
  uint64_t v24 = v23 - v22;
  type metadata accessor for SmsNLIntent();
  sub_16058();
  __chkstk_darwin(v25);
  sub_AAA8();
  uint64_t v28 = v27 - v26;
  uint64_t v29 = sub_8DEC0();
  sub_CB04();
  uint64_t v80 = v30;
  __chkstk_darwin(v31);
  sub_6FF0();
  id v85 = v32;
  __chkstk_darwin(v33);
  id v81 = (char *)&v76 - v34;
  sub_22360();
  sub_8E1C0();
  sub_16058();
  (*(void (**)(uint64_t, uint64_t))(v35 + 16))(v28, a1);
  if (qword_BB8A8 != -1) {
    swift_once();
  }
  sub_664A4(&qword_BCDF0, (void (*)(uint64_t))type metadata accessor for SmsNLIntent);
  sub_66614();
  sub_8DF50();
  sub_664EC(v28, (void (*)(void))type metadata accessor for SmsNLIntent);
  if (_s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0(v24, 1, v29) != 1)
  {
    uint64_t v36 = v29;
    uint64_t v79 = a2;
    uint64_t v38 = v80;
    uint64_t v37 = v81;
    (*(void (**)(char *, uint64_t, uint64_t))(v80 + 32))(v81, v24, v36);
    if (qword_BB830 != -1) {
      swift_once();
    }
    uint64_t v39 = sub_8E730();
    sub_50FC(v39, (uint64_t)qword_BFEC8);
    (*(void (**)(void, char *, uint64_t))(v38 + 16))(v85, v37, v36);
    unint64_t v40 = sub_8E710();
    os_log_type_t v41 = sub_8EB00();
    os_log_t v82 = v40;
    BOOL v42 = os_log_type_enabled(v40, v41);
    uint64_t v83 = v14;
    if (v42)
    {
      uint64_t v43 = v36;
      unsigned __int8 v44 = (uint8_t *)sub_1CBDC();
      uint64_t v77 = sub_1CC0C();
      uint64_t v86 = v77;
      unint64_t v76 = v44;
      *(_DWORD *)unsigned __int8 v44 = 136315138;
      uint64_t v78 = (void (*)(char *, uint64_t))(v44 + 4);
      sub_8DEB0();
      uint64_t v45 = sub_8EA40();
      unint64_t v47 = v46;
      swift_bridgeObjectRelease();
      uint64_t v48 = v45;
      uint64_t v14 = v83;
      uint64_t v49 = sub_8758C(v48, v47, &v86);
      sub_E1D0(v49);
      sub_8EBD0();
      uint64_t v36 = v43;
      swift_bridgeObjectRelease();
      sub_66638();
      v50();
      os_log_t v51 = v82;
      _os_log_impl(&dword_0, v82, v41, "Successfully extracted smsMessage node: %s.", v76, 0xCu);
      swift_arrayDestroy();
      sub_CC2C();
      sub_CC2C();
    }
    else
    {
      sub_66638();
      v52();
    }
    a2 = v79;
    uint64_t v53 = sub_8DEB0();
    uint64_t v54 = *(void *)(v53 + 16);
    if (!v54)
    {
      swift_bridgeObjectRelease();
LABEL_21:
      v78(v81, v36);
      goto LABEL_22;
    }
    unint64_t v76 = (uint8_t *)v53;
    uint64_t v77 = v36;
    id v85 = *(void (**)(uint64_t, unint64_t, uint64_t))(v84 + 16);
    unint64_t v55 = v53 + ((*(unsigned __int8 *)(v84 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v84 + 80));
    LODWORD(v82) = enum case for TerminalElement.OriginDetail.matchingSpan(_:);
    uint64_t v84 = *(void *)(v84 + 72);
    while (1)
    {
      v85(v19, v55, v14);
      sub_8DE30();
      uint64_t v56 = sub_8DE20();
      if (_s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0(v8, 1, v56) == 1) {
        break;
      }
      sub_8DE10();
      uint64_t v60 = sub_665E4();
      v61(v60);
      sub_1CD04();
      v63(v62);
      uint64_t v64 = sub_8DE00();
      if (_s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0(v13, 1, v64) == 1) {
        goto LABEL_15;
      }
      sub_CB04();
      uint64_t v66 = v65;
      int v68 = (*(uint64_t (**)(uint64_t, uint64_t))(v67 + 88))(v13, v64);
      if (v68 == v82)
      {
        swift_bridgeObjectRelease();
        v78(v81, v77);
        (*(void (**)(uint64_t, uint64_t))(v66 + 96))(v13, v64);
        uint64_t v73 = sub_8DDF0();
        sub_16058();
        uint64_t v75 = v79;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v74 + 32))(v79, v13, v73);
        uint64_t v70 = v75;
        uint64_t v71 = 0;
        uint64_t v69 = v73;
        return _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(v70, v71, 1, v69);
      }
      (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v13, v64);
      uint64_t v14 = v83;
LABEL_18:
      v55 += v84;
      if (!--v54)
      {
        swift_bridgeObjectRelease();
        a2 = v79;
        uint64_t v36 = v77;
        goto LABEL_21;
      }
    }
    uint64_t v57 = sub_665E4();
    v58(v57);
    sub_1C9C8(v8, &qword_BEB08);
    uint64_t v59 = sub_8DE00();
    _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(v13, 1, 1, v59);
LABEL_15:
    sub_1C9C8(v13, &qword_BEB10);
    goto LABEL_18;
  }
  sub_1C9C8(v24, &qword_BEB18);
LABEL_22:
  uint64_t v69 = sub_8DDF0();
  uint64_t v70 = a2;
  uint64_t v71 = 1;
  return _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(v70, v71, 1, v69);
}

void *sub_63A90(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v12 = sub_48AC(&qword_BC7B8);
  uint64_t v13 = sub_1CCBC(v12);
  __chkstk_darwin(v13);
  sub_AAA8();
  uint64_t v16 = v15 - v14;
  uint64_t v17 = sub_8E730();
  sub_CB04();
  uint64_t v19 = v18;
  __chkstk_darwin(v20);
  sub_AAA8();
  uint64_t v23 = v22 - v21;
  uint64_t v25 = sub_63FA0(v24, a2, a3, a6);
  if (v26)
  {
    unint64_t v27 = v26;
    uint64_t v55 = v23;
    uint64_t v56 = v19;
    uint64_t v57 = v25;
    if (qword_BB830 != -1) {
      swift_once();
    }
    sub_50FC(v17, (uint64_t)qword_BFEC8);
    swift_bridgeObjectRetain_n();
    uint64_t v28 = sub_8E710();
    os_log_type_t v29 = sub_8EB00();
    uint64_t v54 = a1;
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v30 = (uint8_t *)sub_1CBDC();
      uint64_t v58 = sub_1CC0C();
      *(_DWORD *)uint64_t v30 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v31 = sub_8758C(v57, v27, &v58);
      sub_E1D0(v31);
      sub_8EBD0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_0, v28, v29, "#SendAnnouncementIntentHelper extracted speech data URL is: %s", v30, 0xCu);
      sub_66620();
      sub_CC2C();
      sub_CC2C();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v36 = sub_66614();
    v37(v36);
    swift_bridgeObjectRetain_n();
    uint64_t v38 = sub_8E710();
    os_log_type_t v39 = sub_8EB00();
    if (os_log_type_enabled(v38, v39))
    {
      unint64_t v40 = (uint8_t *)sub_1CBDC();
      uint64_t v58 = sub_1CC0C();
      *(_DWORD *)unint64_t v40 = 136315138;
      if (a5) {
        uint64_t v41 = a4;
      }
      else {
        uint64_t v41 = 7104878;
      }
      if (a5) {
        unint64_t v42 = a5;
      }
      else {
        unint64_t v42 = 0xE300000000000000;
      }
      swift_bridgeObjectRetain();
      uint64_t v43 = sub_8758C(v41, v42, &v58);
      sub_E1D0(v43);
      sub_8EBD0();
      sub_665CC();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v38, v39, "#SendAnnouncementIntentHelper speech data transcription is: %s", v40, 0xCu);
      sub_66620();
      sub_CC2C();
      sub_CC2C();

      sub_1CD04();
      v44();
    }
    else
    {

      sub_665CC();
      (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v55, v17);
    }
    a1 = v54;
    id v45 = [v54 announcement];
    sub_8CA40();
    swift_bridgeObjectRelease();
    if (v45)
    {
      uint64_t v46 = sub_663D8(v45);
      uint64_t v48 = v47;
    }
    else
    {
      uint64_t v46 = 0;
      uint64_t v48 = 0;
    }
    id v49 = objc_allocWithZone((Class)INAnnouncement);
    swift_bridgeObjectRetain();
    id v50 = sub_660C8(v16, v46, v48, a4, a5);
    NSString v51 = sub_66540();
    [v54 setValue:v50 forKey:v51];

    id v52 = v54;
  }
  else
  {
    if (qword_BB830 != -1) {
      swift_once();
    }
    sub_50FC(v17, (uint64_t)qword_BFEC8);
    uint64_t v32 = sub_8E710();
    os_log_type_t v33 = sub_8EB10();
    if (os_log_type_enabled(v32, v33))
    {
      uint64_t v34 = (uint8_t *)sub_CCE4();
      *(_WORD *)uint64_t v34 = 0;
      _os_log_impl(&dword_0, v32, v33, "#SendAnnouncementIntentHelper extracted speech data URL was nil.", v34, 2u);
      sub_CC2C();
    }

    id v35 = a1;
  }
  return a1;
}

uint64_t sub_63FA0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v78 = sub_8E810();
  sub_CB04();
  uint64_t v76 = v7;
  __chkstk_darwin(v8);
  sub_AAA8();
  uint64_t v74 = (void *)(v10 - v9);
  sub_22360();
  uint64_t v77 = sub_8E840();
  sub_CB04();
  uint64_t v75 = v11;
  __chkstk_darwin(v12);
  sub_6FF0();
  uint64_t v72 = v13;
  __chkstk_darwin(v14);
  uint64_t v73 = (char *)&v66 - v15;
  sub_22360();
  uint64_t v16 = (int *)type metadata accessor for SignpostLog.Signpost();
  sub_CB04();
  uint64_t v68 = v17;
  uint64_t v19 = __chkstk_darwin(v18);
  uint64_t v70 = (uint64_t)&v66 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = v20;
  __chkstk_darwin(v19);
  uint64_t v79 = (char *)&v66 - v21;
  intptr_t v22 = sub_22360();
  dispatch_semaphore_t v71 = dispatch_semaphore_create(v22);
  id v23 = [objc_allocWithZone((Class)SASExtractSpeechData) init];
  id v24 = [objc_allocWithZone((Class)NSNumber) initWithUnsignedLongLong:a2];
  [v23 setStartTime:v24];

  id v25 = [objc_allocWithZone((Class)NSNumber) initWithUnsignedLongLong:a3];
  [v23 setEndTime:v25];

  sub_98C0(a4, a4[3]);
  sub_8D410();
  if (v26)
  {
    NSString v27 = sub_8E8C0();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v27 = 0;
  }
  [v23 setSpeechRequestId:v27];

  if (qword_BB830 != -1) {
    swift_once();
  }
  uint64_t v28 = sub_8E730();
  uint64_t v29 = sub_50FC(v28, (uint64_t)qword_BFEC8);
  sub_C940((uint64_t)a4, (uint64_t)v84);
  id v30 = v23;
  uint64_t v66 = v29;
  uint64_t v31 = sub_8E710();
  os_log_type_t v32 = sub_8EB00();
  if (os_log_type_enabled(v31, v32))
  {
    uint64_t v80 = v16;
    uint64_t v33 = sub_1CC0C();
    uint64_t v34 = (void *)swift_slowAlloc();
    uint64_t v67 = sub_1CC0C();
    uint64_t v83 = v67;
    *(_DWORD *)uint64_t v33 = 136315650;
    sub_98C0(v84, v84[3]);
    uint64_t v81 = sub_8D410();
    uint64_t v82 = v35;
    sub_48AC(&qword_BDDD8);
    uint64_t v36 = sub_8E8E0();
    uint64_t v81 = sub_8758C(v36, v37, &v83);
    sub_8EBD0();
    swift_bridgeObjectRelease();
    sub_4950((uint64_t)v84);
    *(_WORD *)(v33 + 12) = 2112;
    id v38 = [v30 startTime];
    id v39 = v38;
    if (v38) {
      uint64_t v81 = (uint64_t)v38;
    }
    else {
      uint64_t v81 = 0;
    }
    sub_8EBD0();
    *uint64_t v34 = v39;

    *(_WORD *)(v33 + 22) = 2112;
    id v40 = [v30 endTime];
    id v41 = v40;
    if (v40) {
      uint64_t v81 = (uint64_t)v40;
    }
    else {
      uint64_t v81 = 0;
    }
    sub_8EBD0();
    v34[1] = v41;

    _os_log_impl(&dword_0, v31, v32, "#SendAnnouncementIntentHelper sending SASExtractSpeechData with speechRequestId:%s, startTime in ms: %@, endTime in ms: %@", (uint8_t *)v33, 0x20u);
    sub_48AC(&qword_BD020);
    swift_arrayDestroy();
    sub_CC2C();
    sub_66620();
    sub_CC2C();
    sub_CC2C();

    uint64_t v16 = v80;
  }
  else
  {
    sub_4950((uint64_t)v84);
  }
  uint64_t v80 = (int *)v30;
  if (qword_BB838 != -1) {
    swift_once();
  }
  id v42 = (id)qword_BCE60;
  uint64_t v43 = (uint64_t)v79;
  sub_8E6F0();
  sub_8EB50();
  sub_8E6E0();
  uint64_t v44 = v43 + v16[5];
  *(void *)uint64_t v44 = "ExtractSpeechData";
  *(void *)(v44 + 8) = 17;
  *(unsigned char *)(v44 + 16) = 2;
  uint64_t v45 = swift_allocObject();
  *(void *)(v45 + 16) = 0;
  uint64_t v67 = v45 + 16;
  *(void *)(v45 + 24) = 0;
  sub_98C0(a4, a4[3]);
  uint64_t v46 = v70;
  sub_4C8B4(v43, v70);
  unint64_t v47 = (*(unsigned __int8 *)(v68 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80);
  unint64_t v48 = (v69 + v47 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v49 = swift_allocObject();
  *(void *)(v49 + 16) = v45;
  sub_4C9EC(v46, v49 + v47);
  dispatch_semaphore_t v50 = v71;
  *(void *)(v49 + v48) = v71;
  sub_8D10(0, &qword_BEAF0);
  swift_retain();
  NSString v51 = v50;
  id v52 = v80;
  sub_8D420();
  swift_release();
  uint64_t v53 = v72;
  sub_8E830();
  uint64_t v54 = v74;
  *uint64_t v74 = 10000;
  uint64_t v55 = v76;
  uint64_t v56 = v78;
  (*(void (**)(void *, void, uint64_t))(v76 + 104))(v54, enum case for DispatchTimeInterval.milliseconds(_:), v78);
  uint64_t v57 = v73;
  sub_8E850();
  (*(void (**)(void *, uint64_t))(v55 + 8))(v54, v56);
  uint64_t v58 = *(void (**)(uint64_t, uint64_t))(v75 + 8);
  uint64_t v59 = v53;
  uint64_t v60 = v77;
  v58(v59, v77);
  sub_8EB60();
  v58((uint64_t)v57, v60);
  if (sub_8E820())
  {
    unint64_t v61 = sub_8E710();
    os_log_type_t v62 = sub_8EB10();
    if (sub_22324(v62))
    {
      unint64_t v63 = (uint8_t *)sub_CCE4();
      *(_WORD *)unint64_t v63 = 0;
      _os_log_impl(&dword_0, v61, (os_log_type_t)v58, "#SendAnnouncementIntentHelper ExtractSpeechData ace command timed out", v63, 2u);
      sub_CC2C();
    }

    type metadata accessor for RadarUtils();
    uint64_t inited = swift_initStackObject();
    sub_8E330();
    swift_allocObject();
    *(void *)(inited + 16) = sub_8E320();
    sub_3A6A0(1, 2);
    swift_release();

    sub_664EC(v43, (void (*)(void))type metadata accessor for SignpostLog.Signpost);
  }
  else
  {
    sub_664EC(v43, (void (*)(void))type metadata accessor for SignpostLog.Signpost);
  }
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_release();
  return sub_66614();
}

Swift::Int sub_648A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v33[3] = a3;
  uint64_t v7 = sub_8D470();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)v33 - v12;
  uint64_t v14 = sub_48AC(&qword_BEAF8);
  __chkstk_darwin(v14);
  uint64_t v16 = (id *)((char *)v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_66370(a1, (uint64_t)v16);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, id *, uint64_t))(v8 + 32))(v13, v16, v7);
    if (qword_BB830 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_8E730();
    sub_50FC(v17, (uint64_t)qword_BFEC8);
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v13, v7);
    uint64_t v18 = sub_8E710();
    os_log_type_t v19 = sub_8EB10();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      uint64_t v21 = swift_slowAlloc();
      v33[2] = a4;
      v34[0] = v21;
      *(_DWORD *)uint64_t v20 = 136315138;
      v33[1] = v20 + 4;
      sub_664A4(&qword_BEB00, (void (*)(uint64_t))&type metadata accessor for SubmitCommandError);
      uint64_t v22 = sub_8EE20();
      v33[4] = sub_8758C(v22, v23, v34);
      sub_8EBD0();
      swift_bridgeObjectRelease();
      id v24 = *(void (**)(char *, uint64_t))(v8 + 8);
      v24(v11, v7);
      _os_log_impl(&dword_0, v18, v19, "#SendAnnouncementIntentHelper An error occurred while extracting speech data url: %s.", v20, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v24(v13, v7);
    }
    else
    {

      uint64_t v31 = *(void (**)(char *, uint64_t))(v8 + 8);
      v31(v11, v7);
      v31(v13, v7);
    }
  }
  else
  {
    id v25 = *v16;
    id v26 = [*v16 speechDataUrl];
    if (v26)
    {
      NSString v27 = v26;
      uint64_t v28 = sub_8E8D0();
      uint64_t v30 = v29;
    }
    else
    {

      uint64_t v28 = 0;
      uint64_t v30 = 0;
    }
    swift_beginAccess();
    *(void *)(a2 + 16) = v28;
    *(void *)(a2 + 24) = v30;
    swift_bridgeObjectRelease();
  }
  sub_8EB40();
  if (qword_BB838 != -1) {
    swift_once();
  }
  type metadata accessor for SignpostLog.Signpost();
  sub_8E6E0();
  return sub_8EB70();
}

uint64_t sub_64D10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[16] = a3;
  v4[17] = a4;
  v4[15] = a2;
  uint64_t v5 = type metadata accessor for HomeCommunicationError(0);
  v4[18] = v5;
  sub_1CCBC(v5);
  v4[19] = sub_CBA4();
  uint64_t v6 = type metadata accessor for SignpostLog.Signpost();
  v4[20] = v6;
  sub_1CCBC(v6);
  v4[21] = sub_CBA4();
  return _swift_task_switch(sub_64DEC, 0, 0);
}

uint64_t sub_64DEC()
{
  uint64_t v34 = v0;
  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v2 = *(void *)(v0 + 128);
  os_log_type_t v3 = *(void **)(v0 + 136);
  id v4 = [objc_allocWithZone((Class)SASExtractSpeechData) init];
  *(void *)(v0 + 176) = v4;
  id v5 = [objc_allocWithZone((Class)NSNumber) initWithUnsignedLongLong:v1];
  [v4 setStartTime:v5];

  id v6 = [objc_allocWithZone((Class)NSNumber) initWithUnsignedLongLong:v2];
  [v4 setEndTime:v6];

  sub_98C0(v3, v3[3]);
  sub_8D590();
  if (v7)
  {
    NSString v8 = sub_8E8C0();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v8 = 0;
  }
  [v4 setSpeechRequestId:v8];

  if (qword_BB830 != -1) {
    swift_once();
  }
  uint64_t v9 = *(void *)(v0 + 136);
  uint64_t v10 = sub_8E730();
  *(void *)(v0 + 184) = sub_50FC(v10, (uint64_t)qword_BFEC8);
  sub_C940(v9, v0 + 16);
  id v11 = v4;
  uint64_t v12 = sub_8E710();
  os_log_type_t v13 = sub_8EB00();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = sub_1CC0C();
    os_log_type_t v32 = (void *)swift_slowAlloc();
    uint64_t v33 = sub_1CC0C();
    *(_DWORD *)uint64_t v14 = 136315650;
    sub_98C0((void *)(v0 + 16), *(void *)(v0 + 40));
    *(void *)(v0 + 56) = sub_8D590();
    *(void *)(v0 + 64) = v15;
    sub_48AC(&qword_BDDD8);
    uint64_t v16 = sub_8E8E0();
    *(void *)(v0 + 80) = sub_8758C(v16, v17, &v33);
    sub_8EBD0();
    swift_bridgeObjectRelease();
    sub_4950(v0 + 16);
    *(_WORD *)(v14 + 12) = 2112;
    id v18 = [v11 startTime];
    if (v18)
    {
      *(void *)(v0 + 112) = v18;
      sub_8EBD0();
      os_log_type_t v19 = (void *)(v0 + 96);
    }
    else
    {
      *(void *)(v0 + 88) = 0;
      os_log_type_t v19 = (void *)(v0 + 96);
      sub_8EBD0();
    }
    *os_log_type_t v32 = v18;

    *(_WORD *)(v14 + 22) = 2112;
    id v20 = [v11 endTime];
    if (v20) {
      *(void *)(v0 + 104) = v20;
    }
    else {
      *os_log_type_t v19 = 0;
    }
    sub_8EBD0();
    v32[1] = v20;

    _os_log_impl(&dword_0, v12, v13, "#SendAnnouncementIntentHelper sending SASExtractSpeechData async with speechRequestId: %s, startTime in ms: %@, endTime in ms: %@", (uint8_t *)v14, 0x20u);
    sub_48AC(&qword_BD020);
    swift_arrayDestroy();
    sub_CC2C();
    sub_66620();
    sub_CC2C();
    sub_CC2C();
  }
  else
  {
    sub_4950(v0 + 16);
  }
  if (qword_BB838 != -1) {
    swift_once();
  }
  uint64_t v22 = *(void *)(v0 + 160);
  uint64_t v21 = *(void *)(v0 + 168);
  unint64_t v23 = *(void **)(v0 + 136);
  id v24 = (id)qword_BCE60;
  sub_8E6F0();
  sub_8EB50();
  sub_8E6E0();
  uint64_t v25 = *(int *)(v22 + 20);
  *(_DWORD *)(v0 + 216) = v25;
  uint64_t v26 = v21 + v25;
  *(void *)uint64_t v26 = "ExtractSpeechData";
  *(void *)(v26 + 8) = 17;
  *(unsigned char *)(v26 + 16) = 2;
  uint64_t v28 = v3[3];
  uint64_t v27 = v3[4];
  sub_98C0(v23, v28);
  uint64_t v29 = (void *)swift_task_alloc();
  *(void *)(v0 + 192) = v29;
  uint64_t v30 = sub_8D10(0, (unint64_t *)&qword_BDFF0);
  *uint64_t v29 = v0;
  v29[1] = sub_65364;
  return AceServiceInvokerAsync.submit<A>(_:)(v11, v28, v30, v27);
}

uint64_t sub_65364()
{
  sub_7614();
  *(void *)(v2 + 200) = v1;
  *(void *)(v2 + 208) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v3 = sub_65950;
  }
  else {
    os_log_type_t v3 = sub_65480;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_65480()
{
  uint64_t v34 = v0;
  self;
  uint64_t v1 = (void *)swift_dynamicCastObjCClass();
  if (v1)
  {
    uint64_t v2 = sub_66448(v1, (SEL *)&selRef_speechDataUrl);
    if (v3)
    {
      uint64_t v4 = v2;
      unint64_t v5 = v3;
      swift_bridgeObjectRetain_n();
      id v6 = sub_8E710();
      os_log_type_t v7 = sub_8EB00();
      BOOL v8 = os_log_type_enabled(v6, v7);
      uint64_t v9 = *(void **)(v0 + 200);
      if (v8)
      {
        uint64_t v10 = (_DWORD *)sub_1CBDC();
        uint64_t v33 = sub_1CC0C();
        *uint64_t v10 = 136315138;
        swift_bridgeObjectRetain();
        *(void *)(v0 + 72) = sub_8758C(v4, v5, &v33);
        sub_8EBD0();
        swift_bridgeObjectRelease_n();
        sub_66694(&dword_0, v11, v12, "#SendAnnouncementIntentHelper speechDataUrl unwrapped to %s");
        swift_arrayDestroy();
        sub_CC2C();
        sub_CC2C();
      }
      else
      {
        sub_665CC();
      }

      uint64_t v31 = *(void *)(v0 + 168);
      uint64_t v30 = *(void **)(v0 + 176);
      sub_8EB40();
      sub_8E6E0();

      sub_664EC(v31, (void (*)(void))type metadata accessor for SignpostLog.Signpost);
      swift_task_dealloc();
      swift_task_dealloc();
      os_log_type_t v32 = *(uint64_t (**)(uint64_t, unint64_t))(v0 + 8);
      return v32(v4, v5);
    }
    os_log_type_t v19 = sub_8E710();
    os_log_type_t v20 = sub_8EB10();
    if (os_log_type_enabled(v19, v20))
    {
      *(_WORD *)sub_CCE4() = 0;
      sub_CC2C();
    }
    unint64_t v23 = *(void **)(v0 + 200);
    uint64_t v24 = *(void *)(v0 + 152);

    sub_665FC(0xD000000000000020);
    swift_storeEnumTagMultiPayload();
    sub_664A4(&qword_BC918, (void (*)(uint64_t))type metadata accessor for HomeCommunicationError);
    sub_6664C();
    sub_142DC(v25);
    sub_664EC(v24, (void (*)(void))type metadata accessor for HomeCommunicationError);
    swift_willThrow();
  }
  else
  {

    os_log_type_t v13 = sub_8E710();
    os_log_type_t v14 = sub_8EB10();
    if (os_log_type_enabled(v13, v14))
    {
      *(_WORD *)sub_CCE4() = 0;
      sub_5C000(&dword_0, v15, v16, "#SendAnnouncementIntentHelper extractSpeechData return type is not of type SASExtractSpeechDataCompleted");
      sub_CC2C();
    }
    uint64_t v17 = *(void *)(v0 + 152);

    sub_665FC(0xD000000000000068);
    swift_storeEnumTagMultiPayload();
    sub_664A4(&qword_BC918, (void (*)(uint64_t))type metadata accessor for HomeCommunicationError);
    sub_6664C();
    sub_142DC(v18);
    sub_664EC(v17, (void (*)(void))type metadata accessor for HomeCommunicationError);
    swift_willThrow();
  }
  uint64_t v26 = *(void *)(v0 + 168);
  uint64_t v27 = *(void **)(v0 + 176);
  sub_8EB40();
  sub_8E6E0();

  sub_664EC(v26, (void (*)(void))type metadata accessor for SignpostLog.Signpost);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v28 = *(uint64_t (**)(void))(v0 + 8);
  return v28();
}

uint64_t sub_65950()
{
  uint64_t v1 = v0[21];
  uint64_t v2 = (void *)v0[22];
  sub_8EB40();
  sub_8E6E0();

  sub_664EC(v1, (void (*)(void))type metadata accessor for SignpostLog.Signpost);
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

#error "65C88: call analysis failed (funcsize=164)"

void sub_65CF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  sub_665B0();
  a21 = v22;
  a22 = v23;
  uint64_t v25 = v24;
  if (qword_BB830 != -1) {
    swift_once();
  }
  uint64_t v26 = sub_8E730();
  sub_50FC(v26, (uint64_t)qword_BFEC8);
  swift_bridgeObjectRetain_n();
  uint64_t v27 = (void *)sub_8E710();
  os_log_type_t v28 = sub_8EB00();
  if (sub_22324(v28))
  {
    uint64_t v29 = (_DWORD *)sub_1CBDC();
    a10 = sub_1CC0C();
    *uint64_t v29 = 136315138;
    sub_8D10(0, (unint64_t *)&qword_BCFD8);
    swift_bridgeObjectRetain();
    uint64_t v30 = sub_8EA40();
    unint64_t v32 = v31;
    swift_bridgeObjectRelease();
    sub_8758C(v30, v32, &a10);
    sub_8EBD0();
    sub_665CC();
    swift_bridgeObjectRelease();
    sub_3B2E8(&dword_0, v33, v34, "Restoring the recipient slot from the previous INSendAnnouncementIntent: %s.");
    swift_arrayDestroy();
    sub_CC2C();
    sub_CC2C();
  }
  else
  {

    sub_665CC();
  }
  uint64_t v35 = sub_2E470(v25);
  if (v35)
  {
    a10 = v35;
    unint64_t v36 = swift_bridgeObjectRetain();
    sub_2DC44(v36);
    sub_8D10(0, (unint64_t *)&qword_BCFD8);
    Class isa = sub_8EA20().super.isa;
    swift_bridgeObjectRelease();
    NSString v38 = sub_66588();
    [v25 setValue:isa forKey:v38];
  }
  else
  {
    sub_8D10(0, (unint64_t *)&qword_BCFD8);
    Class v39 = sub_8EA20().super.isa;
    NSString v40 = sub_66588();
    [v25 setValue:v39 forKey:v40];
  }
  sub_6656C();
}

void sub_65F4C()
{
  sub_665B0();
  uint64_t v1 = v0;
  unint64_t v3 = v2;
  if (qword_BB830 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_8E730();
  sub_50FC(v4, (uint64_t)qword_BFEC8);
  id v5 = v3;
  id v6 = (void *)sub_8E710();
  os_log_type_t v7 = sub_8EB00();
  if (sub_22324(v7))
  {
    BOOL v8 = (_DWORD *)sub_1CBDC();
    uint64_t v9 = (void *)swift_slowAlloc();
    *BOOL v8 = 138412290;
    id v10 = v5;
    sub_8EBD0();
    *uint64_t v9 = v5;

    sub_3B2E8(&dword_0, v11, v12, "Restoring the announcement slot from the previous INSendAnnouncementIntent: %@.");
    sub_48AC(&qword_BD020);
    swift_arrayDestroy();
    sub_CC2C();
    sub_CC2C();
  }
  else
  {
  }
  NSString v13 = sub_66540();
  [v1 setValue:v5 forKey:v13];

  sub_6656C();
}

id sub_660C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v6 = v5;
  uint64_t v10 = sub_8CA50();
  uint64_t v12 = 0;
  if (_s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0(a1, 1, v10) != 1)
  {
    sub_8CA30(v11);
    uint64_t v12 = v13;
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(a1, v10);
  }
  if (!a3)
  {
    NSString v14 = 0;
    if (a5) {
      goto LABEL_5;
    }
LABEL_7:
    NSString v15 = 0;
    goto LABEL_8;
  }
  NSString v14 = sub_8E8C0();
  swift_bridgeObjectRelease();
  if (!a5) {
    goto LABEL_7;
  }
LABEL_5:
  NSString v15 = sub_8E8C0();
  swift_bridgeObjectRelease();
LABEL_8:
  id v16 = [v6 initWithSpeechDataURL:v12 identifier:v14 speechDataTranscription:v15];

  return v16;
}

uint64_t sub_661F0()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_66228()
{
  uint64_t v1 = type metadata accessor for SignpostLog.Signpost();
  sub_CB1C(v1);
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = v6 | 7;
  unint64_t v8 = (*(void *)(v5 + 64) + ((v6 + 24) & ~v6) + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  sub_8E700();
  sub_16058();
  sub_1CD04();
  v9();

  return _swift_deallocObject(v0, v8 + 8, v7);
}

Swift::Int sub_662F4(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for SignpostLog.Signpost();
  sub_CB1C(v3);
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  unint64_t v8 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v9 = *(void *)(v1 + 16);
  uint64_t v10 = *(void *)(v1 + ((*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_648A8(a1, v9, v1 + v8, v10);
}

uint64_t sub_66370(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_48AC(&qword_BEAF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_663D8(void *a1)
{
  id v2 = [a1 identifier];

  if (!v2) {
    return 0;
  }
  uint64_t v3 = sub_8E8D0();

  return v3;
}

uint64_t sub_66448(void *a1, SEL *a2)
{
  id v2 = [a1 *a2];
  if (v2)
  {
    uint64_t v3 = v2;
    sub_8E8D0();
  }
  return sub_66614();
}

uint64_t sub_664A4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_664EC(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_16058();
  sub_1CD04();
  v3();
  return a1;
}

NSString sub_66540()
{
  return sub_8E8C0();
}

NSString sub_66588()
{
  return sub_8E8C0();
}

uint64_t sub_665CC()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_665E4()
{
  return v0;
}

void *sub_665FC@<X0>(uint64_t a1@<X8>)
{
  *id v2 = a1;
  v2[1] = (v1 - 32) | 0x8000000000000000;
  return v2;
}

uint64_t sub_66614()
{
  return v0;
}

uint64_t sub_66620()
{
  return swift_arrayDestroy();
}

void sub_66638()
{
  *(void *)(v1 - 160) = v0;
}

uint64_t sub_6664C()
{
  return swift_allocError();
}

uint64_t sub_6666C()
{
  return *(void *)(v0 + 40);
}

uint64_t sub_66680()
{
  return v0;
}

void sub_66694(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0xCu);
}

uint64_t sub_666B4(uint64_t a1, void *a2)
{
  v6._uint64_t countAndFlagsBits = a1;
  v3._rawValue = &off_B4490;
  v6._object = a2;
  unint64_t v4 = sub_8ED80(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 0xF) {
    return 15;
  }
  else {
    return v4;
  }
}

unint64_t sub_66700(char a1)
{
  unint64_t result = 0xD000000000000019;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x7964616572;
      break;
    case 2:
      unint64_t result = 0x6572676F72506E69;
      break;
    case 3:
      unint64_t result = 0x73736563637573;
      break;
    case 4:
      unint64_t result = 0x6572756C696166;
      break;
    case 5:
      return result;
    case 6:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 7:
    case 11:
    case 14:
      unint64_t result = 0xD000000000000026;
      break;
    case 8:
      unint64_t result = 0xD000000000000022;
      break;
    case 9:
      unint64_t result = 0xD00000000000002ALL;
      break;
    case 10:
      unint64_t result = 0xD000000000000010;
      break;
    case 12:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 13:
      unint64_t result = 0xD00000000000002BLL;
      break;
    default:
      unint64_t result = 0x6669636570736E75;
      break;
  }
  return result;
}

uint64_t sub_6689C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_2469C(*a1, *a2);
}

Swift::Int sub_668A8()
{
  return sub_24D88();
}

uint64_t sub_668B0(uint64_t a1)
{
  return sub_24E54(a1, *v1);
}

Swift::Int sub_668B8(uint64_t a1)
{
  return sub_25578(a1, *v1);
}

uint64_t sub_668C0@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_666B4(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

unint64_t sub_668F0@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_66700(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_6691C(void *a1@<X8>)
{
  *a1 = &off_B4618;
}

uint64_t sub_6692C()
{
  uint64_t v0 = qword_BEB30;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_66964(uint64_t a1)
{
  unint64_t v2 = sub_66F40();

  return static AppEnumRepresentation.lnValueType.getter(a1, v2);
}

uint64_t sub_669A0(uint64_t a1)
{
  unint64_t v2 = sub_66F40();

  return AppEnumRepresentation.lnValue.getter(a1, v2);
}

uint64_t sub_669DC(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_66DAC();

  return static IntentValueTypeIdentifiable.canConvert(_:)(a1, a2, v4);
}

uint64_t sub_66A28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_66F40();

  return static AppEnumRepresentation.from(_:context:)(a1, a2, a3, v6);
}

uint64_t sub_66A8C(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_66DAC();

  return static IntentValueTypeIdentifiable.canConvertFrom(_:)(a1, a2, v4);
}

uint64_t sub_66AD8(char a1)
{
  v2._uint64_t countAndFlagsBits = sub_66700(a1);
  sub_8E960(v2);
  swift_bridgeObjectRelease();
  return 46;
}

uint64_t sub_66B24()
{
  return sub_66AD8(*v0);
}

uint64_t getEnumTagSinglePayload for SendAnnouncementIntentResponseCode(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF2)
  {
    if (a2 + 14 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 14) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 15;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xF;
  int v5 = v6 - 15;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for SendAnnouncementIntentResponseCode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 14 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 14) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF2) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF1)
  {
    unsigned int v6 = ((a2 - 242) >> 8) + 1;
    *unint64_t result = a2 + 14;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x66C80);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 14;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SendAnnouncementIntentResponseCode()
{
  return &type metadata for SendAnnouncementIntentResponseCode;
}

unint64_t sub_66CBC()
{
  unint64_t result = qword_BEB40;
  if (!qword_BEB40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BEB40);
  }
  return result;
}

unint64_t sub_66D0C()
{
  unint64_t result = qword_BEB48;
  if (!qword_BEB48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BEB48);
  }
  return result;
}

unint64_t sub_66D5C()
{
  unint64_t result = qword_BEB50;
  if (!qword_BEB50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BEB50);
  }
  return result;
}

unint64_t sub_66DAC()
{
  unint64_t result = qword_BEB58;
  if (!qword_BEB58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BEB58);
  }
  return result;
}

unint64_t sub_66DFC()
{
  unint64_t result = qword_BEB60;
  if (!qword_BEB60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BEB60);
  }
  return result;
}

unint64_t sub_66E4C()
{
  unint64_t result = qword_BEB68;
  if (!qword_BEB68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BEB68);
  }
  return result;
}

unint64_t sub_66E9C()
{
  unint64_t result = qword_BEB70;
  if (!qword_BEB70)
  {
    sub_9950(&qword_BEB78);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BEB70);
  }
  return result;
}

unint64_t sub_66EF4()
{
  unint64_t result = qword_BEB80;
  if (!qword_BEB80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BEB80);
  }
  return result;
}

unint64_t sub_66F40()
{
  unint64_t result = qword_BEB88;
  if (!qword_BEB88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BEB88);
  }
  return result;
}

void *SendAnnouncementNeedsValueModel.responseViewId.unsafeMutableAddressor()
{
  return &static SendAnnouncementNeedsValueModel.responseViewId;
}

unint64_t static SendAnnouncementNeedsValueModel.responseViewId.getter()
{
  return 0xD000000000000026;
}

uint64_t sub_66FB4(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x614E746567726174 && a2 == 0xEA0000000000656DLL)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_8EE40();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_67044()
{
  return 0x614E746567726174;
}

uint64_t sub_67064@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_66FB4(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_67090(uint64_t a1)
{
  unint64_t v2 = sub_6721C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_670CC(uint64_t a1)
{
  unint64_t v2 = sub_6721C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t SendAnnouncementNeedsValueModel.encode(to:)(void *a1)
{
  uint64_t v2 = sub_48AC(&qword_BEB90);
  sub_5190();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  BOOL v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_98C0(a1, a1[3]);
  sub_6721C();
  sub_8EF50();
  sub_8EDF0();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v2);
}

unint64_t sub_6721C()
{
  unint64_t result = qword_BEB98;
  if (!qword_BEB98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BEB98);
  }
  return result;
}

uint64_t SendAnnouncementNeedsValueModel.init(from:)(void *a1)
{
  uint64_t v3 = sub_48AC(&qword_BEBA0);
  sub_5190();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  unint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (uint64_t)sub_98C0(a1, a1[3]);
  sub_6721C();
  sub_8EF40();
  if (!v1)
  {
    uint64_t v9 = sub_8EDB0();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v3);
  }
  sub_4950((uint64_t)a1);
  return v9;
}

uint64_t sub_673A0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = SendAnnouncementNeedsValueModel.init(from:)(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_673CC(void *a1)
{
  return SendAnnouncementNeedsValueModel.encode(to:)(a1);
}

void *initializeBufferWithCopyOfBuffer for SendAnnouncementNeedsValueModel(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for SendAnnouncementNeedsValueModel()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for SendAnnouncementNeedsValueModel(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for SendAnnouncementNeedsValueModel(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SendAnnouncementNeedsValueModel(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 16))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      unint64_t v3 = *(void *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SendAnnouncementNeedsValueModel(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SendAnnouncementNeedsValueModel()
{
  return &type metadata for SendAnnouncementNeedsValueModel;
}

unsigned char *storeEnumTagSinglePayload for SendAnnouncementNeedsValueModel.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x675E8);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SendAnnouncementNeedsValueModel.CodingKeys()
{
  return &type metadata for SendAnnouncementNeedsValueModel.CodingKeys;
}

unint64_t sub_67624()
{
  unint64_t result = qword_BEBA8;
  if (!qword_BEBA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BEBA8);
  }
  return result;
}

unint64_t sub_67674()
{
  unint64_t result = qword_BEBB0;
  if (!qword_BEBB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BEBB0);
  }
  return result;
}

unint64_t sub_676C4()
{
  unint64_t result = qword_BEBB8;
  if (!qword_BEBB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BEBB8);
  }
  return result;
}

uint64_t sub_67714(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void (*a5)(char *), uint64_t a6)
{
  uint64_t v22 = a6;
  uint64_t v11 = sub_48AC(&qword_BCFC8);
  __chkstk_darwin(v11 - 8);
  NSString v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_8D370();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  if (sub_25C44(a2, a3))
  {
    sub_48AC(&qword_BE640);
    uint64_t v18 = (uint64_t (*)(uint64_t, uint64_t, void *, uint64_t, void (*)(void), uint64_t))sub_8D6C0();
    uint64_t v19 = v22;
    return v18(a1, a2, a3, a4, (void (*)(void))a5, v19);
  }
  else
  {
    sub_67934();
    (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v13, v17, v14);
    _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0((uint64_t)v13, 0, 1, v14);
    a5(v13);
    sub_6ADDC((uint64_t)v13, &qword_BCFC8);
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  }
}

uint64_t sub_67934()
{
  if (qword_BB830 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_8E730();
  sub_50FC(v0, (uint64_t)qword_BFEC8);
  uint64_t v1 = sub_8E710();
  os_log_type_t v2 = sub_8EB00();
  if (os_log_type_enabled(v1, v2))
  {
    int v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)int v3 = 0;
    _os_log_impl(&dword_0, v1, v2, "#HomeCommunicationNLContextProvider generateNLContextForAnnouncement", v3, 2u);
    swift_slowDealloc();
  }

  sub_8D360();
  sub_1E228(0);
  sub_8D330();
  sub_48AC(&qword_BCF00);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_8FA10;
  sub_8E900();
  sub_F5CC();
  uint64_t v5 = sub_8EBF0();
  uint64_t v7 = v6;
  swift_bridgeObjectRelease();
  unint64_t v8 = sub_1E3A4(v5, v7, 3);
  uint64_t v10 = v9;
  swift_bridgeObjectRelease();
  *(void *)(v4 + 32) = v8;
  *(void *)(v4 + 40) = v10;
  sub_8D300();
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_8FA10;
  *(void *)(v11 + 32) = sub_1E228(4);
  *(void *)(v11 + 40) = v12;
  sub_8D310();
  sub_67B60();
  return sub_8D2E0();
}

uint64_t sub_67B60()
{
  uint64_t v0 = sub_8DA80();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v36 = v0;
  uint64_t v37 = v1;
  __chkstk_darwin(v0);
  int v3 = (char *)&v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_8D920();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = sub_8D9F0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v33 - v10;
  uint64_t v12 = sub_48AC(&qword_BD000);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_8E170();
  swift_allocObject();
  uint64_t v15 = sub_8E160();
  sub_8E130();
  swift_allocObject();
  uint64_t v16 = sub_8E120();
  sub_8E110();
  uint64_t v39 = v16;
  sub_8E040();
  sub_48AC(&qword_BE170);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_8FC30;
  *(void *)(v17 + 32) = v15;
  v42[0] = v17;
  sub_8EA50();
  uint64_t v18 = sub_8DEA0();
  _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0((uint64_t)v14, 1, 1, v18);
  uint64_t v38 = v15;
  swift_retain();
  uint64_t v19 = sub_8DE50();
  swift_bridgeObjectRelease();
  sub_6ADDC((uint64_t)v14, &qword_BD000);
  sub_8D9E0();
  uint64_t v40 = v19;
  sub_8DB00();
  sub_8D9D0();
  if (qword_BB830 != -1) {
    swift_once();
  }
  uint64_t v20 = sub_8E730();
  sub_50FC(v20, (uint64_t)qword_BFEC8);
  uint64_t v21 = sub_8E710();
  os_log_type_t v22 = sub_8EB00();
  uint64_t v23 = v5;
  uint64_t v24 = v3;
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v25 = (uint8_t *)swift_slowAlloc();
    uint64_t v35 = swift_slowAlloc();
    v42[0] = v35;
    *(_DWORD *)uint64_t v25 = 136315138;
    uint64_t v33 = v25 + 4;
    uint64_t v34 = v25;
    swift_beginAccess();
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v11, v23);
    uint64_t v26 = sub_6ACE4((uint64_t)v9, (uint64_t (*)(void))&type metadata accessor for Siri_Nlu_External_SystemPrompted, &qword_BED00, (void (*)(uint64_t))&type metadata accessor for Siri_Nlu_External_SystemPrompted);
    uint64_t v41 = sub_8758C(v26, v27, v42);
    sub_8EBD0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v21, v22, "#HomeCommunicationNLContextProvider Returning NLUSystemPrompted for prompt for send Announcement: %s", v34, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  uint64_t v28 = v36;
  uint64_t v29 = v37;
  sub_8DA70();
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v11, v23);
  sub_8DA60();
  sub_48AC(&qword_BD010);
  unint64_t v30 = (*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
  uint64_t v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = xmmword_8FA10;
  (*(void (**)(unint64_t, char *, uint64_t))(v29 + 32))(v31 + v30, v24, v28);
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v23);
  return v31;
}

uint64_t sub_682BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_8D860();
  sub_5190();
  uint64_t v51 = v6;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_8D8B0();
  sub_5190();
  uint64_t v12 = v11;
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v16 = (char *)v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)v50 - v17;
  sub_8D840();
  uint64_t v19 = sub_6AF00();
  int v21 = v20(v19);
  if (v21 == enum case for Parse.directInvocation(_:))
  {
    sub_8D200();
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v18, v10);
  }
  v50[2] = a2;
  if (v21 == enum case for Parse.NLv4IntentOnly(_:))
  {
    uint64_t v23 = sub_6AF00();
    v24(v23);
    swift_unknownObjectRelease();
  }
  else
  {
    if (v21 != enum case for Parse.uso(_:))
    {
      if (qword_BB830 != -1) {
        swift_once();
      }
      uint64_t v38 = sub_8E730();
      sub_50FC(v38, (uint64_t)qword_BFEC8);
      uint64_t v39 = sub_8E710();
      os_log_type_t v40 = sub_8EB10();
      if (os_log_type_enabled(v39, v40))
      {
        *(_WORD *)sub_CCE4() = 0;
        sub_1CDC8(&dword_0, v41, v42, "#SendAnnouncementNeedsValueStrategy Received unsupported parse ");
        sub_CC2C();
      }

      sub_8D210();
      return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v18, v10);
    }
    uint64_t v25 = sub_6AF00();
    v26(v25);
  }
  sub_98C0((void *)(v2 + 16), *(void *)(v2 + 40));
  swift_retain();
  sub_8D840();
  sub_2FE2C((uint64_t)v16, (uint64_t)&v52);
  swift_release();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v16, v10);
  if (v53)
  {
    sub_C928(&v52, (uint64_t)v54);
    uint64_t v27 = v55;
    uint64_t v28 = v56;
    sub_98C0(v54, v55);
    switch((*(unsigned __int8 (**)(uint64_t, uint64_t))(v28 + 160))(v27, v28))
    {
      case 2u:
        swift_bridgeObjectRelease();
        goto LABEL_24;
      case 3u:
        goto LABEL_11;
      default:
        char v29 = sub_8EE40();
        swift_bridgeObjectRelease();
        if (v29)
        {
LABEL_24:
          if (qword_BB830 != -1) {
            swift_once();
          }
          uint64_t v45 = sub_8E730();
          sub_50FC(v45, (uint64_t)qword_BFEC8);
          uint64_t v46 = sub_8E710();
          os_log_type_t v47 = sub_8EB00();
          if (os_log_type_enabled(v46, v47))
          {
            *(_WORD *)sub_CCE4() = 0;
            sub_1CDC8(&dword_0, v48, v49, "#SendAnnouncementNeedsValueStrategy cancelling as per homeCommunicationConfirmation");
            sub_CC2C();
          }

          sub_8D1F0();
        }
        else
        {
LABEL_11:
          sub_8D200();
        }
        uint64_t result = sub_4950((uint64_t)v54);
        break;
    }
  }
  else
  {
    sub_6ADDC((uint64_t)&v52, &qword_BC410);
    if (qword_BB830 != -1) {
      swift_once();
    }
    uint64_t v30 = sub_8E730();
    sub_50FC(v30, (uint64_t)qword_BFEC8);
    (*(void (**)(char *, uint64_t, uint64_t))(v51 + 16))(v9, a1, v5);
    uint64_t v31 = sub_8E710();
    os_log_type_t v32 = sub_8EB10();
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v33 = (uint8_t *)swift_slowAlloc();
      v54[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v33 = 136315138;
      v50[1] = v33 + 4;
      sub_8D840();
      uint64_t v34 = sub_72D0C((uint64_t)v16);
      *(void *)&long long v52 = sub_8758C(v34, v35, v54);
      sub_8EBD0();
      swift_bridgeObjectRelease();
      uint64_t v36 = sub_6AF48();
      v37(v36);
      _os_log_impl(&dword_0, v31, v32, "#SendAnnouncementNeedsValueStrategy couldn't transform input: %s", v33, 0xCu);
      swift_arrayDestroy();
      sub_CC2C();
      sub_CC2C();
    }
    else
    {
      uint64_t v43 = sub_6AF48();
      v44(v43);
    }

    return sub_8D210();
  }
  return result;
}

uint64_t sub_68884()
{
  sub_CC60();
  v1[19] = v2;
  v1[20] = v0;
  v1[17] = v3;
  v1[18] = v4;
  v1[21] = type metadata accessor for HomeCommunicationError(0);
  v1[22] = sub_CBA4();
  uint64_t v5 = sub_8D8B0();
  v1[23] = v5;
  sub_CB1C(v5);
  v1[24] = v6;
  v1[25] = sub_CBA4();
  sub_46200();
  return _swift_task_switch(v7, v8, v9);
}

uint64_t sub_6893C()
{
  if (qword_BB830 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_8E730();
  sub_50FC(v1, (uint64_t)qword_BFEC8);
  uint64_t v2 = sub_8E710();
  os_log_type_t v3 = sub_8EB00();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)sub_CCE4();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_0, v2, v3, "#SendAnnouncementNeedsValueStrategy parseResponseValue", v4, 2u);
    sub_CC2C();
  }
  uint64_t v6 = *(void *)(v0 + 192);
  uint64_t v5 = *(void *)(v0 + 200);
  uint64_t v7 = *(void *)(v0 + 184);
  uint64_t v8 = *(void *)(v0 + 160);

  sub_98C0((void *)(v8 + 16), *(void *)(v8 + 40));
  swift_retain();
  sub_8D840();
  sub_2FE2C(v5, v0 + 56);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  if (*(void *)(v0 + 80))
  {
    sub_C928((long long *)(v0 + 56), v0 + 16);
    sub_48AC(&qword_BE5E0);
    *(void *)(v0 + 208) = sub_8D7B0();
    uint64_t v9 = *(void *)(v0 + 40);
    uint64_t v10 = *(void *)(v0 + 48);
    sub_98C0((void *)(v0 + 16), v9);
    uint64_t v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 120))(v9, v10);
    if ((v12 & 1) == 0)
    {
      uint64_t v13 = v11;
      uint64_t v14 = *(void *)(v0 + 40);
      uint64_t v15 = *(void *)(v0 + 48);
      sub_98C0((void *)(v0 + 16), v14);
      uint64_t v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 128))(v14, v15);
      if ((v17 & 1) == 0)
      {
        uint64_t v18 = v16;
        uint64_t v19 = sub_8D7B0();
        *(void *)(v0 + 216) = v19;
        uint64_t v20 = *(void *)(v0 + 40);
        uint64_t v21 = *(void *)(v0 + 48);
        sub_98C0((void *)(v0 + 16), v20);
        uint64_t v22 = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 152))(v20, v21);
        uint64_t v24 = v23;
        *(void *)(v0 + 224) = v23;
        sub_8D060();
        uint64_t v25 = (void *)swift_task_alloc();
        *(void *)(v0 + 232) = v25;
        void *v25 = v0;
        v25[1] = sub_68D84;
        return sub_628C0(v19, v13, v18, v22, v24, v0 + 96);
      }
    }
    sub_8D10(0, &qword_BE660);
    sub_6AF10();
    sub_8D430();
    uint64_t v27 = sub_48AC(&qword_BE650);
    sub_6AF28(v27);
    sub_4950(v0 + 16);
    swift_task_dealloc();
    swift_task_dealloc();
    sub_46228();
  }
  else
  {
    uint64_t v29 = *(void *)(v0 + 200);
    uint64_t v30 = *(uint64_t **)(v0 + 176);
    sub_6ADDC(v0 + 56, &qword_BC410);
    sub_8D840();
    uint64_t *v30 = sub_72D0C(v29);
    v30[1] = v31;
    v30[2] = 0x746E65746E494C4ELL;
    v30[3] = 0xE800000000000000;
    swift_storeEnumTagMultiPayload();
    sub_6AE74(&qword_BC918, 255, (void (*)(uint64_t))type metadata accessor for HomeCommunicationError);
    swift_allocError();
    sub_142DC(v32);
    sub_4A6D0((uint64_t)v30);
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_CC20();
  }
  return v28();
}

uint64_t sub_68D84(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  sub_CB34();
  uint64_t *v6 = v5;
  uint64_t *v6 = *v2;
  *(void *)(v5 + 240) = v1;
  swift_task_dealloc();
  uint64_t v7 = *(void **)(v4 + 216);
  if (!v1) {
    *(void *)(v5 + 248) = a1;
  }
  sub_4950(v5 + 96);
  swift_bridgeObjectRelease();

  sub_46200();
  return _swift_task_switch(v8, v9, v10);
}

uint64_t sub_68F00()
{
  sub_8D10(0, &qword_BE660);
  sub_6AF10();
  sub_8D430();
  uint64_t v1 = sub_48AC(&qword_BE650);
  sub_6AF28(v1);
  sub_4950(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  sub_46228();
  return v2();
}

uint64_t sub_68FCC()
{
  sub_CC60();

  sub_4950(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  sub_CC20();
  return v1();
}

uint64_t sub_69048()
{
  sub_CC60();
  v1[191] = v0;
  v1[185] = v2;
  v1[179] = v3;
  sub_8D160();
  v1[197] = sub_CBA4();
  uint64_t v4 = sub_8D760();
  v1[198] = v4;
  sub_CB1C(v4);
  v1[199] = v5;
  v1[200] = sub_CBA4();
  uint64_t v6 = sub_48AC(&qword_BE5E0);
  v1[201] = v6;
  sub_CB1C(v6);
  v1[202] = v7;
  v1[203] = *(void *)(v8 + 64);
  v1[204] = sub_CBA4();
  v1[205] = sub_48AC(&qword_BCFC8);
  v1[206] = swift_task_alloc();
  v1[207] = swift_task_alloc();
  sub_46200();
  return _swift_task_switch(v9, v10, v11);
}

uint64_t sub_69180()
{
  if (qword_BB830 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_8E730();
  sub_50FC(v1, (uint64_t)qword_BFEC8);
  uint64_t v2 = sub_8E710();
  os_log_type_t v3 = sub_8EB00();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)sub_CCE4();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_0, v2, v3, "#SendAnnouncementNeedsValueStrategy makeParameterPromptDialogAsync with response framework adoption", v4, 2u);
    sub_CC2C();
  }
  uint64_t v5 = v0[204];
  uint64_t v6 = v0[202];
  uint64_t v7 = v0[201];
  uint64_t v8 = v0[191];
  uint64_t v9 = v0[185];

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v5, v9, v7);
  unint64_t v10 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v11 = swift_allocObject();
  v0[208] = v11;
  *(void *)(v11 + 16) = v8;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v6 + 32))(v11 + v10, v5, v7);
  swift_retain();
  swift_retain();
  swift_asyncLet_begin();
  swift_retain_n();
  sub_8D10(255, &qword_BDFD0);
  swift_asyncLet_begin();
  sub_8D140();
  sub_8D6E0();
  uint64_t v12 = v0[207];
  return _swift_asyncLet_get(v0 + 2, v12, sub_69408, v0 + 168);
}

uint64_t sub_69408()
{
  return sub_461D8((uint64_t)sub_6941C);
}

uint64_t sub_6941C()
{
  sub_46250();
  sub_6AB08(v0[207], v0[206]);
  sub_8D730();
  v0[209] = sub_8D3A0();
  swift_allocObject();
  v0[173] = sub_8D390();
  sub_48AC(&qword_BE170);
  uint64_t v1 = swift_allocObject();
  v0[210] = v1;
  *(_OWORD *)(v1 + 16) = xmmword_8FC30;
  return _swift_asyncLet_get_throwing(v0 + 82, v0 + 167, sub_69500, v0 + 162);
}

uint64_t sub_69500()
{
  *(void *)(v1 + 1688) = v0;
  if (v0) {
    return sub_461D8((uint64_t)sub_698C0);
  }
  else {
    return sub_461D8((uint64_t)sub_6952C);
  }
}

uint64_t sub_6952C()
{
  sub_46250();
  uint64_t v1 = v0[210];
  uint64_t v2 = (void *)v0[167];
  *(void *)(v1 + 32) = v2;
  uint64_t v9 = v1;
  sub_8EA50();
  v0[212] = v9;
  id v3 = v2;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[213] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_69614;
  uint64_t v5 = v0[209];
  uint64_t v6 = v0[200];
  uint64_t v7 = v0[179];
  return dispatch thunk of ResponseGenerating.makeResponseOutput(dialog:outputGenerationManifest:)(v7, v9, v6, v5, &protocol witness table for ResponseFactory);
}

uint64_t sub_69614()
{
  sub_CC60();
  sub_7614();
  uint64_t v1 = *v0;
  sub_CB34();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  sub_46200();
  return _swift_task_switch(v3, v4, v5);
}

uint64_t sub_696F8()
{
  (*(void (**)(void, void))(v0[199] + 8))(v0[200], v0[198]);
  swift_release();
  return _swift_asyncLet_finish(v0 + 82);
}

uint64_t sub_69794()
{
  return sub_461D8((uint64_t)sub_697A8);
}

uint64_t sub_697A8()
{
  sub_CC60();
  swift_release();
  return _swift_asyncLet_finish(v0 + 16);
}

uint64_t sub_69818()
{
  return sub_461D8((uint64_t)sub_6982C);
}

uint64_t sub_6982C()
{
  sub_46250();
  sub_6AED0();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_46228();
  return v0();
}

uint64_t sub_698C0()
{
  sub_46250();
  uint64_t v1 = v0[200];
  uint64_t v2 = v0[199];
  uint64_t v3 = v0[198];
  *(void *)(v0[210] + 16) = 0;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_release();
  return _swift_asyncLet_finish(v0 + 82);
}

uint64_t sub_69974()
{
  return sub_461D8((uint64_t)sub_69988);
}

uint64_t sub_69988()
{
  sub_CC60();
  swift_release();
  return _swift_asyncLet_finish(v0 + 16);
}

uint64_t sub_699F8()
{
  return sub_461D8((uint64_t)sub_69A0C);
}

uint64_t sub_69A0C()
{
  sub_46250();
  sub_6AED0();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_CC20();
  return v0();
}

uint64_t sub_69AA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return _swift_task_switch(sub_69AC8, 0, 0);
}

uint64_t sub_69AC8()
{
  sub_CC60();
  uint64_t v1 = swift_task_alloc();
  *(void *)(v0 + 40) = v1;
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 24);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v2;
  sub_48AC(&qword_BCFC8);
  *uint64_t v2 = v0;
  v2[1] = sub_69BB8;
  sub_46200();
  return withCheckedContinuation<A>(isolation:function:_:)();
}

uint64_t sub_69BB8()
{
  sub_CC60();
  sub_7614();
  uint64_t v1 = *v0;
  sub_CB34();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_task_dealloc();
  sub_46228();
  return v3();
}

void sub_69C94(uint64_t a1, uint64_t a2)
{
  uint64_t v21 = a1;
  uint64_t v20 = sub_48AC(&qword_BE638);
  uint64_t v3 = *(void *)(v20 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin(v20);
  uint64_t v5 = sub_8D4E0();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = *(void *)(a2 + 72);
  sub_48AC(&qword_BE5E0);
  uint64_t v18 = (void *)sub_8D7B0();
  sub_8D7D0();
  uint64_t v17 = sub_8D4D0();
  uint64_t v10 = v9;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v11 = (void *)sub_8D7C0();
  uint64_t v12 = v20;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v21, v20);
  unint64_t v13 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v14 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v14 + v13, (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v12);
  uint64_t v15 = v18;
  sub_67714((uint64_t)v18, v17, v10, (uint64_t)v11, (void (*)(char *))sub_6AC00, v14);
  swift_release();

  swift_bridgeObjectRelease();
}

uint64_t sub_69EE8(uint64_t a1)
{
  uint64_t v2 = sub_48AC(&qword_BCFC8);
  __chkstk_darwin(v2 - 8);
  sub_6AB08(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_48AC(&qword_BE638);
  return sub_8EAB0();
}

uint64_t sub_69F84(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return _swift_task_switch(sub_69FA4, 0, 0);
}

uint64_t sub_69FA4()
{
  sub_CC60();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_6A034;
  return sub_4F400();
}

uint64_t sub_6A034(uint64_t a1)
{
  sub_7614();
  uint64_t v5 = v4;
  uint64_t v6 = *v2;
  sub_CB34();
  *uint64_t v7 = v6;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v8 = *(uint64_t (**)(void))(v6 + 8);
    return v8();
  }
  else
  {
    *(void *)(v5 + 40) = a1;
    sub_46200();
    return _swift_task_switch(v10, v11, v12);
  }
}

uint64_t sub_6A150()
{
  **(void **)(v0 + 16) = *(void *)(v0 + 40);
  sub_46228();
  return v1();
}

uint64_t sub_6A174()
{
  uint64_t v0 = sub_8E2F0();
  __chkstk_darwin(v0 - 8);
  sub_8D720();
  sub_8D750();
  sub_8D8C0();
  sub_98C0(v9, v9[3]);
  char v1 = sub_8D0C0();
  sub_C940((uint64_t)v9, (uint64_t)v8);
  if (v1)
  {
    sub_98C0(v8, v8[3]);
    char v2 = sub_8D120();
    sub_4950((uint64_t)v8);
    if (v2)
    {
      if (qword_BB830 != -1) {
        swift_once();
      }
      uint64_t v3 = sub_8E730();
      sub_50FC(v3, (uint64_t)qword_BFEC8);
      uint64_t v4 = sub_8E710();
      os_log_type_t v5 = sub_8EB00();
      if (os_log_type_enabled(v4, v5))
      {
        uint64_t v6 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v6 = 0;
        _os_log_impl(&dword_0, v4, v5, "#SendAnnouncementNeedsValueStrategy overriding responseMode to .voiceForward", v6, 2u);
        swift_slowDealloc();
      }

      sub_8E2E0();
      sub_8D6F0();
    }
  }
  else
  {
    sub_4950((uint64_t)v8);
  }
  return sub_4950((uint64_t)v9);
}

uint64_t sub_6A350()
{
  sub_4950(v0 + 16);
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_6A388()
{
  sub_6A350();

  return _swift_deallocClassInstance(v0, 80, 7);
}

uint64_t type metadata accessor for SendAnnouncementNeedsValueStrategy()
{
  return self;
}

uint64_t sub_6A3E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_682BC(a1, a2);
}

uint64_t sub_6A404()
{
  char v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *char v1 = v0;
  v1[1] = sub_461CC;
  return sub_68884();
}

uint64_t sub_6A4B8()
{
  char v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *char v1 = v0;
  v1[1] = sub_C6E0;
  return sub_69048();
}

uint64_t sub_6A564(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  uint64_t v9 = type metadata accessor for SendAnnouncementNeedsValueStrategy();
  *uint64_t v8 = v4;
  v8[1] = sub_461CC;
  return NeedsValueFlowStrategyAsync.makeRepromptOnEmptyParse(resolveRecord:)(a1, a2, v9, a4);
}

uint64_t sub_6A628(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  uint64_t v9 = type metadata accessor for SendAnnouncementNeedsValueStrategy();
  *uint64_t v8 = v4;
  v8[1] = sub_461CC;
  return NeedsValueFlowStrategyAsync.makeRepromptOnLowConfidence(resolveRecord:)(a1, a2, v9, a4);
}

uint64_t sub_6A6EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v12;
  uint64_t v13 = type metadata accessor for SendAnnouncementNeedsValueStrategy();
  void *v12 = v6;
  v12[1] = sub_461CC;
  return ParameterResolutionHandlingAsync.makeFlowCancelledResponse(app:intent:parameter:)(a1, a2, a3, a4, v13, a6);
}

uint64_t sub_6A7C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v7 + 16) = v14;
  uint64_t v15 = type metadata accessor for SendAnnouncementNeedsValueStrategy();
  *uint64_t v14 = v7;
  v14[1] = sub_461CC;
  return ParameterResolutionHandlingAsync.makeErrorResponse(error:app:intent:parameter:)(a1, a2, a3, a4, a5, v15, a7);
}

uint64_t sub_6A8AC(uint64_t a1, uint64_t a2)
{
  return sub_6AE74(qword_BECB8, a2, (void (*)(uint64_t))type metadata accessor for SendAnnouncementNeedsValueStrategy);
}

uint64_t sub_6A8F4()
{
  uint64_t v1 = sub_48AC(&qword_BE5E0);
  sub_5190();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = (v6 + 24) & ~v6;
  uint64_t v8 = v7 + *(void *)(v5 + 64);
  uint64_t v9 = v6 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0 + v7, v1);

  return _swift_deallocObject(v0, v8, v9);
}

uint64_t sub_6A99C(uint64_t a1)
{
  uint64_t v4 = sub_48AC(&qword_BE5E0);
  sub_6AEBC(v4);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = v1 + ((*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_C6E0;
  return sub_69AA4(a1, v6, v7);
}

uint64_t sub_6AA68()
{
  sub_CC60();
  uint64_t v3 = v2;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_461CC;
  return sub_69F84(v3, v0);
}

uint64_t sub_6AB00()
{
  return sub_6A174();
}

uint64_t sub_6AB08(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_48AC(&qword_BCFC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_6AB70(uint64_t a1)
{
  sub_69C94(a1, *(void *)(v1 + 16));
}

uint64_t sub_6AB78()
{
  sub_48AC(&qword_BE638);
  sub_FDD0();
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v3 + *(void *)(v1 + 64);
  uint64_t v5 = v2 | 7;
  (*(void (**)(uint64_t))(v1 + 8))(v0 + v3);

  return _swift_deallocObject(v0, v4, v5);
}

uint64_t sub_6AC00(uint64_t a1)
{
  uint64_t v2 = sub_48AC(&qword_BE638);
  sub_6AEBC(v2);

  return sub_69EE8(a1);
}

uint64_t sub_6AC54(uint64_t a1)
{
  return sub_6ACE4(a1, (uint64_t (*)(void))&type metadata accessor for Siri_Nlu_External_UserDialogAct, &qword_BED10, (void (*)(uint64_t))&type metadata accessor for Siri_Nlu_External_UserDialogAct);
}

uint64_t sub_6AC9C(uint64_t a1)
{
  return sub_6ACE4(a1, (uint64_t (*)(void))&type metadata accessor for Siri_Nlu_External_SystemPrompted, &qword_BED00, (void (*)(uint64_t))&type metadata accessor for Siri_Nlu_External_SystemPrompted);
}

uint64_t sub_6ACE4(uint64_t a1, uint64_t (*a2)(void), unint64_t *a3, void (*a4)(uint64_t))
{
  uint64_t v7 = a2(0);
  v11[3] = v7;
  v11[4] = sub_6AE74(a3, 255, a4);
  uint64_t v8 = sub_C9F4(v11);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v8, a1, v7);
  sub_8DAD0();
  sub_8DAC0();
  uint64_t v9 = sub_8E9E0();
  sub_4950((uint64_t)v11);
  return v9;
}

uint64_t sub_6ADDC(uint64_t a1, uint64_t *a2)
{
  sub_48AC(a2);
  sub_FDD0();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_6AE2C(uint64_t a1)
{
  return sub_6ACE4(a1, (uint64_t (*)(void))&type metadata accessor for Siri_Nlu_External_UserStatedTask, &qword_BED08, (void (*)(uint64_t))&type metadata accessor for Siri_Nlu_External_UserStatedTask);
}

uint64_t sub_6AE74(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_6AEBC(uint64_t a1)
{
  return a1 - 8;
}

uint64_t sub_6AED0()
{
  return swift_release_n();
}

uint64_t sub_6AF00()
{
  return v0;
}

double sub_6AF10()
{
  return 0.0;
}

uint64_t sub_6AF28(uint64_t a1)
{
  return _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(v1, 0, 1, a1);
}

uint64_t sub_6AF48()
{
  return v0;
}

uint64_t type metadata accessor for SendAnnouncementRCHFlowDelegate()
{
  uint64_t result = qword_BED30;
  if (!qword_BED30) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_6AFA4()
{
  return swift_initClassMetadata2();
}

void *sub_6AFFC(void (*a1)(uint64_t *__return_ptr, void *), uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t result = _swiftEmptyArrayStorage;
  if (v5)
  {
    uint64_t v12 = _swiftEmptyArrayStorage;
    sub_8ECE0();
    uint64_t v8 = (uint64_t *)(a3 + 40);
    while (1)
    {
      uint64_t v9 = *v8;
      v10[0] = *(v8 - 1);
      v10[1] = v9;
      swift_bridgeObjectRetain();
      a1(&v11, v10);
      swift_bridgeObjectRelease();
      if (v3) {
        break;
      }
      v8 += 2;
      sub_8ECC0();
      sub_8ECF0();
      sub_8ED00();
      sub_8ECD0();
      if (!--v5) {
        return v12;
      }
    }
    return (void *)swift_release();
  }
  return result;
}

id sub_6B100()
{
  id v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  NSString v1 = sub_8E8C0();
  swift_bridgeObjectRelease();
  id v2 = [v0 initWithIdentifier:v1];

  return v2;
}

void sub_6B174(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_48AC(&qword_BED88);
    id v2 = (void *)sub_8ED60();
  }
  else
  {
    id v2 = &_swiftEmptyDictionarySingleton;
  }
  uint64_t v31 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v30 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = (char *)(v2 + 8);
  swift_bridgeObjectRetain();
  swift_retain();
  int64_t v7 = 0;
  if (!v5) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v8 = __clz(__rbit64(v5));
  v5 &= v5 - 1;
  unint64_t v9 = v8 | (v7 << 6);
  while (1)
  {
    uint64_t v18 = (void *)(*(void *)(a1 + 48) + 16 * v9);
    uint64_t v19 = v18[1];
    *(void *)&v40[0] = *v18;
    *((void *)&v40[0] + 1) = v19;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    swift_dynamicCast();
    long long v36 = v32;
    long long v37 = v33;
    uint64_t v38 = v34;
    sub_39104(&v35, v39);
    long long v32 = v36;
    long long v33 = v37;
    uint64_t v34 = v38;
    sub_39104(v39, v40);
    sub_39104(v40, &v36);
    Swift::Int v20 = sub_8EC10(v2[5]);
    uint64_t v21 = -1 << *((unsigned char *)v2 + 32);
    unint64_t v22 = v20 & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)&v6[8 * (v22 >> 6)]) == 0)
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v21) >> 6;
      while (++v23 != v26 || (v25 & 1) == 0)
      {
        BOOL v27 = v23 == v26;
        if (v23 == v26) {
          unint64_t v23 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)&v6[8 * v23];
        if (v28 != -1)
        {
          unint64_t v24 = __clz(__rbit64(~v28)) + (v23 << 6);
          goto LABEL_38;
        }
      }
      __break(1u);
LABEL_42:
      __break(1u);
      goto LABEL_43;
    }
    unint64_t v24 = __clz(__rbit64((-1 << v22) & ~*(void *)&v6[8 * (v22 >> 6)])) | v22 & 0x7FFFFFFFFFFFFFC0;
LABEL_38:
    *(void *)&v6[(v24 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v24;
    uint64_t v29 = v2[6] + 40 * v24;
    *(_OWORD *)uint64_t v29 = v32;
    *(_OWORD *)(v29 + 16) = v33;
    *(void *)(v29 + 32) = v34;
    sub_39104(&v36, (_OWORD *)(v2[7] + 32 * v24));
    ++v2[2];
    if (v5) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v10 = v7 + 1;
    if (__OFADD__(v7, 1)) {
      goto LABEL_42;
    }
    if (v10 >= v30) {
      goto LABEL_40;
    }
    unint64_t v11 = *(void *)(v31 + 8 * v10);
    int64_t v12 = v7 + 1;
    if (!v11)
    {
      sub_6D504();
      if (v13 == v14) {
        goto LABEL_40;
      }
      sub_6D4F8();
      if (!v11)
      {
        sub_6D504();
        if (v13 == v14) {
          goto LABEL_40;
        }
        sub_6D4F8();
        if (!v11)
        {
          sub_6D504();
          if (v13 == v14) {
            goto LABEL_40;
          }
          sub_6D4F8();
          if (!v11) {
            break;
          }
        }
      }
    }
LABEL_28:
    unint64_t v5 = (v11 - 1) & v11;
    unint64_t v9 = __clz(__rbit64(v11)) + (v12 << 6);
    int64_t v7 = v12;
  }
  int64_t v16 = v15 + 4;
  if (v16 >= v30)
  {
LABEL_40:
    swift_release();
    sub_390F8();
    return;
  }
  unint64_t v11 = *(void *)(v31 + 8 * v16);
  if (v11)
  {
    int64_t v12 = v16;
    goto LABEL_28;
  }
  while (!__OFADD__(v16, 1))
  {
    sub_6D504();
    if (v13 == v14) {
      goto LABEL_40;
    }
    sub_6D4F8();
    int64_t v16 = v17 + 1;
    if (v11) {
      goto LABEL_28;
    }
  }
LABEL_43:
  __break(1u);
}

uint64_t sub_6B4F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  swift_bridgeObjectRetain();
  int v12 = sub_25C44(a3, a4);
  if ((v12 - 2) >= 2)
  {
    if (v12) {
      uint64_t v15 = (unsigned int *)&enum case for UnsupportedValueBehavior.punchOutWithCommand(_:);
    }
    else {
      uint64_t v15 = (unsigned int *)&enum case for UnsupportedValueBehavior.dialogAndStop(_:);
    }
    uint64_t v16 = *v15;
    sub_8D770();
    sub_4E008();
    uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 104);
    return v19(a6, v16, v17);
  }
  else
  {
    sub_48AC(&qword_BED80);
    char v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, void *, uint64_t))sub_8D4A0();
    return v13(a1, a2, a3, a4, a5);
  }
}

uint64_t sub_6B634(uint64_t a1, void *a2)
{
  swift_bridgeObjectRetain();
  if (!sub_25C44(a1, a2)) {
    return 1;
  }
  sub_48AC(&qword_BED80);
  uint64_t v4 = (uint64_t (*)(uint64_t, void *))sub_8D4A0();

  return v4(a1, a2);
}

uint64_t sub_6B6D4()
{
  uint64_t v1 = sub_8E460();
  uint64_t v2 = sub_1CCBC(v1);
  __chkstk_darwin(v2);
  sub_AAA8();
  uint64_t v3 = sub_8D790();
  uint64_t v4 = sub_1CCBC(v3);
  __chkstk_darwin(v4);
  sub_6D4B4();
  sub_8D070();
  sub_8D8C0();
  sub_8D780();
  type metadata accessor for SendAnnouncementCATs();
  sub_8E450();
  uint64_t v5 = sub_8E360();
  type metadata accessor for AppInfoBuilder();
  uint64_t v6 = swift_allocObject();
  return sub_6D074(v0, (uint64_t)v9, v8, v5, v6);
}

uint64_t sub_6B7D0()
{
  return sub_8D6A0();
}

uint64_t sub_6B80C()
{
  uint64_t v0 = sub_6B6D4();
  sub_8D8C0();
  type metadata accessor for SendAnnouncementAceViewProvider();
  swift_allocObject();
  return sub_4BFD4(v0, (uint64_t)v2);
}

uint64_t sub_6B864@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_8D8B0();
  sub_5190();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_AAA8();
  uint64_t v10 = v9 - v8;
  uint64_t v11 = sub_48AC(&qword_BBF00);
  uint64_t v12 = sub_1CCBC(v11);
  __chkstk_darwin(v12);
  sub_AAA8();
  uint64_t v15 = v14 - v13;
  uint64_t v16 = sub_8CF30();
  sub_5190();
  uint64_t v18 = v17;
  __chkstk_darwin(v19);
  sub_AAA8();
  uint64_t v28 = v21 - v20;
  if (qword_BB830 != -1) {
    swift_once();
  }
  uint64_t v22 = sub_8E730();
  sub_50FC(v22, (uint64_t)qword_BFEC8);
  unint64_t v23 = sub_8E710();
  os_log_type_t v24 = sub_8EB00();
  if (os_log_type_enabled(v23, v24))
  {
    char v25 = (uint8_t *)sub_CCE4();
    *(_WORD *)char v25 = 0;
    _os_log_impl(&dword_0, v23, v24, "#SendAnnouncementRCHFlowDelegate makeConfirmationStateFromParse", v25, 2u);
    sub_CC2C();
  }

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v10, a1, v4);
  sub_7365C(v10, v15);
  uint64_t v26 = type metadata accessor for SmsNLIntent();
  if (_s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0(v15, 1, v26) == 1)
  {
    sub_4DF64(v15, &qword_BBF00);
    return (*(uint64_t (**)(uint64_t, void, uint64_t))(v18 + 104))(a2, enum case for SiriKitConfirmationState.unset(_:), v16);
  }
  else
  {
    sub_73C34(v28);
    sub_5134(v15);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 32))(a2, v28, v16);
  }
}

uint64_t sub_6BB08(uint64_t a1, void *a2)
{
  uint64_t v4 = v2;
  uint64_t v77 = a2;
  uint64_t v6 = sub_48AC(&qword_BE7F8);
  uint64_t v7 = sub_1CCBC(v6);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v71 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v13 = (char *)&v71 - v12;
  __chkstk_darwin(v11);
  uint64_t v78 = (uint64_t)&v71 - v14;
  uint64_t v15 = sub_8D8B0();
  sub_5190();
  uint64_t v17 = v16;
  __chkstk_darwin(v18);
  sub_6D4B4();
  uint64_t v19 = sub_8E1C0();
  sub_5190();
  uint64_t v21 = v20;
  __chkstk_darwin(v22);
  sub_AAA8();
  uint64_t v25 = v24 - v23;
  uint64_t v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16);
  uint64_t v76 = a1;
  v26(v3, a1, v15);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v17 + 88))(v3, v15) == enum case for Parse.NLv3IntentPlusServerConversion(_:))
  {
    uint64_t v75 = v13;
    (*(void (**)(uint64_t, uint64_t))(v17 + 96))(v3, v15);
    sub_48AC(&qword_BCDA8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 32))(v25, v3, v19);
    if (qword_BB830 != -1) {
      swift_once();
    }
    uint64_t v27 = sub_8E730();
    uint64_t v28 = (void *)sub_50FC(v27, (uint64_t)qword_BFEC8);
    swift_retain();
    uint64_t v29 = sub_8E710();
    os_log_type_t v30 = sub_8EB00();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = sub_1CBDC();
      id v71 = v28;
      long long v32 = (uint8_t *)v31;
      uint64_t v33 = swift_slowAlloc();
      uint64_t v73 = (void *)v19;
      uint64_t v34 = (void *)v33;
      uint64_t v72 = v10;
      uint64_t v74 = v25;
      *(_DWORD *)long long v32 = 138412290;
      uint64_t v35 = sub_8D8A0();
      v80[0] = v35;
      uint64_t v25 = v74;
      uint64_t v10 = v72;
      sub_8EBD0();
      *uint64_t v34 = v35;
      swift_release();
      _os_log_impl(&dword_0, v29, v30, "#SendAnnouncementRCHFlowDelegate Making a siriKit intent from parse: %@.", v32, 0xCu);
      sub_48AC(&qword_BD020);
      swift_arrayDestroy();
      sub_CC2C();
      sub_CC2C();
    }
    else
    {

      swift_release();
    }
    long long v36 = (void *)sub_8D8A0();
    self;
    uint64_t v37 = swift_dynamicCastObjCClass();
    if (v37)
    {
      sub_65A4C((int)v77, v37, v38, v39, v40, v41, v42, v43, v71, (uint64_t)v72, (uint64_t)v73, v74, (uint64_t)v75, v76, v37, v78, v79, v80[0], v80[1],
        v80[2],
        v80[3],
        v80[4]);
      uint64_t v44 = sub_98C0((void *)(v4 + qword_BED20), *(void *)(v4 + qword_BED20 + 24));
      uint64_t v45 = (uint64_t)v44 + *(int *)(type metadata accessor for SharedGlobals() + 28);
      uint64_t v46 = (uint64_t)v75;
      sub_5BE18(v45, (uint64_t)v75);
      uint64_t v47 = sub_8D230();
      if (_s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0(v46, 1, v47) == 1)
      {
        sub_8E270();
        if (sub_8E260())
        {
          sub_8E240();
          swift_release();
          sub_8D550();
          swift_release();
          uint64_t v48 = 0;
        }
        else
        {
          uint64_t v48 = 1;
        }
        _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(v78, v48, 1, v47);
        sub_4DF64((uint64_t)v75, &qword_BE7F8);
      }
      else
      {
        sub_4E008();
        uint64_t v54 = v78;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v53 + 32))(v78, v46, v47);
        _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(v54, 0, 1, v47);
      }
      sub_5BE18(v78, (uint64_t)v10);
      if (_s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0((uint64_t)v10, 1, v47) == 1)
      {
        sub_4DF64((uint64_t)v10, &qword_BE7F8);
      }
      else
      {
        uint64_t v76 = sub_8D220();
        unint64_t v56 = v55;
        sub_4E008();
        (*(void (**)(void))(v57 + 8))();
        if (v56)
        {
          uint64_t v75 = (char *)v21;
          swift_bridgeObjectRetain_n();
          uint64_t v58 = sub_8E710();
          os_log_type_t v59 = sub_8EB00();
          if (os_log_type_enabled(v58, v59))
          {
            uint64_t v74 = v25;
            uint64_t v60 = sub_1CBDC();
            uint64_t v73 = v36;
            unint64_t v61 = (uint8_t *)v60;
            v80[0] = swift_slowAlloc();
            *(_DWORD *)unint64_t v61 = 136315138;
            swift_bridgeObjectRetain();
            uint64_t v62 = v76;
            uint64_t v79 = sub_8758C(v76, v56, v80);
            uint64_t v25 = v74;
            sub_8EBD0();
            swift_bridgeObjectRelease_n();
            _os_log_impl(&dword_0, v58, v59, "#SendAnnouncementRCHFlowDelegate sharedUserID: %s", v61, 0xCu);
            swift_arrayDestroy();
            sub_CC2C();
            long long v36 = v73;
            sub_CC2C();
          }
          else
          {

            swift_bridgeObjectRelease_n();
            uint64_t v62 = v76;
          }
          uint64_t v67 = v77;
          sub_6CFB0(v62, v56, v77);
LABEL_27:
          sub_8D070();
          long long v52 = sub_630DC(v25, v67, v80);
          swift_release();

          sub_4950((uint64_t)v80);
          sub_4DF64(v78, &qword_BE7F8);
          uint64_t v68 = sub_6D4E4();
          v69(v68);
          return (uint64_t)v52;
        }
      }
      unint64_t v63 = sub_8E710();
      os_log_type_t v64 = sub_8EB00();
      if (os_log_type_enabled(v63, v64))
      {
        *(_WORD *)sub_CCE4() = 0;
        sub_1CA90(&dword_0, v65, v66, "#SendAnnouncementRCHFlowDelegate not sharedUserID was found");
        sub_CC2C();
      }

      uint64_t v67 = v77;
      goto LABEL_27;
    }

    swift_release();
    uint64_t v49 = sub_6D4E4();
    v50(v49);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v3, v15);
  }
  sub_48AC(&qword_BED80);
  uint64_t v51 = (uint64_t (*)(uint64_t, void *))sub_8D4A0();
  return v51(v76, v77);
}

uint64_t sub_6C29C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for ErrorDialogBehavior.openAppButton(_:);
  sub_8D4C0();
  sub_4E008();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 104);

  return v5(a1, v2, v3);
}

uint64_t sub_6C30C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = v7;
  swift_bridgeObjectRetain();
  if (sub_25C44(a3, a4) != 1) {
    goto LABEL_37;
  }
  uint64_t v71 = a1;
  uint64_t v72 = a2;
  uint64_t v73 = a3;
  uint64_t v16 = sub_2EE0C();
  unint64_t v17 = (unint64_t)sub_6D5C8(v16);
  if (!v17)
  {
    swift_bridgeObjectRelease();
    if (qword_BB830 == -1)
    {
LABEL_21:
      uint64_t v32 = sub_8E730();
      sub_50FC(v32, (uint64_t)qword_BFEC8);
      uint64_t v33 = sub_8E710();
      os_log_type_t v34 = sub_8EB10();
      if (os_log_type_enabled(v33, v34))
      {
        *(_WORD *)sub_CCE4() = 0;
        sub_1CA90(&dword_0, v35, v36, "Disambiguating items were not of type INHomeFilter");
        sub_CC2C();
      }

      goto LABEL_36;
    }
LABEL_52:
    swift_once();
    goto LABEL_21;
  }
  unint64_t v18 = v17;
  uint64_t v68 = (void (*)(void))a6;
  if (v17 >> 62)
  {
    swift_bridgeObjectRetain();
    a6 = sub_8ED40();
  }
  else
  {
    a6 = *(void *)((char *)&dword_10 + (v17 & 0xFFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain();
  }
  uint64_t v69 = a7;
  uint64_t v70 = (uint8_t *)v16;
  uint64_t v66 = a5;
  uint64_t v67 = v8;
  uint64_t v65 = a4;
  if (!a6)
  {
    uint64_t v20 = (char *)_swiftEmptyArrayStorage;
    goto LABEL_25;
  }
  if (a6 < 1)
  {
    __break(1u);
    goto LABEL_52;
  }
  uint64_t v19 = 0;
  uint64_t v20 = (char *)_swiftEmptyArrayStorage;
  do
  {
    if ((v18 & 0xC000000000000001) != 0) {
      id v21 = (id)sub_8EC70();
    }
    else {
      id v21 = *(id *)(v18 + 8 * v19 + 32);
    }
    uint64_t v22 = v21;
    id v23 = [v21 home];
    if (v23)
    {
      uint64_t v24 = v23;
      id v25 = [v23 spokenPhrase];

      uint64_t v26 = sub_8E8D0();
      uint64_t v28 = v27;

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v20 = sub_768FC(0, *((void *)v20 + 2) + 1, 1, (uint64_t)v20);
      }
      unint64_t v30 = *((void *)v20 + 2);
      unint64_t v29 = *((void *)v20 + 3);
      if (v30 >= v29 >> 1) {
        uint64_t v20 = sub_768FC((char *)(v29 > 1), v30 + 1, 1, (uint64_t)v20);
      }
      *((void *)v20 + 2) = v30 + 1;
      uint64_t v31 = &v20[16 * v30];
      *((void *)v31 + 4) = v26;
      *((void *)v31 + 5) = v28;
    }
    else
    {
    }
    ++v19;
  }
  while (a6 != v19);
LABEL_25:
  swift_bridgeObjectRelease_n();
  if (*((void *)v20 + 2) < 2uLL)
  {
    swift_bridgeObjectRelease();
    if (qword_BB830 != -1) {
      swift_once();
    }
    uint64_t v37 = sub_8E730();
    sub_50FC(v37, (uint64_t)qword_BFEC8);
    swift_bridgeObjectRetain();
    int v38 = sub_8E710();
    os_log_type_t v39 = sub_8EB10();
    a4 = v65;
    a5 = v66;
    if (os_log_type_enabled(v38, v39))
    {
      int v40 = (uint8_t *)sub_1CBDC();
      v75[0] = swift_slowAlloc();
      *(_DWORD *)int v40 = 136315138;
      uint64_t v70 = v40 + 4;
      swift_bridgeObjectRetain();
      uint64_t v41 = sub_8EA40();
      unint64_t v43 = v42;
      swift_bridgeObjectRelease();
      uint64_t v44 = sub_8758C(v41, v43, v75);
      sub_6D510(v44);
      sub_8EBD0();
      sub_6D4CC();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v38, v39, "Error disambiguating between no homes or single home : %s", v40, 0xCu);
      swift_arrayDestroy();
      sub_CC2C();
      sub_CC2C();
    }
    else
    {

      sub_6D4CC();
    }
    a6 = (uint64_t)v68;
    a7 = v69;
LABEL_36:
    a2 = v72;
    a3 = v73;
    a1 = v71;
LABEL_37:
    sub_48AC(&qword_BED80);
    uint64_t v54 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, void *, uint64_t, uint64_t, uint64_t))sub_8D4A0();
    return v54(a1, a2, a3, a4, a5, a6, a7);
  }
  if (qword_BB830 != -1) {
    swift_once();
  }
  uint64_t v45 = sub_8E730();
  uint64_t v46 = sub_50FC(v45, (uint64_t)qword_BFEC8);
  swift_bridgeObjectRetain_n();
  uint64_t v47 = sub_8E710();
  os_log_type_t v48 = sub_8EB00();
  if (os_log_type_enabled(v47, v48))
  {
    uint64_t v73 = v46;
    uint64_t v49 = (uint8_t *)sub_1CBDC();
    v75[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v49 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v50 = sub_8EA40();
    unint64_t v52 = v51;
    swift_bridgeObjectRelease();
    uint64_t v53 = sub_8758C(v50, v52, v75);
    sub_6D510(v53);
    sub_8EBD0();
    sub_6D4CC();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v47, v48, "Disambiguating between homes : %s", v49, 0xCu);
    swift_arrayDestroy();
    sub_CC2C();
    sub_CC2C();
  }
  else
  {

    sub_6D4CC();
  }
  if (qword_BB7E8 != -1) {
    swift_once();
  }
  uint64_t v56 = qword_BFE50;
  v75[3] = sub_48AC(&qword_BC760);
  unint64_t v57 = sub_22080();
  v75[4] = v57;
  v75[0] = v56;
  if (*(unsigned char *)(v67 + qword_BED28) == 1)
  {
    swift_retain_n();
    uint64_t v58 = sub_8E710();
    os_log_type_t v59 = sub_8EB00();
    if (os_log_type_enabled(v58, v59))
    {
      uint64_t v60 = (uint8_t *)sub_CCE4();
      *(_WORD *)uint64_t v60 = 0;
      _os_log_impl(&dword_0, v58, v59, "#SendAnnouncementRCHFlowDelegate isDirectInvocation in SiriX path", v60, 2u);
      sub_CC2C();
    }

    uint64_t v74 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain();
    sub_8ECE0();
    uint64_t v61 = *((void *)v20 + 2);
    swift_bridgeObjectRetain();
    if (v61)
    {
      uint64_t v62 = 0;
      unint64_t v63 = v20 + 40;
      do
      {
        swift_bridgeObjectRetain();
        sub_6CB4C(v62);
        swift_bridgeObjectRelease();
        sub_8ECC0();
        sub_8ECF0();
        sub_8ED00();
        sub_8ECD0();
        v63 += 16;
        ++v62;
      }
      while (v61 != v62);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    __chkstk_darwin(v57);
    void v64[2] = v75;
    swift_retain_n();
    sub_6AFFC((void (*)(uint64_t *__return_ptr, void *))sub_6D014, (uint64_t)v64, (uint64_t)v20);
  }
  sub_4950((uint64_t)v75);
  swift_release();
  swift_bridgeObjectRelease();
  sub_8CF90();
  swift_allocObject();
  sub_8CF80();
  v68();
  return swift_release();
}

uint64_t sub_6CB4C(uint64_t a1)
{
  sub_48AC(&qword_BE5D0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_8FA10;
  if (qword_BB7F8 != -1) {
    swift_once();
  }
  uint64_t v3 = unk_BFE90;
  *(void *)(inited + 32) = qword_BFE88;
  *(void *)(inited + 40) = v3;
  *(void *)(inited + 48) = a1;
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_8E880();
  sub_6D034();
  id v5 = sub_6B100();
  sub_6B174(v4);
  uint64_t v7 = v6;
  swift_bridgeObjectRelease();
  sub_6CF30(v7, v5);
  sub_8D000();
  sub_8CFE0();
  uint64_t v8 = sub_8CFF0();
  swift_release();
  sub_48AC(&qword_BE170);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_8FC30;
  *(void *)(v9 + 32) = v8;
  sub_8EA50();
  sub_8CF60();
  swift_allocObject();
  return sub_8CF40();
}

uint64_t sub_6CCF4@<X0>(void *a1@<X1>, uint64_t *a2@<X8>)
{
  sub_8D000();
  sub_8CFE0();
  uint64_t v4 = sub_8CFF0();
  swift_release();
  sub_8D690();
  swift_allocObject();
  sub_8D680();
  sub_98C0(a1, a1[3]);
  sub_8DC10();
  sub_8D660();
  swift_release();
  swift_bridgeObjectRelease();
  sub_8D670();
  swift_release();
  sub_48AC(&qword_BE170);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_8FC30;
  *(void *)(v5 + 32) = v4;
  sub_8EA50();
  sub_8CF60();
  swift_allocObject();
  uint64_t result = sub_8CF50();
  *a2 = result;
  return result;
}

void sub_6CE58()
{
}

uint64_t sub_6CE88()
{
  sub_4950(v0 + qword_BED18);
  uint64_t v1 = v0 + qword_BED20;

  return sub_4950(v1);
}

uint64_t sub_6CEC8()
{
  uint64_t v0 = sub_8D4B0();
  sub_4950(v0 + qword_BED18);
  sub_4950(v0 + qword_BED20);

  return _swift_deallocClassInstance(v0, 97, 7);
}

uint64_t sub_6CF28()
{
  return type metadata accessor for SendAnnouncementRCHFlowDelegate();
}

void sub_6CF30(uint64_t a1, void *a2)
{
  Class isa = sub_8E860().super.isa;
  swift_bridgeObjectRelease();
  [a2 setUserData:isa];
}

void sub_6CFB0(uint64_t a1, uint64_t a2, void *a3)
{
  NSString v4 = sub_8E8C0();
  swift_bridgeObjectRelease();
  [a3 setSharedUserID:v4];
}

uint64_t sub_6D014@<X0>(uint64_t *a1@<X8>)
{
  return sub_6CCF4(*(void **)(v1 + 16), a1);
}

unint64_t sub_6D034()
{
  unint64_t result = qword_BE5D8;
  if (!qword_BE5D8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_BE5D8);
  }
  return result;
}

uint64_t sub_6D074(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v32 = a2;
  uint64_t v33 = a1;
  uint64_t v8 = sub_48AC(&qword_BC648);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_8CAE0();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for AppInfoBuilder();
  v37[3] = v15;
  void v37[4] = &off_B62E8;
  v37[0] = a5;
  type metadata accessor for SendAnnouncementTemplatingService();
  uint64_t v16 = swift_allocObject();
  uint64_t v17 = sub_C9A4((uint64_t)v37, v15);
  __chkstk_darwin(v17);
  uint64_t v19 = (uint64_t *)((char *)&v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v20 + 16))(v19);
  uint64_t v21 = *v19;
  v36[3] = v15;
  v36[4] = &off_B62E8;
  v36[0] = v21;
  sub_5BDB8((uint64_t)a3, v16 + qword_BED90);
  uint64_t v31 = a4;
  *(void *)(v16 + qword_BEDA0) = a4;
  sub_5BDB8((uint64_t)v36, v16 + qword_BED98);
  sub_98C0(a3, a3[3]);
  swift_retain();
  sub_8D080();
  uint64_t v22 = sub_8CAD0();
  uint64_t v24 = v23;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  v35[0] = v22;
  v35[1] = v24;
  v34[0] = 45;
  v34[1] = 0xE100000000000000;
  v35[5] = 95;
  uint64_t v35[6] = 0xE100000000000000;
  sub_F5CC();
  sub_8EBF0();
  swift_bridgeObjectRelease();
  type metadata accessor for INIntentSlotValueType(0);
  sub_F618();
  sub_8E880();
  uint64_t v25 = v32;
  sub_5BDB8(v32, (uint64_t)v35);
  sub_5BDB8((uint64_t)a3, (uint64_t)v34);
  uint64_t v26 = sub_8D790();
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = v33;
  (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v10, v33, v26);
  _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0((uint64_t)v10, 0, 1, v26);
  uint64_t v29 = sub_8D500();
  swift_release();
  sub_4950((uint64_t)v36);
  sub_4950(v25);
  (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v28, v26);
  sub_4950((uint64_t)a3);
  sub_4950((uint64_t)v37);
  return v29;
}

uint64_t sub_6D4CC()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_6D4E4()
{
  return v0;
}

uint64_t sub_6D510(uint64_t a1)
{
  *(void *)(v1 - 144) = a1;
  return v1 - 144;
}

uint64_t type metadata accessor for SendAnnouncementTemplatingService()
{
  uint64_t result = qword_BEDA8;
  if (!qword_BEDA8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_6D56C()
{
  return swift_initClassMetadata2();
}

void *sub_6D5C8(uint64_t a1)
{
  uint64_t v6 = _swiftEmptyArrayStorage;
  uint64_t v2 = *(void *)(a1 + 16);
  sub_8ECE0();
  if (!v2) {
    return v6;
  }
  for (uint64_t i = a1 + 32; ; i += 32)
  {
    sub_12FA8(i, (uint64_t)v5);
    sub_2E7F8();
    if (!swift_dynamicCast()) {
      break;
    }
    sub_8ECC0();
    sub_8ECF0();
    sub_8ED00();
    sub_8ECD0();
    if (!--v2) {
      return v6;
    }
  }
  swift_release();

  return 0;
}

uint64_t sub_6D6C4(uint64_t a1, void *a2, uint64_t a3)
{
  if (qword_BB830 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_8E730();
  sub_50FC(v5, (uint64_t)qword_BFEC8);
  uint64_t v6 = sub_8E710();
  os_log_type_t v7 = sub_8EB00();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl(&dword_0, v6, v7, "Making an intent handled dialog that indicates an announcement has been sent.", v8, 2u);
    swift_slowDealloc();
  }

  id v9 = [a2 isReply];
  if (v9)
  {
    uint64_t v10 = v9;
    char v11 = [v9 BOOLValue];

    if (a3)
    {
LABEL_7:
      uint64_t v12 = sub_2E8BC();
      uint64_t v13 = swift_bridgeObjectRetain();
      sub_2DE0C(v13);
      uint64_t v14 = *(void *)(v12 + 16);
      swift_bridgeObjectRelease();
      char v15 = v14 != 0;
      uint64_t v16 = sub_2E8C8();
      sub_2DE0C(v16);
      uint64_t v17 = sub_2E8D4();
      sub_2DE0C(v17);
      goto LABEL_10;
    }
  }
  else
  {
    char v11 = 0;
    if (a3) {
      goto LABEL_7;
    }
  }
  char v15 = 0;
LABEL_10:
  sub_4D790((uint64_t)_swiftEmptyArrayStorage, v15, v11);

  return swift_bridgeObjectRelease();
}

uint64_t sub_6D8AC(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  swift_bridgeObjectRetain();
  if (sub_25C44(a2, a3))
  {
    sub_48AC(&qword_BEDF8);
    uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, void *, uint64_t, uint64_t, uint64_t))sub_8D510();
    return v12(a1, a2, a3, a4, a5, a6);
  }
  else
  {
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = a5;
    *(void *)(v14 + 24) = a6;
    swift_retain();
    sub_4DA40();
    return swift_release();
  }
}

uint64_t sub_6D9E0(uint64_t a1, void (*a2)(char *))
{
  uint64_t v3 = sub_8D560();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (uint64_t *)((char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_48AC(&qword_BC660);
  __chkstk_darwin(v7);
  id v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t *v6 = sub_8E8D0();
  v6[1] = v10;
  (*(void (**)(uint64_t *, void, uint64_t))(v4 + 104))(v6, enum case for BehaviorAfterSpeaking.dingAndListen(_:), v3);
  sub_8EF30();
  (*(void (**)(uint64_t *, uint64_t))(v4 + 8))(v6, v3);
  a2(v9);
  return sub_6C1C((uint64_t)v9, &qword_BC660);
}

void sub_6DB78(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v14 = sub_48AC(&qword_BD490);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_8E3D0();
  sub_5190();
  uint64_t v50 = v18;
  uint64_t v20 = __chkstk_darwin(v19);
  unint64_t v51 = (char *)v44 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v49 = (char *)v44 - v22;
  swift_bridgeObjectRetain();
  if (sub_25C44(a2, a3) != 1
    || (v23 = sub_2EE0C(), unint64_t v24 = (unint64_t)sub_6D5C8(v23), swift_bridgeObjectRelease(), !v24))
  {
    if (qword_BB830 != -1) {
      swift_once();
    }
    uint64_t v37 = sub_8E730();
    sub_50FC(v37, (uint64_t)qword_BFEC8);
    int v38 = sub_8E710();
    os_log_type_t v39 = sub_8EB10();
    if (os_log_type_enabled(v38, v39))
    {
      int v40 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)int v40 = 0;
      _os_log_impl(&dword_0, v38, v39, "Disambiguating items were not of type INHomeFilter or incorrect slot set", v40, 2u);
      swift_slowDealloc();
    }

    sub_4D768();
    goto LABEL_30;
  }
  uint64_t v45 = v9;
  uint64_t v46 = a9;
  v44[1] = a7;
  if (v24 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v25 = sub_8ED40();
  }
  else
  {
    uint64_t v25 = *(void *)((char *)&dword_10 + (v24 & 0xFFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain();
  }
  uint64_t v47 = a8;
  if (!v25)
  {
    uint64_t v28 = _swiftEmptyArrayStorage;
LABEL_29:
    swift_bridgeObjectRelease_n();
    uint64_t v41 = v45;
    unint64_t v42 = sub_2E390();
    sub_8E430();
    sub_C940(v41 + qword_BED90, (uint64_t)v52);
    uint64_t v43 = sub_8E420();
    sub_4D4C0((uint64_t)v42, (uint64_t)v28, v43);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
LABEL_30:
    sub_2224C();
    return;
  }
  if (v25 >= 1)
  {
    uint64_t v26 = 0;
    uint64_t v27 = (void (**)(void))(v50 + 32);
    uint64_t v28 = _swiftEmptyArrayStorage;
    uint64_t v48 = v25;
    do
    {
      if ((v24 & 0xC000000000000001) != 0) {
        id v29 = (id)sub_8EC70();
      }
      else {
        id v29 = *(id *)(v24 + 8 * v26 + 32);
      }
      unint64_t v30 = v29;
      id v31 = [v29 home];
      if (v31)
      {
        uint64_t v32 = v31;
        sub_8EB20();

        uint64_t v33 = 0;
      }
      else
      {
        uint64_t v33 = 1;
      }
      _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0((uint64_t)v16, v33, 1, v17);

      if (_s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0((uint64_t)v16, 1, v17) == 1)
      {
        sub_6C1C((uint64_t)v16, &qword_BD490);
      }
      else
      {
        os_log_type_t v34 = *v27;
        sub_6E968();
        v34();
        sub_6E968();
        v34();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v28 = (void *)sub_76D88(0, v28[2] + 1, 1, (uint64_t)v28);
        }
        unint64_t v36 = v28[2];
        unint64_t v35 = v28[3];
        if (v36 >= v35 >> 1) {
          uint64_t v28 = (void *)sub_76D88(v35 > 1, v36 + 1, 1, (uint64_t)v28);
        }
        void v28[2] = v36 + 1;
        sub_6E968();
        v34();
        uint64_t v25 = v48;
      }
      ++v26;
    }
    while (v25 != v26);
    goto LABEL_29;
  }
  __break(1u);
}

void sub_6DFEC(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v15 = sub_48AC(&qword_BD490);
  __chkstk_darwin(v15 - 8);
  sub_48228();
  swift_bridgeObjectRetain();
  int v16 = sub_25C44(a2, a3);
  if ((v16 - 2) < 2)
  {
    sub_48AC(&qword_BEDF8);
    sub_8D510();
    sub_2224C();
    __asm { BRAA            X8, X16 }
  }
  if (!v16)
  {
    if ([a4 unsupportedReason] == (char *)&dword_0 + 1)
    {
      sub_6E944();
      sub_4DA68();
    }
    goto LABEL_16;
  }
  uint64_t v19 = (int *)[a4 unsupportedReason];
  if (v19 == &dword_4)
  {
    sub_4D6C8((uint64_t)_swiftEmptyArrayStorage, a8, a9, v20);
    goto LABEL_16;
  }
  if (v19 == (int *)((char *)&dword_0 + 2))
  {
    uint64_t v23 = sub_2DF98();
    sub_76678(v23, v10);
    swift_bridgeObjectRelease();
    sub_8E430();
    sub_C940(v9 + qword_BED90, (uint64_t)v25);
    uint64_t v24 = sub_8E420();
    sub_4DA90(v10, v24);
    swift_release();
    sub_6C1C(v10, &qword_BD490);
    goto LABEL_16;
  }
  if (v19 != (int *)((char *)&dword_0 + 1))
  {
LABEL_16:
    sub_2224C();
    return;
  }
  uint64_t v21 = sub_2E2C4();
  sub_4DC40((uint64_t)v21, a8, a9);
  sub_2224C();
  swift_bridgeObjectRelease();
}

char *sub_6E280(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  swift_bridgeObjectRetain();
  if (sub_25C44(a2, a3))
  {
    sub_48AC(&qword_BEDF8);
    uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t, void *, void *, uint64_t, uint64_t, uint64_t))sub_8D510();
    return (char *)v14(a1, a2, a3, a4, a5, a6, a7);
  }
  else
  {
    uint64_t result = (char *)[a4 confirmationReason];
    if (result == (unsigned char *)&dword_0 + 1)
    {
      int v16 = sub_6E978();
      uint64_t v17 = *(void *)(sub_2DF8C() + 16);
      swift_bridgeObjectRelease();
      sub_4D3D8((uint64_t)v16, v17 != 0);
      return (char *)swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_6E3D8(uint64_t a1, uint64_t a2, id a3, uint64_t a4, uint64_t a5)
{
  switch((unint64_t)[a3 code])
  {
    case 6uLL:
      sub_6E978();
      sub_6E954();
      sub_4D6F0(v10, v11, v12, v13);
      goto LABEL_9;
    case 7uLL:
      sub_6E978();
      sub_6E954();
      sub_4D6C8(v16, v17, v18, v19);
      goto LABEL_9;
    case 8uLL:
      sub_6E944();
      return sub_4D740();
    case 9uLL:
      sub_6E978();
      sub_6E954();
      sub_4D674(v20, v21, v22);
LABEL_9:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    case 0xAuLL:
      sub_6E944();
      uint64_t result = sub_4D5FC();
      break;
    case 0xBuLL:
      sub_6E944();
      uint64_t result = sub_4D6A0();
      break;
    case 0xCuLL:
      sub_6E944();
      uint64_t result = sub_4D718();
      break;
    case 0xDuLL:
      sub_6E944();
      uint64_t result = sub_4D624();
      break;
    case 0xEuLL:
      sub_6E944();
      uint64_t result = sub_4D64C();
      break;
    default:
      sub_48AC(&qword_BEDF8);
      uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t, id, uint64_t, uint64_t))sub_8D510();
      uint64_t result = v14(a1, a2, a3, a4, a5);
      break;
  }
  return result;
}

uint64_t sub_6E5BC()
{
  return sub_4D768();
}

void sub_6E5F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v16[0] = a2;
  v16[1] = a3;
  uint64_t v5 = sub_8CAE0();
  sub_5190();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_48AC(&qword_BD490);
  __chkstk_darwin(v11 - 8);
  sub_48228();
  sub_98C0((void *)(v3 + qword_BED98), *(void *)(v3 + qword_BED98 + 24));
  sub_98C0((void *)(v3 + qword_BED90), *(void *)(v3 + qword_BED90 + 24));
  sub_8D080();
  sub_2EEBC();
  uint64_t v13 = v12;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v5);
  if (v13)
  {
    swift_bridgeObjectRetain();
    sub_8E3B0();
    uint64_t v14 = sub_8E3D0();
    _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(v4, 0, 1, v14);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v15 = sub_8E3D0();
    _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(v4, 1, 1, v15);
  }
  sub_4D8BC(v4);
  sub_6C1C(v4, &qword_BD490);
  sub_2224C();
}

void sub_6E7C4()
{
}

void sub_6E7F4()
{
}

uint64_t sub_6E824()
{
  sub_4950(v0 + qword_BED90);
  sub_4950(v0 + qword_BED98);

  return swift_release();
}

uint64_t sub_6E874()
{
  uint64_t v0 = sub_8D520();
  sub_4950(v0 + qword_BED90);
  sub_4950(v0 + qword_BED98);
  swift_release();
  return v0;
}

uint64_t sub_6E8CC()
{
  uint64_t v0 = sub_6E874();

  return _swift_deallocClassInstance(v0, 104, 7);
}

uint64_t sub_6E8FC()
{
  return type metadata accessor for SendAnnouncementTemplatingService();
}

uint64_t sub_6E904()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_6E93C(uint64_t a1)
{
  return sub_6D9E0(a1, *(void (**)(char *))(v1 + 16));
}

uint64_t sub_6E944()
{
  return v0;
}

void *sub_6E978()
{
  return sub_2E2C4();
}

uint64_t sub_6E990()
{
  sub_CC60();
  v1[12] = v2;
  v1[13] = v0;
  v1[11] = v3;
  uint64_t v4 = sub_8D4E0();
  v1[14] = v4;
  sub_CB1C(v4);
  v1[15] = v5;
  v1[16] = sub_CBA4();
  uint64_t v6 = sub_48AC(&qword_BE5E0);
  v1[17] = v6;
  sub_CB1C(v6);
  v1[18] = v7;
  v1[19] = sub_CBA4();
  sub_46200();
  return _swift_task_switch(v8, v9, v10);
}

uint64_t sub_6EA54()
{
  uint64_t v41 = v0;
  if (qword_BB830 != -1) {
    swift_once();
  }
  uint64_t v2 = v0[18];
  uint64_t v1 = v0[19];
  uint64_t v3 = v0[17];
  uint64_t v4 = v0[12];
  uint64_t v5 = sub_8E730();
  v0[20] = sub_50FC(v5, (uint64_t)qword_BFEC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  uint64_t v6 = sub_8E710();
  os_log_type_t v7 = sub_8EB00();
  if (sub_463A0(v7))
  {
    os_log_type_t type = v3;
    uint64_t v8 = v0[15];
    uint64_t v9 = v0[16];
    uint64_t v37 = v0[14];
    log = v6;
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v40 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136315138;
    sub_8D7D0();
    uint64_t v11 = sub_8D4D0();
    unint64_t v13 = v12;
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v9, v37);
    v0[10] = sub_8758C(v11, v13, &v40);
    sub_8EBD0();
    swift_bridgeObjectRelease();
    uint64_t v14 = sub_721C0();
    v15(v14);
    uint64_t v6 = log;
    _os_log_impl(&dword_0, log, type, "#SendAnnouncementIntentHandledStrategy makeUnsupportedValueOutput for %s", v10, 0xCu);
    swift_arrayDestroy();
    sub_CC2C();
    sub_CC2C();
  }
  else
  {
    uint64_t v16 = sub_721C0();
    v17(v16);
  }

  uint64_t v18 = v0[16];
  uint64_t v19 = v0[14];
  uint64_t v20 = v0[15];
  sub_8D7D0();
  uint64_t v21 = sub_8D4D0();
  uint64_t v23 = v22;
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
  int v24 = sub_25C44(v21, v23);
  if ((v24 - 2) >= 2)
  {
    if (v24)
    {
      unint64_t v35 = (void *)swift_task_alloc();
      v0[21] = v35;
      *unint64_t v35 = v0;
      v35[1] = sub_6EE38;
      sub_720C4(v0[12]);
      sub_72088();
      return sub_70E68();
    }
    else
    {
      uint64_t v33 = (void *)swift_task_alloc();
      v0[22] = v33;
      *uint64_t v33 = v0;
      v33[1] = sub_6F128;
      sub_720C4(v0[12]);
      sub_72088();
      return sub_717C4();
    }
  }
  else
  {
    uint64_t v25 = (void *)sub_8E710();
    os_log_type_t v26 = sub_8EB00();
    if (sub_463A0(v26))
    {
      uint64_t v27 = (_WORD *)sub_CCE4();
      sub_1CC78(v27);
      sub_5C000(&dword_0, v28, v29, "#SendAnnouncementIntentHandledStrategy dialogExecutionResult is nil - returning generic error");
      sub_CC2C();
    }

    unint64_t v30 = (void *)swift_task_alloc();
    v0[26] = v30;
    void *v30 = v0;
    v30[1] = sub_6F574;
    sub_72088();
    return sub_4EDBC();
  }
}

uint64_t sub_6EE38()
{
  sub_1425C();
  sub_7614();
  uint64_t v3 = v2;
  sub_461E4();
  *uint64_t v4 = v3;
  v3[2] = v1;
  v3[3] = v5;
  v3[4] = v0;
  uint64_t v6 = *v1;
  sub_CB34();
  *os_log_type_t v7 = v6;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v8 = *(uint64_t (**)(void))(v6 + 8);
    return v8();
  }
  else
  {
    sub_46200();
    return _swift_task_switch(v10, v11, v12);
  }
}

uint64_t sub_6EF60()
{
  sub_46458();
  uint64_t v1 = (void *)v0[3];
  v0[23] = v1;
  if (v1)
  {
    sub_8D3A0();
    sub_627D4();
    id v2 = v1;
    v0[9] = sub_8D390();
    sub_48AC(&qword_BE170);
    uint64_t v3 = (__n128 *)sub_462D4();
    sub_72138(v3, (__n128)xmmword_8FC30);
    v0[24] = v20;
    id v4 = v2;
    uint64_t v5 = (void *)swift_task_alloc();
    v0[25] = v5;
    *uint64_t v5 = v0;
    v5[1] = sub_6F418;
    sub_72120();
    sub_6282C();
    return dispatch thunk of ResponseGenerating.makeResponseOutput(dialog:outputGenerationManifest:)(v6, v7, v8, v9, v10);
  }
  else
  {
    uint64_t v12 = (void *)sub_8E710();
    os_log_type_t v13 = sub_8EB00();
    if (sub_463A0(v13))
    {
      uint64_t v14 = (_WORD *)sub_CCE4();
      sub_1CC78(v14);
      sub_5C000(&dword_0, v15, v16, "#SendAnnouncementIntentHandledStrategy dialogExecutionResult is nil - returning generic error");
      sub_CC2C();
    }

    uint64_t v17 = (void *)swift_task_alloc();
    v0[26] = v17;
    *uint64_t v17 = v0;
    v17[1] = sub_6F574;
    sub_6282C();
    return sub_4EDBC();
  }
}

uint64_t sub_6F128()
{
  sub_1425C();
  sub_7614();
  uint64_t v3 = v2;
  sub_461E4();
  *id v4 = v3;
  v3[5] = v1;
  v3[6] = v5;
  v3[7] = v0;
  uint64_t v6 = *v1;
  sub_CB34();
  *uint64_t v7 = v6;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v8 = *(uint64_t (**)(void))(v6 + 8);
    return v8();
  }
  else
  {
    sub_46200();
    return _swift_task_switch(v10, v11, v12);
  }
}

uint64_t sub_6F250()
{
  sub_46458();
  uint64_t v1 = (void *)v0[6];
  v0[23] = v1;
  if (v1)
  {
    sub_8D3A0();
    sub_627D4();
    id v2 = v1;
    v0[9] = sub_8D390();
    sub_48AC(&qword_BE170);
    uint64_t v3 = (__n128 *)sub_462D4();
    sub_72138(v3, (__n128)xmmword_8FC30);
    v0[24] = v20;
    id v4 = v2;
    uint64_t v5 = (void *)swift_task_alloc();
    v0[25] = v5;
    *uint64_t v5 = v0;
    v5[1] = sub_6F418;
    sub_72120();
    sub_6282C();
    return dispatch thunk of ResponseGenerating.makeResponseOutput(dialog:outputGenerationManifest:)(v6, v7, v8, v9, v10);
  }
  else
  {
    uint64_t v12 = (void *)sub_8E710();
    os_log_type_t v13 = sub_8EB00();
    if (sub_463A0(v13))
    {
      uint64_t v14 = (_WORD *)sub_CCE4();
      sub_1CC78(v14);
      sub_5C000(&dword_0, v15, v16, "#SendAnnouncementIntentHandledStrategy dialogExecutionResult is nil - returning generic error");
      sub_CC2C();
    }

    uint64_t v17 = (void *)swift_task_alloc();
    v0[26] = v17;
    *uint64_t v17 = v0;
    v17[1] = sub_6F574;
    sub_6282C();
    return sub_4EDBC();
  }
}

uint64_t sub_6F418()
{
  sub_CC60();
  sub_7614();
  uint64_t v1 = *v0;
  sub_CB34();
  *id v2 = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  sub_46200();
  return _swift_task_switch(v3, v4, v5);
}

uint64_t sub_6F4FC()
{
  sub_CC60();
  uint64_t v1 = *(void **)(v0 + 184);

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_46228();
  return v2();
}

uint64_t sub_6F574()
{
  sub_1425C();
  uint64_t v3 = v2;
  sub_7614();
  uint64_t v5 = v4;
  sub_461E4();
  void *v6 = v5;
  uint64_t v7 = *v1;
  sub_CB34();
  *uint64_t v8 = v7;
  *(void *)(v5 + 216) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(void *)(v5 + 224) = v3;
  }
  sub_46200();
  return _swift_task_switch(v9, v10, v11);
}

uint64_t sub_6F664()
{
  sub_46458();
  uint64_t v1 = (void *)v0[28];
  sub_8D3A0();
  sub_627D4();
  v0[8] = sub_8D390();
  sub_48AC(&qword_BE170);
  uint64_t v2 = sub_462D4();
  *(_OWORD *)(v2 + 16) = xmmword_8FC30;
  *(void *)(v2 + 32) = v1;
  uint64_t v12 = v2;
  sub_8EA50();
  v0[29] = v12;
  id v3 = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[30] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_6F78C;
  sub_6282C();
  return dispatch thunk of ResponseGenerating.makeResponseOutput(dialog:outputGenerationManifest:)(v5, v6, v7, v8, v9);
}

uint64_t sub_6F78C()
{
  sub_CC60();
  sub_7614();
  uint64_t v1 = *v0;
  sub_CB34();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  sub_46200();
  return _swift_task_switch(v3, v4, v5);
}

uint64_t sub_6F870()
{
  sub_CC60();

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_46228();
  return v1();
}

uint64_t sub_6F8E4()
{
  sub_CC60();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_CC20();
  return v0();
}

uint64_t sub_6F94C()
{
  sub_CC60();
  v0[4] = v1;
  uint64_t v2 = sub_8D4E0();
  v0[5] = v2;
  sub_CB1C(v2);
  v0[6] = v3;
  v0[7] = sub_CBA4();
  uint64_t v4 = sub_48AC(&qword_BE5E0);
  v0[8] = v4;
  sub_CB1C(v4);
  v0[9] = v5;
  v0[10] = sub_CBA4();
  sub_46200();
  return _swift_task_switch(v6, v7, v8);
}

void sub_6FA0C()
{
  if (qword_BB830 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[4];
  uint64_t v3 = v0[9];
  uint64_t v2 = v0[10];
  uint64_t v4 = v0[8];
  uint64_t v5 = sub_8E730();
  sub_50FC(v5, (uint64_t)qword_BFEC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v1, v4);
  uint64_t v6 = sub_8E710();
  os_log_type_t v7 = sub_8EB00();
  if (sub_463A0(v7))
  {
    os_log_type_t type = v2;
    uint64_t v8 = v0[6];
    uint64_t v9 = v0[7];
    uint64_t v20 = v0[5];
    uint64_t v10 = swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136315394;
    log = v6;
    v0[2] = sub_8758C(0xD000000000000034, 0x8000000000098800, &v23);
    sub_8EBD0();
    *(_WORD *)(v10 + 12) = 2080;
    sub_8D7D0();
    uint64_t v11 = sub_8D4D0();
    unint64_t v13 = v12;
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v9, v20);
    v0[3] = sub_8758C(v11, v13, &v23);
    sub_8EBD0();
    swift_bridgeObjectRelease();
    uint64_t v14 = sub_7218C();
    v15(v14);
    uint64_t v6 = log;
    _os_log_impl(&dword_0, log, type, "#SendAnnouncementUnsupportedValueFlowStrategy %s: unsupported for %s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    sub_CC2C();
    sub_CC2C();
  }
  else
  {
    uint64_t v16 = sub_7218C();
    v17(v16);
  }

  sub_8D7B0();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_72088();
  __asm { BRAA            X2, X16 }
}

uint64_t sub_6FCAC()
{
  sub_CC60();
  v1[19] = v2;
  v1[20] = v0;
  v1[18] = v3;
  uint64_t v4 = type metadata accessor for HomeCommunicationError(0);
  v1[21] = v4;
  sub_1CCBC(v4);
  v1[22] = sub_CBA4();
  uint64_t v5 = sub_8D760();
  v1[23] = v5;
  sub_CB1C(v5);
  v1[24] = v6;
  v1[25] = sub_CBA4();
  uint64_t v7 = type metadata accessor for HomeAppLaunchModel();
  v1[26] = v7;
  sub_1CCBC(v7);
  v1[27] = sub_CBA4();
  uint64_t v8 = sub_48AC(&qword_BD490);
  sub_1CCBC(v8);
  v1[28] = sub_CBA4();
  uint64_t v9 = sub_8CAE0();
  v1[29] = v9;
  sub_CB1C(v9);
  v1[30] = v10;
  v1[31] = sub_CBA4();
  sub_46200();
  return _swift_task_switch(v11, v12, v13);
}

uint64_t sub_6FDD8()
{
  if (qword_BB830 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_8E730();
  v0[32] = sub_50FC(v1, (uint64_t)qword_BFEC8);
  uint64_t v2 = sub_8E710();
  os_log_type_t v3 = sub_8EB00();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)sub_CCE4();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_0, v2, v3, "#SendAnnouncementIntentHandledStrategy makeLaunchAppWithIntentOutput", v4, 2u);
    sub_CC2C();
  }

  v0[33] = sub_8E4B0();
  v0[34] = v5;
  if (v5)
  {
    uint64_t v7 = v0[30];
    uint64_t v6 = v0[31];
    uint64_t v8 = v0[29];
    uint64_t v9 = v0[20];
    sub_8D5D0();
    swift_allocObject();
    swift_retain();
    sub_8D5C0();
    sub_8D8C0();
    sub_98C0(v0 + 2, v0[5]);
    sub_8D080();
    sub_8D5B0();
    uint64_t v11 = v10;
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    sub_4950((uint64_t)(v0 + 2));
    v0[35] = *(void *)(v9 + 56);
    uint64_t v12 = v0[28];
    if (v11)
    {
      swift_bridgeObjectRetain();
      sub_8E3B0();
      uint64_t v13 = sub_8E3D0();
      _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(v12, 0, 1, v13);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v23 = sub_8E3D0();
      _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(v12, 1, 1, v23);
    }
    int v24 = (void *)swift_task_alloc();
    v0[36] = v24;
    *int v24 = v0;
    v24[1] = sub_701A4;
    sub_720C4(v0[28]);
    return sub_4F0C8();
  }
  else
  {
    uint64_t v14 = (void *)sub_8E710();
    os_log_type_t v15 = sub_8EB10();
    if (sub_463A0(v15))
    {
      uint64_t v16 = (_WORD *)sub_CCE4();
      sub_1CC78(v16);
      sub_5C000(&dword_0, v17, v18, "#SendAnnouncementIntentHandledStrategy missing app identifier");
      sub_CC2C();
    }
    uint64_t v19 = v0[22];

    swift_storeEnumTagMultiPayload();
    sub_72024(&qword_BC918, (void (*)(uint64_t))type metadata accessor for HomeCommunicationError);
    swift_allocError();
    sub_142DC(v20);
    sub_71FD0(v19, (void (*)(void))type metadata accessor for HomeCommunicationError);
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_CC20();
    return v21();
  }
}

uint64_t sub_701A4()
{
  sub_1425C();
  uint64_t v3 = v2;
  sub_7614();
  uint64_t v5 = v4;
  sub_461E4();
  NSObject *v6 = v5;
  uint64_t v7 = *v1;
  sub_CB34();
  *uint64_t v8 = v7;
  v5[37] = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_2E798(v5[28]);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v9 = v5[28];
    v5[38] = v3;
    sub_2E798(v9);
  }
  sub_46200();
  return _swift_task_switch(v10, v11, v12);
}

uint64_t sub_702AC()
{
  uint64_t v2 = v0[33];
  uint64_t v1 = v0[34];
  uint64_t v4 = v0[24];
  uint64_t v3 = v0[25];
  uint64_t v12 = v0[20];
  uint64_t v13 = v0[23];
  uint64_t v5 = sub_8E440();
  uint64_t v7 = v6;
  swift_release();
  v0[12] = v2;
  v0[13] = v1;
  sub_8CB10();
  v0[14] = v5;
  v0[15] = v7;
  sub_8CB10();
  uint64_t v8 = OBJC_IVAR____TtC35HomeCommunicationFlowDelegatePlugin40SendAnnouncementUnsupportedValueStrategy_completionOutputManifest;
  v0[39] = OBJC_IVAR____TtC35HomeCommunicationFlowDelegatePlugin40SendAnnouncementUnsupportedValueStrategy_completionOutputManifest;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v12 + v8, v13);
  sub_8D710();
  uint64_t v9 = (void *)swift_task_alloc();
  v0[40] = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_70404;
  sub_720C4(v0[19]);
  sub_720EC();
  return sub_70E68();
}

uint64_t sub_70404()
{
  sub_CC60();
  sub_7614();
  sub_461E4();
  *uint64_t v3 = v2;
  *uint64_t v3 = *v1;
  *(void *)(v2 + 328) = v4;
  *(void *)(v2 + 336) = v0;
  swift_task_dealloc();
  sub_46200();
  return _swift_task_switch(v5, v6, v7);
}

uint64_t sub_704E8()
{
  sub_46458();
  uint64_t v1 = (void *)v0[41];
  if (v1)
  {
    uint64_t v2 = v0[27];
    uint64_t v3 = sub_8D3A0();
    swift_allocObject();
    v0[17] = sub_8D390();
    v0[10] = type metadata accessor for HomeCommunicationSnippetModel();
    v0[11] = sub_72024(&qword_BDFB0, (void (*)(uint64_t))type metadata accessor for HomeCommunicationSnippetModel);
    uint64_t v4 = sub_C9F4(v0 + 7);
    sub_11974(v2, (uint64_t)v4);
    swift_storeEnumTagMultiPayload();
    sub_48AC(&qword_BE170);
    uint64_t v5 = (__n128 *)sub_462D4();
    sub_72158(v5, (__n128)xmmword_8FC30);
    v0[43] = v17;
    id v6 = v1;
    uint64_t v7 = (void *)swift_task_alloc();
    v0[44] = (uint64_t)v7;
    *uint64_t v7 = v0;
    v7[1] = sub_70738;
    uint64_t v8 = v0[25];
    uint64_t v9 = v0[18];
    return dispatch thunk of ResponseGenerating.makeResponseOutput(conversationModel:dialog:outputGenerationManifest:)(v9, v0 + 7, v17, v8, v3);
  }
  else
  {
    uint64_t v10 = (void *)sub_8E710();
    os_log_type_t v11 = sub_8EB00();
    if (sub_463A0(v11))
    {
      uint64_t v12 = (_WORD *)sub_CCE4();
      sub_1CC78(v12);
      sub_5C000(&dword_0, v13, v14, "#SendAnnouncementIntentHandledStrategy dialogExecutionResult is nil - returning generic error");
      sub_CC2C();
    }

    os_log_type_t v15 = (void *)swift_task_alloc();
    v0[45] = (uint64_t)v15;
    *os_log_type_t v15 = v0;
    v15[1] = sub_708E0;
    return sub_4EDBC();
  }
}

uint64_t sub_70738()
{
  sub_CC60();
  sub_7614();
  sub_461E4();
  *uint64_t v2 = v1;
  uint64_t v3 = v1 + 56;
  uint64_t v4 = *v0;
  sub_CB34();
  *uint64_t v5 = v4;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  sub_4950(v3);
  sub_46200();
  return _swift_task_switch(v6, v7, v8);
}

uint64_t sub_70824()
{
  sub_1425C();
  uint64_t v1 = *(void *)(v0 + 216);

  uint64_t v2 = sub_72108();
  v3(v2);
  sub_71FD0(v1, (void (*)(void))type metadata accessor for HomeAppLaunchModel);
  swift_release();
  sub_721A0();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_46228();
  return v4();
}

uint64_t sub_708E0()
{
  sub_1425C();
  uint64_t v3 = v2;
  sub_7614();
  uint64_t v5 = v4;
  sub_461E4();
  void *v6 = v5;
  uint64_t v7 = *v1;
  sub_CB34();
  *uint64_t v8 = v7;
  *(void *)(v5 + 368) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(void *)(v5 + 376) = v3;
  }
  sub_46200();
  return _swift_task_switch(v9, v10, v11);
}

uint64_t sub_709D0()
{
  sub_46458();
  uint64_t v2 = (void *)v1[47];
  uint64_t v3 = v1[39];
  uint64_t v4 = v1[20];
  sub_8D3A0();
  sub_627D4();
  v1[16] = sub_8D390();
  sub_48AC(&qword_BE170);
  uint64_t v5 = (__n128 *)sub_462D4();
  sub_72158(v5, (__n128)xmmword_8FC30);
  v1[48] = v10;
  id v6 = v2;
  uint64_t v7 = (void *)swift_task_alloc();
  v1[49] = v7;
  *uint64_t v7 = v1;
  v7[1] = sub_70AE8;
  uint64_t v8 = v1[18];
  return dispatch thunk of ResponseGenerating.makeResponseOutput(dialog:outputGenerationManifest:)(v8, v10, v4 + v3, v0);
}

uint64_t sub_70AE8()
{
  sub_CC60();
  sub_7614();
  uint64_t v1 = *v0;
  sub_CB34();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  sub_46200();
  return _swift_task_switch(v3, v4, v5);
}

uint64_t sub_70BCC()
{
  sub_1425C();
  uint64_t v1 = *(void *)(v0 + 216);

  uint64_t v2 = sub_72108();
  v3(v2);
  sub_71FD0(v1, (void (*)(void))type metadata accessor for HomeAppLaunchModel);
  swift_release();
  sub_721A0();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_46228();
  return v4();
}

uint64_t sub_70C88()
{
  sub_46250();
  sub_720A4();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_CC20();
  return v0();
}

uint64_t sub_70D10()
{
  sub_46250();
  uint64_t v1 = sub_720D0();
  v2(v1);
  sub_71FD0(v0, (void (*)(void))type metadata accessor for HomeAppLaunchModel);
  sub_720A4();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_CC20();
  return v3();
}

uint64_t sub_70DBC()
{
  sub_46250();
  uint64_t v1 = sub_720D0();
  v2(v1);
  sub_71FD0(v0, (void (*)(void))type metadata accessor for HomeAppLaunchModel);
  sub_720A4();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_CC20();
  return v3();
}

uint64_t sub_70E68()
{
  sub_CC60();
  v1[5] = v2;
  v1[6] = v0;
  uint64_t v3 = sub_48AC(&qword_BD490);
  sub_1CCBC(v3);
  v1[7] = sub_CBA4();
  uint64_t v4 = sub_8D4E0();
  v1[8] = v4;
  sub_CB1C(v4);
  v1[9] = v5;
  v1[10] = sub_CBA4();
  sub_46200();
  return _swift_task_switch(v6, v7, v8);
}

uint64_t sub_70F18()
{
  uint64_t v31 = v0;
  uint64_t v2 = *(void *)(v0 + 72);
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v3 = *(void *)(v0 + 64);
  sub_48AC(&qword_BE5E0);
  sub_8D7D0();
  uint64_t v4 = sub_8D4D0();
  uint64_t v6 = v5;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  if (sub_25C44(v4, v6) != 1) {
    goto LABEL_12;
  }
  uint64_t v7 = (void *)sub_8D7C0();
  uint64_t v8 = (int *)[v7 unsupportedReason];

  if (qword_BB830 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_8E730();
  sub_50FC(v9, (uint64_t)qword_BFEC8);
  uint64_t v10 = sub_8E710();
  os_log_type_t v11 = sub_8EB10();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    v30[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 136315138;
    *(void *)(v0 + 16) = v8;
    *(unsigned char *)(v0 + 24) = 0;
    sub_48AC(&qword_BEF40);
    uint64_t v13 = sub_8E8E0();
    *(void *)(v0 + 32) = sub_8758C(v13, v14, v30);
    sub_8EBD0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v10, v11, "#SendAnnouncementIntentHandledStrategy Unsupported recipient reason %s", v12, 0xCu);
    swift_arrayDestroy();
    sub_CC2C();
    sub_CC2C();
  }

  if (v8 == &dword_4)
  {
    uint64_t v22 = (void *)swift_task_alloc();
    *(void *)(v0 + 128) = v22;
    *uint64_t v22 = v0;
    v22[1] = sub_71638;
    sub_720C4((uint64_t)_swiftEmptyArrayStorage);
    sub_7206C();
    return sub_4E8EC(v23);
  }
  else
  {
    if (v8 != (int *)((char *)&dword_0 + 2))
    {
      if (v8 == (int *)((char *)&dword_0 + 1))
      {
        os_log_type_t v15 = (void *)sub_8D7B0();
        *(void *)(v0 + 88) = sub_2E2C4();

        uint64_t v16 = (void *)swift_task_alloc();
        *(void *)(v0 + 96) = v16;
        *uint64_t v16 = v0;
        v16[1] = sub_71364;
        sub_7206C();
        return sub_4FB18(v17);
      }
LABEL_12:
      swift_task_dealloc();
      swift_task_dealloc();
      sub_72178();
      sub_7206C();
      __asm { BRAA            X2, X16 }
    }
    uint64_t v25 = *(void *)(v0 + 56);
    os_log_type_t v26 = (void *)sub_8D7B0();
    uint64_t v27 = sub_2DF98();

    sub_76678(v27, v25);
    swift_bridgeObjectRelease();
    sub_8E430();
    sub_8D8C0();
    *(void *)(v0 + 104) = sub_8E420();
    uint64_t v28 = (void *)swift_task_alloc();
    *(void *)(v0 + 112) = v28;
    void *v28 = v0;
    v28[1] = sub_714A4;
    sub_720C4(*(void *)(v0 + 56));
    sub_7206C();
    return sub_4F750();
  }
}

uint64_t sub_71364()
{
  sub_1425C();
  sub_7614();
  uint64_t v3 = v2;
  sub_461E4();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_CB34();
  void *v6 = v5;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    sub_CC20();
    return v7();
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v9 = sub_5F124();
    return v10(v9);
  }
}

uint64_t sub_714A4()
{
  sub_46250();
  uint64_t v3 = v2;
  uint64_t v4 = *v1;
  uint64_t v5 = *v1;
  sub_CB34();
  uint64_t *v6 = v5;
  uint64_t v7 = *v1;
  uint64_t *v6 = *v1;
  *(void *)(v5 + 120) = v0;
  swift_task_dealloc();
  sub_2E798(*(void *)(v4 + 56));
  swift_release();
  if (v0)
  {
    sub_46200();
    return _swift_task_switch(v8, v9, v10);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v11 = *(uint64_t (**)(uint64_t))(v7 + 8);
    return v11(v3);
  }
}

uint64_t sub_71638()
{
  sub_1425C();
  sub_7614();
  uint64_t v3 = v2;
  sub_461E4();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_CB34();
  void *v6 = v5;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    sub_CC20();
    return v7();
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v9 = sub_5F124();
    return v10(v9);
  }
}

uint64_t sub_7175C()
{
  sub_CC60();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_CC20();
  return v0();
}

uint64_t sub_717C4()
{
  sub_CC60();
  v1[5] = v2;
  v1[6] = v0;
  uint64_t v3 = sub_8D4E0();
  v1[7] = v3;
  sub_CB1C(v3);
  v1[8] = v4;
  v1[9] = sub_CBA4();
  sub_46200();
  return _swift_task_switch(v5, v6, v7);
}

uint64_t sub_71850()
{
  uint64_t v21 = v0;
  uint64_t v2 = *(void *)(v0 + 64);
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v3 = *(void *)(v0 + 56);
  sub_48AC(&qword_BE5E0);
  sub_8D7D0();
  uint64_t v4 = sub_8D4D0();
  uint64_t v6 = v5;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  if (sub_25C44(v4, v6)) {
    goto LABEL_10;
  }
  uint64_t v7 = (void *)sub_8D7C0();
  uint64_t v8 = (char *)[v7 unsupportedReason];

  if (qword_BB830 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_8E730();
  sub_50FC(v9, (uint64_t)qword_BFEC8);
  uint64_t v10 = sub_8E710();
  os_log_type_t v11 = sub_8EB10();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 136315138;
    *(void *)(v0 + 16) = v8;
    *(unsigned char *)(v0 + 24) = 0;
    sub_48AC(&qword_BEF38);
    uint64_t v13 = sub_8E8E0();
    *(void *)(v0 + 32) = sub_8758C(v13, v14, &v20);
    sub_8EBD0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v10, v11, "#SendAnnouncementIntentHandledStrategy Unsupported announcement reason %s", v12, 0xCu);
    swift_arrayDestroy();
    sub_CC2C();
    sub_CC2C();
  }

  if (v8 != (unsigned char *)&dword_0 + 1)
  {
LABEL_10:
    swift_task_dealloc();
    sub_72178();
    sub_720EC();
    __asm { BRAA            X2, X16 }
  }
  os_log_type_t v15 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v15;
  *os_log_type_t v15 = v0;
  v15[1] = sub_71B0C;
  sub_720EC();
  return sub_4F4A0();
}

uint64_t sub_71B0C()
{
  sub_1425C();
  uint64_t v3 = v2;
  sub_7614();
  uint64_t v5 = v4;
  sub_461E4();
  void *v6 = v5;
  uint64_t v7 = *v1;
  sub_CB34();
  *uint64_t v8 = v7;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    sub_CC20();
    return v9();
  }
  else
  {
    swift_task_dealloc();
    os_log_type_t v11 = *(uint64_t (**)(uint64_t))(v7 + 8);
    return v11(v3);
  }
}

uint64_t sub_71C20()
{
  sub_4950(v0 + 16);
  swift_release();
  swift_release();
  uint64_t v1 = v0
     + OBJC_IVAR____TtC35HomeCommunicationFlowDelegatePlugin40SendAnnouncementUnsupportedValueStrategy_completionOutputManifest;
  sub_8D760();
  sub_FDD0();
  (*(void (**)(uint64_t))(v2 + 8))(v1);
  return v0;
}

uint64_t sub_71C90()
{
  sub_71C20();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return _swift_deallocClassInstance(v0, v1, v2);
}

uint64_t sub_71CE8()
{
  return type metadata accessor for SendAnnouncementUnsupportedValueStrategy();
}

uint64_t type metadata accessor for SendAnnouncementUnsupportedValueStrategy()
{
  uint64_t result = qword_BEE30;
  if (!qword_BEE30) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_71D38()
{
  uint64_t result = sub_8D760();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_71DE4()
{
  unint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *unint64_t v1 = v0;
  v1[1] = sub_C6E0;
  return sub_6E990();
}

uint64_t sub_71E90()
{
  unint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *unint64_t v1 = v0;
  v1[1] = sub_4F540;
  return sub_6F94C();
}

uint64_t sub_71F24()
{
  unint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *unint64_t v1 = v0;
  v1[1] = sub_461CC;
  return sub_6FCAC();
}

uint64_t sub_71FD0(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_FDD0();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_72024(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_720A4()
{
  return swift_task_dealloc();
}

uint64_t sub_720C4@<X0>(uint64_t a1@<X8>)
{
  return a1;
}

uint64_t sub_720D0()
{
  return *(void *)(v0 + 200);
}

uint64_t sub_72108()
{
  return v0;
}

uint64_t sub_72138(__n128 *a1, __n128 a2)
{
  a1[1] = a2;
  a1[2].n128_u64[0] = v2;
  return sub_8EA50();
}

uint64_t sub_72158(__n128 *a1, __n128 a2)
{
  a1[1] = a2;
  a1[2].n128_u64[0] = v2;
  return sub_8EA50();
}

uint64_t sub_72178()
{
  return 0;
}

uint64_t sub_7218C()
{
  return v0;
}

uint64_t sub_721A0()
{
  return swift_task_dealloc();
}

uint64_t sub_721C0()
{
  return v0;
}

uint64_t sub_721D4(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  *(void *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    *(void *)(a1 + 8) = a2[1];
    uint64_t v8 = a2 + 2;
    long long v9 = *(_OWORD *)(a2 + 5);
    *(_OWORD *)(a1 + 40) = v9;
    uint64_t v10 = v9;
    os_log_type_t v11 = **(void (***)(uint64_t, uint64_t *, uint64_t))(v9 - 8);
    swift_retain();
    swift_retain();
    v11(a1 + 16, v8, v10);
    uint64_t v12 = *(int *)(a3 + 28);
    uint64_t v13 = (void *)(a1 + v12);
    unint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_8D230();
    if (_s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0((uint64_t)v14, 1, v15))
    {
      uint64_t v16 = sub_48AC(&qword_BE7F8);
      memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
      _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0((uint64_t)v13, 0, 1, v15);
    }
    uint64_t v17 = *(int *)(a3 + 32);
    long long v18 = *(_OWORD *)((char *)a2 + v17 + 24);
    *(_OWORD *)(a1 + v17 + 24) = v18;
    (**(void (***)(void))(v18 - 8))();
  }
  return a1;
}

uint64_t sub_723B0(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_release();
  sub_4950(a1 + 16);
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_8D230();
  if (!_s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  uint64_t v6 = a1 + *(int *)(a2 + 32);

  return sub_4950(v6);
}

uint64_t sub_72464(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = a2 + 16;
  long long v8 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v8;
  uint64_t v9 = v8;
  uint64_t v10 = **(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8);
  swift_retain();
  swift_retain();
  v10(a1 + 16, v7, v9);
  uint64_t v11 = *(int *)(a3 + 28);
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (const void *)(a2 + v11);
  uint64_t v14 = sub_8D230();
  if (_s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0((uint64_t)v13, 1, v14))
  {
    uint64_t v15 = sub_48AC(&qword_BE7F8);
    memcpy(v12, v13, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
    _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0((uint64_t)v12, 0, 1, v14);
  }
  uint64_t v16 = *(int *)(a3 + 32);
  long long v17 = *(_OWORD *)(a2 + v16 + 24);
  *(_OWORD *)(a1 + v16 + 24) = v17;
  (**(void (***)(void))(v17 - 8))();
  return a1;
}

void *sub_725F0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  sub_10D40(a1 + 2, a2 + 2);
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = (char *)a1 + v6;
  long long v8 = (char *)a2 + v6;
  uint64_t v9 = sub_8D230();
  int v10 = _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0((uint64_t)v7, 1, v9);
  int v11 = _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0((uint64_t)v8, 1, v9);
  if (!v10)
  {
    uint64_t v12 = *(void *)(v9 - 8);
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    uint64_t v13 = sub_48AC(&qword_BE7F8);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0((uint64_t)v7, 0, 1, v9);
LABEL_7:
  sub_10D40((void *)((char *)a1 + *(int *)(a3 + 32)), (void *)((char *)a2 + *(int *)(a3 + 32)));
  return a1;
}

uint64_t sub_727A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v7 = *(int *)(a3 + 28);
  long long v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_8D230();
  if (_s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0((uint64_t)v9, 1, v10))
  {
    uint64_t v11 = sub_48AC(&qword_BE7F8);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
    _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0((uint64_t)v8, 0, 1, v10);
  }
  uint64_t v12 = *(int *)(a3 + 32);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  long long v15 = *(_OWORD *)(v14 + 16);
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + 16) = v15;
  *(void *)(v13 + 32) = *(void *)(v14 + 32);
  return a1;
}

uint64_t sub_728B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_release();
  sub_4950(a1 + 16);
  long long v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v6;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v7 = *(int *)(a3 + 28);
  long long v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_8D230();
  int v11 = _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0((uint64_t)v8, 1, v10);
  int v12 = _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0((uint64_t)v9, 1, v10);
  if (!v11)
  {
    uint64_t v13 = *(void *)(v10 - 8);
    if (!v12)
    {
      (*(void (**)(void *, const void *, uint64_t))(v13 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    uint64_t v14 = sub_48AC(&qword_BE7F8);
    memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0((uint64_t)v8, 0, 1, v10);
LABEL_7:
  uint64_t v15 = *(int *)(a3 + 32);
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_4950(a1 + v15);
  long long v18 = *(_OWORD *)(v17 + 16);
  *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  *(_OWORD *)(v16 + 16) = v18;
  *(void *)(v16 + 32) = *(void *)(v17 + 32);
  return a1;
}

uint64_t sub_72A7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_72A90);
}

uint64_t sub_72A90(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_48AC(&qword_BE7F8);
    uint64_t v9 = (uint64_t)a1 + *(int *)(a3 + 28);
    return _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0(v9, a2, v8);
  }
}

uint64_t sub_72B1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_72B30);
}

void *sub_72B30(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_48AC(&qword_BE7F8);
    uint64_t v8 = (uint64_t)v5 + *(int *)(a4 + 28);
    return (void *)_s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(v8, a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for SharedGlobals()
{
  uint64_t result = qword_BEFA0;
  if (!qword_BEFA0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_72BFC()
{
  sub_72CB4();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_72CB4()
{
  if (!qword_BEFB0)
  {
    sub_8D230();
    unint64_t v0 = sub_8EBB0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_BEFB0);
    }
  }
}

uint64_t sub_72D0C(uint64_t a1)
{
  uint64_t v2 = sub_8D8B0();
  sub_5190();
  uint64_t v4 = v3;
  __chkstk_darwin();
  long long v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_8D8E0();
  sub_5190();
  uint64_t v9 = v8;
  __chkstk_darwin();
  int v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v2);
  if ((*(unsigned int (**)(char *, uint64_t))(v4 + 88))(v6, v2) == enum case for Parse.uso(_:))
  {
    (*(void (**)(char *, uint64_t))(v4 + 96))(v6, v2);
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v6, v7);
    strcpy((char *)v24, ".uso parse: ");
    BYTE5(v24[1]) = 0;
    HIWORD(v24[1]) = -5120;
    sub_8DAD0();
    uint64_t v22 = sub_8D940();
    unint64_t v23 = sub_72FE0();
    sub_C9F4(&v20);
    sub_8D8D0();
    uint64_t v12 = sub_8DAC0();
    uint64_t v14 = v13;
    sub_4950((uint64_t)&v20);
    v25._uint64_t countAndFlagsBits = v12;
    v25._object = v14;
    sub_8E960(v25);
    swift_bridgeObjectRelease();
    uint64_t v20 = v24[0];
    unint64_t v21 = v24[1];
    uint64_t v15 = sub_8E9E0();
    sub_73030();
    v16();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v7);
  }
  else
  {
    uint64_t v17 = *(void (**)(void))(v4 + 8);
    sub_73030();
    v17();
    uint64_t v20 = 0;
    unint64_t v21 = 0xE000000000000000;
    sub_8ED10();
    uint64_t v15 = sub_8E9E0();
    sub_73030();
    v17();
  }
  return v15;
}

unint64_t sub_72FE0()
{
  unint64_t result = qword_BEFF0;
  if (!qword_BEFF0)
  {
    sub_8D940();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BEFF0);
  }
  return result;
}

uint64_t type metadata accessor for SKFlowFactory()
{
  return self;
}

uint64_t type metadata accessor for SkipAnnouncementCATs()
{
  uint64_t result = qword_BF0D0;
  if (!qword_BF0D0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_730AC()
{
  return swift_initClassMetadata2();
}

uint64_t sub_730EC(uint64_t a1, uint64_t a2)
{
  return sub_73140(a1, a2);
}

uint64_t sub_73140(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_8E460();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_48AC(&qword_BC7B8);
  __chkstk_darwin(v8 - 8);
  sub_12590(a1, (uint64_t)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  uint64_t v10 = sub_8E340();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a2, v4);
  sub_125F8(a1);
  return v10;
}

uint64_t sub_732A8()
{
  return type metadata accessor for SkipAnnouncementCATs();
}

uint64_t type metadata accessor for SkipAnnouncementCATsSimple()
{
  uint64_t result = qword_BF120;
  if (!qword_BF120) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_732F8()
{
  return swift_initClassMetadata2();
}

uint64_t sub_73338()
{
  uint64_t v3 = (uint64_t (*)(unint64_t, unint64_t, void *))((char *)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:)
                                                                          + async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_127A0;
  return v3(0xD00000000000002ELL, 0x8000000000098910, &_swiftEmptyArrayStorage);
}

uint64_t sub_733F8(uint64_t a1, uint64_t a2)
{
  return sub_7344C(a1, a2);
}

uint64_t sub_7344C(uint64_t a1, uint64_t a2)
{
  sub_8E460();
  sub_12B34();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_AAA8();
  uint64_t v10 = v9 - v8;
  uint64_t v11 = sub_48AC(&qword_BC7B8);
  __chkstk_darwin(v11 - 8);
  sub_AAA8();
  sub_12590(a1, v13 - v12);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v10, a2, v2);
  uint64_t v14 = sub_8E3E0();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a2, v2);
  sub_125F8(a1);
  return v14;
}

uint64_t sub_73578(uint64_t a1, uint64_t a2)
{
  sub_8E460();
  sub_12B34();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  sub_AAA8();
  uint64_t v9 = v8 - v7;
  swift_allocObject();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v9, a2, v2);
  uint64_t v10 = sub_8E3F0();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a2, v2);
  return v10;
}

uint64_t sub_73654()
{
  return type metadata accessor for SkipAnnouncementCATsSimple();
}

uint64_t sub_7365C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v63 = a2;
  uint64_t v4 = sub_8D8B0();
  sub_5190();
  uint64_t v6 = v5;
  uint64_t v7 = ((uint64_t (*)(void))__chkstk_darwin)();
  uint64_t v60 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v61 = (char *)&v56 - v10;
  uint64_t v11 = __chkstk_darwin(v9);
  os_log_type_t v59 = (char *)&v56 - v12;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v56 - v13;
  uint64_t v15 = sub_8E1C0();
  sub_5190();
  uint64_t v17 = v16;
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v56 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = type metadata accessor for SmsNLIntent();
  sub_16058();
  __chkstk_darwin(v21);
  sub_75E38();
  uint64_t v22 = *(void (**)(void))(v6 + 16);
  sub_75DC0();
  v22();
  int v23 = (*(uint64_t (**)(char *, uint64_t))(v6 + 88))(v14, v4);
  if (v23 != enum case for Parse.NLv3IntentOnly(_:))
  {
    if (v23 == enum case for Parse.NLv3IntentPlusServerConversion(_:))
    {
      uint64_t v28 = sub_75DF8();
      v29(v28);
      uint64_t v30 = sub_75E14();
      v31(v30);
      sub_48AC(&qword_BCDA8);
      swift_release();
      goto LABEL_5;
    }
    if (v23 == enum case for Parse.directInvocation(_:))
    {
      if (qword_BB830 != -1) {
        swift_once();
      }
      uint64_t v36 = sub_8E730();
      sub_50FC(v36, (uint64_t)qword_BFEC8);
      sub_75DC0();
      v22();
      uint64_t v37 = sub_8E710();
      os_log_type_t v38 = sub_8EB00();
      if (os_log_type_enabled(v37, v38))
      {
        uint64_t v39 = swift_slowAlloc();
        uint64_t v58 = a1;
        uint64_t v40 = (uint8_t *)v39;
        uint64_t v60 = (char *)swift_slowAlloc();
        os_log_type_t v64 = v60;
        unint64_t v57 = v40;
        *(_DWORD *)uint64_t v40 = 136315138;
        uint64_t v56 = v40 + 4;
        uint64_t v41 = (uint64_t)v61;
        sub_75DC0();
        v22();
        uint64_t v42 = sub_72D0C(v41);
        uint64_t v44 = sub_8758C(v42, v43, (uint64_t *)&v64);
        sub_75DD0(v44);
        swift_bridgeObjectRelease();
        uint64_t v45 = *(void (**)(void))(v6 + 8);
        sub_75DB0();
        v45();
        _os_log_impl(&dword_0, v37, v38, "Received a direct action: %s.", v57, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
LABEL_15:
        swift_slowDealloc();

LABEL_17:
        sub_75DB0();
        v45();
        ((void (*)(char *, uint64_t))v45)(v14, v4);
        uint64_t v35 = 1;
        uint64_t v34 = v63;
        return _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(v34, v35, 1, v62);
      }
    }
    else
    {
      if (qword_BB830 != -1) {
        swift_once();
      }
      uint64_t v46 = sub_8E730();
      sub_50FC(v46, (uint64_t)qword_BFEC8);
      sub_75DC0();
      v22();
      uint64_t v37 = sub_8E710();
      os_log_type_t v47 = sub_8EB10();
      int v48 = v47;
      if (os_log_type_enabled(v37, v47))
      {
        uint64_t v49 = swift_slowAlloc();
        uint64_t v58 = a1;
        uint64_t v50 = (uint8_t *)v49;
        os_log_type_t v59 = (char *)swift_slowAlloc();
        os_log_type_t v64 = v59;
        LODWORD(v57) = v48;
        *(_DWORD *)uint64_t v50 = 136315138;
        uint64_t v56 = v50 + 4;
        uint64_t v51 = (uint64_t)v61;
        sub_75DC0();
        v22();
        uint64_t v52 = sub_72D0C(v51);
        uint64_t v54 = sub_8758C(v52, v53, (uint64_t *)&v64);
        sub_75DD0(v54);
        swift_bridgeObjectRelease();
        uint64_t v45 = *(void (**)(void))(v6 + 8);
        sub_75DB0();
        v45();
        _os_log_impl(&dword_0, v37, (os_log_type_t)v57, "Received an unknown parse: %s.", v50, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        goto LABEL_15;
      }
    }

    uint64_t v45 = *(void (**)(void))(v6 + 8);
    sub_75DB0();
    v45();
    goto LABEL_17;
  }
  uint64_t v24 = sub_75DF8();
  v25(v24);
  uint64_t v26 = sub_75E14();
  v27(v26);
LABEL_5:
  uint64_t v32 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
  v32(v20, v14, v15);
  v32((char *)v2, v20, v15);
  uint64_t v33 = v2;
  uint64_t v34 = v63;
  sub_751A0(v33, v63);
  uint64_t v35 = 0;
  return _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(v34, v35, 1, v62);
}

uint64_t sub_73C34@<X0>(uint64_t a1@<X8>)
{
  if (qword_BB8C0 != -1) {
    swift_once();
  }
  type metadata accessor for SmsNLIntent();
  sub_75930(&qword_BCDF0);
  sub_8DF60();
  switch(v6)
  {
    case 1:
    case 3:
      uint64_t v2 = (unsigned int *)&enum case for SiriKitConfirmationState.rejected(_:);
      break;
    case 2:
      uint64_t v2 = (unsigned int *)&enum case for SiriKitConfirmationState.cancelled(_:);
      break;
    case 4:
      uint64_t v2 = (unsigned int *)&enum case for SiriKitConfirmationState.unset(_:);
      break;
    default:
      uint64_t v2 = (unsigned int *)&enum case for SiriKitConfirmationState.confirmed(_:);
      break;
  }
  uint64_t v3 = *v2;
  sub_8CF30();
  sub_16058();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 104))(a1, v3);
}

BOOL sub_73D78()
{
  type metadata accessor for SmsNLIntent();
  sub_16058();
  __chkstk_darwin(v2);
  sub_75E38();
  if (qword_BB8E0 != -1) {
    swift_once();
  }
  sub_75930(&qword_BCDF0);
  uint64_t v3 = *(void *)(sub_8DF70() + 16);
  swift_bridgeObjectRelease();
  sub_75204(v1, v0);
  if (v3) {
    BOOL v4 = sub_749E0();
  }
  else {
    BOOL v4 = 0;
  }
  sub_5134(v0);
  return v4;
}

unint64_t sub_73E74()
{
  uint64_t v0 = sub_8DC10();
  sub_765E8(v0, v1);
  uint64_t v3 = v2;
  swift_bridgeObjectRelease();
  if (v3)
  {
    uint64_t v4 = sub_8E8A0();
    char v6 = v5;
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = 0;
    char v6 = (void *)0xE000000000000000;
  }
  v10._uint64_t countAndFlagsBits = v4;
  v10._object = v6;
  sub_8E960(v10);
  swift_bridgeObjectRelease();
  uint64_t v7 = sub_8DC10();
  sub_80120(1uLL, v7, v8);
  sub_58B38();
  swift_bridgeObjectRetain();
  sub_8E950();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0xD000000000000012;
}

uint64_t sub_73FA8(char a1)
{
  return qword_942F8[a1];
}

uint64_t sub_73FC8(uint64_t a1)
{
  return sub_74348(a1, &qword_BC760, 0x617373654D736D73, 0xEA00000000006567, &qword_C0098);
}

uint64_t sub_73FF4(uint64_t a1)
{
  return sub_74348(a1, &qword_BC760, 0x6D614E7473726966, 0xE900000000000065, &qword_C00A0);
}

uint64_t sub_74020()
{
  sub_48AC(&qword_BF188);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_8FA10;
  if (qword_BB8B0 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_C00A0;
  *(void *)(v0 + 56) = sub_48AC(&qword_BC760);
  *(void *)(v0 + 64) = sub_75BE8((unint64_t *)&qword_BCFD0, &qword_BC760);
  *(void *)(v0 + 32) = v1;
  sub_8DB20();
  swift_allocObject();
  swift_retain();
  uint64_t result = sub_8DB10();
  qword_C00A8 = result;
  return result;
}

uint64_t sub_7412C(uint64_t a1)
{
  return sub_74348(a1, &qword_BF178, 0x69666E6F43736D73, 0xEF6E6F6974616D72, &qword_C00B0);
}

uint64_t type metadata accessor for SmsNLIntent()
{
  uint64_t result = qword_BF1E8;
  if (!qword_BF1E8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_741A8(uint64_t a1)
{
  return sub_74348(a1, &qword_BF278, 0x61746E6F43736D73, 0xEE00656C6F527463, &qword_C00B8);
}

uint64_t sub_741DC(uint64_t a1)
{
  return sub_74348(a1, &qword_BC760, 0x61746E6F43736D73, 0xEE00656D614E7463, &qword_C00C0);
}

uint64_t sub_74210(uint64_t a1)
{
  return sub_74348(a1, &qword_BF180, 0x7265666552736D73, 0xEC00000065636E65, &qword_C00C8);
}

uint64_t sub_74240(uint64_t a1)
{
  return sub_74348(a1, &qword_BC760, 0xD000000000000020, 0x8000000000098940, &qword_C00D0);
}

uint64_t sub_7426C(uint64_t a1)
{
  return sub_74348(a1, &qword_BC760, 0xD000000000000019, 0x8000000000097390, &qword_C00D8);
}

uint64_t sub_74298(uint64_t a1)
{
  return sub_74348(a1, &qword_BC760, 0xD00000000000001ALL, 0x80000000000973B0, &qword_C00E0);
}

uint64_t sub_742C4(uint64_t a1)
{
  return sub_74348(a1, &qword_BC760, 0xD000000000000012, 0x8000000000095620, &qword_C00E8);
}

uint64_t sub_742F0(uint64_t a1)
{
  return sub_74348(a1, &qword_BC760, 0xD000000000000012, 0x80000000000973D0, &qword_C00F0);
}

uint64_t sub_7431C(uint64_t a1)
{
  return sub_74348(a1, &qword_BC760, 0xD000000000000012, 0x8000000000096490, &qword_C00F8);
}

uint64_t sub_74348(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  sub_48AC(a2);
  swift_allocObject();
  uint64_t result = sub_8DBE0();
  *a5 = result;
  return result;
}

uint64_t sub_743A8()
{
  sub_48AC(&qword_BF188);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_90CE0;
  if (qword_BB8B8 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_C00A8;
  *(void *)(v0 + 56) = sub_8DB20();
  *(void *)(v0 + 64) = &protocol witness table for NonTerminalOntologyNode;
  *(void *)(v0 + 32) = v1;
  uint64_t v2 = qword_BB8D0;
  swift_retain();
  if (v2 != -1) {
    swift_once();
  }
  uint64_t v3 = qword_C00C0;
  *(void *)(v0 + 96) = sub_48AC(&qword_BC760);
  *(void *)(v0 + 104) = sub_75BE8((unint64_t *)&qword_BCFD0, &qword_BC760);
  *(void *)(v0 + 72) = v3;
  uint64_t v4 = qword_BB8C8;
  swift_retain();
  if (v4 != -1) {
    swift_once();
  }
  uint64_t v5 = qword_C00B8;
  *(void *)(v0 + 136) = sub_48AC(&qword_BF278);
  *(void *)(v0 + 144) = sub_75BE8(&qword_BF280, &qword_BF278);
  *(void *)(v0 + 112) = v5;
  swift_allocObject();
  swift_retain();
  uint64_t result = sub_8DB10();
  qword_C0100 = result;
  return result;
}

uint64_t sub_74590()
{
  sub_48AC(&qword_BF188);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_93FB0;
  if (qword_BB8C0 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_C00B0;
  *(void *)(v0 + 56) = sub_48AC(&qword_BF178);
  *(void *)(v0 + 64) = sub_75BE8(&qword_BF270, &qword_BF178);
  *(void *)(v0 + 32) = v1;
  uint64_t v2 = qword_BB8A8;
  swift_retain();
  if (v2 != -1) {
    swift_once();
  }
  uint64_t v3 = qword_C0098;
  uint64_t v4 = sub_48AC(&qword_BC760);
  *(void *)(v0 + 96) = v4;
  uint64_t v5 = sub_75BE8((unint64_t *)&qword_BCFD0, &qword_BC760);
  *(void *)(v0 + 104) = v5;
  *(void *)(v0 + 72) = v3;
  uint64_t v6 = qword_BB910;
  swift_retain();
  if (v6 != -1) {
    swift_once();
  }
  uint64_t v7 = qword_C0100;
  *(void *)(v0 + 136) = sub_8DB20();
  *(void *)(v0 + 144) = &protocol witness table for NonTerminalOntologyNode;
  *(void *)(v0 + 112) = v7;
  uint64_t v8 = qword_BB8E0;
  swift_retain();
  if (v8 != -1) {
    swift_once();
  }
  uint64_t v9 = qword_C00D0;
  *(void *)(v0 + 176) = v4;
  *(void *)(v0 + 184) = v5;
  *(void *)(v0 + 152) = v9;
  uint64_t v10 = qword_BB8E8;
  swift_retain();
  if (v10 != -1) {
    swift_once();
  }
  uint64_t v11 = qword_C00D8;
  *(void *)(v0 + 216) = v4;
  *(void *)(v0 + 224) = v5;
  *(void *)(v0 + 192) = v11;
  uint64_t v12 = qword_BB8F0;
  swift_retain();
  if (v12 != -1) {
    swift_once();
  }
  uint64_t v13 = qword_C00E0;
  *(void *)(v0 + 256) = v4;
  *(void *)(v0 + 264) = v5;
  *(void *)(v0 + 232) = v13;
  uint64_t v14 = qword_BB8F8;
  swift_retain();
  if (v14 != -1) {
    swift_once();
  }
  uint64_t v15 = qword_C00E8;
  *(void *)(v0 + 296) = v4;
  *(void *)(v0 + 304) = v5;
  *(void *)(v0 + 272) = v15;
  uint64_t v16 = qword_BB900;
  swift_retain();
  if (v16 != -1) {
    swift_once();
  }
  uint64_t v17 = qword_C00F0;
  *(void *)(v0 + 336) = v4;
  *(void *)(v0 + 344) = v5;
  *(void *)(v0 + 312) = v17;
  uint64_t v18 = qword_BB908;
  swift_retain();
  if (v18 != -1) {
    swift_once();
  }
  uint64_t v19 = qword_C00F8;
  *(void *)(v0 + 376) = v4;
  *(void *)(v0 + 384) = v5;
  *(void *)(v0 + 352) = v19;
  qword_C0108 = v0;

  return swift_retain();
}

uint64_t sub_748F0()
{
  if (qword_BB918 != -1) {
    swift_once();
  }
  sub_8DBD0();
  swift_allocObject();
  swift_bridgeObjectRetain();
  uint64_t result = sub_8DBC0();
  qword_C0110 = result;
  return result;
}

uint64_t sub_74984()
{
  if (qword_BB920 != -1) {
    swift_once();
  }

  return swift_retain();
}

BOOL sub_749E0()
{
  uint64_t v1 = v0;
  type metadata accessor for SmsNLIntent();
  sub_16058();
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v3);
  uint64_t v8 = (char *)&v21 - v7;
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v11 = (char *)&v21 - v10;
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v21 - v12;
  if (qword_BB8E8 != -1) {
    swift_once();
  }
  sub_75930(&qword_BCDF0);
  sub_75E2C();
  uint64_t v14 = *(void *)(sub_8DF70() + 16);
  swift_bridgeObjectRelease();
  sub_75204(v1, (uint64_t)v13);
  if (v14)
  {
    sub_5134((uint64_t)v13);
    sub_75204(v1, (uint64_t)v11);
LABEL_8:
    sub_5134((uint64_t)v11);
    sub_75204(v1, (uint64_t)v8);
LABEL_9:
    sub_5134((uint64_t)v8);
    sub_75204(v1, (uint64_t)v5);
LABEL_10:
    BOOL v16 = 0;
    goto LABEL_11;
  }
  if (qword_BB8F0 != -1) {
    swift_once();
  }
  sub_75E2C();
  uint64_t v15 = *(void *)(sub_8DF70() + 16);
  swift_bridgeObjectRelease();
  sub_5134((uint64_t)v13);
  sub_75204(v1, (uint64_t)v11);
  if (v15) {
    goto LABEL_8;
  }
  if (qword_BB8F8 != -1) {
    swift_once();
  }
  sub_75E2C();
  uint64_t v18 = *(void *)(sub_8DF70() + 16);
  swift_bridgeObjectRelease();
  sub_5134((uint64_t)v11);
  sub_75204(v1, (uint64_t)v8);
  if (v18) {
    goto LABEL_9;
  }
  if (qword_BB900 != -1) {
    swift_once();
  }
  sub_75E2C();
  uint64_t v19 = *(void *)(sub_8DF70() + 16);
  swift_bridgeObjectRelease();
  sub_5134((uint64_t)v8);
  sub_75204(v1, (uint64_t)v5);
  if (v19) {
    goto LABEL_10;
  }
  if (qword_BB908 != -1) {
    swift_once();
  }
  sub_75E2C();
  uint64_t v20 = *(void *)(sub_8DF70() + 16);
  swift_bridgeObjectRelease();
  BOOL v16 = v20 == 0;
LABEL_11:
  sub_5134((uint64_t)v5);
  return v16;
}

uint64_t sub_74D18(uint64_t a1, void *a2)
{
  v6._uint64_t countAndFlagsBits = a1;
  v3._rawValue = &off_B4648;
  v6._object = a2;
  unint64_t v4 = sub_8ED80(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 7) {
    return 7;
  }
  else {
    return v4;
  }
}

uint64_t sub_74D64@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_8E1C0();
  unint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t sub_74DCC()
{
  return sub_74984();
}

uint64_t sub_74DE4(uint64_t a1)
{
  uint64_t v2 = sub_75930(&qword_BF250);

  return NLIntentWrapper.traversableIntentNode.getter(a1, v2);
}

uint64_t sub_74E4C(uint64_t a1)
{
  uint64_t v2 = sub_75930(&qword_BF250);

  return NLIntentWrapper.traversableOntologyNode.getter(a1, v2);
}

uint64_t sub_74EA4(uint64_t a1)
{
  uint64_t v2 = sub_75930(&qword_BF250);

  return NLIntentWrapper.description.getter(a1, v2);
}

uint64_t sub_74EFC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_247E4(*a1, *a2);
}

Swift::Int sub_74F08()
{
  return sub_24DA0();
}

uint64_t sub_74F10(uint64_t a1)
{
  return sub_24F70(a1, *v1);
}

Swift::Int sub_74F18(uint64_t a1)
{
  return sub_253EC(a1, *v1);
}

uint64_t sub_74F20@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_74D18(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_74F50@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_73FA8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_74F7C(void *a1@<X8>)
{
  *a1 = &off_B4710;
}

uint64_t sub_74F8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_75110(a1, a2, a3, (uint64_t (*)(void))sub_75CCC, (uint64_t (*)(void))sub_75D18, (uint64_t (*)(void))sub_75D64);
}

uint64_t sub_74FCC()
{
  unint64_t v0 = sub_8EE60();
  swift_bridgeObjectRelease();
  if (v0 >= 0x1F) {
    return 31;
  }
  else {
    return v0;
  }
}

uint64_t sub_75020(char a1)
{
  return *(void *)&aFirst_1[8 * a1];
}

uint64_t sub_75040(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_247FC(*a1, *a2);
}

Swift::Int sub_7504C()
{
  return sub_24DB8();
}

uint64_t sub_75054(uint64_t a1)
{
  return sub_24F88(a1, *v1);
}

Swift::Int sub_7505C(uint64_t a1)
{
  return sub_253D4(a1, *v1);
}

uint64_t sub_75064@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_74FCC();
  *a1 = result;
  return result;
}

uint64_t sub_75094@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_75020(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_750C0(void *a1@<X8>)
{
  *a1 = &off_B4A40;
}

uint64_t sub_750D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_75110(a1, a2, a3, (uint64_t (*)(void))sub_75974, (uint64_t (*)(void))sub_759C0, (uint64_t (*)(void))sub_75A0C);
}

uint64_t sub_75110(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  uint64_t v10 = a4();
  uint64_t v11 = a5();
  uint64_t v12 = a6();

  return static TerminalNodeBoundedSemanticValue<>.fromIntentNodeValue(_:)(a1, a2, v10, v11, v12);
}

uint64_t sub_751A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SmsNLIntent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_75204(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SmsNLIntent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t getEnumTagSinglePayload for SmsReferenceValue(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xE2)
  {
    if (a2 + 30 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 30) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 31;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x1F;
  int v5 = v6 - 31;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for SmsReferenceValue(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 30 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 30) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xE2) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xE1)
  {
    unsigned int v6 = ((a2 - 226) >> 8) + 1;
    *uint64_t result = a2 + 30;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x753BCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 30;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SmsReferenceValue()
{
  return &type metadata for SmsReferenceValue;
}

uint64_t sub_753F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_8E1C0();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);

  return v5(a1, a2, v4);
}

uint64_t sub_75460(uint64_t a1)
{
  uint64_t v2 = sub_8E1C0();
  int v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_754C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_8E1C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_75528(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_8E1C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_7558C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_8E1C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_755F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_8E1C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_75654(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_75668);
}

uint64_t sub_75668(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_8E1C0();

  return _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0(a1, a2, v4);
}

uint64_t sub_756B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_756C4);
}

uint64_t sub_756C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_8E1C0();

  return _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(a1, a2, a2, v4);
}

uint64_t sub_75710()
{
  uint64_t result = sub_8E1C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_7579C()
{
  return sub_75930(&qword_BCDF0);
}

uint64_t sub_757D0()
{
  return sub_75930(&qword_BF220);
}

unint64_t sub_75808()
{
  unint64_t result = qword_BF228;
  if (!qword_BF228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BF228);
  }
  return result;
}

uint64_t sub_75854()
{
  return sub_75BE8(&qword_BF230, &qword_BF238);
}

unint64_t sub_75894()
{
  unint64_t result = qword_BF240;
  if (!qword_BF240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BF240);
  }
  return result;
}

unint64_t sub_758E4()
{
  unint64_t result = qword_BF248;
  if (!qword_BF248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BF248);
  }
  return result;
}

uint64_t sub_75930(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for SmsNLIntent();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_75974()
{
  unint64_t result = qword_BF258;
  if (!qword_BF258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BF258);
  }
  return result;
}

unint64_t sub_759C0()
{
  unint64_t result = qword_BF260;
  if (!qword_BF260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BF260);
  }
  return result;
}

unint64_t sub_75A0C()
{
  unint64_t result = qword_BF268;
  if (!qword_BF268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BF268);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SmsContactRoleValue(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x75B24);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SmsContactRoleValue()
{
  return &type metadata for SmsContactRoleValue;
}

unint64_t sub_75B60()
{
  unint64_t result = qword_BF288;
  if (!qword_BF288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BF288);
  }
  return result;
}

uint64_t sub_75BAC()
{
  return sub_75BE8(&qword_BF290, &qword_BF298);
}

uint64_t sub_75BE8(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_9950(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_75C30()
{
  unint64_t result = qword_BF2A0;
  if (!qword_BF2A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BF2A0);
  }
  return result;
}

unint64_t sub_75C80()
{
  unint64_t result = qword_BF2A8;
  if (!qword_BF2A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BF2A8);
  }
  return result;
}

unint64_t sub_75CCC()
{
  unint64_t result = qword_BF2B0;
  if (!qword_BF2B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BF2B0);
  }
  return result;
}

unint64_t sub_75D18()
{
  unint64_t result = qword_BF2B8;
  if (!qword_BF2B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BF2B8);
  }
  return result;
}

unint64_t sub_75D64()
{
  unint64_t result = qword_BF2C0;
  if (!qword_BF2C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BF2C0);
  }
  return result;
}

uint64_t sub_75DD0(uint64_t a1)
{
  *(void *)(v1 - 96) = a1;
  return sub_8EBD0();
}

uint64_t sub_75DF8()
{
  return v0;
}

uint64_t sub_75E14()
{
  return v0;
}

uint64_t type metadata accessor for StopAnnouncementAceViewProvider()
{
  uint64_t result = qword_BF2D0;
  if (!qword_BF2D0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_75E98()
{
  return swift_initClassMetadata2();
}

uint64_t sub_75EE8()
{
  uint64_t v1 = sub_493C8(v0);
  if (v1) {
    unint64_t v2 = v1;
  }
  else {
    unint64_t v2 = (unint64_t)_swiftEmptyArrayStorage;
  }
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_8ED40();
    uint64_t v3 = result;
    if (result) {
      goto LABEL_6;
    }
LABEL_22:
    unsigned int v6 = (char *)_swiftEmptyArrayStorage;
    goto LABEL_23;
  }
  uint64_t v3 = *(void *)((char *)&dword_10 + (v2 & 0xFFFFFFFFFFFFFF8));
  uint64_t result = swift_bridgeObjectRetain();
  if (!v3) {
    goto LABEL_22;
  }
LABEL_6:
  if (v3 < 1)
  {
    __break(1u);
    return result;
  }
  uint64_t v5 = 0;
  unsigned int v6 = (char *)_swiftEmptyArrayStorage;
  do
  {
    if ((v2 & 0xC000000000000001) != 0) {
      id v7 = (id)sub_8EC70();
    }
    else {
      id v7 = *(id *)(v2 + 8 * v5 + 32);
    }
    uint64_t v8 = v7;
    id v9 = [v7 originator];
    if (v9 && (v10 = v9, id v11 = [v9 home], v10, v11))
    {
      id v12 = [v11 spokenPhrase];

      uint64_t v13 = sub_8E8D0();
      uint64_t v15 = v14;

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unsigned int v6 = sub_768FC(0, *((void *)v6 + 2) + 1, 1, (uint64_t)v6);
      }
      unint64_t v17 = *((void *)v6 + 2);
      unint64_t v16 = *((void *)v6 + 3);
      if (v17 >= v16 >> 1) {
        unsigned int v6 = sub_768FC((char *)(v16 > 1), v17 + 1, 1, (uint64_t)v6);
      }
      *((void *)v6 + 2) = v17 + 1;
      uint64_t v18 = &v6[16 * v17];
      *((void *)v18 + 4) = v13;
      *((void *)v18 + 5) = v15;
    }
    else
    {
    }
    ++v5;
  }
  while (v3 != v5);
LABEL_23:
  swift_bridgeObjectRelease_n();

  return sub_762C8((uint64_t)v6);
}

uint64_t sub_760D8()
{
  uint64_t v1 = sub_78090(v0);
  if (v1) {
    unint64_t v2 = v1;
  }
  else {
    unint64_t v2 = (unint64_t)_swiftEmptyArrayStorage;
  }
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_8ED40();
    uint64_t v3 = result;
    if (result) {
      goto LABEL_6;
    }
LABEL_22:
    unsigned int v6 = (char *)_swiftEmptyArrayStorage;
    goto LABEL_23;
  }
  uint64_t v3 = *(void *)((char *)&dword_10 + (v2 & 0xFFFFFFFFFFFFFF8));
  uint64_t result = swift_bridgeObjectRetain();
  if (!v3) {
    goto LABEL_22;
  }
LABEL_6:
  if (v3 < 1)
  {
    __break(1u);
    return result;
  }
  uint64_t v5 = 0;
  unsigned int v6 = (char *)_swiftEmptyArrayStorage;
  do
  {
    if ((v2 & 0xC000000000000001) != 0) {
      id v7 = (id)sub_8EC70();
    }
    else {
      id v7 = *(id *)(v2 + 8 * v5 + 32);
    }
    uint64_t v8 = v7;
    id v9 = [v7 originator];
    if (v9 && (v10 = v9, id v11 = [v9 home], v10, v11))
    {
      id v12 = [v11 spokenPhrase];

      uint64_t v13 = sub_8E8D0();
      uint64_t v15 = v14;

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unsigned int v6 = sub_768FC(0, *((void *)v6 + 2) + 1, 1, (uint64_t)v6);
      }
      unint64_t v17 = *((void *)v6 + 2);
      unint64_t v16 = *((void *)v6 + 3);
      if (v17 >= v16 >> 1) {
        unsigned int v6 = sub_768FC((char *)(v16 > 1), v17 + 1, 1, (uint64_t)v6);
      }
      *((void *)v6 + 2) = v17 + 1;
      uint64_t v18 = &v6[16 * v17];
      *((void *)v18 + 4) = v13;
      *((void *)v18 + 5) = v15;
    }
    else
    {
    }
    ++v5;
  }
  while (v3 != v5);
LABEL_23:
  swift_bridgeObjectRelease_n();

  return sub_762C8((uint64_t)v6);
}

uint64_t sub_762C8(uint64_t a1)
{
  uint64_t v2 = sub_8EAE0();
  uint64_t v10 = v2;
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    unsigned int v4 = (Swift::Int *)(a1 + 40);
    do
    {
      Swift::Int v5 = *(v4 - 1);
      Swift::Int v6 = *v4;
      swift_bridgeObjectRetain();
      sub_775EC(&v9, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    return v10;
  }
  else
  {
    uint64_t v7 = v2;
    swift_bridgeObjectRelease();
  }
  return v7;
}

uint64_t sub_7637C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_7639C(a1, a2, a3, a4, (uint64_t)&unk_B6F88, (uint64_t)sub_78240);
}

uint64_t sub_7639C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  id v11 = (void *)swift_allocObject();
  v11[2] = a3;
  v11[3] = a4;
  v11[4] = a1;
  uint64_t v11[5] = a2;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_EAB0(a6, (uint64_t)v11);

  return swift_release();
}

uint64_t sub_7646C(uint64_t result)
{
  if (result)
  {
    if (*(void *)(result + 16) == 1) {
      return sub_76550(result);
    }
    else {
      return 0;
    }
  }
  return result;
}

void *sub_764B0()
{
  uint64_t v0 = (void *)sub_8D600();
  swift_release();
  sub_4950((uint64_t)v0 + *(void *)(qword_BFE00 + *v0 + 24));
  return v0;
}

uint64_t sub_76550(uint64_t a1)
{
  uint64_t result = sub_7817C(a1);
  if (v4) {
    goto LABEL_7;
  }
  if (*(_DWORD *)(a1 + 36) != v3)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return result;
  }
  if (result == 1 << *(unsigned char *)(a1 + 32)) {
    return 0;
  }
  else {
    return sub_78100(result, v3, 0, a1);
  }
}

uint64_t sub_765B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_76690(a1, (uint64_t (*)(void))&type metadata accessor for Siri_Nlu_External_UserDialogAct, a2);
}

uint64_t sub_765D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_76690(a1, (uint64_t (*)(void))&type metadata accessor for RRCandidate, a2);
}

uint64_t sub_765E8(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2) {
    return sub_8E9D0();
  }
  else {
    return 0;
  }
}

uint64_t sub_76630@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_76690(a1, (uint64_t (*)(void))&type metadata accessor for UtteranceAlignment, a2);
}

uint64_t sub_76648@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_76690(a1, (uint64_t (*)(void))&type metadata accessor for UtteranceSpan, a2);
}

uint64_t sub_76660@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_76690(a1, (uint64_t (*)(void))&type metadata accessor for UsoIdentifier, a2);
}

uint64_t sub_76678@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_76690(a1, (uint64_t (*)(void))&type metadata accessor for SpeakableString, a2);
}

uint64_t sub_76690@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = a2(0);
  uint64_t v7 = v6;
  if (v5)
  {
    (*(void (**)(uint64_t, unint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a3, a1+ ((*(unsigned __int8 *)(*(void *)(v6 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v6 - 8) + 80)), v6);
    uint64_t v8 = 0;
  }
  else
  {
    uint64_t v8 = 1;
  }

  return _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(a3, v8, 1, v7);
}

uint64_t sub_7673C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  sub_8D8C0();
  sub_98C0(v18, v18[3]);
  char v10 = sub_8D0F0();
  sub_4950((uint64_t)v18);
  if (v10)
  {
    id v11 = a3;
    uint64_t v12 = sub_760D8();

    uint64_t v13 = sub_7646C(v12);
    uint64_t v15 = v14;
    swift_bridgeObjectRelease();
    sub_7639C(v13, v15, a4, a5, (uint64_t)&unk_B6F60, (uint64_t)sub_768F0);
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_48AC(&qword_BF320);
    unint64_t v17 = (uint64_t (*)(uint64_t, uint64_t, void *, uint64_t, uint64_t))sub_8D5F0();
    return v17(a1, a2, a3, a4, a5);
  }
}

uint64_t sub_76884()
{
  return swift_release();
}

uint64_t sub_76894()
{
  uint64_t v0 = sub_764B0();
  swift_release();

  return _swift_deallocClassInstance(v0, 72, 7);
}

uint64_t sub_768E4()
{
  return type metadata accessor for StopAnnouncementAceViewProvider();
}

uint64_t sub_768F0(uint64_t a1)
{
  return sub_7CC8(a1, *(void (**)(uint64_t, uint64_t))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

char *sub_768FC(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_48AC(&qword_BCF00);
    char v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 16);
  }
  else
  {
    char v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  if (v5)
  {
    sub_77044((char *)(a4 + 32), v8, v12);
    *(void *)(a4 + 16) = 0;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_76E18(0, v8, (unint64_t)v12, a4);
  }
  return v10;
}

uint64_t sub_769EC(char a1, int64_t a2, char a3, uint64_t a4)
{
  return sub_76A7C(a1, a2, a3, a4, &qword_BBFD0, (uint64_t (*)(void))&type metadata accessor for UsoIdentifier, (uint64_t (*)(void))&type metadata accessor for UsoIdentifier, (void (*)(void))&type metadata accessor for UsoIdentifier);
}

uint64_t sub_76A34(char a1, int64_t a2, char a3, uint64_t a4)
{
  return sub_76A7C(a1, a2, a3, a4, &qword_BF340, (uint64_t (*)(void))&type metadata accessor for DisplayHint, (uint64_t (*)(void))&type metadata accessor for DisplayHint, (void (*)(void))&type metadata accessor for DisplayHint);
}

uint64_t sub_76A7C(char a1, int64_t a2, char a3, uint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t (*a7)(void), void (*a8)(void))
{
  if (a3)
  {
    unint64_t v13 = *(void *)(a4 + 24);
    uint64_t v14 = v13 >> 1;
    if ((uint64_t)(v13 >> 1) < a2)
    {
      if (v14 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_24;
      }
      uint64_t v14 = v13 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v13 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v14 = a2;
      }
    }
  }
  else
  {
    uint64_t v14 = a2;
  }
  uint64_t v15 = *(void *)(a4 + 16);
  if (v14 <= v15) {
    uint64_t v16 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v16 = v14;
  }
  if (!v16)
  {
    uint64_t v20 = &_swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_48AC(a5);
  uint64_t v17 = *(void *)(a6(0) - 8);
  uint64_t v18 = *(void *)(v17 + 72);
  unint64_t v19 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  uint64_t v20 = (void *)swift_allocObject();
  size_t v21 = j__malloc_size(v20);
  if (!v18 || (v21 - v19 == 0x8000000000000000 ? (BOOL v22 = v18 == -1) : (BOOL v22 = 0), v22))
  {
LABEL_24:
    sub_78244();
    uint64_t result = sub_8ED20();
    __break(1u);
    return result;
  }
  long long v20[2] = v15;
  uint64_t v20[3] = 2 * ((uint64_t)(v21 - v19) / v18);
LABEL_19:
  uint64_t v23 = *(void *)(a6(0) - 8);
  unint64_t v24 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  unint64_t v25 = (unint64_t)v20 + v24;
  if (a1)
  {
    sub_77160(a4 + v24, v15, v25, a8);
    *(void *)(a4 + 16) = 0;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_76F10(0, v15, v25, a4, a7);
  }
  return (uint64_t)v20;
}

uint64_t sub_76CB0(char a1, int64_t a2, char a3, uint64_t a4)
{
  return sub_76A7C(a1, a2, a3, a4, &qword_BF348, (uint64_t (*)(void))&type metadata accessor for SemanticValue, (uint64_t (*)(void))&type metadata accessor for SemanticValue, (void (*)(void))&type metadata accessor for SemanticValue);
}

uint64_t sub_76CF8(char a1, int64_t a2, char a3, uint64_t a4)
{
  return sub_76A7C(a1, a2, a3, a4, &qword_BF338, (uint64_t (*)(void))&type metadata accessor for RREntity, (uint64_t (*)(void))&type metadata accessor for RREntity, (void (*)(void))&type metadata accessor for RREntity);
}

uint64_t sub_76D40(char a1, int64_t a2, char a3, uint64_t a4)
{
  return sub_76A7C(a1, a2, a3, a4, &qword_BF330, (uint64_t (*)(void))&type metadata accessor for Siri_Nlu_External_UserDialogAct, (uint64_t (*)(void))&type metadata accessor for Siri_Nlu_External_UserDialogAct, (void (*)(void))&type metadata accessor for Siri_Nlu_External_UserDialogAct);
}

uint64_t sub_76D88(char a1, int64_t a2, char a3, uint64_t a4)
{
  return sub_76A7C(a1, a2, a3, a4, &qword_BE630, (uint64_t (*)(void))&type metadata accessor for SpeakableString, (uint64_t (*)(void))&type metadata accessor for SpeakableString, (void (*)(void))&type metadata accessor for SpeakableString);
}

uint64_t sub_76DD0(char a1, int64_t a2, char a3, uint64_t a4)
{
  return sub_76A7C(a1, a2, a3, a4, &qword_BE668, (uint64_t (*)(void))&type metadata accessor for UsoEntitySpan, (uint64_t (*)(void))&type metadata accessor for UsoEntitySpan, (void (*)(void))&type metadata accessor for UsoEntitySpan);
}

uint64_t sub_76E18(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_8ED70();
  __break(1u);
  return result;
}

uint64_t sub_76F10(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v5 < 0)
  {
LABEL_9:
    sub_78244();
    sub_7828C();
    goto LABEL_11;
  }
  uint64_t v9 = *(void *)(a5(0) - 8);
  uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
  uint64_t v11 = *(void *)(v9 + 72);
  unint64_t v12 = v10 + v11 * a1;
  unint64_t v13 = a3 + v11 * v5;
  if (v12 >= v13 || v12 + v11 * v5 <= a3)
  {
    swift_arrayInitWithCopy();
    swift_bridgeObjectRelease();
    return v13;
  }
  sub_78244();
  sub_78258();
LABEL_11:
  uint64_t result = sub_7829C();
  __break(1u);
  return result;
}

char *sub_77044(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    sub_78244();
    uint64_t result = (char *)sub_78268();
    __break(1u);
  }
  else if (a3 != result || &result[16 * a2] <= a3)
  {
    return (char *)sub_782E4(a3, result);
  }
  return result;
}

uint64_t sub_770A0(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_77160(a1, a2, a3, (void (*)(void))&type metadata accessor for UsoIdentifier);
}

uint64_t sub_770BC(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_77160(a1, a2, a3, (void (*)(void))&type metadata accessor for SpeakableString);
}

uint64_t sub_770D4(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_77160(a1, a2, a3, (void (*)(void))&type metadata accessor for UsoEntitySpan);
}

char *sub_770EC(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    sub_78244();
    uint64_t result = (char *)sub_78268();
    __break(1u);
  }
  else if (a3 != result || &result[8 * a2] <= a3)
  {
    return (char *)sub_782E4(a3, result);
  }
  return result;
}

uint64_t sub_77148(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_77160(a1, a2, a3, (void (*)(void))type metadata accessor for HomeTarget);
}

uint64_t sub_77160(unint64_t a1, uint64_t a2, unint64_t a3, void (*a4)(void))
{
  if (a2 < 0)
  {
    sub_78244();
    uint64_t result = sub_78268();
    __break(1u);
  }
  else if (a3 < a1 {
         || (uint64_t result = ((uint64_t (*)(void))a4)(0),
  }
             a1 + *(void *)(*(void *)(result - 8) + 72) * a2 <= a3))
  {
    a4(0);
    sub_78300();
    return swift_arrayInitWithTakeFrontToBack();
  }
  else if (a3 != a1)
  {
    sub_78300();
    return swift_arrayInitWithTakeBackToFront();
  }
  return result;
}

uint64_t sub_77264(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0)
  {
    sub_78244();
    sub_7828C();
LABEL_11:
    uint64_t result = sub_7829C();
    __break(1u);
    return result;
  }
  if (a3 + 16 * a2 > a1 && a1 + 16 * a2 > a3)
  {
    sub_78244();
    sub_78258();
    goto LABEL_11;
  }

  return swift_arrayInitWithCopy();
}

uint64_t sub_77314(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_7750C(a1, a2, a3, (uint64_t (*)(void))&type metadata accessor for UsoIdentifier);
}

uint64_t sub_7732C(uint64_t a1, uint64_t a2)
{
  return sub_77448(a1, a2);
}

uint64_t sub_77338(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_7750C(a1, a2, a3, (uint64_t (*)(void))&type metadata accessor for SpeakableString);
}

uint64_t sub_77350(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_7750C(a1, a2, a3, (uint64_t (*)(void))&type metadata accessor for DisplayHint);
}

uint64_t sub_77368(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    sub_78244();
    sub_7828C();
LABEL_11:
    uint64_t result = sub_7829C();
    __break(1u);
    return result;
  }
  sub_782C8();
  if (!v5 & v4) {
    BOOL v6 = v3 > v2;
  }
  else {
    BOOL v6 = 0;
  }
  if (v6)
  {
    sub_78244();
    sub_78258();
    goto LABEL_11;
  }
  sub_8D10(0, (unint64_t *)&qword_BCFD8);
  sub_782B4();

  return swift_arrayInitWithCopy();
}

uint64_t sub_77424(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_7750C(a1, a2, a3, (uint64_t (*)(void))&type metadata accessor for UsoEntitySpan);
}

uint64_t sub_7743C(uint64_t a1, uint64_t a2)
{
  return sub_77448(a1, a2);
}

uint64_t sub_77448(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    sub_78244();
    sub_7828C();
LABEL_11:
    uint64_t result = sub_7829C();
    __break(1u);
    return result;
  }
  sub_782C8();
  if (!v6 & v5) {
    BOOL v7 = v4 > v2;
  }
  else {
    BOOL v7 = 0;
  }
  if (v7)
  {
    sub_78244();
    sub_78258();
    goto LABEL_11;
  }
  sub_48AC(v3);
  sub_782B4();

  return swift_arrayInitWithCopy();
}

uint64_t sub_774F4(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_7750C(a1, a2, a3, type metadata accessor for HomeTarget);
}

uint64_t sub_7750C(unint64_t a1, uint64_t a2, unint64_t a3, uint64_t (*a4)(void))
{
  if (a2 < 0)
  {
    sub_78244();
    sub_7828C();
LABEL_11:
    uint64_t result = sub_7829C();
    __break(1u);
    return result;
  }
  uint64_t v6 = *(void *)(*(void *)(a4(0) - 8) + 72) * a2;
  unint64_t v7 = a3 + v6;
  unint64_t v8 = a1 + v6;
  if (v7 > a1 && v8 > a3)
  {
    sub_78244();
    sub_78258();
    goto LABEL_11;
  }
  sub_782B4();

  return swift_arrayInitWithCopy();
}

uint64_t sub_775EC(Swift::Int *a1, Swift::Int a2, Swift::Int a3)
{
  uint64_t v7 = *v3;
  sub_8EEE0();
  swift_bridgeObjectRetain();
  sub_8E930();
  Swift::Int v8 = sub_8EF20();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    unint64_t v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_8EE40() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v14 = (Swift::Int *)(*(void *)(*v3 + 48) + 16 * v10);
      Swift::Int v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      uint64_t v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_8EE40() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  *unint64_t v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_77A78(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *unint64_t v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_7779C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_48AC(&qword_BF328);
  uint64_t v3 = sub_8EC30();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    if (!v7) {
      goto LABEL_7;
    }
LABEL_6:
    unint64_t v12 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v11 << 6))
    {
      uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * i);
      uint64_t v18 = *v17;
      uint64_t v19 = v17[1];
      sub_8EEE0();
      sub_8E930();
      uint64_t result = sub_8EF20();
      uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v21 = result & ~v20;
      unint64_t v22 = v21 >> 6;
      if (((-1 << v21) & ~*(void *)(v9 + 8 * (v21 >> 6))) == 0)
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v20) >> 6;
        while (++v22 != v25 || (v24 & 1) == 0)
        {
          BOOL v26 = v22 == v25;
          if (v22 == v25) {
            unint64_t v22 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v9 + 8 * v22);
          if (v27 != -1)
          {
            unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v9 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(void *)(v9 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
      uint64_t v28 = (void *)(*(void *)(v4 + 48) + 16 * v23);
      void *v28 = v18;
      v28[1] = v19;
      ++*(void *)(v4 + 16);
      if (v7) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v14 = v11 + 1;
      if (__OFADD__(v11, 1)) {
        goto LABEL_38;
      }
      if (v14 >= v8) {
        goto LABEL_32;
      }
      unint64_t v15 = v30[v14];
      ++v11;
      if (!v15)
      {
        int64_t v11 = v14 + 1;
        if (v14 + 1 >= v8) {
          goto LABEL_32;
        }
        unint64_t v15 = v30[v11];
        if (!v15)
        {
          int64_t v11 = v14 + 2;
          if (v14 + 2 >= v8) {
            goto LABEL_32;
          }
          unint64_t v15 = v30[v11];
          if (!v15)
          {
            int64_t v16 = v14 + 3;
            if (v16 >= v8)
            {
LABEL_32:
              swift_release();
              uint64_t v1 = v0;
              uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
              if (v29 > 63) {
                sub_77C14(0, (unint64_t)(v29 + 63) >> 6, v30);
              }
              else {
                void *v30 = -1 << v29;
              }
              *(void *)(v2 + 16) = 0;
              break;
            }
            unint64_t v15 = v30[v16];
            if (!v15)
            {
              while (1)
              {
                int64_t v11 = v16 + 1;
                if (__OFADD__(v16, 1)) {
                  goto LABEL_39;
                }
                if (v11 >= v8) {
                  goto LABEL_32;
                }
                unint64_t v15 = v30[v11];
                ++v16;
                if (v15) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v11 = v16;
          }
        }
      }
LABEL_20:
      unint64_t v7 = (v15 - 1) & v15;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

Swift::Int sub_77A78(Swift::Int result, Swift::Int a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  Swift::Int v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_7779C();
  }
  else
  {
    if (v10 > v9)
    {
      uint64_t result = (Swift::Int)sub_77C30();
      goto LABEL_22;
    }
    sub_77DE4();
  }
  uint64_t v11 = *v4;
  sub_8EEE0();
  sub_8E930();
  uint64_t result = sub_8EF20();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    unint64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (uint64_t result = sub_8EE40(), (result & 1) != 0))
    {
LABEL_21:
      uint64_t result = sub_8EE70();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        uint64_t v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          uint64_t result = sub_8EE40();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  unint64_t v21 = (Swift::Int *)(*(void *)(v20 + 48) + 16 * a3);
  Swift::Int *v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

uint64_t sub_77C14(uint64_t result, uint64_t a2, void *a3)
{
  if (a2 < 0)
  {
    __break(1u);
  }
  else
  {
    for (; a2; --a2)
      *a3++ = result;
  }
  return result;
}

void *sub_77C30()
{
  uint64_t v1 = v0;
  sub_48AC(&qword_BF328);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_8EC20();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = *(void *)(v2 + 56);
  uint64_t v12 = -1;
  if (v10 < 64) {
    uint64_t v12 = ~(-1 << v10);
  }
  unint64_t v13 = v12 & v11;
  int64_t v14 = (unint64_t)(v10 + 63) >> 6;
  if ((v12 & v11) == 0) {
    goto LABEL_12;
  }
LABEL_11:
  unint64_t v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (unint64_t i = v15 | (v9 << 6); ; unint64_t i = __clz(__rbit64(v18)) + (v9 << 6))
  {
    uint64_t v20 = (void *)(*(void *)(v2 + 48) + 16 * i);
    uint64_t v21 = v20[1];
    uint64_t v22 = (void *)(*(void *)(v4 + 48) + 16 * i);
    *uint64_t v22 = *v20;
    v22[1] = v21;
    uint64_t result = (void *)swift_bridgeObjectRetain();
    if (v13) {
      goto LABEL_11;
    }
LABEL_12:
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18)
      {
        int64_t v9 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v18 = *(void *)(v6 + 8 * v9);
        if (!v18) {
          break;
        }
      }
    }
LABEL_25:
    unint64_t v13 = (v18 - 1) & v18;
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v14) {
    goto LABEL_28;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_77DE4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_48AC(&qword_BF328);
  uint64_t v3 = sub_8EC30();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_34:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  if (!v8) {
    goto LABEL_7;
  }
LABEL_6:
  unint64_t v12 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    int64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * i);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    sub_8EEE0();
    swift_bridgeObjectRetain();
    sub_8E930();
    uint64_t result = sub_8EF20();
    uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v9 + 8 * (v21 >> 6))) == 0)
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v20) >> 6;
      while (++v22 != v25 || (v24 & 1) == 0)
      {
        BOOL v26 = v22 == v25;
        if (v22 == v25) {
          unint64_t v22 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v9 + 8 * v22);
        if (v27 != -1)
        {
          unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v9 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(void *)(v9 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    uint64_t v28 = (void *)(*(void *)(v4 + 48) + 16 * v23);
    void *v28 = v18;
    v28[1] = v19;
    ++*(void *)(v4 + 16);
    if (v8) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v14 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_36;
    }
    if (v14 >= v29) {
      goto LABEL_32;
    }
    unint64_t v15 = *(void *)(v6 + 8 * v14);
    ++v11;
    if (!v15)
    {
      int64_t v11 = v14 + 1;
      if (v14 + 1 >= v29) {
        goto LABEL_32;
      }
      unint64_t v15 = *(void *)(v6 + 8 * v11);
      if (!v15)
      {
        int64_t v11 = v14 + 2;
        if (v14 + 2 >= v29) {
          goto LABEL_32;
        }
        unint64_t v15 = *(void *)(v6 + 8 * v11);
        if (!v15) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v8 = (v15 - 1) & v15;
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v29)
  {
LABEL_32:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_34;
  }
  unint64_t v15 = *(void *)(v6 + 8 * v16);
  if (v15)
  {
    int64_t v11 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v11 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_32;
    }
    unint64_t v15 = *(void *)(v6 + 8 * v11);
    ++v16;
    if (v15) {
      goto LABEL_20;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_78090(void *a1)
{
  id v1 = [a1 stoppedAnnouncementRecords];
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  sub_8D10(0, (unint64_t *)&qword_BD4A8);
  uint64_t v3 = sub_8EA30();

  return v3;
}

uint64_t sub_78100(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  if (result < 0 || 1 << *(unsigned char *)(a4 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(void *)(a4 + 8 * ((unint64_t)result >> 6) + 56) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a4 + 36) == a2)
  {
    uint64_t v4 = *(void *)(*(void *)(a4 + 48) + 16 * result);
    swift_bridgeObjectRetain();
    return v4;
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_7817C(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  uint64_t v2 = 64;
  for (uint64_t i = 9; i - 7 < (unint64_t)(v3 + 63) >> 6; ++i)
  {
    unint64_t v1 = *(void *)(a1 + 8 * i);
    v2 += 64;
    if (v1) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_78200()
{
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_78268()
{
  return sub_8ED70();
}

uint64_t sub_7829C()
{
  return sub_8ED70();
}

uint64_t sub_782B4()
{
  return v0;
}

void *sub_782E4@<X0>(void *__dst@<X2>, const void *a2@<X8>)
{
  return memmove(__dst, a2, v2);
}

uint64_t sub_78300()
{
  return v0;
}

uint64_t type metadata accessor for StopAnnouncementCATs()
{
  uint64_t result = qword_BF360;
  if (!qword_BF360) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_7835C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_7839C()
{
  return sub_8E350();
}

uint64_t sub_783C8(char a1)
{
  sub_48AC(&qword_BDB00);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_8FA10;
  *(void *)(v2 + 32) = 0xD000000000000016;
  *(void *)(v2 + 40) = 0x8000000000098B90;
  *(void *)(v2 + 72) = &type metadata for Bool;
  *(unsigned char *)(v2 + 48) = a1;
  sub_8E350();

  return swift_bridgeObjectRelease();
}

uint64_t sub_7848C(uint64_t a1, uint64_t a2)
{
  return sub_784E0(a1, a2);
}

uint64_t sub_784E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_8E460();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_48AC(&qword_BC7B8);
  __chkstk_darwin(v8 - 8);
  sub_12590(a1, (uint64_t)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  uint64_t v10 = sub_8E340();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a2, v4);
  sub_125F8(a1);
  return v10;
}

uint64_t sub_78648()
{
  return type metadata accessor for StopAnnouncementCATs();
}

uint64_t type metadata accessor for StopAnnouncementCATsSimple()
{
  uint64_t result = qword_BF3B0;
  if (!qword_BF3B0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_78698()
{
  return swift_initClassMetadata2();
}

uint64_t sub_786D8()
{
  sub_78DA0((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  unint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *unint64_t v1 = v0;
  v1[1] = sub_7878C;
  return v3(0xD00000000000001DLL, 0x8000000000098BB0, _swiftEmptyArrayStorage);
}

uint64_t sub_7878C(uint64_t a1)
{
  sub_7614();
  uint64_t v7 = *v2;
  uint64_t v4 = swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (!v1) {
    uint64_t v4 = a1;
  }
  return v5(v4);
}

uint64_t sub_78868(char a1)
{
  *(void *)(v2 + 16) = v1;
  *(unsigned char *)(v2 + 48) = a1;
  return _swift_task_switch(sub_7888C, 0, 0);
}

uint64_t sub_7888C()
{
  char v1 = *(unsigned char *)(v0 + 48);
  sub_48AC(&qword_BDB00);
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 32) = 0xD000000000000016;
  *(void *)(v2 + 40) = 0x8000000000098B90;
  *(void *)(v2 + 72) = &type metadata for Bool;
  *(unsigned char *)(v2 + 48) = v1;
  sub_78DA0((uint64_t)&async function pointer to dispatch thunk of CATWrapperSimple.execute(catId:parameters:));
  *(void *)(v0 + 24) = v2;
  *(_OWORD *)(v2 + 16) = v3;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_789A4;
  return v6(0xD000000000000026, 0x8000000000098B60, v2);
}

uint64_t sub_789A4(uint64_t a1)
{
  sub_7614();
  uint64_t v4 = *v2;
  *(void *)(v5 + 40) = v1;
  swift_task_dealloc();
  if (v1)
  {
    return _swift_task_switch(sub_78AD8, 0, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v6 = *(uint64_t (**)(uint64_t))(v4 + 8);
    return v6(a1);
  }
}

uint64_t sub_78AD8()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_78B3C(uint64_t a1, uint64_t a2)
{
  return sub_78B90(a1, a2);
}

uint64_t sub_78B90(uint64_t a1, uint64_t a2)
{
  sub_8E460();
  sub_12B34();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_AAA8();
  uint64_t v10 = v9 - v8;
  uint64_t v11 = sub_48AC(&qword_BC7B8);
  __chkstk_darwin(v11 - 8);
  sub_AAA8();
  sub_12590(a1, v13 - v12);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v10, a2, v2);
  uint64_t v14 = sub_8E3E0();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a2, v2);
  sub_125F8(a1);
  return v14;
}

uint64_t sub_78CBC(uint64_t a1, uint64_t a2)
{
  sub_8E460();
  sub_12B34();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  sub_AAA8();
  uint64_t v9 = v8 - v7;
  swift_allocObject();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v9, a2, v2);
  uint64_t v10 = sub_8E3F0();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a2, v2);
  return v10;
}

uint64_t sub_78D98()
{
  return type metadata accessor for StopAnnouncementCATsSimple();
}

uint64_t sub_78DA0@<X0>(uint64_t a1@<X8>)
{
  return *(unsigned int *)(a1 + 4);
}

uint64_t sub_78DB4()
{
  sub_7A3B8();
  sub_48AC(&qword_BF568);
  sub_CB04();
  __chkstk_darwin(v1);
  sub_7A338();
  type metadata accessor for ReadAnnouncementFlowStrategy();
  sub_7A2F0(&qword_BF570, (void (*)(uint64_t))type metadata accessor for ReadAnnouncementFlowStrategy);
  swift_retain();
  swift_retain();
  sub_7A374();
  sub_7A398();
  uint64_t v2 = sub_7A358();
  v3(v2);
  return v0;
}

uint64_t sub_78EA8()
{
  sub_7A3B8();
  sub_48AC(&qword_BF558);
  sub_CB04();
  __chkstk_darwin(v1);
  sub_7A338();
  type metadata accessor for SendAnnouncementFlowStrategy();
  sub_7A2F0(&qword_BF560, (void (*)(uint64_t))type metadata accessor for SendAnnouncementFlowStrategy);
  swift_retain();
  swift_retain();
  sub_7A374();
  sub_7A398();
  uint64_t v2 = sub_7A358();
  v3(v2);
  return v0;
}

uint64_t sub_78F9C(uint64_t a1)
{
  uint64_t v2 = sub_48AC(&qword_BF548);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8[1] = a1;
  type metadata accessor for StopAnnouncementFlowStrategy();
  sub_7A2F0(&qword_BF550, (void (*)(uint64_t))type metadata accessor for StopAnnouncementFlowStrategy);
  swift_retain();
  swift_retain();
  sub_8D250();
  uint64_t v6 = sub_8D240();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v6;
}

BOOL sub_79110()
{
  sub_8D8B0();
  sub_CB04();
  __chkstk_darwin(v0);
  sub_8D840();
  uint64_t v1 = sub_ACE4();
  int v3 = v2(v1);
  int v4 = enum case for Parse.directInvocation(_:);
  if (v3 == enum case for Parse.directInvocation(_:))
  {
    if (qword_BB830 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_8E730();
    sub_50FC(v5, (uint64_t)qword_BFEC8);
    uint64_t v6 = sub_8E710();
    os_log_type_t v7 = sub_8EB00();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl(&dword_0, v6, v7, "#StopAnnouncementFlow handling direct invocation.", v8, 2u);
      swift_slowDealloc();
    }
  }
  uint64_t v9 = sub_ACE4();
  v10(v9);
  return v3 == v4;
}

uint64_t sub_792AC()
{
  return sub_8CE00();
}

uint64_t sub_79338(uint64_t a1)
{
  v2[29] = a1;
  v2[30] = v1;
  sub_8E460();
  v2[31] = sub_CBA4();
  uint64_t v3 = sub_48AC(&qword_BF510);
  v2[32] = v3;
  sub_CB1C(v3);
  v2[33] = v4;
  v2[34] = swift_task_alloc();
  v2[35] = swift_task_alloc();
  uint64_t v5 = sub_8D8B0();
  v2[36] = v5;
  sub_CB1C(v5);
  v2[37] = v6;
  v2[38] = sub_CBA4();
  return _swift_task_switch(sub_7943C, 0, 0);
}

uint64_t sub_7943C()
{
  if (qword_BB830 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_8E730();
  *(void *)(v0 + 312) = sub_50FC(v1, (uint64_t)qword_BFEC8);
  uint64_t v2 = sub_8E710();
  os_log_type_t v3 = sub_8EB00();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_0, v2, v3, "#StopAnnouncementFlow execute", v4, 2u);
    swift_slowDealloc();
  }
  uint64_t v5 = *(void *)(v0 + 240);

  sub_C940(v5 + 64, v0 + 16);
  sub_C940(v5 + 16, v0 + 56);
  sub_8CEB0();
  uint64_t v6 = *(void *)(v0 + 40);
  uint64_t v7 = sub_C9A4(v0 + 16, v6);
  sub_CB04();
  uint64_t v9 = v8;
  uint64_t v10 = sub_CBA4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v10, v7, v6);
  uint64_t v11 = type metadata accessor for SharedGlobals();
  *(void *)(v0 + 160) = v11;
  *(void *)(v0 + 168) = &off_B6D60;
  uint64_t v12 = sub_C9F4((uint64_t *)(v0 + 136));
  sub_CA58(v10, (uint64_t)v12);
  type metadata accessor for StopAnnouncementFlowStrategy();
  uint64_t v13 = (uint64_t *)swift_allocObject();
  *(void *)(v0 + 320) = v13;
  uint64_t v14 = *(void *)(v0 + 160);
  uint64_t v15 = sub_C9A4(v0 + 136, v14);
  sub_CB04();
  uint64_t v17 = v16;
  uint64_t v18 = sub_CBA4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v18, v15, v14);
  void v13[5] = v11;
  v13[6] = (uint64_t)&off_B6D60;
  uint64_t v19 = sub_C9F4(v13 + 2);
  sub_CA58(v18, (uint64_t)v19);
  sub_C928((long long *)(v0 + 56), (uint64_t)(v13 + 7));
  sub_C928((long long *)(v0 + 96), (uint64_t)(v13 + 12));
  sub_4950(v0 + 136);
  swift_task_dealloc();
  sub_4950(v0 + 16);
  swift_task_dealloc();
  sub_8D840();
  uint64_t v20 = (void *)swift_task_alloc();
  *(void *)(v0 + 328) = v20;
  *uint64_t v20 = v0;
  v20[1] = sub_79754;
  uint64_t v21 = *(void *)(v0 + 304);
  return sub_7A778(v21, 0);
}

uint64_t sub_79754(uint64_t a1)
{
  uint64_t v4 = (void *)*v2;
  uint64_t v5 = (void *)*v2;
  sub_CB34();
  void *v6 = v5;
  void *v6 = *v2;
  v5[42] = v1;
  swift_task_dealloc();
  uint64_t v7 = v4[38];
  uint64_t v8 = v4[37];
  uint64_t v9 = v4[36];
  if (v1)
  {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
    uint64_t v10 = sub_79C54;
  }
  else
  {
    v5[43] = a1;
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
    uint64_t v10 = sub_798D4;
  }
  return _swift_task_switch(v10, 0, 0);
}

uint64_t sub_798D4()
{
  uint64_t v20 = v0[40];
  uint64_t v21 = (void *)v0[43];
  uint64_t v1 = v0[35];
  uint64_t v19 = v0[33];
  uint64_t v22 = v0[32];
  uint64_t v2 = v0[30] + 64;
  uint64_t v17 = v0[30];
  uint64_t v18 = (void *)v2;
  sub_8D10(0, &qword_BF518);
  sub_8D10(0, &qword_BF520);
  sub_8CDD0();
  uint64_t v3 = *(void *)(v17 + 56);
  sub_C940(v2, (uint64_t)(v0 + 22));
  type metadata accessor for StopAnnouncementCATsSimple();
  swift_retain();
  sub_8E450();
  uint64_t v4 = sub_8E400();
  type metadata accessor for HomeCommunicationDisplayTextCATsSimple();
  sub_8E450();
  uint64_t v5 = sub_8E400();
  uint64_t v6 = v0[25];
  uint64_t v7 = sub_C9A4((uint64_t)(v0 + 22), v6);
  sub_CB04();
  uint64_t v9 = v8;
  uint64_t v10 = sub_CBA4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v10, v7, v6);
  uint64_t v11 = sub_7A158(v3, v10, v4, v5);
  sub_4950((uint64_t)(v0 + 22));
  swift_task_dealloc();
  v0[27] = v11;
  type metadata accessor for StopAnnouncementIntentHandledStrategy();
  sub_7A2F0(&qword_BF528, (void (*)(uint64_t))type metadata accessor for StopAnnouncementIntentHandledStrategy);
  sub_8CD30();
  sub_8CD90();
  sub_8CD40();
  sub_8CDA0();
  uint64_t v12 = sub_ACE4();
  v13(v12);
  sub_48AC(&qword_BF530);
  swift_allocObject();
  sub_8CDE0();
  uint64_t v14 = sub_98C0(v18, *(void *)(v17 + 88));
  sub_98C0(v14 + 2, v14[5]);
  v0[28] = sub_78F9C(v20);
  sub_48AC(&qword_BF538);
  sub_7A29C();
  sub_8CDF0();
  swift_release();
  sub_8D290();
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v1, v22);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v15 = (uint64_t (*)(void))v0[1];
  return v15();
}

uint64_t sub_79C54()
{
  swift_release();
  uint64_t v1 = sub_8E710();
  os_log_type_t v2 = sub_8EB10();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_0, v1, v2, "#StopAnnouncementFlow Error thrown while creating RCH flow", v3, 2u);
    swift_slowDealloc();
  }

  sub_8D2A0();
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_79D68()
{
  sub_4950(v0 + 16);
  swift_release();
  sub_4950(v0 + 64);
  uint64_t v1 = v0 + OBJC_IVAR____TtC35HomeCommunicationFlowDelegatePlugin20StopAnnouncementFlow_input;
  uint64_t v2 = sub_8D860();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t sub_79DE4()
{
  sub_79D68();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return _swift_deallocClassInstance(v0, v1, v2);
}

uint64_t sub_79E3C()
{
  return type metadata accessor for StopAnnouncementFlow();
}

uint64_t type metadata accessor for StopAnnouncementFlow()
{
  uint64_t result = qword_BF440;
  if (!qword_BF440) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_79E8C()
{
  uint64_t result = sub_8D860();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

BOOL sub_79F38()
{
  return sub_79110();
}

uint64_t sub_79F54()
{
  return sub_792AC();
}

uint64_t sub_79F78(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_3F148;
  return sub_79338(a1);
}

uint64_t sub_7A014(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for StopAnnouncementFlow();

  return Flow<>.exitValue.getter(v3, a2);
}

void *sub_7A050(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v10 = sub_8D160();
  __chkstk_darwin(v10 - 8);
  uint64_t v14 = type metadata accessor for SharedGlobals();
  uint64_t v15 = &off_B6D60;
  uint64_t v11 = sub_C9F4((uint64_t *)&v13);
  sub_CA58(a2, (uint64_t)v11);
  sub_8D130();
  sub_8D6E0();
  a5[8] = a1;
  sub_C928(&v13, (uint64_t)(a5 + 2));
  a5[7] = a3;
  a5[9] = a4;
  return a5;
}

void *sub_7A158(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v18 = type metadata accessor for SharedGlobals();
  uint64_t v19 = &off_B6D60;
  uint64_t v8 = sub_C9F4(v17);
  sub_CA58(a2, (uint64_t)v8);
  type metadata accessor for StopAnnouncementIntentHandledStrategy();
  uint64_t v9 = (void *)swift_allocObject();
  uint64_t v10 = sub_C9A4((uint64_t)v17, v18);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v17[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v13 + 16))(v12);
  uint64_t v14 = sub_7A050(a1, (uint64_t)v12, a3, a4, v9);
  sub_4950((uint64_t)v17);
  return v14;
}

unint64_t sub_7A29C()
{
  unint64_t result = qword_BF540;
  if (!qword_BF540)
  {
    sub_9950(&qword_BF538);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BF540);
  }
  return result;
}

uint64_t sub_7A2F0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_7A338()
{
  *(void *)(v1 - 88) = v0;
  return 0;
}

uint64_t sub_7A358()
{
  return v0;
}

uint64_t sub_7A374()
{
  return sub_8D250();
}

uint64_t sub_7A398()
{
  return sub_8D240();
}

uint64_t sub_7A3CC()
{
  uint64_t v0 = sub_8D890();
  sub_5190();
  uint64_t v2 = v1;
  __chkstk_darwin(v3);
  uint64_t v30 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_8D8B0();
  sub_5190();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_BB830 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_8E730();
  uint64_t v12 = sub_50FC(v11, (uint64_t)qword_BFEC8);
  uint64_t v13 = sub_8E710();
  os_log_type_t v14 = sub_8EB00();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = (uint8_t *)sub_CCE4();
    uint64_t v29 = v12;
    *(_WORD *)uint64_t v15 = 0;
    _os_log_impl(&dword_0, v13, v14, "#StopAnnouncementFlowStrategy.actionForInput() handling", v15, 2u);
    sub_CC2C();
  }

  sub_8D840();
  if ((*(unsigned int (**)(char *, uint64_t))(v7 + 88))(v10, v5) == enum case for Parse.directInvocation(_:))
  {
    (*(void (**)(char *, uint64_t))(v7 + 96))(v10, v5);
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v30, v10, v0);
    if (sub_8D870() == 0xD000000000000036 && v16 == 0x80000000000961F0)
    {
      swift_bridgeObjectRelease();
LABEL_11:
      uint64_t v18 = sub_8E710();
      os_log_type_t v19 = sub_8EB00();
      if (os_log_type_enabled(v18, v19))
      {
        uint64_t v20 = (uint8_t *)sub_CCE4();
        *(_WORD *)uint64_t v20 = 0;
        _os_log_impl(&dword_0, v18, v19, "#StopAnnouncementFlowStrategy user tapped stop button. Handling direct invocations.", v20, 2u);
        sub_CC2C();
      }

      sub_8D200();
      uint64_t v21 = sub_7B328();
      return v22(v21);
    }
    char v17 = sub_8EE40();
    swift_bridgeObjectRelease();
    if (v17) {
      goto LABEL_11;
    }
    uint64_t v24 = sub_7B328();
    v25(v24);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v5);
  }
  BOOL v26 = sub_8E710();
  os_log_type_t v27 = sub_8EB00();
  if (os_log_type_enabled(v26, v27))
  {
    uint64_t v28 = (uint8_t *)sub_CCE4();
    *(_WORD *)uint64_t v28 = 0;
    _os_log_impl(&dword_0, v26, v27, "#StopAnnouncementFlowStrategy the action is not a direct invocation. Ignoring to let flow up the stack to handle this.", v28, 2u);
    sub_CC2C();
  }

  return sub_8D210();
}

uint64_t sub_7A778(uint64_t a1, uint64_t a2)
{
  *(void *)(v3 + 96) = a2;
  *(void *)(v3 + 104) = v2;
  return _swift_task_switch(sub_7A798, 0, 0);
}

uint64_t sub_7A798()
{
  uint64_t v30 = v0;
  if (qword_BB830 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_8E730();
  sub_50FC(v1, (uint64_t)qword_BFEC8);
  uint64_t v2 = sub_8E710();
  os_log_type_t v3 = sub_8EB00();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)sub_CCE4();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_0, v2, v3, "#StopAnnouncementFlowStrategy makeIntentFromParse(parse:currentIntent:) called", v4, 2u);
    sub_CC2C();
  }
  uint64_t v5 = v0[12];

  uint64_t v6 = (void *)v0[12];
  if (v5) {
    id v7 = (id)v0[12];
  }
  else {
    id v7 = [objc_allocWithZone((Class)INStopAnnouncementIntent) init];
  }
  id v8 = v6;
  id v9 = [v7 _metadata];
  if (v9)
  {
    uint64_t v10 = v9;
    sub_8D060();
    sub_98C0(v0 + 2, v0[5]);
    sub_8D580();
    sub_98C0(v0 + 7, v0[10]);
    sub_8D570();
    if (v11)
    {
      NSString v12 = sub_8E8C0();
      swift_bridgeObjectRelease();
    }
    else
    {
      NSString v12 = 0;
    }
    sub_4950((uint64_t)(v0 + 7));
    sub_4950((uint64_t)(v0 + 2));
    [v10 setEndpointId:v12];
  }
  id v13 = v7;
  os_log_type_t v14 = sub_8E710();
  os_log_type_t v15 = sub_8EB00();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    uint64_t v29 = swift_slowAlloc();
    *(_DWORD *)uint64_t v16 = 136315138;
    id v17 = [v13 _metadata];
    if (v17) {
      id v17 = (id)sub_7B2B8(v17);
    }
    else {
      uint64_t v18 = 0;
    }
    v0[3] = v18;
    v0[2] = v17;
    sub_48AC(&qword_BDDD8);
    uint64_t v19 = sub_8E8E0();
    v0[2] = sub_8758C(v19, v20, &v29);
    sub_8EBD0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_0, v14, v15, "#StopAnnouncementFlowStrategy setting endpoint ID=%s", v16, 0xCu);
    swift_arrayDestroy();
    sub_CC2C();
    sub_CC2C();
  }
  else
  {
  }
  uint64_t v21 = (void *)v0[13];
  sub_98C0(v21 + 12, v21[15]);
  sub_8D050();
  uint64_t v22 = v21[10];
  uint64_t v23 = v21[11];
  sub_98C0(v21 + 7, v22);
  char v24 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 16))(v22, v23);
  id v25 = sub_1CFF0(v24);
  id v26 = [v25 _className];

  sub_8E8D0();
  swift_retain();
  sub_8D040();
  sub_8CEC0();
  swift_release();
  os_log_type_t v27 = (uint64_t (*)(id))v0[1];
  return v27(v13);
}

uint64_t type metadata accessor for StopAnnouncementFlowStrategy()
{
  return self;
}

uint64_t sub_7AC00()
{
  return sub_7A3CC();
}

uint64_t sub_7AC18(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_3FD00;
  return sub_7A778((uint64_t)v4, a2);
}

uint64_t sub_7ACB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for StopAnnouncementFlowStrategy();

  return RCHFlowStrategyAsync.makeParameterMetadata(intent:)(a1, v5, a3);
}

uint64_t sub_7ACFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v10;
  uint64_t v11 = type metadata accessor for StopAnnouncementFlowStrategy();
  *uint64_t v10 = v5;
  v10[1] = sub_404A8;
  return ResolveConfirmFlowStrategyAsync.makeAppDoesNotSupportIntentResponse(app:intent:)(a1, a2, a3, v11, a5);
}

uint64_t sub_7ADC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v10;
  uint64_t v11 = type metadata accessor for StopAnnouncementFlowStrategy();
  *uint64_t v10 = v5;
  v10[1] = sub_404A8;
  return ResolveConfirmFlowStrategyAsync.makeAppNotFoundOnDeviceResponse(app:intent:)(a1, a2, a3, v11, a5);
}

uint64_t sub_7AE94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v10;
  uint64_t v11 = type metadata accessor for StopAnnouncementFlowStrategy();
  *uint64_t v10 = v5;
  v10[1] = sub_404A8;
  return ResolveConfirmFlowStrategyAsync.makeDeviceIncompatibleResponse(app:intent:)(a1, a2, a3, v11, a5);
}

uint64_t sub_7AF60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  NSString v12 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v12;
  uint64_t v13 = type metadata accessor for StopAnnouncementFlowStrategy();
  void *v12 = v6;
  v12[1] = sub_3F148;
  return ResolveConfirmFlowStrategyAsync.makeErrorResponse(error:app:intent:)(a1, a2, a3, a4, v13, a6);
}

uint64_t sub_7B03C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  NSString v12 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v12;
  uint64_t v13 = type metadata accessor for StopAnnouncementFlowStrategy();
  void *v12 = v6;
  v12[1] = sub_404A8;
  return RouteConfirmIntentResponseFlowStrategyAsync.makeFailureConfirmingIntentResponse(app:intent:intentResponse:)(a1, a2, a3, a4, v13, a6);
}

uint64_t sub_7B118(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  uint64_t v9 = type metadata accessor for StopAnnouncementFlowStrategy();
  *id v8 = v4;
  v8[1] = sub_3EFB8;
  return IntentExtensionCommunicatingAsync.makeIntentExecutionBehavior(app:intent:)(a1, a2, v9, a4);
}

uint64_t sub_7B1DC()
{
  return sub_7B278(&qword_BF650);
}

uint64_t sub_7B210()
{
  return sub_7B278(qword_BF658);
}

uint64_t sub_7B244()
{
  return sub_7B278(qword_BF680);
}

uint64_t sub_7B278(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for StopAnnouncementFlowStrategy();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_7B2B8(void *a1)
{
  id v2 = [a1 endpointId];

  if (!v2) {
    return 0;
  }
  uint64_t v3 = sub_8E8D0();

  return v3;
}

uint64_t sub_7B328()
{
  return v0;
}

unint64_t sub_7B33C()
{
  return 0xD000000000000016;
}

unint64_t sub_7B358()
{
  return 0xD000000000000018;
}

unint64_t sub_7B374()
{
  return 0xD000000000000018;
}

ValueMetadata *type metadata accessor for StopAnnouncementIntent()
{
  return &type metadata for StopAnnouncementIntent;
}

unint64_t sub_7B3A8()
{
  unint64_t result = qword_BF698;
  if (!qword_BF698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BF698);
  }
  return result;
}

unint64_t sub_7B3F4(uint64_t a1)
{
  unint64_t result = sub_7B41C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_7B41C()
{
  unint64_t result = qword_BF6B8;
  if (!qword_BF6B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BF6B8);
  }
  return result;
}

uint64_t sub_7B468(uint64_t a1)
{
  *(void *)(v2 + 64) = a1;
  *(void *)(v2 + 72) = v1;
  return sub_461D8((uint64_t)sub_7B480);
}

uint64_t sub_7B480()
{
  sub_1425C();
  if (qword_BB830 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_8E730();
  sub_50FC(v1, (uint64_t)qword_BFEC8);
  uint64_t v2 = (void *)sub_8E710();
  os_log_type_t v3 = sub_8EB00();
  if (sub_463A0(v3))
  {
    *(_WORD *)swift_slowAlloc() = 0;
    sub_5C000(&dword_0, v4, v5, "#StopAnnouncementIntentHandledStrategy makeIntentHandledResponse");
    sub_628A4();
  }

  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v6;
  void *v6 = v0;
  v6[1] = sub_7B5A8;
  return sub_78868(1);
}

uint64_t sub_7B5A8()
{
  sub_CC60();
  sub_7614();
  sub_461E4();
  *os_log_type_t v3 = v2;
  *os_log_type_t v3 = *v1;
  *(void *)(v2 + 88) = v4;
  swift_task_dealloc();
  if (v0)
  {
    sub_CC20();
    return v5();
  }
  else
  {
    sub_46200();
    return _swift_task_switch(v7, v8, v9);
  }
}

uint64_t sub_7B6A8()
{
  sub_8D8C0();
  sub_98C0(v0 + 2, v0[5]);
  char v1 = sub_8D0F0();
  sub_4950((uint64_t)(v0 + 2));
  if (v1)
  {
    uint64_t v2 = (void *)v0[11];
    sub_48AC(&qword_BE170);
    uint64_t v3 = swift_allocObject();
    *(_OWORD *)(v3 + 16) = xmmword_8FC30;
    *(void *)(v3 + 32) = v2;
    uint64_t v18 = v3;
    sub_8EA50();
    v0[12] = v18;
    id v4 = v2;
    swift_task_alloc();
    sub_4625C();
    v0[13] = v5;
    *uint64_t v5 = v6;
    v5[1] = sub_7B8C0;
    return sub_7BBA0();
  }
  else
  {
    uint64_t v8 = (void *)v0[11];
    sub_8D3A0();
    sub_CB8C();
    v0[7] = sub_8D390();
    sub_48AC(&qword_BE170);
    uint64_t v9 = (__n128 *)swift_allocObject();
    sub_627B4(v9, (__n128)xmmword_8FC30);
    v0[15] = v17;
    id v10 = v8;
    swift_task_alloc();
    sub_4625C();
    v0[16] = v11;
    *uint64_t v11 = v12;
    v11[1] = sub_7B9FC;
    sub_6279C();
    return dispatch thunk of ResponseGenerating.makeResponseOutput(dialog:outputGenerationManifest:)(v13, v14, v15, v16);
  }
}

uint64_t sub_7B8C0()
{
  sub_CC60();
  sub_7614();
  uint64_t v3 = v2;
  sub_461E4();
  *id v4 = v3;
  uint64_t v5 = *v1;
  sub_CB34();
  void *v6 = v5;
  *(void *)(v3 + 112) = v0;
  swift_task_dealloc();
  if (!v0) {
    swift_bridgeObjectRelease();
  }
  sub_46200();
  return _swift_task_switch(v7, v8, v9);
}

uint64_t sub_7B9A4()
{
  sub_CC60();

  sub_46228();
  return v1();
}

uint64_t sub_7B9FC()
{
  sub_CC60();
  sub_7614();
  uint64_t v1 = *v0;
  sub_CB34();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  sub_46200();
  return _swift_task_switch(v3, v4, v5);
}

uint64_t sub_7BAE0()
{
  sub_CC60();

  swift_release();
  sub_46228();
  return v1();
}

uint64_t sub_7BB40()
{
  sub_CC60();
  uint64_t v1 = *(void **)(v0 + 88);
  swift_bridgeObjectRelease();

  sub_CC20();
  return v2();
}

uint64_t sub_7BBA0()
{
  sub_CC60();
  v1[199] = v0;
  v1[193] = v2;
  v1[187] = v3;
  type metadata accessor for CarPlayIntercomControlModel();
  v1[205] = swift_task_alloc();
  uint64_t v4 = sub_8D760();
  v1[211] = v4;
  sub_CB1C(v4);
  v1[217] = v5;
  v1[218] = swift_task_alloc();
  sub_46200();
  return _swift_task_switch(v6, v7, v8);
}

uint64_t sub_7BC68()
{
  if (qword_BB830 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_8E730();
  sub_50FC(v1, (uint64_t)qword_BFEC8);
  uint64_t v2 = (void *)sub_8E710();
  os_log_type_t v3 = sub_8EB00();
  if (sub_463A0(v3))
  {
    *(_WORD *)swift_slowAlloc() = 0;
    sub_5C000(&dword_0, v4, v5, "#StopAnnouncementIntentHandledStrategy makeIntentHandledResponseCarPlay making play/reply snippet");
    sub_628A4();
  }
  uint64_t v6 = v0[218];
  uint64_t v7 = v0[217];
  uint64_t v8 = v0[211];
  uint64_t v9 = v0[199];

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v6, v9+ OBJC_IVAR____TtC35HomeCommunicationFlowDelegatePlugin37StopAnnouncementIntentHandledStrategy_completionOutputManifest, v8);
  sub_8D710();
  swift_retain_n();
  swift_asyncLet_begin();
  swift_retain_n();
  swift_asyncLet_begin();
  return _swift_asyncLet_get_throwing(v0 + 82, v0 + 179, sub_7BE5C, v0 + 182);
}

uint64_t sub_7BE5C()
{
  sub_1425C();
  v1[219] = v0;
  if (v0)
  {
    sub_46200();
    return _swift_task_switch(v2, v3, v4);
  }
  else
  {
    v1[220] = v1[179];
    v1[221] = v1[180];
    swift_bridgeObjectRetain();
    return _swift_asyncLet_get_throwing(v1 + 2, v1 + 177, sub_7BF24, v1 + 172);
  }
}

uint64_t sub_7BF24()
{
  *(void *)(v1 + 1776) = v0;
  if (v0) {
    return sub_461D8((uint64_t)sub_7C4A4);
  }
  else {
    return sub_461D8((uint64_t)sub_7BF50);
  }
}

uint64_t sub_7BF50()
{
  uint64_t v1 = v0[205];
  swift_bridgeObjectRetain();
  CarPlayIntercomControlModel.init(playStopText:replyText:isPlaying:)();
  uint64_t v2 = sub_8D3A0();
  sub_CB8C();
  v0[181] = sub_8D390();
  v0[170] = type metadata accessor for HomeCommunicationSnippetModel();
  v0[171] = sub_7D988(&qword_BDFB0, (void (*)(uint64_t))type metadata accessor for HomeCommunicationSnippetModel);
  uint64_t v3 = sub_C9F4(v0 + 167);
  sub_9E58(v1, (uint64_t)v3);
  swift_storeEnumTagMultiPayload();
  swift_task_alloc();
  sub_4625C();
  v0[223] = (uint64_t)v4;
  *uint64_t v4 = v5;
  v4[1] = sub_7C0E4;
  uint64_t v6 = v0[218];
  uint64_t v7 = v0[193];
  uint64_t v8 = v0[187];
  return dispatch thunk of ResponseGenerating.makeResponseOutput(conversationModel:dialog:outputGenerationManifest:)(v8, v0 + 167, v7, v6, v2);
}

uint64_t sub_7C0E4()
{
  sub_CC60();
  sub_7614();
  sub_461E4();
  *uint64_t v2 = v1;
  uint64_t v3 = v1 + 1336;
  uint64_t v4 = *v0;
  sub_CB34();
  *uint64_t v5 = v4;
  swift_task_dealloc();
  sub_4950(v3);
  sub_46200();
  return _swift_task_switch(v6, v7, v8);
}

uint64_t sub_7C1B4()
{
  sub_1425C();
  sub_9EBC(*(void *)(v0 + 1640));
  swift_release();
  uint64_t v1 = sub_461F0();
  return _swift_asyncLet_finish(v1);
}

uint64_t sub_7C230()
{
  return sub_461D8((uint64_t)sub_7C244);
}

uint64_t sub_7C244()
{
  sub_1425C();
  swift_release();
  uint64_t v0 = sub_461F0();
  return _swift_asyncLet_finish(v0);
}

uint64_t sub_7C2B8()
{
  return sub_461D8((uint64_t)sub_7C2CC);
}

uint64_t sub_7C2CC()
{
  sub_1425C();
  (*(void (**)(void, void))(v0[217] + 8))(v0[218], v0[211]);
  swift_release_n();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_46228();
  return v1();
}

uint64_t sub_7C368()
{
  return _swift_asyncLet_finish(v0 + 16);
}

uint64_t sub_7C388()
{
  return sub_461D8((uint64_t)sub_7C39C);
}

uint64_t sub_7C39C()
{
  sub_1425C();
  swift_release();
  uint64_t v0 = sub_461F0();
  return _swift_asyncLet_finish(v0);
}

uint64_t sub_7C410()
{
  return sub_461D8((uint64_t)sub_7C424);
}

uint64_t sub_7C424()
{
  sub_1425C();
  uint64_t v0 = sub_7D9D4();
  v1(v0);
  swift_release_n();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_CC20();
  return v2();
}

uint64_t sub_7C4A4()
{
  sub_1425C();
  swift_bridgeObjectRelease();
  uint64_t v0 = sub_461F0();
  return _swift_asyncLet_finish(v0);
}

uint64_t sub_7C518()
{
  return sub_461D8((uint64_t)sub_7C52C);
}

uint64_t sub_7C52C()
{
  sub_1425C();
  swift_release();
  uint64_t v0 = sub_461F0();
  return _swift_asyncLet_finish(v0);
}

uint64_t sub_7C5A0()
{
  return sub_461D8((uint64_t)sub_7C5B4);
}

uint64_t sub_7C5B4()
{
  sub_1425C();
  uint64_t v0 = sub_7D9D4();
  v1(v0);
  swift_release_n();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_CC20();
  return v2();
}

uint64_t sub_7C634(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return _swift_task_switch(sub_7C654, 0, 0);
}

uint64_t sub_7C654()
{
  sub_CC60();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_7C6E4;
  return sub_13880();
}

uint64_t sub_7C6E4()
{
  sub_1425C();
  uint64_t v3 = v2;
  sub_7614();
  uint64_t v5 = v4;
  sub_461E4();
  void *v6 = v5;
  uint64_t v7 = *v1;
  sub_CB34();
  *uint64_t v8 = v7;
  swift_task_dealloc();
  if (v0)
  {
    sub_7D9FC();
    return v9();
  }
  else
  {
    *(void *)(v5 + 40) = v3;
    sub_46200();
    return _swift_task_switch(v11, v12, v13);
  }
}

uint64_t sub_7C7F0(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return _swift_task_switch(sub_7C810, 0, 0);
}

uint64_t sub_7C810()
{
  sub_CC60();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_7C8A0;
  return sub_139B0();
}

uint64_t sub_7C8A0()
{
  sub_1425C();
  uint64_t v3 = v2;
  sub_7614();
  uint64_t v5 = v4;
  sub_461E4();
  void *v6 = v5;
  uint64_t v7 = *v1;
  sub_CB34();
  *uint64_t v8 = v7;
  swift_task_dealloc();
  if (v0)
  {
    sub_7D9FC();
    return v9();
  }
  else
  {
    *(void *)(v5 + 40) = v3;
    sub_46200();
    return _swift_task_switch(v11, v12, v13);
  }
}

uint64_t sub_7C9AC()
{
  sub_CC60();
  v1[17] = v2;
  v1[18] = v0;
  uint64_t v3 = sub_8CAE0();
  v1[19] = v3;
  sub_CB1C(v3);
  v1[20] = v4;
  v1[21] = swift_task_alloc();
  sub_46200();
  return _swift_task_switch(v5, v6, v7);
}

uint64_t sub_7CA40()
{
  if (qword_BB830 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_8E730();
  sub_50FC(v1, (uint64_t)qword_BFEC8);
  uint64_t v2 = (void *)sub_8E710();
  os_log_type_t v3 = sub_8EB00();
  if (sub_463A0(v3))
  {
    *(_WORD *)swift_slowAlloc() = 0;
    sub_5C000(&dword_0, v4, v5, "#StopAnnouncementIntentHandledStrategy makeFailureHandlingIntentResponse");
    sub_628A4();
  }
  uint64_t v7 = v0[20];
  uint64_t v6 = v0[21];
  uint64_t v8 = v0[19];

  type metadata accessor for RadarUtils();
  uint64_t inited = swift_initStackObject();
  sub_8E330();
  sub_CB8C();
  *(void *)(inited + 16) = sub_8E320();
  sub_8D8C0();
  sub_98C0(v0 + 2, v0[5]);
  sub_8D080();
  v0[10] = sub_8CAD0();
  v0[11] = v10;
  v0[12] = 45;
  v0[13] = 0xE100000000000000;
  v0[14] = 95;
  v0[15] = 0xE100000000000000;
  sub_F5CC();
  sub_8EBF0();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  sub_3A6A0(1, 3);
  swift_release();
  swift_bridgeObjectRelease();
  sub_4950((uint64_t)(v0 + 2));
  uint64_t v11 = (void *)swift_task_alloc();
  v0[22] = v11;
  *uint64_t v11 = v0;
  v11[1] = sub_7CCD0;
  return sub_786D8();
}

uint64_t sub_7CCD0()
{
  sub_1425C();
  uint64_t v3 = v2;
  sub_7614();
  uint64_t v5 = v4;
  sub_461E4();
  void *v6 = v5;
  uint64_t v7 = *v1;
  sub_CB34();
  *uint64_t v8 = v7;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    sub_7D9FC();
    return v9();
  }
  else
  {
    *(void *)(v5 + 184) = v3;
    sub_46200();
    return _swift_task_switch(v11, v12, v13);
  }
}

uint64_t sub_7CDE4()
{
  uint64_t v1 = (void *)v0[23];
  sub_8D3A0();
  sub_CB8C();
  v0[16] = sub_8D390();
  sub_48AC(&qword_BE170);
  uint64_t v2 = (__n128 *)swift_allocObject();
  sub_627B4(v2, (__n128)xmmword_8FC30);
  v0[24] = v11;
  id v3 = v1;
  swift_task_alloc();
  sub_4625C();
  v0[25] = v4;
  *uint64_t v4 = v5;
  v4[1] = sub_7CF00;
  sub_6279C();
  return dispatch thunk of ResponseGenerating.makeResponseOutput(dialog:outputGenerationManifest:)(v6, v7, v8, v9);
}

uint64_t sub_7CF00()
{
  sub_CC60();
  sub_7614();
  uint64_t v1 = *v0;
  sub_CB34();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  sub_46200();
  return _swift_task_switch(v3, v4, v5);
}

uint64_t sub_7CFE4()
{
  sub_CC60();

  swift_release();
  swift_task_dealloc();
  sub_46228();
  return v1();
}

uint64_t sub_7D050()
{
  sub_4950(v0 + 16);
  swift_release();
  swift_release();
  swift_release();
  uint64_t v1 = v0
     + OBJC_IVAR____TtC35HomeCommunicationFlowDelegatePlugin37StopAnnouncementIntentHandledStrategy_completionOutputManifest;
  uint64_t v2 = sub_8D760();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t sub_7D0D4()
{
  sub_7D050();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return _swift_deallocClassInstance(v0, v1, v2);
}

uint64_t sub_7D12C()
{
  return type metadata accessor for StopAnnouncementIntentHandledStrategy();
}

uint64_t type metadata accessor for StopAnnouncementIntentHandledStrategy()
{
  uint64_t result = qword_BF6F0;
  if (!qword_BF6F0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_7D17C()
{
  uint64_t result = sub_8D760();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_7D228(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  uint64_t v9 = type metadata accessor for StopAnnouncementIntentHandledStrategy();
  *uint64_t v8 = v4;
  v8[1] = sub_461CC;
  return HandleIntentFlowStrategyAsync.makePromptForDeviceUnlock(rchRecord:)(a1, a2, v9, a4);
}

uint64_t sub_7D2F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  uint64_t v9 = type metadata accessor for StopAnnouncementIntentHandledStrategy();
  *uint64_t v8 = v4;
  v8[1] = sub_461CC;
  return HandleIntentFlowStrategyAsync.makeHandoffForAuthenticationResponse(rchRecord:)(a1, a2, v9, a4);
}

uint64_t sub_7D3B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  uint64_t v9 = type metadata accessor for StopAnnouncementIntentHandledStrategy();
  *uint64_t v8 = v4;
  v8[1] = sub_461CC;
  return HandleIntentFlowStrategyAsync.makePreHandleIntentOutput(rchRecord:)(a1, a2, v9, a4);
}

uint64_t sub_7D480(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_461CC;
  return sub_7B468(a1);
}

uint64_t sub_7D51C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  uint64_t v9 = type metadata accessor for StopAnnouncementIntentHandledStrategy();
  *uint64_t v8 = v4;
  v8[1] = sub_461CC;
  return HandleIntentFlowStrategyAsync.makeContinueInAppResponse(rchRecord:)(a1, a2, v9, a4);
}

uint64_t sub_7D5E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  uint64_t v9 = type metadata accessor for StopAnnouncementIntentHandledStrategy();
  *uint64_t v8 = v4;
  v8[1] = sub_461CC;
  return HandleIntentFlowStrategyAsync.makeInProgressResponse(rchRecord:)(a1, a2, v9, a4);
}

uint64_t sub_7D6AC()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_C6E0;
  return sub_7C9AC();
}

uint64_t sub_7D748(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  uint64_t v9 = type metadata accessor for StopAnnouncementIntentHandledStrategy();
  *uint64_t v8 = v4;
  v8[1] = sub_C554;
  return IntentExtensionCommunicatingAsync.makeIntentExecutionBehavior(app:intent:)(a1, a2, v9, a4);
}

uint64_t sub_7D810()
{
  return sub_7D988(qword_BF7D0, (void (*)(uint64_t))type metadata accessor for StopAnnouncementIntentHandledStrategy);
}

uint64_t sub_7D858()
{
  sub_CC60();
  uint64_t v3 = v2;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_461CC;
  return sub_7C634(v3, v0);
}

uint64_t sub_7D8F0()
{
  sub_CC60();
  uint64_t v3 = v2;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_C6E0;
  return sub_7C7F0(v3, v0);
}

uint64_t sub_7D988(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_7D9D4()
{
  return *(void *)(v0 + 1744);
}

uint64_t sub_7D9FC()
{
  return v0 + 8;
}

unint64_t sub_7DA10()
{
  unint64_t result = qword_BF840;
  if (!qword_BF840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BF840);
  }
  return result;
}

uint64_t sub_7DA5C(uint64_t a1, void *a2)
{
  v6._uint64_t countAndFlagsBits = a1;
  v3._rawValue = &off_B4A80;
  v6._object = a2;
  unint64_t v4 = sub_8ED80(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 6) {
    return 6;
  }
  else {
    return v4;
  }
}

unint64_t sub_7DAA8(char a1)
{
  unint64_t result = 0xD000000000000019;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x7964616572;
      break;
    case 2:
      unint64_t result = 0x6572676F72506E69;
      break;
    case 3:
      unint64_t result = 0x73736563637573;
      break;
    case 4:
      unint64_t result = 0x6572756C696166;
      break;
    case 5:
      return result;
    default:
      unint64_t result = 0x6669636570736E75;
      break;
  }
  return result;
}

uint64_t sub_7DB80(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_24684(*a1, *a2);
}

Swift::Int sub_7DB8C()
{
  return sub_24DD0();
}

uint64_t sub_7DB94(uint64_t a1)
{
  return sub_24E3C(a1, *v1);
}

Swift::Int sub_7DB9C(uint64_t a1)
{
  return sub_25590(a1, *v1);
}

uint64_t sub_7DBA4@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_7DA5C(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

unint64_t sub_7DBD4@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_7DAA8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_7DC00(void *a1@<X8>)
{
  *a1 = &off_B4B30;
}

uint64_t sub_7DC10()
{
  uint64_t v0 = qword_BF830;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_7DC48(uint64_t a1)
{
  unint64_t v2 = sub_7DD70();

  return static AppEnumRepresentation.lnValueType.getter(a1, v2);
}

uint64_t sub_7DC84(uint64_t a1)
{
  unint64_t v2 = sub_7DD70();

  return AppEnumRepresentation.lnValue.getter(a1, v2);
}

uint64_t sub_7DCC0(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_7DDBC();

  return static IntentValueTypeIdentifiable.canConvert(_:)(a1, a2, v4);
}

uint64_t sub_7DD0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_7DD70();

  return static AppEnumRepresentation.from(_:context:)(a1, a2, a3, v6);
}

unint64_t sub_7DD70()
{
  unint64_t result = qword_BF848;
  if (!qword_BF848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BF848);
  }
  return result;
}

unint64_t sub_7DDBC()
{
  unint64_t result = qword_BF850;
  if (!qword_BF850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BF850);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for StopAnnouncementIntentResponseCode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x7DED4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StopAnnouncementIntentResponseCode()
{
  return &type metadata for StopAnnouncementIntentResponseCode;
}

uint64_t sub_7DF0C(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_7DDBC();

  return static IntentValueTypeIdentifiable.canConvertFrom(_:)(a1, a2, v4);
}

unint64_t sub_7DF5C()
{
  unint64_t result = qword_BF858;
  if (!qword_BF858)
  {
    sub_9950(&qword_BF860);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BF858);
  }
  return result;
}

unint64_t sub_7DFB4()
{
  unint64_t result = qword_BF868;
  if (!qword_BF868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BF868);
  }
  return result;
}

unint64_t sub_7E004()
{
  unint64_t result = qword_BF870;
  if (!qword_BF870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BF870);
  }
  return result;
}

unint64_t sub_7E054()
{
  unint64_t result = qword_BF878;
  if (!qword_BF878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BF878);
  }
  return result;
}

unint64_t sub_7E0A8()
{
  unint64_t result = qword_BF880;
  if (!qword_BF880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BF880);
  }
  return result;
}

unint64_t sub_7E0F8()
{
  unint64_t result = qword_BF888;
  if (!qword_BF888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BF888);
  }
  return result;
}

uint64_t type metadata accessor for StopAnnouncementRCHFlowDelegate()
{
  uint64_t result = qword_BF8A0;
  if (!qword_BF8A0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_7E18C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_7E1DC(uint64_t a1)
{
  unint64_t v2 = v1;
  unint64_t v4 = (void *)((char *)v1 + *(void *)(qword_BFDE0 + *v1 + 8));
  sub_C940(a1, (uint64_t)v4);
  sub_98C0(v4, v4[3]);
  swift_retain();
  if ((sub_8D0D0() & 1) == 0)
  {
    if (qword_BB7F0 != -1) {
      swift_once();
    }
    swift_bridgeObjectRetain();
  }
  sub_8E4C0();
  sub_CB8C();
  uint64_t v5 = sub_8E490();
  uint64_t v6 = *(void *)(qword_BFDE0 + *v2 + 16);
  *(void *)((char *)v2 + v6) = v5;
  swift_release();
  sub_48AC(&qword_BF8F8);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_8FA10;
  sub_48AC(&qword_BE170);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_8FC30;
  *(void *)(v8 + 32) = *(void *)((char *)v2 + v6);
  sub_8EA50();
  uint64_t v9 = sub_8E480();
  sub_CB8C();
  swift_retain();
  uint64_t v10 = sub_8E470();
  *(void *)(v7 + 56) = v9;
  *(void *)(v7 + 64) = &protocol witness table for DefaultAppSelector;
  *(void *)(v7 + 32) = v10;
  uint64_t v11 = sub_8E4D0();
  sub_4950(a1);
  return v11;
}

uint64_t sub_7E430()
{
  uint64_t v0 = sub_48AC(&qword_BC648);
  uint64_t v1 = sub_1CCBC(v0);
  __chkstk_darwin(v1);
  sub_AAA8();
  uint64_t v28 = v3 - v2;
  uint64_t v26 = sub_8CAE0();
  sub_CB04();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  sub_AAA8();
  uint64_t v9 = v8 - v7;
  uint64_t v10 = sub_8E460();
  uint64_t v11 = sub_1CCBC(v10);
  __chkstk_darwin(v11);
  sub_AAA8();
  uint64_t v27 = sub_8D790();
  sub_CB04();
  uint64_t v13 = v12;
  __chkstk_darwin(v14);
  sub_AAA8();
  uint64_t v17 = v16 - v15;
  sub_8D070();
  sub_8D8C0();
  sub_8D780();
  type metadata accessor for StopAnnouncementCATs();
  sub_8E450();
  uint64_t v18 = sub_8E360();
  sub_8E680();
  uint64_t v19 = sub_8E670();
  type metadata accessor for StopAnnouncementTemplatingService();
  uint64_t v20 = sub_CB8C();
  v31[3] = sub_8E660();
  uint64_t v31[4] = &protocol witness table for DeviceResolutionAnalyticsImpl;
  v31[0] = v19;
  sub_C940((uint64_t)v32, v20 + qword_BF908);
  *(void *)(v20 + qword_BF920) = v18;
  sub_C940((uint64_t)v33, v20 + qword_BF910);
  sub_C940((uint64_t)v31, v20 + qword_BF918);
  sub_98C0(v32, v32[3]);
  swift_retain();
  swift_retain();
  sub_8D080();
  uint64_t v21 = sub_8CAD0();
  uint64_t v23 = v22;
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v9, v26);
  v30[0] = v21;
  v30[1] = v23;
  v29[0] = 45;
  v29[1] = 0xE100000000000000;
  uint64_t v30[5] = 95;
  v30[6] = 0xE100000000000000;
  sub_F5CC();
  sub_8EBF0();
  swift_bridgeObjectRelease();
  type metadata accessor for INIntentSlotValueType(0);
  sub_F618();
  sub_8E880();
  sub_C940((uint64_t)v33, (uint64_t)v30);
  sub_C940((uint64_t)v32, (uint64_t)v29);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v28, v17, v27);
  _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(v28, 0, 1, v27);
  uint64_t v24 = sub_8D500();
  swift_release();
  sub_4950((uint64_t)v31);
  sub_4950((uint64_t)v33);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v17, v27);
  sub_4950((uint64_t)v32);
  swift_release();
  return v24;
}

uint64_t sub_7E840()
{
  uint64_t v1 = sub_8E460();
  uint64_t v2 = sub_1CCBC(v1);
  __chkstk_darwin(v2);
  sub_AAA8();
  uint64_t v3 = sub_8D790();
  uint64_t v4 = sub_1CCBC(v3);
  __chkstk_darwin(v4);
  sub_6D4B4();
  sub_8D780();
  sub_8D070();
  sub_8D8C0();
  type metadata accessor for HomeCommunicationDisplayTextCATs();
  sub_8E450();
  uint64_t v5 = sub_8E360();
  type metadata accessor for DisplayTextTemplatingService();
  sub_CB8C();
  return sub_E290(v0, (uint64_t)v8, v7, v5);
}

uint64_t sub_7E934()
{
  uint64_t v2 = sub_7E840();
  sub_C940(v0 + qword_BF898, (uint64_t)v7);
  sub_C9A4((uint64_t)v7, v8);
  sub_CB04();
  __chkstk_darwin(v3);
  sub_6D4B4();
  (*(void (**)(uint64_t))(v4 + 16))(v1);
  uint64_t v5 = sub_7F1D8(v2, v1);
  sub_4950((uint64_t)v7);
  return v5;
}

uint64_t sub_7E9FC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_8D890();
  sub_CB04();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  sub_6D4B4();
  uint64_t v9 = sub_8D8B0();
  sub_CB04();
  uint64_t v11 = v10;
  __chkstk_darwin(v12);
  sub_AAA8();
  uint64_t v15 = v14 - v13;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v14 - v13, a1, v9);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v11 + 88))(v15, v9) != enum case for Parse.directInvocation(_:))
  {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v15, v9);
    sub_48AC(&qword_BF900);
    uint64_t v17 = (uint64_t (*)(uint64_t, uint64_t))sub_8D4A0();
    return v17(a1, a2);
  }
  (*(void (**)(uint64_t, uint64_t))(v11 + 96))(v15, v9);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v2, v15, v5);
  if (sub_8D870() == 0xD000000000000036 && v16 == 0x80000000000961F0)
  {
    swift_bridgeObjectRelease();
LABEL_7:
    if (qword_BB830 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_8E730();
    sub_50FC(v20, (uint64_t)qword_BFEC8);
    uint64_t v21 = sub_8E710();
    os_log_type_t v22 = sub_8EB00();
    if (os_log_type_enabled(v21, v22))
    {
      *(_WORD *)swift_slowAlloc() = 0;
      sub_7F318(&dword_0, v23, v24, "Returning empty INStopAnnouncementIntent for DirectInvocation");
      swift_slowDealloc();
    }

    id v18 = [objc_allocWithZone((Class)INStopAnnouncementIntent) init];
    id v25 = [v18 _metadata];
    if (v25)
    {
      uint64_t v26 = v25;
      sub_8D070();
      sub_98C0(v40, v40[3]);
      sub_8D3F0();
      sub_98C0(v39, v39[3]);
      sub_8D570();
      if (v27)
      {
        NSString v28 = sub_8E8C0();
        swift_bridgeObjectRelease();
      }
      else
      {
        NSString v28 = 0;
      }
      sub_4950((uint64_t)v39);
      sub_4950((uint64_t)v40);
      [v26 setEndpointId:v28];
    }
    uint64_t v36 = sub_7F304();
    v37(v36);
    return (uint64_t)v18;
  }
  char v19 = sub_8EE40();
  swift_bridgeObjectRelease();
  if (v19) {
    goto LABEL_7;
  }
  if (qword_BB830 != -1) {
    swift_once();
  }
  uint64_t v29 = sub_8E730();
  sub_50FC(v29, (uint64_t)qword_BFEC8);
  uint64_t v30 = sub_8E710();
  os_log_type_t v31 = sub_8EB10();
  if (os_log_type_enabled(v30, v31))
  {
    *(_WORD *)swift_slowAlloc() = 0;
    sub_7F318(&dword_0, v32, v33, "Received unknown direct invocation, returning nil");
    swift_slowDealloc();
  }

  uint64_t v34 = sub_7F304();
  v35(v34);
  return 0;
}

uint64_t sub_7EE60()
{
  sub_C940(v0 + qword_BF890, (uint64_t)v2);
  sub_48AC(&qword_BF8F0);
  sub_CB8C();
  return sub_7E1DC((uint64_t)v2);
}

void sub_7EEB4()
{
}

uint64_t sub_7EEE4()
{
  sub_4950(v0 + qword_BF890);
  uint64_t v1 = v0 + qword_BF898;

  return sub_4950(v1);
}

uint64_t sub_7EF24()
{
  uint64_t v0 = sub_8D4B0();
  sub_4950(v0 + qword_BF890);
  sub_4950(v0 + qword_BF898);

  return _swift_deallocClassInstance(v0, 96, 7);
}

uint64_t sub_7EF84()
{
  return type metadata accessor for StopAnnouncementRCHFlowDelegate();
}

uint64_t sub_7EF8C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = sub_8E460();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = type metadata accessor for SharedGlobals();
  uint64_t v20[3] = v7;
  v20[4] = (uint64_t)&off_B6D60;
  uint64_t v8 = sub_C9F4(v20);
  sub_CA58(a2, (uint64_t)v8);
  type metadata accessor for StopAnnouncementCATs();
  swift_retain();
  sub_8E450();
  *(void *)((char *)a3 + qword_BF2C8) = sub_8E360();
  swift_release();
  sub_C940((uint64_t)v20, (uint64_t)v18);
  uint64_t v9 = sub_C9A4((uint64_t)v18, v19);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v17[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v12 + 16))(v11);
  uint64_t v17[3] = v7;
  v17[4] = (uint64_t)&off_B6D60;
  uint64_t v13 = sub_C9F4(v17);
  sub_CA58((uint64_t)v11, (uint64_t)v13);
  *(void *)((char *)a3 + *(void *)(qword_BFE00 + *a3 + 16)) = a1;
  sub_C940((uint64_t)v17, (uint64_t)a3 + *(void *)(qword_BFE00 + *a3 + 24));
  uint64_t v14 = sub_8D5E0();
  sub_4950((uint64_t)v17);
  sub_4950((uint64_t)v18);
  sub_4950((uint64_t)v20);
  return v14;
}

uint64_t sub_7F1D8(uint64_t a1, uint64_t a2)
{
  uint64_t v14 = type metadata accessor for SharedGlobals();
  uint64_t v15 = &off_B6D60;
  uint64_t v4 = sub_C9F4(v13);
  sub_CA58(a2, (uint64_t)v4);
  type metadata accessor for StopAnnouncementAceViewProvider();
  uint64_t v5 = (void *)swift_allocObject();
  uint64_t v6 = sub_C9A4((uint64_t)v13, v14);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v13[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v9 + 16))(v8);
  uint64_t v10 = sub_7EF8C(a1, (uint64_t)v8, v5);
  sub_4950((uint64_t)v13);
  return v10;
}

uint64_t sub_7F304()
{
  return v0;
}

void sub_7F318(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v5, a4, v6, 2u);
}

uint64_t type metadata accessor for StopAnnouncementTemplatingService()
{
  uint64_t result = qword_BF928;
  if (!qword_BF928) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_7F380()
{
  return swift_initClassMetadata2();
}

void sub_7F3DC()
{
  sub_783C8(1);

  sub_7F478(1);
}

void sub_7F42C()
{
  sub_7839C();

  sub_7F478(0);
}

void sub_7F478(int a1)
{
  LODWORD(v109) = a1;
  uint64_t v104 = sub_8E650();
  sub_5190();
  uint64_t v108 = v2;
  __chkstk_darwin(v3);
  sub_AAA8();
  uint64_t v103 = v5 - v4;
  uint64_t v114 = sub_8E640();
  sub_5190();
  uint64_t v111 = v6;
  __chkstk_darwin(v7);
  sub_6FF0();
  uint64_t v99 = v8;
  sub_6FC4();
  __chkstk_darwin(v9);
  uint64_t v101 = (char *)&v92 - v10;
  sub_6FC4();
  __chkstk_darwin(v11);
  uint64_t v110 = (char *)&v92 - v12;
  uint64_t v13 = sub_48AC(&qword_BF978);
  __chkstk_darwin(v13 - 8);
  sub_AAA8();
  uint64_t v16 = v15 - v14;
  uint64_t v17 = sub_8E6C0();
  sub_5190();
  uint64_t v19 = v18;
  __chkstk_darwin(v20);
  sub_AAA8();
  uint64_t v23 = v22 - v21;
  uint64_t v113 = sub_8E6D0();
  sub_5190();
  uint64_t v107 = v24;
  __chkstk_darwin(v25);
  sub_6FF0();
  uint64_t v98 = v26;
  sub_6FC4();
  __chkstk_darwin(v27);
  uint64_t v100 = (char *)&v92 - v28;
  sub_6FC4();
  __chkstk_darwin(v29);
  uint64_t v112 = (char *)&v92 - v30;
  uint64_t v31 = sub_48AC(&qword_BD8D8);
  __chkstk_darwin(v31 - 8);
  sub_AAA8();
  uint64_t v34 = v33 - v32;
  uint64_t v35 = sub_8CAC0();
  sub_5190();
  uint64_t v106 = v36;
  uint64_t v38 = __chkstk_darwin(v37);
  uint64_t v40 = (char *)&v92 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v38);
  uint64_t v105 = (char *)&v92 - v41;
  uint64_t v102 = v1;
  sub_98C0((void *)(v1 + qword_BF910), *(void *)(v1 + qword_BF910 + 24));
  sub_8D410();
  if (!v42) {
    goto LABEL_4;
  }
  sub_8CA80();
  swift_bridgeObjectRelease();
  if (_s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0(v34, 1, v35) == 1)
  {
    sub_7FFE4(v34);
LABEL_4:
    if (qword_BB830 != -1) {
      swift_once();
    }
    uint64_t v43 = sub_8E730();
    sub_50FC(v43, (uint64_t)qword_BFEC8);
    uint64_t v44 = sub_8E710();
    os_log_type_t v45 = sub_8EB10();
    if (os_log_type_enabled(v44, v45))
    {
      uint64_t v46 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v46 = 0;
      _os_log_impl(&dword_0, v44, v45, "StopAnnouncementTemplatingService.logQuickStopHandlingEndedEvent(): startRequestId is nil", v46, 2u);
      swift_slowDealloc();
    }

    return;
  }
  int v48 = v105;
  uint64_t v47 = v106;
  (*(void (**)(char *, uint64_t, uint64_t))(v106 + 32))(v105, v34, v35);
  uint64_t v49 = *(void (**)(char *, char *, uint64_t))(v47 + 16);
  uint64_t v95 = v35;
  v49(v40, v48, v35);
  (*(void (**)(uint64_t, void, uint64_t))(v19 + 104))(v23, enum case for ExecutionInfo.Action.quickStopStop(_:), v17);
  uint64_t v50 = enum case for ExecutionInfo.QuickStopActionResult.stoppedHomeAnnouncement(_:);
  uint64_t v51 = sub_8E6B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 104))(v16, v50, v51);
  _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(v16, 0, 1, v51);
  sub_8E6A0();
  unint64_t v53 = v110;
  uint64_t v52 = v111;
  uint64_t v54 = (unsigned int *)&enum case for CrossDeviceCommandExecution.Result.success(_:);
  if ((v109 & 1) == 0) {
    uint64_t v54 = (unsigned int *)&enum case for CrossDeviceCommandExecution.Result.error(_:);
  }
  uint64_t v55 = v114;
  (*(void (**)(char *, void, uint64_t))(v111 + 104))(v110, *v54, v114);
  if (qword_BB830 != -1) {
    swift_once();
  }
  uint64_t v56 = sub_8E730();
  sub_50FC(v56, (uint64_t)qword_BFEC8);
  uint64_t v57 = v107;
  uint64_t v58 = v100;
  uint64_t v59 = v113;
  uint64_t v97 = *(void *)(v107 + 16);
  sub_80044();
  v60();
  uint64_t v61 = v101;
  os_log_type_t v96 = *(void (**)(char *, char *, uint64_t))(v52 + 16);
  v96(v101, v53, v55);
  uint64_t v62 = sub_8E710();
  os_log_type_t v63 = sub_8EB00();
  os_log_t v94 = v62;
  int v93 = v63;
  if (os_log_type_enabled(v62, v63))
  {
    uint64_t v64 = swift_slowAlloc();
    uint64_t v92 = swift_slowAlloc();
    v116[0] = v92;
    *(_DWORD *)uint64_t v64 = 136315394;
    sub_80044();
    v65();
    uint64_t v66 = sub_8E8E0();
    uint64_t v115 = sub_8758C(v66, v67, v116);
    sub_8EBD0();
    swift_bridgeObjectRelease();
    uint64_t v100 = *(char **)(v57 + 8);
    ((void (*)(char *, uint64_t))v100)(v58, v59);
    *(_WORD *)(v64 + 12) = 2080;
    v96(v99, v61, v114);
    uint64_t v68 = sub_8E8E0();
    uint64_t v115 = sub_8758C(v68, v69, v116);
    uint64_t v55 = v114;
    sub_8EBD0();
    swift_bridgeObjectRelease();
    uint64_t v101 = *(char **)(v111 + 8);
    sub_1CB7C();
    v70();
    os_log_t v71 = v94;
    _os_log_impl(&dword_0, v94, (os_log_type_t)v93, "StopAnnouncementTemplatingService.logQuickStopHandlingEndedEvent() - info: %s, result: %s", (uint8_t *)v64, 0x16u);
    swift_arrayDestroy();
    unint64_t v53 = v110;
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v100 = *(char **)(v57 + 8);
    sub_1CB7C();
    v72();
    uint64_t v101 = *(char **)(v52 + 8);
    sub_1CB7C();
    v73();
  }
  uint64_t v74 = (void *)(v102 + qword_BF918);
  sub_98C0((void *)(v102 + qword_BF918), *(void *)(v102 + qword_BF918 + 24));
  uint64_t v75 = sub_48AC(&qword_BF980);
  uint64_t v76 = v103;
  uint64_t v77 = (char *)(v103 + *(int *)(v75 + 48));
  sub_80044();
  v78();
  v96(v77, v53, v55);
  uint64_t v79 = v108;
  uint64_t v80 = *(void (**)(uint64_t, void, uint64_t))(v108 + 104);
  uint64_t v81 = v104;
  v80(v76, enum case for CrossDeviceCommandExecution.ended(_:), v104);
  sub_8E690();
  uint64_t v82 = v79 + 8;
  uint64_t v83 = *(void (**)(void))(v79 + 8);
  ((void (*)(uint64_t, uint64_t))v83)(v76, v81);
  if ((v109 & 1) == 0)
  {
    uint64_t v85 = v74[4];
    uint64_t v102 = v74[3];
    uint64_t v109 = v85;
    sub_98C0(v74, v102);
    uint64_t v108 = v82;
    uint64_t v86 = v76 + *(int *)(sub_48AC(&qword_BF988) + 48);
    sub_80044();
    v87();
    uint64_t v88 = v81;
    uint64_t v89 = enum case for CrossDeviceCommandExecution.FailureReason.unknown(_:);
    uint64_t v90 = sub_8E630();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v90 - 8) + 104))(v86, v89, v90);
    v80(v76, enum case for CrossDeviceCommandExecution.failed(_:), v88);
    sub_8E690();
    sub_1CB7C();
    v83();
  }
  sub_1CB7C();
  v84();
  sub_1CB7C();
  v91();
  (*(void (**)(char *, uint64_t))(v106 + 8))(v105, v95);
}

void sub_7FE84()
{
}

void sub_7FEB4()
{
}

uint64_t sub_7FEE4()
{
  sub_4950(v0 + qword_BF908);
  sub_4950(v0 + qword_BF910);
  sub_4950(v0 + qword_BF918);

  return swift_release();
}

uint64_t sub_7FF44()
{
  uint64_t v0 = sub_8D520();
  sub_4950(v0 + qword_BF908);
  sub_4950(v0 + qword_BF910);
  sub_4950(v0 + qword_BF918);
  swift_release();
  return v0;
}

uint64_t sub_7FFAC()
{
  uint64_t v0 = sub_7FF44();

  return _swift_deallocClassInstance(v0, 144, 7);
}

uint64_t sub_7FFDC()
{
  return type metadata accessor for StopAnnouncementTemplatingService();
}

uint64_t sub_7FFE4(uint64_t a1)
{
  uint64_t v2 = sub_48AC(&qword_BD8D8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_80050(uint64_t a1, unint64_t a2)
{
  swift_bridgeObjectRetain();
  sub_801F4(1);
  uint64_t v4 = sub_8EBC0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_80120(1uLL, a1, a2);
  sub_58B38();
  swift_bridgeObjectRetain();
  sub_8E950();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4;
}

unint64_t sub_80120(unint64_t result, uint64_t a2, unint64_t a3)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    if ((a3 & 0x2000000000000000) != 0) {
      uint64_t v3 = HIBYTE(a3) & 0xF;
    }
    else {
      uint64_t v3 = a2 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v4 = 7;
    if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0) {
      uint64_t v4 = 11;
    }
    unint64_t v5 = v4 | (v3 << 16);
    uint64_t result = sub_8E940();
    if (v6) {
      uint64_t result = v5;
    }
    if (4 * v3 >= result >> 14)
    {
      uint64_t v7 = sub_8E9F0();
      swift_bridgeObjectRelease();
      return v7;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_801F4(uint64_t result)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    sub_8E940();
    uint64_t v1 = sub_8E9F0();
    swift_bridgeObjectRelease();
    return v1;
  }
  return result;
}

id sub_802B4()
{
  if (qword_BB7F0 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_BFE78;
  uint64_t v1 = unk_BFE80;
  objc_allocWithZone((Class)LSApplicationRecord);
  swift_bridgeObjectRetain();
  id result = sub_80390(v0, v1, 0);
  if (result)
  {

    return &dword_0 + 1;
  }
  return result;
}

uint64_t type metadata accessor for SystemAppFinder()
{
  return self;
}

id sub_80390(uint64_t a1, uint64_t a2, char a3)
{
  NSString v5 = sub_8E8C0();
  swift_bridgeObjectRelease();
  id v10 = 0;
  id v6 = [v3 initWithBundleIdentifier:v5 allowPlaceholder:a3 & 1 error:&v10];

  if (v6)
  {
    id v7 = v10;
  }
  else
  {
    id v8 = v10;
    sub_8CA10();

    swift_willThrow();
  }
  return v6;
}

unint64_t sub_8046C(uint64_t a1)
{
  unint64_t v1 = 0xD000000000000010;
  switch(a1)
  {
    case 0:
      return v1;
    case 1:
      unint64_t v1 = 0xD000000000000014;
      break;
    case 2:
      unint64_t v1 = 0xD000000000000013;
      break;
    case 3:
      unint64_t v1 = 0xD000000000000011;
      break;
    default:
      sub_8EC40(39);
      swift_bridgeObjectRelease();
      sub_8E3D0();
      v3._uint64_t countAndFlagsBits = sub_8EA40();
      sub_8E960(v3);
      swift_bridgeObjectRelease();
      v4._uint64_t countAndFlagsBits = 41;
      v4._object = (void *)0xE100000000000000;
      sub_8E960(v4);
      unint64_t v1 = 0xD000000000000024;
      break;
  }
  return v1;
}

uint64_t sub_8059C(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x4465727574616566 && a2 == 0xEF64656C62617369;
  if (v3 || (sub_8EE40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000022 && a2 == 0x8000000000095910 || (sub_8EE40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000000099090 || (sub_8EE40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000000000990B0 || (sub_8EE40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000000000990D0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_8EE40();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_807AC()
{
  return 5;
}

unint64_t sub_807B4(char a1)
{
  unint64_t result = 0xD000000000000022;
  switch(a1)
  {
    case 1:
      return result;
    case 2:
      unint64_t result = 0xD000000000000013;
      break;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    case 4:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      unint64_t result = 0x4465727574616566;
      break;
  }
  return result;
}

uint64_t sub_80874()
{
  return 1;
}

uint64_t sub_80894()
{
  return 0;
}

uint64_t sub_808A0(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x614E746567726174 && a2 == 0xEB0000000073656DLL)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_8EE40();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_80938()
{
  return 0x614E746567726174;
}

uint64_t sub_80958(void *a1, uint64_t a2)
{
  sub_48AC(&qword_BFB98);
  sub_5190();
  __chkstk_darwin(v3);
  sub_859F8(v4, v26);
  sub_48AC(&qword_BFBA0);
  sub_5190();
  __chkstk_darwin(v5);
  sub_1CA70();
  sub_48AC(&qword_BFBA8);
  sub_5190();
  uint64_t v28 = v7;
  uint64_t v29 = v6;
  __chkstk_darwin(v6);
  sub_AAA8();
  uint64_t v10 = v9 - v8;
  sub_48AC(&qword_BFBB0);
  sub_5190();
  __chkstk_darwin(v11);
  sub_85AE4();
  uint64_t v12 = sub_48AC(&qword_BFBB8);
  sub_5190();
  uint64_t v27 = v13;
  __chkstk_darwin(v14);
  sub_AAA8();
  uint64_t v17 = v16 - v15;
  sub_48AC(&qword_BFBC0);
  sub_5190();
  __chkstk_darwin(v18);
  sub_AAA8();
  sub_98C0(a1, a1[3]);
  sub_84A74();
  sub_8EF50();
  switch(a2)
  {
    case 0:
      sub_84BF0();
      sub_85934();
      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v17, v12);
      goto LABEL_8;
    case 1:
      sub_84B58();
      sub_85934();
      (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v10, v29);
      goto LABEL_8;
    case 2:
      sub_84B0C();
      sub_85934();
      goto LABEL_7;
    case 3:
      sub_84AC0();
      sub_85934();
LABEL_7:
      uint64_t v22 = sub_85ACC();
      v24(v22, v23);
LABEL_8:
      sub_1CD04();
      uint64_t result = v25();
      break;
    default:
      sub_84BA4();
      sub_85934();
      sub_48AC(&qword_BE318);
      sub_84C3C(&qword_BFBC8, &qword_BFBD0);
      sub_8EE00();
      sub_1CD04();
      v19();
      sub_1CD04();
      uint64_t result = v20();
      break;
  }
  return result;
}

uint64_t sub_80D8C(void *a1)
{
  sub_48AC(&qword_BFB28);
  sub_5190();
  __chkstk_darwin(v2);
  sub_1CA70();
  sub_48AC(&qword_BFB30);
  sub_5190();
  __chkstk_darwin(v3);
  sub_1CA70();
  sub_48AC(&qword_BFB38);
  sub_5190();
  __chkstk_darwin(v4);
  sub_859F8(v5, v42);
  sub_48AC(&qword_BFB40);
  sub_5190();
  __chkstk_darwin(v6);
  sub_AAA8();
  sub_48AC(&qword_BFB48);
  sub_5190();
  __chkstk_darwin(v7);
  sub_85AE4();
  uint64_t v8 = sub_48AC(&qword_BFB50);
  sub_5190();
  uint64_t v10 = v9;
  __chkstk_darwin(v11);
  sub_AAA8();
  uint64_t v14 = v13 - v12;
  uint64_t v43 = (uint64_t)a1;
  sub_98C0(a1, a1[3]);
  sub_84A74();
  sub_8EF40();
  if (v44) {
    goto LABEL_13;
  }
  uint64_t v45 = v10;
  uint64_t v15 = sub_8EDD0();
  uint64_t v16 = *(void *)(v15 + 16);
  if (!v16)
  {
    uint64_t v26 = v14;
LABEL_8:
    uint64_t v10 = sub_8ECA0();
    swift_allocError();
    uint64_t v28 = v27;
    sub_48AC(&qword_BD120);
    void *v28 = &type metadata for UnsupportedDialogFlow.Reason;
    sub_8EDA0();
    sub_8EC90();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v10 - 8) + 104))(v28, enum case for DecodingError.typeMismatch(_:), v10);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v26, v8);
    goto LABEL_13;
  }
  uint64_t v17 = v8;
  uint64_t v18 = *(unsigned __int8 *)(v15 + 32);
  sub_294F0(1, v16, v15, v15 + 32, 0, (2 * v16) | 1);
  uint64_t v20 = v19;
  unint64_t v22 = v21;
  swift_bridgeObjectRelease();
  if (v20 != v22 >> 1)
  {
    uint64_t v26 = v14;
    uint64_t v8 = v17;
    goto LABEL_8;
  }
  switch(v18)
  {
    case 1:
      char v48 = 1;
      sub_84BA4();
      sub_858CC((uint64_t)&type metadata for UnsupportedDialogFlow.Reason.UnsupportedRecipientsNoTargetFoundCodingKeys, (uint64_t)&v48);
      sub_48AC(&qword_BE318);
      sub_84C3C(&qword_BFB80, &qword_BFB88);
      sub_8EDC0();
      sub_1CD04();
      v39();
      swift_unknownObjectRelease();
      uint64_t v40 = sub_85AFC();
      v41(v40);
      uint64_t v10 = v46;
      break;
    case 2:
      char v49 = 2;
      sub_84B58();
      sub_858CC((uint64_t)&type metadata for UnsupportedDialogFlow.Reason.ContactNotSupportedCodingKeys, (uint64_t)&v49);
      sub_85ACC();
      sub_1CD04();
      v29();
      swift_unknownObjectRelease();
      uint64_t v30 = sub_85814();
      v31(v30);
      uint64_t v10 = 1;
      break;
    case 3:
      char v50 = 3;
      sub_84B0C();
      sub_858CC((uint64_t)&type metadata for UnsupportedDialogFlow.Reason.RepeatNotSupportedCodingKeys, (uint64_t)&v50);
      sub_85ACC();
      sub_1CD04();
      v32();
      swift_unknownObjectRelease();
      uint64_t v33 = sub_85814();
      v34(v33);
      uint64_t v10 = 2;
      break;
    case 4:
      char v51 = 4;
      sub_84AC0();
      sub_858CC((uint64_t)&type metadata for UnsupportedDialogFlow.Reason.SkipNotSupportedCodingKeys, (uint64_t)&v51);
      sub_85ACC();
      sub_1CD04();
      v36();
      swift_unknownObjectRelease();
      uint64_t v37 = sub_85814();
      v38(v37);
      uint64_t v10 = 3;
      break;
    default:
      char v47 = 0;
      sub_84BF0();
      sub_858CC((uint64_t)&type metadata for UnsupportedDialogFlow.Reason.FeatureDisabledCodingKeys, (uint64_t)&v47);
      sub_85ACC();
      sub_1CD04();
      v23();
      swift_unknownObjectRelease();
      uint64_t v24 = sub_85814();
      v25(v24);
      uint64_t v10 = 0;
      break;
  }
LABEL_13:
  sub_4950(v43);
  return v10;
}

unint64_t sub_81408()
{
  return sub_807B4(*v0);
}

uint64_t sub_81410@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_8059C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_81438@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_807AC();
  *a1 = result;
  return result;
}

uint64_t sub_81460(uint64_t a1)
{
  unint64_t v2 = sub_84A74();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_8149C(uint64_t a1)
{
  unint64_t v2 = sub_84A74();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_814DC(uint64_t a1)
{
  unint64_t v2 = sub_84B58();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_81518(uint64_t a1)
{
  unint64_t v2 = sub_84B58();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_81554@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_80874();
  *a1 = result & 1;
  return result;
}

uint64_t sub_81580(uint64_t a1)
{
  unint64_t v2 = sub_84BF0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_815BC(uint64_t a1)
{
  unint64_t v2 = sub_84BF0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_815F8(uint64_t a1)
{
  unint64_t v2 = sub_84B0C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_81634(uint64_t a1)
{
  unint64_t v2 = sub_84B0C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_81670(uint64_t a1)
{
  unint64_t v2 = sub_84AC0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_816AC(uint64_t a1)
{
  unint64_t v2 = sub_84AC0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_816EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_808A0(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_81718(uint64_t a1)
{
  unint64_t v2 = sub_84BA4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_81754(uint64_t a1)
{
  unint64_t v2 = sub_84BA4();

  return CodingKey.debugDescription.getter(a1, v2);
}

unint64_t sub_81790()
{
  return sub_8046C(*v0);
}

uint64_t sub_81798@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_80D8C(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_817C4(void *a1)
{
  return sub_80958(a1, *v1);
}

uint64_t sub_817E0()
{
  type metadata accessor for UnsupportedDialogFlow();
  sub_84F5C(&qword_BCDA0, v0, (void (*)(uint64_t))type metadata accessor for UnsupportedDialogFlow);
  return sub_8CE00();
}

uint64_t sub_8186C(uint64_t a1)
{
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = v1;
  return _swift_task_switch(sub_8188C, 0, 0);
}

uint64_t sub_8188C()
{
  uint64_t v16 = v1;
  if (qword_BB830 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_8E730();
  sub_857D0(v2, (uint64_t)qword_BFEC8);
  uint64_t v3 = (void *)sub_8E710();
  os_log_type_t v4 = sub_8EB00();
  BOOL v5 = sub_22324(v4);
  uint64_t v6 = v1[4];
  if (v5)
  {
    swift_slowAlloc();
    v15[0] = sub_858EC();
    *uint64_t v0 = 136315138;
    unint64_t v7 = *(void *)(v6 + 16);
    sub_84D6C(v7);
    unint64_t v8 = sub_8046C(v7);
    unint64_t v10 = v9;
    sub_84D7C(v7);
    v1[2] = sub_8758C(v8, v10, v15);
    sub_8EBD0();
    swift_bridgeObjectRelease();
    swift_release_n();
    sub_58C94(&dword_0, v11, v12, "#UnsupportedDialogFlow executing for reason=%s");
    swift_arrayDestroy();
    sub_CC2C();
    sub_CC2C();
  }
  else
  {
    swift_release_n();
  }

  sub_8D640();
  sub_8CC00();
  sub_CB8C();
  swift_retain();
  v1[2] = sub_8CBF0();
  sub_8D280();
  swift_release();
  uint64_t v13 = (uint64_t (*)(void))v1[1];
  return v13();
}

uint64_t sub_81AC4(uint64_t a1, uint64_t a2)
{
  v2[28] = a1;
  v2[29] = a2;
  v2[30] = type metadata accessor for HomeCommunicationError(0);
  v2[31] = swift_task_alloc();
  v2[32] = swift_task_alloc();
  v2[33] = type metadata accessor for HomeCommunicationSnippetModel();
  v2[34] = swift_task_alloc();
  uint64_t v3 = sub_8CAE0();
  v2[35] = v3;
  v2[36] = *(void *)(v3 - 8);
  v2[37] = swift_task_alloc();
  sub_48AC(&qword_BD490);
  v2[38] = swift_task_alloc();
  sub_8D160();
  v2[39] = swift_task_alloc();
  uint64_t v4 = sub_8D760();
  unsigned char v2[40] = v4;
  v2[41] = *(void *)(v4 - 8);
  v2[42] = swift_task_alloc();
  sub_48AC(&qword_BFBE8);
  v2[43] = swift_task_alloc();
  v2[44] = swift_task_alloc();
  v2[45] = swift_task_alloc();
  return _swift_task_switch(sub_81CF8, 0, 0);
}

uint64_t sub_81CF8()
{
  sub_1425C();
  uint64_t v1 = v0[29];
  _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(v0[45], 1, 1, v0[33]);
  sub_8D150();
  sub_8D6E0();
  uint64_t v2 = *(void *)(v1 + 16);
  v0[46] = v2;
  switch(v2)
  {
    case 0:
      uint64_t v3 = (void *)swift_task_alloc();
      v0[51] = v3;
      *uint64_t v3 = v0;
      v3[1] = sub_820D0;
      uint64_t result = sub_126E0();
      break;
    case 1:
      uint64_t v6 = (void *)swift_task_alloc();
      v0[60] = v6;
      void *v6 = v0;
      v6[1] = sub_82A34;
      uint64_t result = sub_4E3B0();
      break;
    case 2:
      unint64_t v7 = (void *)swift_task_alloc();
      v0[63] = v7;
      *unint64_t v7 = v0;
      v7[1] = sub_82D1C;
      uint64_t result = sub_3D6DC();
      break;
    case 3:
      unint64_t v8 = (void *)swift_task_alloc();
      v0[66] = v8;
      *unint64_t v8 = v0;
      v8[1] = sub_83004;
      uint64_t result = sub_73338();
      break;
    default:
      v0[47] = *(void *)(v0[29] + 72);
      BOOL v5 = (void *)swift_task_alloc();
      v0[48] = v5;
      *BOOL v5 = v0;
      v5[1] = sub_81FE8;
      uint64_t result = sub_4FB18(v2);
      break;
  }
  return result;
}

uint64_t sub_81FE8()
{
  sub_CC60();
  sub_7614();
  sub_461E4();
  *uint64_t v3 = v2;
  *uint64_t v3 = *v1;
  *(void *)(v2 + 392) = v4;
  *(void *)(v2 + 400) = v0;
  swift_task_dealloc();
  if (v0) {
    BOOL v5 = sub_83E38;
  }
  else {
    BOOL v5 = sub_823B8;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_820D0()
{
  sub_1425C();
  uint64_t v3 = v2;
  sub_7614();
  uint64_t v5 = v4;
  sub_461E4();
  void *v6 = v5;
  uint64_t v7 = *v1;
  sub_CB34();
  *unint64_t v8 = v7;
  *(void *)(v5 + 416) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(void *)(v5 + 424) = v3;
  }
  sub_500D4();
  return _swift_task_switch(v9, v10, v11);
}

#error "8223C: call analysis failed (funcsize=125)"

uint64_t sub_823B8()
{
  sub_46458();
  sub_8D8C0();
  sub_98C0(v0 + 12, v0[15]);
  char v1 = sub_8D0D0();
  sub_4950((uint64_t)(v0 + 12));
  if (v1)
  {
    unint64_t v2 = 0x8000000000096450;
    unint64_t v3 = 0xD000000000000012;
  }
  else
  {
    if (qword_BB7F0 != -1) {
      swift_once();
    }
    unint64_t v3 = qword_BFE78;
    unint64_t v2 = unk_BFE80;
    swift_bridgeObjectRetain();
  }
  v0[54] = v3;
  v0[55] = v2;
  uint64_t v5 = v0[36];
  uint64_t v4 = v0[37];
  uint64_t v6 = v0[35];
  sub_8E4C0();
  swift_bridgeObjectRetain();
  v0[56] = sub_8E4A0();
  sub_8D5D0();
  sub_CB8C();
  swift_retain();
  sub_8D5C0();
  sub_8D8C0();
  sub_98C0(v0 + 2, v0[5]);
  sub_8D080();
  sub_8D5B0();
  uint64_t v8 = v7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  sub_4950((uint64_t)(v0 + 2));
  if (v8)
  {
    sub_8E910();
    swift_bridgeObjectRelease();
    uint64_t v9 = 0;
  }
  else
  {
    uint64_t v9 = 1;
  }
  uint64_t v10 = v0[38];
  uint64_t v11 = sub_8E3D0();
  _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(v10, v9, 1, v11);
  uint64_t v12 = (void *)swift_task_alloc();
  v0[57] = v12;
  void *v12 = v0;
  v12[1] = sub_82610;
  return sub_4F0C8();
}

uint64_t sub_82610()
{
  sub_1425C();
  uint64_t v3 = v2;
  sub_7614();
  uint64_t v5 = v4;
  sub_461E4();
  void *v6 = v5;
  uint64_t v7 = *v1;
  sub_CB34();
  *uint64_t v8 = v7;
  *(void *)(v5 + 464) = v0;
  swift_task_dealloc();
  if (v0) {
    swift_bridgeObjectRelease();
  }
  else {
    *(void *)(v5 + 472) = v3;
  }
  sub_500D4();
  return _swift_task_switch(v9, v10, v11);
}

uint64_t sub_82704()
{
  uint64_t v1 = v0[55];
  uint64_t v2 = v0[54];
  uint64_t v4 = v0[44];
  uint64_t v3 = v0[45];
  uint64_t v35 = v0[38];
  uint64_t v5 = v0[33];
  uint64_t v6 = sub_8E440();
  uint64_t v8 = v7;
  swift_release();
  v0[22] = v2;
  v0[23] = v1;
  sub_8CB10();
  type metadata accessor for HomeAppLaunchModel();
  v0[20] = v6;
  v0[21] = v8;
  sub_8CB10();
  sub_84EA8(v3, &qword_BFBE8);
  swift_storeEnumTagMultiPayload();
  _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(v4, 0, 1, v5);
  sub_84EF4(v4, v3);
  sub_8D710();
  swift_release();
  sub_84EA8(v35, &qword_BD490);
  uint64_t v9 = (void *)v0[49];
  v0[69] = v9;
  sub_84D8C(v0[45], v0[43]);
  sub_85788();
  if (v10)
  {
    sub_84EA8(v0[43], &qword_BFBE8);
    sub_8D3A0();
    sub_CB8C();
    uint64_t v11 = sub_8D390();
    sub_859A4(v11);
    sub_48AC(&qword_BE170);
    uint64_t v12 = (__n128 *)sub_462D4();
    sub_85B14(v12, (__n128)xmmword_8FC30);
    v0[70] = v36;
    id v13 = v9;
    uint64_t v14 = swift_task_alloc();
    uint64_t v15 = (void *)sub_858BC(v14);
    *uint64_t v15 = v16;
    v15[1] = sub_832EC;
    sub_85968();
    sub_85800();
    return dispatch thunk of ResponseGenerating.makeResponseOutput(dialog:outputGenerationManifest:)(v17, v18, v19, v20);
  }
  else
  {
    sub_85870();
    sub_8D3A0();
    sub_CB8C();
    uint64_t v21 = sub_8D390();
    sub_85924(v21);
    uint64_t v22 = sub_84F5C(&qword_BDFB0, 255, (void (*)(uint64_t))type metadata accessor for HomeCommunicationSnippetModel);
    uint64_t v23 = sub_85AB4(v22);
    sub_85A74((uint64_t)v23);
    sub_48AC(&qword_BE170);
    uint64_t v24 = (__n128 *)sub_462D4();
    sub_85B14(v24, (__n128)xmmword_8FC30);
    v0[72] = v36;
    id v25 = v9;
    uint64_t v26 = swift_task_alloc();
    uint64_t v27 = (void *)sub_858AC(v26);
    *uint64_t v27 = v28;
    v27[1] = sub_834D8;
    sub_85974();
    sub_8574C();
    return dispatch thunk of ResponseGenerating.makeResponseOutput(conversationModel:dialog:outputGenerationManifest:)(v29, v30, v31, v32, v33);
  }
}

uint64_t sub_82A34()
{
  sub_1425C();
  uint64_t v3 = v2;
  sub_7614();
  uint64_t v5 = v4;
  sub_461E4();
  void *v6 = v5;
  uint64_t v7 = *v1;
  sub_CB34();
  *uint64_t v8 = v7;
  *(void *)(v5 + 488) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(void *)(v5 + 496) = v3;
  }
  sub_500D4();
  return _swift_task_switch(v9, v10, v11);
}

#error "82BA0: call analysis failed (funcsize=125)"

uint64_t sub_82D1C()
{
  sub_1425C();
  uint64_t v3 = v2;
  sub_7614();
  uint64_t v5 = v4;
  sub_461E4();
  void *v6 = v5;
  uint64_t v7 = *v1;
  sub_CB34();
  *uint64_t v8 = v7;
  *(void *)(v5 + 512) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(void *)(v5 + 520) = v3;
  }
  sub_500D4();
  return _swift_task_switch(v9, v10, v11);
}

#error "82E88: call analysis failed (funcsize=125)"

uint64_t sub_83004()
{
  sub_1425C();
  uint64_t v3 = v2;
  sub_7614();
  uint64_t v5 = v4;
  sub_461E4();
  void *v6 = v5;
  uint64_t v7 = *v1;
  sub_CB34();
  *uint64_t v8 = v7;
  *(void *)(v5 + 536) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(void *)(v5 + 544) = v3;
  }
  sub_500D4();
  return _swift_task_switch(v9, v10, v11);
}

#error "83170: call analysis failed (funcsize=125)"

uint64_t sub_832EC()
{
  sub_CC60();
  sub_7614();
  uint64_t v1 = *v0;
  sub_CB34();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_833D4, 0, 0);
}

uint64_t sub_833D4()
{
  uint64_t v1 = (void *)v0[69];
  uint64_t v2 = v0[45];
  (*(void (**)(void, void))(v0[41] + 8))(v0[42], v0[40]);
  sub_84EA8(v2, &qword_BFBE8);

  swift_release();
  sub_85A8C();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_834D8()
{
  sub_CC60();
  sub_7614();
  sub_461E4();
  *uint64_t v2 = v1;
  uint64_t v3 = v1 + 56;
  uint64_t v4 = *v0;
  sub_CB34();
  *uint64_t v5 = v4;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  sub_4950(v3);
  return _swift_task_switch(sub_835C8, 0, 0);
}

uint64_t sub_835C8()
{
  uint64_t v1 = (void *)v0[69];
  uint64_t v2 = v0[45];
  uint64_t v4 = v0[41];
  uint64_t v3 = v0[42];
  uint64_t v5 = v0[40];
  sub_84E58(v0[34], (void (*)(void))type metadata accessor for HomeCommunicationSnippetModel);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  sub_84EA8(v2, &qword_BFBE8);

  swift_release();
  sub_85A8C();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_836F0()
{
  sub_1425C();
  uint64_t v3 = v2;
  sub_7614();
  uint64_t v5 = v4;
  sub_461E4();
  void *v6 = v5;
  uint64_t v7 = *v1;
  sub_CB34();
  *uint64_t v8 = v7;
  swift_task_dealloc();
  if (v0)
  {
    swift_errorRelease();
    uint64_t v9 = sub_839FC;
  }
  else
  {
    *(void *)(v5 + 616) = v3;
    uint64_t v9 = sub_837E8;
  }
  return _swift_task_switch(v9, 0, 0);
}

#error "83880: call analysis failed (funcsize=131)"

#error "83C04: call analysis failed (funcsize=164)"

uint64_t sub_83C94()
{
  sub_85890();
  sub_85A14();
  sub_85AD8();
  if (qword_BB830 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_859E0();
  sub_857D0(v2, (uint64_t)qword_BFEC8);
  uint64_t v3 = (void *)sub_8E710();
  os_log_type_t v4 = sub_8EB10();
  if (sub_22324(v4))
  {
    sub_856AC();
    sub_858EC();
    sub_85980();
    sub_856D8(4.8149e-34);
    unint64_t v5 = sub_84D7C(v1);
    uint64_t v9 = sub_85908(v5, v6, v7, v8);
    sub_85850(v9);
    sub_859C8();
    swift_bridgeObjectRelease();
    sub_58C94(&dword_0, v10, v11, "#UnsupportedDialogFlow failed to generate dialog for reason=%s");
    sub_397B4();
    sub_CC2C();
    sub_CC2C();
  }
  else
  {

    sub_85A44();
  }
  sub_85764();
  uint64_t v12 = sub_859B0();
  sub_85830(v12, v13);
  sub_85A5C();
  sub_84E58(v0, (void (*)(void))type metadata accessor for HomeCommunicationError);
  sub_85A2C();
  uint64_t v14 = swift_task_alloc();
  uint64_t v15 = (void *)sub_85A20(v14);
  *uint64_t v15 = v16;
  v15[1] = sub_836F0;
  sub_5BFE4();
  return sub_4EDBC();
}

uint64_t sub_83E38()
{
  sub_85890();
  sub_85A14();
  sub_85AD8();
  if (qword_BB830 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_859E0();
  sub_857D0(v2, (uint64_t)qword_BFEC8);
  uint64_t v3 = (void *)sub_8E710();
  os_log_type_t v4 = sub_8EB10();
  if (sub_22324(v4))
  {
    sub_856AC();
    sub_858EC();
    sub_85980();
    sub_856D8(4.8149e-34);
    unint64_t v5 = sub_84D7C(v1);
    uint64_t v9 = sub_85908(v5, v6, v7, v8);
    sub_85850(v9);
    sub_859C8();
    swift_bridgeObjectRelease();
    sub_58C94(&dword_0, v10, v11, "#UnsupportedDialogFlow failed to generate dialog for reason=%s");
    sub_397B4();
    sub_CC2C();
    sub_CC2C();
  }
  else
  {

    sub_85A44();
  }
  sub_85764();
  uint64_t v12 = sub_859B0();
  sub_85830(v12, v13);
  sub_85A5C();
  sub_84E58(v0, (void (*)(void))type metadata accessor for HomeCommunicationError);
  sub_85A2C();
  uint64_t v14 = swift_task_alloc();
  uint64_t v15 = (void *)sub_85A20(v14);
  *uint64_t v15 = v16;
  v15[1] = sub_836F0;
  sub_5BFE4();
  return sub_4EDBC();
}

uint64_t sub_83FDC()
{
  sub_85890();
  sub_85A14();
  uint64_t v3 = *(void *)(v1 + 304);
  swift_release();
  sub_84EA8(v3, &qword_BD490);
  uint64_t v4 = *(void *)(v1 + 464);
  *(void *)(v1 + 600) = *(void *)(v1 + 392);
  *(unsigned char *)(v1 + 624) = 1;
  *(void *)(v1 + 592) = v4;
  if (qword_BB830 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_859E0();
  sub_857D0(v5, (uint64_t)qword_BFEC8);
  uint64_t v6 = (void *)sub_8E710();
  os_log_type_t v7 = sub_8EB10();
  if (sub_22324(v7))
  {
    sub_856AC();
    sub_858EC();
    sub_85980();
    sub_856D8(4.8149e-34);
    unint64_t v8 = sub_84D7C(v2);
    uint64_t v12 = sub_85908(v8, v9, v10, v11);
    sub_85850(v12);
    sub_859C8();
    swift_bridgeObjectRelease();
    sub_58C94(&dword_0, v13, v14, "#UnsupportedDialogFlow failed to generate dialog for reason=%s");
    sub_397B4();
    sub_CC2C();
    sub_CC2C();
  }
  else
  {

    sub_85A44();
  }
  sub_85764();
  uint64_t v15 = sub_859B0();
  sub_85830(v15, v16);
  sub_85A5C();
  sub_84E58(v0, (void (*)(void))type metadata accessor for HomeCommunicationError);
  sub_85A2C();
  uint64_t v17 = swift_task_alloc();
  uint64_t v18 = (void *)sub_85A20(v17);
  *uint64_t v18 = v19;
  v18[1] = sub_836F0;
  sub_5BFE4();
  return sub_4EDBC();
}

uint64_t sub_841AC()
{
  sub_85890();
  sub_85A14();
  sub_85AD8();
  if (qword_BB830 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_859E0();
  sub_857D0(v2, (uint64_t)qword_BFEC8);
  uint64_t v3 = (void *)sub_8E710();
  os_log_type_t v4 = sub_8EB10();
  if (sub_22324(v4))
  {
    sub_856AC();
    sub_858EC();
    sub_85980();
    sub_856D8(4.8149e-34);
    unint64_t v5 = sub_84D7C(v1);
    uint64_t v9 = sub_85908(v5, v6, v7, v8);
    sub_85850(v9);
    sub_859C8();
    swift_bridgeObjectRelease();
    sub_58C94(&dword_0, v10, v11, "#UnsupportedDialogFlow failed to generate dialog for reason=%s");
    sub_397B4();
    sub_CC2C();
    sub_CC2C();
  }
  else
  {

    sub_85A44();
  }
  sub_85764();
  uint64_t v12 = sub_859B0();
  sub_85830(v12, v13);
  sub_85A5C();
  sub_84E58(v0, (void (*)(void))type metadata accessor for HomeCommunicationError);
  sub_85A2C();
  uint64_t v14 = swift_task_alloc();
  uint64_t v15 = (void *)sub_85A20(v14);
  *uint64_t v15 = v16;
  v15[1] = sub_836F0;
  sub_5BFE4();
  return sub_4EDBC();
}

uint64_t sub_84350()
{
  sub_85890();
  sub_85A14();
  sub_85AD8();
  if (qword_BB830 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_859E0();
  sub_857D0(v2, (uint64_t)qword_BFEC8);
  uint64_t v3 = (void *)sub_8E710();
  os_log_type_t v4 = sub_8EB10();
  if (sub_22324(v4))
  {
    sub_856AC();
    sub_858EC();
    sub_85980();
    sub_856D8(4.8149e-34);
    unint64_t v5 = sub_84D7C(v1);
    uint64_t v9 = sub_85908(v5, v6, v7, v8);
    sub_85850(v9);
    sub_859C8();
    swift_bridgeObjectRelease();
    sub_58C94(&dword_0, v10, v11, "#UnsupportedDialogFlow failed to generate dialog for reason=%s");
    sub_397B4();
    sub_CC2C();
    sub_CC2C();
  }
  else
  {

    sub_85A44();
  }
  sub_85764();
  uint64_t v12 = sub_859B0();
  sub_85830(v12, v13);
  sub_85A5C();
  sub_84E58(v0, (void (*)(void))type metadata accessor for HomeCommunicationError);
  sub_85A2C();
  uint64_t v14 = swift_task_alloc();
  uint64_t v15 = (void *)sub_85A20(v14);
  *uint64_t v15 = v16;
  v15[1] = sub_836F0;
  sub_5BFE4();
  return sub_4EDBC();
}

uint64_t sub_844F4()
{
  sub_85890();
  sub_85A14();
  sub_85AD8();
  if (qword_BB830 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_859E0();
  sub_857D0(v2, (uint64_t)qword_BFEC8);
  uint64_t v3 = (void *)sub_8E710();
  os_log_type_t v4 = sub_8EB10();
  if (sub_22324(v4))
  {
    sub_856AC();
    sub_858EC();
    sub_85980();
    sub_856D8(4.8149e-34);
    unint64_t v5 = sub_84D7C(v1);
    uint64_t v9 = sub_85908(v5, v6, v7, v8);
    sub_85850(v9);
    sub_859C8();
    swift_bridgeObjectRelease();
    sub_58C94(&dword_0, v10, v11, "#UnsupportedDialogFlow failed to generate dialog for reason=%s");
    sub_397B4();
    sub_CC2C();
    sub_CC2C();
  }
  else
  {

    sub_85A44();
  }
  sub_85764();
  uint64_t v12 = sub_859B0();
  sub_85830(v12, v13);
  sub_85A5C();
  sub_84E58(v0, (void (*)(void))type metadata accessor for HomeCommunicationError);
  sub_85A2C();
  uint64_t v14 = swift_task_alloc();
  uint64_t v15 = (void *)sub_85A20(v14);
  *uint64_t v15 = v16;
  v15[1] = sub_836F0;
  sub_5BFE4();
  return sub_4EDBC();
}

uint64_t sub_84698()
{
  sub_84D7C(*(void *)(v0 + 16));
  sub_4950(v0 + 24);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_846E0()
{
  sub_84698();

  return _swift_deallocClassInstance(v0, 96, 7);
}

uint64_t type metadata accessor for UnsupportedDialogFlow()
{
  return self;
}

uint64_t *initializeBufferWithCopyOfBuffer for UnsupportedDialogFlow.Reason(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF) {
    uint64_t v3 = swift_bridgeObjectRetain();
  }
  *a1 = v3;
  return a1;
}

unint64_t destroy for UnsupportedDialogFlow.Reason(unint64_t *a1)
{
  unint64_t result = *a1;
  if (result >= 0xFFFFFFFF) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t *assignWithCopy for UnsupportedDialogFlow.Reason(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a1;
  unint64_t v4 = *a2;
  if (v3 < 0xFFFFFFFF)
  {
    *a1 = v4;
    if (v4 >= 0xFFFFFFFF) {
      swift_bridgeObjectRetain();
    }
  }
  else if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    *a1 = *a2;
  }
  else
  {
    *a1 = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  return a1;
}

void *initializeWithTake for UnsupportedDialogFlow.Reason(void *result, void *a2)
{
  *unint64_t result = *a2;
  return result;
}

unint64_t *assignWithTake for UnsupportedDialogFlow.Reason(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  if (*a1 < 0xFFFFFFFF) {
    goto LABEL_5;
  }
  if (v3 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *a1 = v3;
    return a1;
  }
  *a1 = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for UnsupportedDialogFlow.Reason(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFC && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 2147483644);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 3;
  if (v4 >= 5) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for UnsupportedDialogFlow.Reason(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFB)
  {
    *(void *)unint64_t result = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483644;
    if (a3 >= 0x7FFFFFFC) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFC) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2 + 3;
    }
  }
  return result;
}

uint64_t sub_84934(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_8494C(void *result, int a2)
{
  if (a2 < 0)
  {
    unsigned int v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2) {
      return result;
    }
    unsigned int v2 = a2 - 1;
  }
  *unint64_t result = v2;
  return result;
}

ValueMetadata *type metadata accessor for UnsupportedDialogFlow.Reason()
{
  return &type metadata for UnsupportedDialogFlow.Reason;
}

uint64_t sub_8497C()
{
  return sub_817E0();
}

uint64_t sub_849A0(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_4D28C;
  return sub_8186C(a1);
}

uint64_t sub_84A3C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for UnsupportedDialogFlow();

  return Flow<>.exitValue.getter(v3, a2);
}

unint64_t sub_84A74()
{
  unint64_t result = qword_BFB58;
  if (!qword_BFB58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BFB58);
  }
  return result;
}

unint64_t sub_84AC0()
{
  unint64_t result = qword_BFB60;
  if (!qword_BFB60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BFB60);
  }
  return result;
}

unint64_t sub_84B0C()
{
  unint64_t result = qword_BFB68;
  if (!qword_BFB68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BFB68);
  }
  return result;
}

unint64_t sub_84B58()
{
  unint64_t result = qword_BFB70;
  if (!qword_BFB70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BFB70);
  }
  return result;
}

unint64_t sub_84BA4()
{
  unint64_t result = qword_BFB78;
  if (!qword_BFB78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BFB78);
  }
  return result;
}

unint64_t sub_84BF0()
{
  unint64_t result = qword_BFB90;
  if (!qword_BFB90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BFB90);
  }
  return result;
}

uint64_t sub_84C3C(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_9950(&qword_BE318);
    sub_84F5C(a2, 255, (void (*)(uint64_t))&type metadata accessor for SpeakableString);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_84CD4()
{
  sub_CC60();
  uint64_t v3 = v2;
  unsigned int v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *unsigned int v4 = v1;
  v4[1] = sub_4D28C;
  return sub_81AC4(v3, v0);
}

unint64_t sub_84D6C(unint64_t result)
{
  if (result >= 4) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_84D7C(unint64_t result)
{
  if (result >= 4) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_84D8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_48AC(&qword_BFBE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_84DF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HomeCommunicationSnippetModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_84E58(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_FDD0();
  sub_1CD04();
  v3();
  return a1;
}

uint64_t sub_84EA8(uint64_t a1, uint64_t *a2)
{
  sub_48AC(a2);
  sub_FDD0();
  sub_1CD04();
  v3();
  return a1;
}

uint64_t sub_84EF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_48AC(&qword_BFBE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_84F5C(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for UnsupportedDialogFlow.Reason.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFC)
  {
    if (a2 + 4 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 4) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 5;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v5 = v6 - 5;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for UnsupportedDialogFlow.Reason.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x850F8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UnsupportedDialogFlow.Reason.CodingKeys()
{
  return &type metadata for UnsupportedDialogFlow.Reason.CodingKeys;
}

ValueMetadata *type metadata accessor for UnsupportedDialogFlow.Reason.FeatureDisabledCodingKeys()
{
  return &type metadata for UnsupportedDialogFlow.Reason.FeatureDisabledCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for UnsupportedDialogFlow.Reason.UnsupportedRecipientsNoTargetFoundCodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x851DCLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for UnsupportedDialogFlow.Reason.UnsupportedRecipientsNoTargetFoundCodingKeys()
{
  return &type metadata for UnsupportedDialogFlow.Reason.UnsupportedRecipientsNoTargetFoundCodingKeys;
}

ValueMetadata *type metadata accessor for UnsupportedDialogFlow.Reason.ContactNotSupportedCodingKeys()
{
  return &type metadata for UnsupportedDialogFlow.Reason.ContactNotSupportedCodingKeys;
}

ValueMetadata *type metadata accessor for UnsupportedDialogFlow.Reason.RepeatNotSupportedCodingKeys()
{
  return &type metadata for UnsupportedDialogFlow.Reason.RepeatNotSupportedCodingKeys;
}

ValueMetadata *type metadata accessor for UnsupportedDialogFlow.Reason.SkipNotSupportedCodingKeys()
{
  return &type metadata for UnsupportedDialogFlow.Reason.SkipNotSupportedCodingKeys;
}

unint64_t sub_85248()
{
  unint64_t result = qword_BFBF0;
  if (!qword_BFBF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BFBF0);
  }
  return result;
}

unint64_t sub_85298()
{
  unint64_t result = qword_BFBF8;
  if (!qword_BFBF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BFBF8);
  }
  return result;
}

unint64_t sub_852E8()
{
  unint64_t result = qword_BFC00;
  if (!qword_BFC00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BFC00);
  }
  return result;
}

unint64_t sub_85338()
{
  unint64_t result = qword_BFC08;
  if (!qword_BFC08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BFC08);
  }
  return result;
}

unint64_t sub_85388()
{
  unint64_t result = qword_BFC10;
  if (!qword_BFC10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BFC10);
  }
  return result;
}

unint64_t sub_853D8()
{
  unint64_t result = qword_BFC18;
  if (!qword_BFC18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BFC18);
  }
  return result;
}

unint64_t sub_85428()
{
  unint64_t result = qword_BFC20;
  if (!qword_BFC20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BFC20);
  }
  return result;
}

unint64_t sub_85478()
{
  unint64_t result = qword_BFC28;
  if (!qword_BFC28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BFC28);
  }
  return result;
}

unint64_t sub_854C8()
{
  unint64_t result = qword_BFC30;
  if (!qword_BFC30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BFC30);
  }
  return result;
}

unint64_t sub_85518()
{
  unint64_t result = qword_BFC38;
  if (!qword_BFC38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BFC38);
  }
  return result;
}

unint64_t sub_85568()
{
  unint64_t result = qword_BFC40;
  if (!qword_BFC40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BFC40);
  }
  return result;
}

unint64_t sub_855B8()
{
  unint64_t result = qword_BFC48;
  if (!qword_BFC48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BFC48);
  }
  return result;
}

unint64_t sub_85608()
{
  unint64_t result = qword_BFC50;
  if (!qword_BFC50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BFC50);
  }
  return result;
}

unint64_t sub_85658()
{
  unint64_t result = qword_BFC58;
  if (!qword_BFC58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BFC58);
  }
  return result;
}

uint64_t sub_856AC()
{
  return swift_slowAlloc();
}

unint64_t sub_856D8(float a1)
{
  *uint64_t v1 = a1;
  sub_84D6C(v2);
  return sub_8046C(v2);
}

uint64_t sub_85714(__n128 *a1, __n128 a2)
{
  a1[1] = a2;
  a1[2].n128_u64[0] = v2;
  return sub_8EA50();
}

uint64_t sub_85764()
{
  return swift_getErrorValue();
}

uint64_t sub_85788()
{
  return _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0(v1, 1, v0);
}

uint64_t sub_857AC()
{
  v0[69] = v1;
  uint64_t v3 = v0[45];
  uint64_t v4 = v0[43];
  return sub_84D8C(v3, v4);
}

uint64_t sub_857D0(uint64_t a1, uint64_t a2)
{
  sub_50FC(a1, a2);
  return swift_retain_n();
}

uint64_t sub_85814()
{
  return v0;
}

uint64_t sub_85830(uint64_t a1, uint64_t a2)
{
  *uint64_t v2 = a1;
  v2[1] = a2;
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_85850(uint64_t a1)
{
  *(void *)(v1 + 216) = a1;
  return sub_8EBD0();
}

uint64_t sub_85870()
{
  uint64_t v2 = *(void *)(v0 + 344);
  uint64_t v3 = *(void *)(v0 + 272);
  return sub_84DF4(v2, v3);
}

uint64_t sub_858AC(uint64_t result)
{
  *(void *)(v1 + 584) = result;
  return result;
}

uint64_t sub_858BC(uint64_t result)
{
  *(void *)(v1 + 568) = result;
  return result;
}

uint64_t sub_858CC(uint64_t a1, uint64_t a2)
{
  return KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)(a1, a2, v2, a1);
}

uint64_t sub_858EC()
{
  return swift_slowAlloc();
}

uint64_t sub_85908(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  return sub_8758C(v5, v4, (uint64_t *)va);
}

uint64_t sub_85924(uint64_t result)
{
  *(void *)(v1 + 200) = result;
  *(void *)(v1 + 80) = v2;
  return result;
}

uint64_t sub_85934()
{
  return sub_8EDE0();
}

uint64_t sub_85968()
{
  return *(void *)(v0 + 224);
}

uint64_t sub_85974()
{
  return *(void *)(v0 + 224);
}

void sub_8598C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v9 + 560) = a9;
}

void sub_85998(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v9 + 576) = a9;
}

uint64_t sub_859A4(uint64_t result)
{
  *(void *)(v1 + 208) = result;
  return result;
}

uint64_t sub_859B0()
{
  return sub_8EE90();
}

uint64_t sub_859C8()
{
  return swift_release_n();
}

uint64_t sub_859E0()
{
  return sub_8E730();
}

void sub_859F8(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 136) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_85A20(uint64_t result)
{
  *(void *)(v1 + 608) = result;
  return result;
}

uint64_t sub_85A2C()
{
  return sub_84E58(v0, v1);
}

uint64_t sub_85A44()
{
  return swift_release_n();
}

uint64_t sub_85A5C()
{
  return sub_142DC(v0);
}

uint64_t sub_85A74(uint64_t a1)
{
  return sub_25E88(v1, a1);
}

uint64_t sub_85A8C()
{
  return swift_task_dealloc();
}

uint64_t *sub_85AB4(uint64_t a1)
{
  *(void *)(v2 + 88) = a1;
  return sub_C9F4(v1);
}

uint64_t sub_85ACC()
{
  return v0;
}

void sub_85AD8()
{
  *(unsigned char *)(v0 + 624) = 0;
  *(void *)(v0 + 592) = v1;
}

uint64_t sub_85AFC()
{
  return v0;
}

uint64_t sub_85B14(__n128 *a1, __n128 a2)
{
  a1[1] = a2;
  a1[2].n128_u64[0] = v2;
  return sub_8EA50();
}

uint64_t sub_85B34(__n128 *a1, __n128 a2)
{
  a1[1] = a2;
  a1[2].n128_u64[0] = v2;
  return sub_8EA50();
}

uint64_t sub_85B54(uint64_t a1)
{
  *(void *)(v2 + 208) = a1;
  *(void *)(v2 + 216) = v1;
  sub_46200();
  return _swift_task_switch(v3, v4, v5);
}

uint64_t sub_85B78()
{
  uint64_t v26 = v0;
  if (qword_BB830 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_8E730();
  v0[28] = sub_50FC(v1, (uint64_t)qword_BFEC8);
  swift_retain_n();
  uint64_t v2 = sub_8E710();
  os_log_type_t v3 = sub_8EB00();
  BOOL v4 = os_log_type_enabled(v2, v3);
  uint64_t v5 = v0[27];
  if (v4)
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v25 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136315138;
    uint64_t v7 = sub_25810(*(unsigned char *)(v5 + 16));
    v0[25] = sub_8758C(v7, v8, &v25);
    sub_8EBD0();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_0, v2, v3, "#UnsupportedFlowOutputFactory makeUnsupportedOutput for reason=%s", v6, 0xCu);
    sub_397B4();
    sub_CC2C();
    sub_CC2C();
  }
  else
  {
    swift_release_n();
  }

  switch(*(unsigned char *)(v0[27] + 16))
  {
    case 1:
      uint64_t v12 = (void *)swift_task_alloc();
      v0[32] = v12;
      void *v12 = v0;
      v12[1] = sub_86808;
      sub_58C78();
      uint64_t result = sub_4F6B0();
      break;
    case 2:
      uint64_t v14 = (void *)swift_task_alloc();
      v0[34] = v14;
      *uint64_t v14 = v0;
      v14[1] = sub_86D30;
      sub_58C78();
      uint64_t result = sub_4FB18(v15);
      break;
    case 3:
      uint64_t v17 = (void *)swift_task_alloc();
      v0[30] = v17;
      *uint64_t v17 = v0;
      v17[1] = sub_862E0;
      sub_58C78();
      uint64_t result = sub_3D6DC();
      break;
    case 4:
      uint64_t v19 = (void *)swift_task_alloc();
      v0[31] = v19;
      *uint64_t v19 = v0;
      v19[1] = sub_86574;
      sub_58C78();
      uint64_t result = sub_73338();
      break;
    case 5:
      uint64_t v21 = (void *)swift_task_alloc();
      v0[33] = v21;
      void *v21 = v0;
      v21[1] = sub_86A9C;
      sub_58C78();
      uint64_t result = sub_4EDBC();
      break;
    case 6:
      uint64_t v23 = (void *)swift_task_alloc();
      v0[35] = v23;
      void *v23 = v0;
      v23[1] = sub_86FC4;
      sub_58C78();
      uint64_t result = sub_4FC30();
      break;
    default:
      uint64_t v9 = (void *)swift_task_alloc();
      v0[29] = v9;
      *uint64_t v9 = v0;
      v9[1] = sub_8604C;
      sub_58C78();
      uint64_t result = sub_4E3B0();
      break;
  }
  return result;
}

uint64_t sub_8604C()
{
  sub_CC60();
  sub_7614();
  sub_461E4();
  *os_log_type_t v3 = v2;
  v2[2] = v1;
  v2[3] = v4;
  v2[4] = v0;
  sub_462EC();
  uint64_t v5 = *v1;
  sub_CB34();
  void *v6 = v5;
  swift_task_dealloc();
  if (v0)
  {
    sub_CC20();
    return v7();
  }
  else
  {
    sub_46200();
    return _swift_task_switch(v9, v10, v11);
  }
}

#error "86254: call analysis failed (funcsize=102)"

uint64_t sub_862E0()
{
  sub_CC60();
  sub_7614();
  sub_461E4();
  *os_log_type_t v3 = v2;
  v2[5] = v1;
  v2[6] = v4;
  v2[7] = v0;
  sub_462EC();
  uint64_t v5 = *v1;
  sub_CB34();
  void *v6 = v5;
  swift_task_dealloc();
  if (v0)
  {
    sub_CC20();
    return v7();
  }
  else
  {
    sub_46200();
    return _swift_task_switch(v9, v10, v11);
  }
}

#error "864E8: call analysis failed (funcsize=102)"

uint64_t sub_86574()
{
  sub_CC60();
  sub_7614();
  sub_461E4();
  *os_log_type_t v3 = v2;
  v2[8] = v1;
  v2[9] = v4;
  v2[10] = v0;
  sub_462EC();
  uint64_t v5 = *v1;
  sub_CB34();
  void *v6 = v5;
  swift_task_dealloc();
  if (v0)
  {
    sub_CC20();
    return v7();
  }
  else
  {
    sub_46200();
    return _swift_task_switch(v9, v10, v11);
  }
}

#error "8677C: call analysis failed (funcsize=102)"

uint64_t sub_86808()
{
  sub_CC60();
  sub_7614();
  sub_461E4();
  *os_log_type_t v3 = v2;
  v2[11] = v1;
  v2[12] = v4;
  v2[13] = v0;
  sub_462EC();
  uint64_t v5 = *v1;
  sub_CB34();
  void *v6 = v5;
  swift_task_dealloc();
  if (v0)
  {
    sub_CC20();
    return v7();
  }
  else
  {
    sub_46200();
    return _swift_task_switch(v9, v10, v11);
  }
}

#error "86A10: call analysis failed (funcsize=102)"

uint64_t sub_86A9C()
{
  sub_CC60();
  sub_7614();
  sub_461E4();
  *os_log_type_t v3 = v2;
  v2[14] = v1;
  v2[15] = v4;
  v2[16] = v0;
  sub_462EC();
  uint64_t v5 = *v1;
  sub_CB34();
  void *v6 = v5;
  swift_task_dealloc();
  if (v0)
  {
    sub_CC20();
    return v7();
  }
  else
  {
    sub_46200();
    return _swift_task_switch(v9, v10, v11);
  }
}

#error "86CA4: call analysis failed (funcsize=102)"

uint64_t sub_86D30()
{
  sub_CC60();
  sub_7614();
  sub_461E4();
  *os_log_type_t v3 = v2;
  v2[17] = v1;
  v2[18] = v4;
  v2[19] = v0;
  sub_462EC();
  uint64_t v5 = *v1;
  sub_CB34();
  void *v6 = v5;
  swift_task_dealloc();
  if (v0)
  {
    sub_CC20();
    return v7();
  }
  else
  {
    sub_46200();
    return _swift_task_switch(v9, v10, v11);
  }
}

#error "86F38: call analysis failed (funcsize=102)"

uint64_t sub_86FC4()
{
  sub_CC60();
  sub_7614();
  sub_461E4();
  *os_log_type_t v3 = v2;
  v2[20] = v1;
  v2[21] = v4;
  v2[22] = v0;
  sub_462EC();
  uint64_t v5 = *v1;
  sub_CB34();
  void *v6 = v5;
  swift_task_dealloc();
  if (v0)
  {
    sub_CC20();
    return v7();
  }
  else
  {
    sub_46200();
    return _swift_task_switch(v9, v10, v11);
  }
}

#error "871CC: call analysis failed (funcsize=102)"

uint64_t sub_87258()
{
  sub_CC60();
  sub_7614();
  uint64_t v1 = *v0;
  sub_CB34();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  sub_46200();
  return _swift_task_switch(v3, v4, v5);
}

uint64_t sub_8733C()
{
  sub_CC60();

  swift_release();
  sub_CC20();
  return v1();
}

uint64_t sub_873A0()
{
  sub_4950(v0 + 24);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC35HomeCommunicationFlowDelegatePlugin28UnsupportedFlowOutputFactory_completionOutputManifest;
  uint64_t v2 = sub_8D760();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t sub_8742C()
{
  sub_873A0();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return _swift_deallocClassInstance(v0, v1, v2);
}

uint64_t sub_87484()
{
  return type metadata accessor for UnsupportedFlowOutputFactory();
}

uint64_t type metadata accessor for UnsupportedFlowOutputFactory()
{
  uint64_t result = qword_BFC88;
  if (!qword_BFC88) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_874D4()
{
  uint64_t result = sub_8D760();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_8758C(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  sub_46200();
  uint64_t v9 = sub_8765C(v6, v7, v8, 1, a1, a2);
  uint64_t v10 = v15[0];
  if (v9)
  {
    uint64_t v11 = v9;
    ObjectType = (void *)swift_getObjectType();
    v15[0] = v11;
    uint64_t v12 = *a3;
    if (*a3)
    {
      sub_12FA8((uint64_t)v15, *a3);
      *a3 = v12 + 32;
    }
  }
  else
  {
    ObjectType = &type metadata for _StringGuts;
    v15[0] = a1;
    v15[1] = a2;
    uint64_t v13 = *a3;
    if (*a3)
    {
      sub_12FA8((uint64_t)v15, *a3);
      *a3 = v13 + 32;
    }
    swift_bridgeObjectRetain();
  }
  sub_4950((uint64_t)v15);
  return v10;
}

uint64_t sub_8765C(void *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0 && __dst && a3 - (uint64_t)__dst > (uint64_t)(HIBYTE(a6) & 0xF))
    {
      __src[0] = a5;
      __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
      sub_877B4((char *)__src, HIBYTE(a6) & 0xF, __dst);
      sub_8EBE0();
      uint64_t result = 0;
      *a1 = __dst;
      return result;
    }
    goto LABEL_11;
  }
  if ((a6 & 0x1000000000000000) != 0)
  {
LABEL_11:
    uint64_t result = (uint64_t)sub_8788C(a5, a6);
    *a1 = v11;
    return result;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
  }
  else
  {
    uint64_t v8 = sub_8ECB0();
    if (!v8)
    {
      uint64_t result = sub_8ED20();
      __break(1u);
      return result;
    }
  }
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

void *sub_877B4(char *__src, size_t __n, char *__dst)
{
  if ((__n & 0x8000000000000000) != 0 || (&__dst[__n] > __src ? (BOOL v3 = &__src[__n] > __dst) : (BOOL v3 = 0), v3))
  {
    uint64_t result = (void *)sub_8ED70();
    __break(1u);
  }
  else
  {
    return memcpy(__dst, __src, __n);
  }
  return result;
}

void *sub_8788C(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_87924(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_87B5C(0, v2[2] + 1, 1, (uint64_t)v2);
  }
  unint64_t v4 = v2[2];
  unint64_t v3 = v2[3];
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_87B5C((char *)(v3 > 1), v4 + 1, 1, (uint64_t)v2);
  }
  v2[2] = v4 + 1;
  *((unsigned char *)v2 + v4 + 32) = 0;
  return v2;
}

void *sub_87924(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0)
  {
    Swift::Int v2 = sub_8E970();
    if (v2) {
      goto LABEL_6;
    }
    return &_swiftEmptyArrayStorage;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    Swift::Int v2 = HIBYTE(a2) & 0xF;
  }
  else {
    Swift::Int v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v2) {
    return &_swiftEmptyArrayStorage;
  }
LABEL_6:
  unint64_t v3 = sub_87A98(v2, 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    unint64_t v4 = v3;
    uint64_t v5 = sub_8EC50();
    if ((v6 & 1) != 0 || v5 != v2) {
      goto LABEL_14;
    }
    return v4;
  }
  sub_8ED70();
  __break(1u);
LABEL_14:
  uint64_t result = (void *)sub_8ED20();
  __break(1u);
  return result;
}

void *sub_87A98(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return &_swiftEmptyArrayStorage;
  }
  sub_48AC(&qword_BFD50);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = j__malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_87B00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v6 = sub_8E9C0();
    sub_87EFC(v6);
    return v7 | 4;
  }
  else
  {
    uint64_t v3 = sub_8E990();
    sub_87EFC(v3);
    return v4 | 8;
  }
}

char *sub_87B5C(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    int64_t v9 = *(void *)(a4 + 16);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_48AC(&qword_BFD50);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = (char *)(a4 + 32);
  if (v5)
  {
    sub_87D0C(v13, v8, v12);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_87C34(v13, v8, v12);
  }
  swift_bridgeObjectRelease();
  return v10;
}

void *sub_87C34(char *__src, size_t __n, char *__dst)
{
  if ((__n & 0x8000000000000000) != 0 || (&__dst[__n] > __src ? (BOOL v3 = &__src[__n] > __dst) : (BOOL v3 = 0), v3))
  {
    uint64_t result = (void *)sub_8ED70();
    __break(1u);
  }
  else
  {
    return memcpy(__dst, __src, __n);
  }
  return result;
}

char *sub_87D0C(char *__src, size_t __len, char *__dst)
{
  if ((__len & 0x8000000000000000) != 0)
  {
    __src = (char *)sub_8ED70();
    __break(1u);
  }
  else if (__dst != __src || &__src[__len] <= __dst)
  {
    return (char *)memmove(__dst, __src, __len);
  }
  return __src;
}

uint64_t sub_87D9C(uint64_t a1)
{
  *(void *)(v1 + 192) = a1;
  return sub_8EBD0();
}

void sub_87DDC(float a1)
{
  *uint64_t v1 = a1;
}

uint64_t sub_87DF0(__n128 *a1, __n128 a2)
{
  a1[1] = a2;
  a1[2].n128_u64[0] = v2;
  return sub_8EA50();
}

uint64_t sub_87E2C(uint64_t a1, uint64_t a2, ...)
{
  va_start(va, a2);
  return sub_8758C(v3, v2, (uint64_t *)va);
}

uint64_t sub_87E48()
{
  return swift_allocObject();
}

uint64_t sub_87E64()
{
  return swift_slowAlloc();
}

uint64_t sub_87E80(uint64_t result)
{
  *(void *)(v1 + 304) = result;
  return result;
}

void sub_87E90()
{
}

id sub_87EA8@<X0>(void *a1@<X8>)
{
  *(void *)(v1 + 288) = a1;
  return a1;
}

void sub_87ECC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  *(void *)(v11 + 296) = a11;
}

uint64_t sub_87ED8(uint64_t result)
{
  *(void *)(v1 + 184) = result;
  return result;
}

uint64_t sub_87EE4()
{
  return sub_8D3A0();
}

unint64_t sub_87EFC(uint64_t a1)
{
  return a1 & 0xFFFFFFFFFFFFFFFCLL | v1 & 3;
}

unsigned char *storeEnumTagSinglePayload for UserNotificationType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x87FE0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UserNotificationType()
{
  return &type metadata for UserNotificationType;
}

unint64_t sub_8801C()
{
  unint64_t result = qword_BFD68;
  if (!qword_BFD68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BFD68);
  }
  return result;
}

uint64_t sub_88068(uint64_t a1, void *a2)
{
  v7._uint64_t countAndFlagsBits = a1;
  v3._rawValue = &off_B4B58;
  v7._object = a2;
  Swift::Int v4 = sub_8ED80(v3, v7);
  swift_bridgeObjectRelease();
  if (v4 == 1) {
    unsigned int v5 = 1;
  }
  else {
    unsigned int v5 = 2;
  }
  if (v4) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t sub_880BC(char a1)
{
  if (a1) {
    return 0x79726576696C6564;
  }
  else {
    return 0x65636E756F6E6E61;
  }
}

uint64_t sub_88108(char *a1, char *a2)
{
  return sub_2473C(*a1, *a2);
}

Swift::Int sub_88114()
{
  return sub_24E30();
}

uint64_t sub_8811C()
{
  return sub_24EF0();
}

Swift::Int sub_88124()
{
  return sub_25404();
}

uint64_t sub_8812C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_88068(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_8815C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_880BC(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_88188(void *a1@<X8>)
{
  *a1 = &off_B4BA8;
}

uint64_t sub_88198()
{
  uint64_t v0 = qword_BFD58;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_881D0(uint64_t a1)
{
  unint64_t v2 = sub_885CC();

  return static AppEnumRepresentation.lnValueType.getter(a1, v2);
}

uint64_t sub_8820C(uint64_t a1)
{
  unint64_t v2 = sub_885CC();

  return AppEnumRepresentation.lnValue.getter(a1, v2);
}

uint64_t sub_88248(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_88438();

  return static IntentValueTypeIdentifiable.canConvert(_:)(a1, a2, v4);
}

uint64_t sub_88294(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_885CC();

  return static AppEnumRepresentation.from(_:context:)(a1, a2, a3, v6);
}

uint64_t sub_882F8(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_88438();

  return static IntentValueTypeIdentifiable.canConvertFrom(_:)(a1, a2, v4);
}

unint64_t sub_88348()
{
  unint64_t result = qword_BFD70;
  if (!qword_BFD70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BFD70);
  }
  return result;
}

unint64_t sub_88398()
{
  unint64_t result = qword_BFD78;
  if (!qword_BFD78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BFD78);
  }
  return result;
}

unint64_t sub_883E8()
{
  unint64_t result = qword_BFD80;
  if (!qword_BFD80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BFD80);
  }
  return result;
}

unint64_t sub_88438()
{
  unint64_t result = qword_BFD88;
  if (!qword_BFD88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BFD88);
  }
  return result;
}

unint64_t sub_88488()
{
  unint64_t result = qword_BFD90;
  if (!qword_BFD90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BFD90);
  }
  return result;
}

unint64_t sub_884D8()
{
  unint64_t result = qword_BFD98;
  if (!qword_BFD98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BFD98);
  }
  return result;
}

unint64_t sub_88528()
{
  unint64_t result = qword_BFDA0;
  if (!qword_BFDA0)
  {
    sub_9950(&qword_BFDA8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BFDA0);
  }
  return result;
}

unint64_t sub_88580()
{
  unint64_t result = qword_BFDB0;
  if (!qword_BFDB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BFDB0);
  }
  return result;
}

unint64_t sub_885CC()
{
  unint64_t result = qword_BFDB8;
  if (!qword_BFDB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_BFDB8);
  }
  return result;
}

char *sub_88618(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_48AC(&qword_BFDC8);
  __chkstk_darwin(v4 - 8);
  unint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_8DCA0();
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v25 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v23 = (char *)&v20 - v11;
  uint64_t v24 = *(void *)(a1 + 16);
  if (v24)
  {
    uint64_t v21 = v10;
    uint64_t v12 = (void (**)(char *, char *, uint64_t))(v10 + 32);
    swift_bridgeObjectRetain();
    uint64_t v13 = 0;
    uint64_t v14 = (char *)_swiftEmptyArrayStorage;
    uint64_t v22 = a1;
    while (1)
    {
      uint64_t v26 = *(void *)(a1 + 8 * v13 + 32);
      swift_bridgeObjectRetain_n();
      sub_8A5B0((uint64_t (*)(char *, char *))sub_89AF0, 0);
      if (v2) {
        break;
      }
      uint64_t v2 = 0;
      sub_89560(v26, (uint64_t)v6);
      swift_bridgeObjectRelease();
      swift_release();
      if (_s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0((uint64_t)v6, 1, v7) == 1)
      {
        sub_6C1C((uint64_t)v6, &qword_BFDC8);
      }
      else
      {
        uint64_t v15 = *v12;
        uint64_t v16 = v23;
        (*v12)(v23, v6, v7);
        v15(v25, v16, v7);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v14 = (char *)sub_76DD0(0, *((void *)v14 + 2) + 1, 1, (uint64_t)v14);
        }
        unint64_t v18 = *((void *)v14 + 2);
        unint64_t v17 = *((void *)v14 + 3);
        if (v18 >= v17 >> 1) {
          uint64_t v14 = (char *)sub_76DD0(v17 > 1, v18 + 1, 1, (uint64_t)v14);
        }
        *((void *)v14 + 2) = v18 + 1;
        v15(&v14[((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80))+ *(void *)(v21 + 72) * v18], v25, v7);
        a1 = v22;
      }
      if (v24 == ++v13)
      {
        swift_bridgeObjectRelease();
        return v14;
      }
    }
    unint64_t result = (char *)swift_release();
    __break(1u);
  }
  else
  {
    return (char *)_swiftEmptyArrayStorage;
  }
  return result;
}

uint64_t sub_88910()
{
  uint64_t v121 = sub_8DF30();
  sub_5190();
  uint64_t v105 = v0;
  __chkstk_darwin(v1);
  sub_6FF0();
  uint64_t v110 = v2;
  sub_6FC4();
  __chkstk_darwin(v3);
  sub_22520();
  uint64_t v119 = v4;
  uint64_t v122 = sub_8DC70();
  sub_5190();
  uint64_t v108 = v5;
  __chkstk_darwin(v6);
  sub_6FF0();
  uint64_t v112 = v7;
  sub_6FC4();
  __chkstk_darwin(v8);
  sub_22520();
  uint64_t v120 = v9;
  uint64_t v10 = sub_48AC(&qword_BFDC0);
  __chkstk_darwin(v10 - 8);
  sub_6FF0();
  uint64_t v104 = v11;
  sub_6FC4();
  __chkstk_darwin(v12);
  sub_22520();
  uint64_t v106 = v13;
  uint64_t v14 = sub_8DCA0();
  sub_5190();
  uint64_t v16 = v15;
  __chkstk_darwin(v17);
  uint64_t v111 = (char *)&v103 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_48AC(&qword_BFDC8);
  __chkstk_darwin(v19 - 8);
  sub_6FF0();
  uint64_t v117 = (void (*)(void, void))v20;
  sub_6FC4();
  uint64_t v22 = __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v103 - v23;
  __chkstk_darwin(v22);
  sub_22520();
  uint64_t v118 = v25;
  sub_8DC40();
  uint64_t v26 = sub_8E230();
  swift_release();
  if (qword_BB898 != -1) {
    swift_once();
  }
  uint64_t v27 = qword_BFFB0;
  uint64_t v28 = *(void *)algn_BFFB8;
  swift_bridgeObjectRetain();
  unint64_t v29 = sub_5C120(v27, v28, v26);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v29)
  {
    if (qword_BB830 == -1)
    {
LABEL_17:
      uint64_t v36 = sub_8E730();
      sub_50FC(v36, (uint64_t)qword_BFEC8);
      uint64_t v37 = sub_8E710();
      os_log_type_t v38 = sub_8EB00();
      if (os_log_type_enabled(v37, v38))
      {
        uint64_t v39 = (uint8_t *)swift_slowAlloc();
        uint64_t v124 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v39 = 136315138;
        uint64_t v40 = qword_BFFB0;
        unint64_t v41 = *(void *)algn_BFFB8;
        swift_bridgeObjectRetain();
        uint64_t v123 = sub_8758C(v40, v41, (uint64_t *)&v124);
        sub_8EBD0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_0, v37, v38, "#UsoEntity_common_UserEntity+SiriHomeCommunication no entity spans for attribute \"%s\".", v39, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }

      return 0;
    }
LABEL_67:
    swift_once();
    goto LABEL_17;
  }
  if (v29 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v30 = sub_8ED40();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v30 = *(void *)((char *)&dword_10 + (v29 & 0xFFFFFFFFFFFFFF8));
  }
  uint64_t v109 = v16;
  uint64_t v107 = v14;
  if (!v30)
  {
    swift_bridgeObjectRelease();
    uint64_t v32 = _swiftEmptyArrayStorage;
    goto LABEL_21;
  }
  uint64_t v124 = _swiftEmptyArrayStorage;
  sub_57BC0(0, v30 & ~(v30 >> 63), 0);
  if (v30 < 0)
  {
    __break(1u);
    goto LABEL_67;
  }
  uint64_t v31 = 0;
  uint64_t v32 = v124;
  do
  {
    if ((v29 & 0xC000000000000001) != 0) {
      sub_8EC70();
    }
    else {
      swift_retain();
    }
    uint64_t v33 = sub_8E1D0();
    swift_release();
    uint64_t v124 = v32;
    unint64_t v35 = v32[2];
    unint64_t v34 = v32[3];
    if (v35 >= v34 >> 1)
    {
      sub_57BC0((void *)(v34 > 1), v35 + 1, 1);
      uint64_t v32 = v124;
    }
    ++v31;
    v32[2] = v35 + 1;
    v32[v35 + 4] = v33;
  }
  while (v30 != v31);
  swift_bridgeObjectRelease();
  uint64_t v14 = v107;
LABEL_21:
  uint64_t v42 = sub_88618((uint64_t)v32);
  swift_bridgeObjectRelease();
  uint64_t v43 = v118;
  sub_894D0((uint64_t)v42, v118);
  swift_bridgeObjectRelease();
  sub_8A548(v43, (uint64_t)v24);
  if (_s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0((uint64_t)v24, 1, v14) == 1)
  {
    sub_6C1C((uint64_t)v24, &qword_BFDC8);
    uint64_t v44 = v109;
  }
  else
  {
    char v45 = sub_8BDDC();
    uint64_t v44 = v109;
    (*(void (**)(char *, uint64_t))(v109 + 8))(v24, v14);
    if (v45 != 2)
    {
      uint64_t v67 = 0x6E69685F6D6F6F72;
      if ((v45 & 1) == 0) {
        uint64_t v67 = 0x69685F6573756F68;
      }
      uint64_t v120 = v67;
      sub_6C1C(v43, &qword_BFDC8);
      return v120;
    }
  }
  uint64_t v46 = (uint64_t)v117;
  sub_8A548(v43, (uint64_t)v117);
  if (_s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0(v46, 1, v14) == 1)
  {
    sub_6C1C(v43, &qword_BFDC8);
    uint64_t v47 = v46;
    char v48 = &qword_BFDC8;
LABEL_55:
    sub_6C1C(v47, v48);
    return 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v44 + 32))(v111, v46, v14);
  uint64_t v49 = sub_8DC80();
  uint64_t v50 = *(void *)(v49 + 16);
  if (v50)
  {
    id v116 = *(void (**)(uint64_t, unint64_t, uint64_t))(v108 + 16);
    unint64_t v51 = v49 + ((*(unsigned __int8 *)(v108 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v108 + 80));
    LODWORD(v115) = enum case for IdentifierNamespace.nsSemanticValue(_:);
    uint64_t v52 = (void (**)(uint64_t, void, uint64_t))(v105 + 104);
    unint64_t v53 = (void (**)(uint64_t, uint64_t))(v105 + 8);
    uint64_t v117 = (void (*)(void, void))(v108 + 16);
    uint64_t v113 = *(void *)(v108 + 72);
    uint64_t v114 = (void (**)(uint64_t, uint64_t))(v108 + 8);
    uint64_t v103 = v49;
    swift_bridgeObjectRetain();
    uint64_t v55 = v121;
    uint64_t v54 = v122;
    uint64_t v57 = v119;
    uint64_t v56 = v120;
    while (1)
    {
      v116(v56, v51, v54);
      uint64_t v58 = sub_8DC60();
      uint64_t v60 = v59;
      (*v52)(v57, v115, v55);
      uint64_t v61 = sub_8DF20();
      uint64_t v63 = v62;
      (*v53)(v57, v55);
      if (v58 == v61 && v60 == v63) {
        break;
      }
      char v65 = sub_8EE40();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v65) {
        goto LABEL_41;
      }
      uint64_t v56 = v120;
      uint64_t v54 = v122;
      (*v114)(v120, v122);
      v51 += v113;
      if (!--v50)
      {
        swift_bridgeObjectRelease();
        uint64_t v66 = 1;
        uint64_t v43 = v118;
        goto LABEL_39;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_41:
    swift_bridgeObjectRelease();
    uint64_t v68 = v106;
    uint64_t v54 = v122;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v108 + 32))(v106, v120, v122);
    uint64_t v66 = 0;
    uint64_t v43 = v118;
  }
  else
  {
    uint64_t v66 = 1;
    uint64_t v54 = v122;
LABEL_39:
    uint64_t v68 = v106;
  }
  _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(v68, v66, 1, v54);
  swift_bridgeObjectRelease();
  if (_s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0(v68, 1, v54) == 1)
  {
    sub_6C1C(v68, &qword_BFDC0);
LABEL_54:
    uint64_t v91 = sub_8BDAC();
    v92(v91);
    char v48 = &qword_BFDC8;
    uint64_t v47 = v43;
    goto LABEL_55;
  }
  uint64_t v120 = sub_8DC50();
  uint64_t v70 = v69;
  os_log_t v71 = *(void (**)(void, void))(v108 + 8);
  uint64_t v119 = v108 + 8;
  uint64_t v117 = v71;
  v71(v68, v54);
  if (!v70) {
    goto LABEL_54;
  }
  uint64_t v72 = sub_8DC80();
  uint64_t v73 = *(void *)(v72 + 16);
  if (v73)
  {
    uint64_t v106 = v70;
    uint64_t v115 = *(void (**)(uint64_t, unint64_t, uint64_t))(v108 + 16);
    unint64_t v74 = v72 + ((*(unsigned __int8 *)(v108 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v108 + 80));
    LODWORD(v114) = enum case for IdentifierNamespace.nsHomeKitEntityType(_:);
    uint64_t v75 = (void (**)(uint64_t, void, uint64_t))(v105 + 104);
    uint64_t v76 = (void (**)(uint64_t, uint64_t))(v105 + 8);
    id v116 = (void (*)(uint64_t, unint64_t, uint64_t))(v108 + 16);
    uint64_t v113 = *(void *)(v108 + 72);
    uint64_t v105 = v72;
    swift_bridgeObjectRetain();
    uint64_t v77 = v112;
    uint64_t v78 = v110;
    uint64_t v79 = v121;
    while (1)
    {
      v115(v77, v74, v54);
      uint64_t v80 = sub_8DC60();
      uint64_t v82 = v81;
      (*v75)(v78, v114, v79);
      uint64_t v83 = sub_8DF20();
      uint64_t v85 = v84;
      (*v76)(v78, v79);
      if (v80 == v83 && v82 == v85) {
        break;
      }
      char v87 = sub_8EE40();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v87) {
        goto LABEL_60;
      }
      uint64_t v77 = v112;
      uint64_t v54 = v122;
      sub_8BDC4();
      v88();
      v74 += v113;
      if (!--v73)
      {
        swift_bridgeObjectRelease();
        uint64_t v89 = 1;
        uint64_t v90 = v104;
        goto LABEL_61;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_60:
    uint64_t v94 = v112;
    swift_bridgeObjectRelease();
    uint64_t v90 = v104;
    uint64_t v95 = v94;
    uint64_t v54 = v122;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v108 + 32))(v104, v95, v122);
    uint64_t v89 = 0;
  }
  else
  {
    uint64_t v89 = 1;
    uint64_t v90 = v104;
  }
LABEL_61:
  _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(v90, v89, 1, v54);
  swift_bridgeObjectRelease();
  if (_s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0(v90, 1, v54) == 1)
  {
    swift_bridgeObjectRelease();
    uint64_t v96 = sub_8BDAC();
    v97(v96);
    sub_6C1C(v118, &qword_BFDC8);
    char v48 = &qword_BFDC0;
    uint64_t v47 = v90;
    goto LABEL_55;
  }
  sub_8DC50();
  uint64_t v99 = v98;
  uint64_t v100 = sub_8BDAC();
  v101(v100);
  sub_6C1C(v118, &qword_BFDC8);
  sub_8BDC4();
  v102();
  if (!v99)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v120;
}

uint64_t sub_894D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  swift_bridgeObjectRetain();
  sub_8A5B0((uint64_t (*)(char *, char *))sub_89AF0, 0);
  sub_89560(a1, a2);

  return swift_release();
}

uint64_t sub_89560@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_8DCA0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    uint64_t v45 = v5;
    uint64_t v46 = a1;
    uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    uint64_t v9 = v5 + 16;
    uint64_t v47 = a2;
    char v48 = v10;
    uint64_t v11 = a1 + ((*(unsigned __int8 *)(v9 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 64));
    uint64_t v12 = (void (**)(char *, uint64_t))(v9 - 8);
    uint64_t v13 = *(void *)(v9 + 56);
    swift_bridgeObjectRetain();
    while (1)
    {
      v48(v7, v11, v4);
      if (sub_8BDDC() != 2) {
        break;
      }
      uint64_t v14 = sub_8C088();
      if (v15)
      {
        unint64_t v16 = v15;
        uint64_t v17 = v14;
        char v18 = sub_8C3DC();
        if (v18 != 2)
        {
          char v30 = v18;
          swift_bridgeObjectRelease();
          if (v30) {
            uint64_t v31 = 0xD000000000000012;
          }
          else {
            uint64_t v31 = 0xD00000000000001BLL;
          }
          if (v30) {
            unint64_t v32 = 0x8000000000095620;
          }
          else {
            unint64_t v32 = 0x8000000000095600;
          }
          if (qword_BB830 != -1) {
            swift_once();
          }
          uint64_t v33 = sub_8E730();
          sub_50FC(v33, (uint64_t)qword_BFEC8);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          unint64_t v34 = sub_8E710();
          os_log_type_t v35 = sub_8EB00();
          int v36 = v35;
          BOOL v37 = os_log_type_enabled(v34, v35);
          a2 = v47;
          uint64_t v38 = v45;
          if (v37)
          {
            uint64_t v39 = swift_slowAlloc();
            LODWORD(v46) = v36;
            uint64_t v40 = v39;
            char v48 = (void (*)(char *, uint64_t, uint64_t))swift_slowAlloc();
            uint64_t v50 = v48;
            *(_DWORD *)uint64_t v40 = 136315394;
            os_log_t v44 = v34;
            swift_bridgeObjectRetain();
            uint64_t v49 = sub_8758C(v17, v16, (uint64_t *)&v50);
            sub_8EBD0();
            swift_bridgeObjectRelease_n();
            *(_WORD *)(v40 + 12) = 2080;
            swift_bridgeObjectRetain();
            uint64_t v49 = sub_8758C(v31, v32, (uint64_t *)&v50);
            sub_8EBD0();
            swift_bridgeObjectRelease_n();
            os_log_t v41 = v44;
            _os_log_impl(&dword_0, v44, (os_log_type_t)v46, "#UsoEntity_common_UserEntity+SiriHomeCommunication Selected node name=%s, type=%s.", (uint8_t *)v40, 0x16u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {

            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease_n();
          }
          (*(void (**)(uint64_t, char *, uint64_t))(v38 + 32))(a2, v7, v4);
          goto LABEL_32;
        }
        (*v12)(v7, v4);
        swift_bridgeObjectRelease();
      }
      else
      {
        (*v12)(v7, v4);
      }
      v11 += v13;
      if (!--v8)
      {
        swift_bridgeObjectRelease();
        a2 = v47;
        goto LABEL_10;
      }
    }
    swift_bridgeObjectRelease();
    if (qword_BB830 != -1) {
      swift_once();
    }
    uint64_t v24 = sub_8E730();
    sub_50FC(v24, (uint64_t)qword_BFEC8);
    uint64_t v25 = sub_8E710();
    os_log_type_t v26 = sub_8EB00();
    BOOL v27 = os_log_type_enabled(v25, v26);
    a2 = v47;
    uint64_t v28 = v45;
    if (v27)
    {
      unint64_t v29 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v29 = 0;
      _os_log_impl(&dword_0, v25, v26, "#UsoEntity_common_UserEntity+SiriHomeCommunication selecting span for house or room hint.", v29, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(uint64_t, char *, uint64_t))(v28 + 32))(a2, v7, v4);
LABEL_32:
    uint64_t v23 = 0;
  }
  else
  {
LABEL_10:
    if (qword_BB830 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_8E730();
    sub_50FC(v19, (uint64_t)qword_BFEC8);
    uint64_t v20 = sub_8E710();
    os_log_type_t v21 = sub_8EB00();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v22 = 0;
      _os_log_impl(&dword_0, v20, v21, "#UsoEntity_common_UserEntity+SiriHomeCommunication no UsoEntitySpan correspond to a HomeAutomationTargetNode.", v22, 2u);
      swift_slowDealloc();
    }

    uint64_t v23 = 1;
  }
  return _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(a2, v23, 1, v4);
}

BOOL sub_89AF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_48AC(&qword_BFDD8);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v77 = (char *)&v77 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v78 = (char *)&v77 - v7;
  uint64_t v8 = sub_8DCA0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v79 = (char *)&v77 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v80 = (char *)&v77 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v81 = (char *)&v77 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v82 = (char *)&v77 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v85 = (char *)&v77 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v83 = (char *)&v77 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v86 = (char *)&v77 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v84 = (char *)&v77 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v28 = (char *)&v77 - v27;
  uint64_t v29 = __chkstk_darwin(v26);
  uint64_t v31 = (char *)&v77 - v30;
  uint64_t v32 = __chkstk_darwin(v29);
  unint64_t v34 = (char *)&v77 - v33;
  __chkstk_darwin(v32);
  int v36 = (char *)&v77 - v35;
  uint64_t v88 = a1;
  LOBYTE(a1) = sub_8C708();
  BOOL v37 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  uint64_t v87 = a2;
  v37(v36, a2, v8);
  if (a1) {
    char v38 = sub_8C708();
  }
  else {
    char v38 = 0;
  }
  uint64_t v39 = *(void (**)(char *, uint64_t))(v9 + 8);
  v39(v36, v8);
  v37(v34, v88, v8);
  if ((v38 & 1) == 0)
  {
    v39(v34, v8);
    uint64_t v41 = v87;
    v37(v31, v87, v8);
    goto LABEL_9;
  }
  char v40 = sub_8C85C();
  v39(v34, v8);
  uint64_t v41 = v87;
  v37(v31, v87, v8);
  if ((v40 & 1) == 0)
  {
LABEL_9:
    v39(v31, v8);
    goto LABEL_10;
  }
  char v42 = sub_8C85C();
  v39(v31, v8);
  if ((v42 & 1) == 0) {
    return 0;
  }
LABEL_10:
  uint64_t v43 = v88;
  char v44 = sub_8C708();
  v37(v28, v41, v8);
  if ((v44 & 1) == 0)
  {
    v39(v28, v8);
    uint64_t v46 = v84;
    v37(v84, v43, v8);
    uint64_t v47 = v86;
    goto LABEL_16;
  }
  char v45 = sub_8C708();
  v39(v28, v8);
  uint64_t v46 = v84;
  v37(v84, v43, v8);
  uint64_t v47 = v86;
  if ((v45 & 1) == 0)
  {
LABEL_16:
    v39(v46, v8);
    v37(v47, v41, v8);
    uint64_t v50 = v85;
    goto LABEL_17;
  }
  char v48 = sub_8C85C();
  uint64_t v47 = v86;
  char v49 = v48;
  v39(v46, v8);
  v37(v47, v41, v8);
  uint64_t v50 = v85;
  if (v49)
  {
LABEL_17:
    v39(v47, v8);
    goto LABEL_18;
  }
  char v51 = sub_8C85C();
  v39(v47, v8);
  if (v51) {
    return 1;
  }
LABEL_18:
  char v52 = sub_8C708();
  unint64_t v53 = v83;
  v37(v83, v41, v8);
  if (v52)
  {
    char v54 = sub_8C708();
    v39(v53, v8);
    if ((v54 & 1) == 0) {
      return 1;
    }
  }
  else
  {
    v39(v53, v8);
  }
  char v55 = sub_8C708();
  v37(v50, v41, v8);
  if (v55)
  {
    v39(v50, v8);
  }
  else
  {
    char v56 = sub_8C708();
    v39(v50, v8);
    if (v56) {
      return 0;
    }
  }
  int v57 = sub_8BDDC();
  uint64_t v58 = v82;
  v37(v82, v41, v8);
  if (v57 == 2)
  {
    v39(v58, v8);
  }
  else
  {
    int v59 = sub_8BDDC();
    v39(v58, v8);
    if (v59 == 2) {
      return 1;
    }
  }
  int v60 = sub_8BDDC();
  uint64_t v61 = v81;
  v37(v81, v41, v8);
  if (v60 == 2)
  {
    int v62 = sub_8BDDC();
    v39(v61, v8);
    if (v62 != 2) {
      return 0;
    }
  }
  else
  {
    v39(v61, v8);
  }
  char v63 = sub_8C8F4();
  uint64_t v64 = v80;
  v37(v80, v41, v8);
  if (v63)
  {
    char v65 = sub_8C8F4();
    v39(v64, v8);
    if ((v65 & 1) == 0) {
      return 1;
    }
  }
  else
  {
    v39(v64, v8);
  }
  char v67 = sub_8C8F4();
  uint64_t v68 = v79;
  v37(v79, v41, v8);
  if ((v67 & 1) == 0)
  {
    char v69 = sub_8C8F4();
    v39(v68, v8);
    if ((v69 & 1) == 0) {
      goto LABEL_40;
    }
    return 0;
  }
  v39(v68, v8);
LABEL_40:
  uint64_t v70 = (uint64_t)v78;
  sub_8DC90();
  uint64_t v71 = sub_8E220();
  if (_s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0(v70, 1, v71) == 1)
  {
    sub_6C1C(v70, &qword_BFDD8);
    float v72 = -1.0;
  }
  else
  {
    uint64_t v73 = sub_8E210();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v71 - 8) + 8))(v70, v71);
    if ((v73 & 0x100000000) != 0) {
      float v72 = -1.0;
    }
    else {
      float v72 = *(float *)&v73;
    }
  }
  uint64_t v74 = (uint64_t)v77;
  sub_8DC90();
  if (_s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0(v74, 1, v71) == 1)
  {
    sub_6C1C(v74, &qword_BFDD8);
    float v75 = -1.0;
  }
  else
  {
    uint64_t v76 = sub_8E210();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v71 - 8) + 8))(v74, v71);
    float v75 = *(float *)&v76;
    if ((v76 & 0x100000000) != 0) {
      float v75 = -1.0;
    }
  }
  return v75 <= v72;
}

void *sub_8A3C4(uint64_t a1)
{
  if (a1 < 0)
  {
    unint64_t result = (void *)sub_8ED20();
    __break(1u);
  }
  else if (a1)
  {
    sub_48AC(&qword_BF358);
    unint64_t result = (void *)sub_8EA70();
    result[2] = a1;
  }
  else
  {
    return &_swiftEmptyArrayStorage;
  }
  return result;
}

uint64_t sub_8A468(uint64_t a1)
{
  if (a1 < 0)
  {
    uint64_t result = sub_8ED20();
    __break(1u);
  }
  else
  {
    if (a1)
    {
      sub_8DCA0();
      uint64_t v2 = (void *)sub_8EA70();
      v2[2] = a1;
    }
    else
    {
      uint64_t v2 = _swiftEmptyArrayStorage;
    }
    sub_8DCA0();
    return (uint64_t)v2;
  }
  return result;
}

uint64_t sub_8A548(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_48AC(&qword_BFDC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_8A5B0(uint64_t (*a1)(char *, char *), uint64_t a2)
{
  sub_8DCA0();
  size_t v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    size_t v5 = sub_8BD98(v5);
  }
  uint64_t result = sub_8A670(a1, a2);
  *uint64_t v2 = v5;
  return result;
}

uint64_t sub_8A670(uint64_t (*a1)(char *, char *), uint64_t a2)
{
  uint64_t v166 = a1;
  uint64_t v167 = a2;
  uint64_t v3 = sub_8DCA0();
  uint64_t v164 = *(void *)(v3 - 8);
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v154 = (char *)&v139 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v160 = (char *)&v139 - v7;
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v139 - v9;
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v13 = (char *)&v139 - v12;
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v145 = (char *)&v139 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v139 - v17;
  uint64_t v19 = __chkstk_darwin(v16);
  uint64_t v21 = (char *)&v139 - v20;
  __chkstk_darwin(v19);
  uint64_t v146 = (char *)&v139 - v22;
  uint64_t v165 = v2;
  Swift::Int v23 = v2[1];
  uint64_t result = sub_8EE10(v23);
  if (result >= v23)
  {
    if (v23 < 0) {
      goto LABEL_147;
    }
    if (v23)
    {
      uint64_t v126 = v168;
      uint64_t result = sub_8B2E0(0, v23, 1, v166, v167);
      uint64_t v168 = v126;
    }
    return result;
  }
  uint64_t v141 = result;
  uint64_t result = sub_8A468(v23 / 2);
  uint64_t v143 = result;
  unint64_t v161 = v25;
  uint64_t v144 = v23;
  if (v23 <= 0)
  {
    uint64_t v27 = (char *)_swiftEmptyArrayStorage;
    unint64_t v60 = _swiftEmptyArrayStorage[2];
LABEL_106:
    if (v60 >= 2)
    {
      Swift::Int v127 = *v165;
      do
      {
        unint64_t v128 = v60 - 2;
        if (v60 < 2) {
          goto LABEL_141;
        }
        if (!v127) {
          goto LABEL_155;
        }
        uint64_t v129 = (uint64_t)v27;
        uint64_t v130 = v27 + 32;
        uint64_t v131 = *(void *)&v27[16 * v128 + 32];
        uint64_t v132 = *(void *)&v27[16 * v60 + 24];
        uint64_t v133 = v168;
        uint64_t result = sub_8B614(v127 + *(void *)(v164 + 72) * v131, v127 + *(void *)(v164 + 72) * v130[2 * v60 - 2], v127 + *(void *)(v164 + 72) * v132, v161, v166, v167);
        uint64_t v168 = v133;
        if (v133) {
          goto LABEL_122;
        }
        if (v132 < v131) {
          goto LABEL_142;
        }
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_8BD70(v129);
          uint64_t v129 = result;
        }
        if (v128 >= *(void *)(v129 + 16)) {
          goto LABEL_143;
        }
        uint64_t v134 = (void *)(v129 + 32 + 16 * v128);
        *uint64_t v134 = v131;
        v134[1] = v132;
        unint64_t v135 = *(void *)(v129 + 16);
        if (v60 > v135) {
          goto LABEL_144;
        }
        uint64_t v27 = (char *)v129;
        uint64_t result = (uint64_t)memmove((void *)(v129 + 32 + 16 * (v60 - 1)), (const void *)(v129 + 32 + 16 * v60), 16 * (v135 - v60));
        *(void *)(v129 + 16) = v135 - 1;
        unint64_t v60 = v135 - 1;
      }
      while (v135 > 2);
    }
    swift_bridgeObjectRelease();
    if (v144 < -1)
    {
      __break(1u);
      goto LABEL_122;
    }
    goto LABEL_124;
  }
  uint64_t v140 = v21;
  uint64_t v148 = v18;
  uint64_t v152 = v13;
  uint64_t v153 = v10;
  uint64_t v26 = 0;
  uint64_t v157 = v164 + 16;
  uint64_t v158 = (void (**)(char *, uint64_t))(v164 + 8);
  uint64_t v162 = v3;
  uint64_t v163 = (void (**)(char *, char *, uint64_t))(v164 + 32);
  uint64_t v27 = (char *)_swiftEmptyArrayStorage;
  while (1)
  {
    Swift::Int v28 = (Swift::Int)v26;
    uint64_t v29 = v26 + 1;
    if ((uint64_t)(v26 + 1) >= v23)
    {
      Swift::Int v39 = (Swift::Int)(v26 + 1);
LABEL_32:
      uint64_t v49 = v162;
      goto LABEL_33;
    }
    Swift::Int v155 = v23;
    uint64_t v142 = v27;
    Swift::Int v30 = *v165;
    uint64_t v31 = *(void *)(v164 + 72);
    uint64_t v32 = *(void (**)(char *, Swift::Int, uint64_t))(v164 + 16);
    Swift::Int v33 = (Swift::Int)v26;
    unint64_t v34 = v146;
    uint64_t v35 = v162;
    v32(v146, *v165 + v31 * (void)v29, v162);
    uint64_t v159 = v31;
    int v36 = v140;
    uint64_t v156 = (char *)v32;
    v32(v140, v30 + v31 * v33, v35);
    uint64_t v37 = v168;
    LODWORD(v151) = v166(v34, v36);
    uint64_t v168 = v37;
    if (v37)
    {
      unint64_t v138 = *v158;
      (*v158)(v36, v35);
      v138(v34, v35);
      goto LABEL_122;
    }
    char v38 = *v158;
    (*v158)(v36, v35);
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v38)(v34, v35);
    Swift::Int v39 = v33 + 2;
    Swift::Int v23 = v155;
    Swift::Int v28 = v33;
    Swift::Int v147 = v30;
    if (v33 + 2 >= v155) {
      goto LABEL_15;
    }
    uint64_t v139 = (char *)v33;
    uint64_t v40 = v168;
    Swift::Int v41 = v30;
    uint64_t v149 = v159 * v39;
    uint64_t v150 = v159 * (void)v29;
    char v42 = v145;
    while (1)
    {
      Swift::Int v43 = v39;
      char v44 = v148;
      uint64_t v45 = v162;
      uint64_t v46 = v156;
      ((void (*)(char *, Swift::Int, uint64_t))v156)(v148, v41 + v149, v162);
      ((void (*)(char *, Swift::Int, uint64_t))v46)(v42, v41 + v150, v45);
      int v47 = v166(v44, v42);
      if (v40)
      {
        v38(v42, v45);
        v38(v44, v45);
        uint64_t result = swift_bridgeObjectRelease();
        uint64_t v137 = v144;
        uint64_t v168 = v40;
        goto LABEL_123;
      }
      int v48 = v47;
      v38(v42, v45);
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v38)(v44, v45);
      if ((v151 ^ v48)) {
        break;
      }
      Swift::Int v39 = v43 + 1;
      v41 += v159;
      if (v43 + 1 >= v155)
      {
        Swift::Int v23 = v155;
        Swift::Int v39 = v155;
        uint64_t v168 = 0;
        Swift::Int v28 = (Swift::Int)v139;
        goto LABEL_14;
      }
    }
    uint64_t v168 = 0;
    Swift::Int v39 = v43;
    Swift::Int v28 = (Swift::Int)v139;
    Swift::Int v23 = v155;
LABEL_14:
    Swift::Int v30 = v147;
LABEL_15:
    uint64_t v27 = v142;
    if ((v151 & 1) == 0) {
      goto LABEL_32;
    }
    if (v39 < v28) {
      goto LABEL_152;
    }
    uint64_t v49 = v162;
    if (v28 < v39)
    {
      uint64_t v50 = 0;
      uint64_t v51 = v159 * (v39 - 1);
      uint64_t v52 = v39 * v159;
      Swift::Int v53 = v28;
      uint64_t v139 = (char *)v28;
      uint64_t v54 = v28 * v159;
      uint64_t v156 = (char *)v39;
      do
      {
        if (v53 != v39 + v50 - 1)
        {
          if (!v30) {
            goto LABEL_156;
          }
          uint64_t v55 = v162;
          uint64_t v151 = (void (*)(char *, Swift::Int, uint64_t))*v163;
          v151(v154, v30 + v54, v162);
          if (v54 < v51 || v30 + v54 >= (unint64_t)(v30 + v52))
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v54 != v51)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          uint64_t result = ((uint64_t (*)(Swift::Int, char *, uint64_t))v151)(v30 + v51, v154, v55);
          uint64_t v49 = v55;
          Swift::Int v39 = (Swift::Int)v156;
          Swift::Int v30 = v147;
        }
        ++v53;
        --v50;
        v51 -= v159;
        v52 -= v159;
        v54 += v159;
      }
      while (v53 < v39 + v50);
      uint64_t v27 = v142;
      Swift::Int v28 = (Swift::Int)v139;
      Swift::Int v23 = v155;
    }
LABEL_33:
    if (v39 < v23)
    {
      if (__OFSUB__(v39, v28)) {
        goto LABEL_149;
      }
      if (v39 - v28 < v141) {
        break;
      }
    }
LABEL_42:
    if (v39 < v28) {
      goto LABEL_146;
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_8BC78(0, *((void *)v27 + 2) + 1, 1, v27);
      uint64_t v27 = (char *)result;
    }
    unint64_t v59 = *((void *)v27 + 2);
    unint64_t v58 = *((void *)v27 + 3);
    unint64_t v60 = v59 + 1;
    if (v59 >= v58 >> 1)
    {
      uint64_t result = (uint64_t)sub_8BC78((char *)(v58 > 1), v59 + 1, 1, v27);
      uint64_t v27 = (char *)result;
    }
    *((void *)v27 + 2) = v60;
    uint64_t v61 = v27 + 32;
    int v62 = &v27[16 * v59 + 32];
    *(void *)int v62 = v28;
    *((void *)v62 + 1) = v39;
    uint64_t v156 = (char *)v39;
    if (v59)
    {
      while (1)
      {
        unint64_t v63 = v60 - 1;
        if (v60 >= 4)
        {
          uint64_t v68 = &v61[2 * v60];
          uint64_t v69 = *(v68 - 8);
          uint64_t v70 = *(v68 - 7);
          BOOL v74 = __OFSUB__(v70, v69);
          uint64_t v71 = v70 - v69;
          if (v74) {
            goto LABEL_131;
          }
          uint64_t v73 = *(v68 - 6);
          uint64_t v72 = *(v68 - 5);
          BOOL v74 = __OFSUB__(v72, v73);
          uint64_t v66 = v72 - v73;
          char v67 = v74;
          if (v74) {
            goto LABEL_132;
          }
          unint64_t v75 = v60 - 2;
          uint64_t v76 = &v61[2 * v60 - 4];
          uint64_t v78 = *v76;
          uint64_t v77 = v76[1];
          BOOL v74 = __OFSUB__(v77, v78);
          uint64_t v79 = v77 - v78;
          if (v74) {
            goto LABEL_133;
          }
          BOOL v74 = __OFADD__(v66, v79);
          uint64_t v80 = v66 + v79;
          if (v74) {
            goto LABEL_135;
          }
          if (v80 >= v71)
          {
            uint64_t v98 = &v61[2 * v63];
            uint64_t v100 = *v98;
            uint64_t v99 = v98[1];
            BOOL v74 = __OFSUB__(v99, v100);
            uint64_t v101 = v99 - v100;
            if (v74) {
              goto LABEL_145;
            }
            BOOL v91 = v66 < v101;
            goto LABEL_79;
          }
        }
        else
        {
          if (v60 != 3)
          {
            uint64_t v92 = *((void *)v27 + 4);
            uint64_t v93 = *((void *)v27 + 5);
            BOOL v74 = __OFSUB__(v93, v92);
            uint64_t v85 = v93 - v92;
            char v86 = v74;
            goto LABEL_73;
          }
          uint64_t v65 = *((void *)v27 + 4);
          uint64_t v64 = *((void *)v27 + 5);
          BOOL v74 = __OFSUB__(v64, v65);
          uint64_t v66 = v64 - v65;
          char v67 = v74;
        }
        if (v67) {
          goto LABEL_134;
        }
        unint64_t v75 = v60 - 2;
        uint64_t v81 = &v61[2 * v60 - 4];
        uint64_t v83 = *v81;
        uint64_t v82 = v81[1];
        BOOL v84 = __OFSUB__(v82, v83);
        uint64_t v85 = v82 - v83;
        char v86 = v84;
        if (v84) {
          goto LABEL_136;
        }
        uint64_t v87 = &v61[2 * v63];
        uint64_t v89 = *v87;
        uint64_t v88 = v87[1];
        BOOL v74 = __OFSUB__(v88, v89);
        uint64_t v90 = v88 - v89;
        if (v74) {
          goto LABEL_138;
        }
        if (__OFADD__(v85, v90)) {
          goto LABEL_140;
        }
        if (v85 + v90 >= v66)
        {
          BOOL v91 = v66 < v90;
LABEL_79:
          if (v91) {
            unint64_t v63 = v75;
          }
          goto LABEL_81;
        }
LABEL_73:
        if (v86) {
          goto LABEL_137;
        }
        uint64_t v94 = &v61[2 * v63];
        uint64_t v96 = *v94;
        uint64_t v95 = v94[1];
        BOOL v74 = __OFSUB__(v95, v96);
        uint64_t v97 = v95 - v96;
        if (v74) {
          goto LABEL_139;
        }
        if (v97 < v85) {
          goto LABEL_90;
        }
LABEL_81:
        unint64_t v102 = v63 - 1;
        if (v63 - 1 >= v60)
        {
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
          goto LABEL_151;
        }
        if (!*v165) {
          goto LABEL_153;
        }
        uint64_t v103 = v27;
        uint64_t v104 = &v61[2 * v102];
        uint64_t v105 = *v104;
        uint64_t v106 = &v61[2 * v63];
        uint64_t v107 = v106[1];
        uint64_t v108 = v168;
        uint64_t result = sub_8B614(*v165 + *(void *)(v164 + 72) * *v104, *v165 + *(void *)(v164 + 72) * *v106, *v165 + *(void *)(v164 + 72) * v107, v161, v166, v167);
        uint64_t v168 = v108;
        if (v108) {
          goto LABEL_122;
        }
        if (v107 < v105) {
          goto LABEL_128;
        }
        if (v63 > *((void *)v103 + 2)) {
          goto LABEL_129;
        }
        *uint64_t v104 = v105;
        v61[2 * v102 + 1] = v107;
        unint64_t v109 = *((void *)v103 + 2);
        if (v63 >= v109) {
          goto LABEL_130;
        }
        uint64_t v27 = v103;
        unint64_t v60 = v109 - 1;
        uint64_t result = (uint64_t)memmove(&v61[2 * v63], v106 + 2, 16 * (v109 - 1 - v63));
        *((void *)v103 + 2) = v109 - 1;
        if (v109 <= 2) {
          goto LABEL_90;
        }
      }
    }
    unint64_t v60 = 1;
LABEL_90:
    Swift::Int v23 = v165[1];
    uint64_t v26 = v156;
    if ((uint64_t)v156 >= v23) {
      goto LABEL_106;
    }
  }
  if (__OFADD__(v28, v141)) {
    goto LABEL_150;
  }
  if (v28 + v141 >= v23) {
    Swift::Int v57 = v23;
  }
  else {
    Swift::Int v57 = v28 + v141;
  }
  if (v57 >= v28)
  {
    if (v39 == v57) {
      goto LABEL_42;
    }
    uint64_t v142 = v27;
    uint64_t v110 = *(void (**)(void, void, void))(v164 + 16);
    uint64_t v149 = *(void *)(v164 + 72);
    uint64_t v150 = (uint64_t)v110;
    uint64_t v159 = v149 * (v39 - 1);
    Swift::Int v111 = v39 * v149;
    uint64_t v139 = (char *)v28;
    Swift::Int v147 = v57;
LABEL_93:
    uint64_t v112 = 0;
    uint64_t v156 = (char *)v39;
    uint64_t v151 = (void (*)(char *, Swift::Int, uint64_t))v111;
    while (1)
    {
      Swift::Int v155 = v28;
      Swift::Int v113 = *v165;
      uint64_t v114 = (char *)(v111 + v112 + *v165);
      uint64_t v115 = v152;
      id v116 = (void (*)(char *, uint64_t, uint64_t))v150;
      ((void (*)(char *, char *, uint64_t))v150)(v152, v114, v49);
      uint64_t v117 = v153;
      v116(v153, v159 + v112 + v113, v49);
      uint64_t v118 = v168;
      char v119 = v166(v115, v117);
      uint64_t v168 = v118;
      if (v118) {
        break;
      }
      char v120 = v119;
      uint64_t v121 = *v158;
      (*v158)(v117, v49);
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v121)(v115, v49);
      if ((v120 & 1) == 0)
      {
        uint64_t v49 = v162;
        long long v125 = v156;
        Swift::Int v111 = (Swift::Int)v151;
LABEL_100:
        Swift::Int v39 = (Swift::Int)(v125 + 1);
        v159 += v149;
        v111 += v149;
        Swift::Int v28 = (Swift::Int)v139;
        if (v39 == v147)
        {
          Swift::Int v39 = v147;
          uint64_t v27 = v142;
          goto LABEL_42;
        }
        goto LABEL_93;
      }
      Swift::Int v122 = *v165;
      Swift::Int v111 = (Swift::Int)v151;
      if (!*v165) {
        goto LABEL_154;
      }
      uint64_t v123 = v122 + v159 + v112;
      uint64_t v49 = v162;
      uint64_t v124 = *v163;
      (*v163)(v160, (char *)v151 + v122 + v112, v162);
      swift_arrayInitWithTakeFrontToBack();
      uint64_t result = ((uint64_t (*)(uint64_t, char *, uint64_t))v124)(v123, v160, v49);
      v112 -= v149;
      long long v125 = v156;
      Swift::Int v28 = v155 + 1;
      if (v156 == (char *)(v155 + 1)) {
        goto LABEL_100;
      }
    }
    uint64_t v136 = *v158;
    (*v158)(v117, v49);
    v136(v115, v49);
LABEL_122:
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v137 = v144;
LABEL_123:
    if (v137 < -1) {
      goto LABEL_148;
    }
LABEL_124:
    *(void *)(v143 + 16) = 0;
    return swift_bridgeObjectRelease();
  }
LABEL_151:
  __break(1u);
LABEL_152:
  __break(1u);
LABEL_153:
  __break(1u);
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
  return result;
}

uint64_t sub_8B2E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(char *, char *), uint64_t a5)
{
  uint64_t v6 = v5;
  int v47 = a4;
  uint64_t v48 = a5;
  uint64_t v10 = sub_8DCA0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v52 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  char v44 = (char *)&v36 - v15;
  uint64_t result = __chkstk_darwin(v14);
  uint64_t v38 = a2;
  if (a3 != a2)
  {
    Swift::Int v43 = (char *)&v36 - v17;
    uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
    uint64_t v18 = v11 + 16;
    uint64_t v20 = *(void *)(v18 + 56);
    Swift::Int v41 = (void (**)(char *, uint64_t))(v18 - 8);
    char v42 = v19;
    uint64_t v49 = (void (**)(char *, uint64_t, uint64_t))(v18 + 16);
    uint64_t v54 = v20 * (a3 - 1);
    uint64_t v39 = v18;
    uint64_t v40 = v20;
    uint64_t v21 = v20 * a3;
    Swift::Int v23 = (char *)&v36 - v17;
    uint64_t v22 = v44;
    uint64_t v37 = a1;
    while (2)
    {
      uint64_t v24 = 0;
      uint64_t v45 = v21;
      uint64_t v46 = a3;
      while (1)
      {
        uint64_t v25 = *v53;
        uint64_t v50 = v21 + v24;
        uint64_t v51 = a1;
        uint64_t v26 = v21 + v24 + v25;
        uint64_t v27 = v42;
        v42(v23, v26, v10);
        v27(v22, v54 + v24 + v25, v10);
        char v28 = v47(v23, v22);
        if (v6)
        {
          uint64_t v35 = *v41;
          (*v41)(v22, v10);
          return ((uint64_t (*)(char *, uint64_t))v35)(v23, v10);
        }
        char v29 = v28;
        Swift::Int v30 = *v41;
        (*v41)(v22, v10);
        uint64_t result = ((uint64_t (*)(char *, uint64_t))v30)(v23, v10);
        if ((v29 & 1) == 0) {
          break;
        }
        uint64_t v31 = *v53;
        if (!*v53)
        {
          __break(1u);
          return result;
        }
        uint64_t v6 = 0;
        uint64_t v21 = v45;
        uint64_t v32 = v31 + v54 + v24;
        Swift::Int v33 = *v49;
        (*v49)(v52, v31 + v45 + v24, v10);
        swift_arrayInitWithTakeFrontToBack();
        uint64_t result = ((uint64_t (*)(uint64_t, char *, uint64_t))v33)(v32, v52, v10);
        v24 -= v40;
        a1 = v51 + 1;
        uint64_t v34 = v46;
        uint64_t v22 = v44;
        if (v46 == v51 + 1) {
          goto LABEL_10;
        }
      }
      uint64_t v6 = 0;
      uint64_t v21 = v45;
      uint64_t v34 = v46;
LABEL_10:
      a3 = v34 + 1;
      v54 += v40;
      v21 += v40;
      a1 = v37;
      if (a3 != v38) {
        continue;
      }
      break;
    }
  }
  return result;
}

unint64_t sub_8B614(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, uint64_t (*a5)(char *, char *), uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v90 = a5;
  uint64_t v91 = a6;
  uint64_t v12 = sub_8DCA0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v15 = __chkstk_darwin(v14);
  char v86 = (char *)&v80 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v80 - v18;
  unint64_t result = __chkstk_darwin(v17);
  uint64_t v85 = (char *)&v80 - v22;
  uint64_t v24 = *(void *)(v23 + 72);
  if (!v24)
  {
    __break(1u);
LABEL_89:
    __break(1u);
LABEL_90:
    __break(1u);
LABEL_91:
    __break(1u);
    goto LABEL_92;
  }
  int64_t v25 = a2 - a1;
  if (a2 - a1 == 0x8000000000000000 && v24 == -1) {
    goto LABEL_89;
  }
  int64_t v27 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v24 == -1) {
    goto LABEL_90;
  }
  unint64_t v95 = a3;
  uint64_t v96 = v7;
  uint64_t v29 = v25 / v24;
  uint64_t v30 = v27 / v24;
  if (v25 / v24 < v27 / v24)
  {
    uint64_t v93 = v19;
    unint64_t v31 = a4;
    unint64_t result = sub_770D4(a1, v25 / v24, a4);
    uint64_t v32 = (char *)(a4 + v29 * v24);
    if (v29 * v24 >= 1 && a2 < v95)
    {
      unint64_t v38 = a2;
      uint64_t v39 = *(char **)(v13 + 16);
      uint64_t v89 = v13 + 16;
      char v86 = (char *)(v13 + 8);
      uint64_t v87 = v39;
      uint64_t v40 = v85;
      uint64_t v92 = v24;
      unint64_t v94 = (unint64_t)v32;
      Swift::Int v41 = v93;
      while (1)
      {
        char v42 = v87;
        ((void (*)(char *, unint64_t, uint64_t))v87)(v40, v38, v12);
        ((void (*)(char *, unint64_t, uint64_t))v42)(v41, v31, v12);
        uint64_t v43 = v12;
        uint64_t v44 = v96;
        char v45 = v90(v40, v41);
        uint64_t v96 = v44;
        if (v44) {
          break;
        }
        unint64_t v46 = v38;
        char v47 = v45;
        unint64_t v48 = v31;
        uint64_t v49 = *(uint64_t (**)(char *, uint64_t))v86;
        (*(void (**)(char *, uint64_t))v86)(v41, v12);
        unint64_t result = v49(v40, v12);
        if (v47)
        {
          unint64_t v38 = v46 + v92;
          BOOL v50 = a1 < v46 || a1 >= v38;
          unint64_t v31 = v48;
          if (v50)
          {
            unint64_t result = swift_arrayInitWithTakeFrontToBack();
          }
          else if (a1 != v46)
          {
            unint64_t result = swift_arrayInitWithTakeBackToFront();
          }
          uint64_t v24 = v92;
        }
        else
        {
          unint64_t v51 = v48;
          uint64_t v24 = v92;
          unint64_t v31 = v51 + v92;
          if (a1 < v51 || a1 >= v31)
          {
            unint64_t result = swift_arrayInitWithTakeFrontToBack();
          }
          else if (a1 != v51)
          {
            unint64_t result = swift_arrayInitWithTakeBackToFront();
          }
          unint64_t v38 = v46;
        }
        a1 += v24;
        uint64_t v32 = (char *)v94;
        if (v31 >= v94 || v38 >= v95) {
          goto LABEL_16;
        }
      }
      uint64_t v72 = *(uint64_t (**)(char *, uint64_t))v86;
      (*(void (**)(char *, uint64_t))v86)(v41, v43);
      unint64_t result = v72(v40, v43);
      int64_t v73 = v94 - v31;
      if (v24 != -1 || v73 != 0x8000000000000000)
      {
        uint64_t v75 = v73 / v24;
        unint64_t result = v31;
        unint64_t v76 = a1;
LABEL_85:
        sub_770D4(result, v75, v76);
        return 1;
      }
LABEL_92:
      __break(1u);
      goto LABEL_93;
    }
LABEL_16:
    unint64_t v34 = a1;
    goto LABEL_22;
  }
  uint64_t v85 = v21;
  unint64_t v34 = a2;
  unint64_t v31 = a4;
  unint64_t result = sub_770D4(a2, v27 / v24, a4);
  uint64_t v32 = (char *)(a4 + v30 * v24);
  if (v30 * v24 < 1 || a1 >= a2)
  {
LABEL_22:
    uint64_t v36 = &v32[-v31];
    if (v24 != -1 || v36 != (char *)0x8000000000000000)
    {
      sub_770D4(v31, (uint64_t)v36 / v24, v34);
      return 1;
    }
    goto LABEL_91;
  }
  uint64_t v53 = -v24;
  uint64_t v54 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
  uint64_t v88 = v12;
  uint64_t v89 = v13 + 16;
  uint64_t v83 = (void (**)(char *, uint64_t))(v13 + 8);
  BOOL v84 = v54;
  uint64_t v55 = v96;
  uint64_t v92 = v24;
  unint64_t v80 = a1;
  uint64_t v81 = -v24;
  unint64_t v82 = v31;
  while (1)
  {
    uint64_t v96 = v55;
    unint64_t v94 = (unint64_t)v32;
    char v56 = v86;
    uint64_t v87 = &v32[v53];
    Swift::Int v57 = v84;
    ((void (*)(char *))v84)(v86);
    unint64_t v58 = (char *)(v34 + v53);
    uint64_t v59 = v53;
    unint64_t v60 = v85;
    v57(v85, v58, v12);
    uint64_t v61 = v12;
    uint64_t v62 = v96;
    char v63 = v90(v56, v60);
    uint64_t v96 = v62;
    if (v62) {
      break;
    }
    char v64 = v63;
    uint64_t v93 = (char *)v34;
    uint64_t v65 = (char *)v95;
    unint64_t v66 = v95 + v59;
    char v67 = *v83;
    (*v83)(v60, v61);
    unint64_t result = ((uint64_t (*)(char *, uint64_t))v67)(v56, v61);
    if (v64)
    {
      if (v65 < v93 || v66 >= (unint64_t)v93)
      {
        unint64_t result = swift_arrayInitWithTakeFrontToBack();
        uint64_t v93 = v58;
        uint64_t v55 = v96;
        unint64_t v31 = v82;
        uint64_t v32 = (char *)v94;
LABEL_64:
        uint64_t v53 = v81;
        goto LABEL_72;
      }
      uint64_t v55 = v96;
      uint64_t v53 = v81;
      if (v65 != v93) {
        unint64_t result = swift_arrayInitWithTakeBackToFront();
      }
      uint64_t v93 = v58;
      unint64_t v31 = v82;
      uint64_t v32 = (char *)v94;
    }
    else
    {
      if ((unint64_t)v65 < v94 || v66 >= v94)
      {
        uint64_t v70 = v87;
        unint64_t result = swift_arrayInitWithTakeFrontToBack();
        uint64_t v32 = v70;
        uint64_t v55 = v96;
        unint64_t v31 = v82;
        goto LABEL_64;
      }
      uint64_t v55 = v96;
      uint64_t v53 = v81;
      if (v65 == (char *)v94)
      {
        uint64_t v32 = v87;
      }
      else
      {
        uint64_t v71 = v87;
        unint64_t result = swift_arrayInitWithTakeBackToFront();
        uint64_t v32 = v71;
      }
      unint64_t v31 = v82;
    }
LABEL_72:
    uint64_t v24 = v92;
    if ((unint64_t)v32 <= v31)
    {
      unint64_t v34 = (unint64_t)v93;
      goto LABEL_22;
    }
    unint64_t v95 = v66;
    unint64_t v34 = (unint64_t)v93;
    uint64_t v12 = v88;
    if ((unint64_t)v93 <= v80) {
      goto LABEL_22;
    }
  }
  uint64_t v77 = *v83;
  (*v83)(v60, v12);
  v77(v56, v12);
  unint64_t result = v82;
  int64_t v78 = v94 - v82;
  if (v92 != -1 || v78 != 0x8000000000000000)
  {
    uint64_t v75 = v78 / v92;
    unint64_t v76 = v34;
    goto LABEL_85;
  }
LABEL_93:
  __break(1u);
  return result;
}

char *sub_8BC78(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_48AC(&qword_BFDD0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 16);
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || &v13[16 * v8] <= v12) {
      memmove(v12, v13, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v12, v13, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_8BD70(uint64_t a1)
{
  return sub_8BC78(0, *(void *)(a1 + 16), 0, (char *)a1);
}

void *sub_8BD84(uint64_t a1)
{
  return sub_57C74(0, *(void *)(a1 + 16), 0, a1);
}

size_t sub_8BD98(uint64_t a1)
{
  return sub_57D8C(0, *(void *)(a1 + 16), 0, a1);
}

uint64_t sub_8BDAC()
{
  return *(void *)(v0 - 208);
}

uint64_t sub_8BDDC()
{
  uint64_t v2 = sub_48AC(&qword_BFDC0);
  uint64_t v3 = sub_1CCBC(v2);
  __chkstk_darwin(v3);
  sub_6D4B4();
  uint64_t v4 = sub_8DC70();
  sub_5190();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_8C98C();
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v26 - v9;
  uint64_t v11 = sub_8DC80();
  uint64_t v12 = *(void *)(v11 + 16);
  if (v12)
  {
    int64_t v27 = v10;
    uint64_t v28 = v0;
    uint64_t v29 = v6;
    uint64_t v14 = *(void (**)(uint64_t, unint64_t, uint64_t))(v6 + 16);
    uint64_t v13 = v6 + 16;
    unint64_t v31 = v14;
    unint64_t v15 = v11 + ((*(unsigned __int8 *)(v13 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 64));
    uint64_t v16 = *(void *)(v13 + 56);
    uint64_t v26 = v11;
    swift_bridgeObjectRetain();
    unint64_t v30 = 0x8000000000097440;
    while (1)
    {
      v31(v1, v15, v4);
      if (sub_8DC60() == 0xD000000000000017 && v17 == v30) {
        break;
      }
      char v18 = sub_8EE40();
      swift_bridgeObjectRelease();
      if (v18) {
        goto LABEL_10;
      }
      (*(void (**)(uint64_t, uint64_t))(v13 - 8))(v1, v4);
      v15 += v16;
      if (!--v12)
      {
        sub_8C9B8();
        uint64_t v19 = 1;
        uint64_t v0 = v28;
        uint64_t v6 = v29;
        uint64_t v10 = v27;
        goto LABEL_11;
      }
    }
    sub_8C9B8();
LABEL_10:
    swift_bridgeObjectRelease();
    uint64_t v0 = v28;
    uint64_t v6 = v29;
    uint64_t v10 = v27;
    sub_8C9A8();
    v20();
    uint64_t v19 = 0;
  }
  else
  {
    uint64_t v19 = 1;
  }
LABEL_11:
  _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(v0, v19, 1, v4);
  swift_bridgeObjectRelease();
  if (_s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0(v0, 1, v4) == 1)
  {
    sub_6C1C(v0, &qword_BFDC0);
    return 2;
  }
  else
  {
    sub_8C9A8();
    v22();
    uint64_t v23 = sub_8DC50();
    if (v24) {
      uint64_t v21 = sub_12BA4(v23, v24);
    }
    else {
      uint64_t v21 = 2;
    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v10, v4);
  }
  return v21;
}

uint64_t sub_8C088()
{
  uint64_t v40 = sub_8DF30();
  sub_5190();
  uint64_t v2 = v1;
  __chkstk_darwin(v3);
  sub_AAA8();
  uint64_t v39 = v5 - v4;
  uint64_t v6 = sub_8DC70();
  sub_5190();
  uint64_t v8 = v7;
  __chkstk_darwin(v9);
  sub_6D4B4();
  uint64_t v10 = sub_48AC(&qword_BFDC0);
  uint64_t v11 = sub_1CCBC(v10);
  __chkstk_darwin(v11);
  sub_AAA8();
  uint64_t v14 = v13 - v12;
  uint64_t v15 = sub_8DC80();
  uint64_t v16 = *(void *)(v15 + 16);
  if (v16)
  {
    uint64_t v33 = v8;
    char v18 = *(void (**)(uint64_t, unint64_t, uint64_t))(v8 + 16);
    uint64_t v17 = v8 + 16;
    unint64_t v38 = v18;
    unint64_t v19 = v15 + ((*(unsigned __int8 *)(v17 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 64));
    unsigned int v37 = enum case for IdentifierNamespace.nsSemanticValue(_:);
    uint64_t v35 = (void (**)(uint64_t, uint64_t))(v2 + 8);
    uint64_t v36 = (void (**)(uint64_t, void, uint64_t))(v2 + 104);
    uint64_t v34 = *(void *)(v17 + 56);
    swift_bridgeObjectRetain();
    while (1)
    {
      uint64_t v20 = v6;
      v38(v0, v19, v6);
      uint64_t v21 = v0;
      uint64_t v22 = sub_8DC60();
      uint64_t v24 = v23;
      (*v36)(v39, v37, v40);
      uint64_t v25 = sub_8DF20();
      uint64_t v27 = v26;
      (*v35)(v39, v40);
      if (v22 == v25 && v24 == v27) {
        break;
      }
      char v29 = sub_8EE40();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v29) {
        goto LABEL_12;
      }
      uint64_t v0 = v21;
      uint64_t v6 = v20;
      (*(void (**)(uint64_t, uint64_t))(v17 - 8))(v21, v20);
      v19 += v34;
      if (!--v16)
      {
        swift_bridgeObjectRelease();
        uint64_t v30 = 1;
        uint64_t v8 = v33;
        goto LABEL_13;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_12:
    swift_bridgeObjectRelease();
    uint64_t v8 = v33;
    uint64_t v6 = v20;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 32))(v14, v21, v20);
    uint64_t v30 = 0;
  }
  else
  {
    uint64_t v30 = 1;
  }
LABEL_13:
  _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0(v14, v30, 1, v6);
  swift_bridgeObjectRelease();
  if (_s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0(v14, 1, v6) == 1)
  {
    sub_6C1C(v14, &qword_BFDC0);
    return 0;
  }
  else
  {
    uint64_t v31 = sub_8DC50();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v14, v6);
  }
  return v31;
}

uint64_t sub_8C3DC()
{
  uint64_t v1 = sub_8DC70();
  sub_5190();
  uint64_t v3 = v2;
  __chkstk_darwin(v4);
  sub_AAA8();
  uint64_t v7 = v6 - v5;
  uint64_t v8 = sub_48AC(&qword_BFDC0);
  uint64_t v9 = sub_1CCBC(v8);
  __chkstk_darwin(v9);
  sub_8C98C();
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v28 - v11;
  uint64_t v13 = sub_8DC80();
  uint64_t v14 = *(void *)(v13 + 16);
  if (v14)
  {
    uint64_t v29 = v0;
    uint64_t v30 = v12;
    uint64_t v31 = v3;
    uint64_t v16 = *(void (**)(uint64_t, unint64_t, uint64_t))(v3 + 16);
    uint64_t v15 = v3 + 16;
    uint64_t v33 = v16;
    unint64_t v17 = v13 + ((*(unsigned __int8 *)(v15 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 64));
    uint64_t v18 = *(void *)(v15 + 56);
    uint64_t v28 = v13;
    swift_bridgeObjectRetain();
    unint64_t v32 = 0x80000000000993E0;
    while (1)
    {
      v33(v7, v17, v1);
      if (sub_8DC60() == 0xD000000000000011 && v19 == v32) {
        break;
      }
      char v20 = sub_8EE40();
      swift_bridgeObjectRelease();
      if (v20) {
        goto LABEL_10;
      }
      (*(void (**)(uint64_t, uint64_t))(v15 - 8))(v7, v1);
      v17 += v18;
      if (!--v14)
      {
        sub_8C9B8();
        uint64_t v21 = 1;
        uint64_t v12 = v30;
        uint64_t v3 = v31;
        uint64_t v0 = v29;
        goto LABEL_11;
      }
    }
    sub_8C9B8();
LABEL_10:
    swift_bridgeObjectRelease();
    uint64_t v12 = v30;
    uint64_t v3 = v31;
    uint64_t v0 = v29;
    sub_8C9A8();
    v22();
    uint64_t v21 = 0;
  }
  else
  {
    uint64_t v21 = 1;
  }
LABEL_11:
  _s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwst_0((uint64_t)v12, v21, 1, v1);
  swift_bridgeObjectRelease();
  sub_8C6A0((uint64_t)v12, v0);
  if (_s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0(v0, 1, v1) == 1)
  {
    sub_6C1C(v0, &qword_BFDC0);
LABEL_15:
    uint64_t v26 = 2;
    goto LABEL_16;
  }
  uint64_t v23 = sub_8DC50();
  uint64_t v25 = v24;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0, v1);
  if (!v25) {
    goto LABEL_15;
  }
  uint64_t v26 = sub_12BB0(v23, v25);
LABEL_16:
  sub_6C1C((uint64_t)v12, &qword_BFDC0);
  return v26;
}

uint64_t sub_8C6A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_48AC(&qword_BFDC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_8C708()
{
  uint64_t v1 = sub_8E200();
  sub_5190();
  uint64_t v3 = v2;
  __chkstk_darwin(v4);
  sub_6D4B4();
  uint64_t v5 = sub_48AC(&qword_BFDD8);
  uint64_t v6 = sub_1CCBC(v5);
  __chkstk_darwin(v6);
  sub_AAA8();
  uint64_t v9 = v8 - v7;
  sub_8DC90();
  uint64_t v10 = sub_8E220();
  if (_s35HomeCommunicationFlowDelegatePlugin22HomeCommunicationErrorOwet_0(v9, 1, v10) == 1)
  {
    sub_6C1C(v9, &qword_BFDD8);
    char v11 = 0;
  }
  else
  {
    sub_8E1F0();
    char v11 = sub_8E1E0();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0, v1);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  }
  return v11 & 1;
}

uint64_t sub_8C85C()
{
  char v0 = sub_8C3DC();
  if (v0 == 2)
  {
    char v1 = 0;
  }
  else
  {
    if (v0) {
      char v1 = sub_8EE40();
    }
    else {
      char v1 = 1;
    }
    swift_bridgeObjectRelease();
  }
  return v1 & 1;
}

uint64_t sub_8C8F4()
{
  char v0 = sub_8C3DC();
  if (v0 == 2)
  {
    char v1 = 0;
  }
  else
  {
    if (v0) {
      char v1 = 1;
    }
    else {
      char v1 = sub_8EE40();
    }
    swift_bridgeObjectRelease();
  }
  return v1 & 1;
}

uint64_t sub_8C9B8()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_8C9D0()
{
  return LocalizedError.helpAnchor.getter();
}

uint64_t sub_8C9E0()
{
  return LocalizedError.failureReason.getter();
}

uint64_t sub_8C9F0()
{
  return LocalizedError.errorDescription.getter();
}

uint64_t sub_8CA00()
{
  return LocalizedError.recoverySuggestion.getter();
}

uint64_t sub_8CA10()
{
  return _convertNSErrorToError(_:)();
}

uint64_t sub_8CA20()
{
  return URL.absoluteString.getter();
}

void sub_8CA30(NSURL *retstr@<X8>)
{
}

uint64_t sub_8CA40()
{
  return URL.init(string:)();
}

uint64_t sub_8CA50()
{
  return type metadata accessor for URL();
}

NSData sub_8CA60()
{
  return Data._bridgeToObjectiveC()();
}

uint64_t sub_8CA70()
{
  return static Data._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_8CA80()
{
  return UUID.init(uuidString:)();
}

uint64_t sub_8CA90()
{
  return UUID.uuidString.getter();
}

uint64_t _s35HomeCommunicationFlowDelegatePlugin0A6TargetV2eeoiySbAC_ACtFZ_0()
{
  return static UUID.== infix(_:_:)();
}

uint64_t sub_8CAB0()
{
  return UUID.init()();
}

uint64_t sub_8CAC0()
{
  return type metadata accessor for UUID();
}

uint64_t sub_8CAD0()
{
  return Locale.identifier.getter();
}

uint64_t sub_8CAE0()
{
  return type metadata accessor for Locale();
}

uint64_t sub_8CAF0()
{
  return CodableAceObject.init(wrappedValue:)();
}

uint64_t sub_8CB00()
{
  return type metadata accessor for CodableAceObject();
}

uint64_t sub_8CB10()
{
  return Loggable.init(wrappedValue:)();
}

uint64_t sub_8CB20()
{
  return Loggable.wrappedValue.modify();
}

uint64_t sub_8CB30()
{
  return Loggable.wrappedValue.getter();
}

uint64_t sub_8CB40()
{
  return Loggable.wrappedValue.setter();
}

uint64_t sub_8CB50()
{
  return type metadata accessor for Loggable();
}

uint64_t sub_8CB80()
{
  return static CommonGuardFlowUtils.makeGuardFlow(withGuards:)();
}

uint64_t sub_8CBA0()
{
  return HandleIntentFlowStrategyAsync.authenticationPolicy.getter();
}

uint64_t sub_8CBF0()
{
  return SimpleOutputFlowAsync.init(outputPublisher:outputGenerator:)();
}

uint64_t sub_8CC00()
{
  return type metadata accessor for SimpleOutputFlowAsync();
}

uint64_t sub_8CC60()
{
  return NeedsDisambiguationFlowStrategyAsync.authenticationPolicy.getter();
}

uint64_t sub_8CCD0()
{
  return type metadata accessor for GuardFlow();
}

uint64_t sub_8CCE0()
{
  return GuardFlowResult.description.getter();
}

uint64_t sub_8CCF0()
{
  return static GuardFlowResult.== infix(_:_:)();
}

uint64_t sub_8CD00()
{
  return static CommonFlowGuard.ensuringNoActiveCall(using:)();
}

uint64_t sub_8CD10()
{
  return type metadata accessor for CommonFlowGuard();
}

uint64_t sub_8CD20()
{
  return static RCHChildFlowFactoryHelper.makeNeedsValueFlowProducer<A>(strategy:)();
}

uint64_t sub_8CD30()
{
  return static RCHChildFlowFactoryHelper.makeHandleIntentFlowProducer<A>(strategy:)();
}

uint64_t sub_8CD40()
{
  return static RCHChildFlowFactoryHelper.makeAppResolutionFlowProducer<A, B>(app:)();
}

uint64_t sub_8CD50()
{
  return static RCHChildFlowFactoryHelper.makeNeedsDisambiguationFlowProducer<A>(strategy:)();
}

uint64_t sub_8CD60()
{
  return static RCHChildFlowFactoryHelper.makeUnsupportedValuePunchOutFlowProducer<A>(strategy:)();
}

uint64_t sub_8CD70()
{
  return static RCHChildFlowFactoryHelper.makeUnsupportedValueAndCancelFlowProducer<A>(strategy:)();
}

uint64_t sub_8CD80()
{
  return RCHChildFlowProducersAsync.needsValueFlowProducer.setter();
}

uint64_t sub_8CD90()
{
  return RCHChildFlowProducersAsync.handleIntentFlowProducer.setter();
}

uint64_t sub_8CDA0()
{
  return RCHChildFlowProducersAsync.appResolutionFlowProducer.setter();
}

uint64_t sub_8CDB0()
{
  return RCHChildFlowProducersAsync.unsupportedValueFlowProducer.setter();
}

uint64_t sub_8CDC0()
{
  return RCHChildFlowProducersAsync.needsDisambiguationFlowProducer.setter();
}

uint64_t sub_8CDD0()
{
  return RCHChildFlowProducersAsync.init()();
}

uint64_t sub_8CDE0()
{
  return RCHChildFlowFactory.init(producers:)();
}

uint64_t sub_8CDF0()
{
  return Flow.eraseToAnyFlow()();
}

uint64_t sub_8CE00()
{
  return Flow.deferToExecuteAsync(_:)();
}

uint64_t sub_8CE10()
{
  return Flow.flexibleExecutionSupport.getter();
}

uint64_t sub_8CE40()
{
  return static FlowSearchResult.noFlow.getter();
}

uint64_t sub_8CE50()
{
  return static FlowSearchResult.flow(_:)();
}

uint64_t sub_8CE60()
{
  return FlowPlugin.findFlowFor(parse:)();
}

uint64_t sub_8CE70()
{
  return FlowPlugin.makeFlowFor(parse:)();
}

uint64_t sub_8CE80()
{
  return FlowPlugin.makeFlowFrame(parse:)();
}

void sub_8CE90(Swift::String refId)
{
}

void sub_8CEA0()
{
}

uint64_t sub_8CEB0()
{
  return static SiriKitEventSender.current.getter();
}

uint64_t sub_8CEC0()
{
  return dispatch thunk of SiriKitEventSending.send(_:)();
}

uint64_t sub_8CED0()
{
  return dispatch thunk of static SiriKitAceViewBuilder.makeBuilder(deviceState:)();
}

uint64_t sub_8CEE0()
{
  return dispatch thunk of SiriKitAceViewBuilder.addSnippet(snippet:)();
}

uint64_t sub_8CEF0()
{
  return dispatch thunk of SiriKitAceViewBuilder.withUtteranceViews(utteranceViews:)();
}

uint64_t sub_8CF00()
{
  return dispatch thunk of SiriKitAceViewBuilder.withDisambiguationList(disambiguationList:)();
}

uint64_t sub_8CF10()
{
  return dispatch thunk of SiriKitAceViewBuilder.build()();
}

uint64_t sub_8CF20()
{
  return type metadata accessor for SiriKitAceViewBuilder();
}

uint64_t sub_8CF30()
{
  return type metadata accessor for SiriKitConfirmationState();
}

uint64_t sub_8CF40()
{
  return SiriKitDisambiguationItem.init(components:directInvocation:allowLineWrapForDisplayText:)();
}

uint64_t sub_8CF50()
{
  return SiriKitDisambiguationItem.init(components:utterance:allowLineWrapForDisplayText:)();
}

uint64_t sub_8CF60()
{
  return type metadata accessor for SiriKitDisambiguationItem();
}

uint64_t sub_8CF70()
{
  return SiriKitDisambiguationList.disambiguationItems.getter();
}

uint64_t sub_8CF80()
{
  return SiriKitDisambiguationList.init(rawItems:disambiguationItems:shouldReadItemsInVox:requestUnlockForEmptyOrDuplicateItems:)();
}

uint64_t sub_8CF90()
{
  return type metadata accessor for SiriKitDisambiguationList();
}

uint64_t sub_8CFA0()
{
  return SiriKitDisambiguationItemPair.rawItem.getter();
}

uint64_t sub_8CFB0()
{
  return type metadata accessor for SiriKitDisambiguationItemPair();
}

uint64_t sub_8CFC0()
{
  return SiriKitDisambiguationListAdapter.init(disambiguationList:deviceState:authenticationPolicy:)();
}

uint64_t sub_8CFD0()
{
  return type metadata accessor for SiriKitDisambiguationListAdapter();
}

uint64_t sub_8CFE0()
{
  return dispatch thunk of static SiriKitDisambiguationItemComponent.makeBuilder(_:)();
}

uint64_t sub_8CFF0()
{
  return dispatch thunk of SiriKitDisambiguationItemComponent.Builder.build()();
}

uint64_t sub_8D000()
{
  return type metadata accessor for SiriKitDisambiguationItemComponent();
}

uint64_t sub_8D010()
{
  return static SiriKitDisambiguationSnippetFactory.makeDisambiguationSnippetForCarPlay(disambiguationItems:deviceIsLocked:)();
}

uint64_t sub_8D020()
{
  return static SiriKitDisambiguationSnippetFactory.makeDisambiguationSnippetPhone(disambiguationItems:deviceIsLocked:imageSize:)();
}

uint64_t sub_8D030()
{
  return dispatch thunk of SiriKitEvent.SiriKitEventBuilder.domainContext.setter();
}

uint64_t sub_8D040()
{
  return SiriKitEvent.__allocating_init(stateType:taskType:statusReason:_:)();
}

uint64_t sub_8D050()
{
  return type metadata accessor for SiriKitEvent();
}

uint64_t sub_8D060()
{
  return static AceService.currentAsync.getter();
}

uint64_t sub_8D070()
{
  return static AceService.current.getter();
}

uint64_t sub_8D080()
{
  return dispatch thunk of DeviceState.siriLocale.getter();
}

uint64_t sub_8D090()
{
  return dispatch thunk of DeviceState.inputOrigin.getter();
}

uint64_t sub_8D0A0()
{
  return dispatch thunk of DeviceState.isMac.getter();
}

uint64_t sub_8D0B0()
{
  return dispatch thunk of DeviceState.isPad.getter();
}

uint64_t sub_8D0C0()
{
  return dispatch thunk of DeviceState.isPhone.getter();
}

uint64_t sub_8D0D0()
{
  return dispatch thunk of DeviceState.isWatch.getter();
}

uint64_t sub_8D0E0()
{
  return dispatch thunk of DeviceState.isAppleTV.getter();
}

uint64_t sub_8D0F0()
{
  return dispatch thunk of DeviceState.isCarPlay.getter();
}

uint64_t sub_8D100()
{
  return dispatch thunk of DeviceState.isHomePod.getter();
}

uint64_t sub_8D110()
{
  return DeviceState.asInvocationContext.getter();
}

uint64_t sub_8D120()
{
  return DeviceState.isVox.getter();
}

uint64_t sub_8D130()
{
  return static DialogPhase.completion.getter();
}

uint64_t sub_8D140()
{
  return static DialogPhase.clarification.getter();
}

uint64_t sub_8D150()
{
  return static DialogPhase.error.getter();
}

uint64_t sub_8D160()
{
  return type metadata accessor for DialogPhase();
}

uint64_t sub_8D170()
{
  return DisplayHint.init(idValue:displayValue:)();
}

uint64_t sub_8D180()
{
  return type metadata accessor for DisplayHint();
}

uint64_t sub_8D190()
{
  return static EmptyOutput.instance.getter();
}

uint64_t sub_8D1A0()
{
  return type metadata accessor for EmptyOutput();
}

uint64_t sub_8D1B0()
{
  return type metadata accessor for ResponseType();
}

uint64_t sub_8D1C0()
{
  return static CasinoFactory.makeSendCommandsFromMachineUtterance(machineUtterance:)();
}

uint64_t sub_8D1D0()
{
  return SemanticValue.init(string:label:nodeClass:)();
}

uint64_t sub_8D1E0()
{
  return type metadata accessor for SemanticValue();
}

uint64_t sub_8D1F0()
{
  return static ActionForInput.cancel()();
}

uint64_t sub_8D200()
{
  return static ActionForInput.handle()();
}

uint64_t sub_8D210()
{
  return static ActionForInput.ignore()();
}

uint64_t sub_8D220()
{
  return IdentifiedUser.sharedUserId.getter();
}

uint64_t sub_8D230()
{
  return type metadata accessor for IdentifiedUser();
}

uint64_t sub_8D240()
{
  return RCHFlowFactory.makeRCHFlowWithResolvedApp(_:intent:)();
}

uint64_t sub_8D250()
{
  return RCHFlowFactory.init(strategy:childFlowFactory:)();
}

uint64_t sub_8D260()
{
  return static ExecuteResponse.ongoing(requireInput:)();
}

uint64_t sub_8D270()
{
  return static ExecuteResponse.ongoing<A>(next:childCompletion:)();
}

uint64_t sub_8D280()
{
  return static ExecuteResponse.complete<A>(next:)();
}

uint64_t sub_8D290()
{
  return static ExecuteResponse.complete(next:)();
}

uint64_t sub_8D2A0()
{
  return static ExecuteResponse.complete()();
}

uint64_t sub_8D2B0()
{
  return NLContextUpdate.toAceContextUpdate()();
}

uint64_t sub_8D2C0()
{
  return NLContextUpdate.rrEntities.setter();
}

uint64_t sub_8D2D0()
{
  return NLContextUpdate.displayHints.setter();
}

uint64_t sub_8D2E0()
{
  return NLContextUpdate.nluSystemDialogActs.setter();
}

uint64_t sub_8D2F0()
{
  return NLContextUpdate.weightedPromptStrict.setter();
}

uint64_t sub_8D300()
{
  return NLContextUpdate.dictationPromptAbortValues.setter();
}

uint64_t sub_8D310()
{
  return NLContextUpdate.dictationPromptTargetNodes.setter();
}

uint64_t sub_8D320()
{
  return NLContextUpdate.weightedPromptTargetDomain.setter();
}

uint64_t sub_8D330()
{
  return NLContextUpdate.dictationPromptTargetDomain.setter();
}

uint64_t sub_8D340()
{
  return NLContextUpdate.weightedPromptResponseOptions.setter();
}

uint64_t sub_8D350()
{
  return NLContextUpdate.weightedPromptResponseTargets.setter();
}

uint64_t sub_8D360()
{
  return NLContextUpdate.init()();
}

uint64_t sub_8D370()
{
  return type metadata accessor for NLContextUpdate();
}

uint64_t sub_8D380()
{
  return RCHFlowDelegate.makeRCHFlow(producers:)();
}

uint64_t sub_8D390()
{
  return ResponseFactory.init()();
}

uint64_t sub_8D3A0()
{
  return type metadata accessor for ResponseFactory();
}

uint64_t sub_8D3B0()
{
  return static SAAppInfoFactory.createAppInfo(app:)();
}

uint64_t sub_8D3C0()
{
  return TemplatingResult.print.getter();
}

uint64_t sub_8D3D0()
{
  return TemplatingResult.sections.getter();
}

uint64_t sub_8D3E0()
{
  return type metadata accessor for TemplatingResult();
}

uint64_t sub_8D3F0()
{
  return dispatch thunk of AceServiceInvoker.endpointInfo()();
}

uint64_t sub_8D400()
{
  return dispatch thunk of AceServiceInvoker.submitAndForget(_:)();
}

uint64_t sub_8D410()
{
  return dispatch thunk of AceServiceInvoker.currentStartRequestId()();
}

uint64_t sub_8D420()
{
  return dispatch thunk of AceServiceInvoker.submit<A>(_:completion:)();
}

uint64_t sub_8D430()
{
  return IntentPromptAnswer.init(answeredValue:updatedIntent:)();
}

uint64_t sub_8D470()
{
  return type metadata accessor for SubmitCommandError();
}

uint64_t sub_8D480()
{
  return type metadata accessor for UnlockDevicePolicy();
}

uint64_t sub_8D490()
{
  return BaseRCHFlowDelegate.init()();
}

uint64_t sub_8D4A0()
{
  return method lookup function for BaseRCHFlowDelegate();
}

uint64_t sub_8D4B0()
{
  return BaseRCHFlowDelegate.deinit();
}

uint64_t sub_8D4C0()
{
  return type metadata accessor for ErrorDialogBehavior();
}

uint64_t sub_8D4D0()
{
  return ParameterIdentifier.name.getter();
}

uint64_t sub_8D4E0()
{
  return type metadata accessor for ParameterIdentifier();
}

uint64_t sub_8D4F0()
{
  return static DisambiguationResult.chosenItem(_:)();
}

uint64_t sub_8D500()
{
  return DucTemplatingService.init(ducFamily:locale:extensionValueTypeNamesByValueType:aceServiceInvoker:deviceState:localContext:)();
}

uint64_t sub_8D510()
{
  return method lookup function for DucTemplatingService();
}

uint64_t sub_8D520()
{
  return DucTemplatingService.deinit();
}

uint64_t sub_8D550()
{
  return dispatch thunk of UserIdentityProvider.identifiedUser.getter();
}

uint64_t sub_8D560()
{
  return type metadata accessor for BehaviorAfterSpeaking();
}

uint64_t sub_8D570()
{
  return dispatch thunk of EndpointInfoProviding.getIdentifier()();
}

uint64_t sub_8D580()
{
  return dispatch thunk of AceServiceInvokerAsync.endpointInfo()();
}

uint64_t sub_8D590()
{
  return dispatch thunk of AceServiceInvokerAsync.currentStartRequestId()();
}

uint64_t sub_8D5B0()
{
  return dispatch thunk of AppInformationResolver.getLocalizedAppDisplayName(inLocale:)();
}

uint64_t sub_8D5C0()
{
  return AppInformationResolver.init(app:)();
}

uint64_t sub_8D5D0()
{
  return type metadata accessor for AppInformationResolver();
}

uint64_t sub_8D5E0()
{
  return DefaultAceViewProvider.init()();
}

uint64_t sub_8D5F0()
{
  return method lookup function for DefaultAceViewProvider();
}

uint64_t sub_8D600()
{
  return DefaultAceViewProvider.deinit();
}

uint64_t sub_8D610()
{
  return IntentResolutionRecord.intentResponse.getter();
}

uint64_t sub_8D620()
{
  return IntentResolutionRecord.app.getter();
}

uint64_t sub_8D630()
{
  return IntentResolutionRecord.intent.getter();
}

uint64_t sub_8D640()
{
  return static OutputPublisherFactory.makeOutputPublisherAsync()();
}

uint64_t sub_8D650()
{
  return PaginatedItemContainer.items.getter();
}

uint64_t sub_8D660()
{
  return dispatch thunk of MachineUtteranceBuilder.addMapping(node:value:)();
}

uint64_t sub_8D670()
{
  return dispatch thunk of MachineUtteranceBuilder.build()();
}

uint64_t sub_8D680()
{
  return MachineUtteranceBuilder.init()();
}

uint64_t sub_8D690()
{
  return type metadata accessor for MachineUtteranceBuilder();
}

uint64_t sub_8D6A0()
{
  return DefaultNLContextProvider.init()();
}

uint64_t sub_8D6B0()
{
  return type metadata accessor for DefaultNLContextProvider();
}

uint64_t sub_8D6C0()
{
  return method lookup function for DefaultNLContextProvider();
}

uint64_t sub_8D6D0()
{
  return DefaultNLContextProvider.deinit();
}

uint64_t sub_8D6E0()
{
  return OutputGenerationManifest.init(dialogPhase:_:)();
}

uint64_t sub_8D6F0()
{
  return OutputGenerationManifest.responseMode.setter();
}

uint64_t sub_8D700()
{
  return OutputGenerationManifest.responseType.setter();
}

uint64_t sub_8D710()
{
  return OutputGenerationManifest.responseViewId.setter();
}

uint64_t sub_8D720()
{
  return OutputGenerationManifest.canUseServerTTS.setter();
}

uint64_t sub_8D730()
{
  return OutputGenerationManifest.nlContextUpdate.setter();
}

uint64_t sub_8D740()
{
  return OutputGenerationManifest.additionalCommands.setter();
}

uint64_t sub_8D750()
{
  return OutputGenerationManifest.listenAfterSpeaking.setter();
}

uint64_t sub_8D760()
{
  return type metadata accessor for OutputGenerationManifest();
}

uint64_t sub_8D770()
{
  return type metadata accessor for UnsupportedValueBehavior();
}

uint64_t sub_8D780()
{
  return DucTemplatingLocalContext.init()();
}

uint64_t sub_8D790()
{
  return type metadata accessor for DucTemplatingLocalContext();
}

uint64_t sub_8D7A0()
{
  return ParameterResolutionRecord.app.getter();
}

uint64_t sub_8D7B0()
{
  return ParameterResolutionRecord.intent.getter();
}

uint64_t sub_8D7C0()
{
  return ParameterResolutionRecord.result.getter();
}

uint64_t sub_8D7D0()
{
  return ParameterResolutionRecord.parameter.getter();
}

uint64_t sub_8D7E0()
{
  return OrdinalDisplayHintsBuilder.init(referenceNode:)();
}

uint64_t sub_8D7F0()
{
  return OrdinalDisplayHintsBuilder.build(for:)();
}

uint64_t sub_8D800()
{
  return type metadata accessor for OrdinalDisplayHintsBuilder();
}

uint64_t sub_8D840()
{
  return Input.parse.getter();
}

uint64_t sub_8D850()
{
  return Input.init(parse:)();
}

uint64_t sub_8D860()
{
  return type metadata accessor for Input();
}

uint64_t sub_8D870()
{
  return Parse.DirectInvocation.identifier.getter();
}

uint64_t sub_8D880()
{
  return Parse.DirectInvocation.userData.getter();
}

uint64_t sub_8D890()
{
  return type metadata accessor for Parse.DirectInvocation();
}

uint64_t sub_8D8A0()
{
  return Parse.ServerConversion.siriKitIntent.getter();
}

uint64_t sub_8D8B0()
{
  return type metadata accessor for Parse();
}

uint64_t sub_8D8C0()
{
  return static Device.current.getter();
}

uint64_t sub_8D8D0()
{
  return USOParse.userParse.getter();
}

uint64_t sub_8D8E0()
{
  return type metadata accessor for USOParse();
}

uint64_t sub_8D8F0()
{
  return type metadata accessor for ImageSize();
}

uint64_t sub_8D900()
{
  return isFeatureEnabled(_:)();
}

uint64_t sub_8D910()
{
  return Siri_Nlu_External_UsoGraph.identifiers.getter();
}

uint64_t sub_8D920()
{
  return type metadata accessor for Siri_Nlu_External_UsoGraph();
}

uint64_t sub_8D930()
{
  return Siri_Nlu_External_UserParse.userDialogActs.getter();
}

uint64_t sub_8D940()
{
  return type metadata accessor for Siri_Nlu_External_UserParse();
}

uint64_t sub_8D950()
{
  return Siri_Nlu_External_UserDialogAct.hasUserStatedTask.getter();
}

uint64_t sub_8D960()
{
  return Siri_Nlu_External_UserDialogAct.hasAccepted.getter();
}

uint64_t sub_8D970()
{
  return Siri_Nlu_External_UserDialogAct.hasRejected.getter();
}

uint64_t sub_8D980()
{
  return Siri_Nlu_External_UserDialogAct.hasCancelled.getter();
}

uint64_t sub_8D990()
{
  return Siri_Nlu_External_UserDialogAct.userStatedTask.getter();
}

uint64_t sub_8D9A0()
{
  return Siri_Nlu_External_UserDialogAct.userStatedTask.setter();
}

uint64_t sub_8D9B0()
{
  return Siri_Nlu_External_UserDialogAct.init()();
}

uint64_t sub_8D9C0()
{
  return type metadata accessor for Siri_Nlu_External_UserDialogAct();
}

uint64_t sub_8D9D0()
{
  return Siri_Nlu_External_SystemPrompted.target.setter();
}

uint64_t sub_8D9E0()
{
  return Siri_Nlu_External_SystemPrompted.init()();
}

uint64_t sub_8D9F0()
{
  return type metadata accessor for Siri_Nlu_External_SystemPrompted();
}

uint64_t sub_8DA00()
{
  return Siri_Nlu_External_UserStatedTask.hasTask.getter();
}

uint64_t sub_8DA10()
{
  return Siri_Nlu_External_UserStatedTask.task.getter();
}

uint64_t sub_8DA20()
{
  return Siri_Nlu_External_UserStatedTask.task.setter();
}

uint64_t sub_8DA30()
{
  return Siri_Nlu_External_UserStatedTask.init()();
}

uint64_t sub_8DA40()
{
  return type metadata accessor for Siri_Nlu_External_UserStatedTask();
}

uint64_t sub_8DA50()
{
  return Siri_Nlu_External_SystemDialogAct.gaveOptions.setter();
}

uint64_t sub_8DA60()
{
  return Siri_Nlu_External_SystemDialogAct.prompted.setter();
}

uint64_t sub_8DA70()
{
  return Siri_Nlu_External_SystemDialogAct.init()();
}

uint64_t sub_8DA80()
{
  return type metadata accessor for Siri_Nlu_External_SystemDialogAct();
}

uint64_t sub_8DA90()
{
  return Siri_Nlu_External_SystemGaveOptions.choices.setter();
}

uint64_t sub_8DAA0()
{
  return Siri_Nlu_External_SystemGaveOptions.init()();
}

uint64_t sub_8DAB0()
{
  return type metadata accessor for Siri_Nlu_External_SystemGaveOptions();
}

uint64_t sub_8DAC0()
{
  return static SiriNLUTypesPrintUtils.printableProtoObject(object:)();
}

uint64_t sub_8DAD0()
{
  return type metadata accessor for SiriNLUTypesPrintUtils();
}

uint64_t sub_8DAE0()
{
  return static ConversionUtils.toUserParse(from:)();
}

uint64_t sub_8DAF0()
{
  return static ConversionUtils.convertUserDialogActToTasks(userDialogAct:)();
}

uint64_t sub_8DB00()
{
  return static UsoGraphProtoWriter.toSwiftProtobuf(graph:vocabManager:)();
}

uint64_t sub_8DB10()
{
  return NonTerminalOntologyNode.init(name:multicardinal:childNodes:)();
}

uint64_t sub_8DB20()
{
  return type metadata accessor for NonTerminalOntologyNode();
}

uint64_t sub_8DB30()
{
  return dispatch thunk of Uso_VerbTemplate_NoVerb.userEntities.getter();
}

uint64_t sub_8DB40()
{
  return dispatch thunk of Uso_VerbTemplate_NoVerb.entity.getter();
}

uint64_t sub_8DB50()
{
  return dispatch thunk of UsoEntity_common_UserEntity.definedValue.getter();
}

uint64_t sub_8DB60()
{
  return type metadata accessor for UsoEntity_common_UserEntity.DefinedValues();
}

uint64_t sub_8DB70()
{
  return type metadata accessor for UsoEntity_common_UserEntity();
}

uint64_t sub_8DB80()
{
  return dispatch thunk of Uso_VerbTemplateBuilder_NoVerb.addUserEntities(value:)();
}

uint64_t sub_8DB90()
{
  return dispatch thunk of UsoEntityBuilder_common_UserEntity.addNames(value:)();
}

uint64_t sub_8DBA0()
{
  return UsoEntityBuilder_common_UserEntity.init()();
}

uint64_t sub_8DBB0()
{
  return type metadata accessor for UsoEntityBuilder_common_UserEntity();
}

uint64_t sub_8DBC0()
{
  return DomainOntologyNode.init(name:childNodes:isInEventTree:)();
}

uint64_t sub_8DBD0()
{
  return type metadata accessor for DomainOntologyNode();
}

uint64_t sub_8DBE0()
{
  return TerminalOntologyNode.init(name:multicardinal:)();
}

uint64_t sub_8DBF0()
{
  return TerminalOntologyNode.name.getter();
}

uint64_t sub_8DC00()
{
  return type metadata accessor for Siri_Nl_Core_Protocol_UsoGraph();
}

uint64_t sub_8DC10()
{
  return dispatch thunk of OntologyNode.name.getter();
}

uint64_t sub_8DC20()
{
  return dispatch thunk of UsoBuilder.addUsoIdentifier(usoIdentifier:)();
}

uint64_t sub_8DC30()
{
  return dispatch thunk of CodeGenBase.getUtteranceAlignmentsHelper(attributeName:)();
}

uint64_t sub_8DC40()
{
  return CodeGenBase.entity.getter();
}

uint64_t sub_8DC50()
{
  return SpanProperty.valueString.getter();
}

uint64_t sub_8DC60()
{
  return SpanProperty.key.getter();
}

uint64_t sub_8DC70()
{
  return type metadata accessor for SpanProperty();
}

uint64_t sub_8DC80()
{
  return UsoEntitySpan.properties.getter();
}

uint64_t sub_8DC90()
{
  return UsoEntitySpan.matchInfo.getter();
}

uint64_t sub_8DCA0()
{
  return type metadata accessor for UsoEntitySpan();
}

uint64_t sub_8DCB0()
{
  return UsoIdentifier.probability.getter();
}

uint64_t sub_8DCC0()
{
  return type metadata accessor for UsoIdentifier.NluComponent();
}

uint64_t sub_8DCD0()
{
  return UsoIdentifier.appBundleSemantic.getter();
}

uint64_t sub_8DCE0()
{
  return UsoIdentifier.namespaceSemantic.getter();
}

uint64_t sub_8DCF0()
{
  return UsoIdentifier.interpretationGroup.getter();
}

uint64_t sub_8DD00()
{
  return UsoIdentifier.init(value:appBundleId:namespace:probability:sourceComponent:)();
}

uint64_t sub_8DD10()
{
  return UsoIdentifier.init(value:appBundleId:namespace:)();
}

uint64_t sub_8DD20()
{
  return UsoIdentifier.value.getter();
}

uint64_t sub_8DD30()
{
  return UsoIdentifier.namespace.getter();
}

uint64_t sub_8DD40()
{
  return type metadata accessor for UsoIdentifier();
}

uint64_t sub_8DD50()
{
  return UtteranceSpan.endMilliSeconds.getter();
}

uint64_t sub_8DD60()
{
  return UtteranceSpan.startMilliSeconds.getter();
}

uint64_t sub_8DD70()
{
  return type metadata accessor for UtteranceSpan();
}

uint64_t sub_8DD80()
{
  return type metadata accessor for IdentifierValue();
}

uint64_t sub_8DDC0()
{
  return TerminalElement.MatchingSpan.preITNPhrasesEndTime.getter();
}

uint64_t sub_8DDD0()
{
  return TerminalElement.MatchingSpan.preITNPhrasesStartTime.getter();
}

uint64_t sub_8DDE0()
{
  return TerminalElement.MatchingSpan.input.getter();
}

uint64_t sub_8DDF0()
{
  return type metadata accessor for TerminalElement.MatchingSpan();
}

uint64_t sub_8DE00()
{
  return type metadata accessor for TerminalElement.OriginDetail();
}

uint64_t sub_8DE10()
{
  return TerminalElement.Origin.originDetail.getter();
}

uint64_t sub_8DE20()
{
  return type metadata accessor for TerminalElement.Origin();
}

uint64_t sub_8DE30()
{
  return TerminalElement.origin.getter();
}

uint64_t sub_8DE40()
{
  return type metadata accessor for TerminalElement();
}

uint64_t sub_8DE50()
{
  return static UsoGraphBuilder.buildGraphWithOptions(taskBuilders:options:)();
}

uint64_t sub_8DE60()
{
  return dispatch thunk of CodeGenListEntry.entry.getter();
}

uint64_t sub_8DE70()
{
  return dispatch thunk of UsoEntityBuilder.getAsListHelper<A>(attributeName:)();
}

uint64_t sub_8DE80()
{
  return dispatch thunk of CodeGenGlobalArgs.usoQuantifier.getter();
}

uint64_t sub_8DE90()
{
  return dispatch thunk of CodeGenGlobalArgs.getUsoIdentifiersFor(attributeName:)();
}

uint64_t sub_8DEA0()
{
  return type metadata accessor for UsoBuilderOptions();
}

uint64_t sub_8DEB0()
{
  return TerminalIntentNode.elements.getter();
}

uint64_t sub_8DEC0()
{
  return type metadata accessor for TerminalIntentNode();
}

uint64_t sub_8DED0()
{
  return UtteranceAlignment.spans.getter();
}

uint64_t sub_8DEE0()
{
  return type metadata accessor for UtteranceAlignment();
}

uint64_t sub_8DEF0()
{
  return static IdentifierAppBundle.== infix(_:_:)();
}

uint64_t sub_8DF00()
{
  return IdentifierAppBundle.rawValue.getter();
}

uint64_t sub_8DF10()
{
  return type metadata accessor for IdentifierAppBundle();
}

uint64_t sub_8DF20()
{
  return IdentifierNamespace.rawValue.getter();
}

uint64_t sub_8DF30()
{
  return type metadata accessor for IdentifierNamespace();
}

uint64_t sub_8DF40()
{
  return IntentNodeTraversable.intentNode(forOntologyNode:)();
}

uint64_t sub_8DF50()
{
  return IntentNodeTraversable.intentNode<A>(forOntologyNode:)();
}

uint64_t sub_8DF60()
{
  return IntentNodeTraversable.value<A>(forNode:)();
}

uint64_t sub_8DF70()
{
  return IntentNodeTraversable.values<A>(forNode:)();
}

uint64_t sub_8DF80()
{
  return type metadata accessor for NonTerminalIntentNode();
}

uint64_t sub_8DF90()
{
  return dispatch thunk of UsoEntity_common_Agent.name.getter();
}

uint64_t sub_8DFA0()
{
  return dispatch thunk of Uso_VerbTemplate_Target.userEntities.getter();
}

uint64_t sub_8DFB0()
{
  return dispatch thunk of Uso_VerbTemplate_Target.target.getter();
}

uint64_t sub_8DFC0()
{
  return static UsoTask_CodegenConverter.convert(task:)();
}

uint64_t sub_8DFD0()
{
  return static UsoBuilderConversionUtils.convertEntityBuilderToEntity(entityBuilder:)();
}

uint64_t sub_8DFE0()
{
  return type metadata accessor for UsoPrimitiveStringBuilder();
}

uint64_t sub_8DFF0()
{
  return dispatch thunk of UsoEntity_common_Quantifier.definedValue.getter();
}

uint64_t sub_8E000()
{
  return type metadata accessor for UsoEntity_common_Quantifier.DefinedValues();
}

uint64_t sub_8E010()
{
  return type metadata accessor for UsoTask_noVerb_uso_NoEntity();
}

uint64_t sub_8E020()
{
  return dispatch thunk of UsoEntity_common_Announcement.recipients.getter();
}

uint64_t sub_8E030()
{
  return dispatch thunk of UsoEntity_common_Announcement.content.getter();
}

uint64_t sub_8E040()
{
  return dispatch thunk of Uso_VerbTemplateBuilder_Target.setTarget(value:)();
}

uint64_t sub_8E060()
{
  return type metadata accessor for UsoTask_noVerb_common_UserEntity();
}

uint64_t sub_8E070()
{
  return type metadata accessor for UsoTask_play_common_Announcement();
}

uint64_t sub_8E080()
{
  return type metadata accessor for UsoTask_send_common_Announcement();
}

uint64_t sub_8E090()
{
  return type metadata accessor for UsoTask_skipForward_uso_NoEntity();
}

uint64_t sub_8E0A0()
{
  return type metadata accessor for UsoTask_stop_common_Announcement();
}

uint64_t sub_8E0B0()
{
  return dispatch thunk of Uso_VerbTemplate_ReferenceTarget.userEntities.getter();
}

uint64_t sub_8E0C0()
{
  return dispatch thunk of Uso_VerbTemplate_ReferenceTarget.target.getter();
}

uint64_t sub_8E0D0()
{
  return type metadata accessor for UsoTask_reply_common_Announcement();
}

uint64_t sub_8E0E0()
{
  return type metadata accessor for UsoTask_skipBackward_uso_NoEntity();
}

uint64_t sub_8E0F0()
{
  return type metadata accessor for UsoTask_noVerb_common_Announcement();
}

uint64_t sub_8E100()
{
  return type metadata accessor for UsoTask_repeat_common_Announcement();
}

uint64_t sub_8E110()
{
  return dispatch thunk of UsoEntityBuilder_common_Announcement.setContent(value:)();
}

uint64_t sub_8E120()
{
  return UsoEntityBuilder_common_Announcement.init()();
}

uint64_t sub_8E130()
{
  return type metadata accessor for UsoEntityBuilder_common_Announcement();
}

uint64_t sub_8E140()
{
  return UsoTaskBuilder_noVerb_common_UserEntity.init()();
}

uint64_t sub_8E150()
{
  return type metadata accessor for UsoTaskBuilder_noVerb_common_UserEntity();
}

uint64_t sub_8E160()
{
  return UsoTaskBuilder_send_common_Announcement.init()();
}

uint64_t sub_8E170()
{
  return type metadata accessor for UsoTaskBuilder_send_common_Announcement();
}

uint64_t sub_8E180()
{
  return type metadata accessor for UsoTask_skipForward_common_Announcement();
}

uint64_t sub_8E190()
{
  return type metadata accessor for UsoTask_skipBackward_common_Announcement();
}

uint64_t sub_8E1A0()
{
  return Graph.protobufGraphSiriNl(vocabManager:)();
}

uint64_t sub_8E1B0()
{
  return type metadata accessor for UsoTask();
}

uint64_t sub_8E1C0()
{
  return type metadata accessor for NLIntent();
}

uint64_t sub_8E1D0()
{
  return dispatch thunk of UsoValue.getEntitySpans()();
}

uint64_t sub_8E1E0()
{
  return MatchInfo.hasMatchSignals(_:)();
}

uint64_t sub_8E1F0()
{
  return static MatchInfo.MatchSignals.exactMatch.getter();
}

uint64_t sub_8E200()
{
  return type metadata accessor for MatchInfo.MatchSignals();
}

uint64_t sub_8E210()
{
  return MatchInfo.matchScore.getter();
}

uint64_t sub_8E220()
{
  return type metadata accessor for MatchInfo();
}

uint64_t sub_8E230()
{
  return UsoEntity.attributes.getter();
}

uint64_t sub_8E240()
{
  return SiriEnvironment.userIdentity.getter();
}

uint64_t sub_8E250()
{
  return SiriEnvironment.currentRequest.getter();
}

uint64_t sub_8E260()
{
  return static SiriEnvironment.forCurrentTask.getter();
}

uint64_t sub_8E270()
{
  return type metadata accessor for SiriEnvironment();
}

uint64_t sub_8E280()
{
  return type metadata accessor for DeviceIdiom();
}

uint64_t sub_8E290()
{
  return InputOrigin.rawValue.getter();
}

uint64_t sub_8E2A0()
{
  return type metadata accessor for InputOrigin();
}

uint64_t sub_8E2B0()
{
  return Transformer.init(transform:)();
}

uint64_t sub_8E2C0()
{
  return Transformer.transform.getter();
}

uint64_t sub_8E2D0()
{
  return type metadata accessor for Transformer();
}

uint64_t sub_8E2E0()
{
  return static ResponseMode.voiceForward.getter();
}

uint64_t sub_8E2F0()
{
  return type metadata accessor for ResponseMode();
}

uint64_t sub_8E300()
{
  return type metadata accessor for TransformationError();
}

uint64_t sub_8E310()
{
  return dispatch thunk of AutoBugCaptureManager.generateSnapshot(errorType:errorSubType:subTypeContext:completion:)();
}

uint64_t sub_8E320()
{
  return AutoBugCaptureManager.init(domain:sessionDuration:)();
}

uint64_t sub_8E330()
{
  return type metadata accessor for AutoBugCaptureManager();
}

uint64_t sub_8E340()
{
  return CATWrapper.init(templateDir:options:globals:)();
}

uint64_t sub_8E350()
{
  return dispatch thunk of CATWrapper.execute(catId:parameters:completion:)();
}

uint64_t sub_8E360()
{
  return CATWrapper.__allocating_init(options:globals:)();
}

uint64_t sub_8E370()
{
  return CATWrapper.deinit();
}

uint64_t sub_8E380()
{
  return static CATExecutor.registerBundle(bundle:)();
}

uint64_t sub_8E390()
{
  return type metadata accessor for CATExecutor();
}

uint64_t sub_8E3A0()
{
  return SpeakableString.init(serializedValue:)();
}

uint64_t sub_8E3B0()
{
  return SpeakableString.init(print:speak:)();
}

uint64_t sub_8E3C0()
{
  return SpeakableString.print.getter();
}

uint64_t sub_8E3D0()
{
  return type metadata accessor for SpeakableString();
}

uint64_t sub_8E3E0()
{
  return CATWrapperSimple.init(templateDir:options:globals:)();
}

uint64_t sub_8E3F0()
{
  return CATWrapperSimple.init(useResponseMode:options:)();
}

uint64_t sub_8E400()
{
  return CATWrapperSimple.__allocating_init(options:globals:)();
}

uint64_t sub_8E410()
{
  return CATWrapperSimple.deinit();
}

uint64_t sub_8E420()
{
  return SirikitDeviceState.__allocating_init(from:)();
}

uint64_t sub_8E430()
{
  return type metadata accessor for SirikitDeviceState();
}

uint64_t sub_8E440()
{
  return dispatch thunk of LabelExecutionResult.subscript.getter();
}

uint64_t sub_8E450()
{
  return static CATOption.defaultMode.getter();
}

uint64_t sub_8E460()
{
  return type metadata accessor for CATOption();
}

uint64_t sub_8E470()
{
  return DefaultAppSelector.init(defaultApps:)();
}

uint64_t sub_8E480()
{
  return type metadata accessor for DefaultAppSelector();
}

uint64_t sub_8E490()
{
  return App.init(appIdentifier:systemExtensionBundleId:systemUIExtensionBundleId:pluginIdentifier:)();
}

uint64_t sub_8E4A0()
{
  return App.__allocating_init(appIdentifier:)();
}

uint64_t sub_8E4B0()
{
  return App.appIdentifier.getter();
}

uint64_t sub_8E4C0()
{
  return type metadata accessor for App();
}

uint64_t sub_8E4D0()
{
  return AppSelectionService.init(resolvers:)();
}

uint64_t sub_8E4E0()
{
  return AppSelectionService.deinit();
}

uint64_t sub_8E4F0()
{
  return type metadata accessor for AppResolutionResult();
}

uint64_t sub_8E530()
{
  return AppIntentRepresentation.exportToSpecification()();
}

uint64_t sub_8E540()
{
  return IntentParameter.wrappedValue.getter();
}

uint64_t sub_8E570()
{
  return CurrentRequest.inputOrigin.getter();
}

uint64_t sub_8E580()
{
  return CurrentRequest.voiceTriggerEventInfo.getter();
}

uint64_t sub_8E590()
{
  return TTRComponentInfo.init(componentName:componentVersion:componentID:)();
}

uint64_t sub_8E5A0()
{
  return type metadata accessor for TTRComponentInfo();
}

uint64_t sub_8E5B0()
{
  return RadarFilingExtras.init(attachmentURLs:extensionIDs:deviceIDs:displayReason:)();
}

uint64_t sub_8E5C0()
{
  return type metadata accessor for RadarFilingExtras();
}

uint64_t sub_8E5D0()
{
  return dispatch thunk of TapToRadarManager.createProblem(errStatus:userDefaultSuiteName:radarComponentInfo:title:description:radarFilingExtras:completion:)();
}

uint64_t sub_8E5E0()
{
  return TapToRadarManager.init()();
}

uint64_t sub_8E5F0()
{
  return type metadata accessor for TapToRadarManager();
}

uint64_t sub_8E600()
{
  return ReferenceResolutionClient.__allocating_init()();
}

uint64_t sub_8E610()
{
  return type metadata accessor for ReferenceResolutionClient();
}

uint64_t sub_8E620()
{
  return dispatch thunk of RRReferenceResolverProtocol.resolve(reference:)();
}

uint64_t sub_8E630()
{
  return type metadata accessor for CrossDeviceCommandExecution.FailureReason();
}

uint64_t sub_8E640()
{
  return type metadata accessor for CrossDeviceCommandExecution.Result();
}

uint64_t sub_8E650()
{
  return type metadata accessor for CrossDeviceCommandExecution();
}

uint64_t sub_8E660()
{
  return type metadata accessor for DeviceResolutionAnalyticsImpl();
}

uint64_t sub_8E670()
{
  return static DeviceResolutionService.sharedAnalytics.getter();
}

uint64_t sub_8E680()
{
  return type metadata accessor for DeviceResolutionService();
}

uint64_t sub_8E690()
{
  return dispatch thunk of DeviceResolutionAnalytics.logCommandExecution(_:)();
}

uint64_t sub_8E6A0()
{
  return ExecutionInfo.init(executionId:action:quickStopActionResult:)();
}

uint64_t sub_8E6B0()
{
  return type metadata accessor for ExecutionInfo.QuickStopActionResult();
}

uint64_t sub_8E6C0()
{
  return type metadata accessor for ExecutionInfo.Action();
}

uint64_t sub_8E6D0()
{
  return type metadata accessor for ExecutionInfo();
}

uint64_t sub_8E6E0()
{
  return os_signpost(_:dso:log:name:signpostID:)();
}

uint64_t sub_8E6F0()
{
  return OSSignpostID.init(log:)();
}

uint64_t sub_8E700()
{
  return type metadata accessor for OSSignpostID();
}

uint64_t sub_8E710()
{
  return Logger.logObject.getter();
}

uint64_t sub_8E720()
{
  return Logger.init(subsystem:category:)();
}

uint64_t sub_8E730()
{
  return type metadata accessor for Logger();
}

uint64_t sub_8E740()
{
  return RRCandidate.score.getter();
}

uint64_t sub_8E750()
{
  return RRCandidate.entity.getter();
}

uint64_t sub_8E760()
{
  return type metadata accessor for RRCandidate();
}

uint64_t sub_8E770()
{
  return type metadata accessor for GroupIdentifier();
}

uint64_t sub_8E780()
{
  return dispatch thunk of GroupIdentifierGenerator.addGroupIdentifier()();
}

uint64_t sub_8E790()
{
  return GroupIdentifierGenerator.init()();
}

uint64_t sub_8E7A0()
{
  return type metadata accessor for GroupIdentifierGenerator();
}

uint64_t sub_8E7B0()
{
  return type metadata accessor for RRQuery();
}

uint64_t sub_8E7C0()
{
  return RREntity.convertData<A>(to:)();
}

uint64_t sub_8E7D0()
{
  return RREntity.init<A>(id:appBundleId:usoEntity:intentEntity:group:)();
}

uint64_t sub_8E7E0()
{
  return RREntity.id.getter();
}

uint64_t sub_8E7F0()
{
  return type metadata accessor for RREntity();
}

uint64_t sub_8E800()
{
  return type metadata accessor for RRResult();
}

uint64_t sub_8E810()
{
  return type metadata accessor for DispatchTimeInterval();
}

uint64_t sub_8E820()
{
  return static DispatchTimeoutResult.== infix(_:_:)();
}

uint64_t sub_8E830()
{
  return static DispatchTime.now()();
}

uint64_t sub_8E840()
{
  return type metadata accessor for DispatchTime();
}

uint64_t sub_8E850()
{
  return + infix(_:_:)();
}

NSDictionary sub_8E860()
{
  return Dictionary._bridgeToObjectiveC()();
}

uint64_t sub_8E870()
{
  return static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_8E880()
{
  return Dictionary.init(dictionaryLiteral:)();
}

uint64_t sub_8E890()
{
  return dispatch thunk of Hashable.hash(into:)();
}

uint64_t sub_8E8A0()
{
  return Character.uppercased()()._countAndFlagsBits;
}

uint64_t sub_8E8B0()
{
  return dispatch thunk of static Equatable.== infix(_:_:)();
}

NSString sub_8E8C0()
{
  return String._bridgeToObjectiveC()();
}

uint64_t sub_8E8D0()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_8E8E0()
{
  return String.init<A>(describing:)();
}

uint64_t sub_8E8F0()
{
  return String.init<A>(describing:)();
}

uint64_t sub_8E900()
{
  return String.uppercased()()._countAndFlagsBits;
}

uint64_t sub_8E910()
{
  return String.toSpeakableString.getter();
}

uint64_t sub_8E920()
{
  return static String._uncheckedFromUTF8(_:)();
}

uint64_t sub_8E930()
{
  return String.hash(into:)();
}

uint64_t sub_8E940()
{
  return String.index(_:offsetBy:limitedBy:)();
}

uint64_t sub_8E950()
{
  return String.append<A>(contentsOf:)();
}

void sub_8E960(Swift::String a1)
{
}

Swift::Int sub_8E970()
{
  return String.UTF8View._foreignCount()();
}

uint64_t sub_8E980()
{
  return String.UTF8View._foreignIndex(after:)();
}

uint64_t sub_8E990()
{
  return String.UTF8View._foreignIndex(_:offsetBy:)();
}

uint64_t sub_8E9B0()
{
  return String.UTF8View._foreignSubscript(position:)();
}

uint64_t sub_8E9C0()
{
  return String.UTF16View.index(_:offsetBy:)();
}

uint64_t sub_8E9D0()
{
  return String.subscript.getter();
}

uint64_t sub_8E9E0()
{
  return String.init<A>(_:)();
}

uint64_t sub_8E9F0()
{
  return String.subscript.getter();
}

uint64_t sub_8EA00()
{
  return dispatch thunk of RawRepresentable.rawValue.getter();
}

uint64_t sub_8EA10()
{
  return specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
}

NSArray sub_8EA20()
{
  return Array._bridgeToObjectiveC()();
}

uint64_t sub_8EA30()
{
  return static Array._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_8EA40()
{
  return Array.description.getter();
}

uint64_t sub_8EA50()
{
  return specialized Array._endMutation()();
}

uint64_t sub_8EA60()
{
  return specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t sub_8EA70()
{
  return static Array._allocateBufferUninitialized(minimumCapacity:)();
}

uint64_t sub_8EA80()
{
  return specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

NSNumber sub_8EA90()
{
  return Bool._bridgeToObjectiveC()();
}

uint64_t sub_8EAA0()
{
  return dispatch thunk of Actor.unownedExecutor.getter();
}

uint64_t sub_8EAB0()
{
  return CheckedContinuation.resume(returning:)();
}

uint64_t sub_8EAC0()
{
  return TaskPriority.rawValue.getter();
}

uint64_t sub_8EAD0()
{
  return type metadata accessor for TaskPriority();
}

uint64_t sub_8EAE0()
{
  return Set.init(minimumCapacity:)();
}

uint64_t sub_8EAF0()
{
  return static os_log_type_t.info.getter();
}

uint64_t sub_8EB00()
{
  return static os_log_type_t.debug.getter();
}

uint64_t sub_8EB10()
{
  return static os_log_type_t.error.getter();
}

uint64_t sub_8EB20()
{
  return INSpeakableString.toSpeakableString.getter();
}

uint64_t sub_8EB30()
{
  return static USOSerializedGraph.fromProto(protoGraph:)();
}

uint64_t sub_8EB40()
{
  return static os_signpost_type_t.end.getter();
}

uint64_t sub_8EB50()
{
  return static os_signpost_type_t.begin.getter();
}

uint64_t sub_8EB60()
{
  return OS_dispatch_semaphore.wait(timeout:)();
}

Swift::Int sub_8EB70()
{
  return OS_dispatch_semaphore.signal()();
}

uint64_t sub_8EB80()
{
  return static SAIntentGroupLaunchAppWithIntent.launchAppWithIntent(app:intent:intentResponse:)();
}

uint64_t sub_8EB90()
{
  return OS_os_log.init(subsystem:category:)();
}

uint64_t sub_8EBA0()
{
  return Optional.debugDescription.getter();
}

uint64_t sub_8EBB0()
{
  return type metadata accessor for Optional();
}

uint64_t sub_8EBC0()
{
  return Substring.uppercased()()._countAndFlagsBits;
}

uint64_t sub_8EBD0()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_8EBE0()
{
  return UnsafeMutableRawBufferPointer.subscript.setter();
}

uint64_t sub_8EBF0()
{
  return StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
}

uint64_t sub_8EC00()
{
  return _HashTable.nextHole(atOrAfter:)();
}

Swift::Int sub_8EC10(Swift::Int seed)
{
  return AnyHashable._rawHashValue(seed:)(seed);
}

uint64_t sub_8EC20()
{
  return static _SetStorage.copy(original:)();
}

uint64_t sub_8EC30()
{
  return static _SetStorage.resize(original:capacity:move:)();
}

void sub_8EC40(Swift::Int a1)
{
}

uint64_t sub_8EC50()
{
  return _StringGuts.copyUTF8(into:)();
}

uint64_t sub_8EC60()
{
  return StaticString.description.getter();
}

uint64_t sub_8EC70()
{
  return specialized _ArrayBuffer._getElementSlowPath(_:)();
}

uint64_t sub_8EC80()
{
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t sub_8EC90()
{
  return DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
}

uint64_t sub_8ECA0()
{
  return type metadata accessor for DecodingError();
}

uint64_t sub_8ECB0()
{
  return _StringObject.sharedUTF8.getter();
}

uint64_t sub_8ECC0()
{
  return specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
}

uint64_t sub_8ECD0()
{
  return specialized ContiguousArray._endMutation()();
}

uint64_t sub_8ECE0()
{
  return specialized ContiguousArray.reserveCapacity(_:)();
}

uint64_t sub_8ECF0()
{
  return specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
}

uint64_t sub_8ED00()
{
  return specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

uint64_t sub_8ED10()
{
  return _print_unlocked<A, B>(_:_:)();
}

uint64_t sub_8ED20()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t sub_8ED30()
{
  return _bridgeCocoaArray<A>(_:)();
}

uint64_t sub_8ED40()
{
  return _CocoaArrayWrapper.endIndex.getter();
}

uint64_t sub_8ED50()
{
  return static _DictionaryStorage.resize(original:capacity:move:)();
}

uint64_t sub_8ED60()
{
  return static _DictionaryStorage.allocate(capacity:)();
}

uint64_t sub_8ED70()
{
  return _fatalErrorMessage(_:_:file:line:flags:)();
}

Swift::Int sub_8ED80(Swift::OpaquePointer cases, Swift::String string)
{
  return _findStringSwitchCase(cases:string:)(cases, string);
}

uint64_t sub_8EDA0()
{
  return KeyedDecodingContainer.codingPath.getter();
}

uint64_t sub_8EDB0()
{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

uint64_t sub_8EDC0()
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)();
}

uint64_t sub_8EDD0()
{
  return KeyedDecodingContainer.allKeys.getter();
}

uint64_t sub_8EDE0()
{
  return KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
}

uint64_t sub_8EDF0()
{
  return KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
}

uint64_t sub_8EE00()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:)();
}

Swift::Int sub_8EE10(Swift::Int a1)
{
  return _minimumMergeRunLength(_:)(a1);
}

uint64_t sub_8EE20()
{
  return dispatch thunk of CustomStringConvertible.description.getter();
}

uint64_t sub_8EE40()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t sub_8EE50()
{
  return dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
}

uint64_t sub_8EE60()
{
  return _findStringSwitchCaseWithCache(cases:string:cache:)();
}

uint64_t sub_8EE70()
{
  return ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t sub_8EE80()
{
  return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t sub_8EE90()
{
  return Error.localizedDescription.getter();
}

uint64_t sub_8EEA0()
{
  return Error._getEmbeddedNSError()();
}

uint64_t sub_8EEB0()
{
  return Error._code.getter();
}

uint64_t sub_8EEC0()
{
  return Error._domain.getter();
}

uint64_t sub_8EED0()
{
  return Error._userInfo.getter();
}

uint64_t sub_8EEE0()
{
  return Hasher.init(_seed:)();
}

void sub_8EEF0(Swift::UInt a1)
{
}

void sub_8EF00(Swift::UInt8 a1)
{
}

void sub_8EF10(Swift::UInt32 a1)
{
}

Swift::Int sub_8EF20()
{
  return Hasher._finalize()();
}

uint64_t sub_8EF30()
{
  return Result<>.withBehaviorAfterSpeaking(_:)();
}

uint64_t sub_8EF40()
{
  return dispatch thunk of Decoder.container<A>(keyedBy:)();
}

uint64_t sub_8EF50()
{
  return dispatch thunk of Encoder.container<A>(keyedBy:)();
}

uint64_t AFIsInternalInstall()
{
  return _AFIsInternalInstall();
}

uint64_t AFProcessIsAssistantService()
{
  return _AFProcessIsAssistantService();
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return __swift_stdlib_bridgeErrorToNSError();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return __swift_stdlib_reportUnimplementedInitializer();
}

dispatch_semaphore_t dispatch_semaphore_create(intptr_t value)
{
  return _dispatch_semaphore_create(value);
}

void free(void *a1)
{
}

void *__cdecl malloc(size_t __size)
{
  return _malloc(__size);
}

size_t malloc_size(const void *ptr)
{
  return _malloc_size(ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return _memcpy(__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return _memmove(__dst, __src, __len);
}

id objc_allocWithZone(Class a1)
{
  return _objc_allocWithZone(a1);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return _[a1 a2];
}

uint64_t self
{
  return _self;
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return _objc_retain(a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return _a1;
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return _os_log_type_enabled(oslog, type);
}

uint64_t swift_allocBox()
{
  return _swift_allocBox();
}

uint64_t swift_allocError()
{
  return _swift_allocError();
}

uint64_t swift_allocObject()
{
  return _swift_allocObject();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return _swift_allocateGenericClassMetadata();
}

uint64_t swift_arrayDestroy()
{
  return _swift_arrayDestroy();
}

uint64_t swift_arrayInitWithCopy()
{
  return _swift_arrayInitWithCopy();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return _swift_arrayInitWithTakeBackToFront();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return _swift_arrayInitWithTakeFrontToBack();
}

uint64_t swift_asyncLet_begin()
{
  return _swift_asyncLet_begin();
}

uint64_t swift_beginAccess()
{
  return _swift_beginAccess();
}

uint64_t swift_bridgeObjectRelease()
{
  return _swift_bridgeObjectRelease();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return _swift_bridgeObjectRelease_n();
}

uint64_t swift_bridgeObjectRetain()
{
  return _swift_bridgeObjectRetain();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return _swift_bridgeObjectRetain_n();
}

uint64_t swift_dynamicCast()
{
  return _swift_dynamicCast();
}

uint64_t swift_dynamicCastObjCClass()
{
  return _swift_dynamicCastObjCClass();
}

uint64_t swift_endAccess()
{
  return _swift_endAccess();
}

uint64_t swift_errorRelease()
{
  return _swift_errorRelease();
}

uint64_t swift_errorRetain()
{
  return _swift_errorRetain();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return _swift_getEnumCaseMultiPayload();
}

uint64_t swift_getErrorValue()
{
  return _swift_getErrorValue();
}

uint64_t swift_getForeignTypeMetadata()
{
  return _swift_getForeignTypeMetadata();
}

uint64_t swift_getGenericMetadata()
{
  return _swift_getGenericMetadata();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return _swift_getObjCClassFromMetadata();
}

uint64_t swift_getObjCClassMetadata()
{
  return _swift_getObjCClassMetadata();
}

uint64_t swift_getObjectType()
{
  return _swift_getObjectType();
}

uint64_t swift_getSingletonMetadata()
{
  return _swift_getSingletonMetadata();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return _swift_getTypeByMangledNameInContext2();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return _swift_getTypeByMangledNameInContextInMetadataState2();
}

uint64_t swift_getWitnessTable()
{
  return _swift_getWitnessTable();
}

uint64_t swift_initClassMetadata2()
{
  return _swift_initClassMetadata2();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return _swift_initEnumMetadataMultiPayload();
}

uint64_t swift_initEnumMetadataSingleCase()
{
  return _swift_initEnumMetadataSingleCase();
}

uint64_t swift_initStackObject()
{
  return _swift_initStackObject();
}

uint64_t swift_initStructMetadata()
{
  return _swift_initStructMetadata();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return _swift_isUniquelyReferenced_nonNull_bridgeObject();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return _swift_isUniquelyReferenced_nonNull_native();
}

uint64_t swift_makeBoxUnique()
{
  return _swift_makeBoxUnique();
}

uint64_t swift_once()
{
  return _swift_once();
}

uint64_t swift_release()
{
  return _swift_release();
}

uint64_t swift_release_n()
{
  return _swift_release_n();
}

uint64_t swift_retain()
{
  return _swift_retain();
}

uint64_t swift_retain_n()
{
  return _swift_retain_n();
}

uint64_t swift_setDeallocating()
{
  return _swift_setDeallocating();
}

uint64_t swift_slowAlloc()
{
  return _swift_slowAlloc();
}

uint64_t swift_slowDealloc()
{
  return _swift_slowDealloc();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return _swift_storeEnumTagMultiPayload();
}

uint64_t swift_task_alloc()
{
  return _swift_task_alloc();
}

uint64_t swift_task_create()
{
  return _swift_task_create();
}

uint64_t swift_task_dealloc()
{
  return _swift_task_dealloc();
}

uint64_t swift_unknownObjectRelease()
{
  return _swift_unknownObjectRelease();
}

uint64_t swift_unknownObjectRelease_n()
{
  return _swift_unknownObjectRelease_n();
}

uint64_t swift_unknownObjectRetain()
{
  return _swift_unknownObjectRetain();
}

uint64_t swift_unknownObjectRetain_n()
{
  return _swift_unknownObjectRetain_n();
}

uint64_t swift_updateClassMetadata2()
{
  return _swift_updateClassMetadata2();
}

uint64_t swift_willThrow()
{
  return _swift_willThrow();
}