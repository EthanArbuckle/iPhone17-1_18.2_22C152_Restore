unint64_t lazy protocol witness table accessor for type ExtensionError and conformance ExtensionError()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ExtensionError and conformance ExtensionError;
  if (!lazy protocol witness table cache variable for type ExtensionError and conformance ExtensionError)
  {
    result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ExtensionError and conformance ExtensionError);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ExtensionError and conformance ExtensionError;
  if (!lazy protocol witness table cache variable for type ExtensionError and conformance ExtensionError)
  {
    result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ExtensionError and conformance ExtensionError);
  }
  return result;
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance ExtensionError(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance ExtensionError()
{
  Swift::UInt v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void protocol witness for Hashable.hash(into:) in conformance ExtensionError()
{
  Hasher._combine(_:)(*v0);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance ExtensionError()
{
  Swift::UInt v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

uint64_t protocol witness for Error._domain.getter in conformance ExtensionError()
{
  return Error._domain.getter();
}

uint64_t protocol witness for Error._code.getter in conformance ExtensionError()
{
  return Error._code.getter();
}

uint64_t protocol witness for Error._userInfo.getter in conformance ExtensionError()
{
  return Error._userInfo.getter();
}

uint64_t protocol witness for Error._getEmbeddedNSError() in conformance ExtensionError()
{
  return Error._getEmbeddedNSError()();
}

unint64_t ExtensionError.description.getter(char a1)
{
  unint64_t result = 0xD000000000000024;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000018;
      break;
    case 2:
      unint64_t result = 0xD000000000000025;
      break;
    case 3:
    case 4:
      unint64_t result = 0xD00000000000002ALL;
      break;
    case 5:
      unint64_t result = 0xD00000000000001FLL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t protocol witness for CustomStringConvertible.description.getter in conformance ExtensionError()
{
  return ExtensionError.description.getter(*v0);
}

unint64_t ExtensionError.errorDescription.getter(char a1)
{
  unint64_t result = 0xD000000000000024;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000018;
      break;
    case 2:
      unint64_t result = 0xD000000000000025;
      break;
    case 3:
    case 4:
      unint64_t result = 0xD00000000000002ALL;
      break;
    case 5:
      unint64_t result = 0xD00000000000001FLL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t protocol witness for LocalizedError.errorDescription.getter in conformance ExtensionError()
{
  return ExtensionError.errorDescription.getter(*v0);
}

uint64_t protocol witness for LocalizedError.failureReason.getter in conformance ExtensionError()
{
  return LocalizedError.failureReason.getter();
}

uint64_t protocol witness for LocalizedError.recoverySuggestion.getter in conformance ExtensionError()
{
  return LocalizedError.recoverySuggestion.getter();
}

uint64_t protocol witness for LocalizedError.helpAnchor.getter in conformance ExtensionError()
{
  return LocalizedError.helpAnchor.getter();
}

void protocol witness for SetAlgebra.init() in conformance NSJSONWritingOptions(void *a1@<X8>)
{
  *a1 = 0;
}

void *protocol witness for OptionSet.init(rawValue:) in conformance NSJSONReadingOptions@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for ExtensionError(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ExtensionError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100006770);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

uint64_t getEnumTag for ExtensionError(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *destructiveInjectEnumTag for ExtensionError(unsigned char *result, char a2)
{
  *unint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for ExtensionError()
{
  return &type metadata for ExtensionError;
}

uint64_t one-time initialization function for decoder(uint64_t a1)
{
  return one-time initialization function for decoder(a1, (void (*)(void))&type metadata accessor for JSONDecoder, (uint64_t (*)(void))&JSONDecoder.init(), &static MusicEngagementExtension.decoder);
}

uint64_t one-time initialization function for encoder(uint64_t a1)
{
  return one-time initialization function for decoder(a1, (void (*)(void))&type metadata accessor for JSONEncoder, (uint64_t (*)(void))&JSONEncoder.init(), &static MusicEngagementExtension.encoder);
}

uint64_t one-time initialization function for decoder(uint64_t a1, void (*a2)(void), uint64_t (*a3)(void), uint64_t *a4)
{
  a2(0);
  swift_allocObject();
  uint64_t result = a3();
  *a4 = result;
  return result;
}

void one-time initialization function for groupDefaults()
{
  UnifiedMessages.groupDefaultsSuiteName.unsafeMutableAddressor();
  id v0 = objc_allocWithZone((Class)NSUserDefaults);
  swift_bridgeObjectRetain();
  NSString v1 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v2 = [v0 initWithSuiteName:v1];

  if (v2) {
    static MusicEngagementExtension.groupDefaults = (uint64_t)v2;
  }
  else {
    __break(1u);
  }
}

uint64_t static MusicEngagementExtension.performRequest(with:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskPriority?);
  __chkstk_darwin(v8 - 8);
  v10 = (char *)v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
  outlined init with copy of Any(a1, (uint64_t)v15);
  type metadata accessor for MainActor();
  swift_retain();
  uint64_t v12 = static MainActor.shared.getter();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v12;
  *(void *)(v13 + 24) = &protocol witness table for MainActor;
  outlined init with take of Any(v15, (_OWORD *)(v13 + 32));
  *(void *)(v13 + 64) = a2;
  *(void *)(v13 + 72) = a3;
  *(void *)(v13 + 80) = v4;
  *(void *)(v13 + 88) = v4;
  _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5((uint64_t)v10, (uint64_t)&async function pointer to partial apply for closure #1 in static MusicEngagementExtension.performRequest(with:completion:), v13);
  return swift_release();
}

uint64_t closure #1 in static MusicEngagementExtension.performRequest(with:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[37] = a6;
  v8[38] = a8;
  v8[35] = a4;
  v8[36] = a5;
  type metadata accessor for String.Encoding();
  v8[39] = swift_task_alloc();
  type metadata accessor for MainActor();
  v8[40] = static MainActor.shared.getter();
  uint64_t v10 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(closure #1 in static MusicEngagementExtension.performRequest(with:completion:), v10, v9);
}

uint64_t closure #1 in static MusicEngagementExtension.performRequest(with:completion:)()
{
  uint64_t v50 = v0;
  NSString v1 = *(void **)(v0 + 280);
  swift_release();
  id v2 = self;
  __swift_project_boxed_opaque_existential_0Tm(v1, v1[3]);
  unsigned int v3 = [v2 isValidJSONObject:_bridgeAnythingToObjectiveC<A>(_:)()];
  swift_unknownObjectRelease();
  if (v3)
  {
    __swift_project_boxed_opaque_existential_0Tm(*(void **)(v0 + 280), v1[3]);
    uint64_t v4 = _bridgeAnythingToObjectiveC<A>(_:)();
    *(void *)(v0 + 256) = 0;
    id v5 = [v2 dataWithJSONObject:v4 options:0 error:v0 + 256];
    swift_unknownObjectRelease();
    id v6 = *(id *)(v0 + 256);
    if (v5)
    {
      uint64_t v7 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v9 = v8;

      static String.Encoding.utf8.getter();
      uint64_t result = String.init(data:encoding:)();
      if (!v11)
      {
        __break(1u);
        return result;
      }
      uint64_t v12 = result;
      unint64_t v13 = v11;
      if (one-time initialization token for engagementExtension != -1) {
        swift_once();
      }
      uint64_t v14 = type metadata accessor for Logger();
      __swift_project_value_buffer(v14, (uint64_t)static Logger.engagementExtension);
      swift_bridgeObjectRetain();
      v15 = Logger.logObject.getter();
      os_log_type_t v16 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v15, v16))
      {
        uint64_t v47 = v7;
        v17 = (uint8_t *)swift_slowAlloc();
        uint64_t v49 = swift_slowAlloc();
        *(_DWORD *)v17 = 136315138;
        swift_bridgeObjectRetain();
        *(void *)(v0 + 272) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v12, v13, &v49);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v15, v16, "􀕹 Received request: %s", v17, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        uint64_t v7 = v47;
        swift_slowDealloc();
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

      if (one-time initialization token for decoder != -1) {
        swift_once();
      }
      lazy protocol witness table accessor for type ODJRequest and conformance ODJRequest();
      dispatch thunk of JSONDecoder.decode<A>(_:from:)();
      uint64_t v30 = *(void *)(v0 + 224);
      uint64_t v31 = *(void *)(v0 + 232);
      uint64_t v32 = *(void *)(v0 + 240);
      static MusicEngagementExtension.parseRequest(request:completion:)(v30, v32, v0 + 192);
      uint64_t v43 = v7;
      v44 = *(void (**)(uint64_t, void))(v0 + 288);
      outlined consume of JSONPayloadRequest?(v30, v31, v32);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(String, Any)>);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_100493400;
      strcpy((char *)(inited + 32), "json-payload");
      *(unsigned char *)(inited + 45) = 0;
      *(_WORD *)(inited + 46) = -5120;
      outlined init with copy of Any(v0 + 192, inited + 48);
      unint64_t v46 = specialized Dictionary.init(dictionaryLiteral:)(inited);
      *(void *)(v0 + 152) = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String : Any]);
      *(void *)(v0 + 128) = v46;
      v44(v0 + 128, 0);
      outlined consume of Data._Representation(v43, v9);
      __swift_destroy_boxed_opaque_existential_0Tm(v0 + 192);
      uint64_t v28 = v0 + 128;
    }
    else
    {
      v29 = v6;
      _convertNSErrorToError(_:)();

      swift_willThrow();
      if (one-time initialization token for engagementExtension != -1) {
        swift_once();
      }
      v33 = (_OWORD *)(v0 + 160);
      uint64_t v34 = type metadata accessor for Logger();
      __swift_project_value_buffer(v34, (uint64_t)static Logger.engagementExtension);
      swift_errorRetain();
      swift_errorRetain();
      v35 = Logger.logObject.getter();
      os_log_type_t v36 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v35, v36))
      {
        v37 = (uint8_t *)swift_slowAlloc();
        v48 = (void *)swift_slowAlloc();
        *(_DWORD *)v37 = 138412290;
        swift_errorRetain();
        uint64_t v38 = _swift_stdlib_bridgeErrorToNSError();
        *(void *)(v0 + 248) = v38;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        void *v48 = v38;
        v33 = (_OWORD *)(v0 + 160);
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v35, v36, "􀕹 Failed to import JSON payload: %@", v37, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        swift_errorRelease();
        swift_errorRelease();
      }
      v39 = *(void (**)(_OWORD *, uint64_t))(v0 + 288);

      lazy protocol witness table accessor for type ExtensionError and conformance ExtensionError();
      _OWORD *v33 = 0u;
      v33[1] = 0u;
      uint64_t v40 = swift_allocError();
      unsigned char *v41 = 0;
      v39(v33, v40);
      swift_errorRelease();
      swift_errorRelease();
      uint64_t v28 = (uint64_t)v33;
    }
  }
  else
  {
    if (one-time initialization token for engagementExtension != -1) {
      swift_once();
    }
    uint64_t v18 = type metadata accessor for Logger();
    __swift_project_value_buffer(v18, (uint64_t)static Logger.engagementExtension);
    v19 = Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc();
      v22 = (void *)swift_slowAlloc();
      *(_DWORD *)v21 = 138412290;
      lazy protocol witness table accessor for type ExtensionError and conformance ExtensionError();
      swift_allocError();
      unsigned char *v23 = 2;
      uint64_t v24 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 264) = v24;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v22 = v24;
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "􀕹 %@", v21, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    v25 = *(void (**)(uint64_t, uint64_t))(v0 + 288);
    lazy protocol witness table accessor for type ExtensionError and conformance ExtensionError();
    *(_OWORD *)(v0 + 96) = 0u;
    *(_OWORD *)(v0 + 112) = 0u;
    uint64_t v26 = swift_allocError();
    unsigned char *v27 = 2;
    v25(v0 + 96, v26);
    swift_errorRelease();
    uint64_t v28 = v0 + 96;
  }
  outlined destroy of TaskPriority?(v28, &demangling cache variable for type metadata for Any?);
  swift_task_dealloc();
  v42 = *(uint64_t (**)(void))(v0 + 8);
  return v42();
}

uint64_t static MusicEngagementExtension.parseRequest(request:completion:)@<X0>(char a1@<W0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v8 = type metadata accessor for Logger();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  unint64_t v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((unint64_t)(a2 - 1) < 2)
  {
    if (one-time initialization token for engagementExtension != -1) {
      swift_once();
    }
    __swift_project_value_buffer(v8, (uint64_t)static Logger.engagementExtension);
    uint64_t v12 = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v12, v13))
    {

      char v17 = 4;
LABEL_19:
      lazy protocol witness table accessor for type ExtensionError and conformance ExtensionError();
      swift_allocError();
      char *v35 = v17;
      return swift_willThrow();
    }
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    v15 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v14 = 138412290;
    lazy protocol witness table accessor for type ExtensionError and conformance ExtensionError();
    swift_allocError();
    char v17 = 4;
LABEL_17:
    *os_log_type_t v16 = v17;
    uint64_t v34 = _swift_stdlib_bridgeErrorToNSError();
    v39[0] = v34;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v15 = v34;
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "􀕹 %@", v14, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    goto LABEL_19;
  }
  if (a1)
  {
    if (one-time initialization token for engagementExtension != -1) {
      swift_once();
    }
    __swift_project_value_buffer(v8, (uint64_t)static Logger.engagementExtension);
    uint64_t v12 = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v12, v13))
    {

      char v17 = 3;
      goto LABEL_19;
    }
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    v15 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v14 = 138412290;
    lazy protocol witness table accessor for type ExtensionError and conformance ExtensionError();
    swift_allocError();
    char v17 = 3;
    goto LABEL_17;
  }
  if (one-time initialization token for engagementExtension != -1) {
    swift_once();
  }
  uint64_t v37 = a3;
  uint64_t v38 = v3;
  uint64_t v18 = __swift_project_value_buffer(v8, (uint64_t)static Logger.engagementExtension);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v18, v8);
  v19 = Logger.logObject.getter();
  os_log_type_t v20 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = (uint8_t *)swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    uint64_t v36 = v4;
    v39[0] = v22;
    *(_DWORD *)v21 = 136315138;
    v39[6] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(0x6573556863746566, 0xED00006F666E4972, v39);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "􀕹 Command: %s", v21, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  id v23 = specialized static MusicEngagementExtension.fetchUserInfo()();
  uint64_t v25 = v24;
  char v27 = v26;
  uint64_t v29 = v28 & 1;
  __int16 v31 = v30 & 0x101;
  v39[3] = (uint64_t)&type metadata for JSONPayloadResponse;
  v39[4] = lazy protocol witness table accessor for type JSONPayloadResponse and conformance JSONPayloadResponse();
  uint64_t v32 = swift_allocObject();
  v39[0] = v32;
  *(void *)(v32 + 16) = v23;
  *(void *)(v32 + 24) = v29;
  *(void *)(v32 + 32) = v25;
  *(unsigned char *)(v32 + 42) = v27;
  *(_WORD *)(v32 + 40) = v31;
  static MusicEngagementExtension.makeJSON(object:)(v39, v37);
  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v39);
}

unint64_t specialized Dictionary.init(dictionaryLiteral:)(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _DictionaryStorage<String, Any>);
  uint64_t v2 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    outlined init with copy of (String, Any)(v6, (uint64_t)&v15, &demangling cache variable for type metadata for (String, Any));
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = specialized __RawDictionaryStorage.find<A>(_:)(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    unint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    *unint64_t v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)outlined init with take of Any(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

{
  void *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  void *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _DictionaryStorage<String, String>);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    uint64_t v8 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = specialized __RawDictionaryStorage.find<A>(_:)(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    unint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    *unint64_t v11 = v5;
    v11[1] = v6;
    uint64_t v12 = (void *)(v2[7] + 16 * result);
    *uint64_t v12 = v8;
    v12[1] = v7;
    BOOL v13 = v2[2];
    uint64_t v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

{
  return specialized Dictionary.init(dictionaryLiteral:)(a1, &demangling cache variable for type metadata for _DictionaryStorage<UIApplicationOpenExternalURLOptionsKey, Any>, &demangling cache variable for type metadata for (UIApplicationOpenExternalURLOptionsKey, Any), (uint64_t (*)(uint64_t))specialized __RawDictionaryStorage.find<A>(_:));
}

{
  void *v2;
  uint64_t v3;
  void **v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _DictionaryStorage<String, MPPropertySet>);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void **)(a1 + 48);
  while (1)
  {
    uint64_t v5 = (uint64_t)*(v4 - 2);
    uint64_t v6 = (uint64_t)*(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    uint64_t v8 = v7;
    unint64_t result = specialized __RawDictionaryStorage.find<A>(_:)(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    unint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    *unint64_t v11 = v5;
    v11[1] = v6;
    *(void *)(v2[7] + 8 * result) = v8;
    uint64_t v12 = v2[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v2[2] = v14;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

{
  return specialized Dictionary.init(dictionaryLiteral:)(a1, (uint64_t (*)(uint64_t, uint64_t))specialized __RawDictionaryStorage.find<A>(_:));
}

{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  long long v10;
  long long v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  _OWORD v15[2];
  uint64_t v16;
  long long v17;

  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _DictionaryStorage<AnyHashable, Any>);
  uint64_t v2 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    outlined init with copy of (String, Any)(v6, (uint64_t)v15, &demangling cache variable for type metadata for (AnyHashable, Any));
    unint64_t result = specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)v15);
    if (v8) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v9 = v3[6] + 40 * result;
    char v10 = v15[0];
    unint64_t v11 = v15[1];
    *(void *)(v9 + 32) = v16;
    *(_OWORD *)uint64_t v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    unint64_t result = (unint64_t)outlined init with take of Any(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

{
  void *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _DictionaryStorage<String, [String : Any]>);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = specialized __RawDictionaryStorage.find<A>(_:)(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    char v10 = (uint64_t *)(v2[6] + 16 * result);
    char *v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    unint64_t v11 = v2[2];
    uint64_t v12 = __OFADD__(v11, 1);
    BOOL v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

{
  void *v2;
  uint64_t v3;
  unsigned char *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _DictionaryStorage<String, Bool>);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (unsigned char *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *((void *)v4 - 2);
    uint64_t v6 = *((void *)v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = specialized __RawDictionaryStorage.find<A>(_:)(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    char v10 = (uint64_t *)(v2[6] + 16 * result);
    char *v10 = v5;
    v10[1] = v6;
    *(unsigned char *)(v2[7] + result) = v7;
    unint64_t v11 = v2[2];
    uint64_t v12 = __OFADD__(v11, 1);
    BOOL v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 24;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  void v24[2];

  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (UUID, PushNotificationObserver.RegisteredHandler));
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _DictionaryStorage<UUID, PushNotificationObserver.RegisteredHandler>);
  uint64_t v6 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = (uint64_t)&v5[*(int *)(v2 + 48)];
  char v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v24[1] = a1;
  uint64_t v12 = a1 + v11;
  BOOL v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    outlined init with copy of (String, Any)(v12, (uint64_t)v5, &demangling cache variable for type metadata for (UUID, PushNotificationObserver.RegisteredHandler));
    unint64_t result = specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)v5);
    if (v15) {
      break;
    }
    uint64_t v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    long long v17 = v7[6];
    uint64_t v18 = type metadata accessor for UUID();
    (*(void (**)(unint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, v5, v18);
    v19 = v7[7];
    os_log_type_t v20 = type metadata accessor for PushNotificationObserver.RegisteredHandler();
    unint64_t result = outlined init with take of PushNotificationObserver.RegisteredHandler(v9, v19 + *(void *)(*(void *)(v20 - 8) + 72) * v16);
    v21 = v7[2];
    uint64_t v22 = __OFADD__(v21, 1);
    id v23 = v21 + 1;
    if (v22) {
      goto LABEL_11;
    }
    v7[2] = v23;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

{
  void *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  id v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _DictionaryStorage<MPCPlayerPath, OS_dispatch_source_timer>);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *v4;
    uint64_t v6 = (id)*(v4 - 1);
    swift_unknownObjectRetain();
    unint64_t result = specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)v6);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = 8 * result;
    *(void *)(v2[6] + v9) = v6;
    *(void *)(v2[7] + v9) = v5;
    char v10 = v2[2];
    unint64_t v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v2[2] = v12;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t result;
  char v17;
  unint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  void v25[2];

  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (String, SocialProfile));
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (void *)((char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _DictionaryStorage<String, SocialProfile>);
  uint64_t v6 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = (char *)v5 + *(int *)(v2 + 48);
  char v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v25[1] = a1;
  uint64_t v12 = a1 + v11;
  BOOL v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    outlined init with copy of (String, Any)(v12, (uint64_t)v5, &demangling cache variable for type metadata for (String, SocialProfile));
    uint64_t v14 = *v5;
    uint64_t v15 = v5[1];
    unint64_t result = specialized __RawDictionaryStorage.find<A>(_:)(*v5, v15);
    if (v17) {
      break;
    }
    uint64_t v18 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v19 = (uint64_t *)(v7[6] + 16 * result);
    NSObject *v19 = v14;
    v19[1] = v15;
    os_log_type_t v20 = v7[7];
    v21 = type metadata accessor for SocialProfile();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v20 + *(void *)(*(void *)(v21 - 8) + 72) * v18, v9, v21);
    uint64_t v22 = v7[2];
    id v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (v23) {
      goto LABEL_11;
    }
    v7[2] = v24;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

{
  return specialized Dictionary.init(dictionaryLiteral:)(a1, &demangling cache variable for type metadata for _DictionaryStorage<UIFontDescriptorAttributeName, Any>, &demangling cache variable for type metadata for (UIFontDescriptorAttributeName, Any), (uint64_t (*)(uint64_t))specialized __RawDictionaryStorage.find<A>(_:));
}

{
  return specialized Dictionary.init(dictionaryLiteral:)(a1, &demangling cache variable for type metadata for _DictionaryStorage<NSAttributedStringKey, Any>, &demangling cache variable for type metadata for (NSAttributedStringKey, Any), (uint64_t (*)(uint64_t))specialized __RawDictionaryStorage.find<A>(_:));
}

{
  uint64_t v1;
  void *v3;
  void *i;
  unsigned __int8 v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  NSString v1 = *(void *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _DictionaryStorage<DeviceCapabilities.DiskUsageCategory, Int64>);
    uint64_t v3 = (void *)static _DictionaryStorage.allocate(capacity:)();
    for (i = (void *)(a1 + 40); ; i += 2)
    {
      uint64_t v5 = *((unsigned char *)i - 8);
      uint64_t v6 = *i;
      unint64_t result = specialized __RawDictionaryStorage.find<A>(_:)(v5);
      if (v8) {
        break;
      }
      *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(unsigned char *)(v3[6] + result) = v5;
      *(void *)(v3[7] + 8 * result) = v6;
      uint64_t v9 = v3[2];
      char v10 = __OFADD__(v9, 1);
      unint64_t v11 = v9 + 1;
      if (v10) {
        goto LABEL_10;
      }
      v3[2] = v11;
      if (!--v1) {
        return (unint64_t)v3;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return (unint64_t)_swiftEmptyDictionarySingleton;
  }
  return result;
}

{
  uint64_t v1;
  void *v3;
  unsigned __int8 v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  void *v9;
  void *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  char v16;

  NSString v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (unint64_t)_swiftEmptyDictionarySingleton;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _DictionaryStorage<DeviceCapabilities.DiskUsageCategory, String>);
  uint64_t v3 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v4 = *(unsigned char *)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 40);
  uint64_t v5 = *(void *)(a1 + 48);
  unint64_t result = specialized __RawDictionaryStorage.find<A>(_:)(v4);
  if (v8)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  uint64_t v9 = (void *)(a1 + 72);
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v3[6] + result) = v4;
    char v10 = (void *)(v3[7] + 16 * result);
    char *v10 = v6;
    v10[1] = v5;
    unint64_t v11 = v3[2];
    uint64_t v12 = __OFADD__(v11, 1);
    BOOL v13 = v11 + 1;
    if (v12) {
      break;
    }
    v3[2] = v13;
    if (!--v1) {
      goto LABEL_8;
    }
    uint64_t v14 = v9 + 3;
    uint64_t v4 = *((unsigned char *)v9 - 16);
    uint64_t v6 = *(v9 - 1);
    uint64_t v15 = *v9;
    swift_bridgeObjectRetain();
    unint64_t result = specialized __RawDictionaryStorage.find<A>(_:)(v4);
    uint64_t v9 = v14;
    uint64_t v5 = v15;
    if (v16) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

{
  void *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _DictionaryStorage<String, Double>);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = _ss22__RawDictionaryStorageC4findys10_HashTableV6BucketV6bucket_Sb5foundtxSHRzlFSS_Tg5_0(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    char v10 = (uint64_t *)(v2[6] + 16 * result);
    char *v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    unint64_t v11 = v2[2];
    uint64_t v12 = __OFADD__(v11, 1);
    BOOL v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

{
  void *v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t result;
  char v12;
  unint64_t *v13;
  unint64_t *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _DictionaryStorage<Substring, Character>);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (unint64_t *)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *(v4 - 1);
    uint64_t v6 = *v4;
    uint64_t v7 = v4[1];
    uint64_t v8 = v4[2];
    uint64_t v9 = v4[3];
    char v10 = v4[4];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = specialized __RawDictionaryStorage.find<A>(_:)(v5, v6, v7, v8);
    if (v12) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    BOOL v13 = (unint64_t *)(v2[6] + 32 * result);
    *BOOL v13 = v5;
    v13[1] = v6;
    v13[2] = v7;
    v13[3] = v8;
    uint64_t v14 = (unint64_t *)(v2[7] + 16 * result);
    *uint64_t v14 = v9;
    v14[1] = v10;
    uint64_t v15 = v2[2];
    uint64_t v16 = __OFADD__(v15, 1);
    long long v17 = v15 + 1;
    if (v16) {
      goto LABEL_11;
    }
    v4 += 6;
    v2[2] = v17;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

{
  void *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _DictionaryStorage<String, Int>);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = _ss22__RawDictionaryStorageC4findys10_HashTableV6BucketV6bucket_Sb5foundtxSHRzlFSS_Tg5_0(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    char v10 = (uint64_t *)(v2[6] + 16 * result);
    char *v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    unint64_t v11 = v2[2];
    uint64_t v12 = __OFADD__(v11, 1);
    BOOL v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 3;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

{
  void *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  unint64_t result;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _DictionaryStorage<NSUserDefaults._Observer.SuiteAssociation, [String : [NSUserDefaults._Observer.HandlerAssociation]]>);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    uint64_t v8 = (void *)*(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    uint64_t v9 = v8;
    swift_bridgeObjectRetain();
    unint64_t result = specialized __RawDictionaryStorage.find<A>(_:)(v5, v6, (uint64_t)v9);
    if (v11) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v12 = (uint64_t *)(v2[6] + 24 * result);
    *uint64_t v12 = v5;
    v12[1] = v6;
    v12[2] = (uint64_t)v9;
    *(void *)(v2[7] + 8 * result) = v7;
    BOOL v13 = v2[2];
    uint64_t v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v2[2] = v15;
    v4 += 4;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

{
  void *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _DictionaryStorage<String, [NSUserDefaults._Observer.HandlerAssociation]>);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = _ss22__RawDictionaryStorageC4findys10_HashTableV6BucketV6bucket_Sb5foundtxSHRzlFSS_Tg5_0(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    char v10 = (uint64_t *)(v2[6] + 16 * result);
    char *v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    unint64_t v11 = v2[2];
    uint64_t v12 = __OFADD__(v11, 1);
    BOOL v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  unint64_t result;
  char v8;
  unsigned char *v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  unsigned char *v14;
  uint64_t v15;
  char v16;

  NSString v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (unint64_t)_swiftEmptyDictionarySingleton;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _DictionaryStorage<Character, UInt8>);
  uint64_t v3 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v5 = *(void *)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 40);
  uint64_t v6 = *(unsigned char *)(a1 + 48);
  unint64_t result = specialized __RawDictionaryStorage.find<A>(_:)(v5, v4);
  if (v8)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  uint64_t v9 = (unsigned char *)(a1 + 72);
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    char v10 = (uint64_t *)(v3[6] + 16 * result);
    char *v10 = v5;
    v10[1] = v4;
    *(unsigned char *)(v3[7] + result) = v6;
    unint64_t v11 = v3[2];
    uint64_t v12 = __OFADD__(v11, 1);
    BOOL v13 = v11 + 1;
    if (v12) {
      break;
    }
    v3[2] = v13;
    if (!--v1) {
      goto LABEL_8;
    }
    uint64_t v14 = v9 + 24;
    uint64_t v5 = *((void *)v9 - 2);
    uint64_t v15 = *((void *)v9 - 1);
    uint64_t v6 = *v9;
    swift_bridgeObjectRetain();
    unint64_t result = specialized __RawDictionaryStorage.find<A>(_:)(v5, v15);
    uint64_t v9 = v14;
    uint64_t v4 = v15;
    if (v16) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

{
  uint64_t v1;
  void *v3;
  uint64_t *i;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  NSString v1 = *(void *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _DictionaryStorage<Int, Int>);
    uint64_t v3 = (void *)static _DictionaryStorage.allocate(capacity:)();
    for (i = (uint64_t *)(a1 + 40); ; i += 2)
    {
      uint64_t v5 = *(i - 1);
      uint64_t v6 = *i;
      unint64_t result = specialized __RawDictionaryStorage.find<A>(_:)(v5);
      if (v8) {
        break;
      }
      *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      uint64_t v9 = 8 * result;
      *(void *)(v3[6] + v9) = v5;
      *(void *)(v3[7] + v9) = v6;
      char v10 = v3[2];
      unint64_t v11 = __OFADD__(v10, 1);
      uint64_t v12 = v10 + 1;
      if (v11) {
        goto LABEL_10;
      }
      v3[2] = v12;
      if (!--v1) {
        return (unint64_t)v3;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return (unint64_t)_swiftEmptyDictionarySingleton;
  }
  return result;
}

{
  uint64_t v1;
  void *v3;
  uint64_t *i;
  Swift::UInt v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  NSString v1 = *(void *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _DictionaryStorage<NSLayoutAttribute, CGFloat>);
    uint64_t v3 = (void *)static _DictionaryStorage.allocate(capacity:)();
    for (i = (uint64_t *)(a1 + 40); ; i += 2)
    {
      uint64_t v5 = *(i - 1);
      uint64_t v6 = *i;
      unint64_t result = specialized __RawDictionaryStorage.find<A>(_:)(v5);
      if (v8) {
        break;
      }
      *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      uint64_t v9 = 8 * result;
      *(void *)(v3[6] + v9) = v5;
      *(void *)(v3[7] + v9) = v6;
      char v10 = v3[2];
      unint64_t v11 = __OFADD__(v10, 1);
      uint64_t v12 = v10 + 1;
      if (v11) {
        goto LABEL_10;
      }
      v3[2] = v12;
      if (!--v1) {
        return (unint64_t)v3;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return (unint64_t)_swiftEmptyDictionarySingleton;
  }
  return result;
}

{
  void *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _DictionaryStorage<String, [String : Lyrics.LineTranslationMetadata]>);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = specialized __RawDictionaryStorage.find<A>(_:)(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    char v10 = (uint64_t *)(v2[6] + 16 * result);
    char *v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    unint64_t v11 = v2[2];
    uint64_t v12 = __OFADD__(v11, 1);
    BOOL v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

{
  return specialized Dictionary.init(dictionaryLiteral:)(a1, &demangling cache variable for type metadata for _DictionaryStorage<String, NSOperation>);
}

{
  void *v2;
  uint64_t v3;
  id *v4;
  char v5;
  id v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _DictionaryStorage<BouncyBarsAsset.BarAnimationKey, CAKeyframeAnimation>);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (id *)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *((unsigned char *)v4 - 8);
    uint64_t v6 = *v4;
    unint64_t result = specialized __RawDictionaryStorage.find<A>(_:)(v5);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v2[6] + result) = v5;
    *(void *)(v2[7] + 8 * result) = v6;
    uint64_t v9 = v2[2];
    char v10 = __OFADD__(v9, 1);
    unint64_t v11 = v9 + 1;
    if (v10) {
      goto LABEL_11;
    }
    v2[2] = v11;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TaskPriority();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  outlined destroy of TaskPriority?(a1, &demangling cache variable for type metadata for TaskPriority?);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    dispatch thunk of Actor.unownedExecutor.getter();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

void thunk for @escaping @callee_unowned @convention(block) (@unowned Swift.AnyObject?, @unowned NSError?) -> ()(uint64_t a1, void *a2, uint64_t a3)
{
  outlined init with copy of (String, Any)(a1, (uint64_t)v11, &demangling cache variable for type metadata for Any?);
  uint64_t v5 = v12;
  if (!v12)
  {
    uint64_t v10 = 0;
    if (!a2) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  uint64_t v6 = __swift_project_boxed_opaque_existential_0Tm(v11, v12);
  uint64_t v7 = *(void *)(v5 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v7 + 16))(v9);
  uint64_t v10 = _bridgeAnythingToObjectiveC<A>(_:)();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v5);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v11);
  if (a2) {
LABEL_3:
  }
    a2 = (void *)_convertErrorToNSError(_:)();
LABEL_4:
  (*(void (**)(uint64_t, uint64_t, void *))(a3 + 16))(a3, v10, a2);
  swift_unknownObjectRelease();
}

void static MusicEngagementExtension.makeJSON(object:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  __swift_project_boxed_opaque_existential_0Tm(a1, a1[3]);
  if (one-time initialization token for encoder != -1) {
    swift_once();
  }
  uint64_t v4 = dispatch thunk of JSONEncoder.encode<A>(_:)();
  if (v2) {
    goto LABEL_4;
  }
  uint64_t v13 = v4;
  unint64_t v14 = v5;
  uint64_t v15 = self;
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  v28[0] = 0;
  id v17 = [v15 JSONObjectWithData:isa options:0 error:v28];

  id v18 = v28[0];
  if (!v17)
  {
    uint64_t v25 = v18;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    outlined consume of Data._Representation(v13, v14);
LABEL_4:
    if (one-time initialization token for engagementExtension != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    __swift_project_value_buffer(v6, (uint64_t)static Logger.engagementExtension);
    uint64_t v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      uint64_t v10 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 138412290;
      lazy protocol witness table accessor for type ExtensionError and conformance ExtensionError();
      swift_allocError();
      *unint64_t v11 = 1;
      uint64_t v12 = (void *)_swift_stdlib_bridgeErrorToNSError();
      v28[0] = v12;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v10 = v12;
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "􀕹 %@", v9, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    swift_willThrow();
    return;
  }
  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  if (one-time initialization token for engagementExtension != -1) {
    swift_once();
  }
  uint64_t v19 = type metadata accessor for Logger();
  __swift_project_value_buffer(v19, (uint64_t)static Logger.engagementExtension);
  outlined init with copy of Any(a2, (uint64_t)v28);
  os_log_type_t v20 = Logger.logObject.getter();
  os_log_type_t v21 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = (uint8_t *)swift_slowAlloc();
    uint64_t v27 = swift_slowAlloc();
    *(_DWORD *)uint64_t v22 = 136315138;
    outlined init with copy of Any((uint64_t)v28, (uint64_t)v26);
    uint64_t v23 = String.init<A>(describing:)();
    v26[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v23, v24, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v28);
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "􀕹 Response: %s", v22, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v28);
  }
  outlined consume of Data._Representation(v13, v14);
}

id DeviceCapabilitiesObjC.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t one-time initialization function for engagementExtension()
{
  uint64_t v0 = type metadata accessor for Logger();
  __swift_allocate_value_buffer(v0, static Logger.engagementExtension);
  __swift_project_value_buffer(v0, (uint64_t)static Logger.engagementExtension);
  return static Logger.music(_:)();
}

int main(int argc, const char **argv, const char **envp)
{
  if (one-time initialization token for engagementExtension != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();
  __swift_project_value_buffer(v3, (uint64_t)static Logger.engagementExtension);
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "􀕹 Initializing extension", v6, 2u);
    swift_slowDealloc();
  }

  return 0;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t type metadata accessor for MusicEngagementExtension()
{
  return self;
}

uint64_t sub_100008498()
{
  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

void partial apply for thunk for @escaping @callee_unowned @convention(block) (@unowned Swift.AnyObject?, @unowned NSError?) -> ()(uint64_t a1, void *a2)
{
  thunk for @escaping @callee_unowned @convention(block) (@unowned Swift.AnyObject?, @unowned NSError?) -> ()(a1, a2, *(void *)(v2 + 16));
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t outlined init with copy of Any(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_100008578()
{
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 32);
  swift_release();

  return swift_deallocObject();
}

_OWORD *outlined init with take of Any(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t partial apply for closure #1 in static MusicEngagementExtension.performRequest(with:completion:)(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (uint64_t)(v1 + 4);
  uint64_t v7 = v1[8];
  uint64_t v8 = v1[9];
  uint64_t v10 = v1[10];
  uint64_t v9 = v1[11];
  unint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *unint64_t v11 = v2;
  v11[1] = partial apply for closure #1 in static MusicEngagementExtension.performRequest(with:completion:);
  return closure #1 in static MusicEngagementExtension.performRequest(with:completion:)(a1, v4, v5, v6, v7, v8, v10, v9);
}

uint64_t partial apply for closure #1 in static MusicEngagementExtension.performRequest(with:completion:)()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  NSString v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTRyt_Tg5(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTRyt_Tg5TQ0_;
  return v6(a1);
}

uint64_t _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTRyt_Tg5TQ0_()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  NSString v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_100008974()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTRyt_Tg5TA(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = partial apply for closure #1 in static MusicEngagementExtension.performRequest(with:completion:);
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&_sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTRyt_Tg5Tu
                                              + _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTRyt_Tg5Tu);
  return v6(a1, v4);
}

uint64_t outlined destroy of TaskPriority?(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = specialized _StringGuts._deconstructUTF8<A>(scratch:)(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    ObjectType = (void *)swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      outlined init with copy of Any((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = &type metadata for _StringGuts;
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      outlined init with copy of Any((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v12);
  return v7;
}

uint64_t specialized _StringGuts._deconstructUTF8<A>(scratch:)(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            UnsafeMutableRawBufferPointer.subscript.setter();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = _StringGuts._allocateForDeconstruct()(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = _StringObject.sharedUTF8.getter();
  if (!v8)
  {
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
LABEL_17:
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t _StringGuts._allocateForDeconstruct()(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = (uint64_t)specialized _copyCollectionToContiguousArray<A>(_:)(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

void *specialized _copyCollectionToContiguousArray<A>(_:)(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = specialized _ContiguousArrayBuffer.init(_uninitializedCount:minimumCapacity:)(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = _StringGuts.copyUTF8(into:)();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return v4;
      }
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
LABEL_10:
      uint64_t v2 = String.UTF8View._foreignCount()();
      if (!v2) {
        return &_swiftEmptyArrayStorage;
      }
    }
    _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
LABEL_14:
    uint64_t result = (void *)_assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    return &_swiftEmptyArrayStorage;
  }
  return result;
}

void *specialized _ContiguousArrayBuffer.init(_uninitializedCount:minimumCapacity:)(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return &_swiftEmptyArrayStorage;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UInt8>);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UInt8>);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

unint64_t lazy protocol witness table accessor for type ODJRequest and conformance ODJRequest()
{
  unint64_t result = lazy protocol witness table cache variable for type ODJRequest and conformance ODJRequest;
  if (!lazy protocol witness table cache variable for type ODJRequest and conformance ODJRequest)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ODJRequest and conformance ODJRequest);
  }
  return result;
}

uint64_t outlined consume of Data._Representation(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

uint64_t outlined consume of JSONPayloadRequest?(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3 != 2) {
    return outlined consume of JSONRequest?(a1, a2, a3);
  }
  return a1;
}

uint64_t outlined consume of JSONRequest?(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3 != 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t specialized __RawDictionaryStorage.find<A>(_:)(uint64_t a1, uint64_t a2)
{
  Hasher.init(_seed:)();
  String.hash(into:)();
  Swift::Int v4 = Hasher._finalize()();

  return specialized __RawDictionaryStorage.find<A>(_:hashValue:)(a1, a2, v4);
}

unint64_t specialized __RawDictionaryStorage.find<A>(_:hashValue:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0);
    }
  }
  return v6;
}

{
  uint64_t v3;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;

  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  uint64_t result = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    int64_t v7 = ~v5;
    do
    {
      int64_t v8 = (uint64_t *)(*(void *)(v3 + 48) + 16 * result);
      uint64_t v10 = *v8;
      uint64_t v9 = v8[1];
      if (v10 == a1 && v9 == a2) {
        break;
      }
      uint64_t result = (result + 1) & v7;
    }
    while (((*(void *)(v3 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0);
  }
  return result;
}

unint64_t specialized UnifiedMessages.MLI.State.init(rawValue:)(Swift::String string)
{
  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of UnifiedMessages.MLI.State.init(rawValue:), v2);
  swift_bridgeObjectRelease();
  if (v3 >= 4) {
    return 4;
  }
  else {
    return v3;
  }
}

uint64_t specialized static MusicEngagementExtension.mliState.getter()
{
  UnifiedMessages.groupDefaultsSuiteName.unsafeMutableAddressor();
  id v0 = objc_allocWithZone((Class)NSUserDefaults);
  swift_bridgeObjectRetain();
  NSString v1 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v2 = [v0 initWithSuiteName:v1];

  if (v2)
  {
    id v3 = v2;
    UnifiedMessages.MLI.userDefaultsKey.unsafeMutableAddressor();
    swift_bridgeObjectRetain();
    NSString v4 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v5 = [v3 stringForKey:v4];

    if (v5)
    {
      uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      int64_t v8 = v7;

      v11._countAndFlagsBits = v6;
      v11._object = v8;
      unint64_t v9 = specialized UnifiedMessages.MLI.State.init(rawValue:)(v11);

      if (v9 != 4) {
        return v9;
      }
    }
    else
    {
    }
  }
  return 1;
}

id specialized static MusicEngagementExtension.fetchUserInfo()()
{
  if (one-time initialization token for groupDefaults != -1) {
    swift_once();
  }
  id v0 = (void *)static MusicEngagementExtension.groupDefaults;
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [v0 objectForKey:v1];

  if (v2)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v13 = 0u;
    long long v14 = 0u;
  }
  outlined init with take of Any?((uint64_t)&v13, (uint64_t)v15);
  if (v16)
  {
    char v3 = swift_dynamicCast() ^ 1;
  }
  else
  {
    outlined destroy of TaskPriority?((uint64_t)v15, &demangling cache variable for type metadata for Any?);
    char v3 = 1;
  }
  NSString v4 = (void *)static MusicEngagementExtension.groupDefaults;
  NSString v5 = String._bridgeToObjectiveC()();
  id v6 = [v4 objectForKey:v5];

  if (v6)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v13 = 0u;
    long long v14 = 0u;
  }
  outlined init with take of Any?((uint64_t)&v13, (uint64_t)v15);
  if (v16)
  {
    int v7 = swift_dynamicCast();
    if (v7) {
      uint64_t v8 = v12;
    }
    else {
      uint64_t v8 = 0;
    }
    char v9 = v7 ^ 1;
  }
  else
  {
    outlined destroy of TaskPriority?((uint64_t)v15, &demangling cache variable for type metadata for Any?);
    uint64_t v8 = 0;
    char v9 = 1;
  }
  id result = [self sharedCloudController];
  if (result)
  {
    Swift::String v11 = result;
    [result isCloudLibraryEnabled];

    specialized static MusicEngagementExtension.mliState.getter();
    v15[0] = v9;
    LOBYTE(v13) = v3;
    return (id)v8;
  }
  else
  {
    __break(1u);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type JSONPayloadResponse and conformance JSONPayloadResponse()
{
  unint64_t result = lazy protocol witness table cache variable for type JSONPayloadResponse and conformance JSONPayloadResponse;
  if (!lazy protocol witness table cache variable for type JSONPayloadResponse and conformance JSONPayloadResponse)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type JSONPayloadResponse and conformance JSONPayloadResponse);
  }
  return result;
}

uint64_t sub_10000977C()
{
  return swift_deallocObject();
}

uint64_t __swift_destroy_boxed_opaque_existential_0Tm(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

void *__swift_project_boxed_opaque_existential_0Tm(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

uint64_t outlined init with take of Any?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Any?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t outlined init with copy of (String, Any)(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t initializeBufferWithCopyOfBuffer for JSONPayloadResponse(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

__n128 __swift_memcpy27_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 11) = *(_OWORD *)(a2 + 11);
  *(__n128 *)a1 = result;
  return result;
}

ValueMetadata *type metadata accessor for JSONPayloadResponse()
{
  return &type metadata for JSONPayloadResponse;
}

uint64_t destroy for ODJRequest(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 16);
  if ((unint64_t)(result - 1) >= 2) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for ODJRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  if (v3 == 1 || v3 == 2)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    *(void *)(a1 + 8) = *(void *)(a2 + 8);
    *(void *)(a1 + 16) = v3;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t assignWithCopy for ODJRequest(uint64_t a1, long long *a2)
{
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *((void *)a2 + 2);
  if (v4 == 2)
  {
    if (v5 == 1 || v5 == 2) {
      goto LABEL_4;
    }
LABEL_9:
    *(unsigned char *)a1 = *(unsigned char *)a2;
    *(void *)(a1 + 8) = *((void *)a2 + 1);
    *(void *)(a1 + 16) = *((void *)a2 + 2);
    swift_bridgeObjectRetain();
    return a1;
  }
  if (v5 == 2)
  {
    outlined destroy of JSONPayloadRequest(a1);
LABEL_12:
    uint64_t v7 = *((void *)a2 + 2);
    *(_OWORD *)a1 = *a2;
    *(void *)(a1 + 16) = v7;
    return a1;
  }
  if (v4 != 1)
  {
    if (v5 != 1)
    {
      *(unsigned char *)a1 = *(unsigned char *)a2;
      *(void *)(a1 + 8) = *((void *)a2 + 1);
      *(void *)(a1 + 16) = *((void *)a2 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    outlined destroy of JSONRequest(a1);
    goto LABEL_12;
  }
  if (v5 != 1) {
    goto LABEL_9;
  }
LABEL_4:
  long long v6 = *a2;
  *(void *)(a1 + 16) = *((void *)a2 + 2);
  *(_OWORD *)a1 = v6;
  return a1;
}

uint64_t outlined destroy of JSONRequest(uint64_t a1)
{
  return a1;
}

uint64_t outlined destroy of JSONPayloadRequest(uint64_t a1)
{
  if (*(void *)(a1 + 16) != 1) {
    swift_bridgeObjectRelease();
  }
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for ODJRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4 != 2)
  {
    uint64_t v5 = *(void *)(a2 + 16);
    if (v5 == 2)
    {
      outlined destroy of JSONPayloadRequest(a1);
    }
    else if (v4 != 1)
    {
      if (v5 != 1)
      {
        *(unsigned char *)a1 = *(unsigned char *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = v5;
        swift_bridgeObjectRelease();
        return a1;
      }
      outlined destroy of JSONRequest(a1);
    }
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for ODJRequest(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFD && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 2147483645);
  }
  unint64_t v3 = *(void *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v5 = -1;
  }
  else {
    int v5 = v4;
  }
  if (v4 <= 1) {
    int v4 = 1;
  }
  int v6 = v4 - 2;
  if (v5 < 1) {
    int v6 = -1;
  }
  return (v6 + 1);
}

uint64_t storeEnumTagSinglePayload for ODJRequest(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFC)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2 + 2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ODJRequest()
{
  return &type metadata for ODJRequest;
}

uint64_t destroy for JSONPayloadRequest(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 16);
  if (result != 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for JSONPayloadRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  if (v3 == 1)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    *(void *)(a1 + 8) = *(void *)(a2 + 8);
    *(void *)(a1 + 16) = v3;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t assignWithCopy for JSONPayloadRequest(uint64_t a1, long long *a2)
{
  uint64_t v4 = *((void *)a2 + 2);
  if (*(void *)(a1 + 16) == 1)
  {
    if (v4 == 1)
    {
      long long v5 = *a2;
      *(void *)(a1 + 16) = *((void *)a2 + 2);
      *(_OWORD *)a1 = v5;
    }
    else
    {
      *(unsigned char *)a1 = *(unsigned char *)a2;
      *(void *)(a1 + 8) = *((void *)a2 + 1);
      *(void *)(a1 + 16) = *((void *)a2 + 2);
      swift_bridgeObjectRetain();
    }
  }
  else if (v4 == 1)
  {
    outlined destroy of JSONRequest(a1);
    uint64_t v6 = *((void *)a2 + 2);
    *(_OWORD *)a1 = *a2;
    *(void *)(a1 + 16) = v6;
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    *(void *)(a1 + 8) = *((void *)a2 + 1);
    *(void *)(a1 + 16) = *((void *)a2 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  return a1;
}

uint64_t assignWithTake for JSONPayloadRequest(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 16) != 1)
  {
    uint64_t v4 = *(void *)(a2 + 16);
    if (v4 != 1)
    {
      *(unsigned char *)a1 = *(unsigned char *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(void *)(a1 + 16) = v4;
      swift_bridgeObjectRelease();
      return a1;
    }
    outlined destroy of JSONRequest(a1);
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for JSONPayloadRequest(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 > 0x7FFFFFFD && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  unint64_t v3 = *(void *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  BOOL v5 = __OFSUB__(v4, 1);
  int v6 = v4 - 1;
  if (v6 < 0 != v5) {
    int v6 = -1;
  }
  return (v6 + 1);
}

uint64_t storeEnumTagSinglePayload for JSONPayloadRequest(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 2147483646;
    if (a3 > 0x7FFFFFFD) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 > 0x7FFFFFFD) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for JSONPayloadRequest()
{
  return &type metadata for JSONPayloadRequest;
}

uint64_t destroy for JSONRequest()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeBufferWithCopyOfBuffer for JSONRequest(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for JSONRequest(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for JSONRequest(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for JSONRequest(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for JSONRequest(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for JSONRequest()
{
  return &type metadata for JSONRequest;
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance ODJRequest.CodingKeys()
{
  return specialized RawRepresentable<>.hashValue.getter();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance ODJRequest.CodingKeys()
{
  return specialized RawRepresentable<>._rawHashValue(seed:)();
}

uint64_t protocol witness for RawRepresentable.init(rawValue:) in conformance ODJRequest.CodingKeys@<X0>(Swift::String *a1@<X0>, BOOL *a2@<X8>)
{
  v2._rawValue = &outlined read-only object #0 of protocol witness for RawRepresentable.init(rawValue:) in conformance ODJRequest.CodingKeys;
  return protocol witness for RawRepresentable.init(rawValue:) in conformance ODJRequest.CodingKeys(v2, a1, a2);
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance ODJRequest.CodingKeys@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = specialized ODJRequest.CodingKeys.stringValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance ODJRequest.CodingKeys@<X0>(Swift::String string@<0:X0, 8:X1>, BOOL *a2@<X8>)
{
  object = string._object;
  v3._countAndFlagsBits = string._countAndFlagsBits;
  v3._object = object;
  Swift::Int v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of protocol witness for CodingKey.init(stringValue:) in conformance ODJRequest.CodingKeys, v3);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v5 != 0;
  return result;
}

uint64_t variable initialization expression of _NSRange.NSRangeIterator.current()
{
  return 0;
}

void protocol witness for CodingKey.init(intValue:) in conformance ODJRequest.CodingKeys(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance ODJRequest.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type ODJRequest.CodingKeys and conformance ODJRequest.CodingKeys();

  return CodingKey.description.getter(a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ODJRequest.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type ODJRequest.CodingKeys and conformance ODJRequest.CodingKeys();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t protocol witness for Decodable.init(from:) in conformance ODJRequest@<X0>(uint64_t *a1@<X8>)
{
  return protocol witness for Decodable.init(from:) in conformance ODJRequest((uint64_t (*)(void))specialized ODJRequest.init(from:), a1);
}

uint64_t static MPCPlayerCommandRequest.isAvailable(in:)()
{
  return 1;
}

void NSFileManager.Failure.hash(into:)()
{
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance JSONPayloadRequest.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = specialized JSONPayloadRequest.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance JSONPayloadRequest.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type JSONPayloadRequest.CodingKeys and conformance JSONPayloadRequest.CodingKeys();

  return CodingKey.description.getter(a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance JSONPayloadRequest.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type JSONPayloadRequest.CodingKeys and conformance JSONPayloadRequest.CodingKeys();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t protocol witness for Decodable.init(from:) in conformance JSONPayloadRequest@<X0>(uint64_t *a1@<X8>)
{
  return protocol witness for Decodable.init(from:) in conformance ODJRequest((uint64_t (*)(void))specialized JSONPayloadRequest.init(from:), a1);
}

uint64_t protocol witness for Decodable.init(from:) in conformance ODJRequest@<X0>(uint64_t (*a1)(void)@<X3>, uint64_t *a2@<X8>)
{
  uint64_t result = a1();
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance JSONRequest.Command()
{
  return specialized RawRepresentable<>.hashValue.getter();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance JSONRequest.Command()
{
  return specialized RawRepresentable<>._rawHashValue(seed:)();
}

uint64_t protocol witness for RawRepresentable.init(rawValue:) in conformance JSONRequest.Command@<X0>(Swift::String *a1@<X0>, BOOL *a2@<X8>)
{
  v2._rawValue = &outlined read-only object #0 of protocol witness for RawRepresentable.init(rawValue:) in conformance JSONRequest.Command;
  return protocol witness for RawRepresentable.init(rawValue:) in conformance ODJRequest.CodingKeys(v2, a1, a2);
}

uint64_t protocol witness for RawRepresentable.init(rawValue:) in conformance ODJRequest.CodingKeys@<X0>(Swift::OpaquePointer cases@<0:X3>, Swift::String *a2@<X0>, BOOL *a3@<X8>)
{
  Swift::Int v4 = _findStringSwitchCase(cases:string:)(cases, *a2);
  uint64_t result = swift_bridgeObjectRelease();
  *a3 = v4 != 0;
  return result;
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance JSONRequest.Command@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = specialized JSONRequest.Command.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t protocol witness for Decodable.init(from:) in conformance JSONRequest.Command()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t JSONRequest.CodingKeys.stringValue.getter(char a1)
{
  if (a1) {
    return 0x6574656D61726170;
  }
  else {
    return 0x646E616D6D6F63;
  }
}

uint64_t JSONPayloadResponse.encode(to:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v15 = a4;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<JSONPayloadResponse.CodingKeys>);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_0Tm(a1, a1[3]);
  lazy protocol witness table accessor for type JSONPayloadResponse.CodingKeys and conformance JSONPayloadResponse.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  uint64_t v16 = a2;
  uint64_t v17 = a3;
  uint64_t v18 = v15;
  char v20 = BYTE2(a5);
  __int16 v19 = a5;
  lazy protocol witness table accessor for type Response and conformance Response();
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t Response.encode(to:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v15 = a4;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<Response.CodingKeys>);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_0Tm(a1, a1[3]);
  lazy protocol witness table accessor for type Response.CodingKeys and conformance Response.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  uint64_t v16 = a2;
  uint64_t v17 = a3;
  uint64_t v18 = v15;
  char v20 = BYTE2(a5);
  __int16 v19 = a5;
  lazy protocol witness table accessor for type UserInfo and conformance UserInfo();
  KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

unint64_t UserInfo.CodingKeys.stringValue.getter(char a1)
{
  unint64_t result = 0xD00000000000001CLL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000018;
      break;
    case 2:
      unint64_t result = 0xD000000000000015;
      break;
    case 3:
      unint64_t result = 0x6574617453696C6DLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t UserInfo.encode(to:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v14 = a5;
  uint64_t v13 = a4;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<UserInfo.CodingKeys>);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_0Tm(a1, a1[3]);
  lazy protocol witness table accessor for type UserInfo.CodingKeys and conformance UserInfo.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  char v19 = 0;
  KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
  if (!v5)
  {
    char v18 = 1;
    char v11 = BYTE2(v14);
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    char v17 = 2;
    KeyedEncodingContainer.encode(_:forKey:)();
    char v16 = v11;
    char v15 = 3;
    lazy protocol witness table accessor for type UnifiedMessages.MLI.State and conformance UnifiedMessages.MLI.State();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance JSONRequest.CodingKeys(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance JSONRequest.CodingKeys()
{
  return JSONRequest.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance JSONRequest.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = specialized JSONRequest.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

void protocol witness for CodingKey.init(intValue:) in conformance JSONRequest.CodingKeys(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance JSONRequest.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type JSONRequest.CodingKeys and conformance JSONRequest.CodingKeys();

  return CodingKey.description.getter(a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance JSONRequest.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type JSONRequest.CodingKeys and conformance JSONRequest.CodingKeys();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t protocol witness for Decodable.init(from:) in conformance JSONRequest@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = specialized JSONRequest.init(from:)(a1);
  if (!v2)
  {
    *(unsigned char *)a2 = result & 1;
    *(void *)(a2 + 8) = v5;
    *(void *)(a2 + 16) = v6;
  }
  return result;
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance JSONPayloadResponse.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = specialized JSONPayloadResponse.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance JSONPayloadResponse.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type JSONPayloadResponse.CodingKeys and conformance JSONPayloadResponse.CodingKeys();

  return CodingKey.description.getter(a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance JSONPayloadResponse.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type JSONPayloadResponse.CodingKeys and conformance JSONPayloadResponse.CodingKeys();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t protocol witness for Encodable.encode(to:) in conformance JSONPayloadResponse(void *a1)
{
  return JSONPayloadResponse.encode(to:)(a1, *(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), *(unsigned __int16 *)(v1 + 24) | (*(unsigned __int8 *)(v1 + 26) << 16));
}

Swift::Int NSFileManager.Failure.hashValue.getter()
{
  return Hasher._finalize()();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance JSONPayloadRequest.CodingKeys()
{
  return Hasher._finalize()();
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance Response.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = specialized Response.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance Response.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type Response.CodingKeys and conformance Response.CodingKeys();

  return CodingKey.description.getter(a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance Response.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type Response.CodingKeys and conformance Response.CodingKeys();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t protocol witness for Encodable.encode(to:) in conformance Response(void *a1)
{
  return Response.encode(to:)(a1, *(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), *(unsigned __int16 *)(v1 + 24) | (*(unsigned __int8 *)(v1 + 26) << 16));
}

unint64_t protocol witness for CodingKey.stringValue.getter in conformance UserInfo.CodingKeys()
{
  return UserInfo.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance UserInfo.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = specialized UserInfo.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

void protocol witness for CodingKey.init(intValue:) in conformance UserInfo.CodingKeys(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance UserInfo.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type UserInfo.CodingKeys and conformance UserInfo.CodingKeys();

  return CodingKey.description.getter(a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance UserInfo.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type UserInfo.CodingKeys and conformance UserInfo.CodingKeys();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t protocol witness for Encodable.encode(to:) in conformance UserInfo(void *a1)
{
  if (*(unsigned char *)(v1 + 25)) {
    int v2 = 256;
  }
  else {
    int v2 = 0;
  }
  return UserInfo.encode(to:)(a1, *(void *)v1, *(unsigned __int8 *)(v1 + 8), *(void *)(v1 + 16), v2 | (*(unsigned __int8 *)(v1 + 26) << 16) | *(unsigned __int8 *)(v1 + 24));
}

uint64_t specialized JSONRequest.Command.rawValue.getter()
{
  return 0x6573556863746566;
}

uint64_t specialized ODJRequest.CodingKeys.stringValue.getter()
{
  return 0x7961702D6E6F736ALL;
}

Swift::Int specialized RawRepresentable<>.hashValue.getter()
{
  return Hasher._finalize()();
}

{
  Hasher.init(_seed:)();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

{
  Hasher.init(_seed:)();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

{
  Hasher.init(_seed:)();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

{
  Hasher.init(_seed:)();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

{
  Hasher.init(_seed:)();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

{
  Hasher.init(_seed:)();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

{
  Hasher.init(_seed:)();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

{
  Hasher.init(_seed:)();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

uint64_t specialized RawRepresentable<>.hash(into:)()
{
  return String.hash(into:)();
}

{
  return String.hash(into:)();
}

{
  uint64_t vars8;

  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

{
  uint64_t vars8;

  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

{
  uint64_t vars8;

  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int specialized RawRepresentable<>._rawHashValue(seed:)()
{
  return Hasher._finalize()();
}

{
  Hasher.init(_seed:)();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

{
  Hasher.init(_seed:)();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

{
  Hasher.init(_seed:)();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

{
  Hasher.init(_seed:)();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

{
  Hasher.init(_seed:)();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

{
  Hasher.init(_seed:)();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

{
  Hasher.init(_seed:)();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

{
  Hasher.init(_seed:)();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

{
  Hasher.init(_seed:)();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

{
  Hasher.init(_seed:)();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

void *specialized ODJRequest.init(from:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<ODJRequest.CodingKeys>);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_project_boxed_opaque_existential_0Tm(a1, a1[3]);
  lazy protocol witness table accessor for type ODJRequest.CodingKeys and conformance ODJRequest.CodingKeys();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  }
  else
  {
    lazy protocol witness table accessor for type JSONPayloadRequest and conformance JSONPayloadRequest();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    uint64_t v7 = (void *)v9[1];
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  }
  return v7;
}

unint64_t lazy protocol witness table accessor for type ODJRequest.CodingKeys and conformance ODJRequest.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type ODJRequest.CodingKeys and conformance ODJRequest.CodingKeys;
  if (!lazy protocol witness table cache variable for type ODJRequest.CodingKeys and conformance ODJRequest.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ODJRequest.CodingKeys and conformance ODJRequest.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ODJRequest.CodingKeys and conformance ODJRequest.CodingKeys;
  if (!lazy protocol witness table cache variable for type ODJRequest.CodingKeys and conformance ODJRequest.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ODJRequest.CodingKeys and conformance ODJRequest.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ODJRequest.CodingKeys and conformance ODJRequest.CodingKeys;
  if (!lazy protocol witness table cache variable for type ODJRequest.CodingKeys and conformance ODJRequest.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ODJRequest.CodingKeys and conformance ODJRequest.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ODJRequest.CodingKeys and conformance ODJRequest.CodingKeys;
  if (!lazy protocol witness table cache variable for type ODJRequest.CodingKeys and conformance ODJRequest.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ODJRequest.CodingKeys and conformance ODJRequest.CodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type JSONPayloadRequest and conformance JSONPayloadRequest()
{
  unint64_t result = lazy protocol witness table cache variable for type JSONPayloadRequest and conformance JSONPayloadRequest;
  if (!lazy protocol witness table cache variable for type JSONPayloadRequest and conformance JSONPayloadRequest)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type JSONPayloadRequest and conformance JSONPayloadRequest);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type JSONPayloadResponse.CodingKeys and conformance JSONPayloadResponse.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type JSONPayloadResponse.CodingKeys and conformance JSONPayloadResponse.CodingKeys;
  if (!lazy protocol witness table cache variable for type JSONPayloadResponse.CodingKeys and conformance JSONPayloadResponse.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type JSONPayloadResponse.CodingKeys and conformance JSONPayloadResponse.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type JSONPayloadResponse.CodingKeys and conformance JSONPayloadResponse.CodingKeys;
  if (!lazy protocol witness table cache variable for type JSONPayloadResponse.CodingKeys and conformance JSONPayloadResponse.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type JSONPayloadResponse.CodingKeys and conformance JSONPayloadResponse.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type JSONPayloadResponse.CodingKeys and conformance JSONPayloadResponse.CodingKeys;
  if (!lazy protocol witness table cache variable for type JSONPayloadResponse.CodingKeys and conformance JSONPayloadResponse.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type JSONPayloadResponse.CodingKeys and conformance JSONPayloadResponse.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type JSONPayloadResponse.CodingKeys and conformance JSONPayloadResponse.CodingKeys;
  if (!lazy protocol witness table cache variable for type JSONPayloadResponse.CodingKeys and conformance JSONPayloadResponse.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type JSONPayloadResponse.CodingKeys and conformance JSONPayloadResponse.CodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type Response and conformance Response()
{
  unint64_t result = lazy protocol witness table cache variable for type Response and conformance Response;
  if (!lazy protocol witness table cache variable for type Response and conformance Response)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Response and conformance Response);
  }
  return result;
}

uint64_t specialized JSONPayloadRequest.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x74736575716572 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t specialized JSONPayloadRequest.CodingKeys.stringValue.getter()
{
  return 0x74736575716572;
}

void *specialized JSONPayloadRequest.init(from:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<JSONPayloadRequest.CodingKeys>);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_project_boxed_opaque_existential_0Tm(a1, a1[3]);
  lazy protocol witness table accessor for type JSONPayloadRequest.CodingKeys and conformance JSONPayloadRequest.CodingKeys();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  }
  else
  {
    lazy protocol witness table accessor for type JSONRequest and conformance JSONRequest();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    uint64_t v7 = (void *)v9[1];
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  }
  return v7;
}

unint64_t lazy protocol witness table accessor for type JSONPayloadRequest.CodingKeys and conformance JSONPayloadRequest.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type JSONPayloadRequest.CodingKeys and conformance JSONPayloadRequest.CodingKeys;
  if (!lazy protocol witness table cache variable for type JSONPayloadRequest.CodingKeys and conformance JSONPayloadRequest.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type JSONPayloadRequest.CodingKeys and conformance JSONPayloadRequest.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type JSONPayloadRequest.CodingKeys and conformance JSONPayloadRequest.CodingKeys;
  if (!lazy protocol witness table cache variable for type JSONPayloadRequest.CodingKeys and conformance JSONPayloadRequest.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type JSONPayloadRequest.CodingKeys and conformance JSONPayloadRequest.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type JSONPayloadRequest.CodingKeys and conformance JSONPayloadRequest.CodingKeys;
  if (!lazy protocol witness table cache variable for type JSONPayloadRequest.CodingKeys and conformance JSONPayloadRequest.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type JSONPayloadRequest.CodingKeys and conformance JSONPayloadRequest.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type JSONPayloadRequest.CodingKeys and conformance JSONPayloadRequest.CodingKeys;
  if (!lazy protocol witness table cache variable for type JSONPayloadRequest.CodingKeys and conformance JSONPayloadRequest.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type JSONPayloadRequest.CodingKeys and conformance JSONPayloadRequest.CodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type JSONRequest and conformance JSONRequest()
{
  unint64_t result = lazy protocol witness table cache variable for type JSONRequest and conformance JSONRequest;
  if (!lazy protocol witness table cache variable for type JSONRequest and conformance JSONRequest)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type JSONRequest and conformance JSONRequest);
  }
  return result;
}

uint64_t specialized JSONRequest.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x646E616D6D6F63 && a2 == 0xE700000000000000;
  if (v3 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6574656D61726170 && a2 == 0xEA00000000007372)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t specialized JSONRequest.init(from:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<JSONRequest.CodingKeys>);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = a1[3];
  __swift_project_boxed_opaque_existential_0Tm(a1, v7);
  lazy protocol witness table accessor for type JSONRequest.CodingKeys and conformance JSONRequest.CodingKeys();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (!v1)
  {
    v9[14] = 0;
    lazy protocol witness table accessor for type JSONRequest.Command and conformance JSONRequest.Command();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    uint64_t v7 = v9[15];
    v9[13] = 1;
    KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
  }
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  return v7;
}

unint64_t lazy protocol witness table accessor for type JSONRequest.CodingKeys and conformance JSONRequest.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type JSONRequest.CodingKeys and conformance JSONRequest.CodingKeys;
  if (!lazy protocol witness table cache variable for type JSONRequest.CodingKeys and conformance JSONRequest.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type JSONRequest.CodingKeys and conformance JSONRequest.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type JSONRequest.CodingKeys and conformance JSONRequest.CodingKeys;
  if (!lazy protocol witness table cache variable for type JSONRequest.CodingKeys and conformance JSONRequest.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type JSONRequest.CodingKeys and conformance JSONRequest.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type JSONRequest.CodingKeys and conformance JSONRequest.CodingKeys;
  if (!lazy protocol witness table cache variable for type JSONRequest.CodingKeys and conformance JSONRequest.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type JSONRequest.CodingKeys and conformance JSONRequest.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type JSONRequest.CodingKeys and conformance JSONRequest.CodingKeys;
  if (!lazy protocol witness table cache variable for type JSONRequest.CodingKeys and conformance JSONRequest.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type JSONRequest.CodingKeys and conformance JSONRequest.CodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type JSONRequest.Command and conformance JSONRequest.Command()
{
  unint64_t result = lazy protocol witness table cache variable for type JSONRequest.Command and conformance JSONRequest.Command;
  if (!lazy protocol witness table cache variable for type JSONRequest.Command and conformance JSONRequest.Command)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type JSONRequest.Command and conformance JSONRequest.Command);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type JSONRequest.Command and conformance JSONRequest.Command;
  if (!lazy protocol witness table cache variable for type JSONRequest.Command and conformance JSONRequest.Command)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type JSONRequest.Command and conformance JSONRequest.Command);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type JSONRequest.Command and conformance JSONRequest.Command;
  if (!lazy protocol witness table cache variable for type JSONRequest.Command and conformance JSONRequest.Command)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type JSONRequest.Command and conformance JSONRequest.Command);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for JSONRequest.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for JSONRequest.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10000BA78);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *destructiveInjectEnumTag for JSONRequest.CodingKeys(unsigned char *result, char a2)
{
  *unint64_t result = a2 & 1;
  return result;
}

void *type metadata accessor for JSONRequest.CodingKeys()
{
  return &unk_100522500;
}

uint64_t variable initialization expression of Library.Context.useDownloadedContentOnly()
{
  return 0;
}

void *type metadata accessor for JSONPayloadRequest.CodingKeys()
{
  return &unk_100522590;
}

void *type metadata accessor for JSONPayloadResponse.CodingKeys()
{
  return &unk_100522620;
}

ValueMetadata *type metadata accessor for ODJRequest.CodingKeys()
{
  return &type metadata for ODJRequest.CodingKeys;
}

uint64_t getEnumTagSinglePayload for JSONPayloadResponse(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 27)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 25);
  if (v3 >= 2) {
    int v4 = ((v3 + 2147483646) & 0x7FFFFFFF) - 1;
  }
  else {
    int v4 = -2;
  }
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for JSONPayloadResponse(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 26) = 0;
    *(_WORD *)(result + 24) = 0;
    *(void *)unint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 27) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 27) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 25) = a2 + 2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Response()
{
  return &type metadata for Response;
}

ValueMetadata *type metadata accessor for JSONRequest.Command()
{
  return &type metadata for JSONRequest.Command;
}

uint64_t specialized JSONPayloadResponse.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x65736E6F70736572 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t specialized JSONPayloadResponse.CodingKeys.stringValue.getter()
{
  return 0x65736E6F70736572;
}

unint64_t lazy protocol witness table accessor for type Response.CodingKeys and conformance Response.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type Response.CodingKeys and conformance Response.CodingKeys;
  if (!lazy protocol witness table cache variable for type Response.CodingKeys and conformance Response.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Response.CodingKeys and conformance Response.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type Response.CodingKeys and conformance Response.CodingKeys;
  if (!lazy protocol witness table cache variable for type Response.CodingKeys and conformance Response.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Response.CodingKeys and conformance Response.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type Response.CodingKeys and conformance Response.CodingKeys;
  if (!lazy protocol witness table cache variable for type Response.CodingKeys and conformance Response.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Response.CodingKeys and conformance Response.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type Response.CodingKeys and conformance Response.CodingKeys;
  if (!lazy protocol witness table cache variable for type Response.CodingKeys and conformance Response.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Response.CodingKeys and conformance Response.CodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type UserInfo and conformance UserInfo()
{
  unint64_t result = lazy protocol witness table cache variable for type UserInfo and conformance UserInfo;
  if (!lazy protocol witness table cache variable for type UserInfo and conformance UserInfo)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type UserInfo and conformance UserInfo);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for JSONPayloadRequest.CodingKeys(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *storeEnumTagSinglePayload for JSONPayloadRequest.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x10000C2CCLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

void *type metadata accessor for Response.CodingKeys()
{
  return &unk_100522850;
}

uint64_t getEnumTagSinglePayload for UserInfo(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 27)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 25);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for UserInfo(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 26) = 0;
    *(_WORD *)(result + 24) = 0;
    *(void *)unint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 27) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 27) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 25) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UserInfo()
{
  return &type metadata for UserInfo;
}

uint64_t specialized Response.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x6573556863746566 && a2 == 0xED00006F666E4972)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

unint64_t lazy protocol witness table accessor for type UserInfo.CodingKeys and conformance UserInfo.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type UserInfo.CodingKeys and conformance UserInfo.CodingKeys;
  if (!lazy protocol witness table cache variable for type UserInfo.CodingKeys and conformance UserInfo.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type UserInfo.CodingKeys and conformance UserInfo.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type UserInfo.CodingKeys and conformance UserInfo.CodingKeys;
  if (!lazy protocol witness table cache variable for type UserInfo.CodingKeys and conformance UserInfo.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type UserInfo.CodingKeys and conformance UserInfo.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type UserInfo.CodingKeys and conformance UserInfo.CodingKeys;
  if (!lazy protocol witness table cache variable for type UserInfo.CodingKeys and conformance UserInfo.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type UserInfo.CodingKeys and conformance UserInfo.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type UserInfo.CodingKeys and conformance UserInfo.CodingKeys;
  if (!lazy protocol witness table cache variable for type UserInfo.CodingKeys and conformance UserInfo.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type UserInfo.CodingKeys and conformance UserInfo.CodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type UnifiedMessages.MLI.State and conformance UnifiedMessages.MLI.State()
{
  unint64_t result = lazy protocol witness table cache variable for type UnifiedMessages.MLI.State and conformance UnifiedMessages.MLI.State;
  if (!lazy protocol witness table cache variable for type UnifiedMessages.MLI.State and conformance UnifiedMessages.MLI.State)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type UnifiedMessages.MLI.State and conformance UnifiedMessages.MLI.State);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type UnifiedMessages.MLI.State and conformance UnifiedMessages.MLI.State;
  if (!lazy protocol witness table cache variable for type UnifiedMessages.MLI.State and conformance UnifiedMessages.MLI.State)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type UnifiedMessages.MLI.State and conformance UnifiedMessages.MLI.State);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type UnifiedMessages.MLI.State and conformance UnifiedMessages.MLI.State;
  if (!lazy protocol witness table cache variable for type UnifiedMessages.MLI.State and conformance UnifiedMessages.MLI.State)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type UnifiedMessages.MLI.State and conformance UnifiedMessages.MLI.State);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for UserInfo.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for UserInfo.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10000C760);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

void *type metadata accessor for UserInfo.CodingKeys()
{
  return &unk_100522968;
}

uint64_t specialized UserInfo.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD00000000000001CLL && a2 == 0x8000000100466800
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x8000000100466820 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000100466840 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6574617453696C6DLL && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v5) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t BackgroundFetchManager.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t one-time initialization function for module()
{
  uint64_t result = closure #1 in variable initialization expression of static NSBundle.module();
  static NSBundle.module = result;
  return result;
}

{
  uint64_t result;

  uint64_t result = closure #1 in variable initialization expression of static NSBundle.module();
  static NSBundle.module = result;
  return result;
}

uint64_t closure #1 in variable initialization expression of static NSBundle.module()
{
  uint64_t v0 = type metadata accessor for URL();
  uint64_t v1 = *(void *)(v0 - 8);
  v64 = (void (**)(char *, uint64_t))v1;
  __chkstk_darwin(v0);
  v62 = (char *)&v56 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  v61 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v56 - v8;
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v12 = (char *)&v56 - v11;
  uint64_t v13 = __chkstk_darwin(v10);
  v59 = (char *)&v56 - v14;
  __chkstk_darwin(v13);
  char v16 = (char *)&v56 - v15;
  v65 = specialized _arrayForceCast<A, B>(_:)((uint64_t)_swiftEmptyArrayStorage);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<URL?>);
  unint64_t v17 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v66 = *(void *)(v4 + 72);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_100493CE0;
  size_t v57 = v18;
  unint64_t v58 = v17;
  uint64_t v19 = v18 + v17;
  char v20 = self;
  id v21 = [v20 mainBundle];
  id v22 = [v21 resourceURL];

  if (v22)
  {
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v1 + 56);
    unint64_t v24 = v16;
    uint64_t v25 = 0;
  }
  else
  {
    uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v1 + 56);
    unint64_t v24 = v16;
    uint64_t v25 = 1;
  }
  v60 = v23;
  v23(v24, v25, 1, v0);
  uint64_t v63 = v1;
  outlined init with take of URL?((uint64_t)v16, v19);
  type metadata accessor for BundleFinder();
  id v26 = [v20 bundleForClass:swift_getObjCClassFromMetadata()];
  id v27 = [v26 resourceURL];

  if (v27)
  {
    uint64_t v28 = (uint64_t)v59;
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    unint64_t v29 = (unint64_t)(v64 + 7) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    __int16 v30 = (char *)v28;
    uint64_t v31 = 0;
  }
  else
  {
    unint64_t v29 = (unint64_t)(v64 + 7) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v28 = (uint64_t)v59;
    __int16 v30 = v59;
    uint64_t v31 = 1;
  }
  uint64_t v32 = v60;
  v60(v30, v31, 1, v0);
  uint64_t v33 = v66;
  outlined init with take of URL?(v28, v19 + v66);
  id v34 = [v20 mainBundle];
  id v35 = [v34 bundleURL];

  uint64_t v36 = v62;
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v37 = *(char **)(v63 + 32);
  v63 += 32;
  v59 = v37;
  ((void (*)(uint64_t, char *, uint64_t))v37)(v19 + 2 * v33, v36, v0);
  v32((char *)(v19 + 2 * v33), 0, 1, v0);
  size_t v67 = (size_t)v65;
  specialized Array.append<A>(contentsOf:)(v57);
  uint64_t v38 = *(void *)(v67 + 16);
  if (v38)
  {
    v39 = v32;
    uint64_t v40 = v67 + v58;
    v41 = (unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 6);
    ++v64;
    v65 = (void *)v29;
    size_t v57 = v67;
    unint64_t v58 = 0x8000000100467A00;
    uint64_t v42 = (uint64_t)v61;
    do
    {
      outlined init with copy of URL?(v40, (uint64_t)v9);
      uint64_t v43 = *v41;
      if ((*v41)(v9, 1, v0) == 1)
      {
        outlined destroy of URL?((uint64_t)v9);
        uint64_t v44 = 1;
      }
      else
      {
        URL.appendingPathComponent(_:)();
        (*v64)(v9, v0);
        uint64_t v44 = 0;
      }
      v39(v12, v44, 1, v0);
      outlined init with copy of URL?((uint64_t)v12, v42);
      if (v43((char *)v42, 1, v0) == 1)
      {
        outlined destroy of URL?((uint64_t)v12);
      }
      else
      {
        v45 = v12;
        unint64_t v46 = v9;
        uint64_t v47 = v62;
        ((void (*)(char *, uint64_t, uint64_t))v59)(v62, v42, v0);
        id v48 = objc_allocWithZone((Class)NSBundle);
        URL._bridgeToObjectiveC()(v49);
        uint64_t v51 = v50;
        v52 = v48;
        uint64_t v42 = (uint64_t)v61;
        id v53 = [v52 initWithURL:v51];

        v54 = v47;
        uint64_t v9 = v46;
        uint64_t v12 = v45;
        v39 = v60;
        (*v64)(v54, v0);
        outlined destroy of URL?((uint64_t)v12);
        if (v53)
        {
          swift_bridgeObjectRelease();
          return (uint64_t)v53;
        }
      }
      v40 += v66;
      --v38;
    }
    while (v38);
  }
  swift_bridgeObjectRelease();
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

{
  uint64_t v0;
  void (**v1)(char *, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  void (*v18)(char *, uint64_t);
  char *v19;
  uint64_t v20;
  id v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  id v29;
  id v30;
  char *v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unsigned int (**v35)(char *, uint64_t, uint64_t);
  uint64_t v36;
  unsigned int (*v37)(char *, uint64_t, uint64_t);
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  unint64_t v42;
  id v43;
  NSURL *v44;
  void *v45;
  void *v46;
  void *v47;
  id v48;
  char *v49;
  uint64_t result;
  size_t v51;
  unint64_t v52;
  void *v53;
  char *v54;
  char *v55;
  char *v56;
  char *v57;
  void (**v58)(char *, uint64_t);
  unint64_t v59;
  uint64_t v60;
  void (*v61)(char *, uint64_t);
  size_t v62;

  uint64_t v0 = type metadata accessor for URL();
  unint64_t v58 = *(void (***)(char *, uint64_t))(v0 - 8);
  uint64_t v1 = v58;
  __chkstk_darwin();
  size_t v57 = (char *)&v51 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&_s10Foundation3URLVSgMD_1) - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v51 - v6;
  __chkstk_darwin();
  uint64_t v56 = (char *)&v51 - v8;
  __chkstk_darwin();
  v54 = (char *)&v51 - v9;
  __chkstk_darwin();
  uint64_t v11 = (char *)&v51 - v10;
  id v53 = _ss15_arrayForceCastySayq_GSayxGr0_lF10Foundation3URLV_AFSgTg5_0((uint64_t)_swiftEmptyArrayStorage);
  __swift_instantiateConcreteTypeFromMangledName(&_ss23_ContiguousArrayStorageCy10Foundation3URLVSgGMD_0);
  uint64_t v12 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v60 = *(void *)(v3 + 72);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_100493CE0;
  uint64_t v51 = v13;
  v52 = v12;
  uint64_t v14 = v13 + v12;
  uint64_t v15 = self;
  char v16 = [v15 mainBundle];
  unint64_t v17 = [v16 resourceURL];

  v59 = (unint64_t)v1;
  if (v17)
  {
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v18 = v1[7];
    uint64_t v19 = v11;
    char v20 = 0;
  }
  else
  {
    uint64_t v18 = v1[7];
    uint64_t v19 = v11;
    char v20 = 1;
  }
  v61 = v18;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v18)(v19, v20, 1, v0);
  _s10Foundation3URLVSgWOb_1((uint64_t)v11, v14);
  type metadata accessor for BundleFinder();
  id v21 = [v15 bundleForClass:swift_getObjCClassFromMetadata()];
  id v22 = [v21 resourceURL];

  if (v22)
  {
    uint64_t v23 = (uint64_t)v54;
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    unint64_t v24 = (unint64_t)(v58 + 7) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v25 = (char *)v23;
    id v26 = 0;
  }
  else
  {
    unint64_t v24 = (unint64_t)(v58 + 7) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v23 = (uint64_t)v54;
    uint64_t v25 = v54;
    id v26 = 1;
  }
  id v27 = v61;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v61)(v25, v26, 1, v0);
  uint64_t v28 = v60;
  _s10Foundation3URLVSgWOb_1(v23, v14 + v60);
  unint64_t v29 = [v15 mainBundle];
  __int16 v30 = [v29 bundleURL];

  uint64_t v31 = v57;
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v32 = v59 + 32;
  v54 = *(char **)(v59 + 32);
  ((void (*)(uint64_t, char *, uint64_t))v54)(v14 + 2 * v28, v31, v0);
  v59 = v24;
  ((void (*)(uint64_t, void, uint64_t, uint64_t))v27)(v14 + 2 * v28, 0, 1, v0);
  v62 = (size_t)v53;
  _sSa6append10contentsOfyqd__n_t7ElementQyd__RszSTRd__lF10Foundation3URLVSg_SayAHGTg5_0(v51);
  uint64_t v33 = *(void *)(v62 + 16);
  if (v33)
  {
    uint64_t v51 = v62;
    id v34 = v62 + v52;
    id v35 = (unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 6);
    ++v58;
    id v53 = (void *)0x8000000100472610;
    uint64_t v36 = (uint64_t)v56;
    v55 = v7;
    do
    {
      outlined init with copy of (String, Any)(v34, (uint64_t)v7, &_s10Foundation3URLVSgMD_1);
      uint64_t v37 = *v35;
      if ((*v35)(v7, 1, v0) == 1)
      {
        _s10Foundation3URLVSgWOh_1((uint64_t)v7);
        uint64_t v38 = 1;
      }
      else
      {
        URL.appendingPathComponent(_:)();
        (*v58)(v7, v0);
        uint64_t v38 = 0;
      }
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v61)(v36, v38, 1, v0);
      outlined init with copy of (String, Any)(v36, (uint64_t)v5, &_s10Foundation3URLVSgMD_1);
      if (v37(v5, 1, v0) == 1)
      {
        _s10Foundation3URLVSgWOh_1(v36);
      }
      else
      {
        v39 = v57;
        ((void (*)(char *, char *, uint64_t))v54)(v57, v5, v0);
        uint64_t v40 = v0;
        v41 = v5;
        uint64_t v42 = v32;
        uint64_t v43 = objc_allocWithZone((Class)NSBundle);
        URL._bridgeToObjectiveC()(v44);
        unint64_t v46 = v45;
        uint64_t v47 = v43;
        uint64_t v32 = v42;
        uint64_t v5 = v41;
        uint64_t v0 = v40;
        uint64_t v36 = (uint64_t)v56;
        id v48 = objc_msgSend(v47, "initWithURL:", v46, v51);

        uint64_t v49 = v39;
        uint64_t v7 = v55;
        (*v58)(v49, v0);
        _s10Foundation3URLVSgWOh_1(v36);
        if (v48)
        {
          swift_bridgeObjectRelease();
          return (uint64_t)v48;
        }
      }
      v34 += v60;
      --v33;
    }
    while (v33);
  }
  swift_bridgeObjectRelease();
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t variable initialization expression of Actions.SortPlaylist.Context.playlistVariant@<X0>(uint64_t a1@<X8>)
{
  return variable initialization expression of Actions.SortPlaylist.Context.playlistVariant((uint64_t (*)(void))&type metadata accessor for Playlist.Variant, a1);
}

uint64_t variable initialization expression of Actions.MetricsReportingContext.actionContext()
{
  return 0;
}

uint64_t variable initialization expression of Actions.MetricsReportingContext.page@<X0>(uint64_t a1@<X8>)
{
  return variable initialization expression of Actions.SortPlaylist.Context.playlistVariant(type metadata accessor for MetricsEvent.Page, a1);
}

uint64_t static MPCPlayerRequestTracklistRange.nowPlayingItem.getter()
{
  return 0;
}

uint64_t static MPMediaLibraryFilteringOptions.none.getter()
{
  return 0;
}

uint64_t variable initialization expression of Notice.thumbnail@<X0>(uint64_t a1@<X8>)
{
  return variable initialization expression of Actions.SortPlaylist.Context.playlistVariant(type metadata accessor for Notice.Thumbnail, a1);
}

double variable initialization expression of AnyAction.displayConfiguration@<D0>(_OWORD *a1@<X8>)
{
  double result = 0.0;
  *a1 = xmmword_100493CF0;
  a1[1] = 0u;
  a1[2] = 0u;
  return result;
}

void *variable initialization expression of Library.Context.playlistVariants()
{
  return &_swiftEmptyArrayStorage;
}

uint64_t variable initialization expression of ArtworkVideoReportingController.signpostsForIndex()
{
  swift_getTupleTypeMetadata2();
  static Array._allocateUninitialized(_:)();

  return Dictionary.init(dictionaryLiteral:)();
}

uint64_t variable initialization expression of MetricsEvent.ComponentRender.componentType()
{
  return 24;
}

uint64_t static ActionDisplayConfiguration.Attributes.hidden.getter()
{
  return 4;
}

uint64_t variable initialization expression of MetricsReportingController.componentRenderEventSampler()
{
  return variable initialization expression of MetricsReportingController.componentRenderEventSampler(&demangling cache variable for type metadata for MetricsEventSampler<Music_SSMetricsComponentRenderEvent>);
}

uint64_t variable initialization expression of MetricsReportingController.pageRenderEventSampler()
{
  return variable initialization expression of MetricsReportingController.componentRenderEventSampler((uint64_t *)&demangling cache variable for type metadata for MetricsEventSampler<Music_SSMetricsPageRenderEvent>);
}

uint64_t variable initialization expression of MetricsReportingController.componentRenderEventSampler(uint64_t *a1)
{
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = [self standardUserDefaults];
  return v1;
}

id variable initialization expression of MetricsReportingController.carFocusedMetricsController()
{
  id v0 = objc_allocWithZone((Class)SSMetricsController);

  return [v0 init];
}

uint64_t variable initialization expression of MetricsReportingController.carMetricsReporter()
{
  type metadata accessor for CarNowPlayingMetrics.Reporter();

  return swift_allocObject();
}

uint64_t variable initialization expression of GroupActivitiesManager.Activity.Metadata.URL@<X0>(uint64_t a1@<X8>)
{
  return variable initialization expression of Actions.SortPlaylist.Context.playlistVariant((uint64_t (*)(void))&type metadata accessor for URL, a1);
}

id variable initialization expression of ApplicationCapabilities.hasNetworkConnectivity()
{
  id result = [self sharedCloudController];
  if (result)
  {
    uint64_t v1 = result;
    id v2 = [result hasProperNetworkConditionsToShowCloudMedia];

    return v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void *variable initialization expression of Library.Menu.Request.excludedIdentifiers()
{
  return &_swiftEmptySetSingleton;
}

double variable initialization expression of ApplicationCapabilities.ratingWarning@<D0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 0x7FFFFFFFFFFFFFFFLL;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  return result;
}

id variable initialization expression of ApplicationCapabilities.subscriptionStatus()
{
  id v0 = [self sharedController];
  id v1 = [v0 musicSubscriptionStatus];

  return v1;
}

char *variable initialization expression of ApplicationCapabilities.tabs()
{
  return specialized ApplicationCapabilities.Tabs.init(configurations:)((uint64_t)&_swiftEmptyArrayStorage);
}

uint64_t variable initialization expression of ApplicationCapabilities.Controller.storeBag()
{
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ICURLBag?);
  UnfairLock.locked<A>(_:)((void (*)(void))partial apply for closure #1 in BagProvider.bag.getter);
  return v1;
}

id variable initialization expression of BackgroundRefreshController.cloudClient()
{
  id v0 = objc_allocWithZone((Class)ICCloudClient);

  return [v0 init];
}

uint64_t variable initialization expression of GroupActivitiesManager.signpostInitiationToFirstAudioFrame@<X0>(uint64_t a1@<X8>)
{
  return variable initialization expression of Actions.SortPlaylist.Context.playlistVariant((uint64_t (*)(void))type metadata accessor for Signpost, a1);
}

uint64_t variable initialization expression of BagProvider.durableObservers()
{
  uint64_t v0 = type metadata accessor for BagProvider.Observer();

  return WeakArray.init(_:)((uint64_t)&_swiftEmptyArrayStorage, v0);
}

uint64_t variable initialization expression of BagProvider.logger()
{
  if (one-time initialization token for musicBag != -1) {
    swift_once();
  }
  id v0 = (id)static OS_os_log.musicBag;

  return Logger.init(_:)();
}

id variable initialization expression of BagProvider.retry()
{
  id v0 = objc_allocWithZone((Class)type metadata accessor for BagProvider.Retry());

  return [v0 init];
}

unint64_t variable initialization expression of Collaboration.ArtworkCachingReference.identifier()
{
  return 0xD000000000000027;
}

uint64_t variable initialization expression of CloudLibrary.StatusObserver._hasDisregardedBanner()
{
  char v3 = 2;
  v2[0] = 0xD000000000000014;
  v2[1] = 0x80000001004678C0;
  id v0 = [self standardUserDefaults];
  lazy protocol witness table accessor for type String and conformance String();
  UserDefault.init(wrappedValue:defaults:key:)((uint64_t)&v3, (uint64_t)v0, (uint64_t)v2, (uint64_t)&type metadata for String, (char *)&v4);
  return v4;
}

uint64_t variable initialization expression of CloudLibrary.StatusObserver.capabilitiesController()
{
  if (one-time initialization token for shared != -1) {
    swift_once();
  }

  return swift_retain();
}

uint64_t variable initialization expression of CloudLibrary.StatusObserver._status()
{
  return 0x80000000;
}

uint64_t static MPIdentifierSet.Purpose.Options.catalog.getter()
{
  return 2;
}

uint64_t variable initialization expression of MusicLibrary.ActionableStateController.currentState()
{
  return 0;
}

void *variable initialization expression of MusicLibrary.ActionableStateController.itemStateSubscriptions()
{
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) == 0 || !_CocoaArrayWrapper.endIndex.getter()) {
    return &_swiftEmptySetSingleton;
  }
  return (void *)specialized Set.init(_nonEmptyArrayLiteral:)((unint64_t)_swiftEmptyArrayStorage);
}

uint64_t variable initialization expression of Library.Context.musicLibrary()
{
  return static MusicLibrary.shared.getter();
}

uint64_t variable initialization expression of Library.Context.album@<X0>(uint64_t a1@<X8>)
{
  return variable initialization expression of Actions.SortPlaylist.Context.playlistVariant((uint64_t (*)(void))&type metadata accessor for Album, a1);
}

uint64_t variable initialization expression of Library.Context.artist@<X0>(uint64_t a1@<X8>)
{
  return variable initialization expression of Actions.SortPlaylist.Context.playlistVariant((uint64_t (*)(void))&type metadata accessor for Artist, a1);
}

uint64_t variable initialization expression of Library.Context.composer@<X0>(uint64_t a1@<X8>)
{
  return variable initialization expression of Actions.SortPlaylist.Context.playlistVariant((uint64_t (*)(void))&type metadata accessor for Composer, a1);
}

uint64_t variable initialization expression of Library.Context.genre@<X0>(uint64_t a1@<X8>)
{
  return variable initialization expression of Actions.SortPlaylist.Context.playlistVariant((uint64_t (*)(void))&type metadata accessor for Genre, a1);
}

uint64_t variable initialization expression of Library.Context.playlist@<X0>(uint64_t a1@<X8>)
{
  return variable initialization expression of Actions.SortPlaylist.Context.playlistVariant((uint64_t (*)(void))&type metadata accessor for Playlist, a1);
}

uint64_t variable initialization expression of Library.Context.tvShow@<X0>(uint64_t a1@<X8>)
{
  return variable initialization expression of Actions.SortPlaylist.Context.playlistVariant((uint64_t (*)(void))&type metadata accessor for TVShow, a1);
}

uint64_t variable initialization expression of Library.Context.tvSeason@<X0>(uint64_t a1@<X8>)
{
  return variable initialization expression of Actions.SortPlaylist.Context.playlistVariant((uint64_t (*)(void))&type metadata accessor for TVSeason, a1);
}

uint64_t static MPIdentifierSet.Purpose.Options.all.getter()
{
  return 3;
}

id variable initialization expression of Library.Menu.Request.librarySource()
{
  id result = [self deviceMediaLibrary];
  if (!result) {
    __break(1u);
  }
  return result;
}

unint64_t variable initialization expression of PushNotificationObserver.registeredHandlers()
{
  return specialized Dictionary.init(dictionaryLiteral:)((uint64_t)_swiftEmptyArrayStorage);
}

uint64_t variable initialization expression of PushNotificationObserver.connection()
{
  return 0;
}

double variable initialization expression of SharePlayTogetherSession._qrCode@<D0>(uint64_t a1@<X8>)
{
  *(void *)(a1 + 32) = 0;
  double result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

id variable initialization expression of Player._path()
{
  id v0 = [self systemRoute];
  uint64_t v1 = self;
  if (one-time initialization token for systemMusic != -1) {
    swift_once();
  }
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [v1 systemMusicPathWithRoute:v0 playerID:v2];

  if ([v0 isDeviceRoute]) {
    id v4 = v3;
  }
  else {
    id v4 = [v1 pathWithRoute:v0 bundleID:0 playerID:0];
  }
  uint64_t v5 = v4;

  return v3;
}

uint64_t variable initialization expression of Player.nowPlayingConfiguration()
{
  if (one-time initialization token for emptyNowPlayingItem != -1) {
    swift_once();
  }
  uint64_t v0 = static MPPropertySet.emptyNowPlayingItem;
  id v1 = (id)static MPPropertySet.emptyNowPlayingItem;
  return v0;
}

unint64_t variable initialization expression of Player.failingPlayerPathTimers()
{
  return specialized Dictionary.init(dictionaryLiteral:)((uint64_t)_swiftEmptyArrayStorage);
}

uint64_t variable initialization expression of ApplicationCapabilities.Controller.lock()
{
  return UnfairLock.init()();
}

id variable initialization expression of Player.NowPlayingConfiguration.itemProperties()
{
  if (one-time initialization token for emptyNowPlayingItem != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)static MPPropertySet.emptyNowPlayingItem;

  return v0;
}

void *variable initialization expression of Player.NowPlayingConfiguration.tracklistRanges()
{
  return &_swiftEmptyDictionarySingleton;
}

uint64_t variable initialization expression of Player.NowPlayingConfiguration.BadCountedSet.dictionary(uint64_t a1, uint64_t a2)
{
  return Dictionary.init()(a1, &type metadata for Int, a2);
}

uint64_t variable initialization expression of MusicItemState._playabilityStatus@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for MusicPlayer.PlayabilityStatus.playable(_:);
  uint64_t v3 = type metadata accessor for MusicPlayer.PlayabilityStatus();
  id v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);

  return v4(a1, v2, v3);
}

uint64_t variable initialization expression of MusicItemState._previewCapabilityStatus@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for MusicPlayer.PreviewCapabilityStatus.UnpreviewableReason.notSupported(_:);
  uint64_t v3 = type metadata accessor for MusicPlayer.PreviewCapabilityStatus.UnpreviewableReason();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = enum case for MusicPlayer.PreviewCapabilityStatus.unpreviewable(_:);
  uint64_t v5 = type metadata accessor for MusicPlayer.PreviewCapabilityStatus();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104);

  return v6(a1, v4, v5);
}

uint64_t variable initialization expression of SequentialVocalCommandsFilter.queuedCommand()
{
  return 0x1000000000000;
}

id variable initialization expression of PlaylistCovers.ArtworkDataSource.cache()
{
  id v0 = objc_allocWithZone((Class)NSCache);

  return [v0 init];
}

double variable initialization expression of PresentationSource.position@<D0>(uint64_t a1@<X8>)
{
  *(void *)(a1 + 32) = 0;
  double result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(unsigned char *)(a1 + 40) = -1;
  return result;
}

uint64_t variable initialization expression of MetricsEvent.PageRender.request@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a1 - 8) + 56))(a2, 1, 1, a1);
}

uint64_t ActionMenuItemConfiguring.menuItemImage.getter()
{
  return 0;
}

uint64_t variable initialization expression of LibraryModelRequest.itemRange()
{
  return 0;
}

uint64_t variable initialization expression of RequestResponse.Controller.enqueuedRevisionCompletions()
{
  type metadata accessor for RequestResponse.Controller();
  type metadata accessor for RequestResponse.Revision();
  swift_getFunctionTypeMetadata2();

  return static Array._allocateUninitialized(_:)();
}

uint64_t variable initialization expression of RequestResponse.Controller.revisionIDCompletionsMap()
{
  type metadata accessor for RequestResponse.Controller();
  type metadata accessor for RequestResponse.Revision();
  swift_getFunctionTypeMetadata2();
  type metadata accessor for Array();
  swift_getTupleTypeMetadata2();
  static Array._allocateUninitialized(_:)();

  return Dictionary.init(dictionaryLiteral:)();
}

uint64_t variable initialization expression of SharePlayTogetherSession._host@<X0>(uint64_t a1@<X8>)
{
  return variable initialization expression of Actions.SortPlaylist.Context.playlistVariant(type metadata accessor for SharePlayTogetherSession.Participant, a1);
}

unint64_t variable initialization expression of SharePlayTogetherSession.participantProfileMap()
{
  return specialized Dictionary.init(dictionaryLiteral:)((uint64_t)_swiftEmptyArrayStorage);
}

uint64_t variable initialization expression of SharePlayTogetherSession.Participant.socialProfile@<X0>(uint64_t a1@<X8>)
{
  return variable initialization expression of Actions.SortPlaylist.Context.playlistVariant((uint64_t (*)(void))&type metadata accessor for SocialProfile, a1);
}

double variable initialization expression of GroupActivitiesManager.Activity.Metadata.artworkSize()
{
  return 300.0;
}

uint64_t variable initialization expression of GroupActivitiesManager.Activity.customMetadata@<X0>(uint64_t a1@<X8>)
{
  return variable initialization expression of Actions.SortPlaylist.Context.playlistVariant(type metadata accessor for GroupActivitiesManager.Activity.Metadata, a1);
}

uint64_t variable initialization expression of GroupActivitiesManager.pendingNoticeAlert()
{
  return 0;
}

double variable initialization expression of GroupActivitiesManager._reaction@<D0>(_OWORD *a1@<X8>)
{
  double result = 0.0;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  return result;
}

uint64_t variable initialization expression of GroupActivitiesManager.artworkCachingReference()
{
  type metadata accessor for GroupActivitiesManager.ArtworkCachingReference();
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = 0xD00000000000001ELL;
  *(void *)(v0 + 24) = 0x80000001004678E0;
  id v1 = self;
  NSString v2 = String._bridgeToObjectiveC()();
  [v1 setCacheLimit:0 forCacheIdentifier:v2 cacheReference:v0];

  return v0;
}

uint64_t variable initialization expression of GroupActivitiesManager.sessionStateObserver()
{
  return GroupStateObserver.__allocating_init()();
}

uint64_t variable initialization expression of GroupActivitiesManager.activity@<X0>(uint64_t a1@<X8>)
{
  return variable initialization expression of Actions.SortPlaylist.Context.playlistVariant(type metadata accessor for GroupActivitiesManager.Activity, a1);
}

uint64_t variable initialization expression of GroupActivitiesManager.autoBugCaptureIntervalBeginDate@<X0>(uint64_t a1@<X8>)
{
  return variable initialization expression of Actions.SortPlaylist.Context.playlistVariant((uint64_t (*)(void))&type metadata accessor for Date, a1);
}

uint64_t variable initialization expression of Actions.SortPlaylist.Context.playlistVariant@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = a1(0);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56);

  return v4(a2, 1, 1, v3);
}

uint64_t variable initialization expression of GroupActivitiesManager.eligibilityContext()
{
  return 0;
}

id variable initialization expression of EnvironmentMonitorObserver.environmentMonitor()
{
  id v0 = [self sharedMonitor];

  return v0;
}

uint64_t variable initialization expression of ExplicitRestrictionsController.symbol()
{
  if (one-time initialization token for symbols != -1) {
    swift_once();
  }
  uint64_t v0 = static ExplicitRestrictionsController.symbols;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t variable initialization expression of LaunchURL.Resolver.logger()
{
  return Logger.init(subsystem:category:)();
}

uint64_t protocol witness for _ObjectiveCBridgeable._bridgeToObjectiveC() in conformance UIApplicationOpenExternalURLOptionsKey(uint64_t a1, uint64_t a2)
{
  return protocol witness for _ObjectiveCBridgeable._bridgeToObjectiveC() in conformance UIApplicationOpenExternalURLOptionsKey(a1, a2, (uint64_t (*)(uint64_t))&String._bridgeToObjectiveC());
}

uint64_t protocol witness for SetAlgebra.init<A>(_:) in conformance ICMusicSubscriptionStatusCapabilities(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return SetAlgebra.init<A>(_:)(a1, a4, a2, a5, a3);
}

BOOL protocol witness for SetAlgebra.insert(_:) in conformance MPModelSongVariants(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = *v2 & *a2;
  if (v4 != *a2) {
    *v2 |= v3;
  }
  *a1 = v3;
  return v4 != v3;
}

void *protocol witness for SetAlgebra.formUnion(_:) in conformance MPModelSongVariants(void *result)
{
  *v1 |= *result;
  return result;
}

void *protocol witness for SetAlgebra.intersection(_:) in conformance MPMediaType@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & *result;
  return result;
}

void *protocol witness for SetAlgebra.formIntersection(_:) in conformance MPMediaType(void *result)
{
  *v1 &= *result;
  return result;
}

BOOL protocol witness for SetAlgebra.isSubset(of:) in conformance MPMediaType(void *a1)
{
  return (*v1 & ~*a1) == 0;
}

BOOL protocol witness for SetAlgebra.isSuperset(of:) in conformance MPMediaType(void *a1)
{
  return (*a1 & ~*v1) == 0;
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance MPMediaType(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t protocol witness for _BridgedStoredNSError.init(_nsError:) in conformance related decl 'e' for MPCPlayerEnqueueErrorCode@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

id UIView.Shadow.color.getter()
{
  return *v0;
}

void *protocol witness for RawRepresentable.init(rawValue:) in conformance MPCErrorCode@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

void *protocol witness for SetAlgebra.union(_:) in conformance MPCPlaybackIntentOptions@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 | *result;
  return result;
}

void *protocol witness for SetAlgebra.symmetricDifference(_:) in conformance MPCPlaybackIntentOptions@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 ^ *result;
  return result;
}

void *protocol witness for SetAlgebra.remove(_:) in conformance MPCPlaybackIntentOptions@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *v2 & *result;
  if (v3) {
    *v2 &= ~*result;
  }
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *protocol witness for SetAlgebra.update(with:) in conformance MPCPlaybackIntentOptions@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *result;
  uint64_t v4 = *v2;
  *v2 |= *result;
  uint64_t v5 = v4 & v3;
  *(void *)a2 = v5;
  *(unsigned char *)(a2 + 8) = v5 == 0;
  return result;
}

void *protocol witness for SetAlgebra.formSymmetricDifference(_:) in conformance MPCPlaybackIntentOptions(void *result)
{
  *v1 ^= *result;
  return result;
}

void *protocol witness for SetAlgebra.subtracting(_:) in conformance MPCPlaybackIntentOptions@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & ~*result;
  return result;
}

BOOL protocol witness for SetAlgebra.isDisjoint(with:) in conformance MPCPlaybackIntentOptions(void *a1)
{
  return (*v1 & *a1) == 0;
}

BOOL protocol witness for SetAlgebra.isEmpty.getter in conformance MPCPlaybackIntentOptions()
{
  return *v0 == 0;
}

void *protocol witness for SetAlgebra.subtract(_:) in conformance MPCPlaybackIntentOptions(void *result)
{
  *v1 &= ~*result;
  return result;
}

void protocol witness for SetAlgebra.init() in conformance CGGradientDrawingOptions(_DWORD *a1@<X8>)
{
  *a1 = 0;
}

_DWORD *protocol witness for SetAlgebra.intersection(_:) in conformance CGGradientDrawingOptions@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  *a2 = *v2 & *result;
  return result;
}

BOOL protocol witness for SetAlgebra.insert(_:) in conformance CGGradientDrawingOptions(_DWORD *a1, int *a2)
{
  int v3 = *a2;
  int v4 = *v2 & *a2;
  if (v4 != *a2) {
    *v2 |= v3;
  }
  *a1 = v3;
  return v4 != v3;
}

_DWORD *protocol witness for SetAlgebra.formUnion(_:) in conformance CGGradientDrawingOptions(_DWORD *result)
{
  *v1 |= *result;
  return result;
}

_DWORD *protocol witness for SetAlgebra.formIntersection(_:) in conformance CGGradientDrawingOptions(_DWORD *result)
{
  *v1 &= *result;
  return result;
}

unsigned __int8 *protocol witness for RawRepresentable.init(rawValue:) in conformance MRGroupSessionRouteType@<X0>(unsigned __int8 *result@<X0>, _WORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance MRGroupSessionRouteType(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t protocol witness for static _ObjectiveCBridgeable._forceBridgeFromObjectiveC(_:result:) in conformance UIApplicationOpenExternalURLOptionsKey(uint64_t a1, id *a2)
{
  uint64_t result = static String._forceBridgeFromObjectiveC(_:result:)();
  *a2 = 0;
  return result;
}

uint64_t protocol witness for static _ObjectiveCBridgeable._conditionallyBridgeFromObjectiveC(_:result:) in conformance UIApplicationOpenExternalURLOptionsKey(uint64_t a1, id *a2)
{
  char v3 = static String._conditionallyBridgeFromObjectiveC(_:result:)();
  *a2 = 0;
  return v3 & 1;
}

uint64_t protocol witness for static _ObjectiveCBridgeable._unconditionallyBridgeFromObjectiveC(_:) in conformance UIApplicationOpenExternalURLOptionsKey@<X0>(void *a1@<X8>)
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v2 = String._bridgeToObjectiveC()();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t protocol witness for Error._domain.getter in conformance related decl 'e' for MPCPlayerRequestErrorCode(uint64_t a1)
{
  uint64_t v2 = lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type related decl 'e' for MPCPlayerRequestErrorCode and conformance related decl 'e' for MPCPlayerRequestErrorCode, type metadata accessor for related decl 'e' for MPCPlayerRequestErrorCode);

  return Error<>._domain.getter(a1, v2);
}

uint64_t protocol witness for Error._code.getter in conformance related decl 'e' for MPCPlayerRequestErrorCode(uint64_t a1)
{
  uint64_t v2 = lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type related decl 'e' for MPCPlayerRequestErrorCode and conformance related decl 'e' for MPCPlayerRequestErrorCode, type metadata accessor for related decl 'e' for MPCPlayerRequestErrorCode);

  return Error<>._code.getter(a1, v2);
}

uint64_t protocol witness for Error._getEmbeddedNSError() in conformance related decl 'e' for MPCPlayerRequestErrorCode(uint64_t a1)
{
  uint64_t v2 = lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type related decl 'e' for MPCPlayerRequestErrorCode and conformance related decl 'e' for MPCPlayerRequestErrorCode, type metadata accessor for related decl 'e' for MPCPlayerRequestErrorCode);

  return _BridgedStoredNSError._getEmbeddedNSError()(a1, v2);
}

uint64_t protocol witness for Hashable.hashValue.getter in conformance CFStringRef()
{
  return _CFObject.hashValue.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance CFStringRef()
{
  return _CFObject.hash(into:)();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance CFStringRef()
{
  return Hasher._finalize()();
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance CFStringRef()
{
  swift_getWitnessTable();

  return static _CFObject.== infix(_:_:)();
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance MGDeviceClass(_DWORD *a1, _DWORD *a2)
{
  return *a1 == *a2;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance MPMediaType(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t protocol witness for static CustomNSError.errorDomain.getter in conformance related decl 'e' for MPCPlayerEnqueueErrorCode()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t protocol witness for CustomNSError.errorCode.getter in conformance related decl 'e' for MPCPlayerEnqueueErrorCode(uint64_t a1)
{
  uint64_t v2 = lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type related decl 'e' for MPCPlayerEnqueueErrorCode and conformance related decl 'e' for MPCPlayerEnqueueErrorCode, type metadata accessor for related decl 'e' for MPCPlayerEnqueueErrorCode);

  return _BridgedStoredNSError.errorCode.getter(a1, v2);
}

uint64_t protocol witness for CustomNSError.errorUserInfo.getter in conformance related decl 'e' for MPCPlayerEnqueueErrorCode(uint64_t a1)
{
  uint64_t v2 = lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type related decl 'e' for MPCPlayerEnqueueErrorCode and conformance related decl 'e' for MPCPlayerEnqueueErrorCode, type metadata accessor for related decl 'e' for MPCPlayerEnqueueErrorCode);

  return _BridgedStoredNSError.errorUserInfo.getter(a1, v2);
}

uint64_t protocol witness for _ObjectiveCBridgeableError.init(_bridgedNSError:) in conformance related decl 'e' for MPCPlayerEnqueueErrorCode(void *a1, uint64_t a2)
{
  uint64_t v4 = lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type related decl 'e' for MPCPlayerEnqueueErrorCode and conformance related decl 'e' for MPCPlayerEnqueueErrorCode, type metadata accessor for related decl 'e' for MPCPlayerEnqueueErrorCode);
  id v5 = a1;

  return _BridgedStoredNSError.init(_bridgedNSError:)(v5, a2, v4);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance related decl 'e' for MPCPlayerEnqueueErrorCode(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type related decl 'e' for MPCPlayerEnqueueErrorCode and conformance related decl 'e' for MPCPlayerEnqueueErrorCode, type metadata accessor for related decl 'e' for MPCPlayerEnqueueErrorCode);

  return _BridgedStoredNSError.hash(into:)(a1, a2, v4);
}

uint64_t protocol witness for static CustomNSError.errorDomain.getter in conformance related decl 'e' for MPCPlayerRequestErrorCode()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t protocol witness for CustomNSError.errorCode.getter in conformance related decl 'e' for MPCPlayerRequestErrorCode(uint64_t a1)
{
  uint64_t v2 = lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type related decl 'e' for MPCPlayerRequestErrorCode and conformance related decl 'e' for MPCPlayerRequestErrorCode, type metadata accessor for related decl 'e' for MPCPlayerRequestErrorCode);

  return _BridgedStoredNSError.errorCode.getter(a1, v2);
}

uint64_t protocol witness for CustomNSError.errorUserInfo.getter in conformance related decl 'e' for MPCPlayerRequestErrorCode(uint64_t a1)
{
  uint64_t v2 = lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type related decl 'e' for MPCPlayerRequestErrorCode and conformance related decl 'e' for MPCPlayerRequestErrorCode, type metadata accessor for related decl 'e' for MPCPlayerRequestErrorCode);

  return _BridgedStoredNSError.errorUserInfo.getter(a1, v2);
}

uint64_t protocol witness for _ObjectiveCBridgeableError.init(_bridgedNSError:) in conformance related decl 'e' for MPCPlayerRequestErrorCode(void *a1, uint64_t a2)
{
  uint64_t v4 = lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type related decl 'e' for MPCPlayerRequestErrorCode and conformance related decl 'e' for MPCPlayerRequestErrorCode, type metadata accessor for related decl 'e' for MPCPlayerRequestErrorCode);
  id v5 = a1;

  return _BridgedStoredNSError.init(_bridgedNSError:)(v5, a2, v4);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance related decl 'e' for MPCPlayerRequestErrorCode(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type related decl 'e' for MPCPlayerRequestErrorCode and conformance related decl 'e' for MPCPlayerRequestErrorCode, type metadata accessor for related decl 'e' for MPCPlayerRequestErrorCode);

  return _BridgedStoredNSError.hash(into:)(a1, a2, v4);
}

uint64_t protocol witness for static CustomNSError.errorDomain.getter in conformance related decl 'e' for MPCErrorCode()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t protocol witness for CustomNSError.errorCode.getter in conformance related decl 'e' for MPCErrorCode(uint64_t a1)
{
  uint64_t v2 = lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type related decl 'e' for MPCErrorCode and conformance related decl 'e' for MPCErrorCode, type metadata accessor for related decl 'e' for MPCErrorCode);

  return _BridgedStoredNSError.errorCode.getter(a1, v2);
}

uint64_t protocol witness for CustomNSError.errorUserInfo.getter in conformance related decl 'e' for MPCErrorCode(uint64_t a1)
{
  uint64_t v2 = lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type related decl 'e' for MPCErrorCode and conformance related decl 'e' for MPCErrorCode, type metadata accessor for related decl 'e' for MPCErrorCode);

  return _BridgedStoredNSError.errorUserInfo.getter(a1, v2);
}

uint64_t protocol witness for _ObjectiveCBridgeableError.init(_bridgedNSError:) in conformance related decl 'e' for MPCErrorCode(void *a1, uint64_t a2)
{
  uint64_t v4 = lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type related decl 'e' for MPCErrorCode and conformance related decl 'e' for MPCErrorCode, type metadata accessor for related decl 'e' for MPCErrorCode);
  id v5 = a1;

  return _BridgedStoredNSError.init(_bridgedNSError:)(v5, a2, v4);
}

uint64_t protocol witness for Hashable.hashValue.getter in conformance related decl 'e' for MPCErrorCode()
{
  id v1 = *v0;
  uint64_t v2 = NSObject.hashValue.getter();

  return v2;
}

uint64_t protocol witness for Hashable.hash(into:) in conformance related decl 'e' for MPCErrorCode(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type related decl 'e' for MPCErrorCode and conformance related decl 'e' for MPCErrorCode, type metadata accessor for related decl 'e' for MPCErrorCode);

  return _BridgedStoredNSError.hash(into:)(a1, a2, v4);
}

uint64_t protocol witness for static CustomNSError.errorDomain.getter in conformance related decl 'e' for MPCMusicBehaviorErrorCode()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t protocol witness for CustomNSError.errorCode.getter in conformance related decl 'e' for MPCMusicBehaviorErrorCode(uint64_t a1)
{
  uint64_t v2 = lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type related decl 'e' for MPCMusicBehaviorErrorCode and conformance related decl 'e' for MPCMusicBehaviorErrorCode, type metadata accessor for related decl 'e' for MPCMusicBehaviorErrorCode);

  return _BridgedStoredNSError.errorCode.getter(a1, v2);
}

uint64_t protocol witness for CustomNSError.errorUserInfo.getter in conformance related decl 'e' for MPCMusicBehaviorErrorCode(uint64_t a1)
{
  uint64_t v2 = lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type related decl 'e' for MPCMusicBehaviorErrorCode and conformance related decl 'e' for MPCMusicBehaviorErrorCode, type metadata accessor for related decl 'e' for MPCMusicBehaviorErrorCode);

  return _BridgedStoredNSError.errorUserInfo.getter(a1, v2);
}

uint64_t protocol witness for _ObjectiveCBridgeableError.init(_bridgedNSError:) in conformance related decl 'e' for MPCMusicBehaviorErrorCode(void *a1, uint64_t a2)
{
  uint64_t v4 = lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type related decl 'e' for MPCMusicBehaviorErrorCode and conformance related decl 'e' for MPCMusicBehaviorErrorCode, type metadata accessor for related decl 'e' for MPCMusicBehaviorErrorCode);
  id v5 = a1;

  return _BridgedStoredNSError.init(_bridgedNSError:)(v5, a2, v4);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance related decl 'e' for MPCMusicBehaviorErrorCode(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type related decl 'e' for MPCMusicBehaviorErrorCode and conformance related decl 'e' for MPCMusicBehaviorErrorCode, type metadata accessor for related decl 'e' for MPCMusicBehaviorErrorCode);

  return _BridgedStoredNSError.hash(into:)(a1, a2, v4);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance related decl 'e' for MPCPlayerEnqueueErrorCode()
{
  return Hasher._finalize()();
}

uint64_t protocol witness for ExpressibleByArrayLiteral.init(arrayLiteral:) in conformance MPCPlaybackIntentOptions@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = specialized SetAlgebra<>.init(arrayLiteral:)(a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

_DWORD *protocol witness for OptionSet.init(rawValue:) in conformance CGGradientDrawingOptions@<X0>(_DWORD *result@<X0>, _DWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance MGDeviceClass(_DWORD *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t protocol witness for _HasCustomAnyHashableRepresentation._toCustomAnyHashable() in conformance UIApplicationOpenExternalURLOptionsKey()
{
  lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions((unint64_t *)&lazy protocol witness table cache variable for type UIApplicationOpenExternalURLOptionsKey and conformance UIApplicationOpenExternalURLOptionsKey, type metadata accessor for UIApplicationOpenExternalURLOptionsKey);
  lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type UIApplicationOpenExternalURLOptionsKey and conformance UIApplicationOpenExternalURLOptionsKey, type metadata accessor for UIApplicationOpenExternalURLOptionsKey);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t protocol witness for _HasCustomAnyHashableRepresentation._toCustomAnyHashable() in conformance NSNotificationName()
{
  lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type NSNotificationName and conformance NSNotificationName, type metadata accessor for NSNotificationName);
  lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type NSNotificationName and conformance NSNotificationName, type metadata accessor for NSNotificationName);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance ICURLBagKey@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t protocol witness for _HasCustomAnyHashableRepresentation._toCustomAnyHashable() in conformance ICURLBagKey()
{
  lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type ICURLBagKey and conformance ICURLBagKey, type metadata accessor for ICURLBagKey);
  lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type ICURLBagKey and conformance ICURLBagKey, type metadata accessor for ICURLBagKey);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t protocol witness for _HasCustomAnyHashableRepresentation._toCustomAnyHashable() in conformance ICPrivacyIdentifier()
{
  lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type ICPrivacyIdentifier and conformance ICPrivacyIdentifier, type metadata accessor for ICPrivacyIdentifier);
  lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type ICPrivacyIdentifier and conformance ICPrivacyIdentifier, type metadata accessor for ICPrivacyIdentifier);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t protocol witness for Error._domain.getter in conformance related decl 'e' for MPCPlayerEnqueueErrorCode(uint64_t a1)
{
  uint64_t v2 = lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type related decl 'e' for MPCPlayerEnqueueErrorCode and conformance related decl 'e' for MPCPlayerEnqueueErrorCode, type metadata accessor for related decl 'e' for MPCPlayerEnqueueErrorCode);

  return Error<>._domain.getter(a1, v2);
}

uint64_t protocol witness for Error._code.getter in conformance related decl 'e' for MPCPlayerEnqueueErrorCode(uint64_t a1)
{
  uint64_t v2 = lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type related decl 'e' for MPCPlayerEnqueueErrorCode and conformance related decl 'e' for MPCPlayerEnqueueErrorCode, type metadata accessor for related decl 'e' for MPCPlayerEnqueueErrorCode);

  return Error<>._code.getter(a1, v2);
}

uint64_t protocol witness for Error._getEmbeddedNSError() in conformance related decl 'e' for MPCPlayerEnqueueErrorCode(uint64_t a1)
{
  uint64_t v2 = lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type related decl 'e' for MPCPlayerEnqueueErrorCode and conformance related decl 'e' for MPCPlayerEnqueueErrorCode, type metadata accessor for related decl 'e' for MPCPlayerEnqueueErrorCode);

  return _BridgedStoredNSError._getEmbeddedNSError()(a1, v2);
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance related decl 'e' for MPCPlayerEnqueueErrorCode(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type related decl 'e' for MPCPlayerEnqueueErrorCode and conformance related decl 'e' for MPCPlayerEnqueueErrorCode, type metadata accessor for related decl 'e' for MPCPlayerEnqueueErrorCode);

  return static _BridgedStoredNSError.== infix(_:_:)(a1, a2, a3, v6);
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance related decl 'e' for MPCPlayerRequestErrorCode(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type related decl 'e' for MPCPlayerRequestErrorCode and conformance related decl 'e' for MPCPlayerRequestErrorCode, type metadata accessor for related decl 'e' for MPCPlayerRequestErrorCode);

  return static _BridgedStoredNSError.== infix(_:_:)(a1, a2, a3, v6);
}

uint64_t protocol witness for Error._domain.getter in conformance related decl 'e' for MPCErrorCode(uint64_t a1)
{
  uint64_t v2 = lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type related decl 'e' for MPCErrorCode and conformance related decl 'e' for MPCErrorCode, type metadata accessor for related decl 'e' for MPCErrorCode);

  return Error<>._domain.getter(a1, v2);
}

uint64_t protocol witness for Error._code.getter in conformance related decl 'e' for MPCErrorCode(uint64_t a1)
{
  uint64_t v2 = lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type related decl 'e' for MPCErrorCode and conformance related decl 'e' for MPCErrorCode, type metadata accessor for related decl 'e' for MPCErrorCode);

  return Error<>._code.getter(a1, v2);
}

uint64_t protocol witness for Error._getEmbeddedNSError() in conformance related decl 'e' for MPCErrorCode(uint64_t a1)
{
  uint64_t v2 = lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type related decl 'e' for MPCErrorCode and conformance related decl 'e' for MPCErrorCode, type metadata accessor for related decl 'e' for MPCErrorCode);

  return _BridgedStoredNSError._getEmbeddedNSError()(a1, v2);
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance related decl 'e' for MPCErrorCode(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type related decl 'e' for MPCErrorCode and conformance related decl 'e' for MPCErrorCode, type metadata accessor for related decl 'e' for MPCErrorCode);

  return static _BridgedStoredNSError.== infix(_:_:)(a1, a2, a3, v6);
}

uint64_t protocol witness for Error._domain.getter in conformance related decl 'e' for MPCMusicBehaviorErrorCode(uint64_t a1)
{
  uint64_t v2 = lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type related decl 'e' for MPCMusicBehaviorErrorCode and conformance related decl 'e' for MPCMusicBehaviorErrorCode, type metadata accessor for related decl 'e' for MPCMusicBehaviorErrorCode);

  return Error<>._domain.getter(a1, v2);
}

uint64_t protocol witness for Error._code.getter in conformance related decl 'e' for MPCMusicBehaviorErrorCode(uint64_t a1)
{
  uint64_t v2 = lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type related decl 'e' for MPCMusicBehaviorErrorCode and conformance related decl 'e' for MPCMusicBehaviorErrorCode, type metadata accessor for related decl 'e' for MPCMusicBehaviorErrorCode);

  return Error<>._code.getter(a1, v2);
}

uint64_t protocol witness for Error._getEmbeddedNSError() in conformance related decl 'e' for MPCMusicBehaviorErrorCode(uint64_t a1)
{
  uint64_t v2 = lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type related decl 'e' for MPCMusicBehaviorErrorCode and conformance related decl 'e' for MPCMusicBehaviorErrorCode, type metadata accessor for related decl 'e' for MPCMusicBehaviorErrorCode);

  return _BridgedStoredNSError._getEmbeddedNSError()(a1, v2);
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance related decl 'e' for MPCMusicBehaviorErrorCode(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type related decl 'e' for MPCMusicBehaviorErrorCode and conformance related decl 'e' for MPCMusicBehaviorErrorCode, type metadata accessor for related decl 'e' for MPCMusicBehaviorErrorCode);

  return static _BridgedStoredNSError.== infix(_:_:)(a1, a2, a3, v6);
}

uint64_t protocol witness for _HasCustomAnyHashableRepresentation._toCustomAnyHashable() in conformance UIFontDescriptorAttributeName()
{
  lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions((unint64_t *)&lazy protocol witness table cache variable for type UIFontDescriptorAttributeName and conformance UIFontDescriptorAttributeName, type metadata accessor for UIFontDescriptorAttributeName);
  lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type UIFontDescriptorAttributeName and conformance UIFontDescriptorAttributeName, type metadata accessor for UIFontDescriptorAttributeName);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t protocol witness for _HasCustomAnyHashableRepresentation._toCustomAnyHashable() in conformance NSAttributedStringKey()
{
  lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type NSAttributedStringKey and conformance NSAttributedStringKey, type metadata accessor for NSAttributedStringKey);
  lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type NSAttributedStringKey and conformance NSAttributedStringKey, type metadata accessor for NSAttributedStringKey);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t protocol witness for RawRepresentable.init(rawValue:) in conformance UIApplicationOpenExternalURLOptionsKey@<X0>(void *a1@<X8>)
{
  NSString v2 = String._bridgeToObjectiveC()();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t protocol witness for _HasCustomAnyHashableRepresentation._toCustomAnyHashable() in conformance MSVAutoBugCaptureDomain()
{
  lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type MSVAutoBugCaptureDomain and conformance MSVAutoBugCaptureDomain, type metadata accessor for MSVAutoBugCaptureDomain);
  lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type MSVAutoBugCaptureDomain and conformance MSVAutoBugCaptureDomain, type metadata accessor for MSVAutoBugCaptureDomain);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t protocol witness for Hashable.hashValue.getter in conformance ICURLBagKey(uint64_t a1, uint64_t a2)
{
  return protocol witness for _ObjectiveCBridgeable._bridgeToObjectiveC() in conformance UIApplicationOpenExternalURLOptionsKey(a1, a2, (uint64_t (*)(uint64_t))&String.hashValue.getter);
}

uint64_t protocol witness for _ObjectiveCBridgeable._bridgeToObjectiveC() in conformance UIApplicationOpenExternalURLOptionsKey(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t protocol witness for Hashable.hash(into:) in conformance UIApplicationOpenExternalURLOptionsKey()
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance UIApplicationOpenExternalURLOptionsKey()
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  Hasher.init(_seed:)();
  String.hash(into:)();
  Swift::Int v0 = Hasher._finalize()();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance UIApplicationOpenExternalURLOptionsKey()
{
  uint64_t v0 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v2 = v1;
  if (v0 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

unsigned char *partial apply for closure #1 in BagProvider.bag.getter@<X0>(void *a1@<X8>)
{
  return closure #1 in BagProvider.bag.getter(v1, a1);
}

unint64_t lazy protocol witness table accessor for type String and conformance String()
{
  unint64_t result = lazy protocol witness table cache variable for type String and conformance String;
  if (!lazy protocol witness table cache variable for type String and conformance String)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type String and conformance String);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type String and conformance String;
  if (!lazy protocol witness table cache variable for type String and conformance String)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type String and conformance String);
  }
  return result;
}

uint64_t specialized SetAlgebra<>.init(arrayLiteral:)(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  uint64_t result = 0;
  uint64_t v4 = (uint64_t *)(a1 + 32);
  do
  {
    uint64_t v6 = *v4++;
    uint64_t v5 = v6;
    if ((v6 & ~result) == 0) {
      uint64_t v5 = 0;
    }
    result |= v5;
    --v1;
  }
  while (v1);
  return result;
}

uint64_t type metadata accessor for BundleFinder()
{
  return self;
}

{
  return self;
}

void type metadata accessor for CIQRCodeErrorCorrectionLevel(uint64_t a1)
{
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
}

void type metadata accessor for CGImageRef(uint64_t a1)
{
}

void type metadata accessor for MSVAutoBugCaptureDomain(uint64_t a1)
{
}

void type metadata accessor for MRGroupSessionRouteType(uint64_t a1)
{
}

uint64_t getEnumTagSinglePayload for DSPSplitComplex(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 != 1 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2);
  }
  if (*(void *)a1) {
    int v3 = -1;
  }
  else {
    int v3 = 0;
  }
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for DSPSplitComplex(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 1)
  {
    *(void *)__n128 result = a2 - 2;
    *(void *)(result + 8) = 0;
    if (a3 >= 2) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 2) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)__n128 result = 0;
    }
  }
  return result;
}

void type metadata accessor for DSPSplitComplex(uint64_t a1)
{
}

void type metadata accessor for MPCPlayerDirection(uint64_t a1)
{
}

void type metadata accessor for ICPrivacyIdentifier(uint64_t a1)
{
}

void type metadata accessor for UIUserInterfaceSizeClass(uint64_t a1)
{
}

void type metadata accessor for ICMusicSubscriptionStatusType(uint64_t a1)
{
}

void type metadata accessor for ICMusicSubscriptionStatusCapabilities(uint64_t a1)
{
}

void type metadata accessor for UINotificationFeedbackType(uint64_t a1)
{
}

uint64_t getEnumTagSinglePayload for MPCPlayerRequestTracklistRange(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for MPCPlayerRequestTracklistRange(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

void type metadata accessor for MPCPlayerRequestTracklistRange(uint64_t a1)
{
}

void type metadata accessor for ICEnvironmentMonitorThermalPressureLevel(uint64_t a1)
{
}

void type metadata accessor for MPNowPlayingAudioFormatBadging(uint64_t a1)
{
}

void type metadata accessor for ICEnvironmentNetworkType(uint64_t a1)
{
}

void type metadata accessor for ICURLBagKey(uint64_t a1)
{
}

void type metadata accessor for MPCPlayerChangeRequestOptions(uint64_t a1)
{
}

void type metadata accessor for MPCPlayerTracklistReplaceIntent(uint64_t a1)
{
}

void type metadata accessor for MPCPlaybackIntentOptions(uint64_t a1)
{
}

void type metadata accessor for MPCPlaybackIntentRepeatMode(uint64_t a1)
{
}

void type metadata accessor for MPCPlaybackIntentShuffleMode(uint64_t a1)
{
}

void type metadata accessor for MPCExplicitContentAuthorizationReason(uint64_t a1)
{
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for CGRect(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for CGRect(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 32) = v3;
  return result;
}

void type metadata accessor for CGRect(uint64_t a1)
{
}

void type metadata accessor for MPMediaLibraryFilteringOptions(uint64_t a1)
{
}

void type metadata accessor for MPModelStoreBrowseContentItemType(uint64_t a1)
{
}

void type metadata accessor for UIPopoverArrowDirection(uint64_t a1)
{
}

uint64_t base witness table accessor for Equatable in MPMediaLibraryFilteringOptions()
{
  return lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions, type metadata accessor for MPMediaLibraryFilteringOptions);
}

uint64_t base witness table accessor for ExpressibleByArrayLiteral in MPMediaLibraryFilteringOptions()
{
  return lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions, type metadata accessor for MPMediaLibraryFilteringOptions);
}

uint64_t lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t base witness table accessor for RawRepresentable in MPMediaLibraryFilteringOptions()
{
  return lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions, type metadata accessor for MPMediaLibraryFilteringOptions);
}

uint64_t base witness table accessor for SetAlgebra in MPMediaLibraryFilteringOptions()
{
  return lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions, type metadata accessor for MPMediaLibraryFilteringOptions);
}

uint64_t base witness table accessor for Equatable in MPCPlaybackIntentOptions()
{
  return lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type MPCPlaybackIntentOptions and conformance MPCPlaybackIntentOptions, type metadata accessor for MPCPlaybackIntentOptions);
}

uint64_t base witness table accessor for ExpressibleByArrayLiteral in MPCPlaybackIntentOptions()
{
  return lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type MPCPlaybackIntentOptions and conformance MPCPlaybackIntentOptions, type metadata accessor for MPCPlaybackIntentOptions);
}

uint64_t base witness table accessor for RawRepresentable in MPCPlaybackIntentOptions()
{
  return lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type MPCPlaybackIntentOptions and conformance MPCPlaybackIntentOptions, type metadata accessor for MPCPlaybackIntentOptions);
}

uint64_t base witness table accessor for SetAlgebra in MPCPlaybackIntentOptions()
{
  return lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type MPCPlaybackIntentOptions and conformance MPCPlaybackIntentOptions, type metadata accessor for MPCPlaybackIntentOptions);
}

uint64_t base witness table accessor for Equatable in MPCPlayerChangeRequestOptions()
{
  return lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type MPCPlayerChangeRequestOptions and conformance MPCPlayerChangeRequestOptions, type metadata accessor for MPCPlayerChangeRequestOptions);
}

uint64_t base witness table accessor for ExpressibleByArrayLiteral in MPCPlayerChangeRequestOptions()
{
  return lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type MPCPlayerChangeRequestOptions and conformance MPCPlayerChangeRequestOptions, type metadata accessor for MPCPlayerChangeRequestOptions);
}

uint64_t base witness table accessor for RawRepresentable in MPCPlayerChangeRequestOptions()
{
  return lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type MPCPlayerChangeRequestOptions and conformance MPCPlayerChangeRequestOptions, type metadata accessor for MPCPlayerChangeRequestOptions);
}

uint64_t base witness table accessor for SetAlgebra in MPCPlayerChangeRequestOptions()
{
  return lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type MPCPlayerChangeRequestOptions and conformance MPCPlayerChangeRequestOptions, type metadata accessor for MPCPlayerChangeRequestOptions);
}

uint64_t base witness table accessor for RawRepresentable in ICURLBagKey()
{
  return lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type ICURLBagKey and conformance ICURLBagKey, type metadata accessor for ICURLBagKey);
}

uint64_t base witness table accessor for _HasCustomAnyHashableRepresentation in ICURLBagKey()
{
  return lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type ICURLBagKey and conformance ICURLBagKey, type metadata accessor for ICURLBagKey);
}

uint64_t base witness table accessor for Equatable in ICURLBagKey()
{
  return lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type ICURLBagKey and conformance ICURLBagKey, type metadata accessor for ICURLBagKey);
}

uint64_t base witness table accessor for Equatable in ICMusicSubscriptionStatusCapabilities()
{
  return lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type ICMusicSubscriptionStatusCapabilities and conformance ICMusicSubscriptionStatusCapabilities, type metadata accessor for ICMusicSubscriptionStatusCapabilities);
}

uint64_t base witness table accessor for ExpressibleByArrayLiteral in ICMusicSubscriptionStatusCapabilities()
{
  return lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type ICMusicSubscriptionStatusCapabilities and conformance ICMusicSubscriptionStatusCapabilities, type metadata accessor for ICMusicSubscriptionStatusCapabilities);
}

uint64_t base witness table accessor for RawRepresentable in ICMusicSubscriptionStatusCapabilities()
{
  return lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type ICMusicSubscriptionStatusCapabilities and conformance ICMusicSubscriptionStatusCapabilities, type metadata accessor for ICMusicSubscriptionStatusCapabilities);
}

uint64_t base witness table accessor for SetAlgebra in ICMusicSubscriptionStatusCapabilities()
{
  return lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type ICMusicSubscriptionStatusCapabilities and conformance ICMusicSubscriptionStatusCapabilities, type metadata accessor for ICMusicSubscriptionStatusCapabilities);
}

uint64_t base witness table accessor for RawRepresentable in ICPrivacyIdentifier()
{
  return lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type ICPrivacyIdentifier and conformance ICPrivacyIdentifier, type metadata accessor for ICPrivacyIdentifier);
}

uint64_t base witness table accessor for _HasCustomAnyHashableRepresentation in ICPrivacyIdentifier()
{
  return lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type ICPrivacyIdentifier and conformance ICPrivacyIdentifier, type metadata accessor for ICPrivacyIdentifier);
}

uint64_t base witness table accessor for Equatable in ICPrivacyIdentifier()
{
  return lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type ICPrivacyIdentifier and conformance ICPrivacyIdentifier, type metadata accessor for ICPrivacyIdentifier);
}

uint64_t base witness table accessor for RawRepresentable in MSVAutoBugCaptureDomain()
{
  return lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type MSVAutoBugCaptureDomain and conformance MSVAutoBugCaptureDomain, type metadata accessor for MSVAutoBugCaptureDomain);
}

uint64_t base witness table accessor for _HasCustomAnyHashableRepresentation in MSVAutoBugCaptureDomain()
{
  return lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type MSVAutoBugCaptureDomain and conformance MSVAutoBugCaptureDomain, type metadata accessor for MSVAutoBugCaptureDomain);
}

uint64_t base witness table accessor for Equatable in MSVAutoBugCaptureDomain()
{
  return lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type MSVAutoBugCaptureDomain and conformance MSVAutoBugCaptureDomain, type metadata accessor for MSVAutoBugCaptureDomain);
}

uint64_t outlined init with take of URL?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t outlined init with copy of URL?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of URL?(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
}

void type metadata accessor for related decl 'e' for MPCMusicBehaviorErrorCode(uint64_t a1)
{
}

void type metadata accessor for MPCPlayerRequestErrorCode(uint64_t a1)
{
}

void type metadata accessor for MPCPlayerEnqueueErrorCode(uint64_t a1)
{
}

void type metadata accessor for CFStringRef(uint64_t a1)
{
}

void type metadata accessor for MPModelCuratorKind(uint64_t a1)
{
}

void type metadata accessor for MPCSharedListeningSessionEventKind(uint64_t a1)
{
}

void type metadata accessor for MPCSharedListeningPlaybackEventKind(uint64_t a1)
{
}

void type metadata accessor for MPCSharedListeningEventType(uint64_t a1)
{
}

void type metadata accessor for related decl 'e' for MPCErrorCode(uint64_t a1)
{
}

void type metadata accessor for UIApplicationOpenExternalURLOptionsKey(uint64_t a1)
{
}

void type metadata accessor for NSAttributedStringKey(uint64_t a1)
{
}

void type metadata accessor for UIFontDescriptorAttributeName(uint64_t a1)
{
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for CGAffineTransform(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 48)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for CGAffineTransform(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 48) = v3;
  return result;
}

void type metadata accessor for CGAffineTransform(uint64_t a1)
{
}

void type metadata accessor for CGColorRef(uint64_t a1)
{
}

void type metadata accessor for related decl 'e' for MPCPlayerEnqueueErrorCode(uint64_t a1)
{
}

void type metadata accessor for related decl 'e' for MPCPlayerRequestErrorCode(uint64_t a1)
{
}

void type metadata accessor for NSNotificationName(uint64_t a1)
{
}

void *__swift_memcpy8_4(void *result, void *a2)
{
  *__n128 result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for DSPComplex(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for DSPComplex(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 8) = v3;
  return result;
}

void type metadata accessor for DSPComplex(uint64_t a1)
{
}

void type metadata accessor for CGPoint(uint64_t a1)
{
}

uint64_t base witness table accessor for RawRepresentable in NSNotificationName()
{
  return lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type NSNotificationName and conformance NSNotificationName, type metadata accessor for NSNotificationName);
}

uint64_t base witness table accessor for _HasCustomAnyHashableRepresentation in NSNotificationName()
{
  return lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type NSNotificationName and conformance NSNotificationName, type metadata accessor for NSNotificationName);
}

uint64_t base witness table accessor for Equatable in NSNotificationName()
{
  return lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type NSNotificationName and conformance NSNotificationName, type metadata accessor for NSNotificationName);
}

uint64_t base witness table accessor for Equatable in related decl 'e' for MPCPlayerRequestErrorCode()
{
  return lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type related decl 'e' for MPCPlayerRequestErrorCode and conformance related decl 'e' for MPCPlayerRequestErrorCode, type metadata accessor for related decl 'e' for MPCPlayerRequestErrorCode);
}

uint64_t base witness table accessor for Error in related decl 'e' for MPCPlayerRequestErrorCode()
{
  return lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type related decl 'e' for MPCPlayerRequestErrorCode and conformance related decl 'e' for MPCPlayerRequestErrorCode, type metadata accessor for related decl 'e' for MPCPlayerRequestErrorCode);
}

uint64_t base witness table accessor for Equatable in related decl 'e' for MPCPlayerEnqueueErrorCode()
{
  return lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type related decl 'e' for MPCPlayerEnqueueErrorCode and conformance related decl 'e' for MPCPlayerEnqueueErrorCode, type metadata accessor for related decl 'e' for MPCPlayerEnqueueErrorCode);
}

uint64_t base witness table accessor for Error in related decl 'e' for MPCPlayerEnqueueErrorCode()
{
  return lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type related decl 'e' for MPCPlayerEnqueueErrorCode and conformance related decl 'e' for MPCPlayerEnqueueErrorCode, type metadata accessor for related decl 'e' for MPCPlayerEnqueueErrorCode);
}

uint64_t base witness table accessor for RawRepresentable in UIFontDescriptorAttributeName()
{
  return lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type UIFontDescriptorAttributeName and conformance UIFontDescriptorAttributeName, type metadata accessor for UIFontDescriptorAttributeName);
}

uint64_t base witness table accessor for _HasCustomAnyHashableRepresentation in UIFontDescriptorAttributeName()
{
  return lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type UIFontDescriptorAttributeName and conformance UIFontDescriptorAttributeName, type metadata accessor for UIFontDescriptorAttributeName);
}

uint64_t base witness table accessor for RawRepresentable in NSAttributedStringKey()
{
  return lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type NSAttributedStringKey and conformance NSAttributedStringKey, type metadata accessor for NSAttributedStringKey);
}

uint64_t base witness table accessor for _HasCustomAnyHashableRepresentation in NSAttributedStringKey()
{
  return lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type NSAttributedStringKey and conformance NSAttributedStringKey, type metadata accessor for NSAttributedStringKey);
}

uint64_t base witness table accessor for Equatable in NSAttributedStringKey()
{
  return lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type NSAttributedStringKey and conformance NSAttributedStringKey, type metadata accessor for NSAttributedStringKey);
}

uint64_t base witness table accessor for RawRepresentable in UIApplicationOpenExternalURLOptionsKey()
{
  return lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type UIApplicationOpenExternalURLOptionsKey and conformance UIApplicationOpenExternalURLOptionsKey, type metadata accessor for UIApplicationOpenExternalURLOptionsKey);
}

uint64_t base witness table accessor for _HasCustomAnyHashableRepresentation in UIApplicationOpenExternalURLOptionsKey()
{
  return lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type UIApplicationOpenExternalURLOptionsKey and conformance UIApplicationOpenExternalURLOptionsKey, type metadata accessor for UIApplicationOpenExternalURLOptionsKey);
}

uint64_t base witness table accessor for Equatable in related decl 'e' for MPCErrorCode()
{
  return lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type related decl 'e' for MPCErrorCode and conformance related decl 'e' for MPCErrorCode, type metadata accessor for related decl 'e' for MPCErrorCode);
}

uint64_t base witness table accessor for Error in related decl 'e' for MPCErrorCode()
{
  return lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type related decl 'e' for MPCErrorCode and conformance related decl 'e' for MPCErrorCode, type metadata accessor for related decl 'e' for MPCErrorCode);
}

uint64_t base witness table accessor for Equatable in CFStringRef()
{
  return lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type CFStringRef and conformance CFStringRef, type metadata accessor for CFStringRef);
}

uint64_t base witness table accessor for Equatable in related decl 'e' for MPCMusicBehaviorErrorCode()
{
  return lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type related decl 'e' for MPCMusicBehaviorErrorCode and conformance related decl 'e' for MPCMusicBehaviorErrorCode, type metadata accessor for related decl 'e' for MPCMusicBehaviorErrorCode);
}

uint64_t base witness table accessor for Error in related decl 'e' for MPCMusicBehaviorErrorCode()
{
  return lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type related decl 'e' for MPCMusicBehaviorErrorCode and conformance related decl 'e' for MPCMusicBehaviorErrorCode, type metadata accessor for related decl 'e' for MPCMusicBehaviorErrorCode);
}

uint64_t base witness table accessor for CustomNSError in related decl 'e' for MPCMusicBehaviorErrorCode()
{
  return lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type related decl 'e' for MPCMusicBehaviorErrorCode and conformance related decl 'e' for MPCMusicBehaviorErrorCode, type metadata accessor for related decl 'e' for MPCMusicBehaviorErrorCode);
}

uint64_t base witness table accessor for _ObjectiveCBridgeableError in related decl 'e' for MPCMusicBehaviorErrorCode()
{
  return lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type related decl 'e' for MPCMusicBehaviorErrorCode and conformance related decl 'e' for MPCMusicBehaviorErrorCode, type metadata accessor for related decl 'e' for MPCMusicBehaviorErrorCode);
}

uint64_t base witness table accessor for Hashable in related decl 'e' for MPCMusicBehaviorErrorCode()
{
  return lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type related decl 'e' for MPCMusicBehaviorErrorCode and conformance related decl 'e' for MPCMusicBehaviorErrorCode, type metadata accessor for related decl 'e' for MPCMusicBehaviorErrorCode);
}

uint64_t associated type witness table accessor for _BridgedStoredNSError.Code : _ErrorCodeProtocol in related decl 'e' for MPCMusicBehaviorErrorCode()
{
  return lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type MPCMusicBehaviorErrorCode and conformance MPCMusicBehaviorErrorCode, type metadata accessor for MPCMusicBehaviorErrorCode);
}

void type metadata accessor for MPCMusicBehaviorErrorCode(uint64_t a1)
{
}

uint64_t associated type witness table accessor for _BridgedStoredNSError.Code : RawRepresentable in related decl 'e' for MPCMusicBehaviorErrorCode()
{
  return lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type MPCMusicBehaviorErrorCode and conformance MPCMusicBehaviorErrorCode, type metadata accessor for MPCMusicBehaviorErrorCode);
}

unint64_t lazy protocol witness table accessor for type Int and conformance Int()
{
  unint64_t result = lazy protocol witness table cache variable for type Int and conformance Int;
  if (!lazy protocol witness table cache variable for type Int and conformance Int)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Int and conformance Int);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type Int and conformance Int;
  if (!lazy protocol witness table cache variable for type Int and conformance Int)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Int and conformance Int);
  }
  return result;
}

uint64_t base witness table accessor for Equatable in MPCMusicBehaviorErrorCode()
{
  return lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type MPCMusicBehaviorErrorCode and conformance MPCMusicBehaviorErrorCode, type metadata accessor for MPCMusicBehaviorErrorCode);
}

uint64_t associated type witness table accessor for _ErrorCodeProtocol._ErrorType : _BridgedStoredNSError in MPCMusicBehaviorErrorCode()
{
  return lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type related decl 'e' for MPCMusicBehaviorErrorCode and conformance related decl 'e' for MPCMusicBehaviorErrorCode, type metadata accessor for related decl 'e' for MPCMusicBehaviorErrorCode);
}

uint64_t base witness table accessor for Equatable in MPCPlayerRequestErrorCode()
{
  return lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type MPCPlayerRequestErrorCode and conformance MPCPlayerRequestErrorCode, type metadata accessor for MPCPlayerRequestErrorCode);
}

uint64_t associated type witness table accessor for _ErrorCodeProtocol._ErrorType : _BridgedStoredNSError in MPCPlayerRequestErrorCode()
{
  return lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type related decl 'e' for MPCPlayerRequestErrorCode and conformance related decl 'e' for MPCPlayerRequestErrorCode, type metadata accessor for related decl 'e' for MPCPlayerRequestErrorCode);
}

uint64_t base witness table accessor for Equatable in MPCPlayerEnqueueErrorCode()
{
  return lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type MPCPlayerEnqueueErrorCode and conformance MPCPlayerEnqueueErrorCode, type metadata accessor for MPCPlayerEnqueueErrorCode);
}

uint64_t associated type witness table accessor for _ErrorCodeProtocol._ErrorType : _BridgedStoredNSError in MPCPlayerEnqueueErrorCode()
{
  return lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type related decl 'e' for MPCPlayerEnqueueErrorCode and conformance related decl 'e' for MPCPlayerEnqueueErrorCode, type metadata accessor for related decl 'e' for MPCPlayerEnqueueErrorCode);
}

uint64_t base witness table accessor for Hashable in CFStringRef()
{
  return lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type CFStringRef and conformance CFStringRef, type metadata accessor for CFStringRef);
}

uint64_t base witness table accessor for CustomNSError in related decl 'e' for MPCErrorCode()
{
  return lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type related decl 'e' for MPCErrorCode and conformance related decl 'e' for MPCErrorCode, type metadata accessor for related decl 'e' for MPCErrorCode);
}

uint64_t base witness table accessor for _ObjectiveCBridgeableError in related decl 'e' for MPCErrorCode()
{
  return lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type related decl 'e' for MPCErrorCode and conformance related decl 'e' for MPCErrorCode, type metadata accessor for related decl 'e' for MPCErrorCode);
}

uint64_t base witness table accessor for Hashable in related decl 'e' for MPCErrorCode()
{
  return lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type related decl 'e' for MPCErrorCode and conformance related decl 'e' for MPCErrorCode, type metadata accessor for related decl 'e' for MPCErrorCode);
}

uint64_t associated type witness table accessor for _BridgedStoredNSError.Code : _ErrorCodeProtocol in related decl 'e' for MPCErrorCode()
{
  return lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type MPCErrorCode and conformance MPCErrorCode, type metadata accessor for MPCErrorCode);
}

void type metadata accessor for MPCErrorCode(uint64_t a1)
{
}

void type metadata accessor for CIQRCodeErrorCorrectionLevel(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t associated type witness table accessor for _BridgedStoredNSError.Code : RawRepresentable in related decl 'e' for MPCErrorCode()
{
  return lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type MPCErrorCode and conformance MPCErrorCode, type metadata accessor for MPCErrorCode);
}

uint64_t base witness table accessor for Equatable in MPCErrorCode()
{
  return lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type MPCErrorCode and conformance MPCErrorCode, type metadata accessor for MPCErrorCode);
}

uint64_t associated type witness table accessor for _ErrorCodeProtocol._ErrorType : _BridgedStoredNSError in MPCErrorCode()
{
  return lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type related decl 'e' for MPCErrorCode and conformance related decl 'e' for MPCErrorCode, type metadata accessor for related decl 'e' for MPCErrorCode);
}

uint64_t base witness table accessor for Equatable in UIApplicationOpenExternalURLOptionsKey()
{
  return lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type UIApplicationOpenExternalURLOptionsKey and conformance UIApplicationOpenExternalURLOptionsKey, type metadata accessor for UIApplicationOpenExternalURLOptionsKey);
}

uint64_t base witness table accessor for Equatable in UIFontDescriptorAttributeName()
{
  return lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type UIFontDescriptorAttributeName and conformance UIFontDescriptorAttributeName, type metadata accessor for UIFontDescriptorAttributeName);
}

uint64_t base witness table accessor for CustomNSError in related decl 'e' for MPCPlayerEnqueueErrorCode()
{
  return lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type related decl 'e' for MPCPlayerEnqueueErrorCode and conformance related decl 'e' for MPCPlayerEnqueueErrorCode, type metadata accessor for related decl 'e' for MPCPlayerEnqueueErrorCode);
}

uint64_t base witness table accessor for _ObjectiveCBridgeableError in related decl 'e' for MPCPlayerEnqueueErrorCode()
{
  return lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type related decl 'e' for MPCPlayerEnqueueErrorCode and conformance related decl 'e' for MPCPlayerEnqueueErrorCode, type metadata accessor for related decl 'e' for MPCPlayerEnqueueErrorCode);
}

uint64_t base witness table accessor for Hashable in related decl 'e' for MPCPlayerEnqueueErrorCode()
{
  return lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type related decl 'e' for MPCPlayerEnqueueErrorCode and conformance related decl 'e' for MPCPlayerEnqueueErrorCode, type metadata accessor for related decl 'e' for MPCPlayerEnqueueErrorCode);
}

uint64_t associated type witness table accessor for _BridgedStoredNSError.Code : _ErrorCodeProtocol in related decl 'e' for MPCPlayerEnqueueErrorCode()
{
  return lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type MPCPlayerEnqueueErrorCode and conformance MPCPlayerEnqueueErrorCode, type metadata accessor for MPCPlayerEnqueueErrorCode);
}

uint64_t associated type witness table accessor for _BridgedStoredNSError.Code : RawRepresentable in related decl 'e' for MPCPlayerEnqueueErrorCode()
{
  return lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type MPCPlayerEnqueueErrorCode and conformance MPCPlayerEnqueueErrorCode, type metadata accessor for MPCPlayerEnqueueErrorCode);
}

uint64_t base witness table accessor for CustomNSError in related decl 'e' for MPCPlayerRequestErrorCode()
{
  return lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type related decl 'e' for MPCPlayerRequestErrorCode and conformance related decl 'e' for MPCPlayerRequestErrorCode, type metadata accessor for related decl 'e' for MPCPlayerRequestErrorCode);
}

uint64_t base witness table accessor for _ObjectiveCBridgeableError in related decl 'e' for MPCPlayerRequestErrorCode()
{
  return lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type related decl 'e' for MPCPlayerRequestErrorCode and conformance related decl 'e' for MPCPlayerRequestErrorCode, type metadata accessor for related decl 'e' for MPCPlayerRequestErrorCode);
}

uint64_t base witness table accessor for Hashable in related decl 'e' for MPCPlayerRequestErrorCode()
{
  return lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type related decl 'e' for MPCPlayerRequestErrorCode and conformance related decl 'e' for MPCPlayerRequestErrorCode, type metadata accessor for related decl 'e' for MPCPlayerRequestErrorCode);
}

uint64_t associated type witness table accessor for _BridgedStoredNSError.Code : _ErrorCodeProtocol in related decl 'e' for MPCPlayerRequestErrorCode()
{
  return lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions(&lazy protocol witness table cache variable for type MPCPlayerRequestErrorCode and conformance MPCPlayerRequestErrorCode, type metadata accessor for MPCPlayerRequestErrorCode);
}

uint64_t associated type witness table accessor for _BridgedStoredNSError.Code : RawRepresentable in related decl 'e' for MPCPlayerRequestErrorCode()
{
  return lazy protocol witness table accessor for type MPMediaLibraryFilteringOptions and conformance MPMediaLibraryFilteringOptions((unint64_t *)&lazy protocol witness table cache variable for type MPCPlayerRequestErrorCode and conformance MPCPlayerRequestErrorCode, type metadata accessor for MPCPlayerRequestErrorCode);
}

uint64_t static Actions.ReportConcern.action(context:)@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  char v2 = *a1;
  uint64_t v3 = *((void *)a1 + 1);
  uint64_t v4 = *((void *)a1 + 6);
  *(unsigned char *)a2 = *a1;
  *(void *)(a2 + 8) = v3;
  long long v5 = *((_OWORD *)a1 + 2);
  *(_OWORD *)(a2 + 16) = *((_OWORD *)a1 + 1);
  *(_OWORD *)(a2 + 32) = v5;
  *(void *)(a2 + 48) = v4;
  *(unsigned char *)(a2 + 56) = v2;
  *(void *)(a2 + 64) = closure #1 in static Actions.ReportConcern.action(context:);
  *(void *)(a2 + 72) = 0;
  *(void *)(a2 + 80) = 0x4014000000000000;
  *(void *)(a2 + 88) = &async function pointer to closure #2 in static Actions.ReportConcern.action(context:);
  *(void *)(a2 + 96) = 0;
  *(void *)(a2 + 104) = &async function pointer to closure #3 in static Actions.ReportConcern.action(context:);
  *(void *)(a2 + 112) = 0;
  swift_retain();
  swift_retain();

  return swift_retain();
}

uint64_t closure #1 in static Actions.ReportConcern.action(context:)(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 8))();
}

uint64_t closure #2 in static Actions.ReportConcern.action(context:)(uint64_t a1, uint64_t a2)
{
  long long v5 = (uint64_t (*)(void))(*(void *)(a2 + 24) + **(int **)(a2 + 24));
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v3;
  *uint64_t v3 = v2;
  v3[1] = partial apply for closure #1 in static MusicEngagementExtension.performRequest(with:completion:);
  return v5();
}

uint64_t closure #3 in static Actions.ReportConcern.action(context:)(uint64_t a1)
{
  uint64_t v4 = (uint64_t (*)(void))(*(void *)(a1 + 40) + **(int **)(a1 + 40));
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = closure #3 in static Actions.ReportConcern.action(context:);
  return v4();
}

uint64_t (*Actions.ReportConcern.Context.menuItemImage.getter())()
{
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = 0xD000000000000016;
  *(void *)(v0 + 24) = 0x8000000100467A30;
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = 0xD000000000000016;
  *(void *)(v1 + 24) = 0x8000000100467A30;
  return partial apply for closure #1 in ActionMenuItemImage.init(systemName:);
}

uint64_t (*protocol witness for ActionMenuItemConfiguring.menuItemImage.getter in conformance Actions.ReportConcern.Context())()
{
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = 0xD000000000000016;
  *(void *)(v0 + 24) = 0x8000000100467A30;
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = 0xD000000000000016;
  *(void *)(v1 + 24) = 0x8000000100467A30;
  return closure #1 in ActionMenuItemImage.init(systemName:)partial apply;
}

uint64_t Actions.ReportConcern.Context.init(contentID:contentType:actionType:canReportConcern:reportConcern:metricsReportingContext:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v16 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?)
                  - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v18 = (*(void *)(v16 + 64) + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v19 = swift_allocObject();
  uint64_t result = outlined init with take of Actions.MetricsReportingContext?(a11, v19 + v17);
  id v21 = (void *)(v19 + v18);
  void *v21 = a1;
  v21[1] = a2;
  id v22 = (void *)(v19 + ((v18 + 23) & 0xFFFFFFFFFFFFFFF8));
  void *v22 = a3;
  v22[1] = a4;
  *(unsigned char *)a9 = a5;
  *(void *)(a9 + 8) = a6;
  *(void *)(a9 + 16) = a7;
  *(void *)(a9 + 24) = a8;
  *(void *)(a9 + 32) = a10;
  *(void *)(a9 + 40) = &async function pointer to partial apply for closure #1 in Actions.ReportConcern.Context.init(contentID:contentType:actionType:canReportConcern:reportConcern:metricsReportingContext:);
  *(void *)(a9 + 48) = v19;
  return result;
}

uint64_t closure #1 in Actions.ReportConcern.Context.init(contentID:contentType:actionType:canReportConcern:reportConcern:metricsReportingContext:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[15] = a4;
  v5[16] = a5;
  v5[13] = a2;
  v5[14] = a3;
  v5[12] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  v5[17] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  v5[18] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for Actions.MetricsReportingContext();
  v5[19] = v6;
  v5[20] = *(void *)(v6 - 8);
  v5[21] = swift_task_alloc();
  return _swift_task_switch(closure #1 in Actions.ReportConcern.Context.init(contentID:contentType:actionType:canReportConcern:reportConcern:metricsReportingContext:), 0, 0);
}

uint64_t closure #1 in Actions.ReportConcern.Context.init(contentID:contentType:actionType:canReportConcern:reportConcern:metricsReportingContext:)()
{
  uint64_t v1 = *(void *)(v0 + 152);
  uint64_t v2 = *(void *)(v0 + 160);
  uint64_t v3 = *(void *)(v0 + 144);
  outlined init with copy of Actions.MetricsReportingContext?(*(void *)(v0 + 96), v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    outlined destroy of TaskPriority?(*(void *)(v0 + 144), &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
  else
  {
    uint64_t v6 = *(void *)(v0 + 136);
    uint64_t v8 = *(void *)(v0 + 120);
    uint64_t v7 = *(void *)(v0 + 128);
    outlined init with take of Actions.MetricsReportingContext(*(void *)(v0 + 144), *(void *)(v0 + 168));
    uint64_t v9 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v6, 1, 1, v9);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<MetricsEvent.Click.ActionDetails.Key>);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100493D00;
    *(void *)(inited + 32) = v8;
    *(void *)(inited + 40) = v7;
    *(unsigned char *)(inited + 48) = 0;
    *(_OWORD *)(inited + 56) = xmmword_100493D10;
    *(unsigned char *)(inited + 72) = 3;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 176) = specialized MetricsEvent.Click.ActionDetails.init(_:)(inited);
    *(void *)(v0 + 184) = v11;
    *(void *)(v0 + 192) = v12;
    *(_WORD *)(v0 + 208) = v13;
    swift_setDeallocating();
    swift_arrayDestroy();
    type metadata accessor for MainActor();
    *(void *)(v0 + 200) = static MainActor.shared.getter();
    uint64_t v15 = dispatch thunk of Actor.unownedExecutor.getter();
    return _swift_task_switch(closure #1 in Actions.ReportConcern.Context.init(contentID:contentType:actionType:canReportConcern:reportConcern:metricsReportingContext:), v15, v14);
  }
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  uint64_t v1 = *(void *)(v0 + 192);
  uint64_t v3 = *(void **)(v0 + 176);
  uint64_t v2 = *(void *)(v0 + 184);
  uint64_t v4 = *(uint64_t **)(v0 + 168);
  uint64_t v5 = *(void *)(v0 + 136);
  uint64_t v7 = *(void *)(v0 + 104);
  uint64_t v6 = *(void *)(v0 + 112);
  uint64_t v8 = *(unsigned __int16 *)(v0 + 208);
  swift_release();
  specialized static Actions.reportClickEvent(targetIdentifier:targetType:actionType:actionURL:actionDetails:reportingContext:)(v7, v6, 5, 32, v5, v3, v2, v1, v8, v4);
  outlined consume of MetricsEvent.Click.ActionDetails(v3, v2, v1, v8, SBYTE1(v8));
  outlined destroy of TaskPriority?(v5, &demangling cache variable for type metadata for URL?);
  return _swift_task_switch(closure #1 in Actions.ReportConcern.Context.init(contentID:contentType:actionType:canReportConcern:reportConcern:metricsReportingContext:), 0, 0);
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  outlined destroy of Actions.MetricsReportingContext(*(void *)(v0 + 168));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t specialized Actions.ReportConcern.Context.menuItemTitle.getter()
{
  uint64_t v0 = type metadata accessor for Locale();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = type metadata accessor for String.LocalizationValue();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  uint64_t v5 = &v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v3);
  uint64_t v7 = &v11[-v6];
  String.LocalizationValue.init(stringLiteral:)();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v2 + 16))(v5, v7, v1);
  if (one-time initialization token for module != -1) {
    swift_once();
  }
  id v8 = (id)static NSBundle.module;
  static Locale.current.getter();
  uint64_t v9 = String.init(localized:table:bundle:locale:comment:)();
  (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v7, v1);
  return v9;
}

uint64_t sub_100012730()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in ActionMenuItemImage.init(systemName:)()
{
  return closure #1 in ActionMenuItemImage.init(systemName:)();
}

id partial apply for closure #2 in ActionMenuItemImage.init(systemName:)()
{
  return closure #2 in ActionMenuItemImage.init(systemName:)(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_100012778()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?)
                 - 8);
  uint64_t v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  uint64_t v3 = type metadata accessor for Actions.MetricsReportingContext();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 48))(v2, 1, v3))
  {
    if (*(void *)(v2 + 8) >= 0xBuLL) {
      swift_bridgeObjectRelease();
    }
    uint64_t v4 = v2 + *(int *)(v3 + 20);
    uint64_t v5 = type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v6 = v4 + *(int *)(v5 + 24);
      uint64_t v7 = type metadata accessor for URL();
      uint64_t v9 = *(void *)(v7 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v6, 1, v7)) {
        (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v6, v7);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t outlined init with take of Actions.MetricsReportingContext?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t partial apply for closure #1 in Actions.ReportConcern.Context.init(contentID:contentType:actionType:canReportConcern:reportConcern:metricsReportingContext:)()
{
  uint64_t v2 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?)
                 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = v0 + v3;
  uint64_t v6 = *(void *)(v0 + v4);
  uint64_t v7 = *(void *)(v0 + v4 + 8);
  id v8 = (uint64_t *)(v0 + ((v4 + 23) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v9 = *v8;
  uint64_t v10 = v8[1];
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v11;
  *uint64_t v11 = v1;
  v11[1] = partial apply for closure #1 in static MusicEngagementExtension.performRequest(with:completion:);
  return closure #1 in Actions.ReportConcern.Context.init(contentID:contentType:actionType:canReportConcern:reportConcern:metricsReportingContext:)(v5, v6, v7, v9, v10);
}

unint64_t lazy protocol witness table accessor for type ActionType and conformance ActionType()
{
  unint64_t result = lazy protocol witness table cache variable for type ActionType and conformance ActionType;
  if (!lazy protocol witness table cache variable for type ActionType and conformance ActionType)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ActionType and conformance ActionType);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ActionType and conformance ActionType;
  if (!lazy protocol witness table cache variable for type ActionType and conformance ActionType)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ActionType and conformance ActionType);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ActionType and conformance ActionType;
  if (!lazy protocol witness table cache variable for type ActionType and conformance ActionType)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ActionType and conformance ActionType);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ActionType and conformance ActionType;
  if (!lazy protocol witness table cache variable for type ActionType and conformance ActionType)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ActionType and conformance ActionType);
  }
  return result;
}

ValueMetadata *type metadata accessor for Actions.ReportConcern()
{
  return &type metadata for Actions.ReportConcern;
}

uint64_t destroy for Actions.ReportConcern.Context()
{
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for Actions.ReportConcern.Context(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 48);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  *(void *)(a1 + 48) = v3;
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for Actions.ReportConcern.Context(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_retain();
  swift_release();
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_retain();
  swift_release();
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for Actions.ReportConcern.Context(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for Actions.ReportConcern.Context(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Actions.ReportConcern.Context(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Actions.ReportConcern.Context()
{
  return &type metadata for Actions.ReportConcern.Context;
}

uint64_t outlined init with copy of Actions.MetricsReportingContext?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined init with take of Actions.MetricsReportingContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Actions.MetricsReportingContext();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void *outlined consume of MetricsEvent.Click.ActionDetails(void *result, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5 == 3 || a5 == 2) {
    return (void *)swift_bridgeObjectRelease();
  }
  if (a5 == 1) {
    return outlined consume of MetricsEvent.Click.ActionDetails.SearchSource(result);
  }
  return result;
}

void *outlined consume of MetricsEvent.Click.ActionDetails.SearchSource(void *result)
{
  if (result)
  {

    return (void *)swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t outlined destroy of Actions.MetricsReportingContext(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Actions.MetricsReportingContext();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t static Actions.AddToLibrary.action(context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *(void *)(a1 + 40);
  *(void *)a2 = *(void *)a1;
  *(_OWORD *)(a2 + 8) = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(a1 + 24);
  *(void *)(a2 + 40) = v2;
  *(unsigned char *)(a2 + 48) = 0;
  *(void *)(a2 + 56) = closure #1 in static Actions.AddToLibrary.action(context:);
  *(void *)(a2 + 64) = 0;
  *(void *)(a2 + 72) = 0x4014000000000000;
  *(void *)(a2 + 80) = &async function pointer to closure #2 in static Actions.AddToLibrary.action(context:);
  *(void *)(a2 + 88) = 0;
  *(void *)(a2 + 96) = &async function pointer to closure #3 in static Actions.AddToLibrary.action(context:);
  *(void *)(a2 + 104) = 0;
  swift_retain();
  swift_retain();

  return swift_retain();
}

uint64_t closure #1 in static Actions.AddToLibrary.action(context:)(uint64_t (**a1)(void))
{
  return (*a1)();
}

uint64_t closure #2 in static Actions.AddToLibrary.action(context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (uint64_t (*)(void))(*(void *)(a2 + 16) + **(int **)(a2 + 16));
  long long v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v3;
  *long long v3 = v2;
  v3[1] = partial apply for closure #1 in static MusicEngagementExtension.performRequest(with:completion:);
  return v5();
}

uint64_t closure #3 in static Actions.AddToLibrary.action(context:)(uint64_t a1)
{
  uint64_t v4 = (uint64_t (*)(void))(*(void *)(a1 + 32) + **(int **)(a1 + 32));
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = closure #3 in static Actions.ReportConcern.action(context:);
  return v4();
}

uint64_t Actions.AddToLibrary.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:observer:metricsReportingContext:)@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, long long *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t (**a9)()@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v49 = a4;
  uint64_t v50 = a8;
  uint64_t v46 = a7;
  uint64_t v47 = a5;
  uint64_t v53 = a2;
  uint64_t v54 = a6;
  id v48 = a3;
  unint64_t v42 = a1;
  uint64_t v51 = a9;
  uint64_t v52 = a11;
  uint64_t v12 = *(void *)(a10 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  uint64_t v45 = a12;
  uint64_t v14 = __chkstk_darwin(a1);
  uint64_t v15 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = v15;
  __chkstk_darwin(v14);
  unint64_t v17 = (char *)&v41 - v16;
  (*(void (**)(char *))(v12 + 16))((char *)&v41 - v16);
  uint64_t v18 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v19 = (v18 + 40) & ~v18;
  uint64_t v44 = v18 | 7;
  uint64_t v20 = v13 + 7;
  unint64_t v21 = (v13 + 7 + v19) & 0xFFFFFFFFFFFFFFF8;
  id v22 = (uint64_t (*)())swift_allocObject();
  uint64_t v23 = v52;
  *((void *)v22 + 2) = a10;
  *((void *)v22 + 3) = v23;
  *((void *)v22 + 4) = a12;
  unint64_t v24 = (char *)v22 + v19;
  uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  v25(v24, v17, a10);
  *(void *)((char *)v22 + v21) = v53;
  v25(v15, (char *)v42, a10);
  uint64_t v26 = (v18 + 56) & ~v18;
  unint64_t v27 = (v20 + v26) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v28 = (v27 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v29 = (v28 + 79) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v42 = (v29 + 47) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v30 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?)
                  - 8);
  unint64_t v31 = (((v29 + 47) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v30 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
  uint64_t v32 = (uint64_t (*)())swift_allocObject();
  uint64_t v33 = v52;
  *((void *)v32 + 2) = a10;
  *((void *)v32 + 3) = v33;
  uint64_t v34 = v54;
  *((void *)v32 + 4) = v45;
  *((void *)v32 + 5) = v34;
  id v35 = (char *)v32 + v26;
  uint64_t v36 = v46;
  *((void *)v32 + 6) = v46;
  v25(v35, v43, a10);
  *(void *)((char *)v32 + v27) = v53;
  outlined init with take of PresentationSource?(v47, (uint64_t)v32 + v28, &demangling cache variable for type metadata for PresentationSource?);
  outlined init with take of AlertPresenting(v48, (uint64_t)v32 + v29);
  outlined init with take of PresentationSource?(v49, (uint64_t)v32 + v42, &demangling cache variable for type metadata for NoticePresenting?);
  outlined init with take of PresentationSource?(v50, (uint64_t)v32 + v31, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  uint64_t v37 = swift_allocObject();
  *(void *)(v37 + 16) = v54;
  *(void *)(v37 + 24) = v36;
  uint64_t v38 = swift_allocObject();
  *(void *)(v38 + 16) = &async function pointer to partial apply for closure #3 in Actions.AddToLibrary.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:observer:metricsReportingContext:);
  *(void *)(v38 + 24) = v37;
  swift_unknownObjectRetain();
  uint64_t result = swift_retain();
  uint64_t v40 = v51;
  *uint64_t v51 = partial apply for closure #1 in Actions.AddToLibrary.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:observer:metricsReportingContext:);
  v40[1] = v22;
  v40[2] = (uint64_t (*)())&async function pointer to partial apply for closure #2 in Actions.AddToLibrary.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:observer:metricsReportingContext:);
  v40[3] = v32;
  v40[4] = (uint64_t (*)())&async function pointer to partial apply for thunk for @escaping @callee_guaranteed @Sendable @async () -> ();
  v40[5] = (uint64_t (*)())v38;
  return result;
}

uint64_t closure #1 in Actions.AddToLibrary.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:observer:metricsReportingContext:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v36 = a5;
  uint64_t v37 = a2;
  uint64_t v33 = type metadata accessor for MusicLibrary.AddAction();
  uint64_t v35 = *(void *)(v33 - 8);
  __chkstk_darwin(v33);
  id v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicLibrary.SupportedStatus<MusicLibrary.AddAction>);
  uint64_t v31 = *(void *)(v9 - 8);
  uint64_t v32 = v9;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Album?);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *(void *)(a3 - 8);
  __chkstk_darwin(v13);
  uint64_t v18 = (char *)&v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for Album();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  id v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  uint64_t v34 = a1;
  v23(v18, a1, a3);
  char v24 = swift_dynamicCast();
  uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56);
  if ((v24 & 1) == 0)
  {
    v25(v15, 1, 1, v19);
    outlined destroy of TaskPriority?((uint64_t)v15, &demangling cache variable for type metadata for Album?);
    goto LABEL_5;
  }
  v25(v15, 0, 1, v19);
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v22, v15, v19);
  int v26 = Album.childrenAddStatus(_:)(v37);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  if (v26 != 1)
  {
LABEL_5:
    static MusicLibraryAction<>.add.getter();
    uint64_t v28 = v33;
    MusicLibrary.supportedStatus<A, B>(for:action:)();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v8, v28);
    uint64_t v27 = MusicLibrary.SupportedStatus<>.actionSupportedStatus.getter();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v11, v32);
    return v27;
  }
  return 0;
}

uint64_t sub_100013988()
{
  (*(void (**)(unint64_t))(*(void *)(*(void *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80)));
  swift_release();

  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in Actions.AddToLibrary.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:observer:metricsReportingContext:)()
{
  unint64_t v1 = (*(unsigned __int8 *)(*(void *)(v0[2] - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[2] - 8) + 80);
  return closure #1 in Actions.AddToLibrary.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:observer:metricsReportingContext:)((uint64_t)v0 + v1, *(uint64_t *)((char *)v0 + ((*(void *)(*(void *)(v0[2] - 8) + 64) + v1 + 7) & 0xFFFFFFFFFFFFFFF8)), v0[2], v0[3], v0[4]);
}

uint64_t Album.childrenAddStatus(_:)(uint64_t a1)
{
  uint64_t v62 = a1;
  uint64_t v61 = type metadata accessor for MusicLibrary.AddAction();
  uint64_t v47 = *(void (***)(char *, uint64_t))(v61 - 8);
  __chkstk_darwin(v61);
  v60 = (char *)&v43 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicLibrary.SupportedStatus<MusicLibrary.AddAction>);
  uint64_t v46 = *(void (***)(char *, uint64_t))(v2 - 8);
  __chkstk_darwin(v2);
  v59 = (char *)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = type metadata accessor for Track();
  uint64_t v45 = *(void (***)(char *, uint64_t))(v58 - 8);
  uint64_t v4 = __chkstk_darwin(v58);
  size_t v57 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v56 = (char *)&v43 - v6;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IndexingIterator<MusicItemCollection<Track>>);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v43 - v11;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicItemCollection<Track>?);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicItemCollection<Track>);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v43 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  id v22 = (char *)&v43 - v21;
  Album.tracks.getter();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    outlined destroy of TaskPriority?((uint64_t)v15, &demangling cache variable for type metadata for MusicItemCollection<Track>?);
    return 0;
  }
  uint64_t v53 = v7;
  uint64_t v54 = v20;
  v55 = v12;
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v22, v15, v16);
  uint64_t v23 = lazy protocol witness table accessor for type MusicItemCollection<Track> and conformance MusicItemCollection<A>((unint64_t *)&lazy protocol witness table cache variable for type MusicItemCollection<Track> and conformance MusicItemCollection<A>);
  dispatch thunk of Collection.startIndex.getter();
  dispatch thunk of Collection.endIndex.getter();
  if (v63[0] == v63[4])
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v22, v16);
    return 0;
  }
  uint64_t v50 = *(void (**)(char *, char *, uint64_t))(v17 + 16);
  v50(v10, v22, v16);
  uint64_t v44 = v22;
  uint64_t v52 = v23;
  dispatch thunk of Collection.startIndex.getter();
  uint64_t v25 = v53;
  *(void *)&v10[*(int *)(v53 + 36)] = v63[0];
  uint64_t v26 = (uint64_t)v55;
  outlined init with take of PresentationSource?((uint64_t)v10, (uint64_t)v55, &demangling cache variable for type metadata for IndexingIterator<MusicItemCollection<Track>>);
  uint64_t v27 = (uint64_t *)(v26 + *(int *)(v25 + 36));
  uint64_t v51 = v17 + 16;
  uint64_t v53 = v17 + 8;
  id v48 = (void (**)(char *, char *, uint64_t))(v45 + 4);
  uint64_t v49 = (void (**)(char *))(v45 + 2);
  ++v47;
  ++v46;
  ++v45;
  uint64_t v28 = v58;
  unint64_t v29 = v59;
  while (1)
  {
    uint64_t v30 = *v27;
    dispatch thunk of Collection.endIndex.getter();
    if (v30 == v63[0]) {
      break;
    }
    uint64_t v31 = (void (*)(void *, void))dispatch thunk of Collection.subscript.read();
    uint64_t v32 = v56;
    (*v49)(v56);
    v31(v63, 0);
    uint64_t v33 = v54;
    v50(v54, (char *)v26, v16);
    dispatch thunk of Collection.formIndex(after:)();
    uint64_t v34 = *(void (**)(char *, uint64_t))v53;
    (*(void (**)(char *, uint64_t))v53)(v33, v16);
    uint64_t v35 = v57;
    (*v48)(v57, v32, v28);
    uint64_t v36 = v2;
    uint64_t v37 = v60;
    static MusicLibraryAction<>.add.getter();
    uint64_t v38 = v61;
    MusicLibrary.supportedStatus<A, B>(for:action:)();
    v39 = v37;
    uint64_t v2 = v36;
    (*v47)(v39, v38);
    uint64_t v40 = MusicLibrary.SupportedStatus<>.actionSupportedStatus.getter();
    uint64_t v42 = v41;
    (*v46)(v29, v36);
    outlined consume of ActionSupportedStatus(v40, v42);
    uint64_t v26 = (uint64_t)v55;
    (*v45)(v35, v28);
    if (v42 == 1)
    {
      outlined destroy of TaskPriority?(v26, &demangling cache variable for type metadata for IndexingIterator<MusicItemCollection<Track>>);
      v34(v44, v16);
      return 1;
    }
  }
  outlined destroy of TaskPriority?(v26, &demangling cache variable for type metadata for IndexingIterator<MusicItemCollection<Track>>);
  (*(void (**)(char *, uint64_t))v53)(v44, v16);
  return 2;
}

BOOL static NSDirectionalEdgeInsets.Edge.__derived_enum_equals(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

uint64_t MusicLibrary.SupportedStatus<>.actionSupportedStatus.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for MusicLibrary.AddStatus.UnaddableReason();
  uint64_t v31 = *(void *)(v2 - 8);
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v30 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v30 - v5;
  uint64_t v7 = type metadata accessor for MusicLibrary.AddAction.UnsupportedReason();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v30 - v12;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicLibrary.SupportedStatus<MusicLibrary.AddAction>);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v1, v14);
  int v18 = (*(uint64_t (**)(char *, uint64_t))(v15 + 88))(v17, v14);
  if (v18 == enum case for MusicLibrary.SupportedStatus.unsupported<A>(_:))
  {
    (*(void (**)(char *, uint64_t))(v15 + 96))(v17, v14);
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v13, v17, v7);
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v13, v7);
    int v19 = (*(uint64_t (**)(char *, uint64_t))(v8 + 88))(v11, v7);
    if (v19 != enum case for MusicLibrary.AddAction.UnsupportedReason.unaddable(_:))
    {
      int v26 = v19;
      unint64_t v24 = 0xD000000000000010;
      if (v19 == enum case for MusicLibrary.AddAction.UnsupportedReason.unsupportedType(_:))
      {
        (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
      }
      else if (v19 == enum case for MusicLibrary.AddAction.UnsupportedReason.alreadyAdded(_:))
      {
        (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
        return 0xD000000000000012;
      }
      else
      {
        int v27 = enum case for MusicLibrary.AddAction.UnsupportedReason.networkRequired(_:);
        uint64_t v28 = *(void (**)(char *, uint64_t))(v8 + 8);
        v28(v13, v7);
        if (v26 != v27)
        {
          unint64_t v24 = 0x206E776F6E6B6E55;
          v28(v11, v7);
        }
      }
      return v24;
    }
    (*(void (**)(char *, uint64_t))(v8 + 96))(v11, v7);
    uint64_t v20 = v31;
    (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v6, v11, v2);
    uint64_t v21 = v30;
    (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v30, v6, v2);
    int v22 = (*(uint64_t (**)(char *, uint64_t))(v20 + 88))(v21, v2);
    if (v22 != enum case for MusicLibrary.AddStatus.UnaddableReason.allExplicitContentRestricted(_:)
      && v22 != enum case for MusicLibrary.AddStatus.UnaddableReason.cloudLibraryRequired(_:)
      && v22 != enum case for MusicLibrary.AddStatus.UnaddableReason.subscriptionRequired(_:))
    {
      unint64_t v32 = 0;
      unint64_t v33 = 0xE000000000000000;
      _StringGuts.grow(_:)(24);
      swift_bridgeObjectRelease();
      unint64_t v32 = 0xD000000000000016;
      unint64_t v33 = 0x8000000100467AC0;
      lazy protocol witness table accessor for type MusicLibrary.AddStatus.UnaddableReason and conformance MusicLibrary.AddStatus.UnaddableReason(&lazy protocol witness table cache variable for type MusicLibrary.AddStatus.UnaddableReason and conformance MusicLibrary.AddStatus.UnaddableReason);
      v23._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v23);
      swift_bridgeObjectRelease();
      unint64_t v24 = v32;
      uint64_t v25 = *(void (**)(char *, uint64_t))(v20 + 8);
      v25(v6, v2);
      (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
      v25(v21, v2);
      return v24;
    }
    (*(void (**)(char *, uint64_t))(v20 + 8))(v6, v2);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    return 0;
  }
  if (v18 == enum case for MusicLibrary.SupportedStatus.supported<A>(_:)) {
    return 0;
  }
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;

  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for MusicLibrary.RemoveAction.UnsupportedReason();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v16 - v7;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicLibrary.SupportedStatus<MusicLibrary.RemoveAction>);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v1, v9);
  uint64_t v13 = (*(uint64_t (**)(char *, uint64_t))(v10 + 88))(v12, v9);
  if (v13 == enum case for MusicLibrary.SupportedStatus.unsupported<A>(_:))
  {
    (*(void (**)(char *, uint64_t))(v10 + 96))(v12, v9);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v8, v12, v2);
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
    uint64_t v14 = String.init<A>(describing:)();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
    return v14;
  }
  if (v13 == enum case for MusicLibrary.SupportedStatus.supported<A>(_:)) {
    return 0;
  }
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void (*v18)(char *, uint64_t, uint64_t);
  int v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  char *v24;
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  void (*v30)(char *, uint64_t);
  char *v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36[2];

  uint64_t v1 = type metadata accessor for MusicLibrary.DownloadAction.UnsupportedReason();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  unint64_t v33 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v32 - v6;
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v32 - v8;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicLibrary.SupportedStatus<MusicLibrary.DownloadAction>);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  unint64_t v32 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v34 = (char *)&v32 - v15;
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v32 - v16;
  int v18 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  uint64_t v35 = v0;
  v18((char *)&v32 - v16, v0, v10);
  int v19 = (*(uint64_t (**)(char *, uint64_t))(v11 + 88))(v17, v10);
  if (v19 == enum case for MusicLibrary.SupportedStatus.unsupported<A>(_:))
  {
    (*(void (**)(char *, uint64_t))(v11 + 96))(v17, v10);
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v9, v17, v1);
    uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v2 + 16);
    v20(v7, v9, v1);
    if ((*(unsigned int (**)(char *, uint64_t))(v2 + 88))(v7, v1) != enum case for MusicLibrary.DownloadAction.UnsupportedReason.cellularDataDisallowed(_:))
    {
      v20(v33, v9, v1);
      uint64_t v21 = String.init<A>(describing:)();
      int v22 = *(void (**)(char *, uint64_t))(v2 + 8);
      v22(v9, v1);
      v22(v7, v1);
      return v21;
    }
    (*(void (**)(char *, uint64_t))(v2 + 8))(v9, v1);
    return 0;
  }
  if (v19 == enum case for MusicLibrary.SupportedStatus.supported<A>(_:)) {
    return 0;
  }
  if (one-time initialization token for actions != -1) {
    swift_once();
  }
  Swift::String v23 = type metadata accessor for Logger();
  __swift_project_value_buffer(v23, (uint64_t)static Logger.actions);
  unint64_t v24 = v34;
  v18(v34, v35, v10);
  uint64_t v25 = Logger.logObject.getter();
  int v26 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v25, v26))
  {
    int v27 = swift_slowAlloc();
    unint64_t v33 = (char *)swift_slowAlloc();
    v36[0] = (uint64_t)v33;
    *(_DWORD *)int v27 = 136315138;
    v18(v32, (uint64_t)v24, v10);
    uint64_t v28 = String.init<A>(describing:)();
    *(void *)(v27 + 4) = _s2os32getNullTerminatedUTF8PointerImpl_21storingStringOwnersInSVSS_SpyypGSgztF_0(v28, v29, v36);
    swift_bridgeObjectRelease();
    uint64_t v30 = *(void (**)(char *, uint64_t))(v11 + 8);
    v30(v24, v10);
    _os_log_impl((void *)&_mh_execute_header, v25, v26, "Unknown status=%s", (uint8_t *)v27, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v30 = *(void (**)(char *, uint64_t))(v11 + 8);
    v30(v24, v10);
  }

  v36[0] = 0;
  v36[1] = 0xE000000000000000;
  _print_unlocked<A, B>(_:_:)();
  uint64_t v21 = v36[0];
  v30(v17, v10);
  return v21;
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int v13;
  int v14;
  unint64_t v15;
  uint64_t result;
  void (*v17)(char *, uint64_t);
  uint64_t v18;

  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for MusicLibrary.RemoveDownloadAction.UnsupportedReason();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v18 - v7;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicLibrary.SupportedStatus<MusicLibrary.RemoveDownloadAction>);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v1, v9);
  uint64_t v13 = (*(uint64_t (**)(char *, uint64_t))(v10 + 88))(v12, v9);
  if (v13 == enum case for MusicLibrary.SupportedStatus.unsupported<A>(_:))
  {
    (*(void (**)(char *, uint64_t))(v10 + 96))(v12, v9);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v8, v12, v2);
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
    uint64_t v14 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v6, v2);
    if (v14 == enum case for MusicLibrary.RemoveDownloadAction.UnsupportedReason.unsupportedType(_:))
    {
      uint64_t v15 = 0xD000000000000010;
      (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
    }
    else if (v14 == enum case for MusicLibrary.RemoveDownloadAction.UnsupportedReason.removalNotPermitted(_:))
    {
      (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
      return 0xD000000000000015;
    }
    else if (v14 == enum case for MusicLibrary.RemoveDownloadAction.UnsupportedReason.notDownloaded(_:))
    {
      (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
      return 0x6E776F6420746F4ELL;
    }
    else
    {
      uint64_t v17 = *(void (**)(char *, uint64_t))(v3 + 8);
      if (v14 == enum case for MusicLibrary.RemoveDownloadAction.UnsupportedReason.sharedLibrary(_:))
      {
        v17(v8, v2);
        return 0x61685320656D6F48;
      }
      else
      {
        uint64_t v15 = 0x206E776F6E6B6E55;
        v17(v6, v2);
        v17(v8, v2);
      }
    }
    return v15;
  }
  if (v13 == enum case for MusicLibrary.SupportedStatus.supported<A>(_:)) {
    return 0;
  }
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  void (*v16)(char *, uint64_t, uint64_t);
  int v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  int v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  Swift::String v25;
  uint64_t v27;
  __int16 v28;
  void *v29;
  uint64_t v30;
  Swift::String v31;
  void (*v32)(char *, uint64_t);
  char *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  void *v38;

  uint64_t v1 = type metadata accessor for MusicLibrary.FavoriteAction.UnsupportedReason();
  uint64_t v35 = *(void *)(v1 - 8);
  uint64_t v2 = __chkstk_darwin(v1);
  unint64_t v33 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v33 - v5;
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v33 - v7;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicLibrary.SupportedStatus<MusicLibrary.FavoriteAction>);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v33 - v14;
  uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v34 = v0;
  v16((char *)&v33 - v14, v0, v9);
  uint64_t v17 = (*(uint64_t (**)(char *, uint64_t))(v10 + 88))(v15, v9);
  if (v17 != enum case for MusicLibrary.SupportedStatus.unsupported<A>(_:))
  {
    if (v17 != enum case for MusicLibrary.SupportedStatus.supported<A>(_:))
    {
      uint64_t v36 = 0;
      uint64_t v37 = 0xE000000000000000;
      _StringGuts.grow(_:)(27);
      swift_bridgeObjectRelease();
      uint64_t v36 = 0xD000000000000019;
      uint64_t v37 = 0x8000000100468B10;
      v16(v13, v34, v9);
      v25._countAndFlagsBits = String.init<A>(describing:)();
      String.append(_:)(v25);
      swift_bridgeObjectRelease();
      unint64_t v24 = v36;
      (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
      return v24;
    }
    return 0;
  }
  (*(void (**)(char *, uint64_t))(v10 + 96))(v15, v9);
  int v18 = v35;
  (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v8, v15, v1);
  int v19 = *(void (**)(char *, char *, uint64_t))(v18 + 16);
  v19(v6, v8, v1);
  uint64_t v20 = (*(uint64_t (**)(char *, uint64_t))(v18 + 88))(v6, v1);
  uint64_t v21 = v8;
  int v22 = v1;
  Swift::String v23 = v18;
  if (v20 == enum case for MusicLibrary.FavoriteAction.UnsupportedReason.unsupportedType(_:))
  {
LABEL_3:
    unint64_t v24 = 0xD000000000000010;
    (*(void (**)(char *, uint64_t))(v23 + 8))(v21, v22);
    return v24;
  }
  if (v20 == enum case for MusicLibrary.FavoriteAction.UnsupportedReason.alreadyFavorited(_:))
  {
    (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v22);
    return 0xD000000000000011;
  }
  if (v20 == enum case for MusicLibrary.FavoriteAction.UnsupportedReason.cannotFavoriteWhenDisliked(_:))
  {
    (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v22);
    return 0xD00000000000001DLL;
  }
  if (v20 == enum case for MusicLibrary.FavoriteAction.UnsupportedReason.subscriptionRequired(_:))
  {
    (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v22);
    return 0xD000000000000018;
  }
  if (v20 == enum case for MusicLibrary.FavoriteAction.UnsupportedReason.cloudLibraryRequired(_:))
  {
    int v27 = v18;
    if (one-time initialization token for shared != -1) {
      swift_once();
    }
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    uint64_t v28 = v37;
    unint64_t v29 = v38;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    if ((v28 & 0x100) != 0) {
      unint64_t v24 = 0;
    }
    else {
      unint64_t v24 = 0xD000000000000016;
    }
    (*(void (**)(char *, uint64_t))(v27 + 8))(v21, v22);
    return v24;
  }
  if (v20 == enum case for MusicLibrary.FavoriteAction.UnsupportedReason.explicitContentRestricted(_:))
  {
    (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v22);
    return 0;
  }
  if (v20 == enum case for MusicLibrary.FavoriteAction.UnsupportedReason.sharedLibrary(_:))
  {
    (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v22);
    return 0x6C20646572616853;
  }
  if (v20 == enum case for MusicLibrary.FavoriteAction.UnsupportedReason.cloudLibraryInitialImport(_:))
  {
    (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v22);
    return 0xD00000000000001CLL;
  }
  if (v20 == enum case for MusicLibrary.FavoriteAction.UnsupportedReason.libraryAddIneligibleContent(_:))
  {
    (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v22);
    return 0xD000000000000013;
  }
  if (v20 == enum case for MusicLibrary.FavoriteAction.UnsupportedReason.invalidContentType(_:))
  {
    (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v22);
    return 0xD000000000000014;
  }
  if (v20 == enum case for MusicLibrary.FavoriteAction.UnsupportedReason.networkRequired(_:)) {
    goto LABEL_3;
  }
  if (v20 == enum case for MusicLibrary.FavoriteAction.UnsupportedReason.subscriptionAccountLinkingRequired(_:))
  {
    (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v22);
    return 0xD000000000000025;
  }
  else
  {
    uint64_t v30 = v18;
    if (v20 == enum case for MusicLibrary.FavoriteAction.UnsupportedReason.unknown(_:))
    {
      unint64_t v24 = 0x206E776F6E6B6E55;
      (*(void (**)(char *, uint64_t))(v23 + 8))(v21, v22);
    }
    else
    {
      uint64_t v36 = 0;
      uint64_t v37 = 0xE000000000000000;
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease();
      uint64_t v36 = 0x206E776F6E6B6E55;
      uint64_t v37 = 0xEF206E6F73616572;
      v19(v33, v21, v22);
      v31._countAndFlagsBits = String.init<A>(describing:)();
      String.append(_:)(v31);
      swift_bridgeObjectRelease();
      unint64_t v24 = v36;
      unint64_t v32 = *(void (**)(char *, uint64_t))(v30 + 8);
      v32(v21, v22);
      v32(v6, v22);
    }
  }
  return v24;
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  void (*v16)(char *, uint64_t, uint64_t);
  int v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  int v20;
  unint64_t v21;
  Swift::String v22;
  __int16 v24;
  void *v25;
  Swift::String v26;
  void (*v27)(char *, uint64_t);
  char *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  void *v33;

  uint64_t v1 = type metadata accessor for MusicLibrary.UndoFavoriteAction.UnsupportedReason();
  uint64_t v30 = *(void *)(v1 - 8);
  uint64_t v2 = __chkstk_darwin(v1);
  uint64_t v28 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v28 - v5;
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v28 - v7;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicLibrary.SupportedStatus<MusicLibrary.UndoFavoriteAction>);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v28 - v14;
  uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  unint64_t v29 = v0;
  v16((char *)&v28 - v14, v0, v9);
  uint64_t v17 = (*(uint64_t (**)(char *, uint64_t))(v10 + 88))(v15, v9);
  if (v17 != enum case for MusicLibrary.SupportedStatus.unsupported<A>(_:))
  {
    if (v17 != enum case for MusicLibrary.SupportedStatus.supported<A>(_:))
    {
      uint64_t v31 = 0;
      unint64_t v32 = 0xE000000000000000;
      _StringGuts.grow(_:)(27);
      swift_bridgeObjectRelease();
      uint64_t v31 = 0xD000000000000019;
      unint64_t v32 = 0x8000000100468B10;
      v16(v13, v29, v9);
      v22._countAndFlagsBits = String.init<A>(describing:)();
      String.append(_:)(v22);
      swift_bridgeObjectRelease();
      uint64_t v21 = v31;
      (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
      return v21;
    }
    return 0;
  }
  (*(void (**)(char *, uint64_t))(v10 + 96))(v15, v9);
  int v18 = v30;
  (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v8, v15, v1);
  int v19 = *(void (**)(char *, char *, uint64_t))(v18 + 16);
  v19(v6, v8, v1);
  uint64_t v20 = (*(uint64_t (**)(char *, uint64_t))(v18 + 88))(v6, v1);
  if (v20 != enum case for MusicLibrary.UndoFavoriteAction.UnsupportedReason.unsupportedType(_:))
  {
    if (v20 == enum case for MusicLibrary.UndoFavoriteAction.UnsupportedReason.notFavorited(_:))
    {
      (*(void (**)(char *, uint64_t))(v18 + 8))(v8, v1);
      return 0x6F76614620746F4ELL;
    }
    if (v20 == enum case for MusicLibrary.UndoFavoriteAction.UnsupportedReason.subscriptionRequired(_:))
    {
      (*(void (**)(char *, uint64_t))(v18 + 8))(v8, v1);
      return 0xD000000000000018;
    }
    if (v20 == enum case for MusicLibrary.UndoFavoriteAction.UnsupportedReason.cloudLibraryRequired(_:))
    {
      if (one-time initialization token for shared != -1) {
        swift_once();
      }
      swift_getKeyPath();
      swift_getKeyPath();
      static Published.subscript.getter();
      swift_release();
      swift_release();
      unint64_t v24 = v32;
      uint64_t v25 = v33;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      if ((v24 & 0x100) != 0) {
        uint64_t v21 = 0;
      }
      else {
        uint64_t v21 = 0xD000000000000016;
      }
      goto LABEL_31;
    }
    if (v20 != enum case for MusicLibrary.UndoFavoriteAction.UnsupportedReason.explicitContentRestricted(_:))
    {
      if (v20 == enum case for MusicLibrary.UndoFavoriteAction.UnsupportedReason.sharedLibrary(_:))
      {
        (*(void (**)(char *, uint64_t))(v18 + 8))(v8, v1);
        return 0x6C20646572616853;
      }
      if (v20 == enum case for MusicLibrary.UndoFavoriteAction.UnsupportedReason.cloudLibraryInitialImport(_:))
      {
        (*(void (**)(char *, uint64_t))(v18 + 8))(v8, v1);
        return 0xD00000000000001CLL;
      }
      if (v20 == enum case for MusicLibrary.UndoFavoriteAction.UnsupportedReason.libraryAddIneligibleContent(_:))
      {
        (*(void (**)(char *, uint64_t))(v18 + 8))(v8, v1);
        return 0xD000000000000013;
      }
      if (v20 == enum case for MusicLibrary.UndoFavoriteAction.UnsupportedReason.invalidContentType(_:))
      {
        (*(void (**)(char *, uint64_t))(v18 + 8))(v8, v1);
        return 0xD000000000000014;
      }
      if (v20 == enum case for MusicLibrary.UndoFavoriteAction.UnsupportedReason.subscriptionAccountLinkingRequired(_:))
      {
        (*(void (**)(char *, uint64_t))(v18 + 8))(v8, v1);
        return 0xD000000000000025;
      }
      uint64_t v21 = 0x206E776F6E6B6E55;
      if (v20 != enum case for MusicLibrary.UndoFavoriteAction.UnsupportedReason.unknown(_:))
      {
        uint64_t v31 = 0;
        unint64_t v32 = 0xE000000000000000;
        _StringGuts.grow(_:)(17);
        swift_bridgeObjectRelease();
        uint64_t v31 = 0x206E776F6E6B6E55;
        unint64_t v32 = 0xEF206E6F73616572;
        v19(v28, v8, v1);
        v26._countAndFlagsBits = String.init<A>(describing:)();
        String.append(_:)(v26);
        swift_bridgeObjectRelease();
        uint64_t v21 = v31;
        int v27 = *(void (**)(char *, uint64_t))(v18 + 8);
        v27(v8, v1);
        v27(v6, v1);
        return v21;
      }
LABEL_31:
      (*(void (**)(char *, uint64_t))(v18 + 8))(v8, v1);
      return v21;
    }
    (*(void (**)(char *, uint64_t))(v18 + 8))(v8, v1);
    return 0;
  }
  uint64_t v21 = 0xD000000000000010;
  (*(void (**)(char *, uint64_t))(v18 + 8))(v8, v1);
  return v21;
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, uint64_t, uint64_t);
  int v14;
  uint64_t v15;
  Swift::String v16;
  unint64_t v18;
  unint64_t v19;

  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for MusicLibrary.DislikeAction.UnsupportedReason();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicLibrary.SupportedStatus<MusicLibrary.DislikeAction>);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v18 - v11;
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v13((char *)&v18 - v11, v1, v6);
  uint64_t v14 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v12, v6);
  if (v14 == enum case for MusicLibrary.SupportedStatus.unsupported<A>(_:))
  {
    (*(void (**)(char *, uint64_t))(v7 + 96))(v12, v6);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v12, v2);
    uint64_t v15 = closure #1 in MusicLibrary.SupportedStatus<>.actionSupportedStatus.getter((uint64_t)v5);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  else if (v14 == enum case for MusicLibrary.SupportedStatus.supported<A>(_:))
  {
    return 0;
  }
  else
  {
    int v18 = 0;
    int v19 = 0xE000000000000000;
    _StringGuts.grow(_:)(27);
    swift_bridgeObjectRelease();
    int v18 = 0xD000000000000019;
    int v19 = 0x8000000100468B10;
    v13(v10, v1, v6);
    v16._countAndFlagsBits = String.init<A>(describing:)();
    String.append(_:)(v16);
    swift_bridgeObjectRelease();
    uint64_t v15 = v18;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  }
  return v15;
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  void (*v14)(char *, uint64_t, uint64_t);
  int v15;
  uint64_t v16;
  uint64_t v17;
  Swift::String v18;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;

  uint64_t v1 = type metadata accessor for MusicLibrary.UndoDislikeAction.UnsupportedReason();
  uint64_t v21 = *(void *)(v1 - 8);
  uint64_t v2 = __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v20 - v5;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicLibrary.SupportedStatus<MusicLibrary.UndoDislikeAction>);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v20 - v12;
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  uint64_t v20 = v0;
  v14((char *)&v20 - v12, v0, v7);
  uint64_t v15 = (*(uint64_t (**)(char *, uint64_t))(v8 + 88))(v13, v7);
  if (v15 == enum case for MusicLibrary.SupportedStatus.unsupported<A>(_:))
  {
    (*(void (**)(char *, uint64_t))(v8 + 96))(v13, v7);
    uint64_t v16 = v21;
    (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v6, v13, v1);
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v4, v6, v1);
    uint64_t v17 = String.init<A>(describing:)();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v6, v1);
  }
  else if (v15 == enum case for MusicLibrary.SupportedStatus.supported<A>(_:))
  {
    return 0;
  }
  else
  {
    int v22 = 0;
    Swift::String v23 = 0xE000000000000000;
    _StringGuts.grow(_:)(27);
    swift_bridgeObjectRelease();
    int v22 = 0xD000000000000019;
    Swift::String v23 = 0x8000000100468B10;
    v14(v11, v20, v7);
    v18._countAndFlagsBits = String.init<A>(describing:)();
    String.append(_:)(v18);
    swift_bridgeObjectRelease();
    uint64_t v17 = v22;
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
  }
  return v17;
}

uint64_t closure #2 in Actions.AddToLibrary.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:observer:metricsReportingContext:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[81] = v19;
  v8[80] = v18;
  v8[79] = v17;
  v8[78] = a8;
  v8[77] = a7;
  v8[76] = a6;
  v8[75] = a5;
  v8[74] = a4;
  v8[73] = a3;
  v8[72] = a2;
  v8[71] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  v8[82] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  v8[83] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for Actions.MetricsReportingContext();
  v8[84] = v9;
  v8[85] = *(void *)(v9 - 8);
  v8[86] = swift_task_alloc();
  v8[87] = type metadata accessor for Notice.Variant(0);
  v8[88] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for MusicLibrary.AddStatus.UnaddableReason();
  v8[89] = v10;
  v8[90] = *(void *)(v10 - 8);
  v8[91] = swift_task_alloc();
  v8[92] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (MusicLibrary.AddStatus.UnaddableReason?, MusicLibrary.AddStatus.UnaddableReason?));
  v8[93] = swift_task_alloc();
  v8[94] = swift_task_alloc();
  uint64_t v11 = type metadata accessor for MusicLibrary.AddAction();
  v8[95] = v11;
  v8[96] = *(void *)(v11 - 8);
  v8[97] = swift_task_alloc();
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicLibrary.SupportedStatus<MusicLibrary.AddAction>);
  v8[98] = v12;
  v8[99] = *(void *)(v12 - 8);
  v8[100] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicItemCollection<Track>?);
  v8[101] = swift_task_alloc();
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicItemCollection<Track>);
  v8[102] = v13;
  v8[103] = *(void *)(v13 - 8);
  v8[104] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Album?);
  v8[105] = swift_task_alloc();
  v8[106] = *(void *)(v17 - 8);
  v8[107] = swift_task_alloc();
  uint64_t v14 = type metadata accessor for Album();
  v8[108] = v14;
  v8[109] = *(void *)(v14 - 8);
  v8[110] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicLibrary.AddStatus.UnaddableReason?);
  v8[111] = swift_task_alloc();
  v8[112] = swift_task_alloc();
  v8[113] = swift_task_alloc();
  v8[114] = swift_task_alloc();
  v8[115] = swift_task_alloc();
  v8[116] = swift_task_alloc();
  v8[117] = swift_task_alloc();
  return _swift_task_switch(closure #2 in Actions.AddToLibrary.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:observer:metricsReportingContext:), 0, 0);
}

uint64_t closure #2 in Actions.AddToLibrary.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:observer:metricsReportingContext:)()
{
  uint64_t v130 = v0;
  if (*(void *)(v0 + 568))
  {
    uint64_t v1 = *(void *)(v0 + 576);
    *(void *)(v0 + 944) = swift_getObjectType();
    *(unsigned char *)(v0 + 516) = 0;
    *(void *)(v0 + 952) = *(void *)(v1 + 8);
    *(void *)(v0 + 960) = (v1 + 8) & 0xFFFFFFFFFFFFLL | 0xD91B000000000000;
    type metadata accessor for MainActor();
    *(void *)(v0 + 968) = static MainActor.shared.getter();
    uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v4 = v3;
    uint64_t v5 = closure #2 in Actions.AddToLibrary.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:observer:metricsReportingContext:);
    goto LABEL_3;
  }
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v9 = *(void *)(v0 + 24);
  uint64_t v10 = *(void **)(v0 + 96);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  if ((v9 & 0x200) == 0)
  {
    *(void *)(v0 + 504) = 0;
    *(_OWORD *)(v0 + 472) = 0u;
    *(_OWORD *)(v0 + 488) = 0u;
    *(unsigned char *)(v0 + 512) = -1;
    specialized static SubscriptionUpsellPresenter.present(for:)(v0 + 472);
    outlined destroy of SubscriptionUpsellPresenter.Placement(v0 + 472);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
    return v11();
  }
  uint64_t v12 = *(void *)(v0 + 872);
  uint64_t v13 = *(void *)(v0 + 856);
  uint64_t v14 = *(void *)(v0 + 848);
  uint64_t v15 = *(void *)(v0 + 632);
  uint64_t v16 = *(void *)(v0 + 584);
  v128 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 720) + 56);
  v128(*(void *)(v0 + 936), 1, 1, *(void *)(v0 + 712));
  uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16);
  *(void *)(v0 + 976) = v17;
  *(void *)(v0 + 984) = (v14 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v17(v13, v16, v15);
  char v18 = swift_dynamicCast();
  uint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56);
  if ((v18 & 1) == 0)
  {
    uint64_t v28 = *(void *)(v0 + 840);
    v19(v28, 1, 1, *(void *)(v0 + 864));
    unint64_t v29 = (uint64_t *)&demangling cache variable for type metadata for Album?;
    goto LABEL_18;
  }
  uint64_t v20 = *(void *)(v0 + 880);
  uint64_t v21 = *(void *)(v0 + 872);
  uint64_t v22 = *(void *)(v0 + 864);
  uint64_t v23 = *(void *)(v0 + 840);
  uint64_t v24 = *(void *)(v0 + 592);
  v19(v23, 0, 1, v22);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 32))(v20, v23, v22);
  if (Album.childrenAddStatus(_:)(v24) != 1)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 872) + 8))(*(void *)(v0 + 880), *(void *)(v0 + 864));
    goto LABEL_20;
  }
  uint64_t v25 = *(void *)(v0 + 824);
  uint64_t v26 = *(void *)(v0 + 816);
  uint64_t v27 = *(void *)(v0 + 808);
  Album.tracks.getter();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48))(v27, 1, v26) == 1)
  {
    uint64_t v28 = *(void *)(v0 + 808);
    (*(void (**)(void, void))(*(void *)(v0 + 872) + 8))(*(void *)(v0 + 880), *(void *)(v0 + 864));
    unint64_t v29 = &demangling cache variable for type metadata for MusicItemCollection<Track>?;
LABEL_18:
    outlined destroy of TaskPriority?(v28, v29);
LABEL_20:
    uint64_t v122 = *(void *)(v0 + 920);
    uint64_t v30 = *(void *)(v0 + 800);
    uint64_t v31 = *(void *)(v0 + 792);
    uint64_t v124 = *(void *)(v0 + 784);
    uint64_t v126 = *(void *)(v0 + 936);
    uint64_t v32 = *(void *)(v0 + 776);
    uint64_t v33 = *(void *)(v0 + 768);
    uint64_t v34 = *(void *)(v0 + 760);
    static MusicLibraryAction<>.add.getter();
    MusicLibrary.supportedStatus<A, B>(for:action:)();
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v32, v34);
    MusicLibrary.SupportedStatus<>.unaddableReason.getter(v122);
    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v30, v124);
    outlined destroy of TaskPriority?(v126, &demangling cache variable for type metadata for MusicLibrary.AddStatus.UnaddableReason?);
    outlined init with take of PresentationSource?(v122, v126, &demangling cache variable for type metadata for MusicLibrary.AddStatus.UnaddableReason?);
    goto LABEL_21;
  }
  uint64_t v96 = *(void *)(v0 + 832);
  uint64_t v97 = *(void *)(v0 + 592);
  (*(void (**)(uint64_t, void, void))(*(void *)(v0 + 824) + 32))(v96, *(void *)(v0 + 808), *(void *)(v0 + 816));
  v129 = (char *)_swiftEmptyArrayStorage;
  swift_retain();
  LOBYTE(v96) = specialized Sequence.contains(where:)(v96, v97, (void **)&v129);
  swift_release();
  if (v96)
  {
    uint64_t v98 = *(void *)(v0 + 880);
    uint64_t v99 = *(void *)(v0 + 872);
    uint64_t v100 = *(void *)(v0 + 864);
    (*(void (**)(void, void))(*(void *)(v0 + 824) + 8))(*(void *)(v0 + 832), *(void *)(v0 + 816));
    (*(void (**)(uint64_t, uint64_t))(v99 + 8))(v98, v100);
  }
  else
  {
    if (*((void *)v129 + 2))
    {
      (*(void (**)(void, char *, void))(*(void *)(v0 + 720) + 16))(*(void *)(v0 + 928), &v129[(*(unsigned __int8 *)(*(void *)(v0 + 720) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0 + 720) + 80)], *(void *)(v0 + 712));
      uint64_t v111 = 0;
    }
    else
    {
      uint64_t v111 = 1;
    }
    uint64_t v112 = *(void *)(v0 + 936);
    uint64_t v113 = *(void *)(v0 + 928);
    uint64_t v114 = *(void *)(v0 + 880);
    uint64_t v115 = *(void *)(v0 + 872);
    uint64_t v116 = *(void *)(v0 + 864);
    uint64_t v117 = *(void *)(v0 + 832);
    uint64_t v118 = *(void *)(v0 + 824);
    uint64_t v119 = *(void *)(v0 + 816);
    v128(v113, v111, 1, *(void *)(v0 + 712));
    (*(void (**)(uint64_t, uint64_t))(v118 + 8))(v117, v119);
    (*(void (**)(uint64_t, uint64_t))(v115 + 8))(v114, v116);
    outlined destroy of TaskPriority?(v112, &demangling cache variable for type metadata for MusicLibrary.AddStatus.UnaddableReason?);
    outlined init with take of PresentationSource?(v113, v112, &demangling cache variable for type metadata for MusicLibrary.AddStatus.UnaddableReason?);
  }
  swift_bridgeObjectRelease();
LABEL_21:
  uint64_t v35 = *(void *)(v0 + 936);
  uint64_t v36 = *(void *)(v0 + 912);
  uint64_t v37 = *(void *)(v0 + 752);
  uint64_t v38 = *(void *)(v0 + 736);
  uint64_t v39 = *(void *)(v0 + 720);
  uint64_t v40 = *(void *)(v0 + 712);
  v125 = *(void (**)(uint64_t, void, uint64_t))(v39 + 104);
  v125(v36, enum case for MusicLibrary.AddStatus.UnaddableReason.cloudLibraryRequired(_:), v40);
  v128(v36, 0, 1, v40);
  uint64_t v127 = v38;
  uint64_t v41 = v37 + *(int *)(v38 + 48);
  outlined init with copy of (String, Any)(v35, v37, &demangling cache variable for type metadata for MusicLibrary.AddStatus.UnaddableReason?);
  outlined init with copy of (String, Any)(v36, v41, &demangling cache variable for type metadata for MusicLibrary.AddStatus.UnaddableReason?);
  uint64_t v42 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48);
  if (v42(v37, 1, v40) == 1)
  {
    uint64_t v43 = *(void *)(v0 + 712);
    outlined destroy of TaskPriority?(*(void *)(v0 + 912), &demangling cache variable for type metadata for MusicLibrary.AddStatus.UnaddableReason?);
    if (v42(v41, 1, v43) == 1)
    {
      outlined destroy of TaskPriority?(*(void *)(v0 + 752), &demangling cache variable for type metadata for MusicLibrary.AddStatus.UnaddableReason?);
LABEL_36:
      outlined init with copy of (String, Any)(*(void *)(v0 + 600), v0 + 288, &demangling cache variable for type metadata for PresentationSource?);
      if (*(void *)(v0 + 344) != 1)
      {
        outlined init with take of PresentationSource(v0 + 288, v0 + 216);
        *(void *)(v0 + 1032) = type metadata accessor for MainActor();
        *(void *)(v0 + 1040) = static MainActor.shared.getter();
        uint64_t v71 = dispatch thunk of Actor.unownedExecutor.getter();
        uint64_t v8 = v72;
        *(void *)(v0 + 1048) = v71;
        *(void *)(v0 + 1056) = v72;
        uint64_t v6 = closure #2 in Actions.AddToLibrary.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:observer:metricsReportingContext:);
        uint64_t v7 = v71;
        goto LABEL_4;
      }
      v68 = *(void **)(v0 + 608);
      outlined destroy of TaskPriority?(v0 + 288, &demangling cache variable for type metadata for PresentationSource?);
      uint64_t v69 = v68[3];
      *(void *)(v0 + 992) = v69;
      *(void *)(v0 + 1000) = v68[4];
      *(void *)(v0 + 1008) = __swift_project_boxed_opaque_existential_0Tm(v68, v69);
      type metadata accessor for MainActor();
      *(void *)(v0 + 1016) = static MainActor.shared.getter();
      uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v4 = v70;
      uint64_t v5 = closure #2 in Actions.AddToLibrary.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:observer:metricsReportingContext:);
LABEL_3:
      uint64_t v6 = v5;
      uint64_t v7 = v2;
      uint64_t v8 = v4;
LABEL_4:
      return _swift_task_switch(v6, v7, v8);
    }
    goto LABEL_26;
  }
  uint64_t v44 = *(void *)(v0 + 712);
  outlined init with copy of (String, Any)(*(void *)(v0 + 752), *(void *)(v0 + 904), &demangling cache variable for type metadata for MusicLibrary.AddStatus.UnaddableReason?);
  unsigned int v45 = v42(v41, 1, v44);
  uint64_t v46 = *(void *)(v0 + 912);
  uint64_t v47 = *(void *)(v0 + 904);
  if (v45 == 1)
  {
    uint64_t v48 = *(void *)(v0 + 720);
    uint64_t v49 = *(void *)(v0 + 712);
    outlined destroy of TaskPriority?(*(void *)(v0 + 912), &demangling cache variable for type metadata for MusicLibrary.AddStatus.UnaddableReason?);
    (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v47, v49);
LABEL_26:
    outlined destroy of TaskPriority?(*(void *)(v0 + 752), &demangling cache variable for type metadata for (MusicLibrary.AddStatus.UnaddableReason?, MusicLibrary.AddStatus.UnaddableReason?));
    goto LABEL_27;
  }
  uint64_t v123 = *(void *)(v0 + 752);
  uint64_t v64 = *(void *)(v0 + 728);
  uint64_t v65 = *(void *)(v0 + 720);
  uint64_t v66 = *(void *)(v0 + 712);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v65 + 32))(v64, v41, v66);
  lazy protocol witness table accessor for type MusicLibrary.AddStatus.UnaddableReason and conformance MusicLibrary.AddStatus.UnaddableReason(&lazy protocol witness table cache variable for type MusicLibrary.AddStatus.UnaddableReason and conformance MusicLibrary.AddStatus.UnaddableReason);
  char v121 = dispatch thunk of static Equatable.== infix(_:_:)();
  size_t v67 = *(void (**)(uint64_t, uint64_t))(v65 + 8);
  v67(v64, v66);
  outlined destroy of TaskPriority?(v46, &demangling cache variable for type metadata for MusicLibrary.AddStatus.UnaddableReason?);
  v67(v47, v66);
  outlined destroy of TaskPriority?(v123, &demangling cache variable for type metadata for MusicLibrary.AddStatus.UnaddableReason?);
  if (v121) {
    goto LABEL_36;
  }
LABEL_27:
  uint64_t v50 = *(void *)(v0 + 936);
  uint64_t v51 = *(void *)(v0 + 896);
  uint64_t v52 = *(void *)(v0 + 744);
  uint64_t v53 = *(void *)(v0 + 712);
  v125(v51, enum case for MusicLibrary.AddStatus.UnaddableReason.allExplicitContentRestricted(_:), v53);
  v128(v51, 0, 1, v53);
  uint64_t v54 = v52 + *(int *)(v127 + 48);
  outlined init with copy of (String, Any)(v50, v52, &demangling cache variable for type metadata for MusicLibrary.AddStatus.UnaddableReason?);
  outlined init with copy of (String, Any)(v51, v54, &demangling cache variable for type metadata for MusicLibrary.AddStatus.UnaddableReason?);
  if (v42(v52, 1, v53) == 1)
  {
    uint64_t v55 = *(void *)(v0 + 712);
    outlined destroy of TaskPriority?(*(void *)(v0 + 896), &demangling cache variable for type metadata for MusicLibrary.AddStatus.UnaddableReason?);
    if (v42(v54, 1, v55) == 1)
    {
      outlined destroy of TaskPriority?(*(void *)(v0 + 744), &demangling cache variable for type metadata for MusicLibrary.AddStatus.UnaddableReason?);
LABEL_40:
      v79 = *(void **)(v0 + 608);
      uint64_t v80 = v79[3];
      *(void *)(v0 + 1088) = v80;
      *(void *)(v0 + 1096) = v79[4];
      *(void *)(v0 + 1104) = __swift_project_boxed_opaque_existential_0Tm(v79, v80);
      type metadata accessor for MainActor();
      *(void *)(v0 + 1112) = static MainActor.shared.getter();
      uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v4 = v81;
      uint64_t v5 = closure #2 in Actions.AddToLibrary.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:observer:metricsReportingContext:);
      goto LABEL_3;
    }
    goto LABEL_32;
  }
  uint64_t v56 = *(void *)(v0 + 712);
  outlined init with copy of (String, Any)(*(void *)(v0 + 744), *(void *)(v0 + 888), &demangling cache variable for type metadata for MusicLibrary.AddStatus.UnaddableReason?);
  unsigned int v57 = v42(v54, 1, v56);
  uint64_t v58 = *(void *)(v0 + 896);
  uint64_t v59 = *(void *)(v0 + 888);
  if (v57 == 1)
  {
    uint64_t v60 = *(void *)(v0 + 720);
    uint64_t v61 = *(void *)(v0 + 712);
    outlined destroy of TaskPriority?(*(void *)(v0 + 896), &demangling cache variable for type metadata for MusicLibrary.AddStatus.UnaddableReason?);
    (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v59, v61);
LABEL_32:
    outlined destroy of TaskPriority?(*(void *)(v0 + 744), &demangling cache variable for type metadata for (MusicLibrary.AddStatus.UnaddableReason?, MusicLibrary.AddStatus.UnaddableReason?));
    goto LABEL_33;
  }
  uint64_t v73 = *(void *)(v0 + 744);
  uint64_t v74 = *(void *)(v0 + 728);
  uint64_t v75 = *(void *)(v0 + 720);
  uint64_t v76 = *(void *)(v0 + 712);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v75 + 32))(v74, v54, v76);
  lazy protocol witness table accessor for type MusicLibrary.AddStatus.UnaddableReason and conformance MusicLibrary.AddStatus.UnaddableReason(&lazy protocol witness table cache variable for type MusicLibrary.AddStatus.UnaddableReason and conformance MusicLibrary.AddStatus.UnaddableReason);
  char v77 = dispatch thunk of static Equatable.== infix(_:_:)();
  v78 = *(void (**)(uint64_t, uint64_t))(v75 + 8);
  v78(v74, v76);
  outlined destroy of TaskPriority?(v58, &demangling cache variable for type metadata for MusicLibrary.AddStatus.UnaddableReason?);
  v78(v59, v76);
  outlined destroy of TaskPriority?(v73, &demangling cache variable for type metadata for MusicLibrary.AddStatus.UnaddableReason?);
  if (v77) {
    goto LABEL_40;
  }
LABEL_33:
  outlined init with copy of (String, Any)(*(void *)(v0 + 616), v0 + 520, &demangling cache variable for type metadata for NoticePresenting?);
  uint64_t v62 = *(void *)(v0 + 544);
  *(void *)(v0 + 1128) = v62;
  if (v62)
  {
    *(void *)(v0 + 1136) = *(void *)(v0 + 552);
    *(void *)(v0 + 1144) = __swift_project_boxed_opaque_existential_0Tm((void *)(v0 + 520), v62);
    swift_storeEnumTagMultiPayload();
    type metadata accessor for MainActor();
    *(void *)(v0 + 1152) = static MainActor.shared.getter();
    uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v4 = v63;
    uint64_t v5 = closure #2 in Actions.AddToLibrary.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:observer:metricsReportingContext:);
    goto LABEL_3;
  }
  outlined destroy of TaskPriority?(v0 + 520, &demangling cache variable for type metadata for NoticePresenting?);
  uint64_t v82 = *(void *)(v0 + 680);
  uint64_t v83 = *(void *)(v0 + 672);
  uint64_t v84 = *(void *)(v0 + 664);
  outlined init with copy of (String, Any)(*(void *)(v0 + 624), v84, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v82 + 48))(v84, 1, v83) != 1)
  {
    uint64_t v101 = *(void *)(v0 + 656);
    uint64_t v102 = *(void *)(v0 + 632);
    outlined init with take of Actions.MetricsReportingContext(*(void *)(v0 + 664), *(void *)(v0 + 688));
    *(void *)(v0 + 1160) = MusicItem.metricsTargetIdentifier.getter(v102);
    *(void *)(v0 + 1168) = v103;
    uint64_t v104 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v104 - 8) + 56))(v101, 1, 1, v104);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<MetricsEvent.Click.ActionDetails.Key>);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100493D00;
    *(void *)(inited + 32) = MusicItem.metricsContentType.getter();
    *(void *)(inited + 40) = v106;
    *(unsigned char *)(inited + 48) = 0;
    *(void *)(inited + 56) = 0;
    *(void *)(inited + 64) = 0;
    *(unsigned char *)(inited + 72) = 1;
    *(void *)(v0 + 1176) = specialized MetricsEvent.Click.ActionDetails.init(_:)(inited);
    *(void *)(v0 + 1184) = v107;
    *(void *)(v0 + 1192) = v108;
    *(_WORD *)(v0 + 514) = v109;
    swift_setDeallocating();
    swift_arrayDestroy();
    type metadata accessor for MainActor();
    *(void *)(v0 + 1200) = static MainActor.shared.getter();
    uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v4 = v110;
    uint64_t v5 = closure #2 in Actions.AddToLibrary.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:observer:metricsReportingContext:);
    goto LABEL_3;
  }
  outlined destroy of TaskPriority?(*(void *)(v0 + 664), &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  v85 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 976);
  uint64_t v86 = *(void *)(v0 + 632);
  uint64_t v87 = *(void *)(v0 + 584);
  getContiguousArrayStorageType<A>(for:)(v86, v86);
  swift_allocObject();
  uint64_t v88 = static Array._adoptStorage(_:count:)();
  v85(v89, v87, v86);
  uint64_t v90 = _finalizeUninitializedArray<A>(_:)(v88);
  *(void *)(v0 + 1208) = v90;
  *(void *)(v0 + 560) = v90;
  v91 = (void *)swift_task_alloc();
  *(void *)(v0 + 1216) = v91;
  uint64_t v92 = type metadata accessor for Array();
  uint64_t WitnessTable = swift_getWitnessTable();
  void *v91 = v0;
  v91[1] = closure #2 in Actions.AddToLibrary.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:observer:metricsReportingContext:);
  uint64_t v94 = *(void *)(v0 + 640);
  uint64_t v95 = *(void *)(v0 + 632);
  return MusicLibrary.add<A, B>(_:)(v0 + 560, v92, v95, WitnessTable, v94);
}

{
  char *v0;
  void (*v1)(char *, ValueMetadata *, unint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;

  uint64_t v1 = (void (*)(char *, ValueMetadata *, unint64_t, uint64_t, uint64_t))*((void *)v0 + 119);
  uint64_t v2 = *((void *)v0 + 118);
  uint64_t v3 = *((void *)v0 + 72);
  swift_release();
  uint64_t v4 = lazy protocol witness table accessor for type ActionType and conformance ActionType();
  v1(v0 + 516, &type metadata for ActionType, v4, v2, v3);
  return _swift_task_switch(closure #2 in Actions.AddToLibrary.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:observer:metricsReportingContext:), 0, 0);
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t (*v3)(void);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  char v11;
  void (*v12)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unsigned int (*v35)(uint64_t, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unsigned int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t (*v59)();
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(uint64_t, uint64_t);
  void *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t (*v70)();
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  void (*v77)(uint64_t, uint64_t);
  void *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void (*v84)(uint64_t, uint64_t, uint64_t);
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  void *v90;
  uint64_t v91;
  uint64_t WitnessTable;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t inited;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  __int16 v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  void (*v123)(uint64_t, void, uint64_t);
  uint64_t v124;
  uint64_t v125;
  void (*v126)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v127;
  uint64_t v128;
  uint64_t v129;

  v128 = v0;
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(void **)(v0 + 96);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  if ((v1 & 0x200) == 0)
  {
    *(void *)(v0 + 504) = 0;
    *(_OWORD *)(v0 + 472) = 0u;
    *(_OWORD *)(v0 + 488) = 0u;
    *(unsigned char *)(v0 + 512) = -1;
    specialized static SubscriptionUpsellPresenter.present(for:)(v0 + 472);
    outlined destroy of SubscriptionUpsellPresenter.Placement(v0 + 472);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
    return v3();
  }
  uint64_t v5 = *(void *)(v0 + 872);
  uint64_t v6 = *(void *)(v0 + 856);
  uint64_t v7 = *(void *)(v0 + 848);
  uint64_t v8 = *(void *)(v0 + 632);
  uint64_t v9 = *(void *)(v0 + 584);
  uint64_t v126 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 720) + 56);
  v126(*(void *)(v0 + 936), 1, 1, *(void *)(v0 + 712));
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  *(void *)(v0 + 976) = v10;
  *(void *)(v0 + 984) = (v7 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v10(v6, v9, v8);
  uint64_t v11 = swift_dynamicCast();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56);
  if ((v11 & 1) == 0)
  {
    uint64_t v21 = *(void *)(v0 + 840);
    v12(v21, 1, 1, *(void *)(v0 + 864));
    uint64_t v22 = (uint64_t *)&demangling cache variable for type metadata for Album?;
    goto LABEL_12;
  }
  uint64_t v13 = *(void *)(v0 + 880);
  uint64_t v14 = *(void *)(v0 + 872);
  uint64_t v15 = *(void *)(v0 + 864);
  uint64_t v16 = *(void *)(v0 + 840);
  uint64_t v17 = *(void *)(v0 + 592);
  v12(v16, 0, 1, v15);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 32))(v13, v16, v15);
  if (Album.childrenAddStatus(_:)(v17) != 1)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 872) + 8))(*(void *)(v0 + 880), *(void *)(v0 + 864));
    goto LABEL_14;
  }
  char v18 = *(void *)(v0 + 824);
  uint64_t v19 = *(void *)(v0 + 816);
  uint64_t v20 = *(void *)(v0 + 808);
  Album.tracks.getter();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v20, 1, v19) == 1)
  {
    uint64_t v21 = *(void *)(v0 + 808);
    (*(void (**)(void, void))(*(void *)(v0 + 872) + 8))(*(void *)(v0 + 880), *(void *)(v0 + 864));
    uint64_t v22 = &demangling cache variable for type metadata for MusicItemCollection<Track>?;
LABEL_12:
    outlined destroy of TaskPriority?(v21, v22);
LABEL_14:
    v120 = *(void *)(v0 + 920);
    uint64_t v23 = *(void *)(v0 + 800);
    uint64_t v24 = *(void *)(v0 + 792);
    uint64_t v122 = *(void *)(v0 + 784);
    uint64_t v124 = *(void *)(v0 + 936);
    uint64_t v25 = *(void *)(v0 + 776);
    uint64_t v26 = *(void *)(v0 + 768);
    uint64_t v27 = *(void *)(v0 + 760);
    static MusicLibraryAction<>.add.getter();
    MusicLibrary.supportedStatus<A, B>(for:action:)();
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v27);
    MusicLibrary.SupportedStatus<>.unaddableReason.getter(v120);
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v122);
    outlined destroy of TaskPriority?(v124, &demangling cache variable for type metadata for MusicLibrary.AddStatus.UnaddableReason?);
    outlined init with take of PresentationSource?(v120, v124, &demangling cache variable for type metadata for MusicLibrary.AddStatus.UnaddableReason?);
    goto LABEL_15;
  }
  uint64_t v95 = *(void *)(v0 + 832);
  uint64_t v96 = *(void *)(v0 + 592);
  (*(void (**)(uint64_t, void, void))(*(void *)(v0 + 824) + 32))(v95, *(void *)(v0 + 808), *(void *)(v0 + 816));
  uint64_t v127 = (char *)_swiftEmptyArrayStorage;
  swift_retain();
  LOBYTE(v95) = specialized Sequence.contains(where:)(v95, v96, (void **)&v127);
  swift_release();
  if (v95)
  {
    uint64_t v97 = *(void *)(v0 + 880);
    uint64_t v98 = *(void *)(v0 + 872);
    uint64_t v99 = *(void *)(v0 + 864);
    (*(void (**)(void, void))(*(void *)(v0 + 824) + 8))(*(void *)(v0 + 832), *(void *)(v0 + 816));
    (*(void (**)(uint64_t, uint64_t))(v98 + 8))(v97, v99);
  }
  else
  {
    if (*((void *)v127 + 2))
    {
      (*(void (**)(void, char *, void))(*(void *)(v0 + 720) + 16))(*(void *)(v0 + 928), &v127[(*(unsigned __int8 *)(*(void *)(v0 + 720) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0 + 720) + 80)], *(void *)(v0 + 712));
      uint64_t v110 = 0;
    }
    else
    {
      uint64_t v110 = 1;
    }
    uint64_t v111 = *(void *)(v0 + 936);
    uint64_t v112 = *(void *)(v0 + 928);
    uint64_t v113 = *(void *)(v0 + 880);
    uint64_t v114 = *(void *)(v0 + 872);
    uint64_t v115 = *(void *)(v0 + 864);
    uint64_t v116 = *(void *)(v0 + 832);
    uint64_t v117 = *(void *)(v0 + 824);
    uint64_t v118 = *(void *)(v0 + 816);
    v126(v112, v110, 1, *(void *)(v0 + 712));
    (*(void (**)(uint64_t, uint64_t))(v117 + 8))(v116, v118);
    (*(void (**)(uint64_t, uint64_t))(v114 + 8))(v113, v115);
    outlined destroy of TaskPriority?(v111, &demangling cache variable for type metadata for MusicLibrary.AddStatus.UnaddableReason?);
    outlined init with take of PresentationSource?(v112, v111, &demangling cache variable for type metadata for MusicLibrary.AddStatus.UnaddableReason?);
  }
  swift_bridgeObjectRelease();
LABEL_15:
  uint64_t v28 = *(void *)(v0 + 936);
  unint64_t v29 = *(void *)(v0 + 912);
  uint64_t v30 = *(void *)(v0 + 752);
  uint64_t v31 = *(void *)(v0 + 736);
  uint64_t v32 = *(void *)(v0 + 720);
  uint64_t v33 = *(void *)(v0 + 712);
  uint64_t v123 = *(void (**)(uint64_t, void, uint64_t))(v32 + 104);
  v123(v29, enum case for MusicLibrary.AddStatus.UnaddableReason.cloudLibraryRequired(_:), v33);
  v126(v29, 0, 1, v33);
  v125 = v31;
  uint64_t v34 = v30 + *(int *)(v31 + 48);
  outlined init with copy of (String, Any)(v28, v30, &demangling cache variable for type metadata for MusicLibrary.AddStatus.UnaddableReason?);
  outlined init with copy of (String, Any)(v29, v34, &demangling cache variable for type metadata for MusicLibrary.AddStatus.UnaddableReason?);
  uint64_t v35 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 48);
  if (v35(v30, 1, v33) == 1)
  {
    uint64_t v36 = *(void *)(v0 + 712);
    outlined destroy of TaskPriority?(*(void *)(v0 + 912), &demangling cache variable for type metadata for MusicLibrary.AddStatus.UnaddableReason?);
    if (v35(v34, 1, v36) == 1)
    {
      outlined destroy of TaskPriority?(*(void *)(v0 + 752), &demangling cache variable for type metadata for MusicLibrary.AddStatus.UnaddableReason?);
LABEL_30:
      outlined init with copy of (String, Any)(*(void *)(v0 + 600), v0 + 288, &demangling cache variable for type metadata for PresentationSource?);
      if (*(void *)(v0 + 344) != 1)
      {
        outlined init with take of PresentationSource(v0 + 288, v0 + 216);
        *(void *)(v0 + 1032) = type metadata accessor for MainActor();
        *(void *)(v0 + 1040) = static MainActor.shared.getter();
        size_t v67 = dispatch thunk of Actor.unownedExecutor.getter();
        uint64_t v69 = v68;
        *(void *)(v0 + 1048) = v67;
        *(void *)(v0 + 1056) = v68;
        uint64_t v70 = closure #2 in Actions.AddToLibrary.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:observer:metricsReportingContext:);
        uint64_t v71 = v67;
LABEL_43:
        return _swift_task_switch(v70, v71, v69);
      }
      uint64_t v64 = *(void **)(v0 + 608);
      outlined destroy of TaskPriority?(v0 + 288, &demangling cache variable for type metadata for PresentationSource?);
      uint64_t v65 = v64[3];
      *(void *)(v0 + 992) = v65;
      *(void *)(v0 + 1000) = v64[4];
      *(void *)(v0 + 1008) = __swift_project_boxed_opaque_existential_0Tm(v64, v65);
      type metadata accessor for MainActor();
      *(void *)(v0 + 1016) = static MainActor.shared.getter();
      uint64_t v56 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v58 = v66;
      uint64_t v59 = closure #2 in Actions.AddToLibrary.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:observer:metricsReportingContext:);
LABEL_42:
      uint64_t v70 = v59;
      uint64_t v71 = v56;
      uint64_t v69 = v58;
      goto LABEL_43;
    }
    goto LABEL_20;
  }
  uint64_t v37 = *(void *)(v0 + 712);
  outlined init with copy of (String, Any)(*(void *)(v0 + 752), *(void *)(v0 + 904), &demangling cache variable for type metadata for MusicLibrary.AddStatus.UnaddableReason?);
  uint64_t v38 = v35(v34, 1, v37);
  uint64_t v39 = *(void *)(v0 + 912);
  uint64_t v40 = *(void *)(v0 + 904);
  if (v38 == 1)
  {
    uint64_t v41 = *(void *)(v0 + 720);
    uint64_t v42 = *(void *)(v0 + 712);
    outlined destroy of TaskPriority?(*(void *)(v0 + 912), &demangling cache variable for type metadata for MusicLibrary.AddStatus.UnaddableReason?);
    (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v40, v42);
LABEL_20:
    outlined destroy of TaskPriority?(*(void *)(v0 + 752), &demangling cache variable for type metadata for (MusicLibrary.AddStatus.UnaddableReason?, MusicLibrary.AddStatus.UnaddableReason?));
    goto LABEL_21;
  }
  char v121 = *(void *)(v0 + 752);
  uint64_t v60 = *(void *)(v0 + 728);
  uint64_t v61 = *(void *)(v0 + 720);
  uint64_t v62 = *(void *)(v0 + 712);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v61 + 32))(v60, v34, v62);
  lazy protocol witness table accessor for type MusicLibrary.AddStatus.UnaddableReason and conformance MusicLibrary.AddStatus.UnaddableReason(&lazy protocol witness table cache variable for type MusicLibrary.AddStatus.UnaddableReason and conformance MusicLibrary.AddStatus.UnaddableReason);
  uint64_t v119 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v63 = *(void (**)(uint64_t, uint64_t))(v61 + 8);
  v63(v60, v62);
  outlined destroy of TaskPriority?(v39, &demangling cache variable for type metadata for MusicLibrary.AddStatus.UnaddableReason?);
  v63(v40, v62);
  outlined destroy of TaskPriority?(v121, &demangling cache variable for type metadata for MusicLibrary.AddStatus.UnaddableReason?);
  if (v119) {
    goto LABEL_30;
  }
LABEL_21:
  uint64_t v43 = *(void *)(v0 + 936);
  uint64_t v44 = *(void *)(v0 + 896);
  unsigned int v45 = *(void *)(v0 + 744);
  uint64_t v46 = *(void *)(v0 + 712);
  v123(v44, enum case for MusicLibrary.AddStatus.UnaddableReason.allExplicitContentRestricted(_:), v46);
  v126(v44, 0, 1, v46);
  uint64_t v47 = v45 + *(int *)(v125 + 48);
  outlined init with copy of (String, Any)(v43, v45, &demangling cache variable for type metadata for MusicLibrary.AddStatus.UnaddableReason?);
  outlined init with copy of (String, Any)(v44, v47, &demangling cache variable for type metadata for MusicLibrary.AddStatus.UnaddableReason?);
  if (v35(v45, 1, v46) == 1)
  {
    uint64_t v48 = *(void *)(v0 + 712);
    outlined destroy of TaskPriority?(*(void *)(v0 + 896), &demangling cache variable for type metadata for MusicLibrary.AddStatus.UnaddableReason?);
    if (v35(v47, 1, v48) == 1)
    {
      outlined destroy of TaskPriority?(*(void *)(v0 + 744), &demangling cache variable for type metadata for MusicLibrary.AddStatus.UnaddableReason?);
LABEL_34:
      v78 = *(void **)(v0 + 608);
      v79 = v78[3];
      *(void *)(v0 + 1088) = v79;
      *(void *)(v0 + 1096) = v78[4];
      *(void *)(v0 + 1104) = __swift_project_boxed_opaque_existential_0Tm(v78, v79);
      type metadata accessor for MainActor();
      *(void *)(v0 + 1112) = static MainActor.shared.getter();
      uint64_t v56 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v58 = v80;
      uint64_t v59 = closure #2 in Actions.AddToLibrary.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:observer:metricsReportingContext:);
      goto LABEL_42;
    }
    goto LABEL_26;
  }
  uint64_t v49 = *(void *)(v0 + 712);
  outlined init with copy of (String, Any)(*(void *)(v0 + 744), *(void *)(v0 + 888), &demangling cache variable for type metadata for MusicLibrary.AddStatus.UnaddableReason?);
  uint64_t v50 = v35(v47, 1, v49);
  uint64_t v51 = *(void *)(v0 + 896);
  uint64_t v52 = *(void *)(v0 + 888);
  if (v50 == 1)
  {
    uint64_t v53 = *(void *)(v0 + 720);
    uint64_t v54 = *(void *)(v0 + 712);
    outlined destroy of TaskPriority?(*(void *)(v0 + 896), &demangling cache variable for type metadata for MusicLibrary.AddStatus.UnaddableReason?);
    (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v52, v54);
LABEL_26:
    outlined destroy of TaskPriority?(*(void *)(v0 + 744), &demangling cache variable for type metadata for (MusicLibrary.AddStatus.UnaddableReason?, MusicLibrary.AddStatus.UnaddableReason?));
    goto LABEL_27;
  }
  uint64_t v72 = *(void *)(v0 + 744);
  uint64_t v73 = *(void *)(v0 + 728);
  uint64_t v74 = *(void *)(v0 + 720);
  uint64_t v75 = *(void *)(v0 + 712);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v74 + 32))(v73, v47, v75);
  lazy protocol witness table accessor for type MusicLibrary.AddStatus.UnaddableReason and conformance MusicLibrary.AddStatus.UnaddableReason(&lazy protocol witness table cache variable for type MusicLibrary.AddStatus.UnaddableReason and conformance MusicLibrary.AddStatus.UnaddableReason);
  uint64_t v76 = dispatch thunk of static Equatable.== infix(_:_:)();
  char v77 = *(void (**)(uint64_t, uint64_t))(v74 + 8);
  v77(v73, v75);
  outlined destroy of TaskPriority?(v51, &demangling cache variable for type metadata for MusicLibrary.AddStatus.UnaddableReason?);
  v77(v52, v75);
  outlined destroy of TaskPriority?(v72, &demangling cache variable for type metadata for MusicLibrary.AddStatus.UnaddableReason?);
  if (v76) {
    goto LABEL_34;
  }
LABEL_27:
  outlined init with copy of (String, Any)(*(void *)(v0 + 616), v0 + 520, &demangling cache variable for type metadata for NoticePresenting?);
  uint64_t v55 = *(void *)(v0 + 544);
  *(void *)(v0 + 1128) = v55;
  if (v55)
  {
    *(void *)(v0 + 1136) = *(void *)(v0 + 552);
    *(void *)(v0 + 1144) = __swift_project_boxed_opaque_existential_0Tm((void *)(v0 + 520), v55);
    swift_storeEnumTagMultiPayload();
    type metadata accessor for MainActor();
    *(void *)(v0 + 1152) = static MainActor.shared.getter();
    uint64_t v56 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v58 = v57;
    uint64_t v59 = closure #2 in Actions.AddToLibrary.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:observer:metricsReportingContext:);
    goto LABEL_42;
  }
  outlined destroy of TaskPriority?(v0 + 520, &demangling cache variable for type metadata for NoticePresenting?);
  uint64_t v81 = *(void *)(v0 + 680);
  uint64_t v82 = *(void *)(v0 + 672);
  uint64_t v83 = *(void *)(v0 + 664);
  outlined init with copy of (String, Any)(*(void *)(v0 + 624), v83, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v81 + 48))(v83, 1, v82) != 1)
  {
    uint64_t v100 = *(void *)(v0 + 656);
    uint64_t v101 = *(void *)(v0 + 632);
    outlined init with take of Actions.MetricsReportingContext(*(void *)(v0 + 664), *(void *)(v0 + 688));
    *(void *)(v0 + 1160) = MusicItem.metricsTargetIdentifier.getter(v101);
    *(void *)(v0 + 1168) = v102;
    uint64_t v103 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v103 - 8) + 56))(v100, 1, 1, v103);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<MetricsEvent.Click.ActionDetails.Key>);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100493D00;
    *(void *)(inited + 32) = MusicItem.metricsContentType.getter();
    *(void *)(inited + 40) = v105;
    *(unsigned char *)(inited + 48) = 0;
    *(void *)(inited + 56) = 0;
    *(void *)(inited + 64) = 0;
    *(unsigned char *)(inited + 72) = 1;
    *(void *)(v0 + 1176) = specialized MetricsEvent.Click.ActionDetails.init(_:)(inited);
    *(void *)(v0 + 1184) = v106;
    *(void *)(v0 + 1192) = v107;
    *(_WORD *)(v0 + 514) = v108;
    swift_setDeallocating();
    swift_arrayDestroy();
    type metadata accessor for MainActor();
    *(void *)(v0 + 1200) = static MainActor.shared.getter();
    uint64_t v56 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v58 = v109;
    uint64_t v59 = closure #2 in Actions.AddToLibrary.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:observer:metricsReportingContext:);
    goto LABEL_42;
  }
  outlined destroy of TaskPriority?(*(void *)(v0 + 664), &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  uint64_t v84 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 976);
  v85 = *(void *)(v0 + 632);
  uint64_t v86 = *(void *)(v0 + 584);
  getContiguousArrayStorageType<A>(for:)(v85, v85);
  swift_allocObject();
  uint64_t v87 = static Array._adoptStorage(_:count:)();
  v84(v88, v86, v85);
  uint64_t v89 = _finalizeUninitializedArray<A>(_:)(v87);
  *(void *)(v0 + 1208) = v89;
  *(void *)(v0 + 560) = v89;
  uint64_t v90 = (void *)swift_task_alloc();
  *(void *)(v0 + 1216) = v90;
  v91 = type metadata accessor for Array();
  uint64_t WitnessTable = swift_getWitnessTable();
  *uint64_t v90 = v0;
  v90[1] = closure #2 in Actions.AddToLibrary.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:observer:metricsReportingContext:);
  v93 = *(void *)(v0 + 640);
  uint64_t v94 = *(void *)(v0 + 632);
  return MusicLibrary.add<A, B>(_:)(v0 + 560, v91, v94, WitnessTable, v93);
}

{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v5)(void *, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;

  uint64_t v6 = v0[125];
  swift_release();
  specialized static Alert.enableCloudLibraryAlert(context:)((uint64_t)(v0 + 52));
  uint64_t v5 = (uint64_t (*)(void *, uint64_t, uint64_t))(*(void *)(v6 + 8) + **(int **)(v6 + 8));
  uint64_t v1 = (void *)swift_task_alloc();
  v0[128] = v1;
  *uint64_t v1 = v0;
  v1[1] = closure #2 in Actions.AddToLibrary.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:observer:metricsReportingContext:);
  uint64_t v2 = v0[125];
  uint64_t v3 = v0[124];
  return v5(v0 + 52, v3, v2);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v3;

  uint64_t v1 = *v0 + 416;
  swift_task_dealloc();
  outlined release of Alert(v1);
  return _swift_task_switch(closure #2 in Actions.AddToLibrary.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:observer:metricsReportingContext:), 0, 0);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v5;

  uint64_t v1 = static MainActor.shared.getter();
  v0[133] = v1;
  uint64_t v2 = swift_task_alloc();
  v0[134] = v2;
  *(unsigned char *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = v0 + 27;
  *(void *)(v2 + 32) = 0;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[135] = v3;
  *uint64_t v3 = v0;
  v3[1] = closure #2 in Actions.AddToLibrary.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:observer:metricsReportingContext:);
  return withCheckedContinuation<A>(isolation:function:_:)((char *)v0 + 513, v1, &protocol witness table for MainActor, 0xD00000000000003DLL, 0x8000000100467B20, partial apply for closure #1 in static CloudLibrary.presentCloudLibraryEnabler(context:presentationSource:style:), v2, &type metadata for Bool);
}

{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 1056);
  uint64_t v3 = *(void *)(v1 + 1048);
  return _swift_task_switch(closure #2 in Actions.AddToLibrary.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:observer:metricsReportingContext:), v3, v2);
}

{
  uint64_t v1;

  swift_release();
  return _swift_task_switch(closure #2 in Actions.AddToLibrary.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:observer:metricsReportingContext:), 0, 0);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);
  uint64_t v4;

  uint64_t v1 = *(void *)(v0 + 936);
  outlined destroy of PresentationSource(v0 + 216);
  outlined destroy of TaskPriority?(v1, &demangling cache variable for type metadata for MusicLibrary.AddStatus.UnaddableReason?);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v5)(void *, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;

  uint64_t v6 = v0[137];
  swift_release();
  specialized static Alert.explicitRestrictedAlert(forPlayback:)((uint64_t)(v0 + 45));
  uint64_t v5 = (uint64_t (*)(void *, uint64_t, uint64_t))(*(void *)(v6 + 8) + **(int **)(v6 + 8));
  uint64_t v1 = (void *)swift_task_alloc();
  v0[140] = v1;
  *uint64_t v1 = v0;
  v1[1] = closure #2 in Actions.AddToLibrary.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:observer:metricsReportingContext:);
  uint64_t v2 = v0[137];
  uint64_t v3 = v0[136];
  return v5(v0 + 45, v3, v2);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v3;

  uint64_t v1 = *v0 + 360;
  swift_task_dealloc();
  outlined release of Alert(v1);
  return _swift_task_switch(closure #2 in Actions.AddToLibrary.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:observer:metricsReportingContext:), 0, 0);
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  outlined destroy of TaskPriority?(*(void *)(v0 + 936), &demangling cache variable for type metadata for MusicLibrary.AddStatus.UnaddableReason?);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  uint64_t v1 = v0[142];
  uint64_t v2 = v0[141];
  uint64_t v3 = v0[88];
  swift_release();
  NoticePresenting.present(_:internalOnly:)(v3, 0, v2, v1);
  outlined destroy of Actions.MetricsReportingContext(v3, type metadata accessor for Notice.Variant);
  return _swift_task_switch(closure #2 in Actions.AddToLibrary.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:observer:metricsReportingContext:), 0, 0);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t WitnessTable;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t inited;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int16 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;

  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 520);
  uint64_t v1 = *(void *)(v0 + 680);
  uint64_t v2 = *(void *)(v0 + 672);
  uint64_t v3 = *(void *)(v0 + 664);
  outlined init with copy of (String, Any)(*(void *)(v0 + 624), v3, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 48))(v3, 1, v2) == 1)
  {
    outlined destroy of TaskPriority?(*(void *)(v0 + 664), &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
    uint64_t v4 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 976);
    uint64_t v5 = *(void *)(v0 + 632);
    uint64_t v6 = *(void *)(v0 + 584);
    getContiguousArrayStorageType<A>(for:)(v5, v5);
    swift_allocObject();
    uint64_t v7 = static Array._adoptStorage(_:count:)();
    v4(v8, v6, v5);
    uint64_t v9 = _finalizeUninitializedArray<A>(_:)(v7);
    *(void *)(v0 + 1208) = v9;
    *(void *)(v0 + 560) = v9;
    uint64_t v10 = (void *)swift_task_alloc();
    *(void *)(v0 + 1216) = v10;
    uint64_t v11 = type metadata accessor for Array();
    uint64_t WitnessTable = swift_getWitnessTable();
    void *v10 = v0;
    v10[1] = closure #2 in Actions.AddToLibrary.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:observer:metricsReportingContext:);
    uint64_t v13 = *(void *)(v0 + 640);
    uint64_t v14 = *(void *)(v0 + 632);
    return MusicLibrary.add<A, B>(_:)(v0 + 560, v11, v14, WitnessTable, v13);
  }
  else
  {
    uint64_t v15 = *(void *)(v0 + 656);
    uint64_t v16 = *(void *)(v0 + 632);
    outlined init with take of Actions.MetricsReportingContext(*(void *)(v0 + 664), *(void *)(v0 + 688));
    *(void *)(v0 + 1160) = MusicItem.metricsTargetIdentifier.getter(v16);
    *(void *)(v0 + 1168) = v17;
    char v18 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v15, 1, 1, v18);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<MetricsEvent.Click.ActionDetails.Key>);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100493D00;
    *(void *)(inited + 32) = MusicItem.metricsContentType.getter();
    *(void *)(inited + 40) = v20;
    *(unsigned char *)(inited + 48) = 0;
    *(void *)(inited + 56) = 0;
    *(void *)(inited + 64) = 0;
    *(unsigned char *)(inited + 72) = 1;
    *(void *)(v0 + 1176) = specialized MetricsEvent.Click.ActionDetails.init(_:)(inited);
    *(void *)(v0 + 1184) = v21;
    *(void *)(v0 + 1192) = v22;
    *(_WORD *)(v0 + 514) = v23;
    swift_setDeallocating();
    swift_arrayDestroy();
    type metadata accessor for MainActor();
    *(void *)(v0 + 1200) = static MainActor.shared.getter();
    uint64_t v25 = dispatch thunk of Actor.unownedExecutor.getter();
    return _swift_task_switch(closure #2 in Actions.AddToLibrary.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:observer:metricsReportingContext:), v25, v24);
  }
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  uint64_t v1 = *(void *)(v0 + 1192);
  uint64_t v2 = *(void *)(v0 + 1184);
  uint64_t v3 = *(void **)(v0 + 1176);
  uint64_t v4 = *(void *)(v0 + 1168);
  uint64_t v5 = *(void *)(v0 + 1160);
  uint64_t v6 = *(uint64_t **)(v0 + 688);
  uint64_t v7 = *(void *)(v0 + 656);
  uint64_t v8 = *(unsigned __int16 *)(v0 + 514);
  swift_release();
  specialized static Actions.reportClickEvent(targetIdentifier:targetType:actionType:actionURL:actionDetails:reportingContext:)(v5, v4, 5, 2, v7, v3, v2, v1, v8, v6);
  outlined consume of MetricsEvent.Click.ActionDetails(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease();
  outlined destroy of TaskPriority?(v7, &demangling cache variable for type metadata for URL?);
  return _swift_task_switch(closure #2 in Actions.AddToLibrary.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:observer:metricsReportingContext:), 0, 0);
}

{
  void *v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t WitnessTable;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  outlined destroy of Actions.MetricsReportingContext(v0[86], (uint64_t (*)(void))type metadata accessor for Actions.MetricsReportingContext);
  uint64_t v1 = (void (*)(uint64_t, uint64_t, uint64_t))v0[122];
  uint64_t v2 = v0[79];
  uint64_t v3 = v0[73];
  getContiguousArrayStorageType<A>(for:)(v2, v2);
  swift_allocObject();
  uint64_t v4 = static Array._adoptStorage(_:count:)();
  v1(v5, v3, v2);
  uint64_t v6 = _finalizeUninitializedArray<A>(_:)(v4);
  v0[151] = v6;
  v0[70] = v6;
  uint64_t v7 = (void *)swift_task_alloc();
  v0[152] = v7;
  uint64_t v8 = type metadata accessor for Array();
  uint64_t WitnessTable = swift_getWitnessTable();
  *uint64_t v7 = v0;
  v7[1] = closure #2 in Actions.AddToLibrary.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:observer:metricsReportingContext:);
  uint64_t v10 = v0[80];
  uint64_t v11 = v0[79];
  return MusicLibrary.add<A, B>(_:)(v0 + 70, v8, v11, WitnessTable, v10);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();
  uint64_t v4;

  *(void *)(*(void *)v1 + 1224) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v0)
  {
    uint64_t v2 = closure #2 in Actions.AddToLibrary.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:observer:metricsReportingContext:);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = closure #2 in Actions.AddToLibrary.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:observer:metricsReportingContext:);
  }
  return _swift_task_switch(v2, 0, 0);
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  outlined destroy of TaskPriority?(*(void *)(v0 + 936), &demangling cache variable for type metadata for MusicLibrary.AddStatus.UnaddableReason?);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1000180FC()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v5 = (v4 + 79) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 47) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = *(unsigned __int8 *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?)
                                      - 8)
                          + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  uint64_t v8 = v0 + v4;
  if (*(void *)(v0 + v4 + 56) != 1)
  {
    swift_unknownObjectWeakDestroy();
    int v9 = *(unsigned __int8 *)(v8 + 48);
    if (v9 != 255) {
      outlined consume of PresentationSource.Position(*(id *)(v8 + 8), *(void *)(v8 + 16), *(void *)(v8 + 24), *(void *)(v8 + 32), *(void *)(v8 + 40), v9);
    }
    if (*(void *)(v8 + 56)) {
      swift_release();
    }
  }
  uint64_t v10 = (v7 + v6 + 40) & ~v7;
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + v5);
  if (*(void *)(v0 + v6 + 24)) {
    __swift_destroy_boxed_opaque_existential_0Tm(v0 + v6);
  }
  uint64_t v11 = v0 + v10;
  uint64_t v12 = type metadata accessor for Actions.MetricsReportingContext();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v0 + v10, 1, v12))
  {
    if (*(void *)(v11 + 8) >= 0xBuLL) {
      swift_bridgeObjectRelease();
    }
    uint64_t v13 = v11 + *(int *)(v12 + 20);
    uint64_t v14 = type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v13, 1, v14))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v15 = v13 + *(int *)(v14 + 24);
      uint64_t v16 = type metadata accessor for URL();
      uint64_t v17 = *(void *)(v16 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16)) {
        (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return swift_deallocObject();
}

void outlined consume of PresentationSource.Position(id a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  if (a6 == 2)
  {
    swift_unknownObjectRelease();
  }
  else if (a6 <= 1u)
  {
  }
}

uint64_t outlined init with take of AlertPresenting(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t partial apply for closure #2 in Actions.AddToLibrary.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:observer:metricsReportingContext:)()
{
  uint64_t v2 = *(void *)(v0[2] - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v5 = (v4 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 79) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 47) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(unsigned __int8 *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?)
                                      - 8)
                          + 80);
  uint64_t v9 = v8 + v7 + 40;
  uint64_t v10 = v0[5];
  uint64_t v11 = v0[6];
  uint64_t v12 = (uint64_t)v0 + v3;
  uint64_t v13 = *(void *)((char *)v0 + v4);
  uint64_t v14 = (uint64_t)v0 + v5;
  uint64_t v15 = (uint64_t)v0 + v6;
  uint64_t v16 = (uint64_t)v0 + v7;
  uint64_t v17 = (uint64_t)v0 + (v9 & ~v8);
  char v18 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v18;
  *char v18 = v1;
  v18[1] = partial apply for closure #1 in static MusicEngagementExtension.performRequest(with:completion:);
  return closure #2 in Actions.AddToLibrary.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:observer:metricsReportingContext:)(v10, v11, v12, v13, v14, v15, v16, v17);
}

BOOL closure #1 in closure #2 in Actions.AddToLibrary.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:observer:metricsReportingContext:)(uint64_t a1, uint64_t a2, void **a3)
{
  uint64_t v36 = a3;
  uint64_t v37 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicLibrary.AddStatus.UnaddableReason?);
  __chkstk_darwin(v3 - 8);
  unint64_t v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for MusicLibrary.AddStatus.UnaddableReason();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v35 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v34 - v10;
  uint64_t v12 = type metadata accessor for MusicLibrary.AddAction();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicLibrary.SupportedStatus<MusicLibrary.AddAction>);
  uint64_t v38 = *(void *)(v16 - 8);
  uint64_t v39 = v16;
  __chkstk_darwin(v16);
  char v18 = (char *)&v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  static MusicLibraryAction<>.add.getter();
  type metadata accessor for Track();
  MusicLibrary.supportedStatus<A, B>(for:action:)();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  MusicLibrary.SupportedStatus<>.unaddableReason.getter((uint64_t)v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    outlined destroy of TaskPriority?((uint64_t)v5, &demangling cache variable for type metadata for MusicLibrary.AddStatus.UnaddableReason?);
  }
  else
  {
    uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
    v19(v11, v5, v6);
    uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
    uint64_t v21 = v35;
    uint64_t v37 = v6;
    v20(v35, v11, v6);
    uint64_t v22 = v36;
    uint64_t v23 = *v36;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    void *v22 = v23;
    uint64_t v25 = v21;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v23 = (void *)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, v23[2] + 1, 1, v23);
      void *v22 = v23;
    }
    unint64_t v27 = v23[2];
    unint64_t v26 = v23[3];
    if (v27 >= v26 >> 1)
    {
      uint64_t v23 = (void *)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v26 > 1, v27 + 1, 1, v23);
      *uint64_t v36 = v23;
    }
    v23[2] = v27 + 1;
    unint64_t v28 = (unint64_t)v23
        + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))
        + *(void *)(v7 + 72) * v27;
    uint64_t v29 = v37;
    v19((char *)v28, v25, v37);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v11, v29);
  }
  uint64_t v30 = MusicLibrary.SupportedStatus<>.actionSupportedStatus.getter();
  BOOL v32 = v31 == 1;
  outlined consume of ActionSupportedStatus(v30, v31);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v18, v39);
  return v32;
}

uint64_t MusicLibrary.SupportedStatus<>.unaddableReason.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicLibrary.SupportedStatus<MusicLibrary.AddAction>);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for MusicLibrary.AddAction.UnsupportedReason();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v20 - v13;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v2, v4);
  if ((*(unsigned int (**)(char *, uint64_t))(v5 + 88))(v7, v4) == enum case for MusicLibrary.SupportedStatus.unsupported<A>(_:))
  {
    (*(void (**)(char *, uint64_t))(v5 + 96))(v7, v4);
    uint64_t v15 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
    v15(v14, v7, v8);
    v15(v12, v14, v8);
    if ((*(unsigned int (**)(char *, uint64_t))(v9 + 88))(v12, v8) == enum case for MusicLibrary.AddAction.UnsupportedReason.unaddable(_:))
    {
      (*(void (**)(char *, uint64_t))(v9 + 96))(v12, v8);
      uint64_t v16 = type metadata accessor for MusicLibrary.AddStatus.UnaddableReason();
      uint64_t v17 = *(void *)(v16 - 8);
      (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(a1, v12, v16);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v17 + 56))(a1, 0, 1, v16);
    }
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  uint64_t v19 = type metadata accessor for MusicLibrary.AddStatus.UnaddableReason();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(a1, 1, 1, v19);
}

uint64_t closure #3 in Actions.AddToLibrary.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:observer:metricsReportingContext:)(uint64_t a1, uint64_t a2)
{
  void v2[2] = a1;
  v2[3] = a2;
  type metadata accessor for MainActor();
  v2[4] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(closure #3 in Actions.AddToLibrary.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:observer:metricsReportingContext:), v4, v3);
}

uint64_t closure #3 in Actions.AddToLibrary.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:observer:metricsReportingContext:)()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_release();
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + 24);
    uint64_t ObjectType = swift_getObjectType();
    *(unsigned char *)(v0 + 40) = 0;
    uint64_t v4 = *(void (**)(uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(v2 + 16);
    unint64_t v5 = lazy protocol witness table accessor for type ActionType and conformance ActionType();
    v4(v0 + 40, &type metadata for ActionType, v5, ObjectType, v2);
  }
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_100018ED0()
{
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t partial apply for closure #3 in Actions.AddToLibrary.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:observer:metricsReportingContext:)()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = partial apply for closure #1 in static MusicEngagementExtension.performRequest(with:completion:);
  return closure #3 in Actions.AddToLibrary.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:observer:metricsReportingContext:)(v2, v3);
}

uint64_t thunk for @escaping @callee_guaranteed @Sendable @async () -> ()(int *a1)
{
  uint64_t v4 = (uint64_t (*)(void))((char *)a1 + *a1);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTRyt_Tg5TQ0_;
  return v4();
}

uint64_t sub_10001906C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed @Sendable @async () -> ()()
{
  uint64_t v2 = *(int **)(v0 + 16);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = closure #3 in static Actions.ReportConcern.action(context:);
  uint64_t v4 = (uint64_t (*)(int *))((char *)&async function pointer to thunk for @escaping @callee_guaranteed @Sendable @async () -> ()
                                     + async function pointer to thunk for @escaping @callee_guaranteed @Sendable @async () -> ());
  return v4(v2);
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

uint64_t outlined consume of ActionSupportedStatus(uint64_t a1, uint64_t a2)
{
  if (a2 != 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t Actions.AddToLibrary.Context.menuItemTitle.getter()
{
  uint64_t v0 = type metadata accessor for Locale();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = type metadata accessor for String.LocalizationValue();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  uint64_t v5 = &v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v3);
  uint64_t v7 = &v11[-v6];
  String.LocalizationValue.init(stringLiteral:)();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v2 + 16))(v5, v7, v1);
  if (one-time initialization token for module != -1) {
    swift_once();
  }
  id v8 = (id)static NSBundle.module;
  static Locale.current.getter();
  uint64_t v9 = String.init(localized:table:bundle:locale:comment:)();
  (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v7, v1);
  return v9;
}

uint64_t (*Actions.AddToLibrary.Context.menuItemImage.getter())()
{
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = 1937075312;
  *(void *)(v0 + 24) = 0xE400000000000000;
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = 1937075312;
  *(void *)(v1 + 24) = 0xE400000000000000;
  return partial apply for closure #1 in ActionMenuItemImage.init(systemName:);
}

uint64_t (*protocol witness for ActionMenuItemConfiguring.menuItemImage.getter in conformance Actions.AddToLibrary.Context())()
{
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = 1937075312;
  *(void *)(v0 + 24) = 0xE400000000000000;
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = 1937075312;
  *(void *)(v1 + 24) = 0xE400000000000000;
  return closure #1 in ActionMenuItemImage.init(systemName:)partial apply;
}

void NSDirectionalEdgeInsets.Edge.hash(into:)(uint64_t a1, unsigned __int8 a2)
{
}

Swift::Int MPCPlaybackEngine.Option.hashValue.getter(unsigned __int8 a1)
{
  return Hasher._finalize()();
}

uint64_t sub_10001952C()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

unint64_t lazy protocol witness table accessor for type Album.ChildrenAddStatus and conformance Album.ChildrenAddStatus()
{
  unint64_t result = lazy protocol witness table cache variable for type Album.ChildrenAddStatus and conformance Album.ChildrenAddStatus;
  if (!lazy protocol witness table cache variable for type Album.ChildrenAddStatus and conformance Album.ChildrenAddStatus)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Album.ChildrenAddStatus and conformance Album.ChildrenAddStatus);
  }
  return result;
}

ValueMetadata *type metadata accessor for Actions.AddToLibrary()
{
  return &type metadata for Actions.AddToLibrary;
}

uint64_t destroy for Actions.AddToLibrary.Context()
{
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for Actions.AddToLibrary.Context(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = v3;
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for Actions.AddToLibrary.Context(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_retain();
  swift_release();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for Actions.AddToLibrary.Context(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  a1[2] = a2[2];
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for Actions.AddToLibrary.Context(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Actions.AddToLibrary.Context(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Actions.AddToLibrary.Context()
{
  return &type metadata for Actions.AddToLibrary.Context;
}

unsigned char *__swift_memcpy1_1_0(unsigned char *result, unsigned char *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for Album.ChildrenAddStatus(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for Album.ChildrenAddStatus(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100019958);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Album.ChildrenAddStatus()
{
  return &type metadata for Album.ChildrenAddStatus;
}

BOOL specialized Sequence.contains(where:)(uint64_t a1, uint64_t a2, void **a3)
{
  uint64_t v39 = a2;
  uint64_t v40 = a3;
  uint64_t v38 = type metadata accessor for Track();
  uint64_t v4 = *(void *)(v38 - 8);
  uint64_t v5 = __chkstk_darwin(v38);
  uint64_t v37 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v36 = (char *)&v28 - v7;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicItemCollection<Track>);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IndexingIterator<MusicItemCollection<Track>>);
  uint64_t v13 = v12 - 8;
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v33(v11, a1, v8);
  lazy protocol witness table accessor for type MusicItemCollection<Track> and conformance MusicItemCollection<A>(&lazy protocol witness table cache variable for type MusicItemCollection<Track> and conformance MusicItemCollection<A>);
  uint64_t v34 = v11;
  dispatch thunk of Sequence.makeIterator()();
  uint64_t v16 = &v15[*(int *)(v13 + 44)];
  uint64_t v41 = lazy protocol witness table accessor for type MusicItemCollection<Track> and conformance MusicItemCollection<A>((unint64_t *)&lazy protocol witness table cache variable for type MusicItemCollection<Track> and conformance MusicItemCollection<A>);
  uint64_t v35 = v9 + 16;
  uint64_t v30 = (void (**)(char *, uint64_t))(v9 + 8);
  uint64_t v31 = (void (**)(char *))(v4 + 16);
  uint64_t v29 = (void (**)(char *, char *, uint64_t))(v4 + 32);
  BOOL v32 = (void (**)(uint64_t, uint64_t))(v4 + 8);
  uint64_t v17 = v38;
  while (1)
  {
    uint64_t v18 = *(void *)v16;
    dispatch thunk of Collection.endIndex.getter();
    uint64_t v42 = v44[0];
    uint64_t v43 = v18;
    if (v18 == v44[0])
    {
LABEL_5:
      uint64_t v26 = (uint64_t)v15;
      goto LABEL_7;
    }
    uint64_t v19 = (void (*)(uint64_t *, void))dispatch thunk of Collection.subscript.read();
    uint64_t v20 = v36;
    (*v31)(v36);
    v19(v44, 0);
    uint64_t v21 = v34;
    v33(v34, (uint64_t)v15, v8);
    dispatch thunk of Collection.formIndex(after:)();
    (*v30)(v21, v8);
    uint64_t v22 = (uint64_t)v37;
    (*v29)(v37, v20, v17);
    uint64_t v23 = v45;
    BOOL v24 = closure #1 in closure #2 in Actions.AddToLibrary.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:observer:metricsReportingContext:)(v22, v39, v40);
    uint64_t v45 = v23;
    if (v23) {
      break;
    }
    BOOL v25 = v24;
    (*v32)(v22, v17);
    if (v25) {
      goto LABEL_5;
    }
  }
  (*v32)(v22, v17);
  uint64_t v26 = (uint64_t)v15;
LABEL_7:
  outlined destroy of TaskPriority?(v26, &demangling cache variable for type metadata for IndexingIterator<MusicItemCollection<Track>>);
  return v43 != v42;
}

uint64_t outlined destroy of SubscriptionUpsellPresenter.Placement(uint64_t a1)
{
  return a1;
}

uint64_t outlined init with take of PresentationSource?(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t outlined destroy of Actions.MetricsReportingContext(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t outlined release of Alert(uint64_t a1)
{
  int v2 = *(void **)(a1 + 48);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return a1;
}

uint64_t lazy protocol witness table accessor for type MusicLibrary.AddStatus.UnaddableReason and conformance MusicLibrary.AddStatus.UnaddableReason(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for MusicLibrary.AddStatus.UnaddableReason();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t outlined init with take of PresentationSource(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t partial apply for closure #1 in static CloudLibrary.presentCloudLibraryEnabler(context:presentationSource:style:)(uint64_t a1)
{
  return closure #1 in static CloudLibrary.presentCloudLibraryEnabler(context:presentationSource:style:)(a1, *(unsigned __int8 *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t outlined destroy of PresentationSource(uint64_t a1)
{
  return a1;
}

uint64_t lazy protocol witness table accessor for type MusicItemCollection<Track> and conformance MusicItemCollection<A>(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for MusicItemCollection<Track>);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t static Actions.AddToPlaylist.action(context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *(void *)(a1 + 40);
  *(void *)a2 = *(void *)a1;
  *(_OWORD *)(a2 + 8) = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(a1 + 24);
  *(void *)(a2 + 40) = v2;
  *(unsigned char *)(a2 + 48) = 2;
  *(void *)(a2 + 56) = closure #1 in static Actions.AddToLibrary.action(context:);
  *(void *)(a2 + 64) = 0;
  *(void *)(a2 + 72) = 0x4014000000000000;
  *(void *)(a2 + 80) = &async function pointer to closure #2 in static Actions.AddToPlaylist.action(context:);
  *(void *)(a2 + 88) = 0;
  *(void *)(a2 + 96) = &async function pointer to closure #3 in static Actions.AddToPlaylist.action(context:);
  *(void *)(a2 + 104) = 0;
  swift_retain();
  swift_retain();

  return swift_retain();
}

uint64_t (*Actions.AddToPlaylist.Context.menuItemImage.getter())()
{
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = 0x6461622E74786574;
  *(void *)(v0 + 24) = 0xEF73756C702E6567;
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = 0x6461622E74786574;
  *(void *)(v1 + 24) = 0xEF73756C702E6567;
  return partial apply for closure #1 in ActionMenuItemImage.init(systemName:);
}

uint64_t (*protocol witness for ActionMenuItemConfiguring.menuItemImage.getter in conformance Actions.AddToPlaylist.Context())()
{
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = 0x6461622E74786574;
  *(void *)(v0 + 24) = 0xEF73756C702E6567;
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = 0x6461622E74786574;
  *(void *)(v1 + 24) = 0xEF73756C702E6567;
  return closure #1 in ActionMenuItemImage.init(systemName:)partial apply;
}

double Actions.AddToPlaylist.Context.init<A, B>(item:library:playlistPickerPresenter:alertPresenter:presentationSource:metricsReportingContext:)@<D0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, long long *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _OWORD *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  specialized Actions.AddToPlaylist.Context.init<A, B>(item:library:playlistPickerPresenter:alertPresenter:presentationSource:metricsReportingContext:)(a1, a2, a3, a4, a5, a6, a7, a8, (unint64_t (**)())v15, a10, a11, a12);
  swift_release();
  long long v13 = v15[1];
  *a9 = v15[0];
  a9[1] = v13;
  double result = *(double *)&v16;
  a9[2] = v16;
  return result;
}

unint64_t closure #1 in Actions.AddToPlaylist.Context.init<A, B>(item:library:playlistPickerPresenter:alertPresenter:presentationSource:metricsReportingContext:)(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MusicLibrary.AddStatus.UnaddableReason();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v57 = v2;
  uint64_t v58 = v3;
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v59 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v56 = (char *)&v53 - v6;
  uint64_t v7 = type metadata accessor for MusicLibrary.AddAction.UnsupportedReason();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  long long v13 = (char *)&v53 - v12;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicLibrary.SupportedStatus<MusicLibrary.AddAction>);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v53 = (char *)&v53 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v55 = (char *)&v53 - v19;
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v53 - v20;
  uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  uint64_t v54 = a1;
  v22((char *)&v53 - v20, a1, v14);
  int v23 = (*(uint64_t (**)(char *, uint64_t))(v15 + 88))(v21, v14);
  if (v23 != enum case for MusicLibrary.SupportedStatus.unsupported<A>(_:))
  {
    if (v23 != enum case for MusicLibrary.SupportedStatus.supported<A>(_:))
    {
      if (one-time initialization token for actions != -1) {
        swift_once();
      }
      uint64_t v34 = type metadata accessor for Logger();
      __swift_project_value_buffer(v34, (uint64_t)static Logger.actions);
      uint64_t v35 = v55;
      v22(v55, v54, v14);
      uint64_t v36 = Logger.logObject.getter();
      os_log_type_t v37 = static os_log_type_t.fault.getter();
      if (os_log_type_enabled(v36, v37))
      {
        uint64_t v38 = swift_slowAlloc();
        uint64_t v59 = (char *)swift_slowAlloc();
        uint64_t v60 = v59;
        *(_DWORD *)uint64_t v38 = 136315138;
        v22(v53, (uint64_t)v35, v14);
        uint64_t v39 = String.init<A>(describing:)();
        *(void *)(v38 + 4) = _s2os32getNullTerminatedUTF8PointerImpl_21storingStringOwnersInSVSS_SpyypGSgztF_0(v39, v40, (uint64_t *)&v60);
        swift_bridgeObjectRelease();
        uint64_t v41 = v35;
        uint64_t v42 = *(void (**)(char *, uint64_t))(v15 + 8);
        v42(v41, v14);
        _os_log_impl((void *)&_mh_execute_header, v36, v37, "Unknown status=%s", (uint8_t *)v38, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        uint64_t v44 = v35;
        uint64_t v42 = *(void (**)(char *, uint64_t))(v15 + 8);
        v42(v44, v14);
      }

      unint64_t v33 = 0x206E776F6E6B6E55;
      v42(v21, v14);
      return v33;
    }
    return 0;
  }
  (*(void (**)(char *, uint64_t))(v15 + 96))(v21, v14);
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v13, v21, v7);
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v13, v7);
  int v24 = (*(uint64_t (**)(char *, uint64_t))(v8 + 88))(v11, v7);
  uint64_t v25 = v7;
  if (v24 != enum case for MusicLibrary.AddAction.UnsupportedReason.unaddable(_:))
  {
    int v43 = v24;
    if (v24 == enum case for MusicLibrary.AddAction.UnsupportedReason.unsupportedType(_:))
    {
      unint64_t v33 = 0xD000000000000010;
      (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
      return v33;
    }
    if (v24 == enum case for MusicLibrary.AddAction.UnsupportedReason.alreadyAdded(_:)) {
      goto LABEL_27;
    }
    int v45 = enum case for MusicLibrary.AddAction.UnsupportedReason.networkRequired(_:);
    uint64_t v46 = v13;
    uint64_t v47 = *(void (**)(char *, uint64_t))(v8 + 8);
    v47(v46, v7);
    if (v43 != v45)
    {
      unint64_t v33 = 0x206E776F6E6B6E55;
      v47(v11, v7);
      return v33;
    }
    return 0;
  }
  (*(void (**)(char *, uint64_t))(v8 + 96))(v11, v7);
  uint64_t v26 = v58;
  unint64_t v27 = v56;
  uint64_t v28 = v11;
  uint64_t v29 = v57;
  (*(void (**)(char *, char *, uint64_t))(v58 + 32))(v56, v28, v57);
  uint64_t v30 = v59;
  (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v59, v27, v29);
  int v31 = (*(uint64_t (**)(char *, uint64_t))(v26 + 88))(v30, v29);
  if (v31 == enum case for MusicLibrary.AddStatus.UnaddableReason.allExplicitContentRestricted(_:)) {
    goto LABEL_26;
  }
  int v32 = v31;
  if (v31 == enum case for MusicLibrary.AddStatus.UnaddableReason.cloudLibraryRequired(_:)) {
    goto LABEL_26;
  }
  if (v31 == enum case for MusicLibrary.AddStatus.UnaddableReason.cloudLibraryInitialImport(_:))
  {
    (*(void (**)(char *, uint64_t))(v26 + 8))(v27, v29);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v25);
    return 0xD00000000000001CLL;
  }
  if (v31 == enum case for MusicLibrary.AddStatus.UnaddableReason.libraryAddIneligibleContent(_:))
  {
    (*(void (**)(char *, uint64_t))(v26 + 8))(v27, v29);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v25);
    return 0xD00000000000001ELL;
  }
  if (v31 == enum case for MusicLibrary.AddStatus.UnaddableReason.invalidContentType(_:))
  {
    (*(void (**)(char *, uint64_t))(v26 + 8))(v27, v29);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v25);
    return 0xD000000000000014;
  }
  if (v31 == enum case for MusicLibrary.AddStatus.UnaddableReason.subscriptionAccountLinkingRequired(_:))
  {
    (*(void (**)(char *, uint64_t))(v26 + 8))(v27, v29);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v25);
    return 0xD000000000000025;
  }
  if (v31 == enum case for MusicLibrary.AddStatus.UnaddableReason.subscriptionRequired(_:))
  {
LABEL_26:
    (*(void (**)(char *, uint64_t))(v26 + 8))(v27, v29);
LABEL_27:
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v25);
    return 0;
  }
  if (v31 == enum case for MusicLibrary.AddStatus.UnaddableReason.sharedLibrary(_:))
  {
    (*(void (**)(char *, uint64_t))(v26 + 8))(v27, v29);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v25);
    return 0xD000000000000016;
  }
  else
  {
    unint64_t v33 = 0x206E776F6E6B6E55;
    uint64_t v49 = v27;
    int v50 = enum case for MusicLibrary.AddStatus.UnaddableReason.unknown(_:);
    uint64_t v51 = v13;
    uint64_t v52 = *(void (**)(char *, uint64_t))(v26 + 8);
    v52(v49, v29);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v51, v25);
    if (v32 != v50) {
      v52(v59, v29);
    }
  }
  return v33;
}

uint64_t closure #2 in Actions.AddToPlaylist.Context.init<A, B>(item:library:playlistPickerPresenter:alertPresenter:presentationSource:metricsReportingContext:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[48] = v13;
  v8[49] = v14;
  v8[46] = a7;
  v8[47] = a8;
  v8[44] = a5;
  v8[45] = a6;
  v8[42] = a3;
  v8[43] = a4;
  v8[40] = a1;
  v8[41] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicItemCollection<Track>?);
  v8[50] = swift_task_alloc();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicItemCollection<Track>);
  v8[51] = v9;
  v8[52] = *(void *)(v9 - 8);
  v8[53] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicLibrary.AddStatus.UnaddableReason?);
  v8[54] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for MusicLibrary.AddStatus.UnaddableReason();
  v8[55] = v10;
  v8[56] = *(void *)(v10 - 8);
  v8[57] = swift_task_alloc();
  v8[58] = swift_task_alloc();
  v8[59] = swift_task_alloc();
  return _swift_task_switch(closure #2 in Actions.AddToPlaylist.Context.init<A, B>(item:library:playlistPickerPresenter:alertPresenter:presentationSource:metricsReportingContext:), 0, 0);
}

uint64_t closure #2 in Actions.AddToPlaylist.Context.init<A, B>(item:library:playlistPickerPresenter:alertPresenter:presentationSource:metricsReportingContext:)()
{
  uint64_t v50 = v0;
  uint64_t v1 = *(void *)(v0 + 440);
  uint64_t v2 = *(void *)(v0 + 448);
  uint64_t v3 = *(void *)(v0 + 432);
  MusicLibrary.SupportedStatus<>.unaddableReason.getter(v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    outlined destroy of TaskPriority?(*(void *)(v0 + 432), &demangling cache variable for type metadata for MusicLibrary.AddStatus.UnaddableReason?);
    uint64_t v4 = (void *)swift_task_alloc();
    *(void *)(v0 + 480) = v4;
    *uint64_t v4 = v0;
    v4[1] = closure #2 in Actions.AddToPlaylist.Context.init<A, B>(item:library:playlistPickerPresenter:alertPresenter:presentationSource:metricsReportingContext:);
    uint64_t v5 = *(void *)(v0 + 400);
    uint64_t v6 = *(void *)(v0 + 360);
    return MusicPlaylistAddable.tracks.getter(v5, v6);
  }
  uint64_t v8 = *(void *)(v0 + 464);
  uint64_t v9 = *(void *)(v0 + 472);
  uint64_t v10 = *(void *)(v0 + 440);
  uint64_t v11 = *(void *)(v0 + 448);
  (*(void (**)(uint64_t, void, uint64_t))(v11 + 32))(v9, *(void *)(v0 + 432), v10);
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
  v12(v8, v9, v10);
  int v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 88))(v8, v10);
  if (v13 == enum case for MusicLibrary.AddStatus.UnaddableReason.allExplicitContentRestricted(_:))
  {
    uint64_t v14 = *(void **)(v0 + 328);
    uint64_t v15 = v14[3];
    *(void *)(v0 + 488) = v15;
    *(void *)(v0 + 496) = v14[4];
    *(void *)(v0 + 504) = __swift_project_boxed_opaque_existential_0Tm(v14, v15);
    type metadata accessor for MainActor();
    *(void *)(v0 + 512) = static MainActor.shared.getter();
    uint64_t v16 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v18 = v17;
    uint64_t v19 = closure #2 in Actions.AddToPlaylist.Context.init<A, B>(item:library:playlistPickerPresenter:alertPresenter:presentationSource:metricsReportingContext:);
    goto LABEL_10;
  }
  if (v13 == enum case for MusicLibrary.AddStatus.UnaddableReason.cloudLibraryRequired(_:))
  {
    outlined init with copy of (String, Any)(*(void *)(v0 + 336), v0 + 88, &demangling cache variable for type metadata for PresentationSource?);
    if (*(void *)(v0 + 144) != 1)
    {
      outlined init with take of PresentationSource(v0 + 88, v0 + 16);
      *(void *)(v0 + 568) = type metadata accessor for MainActor();
      *(void *)(v0 + 576) = static MainActor.shared.getter();
      uint64_t v29 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v25 = v30;
      *(void *)(v0 + 584) = v29;
      *(void *)(v0 + 592) = v30;
      int v23 = closure #2 in Actions.AddToPlaylist.Context.init<A, B>(item:library:playlistPickerPresenter:alertPresenter:presentationSource:metricsReportingContext:);
      uint64_t v24 = v29;
      goto LABEL_11;
    }
    uint64_t v20 = *(void **)(v0 + 328);
    outlined destroy of TaskPriority?(v0 + 88, &demangling cache variable for type metadata for PresentationSource?);
    uint64_t v21 = v20[3];
    *(void *)(v0 + 528) = v21;
    *(void *)(v0 + 536) = v20[4];
    *(void *)(v0 + 544) = __swift_project_boxed_opaque_existential_0Tm(v20, v21);
    type metadata accessor for MainActor();
    *(void *)(v0 + 552) = static MainActor.shared.getter();
    uint64_t v16 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v18 = v22;
    uint64_t v19 = closure #2 in Actions.AddToPlaylist.Context.init<A, B>(item:library:playlistPickerPresenter:alertPresenter:presentationSource:metricsReportingContext:);
LABEL_10:
    int v23 = v19;
    uint64_t v24 = v16;
    uint64_t v25 = v18;
LABEL_11:
    return _swift_task_switch(v23, v24, v25);
  }
  if (v13 == enum case for MusicLibrary.AddStatus.UnaddableReason.subscriptionRequired(_:))
  {
    uint64_t v26 = *(void *)(v0 + 472);
    uint64_t v27 = *(void *)(v0 + 440);
    uint64_t v28 = *(void *)(v0 + 448);
    *(_OWORD *)(v0 + 272) = 0u;
    *(_OWORD *)(v0 + 288) = 0u;
    *(void *)(v0 + 304) = 0;
    *(unsigned char *)(v0 + 312) = -2;
    specialized static SubscriptionUpsellPresenter.present(for:)(v0 + 272);
    outlined destroy of SubscriptionUpsellPresenter.Placement(v0 + 272);
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v26, v27);
  }
  else
  {
    if (one-time initialization token for actions != -1) {
      swift_once();
    }
    uint64_t v31 = *(void *)(v0 + 472);
    uint64_t v32 = *(void *)(v0 + 456);
    uint64_t v33 = *(void *)(v0 + 440);
    uint64_t v34 = type metadata accessor for Logger();
    __swift_project_value_buffer(v34, (uint64_t)static Logger.actions);
    v12(v32, v31, v33);
    uint64_t v35 = Logger.logObject.getter();
    os_log_type_t v36 = static os_log_type_t.fault.getter();
    BOOL v37 = os_log_type_enabled(v35, v36);
    uint64_t v38 = *(void *)(v0 + 472);
    uint64_t v39 = *(void *)(v0 + 448);
    uint64_t v40 = *(void *)(v0 + 456);
    uint64_t v41 = *(void *)(v0 + 440);
    if (v37)
    {
      uint64_t v48 = *(void *)(v0 + 472);
      uint64_t v42 = swift_slowAlloc();
      uint64_t v49 = swift_slowAlloc();
      *(_DWORD *)uint64_t v42 = 136315138;
      lazy protocol witness table accessor for type Playlist.Entry.InternalItem and conformance Playlist.Entry.InternalItem(&lazy protocol witness table cache variable for type MusicLibrary.AddStatus.UnaddableReason and conformance MusicLibrary.AddStatus.UnaddableReason, (void (*)(uint64_t))&type metadata accessor for MusicLibrary.AddStatus.UnaddableReason);
      uint64_t v43 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)(v42 + 4) = _s2os32getNullTerminatedUTF8PointerImpl_21storingStringOwnersInSVSS_SpyypGSgztF_0(v43, v44, &v49);
      swift_bridgeObjectRelease();
      int v45 = *(void (**)(uint64_t, uint64_t))(v39 + 8);
      v45(v40, v41);
      _os_log_impl((void *)&_mh_execute_header, v35, v36, "Unhandled unaddableReason=%s", (uint8_t *)v42, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v46 = v48;
    }
    else
    {

      int v45 = *(void (**)(uint64_t, uint64_t))(v39 + 8);
      v45(v40, v41);
      uint64_t v46 = v38;
    }
    v45(v46, v41);
    v45(*(void *)(v0 + 464), *(void *)(v0 + 440));
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v47 = *(uint64_t (**)(void))(v0 + 8);
  return v47();
}

{
  uint64_t v1;

  swift_task_dealloc();
  return _swift_task_switch(closure #2 in Actions.AddToPlaylist.Context.init<A, B>(item:library:playlistPickerPresenter:alertPresenter:presentationSource:metricsReportingContext:), 0, 0);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v14;

  uint64_t v1 = v0[51];
  uint64_t v2 = v0[52];
  uint64_t v3 = v0[50];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    type metadata accessor for Track();
    MusicItemCollection.init(arrayLiteral:)();
    outlined destroy of TaskPriority?(v3, &demangling cache variable for type metadata for MusicItemCollection<Track>?);
  }
  else
  {
    (*(void (**)(void, uint64_t, uint64_t))(v2 + 32))(v0[53], v3, v1);
  }
  int v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v0[49] + 8)
                                                                                              + **(int **)(v0[49] + 8));
  uint64_t v4 = (void *)swift_task_alloc();
  v0[78] = v4;
  *uint64_t v4 = v0;
  v4[1] = closure #2 in Actions.AddToPlaylist.Context.init<A, B>(item:library:playlistPickerPresenter:alertPresenter:presentationSource:metricsReportingContext:);
  uint64_t v5 = v0[48];
  uint64_t v6 = v0[49];
  uint64_t v8 = v0[46];
  uint64_t v7 = v0[47];
  uint64_t v9 = v0[45];
  uint64_t v10 = v0[43];
  uint64_t v11 = v0[53];
  return v13(v11, v10, v9, v7, v5, v8, v6);
}

{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v5)(void *, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;

  uint64_t v6 = v0[62];
  swift_release();
  specialized static Alert.explicitRestrictedAlert(forPlayback:)((uint64_t)(v0 + 27));
  uint64_t v5 = (uint64_t (*)(void *, uint64_t, uint64_t))(*(void *)(v6 + 8) + **(int **)(v6 + 8));
  uint64_t v1 = (void *)swift_task_alloc();
  v0[65] = v1;
  *uint64_t v1 = v0;
  v1[1] = closure #2 in Actions.AddToPlaylist.Context.init<A, B>(item:library:playlistPickerPresenter:alertPresenter:presentationSource:metricsReportingContext:);
  uint64_t v2 = v0[62];
  uint64_t v3 = v0[61];
  return v5(v0 + 27, v3, v2);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v3;

  uint64_t v1 = *v0 + 216;
  swift_task_dealloc();
  outlined release of Alert(v1);
  return _swift_task_switch(closure #2 in Actions.AddToPlaylist.Context.init<A, B>(item:library:playlistPickerPresenter:alertPresenter:presentationSource:metricsReportingContext:), 0, 0);
}

{
  void *v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  (*(void (**)(void, void))(v0[56] + 8))(v0[59], v0[55]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v5)(void *, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;

  uint64_t v6 = v0[67];
  swift_release();
  specialized static Alert.enableCloudLibraryAlert(context:)((uint64_t)(v0 + 20));
  uint64_t v5 = (uint64_t (*)(void *, uint64_t, uint64_t))(*(void *)(v6 + 8) + **(int **)(v6 + 8));
  uint64_t v1 = (void *)swift_task_alloc();
  v0[70] = v1;
  *uint64_t v1 = v0;
  v1[1] = closure #2 in Actions.AddToPlaylist.Context.init<A, B>(item:library:playlistPickerPresenter:alertPresenter:presentationSource:metricsReportingContext:);
  uint64_t v2 = v0[67];
  uint64_t v3 = v0[66];
  return v5(v0 + 20, v3, v2);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v3;

  uint64_t v1 = *v0 + 160;
  swift_task_dealloc();
  outlined release of Alert(v1);
  return _swift_task_switch(closure #2 in Actions.AddToPlaylist.Context.init<A, B>(item:library:playlistPickerPresenter:alertPresenter:presentationSource:metricsReportingContext:), 0, 0);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v5;

  uint64_t v1 = static MainActor.shared.getter();
  v0[75] = v1;
  uint64_t v2 = swift_task_alloc();
  v0[76] = v2;
  *(unsigned char *)(v2 + 16) = 2;
  *(void *)(v2 + 24) = v0 + 2;
  *(void *)(v2 + 32) = 0;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[77] = v3;
  *uint64_t v3 = v0;
  v3[1] = closure #2 in Actions.AddToPlaylist.Context.init<A, B>(item:library:playlistPickerPresenter:alertPresenter:presentationSource:metricsReportingContext:);
  return withCheckedContinuation<A>(isolation:function:_:)((char *)v0 + 313, v1, &protocol witness table for MainActor, 0xD00000000000003DLL, 0x8000000100467B20, partial apply for closure #1 in static CloudLibrary.presentCloudLibraryEnabler(context:presentationSource:style:), v2, &type metadata for Bool);
}

{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 592);
  uint64_t v3 = *(void *)(v1 + 584);
  return _swift_task_switch(closure #2 in Actions.AddToPlaylist.Context.init<A, B>(item:library:playlistPickerPresenter:alertPresenter:presentationSource:metricsReportingContext:), v3, v2);
}

{
  uint64_t v1;

  swift_release();
  return _swift_task_switch(closure #2 in Actions.AddToPlaylist.Context.init<A, B>(item:library:playlistPickerPresenter:alertPresenter:presentationSource:metricsReportingContext:), 0, 0);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);
  uint64_t v6;

  uint64_t v1 = v0[59];
  uint64_t v2 = v0[55];
  uint64_t v3 = v0[56];
  outlined destroy of PresentationSource((uint64_t)(v0 + 2));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

{
  uint64_t v1;

  swift_task_dealloc();
  return _swift_task_switch(closure #2 in Actions.AddToPlaylist.Context.init<A, B>(item:library:playlistPickerPresenter:alertPresenter:presentationSource:metricsReportingContext:), 0, 0);
}

{
  void *v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  (*(void (**)(void, void))(v0[52] + 8))(v0[53], v0[51]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t MusicPlaylistAddable.tracks.getter(uint64_t a1, uint64_t a2)
{
  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  uint64_t v5 = type metadata accessor for Playlist.Entry.InternalItem();
  v3[6] = v5;
  v3[7] = *(void *)(v5 - 8);
  v3[8] = swift_task_alloc();
  v3[9] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Playlist.Entry?);
  v3[10] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for Playlist.Entry();
  v3[11] = v6;
  v3[12] = *(void *)(v6 - 8);
  v3[13] = swift_task_alloc();
  v3[14] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Track?);
  v3[15] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for Track();
  v3[16] = v7;
  v3[17] = *(void *)(v7 - 8);
  v3[18] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicVideo?);
  v3[19] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for MusicVideo();
  v3[20] = v8;
  v3[21] = *(void *)(v8 - 8);
  v3[22] = swift_task_alloc();
  v3[23] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Song?);
  v3[24] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for Song();
  v3[25] = v9;
  v3[26] = *(void *)(v9 - 8);
  v3[27] = swift_task_alloc();
  v3[28] = swift_task_alloc();
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicItemCollection<Track>);
  v3[29] = v10;
  v3[30] = *(void *)(v10 - 8);
  v3[31] = swift_task_alloc();
  v3[32] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicItemCollection<Track>?);
  v3[33] = swift_task_alloc();
  v3[34] = swift_task_alloc();
  v3[35] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Playlist?);
  v3[36] = swift_task_alloc();
  uint64_t v11 = type metadata accessor for Playlist();
  v3[37] = v11;
  v3[38] = *(void *)(v11 - 8);
  v3[39] = swift_task_alloc();
  v3[40] = swift_task_alloc();
  v3[41] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Album?);
  v3[42] = swift_task_alloc();
  v3[43] = *(void *)(a2 - 8);
  v3[44] = swift_task_alloc();
  v3[45] = swift_task_alloc();
  v3[46] = swift_task_alloc();
  v3[47] = swift_task_alloc();
  v3[48] = swift_task_alloc();
  v3[49] = swift_task_alloc();
  v3[50] = swift_task_alloc();
  v3[51] = swift_task_alloc();
  uint64_t v12 = type metadata accessor for Album();
  v3[52] = v12;
  v3[53] = *(void *)(v12 - 8);
  v3[54] = swift_task_alloc();
  v3[55] = swift_task_alloc();
  return _swift_task_switch(MusicPlaylistAddable.tracks.getter, 0, 0);
}

uint64_t MusicPlaylistAddable.tracks.getter()
{
  v157 = v0;
  uint64_t v1 = v0[53];
  uint64_t v2 = v0[51];
  uint64_t v3 = v0[43];
  uint64_t v5 = v0[4];
  uint64_t v4 = v0[5];
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v0[56] = v6;
  v0[57] = (v3 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v151 = v6;
  v6(v2, v4, v5);
  int v7 = swift_dynamicCast();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v1 + 56);
  if (v7)
  {
    uint64_t v9 = v0[55];
    uint64_t v10 = v0[52];
    uint64_t v11 = v0[53];
    uint64_t v12 = v0[42];
    v8(v12, 0, 1, v10);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32))(v9, v12, v10);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_100493D20;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PartialMusicAsyncProperty<Album>);
    *(void *)(v13 + 32) = static PartialMusicProperty<A>.tracks.getter();
    uint64_t v156 = v13;
    specialized Array._endMutation()();
    uint64_t v14 = v13;
    v0[58] = v13;
    uint64_t v15 = (void *)swift_task_alloc();
    v0[59] = v15;
    uint64_t v16 = lazy protocol witness table accessor for type Playlist.Entry.InternalItem and conformance Playlist.Entry.InternalItem(&lazy protocol witness table cache variable for type Album and conformance Album, (void (*)(uint64_t))&type metadata accessor for Album);
    void *v15 = v0;
    v15[1] = MusicPlaylistAddable.tracks.getter;
    uint64_t v17 = v0[54];
    uint64_t v18 = v0[52];
    return MusicItem<>.with(_:)(v17, v14, v18, &protocol witness table for Album, &protocol witness table for Album, v16);
  }
  uint64_t v19 = v0[50];
  uint64_t v20 = v0[42];
  uint64_t v21 = v0[38];
  uint64_t v23 = v0[4];
  uint64_t v22 = v0[5];
  v8(v20, 1, 1, v0[52]);
  outlined destroy of TaskPriority?(v20, &demangling cache variable for type metadata for Album?);
  v151(v19, v22, v23);
  int v24 = swift_dynamicCast();
  uint64_t v25 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 56);
  if (v24)
  {
    uint64_t v26 = v0[41];
    uint64_t v27 = v0[37];
    uint64_t v28 = v0[38];
    uint64_t v29 = v0[36];
    v25(v29, 0, 1, v27);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 32))(v26, v29, v27);
    v0[61] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    uint64_t v30 = swift_allocObject();
    *(_OWORD *)(v30 + 16) = xmmword_100493D20;
    v0[62] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PartialMusicAsyncProperty<Playlist>);
    *(void *)(v30 + 32) = static PartialMusicProperty<A>.tracks.getter();
    uint64_t v156 = v30;
    specialized Array._endMutation()();
    v0[63] = v30;
    uint64_t v31 = (void *)swift_task_alloc();
    v0[64] = v31;
    *uint64_t v31 = v0;
    v31[1] = MusicPlaylistAddable.tracks.getter;
    uint64_t v32 = v0[40];
    uint64_t v33 = v0[37];
    return dispatch thunk of MusicPropertyContainer.with(_:)(v32, v30, v33, &protocol witness table for Playlist);
  }
  uint64_t v34 = v0[49];
  uint64_t v35 = v0[36];
  uint64_t v36 = v0[26];
  uint64_t v38 = v0[4];
  uint64_t v37 = v0[5];
  v25(v35, 1, 1, v0[37]);
  outlined destroy of TaskPriority?(v35, &demangling cache variable for type metadata for Playlist?);
  v151(v34, v37, v38);
  int v39 = swift_dynamicCast();
  uint64_t v40 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 56);
  if (v39)
  {
    uint64_t v41 = v0[30];
    uint64_t v42 = v0[28];
    uint64_t v44 = v0[25];
    uint64_t v43 = v0[26];
    uint64_t v45 = v0[24];
    uint64_t v47 = v0[16];
    uint64_t v46 = v0[17];
    uint64_t v148 = v0[3];
    uint64_t v152 = v0[29];
    v40(v45, 0, 1, v44);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 32))(v42, v45, v44);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Track>);
    unint64_t v48 = (*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80);
    uint64_t v49 = swift_allocObject();
    *(_OWORD *)(v49 + 16) = xmmword_100493400;
    unint64_t v50 = v49 + v48;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v43 + 16))(v49 + v48, v42, v44);
    (*(void (**)(unint64_t, void, uint64_t))(v46 + 104))(v50, enum case for Track.song(_:), v47);
    MusicItemCollection.init(arrayLiteral:)();
    (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v42, v44);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v41 + 56))(v148, 0, 1, v152);
  }
  else
  {
    uint64_t v51 = v0[48];
    uint64_t v52 = v0[24];
    uint64_t v53 = v0[21];
    uint64_t v55 = v0[4];
    uint64_t v54 = v0[5];
    v40(v52, 1, 1, v0[25]);
    outlined destroy of TaskPriority?(v52, &demangling cache variable for type metadata for Song?);
    v151(v51, v54, v55);
    int v56 = swift_dynamicCast();
    uint64_t v57 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v53 + 56);
    if (v56)
    {
      uint64_t v58 = v0[30];
      uint64_t v59 = v0[23];
      uint64_t v61 = v0[20];
      uint64_t v60 = v0[21];
      uint64_t v62 = v0[19];
      uint64_t v64 = v0[16];
      uint64_t v63 = v0[17];
      uint64_t v149 = v0[3];
      uint64_t v153 = v0[29];
      v57(v62, 0, 1, v61);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v60 + 32))(v59, v62, v61);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Track>);
      unint64_t v65 = (*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80);
      uint64_t v66 = swift_allocObject();
      *(_OWORD *)(v66 + 16) = xmmword_100493400;
      unint64_t v67 = v66 + v65;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v60 + 16))(v67, v59, v61);
      (*(void (**)(unint64_t, void, uint64_t))(v63 + 104))(v67, enum case for Track.musicVideo(_:), v64);
      MusicItemCollection.init(arrayLiteral:)();
      (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v59, v61);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v58 + 56))(v149, 0, 1, v153);
    }
    else
    {
      uint64_t v69 = v0[47];
      uint64_t v70 = v0[19];
      uint64_t v71 = v0[17];
      uint64_t v73 = v0[4];
      uint64_t v72 = v0[5];
      v57(v70, 1, 1, v0[20]);
      outlined destroy of TaskPriority?(v70, &demangling cache variable for type metadata for MusicVideo?);
      v151(v69, v72, v73);
      int v74 = swift_dynamicCast();
      uint64_t v75 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v71 + 56);
      if (v74)
      {
        uint64_t v76 = v0[29];
        uint64_t v77 = v0[30];
        uint64_t v79 = v0[17];
        uint64_t v78 = v0[18];
        uint64_t v81 = v0[15];
        uint64_t v80 = v0[16];
        uint64_t v82 = v0[3];
        v75(v81, 0, 1, v80);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v79 + 32))(v78, v81, v80);
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Track>);
        unint64_t v83 = (*(unsigned __int8 *)(v79 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v79 + 80);
        uint64_t v84 = swift_allocObject();
        *(_OWORD *)(v84 + 16) = xmmword_100493400;
        (*(void (**)(unint64_t, uint64_t, uint64_t))(v79 + 16))(v84 + v83, v78, v80);
        MusicItemCollection.init(arrayLiteral:)();
        (*(void (**)(uint64_t, uint64_t))(v79 + 8))(v78, v80);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v77 + 56))(v82, 0, 1, v76);
      }
      else
      {
        uint64_t v85 = v0[46];
        uint64_t v86 = v0[15];
        uint64_t v87 = v0[12];
        uint64_t v89 = v0[4];
        uint64_t v88 = v0[5];
        v75(v86, 1, 1, v0[16]);
        outlined destroy of TaskPriority?(v86, &demangling cache variable for type metadata for Track?);
        v151(v85, v88, v89);
        int v90 = swift_dynamicCast();
        v91 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v87 + 56);
        if (v90)
        {
          uint64_t v92 = v0[14];
          uint64_t v93 = v0[11];
          uint64_t v94 = v0[12];
          uint64_t v96 = v0[9];
          uint64_t v95 = v0[10];
          uint64_t v97 = v0[6];
          uint64_t v98 = v0[7];
          v91(v95, 0, 1, v93);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v94 + 32))(v92, v95, v93);
          Playlist.Entry.internalItem.getter();
          int v99 = (*(uint64_t (**)(uint64_t, uint64_t))(v98 + 88))(v96, v97);
          if (v99 == enum case for Playlist.Entry.InternalItem.musicVideo(_:))
          {
            uint64_t v100 = v0[30];
            uint64_t v101 = v0[21];
            uint64_t v102 = v0[22];
            uint64_t v103 = v0[20];
            uint64_t v105 = v0[16];
            uint64_t v104 = v0[17];
            uint64_t v150 = v0[14];
            uint64_t v154 = v0[29];
            uint64_t v106 = v0[12];
            uint64_t v107 = v0[9];
            uint64_t v144 = v0[3];
            uint64_t v146 = v0[11];
            (*(void (**)(uint64_t, void))(v0[7] + 96))(v107, v0[6]);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v101 + 32))(v102, v107, v103);
            __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Track>);
            unint64_t v108 = (*(unsigned __int8 *)(v104 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v104 + 80);
            uint64_t v109 = swift_allocObject();
            *(_OWORD *)(v109 + 16) = xmmword_100493400;
            unint64_t v110 = v109 + v108;
            (*(void (**)(unint64_t, uint64_t, uint64_t))(v101 + 16))(v110, v102, v103);
            uint64_t v111 = (unsigned int *)&enum case for Track.musicVideo(_:);
          }
          else
          {
            if (v99 != enum case for Playlist.Entry.InternalItem.song(_:))
            {
              if (one-time initialization token for actions != -1) {
                swift_once();
              }
              uint64_t v119 = v0[13];
              uint64_t v120 = v0[14];
              uint64_t v121 = v0[11];
              uint64_t v122 = v0[12];
              uint64_t v123 = type metadata accessor for Logger();
              __swift_project_value_buffer(v123, (uint64_t)static Logger.actions);
              (*(void (**)(uint64_t, uint64_t, uint64_t))(v122 + 16))(v119, v120, v121);
              uint64_t v124 = Logger.logObject.getter();
              os_log_type_t v125 = static os_log_type_t.fault.getter();
              BOOL v126 = os_log_type_enabled(v124, v125);
              uint64_t v128 = v0[13];
              uint64_t v127 = v0[14];
              uint64_t v129 = v0[11];
              uint64_t v130 = v0[12];
              if (v126)
              {
                uint64_t v155 = v0[14];
                uint64_t v131 = v0[7];
                uint64_t v132 = v0[8];
                uint64_t v133 = v0[6];
                uint64_t v134 = swift_slowAlloc();
                uint64_t v156 = swift_slowAlloc();
                *(_DWORD *)uint64_t v134 = 136315138;
                os_log_type_t v147 = v125;
                Playlist.Entry.internalItem.getter();
                lazy protocol witness table accessor for type Playlist.Entry.InternalItem and conformance Playlist.Entry.InternalItem(&lazy protocol witness table cache variable for type Playlist.Entry.InternalItem and conformance Playlist.Entry.InternalItem, (void (*)(uint64_t))&type metadata accessor for Playlist.Entry.InternalItem);
                uint64_t v135 = dispatch thunk of CustomStringConvertible.description.getter();
                uint64_t v145 = v129;
                unint64_t v137 = v136;
                (*(void (**)(uint64_t, uint64_t))(v131 + 8))(v132, v133);
                *(void *)(v134 + 4) = _s2os32getNullTerminatedUTF8PointerImpl_21storingStringOwnersInSVSS_SpyypGSgztF_0(v135, v137, &v156);
                swift_bridgeObjectRelease();
                v138 = *(void (**)(uint64_t, uint64_t))(v130 + 8);
                uint64_t v129 = v145;
                v138(v128, v145);
                _os_log_impl((void *)&_mh_execute_header, v124, v147, "Unsupported Playlist.Entry.InternalItem=%s", (uint8_t *)v134, 0xCu);
                swift_arrayDestroy();
                swift_slowDealloc();
                swift_slowDealloc();

                uint64_t v139 = v155;
              }
              else
              {

                v138 = *(void (**)(uint64_t, uint64_t))(v130 + 8);
                v138(v128, v129);
                uint64_t v139 = v127;
              }
              v138(v139, v129);
              uint64_t v140 = v0[9];
              uint64_t v141 = v0[6];
              uint64_t v142 = v0[7];
              (*(void (**)(void, uint64_t, uint64_t, void))(v0[30] + 56))(v0[3], 1, 1, v0[29]);
              (*(void (**)(uint64_t, uint64_t))(v142 + 8))(v140, v141);
              goto LABEL_13;
            }
            uint64_t v100 = v0[30];
            uint64_t v101 = v0[26];
            uint64_t v102 = v0[27];
            uint64_t v103 = v0[25];
            uint64_t v105 = v0[16];
            uint64_t v104 = v0[17];
            uint64_t v150 = v0[14];
            uint64_t v154 = v0[29];
            uint64_t v106 = v0[12];
            uint64_t v116 = v0[9];
            uint64_t v144 = v0[3];
            uint64_t v146 = v0[11];
            (*(void (**)(uint64_t, void))(v0[7] + 96))(v116, v0[6]);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v101 + 32))(v102, v116, v103);
            __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Track>);
            unint64_t v117 = (*(unsigned __int8 *)(v104 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v104 + 80);
            uint64_t v118 = swift_allocObject();
            *(_OWORD *)(v118 + 16) = xmmword_100493400;
            unint64_t v110 = v118 + v117;
            (*(void (**)(unint64_t, uint64_t, uint64_t))(v101 + 16))(v110, v102, v103);
            uint64_t v111 = (unsigned int *)&enum case for Track.song(_:);
          }
          (*(void (**)(unint64_t, void, uint64_t))(v104 + 104))(v110, *v111, v105);
          MusicItemCollection.init(arrayLiteral:)();
          (*(void (**)(uint64_t, uint64_t))(v101 + 8))(v102, v103);
          (*(void (**)(uint64_t, uint64_t))(v106 + 8))(v150, v146);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v100 + 56))(v144, 0, 1, v154);
        }
        else
        {
          uint64_t v112 = v0[29];
          uint64_t v113 = v0[30];
          uint64_t v114 = v0[10];
          uint64_t v115 = v0[3];
          v91(v114, 1, 1, v0[11]);
          outlined destroy of TaskPriority?(v114, (uint64_t *)&demangling cache variable for type metadata for Playlist.Entry?);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v113 + 56))(v115, 1, 1, v112);
        }
      }
    }
  }
LABEL_13:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  v68 = (uint64_t (*)(void))v0[1];
  return v68();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();
  uint64_t v4;

  *(void *)(*(void *)v1 + 480) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v0) {
    uint64_t v2 = MusicPlaylistAddable.tracks.getter;
  }
  else {
    uint64_t v2 = MusicPlaylistAddable.tracks.getter;
  }
  return _swift_task_switch(v2, 0, 0);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t (*v6)(void);
  uint64_t v8;

  uint64_t v2 = v0[54];
  uint64_t v1 = v0[55];
  uint64_t v3 = v0[52];
  uint64_t v4 = v0[53];
  Album.tracks.getter();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v5(v2, v3);
  v5(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();
  uint64_t v4;

  *(void *)(*(void *)v1 + 520) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v0) {
    uint64_t v2 = MusicPlaylistAddable.tracks.getter;
  }
  else {
    uint64_t v2 = MusicPlaylistAddable.tracks.getter;
  }
  return _swift_task_switch(v2, 0, 0);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t);
  uint64_t (*v21)(void);
  uint64_t v23;

  uint64_t v1 = v0[35];
  uint64_t v2 = v0[29];
  uint64_t v3 = v0[30];
  Playlist.tracks.getter();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  v0[66] = v4;
  v0[67] = (v3 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
  uint64_t v5 = v4(v1, 1, v2);
  uint64_t v6 = v0[35];
  if (v5 == 1)
  {
    outlined destroy of TaskPriority?(v0[35], &demangling cache variable for type metadata for MusicItemCollection<Track>?);
LABEL_7:
    uint64_t v17 = v0[40];
    uint64_t v16 = v0[41];
    uint64_t v18 = v0[37];
    uint64_t v19 = v0[38];
    Playlist.tracks.getter();
    uint64_t v20 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
    v20(v17, v18);
    v20(v16, v18);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v21 = (uint64_t (*)(void))v0[1];
    return v21();
  }
  int v7 = v0[29];
  uint64_t v8 = v0[30];
  uint64_t v9 = MusicItemCollection.hasNextBatch.getter();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  v0[68] = v10;
  v0[69] = (v8 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v10(v6, v7);
  if ((v9 & 1) == 0) {
    goto LABEL_7;
  }
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_100493D20;
  static PartialMusicProperty<A>.tracks.getter();
  uint64_t v12 = MusicRelationshipProperty.limit(_:)();
  swift_release();
  *(void *)(v11 + 32) = v12;
  specialized Array._endMutation()();
  v0[70] = v11;
  uint64_t v13 = (void *)swift_task_alloc();
  v0[71] = v13;
  *uint64_t v13 = v0;
  v13[1] = MusicPlaylistAddable.tracks.getter;
  uint64_t v14 = v0[39];
  uint64_t v15 = v0[37];
  return dispatch thunk of MusicPropertyContainer.with(_:)(v14, v11, v15, &protocol witness table for Playlist);
}

{
  void *v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(void);
  uint64_t v24[2];
  void *v25;
  uint64_t v26;

  uint64_t v25 = v0;
  (*(void (**)(void, void))(v0[38] + 8))(v0[41], v0[37]);
  uint64_t v1 = v0[65];
  if (one-time initialization token for actions != -1) {
    swift_once();
  }
  uint64_t v2 = (void (*)(uint64_t, uint64_t, uint64_t))v0[56];
  uint64_t v3 = v0[45];
  uint64_t v5 = v0[4];
  uint64_t v4 = v0[5];
  uint64_t v6 = type metadata accessor for Logger();
  __swift_project_value_buffer(v6, (uint64_t)static Logger.actions);
  v2(v3, v4, v5);
  swift_errorRetain();
  swift_errorRetain();
  int v7 = Logger.logObject.getter();
  uint64_t v8 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (void (*)(uint64_t, uint64_t, uint64_t))v0[56];
    uint64_t v11 = v0[44];
    uint64_t v10 = v0[45];
    uint64_t v12 = v0[43];
    uint64_t v13 = v0[4];
    uint64_t v14 = swift_slowAlloc();
    v24[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v14 = 136446466;
    v9(v11, v10, v13);
    uint64_t v15 = String.init<A>(describing:)();
    *(void *)(v14 + 4) = _s2os32getNullTerminatedUTF8PointerImpl_21storingStringOwnersInSVSS_SpyypGSgztF_0(v15, v16, v24);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v13);
    *(_WORD *)(v14 + 12) = 2082;
    v0[2] = v1;
    swift_errorRetain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
    uint64_t v17 = String.init<A>(describing:)();
    *(void *)(v14 + 14) = _s2os32getNullTerminatedUTF8PointerImpl_21storingStringOwnersInSVSS_SpyypGSgztF_0(v17, v18, v24);
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Failed to load tracks for playlist addable item=%{public}s with error=%{public}s", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    uint64_t v19 = v0[45];
    uint64_t v20 = v0[43];
    uint64_t v21 = v0[4];
    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
    swift_errorRelease();
    swift_errorRelease();
  }
  (*(void (**)(void, uint64_t, uint64_t, void))(v0[30] + 56))(v0[3], 1, 1, v0[29]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v22 = (uint64_t (*)(void))v0[1];
  return v22();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();
  uint64_t v4;

  *(void *)(*(void *)v1 + 576) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v0) {
    uint64_t v2 = MusicPlaylistAddable.tracks.getter;
  }
  else {
    uint64_t v2 = MusicPlaylistAddable.tracks.getter;
  }
  return _swift_task_switch(v2, 0, 0);
}

{
  void *v0;
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  int v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(void);
  uint64_t v23;

  uint64_t v1 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v0[66];
  uint64_t v3 = v0[38];
  uint64_t v2 = v0[39];
  uint64_t v4 = v0[37];
  uint64_t v5 = v0[34];
  uint64_t v6 = v0[29];
  Playlist.tracks.getter();
  int v7 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v0[73] = v7;
  v0[74] = (v3 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v7(v2, v4);
  uint64_t v8 = v1(v5, 1, v6);
  uint64_t v9 = v0[34];
  if (v8 == 1)
  {
    MusicItemCollection.init(arrayLiteral:)();
    outlined destroy of TaskPriority?(v9, &demangling cache variable for type metadata for MusicItemCollection<Track>?);
  }
  else
  {
    (*(void (**)(void, void, void))(v0[30] + 32))(v0[32], v0[34], v0[29]);
  }
  if (MusicItemCollection.hasNextBatch.getter())
  {
    uint64_t v10 = (void *)swift_task_alloc();
    v0[75] = v10;
    uint64_t v11 = lazy protocol witness table accessor for type Playlist.Entry.InternalItem and conformance Playlist.Entry.InternalItem(&lazy protocol witness table cache variable for type Track and conformance Track, (void (*)(uint64_t))&type metadata accessor for Track);
    void *v10 = v0;
    v10[1] = MusicPlaylistAddable.tracks.getter;
    uint64_t v12 = v0[33];
    uint64_t v13 = v0[29];
    return MusicItemCollection.nextBatch<>(limit:)(v12, 10000, 0, v13, v11);
  }
  else
  {
    uint64_t v14 = (void (*)(uint64_t, uint64_t))v0[73];
    uint64_t v15 = v0[41];
    uint64_t v16 = v0[37];
    uint64_t v17 = v0[32];
    uint64_t v18 = v0[29];
    uint64_t v19 = v0[30];
    uint64_t v20 = v0[3];
    v14(v0[40], v16);
    v14(v15, v16);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 32))(v20, v17, v18);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v19 + 56))(v20, 0, 1, v18);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v21 = (uint64_t (*)(void))v0[1];
    return v21();
  }
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(void);
  uint64_t v27[2];
  void *v28;
  uint64_t v29;

  uint64_t v28 = v0;
  uint64_t v1 = v0[41];
  uint64_t v2 = v0[37];
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(v0[38] + 8);
  v3(v0[40], v2);
  v3(v1, v2);
  uint64_t v4 = v0[72];
  if (one-time initialization token for actions != -1) {
    swift_once();
  }
  uint64_t v5 = (void (*)(uint64_t, uint64_t, uint64_t))v0[56];
  uint64_t v6 = v0[45];
  uint64_t v8 = v0[4];
  int v7 = v0[5];
  uint64_t v9 = type metadata accessor for Logger();
  __swift_project_value_buffer(v9, (uint64_t)static Logger.actions);
  v5(v6, v7, v8);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v10 = Logger.logObject.getter();
  uint64_t v11 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (void (*)(uint64_t, uint64_t, uint64_t))v0[56];
    uint64_t v14 = v0[44];
    uint64_t v13 = v0[45];
    uint64_t v15 = v0[43];
    uint64_t v16 = v0[4];
    uint64_t v17 = swift_slowAlloc();
    v27[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v17 = 136446466;
    v12(v14, v13, v16);
    uint64_t v18 = String.init<A>(describing:)();
    *(void *)(v17 + 4) = _s2os32getNullTerminatedUTF8PointerImpl_21storingStringOwnersInSVSS_SpyypGSgztF_0(v18, v19, v27);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v16);
    *(_WORD *)(v17 + 12) = 2082;
    v0[2] = v4;
    swift_errorRetain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
    uint64_t v20 = String.init<A>(describing:)();
    *(void *)(v17 + 14) = _s2os32getNullTerminatedUTF8PointerImpl_21storingStringOwnersInSVSS_SpyypGSgztF_0(v20, v21, v27);
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Failed to load tracks for playlist addable item=%{public}s with error=%{public}s", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    uint64_t v22 = v0[45];
    uint64_t v23 = v0[43];
    int v24 = v0[4];
    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v22, v24);
    swift_errorRelease();
    swift_errorRelease();
  }
  (*(void (**)(void, uint64_t, uint64_t, void))(v0[30] + 56))(v0[3], 1, 1, v0[29]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v25 = (uint64_t (*)(void))v0[1];
  return v25();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();
  uint64_t v4;

  *(void *)(*(void *)v1 + 608) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = MusicPlaylistAddable.tracks.getter;
  }
  else {
    uint64_t v2 = MusicPlaylistAddable.tracks.getter;
  }
  return _swift_task_switch(v2, 0, 0);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(void);
  uint64_t v18;

  uint64_t v1 = *(void *)(v0 + 264);
  uint64_t v2 = *(void *)(v0 + 232);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 528))(v1, 1, v2) == 1)
  {
    outlined destroy of TaskPriority?(v1, &demangling cache variable for type metadata for MusicItemCollection<Track>?);
  }
  else
  {
    uint64_t v3 = *(void (**)(uint64_t, uint64_t))(v0 + 544);
    uint64_t v4 = *(void *)(v0 + 248);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 240) + 32))(v4, v1, v2);
    static MusicItemCollection.+= infix(_:_:)();
    v3(v4, v2);
  }
  if (MusicItemCollection.hasNextBatch.getter())
  {
    uint64_t v5 = (void *)swift_task_alloc();
    *(void *)(v0 + 600) = v5;
    uint64_t v6 = lazy protocol witness table accessor for type Playlist.Entry.InternalItem and conformance Playlist.Entry.InternalItem(&lazy protocol witness table cache variable for type Track and conformance Track, (void (*)(uint64_t))&type metadata accessor for Track);
    *uint64_t v5 = v0;
    v5[1] = MusicPlaylistAddable.tracks.getter;
    int v7 = *(void *)(v0 + 264);
    uint64_t v8 = *(void *)(v0 + 232);
    return MusicItemCollection.nextBatch<>(limit:)(v7, 10000, 0, v8, v6);
  }
  else
  {
    uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v0 + 584);
    uint64_t v10 = *(void *)(v0 + 328);
    uint64_t v11 = *(void *)(v0 + 296);
    uint64_t v12 = *(void *)(v0 + 256);
    uint64_t v13 = *(void *)(v0 + 232);
    uint64_t v14 = *(void *)(v0 + 240);
    uint64_t v15 = *(void *)(v0 + 24);
    v9(*(void *)(v0 + 320), v11);
    v9(v10, v11);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 32))(v15, v12, v13);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v14 + 56))(v15, 0, 1, v13);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v16 = *(uint64_t (**)(void))(v0 + 8);
    return v16();
  }
}

{
  void *v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(void);
  uint64_t v24[2];
  void *v25;
  uint64_t v26;

  uint64_t v25 = v0;
  (*(void (**)(void, void))(v0[53] + 8))(v0[55], v0[52]);
  uint64_t v1 = v0[60];
  if (one-time initialization token for actions != -1) {
    swift_once();
  }
  uint64_t v2 = (void (*)(uint64_t, uint64_t, uint64_t))v0[56];
  uint64_t v3 = v0[45];
  uint64_t v5 = v0[4];
  uint64_t v4 = v0[5];
  uint64_t v6 = type metadata accessor for Logger();
  __swift_project_value_buffer(v6, (uint64_t)static Logger.actions);
  v2(v3, v4, v5);
  swift_errorRetain();
  swift_errorRetain();
  int v7 = Logger.logObject.getter();
  uint64_t v8 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (void (*)(uint64_t, uint64_t, uint64_t))v0[56];
    uint64_t v11 = v0[44];
    uint64_t v10 = v0[45];
    uint64_t v12 = v0[43];
    uint64_t v13 = v0[4];
    uint64_t v14 = swift_slowAlloc();
    v24[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v14 = 136446466;
    v9(v11, v10, v13);
    uint64_t v15 = String.init<A>(describing:)();
    *(void *)(v14 + 4) = _s2os32getNullTerminatedUTF8PointerImpl_21storingStringOwnersInSVSS_SpyypGSgztF_0(v15, v16, v24);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v13);
    *(_WORD *)(v14 + 12) = 2082;
    v0[2] = v1;
    swift_errorRetain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
    uint64_t v17 = String.init<A>(describing:)();
    *(void *)(v14 + 14) = _s2os32getNullTerminatedUTF8PointerImpl_21storingStringOwnersInSVSS_SpyypGSgztF_0(v17, v18, v24);
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Failed to load tracks for playlist addable item=%{public}s with error=%{public}s", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    uint64_t v19 = v0[45];
    uint64_t v20 = v0[43];
    uint64_t v21 = v0[4];
    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
    swift_errorRelease();
    swift_errorRelease();
  }
  (*(void (**)(void, uint64_t, uint64_t, void))(v0[30] + 56))(v0[3], 1, 1, v0[29]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v22 = (uint64_t (*)(void))v0[1];
  return v22();
}

{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(void);
  uint64_t v28[2];
  uint64_t v29;
  uint64_t v30;

  uint64_t v29 = v0;
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(v0 + 584);
  uint64_t v2 = *(void *)(v0 + 320);
  uint64_t v3 = *(void *)(v0 + 328);
  uint64_t v4 = *(void *)(v0 + 296);
  (*(void (**)(void, void))(v0 + 544))(*(void *)(v0 + 256), *(void *)(v0 + 232));
  v1(v2, v4);
  v1(v3, v4);
  uint64_t v5 = *(void *)(v0 + 608);
  if (one-time initialization token for actions != -1) {
    swift_once();
  }
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 448);
  int v7 = *(void *)(v0 + 360);
  uint64_t v9 = *(void *)(v0 + 32);
  uint64_t v8 = *(void *)(v0 + 40);
  uint64_t v10 = type metadata accessor for Logger();
  __swift_project_value_buffer(v10, (uint64_t)static Logger.actions);
  v6(v7, v8, v9);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v11 = Logger.logObject.getter();
  uint64_t v12 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 448);
    uint64_t v15 = *(void *)(v0 + 352);
    uint64_t v14 = *(void *)(v0 + 360);
    uint64_t v16 = *(void *)(v0 + 344);
    uint64_t v17 = *(void *)(v0 + 32);
    uint64_t v18 = swift_slowAlloc();
    v28[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v18 = 136446466;
    v13(v15, v14, v17);
    uint64_t v19 = String.init<A>(describing:)();
    *(void *)(v18 + 4) = _s2os32getNullTerminatedUTF8PointerImpl_21storingStringOwnersInSVSS_SpyypGSgztF_0(v19, v20, v28);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v17);
    *(_WORD *)(v18 + 12) = 2082;
    *(void *)(v0 + 16) = v5;
    swift_errorRetain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
    uint64_t v21 = String.init<A>(describing:)();
    *(void *)(v18 + 14) = _s2os32getNullTerminatedUTF8PointerImpl_21storingStringOwnersInSVSS_SpyypGSgztF_0(v21, v22, v28);
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "Failed to load tracks for playlist addable item=%{public}s with error=%{public}s", (uint8_t *)v18, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    uint64_t v23 = *(void *)(v0 + 360);
    int v24 = *(void *)(v0 + 344);
    uint64_t v25 = *(void *)(v0 + 32);
    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v25);
    swift_errorRelease();
    swift_errorRelease();
  }
  (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 240) + 56))(*(void *)(v0 + 24), 1, 1, *(void *)(v0 + 232));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v26 = *(uint64_t (**)(void))(v0 + 8);
  return v26();
}

uint64_t closure #3 in Actions.AddToPlaylist.Context.init<A, B>(item:library:playlistPickerPresenter:alertPresenter:presentationSource:metricsReportingContext:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[14] = a3;
  v5[15] = a5;
  v5[12] = a1;
  v5[13] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  v5[16] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  v5[17] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for Actions.MetricsReportingContext();
  v5[18] = v6;
  v5[19] = *(void *)(v6 - 8);
  v5[20] = swift_task_alloc();
  return _swift_task_switch(closure #3 in Actions.AddToPlaylist.Context.init<A, B>(item:library:playlistPickerPresenter:alertPresenter:presentationSource:metricsReportingContext:), 0, 0);
}

uint64_t closure #3 in Actions.AddToPlaylist.Context.init<A, B>(item:library:playlistPickerPresenter:alertPresenter:presentationSource:metricsReportingContext:)()
{
  uint64_t v1 = *(void *)(v0 + 144);
  uint64_t v2 = *(void *)(v0 + 152);
  uint64_t v3 = *(void *)(v0 + 136);
  outlined init with copy of (String, Any)(*(void *)(v0 + 96), v3, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    outlined destroy of TaskPriority?(*(void *)(v0 + 136), &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
  else
  {
    uint64_t v6 = *(void *)(v0 + 128);
    uint64_t v7 = *(void *)(v0 + 112);
    outlined init with take of Actions.MetricsReportingContext(*(void *)(v0 + 136), *(void *)(v0 + 160));
    *(void *)(v0 + 168) = MusicItem.metricsTargetIdentifier.getter(v7);
    *(void *)(v0 + 176) = v8;
    uint64_t v9 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v6, 1, 1, v9);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<MetricsEvent.Click.ActionDetails.Key>);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100493D00;
    *(void *)(inited + 32) = MusicItem.metricsContentType.getter();
    *(void *)(inited + 40) = v11;
    *(unsigned char *)(inited + 48) = 0;
    *(_OWORD *)(inited + 56) = xmmword_100493D30;
    *(unsigned char *)(inited + 72) = 1;
    *(void *)(v0 + 184) = specialized MetricsEvent.Click.ActionDetails.init(_:)(inited);
    *(void *)(v0 + 192) = v12;
    *(void *)(v0 + 200) = v13;
    *(_WORD *)(v0 + 216) = v14;
    swift_setDeallocating();
    swift_arrayDestroy();
    type metadata accessor for MainActor();
    *(void *)(v0 + 208) = static MainActor.shared.getter();
    uint64_t v16 = dispatch thunk of Actor.unownedExecutor.getter();
    return _swift_task_switch(closure #3 in Actions.AddToPlaylist.Context.init<A, B>(item:library:playlistPickerPresenter:alertPresenter:presentationSource:metricsReportingContext:), v16, v15);
  }
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  uint64_t v1 = *(void *)(v0 + 200);
  uint64_t v3 = *(void **)(v0 + 184);
  uint64_t v2 = *(void *)(v0 + 192);
  uint64_t v5 = *(void *)(v0 + 168);
  uint64_t v4 = *(void *)(v0 + 176);
  uint64_t v6 = *(uint64_t **)(v0 + 160);
  uint64_t v7 = *(void *)(v0 + 128);
  uint64_t v8 = *(unsigned __int16 *)(v0 + 216);
  swift_release();
  specialized static Actions.reportClickEvent(targetIdentifier:targetType:actionType:actionURL:actionDetails:reportingContext:)(v5, v4, 5, 2, v7, v3, v2, v1, v8, v6);
  outlined consume of MetricsEvent.Click.ActionDetails(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease();
  outlined destroy of TaskPriority?(v7, &demangling cache variable for type metadata for URL?);
  return _swift_task_switch(closure #3 in Actions.AddToPlaylist.Context.init<A, B>(item:library:playlistPickerPresenter:alertPresenter:presentationSource:metricsReportingContext:), 0, 0);
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  outlined destroy of Actions.MetricsReportingContext(*(void *)(v0 + 160));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t serialize(_:at:)(uint64_t result, unsigned char **a2)
{
  uint64_t v2 = *a2;
  *uint64_t v2 = result;
  *a2 = v2 + 1;
  return result;
}

uint64_t closure #1 in osLogInternal(_:log:type:)(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*a1)(a2, a3, a4);
}

uint64_t implicit closure #1 in OSLogInterpolation.appendInterpolation(_:align:privacy:)(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t closure #1 in OSLogArguments.append(_:)(void *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6 = a4();
  unint64_t v8 = _s2os32getNullTerminatedUTF8PointerImpl_21storingStringOwnersInSVSS_SpyypGSgztF_0(v6, v7, a3);
  uint64_t v9 = (void *)*a1;
  *(void *)*a1 = v8;
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v9 + 1;
  return result;
}

unint64_t _s2os32getNullTerminatedUTF8PointerImpl_21storingStringOwnersInSVSS_SpyypGSgztF_0(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  unint64_t v6 = _ss11_StringGutsV16_deconstructUTF87scratchyXlSg5owner_xSi6lengthSb11usesScratchSb15allocatedMemorytSwSg_ts8_PointerRzlFSV_Tgq5_0(v12, 0, 0, 1, a1, a2);
  unint64_t v7 = v12[0];
  if (v6)
  {
    unint64_t v8 = v6;
    uint64_t ObjectType = (void *)swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      outlined init with copy of Any((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = &type metadata for _StringGuts;
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      outlined init with copy of Any((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v12);
  return v7;
}

unint64_t _ss11_StringGutsV16_deconstructUTF87scratchyXlSg5owner_xSi6lengthSb11usesScratchSb15allocatedMemorytSwSg_ts8_PointerRzlFSV_Tgq5_0(unint64_t *a1, void *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v10 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v10)
        {
          v12[0] = a5;
          v12[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          memcpy(__dst, v12, HIBYTE(a6) & 0xF);
          unint64_t result = 0;
          *((unsigned char *)__dst + v10) = 0;
          *a1 = (unint64_t)__dst;
          return result;
        }
      }
    }
    goto LABEL_11;
  }
  if ((a6 & 0x1000000000000000) != 0)
  {
LABEL_11:
    unint64_t result = (unint64_t)_ss11_StringGutsV23_allocateForDeconstructyXl5owner_SVSi6lengthtyF_0(a5, a6);
    *a1 = v11;
    return result;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    unint64_t result = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
  }
  else
  {
    unint64_t result = _StringObject.sharedUTF8.getter();
    if (!result)
    {
      __break(1u);
      return result;
    }
  }
  *a1 = result;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

char *_ss11_StringGutsV23_allocateForDeconstructyXl5owner_SVSi6lengthtyF_0(uint64_t a1, unint64_t a2)
{
  New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFs5UInt8V_Tgq5_0 = (char *)_ss32_copyCollectionToContiguousArrayys0dE0Vy7ElementQzGxSlRzlFSS8UTF8ViewV_Tgq5_0(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFs5UInt8V_Tgq5_0 = _ss12_ArrayBufferV20_consumeAndCreateNew14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFs5UInt8V_Tgq5_0(0, *((void *)New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFs5UInt8V_Tgq5_0+ 2)+ 1, 1, New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFs5UInt8V_Tgq5_0);
  }
  unint64_t v4 = *((void *)New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFs5UInt8V_Tgq5_0 + 2);
  unint64_t v3 = *((void *)New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFs5UInt8V_Tgq5_0 + 3);
  if (v4 >= v3 >> 1) {
    New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFs5UInt8V_Tgq5_0 = _ss12_ArrayBufferV20_consumeAndCreateNew14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFs5UInt8V_Tgq5_0((char *)(v3 > 1), v4 + 1, 1, New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFs5UInt8V_Tgq5_0);
  }
  *((void *)New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFs5UInt8V_Tgq5_0 + 2) = v4 + 1;
  New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFs5UInt8V_Tgq5_0[v4 + 32] = 0;
  return New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFs5UInt8V_Tgq5_0;
}

void *_ss32_copyCollectionToContiguousArrayys0dE0Vy7ElementQzGxSlRzlFSS8UTF8ViewV_Tgq5_0(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_9;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = _ss22_ContiguousArrayBufferV19_uninitializedCount15minimumCapacityAByxGSi_SitcfCs5UInt8V_Tgmq5_0(v2, 0);
      unint64_t result = (void *)_StringGuts.copyUTF8(into:)();
      if (v5) {
        break;
      }
      if (result == (void *)v2) {
        return v3;
      }
      __break(1u);
LABEL_9:
      uint64_t v2 = String.UTF8View._foreignCount()();
      if (!v2) {
        return _swiftEmptyArrayStorage;
      }
    }
    __break(1u);
  }
  else
  {
    return _swiftEmptyArrayStorage;
  }
  return result;
}

char *_ss12_ArrayBufferV20_consumeAndCreateNew14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFs5UInt8V_Tgq5_0(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&_ss23_ContiguousArrayStorageCys5UInt8VGMD_0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v12, v13, v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

unsigned char **closure #1 in OSLogArguments.append(_:)(unsigned char **result, uint64_t a2, uint64_t a3, char a4)
{
  unint64_t v4 = *result;
  *unint64_t v4 = a4;
  *unint64_t result = v4 + 1;
  return result;
}

uint64_t specialized Actions.AddToPlaylist.Context.menuItemTitle.getter()
{
  uint64_t v0 = type metadata accessor for Locale();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = type metadata accessor for String.LocalizationValue();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  char v5 = &v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v3);
  int64_t v7 = &v11[-v6];
  String.LocalizationValue.init(stringLiteral:)();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v2 + 16))(v5, v7, v1);
  if (one-time initialization token for module != -1) {
    swift_once();
  }
  id v8 = (id)static NSBundle.module;
  static Locale.current.getter();
  uint64_t v9 = String.init(localized:table:bundle:locale:comment:)();
  (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v7, v1);
  return v9;
}

uint64_t sub_10002071C()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t specialized Actions.AddToPlaylist.Context.init<A, B>(item:library:playlistPickerPresenter:alertPresenter:presentationSource:metricsReportingContext:)@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, long long *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, unint64_t (**a9)()@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v62 = a3;
  uint64_t v63 = a6;
  uint64_t v61 = a5;
  uint64_t v58 = a2;
  uint64_t v59 = a4;
  uint64_t v64 = a9;
  uint64_t v73 = a12;
  uint64_t v67 = *(void *)(a7 - 8);
  uint64_t v68 = a8;
  uint64_t v71 = *(void *)(v67 + 64);
  uint64_t v72 = a10;
  uint64_t v69 = a11;
  uint64_t v14 = __chkstk_darwin(a1);
  uint64_t v60 = (char *)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v70 = (char *)&v53 - v16;
  uint64_t v17 = type metadata accessor for MusicLibrary.AddAction();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v53 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicLibrary.SupportedStatus<MusicLibrary.AddAction>);
  uint64_t v21 = *(void *)(v65 - 8);
  uint64_t v22 = *(void *)(v21 + 64);
  uint64_t v23 = __chkstk_darwin(v65);
  uint64_t v66 = (char *)&v53 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __chkstk_darwin(v23);
  uint64_t v26 = (char *)&v53 - v25;
  __chkstk_darwin(v24);
  uint64_t v28 = (char *)&v53 - v27;
  static MusicLibraryAction<>.add.getter();
  uint64_t v57 = a1;
  MusicLibrary.supportedStatus<A, B>(for:action:)();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  uint64_t v29 = v65;
  (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v26, v28, v65);
  uint64_t v30 = *(unsigned __int8 *)(v21 + 80);
  uint64_t v56 = v30 | 7;
  uint64_t v58 = swift_allocObject();
  uint64_t v31 = *(void (**)(uint64_t, char *, uint64_t))(v21 + 32);
  v31(v58 + ((v30 + 16) & ~v30), v26, v29);
  v31((uint64_t)v66, v28, v29);
  uint64_t v32 = v67;
  uint64_t v33 = a7;
  (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v70, a1, a7);
  uint64_t v34 = (v30 + 56) & ~v30;
  unint64_t v35 = (v22 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v55 = (v35 + 47) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v36 = *(unsigned __int8 *)(v32 + 80);
  uint64_t v54 = (v55 + v36 + 72) & ~v36;
  uint64_t v37 = v68;
  uint64_t v38 = *(void *)(v68 - 8);
  unint64_t v39 = (v54 + v71 + *(unsigned __int8 *)(v38 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
  uint64_t v40 = (char *)swift_allocObject();
  *((void *)v40 + 2) = v33;
  *((void *)v40 + 3) = v37;
  uint64_t v41 = v69;
  *((void *)v40 + 4) = v72;
  *((void *)v40 + 5) = v41;
  *((void *)v40 + 6) = v73;
  v31((uint64_t)&v40[v34], v66, v65);
  outlined init with take of AlertPresenting(v59, (uint64_t)&v40[v35]);
  outlined init with take of PresentationSource?(v61, (uint64_t)&v40[v55], &demangling cache variable for type metadata for PresentationSource?);
  uint64_t v42 = *(void (**)(char *, char *, uint64_t))(v67 + 32);
  v42(&v40[v54], v70, v33);
  uint64_t v43 = v68;
  (*(void (**)(char *, uint64_t, uint64_t))(v38 + 32))(&v40[v39], v62, v68);
  uint64_t v44 = v60;
  v42(v60, v57, v33);
  uint64_t v45 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?)
                  - 8);
  unint64_t v46 = (*(unsigned __int8 *)(v45 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80);
  unint64_t v47 = (*(void *)(v45 + 64) + v36 + v46) & ~v36;
  unint64_t v48 = (unint64_t (*)())swift_allocObject();
  *((void *)v48 + 2) = v33;
  *((void *)v48 + 3) = v43;
  uint64_t v49 = v69;
  *((void *)v48 + 4) = v72;
  *((void *)v48 + 5) = v49;
  *((void *)v48 + 6) = v73;
  outlined init with take of PresentationSource?(v63, (uint64_t)v48 + v46, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  uint64_t result = ((uint64_t (*)(char *, char *, uint64_t))v42)((char *)v48 + v47, v44, v33);
  uint64_t v51 = v64;
  uint64_t v52 = v58;
  *uint64_t v64 = partial apply for closure #1 in Actions.AddToPlaylist.Context.init<A, B>(item:library:playlistPickerPresenter:alertPresenter:presentationSource:metricsReportingContext:);
  v51[1] = (unint64_t (*)())v52;
  v51[2] = (unint64_t (*)())&async function pointer to partial apply for closure #2 in Actions.AddToPlaylist.Context.init<A, B>(item:library:playlistPickerPresenter:alertPresenter:presentationSource:metricsReportingContext:);
  v51[3] = (unint64_t (*)())v40;
  v51[4] = (unint64_t (*)())&async function pointer to partial apply for closure #3 in Actions.AddToPlaylist.Context.init<A, B>(item:library:playlistPickerPresenter:alertPresenter:presentationSource:metricsReportingContext:);
  v51[5] = v48;
  return result;
}

ValueMetadata *type metadata accessor for Actions.AddToPlaylist()
{
  return &type metadata for Actions.AddToPlaylist;
}

ValueMetadata *type metadata accessor for Actions.AddToPlaylist.Context()
{
  return &type metadata for Actions.AddToPlaylist.Context;
}

uint64_t sub_100020D10()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicLibrary.SupportedStatus<MusicLibrary.AddAction>);
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);

  return swift_deallocObject();
}

unint64_t partial apply for closure #1 in Actions.AddToPlaylist.Context.init<A, B>(item:library:playlistPickerPresenter:alertPresenter:presentationSource:metricsReportingContext:)()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicLibrary.SupportedStatus<MusicLibrary.AddAction>)
                 - 8);
  uint64_t v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return closure #1 in Actions.AddToPlaylist.Context.init<A, B>(item:library:playlistPickerPresenter:alertPresenter:presentationSource:metricsReportingContext:)(v2);
}

uint64_t sub_100020E08()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicLibrary.SupportedStatus<MusicLibrary.AddAction>);
  uint64_t v4 = *(void *)(v3 - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 47) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(void *)(v2 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v17 = *(void *)(v8 + 64);
  uint64_t v18 = v1;
  uint64_t v10 = *(void *)(v1 - 8);
  uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
  (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v5, v3);
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + v6);
  uint64_t v12 = v0 + v7;
  if (*(void *)(v0 + v7 + 56) != 1)
  {
    swift_unknownObjectWeakDestroy();
    int v13 = *(unsigned __int8 *)(v12 + 48);
    if (v13 != 255) {
      outlined consume of PresentationSource.Position(*(id *)(v12 + 8), *(void *)(v12 + 16), *(void *)(v12 + 24), *(void *)(v12 + 32), *(void *)(v12 + 40), v13);
    }
    if (*(void *)(v12 + 56)) {
      swift_release();
    }
  }
  uint64_t v14 = (v9 + v7 + 72) & ~v9;
  uint64_t v15 = (v14 + v17 + v11) & ~v11;
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v0 + v14, v2);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v0 + v15, v18);

  return swift_deallocObject();
}

uint64_t partial apply for closure #2 in Actions.AddToPlaylist.Context.init<A, B>(item:library:playlistPickerPresenter:alertPresenter:presentationSource:metricsReportingContext:)()
{
  uint64_t v3 = v0[2];
  uint64_t v2 = v0[3];
  uint64_t v16 = v0[4];
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicLibrary.SupportedStatus<MusicLibrary.AddAction>)
                 - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (*(unsigned __int8 *)(*(void *)(v3 - 8) + 80) + v7 + 72) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v3 - 8) + 80);
  uint64_t v9 = (uint64_t)v0 + v5;
  uint64_t v10 = (uint64_t)v0 + v6;
  uint64_t v11 = (uint64_t)v0 + v7;
  uint64_t v12 = (uint64_t)v0 + v8;
  uint64_t v13 = (uint64_t)v0
      + ((v8 + *(void *)(*(void *)(v3 - 8) + 64) + *(unsigned __int8 *)(*(void *)(v2 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 8) + 80));
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v14;
  *uint64_t v14 = v1;
  v14[1] = partial apply for closure #1 in static MusicEngagementExtension.performRequest(with:completion:);
  return closure #2 in Actions.AddToPlaylist.Context.init<A, B>(item:library:playlistPickerPresenter:alertPresenter:presentationSource:metricsReportingContext:)(v9, v10, v11, v12, v13, v3, v2, v16);
}

uint64_t sub_1000211F4()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?)
                 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v5 = *(void *)(v1 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = v0 + v3;
  uint64_t v8 = type metadata accessor for Actions.MetricsReportingContext();
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v0 + v3, 1, v8))
  {
    uint64_t v16 = v4;
    if (*(void *)(v7 + 8) >= 0xBuLL) {
      swift_bridgeObjectRelease();
    }
    uint64_t v9 = v7 + *(int *)(v8 + 20);
    uint64_t v10 = type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v9, 1, v10))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v15 = v9 + *(int *)(v10 + 24);
      uint64_t v11 = type metadata accessor for URL();
      uint64_t v13 = *(void *)(v11 - 8);
      uint64_t v14 = v11;
      if (!(*(unsigned int (**)(uint64_t, uint64_t))(v13 + 48))(v15, 1)) {
        (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v15, v14);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v4 = v16;
  }
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + ((v3 + v4 + v6) & ~v6), v1);

  return swift_deallocObject();
}

uint64_t partial apply for closure #3 in Actions.AddToPlaylist.Context.init<A, B>(item:library:playlistPickerPresenter:alertPresenter:presentationSource:metricsReportingContext:)()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = v0[4];
  uint64_t v5 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?)
                 - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = (uint64_t)v0 + v6;
  uint64_t v8 = (uint64_t)v0
     + ((v6 + *(void *)(v5 + 64) + *(unsigned __int8 *)(*(void *)(v2 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 8) + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v9;
  *uint64_t v9 = v1;
  v9[1] = closure #3 in static Actions.ReportConcern.action(context:);
  return closure #3 in Actions.AddToPlaylist.Context.init<A, B>(item:library:playlistPickerPresenter:alertPresenter:presentationSource:metricsReportingContext:)(v7, v8, v2, v3, v4);
}

uint64_t lazy protocol witness table accessor for type Playlist.Entry.InternalItem and conformance Playlist.Entry.InternalItem(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t Actions.Collaborate.Context.init(playlist:canCollaborateOnPlaylist:collaborate:metricsReportingContext:)@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v27 = a5;
  uint64_t v28 = a6;
  uint64_t v12 = type metadata accessor for Playlist();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  __chkstk_darwin(v12);
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 16))(a7, a1, v12);
  uint64_t v15 = (int *)type metadata accessor for Actions.Collaborate.Context();
  uint64_t v16 = (void *)(a7 + v15[5]);
  *uint64_t v16 = a2;
  v16[1] = a3;
  uint64_t v17 = swift_allocObject();
  uint64_t v18 = v27;
  *(void *)(v17 + 16) = a4;
  *(void *)(v17 + 24) = v18;
  uint64_t v19 = (void *)(a7 + v15[6]);
  void *v19 = &async function pointer to partial apply for thunk for @escaping @callee_guaranteed @Sendable () -> ();
  v19[1] = v17;
  uint64_t v20 = *(uint64_t (**)(unint64_t, char *, uint64_t))(v13 + 32);
  v20((unint64_t)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v12);
  uint64_t v21 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?)
                  - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v23 = (v22 + *(void *)(v21 + 64) + *(unsigned __int8 *)(v13 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v24 = swift_allocObject();
  outlined init with take of Actions.MetricsReportingContext?(v28, v24 + v22);
  uint64_t result = v20(v24 + v23, (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v12);
  uint64_t v26 = (void *)(a7 + v15[7]);
  *uint64_t v26 = &async function pointer to partial apply for closure #1 in Actions.Collaborate.Context.init(playlist:canCollaborateOnPlaylist:collaborate:metricsReportingContext:);
  v26[1] = v24;
  return result;
}

uint64_t type metadata accessor for Actions.Collaborate.Context()
{
  uint64_t result = type metadata singleton initialization cache for Actions.Collaborate.Context;
  if (!type metadata singleton initialization cache for Actions.Collaborate.Context) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t thunk for @escaping @callee_guaranteed @Sendable () -> ()(void (*a1)(void))
{
  a1();
  uint64_t v2 = *(uint64_t (**)(void))(v1 + 8);
  return thunk for @escaping @callee_guaranteed @Sendable () -> ()(v2);
}

uint64_t sub_100021968()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed @Sendable () -> ()()
{
  uint64_t v2 = *(void (**)(void))(v0 + 16);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = closure #3 in static Actions.ReportConcern.action(context:);
  uint64_t v4 = (uint64_t (*)(void (*)(void)))((char *)&async function pointer to thunk for @escaping @callee_guaranteed @Sendable () -> ()
                                              + async function pointer to thunk for @escaping @callee_guaranteed @Sendable () -> ());
  return v4(v2);
}

uint64_t closure #1 in Actions.Collaborate.Context.init(playlist:canCollaborateOnPlaylist:collaborate:metricsReportingContext:)(uint64_t a1, uint64_t a2)
{
  v2[9] = a1;
  v2[10] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  v2[11] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  v2[12] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for Actions.MetricsReportingContext();
  v2[13] = v3;
  v2[14] = *(void *)(v3 - 8);
  v2[15] = swift_task_alloc();
  return _swift_task_switch(closure #1 in Actions.Collaborate.Context.init(playlist:canCollaborateOnPlaylist:collaborate:metricsReportingContext:), 0, 0);
}

uint64_t closure #1 in Actions.Collaborate.Context.init(playlist:canCollaborateOnPlaylist:collaborate:metricsReportingContext:)()
{
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v2 = *(void *)(v0 + 112);
  uint64_t v3 = *(void *)(v0 + 96);
  outlined init with copy of Actions.MetricsReportingContext?(*(void *)(v0 + 72), v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    outlined destroy of TaskPriority?(*(void *)(v0 + 96), &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
  else
  {
    uint64_t v6 = *(void *)(v0 + 88);
    outlined init with take of Actions.MetricsReportingContext(*(void *)(v0 + 96), *(void *)(v0 + 120));
    uint64_t v7 = Playlist.catalogID.getter();
    *(void *)(v0 + 128) = v8;
    *(void *)(v0 + 136) = v7;
    uint64_t v9 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v6, 1, 1, v9);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<MetricsEvent.Click.ActionDetails.Key>);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100493400;
    *(void *)(inited + 32) = specialized MusicItem.metricsContentType.getter();
    *(void *)(inited + 40) = v11;
    *(unsigned char *)(inited + 48) = 0;
    *(void *)(v0 + 144) = specialized MetricsEvent.Click.ActionDetails.init(_:)(inited);
    *(void *)(v0 + 152) = v12;
    *(void *)(v0 + 160) = v13;
    *(_WORD *)(v0 + 176) = v14;
    swift_setDeallocating();
    swift_arrayDestroy();
    type metadata accessor for MainActor();
    *(void *)(v0 + 168) = static MainActor.shared.getter();
    uint64_t v16 = dispatch thunk of Actor.unownedExecutor.getter();
    return _swift_task_switch(closure #1 in Actions.Collaborate.Context.init(playlist:canCollaborateOnPlaylist:collaborate:metricsReportingContext:), v16, v15);
  }
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  uint64_t v1 = *(void *)(v0 + 160);
  uint64_t v3 = *(void **)(v0 + 144);
  uint64_t v2 = *(void *)(v0 + 152);
  uint64_t v4 = *(void *)(v0 + 128);
  uint64_t v5 = *(void *)(v0 + 136);
  uint64_t v6 = *(uint64_t **)(v0 + 120);
  uint64_t v7 = *(void *)(v0 + 88);
  uint64_t v8 = *(unsigned __int16 *)(v0 + 176);
  swift_release();
  if (v4)
  {
    uint64_t v9 = v5;
  }
  else
  {
    uint64_t v4 = 0xEB000000006D6574;
    uint64_t v9 = 0x497972617262694CLL;
  }
  specialized static Actions.reportClickEvent(targetIdentifier:targetType:actionType:actionURL:actionDetails:reportingContext:)(v9, v4, 5, 8, v7, v3, v2, v1, v8, v6);
  outlined consume of MetricsEvent.Click.ActionDetails(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease();
  outlined destroy of TaskPriority?(v7, &demangling cache variable for type metadata for URL?);
  return _swift_task_switch(closure #1 in Actions.Collaborate.Context.init(playlist:canCollaborateOnPlaylist:collaborate:metricsReportingContext:), 0, 0);
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  outlined destroy of Actions.MetricsReportingContext(*(void *)(v0 + 120));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100021F08()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?)
                 - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = type metadata accessor for Playlist();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = v0 + v2;
  uint64_t v8 = type metadata accessor for Actions.MetricsReportingContext();
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v0 + v2, 1, v8))
  {
    uint64_t v16 = v3;
    if (*(void *)(v7 + 8) >= 0xBuLL) {
      swift_bridgeObjectRelease();
    }
    uint64_t v9 = v7 + *(int *)(v8 + 20);
    uint64_t v10 = type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v9, 1, v10))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v15 = v9 + *(int *)(v10 + 24);
      uint64_t v11 = type metadata accessor for URL();
      uint64_t v13 = *(void *)(v11 - 8);
      uint64_t v14 = v11;
      if (!(*(unsigned int (**)(uint64_t, uint64_t))(v13 + 48))(v15, 1)) {
        (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v15, v14);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v3 = v16;
  }
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + ((v2 + v3 + v6) & ~v6), v4);

  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in Actions.Collaborate.Context.init(playlist:canCollaborateOnPlaylist:collaborate:metricsReportingContext:)()
{
  uint64_t v2 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?)
                 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v5 = *(unsigned __int8 *)(*(void *)(type metadata accessor for Playlist() - 8) + 80);
  unint64_t v6 = v3 + v4 + v5;
  uint64_t v7 = v0 + v3;
  uint64_t v8 = v0 + (v6 & ~v5);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v9;
  *uint64_t v9 = v1;
  v9[1] = partial apply for closure #1 in static MusicEngagementExtension.performRequest(with:completion:);
  return closure #1 in Actions.Collaborate.Context.init(playlist:canCollaborateOnPlaylist:collaborate:metricsReportingContext:)(v7, v8);
}

int *static Actions.Collaborate.action(context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  outlined init with copy of Actions.Collaborate.Context(a1, a2);
  uint64_t result = (int *)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Action<Actions.Collaborate.Context, ActionType, ()>);
  *(unsigned char *)(a2 + result[13]) = 7;
  *(void *)(a2 + result[15]) = 0x4014000000000000;
  uint64_t v4 = (uint64_t (**)(uint64_t))(a2 + result[14]);
  *uint64_t v4 = closure #1 in static Actions.Collaborate.action(context:);
  v4[1] = 0;
  uint64_t v5 = (void *)(a2 + result[16]);
  *uint64_t v5 = &async function pointer to closure #2 in static Actions.Collaborate.action(context:);
  v5[1] = 0;
  unint64_t v6 = (void *)(a2 + result[17]);
  *unint64_t v6 = &async function pointer to closure #3 in static Actions.Collaborate.action(context:);
  v6[1] = 0;
  return result;
}

uint64_t outlined init with copy of Actions.Collaborate.Context(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Actions.Collaborate.Context();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t closure #1 in static Actions.Collaborate.action(context:)(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Actions.Collaborate.Context();
  return (*(uint64_t (**)(void))(a1 + *(int *)(v2 + 20)))();
}

uint64_t closure #2 in static Actions.Collaborate.action(context:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a2;
  return _swift_task_switch(closure #2 in static Actions.Collaborate.action(context:), 0, 0);
}

uint64_t closure #2 in static Actions.Collaborate.action(context:)()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = (void *)(v1 + *(int *)(type metadata accessor for Actions.Collaborate.Context() + 24));
  uint64_t v5 = (uint64_t (*)(void))(*v2 + *(int *)*v2);
  unint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v3;
  *unint64_t v3 = v0;
  v3[1] = closure #2 in static Actions.Collaborate.action(context:);
  return v5();
}

{
  uint64_t *v0;
  uint64_t (*v1)(void);
  uint64_t v3;
  uint64_t v4;

  unint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t closure #3 in static Actions.Collaborate.action(context:)(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(closure #3 in static Actions.Collaborate.action(context:), 0, 0);
}

uint64_t closure #3 in static Actions.Collaborate.action(context:)()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = (void *)(v1 + *(int *)(type metadata accessor for Actions.Collaborate.Context() + 28));
  uint64_t v5 = (uint64_t (*)(void))(*v2 + *(int *)*v2);
  unint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v3;
  *unint64_t v3 = v0;
  v3[1] = closure #3 in static Actions.Collaborate.action(context:);
  return v5();
}

uint64_t Actions.Collaborate.Context.menuItemTitle.getter()
{
  Playlist.hasActiveCollaboration.getter();

  return specialized static Collaboration.Setup.title(active:)();
}

uint64_t (*Actions.Collaborate.Context.menuItemImage.getter())()
{
  char active = Playlist.hasActiveCollaboration.getter();
  if (active) {
    unint64_t v1 = 0x322E6E6F73726570;
  }
  else {
    unint64_t v1 = 0xD000000000000011;
  }
  if (active) {
    unint64_t v2 = 0xE800000000000000;
  }
  else {
    unint64_t v2 = 0x8000000100467C30;
  }
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = v2;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v1;
  *(void *)(v4 + 24) = v2;
  swift_bridgeObjectRetain();
  return partial apply for closure #1 in ActionMenuItemImage.init(internalSystemName:);
}

uint64_t (*protocol witness for ActionMenuItemConfiguring.menuItemImage.getter in conformance Actions.Collaborate.Context())()
{
  char active = Playlist.hasActiveCollaboration.getter();
  if (active) {
    unint64_t v1 = 0x322E6E6F73726570;
  }
  else {
    unint64_t v1 = 0xD000000000000011;
  }
  if (active) {
    unint64_t v2 = 0xE800000000000000;
  }
  else {
    unint64_t v2 = 0x8000000100467C30;
  }
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = v2;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v1;
  *(void *)(v4 + 24) = v2;
  swift_bridgeObjectRetain();
  return closure #1 in ActionMenuItemImage.init(internalSystemName:)partial apply;
}

uint64_t partial apply for closure #1 in ActionMenuItemImage.init(internalSystemName:)()
{
  return closure #1 in ActionMenuItemImage.init(internalSystemName:)();
}

uint64_t sub_100022928()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

id partial apply for closure #2 in ActionMenuItemImage.init(internalSystemName:)()
{
  return closure #2 in ActionMenuItemImage.init(internalSystemName:)(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

ValueMetadata *type metadata accessor for Actions.Collaborate()
{
  return &type metadata for Actions.Collaborate;
}

uint64_t *initializeBufferWithCopyOfBuffer for Actions.Collaborate.Context(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *a1 = *a2;
    uint64_t v4 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = type metadata accessor for Playlist();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(v4, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (uint64_t *)((char *)v4 + v8);
    uint64_t v11 = (uint64_t *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    void *v10 = *v11;
    v10[1] = v12;
    uint64_t v13 = (uint64_t *)((char *)v4 + v9);
    uint64_t v14 = (uint64_t *)((char *)a2 + v9);
    uint64_t v15 = v14[1];
    *uint64_t v13 = *v14;
    v13[1] = v15;
    uint64_t v16 = a3[7];
    uint64_t v17 = (uint64_t *)((char *)v4 + v16);
    uint64_t v18 = (uint64_t *)((char *)a2 + v16);
    uint64_t v19 = v18[1];
    void *v17 = *v18;
    v17[1] = v19;
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t destroy for Actions.Collaborate.Context(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Playlist();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for Actions.Collaborate.Context(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Playlist();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = (void *)(a1 + v8);
  uint64_t v13 = (void *)(a2 + v8);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  uint64_t v15 = a3[7];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (void *)(a2 + v15);
  uint64_t v18 = v17[1];
  *uint64_t v16 = *v17;
  v16[1] = v18;
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for Actions.Collaborate.Context(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Playlist();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  swift_retain();
  swift_release();
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  swift_retain();
  swift_release();
  uint64_t v15 = a3[7];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (void *)(a2 + v15);
  uint64_t v18 = v17[1];
  *uint64_t v16 = *v17;
  v16[1] = v18;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t initializeWithTake for Actions.Collaborate.Context(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Playlist();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t assignWithTake for Actions.Collaborate.Context(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Playlist();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  swift_release();
  *(_OWORD *)(a1 + a3[6]) = *(_OWORD *)(a2 + a3[6]);
  swift_release();
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for Actions.Collaborate.Context(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100022E0C);
}

uint64_t sub_100022E0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Playlist();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for Actions.Collaborate.Context(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100022EE0);
}

uint64_t sub_100022EE0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for Playlist();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata completion function for Actions.Collaborate.Context()
{
  uint64_t result = type metadata accessor for Playlist();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t thunk for @escaping @callee_guaranteed @Sendable () -> ()(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t static Actions.DeleteFromLibrary.action(context:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v5 = a1[7];
  uint64_t v6 = (_OWORD *)swift_allocObject();
  long long v7 = *(_OWORD *)(a1 + 1);
  long long v8 = *(_OWORD *)(a1 + 3);
  long long v12 = *(_OWORD *)(a1 + 5);
  long long v9 = *((_OWORD *)a1 + 1);
  v6[1] = *(_OWORD *)a1;
  v6[2] = v9;
  long long v10 = *((_OWORD *)a1 + 3);
  v6[3] = *((_OWORD *)a1 + 2);
  v6[4] = v10;
  *(void *)a2 = v4;
  *(_OWORD *)(a2 + 8) = v7;
  *(_OWORD *)(a2 + 24) = v8;
  *(_OWORD *)(a2 + 40) = v12;
  *(void *)(a2 + 56) = v5;
  *(unsigned char *)(a2 + 64) = 8;
  *(void *)(a2 + 72) = partial apply for closure #1 in static Actions.DeleteFromLibrary.action(context:);
  *(void *)(a2 + 80) = v6;
  *(void *)(a2 + 88) = 0x4014000000000000;
  *(void *)(a2 + 96) = &async function pointer to closure #2 in static Actions.DeleteFromLibrary.action(context:);
  *(void *)(a2 + 104) = 0;
  *(void *)(a2 + 112) = &async function pointer to closure #3 in static Actions.DeleteFromLibrary.action(context:);
  *(void *)(a2 + 120) = 0;
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  return swift_retain_n();
}

uint64_t closure #1 in static Actions.DeleteFromLibrary.action(context:)(uint64_t (**a1)(void), uint64_t a2)
{
  uint64_t result = (*a1)();
  if (v4 == 1)
  {
    uint64_t v5 = (*(uint64_t (**)(uint64_t))(a2 + 32))(result);
    uint64_t v7 = v6;
    outlined consume of ActionSupportedStatus(v5, v6);
    if (v7 == 1) {
      return 0xD00000000000001BLL;
    }
    else {
      return 0;
    }
  }
  return result;
}

uint64_t partial apply for closure #1 in static Actions.DeleteFromLibrary.action(context:)(uint64_t (**a1)(void))
{
  return closure #1 in static Actions.DeleteFromLibrary.action(context:)(a1, v1 + 16);
}

uint64_t closure #3 in static Actions.DeleteFromLibrary.action(context:)(uint64_t a1)
{
  uint64_t v4 = (uint64_t (*)(void))(*(void *)(a1 + 48) + **(int **)(a1 + 48));
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = closure #3 in static Actions.ReportConcern.action(context:);
  return v4();
}

uint64_t static Actions.DeleteFromLibrary.canDelete<A>(item:library:)()
{
  uint64_t v0 = type metadata accessor for MusicLibrary.RemoveAction();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicLibrary.SupportedStatus<MusicLibrary.RemoveAction>);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  static MusicLibraryAction<>.remove.getter();
  MusicLibrary.supportedStatus<A, B>(for:action:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  uint64_t v8 = MusicLibrary.SupportedStatus<>.actionSupportedStatus.getter();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v8;
}

uint64_t protocol witness for static ActionDefinition.action(context:) in conformance Actions.DeleteFromLibrary@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v6 = a1[2];
  uint64_t v5 = a1[3];
  uint64_t v8 = a1[4];
  uint64_t v7 = a1[5];
  uint64_t v10 = a1[6];
  uint64_t v9 = a1[7];
  uint64_t v11 = (void *)swift_allocObject();
  v11[2] = v4;
  void v11[3] = v3;
  v11[4] = v6;
  v11[5] = v5;
  v11[6] = v8;
  v11[7] = v7;
  v11[8] = v10;
  v11[9] = v9;
  *(void *)a2 = v4;
  *(void *)(a2 + 8) = v3;
  *(void *)(a2 + 16) = v6;
  *(void *)(a2 + 24) = v5;
  *(void *)(a2 + 32) = v8;
  *(void *)(a2 + 40) = v7;
  *(void *)(a2 + 48) = v10;
  *(void *)(a2 + 56) = v9;
  *(unsigned char *)(a2 + 64) = 8;
  *(void *)(a2 + 72) = closure #1 in static Actions.DeleteFromLibrary.action(context:)partial apply;
  *(void *)(a2 + 80) = v11;
  *(void *)(a2 + 88) = 0x4014000000000000;
  *(void *)(a2 + 96) = &async function pointer to closure #2 in static Actions.DeleteFromLibrary.action(context:);
  *(void *)(a2 + 104) = 0;
  *(void *)(a2 + 112) = &async function pointer to closure #3 in static Actions.DeleteFromLibrary.action(context:);
  *(void *)(a2 + 120) = 0;
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  return swift_retain_n();
}

uint64_t (*Actions.DeleteFromLibrary.Context.menuItemImage.getter())()
{
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = 0x6873617274;
  *(void *)(v0 + 24) = 0xE500000000000000;
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = 0x6873617274;
  *(void *)(v1 + 24) = 0xE500000000000000;
  return partial apply for closure #1 in ActionMenuItemImage.init(systemName:);
}

uint64_t (*protocol witness for ActionMenuItemConfiguring.menuItemImage.getter in conformance Actions.DeleteFromLibrary.Context())()
{
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = 0x6873617274;
  *(void *)(v0 + 24) = 0xE500000000000000;
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = 0x6873617274;
  *(void *)(v1 + 24) = 0xE500000000000000;
  return closure #1 in ActionMenuItemImage.init(systemName:)partial apply;
}

uint64_t Actions.DeleteFromLibrary.Context.init<A, B>(item:library:alertPresenter:metricsReportingContext:)@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t (**a9)()@<X8>, uint64_t a10)
{
  uint64_t v86 = a7;
  uint64_t v87 = a8;
  uint64_t v78 = a4;
  uint64_t v79 = a9;
  uint64_t v74 = a3;
  uint64_t v85 = a2;
  uint64_t v13 = *(void *)(a5 - 8);
  uint64_t v64 = a10;
  uint64_t v14 = __chkstk_darwin(a1);
  uint64_t v77 = (char *)&v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v73 = (char *)&v63 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v66 = (char *)&v63 - v19;
  uint64_t v21 = v20;
  uint64_t v76 = v20;
  __chkstk_darwin(v18);
  unint64_t v23 = (char *)&v63 - v22;
  uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  uint64_t v67 = a1;
  v24((char *)&v63 - v22, (uint64_t)a1, v25);
  uint64_t v68 = v24;
  uint64_t v69 = v13 + 16;
  uint64_t v84 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v80 = v84 | 7;
  uint64_t v65 = v21 + 7;
  uint64_t v26 = v21 + 7 + ((v84 + 56) & ~v84);
  uint64_t v27 = (v84 + 56) & ~v84;
  unint64_t v28 = v26 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v71 = (v26 & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v72 = v27;
  unint64_t v70 = v26 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v29 = (void *)swift_allocObject();
  v29[2] = a5;
  v29[3] = a6;
  uint64_t v30 = v87;
  v29[4] = v86;
  v29[5] = v30;
  v29[6] = a10;
  uint64_t v31 = (char *)v29 + v27;
  uint64_t v32 = v29;
  uint64_t v75 = (uint64_t (*)())v29;
  uint64_t v81 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  uint64_t v83 = v13 + 32;
  v81(v31, v23, a5);
  *(void *)((char *)v32 + v28) = v85;
  uint64_t v33 = v66;
  v24(v66, (uint64_t)a1, a5);
  uint64_t v34 = a6;
  uint64_t v35 = *(void *)(a6 - 8);
  uint64_t v36 = v35;
  unint64_t v37 = (*(unsigned __int8 *)(v36 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
  unint64_t v38 = (*(void *)(v35 + 64) + v84 + v37) & ~v84;
  unint64_t v39 = (v65 + v38) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v40 = (char *)swift_allocObject();
  *((void *)v40 + 2) = a5;
  *((void *)v40 + 3) = v34;
  uint64_t v41 = v34;
  uint64_t v82 = v34;
  uint64_t v43 = v86;
  uint64_t v42 = v87;
  *((void *)v40 + 4) = v86;
  *((void *)v40 + 5) = v42;
  uint64_t v44 = v64;
  *((void *)v40 + 6) = v64;
  (*(void (**)(char *, uint64_t, uint64_t))(v36 + 32))(&v40[v37], v74, v41);
  uint64_t v45 = v81;
  v81(&v40[v38], v33, a5);
  uint64_t v46 = v85;
  *(void *)&v40[v39] = v85;
  unint64_t v47 = v73;
  unint64_t v48 = v67;
  v68(v73, (uint64_t)v67, a5);
  uint64_t v49 = (uint64_t (*)())swift_allocObject();
  uint64_t v50 = v82;
  *((void *)v49 + 2) = a5;
  *((void *)v49 + 3) = v50;
  uint64_t v51 = v87;
  *((void *)v49 + 4) = v43;
  *((void *)v49 + 5) = v51;
  uint64_t v52 = (char *)v49 + v72;
  *((void *)v49 + 6) = v44;
  v45(v52, v47, a5);
  *(void *)((char *)v49 + v70) = v46;
  uint64_t v53 = v77;
  v45(v77, v48, a5);
  uint64_t v54 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?)
                  - 8);
  unint64_t v55 = (*(unsigned __int8 *)(v54 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80);
  unint64_t v56 = (*(void *)(v54 + 64) + v84 + v55) & ~v84;
  uint64_t v57 = (uint64_t (*)())swift_allocObject();
  uint64_t v58 = v82;
  *((void *)v57 + 2) = a5;
  *((void *)v57 + 3) = v58;
  uint64_t v59 = v87;
  *((void *)v57 + 4) = v86;
  *((void *)v57 + 5) = v59;
  *((void *)v57 + 6) = v44;
  outlined init with take of Actions.MetricsReportingContext?(v78, (uint64_t)v57 + v55);
  v81((char *)v57 + v56, v53, a5);
  uint64_t result = swift_retain_n();
  uint64_t v61 = v79;
  uint64_t v62 = v75;
  void *v79 = partial apply for closure #1 in Actions.DeleteFromLibrary.Context.init<A, B>(item:library:alertPresenter:metricsReportingContext:);
  v61[1] = v62;
  v61[2] = (uint64_t (*)())&async function pointer to partial apply for closure #2 in Actions.DeleteFromLibrary.Context.init<A, B>(item:library:alertPresenter:metricsReportingContext:);
  v61[3] = (uint64_t (*)())v40;
  v61[4] = partial apply for closure #3 in Actions.DeleteFromLibrary.Context.init<A, B>(item:library:alertPresenter:metricsReportingContext:);
  v61[5] = v49;
  v61[6] = (uint64_t (*)())&async function pointer to partial apply for closure #4 in Actions.DeleteFromLibrary.Context.init<A, B>(item:library:alertPresenter:metricsReportingContext:);
  v61[7] = v57;
  return result;
}

uint64_t closure #2 in Actions.DeleteFromLibrary.Context.init<A, B>(item:library:alertPresenter:metricsReportingContext:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[14] = a6;
  v8[15] = a8;
  v8[12] = a4;
  v8[13] = a5;
  v8[10] = a2;
  v8[11] = a3;
  v8[9] = a1;
  v8[16] = *(void *)(a4 - 8);
  v8[17] = swift_task_alloc();
  return _swift_task_switch(closure #2 in Actions.DeleteFromLibrary.Context.init<A, B>(item:library:alertPresenter:metricsReportingContext:), 0, 0);
}

uint64_t closure #2 in Actions.DeleteFromLibrary.Context.init<A, B>(item:library:alertPresenter:metricsReportingContext:)()
{
  (*(void (**)(void, void, void))(v0[16] + 16))(v0[17], v0[10], v0[12]);
  type metadata accessor for MainActor();
  v0[18] = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(closure #2 in Actions.DeleteFromLibrary.Context.init<A, B>(item:library:alertPresenter:metricsReportingContext:), v2, v1);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(char *, char *, uint64_t);
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v10)(void *, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;

  uint64_t v1 = v0[17];
  uint64_t v2 = v0[16];
  uint64_t v11 = v0[15];
  uint64_t v3 = (void (*)(char *, char *, uint64_t))v0[14];
  uint64_t v5 = v0[11];
  uint64_t v4 = v0[12];
  swift_release();
  specialized static Alert.confirmDelete(for:library:)(v1, v5, v4, v3, (uint64_t)(v0 + 2));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v4);
  uint64_t v10 = (uint64_t (*)(void *, uint64_t, uint64_t))(*(void *)(v11 + 8) + **(int **)(v11 + 8));
  uint64_t v6 = (void *)swift_task_alloc();
  v0[19] = v6;
  *uint64_t v6 = v0;
  v6[1] = closure #2 in Actions.DeleteFromLibrary.Context.init<A, B>(item:library:alertPresenter:metricsReportingContext:);
  uint64_t v7 = v0[15];
  uint64_t v8 = v0[13];
  return v10(v0 + 2, v8, v7);
}

{
  uint64_t *v0;
  uint64_t v1;
  uint64_t (*v2)(void);
  uint64_t v4;
  uint64_t v5;

  uint64_t v1 = *v0 + 16;
  uint64_t v4 = *v0;
  swift_task_dealloc();
  outlined release of Alert(v1);
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v4 + 8);
  return v2();
}

uint64_t closure #4 in Actions.DeleteFromLibrary.Context.init<A, B>(item:library:alertPresenter:metricsReportingContext:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[14] = a3;
  v5[15] = a5;
  v5[12] = a1;
  v5[13] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  v5[16] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  v5[17] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for Actions.MetricsReportingContext();
  v5[18] = v6;
  v5[19] = *(void *)(v6 - 8);
  v5[20] = swift_task_alloc();
  return _swift_task_switch(closure #4 in Actions.DeleteFromLibrary.Context.init<A, B>(item:library:alertPresenter:metricsReportingContext:), 0, 0);
}

uint64_t closure #4 in Actions.DeleteFromLibrary.Context.init<A, B>(item:library:alertPresenter:metricsReportingContext:)()
{
  uint64_t v1 = *(void *)(v0 + 144);
  uint64_t v2 = *(void *)(v0 + 152);
  uint64_t v3 = *(void *)(v0 + 136);
  outlined init with copy of Actions.MetricsReportingContext?(*(void *)(v0 + 96), v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    outlined destroy of TaskPriority?(*(void *)(v0 + 136), &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
  else
  {
    uint64_t v6 = *(void *)(v0 + 128);
    uint64_t v7 = *(void *)(v0 + 112);
    outlined init with take of Actions.MetricsReportingContext(*(void *)(v0 + 136), *(void *)(v0 + 160));
    *(void *)(v0 + 168) = MusicItem.metricsTargetIdentifier.getter(v7);
    *(void *)(v0 + 176) = v8;
    uint64_t v9 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v6, 1, 1, v9);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<MetricsEvent.Click.ActionDetails.Key>);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100493D00;
    *(void *)(inited + 32) = MusicItem.metricsContentType.getter();
    *(void *)(inited + 40) = v11;
    *(unsigned char *)(inited + 48) = 0;
    *(void *)(inited + 56) = 0;
    *(void *)(inited + 64) = 0;
    *(unsigned char *)(inited + 72) = 2;
    *(void *)(v0 + 184) = specialized MetricsEvent.Click.ActionDetails.init(_:)(inited);
    *(void *)(v0 + 192) = v12;
    *(void *)(v0 + 200) = v13;
    *(_WORD *)(v0 + 216) = v14;
    swift_setDeallocating();
    swift_arrayDestroy();
    type metadata accessor for MainActor();
    *(void *)(v0 + 208) = static MainActor.shared.getter();
    uint64_t v16 = dispatch thunk of Actor.unownedExecutor.getter();
    return _swift_task_switch(closure #4 in Actions.DeleteFromLibrary.Context.init<A, B>(item:library:alertPresenter:metricsReportingContext:), v16, v15);
  }
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  uint64_t v1 = *(void *)(v0 + 200);
  uint64_t v3 = *(void **)(v0 + 184);
  uint64_t v2 = *(void *)(v0 + 192);
  uint64_t v5 = *(void *)(v0 + 168);
  uint64_t v4 = *(void *)(v0 + 176);
  uint64_t v6 = *(uint64_t **)(v0 + 160);
  uint64_t v7 = *(void *)(v0 + 128);
  uint64_t v8 = *(unsigned __int16 *)(v0 + 216);
  swift_release();
  specialized static Actions.reportClickEvent(targetIdentifier:targetType:actionType:actionURL:actionDetails:reportingContext:)(v5, v4, 5, 14, v7, v3, v2, v1, v8, v6);
  outlined consume of MetricsEvent.Click.ActionDetails(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease();
  outlined destroy of TaskPriority?(v7, &demangling cache variable for type metadata for URL?);
  return _swift_task_switch(closure #3 in Actions.AddToPlaylist.Context.init<A, B>(item:library:playlistPickerPresenter:alertPresenter:presentationSource:metricsReportingContext:), 0, 0);
}

uint64_t specialized Actions.DeleteFromLibrary.Context.menuItemTitle.getter()
{
  uint64_t v0 = type metadata accessor for Locale();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = type metadata accessor for String.LocalizationValue();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  uint64_t v5 = &v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v3);
  uint64_t v7 = &v11[-v6];
  String.LocalizationValue.init(stringLiteral:)();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v2 + 16))(v5, v7, v1);
  if (one-time initialization token for module != -1) {
    swift_once();
  }
  id v8 = (id)static NSBundle.module;
  static Locale.current.getter();
  uint64_t v9 = String.init(localized:table:bundle:locale:comment:)();
  (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v7, v1);
  return v9;
}

uint64_t sub_100024820()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in Actions.DeleteFromLibrary.Context.init<A, B>(item:library:alertPresenter:metricsReportingContext:)()
{
  return static Actions.DeleteFromLibrary.canDelete<A>(item:library:)();
}

uint64_t sub_1000248C8()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(*(void *)(v0 + 24) - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v1 - 8);
  unint64_t v5 = (v3 + *(void *)(v2 + 64) + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  (*(void (**)(unint64_t))(v2 + 8))(v0 + v3);
  (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v5, v1);
  swift_release();

  return swift_deallocObject();
}

uint64_t partial apply for closure #2 in Actions.DeleteFromLibrary.Context.init<A, B>(item:library:alertPresenter:metricsReportingContext:)()
{
  uint64_t v3 = v0[2];
  uint64_t v2 = v0[3];
  uint64_t v4 = v0[4];
  uint64_t v5 = v0[5];
  uint64_t v6 = v0[6];
  unint64_t v7 = (*(unsigned __int8 *)(*(void *)(v2 - 8) + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 8) + 80);
  unint64_t v8 = (v7 + *(void *)(*(void *)(v2 - 8) + 64) + *(unsigned __int8 *)(*(void *)(v3 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v3 - 8) + 80);
  uint64_t v9 = (uint64_t)v0 + v7;
  uint64_t v10 = (uint64_t)v0 + v8;
  uint64_t v11 = *(void *)((char *)v0 + ((*(void *)(*(void *)(v3 - 8) + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v12;
  *uint64_t v12 = v1;
  v12[1] = partial apply for closure #1 in static MusicEngagementExtension.performRequest(with:completion:);
  return closure #2 in Actions.DeleteFromLibrary.Context.init<A, B>(item:library:alertPresenter:metricsReportingContext:)(v9, v10, v11, v3, v2, v4, v5, v6);
}

uint64_t objectdestroy_8Tm()
{
  (*(void (**)(unint64_t))(*(void *)(*(void *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80)));
  swift_release();

  return swift_deallocObject();
}

uint64_t partial apply for closure #3 in Actions.DeleteFromLibrary.Context.init<A, B>(item:library:alertPresenter:metricsReportingContext:)()
{
  return static Actions.RemoveDownload.canRemoveDownload<A>(item:library:)();
}

uint64_t sub_100024C74()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?)
                 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v5 = *(void *)(v1 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = v0 + v3;
  uint64_t v8 = type metadata accessor for Actions.MetricsReportingContext();
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v0 + v3, 1, v8))
  {
    uint64_t v16 = v4;
    if (*(void *)(v7 + 8) >= 0xBuLL) {
      swift_bridgeObjectRelease();
    }
    uint64_t v9 = v7 + *(int *)(v8 + 20);
    uint64_t v10 = type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v9, 1, v10))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v15 = v9 + *(int *)(v10 + 24);
      uint64_t v11 = type metadata accessor for URL();
      uint64_t v13 = *(void *)(v11 - 8);
      uint64_t v14 = v11;
      if (!(*(unsigned int (**)(uint64_t, uint64_t))(v13 + 48))(v15, 1)) {
        (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v15, v14);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v4 = v16;
  }
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + ((v3 + v4 + v6) & ~v6), v1);

  return swift_deallocObject();
}

uint64_t partial apply for closure #4 in Actions.DeleteFromLibrary.Context.init<A, B>(item:library:alertPresenter:metricsReportingContext:)()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = v0[4];
  uint64_t v5 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?)
                 - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = (uint64_t)v0 + v6;
  uint64_t v8 = (uint64_t)v0
     + ((v6 + *(void *)(v5 + 64) + *(unsigned __int8 *)(*(void *)(v2 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 8) + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v9;
  *uint64_t v9 = v1;
  v9[1] = closure #3 in static Actions.ReportConcern.action(context:);
  return closure #4 in Actions.DeleteFromLibrary.Context.init<A, B>(item:library:alertPresenter:metricsReportingContext:)(v7, v8, v2, v3, v4);
}

ValueMetadata *type metadata accessor for Actions.DeleteFromLibrary()
{
  return &type metadata for Actions.DeleteFromLibrary;
}

uint64_t destroy for Actions.DeleteFromLibrary.Context()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for Actions.DeleteFromLibrary.Context(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v3 = *(void *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = v3;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for Actions.DeleteFromLibrary.Context(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_retain();
  swift_release();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_retain();
  swift_release();
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

_OWORD *assignWithTake for Actions.DeleteFromLibrary.Context(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  a1[2] = a2[2];
  swift_release();
  a1[3] = a2[3];
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for Actions.DeleteFromLibrary.Context(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Actions.DeleteFromLibrary.Context(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Actions.DeleteFromLibrary.Context()
{
  return &type metadata for Actions.DeleteFromLibrary.Context;
}

uint64_t objectdestroyTm()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t Actions.DeleteOrRemoveDownload.Choice.buttonTitle(isContainer:)(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v3 = type metadata accessor for Locale();
  __chkstk_darwin(v3 - 8);
  uint64_t v4 = type metadata accessor for String.LocalizationValue();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = &v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  uint64_t v10 = &v14[-v9];
  if (a2 > 1u)
  {
    if (one-time initialization token for cancelButtonTitle != -1) {
      swift_once();
    }
    uint64_t v11 = static String.cancelButtonTitle;
    swift_bridgeObjectRetain();
  }
  else
  {
    String.LocalizationValue.init(stringLiteral:)();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v5 + 16))(v8, v10, v4);
    if (one-time initialization token for module != -1) {
      swift_once();
    }
    id v12 = (id)static NSBundle.module;
    static Locale.current.getter();
    uint64_t v11 = String.init(localized:table:bundle:locale:comment:)();
    (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v10, v4);
  }
  return v11;
}

_UNKNOWN **static Actions.DeleteOrRemoveDownload.Choice.allCases.getter()
{
  return &outlined read-only object #0 of static Actions.DeleteOrRemoveDownload.Choice.allCases.getter;
}

uint64_t Actions.DeleteOrRemoveDownload.Choice.rawValue.getter(char a1)
{
  if (!a1) {
    return 0x6F4465766F6D6572;
  }
  if (a1 == 1) {
    return 0xD000000000000011;
  }
  return 0x6C65636E6163;
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance Actions.DeleteOrRemoveDownload.Choice(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance Actions.DeleteOrRemoveDownload.Choice()
{
  return Hasher._finalize()();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance Actions.DeleteOrRemoveDownload.Choice()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance Actions.DeleteOrRemoveDownload.Choice()
{
  return Hasher._finalize()();
}

unint64_t protocol witness for RawRepresentable.init(rawValue:) in conformance Actions.DeleteOrRemoveDownload.Choice@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = specialized Actions.DeleteOrRemoveDownload.Choice.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance Actions.DeleteOrRemoveDownload.Choice(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xEE0064616F6C6E77;
  unint64_t v4 = 0x80000001004668E0;
  unint64_t v5 = 0xD000000000000011;
  if (v2 != 1)
  {
    unint64_t v5 = 0x6C65636E6163;
    unint64_t v4 = 0xE600000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x6F4465766F6D6572;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

void protocol witness for static CaseIterable.allCases.getter in conformance Actions.DeleteOrRemoveDownload.Choice(void *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of protocol witness for static CaseIterable.allCases.getter in conformance Actions.DeleteOrRemoveDownload.Choice;
}

uint64_t static Actions.DeleteOrRemoveDownload.action(context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  outlined init with copy of Actions.DeleteOrRemoveDownload.Context(a1, a2);
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = &async function pointer to closure #2 in static Actions.DeleteOrRemoveDownload.action(context:);
  *(void *)(result + 24) = 0;
  *(unsigned char *)(a2 + 137) = 36;
  *(void *)(a2 + 152) = 0;
  *(void *)(a2 + 160) = 0x403E000000000000;
  *(void *)(a2 + 144) = closure #1 in static Actions.DeleteOrRemoveDownload.action(context:);
  *(void *)(a2 + 168) = &async function pointer to partial apply for specialized closure #1 in Action.init(_:id:waitLogInterval:supportedStatus:perform:finish:);
  *(void *)(a2 + 176) = result;
  *(void *)(a2 + 184) = &async function pointer to closure #3 in static Actions.DeleteOrRemoveDownload.action(context:);
  *(void *)(a2 + 192) = 0;
  return result;
}

unint64_t closure #1 in static Actions.DeleteOrRemoveDownload.action(context:)(uint64_t (**a1)(void))
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ActionSupportedStatus>);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100493D00;
  *(void *)(inited + 32) = (*a1)();
  *(void *)(inited + 40) = v3;
  *(void *)(inited + 48) = a1[4]();
  *(void *)(inited + 56) = v4;
  unint64_t v5 = specialized static ActionSupportedStatus.allSupported(_:)((void *)inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  return v5;
}

uint64_t closure #2 in static Actions.DeleteOrRemoveDownload.action(context:)(uint64_t a1, uint64_t a2)
{
  v2[28] = a1;
  v2[29] = a2;
  type metadata accessor for MainActor();
  v2[30] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[31] = v4;
  v2[32] = v3;
  return _swift_task_switch(closure #2 in static Actions.DeleteOrRemoveDownload.action(context:), v4, v3);
}

uint64_t closure #2 in static Actions.DeleteOrRemoveDownload.action(context:)()
{
  uint64_t v1 = *(void *)(v0 + 232);
  outlined init with copy of Actions.DeleteOrRemoveDownload.Context(*(void *)(v0 + 224), v0 + 16);
  uint64_t v3 = *(void *)(v0 + 136);
  uint64_t v2 = *(void *)(v0 + 144);
  *(void *)(v0 + 264) = v2;
  uint64_t v4 = swift_task_alloc();
  *(void *)(v4 + 16) = v0 + 16;
  *(void *)(v4 + 24) = v1;
  swift_bridgeObjectRetain();
  unint64_t v5 = _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSay9MusicCore7ActionsO22DeleteOrRemoveDownloadO6ChoiceOG_AF5AlertV6ActionVs5NeverOTg5((void (*)(uint64_t *__return_ptr, char *))partial apply for closure #1 in closure #2 in static Actions.DeleteOrRemoveDownload.action(context:), v4, (uint64_t)&outlined read-only object #0 of closure #2 in static Actions.DeleteOrRemoveDownload.action(context:));
  *(void *)(v0 + 272) = v5;
  swift_task_dealloc();
  *(void *)(v0 + 160) = 0;
  *(void *)(v0 + 168) = 0;
  *(void *)(v0 + 176) = v3;
  *(void *)(v0 + 184) = v2;
  *(unsigned char *)(v0 + 192) = 1;
  *(void *)(v0 + 200) = v5;
  *(void *)(v0 + 208) = 0;
  uint64_t v6 = *(void *)(v0 + 120);
  uint64_t v7 = *(void *)(v0 + 128);
  __swift_project_boxed_opaque_existential_0Tm((void *)(v0 + 96), v6);
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 + 8) + **(int **)(v7 + 8));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 280) = v8;
  *uint64_t v8 = v0;
  v8[1] = closure #2 in static Actions.DeleteOrRemoveDownload.action(context:);
  return v10(v0 + 160, v6, v7);
}

{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 256);
  uint64_t v3 = *(void *)(v1 + 248);
  return _swift_task_switch(closure #2 in static Actions.DeleteOrRemoveDownload.action(context:), v3, v2);
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  outlined destroy of Actions.DeleteOrRemoveDownload.Context(v0 + 16);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t closure #1 in closure #2 in static Actions.DeleteOrRemoveDownload.action(context:)@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<Actions.DeleteOrRemoveDownload.Choice, Error>);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8);
  unsigned int v11 = *a1;
  if (*a1)
  {
    if (v11 == 1)
    {
      unint64_t v27 = 0x80000001004668E0;
      unint64_t v12 = 0xD000000000000011;
    }
    else
    {
      unint64_t v27 = 0xE600000000000000;
      unint64_t v12 = 0x6C65636E6163;
    }
  }
  else
  {
    unint64_t v27 = 0xEE0064616F6C6E77;
    unint64_t v12 = 0x6F4465766F6D6572;
  }
  unint64_t v26 = v12;
  uint64_t v25 = Actions.DeleteOrRemoveDownload.Choice.buttonTitle(isContainer:)(*(unsigned __int8 *)(a2 + 136), v11);
  uint64_t v24 = v13;
  outlined init with copy of Actions.DeleteOrRemoveDownload.Context(a2, (uint64_t)v28);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v8);
  unint64_t v14 = (*(unsigned __int8 *)(v9 + 80) + 161) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v15 = swift_allocObject();
  long long v16 = v28[4];
  *(_OWORD *)(v15 + 104) = v28[5];
  long long v17 = v29[0];
  *(_OWORD *)(v15 + 120) = v28[6];
  *(_OWORD *)(v15 + 136) = v17;
  *(_OWORD *)(v15 + 145) = *(_OWORD *)((char *)v29 + 9);
  long long v18 = v28[0];
  *(_OWORD *)(v15 + 40) = v28[1];
  long long v19 = v28[3];
  *(_OWORD *)(v15 + 56) = v28[2];
  *(_OWORD *)(v15 + 72) = v19;
  *(_OWORD *)(v15 + 88) = v16;
  *(unsigned char *)(v15 + 16) = v11;
  *(_OWORD *)(v15 + 24) = v18;
  uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v9 + 32))(v15 + v14, (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  unint64_t v21 = v27;
  *(void *)a4 = v26;
  *(void *)(a4 + 8) = v21;
  uint64_t v22 = v24;
  *(void *)(a4 + 16) = v25;
  *(void *)(a4 + 24) = v22;
  *(unsigned char *)(a4 + 32) = v11 < 2;
  *(void *)(a4 + 40) = &async function pointer to partial apply for closure #1 in closure #1 in closure #2 in static Actions.DeleteOrRemoveDownload.action(context:);
  *(void *)(a4 + 48) = v15;
  return result;
}

uint64_t closure #1 in closure #1 in closure #2 in static Actions.DeleteOrRemoveDownload.action(context:)(char a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 160) = a2;
  *(void *)(v3 + 168) = a3;
  *(unsigned char *)(v3 + 153) = a1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<Actions.DeleteOrRemoveDownload.Choice, Error>);
  *(void *)(v3 + 176) = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  *(void *)(v3 + 184) = v5;
  *(void *)(v3 + 192) = *(void *)(v5 + 64);
  *(void *)(v3 + 200) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&_sScPSgMD_0);
  *(void *)(v3 + 208) = swift_task_alloc();
  return _swift_task_switch(closure #1 in closure #1 in closure #2 in static Actions.DeleteOrRemoveDownload.action(context:), 0, 0);
}

uint64_t closure #1 in closure #1 in closure #2 in static Actions.DeleteOrRemoveDownload.action(context:)()
{
  uint64_t v2 = *(void *)(v0 + 200);
  uint64_t v1 = *(void *)(v0 + 208);
  uint64_t v3 = *(void *)(v0 + 184);
  uint64_t v5 = *(void *)(v0 + 168);
  uint64_t v4 = *(void *)(v0 + 176);
  uint64_t v6 = *(void *)(v0 + 160);
  char v7 = *(unsigned char *)(v0 + 153);
  uint64_t v8 = type metadata accessor for TaskPriority();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v1, 1, 1, v8);
  outlined init with copy of Actions.DeleteOrRemoveDownload.Context(v6, v0 + 16);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v5, v4);
  unint64_t v9 = (*(unsigned __int8 *)(v3 + 80) + 177) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v10 = swift_allocObject();
  long long v11 = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v10 + 120) = *(_OWORD *)(v0 + 96);
  long long v12 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v10 + 136) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v10 + 152) = v12;
  *(_OWORD *)(v10 + 161) = *(_OWORD *)(v0 + 137);
  long long v13 = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v10 + 56) = *(_OWORD *)(v0 + 32);
  long long v14 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v10 + 72) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v10 + 88) = v14;
  *(_OWORD *)(v10 + 104) = v11;
  *(void *)(v10 + 16) = 0;
  *(void *)(v10 + 24) = 0;
  *(unsigned char *)(v10 + 32) = v7;
  *(_OWORD *)(v10 + 40) = v13;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32))(v10 + v9, v2, v4);
  _sScTss5Error_pRs_rlE8priority9operationScTyxsAA_pGScPSg_xyYaKYAcntcfCyt_Tgm5(v1, (uint64_t)&async function pointer to partial apply for closure #1 in closure #1 in closure #1 in closure #2 in static Actions.DeleteOrRemoveDownload.action(context:), v10);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v15 = *(uint64_t (**)(void))(v0 + 8);
  return v15();
}

uint64_t closure #1 in closure #1 in closure #1 in closure #2 in static Actions.DeleteOrRemoveDownload.action(context:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 16) = a5;
  *(void *)(v6 + 24) = a6;
  *(unsigned char *)(v6 + 49) = a4;
  return _swift_task_switch(closure #1 in closure #1 in closure #1 in closure #2 in static Actions.DeleteOrRemoveDownload.action(context:), 0, 0);
}

uint64_t closure #1 in closure #1 in closure #1 in closure #2 in static Actions.DeleteOrRemoveDownload.action(context:)()
{
  if (!*(unsigned char *)(v0 + 49))
  {
    uint64_t v5 = (uint64_t (*)(void))(*(void *)(*(void *)(v0 + 16) + 48) + **(int **)(*(void *)(v0 + 16) + 48));
    uint64_t v1 = (void *)swift_task_alloc();
    *(void *)(v0 + 32) = v1;
    *uint64_t v1 = v0;
    uint64_t v2 = closure #1 in closure #1 in closure #1 in closure #2 in static Actions.DeleteOrRemoveDownload.action(context:);
    goto LABEL_5;
  }
  if (*(unsigned char *)(v0 + 49) == 1)
  {
    uint64_t v5 = (uint64_t (*)(void))(*(void *)(*(void *)(v0 + 16) + 16) + **(int **)(*(void *)(v0 + 16) + 16));
    uint64_t v1 = (void *)swift_task_alloc();
    *(void *)(v0 + 40) = v1;
    *uint64_t v1 = v0;
    uint64_t v2 = closure #1 in closure #1 in closure #1 in closure #2 in static Actions.DeleteOrRemoveDownload.action(context:);
LABEL_5:
    v1[1] = v2;
    return v5();
  }
  *(unsigned char *)(v0 + 48) = 2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<Actions.DeleteOrRemoveDownload.Choice, Error>);
  CheckedContinuation.resume(returning:)();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t (*v3)(void);
  uint64_t v5;

  uint64_t v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
  else
  {
    return _swift_task_switch(closure #1 in closure #1 in closure #1 in closure #2 in static Actions.DeleteOrRemoveDownload.action(context:), 0, 0);
  }
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  *(unsigned char *)(v0 + 48) = *(unsigned char *)(v0 + 49);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<Actions.DeleteOrRemoveDownload.Choice, Error>);
  CheckedContinuation.resume(returning:)();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t (*v3)(void);
  uint64_t v5;

  uint64_t v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
  else
  {
    return _swift_task_switch(closure #1 in closure #1 in closure #1 in closure #2 in static Actions.DeleteOrRemoveDownload.action(context:), 0, 0);
  }
}

void *_sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSay9MusicCore7ActionsO22DeleteOrRemoveDownloadO6ChoiceOG_AF5AlertV6ActionVs5NeverOTg5(void (*a1)(uint64_t *__return_ptr, char *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  int64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = _swiftEmptyArrayStorage;
  if (v5)
  {
    uint64_t v32 = _swiftEmptyArrayStorage;
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, v5, 0);
    uint64_t v6 = _swiftEmptyArrayStorage;
    uint64_t v8 = (char *)(a3 + 32);
    while (1)
    {
      char v9 = *v8++;
      char v25 = v9;
      a1(&v26, &v25);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      uint64_t v11 = v26;
      uint64_t v10 = v27;
      uint64_t v13 = v28;
      uint64_t v12 = v29;
      char v14 = v30;
      long long v15 = v31;
      uint64_t v32 = v6;
      unint64_t v17 = v6[2];
      unint64_t v16 = v6[3];
      if (v17 >= v16 >> 1)
      {
        long long v23 = v31;
        uint64_t v22 = v27;
        uint64_t v19 = v29;
        char v21 = v30;
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)((char *)(v16 > 1), v17 + 1, 1);
        char v14 = v21;
        uint64_t v12 = v19;
        uint64_t v10 = v22;
        long long v15 = v23;
        uint64_t v6 = v32;
      }
      v6[2] = v17 + 1;
      long long v18 = &v6[7 * v17];
      v18[4] = v11;
      v18[5] = v10;
      v18[6] = v13;
      v18[7] = v12;
      *((unsigned char *)v18 + 64) = v14;
      *(_OWORD *)(v18 + 9) = v15;
      if (!--v5) {
        return v6;
      }
    }
    swift_release();
  }
  return v6;
}

uint64_t closure #3 in static Actions.DeleteOrRemoveDownload.action(context:)(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(closure #3 in static Actions.DeleteOrRemoveDownload.action(context:), 0, 0);
}

uint64_t closure #3 in static Actions.DeleteOrRemoveDownload.action(context:)()
{
  uint64_t v3 = (uint64_t (*)(void))(*(void *)(*(void *)(v0 + 16) + 64) + **(int **)(*(void *)(v0 + 16) + 64));
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v1;
  *uint64_t v1 = v0;
  v1[1] = closure #2 in static Actions.Collaborate.action(context:);
  return v3();
}

uint64_t protocol witness for static ActionDefinition.action(context:) in conformance Actions.DeleteOrRemoveDownload@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  outlined init with copy of Actions.DeleteOrRemoveDownload.Context(a1, a2);
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = &async function pointer to closure #2 in static Actions.DeleteOrRemoveDownload.action(context:);
  *(void *)(result + 24) = 0;
  *(unsigned char *)(a2 + 137) = 36;
  *(void *)(a2 + 152) = 0;
  *(void *)(a2 + 160) = 0x403E000000000000;
  *(void *)(a2 + 144) = closure #1 in static Actions.DeleteOrRemoveDownload.action(context:);
  *(void *)(a2 + 168) = &closure #1 in Action.init(_:id:waitLogInterval:supportedStatus:perform:finish:)specialized partial apply;
  *(void *)(a2 + 176) = result;
  *(void *)(a2 + 184) = &async function pointer to closure #3 in static Actions.DeleteOrRemoveDownload.action(context:);
  *(void *)(a2 + 192) = 0;
  return result;
}

uint64_t Actions.DeleteOrRemoveDownload.Context.init<A, B>(item:alertPresenter:library:metricsReportingContext:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t (*a7)()@<X6>, uint64_t a8@<X7>, uint64_t (**a9)()@<X8>, uint64_t a10)
{
  uint64_t v113 = a9;
  uint64_t v114 = a8;
  BOOL v126 = a7;
  uint64_t v117 = a4;
  uint64_t v124 = a3;
  uint64_t v111 = a2;
  uint64_t v121 = a10;
  uint64_t v95 = type metadata accessor for Playlist();
  uint64_t v90 = *(void *)(v95 - 8);
  __chkstk_darwin(v95);
  uint64_t v94 = (char *)&v89 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = type metadata accessor for Album();
  uint64_t v93 = *(void *)(v112 - 8);
  __chkstk_darwin(v112);
  uint64_t v109 = (char *)&v89 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  uint64_t v104 = *(void *)(v16 - 8);
  uint64_t v103 = *(void *)(v104 + 64);
  uint64_t v17 = __chkstk_darwin(v16 - 8);
  uint64_t v102 = (uint64_t)&v89 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = *(void *)(a5 - 8);
  uint64_t v20 = *(void *)(v19 + 64);
  uint64_t v21 = __chkstk_darwin(v17);
  v91 = (char *)&v89 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __chkstk_darwin(v21);
  unint64_t v110 = (char *)&v89 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v106 = (char *)&v89 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v101 = (char *)&v89 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v98 = (char *)&v89 - v29;
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v97 = (char *)&v89 - v31;
  uint64_t v32 = __chkstk_darwin(v30);
  uint64_t v105 = (char *)&v89 - v33;
  uint64_t v100 = v20;
  __chkstk_darwin(v32);
  uint64_t v35 = (char *)&v89 - v34;
  uint64_t v36 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 16);
  uint64_t v122 = v19 + 16;
  uint64_t v123 = v36;
  uint64_t v120 = a1;
  v36((char *)&v89 - v34, a1, a5);
  uint64_t v99 = *(unsigned __int8 *)(v19 + 80);
  uint64_t v37 = (v99 + 64) & ~v99;
  uint64_t v119 = v99 | 7;
  uint64_t v115 = (uint64_t (*)())(v37 + v20);
  unint64_t v38 = (uint64_t (*)())swift_allocObject();
  *((void *)v38 + 2) = a5;
  *((void *)v38 + 3) = a6;
  *((void *)v38 + 4) = v126;
  *((void *)v38 + 5) = a8;
  uint64_t v39 = v124;
  *((void *)v38 + 6) = v121;
  *((void *)v38 + 7) = v39;
  unint64_t v108 = v38;
  uint64_t v92 = v19;
  os_log_type_t v125 = *(void (**)(char *, char *, uint64_t))(v19 + 32);
  uint64_t v118 = v19 + 32;
  v125((char *)v38 + v37, v35, a5);
  uint64_t v40 = v105;
  v123(v105, a1, a5);
  uint64_t v41 = (uint64_t (*)())swift_allocObject();
  *((void *)v41 + 2) = a5;
  *((void *)v41 + 3) = a6;
  uint64_t v42 = a6;
  uint64_t v116 = a6;
  uint64_t v43 = v126;
  uint64_t v44 = v114;
  *((void *)v41 + 4) = v126;
  *((void *)v41 + 5) = v44;
  uint64_t v96 = v37;
  uint64_t v45 = v121;
  *((void *)v41 + 6) = v121;
  *((void *)v41 + 7) = v39;
  uint64_t v107 = v41;
  v125((char *)v41 + v37, v40, a5);
  uint64_t v46 = v97;
  unint64_t v47 = v123;
  v123(v97, v120, a5);
  unint64_t v48 = (char *)swift_allocObject();
  *((void *)v48 + 2) = a5;
  *((void *)v48 + 3) = v42;
  *((void *)v48 + 4) = v43;
  *((void *)v48 + 5) = v44;
  uint64_t v49 = &v48[v37];
  uint64_t v50 = v45;
  uint64_t v51 = v124;
  uint64_t v105 = v48;
  *((void *)v48 + 6) = v45;
  *((void *)v48 + 7) = v51;
  uint64_t v52 = v125;
  v125(v49, v46, a5);
  uint64_t v53 = v98;
  uint64_t v54 = v120;
  v47(v98, v120, a5);
  unint64_t v55 = (uint64_t (*)())swift_allocObject();
  uint64_t v56 = v116;
  *((void *)v55 + 2) = a5;
  *((void *)v55 + 3) = v56;
  *((void *)v55 + 4) = v126;
  *((void *)v55 + 5) = v44;
  uint64_t v57 = (char *)v55 + v96;
  *((void *)v55 + 6) = v50;
  *((void *)v55 + 7) = v51;
  uint64_t v115 = v55;
  v52(v57, v53, a5);
  uint64_t v58 = v102;
  outlined init with copy of (String, Any)(v117, v102, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  uint64_t v59 = v101;
  v47(v101, v54, a5);
  unint64_t v60 = (*(unsigned __int8 *)(v104 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v104 + 80);
  unint64_t v61 = (v103 + v99 + v60) & ~v99;
  uint64_t v62 = (uint64_t (*)())swift_allocObject();
  uint64_t v63 = v116;
  *((void *)v62 + 2) = a5;
  *((void *)v62 + 3) = v63;
  uint64_t v64 = v114;
  *((void *)v62 + 4) = v126;
  *((void *)v62 + 5) = v64;
  uint64_t v65 = v121;
  *((void *)v62 + 6) = v121;
  outlined init with take of Actions.MetricsReportingContext?(v58, (uint64_t)v62 + v60);
  v125((char *)v62 + v61, v59, a5);
  uint64_t v128 = v63;
  uint64_t v129 = v65;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v127);
  uint64_t v67 = *(void *)(v63 - 8);
  uint64_t v68 = v111;
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v67 + 16))(boxed_opaque_existential_1, v111, v63);
  swift_retain_n();
  uint64_t v69 = v120;
  uint64_t v70 = closure #6 in Actions.DeleteOrRemoveDownload.Context.init<A, B>(item:alertPresenter:library:metricsReportingContext:)(v120, a5);
  BOOL v126 = v71;
  outlined destroy of TaskPriority?(v117, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  uint64_t v72 = v63;
  uint64_t v73 = v112;
  (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v68, v72);
  uint64_t v74 = v69;
  uint64_t v75 = v109;
  v123(v106, v74, a5);
  if (swift_dynamicCast())
  {
    (*(void (**)(char *, uint64_t))(v93 + 8))(v75, v73);
    uint64_t v76 = v110;
    v125(v110, (char *)v74, a5);
    (*(void (**)(char *, uint64_t))(v92 + 8))(v76, a5);
  }
  else
  {
    uint64_t v77 = v110;
    uint64_t v78 = v125;
    v125(v110, (char *)v74, a5);
    v78(v91, v77, a5);
    uint64_t v79 = v94;
    uint64_t v80 = v95;
    if (!swift_dynamicCast())
    {
      char v81 = 0;
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v90 + 8))(v79, v80);
  }
  char v81 = 1;
LABEL_7:
  uint64_t v82 = v113;
  uint64_t v83 = v108;
  *uint64_t v113 = partial apply for closure #1 in Actions.DeleteOrRemoveDownload.Context.init<A, B>(item:alertPresenter:library:metricsReportingContext:);
  v82[1] = v83;
  uint64_t v84 = v107;
  v82[2] = (uint64_t (*)())&async function pointer to partial apply for closure #2 in Actions.DeleteOrRemoveDownload.Context.init<A, B>(item:alertPresenter:library:metricsReportingContext:);
  v82[3] = v84;
  uint64_t v85 = (uint64_t (*)())v105;
  v82[4] = partial apply for closure #3 in Actions.DeleteOrRemoveDownload.Context.init<A, B>(item:alertPresenter:library:metricsReportingContext:);
  v82[5] = v85;
  uint64_t v86 = v115;
  v82[6] = (uint64_t (*)())&async function pointer to partial apply for closure #4 in Actions.DeleteOrRemoveDownload.Context.init<A, B>(item:alertPresenter:library:metricsReportingContext:);
  v82[7] = v86;
  v82[8] = (uint64_t (*)())&async function pointer to partial apply for closure #5 in Actions.DeleteOrRemoveDownload.Context.init<A, B>(item:alertPresenter:library:metricsReportingContext:);
  v82[9] = v62;
  uint64_t result = outlined init with take of AlertPresenting(&v127, (uint64_t)(v82 + 10));
  uint64_t v88 = v126;
  v82[15] = (uint64_t (*)())v70;
  v82[16] = v88;
  *((unsigned char *)v82 + 136) = v81;
  return result;
}

uint64_t closure #1 in Actions.DeleteOrRemoveDownload.Context.init<A, B>(item:alertPresenter:library:metricsReportingContext:)()
{
  uint64_t v0 = type metadata accessor for MusicLibrary.RemoveAction();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicLibrary.SupportedStatus<MusicLibrary.RemoveAction>);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  char v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  static MusicLibraryAction<>.remove.getter();
  MusicLibrary.supportedStatus<A, B>(for:action:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  uint64_t v8 = MusicLibrary.SupportedStatus<>.actionSupportedStatus.getter();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v8;
}

uint64_t closure #2 in Actions.DeleteOrRemoveDownload.Context.init<A, B>(item:alertPresenter:library:metricsReportingContext:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char v9 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v9;
  *char v9 = v5;
  v9[1] = closure #3 in static Actions.ReportConcern.action(context:);
  return MusicLibrary.remove<A>(_:)(a2, a3, a5);
}

uint64_t closure #3 in Actions.DeleteOrRemoveDownload.Context.init<A, B>(item:alertPresenter:library:metricsReportingContext:)()
{
  uint64_t v0 = type metadata accessor for MusicLibrary.RemoveDownloadAction();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicLibrary.SupportedStatus<MusicLibrary.RemoveDownloadAction>);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  char v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  static MusicLibraryAction<>.removeDownload.getter();
  MusicLibrary.supportedStatus<A, B>(for:action:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  uint64_t v8 = MusicLibrary.SupportedStatus<>.actionSupportedStatus.getter();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v8;
}

uint64_t closure #4 in Actions.DeleteOrRemoveDownload.Context.init<A, B>(item:alertPresenter:library:metricsReportingContext:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char v9 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v9;
  *char v9 = v5;
  v9[1] = closure #3 in static Actions.ReportConcern.action(context:);
  return MusicLibrary.removeDownload<A>(_:)(a2, a3, a5);
}

uint64_t closure #5 in Actions.DeleteOrRemoveDownload.Context.init<A, B>(item:alertPresenter:library:metricsReportingContext:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[11] = a3;
  v5[12] = a5;
  v5[9] = a1;
  v5[10] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  v5[13] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  v5[14] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for Actions.MetricsReportingContext();
  v5[15] = v6;
  v5[16] = *(void *)(v6 - 8);
  v5[17] = swift_task_alloc();
  return _swift_task_switch(closure #5 in Actions.DeleteOrRemoveDownload.Context.init<A, B>(item:alertPresenter:library:metricsReportingContext:), 0, 0);
}

uint64_t closure #5 in Actions.DeleteOrRemoveDownload.Context.init<A, B>(item:alertPresenter:library:metricsReportingContext:)()
{
  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v2 = *(void *)(v0 + 128);
  uint64_t v3 = *(void *)(v0 + 112);
  outlined init with copy of (String, Any)(*(void *)(v0 + 72), v3, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    outlined destroy of TaskPriority?(*(void *)(v0 + 112), &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
  else
  {
    uint64_t v6 = *(void *)(v0 + 104);
    uint64_t v7 = *(void *)(v0 + 88);
    outlined init with take of Actions.MetricsReportingContext(*(void *)(v0 + 112), *(void *)(v0 + 136));
    *(void *)(v0 + 144) = MusicItem.metricsTargetIdentifier.getter(v7);
    *(void *)(v0 + 152) = v8;
    uint64_t v9 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v6, 1, 1, v9);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<MetricsEvent.Click.ActionDetails.Key>);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100493400;
    *(void *)(inited + 32) = MusicItem.metricsContentType.getter();
    *(void *)(inited + 40) = v11;
    *(unsigned char *)(inited + 48) = 0;
    *(void *)(v0 + 160) = specialized MetricsEvent.Click.ActionDetails.init(_:)(inited);
    *(void *)(v0 + 168) = v12;
    *(void *)(v0 + 176) = v13;
    *(_WORD *)(v0 + 192) = v14;
    swift_setDeallocating();
    swift_arrayDestroy();
    type metadata accessor for MainActor();
    *(void *)(v0 + 184) = static MainActor.shared.getter();
    uint64_t v16 = dispatch thunk of Actor.unownedExecutor.getter();
    return _swift_task_switch(closure #5 in Actions.DeleteOrRemoveDownload.Context.init<A, B>(item:alertPresenter:library:metricsReportingContext:), v16, v15);
  }
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  uint64_t v1 = *(void *)(v0 + 176);
  uint64_t v3 = *(void **)(v0 + 160);
  uint64_t v2 = *(void *)(v0 + 168);
  uint64_t v5 = *(void *)(v0 + 144);
  uint64_t v4 = *(void *)(v0 + 152);
  uint64_t v6 = *(uint64_t **)(v0 + 136);
  uint64_t v7 = *(void *)(v0 + 104);
  uint64_t v8 = *(unsigned __int16 *)(v0 + 192);
  swift_release();
  specialized static Actions.reportClickEvent(targetIdentifier:targetType:actionType:actionURL:actionDetails:reportingContext:)(v5, v4, 5, 30, v7, v3, v2, v1, v8, v6);
  outlined consume of MetricsEvent.Click.ActionDetails(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease();
  outlined destroy of TaskPriority?(v7, &demangling cache variable for type metadata for URL?);
  return _swift_task_switch(closure #5 in Actions.DeleteOrRemoveDownload.Context.init<A, B>(item:alertPresenter:library:metricsReportingContext:), 0, 0);
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  outlined destroy of Actions.MetricsReportingContext(*(void *)(v0 + 136));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t closure #6 in Actions.DeleteOrRemoveDownload.Context.init<A, B>(item:alertPresenter:library:metricsReportingContext:)(uint64_t a1, uint64_t a2)
{
  uint64_t v138 = a1;
  uint64_t v107 = type metadata accessor for Genre();
  uint64_t v105 = *(void *)(v107 - 8);
  __chkstk_darwin(v107);
  unint64_t v108 = (char *)&v100 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = type metadata accessor for Composer();
  uint64_t v106 = *(void *)(v110 - 8);
  __chkstk_darwin(v110);
  uint64_t v111 = (char *)&v100 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = type metadata accessor for Artist();
  uint64_t v109 = *(void *)(v113 - 8);
  __chkstk_darwin(v113);
  uint64_t v114 = (char *)&v100 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v116 = type metadata accessor for TVEpisode();
  uint64_t v112 = *(void *)(v116 - 8);
  __chkstk_darwin(v116);
  uint64_t v117 = (char *)&v100 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v120 = type metadata accessor for TVSeason();
  uint64_t v115 = *(void *)(v120 - 8);
  __chkstk_darwin(v120);
  uint64_t v119 = (char *)&v100 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v122 = type metadata accessor for TVShow();
  uint64_t v118 = *(void *)(v122 - 8);
  __chkstk_darwin(v122);
  uint64_t v121 = (char *)&v100 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v125 = type metadata accessor for MusicMovie();
  uint64_t v123 = *(void *)(v125 - 8);
  __chkstk_darwin(v125);
  BOOL v126 = (char *)&v100 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v128 = type metadata accessor for Song();
  uint64_t v124 = *(void *)(v128 - 8);
  __chkstk_darwin(v128);
  uint64_t v129 = (char *)&v100 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v132 = type metadata accessor for Playlist();
  uint64_t v127 = *(void *)(v132 - 8);
  __chkstk_darwin(v132);
  uint64_t v131 = (char *)&v100 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  os_log_t v134 = (os_log_t)type metadata accessor for MusicVideo();
  Class isa = v134[-1].isa;
  __chkstk_darwin(v134);
  uint64_t v13 = (char *)&v100 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Locale();
  __chkstk_darwin(v14 - 8);
  unint64_t v136 = (char *)&v100 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for String.LocalizationValue();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v100 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v100 - v21;
  uint64_t v23 = type metadata accessor for Album();
  uint64_t v133 = *(char **)(v23 - 8);
  uint64_t v24 = __chkstk_darwin(v23);
  uint64_t v26 = (char *)&v100 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = *(void *)(a2 - 8);
  uint64_t v28 = __chkstk_darwin(v24);
  uint64_t v102 = (char *)&v100 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v104 = (char *)&v100 - v31;
  __chkstk_darwin(v30);
  uint64_t v33 = (char *)&v100 - v32;
  uint64_t v137 = v27;
  uint64_t v103 = *(void (**)(char *, uint64_t, uint64_t))(v27 + 16);
  v103((char *)&v100 - v32, v138, a2);
  if (swift_dynamicCast())
  {
    uint64_t v135 = a2;
    String.LocalizationValue.init(stringLiteral:)();
    (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v20, v22, v16);
    uint64_t v34 = v17;
    if (one-time initialization token for module != -1) {
      swift_once();
    }
    id v35 = (id)static NSBundle.module;
    static Locale.current.getter();
    uint64_t v36 = String.init(localized:table:bundle:locale:comment:)();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v22, v16);
    (*((void (**)(char *, uint64_t))v133 + 1))(v26, v23);
    (*(void (**)(char *, uint64_t))(v137 + 8))(v33, v135);
    return v36;
  }
  uint64_t v101 = v20;
  uint64_t v133 = v22;
  uint64_t v37 = v16;
  uint64_t v100 = v17;
  os_log_t v38 = v134;
  uint64_t v39 = v33;
  if (swift_dynamicCast())
  {
    os_log_t v40 = v38;
    uint64_t v135 = a2;
    uint64_t v132 = (uint64_t)v33;
    uint64_t v41 = v133;
    String.LocalizationValue.init(stringLiteral:)();
    uint64_t v42 = v100;
    (*(void (**)(char *, char *, uint64_t))(v100 + 16))(v101, v41, v37);
    uint64_t v43 = v137;
    if (one-time initialization token for module != -1) {
      swift_once();
    }
    id v44 = (id)static NSBundle.module;
    static Locale.current.getter();
    uint64_t v36 = String.init(localized:table:bundle:locale:comment:)();
    (*(void (**)(char *, uint64_t))(v42 + 8))(v41, v37);
    (*((void (**)(char *, os_log_t))isa + 1))(v13, v40);
    (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v132, v135);
    return v36;
  }
  int v46 = swift_dynamicCast();
  uint64_t v47 = v137;
  if (v46)
  {
    unint64_t v48 = v133;
    String.LocalizationValue.init(stringLiteral:)();
    uint64_t v49 = v100;
    (*(void (**)(char *, char *, uint64_t))(v100 + 16))(v101, v48, v37);
    if (one-time initialization token for module != -1) {
      swift_once();
    }
    id v50 = (id)static NSBundle.module;
    static Locale.current.getter();
    uint64_t v36 = String.init(localized:table:bundle:locale:comment:)();
    (*(void (**)(char *, uint64_t))(v49 + 8))(v48, v37);
    (*(void (**)(char *, uint64_t))(v127 + 8))(v131, v132);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v39, a2);
    return v36;
  }
  uint64_t v51 = v128;
  uint64_t v52 = v37;
  if (swift_dynamicCast())
  {
    uint64_t v53 = a2;
    uint64_t v54 = v133;
    String.LocalizationValue.init(stringLiteral:)();
    uint64_t v55 = v100;
    (*(void (**)(char *, char *, uint64_t))(v100 + 16))(v101, v54, v52);
    if (one-time initialization token for module != -1) {
      swift_once();
    }
    id v56 = (id)static NSBundle.module;
    static Locale.current.getter();
    uint64_t v36 = String.init(localized:table:bundle:locale:comment:)();
    (*(void (**)(char *, uint64_t))(v55 + 8))(v54, v52);
    (*(void (**)(char *, uint64_t))(v124 + 8))(v129, v51);
    goto LABEL_23;
  }
  uint64_t v57 = v125;
  if (swift_dynamicCast())
  {
    uint64_t v53 = a2;
    uint64_t v58 = v133;
    String.LocalizationValue.init(stringLiteral:)();
    uint64_t v59 = v100;
    (*(void (**)(char *, char *, uint64_t))(v100 + 16))(v101, v58, v52);
    if (one-time initialization token for module != -1) {
      swift_once();
    }
    id v60 = (id)static NSBundle.module;
    static Locale.current.getter();
    uint64_t v36 = String.init(localized:table:bundle:locale:comment:)();
    (*(void (**)(char *, uint64_t))(v59 + 8))(v58, v52);
    unint64_t v61 = *(void (**)(char *, uint64_t))(v123 + 8);
    uint64_t v62 = v126;
    goto LABEL_22;
  }
  uint64_t v63 = v121;
  uint64_t v64 = v122;
  if (swift_dynamicCast())
  {
    uint64_t v65 = &v145;
LABEL_28:
    (*(void (**)(char *, uint64_t))(*(v65 - 32) + 8))(v63, v64);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v39, a2);
    uint64_t v66 = v133;
    String.LocalizationValue.init(stringLiteral:)();
    uint64_t v67 = v100;
    (*(void (**)(char *, char *, uint64_t))(v100 + 16))(v101, v66, v37);
    if (one-time initialization token for module != -1) {
      swift_once();
    }
    id v68 = (id)static NSBundle.module;
    static Locale.current.getter();
    uint64_t v36 = String.init(localized:table:bundle:locale:comment:)();
    (*(void (**)(char *, uint64_t))(v67 + 8))(v66, v37);
    return v36;
  }
  uint64_t v63 = v119;
  uint64_t v64 = v120;
  if (swift_dynamicCast())
  {
    uint64_t v65 = &v143;
    goto LABEL_28;
  }
  uint64_t v57 = v116;
  if (swift_dynamicCast())
  {
    uint64_t v53 = a2;
    uint64_t v69 = v133;
    String.LocalizationValue.init(stringLiteral:)();
    uint64_t v70 = v100;
    (*(void (**)(char *, char *, uint64_t))(v100 + 16))(v101, v69, v52);
    if (one-time initialization token for module != -1) {
      swift_once();
    }
    id v71 = (id)static NSBundle.module;
    static Locale.current.getter();
    uint64_t v36 = String.init(localized:table:bundle:locale:comment:)();
    (*(void (**)(char *, uint64_t))(v70 + 8))(v69, v52);
    unint64_t v61 = *(void (**)(char *, uint64_t))(v112 + 8);
    uint64_t v72 = &v144;
LABEL_47:
    uint64_t v62 = (char *)*(v72 - 32);
LABEL_22:
    v61(v62, v57);
LABEL_23:
    (*(void (**)(char *, uint64_t))(v47 + 8))(v39, v53);
    return v36;
  }
  uint64_t v57 = v113;
  if (swift_dynamicCast())
  {
    uint64_t v53 = a2;
    uint64_t v73 = v133;
    String.LocalizationValue.init(stringLiteral:)();
    uint64_t v74 = v100;
    (*(void (**)(char *, char *, uint64_t))(v100 + 16))(v101, v73, v52);
    if (one-time initialization token for module != -1) {
      swift_once();
    }
    id v75 = (id)static NSBundle.module;
    static Locale.current.getter();
    uint64_t v36 = String.init(localized:table:bundle:locale:comment:)();
    (*(void (**)(char *, uint64_t))(v74 + 8))(v73, v52);
    unint64_t v61 = *(void (**)(char *, uint64_t))(v109 + 8);
    uint64_t v72 = &v142;
    goto LABEL_47;
  }
  uint64_t v57 = v110;
  if (swift_dynamicCast())
  {
    uint64_t v53 = a2;
    uint64_t v76 = v133;
    String.LocalizationValue.init(stringLiteral:)();
    uint64_t v77 = v100;
    (*(void (**)(char *, char *, uint64_t))(v100 + 16))(v101, v76, v52);
    if (one-time initialization token for module != -1) {
      swift_once();
    }
    id v78 = (id)static NSBundle.module;
    static Locale.current.getter();
    uint64_t v36 = String.init(localized:table:bundle:locale:comment:)();
    (*(void (**)(char *, uint64_t))(v77 + 8))(v76, v52);
    unint64_t v61 = *(void (**)(char *, uint64_t))(v106 + 8);
    uint64_t v72 = (uint64_t *)&v141;
    goto LABEL_47;
  }
  uint64_t v57 = v107;
  if (swift_dynamicCast())
  {
    uint64_t v53 = a2;
    uint64_t v79 = v133;
    String.LocalizationValue.init(stringLiteral:)();
    uint64_t v80 = v100;
    (*(void (**)(char *, char *, uint64_t))(v100 + 16))(v101, v79, v52);
    if (one-time initialization token for module != -1) {
      swift_once();
    }
    id v81 = (id)static NSBundle.module;
    static Locale.current.getter();
    uint64_t v36 = String.init(localized:table:bundle:locale:comment:)();
    (*(void (**)(char *, uint64_t))(v80 + 8))(v79, v52);
    unint64_t v61 = *(void (**)(char *, uint64_t))(v105 + 8);
    uint64_t v72 = (uint64_t *)&v139;
    goto LABEL_47;
  }
  uint64_t v132 = (uint64_t)v39;
  if (one-time initialization token for actions != -1) {
    swift_once();
  }
  uint64_t v82 = type metadata accessor for Logger();
  __swift_project_value_buffer(v82, (uint64_t)static Logger.actions);
  uint64_t v83 = v104;
  uint64_t v84 = (void (*)(char *, char *, uint64_t))v103;
  v103(v104, v138, a2);
  uint64_t v85 = Logger.logObject.getter();
  os_log_type_t v86 = static os_log_type_t.fault.getter();
  BOOL v87 = os_log_type_enabled(v85, v86);
  uint64_t v135 = a2;
  if (v87)
  {
    uint64_t v88 = swift_slowAlloc();
    os_log_t v134 = v85;
    uint64_t v89 = v88;
    uint64_t v138 = swift_slowAlloc();
    uint64_t v140 = v138;
    *(_DWORD *)uint64_t v89 = 136315138;
    v84(v102, v83, a2);
    uint64_t v90 = String.init<A>(describing:)();
    uint64_t v91 = a2;
    *(void *)(v89 + 4) = _s2os32getNullTerminatedUTF8PointerImpl_21storingStringOwnersInSVSS_SpyypGSgztF_0(v90, v92, &v140);
    swift_bridgeObjectRelease();
    uint64_t v93 = *(void (**)(char *, uint64_t))(v47 + 8);
    v93(v83, v91);
    os_log_t v94 = v134;
    _os_log_impl((void *)&_mh_execute_header, v134, v86, "DeleteOrRemoveDownload: unhandled item type=%s", (uint8_t *)v89, 0xCu);
    swift_arrayDestroy();
    uint64_t v52 = v37;
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v95 = a2;
    uint64_t v93 = *(void (**)(char *, uint64_t))(v47 + 8);
    v93(v83, v95);
  }
  uint64_t v96 = v132;
  uint64_t v97 = v133;
  String.LocalizationValue.init(stringLiteral:)();
  uint64_t v98 = v100;
  (*(void (**)(char *, char *, uint64_t))(v100 + 16))(v101, v97, v52);
  if (one-time initialization token for module != -1) {
    swift_once();
  }
  id v99 = (id)static NSBundle.module;
  static Locale.current.getter();
  uint64_t v36 = String.init(localized:table:bundle:locale:comment:)();
  (*(void (**)(char *, uint64_t))(v98 + 8))(v97, v52);
  v93((char *)v96, v135);
  return v36;
}

uint64_t Actions.DeleteOrRemoveDownload.Context.menuItemTitle.getter()
{
  uint64_t v0 = type metadata accessor for Locale();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = type metadata accessor for String.LocalizationValue();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  uint64_t v5 = &v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v3);
  uint64_t v7 = &v11[-v6];
  String.LocalizationValue.init(stringLiteral:)();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v2 + 16))(v5, v7, v1);
  if (one-time initialization token for module != -1) {
    swift_once();
  }
  id v8 = (id)static NSBundle.module;
  static Locale.current.getter();
  uint64_t v9 = String.init(localized:table:bundle:locale:comment:)();
  (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v7, v1);
  return v9;
}

uint64_t (*Actions.DeleteOrRemoveDownload.Context.menuItemImage.getter())()
{
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = 0x6873617274;
  *(void *)(v0 + 24) = 0xE500000000000000;
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = 0x6873617274;
  *(void *)(v1 + 24) = 0xE500000000000000;
  return partial apply for closure #1 in ActionMenuItemImage.init(systemName:);
}

uint64_t (*protocol witness for ActionMenuItemConfiguring.menuItemImage.getter in conformance Actions.DeleteOrRemoveDownload.Context())()
{
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = 0x6873617274;
  *(void *)(v0 + 24) = 0xE500000000000000;
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = 0x6873617274;
  *(void *)(v1 + 24) = 0xE500000000000000;
  return closure #1 in ActionMenuItemImage.init(systemName:)partial apply;
}

uint64_t specialized closure #1 in closure #1 in Action.init(_:id:waitLogInterval:supportedStatus:perform:finish:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<Actions.DeleteOrRemoveDownload.Choice, Error>);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&_sScPSgMD_0);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
  outlined init with copy of (String, Any)(a4, (uint64_t)v25, &demangling cache variable for type metadata for Action<Actions.DeleteOrRemoveDownload.Context, ActionType, Actions.DeleteOrRemoveDownload.Choice>);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v8);
  unint64_t v15 = (*(unsigned __int8 *)(v9 + 80) + 248) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = 0;
  *(void *)(v16 + 24) = 0;
  *(void *)(v16 + 32) = a2;
  *(void *)(v16 + 40) = a3;
  long long v17 = v25[11];
  *(_OWORD *)(v16 + 208) = v25[10];
  *(_OWORD *)(v16 + 224) = v17;
  *(void *)(v16 + 240) = v26;
  long long v18 = v25[7];
  *(_OWORD *)(v16 + 144) = v25[6];
  *(_OWORD *)(v16 + 160) = v18;
  long long v19 = v25[9];
  *(_OWORD *)(v16 + 176) = v25[8];
  *(_OWORD *)(v16 + 192) = v19;
  long long v20 = v25[3];
  *(_OWORD *)(v16 + 80) = v25[2];
  *(_OWORD *)(v16 + 96) = v20;
  long long v21 = v25[5];
  *(_OWORD *)(v16 + 112) = v25[4];
  *(_OWORD *)(v16 + 128) = v21;
  long long v22 = v25[1];
  *(_OWORD *)(v16 + 48) = v25[0];
  *(_OWORD *)(v16 + 64) = v22;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v16 + v15, (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  swift_retain();
  _sScTss5Error_pRs_rlE8priority9operationScTyxsAA_pGScPSg_xyYaKYAcntcfCyt_Tgm5((uint64_t)v13, (uint64_t)&async function pointer to partial apply for specialized closure #1 in closure #1 in closure #1 in Action.init(_:id:waitLogInterval:supportedStatus:perform:finish:), v16);
  return swift_release();
}

uint64_t specialized closure #1 in closure #1 in closure #1 in Action.init(_:id:waitLogInterval:supportedStatus:perform:finish:)(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t))((char *)a4 + *a4);
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v7 + 16) = v10;
  void *v10 = v7;
  v10[1] = partial apply for closure #1 in static MusicEngagementExtension.performRequest(with:completion:);
  return v12(a6, a7);
}

uint64_t specialized closure #1 in Action.init(_:id:waitLogInterval:supportedStatus:perform:finish:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return _swift_task_switch(specialized closure #1 in Action.init(_:id:waitLogInterval:supportedStatus:perform:finish:), 0, 0);
}

uint64_t specialized closure #1 in Action.init(_:id:waitLogInterval:supportedStatus:perform:finish:)()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = swift_task_alloc();
  *(void *)(v0 + 48) = v2;
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 32);
  *(void *)(v2 + 32) = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v3;
  *uint64_t v3 = v0;
  v3[1] = specialized closure #1 in Action.init(_:id:waitLogInterval:supportedStatus:perform:finish:);
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 72, 0, 0, 0xD00000000000003ALL, 0x8000000100468080, partial apply for specialized closure #1 in closure #1 in Action.init(_:id:waitLogInterval:supportedStatus:perform:finish:), v2, &type metadata for Actions.DeleteOrRemoveDownload.Choice);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  unsigned char *v3;
  uint64_t (*v4)(void);
  uint64_t v6;

  uint64_t v2 = *v1;
  *(void *)(v2 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(specialized closure #1 in Action.init(_:id:waitLogInterval:supportedStatus:perform:finish:), 0, 0);
  }
  else
  {
    uint64_t v3 = *(unsigned char **)(v2 + 16);
    swift_task_dealloc();
    *uint64_t v3 = *(unsigned char *)(v2 + 72);
    uint64_t v4 = *(uint64_t (**)(void))(v2 + 8);
    return v4();
  }
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

unint64_t specialized Actions.DeleteOrRemoveDownload.Choice.init(rawValue:)(Swift::String string)
{
  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of Actions.DeleteOrRemoveDownload.Choice.init(rawValue:), v2);
  swift_bridgeObjectRelease();
  if (v3 >= 3) {
    return 3;
  }
  else {
    return v3;
  }
}

uint64_t outlined init with copy of Actions.DeleteOrRemoveDownload.Context(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_100029E24()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t partial apply for specialized closure #1 in Action.init(_:id:waitLogInterval:supportedStatus:perform:finish:)(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v8;
  *uint64_t v8 = v3;
  v8[1] = closure #3 in static Actions.ReportConcern.action(context:);
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&async function pointer to specialized closure #1 in Action.init(_:id:waitLogInterval:supportedStatus:perform:finish:)
                                                                  + async function pointer to specialized closure #1 in Action.init(_:id:waitLogInterval:supportedStatus:perform:finish:));
  return v9(a1, a2, v7, v6);
}

uint64_t partial apply for closure #1 in Actions.DeleteOrRemoveDownload.Context.init<A, B>(item:alertPresenter:library:metricsReportingContext:)()
{
  return partial apply for closure #1 in Actions.DeleteOrRemoveDownload.Context.init<A, B>(item:alertPresenter:library:metricsReportingContext:)((uint64_t (*)(void, unint64_t))closure #1 in Actions.DeleteOrRemoveDownload.Context.init<A, B>(item:alertPresenter:library:metricsReportingContext:));
}

uint64_t partial apply for closure #2 in Actions.DeleteOrRemoveDownload.Context.init<A, B>(item:alertPresenter:library:metricsReportingContext:)()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 32);
  uint64_t v4 = v0
     + ((*(unsigned __int8 *)(*(void *)(v2 - 8) + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 8) + 80));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = closure #3 in static Actions.ReportConcern.action(context:);
  uint64_t v6 = (void *)swift_task_alloc();
  v5[2] = v6;
  *uint64_t v6 = v5;
  v6[1] = closure #3 in static Actions.ReportConcern.action(context:);
  return MusicLibrary.remove<A>(_:)(v4, v2, v3);
}

uint64_t partial apply for closure #3 in Actions.DeleteOrRemoveDownload.Context.init<A, B>(item:alertPresenter:library:metricsReportingContext:)()
{
  return partial apply for closure #1 in Actions.DeleteOrRemoveDownload.Context.init<A, B>(item:alertPresenter:library:metricsReportingContext:)((uint64_t (*)(void, unint64_t))closure #3 in Actions.DeleteOrRemoveDownload.Context.init<A, B>(item:alertPresenter:library:metricsReportingContext:));
}

uint64_t partial apply for closure #1 in Actions.DeleteOrRemoveDownload.Context.init<A, B>(item:alertPresenter:library:metricsReportingContext:)(uint64_t (*a1)(void, unint64_t))
{
  return a1(*(void *)(v1 + 56), v1+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v1 + 16) - 8) + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v1 + 16) - 8) + 80)));
}

uint64_t objectdestroy_3Tm()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t partial apply for closure #4 in Actions.DeleteOrRemoveDownload.Context.init<A, B>(item:alertPresenter:library:metricsReportingContext:)()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 32);
  uint64_t v4 = v0
     + ((*(unsigned __int8 *)(*(void *)(v2 - 8) + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 8) + 80));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = closure #3 in static Actions.ReportConcern.action(context:);
  uint64_t v6 = (void *)swift_task_alloc();
  v5[2] = v6;
  *uint64_t v6 = v5;
  v6[1] = closure #3 in static Actions.ReportConcern.action(context:);
  return MusicLibrary.removeDownload<A>(_:)(v4, v2, v3);
}

uint64_t sub_10002A2E8()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?)
                 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v5 = *(void *)(v1 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = v0 + v3;
  uint64_t v8 = type metadata accessor for Actions.MetricsReportingContext();
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v0 + v3, 1, v8))
  {
    uint64_t v16 = v4;
    if (*(void *)(v7 + 8) >= 0xBuLL) {
      swift_bridgeObjectRelease();
    }
    uint64_t v9 = v7 + *(int *)(v8 + 20);
    uint64_t v10 = type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v9, 1, v10))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v15 = v9 + *(int *)(v10 + 24);
      uint64_t v11 = type metadata accessor for URL();
      uint64_t v13 = *(void *)(v11 - 8);
      uint64_t v14 = v11;
      if (!(*(unsigned int (**)(uint64_t, uint64_t))(v13 + 48))(v15, 1)) {
        (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v15, v14);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v4 = v16;
  }
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + ((v3 + v4 + v6) & ~v6), v1);

  return swift_deallocObject();
}

uint64_t partial apply for closure #5 in Actions.DeleteOrRemoveDownload.Context.init<A, B>(item:alertPresenter:library:metricsReportingContext:)()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = v0[4];
  uint64_t v5 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?)
                 - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = (uint64_t)v0 + v6;
  uint64_t v8 = (uint64_t)v0
     + ((v6 + *(void *)(v5 + 64) + *(unsigned __int8 *)(*(void *)(v2 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 8) + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v9;
  *uint64_t v9 = v1;
  v9[1] = closure #3 in static Actions.ReportConcern.action(context:);
  return closure #5 in Actions.DeleteOrRemoveDownload.Context.init<A, B>(item:alertPresenter:library:metricsReportingContext:)(v7, v8, v2, v3, v4);
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_10002A770()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

unint64_t lazy protocol witness table accessor for type Actions.DeleteOrRemoveDownload.Choice and conformance Actions.DeleteOrRemoveDownload.Choice()
{
  unint64_t result = lazy protocol witness table cache variable for type Actions.DeleteOrRemoveDownload.Choice and conformance Actions.DeleteOrRemoveDownload.Choice;
  if (!lazy protocol witness table cache variable for type Actions.DeleteOrRemoveDownload.Choice and conformance Actions.DeleteOrRemoveDownload.Choice)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Actions.DeleteOrRemoveDownload.Choice and conformance Actions.DeleteOrRemoveDownload.Choice);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type [Actions.DeleteOrRemoveDownload.Choice] and conformance [A]()
{
  unint64_t result = lazy protocol witness table cache variable for type [Actions.DeleteOrRemoveDownload.Choice] and conformance [A];
  if (!lazy protocol witness table cache variable for type [Actions.DeleteOrRemoveDownload.Choice] and conformance [A])
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [Actions.DeleteOrRemoveDownload.Choice]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type [Actions.DeleteOrRemoveDownload.Choice] and conformance [A]);
  }
  return result;
}

ValueMetadata *type metadata accessor for Actions.DeleteOrRemoveDownload()
{
  return &type metadata for Actions.DeleteOrRemoveDownload;
}

uint64_t destroy for Actions.DeleteOrRemoveDownload.Context(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_0Tm(a1 + 80);

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Actions.DeleteOrRemoveDownload.Context(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v4 = *(void *)(a2 + 72);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = v4;
  uint64_t v5 = a1 + 80;
  uint64_t v6 = a2 + 80;
  long long v7 = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 104) = v7;
  uint64_t v8 = v7;
  uint64_t v9 = **(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v9(v5, v6, v8);
  uint64_t v10 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v10;
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Actions.DeleteOrRemoveDownload.Context(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_retain();
  swift_release();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_retain();
  swift_release();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_retain();
  swift_release();
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_retain();
  swift_release();
  uint64_t v8 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v8;
  swift_retain();
  swift_release();
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 80), (uint64_t *)(a2 + 80));
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    uint64_t v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        unint64_t result = (uint64_t *)swift_release();
        *uint64_t v3 = v12;
      }
      else
      {
        uint64_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *unint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

__n128 __swift_memcpy137_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  __n128 result = *(__n128 *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 121) = *(_OWORD *)(a2 + 121);
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 80) = result;
  return result;
}

uint64_t assignWithTake for Actions.DeleteOrRemoveDownload.Context(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_release();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_release();
  __swift_destroy_boxed_opaque_existential_0Tm(a1 + 80);
  long long v4 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v4;
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  return a1;
}

uint64_t getEnumTagSinglePayload for Actions.DeleteOrRemoveDownload.Context(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 137)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Actions.DeleteOrRemoveDownload.Context(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 136) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 137) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 137) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Actions.DeleteOrRemoveDownload.Context()
{
  return &type metadata for Actions.DeleteOrRemoveDownload.Context;
}

unsigned char *storeEnumTagSinglePayload for Actions.DeleteOrRemoveDownload.Choice(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10002AF58);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Actions.DeleteOrRemoveDownload.Choice()
{
  return &type metadata for Actions.DeleteOrRemoveDownload.Choice;
}

uint64_t closure #1 in Action.init(_:id:waitLogInterval:supportedStatus:perform:finish:)specialized partial apply(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v8;
  *uint64_t v8 = v3;
  v8[1] = partial apply for closure #1 in static MusicEngagementExtension.performRequest(with:completion:);
  int v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&async function pointer to specialized closure #1 in Action.init(_:id:waitLogInterval:supportedStatus:perform:finish:)
                                                                  + async function pointer to specialized closure #1 in Action.init(_:id:waitLogInterval:supportedStatus:perform:finish:));
  return v9(a1, a2, v7, v6);
}

uint64_t partial apply for specialized closure #1 in closure #1 in Action.init(_:id:waitLogInterval:supportedStatus:perform:finish:)(uint64_t a1)
{
  return specialized closure #1 in closure #1 in Action.init(_:id:waitLogInterval:supportedStatus:perform:finish:)(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_10002B064()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<Actions.DeleteOrRemoveDownload.Choice, Error>);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 248) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 128);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t partial apply for specialized closure #1 in closure #1 in closure #1 in Action.init(_:id:waitLogInterval:supportedStatus:perform:finish:)()
{
  uint64_t v2 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<Actions.DeleteOrRemoveDownload.Choice, Error>)
                 - 8);
  unint64_t v3 = *(int **)(v0 + 32);
  uint64_t v4 = v0 + 48;
  uint64_t v5 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 248) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  *uint64_t v6 = v1;
  v6[1] = closure #3 in static Actions.ReportConcern.action(context:);
  int v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)v3 + *v3);
  uint64_t v7 = (void *)swift_task_alloc();
  v6[2] = v7;
  *uint64_t v7 = v6;
  v7[1] = partial apply for closure #1 in static MusicEngagementExtension.performRequest(with:completion:);
  return v9(v4, v5);
}

uint64_t partial apply for closure #1 in closure #2 in static Actions.DeleteOrRemoveDownload.action(context:)@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X8>)
{
  return closure #1 in closure #2 in static Actions.DeleteOrRemoveDownload.action(context:)(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t outlined destroy of Actions.DeleteOrRemoveDownload.Context(uint64_t a1)
{
  return a1;
}

uint64_t sub_10002B34C()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<Actions.DeleteOrRemoveDownload.Choice, Error>);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 161) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 104);
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #1 in closure #2 in static Actions.DeleteOrRemoveDownload.action(context:)()
{
  uint64_t v2 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<Actions.DeleteOrRemoveDownload.Choice, Error>)
                 - 8);
  uint64_t v3 = v0 + 24;
  uint64_t v4 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 161) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  char v5 = *(unsigned char *)(v0 + 16);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  *uint64_t v6 = v1;
  v6[1] = partial apply for closure #1 in static MusicEngagementExtension.performRequest(with:completion:);
  return closure #1 in closure #1 in closure #2 in static Actions.DeleteOrRemoveDownload.action(context:)(v5, v3, v4);
}

uint64_t sub_10002B534()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<Actions.DeleteOrRemoveDownload.Choice, Error>);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 177) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 120);
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #1 in closure #1 in closure #2 in static Actions.DeleteOrRemoveDownload.action(context:)()
{
  uint64_t v2 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<Actions.DeleteOrRemoveDownload.Choice, Error>)
                 - 8);
  char v3 = *(unsigned char *)(v0 + 32);
  uint64_t v4 = v0 + 40;
  uint64_t v5 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 177) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v6 = swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  *(void *)uint64_t v6 = v1;
  *(void *)(v6 + 16) = v4;
  *(void *)(v6 + 24) = v5;
  *(void *)(v6 + 8) = closure #3 in static Actions.ReportConcern.action(context:);
  *(unsigned char *)(v6 + 49) = v3;
  return _swift_task_switch(closure #1 in closure #1 in closure #1 in closure #2 in static Actions.DeleteOrRemoveDownload.action(context:), 0, 0);
}

uint64_t static Actions.Download.action(context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *(void *)(a1 + 40);
  *(void *)a2 = *(void *)a1;
  *(_OWORD *)(a2 + 8) = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(a1 + 24);
  *(void *)(a2 + 40) = v2;
  *(unsigned char *)(a2 + 48) = 9;
  *(void *)(a2 + 56) = closure #1 in static Actions.AddToLibrary.action(context:);
  *(void *)(a2 + 64) = 0;
  *(void *)(a2 + 72) = 0x4014000000000000;
  *(void *)(a2 + 80) = &async function pointer to closure #2 in static Actions.Download.action(context:);
  *(void *)(a2 + 88) = 0;
  *(void *)(a2 + 96) = &async function pointer to closure #3 in static Actions.Download.action(context:);
  *(void *)(a2 + 104) = 0;
  swift_retain();
  swift_retain();

  return swift_retain();
}

uint64_t Actions.Download.Context.init<A>(item:library:alertPresenter:metricsReportingContext:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, long long *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, unint64_t (**a8)()@<X8>)
{
  uint64_t v74 = a8;
  uint64_t v75 = a7;
  uint64_t v79 = a6;
  uint64_t v73 = a4;
  id v71 = a3;
  uint64_t v69 = a2;
  uint64_t v9 = *(void *)(a5 - 8);
  uint64_t v82 = a1;
  uint64_t v83 = v9;
  uint64_t v77 = *(void *)(v9 + 64);
  uint64_t v10 = __chkstk_darwin(a1);
  uint64_t v72 = (char *)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v80 = (char *)&v63 - v13;
  __chkstk_darwin(v12);
  uint64_t v76 = (char *)&v63 - v14;
  uint64_t v15 = type metadata accessor for MusicLibrary.DownloadAction();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  long long v18 = (char *)&v63 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicLibrary.SupportedStatus<MusicLibrary.DownloadAction>);
  uint64_t v66 = *(void *)(v81 - 8);
  uint64_t v19 = __chkstk_darwin(v81);
  id v78 = (char *)&v63 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v63 - v22;
  uint64_t v63 = (char *)&v63 - v22;
  uint64_t v25 = v24;
  __chkstk_darwin(v21);
  uint64_t v27 = (char *)&v63 - v26;
  static MusicLibraryAction<>.download.getter();
  uint64_t v64 = v27;
  uint64_t v28 = v82;
  MusicLibrary.supportedStatus<A, B>(for:action:)();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  uint64_t v29 = v83;
  uint64_t v67 = *(void (**)(char *, uint64_t, uint64_t))(v83 + 16);
  v67(v76, v28, a5);
  uint64_t v30 = v66;
  (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v23, v27, v81);
  uint64_t v31 = *(unsigned __int8 *)(v29 + 80);
  uint64_t v32 = (v31 + 40) & ~v31;
  uint64_t v33 = *(unsigned __int8 *)(v30 + 80);
  uint64_t v34 = (v77 + v32 + v33) & ~v33;
  uint64_t v65 = v31 | v33 | 7;
  id v35 = (void *)swift_allocObject();
  uint64_t v36 = a5;
  v35[2] = a5;
  uint64_t v37 = v79;
  uint64_t v39 = v75;
  os_log_t v38 = v76;
  v35[3] = v79;
  v35[4] = v39;
  os_log_t v40 = (char *)v35 + v32;
  uint64_t v41 = v35;
  uint64_t v70 = (unint64_t (*)())v35;
  uint64_t v42 = *(void (**)(char *, uint64_t, uint64_t))(v83 + 32);
  v83 += 32;
  id v68 = v42;
  uint64_t v43 = v36;
  ((void (*)(char *, char *))v42)(v40, v38);
  id v44 = (char *)v41 + v34;
  uint64_t v45 = *(void (**)(char *, char *, uint64_t))(v30 + 32);
  uint64_t v46 = v81;
  v45(v44, v63, v81);
  v45(v78, v64, v46);
  v67(v80, v82, v43);
  uint64_t v47 = (v33 + 80) & ~v33;
  unint64_t v48 = (v25 + v47 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v49 = (v31 + v48 + 8) & ~v31;
  id v50 = (unint64_t (*)())swift_allocObject();
  *((void *)v50 + 2) = v43;
  *((void *)v50 + 3) = v37;
  uint64_t v51 = v75;
  *((void *)v50 + 4) = v75;
  outlined init with take of AlertPresenting(v71, (uint64_t)v50 + 40);
  v45((char *)v50 + v47, v78, v81);
  *(void *)((char *)v50 + v48) = v69;
  uint64_t v52 = v68;
  v68((char *)v50 + v49, (uint64_t)v80, v43);
  uint64_t v53 = v72;
  v52(v72, v82, v43);
  uint64_t v54 = (uint64_t (*)(char *, char *, uint64_t))v52;
  uint64_t v55 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?)
                  - 8);
  unint64_t v56 = (*(unsigned __int8 *)(v55 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80);
  unint64_t v57 = (*(void *)(v55 + 64) + v31 + v56) & ~v31;
  uint64_t v58 = (unint64_t (*)())swift_allocObject();
  uint64_t v59 = v79;
  *((void *)v58 + 2) = v43;
  *((void *)v58 + 3) = v59;
  *((void *)v58 + 4) = v51;
  outlined init with take of Actions.MetricsReportingContext?(v73, (uint64_t)v58 + v56);
  uint64_t result = v54((char *)v58 + v57, v53, v43);
  unint64_t v61 = v74;
  uint64_t v62 = v70;
  *uint64_t v74 = partial apply for closure #1 in Actions.Download.Context.init<A>(item:library:alertPresenter:metricsReportingContext:);
  v61[1] = v62;
  v61[2] = (unint64_t (*)())&async function pointer to partial apply for closure #2 in Actions.Download.Context.init<A>(item:library:alertPresenter:metricsReportingContext:);
  v61[3] = v50;
  v61[4] = (unint64_t (*)())&async function pointer to partial apply for closure #3 in Actions.Download.Context.init<A>(item:library:alertPresenter:metricsReportingContext:);
  v61[5] = v58;
  return result;
}

unint64_t closure #1 in Actions.Download.Context.init<A>(item:library:alertPresenter:metricsReportingContext:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v31 = a2;
  uint64_t v32 = a1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicItemCollection<Playlist.Entry>?);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicItemCollection<Playlist.Entry>);
  uint64_t v30 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Playlist?);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(a3 - 8);
  __chkstk_darwin(v11);
  uint64_t v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for Playlist();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v29 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v32, a3);
  char v21 = swift_dynamicCast();
  uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56);
  if ((v21 & 1) == 0)
  {
    v22(v13, 1, 1, v17);
    uint64_t v24 = &demangling cache variable for type metadata for Playlist?;
    uint64_t v25 = (uint64_t)v13;
    goto LABEL_5;
  }
  v22(v13, 0, 1, v17);
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v20, v13, v17);
  Playlist.entries.getter();
  uint64_t v23 = v30;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v6, 1, v7) == 1)
  {
    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
    uint64_t v24 = &demangling cache variable for type metadata for MusicItemCollection<Playlist.Entry>?;
    uint64_t v25 = (uint64_t)v6;
LABEL_5:
    outlined destroy of TaskPriority?(v25, v24);
    return MusicLibrary.SupportedStatus<>.actionSupportedStatus.getter();
  }
  (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v9, v6, v7);
  lazy protocol witness table accessor for type MusicItemCollection<Playlist.Entry> and conformance MusicItemCollection<A>();
  dispatch thunk of Collection.startIndex.getter();
  dispatch thunk of Collection.endIndex.getter();
  uint64_t v28 = v33;
  uint64_t v27 = v34;
  (*(void (**)(char *, uint64_t))(v23 + 8))(v9, v7);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  if (v27 == v28) {
    return 0xD000000000000011;
  }
  return MusicLibrary.SupportedStatus<>.actionSupportedStatus.getter();
}

uint64_t sub_10002C178()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicLibrary.SupportedStatus<MusicLibrary.DownloadAction>);
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);

  return swift_deallocObject();
}

unint64_t partial apply for closure #1 in Actions.Download.Context.init<A>(item:library:alertPresenter:metricsReportingContext:)()
{
  uint64_t v1 = *(void *)(v0 + 16);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicLibrary.SupportedStatus<MusicLibrary.DownloadAction>)
                 - 8);
  uint64_t v5 = v0 + ((v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return closure #1 in Actions.Download.Context.init<A>(item:library:alertPresenter:metricsReportingContext:)(v0 + v2, v5, v1);
}

uint64_t closure #2 in Actions.Download.Context.init<A>(item:library:alertPresenter:metricsReportingContext:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[24] = a6;
  v7[25] = a7;
  v7[22] = a4;
  v7[23] = a5;
  v7[20] = a2;
  v7[21] = a3;
  v7[19] = a1;
  type metadata accessor for Locale();
  v7[26] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for String.LocalizationValue();
  v7[27] = v9;
  v7[28] = *(void *)(v9 - 8);
  v7[29] = swift_task_alloc();
  v7[30] = swift_task_alloc();
  uint64_t v10 = *(void *)(a5 - 8);
  v7[31] = v10;
  v7[32] = *(void *)(v10 + 64);
  v7[33] = swift_task_alloc();
  v7[34] = swift_task_alloc();
  uint64_t v11 = type metadata accessor for MusicLibrary.DownloadAction.UnsupportedReason();
  v7[35] = v11;
  v7[36] = *(void *)(v11 - 8);
  v7[37] = swift_task_alloc();
  v7[38] = swift_task_alloc();
  v7[39] = swift_task_alloc();
  v7[40] = swift_task_alloc();
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicLibrary.SupportedStatus<MusicLibrary.DownloadAction>);
  v7[41] = v12;
  v7[42] = *(void *)(v12 - 8);
  v7[43] = swift_task_alloc();
  v7[44] = swift_task_alloc();
  v7[45] = swift_task_alloc();
  return _swift_task_switch(closure #2 in Actions.Download.Context.init<A>(item:library:alertPresenter:metricsReportingContext:), 0, 0);
}

uint64_t closure #2 in Actions.Download.Context.init<A>(item:library:alertPresenter:metricsReportingContext:)()
{
  uint64_t v82 = v0;
  uint64_t v1 = *(void *)(v0 + 360);
  uint64_t v2 = *(void *)(v0 + 328);
  uint64_t v3 = *(void *)(v0 + 336);
  uint64_t v4 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v4(v1, *(void *)(v0 + 160), v2);
  int v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 88))(v1, v2);
  if (v5 == enum case for MusicLibrary.SupportedStatus.unsupported<A>(_:))
  {
    uint64_t v6 = *(void *)(v0 + 360);
    uint64_t v8 = *(void *)(v0 + 312);
    uint64_t v7 = *(void *)(v0 + 320);
    uint64_t v9 = *(void *)(v0 + 280);
    uint64_t v10 = *(void *)(v0 + 288);
    (*(void (**)(uint64_t, void))(*(void *)(v0 + 336) + 96))(v6, *(void *)(v0 + 328));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v7, v6, v9);
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16);
    v11(v8, v7, v9);
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v10 + 88))(v8, v9) == enum case for MusicLibrary.DownloadAction.UnsupportedReason.cellularDataDisallowed(_:))
    {
      uint64_t v12 = *(void *)(v0 + 152);
      uint64_t v13 = swift_task_alloc();
      *(void *)(v0 + 368) = v13;
      *(void *)(v13 + 16) = v12;
      uint64_t v14 = (void *)swift_task_alloc();
      *(void *)(v0 + 376) = v14;
      *uint64_t v14 = v0;
      v14[1] = closure #2 in Actions.Download.Context.init<A>(item:library:alertPresenter:metricsReportingContext:);
      return withCheckedContinuation<A>(isolation:function:_:)(v0 + 432, 0, 0, 0xD00000000000001DLL, 0x80000001004681D0, partial apply for closure #1 in cellularDataDisallowedAlert #1 <A>() in closure #2 in Actions.Download.Context.init<A>(item:library:alertPresenter:metricsReportingContext:), v13, &type metadata for Bool);
    }
    if (one-time initialization token for actions != -1) {
      swift_once();
    }
    uint64_t v30 = *(void *)(v0 + 320);
    uint64_t v31 = *(void *)(v0 + 304);
    uint64_t v32 = *(void *)(v0 + 280);
    uint64_t v33 = type metadata accessor for Logger();
    __swift_project_value_buffer(v33, (uint64_t)static Logger.actions);
    v11(v31, v30, v32);
    uint64_t v34 = Logger.logObject.getter();
    os_log_type_t v35 = static os_log_type_t.error.getter();
    BOOL v36 = os_log_type_enabled(v34, v35);
    uint64_t v37 = *(void *)(v0 + 320);
    uint64_t v38 = *(void *)(v0 + 304);
    if (v36)
    {
      uint64_t v39 = *(void *)(v0 + 288);
      uint64_t v40 = *(void *)(v0 + 296);
      uint64_t v41 = *(void *)(v0 + 280);
      uint64_t loga = *(void *)(v0 + 320);
      uint64_t v42 = swift_slowAlloc();
      uint64_t v81 = swift_slowAlloc();
      *(_DWORD *)uint64_t v42 = 136315138;
      v11(v40, v38, v41);
      uint64_t v43 = String.init<A>(describing:)();
      *(void *)(v42 + 4) = _s2os32getNullTerminatedUTF8PointerImpl_21storingStringOwnersInSVSS_SpyypGSgztF_0(v43, v44, &v81);
      swift_bridgeObjectRelease();
      uint64_t v45 = *(void (**)(uint64_t, uint64_t))(v39 + 8);
      v45(v38, v41);
      _os_log_impl((void *)&_mh_execute_header, v34, v35, "Couldn't download for reason: %s", (uint8_t *)v42, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v45(loga, v41);
      v45(*(void *)(v0 + 312), *(void *)(v0 + 280));
    }
    else
    {
      uint64_t v56 = *(void *)(v0 + 280);
      uint64_t v55 = *(void *)(v0 + 288);

      unint64_t v57 = *(void (**)(uint64_t, uint64_t))(v55 + 8);
      v57(v38, v56);
      v57(v37, v56);
      v57(*(void *)(v0 + 312), *(void *)(v0 + 280));
    }
    goto LABEL_25;
  }
  if (v5 != enum case for MusicLibrary.SupportedStatus.supported<A>(_:))
  {
    if (one-time initialization token for actions != -1) {
      swift_once();
    }
    uint64_t v15 = *(void *)(v0 + 352);
    uint64_t v16 = *(void *)(v0 + 328);
    uint64_t v17 = *(void *)(v0 + 160);
    uint64_t v18 = type metadata accessor for Logger();
    __swift_project_value_buffer(v18, (uint64_t)static Logger.actions);
    v4(v15, v17, v16);
    uint64_t v19 = Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.fault.getter();
    BOOL v21 = os_log_type_enabled(v19, v20);
    uint64_t v22 = *(void *)(v0 + 352);
    if (v21)
    {
      log = v19;
      uint64_t v23 = *(void *)(v0 + 336);
      uint64_t v24 = *(void *)(v0 + 344);
      uint64_t v25 = *(void *)(v0 + 328);
      uint64_t v26 = swift_slowAlloc();
      uint64_t v81 = swift_slowAlloc();
      *(_DWORD *)uint64_t v26 = 136315138;
      v4(v24, v22, v25);
      uint64_t v27 = String.init<A>(describing:)();
      *(void *)(v26 + 4) = _s2os32getNullTerminatedUTF8PointerImpl_21storingStringOwnersInSVSS_SpyypGSgztF_0(v27, v28, &v81);
      swift_bridgeObjectRelease();
      uint64_t v29 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
      v29(v22, v25);
      uint64_t v19 = log;
      _os_log_impl((void *)&_mh_execute_header, log, v20, "Unknown status=%s", (uint8_t *)v26, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      uint64_t v29 = *(void (**)(uint64_t, uint64_t))(*(void *)(v0 + 336) + 8);
      v29(*(void *)(v0 + 352), *(void *)(v0 + 328));
    }

    v29(*(void *)(v0 + 360), *(void *)(v0 + 328));
  }
  uint64_t v46 = *(void (**)(uint64_t, uint64_t, os_log_t))(*(void *)(v0 + 248) + 16);
  v46(*(void *)(v0 + 272), *(void *)(v0 + 176), *(os_log_t *)(v0 + 184));
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AudioVariantProviding);
  if ((swift_dynamicCast() & 1) == 0)
  {
    *(void *)(v0 + 144) = 0;
    *(_OWORD *)(v0 + 112) = 0u;
    *(_OWORD *)(v0 + 128) = 0u;
    outlined destroy of TaskPriority?(v0 + 112, &demangling cache variable for type metadata for AudioVariantProviding?);
    goto LABEL_23;
  }
  outlined init with take of AlertPresenting((long long *)(v0 + 112), v0 + 72);
  uint64_t v48 = *(void *)(v0 + 96);
  uint64_t v47 = *(void *)(v0 + 104);
  __swift_project_boxed_opaque_existential_0Tm((void *)(v0 + 72), v48);
  if (!AudioVariantProviding.supportsDolbyPlayback.getter(v48, v47)) {
    goto LABEL_21;
  }
  id v49 = [self standardUserDefaults];
  unsigned __int8 v50 = [v49 prefersSpatialDownloads];

  if ((v50 & 1) != 0
    || (uint64_t v51 = self,
        *(void *)(v0 + 384) = v51,
        id v52 = [v51 standardUserDefaults],
        NSString v53 = String._bridgeToObjectiveC()(),
        unsigned __int8 v54 = [v52 BOOLForKey:v53],
        v53,
        v52,
        (v54 & 1) != 0))
  {
LABEL_21:
    __swift_destroy_boxed_opaque_existential_0Tm(v0 + 72);
LABEL_23:
    kickOffDownload #1 <A>() in closure #2 in Actions.Download.Context.init<A>(item:library:alertPresenter:metricsReportingContext:)(*(void *)(v0 + 168), *(void *)(v0 + 176), *(void *)(v0 + 184), *(void *)(v0 + 192), *(void *)(v0 + 200));
LABEL_25:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v58 = *(uint64_t (**)(void))(v0 + 8);
    return v58();
  }
  uint64_t v59 = *(void *)(v0 + 232);
  uint64_t v60 = *(void *)(v0 + 240);
  uint64_t v61 = *(void *)(v0 + 216);
  uint64_t v62 = *(void *)(v0 + 224);
  String.LocalizationValue.init(stringLiteral:)();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v62 + 16))(v59, v60, v61);
  if (one-time initialization token for module != -1) {
    swift_once();
  }
  uint64_t v63 = *(void *)(v0 + 248);
  uint64_t v75 = *(void *)(v0 + 264);
  uint64_t v64 = *(void *)(v0 + 240);
  uint64_t v66 = *(void *)(v0 + 216);
  uint64_t v65 = *(void *)(v0 + 224);
  uint64_t v74 = *(void *)(v0 + 176);
  uint64_t v76 = *(void *)(v0 + 168);
  uint64_t v77 = *(void *)(v0 + 200);
  id v67 = (id)static NSBundle.module;
  *(_OWORD *)logb = *(_OWORD *)(v0 + 184);
  static Locale.current.getter();
  *(void *)(v0 + 392) = String.init(localized:table:bundle:locale:comment:)();
  *(void *)(v0 + 400) = v68;
  (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v64, v66);
  v46(v75, v74, logb[0]);
  unint64_t v69 = (*(unsigned __int8 *)(v63 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80);
  uint64_t v70 = swift_allocObject();
  *(void *)(v0 + 408) = v70;
  *(_OWORD *)(v70 + 16) = *(_OWORD *)logb;
  *(void *)(v70 + 32) = v77;
  *(void *)(v70 + 40) = v76;
  (*(void (**)(unint64_t, uint64_t, os_log_t))(v63 + 32))(v70 + v69, v75, logb[0]);
  type metadata accessor for MainActor();
  swift_retain();
  *(void *)(v0 + 416) = static MainActor.shared.getter();
  uint64_t v72 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(closure #2 in Actions.Download.Context.init<A>(item:library:alertPresenter:metricsReportingContext:), v72, v71);
}

{
  uint64_t v1;

  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(closure #2 in Actions.Download.Context.init<A>(item:library:alertPresenter:metricsReportingContext:), 0, 0);
}

{
  uint64_t v0;
  int v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, void);
  uint64_t v10;
  uint64_t v11;
  id v12;
  unsigned __int8 v13;
  void *v14;
  id v15;
  NSString v16;
  unsigned __int8 v17;
  uint64_t (*v18)(void);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  long long v38;
  uint64_t v39;

  uint64_t v1 = *(unsigned __int8 *)(v0 + 432);
  if (one-time initialization token for actions != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  __swift_project_value_buffer(v2, (uint64_t)static Logger.actions);
  uint64_t v3 = Logger.logObject.getter();
  uint64_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    int v5 = swift_slowAlloc();
    *(_DWORD *)int v5 = 67109120;
    *(_DWORD *)(v5 + 4) = v1;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Cellular data enablement: %{BOOL}d", (uint8_t *)v5, 8u);
    swift_slowDealloc();
  }
  uint64_t v6 = *(void *)(v0 + 320);
  uint64_t v7 = *(void *)(v0 + 280);
  uint64_t v8 = *(void *)(v0 + 288);

  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  if (!v1) {
    goto LABEL_13;
  }
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, void))(*(void *)(v0 + 248) + 16);
  v9(*(void *)(v0 + 272), *(void *)(v0 + 176), *(void *)(v0 + 184));
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AudioVariantProviding);
  if ((swift_dynamicCast() & 1) == 0)
  {
    *(void *)(v0 + 144) = 0;
    *(_OWORD *)(v0 + 112) = 0u;
    *(_OWORD *)(v0 + 128) = 0u;
    outlined destroy of TaskPriority?(v0 + 112, &demangling cache variable for type metadata for AudioVariantProviding?);
    goto LABEL_12;
  }
  outlined init with take of AlertPresenting((long long *)(v0 + 112), v0 + 72);
  uint64_t v10 = *(void *)(v0 + 96);
  uint64_t v11 = *(void *)(v0 + 104);
  __swift_project_boxed_opaque_existential_0Tm((void *)(v0 + 72), v10);
  if (!AudioVariantProviding.supportsDolbyPlayback.getter(v10, v11)) {
    goto LABEL_10;
  }
  uint64_t v12 = [self standardUserDefaults];
  uint64_t v13 = [v12 prefersSpatialDownloads];

  if ((v13 & 1) != 0
    || (uint64_t v14 = self,
        *(void *)(v0 + 384) = v14,
        uint64_t v15 = [v14 standardUserDefaults],
        uint64_t v16 = String._bridgeToObjectiveC()(),
        uint64_t v17 = [v15 BOOLForKey:v16],
        v16,
        v15,
        (v17 & 1) != 0))
  {
LABEL_10:
    __swift_destroy_boxed_opaque_existential_0Tm(v0 + 72);
LABEL_12:
    kickOffDownload #1 <A>() in closure #2 in Actions.Download.Context.init<A>(item:library:alertPresenter:metricsReportingContext:)(*(void *)(v0 + 168), *(void *)(v0 + 176), *(void *)(v0 + 184), *(void *)(v0 + 192), *(void *)(v0 + 200));
LABEL_13:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v18 = *(uint64_t (**)(void))(v0 + 8);
    return v18();
  }
  os_log_type_t v20 = *(void *)(v0 + 232);
  BOOL v21 = *(void *)(v0 + 240);
  uint64_t v22 = *(void *)(v0 + 216);
  uint64_t v23 = *(void *)(v0 + 224);
  String.LocalizationValue.init(stringLiteral:)();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16))(v20, v21, v22);
  if (one-time initialization token for module != -1) {
    swift_once();
  }
  uint64_t v24 = *(void *)(v0 + 248);
  os_log_type_t v35 = *(void *)(v0 + 264);
  uint64_t v25 = *(void *)(v0 + 240);
  uint64_t v27 = *(void *)(v0 + 216);
  uint64_t v26 = *(void *)(v0 + 224);
  uint64_t v34 = *(void *)(v0 + 176);
  BOOL v36 = *(void *)(v0 + 168);
  uint64_t v37 = *(void *)(v0 + 200);
  unint64_t v28 = (id)static NSBundle.module;
  uint64_t v38 = *(_OWORD *)(v0 + 184);
  static Locale.current.getter();
  *(void *)(v0 + 392) = String.init(localized:table:bundle:locale:comment:)();
  *(void *)(v0 + 400) = v29;
  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v27);
  v9(v35, v34, v38);
  uint64_t v30 = (*(unsigned __int8 *)(v24 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  uint64_t v31 = swift_allocObject();
  *(void *)(v0 + 408) = v31;
  *(_OWORD *)(v31 + 16) = v38;
  *(void *)(v31 + 32) = v37;
  *(void *)(v31 + 40) = v36;
  (*(void (**)(unint64_t, uint64_t, void))(v24 + 32))(v31 + v30, v35, v38);
  type metadata accessor for MainActor();
  swift_retain();
  *(void *)(v0 + 416) = static MainActor.shared.getter();
  uint64_t v33 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(closure #2 in Actions.Download.Context.init<A>(item:library:alertPresenter:metricsReportingContext:), v33, v32);
}

{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  uint64_t v1 = v0[51];
  uint64_t v3 = v0[49];
  uint64_t v2 = v0[50];
  swift_release();
  specialized static Alert.dolbyAtmosDownloadsAlert(message:completion:)(v3, v2, (uint64_t)&async function pointer to partial apply for closure #1 in closure #2 in Actions.Download.Context.init<A>(item:library:alertPresenter:metricsReportingContext:), v1, v0 + 2);
  swift_bridgeObjectRelease();
  swift_release();
  return _swift_task_switch(closure #2 in Actions.Download.Context.init<A>(item:library:alertPresenter:metricsReportingContext:), 0, 0);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;

  uint64_t v1 = *(void **)(v0 + 152);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_0Tm(v1, v2);
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 + 8) + **(int **)(v3 + 8));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 424) = v4;
  *uint64_t v4 = v0;
  v4[1] = closure #2 in Actions.Download.Context.init<A>(item:library:alertPresenter:metricsReportingContext:);
  return v6(v0 + 16, v2, v3);
}

{
  uint64_t v1;

  swift_task_dealloc();
  return _swift_task_switch(closure #2 in Actions.Download.Context.init<A>(item:library:alertPresenter:metricsReportingContext:), 0, 0);
}

{
  uint64_t v0;
  id v1;
  Class isa;
  NSString v3;
  uint64_t (*v4)(void);
  uint64_t v6;

  uint64_t v1 = [*(id *)(v0 + 384) standardUserDefaults];
  Class isa = Bool._bridgeToObjectiveC()().super.super.isa;
  uint64_t v3 = String._bridgeToObjectiveC()();
  [v1 setValue:isa forKey:v3];

  outlined release of Alert(v0 + 16);
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 72);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_10002DF98()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicLibrary.SupportedStatus<MusicLibrary.DownloadAction>);
  uint64_t v3 = *(void *)(v2 - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v1 - 8);
  unint64_t v6 = (((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 40);
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v2);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v6, v1);

  return swift_deallocObject();
}

uint64_t partial apply for closure #2 in Actions.Download.Context.init<A>(item:library:alertPresenter:metricsReportingContext:)()
{
  uint64_t v3 = v0[2];
  uint64_t v2 = v0[3];
  uint64_t v4 = v0[4];
  uint64_t v5 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicLibrary.SupportedStatus<MusicLibrary.DownloadAction>)
                 - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = (uint64_t)(v0 + 5);
  uint64_t v9 = (uint64_t)v0 + v6;
  uint64_t v10 = *(void *)((char *)v0 + v7);
  uint64_t v11 = (uint64_t)v0
      + ((v7 + *(unsigned __int8 *)(*(void *)(v3 - 8) + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v3 - 8) + 80));
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v12;
  *uint64_t v12 = v1;
  v12[1] = partial apply for closure #1 in static MusicEngagementExtension.performRequest(with:completion:);
  return closure #2 in Actions.Download.Context.init<A>(item:library:alertPresenter:metricsReportingContext:)(v8, v9, v10, v11, v3, v2, v4);
}

uint64_t closure #1 in cellularDataDisallowedAlert #1 <A>() in closure #2 in Actions.Download.Context.init<A>(item:library:alertPresenter:metricsReportingContext:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<Bool, Never>);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4);
  unint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&_sScPSgMD_0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  outlined init with copy of AlertPresenting(a2, (uint64_t)v18);
  type metadata accessor for MainActor();
  uint64_t v12 = static MainActor.shared.getter();
  unint64_t v13 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v14 = (v6 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v12;
  *(void *)(v15 + 24) = &protocol witness table for MainActor;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v15 + v13, v7, v4);
  outlined init with take of AlertPresenting(v18, v15 + v14);
  _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5_0((uint64_t)v10, (uint64_t)&async function pointer to partial apply for closure #1 in closure #1 in cellularDataDisallowedAlert #1 <A>() in closure #2 in Actions.Download.Context.init<A>(item:library:alertPresenter:metricsReportingContext:), v15);
  return swift_release();
}

uint64_t closure #1 in closure #1 in cellularDataDisallowedAlert #1 <A>() in closure #2 in Actions.Download.Context.init<A>(item:library:alertPresenter:metricsReportingContext:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[9] = a4;
  v5[10] = a5;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<Bool, Never>);
  v5[11] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v5[12] = v7;
  v5[13] = *(void *)(v7 + 64);
  v5[14] = swift_task_alloc();
  type metadata accessor for MainActor();
  v5[15] = static MainActor.shared.getter();
  uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[16] = v9;
  v5[17] = v8;
  return _swift_task_switch(closure #1 in closure #1 in cellularDataDisallowedAlert #1 <A>() in closure #2 in Actions.Download.Context.init<A>(item:library:alertPresenter:metricsReportingContext:), v9, v8);
}

uint64_t closure #1 in closure #1 in cellularDataDisallowedAlert #1 <A>() in closure #2 in Actions.Download.Context.init<A>(item:library:alertPresenter:metricsReportingContext:)()
{
  if (one-time initialization token for actions != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  __swift_project_value_buffer(v1, (uint64_t)static Logger.actions);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Will present cellular data enablement alert", v4, 2u);
    swift_slowDealloc();
  }
  uint64_t v5 = v0[14];
  uint64_t v6 = v0[11];
  uint64_t v7 = v0[12];
  uint64_t v9 = v0[9];
  uint64_t v8 = (void *)v0[10];

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v5, v9, v6);
  unint64_t v10 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v11 = swift_allocObject();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(v11 + v10, v5, v6);
  specialized static Alert.cellularDataDisallowedAlert(_:)((uint64_t)partial apply for closure #1 in closure #1 in closure #1 in cellularDataDisallowedAlert #1 <A>() in closure #2 in Actions.Download.Context.init<A>(item:library:alertPresenter:metricsReportingContext:), v11, v0 + 2);
  swift_release();
  uint64_t v12 = v8[3];
  uint64_t v13 = v8[4];
  __swift_project_boxed_opaque_existential_0Tm(v8, v12);
  uint64_t v16 = (uint64_t (*)(uint64_t *, uint64_t, uint64_t))(*(void *)(v13 + 8) + **(int **)(v13 + 8));
  unint64_t v14 = (void *)swift_task_alloc();
  v0[18] = (uint64_t)v14;
  *unint64_t v14 = v0;
  v14[1] = closure #1 in closure #1 in cellularDataDisallowedAlert #1 <A>() in closure #2 in Actions.Download.Context.init<A>(item:library:alertPresenter:metricsReportingContext:);
  return v16(v0 + 2, v12, v13);
}

{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 136);
  os_log_type_t v3 = *(void *)(v1 + 128);
  return _swift_task_switch(closure #1 in closure #1 in cellularDataDisallowedAlert #1 <A>() in closure #2 in Actions.Download.Context.init<A>(item:library:alertPresenter:metricsReportingContext:), v3, v2);
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  outlined release of Alert(v0 + 16);
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t kickOffDownload #1 <A>() in closure #2 in Actions.Download.Context.init<A>(item:library:alertPresenter:metricsReportingContext:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = *(void *)(a3 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(a1);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&_sScPSgMD_0);
  __chkstk_darwin(v12 - 8);
  unint64_t v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  static TaskPriority.userInitiated.getter();
  uint64_t v15 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 0, 1, v15);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a2, a3);
  unint64_t v16 = (*(unsigned __int8 *)(v10 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v17 = (char *)swift_allocObject();
  *((void *)v17 + 2) = 0;
  *((void *)v17 + 3) = 0;
  *((void *)v17 + 4) = a3;
  *((void *)v17 + 5) = a4;
  *((void *)v17 + 6) = a5;
  *((void *)v17 + 7) = a1;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v17[v16], (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a3);
  swift_retain();
  _sScTss5NeverORs_rlE8detached8priority9operationScTyxABGScPSg_xyYaYAcntFZyt_Tgm5((uint64_t)v14, (uint64_t)&async function pointer to partial apply for closure #1 in kickOffDownload #1 <A>() in closure #2 in Actions.Download.Context.init<A>(item:library:alertPresenter:metricsReportingContext:), (uint64_t)v17);
  swift_release();
  return outlined destroy of TaskPriority?((uint64_t)v14, &_sScPSgMD_0);
}

uint64_t closure #1 in kickOffDownload #1 <A>() in closure #2 in Actions.Download.Context.init<A>(item:library:alertPresenter:metricsReportingContext:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[3] = a5;
  v7[4] = a6;
  v7[5] = *(void *)(a6 - 8);
  v7[6] = swift_task_alloc();
  v7[7] = swift_task_alloc();
  uint64_t v11 = (void *)swift_task_alloc();
  v7[8] = v11;
  *uint64_t v11 = v7;
  v11[1] = closure #1 in kickOffDownload #1 <A>() in closure #2 in Actions.Download.Context.init<A>(item:library:alertPresenter:metricsReportingContext:);
  return MusicLibrary.download<A>(_:)(a5, a6, a7);
}

uint64_t closure #1 in kickOffDownload #1 <A>() in closure #2 in Actions.Download.Context.init<A>(item:library:alertPresenter:metricsReportingContext:)()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(closure #1 in kickOffDownload #1 <A>() in closure #2 in Actions.Download.Context.init<A>(item:library:alertPresenter:metricsReportingContext:), 0, 0);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    os_log_type_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  NSObject *v7;
  os_log_type_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(void);
  NSObject *log;
  uint64_t v26;
  void *v27;
  uint64_t v28;

  uint64_t v27 = v0;
  if (one-time initialization token for actions != -1) {
    swift_once();
  }
  uint64_t v2 = v0[5];
  uint64_t v1 = v0[6];
  uint64_t v4 = v0[3];
  os_log_type_t v3 = v0[4];
  uint64_t v5 = type metadata accessor for Logger();
  __swift_project_value_buffer(v5, (uint64_t)static Logger.actions);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
  v6(v1, v4, v3);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v7 = Logger.logObject.getter();
  uint64_t v8 = static os_log_type_t.error.getter();
  uint64_t v9 = os_log_type_enabled(v7, v8);
  uint64_t v10 = v0[9];
  if (v9)
  {
    log = v7;
    uint64_t v11 = v0[6];
    uint64_t v12 = v0[7];
    unint64_t v14 = v0[4];
    uint64_t v13 = v0[5];
    uint64_t v15 = swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 136446466;
    v6(v12, v11, v14);
    unint64_t v16 = String.init<A>(describing:)();
    *(void *)(v15 + 4) = _s2os32getNullTerminatedUTF8PointerImpl_21storingStringOwnersInSVSS_SpyypGSgztF_0(v16, v17, &v26);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v14);
    *(_WORD *)(v15 + 12) = 2082;
    v0[2] = v10;
    swift_errorRetain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
    uint64_t v18 = String.init<A>(describing:)();
    *(void *)(v15 + 14) = _s2os32getNullTerminatedUTF8PointerImpl_21storingStringOwnersInSVSS_SpyypGSgztF_0(v18, v19, &v26);
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, log, v8, "Download failed to item=%{public}s with error=%{public}s", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    os_log_type_t v20 = v0[5];
    BOOL v21 = v0[6];
    uint64_t v22 = v0[4];
    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v21, v22);
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v23 = (uint64_t (*)(void))v0[1];
  return v23();
}

uint64_t closure #1 in closure #2 in Actions.Download.Context.init<A>(item:library:alertPresenter:metricsReportingContext:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[5] = a5;
  v6[6] = a6;
  v6[3] = a3;
  v6[4] = a4;
  v6[2] = a2;
  return _swift_task_switch(closure #1 in closure #2 in Actions.Download.Context.init<A>(item:library:alertPresenter:metricsReportingContext:), 0, 0);
}

uint64_t closure #1 in closure #2 in Actions.Download.Context.init<A>(item:library:alertPresenter:metricsReportingContext:)()
{
  kickOffDownload #1 <A>() in closure #2 in Actions.Download.Context.init<A>(item:library:alertPresenter:metricsReportingContext:)(v0[2], v0[3], v0[4], v0[5], v0[6]);
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t closure #3 in Actions.Download.Context.init<A>(item:library:alertPresenter:metricsReportingContext:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[11] = a3;
  v4[12] = a4;
  v4[9] = a1;
  v4[10] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  v4[13] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  v4[14] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for Actions.MetricsReportingContext();
  v4[15] = v5;
  v4[16] = *(void *)(v5 - 8);
  v4[17] = swift_task_alloc();
  return _swift_task_switch(closure #3 in Actions.Download.Context.init<A>(item:library:alertPresenter:metricsReportingContext:), 0, 0);
}

uint64_t closure #3 in Actions.Download.Context.init<A>(item:library:alertPresenter:metricsReportingContext:)()
{
  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v2 = *(void *)(v0 + 128);
  uint64_t v3 = *(void *)(v0 + 112);
  outlined init with copy of Actions.MetricsReportingContext?(*(void *)(v0 + 72), v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    outlined destroy of TaskPriority?(*(void *)(v0 + 112), &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
  else
  {
    uint64_t v6 = *(void *)(v0 + 104);
    uint64_t v7 = *(void *)(v0 + 88);
    outlined init with take of Actions.MetricsReportingContext(*(void *)(v0 + 112), *(void *)(v0 + 136));
    *(void *)(v0 + 144) = MusicItem.metricsTargetIdentifier.getter(v7);
    *(void *)(v0 + 152) = v8;
    uint64_t v9 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v6, 1, 1, v9);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<MetricsEvent.Click.ActionDetails.Key>);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100493400;
    *(void *)(inited + 32) = MusicItem.metricsContentType.getter();
    *(void *)(inited + 40) = v11;
    *(unsigned char *)(inited + 48) = 0;
    *(void *)(v0 + 160) = specialized MetricsEvent.Click.ActionDetails.init(_:)(inited);
    *(void *)(v0 + 168) = v12;
    *(void *)(v0 + 176) = v13;
    *(_WORD *)(v0 + 192) = v14;
    swift_setDeallocating();
    swift_arrayDestroy();
    type metadata accessor for MainActor();
    *(void *)(v0 + 184) = static MainActor.shared.getter();
    uint64_t v16 = dispatch thunk of Actor.unownedExecutor.getter();
    return _swift_task_switch(closure #3 in Actions.Download.Context.init<A>(item:library:alertPresenter:metricsReportingContext:), v16, v15);
  }
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  uint64_t v1 = *(void *)(v0 + 176);
  uint64_t v3 = *(void **)(v0 + 160);
  uint64_t v2 = *(void *)(v0 + 168);
  uint64_t v5 = *(void *)(v0 + 144);
  uint64_t v4 = *(void *)(v0 + 152);
  uint64_t v6 = *(uint64_t **)(v0 + 136);
  uint64_t v7 = *(void *)(v0 + 104);
  uint64_t v8 = *(unsigned __int16 *)(v0 + 192);
  swift_release();
  specialized static Actions.reportClickEvent(targetIdentifier:targetType:actionType:actionURL:actionDetails:reportingContext:)(v5, v4, 5, 12, v7, v3, v2, v1, v8, v6);
  outlined consume of MetricsEvent.Click.ActionDetails(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease();
  outlined destroy of TaskPriority?(v7, &demangling cache variable for type metadata for URL?);
  return _swift_task_switch(closure #5 in Actions.DeleteOrRemoveDownload.Context.init<A, B>(item:alertPresenter:library:metricsReportingContext:), 0, 0);
}

uint64_t sub_10002F584()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?)
                 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v5 = *(void *)(v1 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = v0 + v3;
  uint64_t v8 = type metadata accessor for Actions.MetricsReportingContext();
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v0 + v3, 1, v8))
  {
    uint64_t v16 = v4;
    if (*(void *)(v7 + 8) >= 0xBuLL) {
      swift_bridgeObjectRelease();
    }
    uint64_t v9 = v7 + *(int *)(v8 + 20);
    uint64_t v10 = type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v9, 1, v10))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v15 = v9 + *(int *)(v10 + 24);
      uint64_t v11 = type metadata accessor for URL();
      uint64_t v13 = *(void *)(v11 - 8);
      uint64_t v14 = v11;
      if (!(*(unsigned int (**)(uint64_t, uint64_t))(v13 + 48))(v15, 1)) {
        (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v15, v14);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v4 = v16;
  }
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + ((v3 + v4 + v6) & ~v6), v1);

  return swift_deallocObject();
}

uint64_t partial apply for closure #3 in Actions.Download.Context.init<A>(item:library:alertPresenter:metricsReportingContext:)()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?)
                 - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v0 + v5;
  uint64_t v7 = v0
     + ((v5 + *(void *)(v4 + 64) + *(unsigned __int8 *)(*(void *)(v2 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 8) + 80));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v8;
  *uint64_t v8 = v1;
  v8[1] = closure #3 in static Actions.ReportConcern.action(context:);
  return closure #3 in Actions.Download.Context.init<A>(item:library:alertPresenter:metricsReportingContext:)(v6, v7, v2, v3);
}

uint64_t Actions.Download.Context.menuItemTitle.getter()
{
  uint64_t v0 = type metadata accessor for Locale();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = type metadata accessor for String.LocalizationValue();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  unint64_t v5 = &v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v3);
  uint64_t v7 = &v11[-v6];
  String.LocalizationValue.init(stringLiteral:)();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v2 + 16))(v5, v7, v1);
  if (one-time initialization token for module != -1) {
    swift_once();
  }
  id v8 = (id)static NSBundle.module;
  static Locale.current.getter();
  uint64_t v9 = String.init(localized:table:bundle:locale:comment:)();
  (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v7, v1);
  return v9;
}

uint64_t (*Actions.Download.Context.menuItemImage.getter())()
{
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = 0xD000000000000011;
  *(void *)(v0 + 24) = 0x80000001004680E0;
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = 0xD000000000000011;
  *(void *)(v1 + 24) = 0x80000001004680E0;
  return partial apply for closure #1 in ActionMenuItemImage.init(systemName:);
}

uint64_t (*protocol witness for ActionMenuItemConfiguring.menuItemImage.getter in conformance Actions.Download.Context())()
{
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = 0xD000000000000011;
  *(void *)(v0 + 24) = 0x80000001004680E0;
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = 0xD000000000000011;
  *(void *)(v1 + 24) = 0x80000001004680E0;
  return closure #1 in ActionMenuItemImage.init(systemName:)partial apply;
}

uint64_t sub_10002FCB0()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

ValueMetadata *type metadata accessor for Actions.Download()
{
  return &type metadata for Actions.Download;
}

ValueMetadata *type metadata accessor for Actions.Download.Context()
{
  return &type metadata for Actions.Download.Context;
}

uint64_t sub_10002FD08()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #2 in Actions.Download.Context.init<A>(item:library:alertPresenter:metricsReportingContext:)()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 40);
  long long v7 = *(_OWORD *)(v0 + 16);
  uint64_t v4 = v0
     + ((*(unsigned __int8 *)(*(void *)(v7 - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v7 - 8) + 80));
  uint64_t v5 = swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *(void *)uint64_t v5 = v1;
  *(void *)(v5 + 48) = v2;
  *(_OWORD *)(v5 + 32) = v7;
  *(void *)(v5 + 16) = v3;
  *(void *)(v5 + 24) = v4;
  *(void *)(v5 + 8) = closure #3 in static Actions.ReportConcern.action(context:);
  return _swift_task_switch(closure #1 in closure #2 in Actions.Download.Context.init<A>(item:library:alertPresenter:metricsReportingContext:), 0, 0);
}

uint64_t partial apply for closure #1 in cellularDataDisallowedAlert #1 <A>() in closure #2 in Actions.Download.Context.init<A>(item:library:alertPresenter:metricsReportingContext:)(uint64_t a1)
{
  return closure #1 in cellularDataDisallowedAlert #1 <A>() in closure #2 in Actions.Download.Context.init<A>(item:library:alertPresenter:metricsReportingContext:)(a1, *(void *)(v1 + 16));
}

uint64_t outlined init with copy of AlertPresenting(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_10002FF38()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<Bool, Never>);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + v4);

  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #1 in cellularDataDisallowedAlert #1 <A>() in closure #2 in Actions.Download.Context.init<A>(item:library:alertPresenter:metricsReportingContext:)(uint64_t a1)
{
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<Bool, Never>)
                 - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v8 = v1 + v5;
  uint64_t v9 = v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  void *v10 = v2;
  v10[1] = partial apply for closure #1 in static MusicEngagementExtension.performRequest(with:completion:);
  return closure #1 in closure #1 in cellularDataDisallowedAlert #1 <A>() in closure #2 in Actions.Download.Context.init<A>(item:library:alertPresenter:metricsReportingContext:)(a1, v6, v7, v8, v9);
}

uint64_t sub_10003014C()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CheckedContinuation<Bool, Never>);
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);

  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #1 in closure #1 in cellularDataDisallowedAlert #1 <A>() in closure #2 in Actions.Download.Context.init<A>(item:library:alertPresenter:metricsReportingContext:)()
{
  return CheckedContinuation.resume(returning:)();
}

uint64_t sub_10003026C()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in kickOffDownload #1 <A>() in closure #2 in Actions.Download.Context.init<A>(item:library:alertPresenter:metricsReportingContext:)(uint64_t a1)
{
  uint64_t v4 = v1[4];
  uint64_t v5 = v1[5];
  uint64_t v6 = v1[7];
  uint64_t v7 = v1[2];
  uint64_t v8 = v1[3];
  uint64_t v9 = (uint64_t)v1
     + ((*(unsigned __int8 *)(*(void *)(v4 - 8) + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v4 - 8) + 80));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  void *v10 = v2;
  v10[1] = closure #3 in static Actions.ReportConcern.action(context:);
  return closure #1 in kickOffDownload #1 <A>() in closure #2 in Actions.Download.Context.init<A>(item:library:alertPresenter:metricsReportingContext:)(a1, v7, v8, v6, v9, v4, v5);
}

unint64_t lazy protocol witness table accessor for type MusicItemCollection<Playlist.Entry> and conformance MusicItemCollection<A>()
{
  unint64_t result = lazy protocol witness table cache variable for type MusicItemCollection<Playlist.Entry> and conformance MusicItemCollection<A>;
  if (!lazy protocol witness table cache variable for type MusicItemCollection<Playlist.Entry> and conformance MusicItemCollection<A>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for MusicItemCollection<Playlist.Entry>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MusicItemCollection<Playlist.Entry> and conformance MusicItemCollection<A>);
  }
  return result;
}

uint64_t NSUserDefaults.ValueTransformer.transform.getter(uint64_t a1)
{
  return a1;
}

uint64_t NSUserDefaults.ValueTransformer.transform.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_release();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

CFRange (__swiftcall *UIView.Shadow.color.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

uint64_t Actions.EditPlaylist.Context.presentEditPlaylistView.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a3;
}

uint64_t Actions.EditPlaylist.Context.presentEditPlaylistView.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_release();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

CFRange (__swiftcall *UIView.Shadow.radius.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

uint64_t Actions.EditPlaylist.Context.init(canEditPlaylist:presentEditPlaylistView:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a3;
  *(void *)(v7 + 24) = a4;
  return a1;
}

uint64_t thunk for @escaping @callee_guaranteed @Sendable () -> () with global actor constraint MainActor(uint64_t a1, uint64_t a2)
{
  void v2[2] = a1;
  v2[3] = a2;
  type metadata accessor for MainActor();
  v2[4] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(thunk for @escaping @callee_guaranteed @Sendable () -> () with global actor constraint MainActor, v4, v3);
}

uint64_t thunk for @escaping @callee_guaranteed @Sendable () -> () with global actor constraint MainActor()
{
  uint64_t v1 = *(void (**)(uint64_t))(v0 + 16);
  uint64_t v2 = swift_release();
  v1(v2);
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_100030738()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed @Sendable () -> () with global actor constraint MainActor()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = partial apply for closure #1 in static MusicEngagementExtension.performRequest(with:completion:);
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))((char *)&async function pointer to thunk for @escaping @callee_guaranteed @Sendable () -> () with global actor constraint MainActor
                                                + async function pointer to thunk for @escaping @callee_guaranteed @Sendable () -> () with global actor constraint MainActor);
  return v5(v2, v3);
}

uint64_t static Actions.EditPlaylist.action(context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  *(void *)a5 = a1;
  *(void *)(a5 + 8) = a2;
  *(void *)(a5 + 16) = a3;
  *(void *)(a5 + 24) = a4;
  *(unsigned char *)(a5 + 32) = 22;
  *(void *)(a5 + 40) = closure #1 in static Actions.AddToLibrary.action(context:);
  *(void *)(a5 + 48) = 0;
  *(void *)(a5 + 56) = 0x4014000000000000;
  *(void *)(a5 + 64) = &async function pointer to closure #2 in static Actions.EditPlaylist.action(context:);
  *(void *)(a5 + 72) = 0;
  *(void *)(a5 + 80) = &async function pointer to closure #3 in static Actions.EditPlaylist.action(context:);
  *(void *)(a5 + 88) = 0;
  swift_retain();

  return swift_retain();
}

uint64_t closure #2 in static Actions.EditPlaylist.action(context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (uint64_t (*)(void))(*(void *)(a2 + 16) + **(int **)(a2 + 16));
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v3;
  *uint64_t v3 = v2;
  v3[1] = _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTRyt_Tg5TQ0_;
  return v5();
}

uint64_t closure #3 in static Actions.EditPlaylist.action(context:)()
{
  return thunk for @escaping @callee_guaranteed @Sendable () -> ()(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t protocol witness for static ActionDefinition.action(context:) in conformance Actions.EditPlaylist@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *(void *)(a1 + 24);
  *(void *)a2 = *(void *)a1;
  *(_OWORD *)(a2 + 8) = *(_OWORD *)(a1 + 8);
  *(void *)(a2 + 24) = v2;
  *(unsigned char *)(a2 + 32) = 22;
  *(void *)(a2 + 40) = closure #1 in static Actions.AddToLibrary.action(context:);
  *(void *)(a2 + 48) = 0;
  *(void *)(a2 + 56) = 0x4014000000000000;
  *(void *)(a2 + 64) = &async function pointer to closure #2 in static Actions.EditPlaylist.action(context:);
  *(void *)(a2 + 72) = 0;
  *(void *)(a2 + 80) = &async function pointer to closure #3 in static Actions.EditPlaylist.action(context:);
  *(void *)(a2 + 88) = 0;
  swift_retain();

  return swift_retain();
}

uint64_t Actions.EditPlaylist.Context.menuItemTitle.getter()
{
  uint64_t v0 = type metadata accessor for Locale();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = type metadata accessor for String.LocalizationValue();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  uint64_t v5 = &v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v3);
  uint64_t v7 = &v11[-v6];
  String.LocalizationValue.init(stringLiteral:)();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v2 + 16))(v5, v7, v1);
  if (one-time initialization token for module != -1) {
    swift_once();
  }
  id v8 = (id)static NSBundle.module;
  static Locale.current.getter();
  uint64_t v9 = String.init(localized:table:bundle:locale:comment:)();
  (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v7, v1);
  return v9;
}

uint64_t (*Actions.EditPlaylist.Context.menuItemImage.getter())()
{
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = 0x6C69636E6570;
  *(void *)(v0 + 24) = 0xE600000000000000;
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = 0x6C69636E6570;
  *(void *)(v1 + 24) = 0xE600000000000000;
  return partial apply for closure #1 in ActionMenuItemImage.init(systemName:);
}

uint64_t (*protocol witness for ActionMenuItemConfiguring.menuItemImage.getter in conformance Actions.EditPlaylist.Context())()
{
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = 0x6C69636E6570;
  *(void *)(v0 + 24) = 0xE600000000000000;
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = 0x6C69636E6570;
  *(void *)(v1 + 24) = 0xE600000000000000;
  return closure #1 in ActionMenuItemImage.init(systemName:)partial apply;
}

ValueMetadata *type metadata accessor for Actions.EditPlaylist()
{
  return &type metadata for Actions.EditPlaylist;
}

uint64_t destroy for Actions.EditPlaylist.Context()
{
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for Actions.EditPlaylist.Context(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = v3;
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for Actions.EditPlaylist.Context(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for Actions.EditPlaylist.Context(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for Actions.EditPlaylist.Context(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Actions.EditPlaylist.Context(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Actions.EditPlaylist.Context()
{
  return &type metadata for Actions.EditPlaylist.Context;
}

uint64_t sub_100030F24()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t static Actions.RemoveDownload.canRemoveDownload<A>(item:library:)()
{
  uint64_t v0 = type metadata accessor for MusicLibrary.RemoveDownloadAction();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicLibrary.SupportedStatus<MusicLibrary.RemoveDownloadAction>);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  static MusicLibraryAction<>.removeDownload.getter();
  MusicLibrary.supportedStatus<A, B>(for:action:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  uint64_t v8 = MusicLibrary.SupportedStatus<>.actionSupportedStatus.getter();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v8;
}

uint64_t static Actions.RemoveDownload.action(context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *(void *)(a1 + 56);
  *(void *)a2 = *(void *)a1;
  *(_OWORD *)(a2 + 8) = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a2 + 40) = *(_OWORD *)(a1 + 40);
  *(void *)(a2 + 56) = v2;
  *(unsigned char *)(a2 + 64) = 37;
  *(void *)(a2 + 72) = closure #1 in static Actions.RemoveDownload.action(context:);
  *(void *)(a2 + 80) = 0;
  *(void *)(a2 + 88) = 0x4014000000000000;
  *(void *)(a2 + 96) = &async function pointer to closure #2 in static Actions.RemoveDownload.action(context:);
  *(void *)(a2 + 104) = 0;
  *(void *)(a2 + 112) = &async function pointer to closure #3 in static Actions.RemoveDownload.action(context:);
  *(void *)(a2 + 120) = 0;
  swift_retain();
  swift_retain();
  swift_retain();

  return swift_retain();
}

uint64_t closure #1 in static Actions.RemoveDownload.action(context:)(uint64_t a1)
{
  uint64_t v1 = *(uint64_t (**)(uint64_t))a1;
  uint64_t result = (*(uint64_t (**)(void))(a1 + 16))();
  if (v3 == 1)
  {
    uint64_t v4 = v1(result);
    uint64_t v6 = v5;
    outlined consume of ActionSupportedStatus(v4, v5);
    if (v6 == 1) {
      return 0xD00000000000001BLL;
    }
    else {
      return 0;
    }
  }
  return result;
}

uint64_t closure #2 in static Actions.RemoveDownload.action(context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (uint64_t (*)(void))(*(void *)(a2 + 32) + **(int **)(a2 + 32));
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v3;
  *uint64_t v3 = v2;
  v3[1] = closure #3 in static Actions.ReportConcern.action(context:);
  return v5();
}

uint64_t static Actions.RemoveDownload.removeDownload<A>(item:library:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  *uint64_t v8 = v4;
  v8[1] = partial apply for closure #1 in static MusicEngagementExtension.performRequest(with:completion:);
  return MusicLibrary.removeDownload<A>(_:)(a1, a3, a4);
}

uint64_t Actions.RemoveDownload.Context.menuItemTitle.getter()
{
  uint64_t v0 = type metadata accessor for Locale();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = type metadata accessor for String.LocalizationValue();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  uint64_t v5 = &v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v3);
  uint64_t v7 = &v11[-v6];
  String.LocalizationValue.init(stringLiteral:)();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v2 + 16))(v5, v7, v1);
  if (one-time initialization token for module != -1) {
    swift_once();
  }
  id v8 = (id)static NSBundle.module;
  static Locale.current.getter();
  uint64_t v9 = String.init(localized:table:bundle:locale:comment:)();
  (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v7, v1);
  return v9;
}

uint64_t (*Actions.RemoveDownload.Context.menuItemImage.getter())()
{
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = 0x6873617274;
  *(void *)(v0 + 24) = 0xE500000000000000;
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = 0x6873617274;
  *(void *)(v1 + 24) = 0xE500000000000000;
  return partial apply for closure #1 in ActionMenuItemImage.init(systemName:);
}

uint64_t (*protocol witness for ActionMenuItemConfiguring.menuItemImage.getter in conformance Actions.RemoveDownload.Context())()
{
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = 0x6873617274;
  *(void *)(v0 + 24) = 0xE500000000000000;
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = 0x6873617274;
  *(void *)(v1 + 24) = 0xE500000000000000;
  return closure #1 in ActionMenuItemImage.init(systemName:)partial apply;
}

uint64_t Actions.RemoveDownload.Context.init<A>(item:library:metricsReportingContext:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t (**a7)()@<X8>)
{
  uint64_t v63 = a3;
  uint64_t v64 = a7;
  uint64_t v69 = a2;
  uint64_t v54 = a1;
  uint64_t v10 = *(void *)(a4 - 8);
  uint64_t v11 = __chkstk_darwin(a1);
  uint64_t v62 = (char *)v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v58 = (char *)v52 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v56 = (char *)v52 - v16;
  uint64_t v18 = v17;
  uint64_t v60 = v17;
  __chkstk_darwin(v15);
  os_log_type_t v20 = (char *)v52 - v19;
  uint64_t v68 = *(void (**)(char *))(v10 + 16);
  v68((char *)v52 - v19);
  uint64_t v59 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v21 = (v59 + 40) & ~v59;
  uint64_t v65 = v59 | 7;
  uint64_t v22 = v21;
  unint64_t v23 = ((v18 + v21 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  unint64_t v24 = (v18 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  v52[1] = v23;
  uint64_t v53 = v21;
  uint64_t v25 = (void *)swift_allocObject();
  v25[2] = a4;
  v25[3] = a5;
  v25[4] = a6;
  v52[0] = a6;
  uint64_t v26 = v25;
  uint64_t v61 = (uint64_t (*)())v25;
  uint64_t v66 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  uint64_t v67 = v10 + 32;
  v66((char *)v25 + v22, v20, a4);
  uint64_t v27 = (void (*)(char *, uint64_t, uint64_t))v68;
  uint64_t v28 = v69;
  *(void *)((char *)v26 + v24) = v69;
  unint64_t v29 = v24;
  uint64_t v30 = v56;
  uint64_t v31 = v54;
  v27(v56, v54, a4);
  uint64_t v32 = (void *)swift_allocObject();
  v32[2] = a4;
  v32[3] = a5;
  uint64_t v33 = a5;
  uint64_t v55 = a5;
  v32[4] = a6;
  uint64_t v34 = v53;
  os_log_type_t v35 = v32;
  unint64_t v57 = (uint64_t (*)())v32;
  v66((char *)v32 + v53, v30, a4);
  *(void *)((char *)v35 + v29) = v28;
  BOOL v36 = v58;
  ((void (*)(char *, uint64_t, uint64_t))v68)(v58, v31, a4);
  uint64_t v37 = (uint64_t (*)())swift_allocObject();
  *((void *)v37 + 2) = a4;
  *((void *)v37 + 3) = v33;
  uint64_t v38 = v52[0];
  *((void *)v37 + 4) = v52[0];
  uint64_t v39 = (char *)v37 + v34;
  uint64_t v40 = (void (*)(char *, uint64_t, uint64_t))v66;
  v66(v39, v36, a4);
  *(void *)((char *)v37 + v29) = v28;
  uint64_t v41 = v62;
  v40(v62, v31, a4);
  uint64_t v42 = (void (*)(char *, char *, uint64_t))v40;
  uint64_t v43 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?)
                  - 8);
  unint64_t v44 = (*(unsigned __int8 *)(v43 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
  unint64_t v45 = (*(void *)(v43 + 64) + v59 + v44) & ~v59;
  uint64_t v46 = (uint64_t (*)())swift_allocObject();
  uint64_t v47 = v55;
  *((void *)v46 + 2) = a4;
  *((void *)v46 + 3) = v47;
  *((void *)v46 + 4) = v38;
  outlined init with take of Actions.MetricsReportingContext?(v63, (uint64_t)v46 + v44);
  v42((char *)v46 + v45, v41, a4);
  uint64_t result = swift_retain_n();
  id v49 = v64;
  unsigned __int8 v50 = v61;
  *uint64_t v64 = partial apply for closure #1 in Actions.RemoveDownload.Context.init<A>(item:library:metricsReportingContext:);
  v49[1] = v50;
  uint64_t v51 = v57;
  v49[2] = partial apply for closure #2 in Actions.RemoveDownload.Context.init<A>(item:library:metricsReportingContext:);
  v49[3] = v51;
  v49[4] = (uint64_t (*)())&async function pointer to partial apply for closure #3 in Actions.RemoveDownload.Context.init<A>(item:library:metricsReportingContext:);
  v49[5] = v37;
  v49[6] = (uint64_t (*)())&async function pointer to partial apply for closure #4 in Actions.RemoveDownload.Context.init<A>(item:library:metricsReportingContext:);
  v49[7] = v46;
  return result;
}

uint64_t closure #3 in Actions.RemoveDownload.Context.init<A>(item:library:metricsReportingContext:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = closure #3 in static Actions.ReportConcern.action(context:);
  return static Actions.RemoveDownload.removeDownload<A>(item:library:)(a1, a2, a3, a4);
}

uint64_t closure #4 in Actions.RemoveDownload.Context.init<A>(item:library:metricsReportingContext:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[11] = a3;
  v4[12] = a4;
  v4[9] = a1;
  v4[10] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  v4[13] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  v4[14] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for Actions.MetricsReportingContext();
  v4[15] = v5;
  v4[16] = *(void *)(v5 - 8);
  v4[17] = swift_task_alloc();
  return _swift_task_switch(closure #4 in Actions.RemoveDownload.Context.init<A>(item:library:metricsReportingContext:), 0, 0);
}

uint64_t closure #4 in Actions.RemoveDownload.Context.init<A>(item:library:metricsReportingContext:)()
{
  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v2 = *(void *)(v0 + 128);
  uint64_t v3 = *(void *)(v0 + 112);
  outlined init with copy of Actions.MetricsReportingContext?(*(void *)(v0 + 72), v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    outlined destroy of TaskPriority?(*(void *)(v0 + 112), &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
  else
  {
    uint64_t v6 = *(void *)(v0 + 104);
    uint64_t v7 = *(void *)(v0 + 88);
    outlined init with take of Actions.MetricsReportingContext(*(void *)(v0 + 112), *(void *)(v0 + 136));
    *(void *)(v0 + 144) = MusicItem.metricsTargetIdentifier.getter(v7);
    *(void *)(v0 + 152) = v8;
    uint64_t v9 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v6, 1, 1, v9);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<MetricsEvent.Click.ActionDetails.Key>);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100493400;
    *(void *)(inited + 32) = MusicItem.metricsContentType.getter();
    *(void *)(inited + 40) = v11;
    *(unsigned char *)(inited + 48) = 0;
    *(void *)(v0 + 160) = specialized MetricsEvent.Click.ActionDetails.init(_:)(inited);
    *(void *)(v0 + 168) = v12;
    *(void *)(v0 + 176) = v13;
    *(_WORD *)(v0 + 192) = v14;
    swift_setDeallocating();
    swift_arrayDestroy();
    type metadata accessor for MainActor();
    *(void *)(v0 + 184) = static MainActor.shared.getter();
    uint64_t v16 = dispatch thunk of Actor.unownedExecutor.getter();
    return _swift_task_switch(closure #4 in Actions.RemoveDownload.Context.init<A>(item:library:metricsReportingContext:), v16, v15);
  }
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  uint64_t v1 = *(void *)(v0 + 176);
  uint64_t v3 = *(void **)(v0 + 160);
  uint64_t v2 = *(void *)(v0 + 168);
  uint64_t v5 = *(void *)(v0 + 144);
  uint64_t v4 = *(void *)(v0 + 152);
  uint64_t v6 = *(uint64_t **)(v0 + 136);
  uint64_t v7 = *(void *)(v0 + 104);
  uint64_t v8 = *(unsigned __int16 *)(v0 + 192);
  swift_release();
  specialized static Actions.reportClickEvent(targetIdentifier:targetType:actionType:actionURL:actionDetails:reportingContext:)(v5, v4, 5, 29, v7, v3, v2, v1, v8, v6);
  outlined consume of MetricsEvent.Click.ActionDetails(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease();
  outlined destroy of TaskPriority?(v7, &demangling cache variable for type metadata for URL?);
  return _swift_task_switch(closure #5 in Actions.DeleteOrRemoveDownload.Context.init<A, B>(item:alertPresenter:library:metricsReportingContext:), 0, 0);
}

uint64_t sub_100032404()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in Actions.RemoveDownload.Context.init<A>(item:library:metricsReportingContext:)()
{
  return static Actions.DeleteFromLibrary.canDelete<A>(item:library:)();
}

uint64_t partial apply for closure #2 in Actions.RemoveDownload.Context.init<A>(item:library:metricsReportingContext:)()
{
  return static Actions.RemoveDownload.canRemoveDownload<A>(item:library:)();
}

uint64_t objectdestroy_5Tm()
{
  (*(void (**)(unint64_t))(*(void *)(*(void *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80)));
  swift_release();

  return swift_deallocObject();
}

uint64_t partial apply for closure #3 in Actions.RemoveDownload.Context.init<A>(item:library:metricsReportingContext:)()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v2 - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 8) + 80);
  uint64_t v5 = v0 + v4;
  uint64_t v6 = *(void *)(v0 + ((*(void *)(*(void *)(v2 - 8) + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v7;
  *uint64_t v7 = v1;
  v7[1] = partial apply for closure #1 in static MusicEngagementExtension.performRequest(with:completion:);
  return closure #3 in Actions.RemoveDownload.Context.init<A>(item:library:metricsReportingContext:)(v5, v6, v2, v3);
}

uint64_t sub_1000326D4()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?)
                 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v5 = *(void *)(v1 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = v0 + v3;
  uint64_t v8 = type metadata accessor for Actions.MetricsReportingContext();
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v0 + v3, 1, v8))
  {
    uint64_t v16 = v4;
    if (*(void *)(v7 + 8) >= 0xBuLL) {
      swift_bridgeObjectRelease();
    }
    uint64_t v9 = v7 + *(int *)(v8 + 20);
    uint64_t v10 = type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v9, 1, v10))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v15 = v9 + *(int *)(v10 + 24);
      uint64_t v11 = type metadata accessor for URL();
      uint64_t v13 = *(void *)(v11 - 8);
      uint64_t v14 = v11;
      if (!(*(unsigned int (**)(uint64_t, uint64_t))(v13 + 48))(v15, 1)) {
        (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v15, v14);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v4 = v16;
  }
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + ((v3 + v4 + v6) & ~v6), v1);

  return swift_deallocObject();
}

uint64_t partial apply for closure #4 in Actions.RemoveDownload.Context.init<A>(item:library:metricsReportingContext:)()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?)
                 - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v0 + v5;
  uint64_t v7 = v0
     + ((v5 + *(void *)(v4 + 64) + *(unsigned __int8 *)(*(void *)(v2 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 8) + 80));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v8;
  *uint64_t v8 = v1;
  v8[1] = closure #3 in static Actions.ReportConcern.action(context:);
  return closure #4 in Actions.RemoveDownload.Context.init<A>(item:library:metricsReportingContext:)(v6, v7, v2, v3);
}

ValueMetadata *type metadata accessor for Actions.RemoveDownload()
{
  return &type metadata for Actions.RemoveDownload;
}

ValueMetadata *type metadata accessor for Actions.RemoveDownload.Context()
{
  return &type metadata for Actions.RemoveDownload.Context;
}

uint64_t static Actions.RemoveFromPlaylist.action(context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *(void *)(a1 + 40);
  *(void *)a2 = *(void *)a1;
  *(_OWORD *)(a2 + 8) = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(a1 + 24);
  *(void *)(a2 + 40) = v2;
  *(unsigned char *)(a2 + 48) = 38;
  *(void *)(a2 + 56) = closure #1 in static Actions.AddToLibrary.action(context:);
  *(void *)(a2 + 64) = 0;
  *(void *)(a2 + 72) = 0x4014000000000000;
  *(void *)(a2 + 80) = &async function pointer to closure #2 in static Actions.RemoveFromPlaylist.action(context:);
  *(void *)(a2 + 88) = 0;
  *(void *)(a2 + 96) = &async function pointer to closure #3 in static Actions.RemoveFromPlaylist.action(context:);
  *(void *)(a2 + 104) = 0;
  swift_retain();
  swift_retain();

  return swift_retain();
}

uint64_t (*Actions.RemoveFromPlaylist.Context.menuItemImage.getter())()
{
  uint64_t v0 = swift_allocObject();
  strcpy((char *)(v0 + 16), "minus.circle");
  *(unsigned char *)(v0 + 29) = 0;
  *(_WORD *)(v0 + 30) = -5120;
  uint64_t v1 = swift_allocObject();
  strcpy((char *)(v1 + 16), "minus.circle");
  *(unsigned char *)(v1 + 29) = 0;
  *(_WORD *)(v1 + 30) = -5120;
  return partial apply for closure #1 in ActionMenuItemImage.init(systemName:);
}

uint64_t (*protocol witness for ActionMenuItemConfiguring.menuItemImage.getter in conformance Actions.RemoveFromPlaylist.Context())()
{
  uint64_t v0 = swift_allocObject();
  strcpy((char *)(v0 + 16), "minus.circle");
  *(unsigned char *)(v0 + 29) = 0;
  *(_WORD *)(v0 + 30) = -5120;
  uint64_t v1 = swift_allocObject();
  strcpy((char *)(v1 + 16), "minus.circle");
  *(unsigned char *)(v1 + 29) = 0;
  *(_WORD *)(v1 + 30) = -5120;
  return closure #1 in ActionMenuItemImage.init(systemName:)partial apply;
}

uint64_t Actions.RemoveFromPlaylist.Context.init(entry:playlist:library:metricsReportingContext:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unint64_t (**a5)()@<X8>)
{
  uint64_t v43 = a3;
  uint64_t v44 = a4;
  unint64_t v45 = a5;
  uint64_t v46 = a1;
  uint64_t v6 = type metadata accessor for Playlist.Entry();
  uint64_t v39 = *(void *)(v6 - 8);
  uint64_t v40 = v6;
  uint64_t v7 = *(void *)(v39 + 64);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v42 = (char *)v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = v7;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)v36 - v9;
  v36[0] = (char *)v36 - v9;
  uint64_t v11 = type metadata accessor for Playlist();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v37 = (char *)v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)v36 - v15;
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))((char *)v36 - v15, a2, v11);
  uint64_t v17 = *(unsigned __int8 *)(v12 + 80);
  v36[1] = v17 | 7;
  uint64_t v41 = swift_allocObject();
  uint64_t v18 = *(void (**)(uint64_t, char *, uint64_t))(v12 + 32);
  v18(v41 + ((v17 + 16) & ~v17), v16, v11);
  uint64_t v19 = v39;
  os_log_type_t v20 = v10;
  uint64_t v21 = v40;
  (*(void (**)(char *, uint64_t, uint64_t))(v39 + 16))(v20, v46, v40);
  v18((uint64_t)v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v11);
  uint64_t v22 = *(unsigned __int8 *)(v19 + 80);
  uint64_t v23 = v19;
  uint64_t v24 = (v22 + 24) & ~v22;
  uint64_t v25 = (v7 + v17 + v24) & ~v17;
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = v43;
  uint64_t v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 32);
  v27(v26 + v24, v36[0], v21);
  v18(v26 + v25, v37, v11);
  uint64_t v28 = v42;
  v27((uint64_t)v42, v46, v21);
  uint64_t v29 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?)
                  - 8);
  unint64_t v30 = (*(unsigned __int8 *)(v29 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
  unint64_t v31 = (*(void *)(v29 + 64) + v22 + v30) & ~v22;
  uint64_t v32 = swift_allocObject();
  outlined init with take of Actions.MetricsReportingContext?(v44, v32 + v30);
  uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v27)(v32 + v31, v28, v21);
  uint64_t v34 = v45;
  uint64_t v35 = v41;
  char *v45 = partial apply for closure #1 in Actions.RemoveFromPlaylist.Context.init(entry:playlist:library:metricsReportingContext:);
  v34[1] = (unint64_t (*)())v35;
  v34[2] = (unint64_t (*)())&async function pointer to partial apply for closure #2 in Actions.RemoveFromPlaylist.Context.init(entry:playlist:library:metricsReportingContext:);
  v34[3] = (unint64_t (*)())v26;
  v34[4] = (unint64_t (*)())&async function pointer to partial apply for closure #3 in Actions.RemoveFromPlaylist.Context.init(entry:playlist:library:metricsReportingContext:);
  v34[5] = (unint64_t (*)())v32;
  return result;
}

unint64_t closure #1 in Actions.RemoveFromPlaylist.Context.init(entry:playlist:library:metricsReportingContext:)()
{
  uint64_t v0 = type metadata accessor for Playlist.EditableComponents();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Playlist.EditableComponents?);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  Playlist.editableComponents.getter();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1 + 48))(v6, 1, v0) == 1)
  {
    outlined destroy of TaskPriority?((uint64_t)v6, (uint64_t *)&demangling cache variable for type metadata for Playlist.EditableComponents?);
  }
  else
  {
    static Playlist.EditableComponents.tracklist.getter();
    lazy protocol witness table accessor for type Playlist.EditableComponents and conformance Playlist.EditableComponents();
    char v7 = dispatch thunk of SetAlgebra.isSuperset(of:)();
    uint64_t v8 = *(void (**)(char *, uint64_t))(v1 + 8);
    v8(v3, v0);
    v8(v6, v0);
    if (v7) {
      return 0;
    }
  }
  return 0xD00000000000001ALL;
}

uint64_t closure #2 in Actions.RemoveFromPlaylist.Context.init(entry:playlist:library:metricsReportingContext:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  uint64_t v6 = type metadata accessor for Playlist();
  v3[5] = v6;
  v3[6] = *(void *)(v6 - 8);
  v3[7] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for Playlist.Entry();
  v3[8] = v7;
  v3[9] = *(void *)(v7 - 8);
  v3[10] = swift_task_alloc();
  uint64_t v8 = (void *)swift_task_alloc();
  v3[11] = v8;
  *uint64_t v8 = v3;
  v8[1] = closure #2 in Actions.RemoveFromPlaylist.Context.init(entry:playlist:library:metricsReportingContext:);
  return MusicLibrary.remove(_:from:)(a2, a3);
}

uint64_t closure #2 in Actions.RemoveFromPlaylist.Context.init(entry:playlist:library:metricsReportingContext:)()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 96) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(closure #2 in Actions.RemoveFromPlaylist.Context.init(entry:playlist:library:metricsReportingContext:), 0, 0);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t (*v26)(void);
  NSObject *log;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;

  unint64_t v31 = v0;
  if (one-time initialization token for actions != -1) {
    swift_once();
  }
  uint64_t v2 = v0[9];
  uint64_t v1 = v0[10];
  uint64_t v3 = v0[8];
  uint64_t v29 = v0[7];
  uint64_t v5 = v0[5];
  uint64_t v4 = v0[6];
  uint64_t v7 = v0[3];
  uint64_t v6 = v0[4];
  uint64_t v8 = type metadata accessor for Logger();
  __swift_project_value_buffer(v8, (uint64_t)static Logger.actions);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v7, v3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v29, v6, v5);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v9 = Logger.logObject.getter();
  uint64_t v10 = static os_log_type_t.error.getter();
  uint64_t v11 = os_log_type_enabled(v9, v10);
  uint64_t v12 = v0[12];
  uint64_t v13 = v0[9];
  uint64_t v14 = v0[10];
  uint64_t v15 = v0[7];
  uint64_t v16 = v0[8];
  uint64_t v18 = v0[5];
  uint64_t v17 = v0[6];
  if (v11)
  {
    log = v9;
    uint64_t v19 = swift_slowAlloc();
    unint64_t v30 = swift_slowAlloc();
    *(_DWORD *)uint64_t v19 = 136446722;
    os_log_type_t v20 = Playlist.Entry.description.getter();
    *(void *)(v19 + 4) = _s2os32getNullTerminatedUTF8PointerImpl_21storingStringOwnersInSVSS_SpyypGSgztF_0(v20, v21, &v30);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v14, v16);
    *(_WORD *)(v19 + 12) = 2082;
    uint64_t v22 = Playlist.description.getter();
    *(void *)(v19 + 14) = _s2os32getNullTerminatedUTF8PointerImpl_21storingStringOwnersInSVSS_SpyypGSgztF_0(v22, v23, &v30);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v18);
    *(_WORD *)(v19 + 22) = 2082;
    v0[2] = v12;
    swift_errorRetain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
    uint64_t v24 = String.init<A>(describing:)();
    *(void *)(v19 + 24) = _s2os32getNullTerminatedUTF8PointerImpl_21storingStringOwnersInSVSS_SpyypGSgztF_0(v24, v25, &v30);
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, log, v10, "Failed to remove entry=%{public}s from playlist=%{public}s with error=%{public}s", (uint8_t *)v19, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v14, v16);
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v18);
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v26 = (uint64_t (*)(void))v0[1];
  return v26();
}

uint64_t closure #3 in Actions.RemoveFromPlaylist.Context.init(entry:playlist:library:metricsReportingContext:)(uint64_t a1, uint64_t a2)
{
  v2[12] = a1;
  v2[13] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  v2[14] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  v2[15] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for Actions.MetricsReportingContext();
  v2[16] = v3;
  v2[17] = *(void *)(v3 - 8);
  v2[18] = swift_task_alloc();
  return _swift_task_switch(closure #3 in Actions.RemoveFromPlaylist.Context.init(entry:playlist:library:metricsReportingContext:), 0, 0);
}

uint64_t closure #3 in Actions.RemoveFromPlaylist.Context.init(entry:playlist:library:metricsReportingContext:)()
{
  uint64_t v1 = *(void *)(v0 + 128);
  uint64_t v2 = *(void *)(v0 + 136);
  uint64_t v3 = *(void *)(v0 + 120);
  outlined init with copy of Actions.MetricsReportingContext?(*(void *)(v0 + 96), v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    outlined destroy of TaskPriority?(*(void *)(v0 + 120), &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
  else
  {
    uint64_t v6 = *(void *)(v0 + 112);
    outlined init with take of Actions.MetricsReportingContext(*(void *)(v0 + 120), *(void *)(v0 + 144));
    uint64_t v7 = Playlist.Entry.catalogID.getter();
    *(void *)(v0 + 152) = v8;
    *(void *)(v0 + 160) = v7;
    uint64_t v9 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v6, 1, 1, v9);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<MetricsEvent.Click.ActionDetails.Key>);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100493D00;
    *(void *)(inited + 32) = Playlist.Entry.metricsContentType.getter();
    *(void *)(inited + 40) = v11;
    *(unsigned char *)(inited + 48) = 0;
    *(_OWORD *)(inited + 56) = xmmword_100493D30;
    *(unsigned char *)(inited + 72) = 2;
    *(void *)(v0 + 168) = specialized MetricsEvent.Click.ActionDetails.init(_:)(inited);
    *(void *)(v0 + 176) = v12;
    *(void *)(v0 + 184) = v13;
    *(_WORD *)(v0 + 200) = v14;
    swift_setDeallocating();
    swift_arrayDestroy();
    type metadata accessor for MainActor();
    *(void *)(v0 + 192) = static MainActor.shared.getter();
    uint64_t v16 = dispatch thunk of Actor.unownedExecutor.getter();
    return _swift_task_switch(closure #3 in Actions.RemoveFromPlaylist.Context.init(entry:playlist:library:metricsReportingContext:), v16, v15);
  }
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  uint64_t v1 = *(void *)(v0 + 184);
  uint64_t v3 = *(void **)(v0 + 168);
  uint64_t v2 = *(void *)(v0 + 176);
  uint64_t v4 = *(void *)(v0 + 152);
  uint64_t v5 = *(void *)(v0 + 160);
  uint64_t v6 = *(uint64_t **)(v0 + 144);
  uint64_t v7 = *(void *)(v0 + 112);
  uint64_t v8 = *(unsigned __int16 *)(v0 + 200);
  swift_release();
  if (v4)
  {
    uint64_t v9 = v5;
  }
  else
  {
    uint64_t v4 = 0xEB000000006D6574;
    uint64_t v9 = 0x497972617262694CLL;
  }
  specialized static Actions.reportClickEvent(targetIdentifier:targetType:actionType:actionURL:actionDetails:reportingContext:)(v9, v4, 5, 31, v7, v3, v2, v1, v8, v6);
  outlined consume of MetricsEvent.Click.ActionDetails(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease();
  outlined destroy of TaskPriority?(v7, &demangling cache variable for type metadata for URL?);
  return _swift_task_switch(closure #3 in Actions.RemoveFromPlaylist.Context.init(entry:playlist:library:metricsReportingContext:), 0, 0);
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  outlined destroy of Actions.MetricsReportingContext(*(void *)(v0 + 144));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t specialized Actions.RemoveFromPlaylist.Context.menuItemTitle.getter()
{
  uint64_t v0 = type metadata accessor for Locale();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = type metadata accessor for String.LocalizationValue();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  uint64_t v5 = &v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v3);
  uint64_t v7 = &v11[-v6];
  String.LocalizationValue.init(stringLiteral:)();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v2 + 16))(v5, v7, v1);
  if (one-time initialization token for module != -1) {
    swift_once();
  }
  id v8 = (id)static NSBundle.module;
  static Locale.current.getter();
  uint64_t v9 = String.init(localized:table:bundle:locale:comment:)();
  (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v7, v1);
  return v9;
}

uint64_t sub_100033F0C()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_100033F44()
{
  uint64_t v1 = type metadata accessor for Playlist();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);

  return swift_deallocObject();
}

unint64_t partial apply for closure #1 in Actions.RemoveFromPlaylist.Context.init(entry:playlist:library:metricsReportingContext:)()
{
  type metadata accessor for Playlist();

  return closure #1 in Actions.RemoveFromPlaylist.Context.init(entry:playlist:library:metricsReportingContext:)();
}

uint64_t sub_100034034()
{
  uint64_t v1 = type metadata accessor for Playlist.Entry();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v5 = type metadata accessor for Playlist();
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);

  return swift_deallocObject();
}

uint64_t partial apply for closure #2 in Actions.RemoveFromPlaylist.Context.init(entry:playlist:library:metricsReportingContext:)()
{
  uint64_t v2 = *(void *)(type metadata accessor for Playlist.Entry() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v5 = *(unsigned __int8 *)(*(void *)(type metadata accessor for Playlist() - 8) + 80);
  unint64_t v6 = v3 + v4 + v5;
  uint64_t v7 = *(void *)(v0 + 16);
  uint64_t v8 = v0 + v3;
  uint64_t v9 = v0 + (v6 & ~v5);
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v10;
  void *v10 = v1;
  v10[1] = partial apply for closure #1 in static MusicEngagementExtension.performRequest(with:completion:);
  return closure #2 in Actions.RemoveFromPlaylist.Context.init(entry:playlist:library:metricsReportingContext:)(v7, v8, v9);
}

uint64_t sub_1000342C8()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?)
                 - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = type metadata accessor for Playlist.Entry();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = v0 + v2;
  uint64_t v8 = type metadata accessor for Actions.MetricsReportingContext();
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v0 + v2, 1, v8))
  {
    uint64_t v16 = v3;
    if (*(void *)(v7 + 8) >= 0xBuLL) {
      swift_bridgeObjectRelease();
    }
    uint64_t v9 = v7 + *(int *)(v8 + 20);
    uint64_t v10 = type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v9, 1, v10))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v15 = v9 + *(int *)(v10 + 24);
      uint64_t v11 = type metadata accessor for URL();
      uint64_t v13 = *(void *)(v11 - 8);
      uint64_t v14 = v11;
      if (!(*(unsigned int (**)(uint64_t, uint64_t))(v13 + 48))(v15, 1)) {
        (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v15, v14);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v3 = v16;
  }
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + ((v2 + v3 + v6) & ~v6), v4);

  return swift_deallocObject();
}

uint64_t partial apply for closure #3 in Actions.RemoveFromPlaylist.Context.init(entry:playlist:library:metricsReportingContext:)()
{
  uint64_t v2 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?)
                 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v5 = *(unsigned __int8 *)(*(void *)(type metadata accessor for Playlist.Entry() - 8) + 80);
  unint64_t v6 = v3 + v4 + v5;
  uint64_t v7 = v0 + v3;
  uint64_t v8 = v0 + (v6 & ~v5);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v9;
  *uint64_t v9 = v1;
  v9[1] = closure #3 in static Actions.ReportConcern.action(context:);
  return closure #3 in Actions.RemoveFromPlaylist.Context.init(entry:playlist:library:metricsReportingContext:)(v7, v8);
}

ValueMetadata *type metadata accessor for Actions.RemoveFromPlaylist()
{
  return &type metadata for Actions.RemoveFromPlaylist;
}

ValueMetadata *type metadata accessor for Actions.RemoveFromPlaylist.Context()
{
  return &type metadata for Actions.RemoveFromPlaylist.Context;
}

unint64_t lazy protocol witness table accessor for type Playlist.EditableComponents and conformance Playlist.EditableComponents()
{
  unint64_t result = lazy protocol witness table cache variable for type Playlist.EditableComponents and conformance Playlist.EditableComponents;
  if (!lazy protocol witness table cache variable for type Playlist.EditableComponents and conformance Playlist.EditableComponents)
  {
    type metadata accessor for Playlist.EditableComponents();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Playlist.EditableComponents and conformance Playlist.EditableComponents);
  }
  return result;
}

uint64_t specialized == infix<A>(_:_:)(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    unint64_t v3 = 0xD00000000000001CLL;
  }
  else {
    unint64_t v3 = 0xD00000000000001DLL;
  }
  if (v2) {
    unint64_t v4 = 0x8000000100467700;
  }
  else {
    unint64_t v4 = 0x8000000100467720;
  }
  if (a2) {
    unint64_t v5 = 0xD00000000000001CLL;
  }
  else {
    unint64_t v5 = 0xD00000000000001DLL;
  }
  if (a2) {
    unint64_t v6 = 0x8000000100467720;
  }
  else {
    unint64_t v6 = 0x8000000100467700;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

{
  unint64_t v3;
  unint64_t v4;
  const char *v5;
  unint64_t v6;
  unint64_t v7;
  const char *v8;
  char v9;

  unint64_t v3 = 0xD00000000000001FLL;
  unint64_t v4 = 0x8000000100467390;
  switch(a1)
  {
    case 1:
      unint64_t v3 = 0xD000000000000024;
      unint64_t v5 = "LastKnownStoreBagMusicTabsDictionary";
      goto LABEL_4;
    case 2:
      unint64_t v3 = 0xD000000000000025;
      unint64_t v5 = "LastKnownStoreAccountUniqueIdentifier";
LABEL_4:
      unint64_t v4 = (unint64_t)(v5 - 32) | 0x8000000000000000;
      break;
    case 3:
      unint64_t v4 = 0x8000000100467410;
      unint64_t v3 = 0xD000000000000014;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xD00000000000001FLL;
  char v7 = 0x8000000100467390;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xD000000000000024;
      uint64_t v8 = "LastKnownStoreBagMusicTabsDictionary";
      goto LABEL_9;
    case 2:
      unint64_t v6 = 0xD000000000000025;
      uint64_t v8 = "LastKnownStoreAccountUniqueIdentifier";
LABEL_9:
      char v7 = (unint64_t)(v8 - 32) | 0x8000000000000000;
      goto LABEL_10;
    case 3:
      char v7 = 0x8000000100467410;
      if (v3 == 0xD000000000000014) {
        goto LABEL_13;
      }
      goto LABEL_15;
    default:
LABEL_10:
      if (v3 != v6) {
        goto LABEL_15;
      }
LABEL_13:
      if (v4 == v7) {
        uint64_t v9 = 1;
      }
      else {
LABEL_15:
      }
        uint64_t v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v9 & 1;
  }
}

{
  unint64_t v3;
  unint64_t v4;
  const char *v5;
  unint64_t v6;
  unint64_t v7;
  const char *v8;
  char v9;

  unint64_t v3 = 0xD00000000000002FLL;
  unint64_t v4 = 0x8000000100467470;
  switch(a1)
  {
    case 1:
      unint64_t v3 = 0xD000000000000032;
      unint64_t v5 = "lastBackgroundRefreshPinnedSubscribedPlaylistsDate";
      goto LABEL_4;
    case 2:
      unint64_t v3 = 0xD000000000000028;
      unint64_t v5 = "forceBackgroundRefreshServerLandingPages";
LABEL_4:
      unint64_t v4 = (unint64_t)(v5 - 32) | 0x8000000000000000;
      break;
    case 3:
      unint64_t v4 = 0x8000000100467510;
      unint64_t v3 = 0xD000000000000027;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xD00000000000002FLL;
  char v7 = 0x8000000100467470;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xD000000000000032;
      uint64_t v8 = "lastBackgroundRefreshPinnedSubscribedPlaylistsDate";
      goto LABEL_9;
    case 2:
      unint64_t v6 = 0xD000000000000028;
      uint64_t v8 = "forceBackgroundRefreshServerLandingPages";
LABEL_9:
      char v7 = (unint64_t)(v8 - 32) | 0x8000000000000000;
      goto LABEL_10;
    case 3:
      char v7 = 0x8000000100467510;
      if (v3 == 0xD000000000000027) {
        goto LABEL_13;
      }
      goto LABEL_15;
    default:
LABEL_10:
      if (v3 != v6) {
        goto LABEL_15;
      }
LABEL_13:
      if (v4 == v7) {
        uint64_t v9 = 1;
      }
      else {
LABEL_15:
      }
        uint64_t v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v9 & 1;
  }
}

{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;

  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    unint64_t v3 = 0xD000000000000018;
  }
  else {
    unint64_t v3 = 0xD000000000000019;
  }
  if (v2) {
    unint64_t v4 = 0x8000000100467430;
  }
  else {
    unint64_t v4 = 0x8000000100467450;
  }
  if (a2) {
    unint64_t v5 = 0xD000000000000018;
  }
  else {
    unint64_t v5 = 0xD000000000000019;
  }
  if (a2) {
    unint64_t v6 = 0x8000000100467450;
  }
  else {
    unint64_t v6 = 0x8000000100467430;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;

  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    unint64_t v3 = 0xD000000000000015;
  }
  else {
    unint64_t v3 = 0xD000000000000019;
  }
  if (v2) {
    unint64_t v4 = 0x80000001004667E0;
  }
  else {
    unint64_t v4 = 0x80000001004667C0;
  }
  if (a2) {
    unint64_t v5 = 0xD000000000000015;
  }
  else {
    unint64_t v5 = 0xD000000000000019;
  }
  if (a2) {
    unint64_t v6 = 0x80000001004667C0;
  }
  else {
    unint64_t v6 = 0x80000001004667E0;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    unint64_t v3 = 0x6D75626C61;
  }
  else {
    unint64_t v3 = 0x747369747261;
  }
  if (v2) {
    unint64_t v4 = 0xE600000000000000;
  }
  else {
    unint64_t v4 = 0xE500000000000000;
  }
  if (a2) {
    unint64_t v5 = 0x6D75626C61;
  }
  else {
    unint64_t v5 = 0x747369747261;
  }
  if (a2) {
    unint64_t v6 = 0xE500000000000000;
  }
  else {
    unint64_t v6 = 0xE600000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    unint64_t v3 = 0x676E69646E6570;
  }
  else {
    unint64_t v3 = 1852403562;
  }
  if (v2) {
    unint64_t v4 = 0xE400000000000000;
  }
  else {
    unint64_t v4 = 0xE700000000000000;
  }
  if (a2) {
    unint64_t v5 = 0x676E69646E6570;
  }
  else {
    unint64_t v5 = 1852403562;
  }
  if (a2) {
    unint64_t v6 = 0xE700000000000000;
  }
  else {
    unint64_t v6 = 0xE400000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    unint64_t v3 = 0x7473696C79616C70;
  }
  else {
    unint64_t v3 = 0x7972617262696CLL;
  }
  if (v2) {
    unint64_t v4 = 0xE700000000000000;
  }
  else {
    unint64_t v4 = 0xE800000000000000;
  }
  if (a2) {
    unint64_t v5 = 0x7473696C79616C70;
  }
  else {
    unint64_t v5 = 0x7972617262696CLL;
  }
  if (a2) {
    unint64_t v6 = 0xE800000000000000;
  }
  else {
    unint64_t v6 = 0xE700000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    unint64_t v3 = 0x7365756E6576;
  }
  else {
    unint64_t v3 = 0x652D6D617A616873;
  }
  if (v2) {
    unint64_t v4 = 0xED000073746E6576;
  }
  else {
    unint64_t v4 = 0xE600000000000000;
  }
  if (a2) {
    unint64_t v5 = 0x7365756E6576;
  }
  else {
    unint64_t v5 = 0x652D6D617A616873;
  }
  if (a2) {
    unint64_t v6 = 0xE600000000000000;
  }
  else {
    unint64_t v6 = 0xED000073746E6576;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    unint64_t v3 = 0x7365756E6576;
  }
  else {
    unint64_t v3 = 0x73747369747261;
  }
  if (v2) {
    unint64_t v4 = 0xE700000000000000;
  }
  else {
    unint64_t v4 = 0xE600000000000000;
  }
  if (a2) {
    unint64_t v5 = 0x7365756E6576;
  }
  else {
    unint64_t v5 = 0x73747369747261;
  }
  if (a2) {
    unint64_t v6 = 0xE600000000000000;
  }
  else {
    unint64_t v6 = 0xE700000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

{
  uint64_t v2;
  uint64_t v3;
  char v4;

  if (a1) {
    BOOL v2 = 1701669236;
  }
  else {
    BOOL v2 = 1701667182;
  }
  if (a2) {
    unint64_t v3 = 1701669236;
  }
  else {
    unint64_t v3 = 1701667182;
  }
  if (v2 == v3) {
    unint64_t v4 = 1;
  }
  else {
    unint64_t v4 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease_n();
  return v4 & 1;
}

uint64_t specialized == infix<A>(_:_:)(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xE900000000000064;
  uint64_t v3 = 0x657469726F766166;
  uint64_t v4 = a1;
  uint64_t v5 = 0x657469726F766166;
  unint64_t v6 = 0xE900000000000064;
  switch(v4)
  {
    case 1:
      unint64_t v6 = 0xE700000000000000;
      uint64_t v5 = 0x6C61727475656ELL;
      break;
    case 2:
      unint64_t v6 = 0xE800000000000000;
      uint64_t v5 = 0x64656B696C736964;
      break;
    case 3:
      uint64_t v5 = 0x726F707075736E75;
      unint64_t v6 = 0xEB00000000646574;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xE700000000000000;
      if (v5 == 0x6C61727475656ELL) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      unint64_t v2 = 0xE800000000000000;
      uint64_t v3 = 0x64656B696C736964;
      goto LABEL_9;
    case 3:
      unint64_t v2 = 0xEB00000000646574;
      if (v5 == 0x726F707075736E75) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v3) {
        goto LABEL_14;
      }
LABEL_12:
      if (v6 == v2) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  unint64_t v2 = 0x736D75626C61;
  uint64_t v3 = 0xE600000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x736D75626C61;
  switch(v4)
  {
    case 1:
      uint64_t v3 = 0xE700000000000000;
      uint64_t v5 = 0x73747369747261;
      break;
    case 2:
      uint64_t v5 = 0x74616C69706D6F63;
      uint64_t v3 = 0xEC000000736E6F69;
      break;
    case 3:
      uint64_t v5 = 0x59726F466564616DLL;
      uint64_t v3 = 0xEA0000000000756FLL;
      break;
    case 4:
      uint64_t v5 = 0x646956636973756DLL;
      uint64_t v3 = 0xEB00000000736F65;
      break;
    case 5:
      uint64_t v5 = 0x7473696C79616C70;
      uint64_t v3 = 0xE900000000000073;
      break;
    case 6:
      uint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x73676E6F73;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE600000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE700000000000000;
      if (v5 == 0x73747369747261) {
        goto LABEL_19;
      }
      goto LABEL_22;
    case 2:
      unint64_t v6 = 0xEC000000736E6F69;
      if (v5 != 0x74616C69706D6F63) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 3:
      unint64_t v6 = 0xEA0000000000756FLL;
      if (v5 != 0x59726F466564616DLL) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 4:
      unint64_t v6 = 0xEB00000000736F65;
      if (v5 != 0x646956636973756DLL) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 5:
      unint64_t v2 = 0x7473696C79616C70;
      unint64_t v6 = 0xE900000000000073;
      goto LABEL_18;
    case 6:
      unint64_t v6 = 0xE500000000000000;
      if (v5 != 0x73676E6F73) {
        goto LABEL_22;
      }
      goto LABEL_19;
    default:
LABEL_18:
      if (v5 != v2) {
        goto LABEL_22;
      }
LABEL_19:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_22:
      }
        char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  unint64_t v2 = 0xED0000726564724FLL;
  uint64_t v3 = 0x7473696C79616C70;
  uint64_t v4 = a1;
  uint64_t v5 = 0x7473696C79616C70;
  unint64_t v6 = 0xED0000726564724FLL;
  switch(v4)
  {
    case 1:
      unint64_t v6 = 0xE500000000000000;
      uint64_t v5 = 0x656C746974;
      break;
    case 2:
      unint64_t v6 = 0xE600000000000000;
      uint64_t v5 = 0x747369747261;
      break;
    case 3:
      unint64_t v6 = 0xE500000000000000;
      uint64_t v5 = 0x6D75626C61;
      break;
    case 4:
      uint64_t v5 = 0x44657361656C6572;
      unint64_t v6 = 0xEB00000000657461;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xE500000000000000;
      if (v5 == 0x656C746974) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      unint64_t v2 = 0xE600000000000000;
      if (v5 != 0x747369747261) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      unint64_t v2 = 0xE500000000000000;
      uint64_t v3 = 0x6D75626C61;
      goto LABEL_12;
    case 4:
      unint64_t v2 = 0xEB00000000657461;
      if (v5 != 0x44657361656C6572) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v5 != v3) {
        goto LABEL_16;
      }
LABEL_13:
      if (v6 == v2) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  unint64_t v2 = 0x7972617262696CLL;
  uint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x7972617262696CLL;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x6F4E6E657473696CLL;
      uint64_t v3 = 0xE900000000000077;
      break;
    case 2:
      uint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x6573776F7262;
      break;
    case 3:
      uint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x6F69646172;
      break;
    case 4:
      uint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x686372616573;
      break;
    case 5:
      uint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x736F65646976;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE900000000000077;
      if (v5 == 0x6F4E6E657473696CLL) {
        goto LABEL_16;
      }
      goto LABEL_19;
    case 2:
      unint64_t v6 = 0xE600000000000000;
      if (v5 != 0x6573776F7262) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 3:
      unint64_t v6 = 0xE500000000000000;
      if (v5 != 0x6F69646172) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 4:
      unint64_t v6 = 0xE600000000000000;
      unint64_t v2 = 0x686372616573;
      goto LABEL_15;
    case 5:
      unint64_t v6 = 0xE600000000000000;
      if (v5 != 0x736F65646976) {
        goto LABEL_19;
      }
      goto LABEL_16;
    default:
LABEL_15:
      if (v5 != v2) {
        goto LABEL_19;
      }
LABEL_16:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_19:
      }
        char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  char v9;

  unint64_t v2 = 0x636973756D5F796DLL;
  uint64_t v3 = 0xE800000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x636973756D5F796DLL;
  switch(v4)
  {
    case 1:
      uint64_t v3 = 0xE700000000000000;
      uint64_t v5 = 0x756F795F726F66;
      break;
    case 2:
      uint64_t v5 = 0x6E5F6E657473696CLL;
      uint64_t v3 = 0xEA0000000000776FLL;
      break;
    case 3:
      uint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x6573776F7262;
      break;
    case 4:
      uint64_t v3 = 0xE500000000000000;
      unint64_t v6 = 1768186226;
      goto LABEL_8;
    case 5:
      uint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x686372616573;
      break;
    case 6:
      uint64_t v3 = 0xE500000000000000;
      unint64_t v6 = 1701079414;
LABEL_8:
      uint64_t v5 = v6 & 0xFFFF0000FFFFFFFFLL | 0x6F00000000;
      break;
    default:
      break;
  }
  char v7 = 0xE800000000000000;
  switch(a2)
  {
    case 1:
      char v7 = 0xE700000000000000;
      if (v5 == 0x756F795F726F66) {
        goto LABEL_22;
      }
      goto LABEL_24;
    case 2:
      char v7 = 0xEA0000000000776FLL;
      if (v5 != 0x6E5F6E657473696CLL) {
        goto LABEL_24;
      }
      goto LABEL_22;
    case 3:
      char v7 = 0xE600000000000000;
      if (v5 != 0x6573776F7262) {
        goto LABEL_24;
      }
      goto LABEL_22;
    case 4:
      char v7 = 0xE500000000000000;
      uint64_t v8 = 1768186226;
      goto LABEL_21;
    case 5:
      char v7 = 0xE600000000000000;
      unint64_t v2 = 0x686372616573;
      goto LABEL_18;
    case 6:
      char v7 = 0xE500000000000000;
      uint64_t v8 = 1701079414;
LABEL_21:
      if (v5 == (v8 & 0xFFFF0000FFFFFFFFLL | 0x6F00000000)) {
        goto LABEL_22;
      }
      goto LABEL_24;
    default:
LABEL_18:
      if (v5 != v2) {
        goto LABEL_24;
      }
LABEL_22:
      if (v3 == v7) {
        uint64_t v9 = 1;
      }
      else {
LABEL_24:
      }
        uint64_t v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v9 & 1;
  }
}

{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  unint64_t v2 = 0xE900000000000064;
  uint64_t v3 = 0x6564696365646E75;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6564696365646E75;
  unint64_t v6 = 0xE900000000000064;
  switch(v4)
  {
    case 1:
      unint64_t v6 = 0xE700000000000000;
      uint64_t v5 = 0x63697373616C63;
      break;
    case 2:
      uint64_t v5 = 0x6269726373627573;
      unint64_t v6 = 0xEA00000000007265;
      break;
    case 3:
      uint64_t v5 = 0x6275536563696F76;
      unint64_t v6 = 0xEF72656269726373;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xE700000000000000;
      if (v5 == 0x63697373616C63) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      uint64_t v3 = 0x6269726373627573;
      unint64_t v2 = 0xEA00000000007265;
      goto LABEL_9;
    case 3:
      unint64_t v2 = 0xEF72656269726373;
      if (v5 == 0x6275536563696F76) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v3) {
        goto LABEL_14;
      }
LABEL_12:
      if (v6 == v2) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

{
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;

  unint64_t v2 = 0xD00000000000001ELL;
  uint64_t v3 = 0x80000001004663D0;
  uint64_t v4 = a1;
  uint64_t v5 = 0xD00000000000001ELL;
  switch(v4)
  {
    case 1:
      uint64_t v3 = 0xE700000000000000;
      uint64_t v5 = 0x6E776F6E6B6E75;
      break;
    case 2:
      uint64_t v5 = 0x6572676F72506E69;
      uint64_t v3 = 0xEA00000000007373;
      break;
    case 3:
      uint64_t v5 = 0x6574656C706D6F63;
      uint64_t v3 = 0xE900000000000064;
      break;
    default:
      break;
  }
  unint64_t v6 = 0x80000001004663D0;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE700000000000000;
      if (v5 == 0x6E776F6E6B6E75) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      unint64_t v2 = 0x6572676F72506E69;
      unint64_t v6 = 0xEA00000000007373;
      goto LABEL_9;
    case 3:
      unint64_t v6 = 0xE900000000000064;
      if (v5 == 0x6574656C706D6F63) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  unint64_t v2 = 0x6D75626C41;
  uint64_t v3 = 0xE500000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6D75626C41;
  switch(v4)
  {
    case 1:
      uint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x747369747241;
      break;
    case 2:
      uint64_t v3 = 0xE800000000000000;
      uint64_t v5 = 0x7473696C79616C50;
      break;
    case 3:
      uint64_t v5 = 0x434174726F706552;
      uint64_t v3 = 0xEE006E7265636E6FLL;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE500000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE600000000000000;
      if (v5 == 0x747369747241) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      unint64_t v6 = 0xE800000000000000;
      unint64_t v2 = 0x7473696C79616C50;
      goto LABEL_9;
    case 3:
      unint64_t v6 = 0xEE006E7265636E6FLL;
      if (v5 == 0x434174726F706552) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  unint64_t v2 = 1819047270;
  uint64_t v3 = 0xE400000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 1819047270;
  switch(v4)
  {
    case 1:
      uint64_t v3 = 0xE700000000000000;
      uint64_t v5 = 0x6C616974726170;
      break;
    case 2:
      uint64_t v5 = 0x6C6F686563616C70;
      uint64_t v3 = 0xEB00000000726564;
      break;
    case 3:
      uint64_t v5 = 0x73756F6976657270;
      uint64_t v3 = 0xEF6E776F6853796CLL;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE400000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE700000000000000;
      if (v5 == 0x6C616974726170) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      unint64_t v2 = 0x6C6F686563616C70;
      unint64_t v6 = 0xEB00000000726564;
      goto LABEL_9;
    case 3:
      unint64_t v6 = 0xEF6E776F6853796CLL;
      if (v5 == 0x73756F6976657270) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t specialized == infix<A>(_:_:)(char a1, unsigned __int8 a2)
{
  unint64_t v2 = 0xE900000000000073;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x657469726F766166;
    }
    else {
      uint64_t v3 = 0x64616F6C6E776F64;
    }
    unint64_t v4 = 0xE900000000000073;
    int v5 = a2;
    if (a2)
    {
LABEL_6:
      if (v5 == 1) {
        uint64_t v6 = 0x657469726F766166;
      }
      else {
        uint64_t v6 = 0x64616F6C6E776F64;
      }
      if (v3 != v6) {
        goto LABEL_15;
      }
      goto LABEL_13;
    }
  }
  else
  {
    unint64_t v4 = 0xE300000000000000;
    uint64_t v3 = 7105633;
    int v5 = a2;
    if (a2) {
      goto LABEL_6;
    }
  }
  unint64_t v2 = 0xE300000000000000;
  if (v3 != 7105633)
  {
LABEL_15:
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
    goto LABEL_16;
  }
LABEL_13:
  if (v4 != v2) {
    goto LABEL_15;
  }
  char v7 = 1;
LABEL_16:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t specialized == infix<A>(_:_:)(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 7105633;
    }
    else {
      uint64_t v3 = 0x6E6F6973726576;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE300000000000000;
    }
    else {
      unint64_t v4 = 0xE700000000000000;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 7105633;
      }
      else {
        uint64_t v6 = 0x6E6F6973726576;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE300000000000000;
      }
      else {
        unint64_t v7 = 0xE700000000000000;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE800000000000000;
    uint64_t v3 = 0x64657463656C6573;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE800000000000000;
  if (v3 != 0x64657463656C6573)
  {
LABEL_21:
    char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

{
  unint64_t v2;
  unint64_t v3;
  int v4;
  unint64_t v5;
  unint64_t v6;
  int v7;
  char v8;

  int v2 = 0xEE0064616F6C6E77;
  uint64_t v3 = 0x6F4465766F6D6572;
  unint64_t v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      int v5 = 0xD000000000000011;
    }
    else {
      int v5 = 0x6C65636E6163;
    }
    if (v4 == 1) {
      uint64_t v6 = 0x80000001004668E0;
    }
    else {
      uint64_t v6 = 0xE600000000000000;
    }
    unint64_t v7 = a2;
    if (!a2) {
      goto LABEL_15;
    }
    goto LABEL_9;
  }
  int v5 = 0x6F4465766F6D6572;
  uint64_t v6 = 0xEE0064616F6C6E77;
  unint64_t v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1) {
      uint64_t v3 = 0xD000000000000011;
    }
    else {
      uint64_t v3 = 0x6C65636E6163;
    }
    if (v7 == 1) {
      int v2 = 0x80000001004668E0;
    }
    else {
      int v2 = 0xE600000000000000;
    }
  }
LABEL_15:
  if (v5 == v3 && v6 == v2) {
    char v8 = 1;
  }
  else {
    char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

{
  unint64_t v2;
  unint64_t v3;
  int v4;
  unint64_t v5;
  unint64_t v6;
  int v7;
  char v8;

  int v2 = 0xD000000000000015;
  uint64_t v3 = 0x80000001004724A0;
  unint64_t v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      int v5 = 0xD000000000000014;
    }
    else {
      int v5 = 0xD000000000000015;
    }
    if (v4 == 1) {
      uint64_t v6 = 0x80000001004724C0;
    }
    else {
      uint64_t v6 = 0x80000001004724E0;
    }
    unint64_t v7 = a2;
    if (!a2) {
      goto LABEL_12;
    }
  }
  else
  {
    int v5 = 0xD000000000000015;
    uint64_t v6 = 0x80000001004724A0;
    unint64_t v7 = a2;
    if (!a2) {
      goto LABEL_12;
    }
  }
  if (v7 == 1)
  {
    int v2 = 0xD000000000000014;
    uint64_t v3 = 0x80000001004724C0;
  }
  else
  {
    uint64_t v3 = 0x80000001004724E0;
  }
LABEL_12:
  if (v5 == v2 && v6 == v3) {
    char v8 = 1;
  }
  else {
    char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x73736572646461;
    }
    else {
      uint64_t v3 = 7300455;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE700000000000000;
    }
    else {
      unint64_t v4 = 0xE300000000000000;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x73736572646461;
      }
      else {
        uint64_t v6 = 7300455;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE700000000000000;
      }
      else {
        unint64_t v7 = 0xE300000000000000;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE400000000000000;
    uint64_t v3 = 1701667182;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE400000000000000;
  if (v3 != 1701667182)
  {
LABEL_21:
    char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t LaunchURL.Resolver.option.getter()
{
  return *v0;
}

uint64_t Actions.SortPlaylist.Context.sortOption.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t Actions.SortPlaylist.Context.currentSort.getter()
{
  if (*(unsigned char *)(v0 + 2)) {
    int v1 = 256;
  }
  else {
    int v1 = 0;
  }
  return v1 | *(unsigned __int8 *)(v0 + 1);
}

uint64_t Actions.SortPlaylist.Context.currentSort.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 1) = result;
  *(unsigned char *)(v1 + 2) = BYTE1(result) & 1;
  return result;
}

CFRange (__swiftcall *Actions.SortPlaylist.Context.currentSort.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

uint64_t Actions.SortPlaylist.Context.playlistVariant.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for Actions.SortPlaylist.Context() + 24);

  return outlined init with copy of Playlist.Variant?(v3, a1);
}

uint64_t type metadata accessor for Actions.SortPlaylist.Context()
{
  uint64_t result = type metadata singleton initialization cache for Actions.SortPlaylist.Context;
  if (!type metadata singleton initialization cache for Actions.SortPlaylist.Context) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t outlined init with copy of Playlist.Variant?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Playlist.Variant?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t Actions.SortPlaylist.Context.playlistVariant.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for Actions.SortPlaylist.Context() + 24);

  return outlined assign with take of Playlist.Variant?(a1, v3);
}

uint64_t outlined assign with take of Playlist.Variant?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Playlist.Variant?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

CFRange (__swiftcall *Actions.SortPlaylist.Context.playlistVariant.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

uint64_t Actions.SortPlaylist.Context.didSelectSort.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for Actions.SortPlaylist.Context() + 28));
  swift_retain();
  return v1;
}

uint64_t Actions.SortPlaylist.Context.didSelectSort.setter(uint64_t a1, uint64_t a2)
{
  int v5 = (void *)(v2 + *(int *)(type metadata accessor for Actions.SortPlaylist.Context() + 28));
  uint64_t result = swift_release();
  *int v5 = a1;
  v5[1] = a2;
  return result;
}

CFRange (__swiftcall *Actions.SortPlaylist.Context.didSelectSort.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

uint64_t Actions.SortPlaylist.Context.init(sortOption:currentSort:playlistVariant:didSelectSort:)@<X0>(char a1@<W0>, __int16 a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, unsigned char *a6@<X8>)
{
  uint64_t v12 = type metadata accessor for Actions.SortPlaylist.Context();
  uint64_t v13 = (uint64_t)&a6[*(int *)(v12 + 24)];
  uint64_t v14 = type metadata accessor for Playlist.Variant();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
  *a6 = a1;
  a6[1] = a2;
  a6[2] = HIBYTE(a2) & 1;
  uint64_t result = outlined assign with take of Playlist.Variant?(a3, v13);
  uint64_t v16 = &a6[*(int *)(v12 + 28)];
  *uint64_t v16 = a4;
  v16[1] = a5;
  return result;
}

uint64_t static Actions.SortPlaylist.action(context:)@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for Actions.SortPlaylist.Context();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = __chkstk_darwin(v4 - 8);
  char v8 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v19 - v9;
  outlined init with copy of Actions.SortPlaylist.Context((uint64_t)a1, (uint64_t)&v19 - v9);
  unint64_t v11 = 0x1A18191B1CuLL >> (8 * *a1);
  outlined init with copy of Actions.SortPlaylist.Context((uint64_t)a1, (uint64_t)v8);
  unint64_t v12 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v13 = swift_allocObject();
  outlined init with take of Actions.SortPlaylist.Context((uint64_t)v8, v13 + v12);
  uint64_t v14 = (int *)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Action<Actions.SortPlaylist.Context, ActionType, ()>);
  *(unsigned char *)(a2 + v14[13]) = v11;
  uint64_t result = outlined init with take of Actions.SortPlaylist.Context((uint64_t)v10, a2);
  *(void *)(a2 + v14[15]) = 0x4014000000000000;
  uint64_t v16 = (uint64_t (**)())(a2 + v14[14]);
  *uint64_t v16 = variable initialization expression of _NSRange.NSRangeIterator.current;
  v16[1] = 0;
  uint64_t v17 = (void *)(a2 + v14[16]);
  void *v17 = &async function pointer to partial apply for closure #2 in static Actions.SortPlaylist.action(context:);
  v17[1] = v13;
  uint64_t v18 = (void *)(a2 + v14[17]);
  *uint64_t v18 = &async function pointer to closure #3 in static Actions.SortPlaylist.action(context:);
  v18[1] = 0;
  return result;
}

uint64_t outlined init with copy of Actions.SortPlaylist.Context(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Actions.SortPlaylist.Context();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t closure #2 in static Actions.SortPlaylist.action(context:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 16) = a3;
  return _swift_task_switch(closure #2 in static Actions.SortPlaylist.action(context:), 0, 0);
}

uint64_t closure #2 in static Actions.SortPlaylist.action(context:)()
{
  uint64_t v1 = *(unsigned __int8 **)(v0 + 16);
  unsigned int v2 = *v1;
  *(unsigned char *)(v0 + 52) = v2;
  if (specialized == infix<A>(_:_:)(v2, v1[1]))
  {
    __int16 v3 = 0;
    uint64_t v4 = *(void *)(v0 + 16);
    char v5 = *(unsigned char *)(v4 + 2);
    __int16 v6 = 256;
  }
  else
  {
    __int16 v6 = 0;
    char v5 = v2 < 4;
    uint64_t v4 = *(void *)(v0 + 16);
    __int16 v3 = 256;
  }
  *(unsigned char *)(v0 + 53) = v5;
  *(_WORD *)(v0 + 50) = v3;
  *(_WORD *)(v0 + 48) = v6;
  uint64_t v7 = (void *)(v4 + *(int *)(type metadata accessor for Actions.SortPlaylist.Context() + 28));
  *(void *)(v0 + 24) = *v7;
  *(void *)(v0 + 32) = v7[1];
  type metadata accessor for MainActor();
  *(void *)(v0 + 40) = static MainActor.shared.getter();
  uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(closure #2 in static Actions.SortPlaylist.action(context:), v9, v8);
}

{
  uint64_t v0;
  void (*v1)(void);
  unsigned int v2;
  unsigned __int16 *v3;
  int v4;
  uint64_t (*v5)(void);
  uint64_t v7;

  uint64_t v1 = *(void (**)(void))(v0 + 24);
  unsigned int v2 = *(unsigned __int8 *)(v0 + 52);
  if (*(unsigned char *)(v0 + 53)) {
    __int16 v3 = (unsigned __int16 *)(v0 + 50);
  }
  else {
    __int16 v3 = (unsigned __int16 *)(v0 + 48);
  }
  uint64_t v4 = *v3;
  swift_release();
  v1(v4 | v2);
  char v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_1000369C8()
{
  uint64_t v1 = type metadata accessor for Actions.SortPlaylist.Context();
  unint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80))
     + *(int *)(v1 + 24);
  uint64_t v3 = type metadata accessor for Playlist.Variant();
  uint64_t v4 = *(void *)(v3 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3)) {
    (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v2, v3);
  }
  swift_release();

  return swift_deallocObject();
}

uint64_t outlined init with take of Actions.SortPlaylist.Context(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Actions.SortPlaylist.Context();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t partial apply for closure #2 in static Actions.SortPlaylist.action(context:)()
{
  uint64_t v2 = *(void *)(type metadata accessor for Actions.SortPlaylist.Context() - 8);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = partial apply for closure #1 in static MusicEngagementExtension.performRequest(with:completion:);
  v4[2] = v3;
  return _swift_task_switch(closure #2 in static Actions.SortPlaylist.action(context:), 0, 0);
}

uint64_t Actions.SortPlaylist.TrackListSort.init(option:isAscending:)(unsigned __int8 a1, char a2)
{
  if (a2) {
    int v2 = 256;
  }
  else {
    int v2 = 0;
  }
  return v2 & 0xFFFFFF00 | a1;
}

uint64_t Actions.SortPlaylist.Context.menuItemTitle.getter()
{
  char v1 = *v0;
  uint64_t v2 = (uint64_t)&v0[*(int *)(type metadata accessor for Actions.SortPlaylist.Context() + 24)];

  return Actions.SortPlaylist.TrackListSort.Option.localizedName(playlistVariant:)(v2, v1);
}

uint64_t Actions.SortPlaylist.TrackListSort.Option.localizedName(playlistVariant:)(uint64_t a1, char a2)
{
  uint64_t v32 = a1;
  uint64_t v3 = type metadata accessor for Locale();
  __chkstk_darwin(v3 - 8);
  uint64_t v35 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for String.LocalizationValue();
  uint64_t v33 = *(void *)(v5 - 8);
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v34 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v31 - v8;
  uint64_t v10 = type metadata accessor for Playlist.Variant();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Playlist.Variant?, Playlist.Variant?));
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Playlist.Variant?);
  uint64_t v18 = __chkstk_darwin(v17 - 8);
  os_log_type_t v20 = (char *)&v31 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v31 - v21;
  switch(a2)
  {
    case 1:
    case 2:
    case 3:
    case 4:
      String.LocalizationValue.init(stringLiteral:)();
      uint64_t v26 = v33;
      goto LABEL_11;
    default:
      uint64_t v31 = v5;
      (*(void (**)(char *, void, uint64_t))(v11 + 104))((char *)&v31 - v21, enum case for Playlist.Variant.favoriteSongs(_:), v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v22, 0, 1, v10);
      uint64_t v23 = (uint64_t)&v16[*(int *)(v14 + 48)];
      outlined init with copy of Playlist.Variant?(v32, (uint64_t)v16);
      outlined init with copy of Playlist.Variant?((uint64_t)v22, v23);
      uint64_t v24 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
      if (v24((uint64_t)v16, 1, v10) == 1)
      {
        outlined destroy of TaskPriority?((uint64_t)v22, &demangling cache variable for type metadata for Playlist.Variant?);
        int v25 = v24(v23, 1, v10);
        uint64_t v5 = v31;
        if (v25 == 1)
        {
          outlined destroy of TaskPriority?((uint64_t)v16, &demangling cache variable for type metadata for Playlist.Variant?);
          uint64_t v26 = v33;
          goto LABEL_10;
        }
        goto LABEL_8;
      }
      outlined init with copy of Playlist.Variant?((uint64_t)v16, (uint64_t)v20);
      if (v24(v23, 1, v10) == 1)
      {
        outlined destroy of TaskPriority?((uint64_t)v22, &demangling cache variable for type metadata for Playlist.Variant?);
        (*(void (**)(char *, uint64_t))(v11 + 8))(v20, v10);
        uint64_t v5 = v31;
LABEL_8:
        outlined destroy of TaskPriority?((uint64_t)v16, &demangling cache variable for type metadata for (Playlist.Variant?, Playlist.Variant?));
        uint64_t v26 = v33;
        goto LABEL_10;
      }
      (*(void (**)(char *, uint64_t, uint64_t))(v11 + 32))(v13, v23, v10);
      lazy protocol witness table accessor for type Playlist.Variant and conformance Playlist.Variant();
      dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v27 = *(void (**)(char *, uint64_t))(v11 + 8);
      v27(v13, v10);
      outlined destroy of TaskPriority?((uint64_t)v22, &demangling cache variable for type metadata for Playlist.Variant?);
      v27(v20, v10);
      outlined destroy of TaskPriority?((uint64_t)v16, &demangling cache variable for type metadata for Playlist.Variant?);
      uint64_t v5 = v31;
      uint64_t v26 = v33;
LABEL_10:
      String.LocalizationValue.init(stringLiteral:)();
LABEL_11:
      (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v34, v9, v5);
      if (one-time initialization token for module != -1) {
        swift_once();
      }
      id v28 = (id)static NSBundle.module;
      static Locale.current.getter();
      uint64_t v29 = String.init(localized:table:bundle:locale:comment:)();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v9, v5);
      return v29;
  }
}

uint64_t (*Actions.SortPlaylist.Context.menuItemImage.getter())()
{
  unint64_t v1 = 0xED0000726564724FLL;
  uint64_t v2 = 0x7473696C79616C70;
  uint64_t v3 = 0x7473696C79616C70;
  unint64_t v4 = 0xED0000726564724FLL;
  switch(v0[1])
  {
    case 1:
      unint64_t v4 = 0xE500000000000000;
      uint64_t v3 = 0x656C746974;
      break;
    case 2:
      unint64_t v4 = 0xE600000000000000;
      uint64_t v3 = 0x747369747261;
      break;
    case 3:
      unint64_t v4 = 0xE500000000000000;
      uint64_t v3 = 0x6D75626C61;
      break;
    case 4:
      uint64_t v3 = 0x44657361656C6572;
      unint64_t v4 = 0xEB00000000657461;
      break;
    default:
      break;
  }
  switch(*v0)
  {
    case 1:
      unint64_t v1 = 0xE500000000000000;
      if (v3 == 0x656C746974) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      unint64_t v1 = 0xE600000000000000;
      if (v3 != 0x747369747261) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      unint64_t v1 = 0xE500000000000000;
      uint64_t v2 = 0x6D75626C61;
      goto LABEL_12;
    case 4:
      unint64_t v1 = 0xEB00000000657461;
      if (v3 != 0x44657361656C6572) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v3 != v2) {
        goto LABEL_16;
      }
LABEL_13:
      if (v4 == v1)
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_17;
      }
LABEL_16:
      char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v5)
      {
LABEL_17:
        id v6 = [self configurationWithScale:1];
        if (v0[2] == 1)
        {
          NSString v7 = String._bridgeToObjectiveC()();
          id v8 = [self systemImageNamed:v7];

          if (v8) {
            goto LABEL_21;
          }
        }
        else
        {
          NSString v9 = String._bridgeToObjectiveC()();
          id v8 = [self systemImageNamed:v9];

          if (v8)
          {
LABEL_21:
            id v10 = [v8 imageWithConfiguration:v6];

LABEL_23:
            uint64_t v11 = swift_allocObject();
            *(void *)(v11 + 16) = v10;
            uint64_t v12 = swift_allocObject();
            *(void *)(v12 + 16) = Artwork.Placeholder.image.getter;
            *(void *)(v12 + 24) = v11;
            swift_retain();
            return partial apply for closure #1 in ActionMenuItemImage.init(uiImage:);
          }
        }

        id v10 = 0;
        goto LABEL_23;
      }
      return 0;
  }
}

uint64_t Actions.SortPlaylist.Context.menuItemState.getter()
{
  unint64_t v1 = 0xED0000726564724FLL;
  uint64_t v2 = 0x7473696C79616C70;
  uint64_t v3 = v0[1];
  uint64_t v4 = *v0;
  uint64_t v5 = 0x7473696C79616C70;
  unint64_t v6 = 0xED0000726564724FLL;
  switch(v3)
  {
    case 1:
      unint64_t v6 = 0xE500000000000000;
      uint64_t v5 = 0x656C746974;
      break;
    case 2:
      unint64_t v6 = 0xE600000000000000;
      uint64_t v5 = 0x747369747261;
      break;
    case 3:
      unint64_t v6 = 0xE500000000000000;
      uint64_t v5 = 0x6D75626C61;
      break;
    case 4:
      uint64_t v5 = 0x44657361656C6572;
      unint64_t v6 = 0xEB00000000657461;
      break;
    default:
      break;
  }
  switch(v4)
  {
    case 1:
      unint64_t v1 = 0xE500000000000000;
      if (v5 == 0x656C746974) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      unint64_t v1 = 0xE600000000000000;
      if (v5 != 0x747369747261) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      unint64_t v1 = 0xE500000000000000;
      uint64_t v2 = 0x6D75626C61;
      goto LABEL_12;
    case 4:
      unint64_t v1 = 0xEB00000000657461;
      if (v5 != 0x44657361656C6572) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v5 != v2) {
        goto LABEL_16;
      }
LABEL_13:
      if (v6 == v1)
      {
        swift_bridgeObjectRelease_n();
        return 1;
      }
      else
      {
LABEL_16:
        char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v8 & 1;
      }
  }
}

uint64_t protocol witness for ActionMenuItemConfiguring.menuItemTitle.getter in conformance Actions.SortPlaylist.Context(uint64_t a1)
{
  return Actions.SortPlaylist.TrackListSort.Option.localizedName(playlistVariant:)((uint64_t)&v1[*(int *)(a1 + 24)], *v1);
}

uint64_t protocol witness for ActionMenuItemConfiguring.menuItemState.getter in conformance Actions.SortPlaylist.Context()
{
  return specialized == infix<A>(_:_:)(*(unsigned char *)(v0 + 1), *(unsigned char *)v0) & 1;
}

uint64_t Actions.SortPlaylist.TrackListSort.isAscending.getter(unsigned int a1)
{
  return (a1 >> 8) & 1;
}

uint64_t Actions.SortPlaylist.TrackListSort.isAscending.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 1) = result;
  return result;
}

_UNKNOWN **static Actions.SortPlaylist.TrackListSort.Option.allCases.getter()
{
  return &outlined read-only object #0 of static Actions.SortPlaylist.TrackListSort.Option.allCases.getter;
}

uint64_t Actions.SortPlaylist.TrackListSort.Option.rawValue.getter(char a1)
{
  uint64_t result = 0x7473696C79616C70;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x656C746974;
      break;
    case 2:
      uint64_t result = 0x747369747261;
      break;
    case 3:
      uint64_t result = 0x6D75626C61;
      break;
    case 4:
      uint64_t result = 0x44657361656C6572;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance Actions.SortPlaylist.TrackListSort.Option(unsigned __int8 *a1, char *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2) & 1;
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance Actions.SortPlaylist.TrackListSort.Option()
{
  return Hasher._finalize()();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance Actions.SortPlaylist.TrackListSort.Option()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance Actions.SortPlaylist.TrackListSort.Option()
{
  return Hasher._finalize()();
}

unint64_t protocol witness for RawRepresentable.init(rawValue:) in conformance Actions.SortPlaylist.TrackListSort.Option@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = specialized Actions.SortPlaylist.TrackListSort.Option.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance Actions.SortPlaylist.TrackListSort.Option(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xED0000726564724FLL;
  uint64_t v3 = 0x7473696C79616C70;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE500000000000000;
      uint64_t v3 = 0x656C746974;
      goto LABEL_3;
    case 2:
      *a1 = 0x747369747261;
      a1[1] = 0xE600000000000000;
      break;
    case 3:
      *a1 = 0x6D75626C61;
      a1[1] = 0xE500000000000000;
      break;
    case 4:
      *a1 = 0x44657361656C6572;
      a1[1] = 0xEB00000000657461;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t protocol witness for Decodable.init(from:) in conformance Actions.SortPlaylist.TrackListSort.Option()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t protocol witness for Encodable.encode(to:) in conformance Actions.SortPlaylist.TrackListSort.Option()
{
  return RawRepresentable<>.encode(to:)();
}

void protocol witness for static CaseIterable.allCases.getter in conformance Actions.SortPlaylist.TrackListSort.Option(void *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of protocol witness for static CaseIterable.allCases.getter in conformance Actions.SortPlaylist.TrackListSort.Option;
}

void Actions.SortPlaylist.TrackListSort.hash(into:)(uint64_t a1, __int16 a2)
{
  char v2 = HIBYTE(a2);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Hasher._combine(_:)(v2 & 1);
}

uint64_t static Actions.SortPlaylist.TrackListSort.__derived_struct_equals(_:_:)(__int16 a1, __int16 a2)
{
  unint64_t v4 = 0xED0000726564724FLL;
  uint64_t v5 = 0x7473696C79616C70;
  uint64_t v6 = a1;
  uint64_t v7 = 0x7473696C79616C70;
  unint64_t v8 = 0xED0000726564724FLL;
  switch(v6)
  {
    case 1:
      unint64_t v8 = 0xE500000000000000;
      uint64_t v7 = 0x656C746974;
      break;
    case 2:
      unint64_t v8 = 0xE600000000000000;
      uint64_t v7 = 0x747369747261;
      break;
    case 3:
      unint64_t v8 = 0xE500000000000000;
      uint64_t v7 = 0x6D75626C61;
      break;
    case 4:
      uint64_t v7 = 0x44657361656C6572;
      unint64_t v8 = 0xEB00000000657461;
      break;
    default:
      break;
  }
  switch((char)a2)
  {
    case 1:
      unint64_t v4 = 0xE500000000000000;
      if (v7 == 0x656C746974) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      unint64_t v4 = 0xE600000000000000;
      if (v7 != 0x747369747261) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      unint64_t v4 = 0xE500000000000000;
      uint64_t v5 = 0x6D75626C61;
      goto LABEL_12;
    case 4:
      unint64_t v4 = 0xEB00000000657461;
      if (v7 != 0x44657361656C6572) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v7 != v5) {
        goto LABEL_16;
      }
LABEL_13:
      if (v8 == v4)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
LABEL_16:
        char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t result = 0;
        if ((v9 & 1) == 0) {
          return result;
        }
      }
      return ((a1 & 0x100) == 0) ^ ((unsigned __int16)(a2 & 0x100) >> 8);
  }
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance Actions.SortPlaylist.TrackListSort.CodingKeys()
{
  if (*v0) {
    return 0x646E656373417369;
  }
  else {
    return 0x6E6F6974706FLL;
  }
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance Actions.SortPlaylist.TrackListSort.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = specialized Actions.SortPlaylist.TrackListSort.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance Actions.SortPlaylist.TrackListSort.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type Actions.SortPlaylist.TrackListSort.CodingKeys and conformance Actions.SortPlaylist.TrackListSort.CodingKeys();

  return CodingKey.description.getter(a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance Actions.SortPlaylist.TrackListSort.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type Actions.SortPlaylist.TrackListSort.CodingKeys and conformance Actions.SortPlaylist.TrackListSort.CodingKeys();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t Actions.SortPlaylist.TrackListSort.encode(to:)(void *a1, char a2)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<Actions.SortPlaylist.TrackListSort.CodingKeys>);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  unint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_0Tm(a1, a1[3]);
  lazy protocol witness table accessor for type Actions.SortPlaylist.TrackListSort.CodingKeys and conformance Actions.SortPlaylist.TrackListSort.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  v10[15] = a2;
  v10[14] = 0;
  lazy protocol witness table accessor for type Actions.SortPlaylist.TrackListSort.Option and conformance Actions.SortPlaylist.TrackListSort.Option();
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v2)
  {
    v10[13] = 1;
    KeyedEncodingContainer.encode(_:forKey:)();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

Swift::Int Actions.SortPlaylist.TrackListSort.hashValue.getter(__int16 a1)
{
  char v1 = HIBYTE(a1);
  Hasher.init(_seed:)();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Hasher._combine(_:)(v1 & 1);
  return Hasher._finalize()();
}

uint64_t Actions.SortPlaylist.TrackListSort.init(from:)(void *a1)
{
  return specialized Actions.SortPlaylist.TrackListSort.init(from:)(a1) & 0x1FF;
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance Actions.SortPlaylist.TrackListSort()
{
  if (v0[1]) {
    __int16 v1 = 256;
  }
  else {
    __int16 v1 = 0;
  }
  return Actions.SortPlaylist.TrackListSort.hashValue.getter(v1 | *v0);
}

void protocol witness for Hashable.hash(into:) in conformance Actions.SortPlaylist.TrackListSort()
{
  Swift::UInt8 v1 = *(unsigned char *)(v0 + 1);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Hasher._combine(_:)(v1);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance Actions.SortPlaylist.TrackListSort()
{
  Swift::UInt8 v1 = *(unsigned char *)(v0 + 1);
  Hasher.init(_seed:)();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

uint64_t protocol witness for Decodable.init(from:) in conformance Actions.SortPlaylist.TrackListSort@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = specialized Actions.SortPlaylist.TrackListSort.init(from:)(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = BYTE1(result) & 1;
  }
  return result;
}

uint64_t protocol witness for Encodable.encode(to:) in conformance Actions.SortPlaylist.TrackListSort(void *a1)
{
  return Actions.SortPlaylist.TrackListSort.encode(to:)(a1, *v1);
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance Actions.SortPlaylist.TrackListSort(unsigned __int8 *a1, uint64_t a2)
{
  int v2 = a1[1];
  int v3 = *(unsigned __int8 *)(a2 + 1);
  return specialized == infix<A>(_:_:)(*a1, *(unsigned char *)a2) & ~(v2 ^ v3) & 1;
}

uint64_t sub_100038730()
{
  return swift_deallocObject();
}

void *Artwork.Placeholder.image.getter()
{
  Swift::UInt8 v1 = *(void **)(v0 + 16);
  id v2 = v1;
  return v1;
}

uint64_t sub_100038790()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in ActionMenuItemImage.init(uiImage:)()
{
  return closure #1 in ActionMenuItemImage.init(uiImage:)(*(uint64_t (**)(void))(v0 + 16));
}

unint64_t specialized Actions.SortPlaylist.TrackListSort.Option.init(rawValue:)(Swift::String string)
{
  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of Actions.SortPlaylist.TrackListSort.Option.init(rawValue:), v2);
  swift_bridgeObjectRelease();
  if (v3 >= 5) {
    return 5;
  }
  else {
    return v3;
  }
}

unint64_t lazy protocol witness table accessor for type Actions.SortPlaylist.TrackListSort.CodingKeys and conformance Actions.SortPlaylist.TrackListSort.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type Actions.SortPlaylist.TrackListSort.CodingKeys and conformance Actions.SortPlaylist.TrackListSort.CodingKeys;
  if (!lazy protocol witness table cache variable for type Actions.SortPlaylist.TrackListSort.CodingKeys and conformance Actions.SortPlaylist.TrackListSort.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Actions.SortPlaylist.TrackListSort.CodingKeys and conformance Actions.SortPlaylist.TrackListSort.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type Actions.SortPlaylist.TrackListSort.CodingKeys and conformance Actions.SortPlaylist.TrackListSort.CodingKeys;
  if (!lazy protocol witness table cache variable for type Actions.SortPlaylist.TrackListSort.CodingKeys and conformance Actions.SortPlaylist.TrackListSort.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Actions.SortPlaylist.TrackListSort.CodingKeys and conformance Actions.SortPlaylist.TrackListSort.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type Actions.SortPlaylist.TrackListSort.CodingKeys and conformance Actions.SortPlaylist.TrackListSort.CodingKeys;
  if (!lazy protocol witness table cache variable for type Actions.SortPlaylist.TrackListSort.CodingKeys and conformance Actions.SortPlaylist.TrackListSort.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Actions.SortPlaylist.TrackListSort.CodingKeys and conformance Actions.SortPlaylist.TrackListSort.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type Actions.SortPlaylist.TrackListSort.CodingKeys and conformance Actions.SortPlaylist.TrackListSort.CodingKeys;
  if (!lazy protocol witness table cache variable for type Actions.SortPlaylist.TrackListSort.CodingKeys and conformance Actions.SortPlaylist.TrackListSort.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Actions.SortPlaylist.TrackListSort.CodingKeys and conformance Actions.SortPlaylist.TrackListSort.CodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type Actions.SortPlaylist.TrackListSort.Option and conformance Actions.SortPlaylist.TrackListSort.Option()
{
  unint64_t result = lazy protocol witness table cache variable for type Actions.SortPlaylist.TrackListSort.Option and conformance Actions.SortPlaylist.TrackListSort.Option;
  if (!lazy protocol witness table cache variable for type Actions.SortPlaylist.TrackListSort.Option and conformance Actions.SortPlaylist.TrackListSort.Option)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Actions.SortPlaylist.TrackListSort.Option and conformance Actions.SortPlaylist.TrackListSort.Option);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type Actions.SortPlaylist.TrackListSort.Option and conformance Actions.SortPlaylist.TrackListSort.Option;
  if (!lazy protocol witness table cache variable for type Actions.SortPlaylist.TrackListSort.Option and conformance Actions.SortPlaylist.TrackListSort.Option)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Actions.SortPlaylist.TrackListSort.Option and conformance Actions.SortPlaylist.TrackListSort.Option);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type Actions.SortPlaylist.TrackListSort.Option and conformance Actions.SortPlaylist.TrackListSort.Option;
  if (!lazy protocol witness table cache variable for type Actions.SortPlaylist.TrackListSort.Option and conformance Actions.SortPlaylist.TrackListSort.Option)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Actions.SortPlaylist.TrackListSort.Option and conformance Actions.SortPlaylist.TrackListSort.Option);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type Actions.SortPlaylist.TrackListSort.Option and conformance Actions.SortPlaylist.TrackListSort.Option;
  if (!lazy protocol witness table cache variable for type Actions.SortPlaylist.TrackListSort.Option and conformance Actions.SortPlaylist.TrackListSort.Option)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Actions.SortPlaylist.TrackListSort.Option and conformance Actions.SortPlaylist.TrackListSort.Option);
  }
  return result;
}

uint64_t specialized Actions.SortPlaylist.TrackListSort.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E6F6974706FLL && a2 == 0xE600000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x646E656373417369 && a2 == 0xEB00000000676E69)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t specialized Actions.SortPlaylist.TrackListSort.init(from:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<Actions.SortPlaylist.TrackListSort.CodingKeys>);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v6 = &v11[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_0Tm(a1, a1[3]);
  lazy protocol witness table accessor for type Actions.SortPlaylist.TrackListSort.CodingKeys and conformance Actions.SortPlaylist.TrackListSort.CodingKeys();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v1) {
    return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  }
  v11[14] = 0;
  lazy protocol witness table accessor for type Actions.SortPlaylist.TrackListSort.Option and conformance Actions.SortPlaylist.TrackListSort.Option();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  unsigned int v7 = v11[15];
  v11[13] = 1;
  char v8 = KeyedDecodingContainer.decode(_:forKey:)();
  (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  if (v8) {
    int v10 = 256;
  }
  else {
    int v10 = 0;
  }
  return v10 | v7;
}

unint64_t lazy protocol witness table accessor for type [Actions.SortPlaylist.TrackListSort.Option] and conformance [A]()
{
  unint64_t result = lazy protocol witness table cache variable for type [Actions.SortPlaylist.TrackListSort.Option] and conformance [A];
  if (!lazy protocol witness table cache variable for type [Actions.SortPlaylist.TrackListSort.Option] and conformance [A])
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [Actions.SortPlaylist.TrackListSort.Option]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type [Actions.SortPlaylist.TrackListSort.Option] and conformance [A]);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type Actions.SortPlaylist.TrackListSort and conformance Actions.SortPlaylist.TrackListSort()
{
  unint64_t result = lazy protocol witness table cache variable for type Actions.SortPlaylist.TrackListSort and conformance Actions.SortPlaylist.TrackListSort;
  if (!lazy protocol witness table cache variable for type Actions.SortPlaylist.TrackListSort and conformance Actions.SortPlaylist.TrackListSort)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Actions.SortPlaylist.TrackListSort and conformance Actions.SortPlaylist.TrackListSort);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type Actions.SortPlaylist.TrackListSort and conformance Actions.SortPlaylist.TrackListSort;
  if (!lazy protocol witness table cache variable for type Actions.SortPlaylist.TrackListSort and conformance Actions.SortPlaylist.TrackListSort)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Actions.SortPlaylist.TrackListSort and conformance Actions.SortPlaylist.TrackListSort);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type Actions.SortPlaylist.TrackListSort and conformance Actions.SortPlaylist.TrackListSort;
  if (!lazy protocol witness table cache variable for type Actions.SortPlaylist.TrackListSort and conformance Actions.SortPlaylist.TrackListSort)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Actions.SortPlaylist.TrackListSort and conformance Actions.SortPlaylist.TrackListSort);
  }
  return result;
}

ValueMetadata *type metadata accessor for Actions.SortPlaylist()
{
  return &type metadata for Actions.SortPlaylist;
}

void *initializeBufferWithCopyOfBuffer for Actions.SortPlaylist.Context(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    *(_WORD *)(a1 + 1) = *(_WORD *)((char *)a2 + 1);
    uint64_t v7 = *(int *)(a3 + 24);
    char v8 = (void *)(a1 + v7);
    char v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for Playlist.Variant();
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Playlist.Variant?);
      memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    uint64_t v14 = *(int *)(a3 + 28);
    uint64_t v15 = (void *)((char *)v4 + v14);
    uint64_t v16 = (uint64_t *)((char *)a2 + v14);
    uint64_t v17 = v16[1];
    void *v15 = *v16;
    v15[1] = v17;
  }
  swift_retain();
  return v4;
}

uint64_t destroy for Actions.SortPlaylist.Context(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 24);
  uint64_t v3 = type metadata accessor for Playlist.Variant();
  uint64_t v4 = *(void *)(v3 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3)) {
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  }

  return swift_release();
}

uint64_t initializeWithCopy for Actions.SortPlaylist.Context(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (void *)(a1 + v6);
  char v8 = (const void *)(a2 + v6);
  uint64_t v9 = type metadata accessor for Playlist.Variant();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Playlist.Variant?);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = *(int *)(a3 + 28);
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  uint64_t v15 = v14[1];
  *uint64_t v13 = *v14;
  v13[1] = v15;
  swift_retain();
  return a1;
}

unsigned char *assignWithCopy for Actions.SortPlaylist.Context(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = &a1[v6];
  char v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for Playlist.Variant();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Playlist.Variant?);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  uint64_t v15 = *(int *)(a3 + 28);
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  uint64_t v18 = v17[1];
  *uint64_t v16 = *v17;
  v16[1] = v18;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t initializeWithTake for Actions.SortPlaylist.Context(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (void *)(a1 + v6);
  char v8 = (const void *)(a2 + v6);
  uint64_t v9 = type metadata accessor for Playlist.Variant();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Playlist.Variant?);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  *(_OWORD *)(a1 + *(int *)(a3 + 28)) = *(_OWORD *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t assignWithTake for Actions.SortPlaylist.Context(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (void *)(a1 + v6);
  char v8 = (void *)(a2 + v6);
  uint64_t v9 = type metadata accessor for Playlist.Variant();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 40))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Playlist.Variant?);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 32))(v7, v8, v9);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  *(_OWORD *)(a1 + *(int *)(a3 + 28)) = *(_OWORD *)(a2 + *(int *)(a3 + 28));
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for Actions.SortPlaylist.Context(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100039510);
}

uint64_t sub_100039510(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Playlist.Variant?);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 24);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 28));
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for Actions.SortPlaylist.Context(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000395EC);
}

uint64_t sub_1000395EC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Playlist.Variant?);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 24);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
  }
  return result;
}

void type metadata completion function for Actions.SortPlaylist.Context()
{
  type metadata accessor for Playlist.Variant?();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void type metadata accessor for Playlist.Variant?()
{
  if (!lazy cache variable for type metadata for Playlist.Variant?)
  {
    type metadata accessor for Playlist.Variant();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for Playlist.Variant?);
    }
  }
}

_WORD *__swift_memcpy2_1(_WORD *result, _WORD *a2)
{
  *uint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for Actions.SortPlaylist.TrackListSort(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 65281 <= 0xFFFEFFFF) {
    int v2 = 2;
  }
  else {
    int v2 = 4;
  }
  if (a2 + 65281 < 0xFF0000) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 16)) - 65281;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 16)) - 65281;
    }
    int v4 = *((unsigned __int8 *)a1 + 2);
    if (*((unsigned char *)a1 + 2)) {
      return (*a1 | (v4 << 16)) - 65281;
    }
  }
LABEL_17:
  unsigned int v6 = *((unsigned __int8 *)a1 + 1);
  BOOL v7 = v6 >= 2;
  int v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for Actions.SortPlaylist.TrackListSort(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 65281 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 65281 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 16) + 1;
    *(_WORD *)uint64_t result = a2 - 255;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100039930);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *(unsigned char *)(result + 1) = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Actions.SortPlaylist.TrackListSort()
{
  return &type metadata for Actions.SortPlaylist.TrackListSort;
}

uint64_t getEnumTagSinglePayload for Actions.SortPlaylist.TrackListSort.Option(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for Actions.SortPlaylist.TrackListSort.Option(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100039AC4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Actions.SortPlaylist.TrackListSort.Option()
{
  return &type metadata for Actions.SortPlaylist.TrackListSort.Option;
}

unsigned char *storeEnumTagSinglePayload for Actions.SortPlaylist.TrackListSort.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100039BC8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

void *type metadata accessor for Actions.SortPlaylist.TrackListSort.CodingKeys()
{
  return &unk_100527860;
}

unint64_t lazy protocol witness table accessor for type Playlist.Variant and conformance Playlist.Variant()
{
  unint64_t result = lazy protocol witness table cache variable for type Playlist.Variant and conformance Playlist.Variant;
  if (!lazy protocol witness table cache variable for type Playlist.Variant and conformance Playlist.Variant)
  {
    type metadata accessor for Playlist.Variant();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Playlist.Variant and conformance Playlist.Variant);
  }
  return result;
}

uint64_t Action.init(_:id:waitLogInterval:supportedStatus:perform:finish:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, uint64_t a11, uint64_t a12)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a11 - 8) + 32))(a9, a1, a11);
  uint64_t v19 = (int *)type metadata accessor for Action();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a12 - 8) + 32))(a9 + v19[13], a2, a12);
  *(double *)(a9 + v19[15]) = a10;
  uint64_t v21 = (void *)(a9 + v19[14]);
  void *v21 = a3;
  v21[1] = a4;
  uint64_t v22 = (void *)(a9 + v19[16]);
  void *v22 = a5;
  v22[1] = a6;
  uint64_t v23 = (void *)(a9 + v19[17]);
  void *v23 = a7;
  v23[1] = a8;
  return result;
}

uint64_t type metadata accessor for Action()
{
  return swift_getGenericMetadata();
}

uint64_t Action.init(_:id:waitLogInterval:supportedStatus:perform:finish:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v21 = (void *)swift_allocObject();
  v21[2] = a11;
  v21[3] = a12;
  v21[4] = a13;
  v21[5] = a14;
  v21[6] = a5;
  v21[7] = a6;

  return Action.init(_:id:waitLogInterval:supportedStatus:perform:finish:)(a1, a2, a3, a4, (uint64_t)&async function pointer to partial apply for closure #1 in Action.init(_:id:waitLogInterval:supportedStatus:perform:finish:), (uint64_t)v21, a7, a8, a9, a10, a11, a12);
}

uint64_t _sScTss5NeverORs_rlE8detached8priority9operationScTyxABGScPSg_xyYaYAcntFZyt_Tgm5(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&_sScPSgMD_0);
  __chkstk_darwin(v6 - 8);
  int v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of TaskPriority?(a1, (uint64_t)v8);
  uint64_t v9 = type metadata accessor for TaskPriority();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    outlined destroy of TaskPriority?((uint64_t)v8, &_sScPSgMD_0);
    if (*(void *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v11 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v13 = v12;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    if (*(void *)(a3 + 16)) {
      goto LABEL_3;
    }
  }
  uint64_t v11 = 0;
  uint64_t v13 = 0;
LABEL_6:
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a2;
  *(void *)(v14 + 24) = a3;
  if (v13 | v11)
  {
    v16[0] = 0;
    v16[1] = 0;
    v16[2] = v11;
    v16[3] = v13;
  }
  return swift_task_create();
}

uint64_t AnyAction.identifier.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t Action.id.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 24) - 8) + 16))(a2, v2 + *(int *)(a1 + 52));
}

uint64_t Action.supportedStatus()(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t))(v1 + *(int *)(a1 + 56)))(v1);
}

uint64_t Action.execute(bypassSupportedStatusCheck:)(uint64_t a1, char a2, uint64_t a3)
{
  *(void *)(v4 + 64) = a3;
  *(void *)(v4 + 72) = v3;
  *(unsigned char *)(v4 + 388) = a2;
  *(void *)(v4 + 56) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&_sScPSgMD_0);
  *(void *)(v4 + 80) = swift_task_alloc();
  uint64_t v6 = *(void *)(a3 + 32);
  *(void *)(v4 + 88) = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  *(void *)(v4 + 96) = v7;
  *(void *)(v4 + 104) = *(void *)(v7 + 64);
  *(void *)(v4 + 112) = swift_task_alloc();
  *(void *)(v4 + 120) = swift_task_alloc();
  *(void *)(v4 + 128) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSRunLoop.SchedulerOptions?);
  *(void *)(v4 + 136) = swift_task_alloc();
  uint64_t v8 = *(void *)(a3 + 24);
  *(void *)(v4 + 144) = v8;
  *(void *)(v4 + 152) = *(void *)(v8 - 8);
  *(void *)(v4 + 160) = swift_task_alloc();
  uint64_t v9 = *(void *)(a3 - 8);
  *(void *)(v4 + 168) = v9;
  *(void *)(v4 + 176) = *(void *)(v9 + 64);
  *(void *)(v4 + 184) = swift_task_alloc();
  *(void *)(v4 + 192) = swift_task_alloc();
  *(void *)(v4 + 200) = swift_task_alloc();
  *(void *)(v4 + 208) = swift_task_alloc();
  *(void *)(v4 + 216) = swift_task_alloc();
  *(void *)(v4 + 224) = swift_task_alloc();
  uint64_t v10 = type metadata accessor for Logger();
  *(void *)(v4 + 232) = v10;
  *(void *)(v4 + 240) = *(void *)(v10 - 8);
  *(void *)(v4 + 248) = swift_task_alloc();
  *(void *)(v4 + 256) = swift_task_alloc();
  *(void *)(v4 + 264) = swift_task_alloc();
  *(void *)(v4 + 272) = swift_task_alloc();
  *(void *)(v4 + 280) = swift_task_alloc();
  return _swift_task_switch(Action.execute(bypassSupportedStatusCheck:), 0, 0);
}

uint64_t Action.execute(bypassSupportedStatusCheck:)()
{
  uint64_t v120 = v0;
  uint64_t v1 = *(void *)(v0 + 144);
  uint64_t v2 = *(void *)(v0 + 64);
  uint64_t v3 = *(void *)(v2 + 40);
  *(void *)(v0 + 288) = v3;
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v3 + 24))(v1, v3))
  {
    if (one-time initialization token for isInternalInstall != -1) {
      swift_once();
    }
    if (static DeviceCapabilities.isInternalInstall == 1)
    {
      if (one-time initialization token for action != -1) {
        swift_once();
      }
      uint64_t v4 = *(void *)(v0 + 256);
      uint64_t v5 = *(void *)(v0 + 232);
      uint64_t v6 = *(void *)(v0 + 240);
      uint64_t v7 = *(void *)(v0 + 192);
      uint64_t v8 = *(void *)(v0 + 168);
      uint64_t v10 = *(void *)(v0 + 64);
      uint64_t v9 = *(void *)(v0 + 72);
      uint64_t v11 = __swift_project_value_buffer(v5, (uint64_t)static Logger.action);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v4, v11, v5);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v7, v9, v10);
      uint64_t v12 = Logger.logObject.getter();
      os_log_type_t v13 = static os_log_type_t.error.getter();
      BOOL v14 = os_log_type_enabled(v12, v13);
      uint64_t v15 = *(void *)(v0 + 256);
      uint64_t v17 = *(void *)(v0 + 232);
      uint64_t v16 = *(void *)(v0 + 240);
      uint64_t v18 = *(void *)(v0 + 192);
      uint64_t v19 = *(void *)(v0 + 168);
      if (v14)
      {
        uint64_t v115 = *(void *)(v0 + 256);
        os_log_type_t type = v13;
        uint64_t v20 = *(void *)(v0 + 152);
        uint64_t v21 = *(void *)(v0 + 160);
        uint64_t v22 = *(void *)(v0 + 144);
        uint64_t v103 = *(void *)(v0 + 64);
        *(void *)uint64_t v112 = *(void *)(v0 + 232);
        uint64_t v23 = swift_slowAlloc();
        v119[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v23 = 136446210;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 16))(v21, v18 + *(int *)(v2 + 52), v22);
        (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v103);
        uint64_t v24 = dispatch thunk of CustomStringConvertible.description.getter();
        unint64_t v26 = v25;
        (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v21, v22);
        *(void *)(v23 + 4) = _s2os32getNullTerminatedUTF8PointerImpl_21storingStringOwnersInSVSS_SpyypGSgztF_0(v24, v26, v119);
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v12, type, "%{public}s: attempted to execute but identifier is hidden", (uint8_t *)v23, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(uint64_t, os_log_type_t *))(v16 + 8))(v115, *(os_log_type_t **)v112);
      }
      else
      {
        (*(void (**)(void, void))(v19 + 8))(*(void *)(v0 + 192), *(void *)(v0 + 64));

        (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
      }
    }
    lazy protocol witness table accessor for type ActionError and conformance ActionError();
    swift_allocError();
    *uint64_t v72 = 0xD000000000000014;
    uint64_t v73 = 0x80000001004682A0;
LABEL_27:
    v72[1] = v73;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v98 = *(uint64_t (**)(void))(v0 + 8);
    return v98();
  }
  uint64_t v117 = v3;
  if ((*(unsigned char *)(v0 + 388) & 1) == 0)
  {
    uint64_t v27 = (*(uint64_t (**)(void))(*(void *)(v0 + 72) + *(int *)(*(void *)(v0 + 64) + 56)))();
    if (v28 != 1)
    {
      uint64_t v73 = v28;
      uint64_t v116 = v27;
      if (one-time initialization token for action != -1) {
        swift_once();
      }
      uint64_t v74 = *(void *)(v0 + 280);
      uint64_t v75 = *(void *)(v0 + 232);
      uint64_t v76 = *(void *)(v0 + 240);
      uint64_t v77 = *(void *)(v0 + 224);
      uint64_t v78 = *(void *)(v0 + 168);
      uint64_t v80 = *(void *)(v0 + 64);
      uint64_t v79 = *(void *)(v0 + 72);
      uint64_t v81 = __swift_project_value_buffer(v75, (uint64_t)static Logger.action);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v76 + 16))(v74, v81, v75);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v78 + 16))(v77, v79, v80);
      outlined copy of ActionSupportedStatus(v116, v73);
      swift_bridgeObjectRetain();
      uint64_t v82 = Logger.logObject.getter();
      os_log_type_t v114 = static os_log_type_t.error.getter();
      BOOL v83 = os_log_type_enabled(v82, v114);
      uint64_t v84 = *(void *)(v0 + 280);
      uint64_t v86 = *(void *)(v0 + 232);
      uint64_t v85 = *(void *)(v0 + 240);
      uint64_t v87 = *(void *)(v0 + 224);
      uint64_t v88 = *(void *)(v0 + 168);
      if (v83)
      {
        uint64_t v107 = *(void *)(v0 + 240);
        *(void *)typec = *(void *)(v0 + 280);
        uint64_t v90 = *(void *)(v0 + 152);
        uint64_t v89 = *(void *)(v0 + 160);
        uint64_t v102 = v82;
        uint64_t v91 = *(void *)(v0 + 144);
        uint64_t v99 = *(void *)(v0 + 64);
        uint64_t v104 = *(void *)(v0 + 232);
        uint64_t v92 = swift_slowAlloc();
        v119[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v92 = 136446466;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v90 + 16))(v89, v87 + *(int *)(v2 + 52), v91);
        (*(void (**)(uint64_t, uint64_t))(v88 + 8))(v87, v99);
        uint64_t v93 = dispatch thunk of CustomStringConvertible.description.getter();
        unint64_t v95 = v94;
        (*(void (**)(uint64_t, uint64_t))(v90 + 8))(v89, v91);
        *(void *)(v92 + 4) = _s2os32getNullTerminatedUTF8PointerImpl_21storingStringOwnersInSVSS_SpyypGSgztF_0(v93, v95, v119);
        swift_bridgeObjectRelease();
        *(_WORD *)(v92 + 12) = 2082;
        *(void *)(v0 + 16) = v116;
        *(void *)(v0 + 24) = v73;
        swift_bridgeObjectRetain();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for String?);
        uint64_t v96 = String.init<A>(describing:)();
        *(void *)(v92 + 14) = _s2os32getNullTerminatedUTF8PointerImpl_21storingStringOwnersInSVSS_SpyypGSgztF_0(v96, v97, v119);
        swift_bridgeObjectRelease();
        outlined consume of ActionSupportedStatus(v116, v73);
        outlined consume of ActionSupportedStatus(v116, v73);
        _os_log_impl((void *)&_mh_execute_header, v102, v114, "%{public}s: attempted to execute but was unsupported for reason: %{public}s", (uint8_t *)v92, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(os_log_type_t *, uint64_t))(v107 + 8))(*(os_log_type_t **)typec, v104);
      }
      else
      {
        (*(void (**)(void, void))(v88 + 8))(*(void *)(v0 + 224), *(void *)(v0 + 64));
        outlined consume of ActionSupportedStatus(v116, v73);
        outlined consume of ActionSupportedStatus(v116, v73);

        (*(void (**)(uint64_t, uint64_t))(v85 + 8))(v84, v86);
      }
      lazy protocol witness table accessor for type ActionError and conformance ActionError();
      swift_allocError();
      *uint64_t v72 = v116;
      goto LABEL_27;
    }
  }
  if (one-time initialization token for action != -1) {
    swift_once();
  }
  uint64_t v29 = *(void *)(v0 + 272);
  uint64_t v30 = *(void *)(v0 + 232);
  uint64_t v31 = *(void *)(v0 + 240);
  uint64_t v32 = *(void *)(v0 + 216);
  uint64_t v33 = *(void *)(v0 + 168);
  uint64_t v35 = *(void *)(v0 + 64);
  uint64_t v34 = *(void *)(v0 + 72);
  uint64_t v36 = __swift_project_value_buffer(v30, (uint64_t)static Logger.action);
  *(void *)(v0 + 296) = v36;
  uint64_t v37 = *(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 16);
  *(void *)(v0 + 304) = v37;
  *(void *)(v0 + 312) = (v31 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v37(v29, v36, v30);
  uint64_t v38 = *(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 16);
  *(void *)(v0 + 320) = v38;
  *(void *)(v0 + 328) = (v33 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  uint64_t v113 = v38;
  v38(v32, v34, v35);
  uint64_t v39 = Logger.logObject.getter();
  os_log_type_t v40 = static os_log_type_t.default.getter();
  BOOL v41 = os_log_type_enabled(v39, v40);
  uint64_t v42 = *(void *)(v0 + 272);
  uint64_t v43 = *(void *)(v0 + 232);
  uint64_t v44 = *(void *)(v0 + 240);
  uint64_t v45 = *(void *)(v0 + 216);
  uint64_t v46 = *(void *)(v0 + 168);
  if (v41)
  {
    uint64_t v105 = *(void *)(v0 + 272);
    *(void *)typea = *(void *)(v0 + 232);
    uint64_t v47 = *(void *)(v0 + 152);
    uint64_t v48 = *(void *)(v0 + 160);
    uint64_t v49 = *(void *)(v0 + 144);
    uint64_t v100 = *(void *)(v0 + 64);
    os_log_type_t v101 = v40;
    uint64_t v50 = swift_slowAlloc();
    v119[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v50 = 136446210;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 16))(v48, v45 + *(int *)(v2 + 52), v49);
    (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v45, v100);
    uint64_t v51 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v53 = v52;
    (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v48, v49);
    *(void *)(v50 + 4) = _s2os32getNullTerminatedUTF8PointerImpl_21storingStringOwnersInSVSS_SpyypGSgztF_0(v51, v53, v119);
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v39, v101, "%{public}s: performing…", (uint8_t *)v50, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, os_log_type_t *))(v44 + 8))(v105, *(os_log_type_t **)typea);
  }
  else
  {
    (*(void (**)(void, void))(v46 + 8))(*(void *)(v0 + 216), *(void *)(v0 + 64));

    (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v42, v43);
  }
  uint64_t v54 = *(void *)(v0 + 208);
  uint64_t v55 = *(void *)(v0 + 168);
  uint64_t v56 = *(void *)(v0 + 136);
  uint64_t v106 = *(void *)(v0 + 88);
  *(void *)typeb = *(void *)(v0 + 144);
  uint64_t v58 = *(void *)(v0 + 64);
  uint64_t v57 = *(void *)(v0 + 72);
  type metadata accessor for NSTimer();
  id v59 = [self mainRunLoop];
  uint64_t v60 = type metadata accessor for NSRunLoop.SchedulerOptions();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v60 - 8) + 56))(v56, 1, 1, v60);
  uint64_t v61 = static NSTimer.publish(every:tolerance:on:in:options:)();

  outlined destroy of TaskPriority?(v56, &demangling cache variable for type metadata for NSRunLoop.SchedulerOptions?);
  *(void *)(v0 + 32) = v61;
  type metadata accessor for NSTimer.TimerPublisher();
  lazy protocol witness table accessor for type NSTimer.TimerPublisher and conformance NSTimer.TimerPublisher();
  uint64_t v62 = ConnectablePublisher.autoconnect()();
  swift_release();
  *(void *)(v0 + 40) = v62;
  v113(v54, v57, v58);
  int v63 = *(_DWORD *)(v55 + 80);
  *(_DWORD *)(v0 + 384) = v63;
  unint64_t v64 = (v63 + 48) & ~(unint64_t)v63;
  uint64_t v65 = (char *)swift_allocObject();
  uint64_t v66 = *(void *)(v58 + 16);
  *(void *)(v0 + 336) = v66;
  *((void *)v65 + 2) = v66;
  *((void *)v65 + 3) = *(void *)typeb;
  *((void *)v65 + 4) = v106;
  *((void *)v65 + 5) = v117;
  uint64_t v67 = *(void (**)(char *, uint64_t, uint64_t))(v55 + 32);
  *(void *)(v0 + 344) = v67;
  *(void *)(v0 + 352) = (v55 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
  v67(&v65[v64], v54, v58);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.Autoconnect<NSTimer.TimerPublisher>);
  lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>, &demangling cache variable for type metadata for Publishers.Autoconnect<NSTimer.TimerPublisher>);
  *(void *)(v0 + 360) = Publisher<>.sink(receiveValue:)();
  swift_release();
  swift_release();
  uint64_t v118 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v57 + *(int *)(v58 + 64))
                                                  + **(int **)(v57 + *(int *)(v58 + 64)));
  uint64_t v68 = (void *)swift_task_alloc();
  *(void *)(v0 + 368) = v68;
  void *v68 = v0;
  v68[1] = Action.execute(bypassSupportedStatusCheck:);
  uint64_t v69 = *(void *)(v0 + 72);
  uint64_t v70 = *(void *)(v0 + 56);
  return v118(v70, v69);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();
  uint64_t v4;

  *(void *)(*(void *)v1 + 376) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = Action.execute(bypassSupportedStatusCheck:);
  }
  else {
    uint64_t v2 = Action.execute(bypassSupportedStatusCheck:);
  }
  return _swift_task_switch(v2, 0, 0);
}

{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  Swift::String v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char *v54;
  uint64_t (*v55)(void);
  uint64_t v57;
  void (*v58)(uint64_t, uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(char *, uint64_t, uint64_t);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  os_log_type_t v67;
  uint64_t v68;
  NSObject *v69;
  void (*v70)(uint64_t, uint64_t, uint64_t);
  void (*v71)(uint64_t, uint64_t, uint64_t);
  uint64_t v72;
  void v73[2];
  uint64_t v74;
  uint64_t v75;

  uint64_t v74 = v0;
  uint64_t v70 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 320);
  uint64_t v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 304);
  uint64_t v2 = *(void *)(v0 + 296);
  uint64_t v3 = *(void *)(v0 + 264);
  uint64_t v4 = *(void *)(v0 + 232);
  uint64_t v5 = *(void *)(v0 + 200);
  uint64_t v6 = *(void *)(v0 + 96);
  uint64_t v66 = *(void *)(v0 + 88);
  uint64_t v68 = *(void *)(v0 + 128);
  uint64_t v8 = *(void *)(v0 + 64);
  uint64_t v7 = *(void *)(v0 + 72);
  uint64_t v65 = *(void *)(v0 + 56);
  AnyCancellable.cancel()();
  v1(v3, v2, v4);
  v70(v5, v7, v8);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  v9(v68, v65, v66);
  uint64_t v10 = Logger.logObject.getter();
  uint64_t v11 = static os_log_type_t.default.getter();
  uint64_t v71 = v9;
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v67 = v11;
    uint64_t v69 = v10;
    uint64_t v12 = *(void *)(v0 + 200);
    BOOL v14 = *(void *)(v0 + 160);
    os_log_type_t v13 = *(void *)(v0 + 168);
    uint64_t v16 = *(void *)(v0 + 144);
    uint64_t v15 = *(void *)(v0 + 152);
    uint64_t v17 = *(void *)(v0 + 120);
    unint64_t v64 = *(void *)(v0 + 128);
    uint64_t v18 = *(void *)(v0 + 88);
    uint64_t v19 = *(void *)(v0 + 64);
    uint64_t v20 = swift_slowAlloc();
    uint64_t v72 = swift_slowAlloc();
    *(_DWORD *)uint64_t v20 = 136446466;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v14, v12 + *(int *)(v19 + 52), v16);
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v19);
    uint64_t v21 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v23 = v22;
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
    *(void *)(v20 + 4) = _s2os32getNullTerminatedUTF8PointerImpl_21storingStringOwnersInSVSS_SpyypGSgztF_0(v21, v23, &v72);
    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 12) = 2082;
    v71(v17, v64, v18);
    uint64_t v24 = 0xE000000000000000;
    if (swift_dynamicCast())
    {
      unint64_t v25 = 0;
    }
    else
    {
      uint64_t v32 = *(void *)(v0 + 128);
      uint64_t v33 = *(void *)(v0 + 112);
      uint64_t v34 = *(void *)(v0 + 88);
      v73[0] = 0;
      v73[1] = 0xE000000000000000;
      _StringGuts.grow(_:)(16);
      swift_bridgeObjectRelease();
      strcpy((char *)v73, " with result: ");
      HIBYTE(v73[1]) = -18;
      v71(v33, v32, v34);
      v35._countAndFlagsBits = String.init<A>(describing:)();
      String.append(_:)(v35);
      swift_bridgeObjectRelease();
      unint64_t v25 = v73[0];
      uint64_t v24 = v73[1];
    }
    uint64_t v36 = *(void *)(v0 + 264);
    uint64_t v37 = *(void *)(v0 + 232);
    uint64_t v38 = *(void *)(v0 + 240);
    uint64_t v39 = *(void *)(v0 + 128);
    BOOL v41 = *(void *)(v0 + 88);
    os_log_type_t v40 = *(void *)(v0 + 96);
    *(void *)(v20 + 14) = _s2os32getNullTerminatedUTF8PointerImpl_21storingStringOwnersInSVSS_SpyypGSgztF_0(v25, v24, &v72);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v39, v41);
    _os_log_impl((void *)&_mh_execute_header, v69, v67, "%{public}s: perform success%{public}s", (uint8_t *)v20, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v36, v37);
  }
  else
  {
    unint64_t v26 = *(void *)(v0 + 264);
    uint64_t v28 = *(void *)(v0 + 232);
    uint64_t v27 = *(void *)(v0 + 240);
    uint64_t v29 = *(void *)(v0 + 128);
    uint64_t v30 = *(void *)(v0 + 88);
    uint64_t v31 = *(void *)(v0 + 96);
    (*(void (**)(void, void))(*(void *)(v0 + 168) + 8))(*(void *)(v0 + 200), *(void *)(v0 + 64));
    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v29, v30);

    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v26, v28);
  }
  uint64_t v62 = *(void *)(v0 + 336);
  int v63 = *(void (**)(char *, uint64_t, uint64_t))(v0 + 344);
  uint64_t v42 = *(unsigned __int8 *)(v0 + 384);
  uint64_t v58 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 320);
  uint64_t v61 = *(void *)(v0 + 288);
  uint64_t v43 = *(void *)(v0 + 208);
  uint64_t v57 = *(void *)(v0 + 176);
  uint64_t v60 = *(void *)(v0 + 144);
  uint64_t v44 = *(void *)(v0 + 112);
  uint64_t v45 = *(void *)(v0 + 96);
  uint64_t v46 = *(void *)(v0 + 80);
  uint64_t v47 = *(void *)(v0 + 88);
  id v59 = v46;
  uint64_t v48 = *(void *)(v0 + 64);
  uint64_t v49 = *(void *)(v0 + 72);
  uint64_t v50 = *(void *)(v0 + 56);
  uint64_t v51 = type metadata accessor for TaskPriority();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 56))(v46, 1, 1, v51);
  v58(v43, v49, v48);
  v71(v44, v50, v47);
  unint64_t v52 = (v42 + 64) & ~v42;
  unint64_t v53 = (v57 + v52 + *(unsigned __int8 *)(v45 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80);
  uint64_t v54 = (char *)swift_allocObject();
  *((void *)v54 + 2) = 0;
  *((void *)v54 + 3) = 0;
  *((void *)v54 + 4) = v62;
  *((void *)v54 + 5) = v60;
  *((void *)v54 + 6) = v47;
  *((void *)v54 + 7) = v61;
  v63(&v54[v52], v43, v48);
  (*(void (**)(char *, uint64_t, uint64_t))(v45 + 32))(&v54[v53], v44, v47);
  _sScTss5NeverORs_rlE8detached8priority9operationScTyxABGScPSg_xyYaYAcntFZyt_Tgm5(v59, (uint64_t)&async function pointer to partial apply for closure #2 in Action.execute(bypassSupportedStatusCheck:), (uint64_t)v54);
  swift_release();
  swift_release();
  outlined destroy of TaskPriority?(v59, &_sScPSgMD_0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v55 = *(uint64_t (**)(void))(v0 + 8);
  return v55();
}

{
  void *v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(void);
  os_log_type_t type;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33[2];
  void *v34;
  uint64_t v35;

  uint64_t v34 = v0;
  uint64_t v30 = (void (*)(uint64_t, uint64_t, uint64_t))v0[40];
  uint64_t v1 = v0[37];
  uint64_t v2 = (void (*)(uint64_t, uint64_t, uint64_t))v0[38];
  uint64_t v3 = v0[31];
  uint64_t v4 = v0[29];
  uint64_t v5 = v0[23];
  uint64_t v7 = v0[8];
  uint64_t v6 = v0[9];
  swift_release();
  v2(v3, v1, v4);
  v30(v5, v6, v7);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v8 = Logger.logObject.getter();
  uint64_t v9 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = v0[47];
    uint64_t v29 = v0[30];
    uint64_t v31 = v0[29];
    uint64_t v32 = v0[31];
    os_log_type_t type = v9;
    uint64_t v11 = v0[23];
    os_log_type_t v13 = v0[20];
    uint64_t v12 = v0[21];
    BOOL v14 = v0[18];
    uint64_t v15 = v0[19];
    uint64_t v16 = v0[8];
    uint64_t v17 = swift_slowAlloc();
    v33[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v17 = 136446466;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v13, v11 + *(int *)(v16 + 52), v14);
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v16);
    uint64_t v18 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v20 = v19;
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
    *(void *)(v17 + 4) = _s2os32getNullTerminatedUTF8PointerImpl_21storingStringOwnersInSVSS_SpyypGSgztF_0(v18, v20, v33);
    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 12) = 2082;
    v0[6] = v10;
    swift_errorRetain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
    uint64_t v21 = String.init<A>(describing:)();
    *(void *)(v17 + 14) = _s2os32getNullTerminatedUTF8PointerImpl_21storingStringOwnersInSVSS_SpyypGSgztF_0(v21, v22, v33);
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v8, type, "%{public}s: perform failed: %{public}s", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v32, v31);
  }
  else
  {
    uint64_t v24 = v0[30];
    uint64_t v23 = v0[31];
    unint64_t v25 = v0[29];
    (*(void (**)(void, void))(v0[21] + 8))(v0[23], v0[8]);
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v25);
  }
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v26 = (uint64_t (*)(void))v0[1];
  return v26();
}

uint64_t closure #2 in Action.execute(bypassSupportedStatusCheck:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[13] = a8;
  v8[14] = v17;
  v8[11] = a6;
  v8[12] = a7;
  v8[9] = a4;
  v8[10] = a5;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSRunLoop.SchedulerOptions?);
  v8[15] = swift_task_alloc();
  v8[2] = a6;
  v8[3] = a7;
  v8[4] = a8;
  v8[5] = v17;
  uint64_t v12 = type metadata accessor for Action();
  v8[16] = v12;
  uint64_t v13 = *(void *)(v12 - 8);
  v8[17] = v13;
  v8[18] = *(void *)(v13 + 64);
  v8[19] = swift_task_alloc();
  v8[20] = swift_task_alloc();
  v8[21] = swift_task_alloc();
  v8[22] = swift_task_alloc();
  uint64_t v14 = type metadata accessor for Logger();
  v8[23] = v14;
  v8[24] = *(void *)(v14 - 8);
  v8[25] = swift_task_alloc();
  v8[26] = swift_task_alloc();
  v8[27] = swift_task_alloc();
  return _swift_task_switch(closure #2 in Action.execute(bypassSupportedStatusCheck:), 0, 0);
}

uint64_t closure #2 in Action.execute(bypassSupportedStatusCheck:)()
{
  uint64_t v44 = v0;
  if (one-time initialization token for action != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 216);
  uint64_t v2 = *(void *)(v0 + 184);
  uint64_t v3 = *(void *)(v0 + 192);
  uint64_t v4 = *(void *)(v0 + 176);
  uint64_t v5 = *(void *)(v0 + 128);
  uint64_t v6 = *(void *)(v0 + 136);
  uint64_t v7 = *(void *)(v0 + 72);
  uint64_t v8 = __swift_project_value_buffer(v2, (uint64_t)static Logger.action);
  *(void *)(v0 + 224) = v8;
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  *(void *)(v0 + 232) = v9;
  *(void *)(v0 + 240) = (v3 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v9(v1, v8, v2);
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  *(void *)(v0 + 248) = v10;
  *(void *)(v0 + 256) = (v6 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  BOOL v41 = v10;
  v10(v4, v7, v5);
  uint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.default.getter();
  BOOL v13 = os_log_type_enabled(v11, v12);
  uint64_t v14 = *(void *)(v0 + 216);
  uint64_t v16 = *(void *)(v0 + 184);
  uint64_t v15 = *(void *)(v0 + 192);
  uint64_t v17 = *(void *)(v0 + 176);
  uint64_t v19 = *(void *)(v0 + 128);
  uint64_t v18 = *(void *)(v0 + 136);
  if (v13)
  {
    uint64_t v39 = *(void *)(v0 + 184);
    uint64_t v20 = swift_slowAlloc();
    uint64_t v43 = swift_slowAlloc();
    *(_DWORD *)uint64_t v20 = 136446210;
    uint64_t v21 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v20 + 4) = _s2os32getNullTerminatedUTF8PointerImpl_21storingStringOwnersInSVSS_SpyypGSgztF_0(v21, v22, &v43);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "%{public}s: finishing…", (uint8_t *)v20, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v39);
  }
  else
  {
    (*(void (**)(void, void))(v18 + 8))(*(void *)(v0 + 176), *(void *)(v0 + 128));

    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
  }
  uint64_t v23 = *(void *)(v0 + 168);
  uint64_t v24 = *(void *)(v0 + 136);
  uint64_t v26 = *(void *)(v0 + 120);
  uint64_t v25 = *(void *)(v0 + 128);
  uint64_t v27 = *(void *)(v0 + 72);
  type metadata accessor for NSTimer();
  long long v38 = *(_OWORD *)(v0 + 104);
  long long v40 = *(_OWORD *)(v0 + 88);
  id v28 = [self mainRunLoop];
  uint64_t v29 = type metadata accessor for NSRunLoop.SchedulerOptions();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v26, 1, 1, v29);
  uint64_t v30 = static NSTimer.publish(every:tolerance:on:in:options:)();

  outlined destroy of TaskPriority?(v26, &demangling cache variable for type metadata for NSRunLoop.SchedulerOptions?);
  *(void *)(v0 + 48) = v30;
  type metadata accessor for NSTimer.TimerPublisher();
  lazy protocol witness table accessor for type NSTimer.TimerPublisher and conformance NSTimer.TimerPublisher();
  uint64_t v31 = ConnectablePublisher.autoconnect()();
  swift_release();
  *(void *)(v0 + 56) = v31;
  v41(v23, v27, v25);
  unint64_t v32 = (*(unsigned __int8 *)(v24 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  uint64_t v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = v40;
  *(_OWORD *)(v33 + 32) = v38;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v24 + 32))(v33 + v32, v23, v25);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.Autoconnect<NSTimer.TimerPublisher>);
  lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>, &demangling cache variable for type metadata for Publishers.Autoconnect<NSTimer.TimerPublisher>);
  *(void *)(v0 + 264) = Publisher<>.sink(receiveValue:)();
  swift_release();
  swift_release();
  uint64_t v42 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v27 + *(int *)(v25 + 68))
                                                 + **(int **)(v27 + *(int *)(v25 + 68)));
  uint64_t v34 = (void *)swift_task_alloc();
  *(void *)(v0 + 272) = v34;
  *uint64_t v34 = v0;
  v34[1] = closure #2 in Action.execute(bypassSupportedStatusCheck:);
  uint64_t v36 = *(void *)(v0 + 72);
  uint64_t v35 = *(void *)(v0 + 80);
  return v42(v36, v35);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();
  uint64_t v4;

  *(void *)(*(void *)v1 + 280) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = closure #2 in Action.execute(bypassSupportedStatusCheck:);
  }
  else {
    uint64_t v2 = closure #2 in Action.execute(bypassSupportedStatusCheck:);
  }
  return _swift_task_switch(v2, 0, 0);
}

{
  void *v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t (*v20)(void);
  void (*v22)(uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  void *v24;
  uint64_t v25;

  uint64_t v24 = v0;
  unint64_t v22 = (void (*)(uint64_t, uint64_t, uint64_t))v0[31];
  uint64_t v1 = v0[28];
  uint64_t v2 = (void (*)(uint64_t, uint64_t, uint64_t))v0[29];
  uint64_t v3 = v0[26];
  uint64_t v4 = v0[23];
  uint64_t v5 = v0[20];
  uint64_t v6 = v0[16];
  uint64_t v7 = v0[9];
  AnyCancellable.cancel()();
  v2(v3, v1, v4);
  v22(v5, v7, v6);
  uint64_t v8 = Logger.logObject.getter();
  uint64_t v9 = static os_log_type_t.default.getter();
  uint64_t v10 = os_log_type_enabled(v8, v9);
  uint64_t v11 = v0[26];
  os_log_type_t v12 = v0[23];
  BOOL v13 = v0[24];
  uint64_t v14 = v0[20];
  uint64_t v16 = v0[16];
  uint64_t v15 = v0[17];
  if (v10)
  {
    uint64_t v17 = swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    *(_DWORD *)uint64_t v17 = 136446210;
    uint64_t v18 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v17 + 4) = _s2os32getNullTerminatedUTF8PointerImpl_21storingStringOwnersInSVSS_SpyypGSgztF_0(v18, v19, &v23);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "%{public}s: finish success", (uint8_t *)v17, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
  }
  else
  {
    (*(void (**)(void, void))(v15 + 8))(v0[20], v0[16]);
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v20 = (uint64_t (*)(void))v0[1];
  return v20();
}

{
  void *v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(void);
  NSObject *log;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;

  uint64_t v33 = v0;
  uint64_t v29 = (void (*)(uint64_t, uint64_t, uint64_t))v0[31];
  uint64_t v1 = v0[28];
  uint64_t v2 = (void (*)(uint64_t, uint64_t, uint64_t))v0[29];
  uint64_t v3 = v0[25];
  uint64_t v4 = v0[23];
  uint64_t v5 = v0[19];
  uint64_t v6 = v0[16];
  uint64_t v7 = v0[9];
  swift_release();
  v2(v3, v1, v4);
  v29(v5, v7, v6);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v8 = Logger.logObject.getter();
  uint64_t v9 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = v0[35];
    log = v8;
    id v28 = v0[24];
    uint64_t v30 = v0[23];
    uint64_t v31 = v0[25];
    uint64_t v11 = v0[19];
    os_log_type_t v12 = v0[16];
    BOOL v13 = v0[17];
    uint64_t v14 = swift_slowAlloc();
    unint64_t v32 = swift_slowAlloc();
    *(_DWORD *)uint64_t v14 = 136446466;
    uint64_t v15 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v14 + 4) = _s2os32getNullTerminatedUTF8PointerImpl_21storingStringOwnersInSVSS_SpyypGSgztF_0(v15, v16, &v32);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
    *(_WORD *)(v14 + 12) = 2082;
    v0[8] = v10;
    swift_errorRetain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
    uint64_t v17 = String.init<A>(describing:)();
    *(void *)(v14 + 14) = _s2os32getNullTerminatedUTF8PointerImpl_21storingStringOwnersInSVSS_SpyypGSgztF_0(v17, v18, &v32);
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, log, v9, "%{public}s: finish failed: %{public}s", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v31, v30);
  }
  else
  {
    uint64_t v19 = v0[24];
    uint64_t v20 = v0[25];
    uint64_t v21 = v0[23];
    unint64_t v22 = v0[19];
    uint64_t v23 = v0[16];
    uint64_t v24 = v0[17];
    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v22, v23);
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v20, v21);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v25 = (uint64_t (*)(void))v0[1];
  return v25();
}

uint64_t closure #1 in Action.execute(bypassSupportedStatusCheck:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, const char *a7)
{
  uint64_t v29 = a4;
  v30[0] = a3;
  v30[1] = a4;
  v30[2] = a5;
  uint64_t v28 = a6;
  v30[3] = a6;
  uint64_t v9 = type metadata accessor for Action();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  os_log_type_t v12 = (char *)&v26 - v11;
  uint64_t v13 = type metadata accessor for Logger();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (one-time initialization token for action != -1) {
    swift_once();
  }
  uint64_t v17 = __swift_project_value_buffer(v13, (uint64_t)static Logger.action);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v17, v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a2, v9);
  uint64_t v18 = Logger.logObject.getter();
  os_log_type_t v19 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = swift_slowAlloc();
    uint64_t v26 = a7;
    uint64_t v21 = v20;
    uint64_t v22 = swift_slowAlloc();
    uint64_t v27 = v13;
    v30[0] = v22;
    *(_DWORD *)uint64_t v21 = 136446210;
    uint64_t v23 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v21 + 4) = _s2os32getNullTerminatedUTF8PointerImpl_21storingStringOwnersInSVSS_SpyypGSgztF_0(v23, v24, v30);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    _os_log_impl((void *)&_mh_execute_header, v18, v19, v26, (uint8_t *)v21, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v27);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);

    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance ActionSupportedStatus(uint64_t *a1, uint64_t *a2)
{
  return specialized static ActionSupportedStatus.__derived_enum_equals(_:_:)(*a1, a1[1], *a2, a2[1]);
}

unint64_t ActionError.description.getter(uint64_t a1, void *a2)
{
  _StringGuts.grow(_:)(34);
  swift_bridgeObjectRelease();
  if (a2)
  {
    uint64_t v4 = a2;
  }
  else
  {
    a1 = 0x6E776F6E6B6E75;
    uint64_t v4 = (void *)0xE700000000000000;
  }
  swift_bridgeObjectRetain();
  v5._countAndFlagsBits = a1;
  v5._object = v4;
  String.append(_:)(v5);
  swift_bridgeObjectRelease();
  return 0xD000000000000020;
}

BOOL static ActionError.__derived_enum_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2) {
    return a4 && (a1 == a3 && a2 == a4 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0);
  }
  if (a4)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return 1;
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance ActionError(void *a1, void *a2)
{
  uint64_t v3 = a1[1];
  uint64_t v4 = a2[1];
  if (v3)
  {
    if (v4)
    {
      BOOL v5 = *a1 == *a2 && v3 == v4;
      if (v5 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
        return 1;
      }
    }
    return 0;
  }
  if (v4)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return 1;
}

unint64_t protocol witness for CustomStringConvertible.description.getter in conformance ActionError()
{
  return ActionError.description.getter(*(void *)v0, *(void **)(v0 + 8));
}

uint64_t closure #1 in Action.init(_:id:waitLogInterval:supportedStatus:perform:finish:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[8] = a7;
  v8[9] = a8;
  v8[6] = a5;
  v8[7] = a6;
  v8[4] = a3;
  v8[5] = a4;
  v8[2] = a1;
  v8[3] = a2;
  return _swift_task_switch(closure #1 in Action.init(_:id:waitLogInterval:supportedStatus:perform:finish:), 0, 0);
}

uint64_t closure #1 in Action.init(_:id:waitLogInterval:supportedStatus:perform:finish:)()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = swift_task_alloc();
  *(void *)(v0 + 80) = v2;
  long long v3 = *(_OWORD *)(v0 + 64);
  long long v4 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v2 + 32) = v3;
  *(_OWORD *)(v2 + 48) = v4;
  *(void *)(v2 + 64) = v1;
  BOOL v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v5;
  *BOOL v5 = v0;
  v5[1] = closure #1 in Action.init(_:id:waitLogInterval:supportedStatus:perform:finish:);
  uint64_t v6 = *(void *)(v0 + 64);
  uint64_t v7 = *(void *)(v0 + 16);
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v7, 0, 0, 0xD00000000000003ALL, 0x8000000100468080, partial apply for closure #1 in closure #1 in Action.init(_:id:waitLogInterval:supportedStatus:perform:finish:), v2, v6);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t (*v3)(void);
  uint64_t v5;

  uint64_t v2 = *v1;
  *(void *)(v2 + 96) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(closure #1 in Action.init(_:id:waitLogInterval:supportedStatus:perform:finish:), 0, 0);
  }
  else
  {
    swift_task_dealloc();
    long long v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t closure #1 in closure #1 in Action.init(_:id:waitLogInterval:supportedStatus:perform:finish:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v38 = a6;
  uint64_t v39 = a8;
  uint64_t v37 = a5;
  uint64_t v40 = a4;
  uint64_t v41 = a1;
  uint64_t v42 = a2;
  uint64_t v43 = a3;
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&demangling cache variable for type metadata for Error);
  uint64_t v36 = a7;
  uint64_t v12 = type metadata accessor for CheckedContinuation();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v34 - v14;
  uint64_t v35 = (char *)&v34 - v14;
  uint64_t v44 = a5;
  uint64_t v45 = a6;
  uint64_t v46 = a7;
  uint64_t v47 = a8;
  uint64_t v16 = type metadata accessor for Action();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(void *)(v17 + 64);
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v34 - v19;
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&_sScPSgMD_0);
  __chkstk_darwin(v21 - 8);
  uint64_t v23 = (char *)&v34 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v23, 1, 1, v24);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v20, v40, v16);
  uint64_t v25 = v15;
  uint64_t v26 = v12;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v25, v41, v12);
  unint64_t v27 = (*(unsigned __int8 *)(v17 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  unint64_t v28 = (v18 + v27 + *(unsigned __int8 *)(v13 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v29 = (char *)swift_allocObject();
  *((void *)v29 + 2) = 0;
  *((void *)v29 + 3) = 0;
  uint64_t v30 = v38;
  *((void *)v29 + 4) = v37;
  *((void *)v29 + 5) = v30;
  uint64_t v31 = v39;
  *((void *)v29 + 6) = v36;
  *((void *)v29 + 7) = v31;
  uint64_t v32 = v43;
  *((void *)v29 + 8) = v42;
  *((void *)v29 + 9) = v32;
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(&v29[v27], v20, v16);
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(&v29[v28], v35, v26);
  swift_retain();
  _sScTss5Error_pRs_rlE8priority9operationScTyxsAA_pGScPSg_xyYaKYAcntcfCyt_Tgm5((uint64_t)v23, (uint64_t)&async function pointer to partial apply for closure #1 in closure #1 in closure #1 in Action.init(_:id:waitLogInterval:supportedStatus:perform:finish:), (uint64_t)v29);
  return swift_release();
}

uint64_t closure #1 in closure #1 in closure #1 in Action.init(_:id:waitLogInterval:supportedStatus:perform:finish:)(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t))((char *)a4 + *a4);
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v7 + 16) = v10;
  void *v10 = v7;
  v10[1] = partial apply for closure #1 in static MusicEngagementExtension.performRequest(with:completion:);
  return v12(a6, a7);
}

uint64_t one-time initialization function for action()
{
  uint64_t v0 = type metadata accessor for Logger();
  __swift_allocate_value_buffer(v0, static Logger.action);
  __swift_project_value_buffer(v0, (uint64_t)static Logger.action);
  return Logger.init(subsystem:category:)();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned char *v5;
  uint64_t v6;
  unsigned char *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  unsigned char v13[16];

  uint64_t v0 = type metadata accessor for Locale();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = type metadata accessor for String.LocalizationValue();
  uint64_t v2 = *(void *)(v1 - 8);
  long long v3 = __chkstk_darwin(v1);
  BOOL v5 = &v13[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v3);
  uint64_t v7 = &v13[-v6];
  String.LocalizationValue.init(stringLiteral:)();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v2 + 16))(v5, v7, v1);
  if (one-time initialization token for module != -1) {
    swift_once();
  }
  uint64_t v8 = (id)static NSBundle.module;
  static Locale.current.getter();
  uint64_t v9 = String.init(localized:table:bundle:locale:comment:)();
  uint64_t v11 = v10;
  uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t))(v2 + 8))(v7, v1);
  static CloudLibrary.EnablementContext.action = v9;
  *(void *)algn_1005AC3C8 = v11;
  return result;
}

uint64_t specialized static ActionSupportedStatus.__derived_enum_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2 == 1)
  {
    if (a4 == 1) {
      return 1;
    }
  }
  else if (a4 != 1)
  {
    if (a2)
    {
      if (a4 && (a1 == a3 && a2 == a4 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)) {
        return 1;
      }
    }
    else
    {
      if (!a4) {
        return 1;
      }
      outlined consume of ActionSupportedStatus(a1, 0);
    }
  }
  return 0;
}

unint64_t specialized static ActionSupportedStatus.allSupported(_:)(void *a1)
{
  uint64_t v1 = a1[2];
  if (!v1) {
    return 0xD000000000000015;
  }
  uint64_t v4 = a1[4];
  uint64_t v3 = a1[5];
  swift_bridgeObjectRetain();
  outlined copy of ActionSupportedStatus(v4, v3);
  uint64_t v5 = v1 - 1;
  if (v1 != 1)
  {
    uint64_t v8 = a1 + 7;
    while (1)
    {
      uint64_t v6 = *(v8 - 1);
      unint64_t v13 = *v8;
      if (v3 == 1 && v13 == 1)
      {
        outlined consume of ActionSupportedStatus?(v4, 1);
        uint64_t v3 = 1;
        goto LABEL_10;
      }
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ActionSupportedStatus>);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_100493D00;
      *(void *)(inited + 32) = v4;
      *(void *)(inited + 40) = v3;
      *(void *)(inited + 48) = v6;
      *(void *)(inited + 56) = v13;
      if (v3 == 1)
      {
        outlined copy of ActionSupportedStatus(v6, v13);
      }
      else
      {
        outlined copy of ActionSupportedStatus(v6, v13);
        if (v3)
        {
          outlined copy of ActionSupportedStatus?(v4, v3);
          outlined copy of ActionSupportedStatus(v6, v13);
          outlined copy of ActionSupportedStatus?(v4, v3);
          uint64_t v15 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, 1, 1, (char *)_swiftEmptyArrayStorage);
          unint64_t v17 = *((void *)v15 + 2);
          unint64_t v16 = *((void *)v15 + 3);
          if (v17 >= v16 >> 1) {
            uint64_t v15 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((char *)(v16 > 1), v17 + 1, 1, v15);
          }
          *((void *)v15 + 2) = v17 + 1;
          uint64_t v18 = &v15[16 * v17];
          *((void *)v18 + 4) = v4;
          *((void *)v18 + 5) = v3;
          if (v13 < 2) {
            goto LABEL_9;
          }
LABEL_22:
          swift_bridgeObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v15 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *((void *)v15 + 2) + 1, 1, v15);
          }
          unint64_t v20 = *((void *)v15 + 2);
          unint64_t v19 = *((void *)v15 + 3);
          if (v20 >= v19 >> 1) {
            uint64_t v15 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((char *)(v19 > 1), v20 + 1, 1, v15);
          }
          *((void *)v15 + 2) = v20 + 1;
          uint64_t v9 = &v15[16 * v20];
          *((void *)v9 + 4) = v6;
          *((void *)v9 + 5) = v13;
          goto LABEL_9;
        }
      }
      outlined copy of ActionSupportedStatus(v6, v13);
      uint64_t v15 = (char *)_swiftEmptyArrayStorage;
      if (v13 >= 2) {
        goto LABEL_22;
      }
LABEL_9:
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
      lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>((unint64_t *)&lazy protocol witness table cache variable for type [String] and conformance [A], &demangling cache variable for type metadata for [String]);
      uint64_t v10 = BidirectionalCollection<>.joined(separator:)();
      uint64_t v12 = v11;
      swift_bridgeObjectRelease();
      outlined consume of ActionSupportedStatus(v6, v13);
      outlined consume of ActionSupportedStatus?(v4, v3);
      uint64_t v6 = v10;
      uint64_t v3 = v12;
LABEL_10:
      v8 += 2;
      uint64_t v4 = v6;
      if (!--v5) {
        goto LABEL_4;
      }
    }
  }
  uint64_t v6 = v4;
LABEL_4:
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_10003DA54()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in Action.init(_:id:waitLogInterval:supportedStatus:perform:finish:)(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = swift_task_alloc();
  long long v8 = v2[2];
  long long v7 = v2[3];
  long long v9 = v2[1];
  *(void *)(v3 + 16) = v6;
  *(void *)uint64_t v6 = v3;
  *(void *)(v6 + 8) = partial apply for closure #1 in static MusicEngagementExtension.performRequest(with:completion:);
  *(_OWORD *)(v6 + 48) = v9;
  *(_OWORD *)(v6 + 64) = v8;
  *(_OWORD *)(v6 + 32) = v7;
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  return _swift_task_switch(closure #1 in Action.init(_:id:waitLogInterval:supportedStatus:perform:finish:), 0, 0);
}

unint64_t type metadata accessor for NSTimer()
{
  unint64_t result = lazy cache variable for type metadata for NSTimer;
  if (!lazy cache variable for type metadata for NSTimer)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for NSTimer);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type NSTimer.TimerPublisher and conformance NSTimer.TimerPublisher()
{
  unint64_t result = lazy protocol witness table cache variable for type NSTimer.TimerPublisher and conformance NSTimer.TimerPublisher;
  if (!lazy protocol witness table cache variable for type NSTimer.TimerPublisher and conformance NSTimer.TimerPublisher)
  {
    type metadata accessor for NSTimer.TimerPublisher();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type NSTimer.TimerPublisher and conformance NSTimer.TimerPublisher);
  }
  return result;
}

uint64_t partial apply for closure #1 in Action.execute(bypassSupportedStatusCheck:)(uint64_t a1)
{
  return partial apply for closure #1 in Action.execute(bypassSupportedStatusCheck:)(a1, "%{public}s: waiting for perform to return…");
}

uint64_t sub_10003DBFC()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v1 = *(void *)(v0 + 40);
  long long v9 = *(_OWORD *)(v0 + 48);
  uint64_t v3 = (int *)(type metadata accessor for Action() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)v3 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v3 + 80);
  uint64_t v5 = *(void *)(v9 - 8);
  unint64_t v6 = (v4 + *(void *)(*(void *)v3 + 64) + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  swift_unknownObjectRelease();
  uint64_t v7 = v0 + v4;
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v7, v2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v7 + v3[15], v1);
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, void))(v5 + 8))(v0 + v6, v9);
  return swift_deallocObject();
}

uint64_t partial apply for closure #2 in Action.execute(bypassSupportedStatusCheck:)(uint64_t a1)
{
  uint64_t v3 = v2;
  uint64_t v6 = v1[4];
  uint64_t v5 = v1[5];
  uint64_t v7 = v1[6];
  uint64_t v8 = v1[7];
  v3[2] = v6;
  v3[3] = v5;
  v3[4] = v7;
  v3[5] = v8;
  uint64_t v9 = *(void *)(type metadata accessor for Action() - 8);
  unint64_t v10 = (*(unsigned __int8 *)(v9 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = v1[2];
  uint64_t v12 = v1[3];
  uint64_t v13 = (uint64_t)v1 + v10;
  uint64_t v14 = (uint64_t)v1
      + ((v10 + *(void *)(v9 + 64) + *(unsigned __int8 *)(*(void *)(v7 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v7 - 8) + 80));
  uint64_t v15 = (void *)swift_task_alloc();
  v3[6] = v15;
  void *v15 = v3;
  v15[1] = partial apply for closure #2 in Action.execute(bypassSupportedStatusCheck:);
  return closure #2 in Action.execute(bypassSupportedStatusCheck:)(a1, v11, v12, v13, v14, v6, v5, v7);
}

uint64_t partial apply for closure #2 in Action.execute(bypassSupportedStatusCheck:)()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t outlined copy of ActionSupportedStatus(uint64_t a1, uint64_t a2)
{
  if (a2 != 1) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ActionError and conformance ActionError()
{
  unint64_t result = lazy protocol witness table cache variable for type ActionError and conformance ActionError;
  if (!lazy protocol witness table cache variable for type ActionError and conformance ActionError)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ActionError and conformance ActionError);
  }
  return result;
}

uint64_t associated type witness table accessor for Identifiable.ID : Hashable in Action<A, B, C>(uint64_t a1, uint64_t a2)
{
  return *(void *)(*(void *)(a2 + 40) + 16);
}

uint64_t type metadata instantiation function for Action(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 56);
}

uint64_t type metadata completion function for Action()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for Action(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = *(void *)(a3 + 24);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(_DWORD *)(v8 + 80);
  uint64_t v10 = v6 + v9;
  uint64_t v11 = *(void *)(v8 + 64) + 7;
  unint64_t v12 = ((((((((v11 + ((v6 + v9) & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
        + 23) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  unsigned int v13 = v9 | *(_DWORD *)(v5 + 80) & 0xF8;
  if (v13 > 7 || ((*(_DWORD *)(v5 + 80) | *(_DWORD *)(v8 + 80)) & 0x100000) != 0 || v12 > 0x18)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    uint64_t v4 = (uint64_t *)(v16 + (((v13 | 7) + 16) & ~(unint64_t)(v13 | 7)));
  }
  else
  {
    uint64_t v17 = ~v9;
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    unint64_t v18 = ((unint64_t)a2 + v10) & v17;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))(((unint64_t)v4 + v10) & v17, v18, v7);
    unint64_t v19 = (void *)((v11 + (((unint64_t)v4 + v10) & v17)) & 0xFFFFFFFFFFFFFFF8);
    unint64_t v20 = (void *)((v11 + v18) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v21 = v20[1];
    void *v19 = *v20;
    v19[1] = v21;
    uint64_t v22 = (void *)(((unint64_t)v19 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v23 = (void *)(((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFFFF8);
    void *v22 = *v23;
    uint64_t v24 = (void *)(((unint64_t)v22 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v25 = (void *)(((unint64_t)v23 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v26 = v25[1];
    *uint64_t v24 = *v25;
    v24[1] = v26;
    unint64_t v27 = (void *)(((unint64_t)v24 + 23) & 0xFFFFFFFFFFFFFFF8);
    unint64_t v28 = (void *)(((unint64_t)v25 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v29 = v28[1];
    void *v27 = *v28;
    v27[1] = v29;
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t destroy for Action(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v4)();
  (*(void (**)(unint64_t))(*(void *)(*(void *)(a2 + 24) - 8) + 8))((*(void *)(v4 + 56)
                                                                                            + a1
                                                                                            + *(unsigned __int8 *)(*(void *)(*(void *)(a2 + 24) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(a2 + 24) - 8) + 80));
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for Action(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 48);
  uint64_t v8 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v9 = v8 + 16;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (v11 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 16))(v12, v13);
  uint64_t v14 = *(void *)(v9 + 48) + 7;
  uint64_t v15 = (void *)((v14 + v12) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v16 = (void *)((v14 + v13) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v17 = v16[1];
  void *v15 = *v16;
  v15[1] = v17;
  unint64_t v18 = (void *)(((unint64_t)v15 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v19 = (void *)(((unint64_t)v16 + 23) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v18 = *v19;
  unint64_t v20 = (void *)(((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v21 = (void *)(((unint64_t)v19 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v22 = v21[1];
  *unint64_t v20 = *v21;
  v20[1] = v22;
  uint64_t v23 = (void *)(((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v24 = (void *)(((unint64_t)v21 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v25 = v24[1];
  void *v23 = *v24;
  v23[1] = v25;
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for Action(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 40);
  uint64_t v8 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v9 = v8 + 24;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (v11 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 24))(v12, v13);
  uint64_t v14 = *(void *)(v9 + 40) + 7;
  uint64_t v15 = (void *)((v14 + v12) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v16 = (void *)((v14 + v13) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v17 = v16[1];
  void *v15 = *v16;
  v15[1] = v17;
  swift_retain();
  swift_release();
  unint64_t v18 = (void *)(((unint64_t)v15 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v19 = (void *)(((unint64_t)v16 + 23) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v18 = *v19;
  unint64_t v20 = (void *)(((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v21 = (void *)(((unint64_t)v19 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v22 = v21[1];
  *unint64_t v20 = *v21;
  v20[1] = v22;
  swift_retain();
  swift_release();
  uint64_t v23 = (void *)(((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v24 = (void *)(((unint64_t)v21 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v25 = v24[1];
  void *v23 = *v24;
  v23[1] = v25;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t initializeWithTake for Action(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 32);
  uint64_t v8 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v9 = v8 + 32;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (v11 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 32))(v12, v13);
  uint64_t v14 = *(void *)(v9 + 32) + 7;
  uint64_t v15 = (_OWORD *)((v14 + v12) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v16 = (_OWORD *)((v14 + v13) & 0xFFFFFFFFFFFFFFF8);
  _OWORD *v15 = *v16;
  uint64_t v17 = (void *)(((unint64_t)v15 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v18 = (void *)(((unint64_t)v16 + 23) & 0xFFFFFFFFFFFFFFF8);
  void *v17 = *v18;
  unint64_t v19 = (_OWORD *)(((unint64_t)v17 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v20 = (_OWORD *)(((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFFFF8);
  _OWORD *v19 = *v20;
  *(_OWORD *)(((unint64_t)v19 + 23) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t assignWithTake for Action(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 24);
  uint64_t v8 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v9 = v8 + 40;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (v11 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 40))(v12, v13);
  uint64_t v14 = *(void *)(v9 + 24) + 7;
  uint64_t v15 = (_OWORD *)((v14 + v12) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v16 = v14 + v13;
  unint64_t v17 = (v16 & 0xFFFFFFFFFFFFFFF8) + 23;
  _OWORD *v15 = *(_OWORD *)(v16 & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  unint64_t v18 = (void *)(((unint64_t)v15 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v19 = (v17 & 0xFFFFFFFFFFFFFFF8) + 15;
  *unint64_t v18 = *(void *)(v17 & 0xFFFFFFFFFFFFFFF8);
  unint64_t v20 = (_OWORD *)(((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v21 = (v19 & 0xFFFFFFFFFFFFFFF8) + 23;
  *unint64_t v20 = *(_OWORD *)(v19 & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  *(_OWORD *)(((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(v21 & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for Action(int *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned int *)(v5 + 84);
  uint64_t v7 = *(void *)(*(void *)(a3 + 24) - 8);
  unsigned int v8 = *(_DWORD *)(v7 + 84);
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  if (v8 <= v6) {
    unsigned int v10 = *(_DWORD *)(v5 + 84);
  }
  else {
    unsigned int v10 = *(_DWORD *)(v7 + 84);
  }
  if (v10 <= 0x7FFFFFFF) {
    unsigned int v10 = 0x7FFFFFFF;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v11 = *(void *)(*(void *)(v4 - 8) + 64) + v9;
  uint64_t v12 = *(void *)(v7 + 64) + 7;
  if (v10 < a2)
  {
    unint64_t v13 = ((((((((v12 + (v11 & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
          + 23) & 0xFFFFFFFFFFFFFFF8)
        + 16;
    unsigned int v14 = a2 - v10;
    uint64_t v15 = v13 & 0xFFFFFFF8;
    if ((v13 & 0xFFFFFFF8) != 0) {
      unsigned int v16 = 2;
    }
    else {
      unsigned int v16 = v14 + 1;
    }
    if (v16 >= 0x10000) {
      unsigned int v17 = 4;
    }
    else {
      unsigned int v17 = 2;
    }
    if (v16 < 0x100) {
      unsigned int v17 = 1;
    }
    if (v16 >= 2) {
      uint64_t v18 = v17;
    }
    else {
      uint64_t v18 = 0;
    }
    switch(v18)
    {
      case 1:
        int v19 = *((unsigned __int8 *)a1 + v13);
        if (!v19) {
          break;
        }
        goto LABEL_24;
      case 2:
        int v19 = *(unsigned __int16 *)((char *)a1 + v13);
        if (v19) {
          goto LABEL_24;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x10003EB2CLL);
      case 4:
        int v19 = *(int *)((char *)a1 + v13);
        if (!v19) {
          break;
        }
LABEL_24:
        int v21 = v19 - 1;
        if (v15)
        {
          int v21 = 0;
          int v22 = *a1;
        }
        else
        {
          int v22 = 0;
        }
        return v10 + (v22 | v21) + 1;
      default:
        break;
    }
  }
  if (v6 == v10) {
    return (*(uint64_t (**)(int *, uint64_t, uint64_t))(v5 + 48))(a1, v6, v4);
  }
  unint64_t v23 = ((unint64_t)a1 + v11) & ~v9;
  if (v8 == v10) {
    return (*(uint64_t (**)(unint64_t))(v7 + 48))(v23);
  }
  unint64_t v24 = *(void *)((v12 + v23) & 0xFFFFFFFFFFFFFFF8);
  if (v24 >= 0xFFFFFFFF) {
    LODWORD(v24) = -1;
  }
  return (v24 + 1);
}

void storeEnumTagSinglePayload for Action(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(void *)(a4 + 24);
  uint64_t v9 = *(void *)(v8 - 8);
  unsigned int v10 = *(_DWORD *)(v9 + 84);
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  if (v10 <= v7) {
    unsigned int v12 = *(_DWORD *)(v6 + 84);
  }
  else {
    unsigned int v12 = *(_DWORD *)(v9 + 84);
  }
  if (v12 <= 0x7FFFFFFF) {
    unsigned int v12 = 0x7FFFFFFF;
  }
  uint64_t v13 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + v11;
  uint64_t v14 = *(void *)(*(void *)(v8 - 8) + 64) + 7;
  unint64_t v15 = ((((((((v14 + (v13 & ~v11)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
        + 23) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  if (v12 >= a3)
  {
    int v19 = 0;
    int v20 = a2 - v12;
    if (a2 <= v12)
    {
LABEL_19:
      switch(v19)
      {
        case 1:
          a1[v15] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_32;
        case 2:
          *(_WORD *)&a1[v15] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_32;
        case 3:
          goto LABEL_49;
        case 4:
          *(_DWORD *)&a1[v15] = 0;
          goto LABEL_31;
        default:
LABEL_31:
          if (a2)
          {
LABEL_32:
            if (v7 == v12)
            {
              unint64_t v23 = *(void (**)(void))(v6 + 56);
              v23();
            }
            else
            {
              unint64_t v24 = (unint64_t)&a1[v13] & ~v11;
              if (v10 == v12)
              {
                uint64_t v25 = *(void (**)(unint64_t))(v9 + 56);
                v25(v24);
              }
              else
              {
                uint64_t v26 = (void *)((v14 + v24) & 0xFFFFFFFFFFFFFFF8);
                if ((a2 & 0x80000000) != 0)
                {
                  uint64_t v27 = a2 ^ 0x80000000;
                  v26[1] = 0;
                }
                else
                {
                  uint64_t v27 = a2 - 1;
                }
                *uint64_t v26 = v27;
              }
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v16 = a3 - v12;
    if (((((((((v14 + (v13 & ~v11)) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8)
         + 23) & 0xFFFFFFF8) == 0xFFFFFFF0)
      unsigned int v17 = v16 + 1;
    else {
      unsigned int v17 = 2;
    }
    if (v17 >= 0x10000) {
      int v18 = 4;
    }
    else {
      int v18 = 2;
    }
    if (v17 < 0x100) {
      int v18 = 1;
    }
    if (v17 >= 2) {
      int v19 = v18;
    }
    else {
      int v19 = 0;
    }
    int v20 = a2 - v12;
    if (a2 <= v12) {
      goto LABEL_19;
    }
  }
  if (((((((((v14 + (v13 & ~v11)) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8)
       + 23) & 0xFFFFFFF8) == 0xFFFFFFF0)
    int v21 = v20;
  else {
    int v21 = 1;
  }
  if (((((((((v14 + (v13 & ~v11)) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8)
       + 23) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    int v22 = ~v12 + a2;
    bzero(a1, ((((((((v14 + (v13 & ~v11)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)+ 23) & 0xFFFFFFFFFFFFFFF8)+ 16);
    *(_DWORD *)a1 = v22;
  }
  switch(v19)
  {
    case 1:
      a1[v15] = v21;
      break;
    case 2:
      *(_WORD *)&a1[v15] = v21;
      break;
    case 3:
LABEL_49:
      __break(1u);
      JUMPOUT(0x10003EDF0);
    case 4:
      *(_DWORD *)&a1[v15] = v21;
      break;
    default:
      return;
  }
}

unint64_t destroy for ActionSupportedStatus(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 8);
  int v2 = -1;
  if (result < 0xFFFFFFFF) {
    int v2 = result;
  }
  if ((v2 + 1) <= 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for ActionSupportedStatus(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  LODWORD(v4) = -1;
  if (v3 < 0xFFFFFFFF) {
    uint64_t v4 = *(void *)(a2 + 8);
  }
  if ((v4 + 1) > 1)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    swift_bridgeObjectRetain();
  }
  return a1;
}

void *assignWithCopy for ActionSupportedStatus(void *a1, void *a2)
{
  LODWORD(v4) = -1;
  if (a1[1] >= 0xFFFFFFFFuLL) {
    LODWORD(v5) = -1;
  }
  else {
    uint64_t v5 = a1[1];
  }
  unsigned int v6 = v5 + 1;
  if (a2[1] < 0xFFFFFFFFuLL) {
    uint64_t v4 = a2[1];
  }
  unsigned int v7 = v4 + 1;
  if (v6 > 1)
  {
    if (v7 <= 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_12:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v7 > 1)
  {
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ActionSupportedStatus(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a1 + 8);
  int v5 = -1;
  if (v4 < 0xFFFFFFFF) {
    int v5 = v4;
  }
  if ((v5 + 1) > 1) {
    goto LABEL_9;
  }
  unint64_t v6 = *(void *)(a2 + 8);
  LODWORD(v7) = -1;
  if (v6 < 0xFFFFFFFF) {
    uint64_t v7 = *(void *)(a2 + 8);
  }
  if ((v7 + 1) > 1)
  {
    swift_bridgeObjectRelease();
LABEL_9:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ActionSupportedStatus(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFE && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) < 2) {
    LODWORD(v3) = 0;
  }
  if (v3 >= 2) {
    return (v3 - 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ActionSupportedStatus(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 1;
    }
  }
  return result;
}

uint64_t getEnumTag for ActionSupportedStatus(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  if ((v1 + 1) >= 2) {
    return v1;
  }
  else {
    return 0;
  }
}

void *destructiveInjectEnumTag for ActionSupportedStatus(void *result, unsigned int a2)
{
  if (a2 > 0x7FFFFFFE)
  {
    *unint64_t result = 0;
    result[1] = 0;
    *(_DWORD *)unint64_t result = a2 - 0x7FFFFFFF;
  }
  else if (a2)
  {
    result[1] = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ActionSupportedStatus()
{
  return &type metadata for ActionSupportedStatus;
}

void *initializeBufferWithCopyOfBuffer for ActionError(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for ActionError()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for ActionError(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for ActionError(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ActionError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ActionError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ActionError()
{
  return &type metadata for ActionError;
}

uint64_t outlined init with copy of TaskPriority?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&_sScPSgMD_0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10003F2B4()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTRyt_Tg5TA_0(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  int v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *int v5 = v2;
  v5[1] = closure #3 in static Actions.ReportConcern.action(context:);
  unint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&_sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTRyt_Tg5Tu_0
                                              + _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTRyt_Tg5Tu_0);
  return v6(a1, v4);
}

uint64_t objectdestroy_3Tm_0()
{
  uint64_t v1 = *(void *)(v0 + 16);
  long long v5 = *(_OWORD *)(v0 + 24);
  uint64_t v2 = (int *)(type metadata accessor for Action() - 8);
  uint64_t v3 = v0
     + ((*(unsigned __int8 *)(*(void *)v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v2 + 80));
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v3, v1);
  (*(void (**)(uint64_t))(*(void *)(v5 - 8) + 8))(v3 + v2[15]);
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #2 in Action.execute(bypassSupportedStatusCheck:)(uint64_t a1)
{
  return partial apply for closure #1 in Action.execute(bypassSupportedStatusCheck:)(a1, "%{public}s: waiting for finish to return…");
}

uint64_t partial apply for closure #1 in Action.execute(bypassSupportedStatusCheck:)(uint64_t a1, const char *a2)
{
  uint64_t v5 = v2[2];
  uint64_t v6 = v2[3];
  uint64_t v7 = v2[4];
  uint64_t v8 = v2[5];
  uint64_t v9 = *(void *)(type metadata accessor for Action() - 8);
  return closure #1 in Action.execute(bypassSupportedStatusCheck:)(a1, (uint64_t)v2 + ((*(unsigned __int8 *)(v9 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80)), v5, v6, v7, v8, a2);
}

uint64_t partial apply for closure #1 in closure #1 in Action.init(_:id:waitLogInterval:supportedStatus:perform:finish:)(uint64_t a1)
{
  return closure #1 in closure #1 in Action.init(_:id:waitLogInterval:supportedStatus:perform:finish:)(a1, v1[6], v1[7], v1[8], v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_10003F5D8()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v3 = (int *)(type metadata accessor for Action() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)v3 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v3 + 80);
  unint64_t v5 = v4 + *(void *)(*(void *)v3 + 64);
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&demangling cache variable for type metadata for Error);
  uint64_t v6 = type metadata accessor for CheckedContinuation();
  uint64_t v7 = *(void *)(v6 - 8);
  unint64_t v8 = (v5 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  swift_unknownObjectRelease();
  swift_release();
  uint64_t v9 = v0 + v4;
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v9, v2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v9 + v3[15], v1);
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v7 + 8))(v0 + v8, v6);
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #1 in closure #1 in Action.init(_:id:waitLogInterval:supportedStatus:perform:finish:)()
{
  long long v2 = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v1 + 32) = v2;
  uint64_t v3 = *(void *)(type metadata accessor for Action() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&demangling cache variable for type metadata for Error);
  uint64_t v6 = *(unsigned __int8 *)(*(void *)(type metadata accessor for CheckedContinuation() - 8) + 80);
  unint64_t v7 = v4 + v5 + v6;
  unint64_t v8 = *(int **)(v0 + 64);
  uint64_t v9 = v0 + v4;
  uint64_t v10 = v0 + (v7 & ~v6);
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v1 + 48) = v11;
  *uint64_t v11 = v1;
  v11[1] = partial apply for closure #2 in Action.execute(bypassSupportedStatusCheck:);
  uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t))((char *)v8 + *v8);
  unsigned int v12 = (void *)swift_task_alloc();
  v11[2] = v12;
  *unsigned int v12 = v11;
  v12[1] = partial apply for closure #1 in static MusicEngagementExtension.performRequest(with:completion:);
  return v14(v9, v10);
}

uint64_t lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t outlined consume of ActionSupportedStatus?(uint64_t a1, uint64_t a2)
{
  if (a2 != 2) {
    return outlined consume of ActionSupportedStatus(a1, a2);
  }
  return a1;
}

uint64_t outlined copy of ActionSupportedStatus?(uint64_t a1, uint64_t a2)
{
  if (a2 != 2) {
    return outlined copy of ActionSupportedStatus(a1, a2);
  }
  return a1;
}

uint64_t _finalizeUninitializedArray<A>(_:)(uint64_t a1)
{
  return a1;
}

uint64_t _sScTss5Error_pRs_rlE8priority9operationScTyxsAA_pGScPSg_xyYaKYAcntcfC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for TaskPriority();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(void *)(a3 + 16)) {
      return swift_task_create();
    }
    goto LABEL_3;
  }
  outlined destroy of TaskPriority?(a1);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    dispatch thunk of Actor.unownedExecutor.getter();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

uint64_t ActionMenu.Element.id.getter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for ActionMenu.Item();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  unint64_t v7 = (char *)&v14 - v6;
  __chkstk_darwin(v5);
  uint64_t v9 = (uint64_t *)((char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v10 + 16))(v9, v1, a1);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = *v9;
    unsigned int v12 = (void *)v9[6];
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(char *, uint64_t *, uint64_t))(v4 + 32))(v7, v9, v3);
    uint64_t v11 = dispatch thunk of CustomStringConvertible.description.getter();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  }
  return v11;
}

uint64_t static ActionMenu.Element.__derived_enum_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v37 = a2;
  uint64_t v36 = a1;
  uint64_t v33 = type metadata accessor for ActionMenu.Item();
  uint64_t v32 = *(void *)(v33 - 8);
  __chkstk_darwin(v33);
  unint64_t v7 = (char *)&v30 - v6;
  uint64_t v34 = a3;
  uint64_t v35 = a4;
  uint64_t v8 = type metadata accessor for ActionMenu.Element();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  unsigned int v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v30 - v13;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v31 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v16 = __chkstk_darwin(TupleTypeMetadata2);
  int v18 = (char *)&v30 - v17;
  int v19 = (char *)&v30 + *(int *)(v16 + 48) - v17;
  int v20 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v20((char *)&v30 - v17, v36, v8);
  v20(v19, v37, v8);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    v20(v14, (uint64_t)v18, v8);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      uint64_t v26 = v32;
      uint64_t v27 = v33;
      (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v7, v19, v33);
      char v25 = static ActionMenu.Item.== infix(_:_:)((uint64_t)v14, (uint64_t)v7);
      unint64_t v28 = *(void (**)(char *, uint64_t))(v26 + 8);
      v28(v7, v27);
      v28(v14, v27);
      goto LABEL_9;
    }
    (*(void (**)(char *, uint64_t))(v32 + 8))(v14, v33);
    goto LABEL_7;
  }
  v20(v12, (uint64_t)v18, v8);
  long long v21 = *((_OWORD *)v12 + 3);
  v38[2] = *((_OWORD *)v12 + 2);
  v38[3] = v21;
  v38[4] = *((_OWORD *)v12 + 4);
  long long v22 = *((_OWORD *)v12 + 1);
  v38[0] = *(_OWORD *)v12;
  v38[1] = v22;
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    outlined release of ActionMenu<A>((uint64_t)v38);
LABEL_7:
    char v25 = 0;
    uint64_t v9 = v31;
    uint64_t v8 = TupleTypeMetadata2;
    goto LABEL_9;
  }
  long long v23 = *((_OWORD *)v19 + 3);
  v39[2] = *((_OWORD *)v19 + 2);
  v39[3] = v23;
  v39[4] = *((_OWORD *)v19 + 4);
  long long v24 = *((_OWORD *)v19 + 1);
  v39[0] = *(_OWORD *)v19;
  v39[1] = v24;
  char v25 = static ActionMenu.== infix(_:_:)(v38, v39);
  outlined release of ActionMenu<A>((uint64_t)v39);
  outlined release of ActionMenu<A>((uint64_t)v38);
LABEL_9:
  (*(void (**)(char *, uint64_t))(v9 + 8))(v18, v8);
  return v25 & 1;
}

uint64_t protocol witness for Identifiable.id.getter in conformance ActionMenu<A>.Element@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = ActionMenu.Element.id.getter(a1);
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance ActionMenu<A>.Element(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return static ActionMenu.Element.__derived_enum_equals(_:_:)(a1, a2, *(void *)(a3 + 16), *(void *)(a3 + 24));
}

uint64_t static ActionMenu.ElementBuilder.buildBlock(_:)()
{
  return static ActionMenu.ElementBuilder.buildBlock(_:)();
}

{
  type metadata accessor for ActionMenu.Element();
  type metadata accessor for Array();
  type metadata accessor for Array();
  swift_getWitnessTable();
  swift_getWitnessTable();
  return Sequence.flatMap<A>(_:)();
}

uint64_t static ActionMenu.ElementBuilder.buildArray(_:)()
{
  return static ActionMenu.ElementBuilder.buildBlock(_:)();
}

uint64_t static ActionMenu.ElementBuilder.buildIf(_:)(uint64_t a1)
{
  if (a1)
  {
    uint64_t v1 = a1;
  }
  else
  {
    type metadata accessor for ActionMenu.Element();
    uint64_t v1 = static Array._allocateUninitialized(_:)();
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v61 = a3;
  uint64_t v62 = a6;
  uint64_t v60 = a4;
  uint64_t v63 = a3;
  uint64_t v64 = a2;
  uint64_t v65 = a4;
  uint64_t v66 = a5;
  uint64_t v9 = type metadata accessor for Action();
  uint64_t v49 = *(void *)(v9 - 8);
  uint64_t v10 = *(void *)(v49 + 64);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v54 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v11);
  unint64_t v52 = (char *)&v44 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v44 - v15;
  uint64_t v47 = (char *)&v44 - v15;
  uint64_t v17 = *(void *)(a2 - 8);
  __chkstk_darwin(v14);
  int v19 = (char *)&v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = v19;
  uint64_t v55 = type metadata accessor for ActionMenu.Element();
  type metadata accessor for _ContiguousArrayStorage();
  swift_allocObject();
  uint64_t v53 = static Array._adoptStorage(_:count:)();
  uint64_t v51 = v20;
  uint64_t v21 = *(int *)(v9 + 52);
  uint64_t v59 = a1;
  uint64_t v22 = a1 + v21;
  long long v23 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  uint64_t v56 = a2;
  v23(v19, v22, a2);
  uint64_t v24 = v49;
  uint64_t v48 = *(void (**)(char *, uint64_t, uint64_t))(v49 + 16);
  v48(v16, a1, v9);
  uint64_t v25 = *(unsigned __int8 *)(v24 + 80);
  uint64_t v26 = (v25 + 56) & ~v25;
  uint64_t v46 = v26;
  uint64_t v57 = v25 | 7;
  uint64_t v58 = v26 + v10;
  uint64_t v27 = (void *)swift_allocObject();
  uint64_t v29 = v60;
  uint64_t v28 = v61;
  v27[2] = a2;
  v27[3] = v28;
  v27[4] = v29;
  v27[5] = a5;
  uint64_t v45 = a5;
  uint64_t v30 = v62;
  v27[6] = v62;
  uint64_t v49 = *(void *)(v24 + 32);
  uint64_t v44 = v9;
  ((void (*)(char *, char *, uint64_t))v49)((char *)v27 + v26, v47, v9);
  uint64_t v31 = v52;
  uint64_t v32 = v48;
  v48(v52, v59, v9);
  uint64_t v33 = (void *)swift_allocObject();
  v33[2] = v56;
  v33[3] = v28;
  v33[4] = v29;
  v33[5] = a5;
  uint64_t v34 = v46;
  uint64_t v35 = (char *)v33 + v46;
  v33[6] = v30;
  uint64_t v36 = v44;
  uint64_t v37 = (void (*)(char *, char *, uint64_t))v49;
  ((void (*)(char *, char *, uint64_t))v49)(v35, v31, v44);
  uint64_t v38 = v54;
  v32(v54, v59, v36);
  uint64_t v39 = (char *)swift_allocObject();
  uint64_t v40 = v56;
  uint64_t v41 = v61;
  *((void *)v39 + 2) = v56;
  *((void *)v39 + 3) = v41;
  uint64_t v42 = v45;
  *((void *)v39 + 4) = v60;
  *((void *)v39 + 5) = v42;
  *((void *)v39 + 6) = v62;
  v37(&v39[v34], v38, v36);
  ActionMenu.Item.init(id:menuItemConfiguring:supportedStatus:execute:)((uint64_t)v50, (uint64_t)partial apply for closure #1 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:), (uint64_t)v27, (uint64_t)partial apply for closure #2 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:), (uint64_t)v33, (uint64_t)&async function pointer to partial apply for closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:), (uint64_t)v39, v40, v51);
  swift_storeEnumTagMultiPayload();
  type metadata accessor for Array();
  return v53;
}

uint64_t closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[10] = a5;
  v6[11] = a6;
  v6[8] = a3;
  v6[9] = a4;
  v6[6] = a1;
  v6[7] = a2;
  v6[2] = a3;
  v6[3] = a2;
  v6[4] = a4;
  v6[5] = a5;
  uint64_t v7 = type metadata accessor for Action();
  v6[12] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v6[13] = v8;
  v6[14] = *(void *)(v8 + 64);
  v6[15] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&_sScPSgMD_0);
  v6[16] = swift_task_alloc();
  return _swift_task_switch(closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:), 0, 0);
}

uint64_t closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)()
{
  uint64_t v2 = *(void *)(v0 + 120);
  uint64_t v1 = *(void *)(v0 + 128);
  uint64_t v3 = *(void *)(v0 + 104);
  uint64_t v5 = *(void *)(v0 + 88);
  uint64_t v4 = *(void *)(v0 + 96);
  uint64_t v6 = *(void *)(v0 + 48);
  uint64_t v7 = type metadata accessor for TaskPriority();
  long long v12 = *(_OWORD *)(v0 + 56);
  long long v13 = *(_OWORD *)(v0 + 72);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v1, 1, 1, v7);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v6, v4);
  unint64_t v8 = (*(unsigned __int8 *)(v3 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = 0;
  *(void *)(v9 + 24) = 0;
  *(_OWORD *)(v9 + 32) = v12;
  *(_OWORD *)(v9 + 48) = v13;
  *(void *)(v9 + 64) = v5;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32))(v9 + v8, v2, v4);
  _sScTss5Error_pRs_rlE8priority9operationScTyxsAA_pGScPSg_xyYaKYAcntcfC(v1, (uint64_t)&async function pointer to partial apply for closure #1 in closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:), v9);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t closure #1 in closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14 = (void *)swift_task_alloc();
  v8[2] = a6;
  v8[3] = a5;
  v8[4] = a7;
  v8[5] = a8;
  v8[6] = v14;
  uint64_t v15 = type metadata accessor for Action();
  *uint64_t v14 = v8;
  v14[1] = partial apply for closure #2 in Action.execute(bypassSupportedStatusCheck:);
  return Action.execute(bypassSupportedStatusCheck:)(a1, 0, v15);
}

uint64_t static ActionMenu.ElementBuilder.buildExpression(_:)(_OWORD *a1)
{
  type metadata accessor for ActionMenu.Element();
  type metadata accessor for _ContiguousArrayStorage();
  swift_allocObject();
  uint64_t v2 = static Array._adoptStorage(_:count:)();
  *uint64_t v3 = *a1;
  long long v4 = a1[4];
  long long v6 = a1[1];
  long long v5 = a1[2];
  v3[3] = a1[3];
  v3[4] = v4;
  v3[1] = v6;
  v3[2] = v5;
  swift_storeEnumTagMultiPayload();
  type metadata accessor for Array();
  outlined retain of ActionMenu<A>((uint64_t)a1);
  return v2;
}

uint64_t specialized String.init<A>(describing:)()
{
  return dispatch thunk of CustomStringConvertible.description.getter();
}

uint64_t type metadata accessor for ActionMenu.Element()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t outlined release of ActionMenu<A>(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 48);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return a1;
}

uint64_t partial apply for closure #1 in static ActionMenu.ElementBuilder.buildArray(_:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *a1;
  return swift_bridgeObjectRetain();
}

uint64_t partial apply for closure #1 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t v4 = *(void *)(v1 + 48);
  uint64_t v5 = *(void *)(type metadata accessor for Action() - 8);
  uint64_t v6 = v1 + ((*(unsigned __int8 *)(v5 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  a1[3] = v3;
  a1[4] = v4;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a1);
  unint64_t v8 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v8(boxed_opaque_existential_1, v6, v3);
}

uint64_t partial apply for closure #2 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)()
{
  type metadata accessor for Action();
  uint64_t v0 = type metadata accessor for Action();
  return Action.supportedStatus()(v0);
}

uint64_t objectdestroyTm_0()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = (int *)(type metadata accessor for Action() - 8);
  uint64_t v4 = v0
     + ((*(unsigned __int8 *)(*(void *)v3 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v3 + 80));
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v4, v2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v4 + v3[15], v1);
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = v0[4];
  uint64_t v5 = v0[5];
  uint64_t v6 = v0[6];
  v1[2] = v3;
  v1[3] = v2;
  v1[4] = v4;
  v1[5] = v5;
  uint64_t v7 = *(void *)(type metadata accessor for Action() - 8);
  uint64_t v8 = (uint64_t)v0 + ((*(unsigned __int8 *)(v7 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  v1[6] = v9;
  *uint64_t v9 = v1;
  v9[1] = partial apply for closure #2 in Action.execute(bypassSupportedStatusCheck:);
  return closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)(v8, v2, v3, v4, v5, v6);
}

uint64_t outlined retain of ActionMenu<A>(uint64_t a1)
{
  id v2 = *(id *)(a1 + 48);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *associated type witness table accessor for Identifiable.ID : Hashable in ActionMenu<A>.Element()
{
  return &protocol witness table for String;
}

uint64_t type metadata instantiation function for ActionMenu.Element(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 24);
}

uint64_t type metadata completion function for ActionMenu.Element()
{
  uint64_t result = type metadata accessor for ActionMenu.Item();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for ActionMenu.Element(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(*(void *)(a3 + 16) - 8) + 80) & 0xF8;
  uint64_t v4 = *a2;
  *a1 = *a2;
  uint64_t v5 = v4 + ((unsigned __int16)(v3 + 23) & (unsigned __int16)~(_WORD)v3 & 0x1F8);
  swift_retain();
  return v5;
}

uint64_t destroy for ActionMenu.Element(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  unint64_t v4 = 80;
  if (((((((v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x50) {
    unint64_t v4 = ((((((v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  unsigned int v5 = *(unsigned __int8 *)(a1 + v4);
  uint64_t v6 = v4 & 0xFFFFFFF8;
  if (v5 >= 2 && v6 != 0) {
    unsigned int v5 = *(_DWORD *)a1 + 2;
  }
  if (v5 == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 8))(a1);
    swift_release();
    swift_release();
  }

  return swift_release();
}

uint64_t initializeWithCopy for ActionMenu.Element(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  if (((((((v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16 <= 0x50) {
    unint64_t v6 = 80;
  }
  else {
    unint64_t v6 = ((((((v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  unsigned int v7 = *(unsigned __int8 *)(a2 + v6);
  if (v7 >= 2 && (v6 & 0xFFFFFFF8) != 0) {
    unsigned int v7 = *(_DWORD *)a2 + 2;
  }
  if (v7 == 1)
  {
    uint64_t v9 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v9;
    uint64_t v10 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = v10;
    uint64_t v11 = *(void *)(a2 + 40);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = v11;
    long long v12 = *(void **)(a2 + 48);
    *(void *)(a1 + 48) = v12;
    *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
    uint64_t v13 = *(void *)(a2 + 72);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(void *)(a1 + 72) = v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v14 = v12;
    char v15 = 1;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a3 + 16) - 8) + 16))(a1, a2);
    uint64_t v16 = (void *)((a1 + v5 + 7) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v17 = (void *)((a2 + v5 + 7) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v18 = v17[1];
    *uint64_t v16 = *v17;
    v16[1] = v18;
    int v19 = (void *)(((unint64_t)v16 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v20 = (void *)(((unint64_t)v17 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v21 = v20[1];
    void *v19 = *v20;
    v19[1] = v21;
    uint64_t v22 = (void *)(((unint64_t)v19 + 23) & 0xFFFFFFFFFFFFFFF8);
    long long v23 = (void *)(((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v24 = v23[1];
    void *v22 = *v23;
    v22[1] = v24;
    swift_retain();
    swift_retain();
    char v15 = 0;
  }
  swift_retain();
  *(unsigned char *)(a1 + v6) = v15;
  return a1;
}

uint64_t assignWithCopy for ActionMenu.Element(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    uint64_t v7 = *(void *)(v6 + 64);
    if (((((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16 <= 0x50) {
      unint64_t v8 = 80;
    }
    else {
      unint64_t v8 = ((((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
    }
    unsigned int v9 = *(unsigned __int8 *)(a1 + v8);
    if (v9 >= 2 && (v8 & 0xFFFFFFF8) != 0) {
      unsigned int v9 = *(_DWORD *)a1 + 2;
    }
    if (v9 == 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
      swift_release();
      swift_release();
    }
    swift_release();
    unsigned int v11 = *(unsigned __int8 *)(a2 + v8);
    if ((v8 & 0xFFFFFFF8) != 0 && v11 >= 2) {
      unsigned int v11 = *(_DWORD *)a2 + 2;
    }
    if (v11 == 1)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      uint64_t v13 = *(void **)(a2 + 48);
      *(void *)(a1 + 48) = v13;
      *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
      uint64_t v14 = *(void *)(a2 + 64);
      uint64_t v15 = *(void *)(a2 + 72);
      *(void *)(a1 + 64) = v14;
      *(void *)(a1 + 72) = v15;
      *(unsigned char *)(a1 + v8) = 1;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v16 = v13;
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(a1, a2, v5);
      uint64_t v17 = (void *)((a1 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v18 = (void *)((a2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v19 = v18[1];
      void *v17 = *v18;
      v17[1] = v19;
      uint64_t v20 = (void *)(((unint64_t)v17 + 23) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v21 = (void *)(((unint64_t)v18 + 23) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v22 = v21[1];
      *uint64_t v20 = *v21;
      v20[1] = v22;
      long long v23 = (void *)(((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v24 = (void *)(((unint64_t)v21 + 23) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v25 = v24[1];
      void *v23 = *v24;
      v23[1] = v25;
      *(unsigned char *)(a1 + v8) = 0;
      swift_retain();
      swift_retain();
    }
    swift_retain();
  }
  return a1;
}

_OWORD *initializeWithTake for ActionMenu.Element(_OWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  if (((((((v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16 <= 0x50) {
    unint64_t v6 = 80;
  }
  else {
    unint64_t v6 = ((((((v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  unsigned int v7 = *(unsigned __int8 *)(a2 + v6);
  if (v7 >= 2 && (v6 & 0xFFFFFFF8) != 0) {
    unsigned int v7 = *(_DWORD *)a2 + 2;
  }
  if (v7 == 1)
  {
    long long v9 = *(_OWORD *)(a2 + 48);
    a1[2] = *(_OWORD *)(a2 + 32);
    a1[3] = v9;
    a1[4] = *(_OWORD *)(a2 + 64);
    long long v10 = *(_OWORD *)(a2 + 16);
    *a1 = *(_OWORD *)a2;
    a1[1] = v10;
  }
  else
  {
    (*(void (**)(_OWORD *, uint64_t))(*(void *)(*(void *)(a3 + 16) - 8) + 32))(a1, a2);
    LOBYTE(v7) = 0;
    unsigned int v11 = (_OWORD *)(((unint64_t)a1 + v5 + 7) & 0xFFFFFFFFFFFFFFF8);
    long long v12 = (_OWORD *)((a2 + v5 + 7) & 0xFFFFFFFFFFFFFFF8);
    *unsigned int v11 = *v12;
    uint64_t v13 = (_OWORD *)(((unint64_t)v11 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v14 = (_OWORD *)(((unint64_t)v12 + 23) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v13 = *v14;
    *(_OWORD *)(((unint64_t)v13 + 23) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v14 + 23) & 0xFFFFFFFFFFFFFFF8);
  }
  *((unsigned char *)a1 + v6) = v7;
  return a1;
}

uint64_t assignWithTake for ActionMenu.Element(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    uint64_t v7 = *(void *)(v6 + 64);
    if (((((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16 <= 0x50) {
      unint64_t v8 = 80;
    }
    else {
      unint64_t v8 = ((((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
    }
    unsigned int v9 = *(unsigned __int8 *)(a1 + v8);
    if (v9 >= 2 && (v8 & 0xFFFFFFF8) != 0) {
      unsigned int v9 = *(_DWORD *)a1 + 2;
    }
    if (v9 == 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
      swift_release();
      swift_release();
    }
    swift_release();
    unsigned int v11 = *(unsigned __int8 *)(a2 + v8);
    if ((v8 & 0xFFFFFFF8) != 0 && v11 >= 2) {
      unsigned int v11 = *(_DWORD *)a2 + 2;
    }
    if (v11 == 1)
    {
      long long v13 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = v13;
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
      long long v14 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v14;
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(a1, a2, v5);
      LOBYTE(v11) = 0;
      uint64_t v15 = (_OWORD *)((a1 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
      id v16 = (_OWORD *)((a2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
      _OWORD *v15 = *v16;
      uint64_t v17 = (_OWORD *)(((unint64_t)v15 + 23) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v18 = (_OWORD *)(((unint64_t)v16 + 23) & 0xFFFFFFFFFFFFFFF8);
      _OWORD *v17 = *v18;
      *(_OWORD *)(((unint64_t)v17 + 23) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v18 + 23) & 0xFFFFFFFFFFFFFFF8);
    }
    *(unsigned char *)(a1 + v8) = v11;
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for ActionMenu.Element(unsigned __int8 *a1, unsigned int a2, uint64_t a3)
{
  unint64_t v3 = ((((((*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
       + 23) & 0xFFFFFFFFFFFFFFF8)
     + 16;
  if (v3 <= 0x50) {
    unint64_t v3 = 80;
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_20;
  }
  uint64_t v4 = v3 | 1;
  char v5 = 8 * (v3 | 1);
  if ((v3 | 1) <= 3)
  {
    unsigned int v6 = (a2 + ~(-1 << v5) - 254) >> v5;
    if (v6 > 0xFFFE)
    {
      int v7 = *(_DWORD *)&a1[v4];
      if (!v7) {
        goto LABEL_20;
      }
      goto LABEL_13;
    }
    if (v6 > 0xFE)
    {
      int v7 = *(unsigned __int16 *)&a1[v4];
      if (!*(_WORD *)&a1[v4]) {
        goto LABEL_20;
      }
      goto LABEL_13;
    }
    if (!v6) {
      goto LABEL_20;
    }
  }
  int v7 = a1[v4];
  if (!a1[v4])
  {
LABEL_20:
    unsigned int v11 = a1[v3];
    if (v11 >= 2) {
      return (v11 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
LABEL_13:
  int v9 = (v7 - 1) << v5;
  if (v4 >= 4) {
    int v9 = 0;
  }
  if (v4 == 1) {
    int v10 = *a1;
  }
  else {
    int v10 = *(_DWORD *)a1;
  }
  return (v10 | v9) + 255;
}

void storeEnumTagSinglePayload for ActionMenu.Element(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5 = ((((((*(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
       + 23) & 0xFFFFFFFFFFFFFFF8)
     + 16;
  if (v5 <= 0x50) {
    unint64_t v5 = 80;
  }
  size_t v6 = v5 | 1;
  if (a3 < 0xFF)
  {
    int v7 = 0;
  }
  else if (v6 <= 3)
  {
    unsigned int v10 = (a3 + ~(-1 << (8 * v6)) - 254) >> (8 * v6);
    if (v10 > 0xFFFE)
    {
      int v7 = 4;
    }
    else if (v10 >= 0xFF)
    {
      int v7 = 2;
    }
    else
    {
      int v7 = v10 != 0;
    }
  }
  else
  {
    int v7 = 1;
  }
  if (a2 <= 0xFE)
  {
    switch(v7)
    {
      case 1:
        a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_24;
      case 2:
        *(_WORD *)&a1[v6] = 0;
        goto LABEL_23;
      case 3:
        goto LABEL_31;
      case 4:
        *(_DWORD *)&a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_24;
      default:
LABEL_23:
        if (a2) {
LABEL_24:
        }
          a1[v5] = -(char)a2;
        break;
    }
    return;
  }
  unsigned int v8 = a2 - 255;
  if (v6 < 4)
  {
    int v9 = (v8 >> (8 * v6)) + 1;
    v8 &= ~(-1 << (8 * v6));
    bzero(a1, v6);
    if (v6 == 1)
    {
      *a1 = v8;
      goto LABEL_20;
    }
  }
  else
  {
    bzero(a1, v5 | 1);
    int v9 = 1;
  }
  *(_DWORD *)a1 = v8;
LABEL_20:
  switch(v7)
  {
    case 1:
      a1[v6] = v9;
      break;
    case 2:
      *(_WORD *)&a1[v6] = v9;
      break;
    case 3:
LABEL_31:
      __break(1u);
      JUMPOUT(0x100041D48);
    case 4:
      *(_DWORD *)&a1[v6] = v9;
      break;
    default:
      return;
  }
}

uint64_t getEnumTag for ActionMenu.Element(_DWORD *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(a2 + 16) - 8);
  unint64_t v3 = 80;
  if (((((((*(void *)(v2 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
     + 16 > 0x50)
    unint64_t v3 = ((((((*(void *)(v2 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  uint64_t v4 = *((unsigned __int8 *)a1 + v3);
  uint64_t v5 = v3 & 0xFFFFFFF8;
  if (v4 >= 2 && v5 != 0) {
    return (*a1 + 2);
  }
  return v4;
}

void destructiveInjectEnumTag for ActionMenu.Element(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  size_t v4 = ((((((*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
       + 23) & 0xFFFFFFFFFFFFFFF8)
     + 16;
  if (v4 <= 0x50) {
    size_t v4 = 80;
  }
  if (a2 > 1)
  {
    if (v4) {
      char v5 = 2;
    }
    else {
      char v5 = a2;
    }
    if (v4) {
      unsigned int v6 = a2 - 2;
    }
    else {
      unsigned int v6 = 0;
    }
    a1[v4] = v5;
    bzero(a1, v4);
    *(_DWORD *)a1 = v6;
  }
  else
  {
    a1[v4] = a2;
  }
}

uint64_t type metadata instantiation function for ActionMenu.ElementBuilder(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 16);
}

uint64_t type metadata accessor for ActionMenu.ElementBuilder()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_100041E8C()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = *(void *)(v0 + 40);
  unint64_t v3 = (int *)(type metadata accessor for Action() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)v3 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v3 + 80);
  swift_unknownObjectRelease();
  uint64_t v5 = v0 + v4;
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v5, v2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v5 + v3[15], v1);
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)(uint64_t a1)
{
  uint64_t v4 = v1[4];
  uint64_t v5 = v1[5];
  uint64_t v6 = v1[6];
  uint64_t v7 = v1[7];
  void v2[2] = v5;
  v2[3] = v4;
  v2[4] = v6;
  v2[5] = v7;
  uint64_t v8 = *(void *)(type metadata accessor for Action() - 8);
  uint64_t v9 = v1[2];
  uint64_t v10 = v1[3];
  uint64_t v11 = (uint64_t)v1 + ((*(unsigned __int8 *)(v8 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  long long v12 = (void *)swift_task_alloc();
  v2[6] = v12;
  *long long v12 = v2;
  v12[1] = partial apply for closure #1 in closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:);
  return closure #1 in closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)(a1, v9, v10, v11, v4, v5, v6, v7);
}

uint64_t outlined destroy of TaskPriority?(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&_sScPSgMD_0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t __swift_instantiateGenericMetadata()
{
  return swift_getGenericMetadata();
}

uint64_t partial apply for closure #1 in static ActionMenu.ElementBuilder.buildBlock(_:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return partial apply for closure #1 in static ActionMenu.ElementBuilder.buildArray(_:)(a1, a2);
}

void *MetricsEvent.Click.ActionDetails.init(_:)(uint64_t a1)
{
  uint64_t v1 = specialized MetricsEvent.Click.ActionDetails.init(_:)(a1);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t static Actions.reportClickEvent(targetIdentifier:targetType:actionType:actionURL:actionDetails:reportingContext:)(uint64_t a1, uint64_t a2, int a3, int a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, unsigned __int16 a9, uint64_t *a10)
{
  return specialized static Actions.reportClickEvent(targetIdentifier:targetType:actionType:actionURL:actionDetails:reportingContext:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
}

uint64_t MusicItem.metricsTargetIdentifier.getter(uint64_t a1)
{
  __chkstk_darwin(a1);
  (*(void (**)(char *))(v2 + 16))((char *)&v9 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CatalogIDProviding);
  if ((swift_dynamicCast() & 1) == 0)
  {
    uint64_t v11 = 0;
    long long v9 = 0u;
    long long v10 = 0u;
    outlined destroy of TaskPriority?((uint64_t)&v9, (uint64_t *)&demangling cache variable for type metadata for CatalogIDProviding?);
    return 0x497972617262694CLL;
  }
  uint64_t v3 = *((void *)&v10 + 1);
  uint64_t v4 = v11;
  __swift_project_boxed_opaque_existential_0Tm(&v9, *((uint64_t *)&v10 + 1));
  uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4);
  if (!v6)
  {
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v9);
    return 0x497972617262694CLL;
  }
  uint64_t v7 = v5;
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v9);
  return v7;
}

uint64_t specialized MusicItem.metricsContentType.getter()
{
  return specialized MusicItem.metricsContentType.getter((void (*)(void))&type metadata accessor for Playlist, &demangling cache variable for type metadata for Playlist.Type);
}

{
  return specialized MusicItem.metricsContentType.getter((void (*)(void))&type metadata accessor for Album, &demangling cache variable for type metadata for Album.Type);
}

uint64_t specialized MusicItem.metricsContentType.getter(void (*a1)(void), uint64_t *a2)
{
  a1(0);
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v3 = String.init<A>(describing:)();
  unint64_t v5 = v4;
  specialized Collection.prefix(_:)(1);
  uint64_t countAndFlagsBits = Substring.lowercased()()._countAndFlagsBits;
  swift_bridgeObjectRelease();
  specialized Collection.dropFirst(_:)(1uLL, v3, v5);
  swift_bridgeObjectRelease();
  lazy protocol witness table accessor for type Substring and conformance Substring();
  swift_bridgeObjectRetain();
  String.append<A>(contentsOf:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return countAndFlagsBits;
}

uint64_t MusicItem.metricsContentType.getter()
{
  swift_getDynamicType();
  swift_getMetatypeMetadata();
  uint64_t v0 = String.init<A>(describing:)();
  unint64_t v2 = v1;
  specialized Collection.prefix(_:)(1);
  uint64_t countAndFlagsBits = Substring.lowercased()()._countAndFlagsBits;
  swift_bridgeObjectRelease();
  specialized Collection.dropFirst(_:)(1uLL, v0, v2);
  swift_bridgeObjectRelease();
  lazy protocol witness table accessor for type Substring and conformance Substring();
  swift_bridgeObjectRetain();
  String.append<A>(contentsOf:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return countAndFlagsBits;
}

uint64_t Playlist.Entry.metricsContentType.getter()
{
  uint64_t v0 = type metadata accessor for UploadedVideo();
  uint64_t v32 = *(void *)(v0 - 8);
  uint64_t v33 = v0;
  __chkstk_darwin(v0);
  uint64_t v31 = (char *)&v31 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = type metadata accessor for UploadedAudio();
  uint64_t v35 = *(void *)(v2 - 8);
  uint64_t v36 = v2;
  __chkstk_darwin(v2);
  uint64_t v34 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for TVEpisode();
  uint64_t v38 = *(void *)(v4 - 8);
  uint64_t v39 = v4;
  __chkstk_darwin(v4);
  uint64_t v37 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for MusicMovie();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  long long v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for MusicVideo();
  uint64_t v41 = *(void *)(v10 - 8);
  uint64_t v42 = v10;
  __chkstk_darwin(v10);
  long long v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for Song();
  uint64_t v40 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for Playlist.Entry.InternalItem();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  Playlist.Entry.internalItem.getter();
  int v20 = (*(uint64_t (**)(char *, uint64_t))(v17 + 88))(v19, v16);
  if (v20 == enum case for Playlist.Entry.InternalItem.musicMovie(_:))
  {
    (*(void (**)(char *, uint64_t))(v17 + 96))(v19, v16);
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v19, v6);
    uint64_t v21 = specialized MusicItem.metricsContentType.getter((void (*)(void))&type metadata accessor for MusicMovie, &demangling cache variable for type metadata for MusicMovie.Type);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  else if (v20 == enum case for Playlist.Entry.InternalItem.musicVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v17 + 96))(v19, v16);
    uint64_t v23 = v41;
    uint64_t v22 = v42;
    (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v12, v19, v42);
    uint64_t v21 = specialized MusicItem.metricsContentType.getter((void (*)(void))&type metadata accessor for MusicVideo, &demangling cache variable for type metadata for MusicVideo.Type);
    (*(void (**)(char *, uint64_t))(v23 + 8))(v12, v22);
  }
  else if (v20 == enum case for Playlist.Entry.InternalItem.song(_:))
  {
    (*(void (**)(char *, uint64_t))(v17 + 96))(v19, v16);
    uint64_t v24 = v40;
    (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v15, v19, v13);
    uint64_t v21 = specialized MusicItem.metricsContentType.getter((void (*)(void))&type metadata accessor for Song, &demangling cache variable for type metadata for Song.Type);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v15, v13);
  }
  else
  {
    if (v20 == enum case for Playlist.Entry.InternalItem.tvEpisode(_:))
    {
      (*(void (**)(char *, uint64_t))(v17 + 96))(v19, v16);
      uint64_t v26 = v37;
      uint64_t v25 = v38;
      uint64_t v27 = v39;
      (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v37, v19, v39);
      uint64_t v28 = (uint64_t *)&demangling cache variable for type metadata for TVEpisode.Type;
      uint64_t v29 = &type metadata accessor for TVEpisode;
    }
    else if (v20 == enum case for Playlist.Entry.InternalItem.uploadedAudio(_:))
    {
      (*(void (**)(char *, uint64_t))(v17 + 96))(v19, v16);
      uint64_t v26 = v34;
      uint64_t v25 = v35;
      uint64_t v27 = v36;
      (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v34, v19, v36);
      uint64_t v28 = (uint64_t *)&demangling cache variable for type metadata for UploadedAudio.Type;
      uint64_t v29 = &type metadata accessor for UploadedAudio;
    }
    else
    {
      if (v20 != enum case for Playlist.Entry.InternalItem.uploadedVideo(_:))
      {
        (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
        return 1735290739;
      }
      (*(void (**)(char *, uint64_t))(v17 + 96))(v19, v16);
      uint64_t v26 = v31;
      uint64_t v25 = v32;
      uint64_t v27 = v33;
      (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v31, v19, v33);
      uint64_t v28 = (uint64_t *)&demangling cache variable for type metadata for UploadedVideo.Type;
      uint64_t v29 = &type metadata accessor for UploadedVideo;
    }
    uint64_t v21 = specialized MusicItem.metricsContentType.getter((void (*)(void))v29, v28);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v26, v27);
  }
  return v21;
}

uint64_t Actions.MetricsReportingContext.actionContext.getter()
{
  uint64_t v1 = *(void *)v0;
  outlined copy of MetricsEvent.Click.ActionContext?(*(void *)v0, *(void *)(v0 + 8));
  return v1;
}

uint64_t Actions.MetricsReportingContext.actionContext.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = outlined consume of MetricsEvent.Click.ActionContext?(*(void *)v2, *(void *)(v2 + 8));
  *(void *)uint64_t v2 = a1;
  *(void *)(v2 + 8) = a2;
  return result;
}

uint64_t Actions.MetricsReportingContext.page.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for Actions.MetricsReportingContext();
  return outlined init with copy of (String, Any)(v1 + *(int *)(v3 + 20), a1, &demangling cache variable for type metadata for MetricsEvent.Page?);
}

uint64_t Actions.MetricsReportingContext.page.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for Actions.MetricsReportingContext() + 20);

  return outlined assign with take of MetricsEvent.Page?(a1, v3);
}

CFRange (__swiftcall *Actions.MetricsReportingContext.page.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

uint64_t Actions.MetricsReportingContext.pageContext.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for Actions.MetricsReportingContext() + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Actions.MetricsReportingContext.pageContext.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for Actions.MetricsReportingContext() + 24));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

CFRange (__swiftcall *Actions.MetricsReportingContext.pageContext.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

uint64_t Actions.MetricsReportingContext.locations.getter()
{
  type metadata accessor for Actions.MetricsReportingContext();

  return swift_bridgeObjectRetain();
}

uint64_t Actions.MetricsReportingContext.locations.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for Actions.MetricsReportingContext() + 28);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v3) = a1;
  return result;
}

CFRange (__swiftcall *Actions.MetricsReportingContext.locations.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

uint64_t Actions.MetricsReportingContext.impressions.getter()
{
  type metadata accessor for Actions.MetricsReportingContext();

  return swift_bridgeObjectRetain();
}

uint64_t Actions.MetricsReportingContext.impressions.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for Actions.MetricsReportingContext() + 32);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v3) = a1;
  return result;
}

CFRange (__swiftcall *Actions.MetricsReportingContext.impressions.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

uint64_t Actions.MetricsReportingContext.sharedListeningContext.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Actions.MetricsReportingContext() + 36));
}

uint64_t Actions.MetricsReportingContext.sharedListeningContext.setter(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = type metadata accessor for Actions.MetricsReportingContext();
  uint64_t v8 = v3 + *(int *)(result + 36);
  *(unsigned char *)uint64_t v8 = a1;
  *(void *)(v8 + 8) = a2;
  *(void *)(v8 + 16) = a3;
  return result;
}

CFRange (__swiftcall *Actions.MetricsReportingContext.sharedListeningContext.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

uint64_t Actions.MetricsReportingContext.init(actionContext:page:pageContext:locations:impressions:sharedListeningContext:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, void *a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v16 = (int *)type metadata accessor for Actions.MetricsReportingContext();
  uint64_t v17 = (uint64_t)a9 + v16[5];
  uint64_t v18 = type metadata accessor for MetricsEvent.Page(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 1, 1, v18);
  uint64_t v19 = (void *)((char *)a9 + v16[6]);
  void *v19 = 0;
  v19[1] = 0;
  uint64_t v20 = v16[7];
  *(void *)((char *)a9 + v20) = 0;
  uint64_t v21 = v16[8];
  *(void *)((char *)a9 + v21) = 0;
  *a9 = a1;
  a9[1] = a2;
  outlined assign with take of MetricsEvent.Page?(a3, v17);
  swift_bridgeObjectRelease();
  void *v19 = a4;
  v19[1] = a5;
  swift_bridgeObjectRelease();
  *(void *)((char *)a9 + v20) = a6;
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)((char *)a9 + v21) = a7;
  uint64_t v23 = (char *)a9 + v16[9];
  char *v23 = a8;
  *((void *)v23 + 1) = a10;
  *((void *)v23 + 2) = a11;
  return result;
}

uint64_t MetricsEvent.Click.ActionDetails.Key.DestinationType.init(rawValue:)(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of MetricsEvent.Click.ActionDetails.Key.DestinationType.init(rawValue:), v2);
  swift_bridgeObjectRelease();
  if (v3 == 1) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = 2;
  }
  if (v3) {
    return v4;
  }
  else {
    return 0;
  }
}

uint64_t MetricsEvent.Click.ActionDetails.Key.DestinationType.rawValue.getter(char a1)
{
  if (a1) {
    return 0x7473696C79616C70;
  }
  else {
    return 0x7972617262696CLL;
  }
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance MetricsEvent.Click.ActionDetails.Key.DestinationType(char *a1, char *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance MetricsEvent.Click.ActionDetails.Key.DestinationType()
{
  return Hasher._finalize()();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance MetricsEvent.Click.ActionDetails.Key.DestinationType()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance MetricsEvent.Click.ActionDetails.Key.DestinationType()
{
  return Hasher._finalize()();
}

uint64_t protocol witness for RawRepresentable.init(rawValue:) in conformance MetricsEvent.Click.ActionDetails.Key.DestinationType@<X0>(Swift::String *a1@<X0>, char *a2@<X8>)
{
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of MetricsEvent.Click.ActionDetails.Key.DestinationType.init(rawValue:), *a1);
  uint64_t result = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *a2 = v5;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance MetricsEvent.Click.ActionDetails.Key.DestinationType(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x7972617262696CLL;
  if (*v1) {
    uint64_t v2 = 0x7473696C79616C70;
  }
  unint64_t v3 = 0xE700000000000000;
  if (*v1) {
    unint64_t v3 = 0xE800000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

BOOL MetricsEvent.Click.ActionDetails.Key.PlayType.init(rawValue:)(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of MetricsEvent.Click.ActionDetails.Key.PlayType.init(rawValue:), v2);
  swift_bridgeObjectRelease();
  return v3 != 0;
}

uint64_t MetricsEvent.Click.ActionDetails.Key.PlayType.rawValue.getter()
{
  return 0x7453657461657263;
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance MetricsEvent.Click.ActionDetails.Key.PlayType()
{
  return Hasher._finalize()();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance MetricsEvent.Click.ActionDetails.Key.PlayType()
{
  return String.hash(into:)();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance MetricsEvent.Click.ActionDetails.Key.PlayType()
{
  return Hasher._finalize()();
}

uint64_t protocol witness for RawRepresentable.init(rawValue:) in conformance MetricsEvent.Click.ActionDetails.Key.PlayType@<X0>(Swift::String *a1@<X0>, BOOL *a2@<X8>)
{
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of protocol witness for RawRepresentable.init(rawValue:) in conformance MetricsEvent.Click.ActionDetails.Key.PlayType, *a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3 != 0;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance MetricsEvent.Click.ActionDetails.Key.PlayType(uint64_t a1@<X8>)
{
  *(_WORD *)(a1 + 14) = -4864;
}

uint64_t MetricsEvent.Click.ActionDetails.Key.NavigationType.rawValue.getter(char a1)
{
  uint64_t result = 0x6D75626C41;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x747369747241;
      break;
    case 2:
      uint64_t result = 0x7473696C79616C50;
      break;
    case 3:
      uint64_t result = 0x434174726F706552;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance MetricsEvent.Click.ActionDetails.Key.NavigationType(unsigned __int8 *a1, char *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance MetricsEvent.Click.ActionDetails.Key.NavigationType()
{
  return Hasher._finalize()();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance MetricsEvent.Click.ActionDetails.Key.NavigationType()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance MetricsEvent.Click.ActionDetails.Key.NavigationType()
{
  return Hasher._finalize()();
}

unint64_t protocol witness for RawRepresentable.init(rawValue:) in conformance MetricsEvent.Click.ActionDetails.Key.NavigationType@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = specialized MetricsEvent.Click.ActionDetails.Key.NavigationType.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance MetricsEvent.Click.ActionDetails.Key.NavigationType(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xE500000000000000;
  uint64_t v3 = 0x6D75626C41;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE600000000000000;
      uint64_t v3 = 0x747369747241;
      goto LABEL_3;
    case 2:
      *(void *)a1 = 0x7473696C79616C50;
      *(void *)(a1 + 8) = 0xE800000000000000;
      break;
    case 3:
      strcpy((char *)a1, "ReportAConcern");
      *(unsigned char *)(a1 + 15) = -18;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

uint64_t Track.metricsContentType.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for MusicVideo();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  char v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Song();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  long long v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Track();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v1, v10);
  int v14 = (*(uint64_t (**)(char *, uint64_t))(v11 + 88))(v13, v10);
  if (v14 == enum case for Track.song(_:))
  {
    (*(void (**)(char *, uint64_t))(v11 + 96))(v13, v10);
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v13, v6);
    uint64_t v15 = specialized MusicItem.metricsContentType.getter((void (*)(void))&type metadata accessor for Song, &demangling cache variable for type metadata for Song.Type);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  else if (v14 == enum case for Track.musicVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v11 + 96))(v13, v10);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v13, v2);
    uint64_t v15 = specialized MusicItem.metricsContentType.getter((void (*)(void))&type metadata accessor for MusicVideo, &demangling cache variable for type metadata for MusicVideo.Type);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    return 1735290739;
  }
  return v15;
}

void *specialized MetricsEvent.Click.ActionDetails.init(_:)(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    uint64_t v2 = (char *)(swift_bridgeObjectRetain() + 48);
    while (1)
    {
      uint64_t v5 = *((void *)v2 - 2);
      unint64_t v4 = *((void *)v2 - 1);
      uint64_t v32 = v2 + 24;
      uint64_t v6 = 0xE800000000000000;
      uint64_t v7 = 0x6570795479616C70;
      unint64_t v8 = 0xED00006E6F697461;
      uint64_t v9 = 0x7453657461657263;
      uint64_t v30 = v1;
      char v31 = *v2;
      switch(*v2)
      {
        case 1:
          lazy protocol witness table accessor for type String and conformance String();
          uint64_t v9 = StringProtocol.capitalized.getter();
          unint64_t v8 = v10;
          swift_bridgeObjectRelease();
          uint64_t v6 = 0xE500000000000000;
          uint64_t v7 = 0x6F54646461;
          break;
        case 2:
          lazy protocol witness table accessor for type String and conformance String();
          uint64_t v9 = StringProtocol.capitalized.getter();
          unint64_t v8 = v11;
          swift_bridgeObjectRelease();
          uint64_t v6 = 0xEA00000000006D6FLL;
          uint64_t v7 = 0x72466574656C6564;
          break;
        case 3:
          uint64_t v6 = 0xEA00000000006F54;
          unint64_t v8 = 0xE500000000000000;
          uint64_t v9 = 0x6D75626C41;
          uint64_t v7 = 0x657461676976616ELL;
          switch(*((void *)v2 - 2))
          {
            case 1u:
              unint64_t v8 = 0xE600000000000000;
              uint64_t v9 = 0x747369747241;
              break;
            case 2u:
              uint64_t v9 = 0x7473696C79616C50;
              unint64_t v8 = 0xE800000000000000;
              break;
            case 3u:
              unint64_t v8 = 0xEE006E7265636E6FLL;
              uint64_t v9 = 0x434174726F706552;
              break;
            default:
              goto LABEL_13;
          }
          break;
        case 4:
          break;
        default:
          swift_bridgeObjectRetain_n();
          uint64_t v6 = 0xE400000000000000;
          uint64_t v9 = v5;
          unint64_t v8 = v4;
          uint64_t v7 = 1684957547;
          break;
      }
LABEL_13:
      uint64_t v12 = v9;
      uint64_t v29 = v4;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v14 = v7;
      unint64_t v16 = specialized __RawDictionaryStorage.find<A>(_:)(v7, v6);
      uint64_t v17 = *((void *)&_swiftEmptyDictionarySingleton + 2);
      BOOL v18 = (v15 & 1) == 0;
      uint64_t v19 = v17 + v18;
      if (__OFADD__(v17, v18))
      {
        __break(1u);
LABEL_27:
        __break(1u);
LABEL_28:
        KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
        __break(1u);
        JUMPOUT(0x100044240);
      }
      char v20 = v15;
      if (*((void *)&_swiftEmptyDictionarySingleton + 3) >= v19)
      {
        if (isUniquelyReferenced_nonNull_native)
        {
          if ((v15 & 1) == 0) {
            goto LABEL_20;
          }
        }
        else
        {
          specialized _NativeDictionary.copy()();
          if ((v20 & 1) == 0) {
            goto LABEL_20;
          }
        }
      }
      else
      {
        specialized _NativeDictionary._copyOrMoveAndResize(capacity:moveElements:)(v19, isUniquelyReferenced_nonNull_native);
        unint64_t v21 = specialized __RawDictionaryStorage.find<A>(_:)(v14, v6);
        if ((v20 & 1) != (v22 & 1)) {
          goto LABEL_28;
        }
        unint64_t v16 = v21;
        if ((v20 & 1) == 0)
        {
LABEL_20:
          *((void *)&_swiftEmptyDictionarySingleton + (v16 >> 6) + 8) |= 1 << v16;
          uint64_t v23 = (uint64_t *)(*((void *)&_swiftEmptyDictionarySingleton + 6) + 16 * v16);
          uint64_t *v23 = v14;
          v23[1] = v6;
          uint64_t v24 = (uint64_t *)(*((void *)&_swiftEmptyDictionarySingleton + 7) + 16 * v16);
          *uint64_t v24 = v12;
          v24[1] = v8;
          uint64_t v25 = *((void *)&_swiftEmptyDictionarySingleton + 2);
          BOOL v26 = __OFADD__(v25, 1);
          uint64_t v27 = v25 + 1;
          if (v26) {
            goto LABEL_27;
          }
          *((void *)&_swiftEmptyDictionarySingleton + 2) = v27;
          swift_bridgeObjectRetain();
          goto LABEL_4;
        }
      }
      uint64_t v3 = (uint64_t *)(*((void *)&_swiftEmptyDictionarySingleton + 7) + 16 * v16);
      *uint64_t v3 = v12;
      v3[1] = v8;
      swift_bridgeObjectRelease();
LABEL_4:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      outlined consume of MetricsEvent.Click.ActionDetails.Key(v5, v29, v31);
      uint64_t v1 = v30 - 1;
      uint64_t v2 = v32;
      if (v30 == 1)
      {
        swift_bridgeObjectRelease();
        return &_swiftEmptyDictionarySingleton;
      }
    }
  }
  return &_swiftEmptyDictionarySingleton;
}

uint64_t specialized static Actions.reportClickEvent(targetIdentifier:targetType:actionType:actionURL:actionDetails:reportingContext:)(uint64_t a1, uint64_t a2, int a3, int a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, unsigned __int16 a9, uint64_t *a10)
{
  id v35 = a6;
  uint64_t v36 = a8;
  int v38 = a3;
  int v39 = a4;
  uint64_t v31 = a2;
  uint64_t v37 = a1;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MetricsEvent.Page?);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = v14;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = v17;
  uint64_t v18 = type metadata accessor for MetricsEvent.Click(0);
  __chkstk_darwin(v18 - 8);
  uint64_t v33 = (uint64_t)&v31 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of (String, Any)(a5, (uint64_t)v17, &demangling cache variable for type metadata for URL?);
  char v20 = (int *)type metadata accessor for Actions.MetricsReportingContext();
  uint64_t v21 = *(uint64_t *)((char *)a10 + v20[7]);
  uint64_t v22 = *a10;
  unint64_t v23 = a10[1];
  outlined init with copy of (String, Any)((uint64_t)a10 + v20[5], (uint64_t)v14, &demangling cache variable for type metadata for MetricsEvent.Page?);
  uint64_t v24 = *(uint64_t *)((char *)a10 + v20[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  outlined copy of MetricsEvent.Click.ActionContext?(v22, v23);
  id v25 = v35;
  uint64_t v26 = v36;
  outlined copy of MetricsEvent.Click.ActionDetails?(v35, a7, v36, a9);
  swift_bridgeObjectRetain();
  uint64_t v30 = v24;
  uint64_t v27 = v33;
  *((void *)&v29 + 1) = a7;
  *(void *)&long long v29 = v25;
  MetricsEvent.Click.init(targetIdentifier:targetType:actionType:actionURL:locations:actionContext:actionDetails:page:snapshotImpressions:)(v37, v31, v38, v39, (uint64_t)v34, v21, v22, v23, v33, v29, v26, a9, (uint64_t)v32, v30);
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  MetricsReportingController.recordClickEvent(_:pageContext:sharedListeningContext:)(v27, *(uint64_t *)((char *)a10 + v20[6]), *(uint64_t *)((char *)a10 + v20[6] + 8), *((unsigned char *)a10 + v20[9]), *(uint64_t *)((char *)a10 + v20[9] + 8), *(uint64_t *)((char *)a10 + v20[9] + 16));
  return outlined destroy of MetricsEvent.Page(v27, type metadata accessor for MetricsEvent.Click);
}

uint64_t specialized Collection.prefix(_:)(uint64_t result)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    String.index(_:offsetBy:limitedBy:)();
    return String.subscript.getter();
  }
  return result;
}

unint64_t specialized Collection.dropFirst(_:)(unint64_t result, uint64_t a2, unint64_t a3)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    return result;
  }
  if ((a3 & 0x2000000000000000) != 0) {
    uint64_t v3 = HIBYTE(a3) & 0xF;
  }
  else {
    uint64_t v3 = a2 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v4 = 7;
  if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0) {
    uint64_t v4 = 11;
  }
  unint64_t v5 = v4 | (v3 << 16);
  unint64_t result = String.index(_:offsetBy:limitedBy:)();
  if (v6) {
    unint64_t result = v5;
  }
  if (4 * v3 < result >> 14) {
    goto LABEL_14;
  }

  return String.subscript.getter();
}

unint64_t lazy protocol witness table accessor for type Substring and conformance Substring()
{
  unint64_t result = lazy protocol witness table cache variable for type Substring and conformance Substring;
  if (!lazy protocol witness table cache variable for type Substring and conformance Substring)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Substring and conformance Substring);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type Substring and conformance Substring;
  if (!lazy protocol witness table cache variable for type Substring and conformance Substring)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Substring and conformance Substring);
  }
  return result;
}

uint64_t outlined copy of MetricsEvent.Click.ActionContext?(uint64_t a1, unint64_t a2)
{
  if (a2 != 10) {
    return outlined copy of MetricsEvent.Click.ActionContext(a1, a2);
  }
  return a1;
}

uint64_t outlined copy of MetricsEvent.Click.ActionContext(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0xA) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t outlined consume of MetricsEvent.Click.ActionContext?(uint64_t a1, unint64_t a2)
{
  if (a2 != 10) {
    return outlined consume of MetricsEvent.Click.ActionContext(a1, a2);
  }
  return a1;
}

uint64_t outlined consume of MetricsEvent.Click.ActionContext(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0xA) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t type metadata accessor for Actions.MetricsReportingContext()
{
  uint64_t result = type metadata singleton initialization cache for Actions.MetricsReportingContext;
  if (!type metadata singleton initialization cache for Actions.MetricsReportingContext) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t outlined assign with take of MetricsEvent.Page?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MetricsEvent.Page?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t specialized MetricsEvent.Click.ActionDetails.Key.NavigationType.init(rawValue:)(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of MetricsEvent.Click.ActionDetails.Key.NavigationType.init(rawValue:), v2);
  swift_bridgeObjectRelease();
  if (v3 >= 4) {
    return 4;
  }
  else {
    return v3;
  }
}

unint64_t lazy protocol witness table accessor for type MetricsEvent.Click.ActionDetails.Key.DestinationType and conformance MetricsEvent.Click.ActionDetails.Key.DestinationType()
{
  unint64_t result = lazy protocol witness table cache variable for type MetricsEvent.Click.ActionDetails.Key.DestinationType and conformance MetricsEvent.Click.ActionDetails.Key.DestinationType;
  if (!lazy protocol witness table cache variable for type MetricsEvent.Click.ActionDetails.Key.DestinationType and conformance MetricsEvent.Click.ActionDetails.Key.DestinationType)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MetricsEvent.Click.ActionDetails.Key.DestinationType and conformance MetricsEvent.Click.ActionDetails.Key.DestinationType);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type MetricsEvent.Click.ActionDetails.Key.PlayType and conformance MetricsEvent.Click.ActionDetails.Key.PlayType()
{
  unint64_t result = lazy protocol witness table cache variable for type MetricsEvent.Click.ActionDetails.Key.PlayType and conformance MetricsEvent.Click.ActionDetails.Key.PlayType;
  if (!lazy protocol witness table cache variable for type MetricsEvent.Click.ActionDetails.Key.PlayType and conformance MetricsEvent.Click.ActionDetails.Key.PlayType)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MetricsEvent.Click.ActionDetails.Key.PlayType and conformance MetricsEvent.Click.ActionDetails.Key.PlayType);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type MetricsEvent.Click.ActionDetails.Key.NavigationType and conformance MetricsEvent.Click.ActionDetails.Key.NavigationType()
{
  unint64_t result = lazy protocol witness table cache variable for type MetricsEvent.Click.ActionDetails.Key.NavigationType and conformance MetricsEvent.Click.ActionDetails.Key.NavigationType;
  if (!lazy protocol witness table cache variable for type MetricsEvent.Click.ActionDetails.Key.NavigationType and conformance MetricsEvent.Click.ActionDetails.Key.NavigationType)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MetricsEvent.Click.ActionDetails.Key.NavigationType and conformance MetricsEvent.Click.ActionDetails.Key.NavigationType);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for Actions.MetricsReportingContext(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    unint64_t v7 = a2[1];
    if (v7 > 0xA)
    {
      *a1 = *a2;
      a1[1] = v7;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
    }
    uint64_t v8 = a3[5];
    uint64_t v9 = (uint64_t *)((char *)a1 + v8);
    unint64_t v10 = (uint64_t *)((char *)a2 + v8);
    unint64_t v11 = (int *)type metadata accessor for MetricsEvent.Page(0);
    uint64_t v12 = *((void *)v11 - 1);
    if ((*(unsigned int (**)(void *, uint64_t, int *))(v12 + 48))(v10, 1, v11))
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MetricsEvent.Page?);
      memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      uint64_t v40 = v12;
      uint64_t v15 = v10[1];
      *uint64_t v9 = *v10;
      v9[1] = v15;
      uint64_t v16 = v10[3];
      void v9[2] = v10[2];
      v9[3] = v16;
      uint64_t v17 = v11[6];
      __dst = (char *)v9 + v17;
      uint64_t v42 = (char *)v10 + v17;
      uint64_t v18 = type metadata accessor for URL();
      uint64_t v38 = *(void *)(v18 - 8);
      uint64_t v41 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v41(v42, 1, v18))
      {
        uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
        memcpy(__dst, v42, *(void *)(*(void *)(v19 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v38 + 16))(__dst, v42, v18);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v38 + 56))(__dst, 0, 1, v18);
      }
      *(void *)((char *)v9 + v11[7]) = *(void *)((char *)v10 + v11[7]);
      uint64_t v20 = v11[8];
      uint64_t v21 = (void *)((char *)v9 + v20);
      uint64_t v22 = (void *)((char *)v10 + v20);
      uint64_t v23 = v22[1];
      void *v21 = *v22;
      v21[1] = v23;
      *((unsigned char *)v9 + v11[9]) = *((unsigned char *)v10 + v11[9]);
      uint64_t v24 = v11[10];
      id v25 = (void *)((char *)v9 + v24);
      uint64_t v26 = (void *)((char *)v10 + v24);
      uint64_t v27 = v26[1];
      *id v25 = *v26;
      v25[1] = v27;
      *((unsigned char *)v9 + v11[11]) = *((unsigned char *)v10 + v11[11]);
      uint64_t v28 = *(void (**)(void *, void, uint64_t, int *))(v40 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v28(v9, 0, 1, v11);
    }
    uint64_t v29 = a3[6];
    uint64_t v30 = a3[7];
    uint64_t v31 = (uint64_t *)((char *)a1 + v29);
    uint64_t v32 = (uint64_t *)((char *)a2 + v29);
    uint64_t v33 = v32[1];
    *uint64_t v31 = *v32;
    v31[1] = v33;
    *(uint64_t *)((char *)a1 + v30) = *(uint64_t *)((char *)a2 + v30);
    uint64_t v34 = a3[9];
    *(uint64_t *)((char *)a1 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
    id v35 = (char *)a1 + v34;
    uint64_t v36 = (char *)a2 + v34;
    *(_OWORD *)id v35 = *(_OWORD *)v36;
    *((void *)v35 + 2) = *((void *)v36 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for Actions.MetricsReportingContext(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) >= 0xBuLL) {
    swift_bridgeObjectRelease();
  }
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for MetricsEvent.Page(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v6 = v4 + *(int *)(v5 + 24);
    uint64_t v7 = type metadata accessor for URL();
    uint64_t v8 = *(void *)(v7 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for Actions.MetricsReportingContext(void *a1, void *a2, int *a3)
{
  unint64_t v6 = a2[1];
  if (v6 > 0xA)
  {
    *a1 = *a2;
    a1[1] = v6;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  unint64_t v10 = (int *)type metadata accessor for MetricsEvent.Page(0);
  uint64_t v11 = *((void *)v10 - 1);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MetricsEvent.Page?);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    uint64_t v38 = v11;
    uint64_t v13 = v9[1];
    *uint64_t v8 = *v9;
    v8[1] = v13;
    uint64_t v14 = v9[3];
    v8[2] = v9[2];
    v8[3] = v14;
    uint64_t v15 = v10[6];
    __dst = (char *)v8 + v15;
    uint64_t v40 = (char *)v9 + v15;
    uint64_t v16 = type metadata accessor for URL();
    uint64_t v36 = *(void *)(v16 - 8);
    int v39 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v39(v40, 1, v16))
    {
      uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
      memcpy(__dst, v40, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v36 + 16))(__dst, v40, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v36 + 56))(__dst, 0, 1, v16);
    }
    *(void *)((char *)v8 + v10[7]) = *(void *)((char *)v9 + v10[7]);
    uint64_t v18 = v10[8];
    uint64_t v19 = (void *)((char *)v8 + v18);
    uint64_t v20 = (void *)((char *)v9 + v18);
    uint64_t v21 = v20[1];
    void *v19 = *v20;
    v19[1] = v21;
    *((unsigned char *)v8 + v10[9]) = *((unsigned char *)v9 + v10[9]);
    uint64_t v22 = v10[10];
    uint64_t v23 = (void *)((char *)v8 + v22);
    uint64_t v24 = (void *)((char *)v9 + v22);
    uint64_t v25 = v24[1];
    void *v23 = *v24;
    v23[1] = v25;
    *((unsigned char *)v8 + v10[11]) = *((unsigned char *)v9 + v10[11]);
    uint64_t v26 = *(void (**)(void *, void, uint64_t, int *))(v38 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v26(v8, 0, 1, v10);
  }
  uint64_t v27 = a3[6];
  uint64_t v28 = a3[7];
  uint64_t v29 = (void *)((char *)a1 + v27);
  uint64_t v30 = (void *)((char *)a2 + v27);
  uint64_t v31 = v30[1];
  void *v29 = *v30;
  v29[1] = v31;
  *(void *)((char *)a1 + v28) = *(void *)((char *)a2 + v28);
  uint64_t v32 = a3[9];
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  uint64_t v33 = (char *)a1 + v32;
  uint64_t v34 = (char *)a2 + v32;
  *(_OWORD *)uint64_t v33 = *(_OWORD *)v34;
  *((void *)v33 + 2) = *((void *)v34 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for Actions.MetricsReportingContext(void *a1, void *a2, int *a3)
{
  unint64_t v6 = a1[1];
  unint64_t v7 = a2[1];
  if (v6 == 10)
  {
    if (v7 > 0xA) {
      goto LABEL_16;
    }
    goto LABEL_6;
  }
  if (v7 == 10)
  {
    outlined destroy of MetricsEvent.Click.ActionContext((uint64_t)a1);
    goto LABEL_6;
  }
  if (v6 < 0xA)
  {
    if (v7 >= 0xA)
    {
LABEL_16:
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      goto LABEL_7;
    }
LABEL_6:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_7;
  }
  if (v7 < 0xA)
  {
    outlined destroy of TaskPriority?((uint64_t)a1, &demangling cache variable for type metadata for (actionContext: String));
    goto LABEL_6;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_7:
  uint64_t v8 = a3[5];
  uint64_t v9 = (void *)((char *)a1 + v8);
  unint64_t v10 = (void *)((char *)a2 + v8);
  uint64_t v11 = (int *)type metadata accessor for MetricsEvent.Page(0);
  uint64_t v12 = *((void *)v11 - 1);
  uint64_t v13 = *(uint64_t (**)(void *, uint64_t, int *))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (v15)
    {
      outlined destroy of MetricsEvent.Page((uint64_t)v9, type metadata accessor for MetricsEvent.Page);
      goto LABEL_13;
    }
    *uint64_t v9 = *v10;
    v9[1] = v10[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    void v9[2] = v10[2];
    v9[3] = v10[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v21 = v11[6];
    uint64_t v22 = (char *)v9 + v21;
    __srca = (char *)v10 + v21;
    uint64_t v23 = type metadata accessor for URL();
    __dsta = *(void **)(v23 - 8);
    unint64_t v52 = v22;
    uint64_t v24 = (uint64_t (*)(char *, uint64_t, uint64_t))__dsta[6];
    LODWORD(v22) = v24(v22, 1, v23);
    int v25 = v24(__srca, 1, v23);
    if (v22)
    {
      if (!v25)
      {
        ((void (*)(void *, char *, uint64_t))__dsta[2])(v52, __srca, v23);
        ((void (*)(void *, void, uint64_t, uint64_t))__dsta[7])(v52, 0, 1, v23);
        goto LABEL_30;
      }
      size_t v26 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?)
                                  - 8)
                      + 64);
      uint64_t v27 = v52;
    }
    else
    {
      if (!v25)
      {
        ((void (*)(void *, char *, uint64_t))__dsta[3])(v52, __srca, v23);
        goto LABEL_30;
      }
      ((void (*)(void *, uint64_t))__dsta[1])(v52, v23);
      size_t v26 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?)
                                  - 8)
                      + 64);
      uint64_t v27 = v52;
    }
    memcpy(v27, __srca, v26);
LABEL_30:
    *(void *)((char *)v9 + v11[7]) = *(void *)((char *)v10 + v11[7]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v35 = v11[8];
    uint64_t v36 = (void *)((char *)v9 + v35);
    uint64_t v37 = (void *)((char *)v10 + v35);
    *uint64_t v36 = *v37;
    v36[1] = v37[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *((unsigned char *)v9 + v11[9]) = *((unsigned char *)v10 + v11[9]);
    uint64_t v38 = v11[10];
    int v39 = (void *)((char *)v9 + v38);
    uint64_t v40 = (void *)((char *)v10 + v38);
    void *v39 = *v40;
    v39[1] = v40[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *((unsigned char *)v9 + v11[11]) = *((unsigned char *)v10 + v11[11]);
    goto LABEL_31;
  }
  if (v15)
  {
LABEL_13:
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MetricsEvent.Page?);
    memcpy(v9, v10, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_31;
  }
  __src = a3;
  *uint64_t v9 = *v10;
  v9[1] = v10[1];
  void v9[2] = v10[2];
  v9[3] = v10[3];
  uint64_t v16 = v11[6];
  uint64_t v49 = (char *)v10 + v16;
  __dst = (char *)v9 + v16;
  uint64_t v17 = type metadata accessor for URL();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v48 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v48(v49, 1, v17))
  {
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
    memcpy(__dst, v49, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(__dst, v49, v17);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(__dst, 0, 1, v17);
  }
  *(void *)((char *)v9 + v11[7]) = *(void *)((char *)v10 + v11[7]);
  uint64_t v28 = v11[8];
  uint64_t v29 = (void *)((char *)v9 + v28);
  uint64_t v30 = (void *)((char *)v10 + v28);
  void *v29 = *v30;
  v29[1] = v30[1];
  *((unsigned char *)v9 + v11[9]) = *((unsigned char *)v10 + v11[9]);
  uint64_t v31 = v11[10];
  uint64_t v32 = (void *)((char *)v9 + v31);
  uint64_t v33 = (void *)((char *)v10 + v31);
  *uint64_t v32 = *v33;
  v32[1] = v33[1];
  *((unsigned char *)v9 + v11[11]) = *((unsigned char *)v10 + v11[11]);
  uint64_t v34 = *(void (**)(void *, void, uint64_t, int *))(v12 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v34(v9, 0, 1, v11);
  a3 = __src;
LABEL_31:
  uint64_t v41 = a3[6];
  uint64_t v42 = (void *)((char *)a1 + v41);
  uint64_t v43 = (void *)((char *)a2 + v41);
  *uint64_t v42 = *v43;
  v42[1] = v43[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v44 = a3[9];
  uint64_t v45 = (char *)a1 + v44;
  uint64_t v46 = (char *)a2 + v44;
  char *v45 = *v46;
  *((void *)v45 + 1) = *((void *)v46 + 1);
  *((void *)v45 + 2) = *((void *)v46 + 2);
  return a1;
}

uint64_t outlined destroy of MetricsEvent.Click.ActionContext(uint64_t a1)
{
  return a1;
}

_OWORD *initializeWithTake for Actions.MetricsReportingContext(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  unint64_t v7 = (_OWORD *)((char *)a1 + v6);
  uint64_t v8 = (_OWORD *)((char *)a2 + v6);
  uint64_t v9 = (int *)type metadata accessor for MetricsEvent.Page(0);
  uint64_t v10 = *((void *)v9 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MetricsEvent.Page?);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    long long v12 = v8[1];
    *unint64_t v7 = *v8;
    v7[1] = v12;
    uint64_t v13 = v9[6];
    __dst = (char *)v7 + v13;
    int v14 = (char *)v8 + v13;
    uint64_t v15 = type metadata accessor for URL();
    uint64_t v16 = *(void *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
      memcpy(__dst, v14, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(__dst, v14, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(__dst, 0, 1, v15);
    }
    *(void *)((char *)v7 + v9[7]) = *(void *)((char *)v8 + v9[7]);
    *(_OWORD *)((char *)v7 + v9[8]) = *(_OWORD *)((char *)v8 + v9[8]);
    *((unsigned char *)v7 + v9[9]) = *((unsigned char *)v8 + v9[9]);
    *(_OWORD *)((char *)v7 + v9[10]) = *(_OWORD *)((char *)v8 + v9[10]);
    *((unsigned char *)v7 + v9[11]) = *((unsigned char *)v8 + v9[11]);
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v18 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *(void *)((char *)a1 + v18) = *(void *)((char *)a2 + v18);
  uint64_t v19 = a3[9];
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  uint64_t v20 = (char *)a1 + v19;
  uint64_t v21 = (char *)a2 + v19;
  *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
  *((void *)v20 + 2) = *((void *)v21 + 2);
  return a1;
}

uint64_t assignWithTake for Actions.MetricsReportingContext(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v6 = *(void *)(a1 + 8);
  unint64_t v7 = *(void *)(a2 + 8);
  if (v6 == 10) {
    goto LABEL_7;
  }
  if (v7 == 10)
  {
    outlined destroy of MetricsEvent.Click.ActionContext(a1);
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_8;
  }
  if (v6 < 0xA) {
    goto LABEL_7;
  }
  if (v7 < 0xA)
  {
    outlined destroy of TaskPriority?(a1, &demangling cache variable for type metadata for (actionContext: String));
    goto LABEL_7;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v7;
  swift_bridgeObjectRelease();
LABEL_8:
  uint64_t v8 = a3[5];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  uint64_t v11 = (int *)type metadata accessor for MetricsEvent.Page(0);
  uint64_t v12 = *((void *)v11 - 1);
  uint64_t v13 = *(uint64_t (**)(void *, uint64_t, int *))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (v15)
    {
      outlined destroy of MetricsEvent.Page((uint64_t)v9, type metadata accessor for MetricsEvent.Page);
      goto LABEL_14;
    }
    uint64_t v23 = v10[1];
    *uint64_t v9 = *v10;
    v9[1] = v23;
    swift_bridgeObjectRelease();
    uint64_t v24 = v10[3];
    void v9[2] = v10[2];
    v9[3] = v24;
    swift_bridgeObjectRelease();
    uint64_t v25 = v11[6];
    size_t v26 = (char *)v9 + v25;
    __dsta = (char *)v10 + v25;
    uint64_t v27 = type metadata accessor for URL();
    uint64_t v51 = *(void *)(v27 - 8);
    unint64_t v52 = v26;
    uint64_t v28 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v51 + 48);
    LODWORD(v26) = v28(v26, 1, v27);
    int v29 = v28(__dsta, 1, v27);
    if (v26)
    {
      if (!v29)
      {
        (*(void (**)(void *, char *, uint64_t))(v51 + 32))(v52, __dsta, v27);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v51 + 56))(v52, 0, 1, v27);
        goto LABEL_26;
      }
      size_t v30 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?)
                                  - 8)
                      + 64);
      uint64_t v31 = v52;
    }
    else
    {
      if (!v29)
      {
        (*(void (**)(void *, char *, uint64_t))(v51 + 40))(v52, __dsta, v27);
        goto LABEL_26;
      }
      (*(void (**)(void *, uint64_t))(v51 + 8))(v52, v27);
      size_t v30 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?)
                                  - 8)
                      + 64);
      uint64_t v31 = v52;
    }
    memcpy(v31, __dsta, v30);
LABEL_26:
    *(void *)((char *)v9 + v11[7]) = *(void *)((char *)v10 + v11[7]);
    swift_bridgeObjectRelease();
    uint64_t v32 = v11[8];
    uint64_t v33 = (void *)((char *)v9 + v32);
    uint64_t v34 = (void *)((char *)v10 + v32);
    uint64_t v36 = *v34;
    uint64_t v35 = v34[1];
    void *v33 = v36;
    v33[1] = v35;
    swift_bridgeObjectRelease();
    *((unsigned char *)v9 + v11[9]) = *((unsigned char *)v10 + v11[9]);
    uint64_t v37 = v11[10];
    uint64_t v38 = (void *)((char *)v9 + v37);
    int v39 = (void *)((char *)v10 + v37);
    uint64_t v41 = *v39;
    uint64_t v40 = v39[1];
    *uint64_t v38 = v41;
    v38[1] = v40;
    swift_bridgeObjectRelease();
    *((unsigned char *)v9 + v11[11]) = *((unsigned char *)v10 + v11[11]);
    goto LABEL_27;
  }
  if (v15)
  {
LABEL_14:
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MetricsEvent.Page?);
    memcpy(v9, v10, *(void *)(*(void *)(v22 - 8) + 64));
    goto LABEL_27;
  }
  long long v16 = *((_OWORD *)v10 + 1);
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *((_OWORD *)v9 + 1) = v16;
  uint64_t v17 = v11[6];
  __dst = (char *)v9 + v17;
  uint64_t v18 = (char *)v10 + v17;
  uint64_t v19 = type metadata accessor for URL();
  uint64_t v20 = *(void *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
  {
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
    memcpy(__dst, v18, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(__dst, v18, v19);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(__dst, 0, 1, v19);
  }
  *(void *)((char *)v9 + v11[7]) = *(void *)((char *)v10 + v11[7]);
  *(_OWORD *)((char *)v9 + v11[8]) = *(_OWORD *)((char *)v10 + v11[8]);
  *((unsigned char *)v9 + v11[9]) = *((unsigned char *)v10 + v11[9]);
  *(_OWORD *)((char *)v9 + v11[10]) = *(_OWORD *)((char *)v10 + v11[10]);
  *((unsigned char *)v9 + v11[11]) = *((unsigned char *)v10 + v11[11]);
  (*(void (**)(void *, void, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
LABEL_27:
  uint64_t v42 = a3[6];
  uint64_t v43 = (void *)(a1 + v42);
  uint64_t v44 = (uint64_t *)(a2 + v42);
  uint64_t v46 = *v44;
  uint64_t v45 = v44[1];
  *uint64_t v43 = v46;
  v43[1] = v45;
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_bridgeObjectRelease();
  uint64_t v47 = a3[9];
  uint64_t v48 = a1 + v47;
  uint64_t v49 = a2 + v47;
  *(unsigned char *)uint64_t v48 = *(unsigned char *)v49;
  *(_OWORD *)(v48 + 8) = *(_OWORD *)(v49 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for Actions.MetricsReportingContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100045F3C);
}

uint64_t sub_100045F3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MetricsEvent.Page?);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    int v13 = v12 - 1;
    if (v13 < 0) {
      int v13 = -1;
    }
    return (v13 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for Actions.MetricsReportingContext(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100046028);
}

uint64_t sub_100046028(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MetricsEvent.Page?);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24) + 8) = a2;
  }
  return result;
}

void type metadata completion function for Actions.MetricsReportingContext()
{
  type metadata accessor for MetricsEvent.Page?();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void type metadata accessor for MetricsEvent.Page?()
{
  if (!lazy cache variable for type metadata for MetricsEvent.Page?)
  {
    type metadata accessor for MetricsEvent.Page(255);
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for MetricsEvent.Page?);
    }
  }
}

uint64_t outlined copy of MetricsEvent.Click.ActionDetails.Key(uint64_t a1, uint64_t a2, char a3)
{
  if (!a3) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t destroy for MetricsEvent.Click.ActionDetails.Key(uint64_t a1)
{
  return outlined consume of MetricsEvent.Click.ActionDetails.Key(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t outlined consume of MetricsEvent.Click.ActionDetails.Key(uint64_t a1, uint64_t a2, char a3)
{
  if (!a3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for MetricsEvent.Click.ActionDetails.Key(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  outlined copy of MetricsEvent.Click.ActionDetails.Key(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for MetricsEvent.Click.ActionDetails.Key(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  outlined copy of MetricsEvent.Click.ActionDetails.Key(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  char v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  outlined consume of MetricsEvent.Click.ActionDetails.Key(v6, v7, v8);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for MetricsEvent.Click.ActionDetails.Key(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  outlined consume of MetricsEvent.Click.ActionDetails.Key(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for MetricsEvent.Click.ActionDetails.Key(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFC && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 252);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 4) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for MetricsEvent.Click.ActionDetails.Key(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 252;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t getEnumTag for MetricsEvent.Click.ActionDetails.Key(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 3u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 4);
  }
}

uint64_t destructiveInjectEnumTag for MetricsEvent.Click.ActionDetails.Key(uint64_t result, unsigned int a2)
{
  if (a2 >= 4)
  {
    *(void *)__n128 result = a2 - 4;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 4;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for MetricsEvent.Click.ActionDetails.Key()
{
  return &type metadata for MetricsEvent.Click.ActionDetails.Key;
}

unsigned char *storeEnumTagSinglePayload for MetricsEvent.Click.ActionDetails.Key.DestinationType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000464D4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MetricsEvent.Click.ActionDetails.Key.DestinationType()
{
  return &type metadata for MetricsEvent.Click.ActionDetails.Key.DestinationType;
}

unsigned char *storeEnumTagSinglePayload for MetricsEvent.Click.ActionDetails.Key.PlayType(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *__n128 result = a2;
        return result;
      case 2:
        *(_WORD *)__n128 result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)__n128 result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *__n128 result = 0;
      break;
    case 2:
      *(_WORD *)__n128 result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1000465ACLL);
    case 4:
      *(_DWORD *)__n128 result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for MetricsEvent.Click.ActionDetails.Key.PlayType()
{
  return &type metadata for MetricsEvent.Click.ActionDetails.Key.PlayType;
}

unsigned char *storeEnumTagSinglePayload for MetricsEvent.Click.ActionDetails.Key.NavigationType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000466B0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MetricsEvent.Click.ActionDetails.Key.NavigationType()
{
  return &type metadata for MetricsEvent.Click.ActionDetails.Key.NavigationType;
}

id outlined copy of MetricsEvent.Click.ActionDetails?(id result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (BYTE1(a4) != 255) {
    return outlined copy of MetricsEvent.Click.ActionDetails(result, a2, a3, a4, SBYTE1(a4));
  }
  return result;
}

id outlined copy of MetricsEvent.Click.ActionDetails(id result, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5 == 3 || a5 == 2) {
    return (id)swift_bridgeObjectRetain();
  }
  if (a5 == 1) {
    return outlined copy of MetricsEvent.Click.ActionDetails.SearchSource(result);
  }
  return result;
}

id outlined copy of MetricsEvent.Click.ActionDetails.SearchSource(id result)
{
  if (result)
  {
    id v1 = result;
    swift_bridgeObjectRetain();
    return v1;
  }
  return result;
}

uint64_t outlined destroy of MetricsEvent.Page(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t View.actionContextMenu<A>(title:menu:excluding:)@<X0>(char *a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, char *a4@<X3>, uint64_t a5@<X4>, char *a6@<X5>, char *a7@<X6>, char *a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v69 = a9;
  uint64_t v61 = a2;
  uint64_t v62 = a4;
  uint64_t v70 = a3;
  uint64_t v60 = a1;
  type metadata accessor for ActionMenu();
  uint64_t v14 = type metadata accessor for Optional();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v63 = *(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(v15 + 32);
  uint64_t v64 = (char **)(v15 + 32);
  uint64_t v16 = v63(v84, a3, v14);
  uint64_t v57 = v84[1];
  uint64_t v58 = v84[3];
  uint64_t v59 = v84[5];
  uint64_t v17 = *(void *)(a5 - 8);
  uint64_t v55 = v84[9];
  id v56 = (id)v84[6];
  uint64_t v54 = v17;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v53 = (char *)&v52 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  unint64_t v52 = (char *)&v52 - v20;
  type metadata accessor for ActionMenuView();
  *(void *)&long long v86 = a6;
  *((void *)&v86 + 1) = a6;
  *(void *)&long long v87 = a8;
  *((void *)&v87 + 1) = a8;
  type metadata accessor for ActionMenuView.Excluding();
  type metadata accessor for Optional();
  type metadata accessor for _EnvironmentKeyWritingModifier();
  type metadata accessor for ModifiedContent();
  uint64_t v21 = type metadata accessor for Section();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v23 = swift_getWitnessTable();
  uint64_t v82 = WitnessTable;
  uint64_t v83 = v23;
  uint64_t v24 = swift_getWitnessTable();
  uint64_t v79 = &protocol witness table for Text;
  uint64_t v80 = v24;
  uint64_t v81 = &protocol witness table for EmptyView;
  uint64_t v25 = swift_getWitnessTable();
  *(void *)&long long v86 = a5;
  *((void *)&v86 + 1) = v21;
  uint64_t v71 = v25;
  uint64_t v72 = v21;
  size_t v26 = a7;
  *(void *)&long long v87 = a7;
  *((void *)&v87 + 1) = v25;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v28 = *(void *)(OpaqueTypeMetadata2 - 8);
  uint64_t v29 = __chkstk_darwin(OpaqueTypeMetadata2);
  uint64_t v31 = (char *)&v52 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  uint64_t v33 = (char *)&v52 - v32;
  uint64_t v34 = type metadata accessor for _ConditionalContent();
  uint64_t v66 = *(void *)(v34 - 8);
  uint64_t v67 = v34;
  __chkstk_darwin(v34);
  uint64_t v65 = (char *)&v52 - v35;
  uint64_t v36 = v63(v85, v70, v14);
  if (*((void *)&v85[0] + 1))
  {
    uint64_t v64 = &v52;
    long long v88 = v85[2];
    long long v89 = v85[3];
    long long v90 = v85[4];
    long long v86 = v85[0];
    long long v87 = v85[1];
    __chkstk_darwin(v36);
    *(&v52 - 10) = (char *)a5;
    *(&v52 - 9) = a6;
    *(&v52 - 8) = v26;
    *(&v52 - 7) = a8;
    *(&v52 - 6) = (char *)OpaqueTypeConformance2;
    *(&v52 - 5) = (char *)&v86;
    uint64_t v37 = v61;
    *(&v52 - 4) = v60;
    *(&v52 - 3) = v37;
    *(&v52 - 2) = v62;
    id v38 = v56;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v39 = swift_checkMetadataState();
    uint64_t v40 = v71;
    View.contextMenu<A>(menuItems:)();
    uint64_t v75 = a5;
    uint64_t v76 = v39;
    uint64_t v77 = v26;
    uint64_t v78 = v40;
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    uint64_t v41 = *(void (**)(char *, char *, uint64_t))(v28 + 16);
    v41(v33, v31, OpaqueTypeMetadata2);
    uint64_t v42 = *(void (**)(char *, uint64_t))(v28 + 8);
    v42(v31, OpaqueTypeMetadata2);
    v41(v31, v33, OpaqueTypeMetadata2);
    uint64_t v43 = v65;
    static ViewBuilder.buildEither<A, B>(first:)((uint64_t)v31, OpaqueTypeMetadata2);
    outlined release of ActionMenu<A1>?(v70);
    v42(v31, OpaqueTypeMetadata2);
    v42(v33, OpaqueTypeMetadata2);
  }
  else
  {
    uint64_t v44 = v54;
    uint64_t v45 = *(void (**)(char *, uint64_t, uint64_t))(v54 + 16);
    uint64_t v46 = v52;
    v45(v52, OpaqueTypeConformance2, a5);
    uint64_t v47 = (uint64_t)v53;
    v45(v53, (uint64_t)v46, a5);
    *(void *)&long long v86 = a5;
    *((void *)&v86 + 1) = v72;
    *(void *)&long long v87 = v26;
    *((void *)&v87 + 1) = v71;
    swift_getOpaqueTypeConformance2();
    uint64_t v43 = v65;
    static ViewBuilder.buildEither<A, B>(second:)(v47, OpaqueTypeMetadata2, a5);
    uint64_t v48 = *(void (**)(uint64_t, uint64_t))(v44 + 8);
    v48(v47, a5);
    v48((uint64_t)v46, a5);
  }
  uint64_t v75 = a5;
  uint64_t v76 = v72;
  uint64_t v77 = v26;
  uint64_t v78 = v71;
  uint64_t v73 = swift_getOpaqueTypeConformance2();
  uint64_t v74 = v26;
  uint64_t v49 = v67;
  swift_getWitnessTable();
  uint64_t v50 = v66;
  (*(void (**)(uint64_t, char *, uint64_t))(v66 + 16))(v69, v43, v49);
  return (*(uint64_t (**)(char *, uint64_t))(v50 + 8))(v43, v49);
}

uint64_t type metadata accessor for ActionMenuView()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for ActionMenuView.Excluding()
{
  return swift_getGenericMetadata();
}

uint64_t closure #1 in View.actionContextMenu<A>(title:menu:excluding:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, char *a8@<X8>, uint64_t a9)
{
  v23[4] = a5;
  v23[5] = a7;
  v23[1] = a3;
  v23[2] = a4;
  v23[0] = a2;
  v23[3] = a1;
  uint64_t v24 = a8;
  type metadata accessor for ActionMenuView();
  uint64_t v30 = a6;
  uint64_t v31 = a6;
  uint64_t v32 = a9;
  uint64_t v33 = a9;
  type metadata accessor for ActionMenuView.Excluding();
  type metadata accessor for Optional();
  type metadata accessor for _EnvironmentKeyWritingModifier();
  type metadata accessor for ModifiedContent();
  uint64_t v10 = type metadata accessor for Section();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)v23 - v15;
  View.menuItems<A>(for:title:excluding:)();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v18 = swift_getWitnessTable();
  uint64_t v28 = WitnessTable;
  uint64_t v29 = v18;
  uint64_t v19 = swift_getWitnessTable();
  uint64_t v25 = &protocol witness table for Text;
  uint64_t v26 = v19;
  uint64_t v27 = &protocol witness table for EmptyView;
  swift_getWitnessTable();
  uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  v20(v16, v14, v10);
  uint64_t v21 = *(void (**)(char *, uint64_t))(v11 + 8);
  v21(v14, v10);
  v20(v24, v16, v10);
  return ((uint64_t (*)(char *, uint64_t))v21)(v16, v10);
}

uint64_t View.menuItems<A>(for:title:excluding:)()
{
  return Section<>.init<A>(_:content:)();
}

uint64_t static ViewBuilder.buildExpression<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(a3, a1, a2);
}

uint64_t static ViewBuilder.buildEither<A, B>(first:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for _ConditionalContent.Storage();
  __chkstk_darwin(v4);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))((char *)&v7 - v5, a1, a2);
  swift_storeEnumTagMultiPayload();
  return _ConditionalContent<>.init(storage:)();
}

uint64_t static ViewBuilder.buildEither<A, B>(second:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for _ConditionalContent.Storage();
  __chkstk_darwin(v5);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))((char *)&v8 - v6, a1, a3);
  swift_storeEnumTagMultiPayload();
  return _ConditionalContent<>.init(storage:)();
}

uint64_t partial apply for closure #1 in View.actionContextMenu<A>(title:menu:excluding:)@<X0>(char *a1@<X8>)
{
  return closure #1 in View.actionContextMenu<A>(title:menu:excluding:)(v1[6], v1[8], v1[9], v1[10], v1[2], v1[3], v1[4], a1, v1[5]);
}

uint64_t View.actionContextMenu<A, B>(title:menu:excluding:preview:previewAction:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, void *a10, void *a11, void *a12, void *a13, void *a14, void *a15)
{
  uint64_t v79 = a9;
  uint64_t v73 = a7;
  uint64_t v74 = a8;
  uint64_t v71 = a5;
  uint64_t v72 = a6;
  uint64_t v69 = a2;
  uint64_t v70 = a4;
  uint64_t v84 = a3;
  uint64_t v68 = a1;
  uint64_t v67 = *(a10 - 1);
  long long v86 = a12;
  uint64_t v15 = __chkstk_darwin(a1);
  uint64_t v66 = (char *)&v64 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v65 = (char *)&v64 - v17;
  type metadata accessor for ActionMenuView();
  *(void *)&long long v101 = a11;
  *((void *)&v101 + 1) = a11;
  *(void *)&long long v102 = a14;
  *((void *)&v102 + 1) = a14;
  type metadata accessor for ActionMenuView.Excluding();
  type metadata accessor for Optional();
  type metadata accessor for _EnvironmentKeyWritingModifier();
  type metadata accessor for ModifiedContent();
  uint64_t v18 = type metadata accessor for Section();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v20 = swift_getWitnessTable();
  uint64_t v98 = WitnessTable;
  uint64_t v99 = v20;
  uint64_t v21 = swift_getWitnessTable();
  unint64_t v95 = &protocol witness table for Text;
  uint64_t v96 = v21;
  unint64_t v97 = &protocol witness table for EmptyView;
  uint64_t v22 = swift_getWitnessTable();
  *(void *)&long long v101 = a10;
  *((void *)&v101 + 1) = v18;
  uint64_t v81 = a13;
  uint64_t v82 = v18;
  *(void *)&long long v102 = v86;
  *((void *)&v102 + 1) = a13;
  uint64_t v85 = v22;
  *(void *)&long long v103 = v22;
  *((void *)&v103 + 1) = a15;
  uint64_t v83 = a15;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v24 = *(char **)(OpaqueTypeMetadata2 - 8);
  uint64_t v25 = __chkstk_darwin(OpaqueTypeMetadata2);
  uint64_t v27 = (char *)&v64 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  uint64_t v29 = (char *)&v64 - v28;
  uint64_t v76 = v30;
  uint64_t v80 = a10;
  uint64_t v31 = type metadata accessor for _ConditionalContent();
  uint64_t v32 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v77 = (char *)&v64 - v33;
  type metadata accessor for ActionMenu();
  uint64_t v34 = type metadata accessor for Optional();
  uint64_t v35 = (*(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(*(void *)(v34 - 8) + 32))(v100, v84, v34);
  if (*((void *)&v100[0] + 1))
  {
    uint64_t v66 = (char *)&v64;
    long long v103 = v100[2];
    long long v104 = v100[3];
    long long v105 = v100[4];
    long long v101 = v100[0];
    long long v102 = v100[1];
    uint64_t v36 = __chkstk_darwin(v35);
    uint64_t v64 = &v64 - 14;
    uint64_t v65 = v24;
    uint64_t v37 = v80;
    id v38 = v81;
    *(&v64 - 12) = v80;
    *(&v64 - 11) = a11;
    uint64_t v39 = v86;
    *(&v64 - 10) = v86;
    *(&v64 - 9) = v38;
    uint64_t v75 = v29;
    uint64_t v40 = v37;
    uint64_t v41 = (uint64_t)v27;
    uint64_t v42 = v83;
    *(&v64 - 8) = a14;
    *(&v64 - 7) = v42;
    uint64_t v67 = v31;
    *(&v64 - 6) = (void *)OpaqueTypeConformance2;
    *(&v64 - 5) = &v101;
    __chkstk_darwin(v36);
    uint64_t v70 = v32;
    *(&v64 - 8) = v40;
    *(&v64 - 7) = a11;
    *(&v64 - 6) = v39;
    *(&v64 - 5) = v38;
    uint64_t v43 = swift_allocObject();
    uint64_t v44 = v74;
    *(void *)(v43 + 16) = v73;
    *(void *)(v43 + 24) = v44;
    outlined retain of ActionMenu<A1>?(v84);
    swift_retain();
    uint64_t v45 = swift_checkMetadataState();
    uint64_t v63 = v42;
    uint64_t v61 = v38;
    uint64_t v62 = v85;
    uint64_t v60 = v39;
    View.contextMenu<A, B>(menuItems:preview:previewAction:)();
    swift_release();
    long long v89 = v40;
    uint64_t v90 = v45;
    uint64_t v91 = v39;
    uint64_t v92 = v38;
    uint64_t v93 = v85;
    unint64_t v94 = v42;
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    uint64_t v46 = v65;
    uint64_t v47 = (void (*)(char *, uint64_t, uint64_t))*((void *)v65 + 2);
    uint64_t v48 = v75;
    uint64_t v49 = v76;
    v47(v75, v41, v76);
    uint64_t v50 = (void (*)(uint64_t, uint64_t))*((void *)v46 + 1);
    v50(v41, v49);
    v47((char *)v41, (uint64_t)v48, v49);
    uint64_t v51 = v77;
    uint64_t v31 = v67;
    static ViewBuilder.buildEither<A, B>(first:)(v41, v49);
    outlined release of ActionMenu<A1>?(v84);
    v50(v41, v49);
    v50((uint64_t)v75, v49);
    uint64_t v32 = v70;
  }
  else
  {
    uint64_t v52 = v67;
    uint64_t v53 = *(void (**)(char *, uint64_t, void *))(v67 + 16);
    uint64_t v54 = v65;
    uint64_t v55 = (uint64_t)v80;
    v53(v65, OpaqueTypeConformance2, v80);
    uint64_t v56 = (uint64_t)v66;
    v53(v66, (uint64_t)v54, (void *)v55);
    *(void *)&long long v101 = v55;
    *((void *)&v101 + 1) = v82;
    *(void *)&long long v102 = v86;
    *((void *)&v102 + 1) = v81;
    *(void *)&long long v103 = v85;
    *((void *)&v103 + 1) = v83;
    swift_getOpaqueTypeConformance2();
    uint64_t v51 = v77;
    static ViewBuilder.buildEither<A, B>(second:)(v56, v76, v55);
    uint64_t v57 = *(void (**)(uint64_t, uint64_t))(v52 + 8);
    v57(v56, v55);
    v57((uint64_t)v54, v55);
  }
  uint64_t v58 = v81;
  long long v89 = v80;
  uint64_t v90 = v82;
  uint64_t v91 = v86;
  uint64_t v92 = v81;
  uint64_t v93 = v85;
  unint64_t v94 = v83;
  uint64_t v87 = swift_getOpaqueTypeConformance2();
  long long v88 = v58;
  swift_getWitnessTable();
  (*(void (**)(uint64_t, char *, uint64_t))(v32 + 16))(v79, v51, v31);
  return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v51, v31);
}

uint64_t closure #1 in View.actionContextMenu<A, B>(title:menu:excluding:preview:previewAction:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, char *a7@<X8>, uint64_t a8, uint64_t a9)
{
  v23[4] = a1;
  v23[5] = a5;
  v23[2] = a3;
  v23[3] = a4;
  uint64_t v24 = a7;
  v23[0] = a2;
  v23[1] = a8;
  type metadata accessor for ActionMenuView();
  uint64_t v30 = a6;
  uint64_t v31 = a6;
  uint64_t v32 = a9;
  uint64_t v33 = a9;
  type metadata accessor for ActionMenuView.Excluding();
  type metadata accessor for Optional();
  type metadata accessor for _EnvironmentKeyWritingModifier();
  type metadata accessor for ModifiedContent();
  uint64_t v10 = type metadata accessor for Section();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)v23 - v15;
  View.menuItems<A>(for:title:excluding:)();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v18 = swift_getWitnessTable();
  uint64_t v28 = WitnessTable;
  uint64_t v29 = v18;
  uint64_t v19 = swift_getWitnessTable();
  uint64_t v25 = &protocol witness table for Text;
  uint64_t v26 = v19;
  uint64_t v27 = &protocol witness table for EmptyView;
  swift_getWitnessTable();
  uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  v20(v16, v14, v10);
  uint64_t v21 = *(void (**)(char *, uint64_t))(v11 + 8);
  v21(v14, v10);
  v20(v24, v16, v10);
  return ((uint64_t (*)(char *, uint64_t))v21)(v16, v10);
}

uint64_t partial apply for closure #1 in View.actionContextMenu<A, B>(title:menu:excluding:preview:previewAction:)@<X0>(char *a1@<X8>)
{
  return closure #1 in View.actionContextMenu<A, B>(title:menu:excluding:preview:previewAction:)(v1[8], v1[10], v1[11], v1[12], v1[2], v1[3], a1, v1[5], v1[6]);
}

uint64_t closure #2 in View.actionContextMenu<A, B>(title:menu:excluding:preview:previewAction:)@<X0>(uint64_t a1@<X4>, char *a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 - 8);
  uint64_t v5 = ((uint64_t (*)(void))__chkstk_darwin)();
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (void (*)(void))__chkstk_darwin(v5);
  uint64_t v10 = (char *)&v14 - v9;
  v8();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
  v11(v10, v7, a1);
  uint64_t v12 = *(void (**)(char *, uint64_t))(v4 + 8);
  v12(v7, a1);
  v11(a2, v10, a1);
  return ((uint64_t (*)(char *, uint64_t))v12)(v10, a1);
}

uint64_t partial apply for closure #2 in View.actionContextMenu<A, B>(title:menu:excluding:preview:previewAction:)@<X0>(char *a1@<X8>)
{
  return closure #2 in View.actionContextMenu<A, B>(title:menu:excluding:preview:previewAction:)(*(void *)(v1 + 32), a1);
}

uint64_t sub_1000480FC()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t partial apply for closure #3 in View.actionContextMenu<A, B>(title:menu:excluding:preview:previewAction:)()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t outlined retain of ActionMenu<A1>?(uint64_t a1)
{
  return a1;
}

uint64_t outlined copy of ActionMenu<A1>?<A><A1, B1>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  if (a2)
  {
    id v7 = a7;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t outlined release of ActionMenu<A1>?(uint64_t a1)
{
  return a1;
}

void outlined consume of ActionMenu<A1>?<A><A1>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
  }
}

uint64_t closure #1 in View.menuItems<A>(for:title:excluding:)@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X5>, long long *a5@<X8>)
{
  outlined retain of ActionMenu<A>((uint64_t)a1);
  ActionMenuView.init(menu:useDivider:postAction:)(a1, 1, 0, 0, (uint64_t)v31);
  long long v37 = v31[4];
  long long v38 = v31[5];
  long long v39 = v31[6];
  *(void *)&long long v40 = v32;
  long long v33 = v31[0];
  long long v34 = v31[1];
  long long v35 = v31[2];
  long long v36 = v31[3];
  *(void *)&long long v42 = a3;
  *((void *)&v42 + 1) = a3;
  *(void *)&long long v43 = a4;
  *((void *)&v43 + 1) = a4;
  type metadata accessor for ActionMenuView.Excluding();
  *(void *)(swift_allocObject() + 16) = a2;
  type metadata accessor for ActionMenuView();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  swift_getWitnessTable();
  View.environmentObject<A>(_:)();
  swift_release();
  outlined release of ActionMenuView<A>((uint64_t)v31);
  long long v39 = v48;
  long long v40 = v49;
  long long v35 = v44;
  long long v36 = v45;
  long long v37 = v46;
  long long v38 = v47;
  long long v33 = v42;
  long long v34 = v43;
  long long v19 = v48;
  long long v20 = v49;
  long long v15 = v44;
  long long v16 = v45;
  long long v17 = v46;
  long long v18 = v47;
  uint64_t v41 = v50;
  uint64_t v21 = v50;
  long long v13 = v42;
  long long v14 = v43;
  type metadata accessor for Optional();
  type metadata accessor for _EnvironmentKeyWritingModifier();
  uint64_t v10 = type metadata accessor for ModifiedContent();
  swift_getWitnessTable();
  swift_getWitnessTable();
  uint64_t v11 = *(void (**)(long long *, long long *, uint64_t))(*(void *)(v10 - 8) + 16);
  v11(&v22, &v13, v10);
  outlined release of ModifiedContent<ActionMenuView<A1>, _EnvironmentKeyWritingModifier<ActionMenuView<A1>.Excluding<A1>?>>((uint64_t)&v33);
  long long v48 = v28;
  long long v49 = v29;
  long long v44 = v24;
  long long v45 = v25;
  long long v46 = v26;
  long long v47 = v27;
  long long v42 = v22;
  long long v43 = v23;
  long long v19 = v28;
  long long v20 = v29;
  long long v15 = v24;
  long long v16 = v25;
  long long v17 = v26;
  long long v18 = v27;
  uint64_t v50 = v30;
  uint64_t v21 = v30;
  long long v13 = v22;
  long long v14 = v23;
  v11(a5, &v13, v10);
  return outlined release of ModifiedContent<ActionMenuView<A1>, _EnvironmentKeyWritingModifier<ActionMenuView<A1>.Excluding<A1>?>>((uint64_t)&v42);
}

__n128 ActionMenuView.init(menu:useDivider:postAction:)@<Q0>(long long *a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  long long v17 = a1[1];
  long long v18 = *a1;
  long long v16 = a1[2];
  uint64_t v10 = *((void *)a1 + 6);
  char v11 = *((unsigned char *)a1 + 56) & 1;
  type metadata accessor for ActionMenuView.Excluding();
  swift_getWitnessTable();
  __n128 v15 = (__n128)a1[4];
  uint64_t v12 = EnvironmentObject.init()();
  *(_OWORD *)a5 = v18;
  *(_OWORD *)(a5 + 16) = v17;
  *(_OWORD *)(a5 + 32) = v16;
  *(void *)(a5 + 48) = v10;
  *(unsigned char *)(a5 + 56) = v11;
  __n128 result = v15;
  *(__n128 *)(a5 + 64) = v15;
  *(unsigned char *)(a5 + 80) = a2;
  *(void *)(a5 + 88) = a3;
  *(void *)(a5 + 96) = a4;
  *(void *)(a5 + 104) = v12;
  *(void *)(a5 + 112) = v14;
  return result;
}

uint64_t ActionMenuView.Excluding.__allocating_init(itemIDs:)(uint64_t a1)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  return result;
}

uint64_t ActionMenu.menuButton<A>(title:excluding:label:onPresentationChanged:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, char *a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v49 = a7;
  uint64_t v52 = a6;
  uint64_t v53 = a5;
  uint64_t v51 = a4;
  uint64_t v54 = a3;
  uint64_t v48 = a2;
  uint64_t v47 = a1;
  uint64_t v58 = a9;
  uint64_t v43 = a10;
  uint64_t v57 = type metadata accessor for MenuOrder();
  uint64_t v56 = *(void *)(v57 - 8);
  __chkstk_darwin(v57);
  uint64_t v55 = (char *)v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(a8 + 16);
  uint64_t v13 = *(void *)(a8 + 24);
  type metadata accessor for ActionMenuView();
  uint64_t v15 = type metadata accessor for Section();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v72 = &protocol witness table for Text;
  uint64_t v73 = WitnessTable;
  uint64_t v74 = &protocol witness table for EmptyView;
  uint64_t v44 = v15;
  uint64_t v17 = swift_getWitnessTable();
  uint64_t v68 = a10;
  uint64_t v69 = v15;
  uint64_t v70 = a11;
  uint64_t v71 = v17;
  uint64_t v18 = type metadata accessor for Menu();
  uint64_t v46 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  long long v42 = (char *)v38 - v19;
  uint64_t v68 = v14;
  uint64_t v69 = v14;
  uint64_t v70 = v13;
  uint64_t v71 = v13;
  type metadata accessor for ActionMenuView.Excluding();
  type metadata accessor for Optional();
  type metadata accessor for _EnvironmentKeyWritingModifier();
  uint64_t v39 = v18;
  uint64_t v20 = type metadata accessor for ModifiedContent();
  uint64_t v45 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v41 = (char *)v38 - v21;
  uint64_t v22 = swift_getWitnessTable();
  v38[1] = v22;
  uint64_t v23 = swift_getWitnessTable();
  uint64_t v66 = v22;
  uint64_t v67 = v23;
  uint64_t v40 = swift_getWitnessTable();
  uint64_t v68 = v20;
  uint64_t v69 = v40;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v25 = *(void *)(OpaqueTypeMetadata2 - 8);
  uint64_t v26 = __chkstk_darwin(OpaqueTypeMetadata2);
  long long v28 = (char *)v38 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  uint64_t v30 = (char *)v38 - v29;
  uint64_t v59 = v14;
  uint64_t v60 = v43;
  uint64_t v61 = v13;
  uint64_t v62 = a11;
  uint64_t v63 = v47;
  uint64_t v64 = v48;
  uint64_t v65 = v50;
  swift_retain();
  uint64_t v31 = v42;
  Menu.init(onPresentationChanged:content:label:)();
  *(void *)(swift_allocObject() + 16) = v54;
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  uint64_t v32 = v41;
  uint64_t v33 = v39;
  View.environmentObject<A>(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v31, v33);
  long long v34 = v55;
  static MenuOrder.fixed.getter();
  View.menuOrder(_:)();
  (*(void (**)(char *, uint64_t))(v56 + 8))(v34, v57);
  (*(void (**)(char *, uint64_t))(v45 + 8))(v32, v20);
  long long v35 = *(void (**)(char *, char *, uint64_t))(v25 + 16);
  v35(v30, v28, OpaqueTypeMetadata2);
  long long v36 = *(void (**)(char *, uint64_t))(v25 + 8);
  v36(v28, OpaqueTypeMetadata2);
  v35(v58, v30, OpaqueTypeMetadata2);
  return ((uint64_t (*)(char *, uint64_t))v36)(v30, OpaqueTypeMetadata2);
}

uint64_t closure #1 in ActionMenu.menuButton<A>(title:excluding:label:onPresentationChanged:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char *a8@<X8>)
{
  uint64_t v26 = a3;
  uint64_t v27 = a7;
  uint64_t v25 = a5;
  long long v28 = a8;
  type metadata accessor for ActionMenuView();
  uint64_t v12 = type metadata accessor for Section();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  long long v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v25 - v17;
  if (a2) {
    uint64_t v19 = a1;
  }
  else {
    uint64_t v19 = 0;
  }
  unint64_t v20 = 0xE000000000000000;
  if (a2) {
    unint64_t v20 = a2;
  }
  uint64_t v37 = v19;
  unint64_t v38 = v20;
  uint64_t v29 = a4;
  uint64_t v30 = v25;
  uint64_t v31 = a6;
  uint64_t v32 = v27;
  uint64_t v33 = v26;
  swift_bridgeObjectRetain();
  uint64_t WitnessTable = swift_getWitnessTable();
  lazy protocol witness table accessor for type String and conformance String();
  Section<>.init<A>(_:content:)();
  long long v34 = &protocol witness table for Text;
  uint64_t v35 = WitnessTable;
  long long v36 = &protocol witness table for EmptyView;
  swift_getWitnessTable();
  uint64_t v22 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
  v22(v18, v16, v12);
  uint64_t v23 = *(void (**)(char *, uint64_t))(v13 + 8);
  v23(v16, v12);
  v22(v28, v18, v12);
  return ((uint64_t (*)(char *, uint64_t))v23)(v18, v12);
}

uint64_t partial apply for closure #1 in ActionMenu.menuButton<A>(title:excluding:label:onPresentationChanged:)@<X0>(char *a1@<X8>)
{
  return closure #1 in ActionMenu.menuButton<A>(title:excluding:label:onPresentationChanged:)(*(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), a1);
}

uint64_t closure #1 in closure #1 in ActionMenu.menuButton<A>(title:excluding:label:onPresentationChanged:)@<X0>(long long *a1@<X0>, _OWORD *a2@<X8>)
{
  outlined retain of ActionMenu<A>((uint64_t)a1);
  ActionMenuView.init(menu:useDivider:postAction:)(a1, 1, 0, 0, (uint64_t)v24);
  long long v13 = v24[4];
  long long v14 = v24[5];
  *(_OWORD *)uint64_t v15 = v24[6];
  *(void *)&v15[16] = v25;
  long long v9 = v24[0];
  long long v10 = v24[1];
  long long v11 = v24[2];
  long long v12 = v24[3];
  uint64_t v3 = type metadata accessor for ActionMenuView();
  swift_getWitnessTable();
  uint64_t v4 = *(void (**)(_OWORD *, long long *, uint64_t))(*(void *)(v3 - 8) + 16);
  v4(v16, &v9, v3);
  outlined release of ActionMenuView<A>((uint64_t)v24);
  uint64_t v5 = v17;
  uint64_t v6 = v21;
  long long v9 = v16[0];
  long long v10 = v16[1];
  long long v11 = v16[2];
  *(void *)&long long v12 = v17;
  BYTE8(v12) = v18;
  long long v13 = v19;
  LOBYTE(v14) = v20;
  *((void *)&v14 + 1) = v21;
  *(void *)uint64_t v15 = v22;
  *(_OWORD *)&v15[8] = v23;
  v4(a2, &v9, v3);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  outlined consume of (@escaping @callee_guaranteed () -> ())?(v6);
  return swift_release();
}

uint64_t WeakValuesDictionary.__deallocating_deinit()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t protocol witness for ObservableObject.objectWillChange.getter in conformance ActionMenuView<A>.Excluding<A1>@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ActionMenuView.Excluding();
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

uint64_t ActionMenuView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v129 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _ConditionalContent<Label<Text, Image>, Text>);
  uint64_t v6 = *(void *)(a1 + 24);
  uint64_t v125 = *(void *)(a1 + 16);
  uint64_t v130 = v6;
  type metadata accessor for ActionMenu.Element();
  uint64_t v7 = type metadata accessor for Array();
  type metadata accessor for ActionMenuView.ItemView();
  uint64_t v8 = type metadata accessor for _ConditionalContent();
  uint64_t WitnessTable = swift_getWitnessTable();
  *(void *)&long long v139 = &protocol witness table for String;
  uint64_t v9 = type metadata accessor for ForEach();
  uint64_t v10 = type metadata accessor for ModifiedContent();
  unint64_t v11 = lazy protocol witness table accessor for type _ConditionalContent<Label<Text, Image>, Text> and conformance <> _ConditionalContent<A, B>();
  v136[11] = swift_getWitnessTable();
  v136[12] = swift_getWitnessTable();
  uint64_t v112 = v8;
  uint64_t v109 = swift_getWitnessTable();
  v136[10] = v109;
  uint64_t v110 = swift_getWitnessTable();
  v136[8] = v110;
  v136[9] = &protocol witness table for _AppearanceActionModifier;
  uint64_t v106 = v5;
  *(void *)&long long v137 = v5;
  *((void *)&v137 + 1) = v10;
  unint64_t v105 = v11;
  *(void *)&long long v138 = v11;
  *((void *)&v138 + 1) = swift_getWitnessTable();
  uint64_t v116 = *((void *)&v138 + 1);
  uint64_t v12 = type metadata accessor for Menu();
  uint64_t v104 = *(void *)(v12 - 8);
  uint64_t v13 = __chkstk_darwin(v12);
  long long v101 = (char *)&v94 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v100 = (char *)&v94 - v15;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Divider?);
  swift_getTupleTypeMetadata2();
  uint64_t v17 = type metadata accessor for TupleView();
  uint64_t v103 = *(void *)(v17 - 8);
  uint64_t v18 = __chkstk_darwin(v17);
  long long v102 = (char *)&v94 - v19;
  uint64_t v99 = v16;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v98 = (uint64_t)&v94 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v114 = (uint64_t)&v94 - v22;
  uint64_t v124 = v12;
  uint64_t v23 = type metadata accessor for _ConditionalContent();
  uint64_t v120 = *(void *)(v23 - 8);
  uint64_t v24 = __chkstk_darwin(v23);
  uint64_t v119 = (char *)&v94 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v118 = (char *)&v94 - v27;
  uint64_t v115 = v9;
  uint64_t v108 = *(void *)(v9 - 8);
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v107 = (char *)&v94 - v29;
  uint64_t v128 = v10;
  uint64_t v117 = *(void *)(v10 - 8);
  uint64_t v30 = __chkstk_darwin(v28);
  unint64_t v97 = (char *)&v94 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = __chkstk_darwin(v30);
  uint64_t v122 = (char *)&v94 - v33;
  __chkstk_darwin(v32);
  uint64_t v121 = (char *)&v94 - v34;
  uint64_t v127 = type metadata accessor for _ConditionalContent();
  uint64_t v126 = *(void *)(v127 - 8);
  __chkstk_darwin(v127);
  long long v36 = (char *)&v94 - v35;
  long long v37 = *(_OWORD *)(v3 + 48);
  long long v139 = *(_OWORD *)(v3 + 32);
  long long v140 = v37;
  long long v141 = *(_OWORD *)(v3 + 64);
  long long v38 = *(_OWORD *)(v3 + 16);
  long long v137 = *(_OWORD *)v3;
  long long v138 = v38;
  specialized ActionMenuView.excluding.getter();
  uint64_t v39 = v125;
  type metadata accessor for ActionMenu();
  swift_bridgeObjectRetain();
  uint64_t v40 = ActionMenu.elements(excluding:)();
  uint64_t v123 = v41;
  uint64_t v43 = v42;
  swift_bridgeObjectRelease();
  v136[0] = v40;
  swift_getWitnessTable();
  uint64_t v113 = v7;
  uint64_t v44 = Collection.isEmpty.getter();
  if (v44)
  {
    uint64_t v45 = swift_bridgeObjectRelease();
    v123(v45);
    uint64_t v46 = swift_getWitnessTable();
    uint64_t v47 = swift_getWitnessTable();
    uint64_t v131 = v46;
    uint64_t v132 = v47;
    uint64_t v48 = swift_getWitnessTable();
    static ViewBuilder.buildEither<A, B>(first:)(v48, (uint64_t)&type metadata for EmptyView);
    swift_release();
  }
  else
  {
    uint64_t v96 = v36;
    uint64_t v95 = v23;
    uint64_t v49 = v124;
    v136[0] = v40;
    __chkstk_darwin(v44);
    uint64_t v50 = v39;
    uint64_t v92 = v39;
    uint64_t v51 = v130;
    uint64_t v93 = v130;
    swift_getKeyPath();
    uint64_t v52 = swift_allocObject();
    *(void *)(v52 + 16) = v50;
    *(void *)(v52 + 24) = v51;
    long long v53 = *(_OWORD *)(v3 + 80);
    *(_OWORD *)(v52 + 96) = *(_OWORD *)(v3 + 64);
    *(_OWORD *)(v52 + 112) = v53;
    *(_OWORD *)(v52 + 128) = *(_OWORD *)(v3 + 96);
    *(void *)(v52 + 144) = *(void *)(v3 + 112);
    long long v54 = *(_OWORD *)(v3 + 16);
    *(_OWORD *)(v52 + 32) = *(_OWORD *)v3;
    *(_OWORD *)(v52 + 48) = v54;
    long long v55 = *(_OWORD *)(v3 + 48);
    *(_OWORD *)(v52 + 64) = *(_OWORD *)(v3 + 32);
    *(_OWORD *)(v52 + 80) = v55;
    outlined retain of ActionMenuView<A>(v3);
    uint64_t v92 = v109;
    uint64_t v56 = v107;
    ForEach<>.init(_:id:content:)();
    uint64_t v57 = swift_allocObject();
    *(void *)(v57 + 16) = v123;
    *(void *)(v57 + 24) = v43;
    uint64_t v123 = v43;
    swift_retain();
    uint64_t v58 = v121;
    uint64_t v59 = v115;
    View.onAppear(perform:)();
    swift_release();
    uint64_t v60 = (*(uint64_t (**)(char *, uint64_t))(v108 + 8))(v56, v59);
    uint64_t v61 = v58;
    if (BYTE8(v140))
    {
      uint64_t v62 = __chkstk_darwin(v60);
      *(&v94 - 4) = v50;
      *(&v94 - 3) = v51;
      __chkstk_darwin(v62);
      *(&v94 - 4) = v50;
      *(&v94 - 3) = v51;
      uint64_t v92 = v3;
      uint64_t v63 = (uint64_t)v101;
      Menu.init(content:label:)();
      uint64_t v64 = v49;
      uint64_t v130 = swift_getWitnessTable();
      uint64_t v65 = v104;
      uint64_t v66 = *(void (**)(char *, uint64_t, uint64_t))(v104 + 16);
      uint64_t v67 = v100;
      v66(v100, v63, v64);
      uint64_t v68 = *(void (**)(uint64_t, uint64_t))(v65 + 8);
      v68(v63, v64);
      v66((char *)v63, (uint64_t)v67, v64);
      swift_getWitnessTable();
      uint64_t v69 = v118;
      static ViewBuilder.buildEither<A, B>(second:)(v63, v17, v64);
      v68(v63, v64);
      v68((uint64_t)v67, v64);
      uint64_t v70 = v117;
    }
    else
    {
      uint64_t v70 = v117;
      uint64_t v71 = *(void (**)(char *, char *, uint64_t))(v117 + 16);
      uint64_t v72 = v128;
      v71(v122, v58, v128);
      uint64_t v69 = v118;
      if (*(unsigned char *)(v3 + 80))
      {
        uint64_t v74 = v114;
        Divider.init()();
        uint64_t v75 = type metadata accessor for Divider();
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v75 - 8) + 56))(v74, 0, 1, v75);
      }
      else
      {
        uint64_t v73 = type metadata accessor for Divider();
        uint64_t v74 = v114;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v73 - 8) + 56))(v114, 1, 1, v73);
      }
      uint64_t v76 = v97;
      v71(v97, v122, v72);
      v136[0] = v76;
      uint64_t v77 = v98;
      outlined init with copy of Divider?(v74, v98);
      v136[1] = v77;
      v135[0] = v72;
      v135[1] = v99;
      uint64_t v133 = v116;
      unint64_t v134 = lazy protocol witness table accessor for type Divider? and conformance <A> A?();
      uint64_t v78 = (uint64_t)v102;
      static ViewBuilder.buildBlock<each A>(_:)((uint64_t)v136, 2uLL, (uint64_t)v135);
      outlined destroy of Divider?(v77);
      uint64_t v79 = *(void (**)(char *, uint64_t))(v70 + 8);
      v79(v76, v72);
      swift_getWitnessTable();
      swift_getWitnessTable();
      static ViewBuilder.buildEither<A, B>(first:)(v78, v17);
      (*(void (**)(uint64_t, uint64_t))(v103 + 8))(v78, v17);
      outlined destroy of Divider?(v114);
      v79(v122, v72);
      uint64_t v61 = v121;
    }
    uint64_t v80 = swift_getWitnessTable();
    uint64_t v81 = swift_getWitnessTable();
    v136[6] = v80;
    v136[7] = v81;
    uint64_t v82 = v95;
    swift_getWitnessTable();
    uint64_t v83 = v120;
    uint64_t v84 = (uint64_t)v119;
    (*(void (**)(char *, char *, uint64_t))(v120 + 16))(v119, v69, v82);
    long long v36 = v96;
    static ViewBuilder.buildEither<A, B>(second:)(v84, (uint64_t)&type metadata for EmptyView, v82);
    swift_release();
    uint64_t v85 = *(void (**)(uint64_t, uint64_t))(v83 + 8);
    v85(v84, v82);
    v85((uint64_t)v69, v82);
    (*(void (**)(char *, uint64_t))(v70 + 8))(v61, v128);
  }
  uint64_t v86 = swift_getWitnessTable();
  uint64_t v87 = swift_getWitnessTable();
  v136[4] = v86;
  v136[5] = v87;
  uint64_t v88 = swift_getWitnessTable();
  v136[2] = &protocol witness table for EmptyView;
  v136[3] = v88;
  uint64_t v89 = v127;
  swift_getWitnessTable();
  uint64_t v90 = v126;
  (*(void (**)(uint64_t, char *, uint64_t))(v126 + 16))(v129, v36, v89);
  return (*(uint64_t (**)(char *, uint64_t))(v90 + 8))(v36, v89);
}

uint64_t closure #1 in ActionMenuView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)&long long v52 = a2;
  uint64_t v50 = a1;
  uint64_t v57 = a3;
  uint64_t v3 = type metadata accessor for ActionMenuView.ItemView();
  uint64_t v49 = *(void *)(v3 - 8);
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v48 = (char *)&v42 - v7;
  long long v53 = (void *)type metadata accessor for ActionMenu.Item();
  uint64_t v8 = *(v53 - 1);
  uint64_t v9 = __chkstk_darwin(v53);
  unint64_t v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v51 = (uint64_t)&v42 - v12;
  uint64_t v13 = type metadata accessor for ActionMenu.Element();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (long long *)((char *)&v42 - v15);
  uint64_t v17 = type metadata accessor for ActionMenuView();
  uint64_t v58 = v3;
  uint64_t v59 = v17;
  uint64_t v18 = type metadata accessor for _ConditionalContent();
  uint64_t v55 = *(void *)(v18 - 8);
  uint64_t v56 = v18;
  __chkstk_darwin(v18);
  long long v54 = (char *)&v42 - v19;
  (*(void (**)(long long *, uint64_t, uint64_t))(v14 + 16))(v16, v50, v13);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    long long v20 = v16[3];
    v91[2] = v16[2];
    v91[3] = v20;
    v91[4] = v16[4];
    long long v21 = v16[1];
    v91[0] = *v16;
    v91[1] = v21;
    uint64_t v22 = *(void *)(v52 + 88);
    uint64_t v23 = *(void *)(v52 + 96);
    outlined retain of ActionMenu<A>((uint64_t)v91);
    outlined copy of (@escaping @callee_guaranteed () -> ())?(v22);
    ActionMenuView.init(menu:useDivider:postAction:)(v91, 1, v22, v23, (uint64_t)v89);
    long long v76 = v89[4];
    long long v77 = v89[5];
    v78[0] = v89[6];
    *(void *)&v78[1] = v90;
    long long v72 = v89[0];
    long long v73 = v89[1];
    long long v74 = v89[2];
    long long v75 = v89[3];
    uint64_t v24 = v59;
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v25 = *(void (**)(long long *, long long *, uint64_t))(*(void *)(v24 - 8) + 16);
    v25(&v79, &v72, v24);
    outlined release of ActionMenuView<A>((uint64_t)v89);
    uint64_t v48 = (char *)*((void *)&v80 + 1);
    uint64_t v49 = *((void *)&v79 + 1);
    uint64_t v47 = *((void *)&v81 + 1);
    long long v53 = v82;
    uint64_t v45 = *((void *)&v84 + 1);
    uint64_t v50 = v87;
    uint64_t v51 = v86;
    long long v62 = v79;
    long long v63 = v80;
    long long v64 = v81;
    uint64_t v65 = v82;
    char v66 = v83;
    long long v67 = v84;
    char v68 = v85;
    uint64_t v69 = v86;
    uint64_t v70 = v87;
    long long v52 = v88;
    long long v71 = v88;
    v25(&v72, &v62, v24);
    id v43 = (id)v75;
    uint64_t v26 = *((void *)&v77 + 1);
    long long v62 = v72;
    long long v63 = v73;
    long long v64 = v74;
    uint64_t v65 = (void *)v75;
    char v66 = BYTE8(v75);
    long long v67 = v76;
    char v68 = v77;
    uint64_t v69 = *((void *)&v77 + 1);
    uint64_t v70 = *(void *)&v78[0];
    long long v44 = *(_OWORD *)((char *)v78 + 8);
    long long v71 = *(_OWORD *)((char *)v78 + 8);
    uint64_t v27 = v58;
    swift_getWitnessTable();
    uint64_t v28 = v54;
    static ViewBuilder.buildEither<A, B>(second:)((uint64_t)&v62, v27, v24);
    outlined release of ActionMenu<A>((uint64_t)v91);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    outlined consume of (@escaping @callee_guaranteed () -> ())?(v26);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();

    outlined consume of (@escaping @callee_guaranteed () -> ())?(v51);
    swift_release();
  }
  else
  {
    uint64_t v29 = v51;
    uint64_t v30 = v53;
    (*(void (**)(uint64_t, long long *, void *))(v8 + 32))(v51, v16, v53);
    (*(void (**)(char *, uint64_t, void *))(v8 + 16))(v11, v29, v30);
    uint64_t v31 = *(void *)(v52 + 88);
    ActionMenuView.ItemView.init(item:postAction:)((uint64_t)v11, v31, *(void *)(v52 + 96), (uint64_t)v6);
    uint64_t v32 = v58;
    *(void *)&long long v52 = swift_getWitnessTable();
    uint64_t v33 = v48;
    uint64_t v34 = v49;
    uint64_t v35 = *(void (**)(char *, char *, uint64_t))(v49 + 16);
    v35(v48, v6, v32);
    outlined copy of (@escaping @callee_guaranteed () -> ())?(v31);
    long long v36 = *(void (**)(char *, uint64_t))(v34 + 8);
    v36(v6, v32);
    v35(v6, v33, v32);
    swift_getWitnessTable();
    uint64_t v28 = v54;
    static ViewBuilder.buildEither<A, B>(first:)((uint64_t)v6, v32);
    v36(v6, v32);
    v36(v33, v32);
    (*(void (**)(uint64_t, void *))(v8 + 8))(v51, v53);
  }
  uint64_t v37 = swift_getWitnessTable();
  uint64_t v38 = swift_getWitnessTable();
  uint64_t v60 = v37;
  uint64_t v61 = v38;
  uint64_t v39 = v56;
  swift_getWitnessTable();
  uint64_t v40 = v55;
  (*(void (**)(uint64_t, char *, uint64_t))(v55 + 16))(v57, v28, v39);
  return (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v28, v39);
}

uint64_t ActionMenuView.ItemView.init(item:postAction:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = type metadata accessor for ActionMenu.Item();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(a4, a1, v8);
  uint64_t result = type metadata accessor for ActionMenuView.ItemView();
  uint64_t v10 = (void *)(a4 + *(int *)(result + 36));
  void *v10 = a2;
  v10[1] = a3;
  return result;
}

uint64_t static ViewBuilder.buildBlock<each A>(_:)(uint64_t TupleTypeMetadata, unint64_t a2, uint64_t a3)
{
  uint64_t v4 = (uint64_t *)TupleTypeMetadata;
  uint64_t v5 = (uint64_t *)(a3 & 0xFFFFFFFFFFFFFFFELL);
  if (a2 == 1)
  {
    uint64_t v6 = *v5;
  }
  else
  {
    __chkstk_darwin(TupleTypeMetadata);
    uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    if (a2)
    {
      unint64_t v9 = 0;
      if (a2 < 4) {
        goto LABEL_9;
      }
      if ((unint64_t)(v8 - (char *)v5) < 0x20) {
        goto LABEL_9;
      }
      unint64_t v9 = a2 & 0xFFFFFFFFFFFFFFFCLL;
      uint64_t v10 = (long long *)(v5 + 2);
      unint64_t v11 = v8 + 16;
      unint64_t v12 = a2 & 0xFFFFFFFFFFFFFFFCLL;
      do
      {
        long long v13 = *v10;
        *(v11 - 1) = *(v10 - 1);
        *unint64_t v11 = v13;
        v10 += 2;
        v11 += 2;
        v12 -= 4;
      }
      while (v12);
      if (v9 != a2)
      {
LABEL_9:
        unint64_t v14 = a2 - v9;
        uint64_t v15 = v9;
        uint64_t v16 = &v8[8 * v9];
        uint64_t v17 = &v5[v15];
        do
        {
          uint64_t v18 = *v17++;
          *(void *)uint64_t v16 = v18;
          v16 += 8;
          --v14;
        }
        while (v14);
      }
    }
    TupleTypeMetadata = swift_getTupleTypeMetadata();
    uint64_t v6 = TupleTypeMetadata;
  }
  __chkstk_darwin(TupleTypeMetadata);
  long long v20 = (char *)&v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    long long v21 = (int *)(v6 + 32);
    unint64_t v22 = a2;
    do
    {
      if (a2 == 1) {
        int v23 = 0;
      }
      else {
        int v23 = *v21;
      }
      uint64_t v25 = *v5++;
      uint64_t v24 = v25;
      uint64_t v26 = *v4++;
      (*(void (**)(char *, uint64_t))(*(void *)(v24 - 8) + 16))(&v20[v23], v26);
      v21 += 4;
      --v22;
    }
    while (v22);
  }
  return TupleView.init(_:)();
}

uint64_t closure #3 in ActionMenuView.body.getter@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  type metadata accessor for ActionMenu.Element();
  uint64_t v4 = type metadata accessor for Array();
  type metadata accessor for ActionMenuView.ItemView();
  type metadata accessor for ActionMenuView();
  v13[5] = v4;
  v13[6] = &type metadata for String;
  v13[7] = type metadata accessor for _ConditionalContent();
  v13[8] = swift_getWitnessTable();
  v13[9] = &protocol witness table for String;
  type metadata accessor for ForEach();
  uint64_t v5 = type metadata accessor for ModifiedContent();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v13 - v7;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v10 = swift_getWitnessTable();
  v13[3] = WitnessTable;
  v13[4] = v10;
  v13[2] = swift_getWitnessTable();
  v13[0] = swift_getWitnessTable();
  v13[1] = &protocol witness table for _AppearanceActionModifier;
  swift_getWitnessTable();
  unint64_t v11 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v11(v8, a1, v5);
  v11(a2, (uint64_t)v8, v5);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t closure #4 in ActionMenuView.body.getter@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Label<Text, Image>);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  unint64_t v11 = (char *)v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<Label<Text, Image>, Text>.Storage);
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v15 = (char *)v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1[6])
  {
    uint64_t v16 = __chkstk_darwin(v13);
    v24[1] = a4;
    v24[-4] = a2;
    v24[-3] = a3;
    v24[-2] = a1;
    __chkstk_darwin(v16);
    v24[-2] = v17;
    id v18 = v17;
    Label.init(title:icon:)();
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v15, v11, v8);
    swift_storeEnumTagMultiPayload();
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type Label<Text, Image> and conformance Label<A, B>, &demangling cache variable for type metadata for Label<Text, Image>);
    _ConditionalContent<>.init(storage:)();

    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  else
  {
    uint64_t v20 = a1[5];
    v24[2] = a1[4];
    v24[3] = v20;
    lazy protocol witness table accessor for type String and conformance String();
    swift_bridgeObjectRetain();
    *(void *)uint64_t v15 = Text.init<A>(_:)();
    *((void *)v15 + 1) = v21;
    v15[16] = v22 & 1;
    *((void *)v15 + 3) = v23;
    swift_storeEnumTagMultiPayload();
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type Label<Text, Image> and conformance Label<A, B>, &demangling cache variable for type metadata for Label<Text, Image>);
    return _ConditionalContent<>.init(storage:)();
  }
}

uint64_t closure #1 in closure #4 in ActionMenuView.body.getter@<X0>(uint64_t a1@<X8>)
{
  lazy protocol witness table accessor for type String and conformance String();
  swift_bridgeObjectRetain();
  uint64_t result = Text.init<A>(_:)();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(void *)(a1 + 24) = v5;
  return result;
}

uint64_t ActionMenuView.ItemView.body.getter@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v35 = a2;
  uint64_t v33 = a1;
  uint64_t v3 = a1 - 8;
  uint64_t v4 = *(void *)(a1 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(a1);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ButtonRole?);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Button<Label<LabelGroup<TupleView<(Text, Text)>>, Image?>>);
  uint64_t v9 = *(void *)(v34 - 8);
  uint64_t v10 = __chkstk_darwin(v34);
  uint64_t v32 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v31 = (char *)&v29 - v12;
  uint64_t v13 = *(void *)(v3 + 24);
  uint64_t v14 = *(void *)(v3 + 32);
  uint64_t v15 = *(int *)(type metadata accessor for ActionMenu.Item() + 36);
  uint64_t v30 = v2;
  (*(void (**)(void *__return_ptr))(v2 + v15))(v36);
  uint64_t v16 = v37;
  uint64_t v17 = v38;
  __swift_project_boxed_opaque_existential_0Tm(v36, v37);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v17 + 32))(v16, v17))
  {
    static ButtonRole.destructive.getter();
    uint64_t v19 = type metadata accessor for ButtonRole();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v8, 0, 1, v19);
  }
  else
  {
    uint64_t v18 = type metadata accessor for ButtonRole();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v8, 1, 1, v18);
  }
  uint64_t v20 = v33;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v30, v33);
  unint64_t v21 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = v13;
  *(void *)(v22 + 24) = v14;
  uint64_t v23 = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v4 + 32))(v22 + v21, (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v20);
  __chkstk_darwin(v23);
  *(&v29 - 2) = (uint64_t)v36;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Label<LabelGroup<TupleView<(Text, Text)>>, Image?>);
  lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type Label<LabelGroup<TupleView<(Text, Text)>>, Image?> and conformance Label<A, B>, &demangling cache variable for type metadata for Label<LabelGroup<TupleView<(Text, Text)>>, Image?>);
  uint64_t v24 = v32;
  Button.init(role:action:label:)();
  uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
  uint64_t v26 = v31;
  uint64_t v27 = v34;
  v25(v31, v24, v34);
  v25(v35, v26, v27);
  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v36);
}

uint64_t ActionMenuItemStyle.buttonRole.getter@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  if (a1)
  {
    static ButtonRole.destructive.getter();
    uint64_t v8 = type metadata accessor for ButtonRole();
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56);
    uint64_t v5 = v8;
    uint64_t v6 = a2;
    uint64_t v7 = 0;
  }
  else
  {
    uint64_t v3 = type metadata accessor for ButtonRole();
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56);
    uint64_t v5 = v3;
    uint64_t v6 = a2;
    uint64_t v7 = 1;
  }

  return v4(v6, v7, 1, v5);
}

uint64_t type metadata instantiation function for ActionMenuView.Excluding()
{
  return _swift_allocateGenericClassMetadata();
}

uint64_t type metadata completion function for ActionMenuView.Excluding()
{
  return swift_initClassMetadata2();
}

uint64_t sub_10004B5E8()
{
  return swift_getWitnessTable();
}

uint64_t sub_10004B7B8()
{
  return swift_getWitnessTable();
}

uint64_t sub_10004B99C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t type metadata instantiation function for ActionMenuView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 32);
}

uint64_t destroy for ActionMenuView(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  if (*(void *)(a1 + 88)) {
    swift_release();
  }

  return swift_release();
}

uint64_t initializeWithCopy for ActionMenuView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  uint64_t v7 = *(void **)(a2 + 48);
  *(void *)(a1 + 48) = v7;
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v8 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v8;
  uint64_t v9 = (_OWORD *)(a2 + 88);
  uint64_t v10 = *(void *)(a2 + 88);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v11 = v7;
  swift_retain();
  if (v10)
  {
    uint64_t v12 = *(void *)(a2 + 96);
    *(void *)(a1 + 88) = v10;
    *(void *)(a1 + 96) = v12;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 88) = *v9;
  }
  uint64_t v13 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v13;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ActionMenuView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(a1 + 48);
  uint64_t v5 = *(void **)(a2 + 48);
  *(void *)(a1 + 48) = v5;
  id v6 = v5;

  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v7 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v7;
  swift_retain();
  swift_release();
  uint64_t v8 = *(void *)(a1 + 88);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v9 = *(void *)(a2 + 88);
  if (!v8)
  {
    if (v9)
    {
      uint64_t v11 = *(void *)(a2 + 96);
      *(void *)(a1 + 88) = v9;
      *(void *)(a1 + 96) = v11;
      swift_retain();
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    goto LABEL_8;
  }
  if (!v9)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v10 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = v9;
  *(void *)(a1 + 96) = v10;
  swift_retain();
  swift_release();
LABEL_8:
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_retain();
  swift_release();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  return a1;
}

__n128 __swift_memcpy120_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = (__n128)a2[4];
  long long v6 = a2[5];
  long long v7 = a2[6];
  *(void *)(a1 + 112) = *((void *)a2 + 14);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t assignWithTake for ActionMenuView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  long long v6 = *(void **)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);

  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_release();
  uint64_t v7 = *(void *)(a2 + 88);
  uint64_t v8 = *(void *)(a1 + 88);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  if (!v8)
  {
    if (v7)
    {
      uint64_t v10 = *(void *)(a2 + 96);
      *(void *)(a1 + 88) = v7;
      *(void *)(a1 + 96) = v10;
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    goto LABEL_8;
  }
  if (!v7)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v9 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = v7;
  *(void *)(a1 + 96) = v9;
  swift_release();
LABEL_8:
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_release();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  return a1;
}

uint64_t getEnumTagSinglePayload for ActionMenuView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 120)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ActionMenuView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 120) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 120) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void *associated type witness table accessor for ObservableObject.ObjectWillChangePublisher : Publisher in ActionMenuView<A>.Excluding<A1>()
{
  return &protocol witness table for ObservableObjectPublisher;
}

uint64_t associated type witness table accessor for View.Body : View in ActionMenuView<A>()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t closure #1 in ActionMenuView.ItemView.body.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ActionMenuView.ItemView();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v18 - v8;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&_sScPSgMD_0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  type metadata accessor for MainActor();
  uint64_t v14 = static MainActor.shared.getter();
  unint64_t v15 = (*(unsigned __int8 *)(v7 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v16 = (char *)swift_allocObject();
  *((void *)v16 + 2) = v14;
  *((void *)v16 + 3) = &protocol witness table for MainActor;
  *((void *)v16 + 4) = a2;
  *((void *)v16 + 5) = a3;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v16[v15], v9, v6);
  _sScTss5Error_pRs_rlE8priority9operationScTyxsAA_pGScPSg_xyYaKYAcntcfCyt_Tgm5((uint64_t)v12, (uint64_t)&async function pointer to partial apply for closure #1 in closure #1 in ActionMenuView.ItemView.body.getter, (uint64_t)v16);
  return swift_release();
}

uint64_t closure #1 in closure #1 in ActionMenuView.ItemView.body.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  type metadata accessor for MainActor();
  v6[5] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  v6[6] = v8;
  v6[7] = v7;
  return _swift_task_switch(closure #1 in closure #1 in ActionMenuView.ItemView.body.getter, v8, v7);
}

uint64_t closure #1 in closure #1 in ActionMenuView.ItemView.body.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  unint64_t v2 = (void *)(v1 + *(int *)(type metadata accessor for ActionMenu.Item() + 44));
  uint64_t v5 = (uint64_t (*)(void))(*v2 + *(int *)*v2);
  long long v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v3;
  *long long v3 = v0;
  v3[1] = closure #1 in closure #1 in ActionMenuView.ItemView.body.getter;
  return v5();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();
  uint64_t v7;

  unint64_t v2 = *v1;
  *(void *)(*v1 + 72) = v0;
  swift_task_dealloc();
  long long v3 = *(void *)(v2 + 56);
  uint64_t v4 = *(void *)(v2 + 48);
  if (v0) {
    uint64_t v5 = closure #1 in closure #1 in ActionMenuView.ItemView.body.getter;
  }
  else {
    uint64_t v5 = closure #1 in closure #1 in ActionMenuView.ItemView.body.getter;
  }
  return _swift_task_switch(v5, v4, v3);
}

{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(void);
  uint64_t (*v3)(void);
  uint64_t v5;

  uint64_t v1 = *(void *)(v0 + 16);
  swift_release();
  unint64_t v2 = *(void (**)(void))(v1 + *(int *)(type metadata accessor for ActionMenuView.ItemView() + 36));
  if (v2) {
    v2();
  }
  long long v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t closure #2 in ActionMenuView.ItemView.body.getter()
{
  return Label.init(title:icon:)();
}

uint64_t closure #1 in closure #2 in ActionMenuView.ItemView.body.getter()
{
  return LabelGroup.init(content:)();
}

uint64_t closure #1 in closure #1 in closure #2 in ActionMenuView.ItemView.body.getter@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = a1[3];
  uint64_t v5 = a1[4];
  __swift_project_boxed_opaque_existential_0Tm(a1, v4);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
  lazy protocol witness table accessor for type String and conformance String();
  uint64_t v6 = Text.init<A>(_:)();
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  char v12 = v11 & 1;
  uint64_t v14 = a1[3];
  uint64_t v13 = a1[4];
  __swift_project_boxed_opaque_existential_0Tm(a1, v14);
  (*(void (**)(uint64_t, uint64_t))(v13 + 16))(v14, v13);
  uint64_t v15 = Text.init<A>(_:)();
  uint64_t v17 = v16;
  LOBYTE(v13) = v18 & 1;
  *(void *)a2 = v6;
  *(void *)(a2 + 8) = v8;
  *(unsigned char *)(a2 + 16) = v12;
  *(void *)(a2 + 24) = v10;
  *(void *)(a2 + 32) = v15;
  *(void *)(a2 + 40) = v16;
  *(unsigned char *)(a2 + 48) = v18 & 1;
  *(void *)(a2 + 56) = v19;
  outlined copy of Text.Storage(v6, v8, v12);
  swift_bridgeObjectRetain();
  outlined copy of Text.Storage(v15, v17, v13);
  swift_bridgeObjectRetain();
  outlined consume of Text.Storage(v15, v17, v13);
  swift_bridgeObjectRelease();
  outlined consume of Text.Storage(v6, v8, v12);
  return swift_bridgeObjectRelease();
}

uint64_t closure #2 in closure #2 in ActionMenuView.ItemView.body.getter@<X0>(void *a1@<X0>, uint64_t (**a2)(uint64_t)@<X8>)
{
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  __swift_project_boxed_opaque_existential_0Tm(a1, v3);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 24))(v3, v4);
  uint64_t v6 = (uint64_t (*)(uint64_t))result;
  if (result)
  {
    uint64_t v7 = swift_release();
    uint64_t v6 = (uint64_t (*)(uint64_t))v6(v7);
    uint64_t result = swift_release();
  }
  *a2 = v6;
  return result;
}

uint64_t protocol witness for static View._makeView(view:inputs:) in conformance ActionMenuView<A>.ItemView()
{
  return static View._makeView(view:inputs:)();
}

uint64_t protocol witness for static View._makeViewList(view:inputs:) in conformance ActionMenuView<A>.ItemView()
{
  return static View._makeViewList(view:inputs:)();
}

uint64_t protocol witness for static View._viewListCount(inputs:) in conformance ActionMenuView<A>.ItemView()
{
  return static View._viewListCount(inputs:)();
}

uint64_t protocol witness for View.body.getter in conformance ActionMenuView<A>@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return ActionMenuView.body.getter(a1, a2);
}

uint64_t type metadata accessor for ActionMenuView.ItemView()
{
  return __swift_instantiateGenericMetadata();
}

unint64_t lazy protocol witness table accessor for type _ConditionalContent<Label<Text, Image>, Text> and conformance <> _ConditionalContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type _ConditionalContent<Label<Text, Image>, Text> and conformance <> _ConditionalContent<A, B>;
  if (!lazy protocol witness table cache variable for type _ConditionalContent<Label<Text, Image>, Text> and conformance <> _ConditionalContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _ConditionalContent<Label<Text, Image>, Text>);
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type Label<Text, Image> and conformance Label<A, B>, &demangling cache variable for type metadata for Label<Text, Image>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type _ConditionalContent<Label<Text, Image>, Text> and conformance <> _ConditionalContent<A, B>);
  }
  return result;
}

uint64_t specialized ActionMenuView.excluding.getter()
{
  uint64_t v1 = *(void *)(v0 + 104);
  type metadata accessor for ActionMenuView.Excluding();
  swift_getWitnessTable();
  if (v1) {
    return v1;
  }
  uint64_t result = EnvironmentObject.error()();
  __break(1u);
  return result;
}

uint64_t sub_10004CAB0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for ActionMenu.Element();
  uint64_t result = ActionMenu.Element.id.getter(v2);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_10004CAEC()
{
  return 16;
}

__n128 sub_10004CAF8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_10004CB04()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  if (*(void *)(v0 + 120)) {
    swift_release();
  }
  swift_release();

  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in ActionMenuView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return closure #1 in ActionMenuView.body.getter(a1, v2 + 32, a2);
}

uint64_t outlined retain of ActionMenuView<A>(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 88);
  id v3 = *(id *)(a1 + 48);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  outlined copy of (@escaping @callee_guaranteed () -> ())?(v2);
  swift_retain();
  return a1;
}

uint64_t outlined copy of (@escaping @callee_guaranteed () -> ())?(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t partial apply for closure #3 in ActionMenuView.body.getter@<X0>(char *a1@<X8>)
{
  return closure #3 in ActionMenuView.body.getter(*(void *)(v1 + 32), a1);
}

uint64_t partial apply for closure #4 in ActionMenuView.body.getter@<X0>(uint64_t a1@<X8>)
{
  return closure #4 in ActionMenuView.body.getter(*(void **)(v1 + 32), *(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t outlined init with copy of Divider?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Divider?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t lazy protocol witness table accessor for type Divider? and conformance <A> A?()
{
  unint64_t result = lazy protocol witness table cache variable for type Divider? and conformance <A> A?;
  if (!lazy protocol witness table cache variable for type Divider? and conformance <A> A?)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Divider?);
    lazy protocol witness table accessor for type Divider and conformance Divider();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Divider? and conformance <A> A?);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type Divider and conformance Divider()
{
  unint64_t result = lazy protocol witness table cache variable for type Divider and conformance Divider;
  if (!lazy protocol witness table cache variable for type Divider and conformance Divider)
  {
    type metadata accessor for Divider();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Divider and conformance Divider);
  }
  return result;
}

uint64_t outlined destroy of Divider?(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Divider?);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t partial apply for closure #1 in closure #4 in ActionMenuView.body.getter@<X0>(uint64_t a1@<X8>)
{
  return closure #1 in closure #4 in ActionMenuView.body.getter(a1);
}

uint64_t partial apply for closure #2 in closure #4 in ActionMenuView.body.getter@<X0>(uint64_t *a1@<X8>)
{
  id v3 = *(id *)(v1 + 16);
  uint64_t result = Image.init(uiImage:)();
  *a1 = result;
  return result;
}

uint64_t outlined consume of (@escaping @callee_guaranteed () -> ())?(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t partial apply for closure #1 in closure #1 in ActionMenu.menuButton<A>(title:excluding:label:onPresentationChanged:)@<X0>(_OWORD *a1@<X8>)
{
  return closure #1 in closure #1 in ActionMenu.menuButton<A>(title:excluding:label:onPresentationChanged:)(*(long long **)(v1 + 48), a1);
}

uint64_t partial apply for closure #1 in View.menuItems<A>(for:title:excluding:)@<X0>(long long *a1@<X8>)
{
  return closure #1 in View.menuItems<A>(for:title:excluding:)(*(long long **)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 24), *(void *)(v1 + 40), a1);
}

uint64_t outlined release of ActionMenuView<A>(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 48);
  uint64_t v3 = *(void *)(a1 + 88);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  outlined consume of (@escaping @callee_guaranteed () -> ())?(v3);
  swift_release();
  return a1;
}

uint64_t outlined release of ModifiedContent<ActionMenuView<A1>, _EnvironmentKeyWritingModifier<ActionMenuView<A1>.Excluding<A1>?>>(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 48);
  uint64_t v3 = *(void *)(a1 + 88);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  outlined consume of (@escaping @callee_guaranteed () -> ())?(v3);
  swift_release();
  swift_release();
  swift_release();
  return a1;
}

uint64_t type metadata completion function for ActionMenuView.ItemView()
{
  uint64_t result = type metadata accessor for ActionMenu.Item();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for ActionMenuView.ItemView(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  unint64_t v7 = (((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  int v8 = *(_DWORD *)(v5 + 80);
  if ((v8 & 0x1000F8) != 0 || ((v7 + 23) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    uint64_t v10 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v10 + ((unsigned __int16)((v8 & 0xF8) + 23) & (unsigned __int16)~(v8 & 0xF8) & 0x1F8));
  }
  else
  {
    unint64_t v11 = v7 + 16;
    (*(void (**)(void *, void *))(v5 + 16))(a1, a2);
    char v12 = (void *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v13 = (char *)a2 + 7;
    uint64_t v14 = (void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v15 = v14[1];
    *char v12 = *v14;
    v12[1] = v15;
    uint64_t v16 = (void *)(((unint64_t)v12 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v17 = (void *)(((unint64_t)v14 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v18 = v17[1];
    *uint64_t v16 = *v17;
    v16[1] = v18;
    uint64_t v19 = (void *)(((unint64_t)v16 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v20 = (void *)(((unint64_t)v17 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v21 = v20[1];
    void *v19 = *v20;
    v19[1] = v21;
    unint64_t v22 = ((unint64_t)v4 + v11 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v23 = (unint64_t *)((unint64_t)&v13[v11] & 0xFFFFFFFFFFFFFFF8);
    unint64_t v24 = *v23;
    swift_retain();
    swift_retain();
    swift_retain();
    if (v24 < 0xFFFFFFFF)
    {
      *(_OWORD *)unint64_t v22 = *(_OWORD *)v23;
      return v4;
    }
    unint64_t v25 = v23[1];
    *(void *)unint64_t v22 = v24;
    *(void *)(v22 + 8) = v25;
  }
  swift_retain();
  return v4;
}

uint64_t destroy for ActionMenuView.ItemView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v3)();
  uint64_t v4 = *(void *)(v3 + 56) + 7;
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  if (*(void *)((a1 + (((((v4 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) >= 0xFFFFFFFFuLL)
  {
    return swift_release();
  }
  return result;
}

uint64_t initializeWithCopy for ActionMenuView.ItemView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  unint64_t v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  int v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v9 = v8[1];
  *unint64_t v7 = *v8;
  v7[1] = v9;
  uint64_t v10 = (void *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v11 = (void *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v12 = v11[1];
  void *v10 = *v11;
  v10[1] = v12;
  uint64_t v13 = (void *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v14 = (void *)(((unint64_t)v11 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v15 = v14[1];
  *uint64_t v13 = *v14;
  v13[1] = v15;
  unint64_t v16 = (((((v6 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  unint64_t v17 = (a1 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v18 = (unint64_t *)((a2 + v16 + 7) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v19 = *v18;
  swift_retain();
  swift_retain();
  swift_retain();
  if (v19 < 0xFFFFFFFF)
  {
    *(_OWORD *)unint64_t v17 = *(_OWORD *)v18;
  }
  else
  {
    unint64_t v20 = v18[1];
    *(void *)unint64_t v17 = v19;
    *(void *)(v17 + 8) = v20;
    swift_retain();
  }
  return a1;
}

uint64_t assignWithCopy for ActionMenuView.ItemView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  unint64_t v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  int v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v9 = v8[1];
  *unint64_t v7 = *v8;
  v7[1] = v9;
  swift_retain();
  swift_release();
  uint64_t v10 = (void *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v11 = (void *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v12 = v11[1];
  void *v10 = *v11;
  v10[1] = v12;
  swift_retain();
  swift_release();
  uint64_t v13 = (void *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v14 = (void *)(((unint64_t)v11 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v15 = v14[1];
  *uint64_t v13 = *v14;
  v13[1] = v15;
  swift_retain();
  swift_release();
  unint64_t v16 = (((((v6 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  unint64_t v17 = (void *)((a1 + v16 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v18 = (unint64_t *)((a2 + v16 + 7) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v19 = *v18;
  if (*v17 < 0xFFFFFFFFuLL)
  {
    if (v19 >= 0xFFFFFFFF)
    {
      unint64_t v21 = v18[1];
      void *v17 = v19;
      v17[1] = v21;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)unint64_t v17 = *(_OWORD *)v18;
    return a1;
  }
  if (v19 < 0xFFFFFFFF)
  {
    swift_release();
    goto LABEL_7;
  }
  unint64_t v20 = v18[1];
  void *v17 = v19;
  v17[1] = v20;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t initializeWithTake for ActionMenuView.ItemView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32) + 7;
  unint64_t v7 = (_OWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  int v8 = (_OWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v7 = *v8;
  uint64_t v9 = (_OWORD *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = (_OWORD *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v9 = *v10;
  *(_OWORD *)(((unint64_t)v9 + 23) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v11 = (((((v6 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  unint64_t v12 = (a1 + v11 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v13 = (uint64_t *)((a2 + v11 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v14 = *v13;
  if ((unint64_t)*v13 < 0xFFFFFFFF)
  {
    *(_OWORD *)unint64_t v12 = *(_OWORD *)v13;
  }
  else
  {
    uint64_t v15 = v13[1];
    *(void *)unint64_t v12 = v14;
    *(void *)(v12 + 8) = v15;
  }
  return a1;
}

uint64_t assignWithTake for ActionMenuView.ItemView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  unint64_t v7 = (_OWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  int v8 = (_OWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v7 = *v8;
  swift_release();
  uint64_t v9 = (_OWORD *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = (_OWORD *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v9 = *v10;
  swift_release();
  *(_OWORD *)(((unint64_t)v9 + 23) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  unint64_t v11 = (((((v6 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  unint64_t v12 = (void *)((a1 + v11 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v13 = (unint64_t *)((a2 + v11 + 7) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v14 = *v13;
  if (*v12 < 0xFFFFFFFFuLL)
  {
    if (v14 >= 0xFFFFFFFF)
    {
      unint64_t v16 = v13[1];
      *unint64_t v12 = v14;
      v12[1] = v16;
      return a1;
    }
LABEL_7:
    *(_OWORD *)unint64_t v12 = *(_OWORD *)v13;
    return a1;
  }
  if (v14 < 0xFFFFFFFF)
  {
    swift_release();
    goto LABEL_7;
  }
  unint64_t v15 = v13[1];
  *unint64_t v12 = v14;
  v12[1] = v15;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ActionMenuView.ItemView(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((((((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
       + 16;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x10004D8ACLL);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  unint64_t v17 = *(void *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void storeEnumTagSinglePayload for ActionMenuView.ItemView(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  unint64_t v10 = ((((((((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  if (v8 >= a3)
  {
    int v14 = 0;
    int v15 = a2 - v8;
    if (a2 <= v8)
    {
LABEL_17:
      switch(v14)
      {
        case 1:
          a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 2:
          *(_WORD *)&a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 3:
          goto LABEL_43;
        case 4:
          *(_DWORD *)&a1[v10] = 0;
          goto LABEL_29;
        default:
LABEL_29:
          if (a2)
          {
LABEL_30:
            if (v7 < 0x7FFFFFFF)
            {
              unint64_t v19 = (void *)((unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8);
              if ((a2 & 0x80000000) != 0)
              {
                uint64_t v20 = a2 ^ 0x80000000;
                v19[1] = 0;
              }
              else
              {
                uint64_t v20 = a2 - 1;
              }
              void *v19 = v20;
            }
            else
            {
              uint64_t v18 = *(void (**)(void))(v6 + 56);
              v18();
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v11 = a3 - v8;
    if (((((((((v9 + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      unsigned int v12 = v11 + 1;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v12 >= 0x10000) {
      int v13 = 4;
    }
    else {
      int v13 = 2;
    }
    if (v12 < 0x100) {
      int v13 = 1;
    }
    if (v12 >= 2) {
      int v14 = v13;
    }
    else {
      int v14 = 0;
    }
    int v15 = a2 - v8;
    if (a2 <= v8) {
      goto LABEL_17;
    }
  }
  if (((((((((v9 + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) == 0xFFFFFFF0) {
    int v16 = v15;
  }
  else {
    int v16 = 1;
  }
  if (((((((((v9 + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    int v17 = ~v8 + a2;
    bzero(a1, ((((((((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)+ 16);
    *(_DWORD *)a1 = v17;
  }
  switch(v14)
  {
    case 1:
      a1[v10] = v16;
      break;
    case 2:
      *(_WORD *)&a1[v10] = v16;
      break;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x10004DAC4);
    case 4:
      *(_DWORD *)&a1[v10] = v16;
      break;
    default:
      return;
  }
}

uint64_t sub_10004DAEC()
{
  return swift_getWitnessTable();
}

uint64_t associated type witness table accessor for View.Body : View in ActionMenuView<A>.ItemView()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10004DDDC()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = (int *)(type metadata accessor for ActionMenuView.ItemView() - 8);
  uint64_t v3 = v0
     + ((*(unsigned __int8 *)(*(void *)v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v2 + 80));
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v3, v1);
  type metadata accessor for ActionMenu.Item();
  swift_release();
  swift_release();
  swift_release();
  if (*(void *)(v3 + v2[11])) {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in ActionMenuView.ItemView.body.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = *(void *)(type metadata accessor for ActionMenuView.ItemView() - 8);
  uint64_t v4 = v0 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return closure #1 in ActionMenuView.ItemView.body.getter(v4, v1, v2);
}

uint64_t partial apply for closure #2 in ActionMenuView.ItemView.body.getter()
{
  return closure #2 in ActionMenuView.ItemView.body.getter();
}

uint64_t partial apply for closure #1 in closure #2 in ActionMenuView.ItemView.body.getter()
{
  return closure #1 in closure #2 in ActionMenuView.ItemView.body.getter();
}

uint64_t partial apply for closure #2 in closure #2 in ActionMenuView.ItemView.body.getter@<X0>(uint64_t (**a1)(uint64_t)@<X8>)
{
  return closure #2 in closure #2 in ActionMenuView.ItemView.body.getter(*(void **)(v1 + 16), a1);
}

unint64_t lazy protocol witness table accessor for type Image? and conformance <A> A?()
{
  unint64_t result = lazy protocol witness table cache variable for type Image? and conformance <A> A?;
  if (!lazy protocol witness table cache variable for type Image? and conformance <A> A?)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Image?);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Image? and conformance <A> A?);
  }
  return result;
}

uint64_t partial apply for closure #1 in closure #1 in closure #2 in ActionMenuView.ItemView.body.getter@<X0>(uint64_t a1@<X8>)
{
  return closure #1 in closure #1 in closure #2 in ActionMenuView.ItemView.body.getter(*(void **)(v1 + 16), a1);
}

uint64_t outlined copy of Text.Storage(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_retain();
  }
  else {
    return swift_bridgeObjectRetain();
  }
}

uint64_t outlined consume of Text.Storage(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_release();
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_10004E050()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = (int *)(type metadata accessor for ActionMenuView.ItemView() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v2 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0 + v3, v1);
  type metadata accessor for ActionMenu.Item();
  swift_release();
  swift_release();
  swift_release();
  if (*(void *)(v0 + v3 + v2[11])) {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #1 in ActionMenuView.ItemView.body.getter(uint64_t a1)
{
  uint64_t v4 = v1[4];
  uint64_t v5 = v1[5];
  uint64_t v6 = *(void *)(type metadata accessor for ActionMenuView.ItemView() - 8);
  uint64_t v7 = v1[2];
  uint64_t v8 = v1[3];
  uint64_t v9 = (uint64_t)v1 + ((*(unsigned __int8 *)(v6 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  unint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  void *v10 = v2;
  v10[1] = partial apply for closure #1 in static MusicEngagementExtension.performRequest(with:completion:);
  return closure #1 in closure #1 in ActionMenuView.ItemView.body.getter(a1, v7, v8, v9, v4, v5);
}

uint64_t sub_10004E2A4()
{
  return lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type Button<Label<LabelGroup<TupleView<(Text, Text)>>, Image?>> and conformance Button<A>, &demangling cache variable for type metadata for Button<Label<LabelGroup<TupleView<(Text, Text)>>, Image?>>);
}

uint64_t _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lF(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v28 = a5;
  uint64_t v29 = a8;
  uint64_t v10 = v9;
  uint64_t v37 = a1;
  uint64_t v38 = a2;
  uint64_t v27 = *(void *)(a5 - 8);
  __chkstk_darwin();
  uint64_t v39 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v35 = *(void (***)(char *, uint64_t))(AssociatedTypeWitness - 8);
  __chkstk_darwin();
  int v14 = (char *)&v25 - v13;
  __chkstk_darwin();
  uint64_t v32 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = swift_getAssociatedTypeWitness();
  uint64_t v30 = *(void *)(v16 - 8);
  uint64_t v31 = v16;
  __chkstk_darwin();
  uint64_t v18 = (char *)&v25 - v17;
  uint64_t v33 = v8;
  uint64_t v19 = dispatch thunk of Collection.count.getter();
  if (!v19) {
    return static Array._allocateUninitialized(_:)();
  }
  Swift::Int v20 = v19;
  uint64_t v26 = v14;
  uint64_t v42 = ContiguousArray.init()();
  uint64_t v34 = type metadata accessor for ContiguousArray();
  ContiguousArray.reserveCapacity(_:)(v20);
  uint64_t v40 = v18;
  uint64_t result = dispatch thunk of Collection.startIndex.getter();
  if (v20 < 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v22 = (void (**)(char *))(v35 + 2);
    ++v35;
    long long v36 = v22;
    uint64_t v23 = v26;
    while (1)
    {
      unint64_t v24 = (void (*)(char *, void))dispatch thunk of Collection.subscript.read();
      (*v36)(v23);
      v24(v41, 0);
      v37(v23, v39);
      if (v10) {
        break;
      }
      uint64_t v10 = 0;
      (*v35)(v23, AssociatedTypeWitness);
      ContiguousArray.append(_:)();
      dispatch thunk of Collection.formIndex(after:)();
      if (!--v20)
      {
        (*(void (**)(char *, uint64_t))(v30 + 8))(v40, v31);
        return v42;
      }
    }
    (*v35)(v23, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v40, v31);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v27 + 32))(v29, v39, v28);
  }
  return result;
}

UIMenu_optional __swiftcall ActionMenu.uiMenu(excluding:)(Swift::OpaquePointer excluding)
{
  uint64_t v3 = v2;
  uint64_t v4 = v1;
  uint64_t v6 = ActionMenu.elements(excluding:)();
  uint64_t v8 = v7;
  UIMenuElementSize v36 = v6;
  uint64_t v9 = *(void *)(v4 + 24);
  uint64_t v33 = *(void *)(v4 + 16);
  uint64_t v34 = v9;
  rawValue = excluding._rawValue;
  type metadata accessor for ActionMenu.Element();
  uint64_t v10 = type metadata accessor for Array();
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIMenuElement?);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v14 = _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lF((void (*)(char *, char *))partial apply for closure #1 in ActionMenu.uiMenu(excluding:), (uint64_t)v32, v10, v11, (uint64_t)&type metadata for Never, WitnessTable, (uint64_t)&protocol witness table for Never, v13);
  swift_bridgeObjectRelease();
  UIMenuElementSize preferredElementSize = (UIMenuElementSize)_swiftEmptyArrayStorage;
  UIMenuElementSize v36 = (UIMenuElementSize)_swiftEmptyArrayStorage;
  uint64_t v16 = *(void *)(v14 + 16);
  if (v16)
  {
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v16; ++i)
    {
      uint64_t v18 = *(void **)(v14 + 8 * i + 32);
      if (v18)
      {
        id v19 = v18;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
    }
    swift_bridgeObjectRelease();
    UIMenuElementSize preferredElementSize = v36;
  }
  uint64_t v20 = swift_bridgeObjectRelease();
  v8(v20);
  if ((unint64_t)preferredElementSize >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v29 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v29) {
      goto LABEL_11;
    }
LABEL_13:
    swift_release();
    swift_bridgeObjectRelease();
    v27.super.super.Class isa = 0;
    goto LABEL_14;
  }
  if (!*(void *)((preferredElementSize & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_13;
  }
LABEL_11:
  type metadata accessor for UIMenu(0, &lazy cache variable for type metadata for UIMenu);
  uint64_t v21 = *(void *)(v3 + 32);
  unint64_t v22 = *(void **)(v3 + 40);
  uint64_t v23 = *(void **)(v3 + 48);
  BOOL v24 = (*(unsigned char *)(v3 + 56) & 1) == 0;
  id v25 = v23;
  swift_bridgeObjectRetain();
  v26._uint64_t countAndFlagsBits = v21;
  v26._object = v22;
  v38.value.super.Class isa = (Class)v23;
  v38.is_nil = 0;
  v27.super.super.Class isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v26, (Swift::String_optional)0, v38, (UIMenuIdentifier_optional)v24, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, v31).super.super.isa;
  swift_release();
LABEL_14:
  Class isa = v27.super.super.isa;
  result.value.super.super.Class isa = isa;
  result.is_nil = v28;
  return result;
}

id partial apply for closure #1 in ActionMenu.uiMenu(excluding:)@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *(void **)(v1 + 32);
  uint64_t v4 = type metadata accessor for ActionMenu.Element();
  v5._rawValue = v3;
  id result = ActionMenu.Element.menuElement(excluding:)(v5, v4);
  *a1 = result;
  return result;
}

id ActionMenu.Element.menuElement(excluding:)(Swift::OpaquePointer a1, uint64_t a2)
{
  void (*v30)(Swift::String *__return_ptr, uint64_t);
  uint64_t v31;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t (*v41)(uint64_t);
  uint64_t (*v42)(uint64_t);
  uint64_t v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  Swift::String v55;
  void *v56;
  uint64_t v57;
  Swift::String v58;
  Swift::String v59;
  NSString v60;
  void v62[7];
  void (*v63)(char *, Swift::String *, uint64_t);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  unint64_t v68;
  unint64_t v69;
  Swift::String v70;
  Swift::String v71;
  Swift::String v72;
  Swift::String v73;
  Swift::String v74;

  uint64_t v3 = v2;
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v8 = type metadata accessor for ActionMenu.Item();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin();
  long long v67 = (char *)v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v12 = (char *)v62 - v11;
  __chkstk_darwin();
  uint64_t v14 = (Swift::String *)((char *)v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(Swift::String *, uint64_t, uint64_t))(v15 + 16))(v14, v3, a2);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    Swift::String v16 = v14[3];
    long long v72 = v14[2];
    long long v73 = v16;
    long long v74 = v14[4];
    Swift::String v17 = v14[1];
    uint64_t v70 = *v14;
    long long v71 = v17;
    type metadata accessor for ActionMenu();
    uint64_t v18 = (void *)ActionMenu.uiMenu(excluding:)(a1);
    id v19 = v18;
    if (v18)
    {
      char v68 = 0;
      uint64_t v69 = 0xE000000000000000;
      id v20 = v18;
      _StringGuts.grow(_:)(20);
      swift_bridgeObjectRelease();
      char v68 = 0xD000000000000012;
      uint64_t v69 = 0x8000000100468310;
      Swift::String v21 = v70;
      swift_bridgeObjectRetain();
      String.append(_:)(v21);
      swift_bridgeObjectRelease();
      uint64_t v23 = v68;
      unint64_t v22 = (void *)v69;
      if (one-time initialization token for prefix != -1) {
        swift_once();
      }
      char v68 = static AccessibilityIdentifier.prefix;
      uint64_t v69 = unk_100579A70;
      swift_bridgeObjectRetain();
      v24._uint64_t countAndFlagsBits = 46;
      v24._object = (void *)0xE100000000000000;
      String.append(_:)(v24);
      swift_bridgeObjectRetain();
      v25._uint64_t countAndFlagsBits = v23;
      v25._object = v22;
      String.append(_:)(v25);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      NSString v26 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v20 setAccessibilityIdentifier:v26];
      outlined release of ActionMenu<A>((uint64_t)&v70);
    }
    else
    {
      outlined release of ActionMenu<A>((uint64_t)&v70);
    }
  }
  else
  {
    long long v64 = v6;
    uint64_t v65 = v7;
    char v66 = v9;
    long long v63 = *(void (**)(char *, Swift::String *, uint64_t))(v9 + 32);
    v63(v12, v14, v8);
    uint64_t v27 = v8;
    uint64_t v28 = *(int *)(v8 + 36);
    uint64_t v29 = v12;
    uint64_t v30 = *(void (**)(Swift::String *__return_ptr, uint64_t))&v12[v28];
    Swift::OpaquePointer v31 = swift_retain();
    v30(&v70, v31);
    swift_release();
    object = v71._object;
    uint64_t countAndFlagsBits = v72._countAndFlagsBits;
    __swift_project_boxed_opaque_existential_0Tm(&v70, (uint64_t)v71._object);
    uint64_t v34 = (*(uint64_t (**)(void *, uint64_t))(countAndFlagsBits + 8))(object, countAndFlagsBits);
    v62[5] = v35;
    v62[6] = v34;
    UIMenuElementSize v36 = v71._object;
    uint64_t v37 = v72._countAndFlagsBits;
    __swift_project_boxed_opaque_existential_0Tm(&v70, (uint64_t)v71._object);
    v62[4] = (*(uint64_t (**)(void *, uint64_t))(v37 + 16))(v36, v37);
    v62[3] = v38;
    uint64_t v39 = v71._object;
    uint64_t v40 = v72._countAndFlagsBits;
    __swift_project_boxed_opaque_existential_0Tm(&v70, (uint64_t)v71._object);
    if ((*(uint64_t (**)(void *, uint64_t))(v40 + 24))(v39, v40))
    {
      uint64_t v42 = v41;
      id v43 = swift_release();
      v62[0] = v42(v43);
      swift_release();
    }
    else
    {
      v62[0] = 0;
    }
    long long v44 = v71._object;
    uint64_t v45 = v72._countAndFlagsBits;
    __swift_project_boxed_opaque_existential_0Tm(&v70, (uint64_t)v71._object);
    v62[2] = 2 * ((*(uint64_t (**)(void *, uint64_t))(v45 + 32))(v44, v45) & 1);
    v62[1] = type metadata accessor for UIMenu(0, (unint64_t *)&lazy cache variable for type metadata for UIAction);
    uint64_t v47 = v71._object;
    uint64_t v46 = v72._countAndFlagsBits;
    __swift_project_boxed_opaque_existential_0Tm(&v70, (uint64_t)v71._object);
    (*(void (**)(void *, uint64_t))(v46 + 40))(v47, v46);
    uint64_t v49 = v66;
    uint64_t v48 = v67;
    uint64_t v50 = v66 + 16;
    (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v67, v29, v27);
    uint64_t v51 = (*(unsigned __int8 *)(v50 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 64);
    long long v52 = swift_allocObject();
    long long v53 = v64;
    *(void *)(v52 + 16) = v65;
    *(void *)(v52 + 24) = v53;
    v63((char *)(v52 + v51), (Swift::String *)v48, v27);
    long long v54 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    char v68 = 0;
    uint64_t v69 = 0xE000000000000000;
    id v19 = v54;
    _StringGuts.grow(_:)(20);
    v55._object = (void *)0x8000000100468310;
    v55._uint64_t countAndFlagsBits = 0xD000000000000012;
    String.append(_:)(v55);
    DefaultStringInterpolation.appendInterpolation<A>(_:)();
    uint64_t v57 = v68;
    uint64_t v56 = (void *)v69;
    if (one-time initialization token for prefix != -1) {
      swift_once();
    }
    char v68 = static AccessibilityIdentifier.prefix;
    uint64_t v69 = unk_100579A70;
    swift_bridgeObjectRetain();
    v58._uint64_t countAndFlagsBits = 46;
    v58._object = (void *)0xE100000000000000;
    String.append(_:)(v58);
    swift_bridgeObjectRetain();
    v59._uint64_t countAndFlagsBits = v57;
    v59._object = v56;
    String.append(_:)(v59);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v60 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v19 setAccessibilityIdentifier:v60];

    (*(void (**)(char *, uint64_t))(v49 + 8))(v29, v27);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v70);
  }
  return v19;
}

uint64_t closure #1 in ActionMenu.Element.menuElement(excluding:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for ActionMenu.Item();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin();
  uint64_t v10 = (char *)&v18 - v9;
  __swift_instantiateConcreteTypeFromMangledName(&_sScPSgMD_0);
  __chkstk_darwin();
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a2, v7);
  type metadata accessor for MainActor();
  uint64_t v14 = static MainActor.shared.getter();
  unint64_t v15 = (*(unsigned __int8 *)(v8 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  Swift::String v16 = (char *)swift_allocObject();
  *((void *)v16 + 2) = v14;
  *((void *)v16 + 3) = &protocol witness table for MainActor;
  *((void *)v16 + 4) = a3;
  *((void *)v16 + 5) = a4;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v16[v15], v10, v7);
  _sScTss5Error_pRs_rlE8priority9operationScTyxsAA_pGScPSg_xyYaKYAcntcfCyt_Tgm5((uint64_t)v12, (uint64_t)&async function pointer to partial apply for closure #1 in closure #1 in ActionMenu.Element.menuElement(excluding:), (uint64_t)v16);
  return swift_release();
}

uint64_t closure #1 in closure #1 in ActionMenu.Element.menuElement(excluding:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  type metadata accessor for MainActor();
  v6[5] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  v6[6] = v8;
  v6[7] = v7;
  return _swift_task_switch(closure #1 in closure #1 in ActionMenu.Element.menuElement(excluding:), v8, v7);
}

uint64_t closure #1 in closure #1 in ActionMenu.Element.menuElement(excluding:)()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = (void *)(v1 + *(int *)(type metadata accessor for ActionMenu.Item() + 44));
  Swift::OpaquePointer v5 = (uint64_t (*)(void))(*v2 + *(int *)*v2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v3;
  *uint64_t v3 = v0;
  v3[1] = closure #1 in closure #1 in ActionMenu.Element.menuElement(excluding:);
  return v5();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();
  uint64_t v7;

  uint64_t v2 = *v1;
  *(void *)(*v1 + 72) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 56);
  uint64_t v4 = *(void *)(v2 + 48);
  if (v0) {
    Swift::OpaquePointer v5 = closure #1 in closure #1 in ActionMenuView.ItemView.body.getter;
  }
  else {
    Swift::OpaquePointer v5 = closure #1 in closure #1 in ActionMenu.Element.menuElement(excluding:);
  }
  return _swift_task_switch(v5, v4, v3);
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t type metadata accessor for UIMenu(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_10004F5D0()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(type metadata accessor for ActionMenu.Item() - 8) + 80);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0 + ((v2 + 32) & ~v2), v1);
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in ActionMenu.Element.menuElement(excluding:)(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v5 = *(void *)(type metadata accessor for ActionMenu.Item() - 8);
  uint64_t v6 = v1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return closure #1 in ActionMenu.Element.menuElement(excluding:)(a1, v6, v3, v4);
}

uint64_t sub_10004F770()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(type metadata accessor for ActionMenu.Item() - 8) + 80);
  uint64_t v3 = (v2 + 48) & ~v2;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0 + v3, v1);
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #1 in ActionMenu.Element.menuElement(excluding:)(uint64_t a1)
{
  uint64_t v4 = v1[4];
  uint64_t v5 = v1[5];
  uint64_t v6 = *(void *)(type metadata accessor for ActionMenu.Item() - 8);
  uint64_t v7 = v1[2];
  uint64_t v8 = v1[3];
  uint64_t v9 = (uint64_t)v1 + ((*(unsigned __int8 *)(v6 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  void *v10 = v2;
  v10[1] = partial apply for closure #1 in static MusicEngagementExtension.performRequest(with:completion:);
  return closure #1 in closure #1 in ActionMenu.Element.menuElement(excluding:)(a1, v7, v8, v9, v4, v5);
}

uint64_t (*ActionMenuItemImage.init(systemName:)(uint64_t a1, uint64_t a2))()
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  swift_bridgeObjectRetain();
  return _s9MusicCore19ActionMenuItemImageV10systemNameACSS_tcfc7SwiftUI0F0VSgyYbcfU_TA_0;
}

uint64_t (*ActionMenuItemImage.init(uiImage:)(uint64_t a1, uint64_t a2))()
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  swift_retain();
  return _s9MusicCore19ActionMenuItemImageV02uiF0ACSo7UIImageCSgyYbXA_tcfc7SwiftUI0F0VSgyYbcfU_TA_0;
}

uint64_t static ActionMenu.Item.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ActionMenu.Item();
  uint64_t v5 = (*(void *(**)(void *__return_ptr))(a1 + *(int *)(v4 + 36)))(v36);
  (*(void (**)(void *__return_ptr, void *))(a2 + *(int *)(v4 + 36)))(v33, v5);
  uint64_t v6 = v37;
  uint64_t v7 = v38;
  __swift_project_boxed_opaque_existential_0Tm(v36, v37);
  uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v6, v7);
  uint64_t v10 = v9;
  uint64_t v11 = v34;
  uint64_t v12 = v35;
  __swift_project_boxed_opaque_existential_0Tm(v33, v34);
  if (v8 == (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v11, v12) && v10 == v13)
  {
    swift_bridgeObjectRelease_n();
    outlined init with copy of AlertPresenting((uint64_t)v36, (uint64_t)v30);
    outlined init with copy of AlertPresenting((uint64_t)v33, (uint64_t)v27);
  }
  else
  {
    char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    outlined init with copy of AlertPresenting((uint64_t)v36, (uint64_t)v30);
    outlined init with copy of AlertPresenting((uint64_t)v33, (uint64_t)v27);
    char v16 = 0;
    if ((v15 & 1) == 0) {
      goto LABEL_18;
    }
  }
  uint64_t v17 = v31;
  uint64_t v18 = v32;
  __swift_project_boxed_opaque_existential_0Tm(v30, v31);
  uint64_t v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 16))(v17, v18);
  uint64_t v21 = v20;
  uint64_t v22 = v28;
  uint64_t v23 = v29;
  __swift_project_boxed_opaque_existential_0Tm(v27, v28);
  uint64_t v24 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 16))(v22, v23);
  if (v21)
  {
    if (v25)
    {
      if (v19 == v24 && v21 == v25)
      {
        swift_bridgeObjectRelease();
        char v16 = 1;
      }
      else
      {
        char v16 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      char v16 = 0;
    }
  }
  else
  {
    if (!v25)
    {
      char v16 = 1;
      goto LABEL_18;
    }
    char v16 = 0;
  }
  swift_bridgeObjectRelease();
LABEL_18:
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v30);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v27);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v33);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v36);
  return v16 & 1;
}

uint64_t static ActionMenu.== infix(_:_:)(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return _stringCompareWithSmolCheck(_:_:expecting:)();
  }
}

int *ActionMenu.Item.init(id:menuItemConfiguring:supportedStatus:execute:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a8 - 8) + 32))(a9, a1, a8);
  uint64_t result = (int *)type metadata accessor for ActionMenu.Item();
  uint64_t v17 = (void *)(a9 + result[9]);
  void *v17 = a2;
  v17[1] = a3;
  uint64_t v18 = (void *)(a9 + result[10]);
  *uint64_t v18 = a4;
  v18[1] = a5;
  uint64_t v19 = (void *)(a9 + result[11]);
  void *v19 = a6;
  v19[1] = a7;
  return result;
}

uint64_t ActionMenu.elements(excluding:)()
{
  uint64_t v1 = v0;
  v2._uint64_t countAndFlagsBits = 8254;
  v2._object = (void *)0xE200000000000000;
  String.append(_:)(v2);
  DefaultStringInterpolation.appendInterpolation<A>(_:)();
  uint64_t v3 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, 1, 1, (char *)_swiftEmptyArrayStorage);
  unint64_t v5 = *((void *)v3 + 2);
  unint64_t v4 = *((void *)v3 + 3);
  if (v5 >= v4 >> 1) {
    uint64_t v3 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((char *)(v4 > 1), v5 + 1, 1, v3);
  }
  uint64_t v6 = swift_allocObject();
  *((void *)v3 + 2) = v5 + 1;
  uint64_t v7 = &v3[16 * v5];
  *((void *)v7 + 4) = 0;
  *((void *)v7 + 5) = 0xE000000000000000;
  *(void *)(v6 + 16) = v3;
  uint64_t v8 = (*(uint64_t (**)(void))(v1 + 64))();
  __chkstk_darwin(v8);
  type metadata accessor for ActionMenu.Element();
  type metadata accessor for Array();
  swift_getWitnessTable();
  uint64_t v9 = _ArrayProtocol.filter(_:)();
  swift_getWitnessTable();
  uint64_t result = Collection.isEmpty.getter();
  if ((result & 1) == 0) {
    return v9;
  }
  if (*(void *)(*(void *)(v6 + 16) + 16))
  {
    specialized Array.replaceSubrange<A>(_:with:)(1uLL, 1, 0xD00000000000001CLL, 0x8000000100468330);
    return v9;
  }
  __break(1u);
  return result;
}

BOOL static LaunchURL.Resolver.PerformOption.__derived_enum_equals(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

void LaunchURL.Resolver.PerformOption.hash(into:)(uint64_t a1, char a2)
{
}

Swift::Int LaunchURL.Resolver.PerformOption.hashValue.getter(char a1)
{
  return Hasher._finalize()();
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance ActionMenu<A>.Style(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return static LaunchURL.Resolver.PerformOption.__derived_enum_equals(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance ActionMenu<A>.Style()
{
  return LaunchURL.Resolver.PerformOption.hashValue.getter(*v0);
}

void protocol witness for Hashable.hash(into:) in conformance ActionMenu<A>.Style(uint64_t a1)
{
  LaunchURL.Resolver.PerformOption.hash(into:)(a1, *v1);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance ActionMenu<A>.Style()
{
  Hasher.init(_seed:)();
  LaunchURL.Resolver.PerformOption.hash(into:)((uint64_t)v2, *v0);
  return Hasher._finalize()();
}

uint64_t ActionMenu.init(_:image:style:id:debugDescription:builder:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, void *a6@<X5>, uint64_t a7@<X6>, void *a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  strcpy((char *)v26, "ActionMenu: ");
  BYTE5(v26[1]) = 0;
  HIWORD(v26[1]) = -5120;
  if (a8)
  {
    uint64_t v17 = a8;
    id v19 = a3;
  }
  else
  {
    id v20 = a3;
    swift_bridgeObjectRetain();
    a7 = a5;
    uint64_t v17 = a6;
  }
  v21._uint64_t countAndFlagsBits = a7;
  v21._object = v17;
  String.append(_:)(v21);

  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v23 = v26[0];
  uint64_t v24 = v26[1];
  *(void *)a9 = a5;
  *(void *)(a9 + 8) = a6;
  *(void *)(a9 + 16) = v23;
  *(void *)(a9 + 24) = v24;
  *(void *)(a9 + 32) = a1;
  *(void *)(a9 + 40) = a2;
  *(void *)(a9 + 48) = a3;
  *(unsigned char *)(a9 + 56) = a4 & 1;
  *(void *)(a9 + 64) = a10;
  *(void *)(a9 + 72) = a11;
  return result;
}

uint64_t Actions.GoToArtist.Context.menuItemSubtitle.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Alert.message.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t closure #1 in ActionMenu.elements(excluding:)(uint64_t a1, char **a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v51 = a2;
  uint64_t v9 = type metadata accessor for ActionMenu.Item();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v50 - v11;
  uint64_t v13 = type metadata accessor for ActionMenu.Element();
  __chkstk_darwin(v13);
  char v15 = (char *)&v50 - v14;
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))((char *)&v50 - v14, a1, v13);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v17 = (void *)*((void *)v15 + 6);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return 1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v15, v9);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(a5 + 24))(a4, a5))
  {
    if (one-time initialization token for isInternalInstall != -1) {
      swift_once();
    }
    if (static DeviceCapabilities.isInternalInstall != 1) {
      goto LABEL_30;
    }
    uint64_t v52 = 0;
    unint64_t v53 = 0xE000000000000000;
    _StringGuts.grow(_:)(29);
    v19._uint64_t countAndFlagsBits = 544743456;
    v19._object = (void *)0xE400000000000000;
    String.append(_:)(v19);
    DefaultStringInterpolation.appendInterpolation<A>(_:)();
    unint64_t v20 = 0x8000000100468370;
    unint64_t v21 = 0xD000000000000017;
  }
  else
  {
    uint64_t v52 = a3;
    type metadata accessor for Array();
    swift_getWitnessTable();
    if ((Sequence<>.contains(_:)() & 1) == 0)
    {
      uint64_t v23 = *(uint64_t (**)(uint64_t))&v12[*(int *)(v9 + 40)];
      uint64_t v24 = swift_retain();
      uint64_t v25 = v23(v24);
      unint64_t v27 = v26;
      swift_release();
      if (v27 == 1)
      {
        uint64_t v52 = 0;
        unint64_t v53 = 0xE000000000000000;
        v28._uint64_t countAndFlagsBits = 0x20939CE22020;
        v28._object = (void *)0xA600000000000000;
        String.append(_:)(v28);
        DefaultStringInterpolation.appendInterpolation<A>(_:)();
        uint64_t v29 = v52;
        unint64_t v30 = v53;
        uint64_t v31 = v51;
        uint64_t v32 = *v51;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *uint64_t v31 = v32;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          uint64_t v32 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *((void *)v32 + 2) + 1, 1, v32);
          *uint64_t v51 = v32;
        }
        unint64_t v35 = *((void *)v32 + 2);
        unint64_t v34 = *((void *)v32 + 3);
        if (v35 >= v34 >> 1)
        {
          uint64_t v32 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((char *)(v34 > 1), v35 + 1, 1, v32);
          *uint64_t v51 = v32;
        }
        *((void *)v32 + 2) = v35 + 1;
        UIMenuElementSize v36 = &v32[16 * v35];
        *((void *)v36 + 4) = v29;
        *((void *)v36 + 5) = v30;
        (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
        return 1;
      }
      uint64_t v52 = 0;
      unint64_t v53 = 0xE000000000000000;
      v37._uint64_t countAndFlagsBits = 544743456;
      v37._object = (void *)0xE400000000000000;
      String.append(_:)(v37);
      DefaultStringInterpolation.appendInterpolation<A>(_:)();
      v38._uint64_t countAndFlagsBits = 2108704;
      v38._object = (void *)0xE300000000000000;
      String.append(_:)(v38);
      if (v27) {
        uint64_t v39 = v25;
      }
      else {
        uint64_t v39 = 0x6E776F6E6B6E75;
      }
      if (v27) {
        unint64_t v40 = v27;
      }
      else {
        unint64_t v40 = 0xE700000000000000;
      }
      unint64_t v41 = v40;
      String.append(_:)(*(Swift::String *)&v39);
      swift_bridgeObjectRelease();
      goto LABEL_25;
    }
    uint64_t v52 = 0;
    unint64_t v53 = 0xE000000000000000;
    _StringGuts.grow(_:)(17);
    v22._uint64_t countAndFlagsBits = 544743456;
    v22._object = (void *)0xE400000000000000;
    String.append(_:)(v22);
    DefaultStringInterpolation.appendInterpolation<A>(_:)();
    unint64_t v21 = 0x756C637865202D20;
    unint64_t v20 = 0xEB00000000646564;
  }
  String.append(_:)(*(Swift::String *)&v21);
LABEL_25:
  uint64_t v42 = v52;
  unint64_t v43 = v53;
  long long v44 = v51;
  uint64_t v45 = *v51;
  char v46 = swift_isUniquelyReferenced_nonNull_native();
  *long long v44 = v45;
  if ((v46 & 1) == 0)
  {
    uint64_t v45 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *((void *)v45 + 2) + 1, 1, v45);
    *uint64_t v51 = v45;
  }
  unint64_t v48 = *((void *)v45 + 2);
  unint64_t v47 = *((void *)v45 + 3);
  if (v48 >= v47 >> 1)
  {
    uint64_t v45 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((char *)(v47 > 1), v48 + 1, 1, v45);
    *uint64_t v51 = v45;
  }
  *((void *)v45 + 2) = v48 + 1;
  uint64_t v49 = &v45[16 * v48];
  *((void *)v49 + 4) = v42;
  *((void *)v49 + 5) = v43;
LABEL_30:
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return 0;
}

uint64_t closure #2 in ActionMenu.elements(excluding:)(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  unint64_t v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = swift_beginAccess();
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(v7 + 16);
  if (v8)
  {
    uint64_t v9 = one-time initialization token for actionMenu;
    swift_bridgeObjectRetain();
    if (v9 != -1) {
      swift_once();
    }
    uint64_t v23 = (void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = (void (**)(char *, uint64_t))(v3 + 8);
    v19[0] = v7;
    uint64_t v12 = (unint64_t *)(v7 + 40);
    *(void *)&long long v10 = 136446210;
    long long v20 = v10;
    v19[1] = (char *)&type metadata for Any + 8;
    unint64_t v21 = v11;
    uint64_t v22 = v2;
    do
    {
      uint64_t v14 = *(v12 - 1);
      unint64_t v13 = *v12;
      uint64_t v15 = __swift_project_value_buffer(v2, (uint64_t)static Logger.actionMenu);
      (*v23)(v5, v15, v2);
      swift_bridgeObjectRetain_n();
      uint64_t v16 = Logger.logObject.getter();
      os_log_type_t v17 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v16, v17))
      {
        uint64_t v18 = swift_slowAlloc();
        uint64_t v24 = swift_slowAlloc();
        *(_DWORD *)uint64_t v18 = v20;
        swift_bridgeObjectRetain();
        *(void *)(v18 + 4) = _s2os32getNullTerminatedUTF8PointerImpl_21storingStringOwnersInSVSS_SpyypGSgztF_0(v14, v13, &v24);
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v16, v17, "%{public}s", (uint8_t *)v18, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        uint64_t v11 = v21;
        uint64_t v2 = v22;
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      (*v11)(v5, v2);
      v12 += 2;
      --v8;
    }
    while (v8);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t protocol witness for Identifiable.id.getter in conformance ActionMenu<A>@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t ActionMenu.Item.menuItemConfiguring.getter(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 36));
  swift_retain();
  return v2;
}

uint64_t ActionMenu.Item.execute.getter(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 44));
  swift_retain();
  return v2;
}

Swift::Void __swiftcall ActionMenu.insertElementsAtFront(_:)(Swift::OpaquePointer a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = *(_OWORD *)(v3 + 16);
  *(Swift::OpaquePointer *)(v5 + 32) = a1;
  *(_OWORD *)(v5 + 40) = *(_OWORD *)(v2 + 64);
  *(void *)(v2 + 64) = partial apply for closure #1 in ActionMenu.insertElementsAtFront(_:);
  *(void *)(v2 + 72) = v5;

  swift_bridgeObjectRetain();
}

uint64_t closure #1 in ActionMenu.insertElementsAtFront(_:)(uint64_t a1, void (*a2)(void))
{
  a2();
  type metadata accessor for ActionMenu.Element();
  uint64_t v2 = static Array.+ infix(_:_:)();
  swift_bridgeObjectRelease();
  return v2;
}

Swift::Void __swiftcall ActionMenu.insertElementsAtEnd(_:)(Swift::OpaquePointer a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = swift_allocObject();
  long long v6 = *(_OWORD *)(v2 + 64);
  *(_OWORD *)(v5 + 16) = *(_OWORD *)(v3 + 16);
  *(_OWORD *)(v5 + 32) = v6;
  *(Swift::OpaquePointer *)(v5 + 48) = a1;
  *(void *)(v2 + 64) = partial apply for closure #1 in ActionMenu.insertElementsAtEnd(_:);
  *(void *)(v2 + 72) = v5;

  swift_bridgeObjectRetain();
}

uint64_t closure #1 in ActionMenu.insertElementsAtEnd(_:)(void (*a1)(void))
{
  a1();
  type metadata accessor for ActionMenu.Element();
  uint64_t v1 = static Array.+ infix(_:_:)();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t closure #1 in ActionMenuItemImage.init(systemName:)()
{
  swift_bridgeObjectRetain();

  return Image.init(systemName:)();
}

uint64_t sub_100050D24()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t _s9MusicCore19ActionMenuItemImageV10systemNameACSS_tcfc7SwiftUI0F0VSgyYbcfU_TA_0()
{
  swift_bridgeObjectRetain();

  return Image.init(systemName:)();
}

id closure #2 in ActionMenuItemImage.init(systemName:)(uint64_t a1, uint64_t a2)
{
  return closure #2 in ActionMenuItemImage.init(systemName:)(a1, a2, (SEL *)&selRef_systemImageNamed_);
}

id _s9MusicCore19ActionMenuItemImageV10systemNameACSS_tcfcSo7UIImageCSgyYbcfU0_TA_0()
{
  return closure #2 in ActionMenuItemImage.init(systemName:)(*(void *)(v0 + 16), *(void *)(v0 + 24), (SEL *)&selRef_systemImageNamed_);
}

uint64_t specialized closure #1 in ActionMenuItemImage.init(uiImage:)()
{
  return specialized closure #1 in ActionMenuItemImage.init(uiImage:)(0x696D2E636973756DLL, 0xE900000000000063, (SEL *)&selRef__systemImageNamed_);
}

{
  return specialized closure #1 in ActionMenuItemImage.init(uiImage:)(0xD000000000000016, 0x8000000100468350, (SEL *)&selRef_imageNamed_);
}

{
  return specialized closure #1 in ActionMenuItemImage.init(uiImage:)(0x6F6E2E636973756DLL, 0xEF7473696C2E6574, (SEL *)&selRef__systemImageNamed_);
}

{
  return specialized closure #1 in ActionMenuItemImage.init(uiImage:)(0x75622E65746F7571, 0xEC000000656C6262, (SEL *)&selRef__systemImageNamed_);
}

{
  return specialized closure #1 in ActionMenuItemImage.init(uiImage:)(0x71732E636973756DLL, 0xEC00000065726175, (SEL *)&selRef__systemImageNamed_);
}

uint64_t specialized closure #1 in ActionMenuItemImage.init(uiImage:)(uint64_t a1, uint64_t a2, SEL *a3)
{
  NSString v4 = String._bridgeToObjectiveC()();
  id v5 = objc_msgSend(self, *a3, v4);

  if (v5) {
    return Image.init(uiImage:)();
  }
  else {
    return 0;
  }
}

uint64_t closure #1 in ActionMenuItemImage.init(uiImage:)(uint64_t (*a1)(void))
{
  uint64_t result = a1();
  if (result) {
    return Image.init(uiImage:)();
  }
  return result;
}

uint64_t sub_100050F24()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t _s9MusicCore19ActionMenuItemImageV02uiF0ACSo7UIImageCSgyYbXA_tcfc7SwiftUI0F0VSgyYbcfU_TA_0()
{
  uint64_t result = (*(uint64_t (**)(void))(v0 + 16))();
  if (result) {
    return Image.init(uiImage:)();
  }
  return result;
}

uint64_t closure #1 in ActionMenuItemImage.init(internalSystemName:)()
{
  swift_bridgeObjectRetain();

  return Image.init(_internalSystemName:)();
}

id closure #2 in ActionMenuItemImage.init(internalSystemName:)(uint64_t a1, uint64_t a2)
{
  return closure #2 in ActionMenuItemImage.init(systemName:)(a1, a2, (SEL *)&selRef__systemImageNamed_);
}

id closure #2 in ActionMenuItemImage.init(systemName:)(uint64_t a1, uint64_t a2, SEL *a3)
{
  swift_bridgeObjectRetain();
  NSString v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v5 = objc_msgSend(self, *a3, v4);

  return v5;
}

uint64_t type metadata accessor for ActionMenu.Item()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance ActionMenu<A>.Item(uint64_t a1, uint64_t a2)
{
  return static ActionMenu.Item.== infix(_:_:)(a1, a2);
}

uint64_t one-time initialization function for actionMenu()
{
  uint64_t v0 = type metadata accessor for Logger();
  __swift_allocate_value_buffer(v0, static Logger.actionMenu);
  __swift_project_value_buffer(v0, (uint64_t)static Logger.actionMenu);
  return Logger.init(subsystem:category:)();
}

size_t specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(size_t result, int64_t a2, char a3, void *a4)
{
  char v5 = result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_30:
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    unint64_t v13 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<URL?>);
  uint64_t v10 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?)
                  - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v13 = (void *)swift_allocObject();
  uint64_t result = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (result - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_29;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(result - v12) / v11);
LABEL_19:
  uint64_t v15 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?)
                  - 8);
  if (v5)
  {
    if (v13 < a4
      || (unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80),
          (char *)v13 + v16 >= (char *)a4 + v16 + *(void *)(v15 + 72) * v8))
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return (size_t)v13;
}

{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  void *v13;
  uint64_t v15;
  unint64_t v16;

  char v5 = result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_30:
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    unint64_t v13 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(IndexPath, IndexPath)>);
  uint64_t v10 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (IndexPath, IndexPath))
                  - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v13 = (void *)swift_allocObject();
  uint64_t result = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (result - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_29;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(result - v12) / v11);
LABEL_19:
  uint64_t v15 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (IndexPath, IndexPath))
                  - 8);
  if (v5)
  {
    if (v13 < a4
      || (unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80),
          (char *)v13 + v16 >= (char *)a4 + v16 + *(void *)(v15 + 72) * v8))
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return (size_t)v13;
}

char *specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(char *a1, int64_t a2, char a3, char *a4)
{
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1, a2, a3, a4, &demangling cache variable for type metadata for _ContiguousArrayStorage<TabIdentifier>);
}

{
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1, a2, a3, a4, &demangling cache variable for type metadata for _ContiguousArrayStorage<Library.Menu.Identifier>);
}

{
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1, a2, a3, a4, &demangling cache variable for type metadata for _ContiguousArrayStorage<SortOptions.SortType>);
}

char *specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ApplicationCapabilities.Tabs.Configuration>);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    int64_t v12 = v11 - 32;
    if (v11 < 32) {
      int64_t v12 = v11 - 31;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = v12 & 0xFFFFFFFFFFFFFFFELL;
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[2 * v8]) {
      memmove(v13, v14, 2 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 2 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Alert.Action>);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 56);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  int64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[56 * v8]) {
      memmove(v12, v13, 56 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    int64_t v12 = v11 - 32;
    if (v11 < 32) {
      int64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Substring>);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    int64_t v12 = v11 - 32;
    if (v11 < 32) {
      int64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Float>);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    int64_t v12 = v11 - 32;
    if (v11 < 32) {
      int64_t v12 = v11 - 29;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 2);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[4 * v8]) {
      memmove(v13, v14, 4 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 4 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<PlaylistCovers.Cover.Representation>);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 56);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  int64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[56 * v8]) {
      memmove(v12, v13, 56 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(hue: CGFloat, saturation: CGFloat, brightness: CGFloat, alpha: CGFloat)>);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    int64_t v12 = v11 - 32;
    if (v11 < 32) {
      int64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 32 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Text>);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    int64_t v12 = v11 - 32;
    if (v11 < 32) {
      int64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CGPoint>);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    int64_t v12 = v11 - 32;
    if (v11 < 32) {
      int64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Range<Int>>);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    int64_t v12 = v11 - 32;
    if (v11 < 32) {
      int64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Int>);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    int64_t v12 = v11 - 32;
    if (v11 < 32) {
      int64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 8 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(Int, Int)>);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    int64_t v12 = v11 - 32;
    if (v11 < 32) {
      int64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Lyrics.Word>);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  int64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[40 * v8]) {
      memmove(v12, v13, 40 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Lyrics.TextLine>);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 104);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  int64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[104 * v8]) {
      memmove(v12, v13, 104 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<PlaylistCovers.CarouselItem>);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 120);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  int64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[120 * v8]) {
      memmove(v12, v13, 120 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Transition #1 in SymbolButton.setConfiguration(_:animation:updates:)>);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 88);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  int64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[88 * v8]) {
      memmove(v12, v13, 88 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<AnimationGroup.Animator>);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    int64_t v12 = v11 - 32;
    if (v11 < 32) {
      int64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&_ss23_ContiguousArrayStorageCyypGMD_1);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    int64_t v12 = v11 - 32;
    if (v11 < 32) {
      int64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

size_t specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(size_t a1, int64_t a2, char a3, void *a4)
{
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1, a2, a3, a4, &demangling cache variable for type metadata for _ContiguousArrayStorage<URLQueryItem>, (uint64_t (*)(void))&type metadata accessor for URLQueryItem);
}

{
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1, a2, a3, a4, &demangling cache variable for type metadata for _ContiguousArrayStorage<MusicLibrary.AddStatus.UnaddableReason>, (uint64_t (*)(void))&type metadata accessor for MusicLibrary.AddStatus.UnaddableReason);
}

{
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1, a2, a3, a4, &demangling cache variable for type metadata for _ContiguousArrayStorage<SharePlayTogetherSession.Participant>, type metadata accessor for SharePlayTogetherSession.Participant);
}

{
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1, a2, a3, a4, &demangling cache variable for type metadata for _ContiguousArrayStorage<IndexPath>, (uint64_t (*)(void))&type metadata accessor for IndexPath);
}

{
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1, a2, a3, a4, &demangling cache variable for type metadata for _ContiguousArrayStorage<NSUserDefaults._Observer.HandlerAssociation>, type metadata accessor for NSUserDefaults._Observer.HandlerAssociation);
}

{
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1, a2, a3, a4, &demangling cache variable for type metadata for _ContiguousArrayStorage<Razzmatazz>, type metadata accessor for Razzmatazz);
}

{
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1, a2, a3, a4, &demangling cache variable for type metadata for _ContiguousArrayStorage<Playlist.Collaborator>, (uint64_t (*)(void))&type metadata accessor for Playlist.Collaborator);
}

uint64_t sub_100051640()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in ActionMenu.elements(excluding:)(uint64_t a1)
{
  return closure #1 in ActionMenu.elements(excluding:)(a1, *(char ***)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 16), *(void *)(v1 + 24)) & 1;
}

uint64_t partial apply for closure #2 in ActionMenu.elements(excluding:)()
{
  return closure #2 in ActionMenu.elements(excluding:)(v0);
}

void *specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ActionMenu<ActionType>.Element>);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 88);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  if (v5)
  {
    if (v10 != a4 || v10 + 4 >= &a4[11 * v8 + 4]) {
      memmove(v10 + 4, a4 + 4, 88 * v8);
    }
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ActionMenu<ActionType>.Element);
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  int64_t v11;
  uint64_t v12;

  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ICURLBagKey>);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    int64_t v12 = v11 - 32;
    if (v11 < 32) {
      int64_t v12 = v11 - 25;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  if (v5)
  {
    if (v10 != a4 || v10 + 4 >= &a4[v8 + 4]) {
      memmove(v10 + 4, a4 + 4, 8 * v8);
    }
    a4[2] = 0;
  }
  else
  {
    type metadata accessor for ICURLBagKey(0);
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  int64_t v11;
  uint64_t v12;

  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<[String]>);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    int64_t v12 = v11 - 32;
    if (v11 < 32) {
      int64_t v12 = v11 - 25;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  if (v5)
  {
    if (v10 != a4 || v10 + 4 >= &a4[v8 + 4]) {
      memmove(v10 + 4, a4 + 4, 8 * v8);
    }
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  int64_t v11;
  uint64_t v12;

  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ActionLookup<ActionType>.Group>);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    int64_t v12 = v11 - 32;
    if (v11 < 32) {
      int64_t v12 = v11 - 25;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  if (v5)
  {
    if (v10 != a4 || v10 + 4 >= &a4[v8 + 4]) {
      memmove(v10 + 4, a4 + 4, 8 * v8);
    }
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ActionLookup<ActionType>.Group);
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  int64_t v11;
  uint64_t v12;

  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Error>);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    int64_t v12 = v11 - 32;
    if (v11 < 32) {
      int64_t v12 = v11 - 25;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  if (v5)
  {
    if (v10 != a4 || v10 + 4 >= &a4[v8 + 4]) {
      memmove(v10 + 4, a4 + 4, 8 * v8);
    }
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  int64_t v11;
  uint64_t v12;

  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CloudLibrary.StatusObserver.InternalObserver>);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    int64_t v12 = v11 - 32;
    if (v11 < 32) {
      int64_t v12 = v11 - 17;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  if (v5)
  {
    if (v10 < a4 || v10 + 4 >= &a4[2 * v8 + 4])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v10 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  int64_t v11;
  uint64_t v12;

  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<RequestResponseInvalidatable>);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    int64_t v12 = v11 - 32;
    if (v11 < 32) {
      int64_t v12 = v11 - 17;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  if (v5)
  {
    if (v10 != a4 || v10 + 4 >= &a4[2 * v8 + 4]) {
      memmove(v10 + 4, a4 + 4, 16 * v8);
    }
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for RequestResponseInvalidatable);
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  size_t v11;

  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(line: CTLineRef, frame: CGRect)>);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  if (v5)
  {
    if (v10 != a4 || v10 + 4 >= &a4[5 * v8 + 4]) {
      memmove(v10 + 4, a4 + 4, 40 * v8);
    }
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (line: CTLineRef, frame: CGRect));
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  size_t v11;

  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(text: String, syllables: [(lyricsWord: MSVLyricsWord, text: String, range: _NSRange)], range: _NSRange)>);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  if (v5)
  {
    if (v10 != a4 || v10 + 4 >= &a4[5 * v8 + 4]) {
      memmove(v10 + 4, a4 + 4, 40 * v8);
    }
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (text: String, syllables: [(lyricsWord: MSVLyricsWord, text: String, range: _NSRange)], range: _NSRange));
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  size_t v11;

  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(lyricsWord: MSVLyricsWord, text: String, range: _NSRange)>);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  if (v5)
  {
    if (v10 != a4 || v10 + 4 >= &a4[5 * v8 + 4]) {
      memmove(v10 + 4, a4 + 4, 40 * v8);
    }
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (lyricsWord: MSVLyricsWord, text: String, range: _NSRange));
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  size_t v11;

  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<LyricsLine>);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  if (v5)
  {
    if (v10 != a4 || v10 + 4 >= &a4[5 * v8 + 4]) {
      memmove(v10 + 4, a4 + 4, 40 * v8);
    }
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for LyricsLine);
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  int64_t v11;
  uint64_t v12;

  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(Lyrics.Word, CTRunRef, [CGPoint], [Int])>);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    int64_t v12 = v11 - 32;
    if (v11 < 32) {
      int64_t v12 = v11 + 31;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 6);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  if (v5)
  {
    if (v10 != a4 || v10 + 4 >= &a4[8 * v8 + 4]) {
      memmove(v10 + 4, a4 + 4, v8 << 6);
    }
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Lyrics.Word, CTRunRef, [CGPoint], [Int]));
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  int64_t v11;
  uint64_t v12;

  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<[Razzmatazz]?>);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    int64_t v12 = v11 - 32;
    if (v11 < 32) {
      int64_t v12 = v11 - 25;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  if (v5)
  {
    if (v10 != a4 || v10 + 4 >= &a4[v8 + 4]) {
      memmove(v10 + 4, a4 + 4, 8 * v8);
    }
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [Razzmatazz]?);
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  int64_t v11;
  uint64_t v12;

  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(UIView, UIView?)>);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    int64_t v12 = v11 - 32;
    if (v11 < 32) {
      int64_t v12 = v11 - 17;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  if (v5)
  {
    if (v10 != a4 || v10 + 4 >= &a4[2 * v8 + 4]) {
      memmove(v10 + 4, a4 + 4, 16 * v8);
    }
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (UIView, UIView?));
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

void *specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(void *a1, int64_t a2, char a3, void *a4)
{
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1, a2, a3, a4, &demangling cache variable for type metadata for _ContiguousArrayStorage<()>);
}

{
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1, a2, a3, a4, (uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<PlayerCommand>, &demangling cache variable for type metadata for PlayerCommand);
}

{
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1, a2, a3, a4, &demangling cache variable for type metadata for _ContiguousArrayStorage<(_:)>);
}

{
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1, a2, a3, a4, &demangling cache variable for type metadata for _ContiguousArrayStorage<BindingTrigger>, &demangling cache variable for type metadata for BindingTrigger);
}

{
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1, a2, a3, a4, &demangling cache variable for type metadata for _ContiguousArrayStorage<LaunchURLHandler>, &demangling cache variable for type metadata for LaunchURLHandler);
}

{
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1, a2, a3, a4, &demangling cache variable for type metadata for _ContiguousArrayStorage<[Razzmatazz]>, &demangling cache variable for type metadata for [Razzmatazz]);
}

void *specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(void *result, int64_t a2, char a3, void *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if (a3)
  {
    unint64_t v7 = a4[3];
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v8 = a2;
      }
    }
  }
  else
  {
    int64_t v8 = a2;
  }
  uint64_t v9 = a4[2];
  if (v8 <= v9) {
    uint64_t v10 = a4[2];
  }
  else {
    uint64_t v10 = v8;
  }
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    size_t v11 = (void *)swift_allocObject();
    int64_t v12 = _swift_stdlib_malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 17;
    }
    v11[2] = v9;
    void v11[3] = 2 * (v13 >> 4);
  }
  else
  {
    size_t v11 = _swiftEmptyArrayStorage;
  }
  if (v6)
  {
    if (v11 != a4 || v11 + 4 >= &a4[2 * v9 + 4]) {
      memmove(v11 + 4, a4 + 4, 16 * v9);
    }
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ());
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v11;
}

char *specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(char *result, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if (a3)
  {
    unint64_t v7 = *((void *)a4 + 3);
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v8 = a2;
      }
    }
  }
  else
  {
    int64_t v8 = a2;
  }
  int64_t v9 = *((void *)a4 + 2);
  if (v8 <= v9) {
    int64_t v10 = *((void *)a4 + 2);
  }
  else {
    int64_t v10 = v8;
  }
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    size_t v11 = (char *)swift_allocObject();
    size_t v12 = _swift_stdlib_malloc_size(v11);
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * v12 - 64;
  }
  else
  {
    size_t v11 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v11 + 32;
  uint64_t v14 = a4 + 32;
  if (v6)
  {
    if (v11 != a4 || v13 >= &v14[v9]) {
      memmove(v13, v14, v9);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, v9);
  }
  swift_bridgeObjectRelease();
  return v11;
}

size_t specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(size_t result, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t (*a6)(void))
{
  char v8 = result;
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_30:
        __break(1u);
        return result;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    unint64_t v16 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v13 = *(void *)(a6(0) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v16 = (void *)swift_allocObject();
  uint64_t result = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (result - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_29;
  }
  v16[2] = v11;
  _OWORD v16[3] = 2 * ((uint64_t)(result - v15) / v14);
LABEL_19:
  uint64_t v18 = *(void *)(a6(0) - 8);
  if (v8)
  {
    if (v16 < a4
      || (unint64_t v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80),
          (char *)v16 + v19 >= (char *)a4 + v19 + *(void *)(v18 + 72) * v11))
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return (size_t)v16;
}

{
  char v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  void *v16;
  uint64_t v18;
  unint64_t v19;

  char v8 = result;
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_30:
        __break(1u);
        return result;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    unint64_t v16 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v13 = *(void *)(a6(0) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v16 = (void *)swift_allocObject();
  uint64_t result = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (result - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_29;
  }
  v16[2] = v11;
  _OWORD v16[3] = 2 * ((uint64_t)(result - v15) / v14);
LABEL_19:
  uint64_t v18 = *(void *)(a6(0) - 8);
  if (v8)
  {
    if (v16 < a4
      || (unint64_t v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80),
          (char *)v16 + v19 >= (char *)a4 + v19 + *(void *)(v18 + 72) * v11))
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return (size_t)v16;
}

{
  char v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  void *v16;
  uint64_t v18;
  unint64_t v19;

  char v8 = result;
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_30:
        __break(1u);
        return result;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    unint64_t v16 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v13 = *(void *)(a6(0) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v16 = (void *)swift_allocObject();
  uint64_t result = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (result - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_29;
  }
  v16[2] = v11;
  _OWORD v16[3] = 2 * ((uint64_t)(result - v15) / v14);
LABEL_19:
  uint64_t v18 = *(void *)(a6(0) - 8);
  if (v8)
  {
    if (v16 < a4
      || (unint64_t v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80),
          (char *)v16 + v19 >= (char *)a4 + v19 + *(void *)(v18 + 72) * v11))
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return (size_t)v16;
}

void *specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(void *result, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  char v8 = (char)result;
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (v12)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    uint64_t v13 = (void *)swift_allocObject();
    size_t v14 = _swift_stdlib_malloc_size(v13);
    v13[2] = v11;
    v13[3] = 2 * ((uint64_t)(v14 - 32) / 40);
  }
  else
  {
    uint64_t v13 = _swiftEmptyArrayStorage;
  }
  if (v8)
  {
    if (v13 != a4 || v13 + 4 >= &a4[5 * v11 + 4]) {
      memmove(v13 + 4, a4 + 4, 40 * v11);
    }
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(a6);
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v13;
}

{
  char v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  int64_t v14;
  uint64_t v15;

  char v8 = (char)result;
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (v12)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    uint64_t v13 = (void *)swift_allocObject();
    size_t v14 = _swift_stdlib_malloc_size(v13);
    unint64_t v15 = v14 - 32;
    if (v14 < 32) {
      unint64_t v15 = v14 - 25;
    }
    v13[2] = v11;
    v13[3] = 2 * (v15 >> 3);
  }
  else
  {
    uint64_t v13 = _swiftEmptyArrayStorage;
  }
  if (v8)
  {
    if (v13 != a4 || v13 + 4 >= &a4[v11 + 4]) {
      memmove(v13 + 4, a4 + 4, 8 * v11);
    }
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(a6);
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v13;
}

unint64_t specialized Array.replaceSubrange<A>(_:with:)(unint64_t result, int64_t a2, uint64_t a3, uint64_t a4)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  char v6 = *v4;
  int64_t v7 = *((void *)*v4 + 2);
  if (v7 < a2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  unint64_t v8 = result;
  unint64_t v9 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v10 = 1 - v9;
  if (__OFSUB__(1, v9))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  int64_t v11 = v7 + v10;
  if (__OFADD__(v7, v10))
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  char isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v11 > *((void *)v6 + 3) >> 1)
  {
    if (v7 <= v11) {
      int64_t v15 = v7 + v10;
    }
    else {
      int64_t v15 = v7;
    }
    char v6 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(isUniquelyReferenced_nonNull_native, v15, 1, v6);
  }
  unint64_t v16 = &v6[16 * v8 + 32];
  uint64_t result = swift_arrayDestroy();
  if (!v10) {
    goto LABEL_19;
  }
  uint64_t v17 = *((void *)v6 + 2);
  BOOL v18 = __OFSUB__(v17, a2);
  uint64_t v19 = v17 - a2;
  if (v18) {
    goto LABEL_25;
  }
  uint64_t result = (unint64_t)(v16 + 16);
  long long v20 = &v6[16 * a2 + 32];
  if (v16 + 16 != v20 || result >= (unint64_t)&v20[16 * v19]) {
    uint64_t result = (unint64_t)memmove((void *)result, v20, 16 * v19);
  }
  uint64_t v21 = *((void *)v6 + 2);
  BOOL v18 = __OFADD__(v21, v10);
  uint64_t v22 = v21 + v10;
  if (!v18)
  {
    *((void *)v6 + 2) = v22;
LABEL_19:
    *(void *)unint64_t v16 = a3;
    *((void *)v16 + 1) = a4;
    *NSString v4 = v6;
    return result;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_100052BB0()
{
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in ActionMenu.insertElementsAtFront(_:)()
{
  return partial apply for closure #1 in ActionMenu.insertElementsAtFront(_:)((uint64_t (*)(void, void, void, void, void))closure #1 in ActionMenu.insertElementsAtFront(_:));
}

uint64_t sub_100052C08()
{
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in ActionMenu.insertElementsAtEnd(_:)()
{
  return partial apply for closure #1 in ActionMenu.insertElementsAtFront(_:)((uint64_t (*)(void, void, void, void, void))closure #1 in ActionMenu.insertElementsAtEnd(_:));
}

uint64_t partial apply for closure #1 in ActionMenu.insertElementsAtFront(_:)(uint64_t (*a1)(void, void, void, void, void))
{
  return a1(v1[4], v1[5], v1[6], v1[2], v1[3]);
}

uint64_t base witness table accessor for Equatable in ActionMenu<A>.Style()
{
  return swift_getWitnessTable();
}

uint64_t associated type witness table accessor for Identifiable.ID : Hashable in ActionMenu<A>.Item(uint64_t a1, uint64_t a2)
{
  return *(void *)(*(void *)(a2 + 24) + 16);
}

unint64_t lazy protocol witness table accessor for type ActionMenuItemStyle and conformance ActionMenuItemStyle()
{
  unint64_t result = lazy protocol witness table cache variable for type ActionMenuItemStyle and conformance ActionMenuItemStyle;
  if (!lazy protocol witness table cache variable for type ActionMenuItemStyle and conformance ActionMenuItemStyle)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ActionMenuItemStyle and conformance ActionMenuItemStyle);
  }
  return result;
}

uint64_t type metadata instantiation function for ActionMenu(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 40);
}

uint64_t destroy for ActionMenu(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t initializeWithCopy for ActionMenu(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  char v6 = *(void **)(a2 + 48);
  *(void *)(a1 + 48) = v6;
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v7 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v8 = v6;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ActionMenu(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(a1 + 48);
  uint64_t v5 = *(void **)(a2 + 48);
  *(void *)(a1 + 48) = v5;
  id v6 = v5;

  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v7 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v7;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy80_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t assignWithTake for ActionMenu(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  id v6 = *(void **)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);

  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ActionMenu(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 80)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ActionMenu(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 80) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for ActionMenu()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for ActionMenu.Style()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata completion function for ActionMenu.Item()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for ActionMenu.Item(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0
    || ((((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    uint64_t v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    unint64_t v10 = (void *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    int64_t v11 = (void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v12 = v11[1];
    void *v10 = *v11;
    v10[1] = v12;
    uint64_t v13 = (void *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8);
    size_t v14 = (void *)(((unint64_t)v11 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v15 = v14[1];
    *uint64_t v13 = *v14;
    v13[1] = v15;
    unint64_t v16 = (void *)(((unint64_t)v13 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v17 = (void *)(((unint64_t)v14 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v18 = v17[1];
    *unint64_t v16 = *v17;
    v16[1] = v18;
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t destroy for ActionMenu.Item(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for ActionMenu.Item(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  id v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v9 = v8[1];
  *int v7 = *v8;
  v7[1] = v9;
  unint64_t v10 = (void *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  int64_t v11 = (void *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v12 = v11[1];
  void *v10 = *v11;
  v10[1] = v12;
  uint64_t v13 = (void *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8);
  size_t v14 = (void *)(((unint64_t)v11 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v15 = v14[1];
  *uint64_t v13 = *v14;
  v13[1] = v15;
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ActionMenu.Item(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  id v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v9 = v8[1];
  *int v7 = *v8;
  v7[1] = v9;
  swift_retain();
  swift_release();
  unint64_t v10 = (void *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  int64_t v11 = (void *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v12 = v11[1];
  void *v10 = *v11;
  v10[1] = v12;
  swift_retain();
  swift_release();
  uint64_t v13 = (void *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8);
  size_t v14 = (void *)(((unint64_t)v11 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v15 = v14[1];
  *uint64_t v13 = *v14;
  v13[1] = v15;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t initializeWithTake for ActionMenu.Item(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32) + 7;
  int v7 = (_OWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  id v8 = (_OWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  uint64_t v9 = (_OWORD *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v10 = (_OWORD *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v9 = *v10;
  *(_OWORD *)(((unint64_t)v9 + 23) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t assignWithTake for ActionMenu.Item(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  int v7 = (_OWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = v6 + a2;
  unint64_t v9 = (v8 & 0xFFFFFFFFFFFFFFF8) + 23;
  *int v7 = *(_OWORD *)(v8 & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  unint64_t v10 = (_OWORD *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  v9 &= 0xFFFFFFFFFFFFFFF8;
  _OWORD *v10 = *(_OWORD *)v9;
  swift_release();
  *(_OWORD *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v9 + 23) & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ActionMenu.Item(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1000536D4);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  unint64_t v17 = *(void *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void storeEnumTagSinglePayload for ActionMenu.Item(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  unint64_t v10 = ((((((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v8 >= a3)
  {
    int v14 = 0;
    int v15 = a2 - v8;
    if (a2 <= v8)
    {
LABEL_17:
      switch(v14)
      {
        case 1:
          a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 2:
          *(_WORD *)&a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 3:
          goto LABEL_43;
        case 4:
          *(_DWORD *)&a1[v10] = 0;
          goto LABEL_29;
        default:
LABEL_29:
          if (a2)
          {
LABEL_30:
            if (v7 < 0x7FFFFFFF)
            {
              uint64_t v19 = (void *)((unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8);
              if ((a2 & 0x80000000) != 0)
              {
                uint64_t v20 = a2 ^ 0x80000000;
                v19[1] = 0;
              }
              else
              {
                uint64_t v20 = a2 - 1;
              }
              void *v19 = v20;
            }
            else
            {
              uint64_t v18 = *(void (**)(void))(v6 + 56);
              v18();
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v11 = a3 - v8;
    if (((((((v9 + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      unsigned int v12 = v11 + 1;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v12 >= 0x10000) {
      int v13 = 4;
    }
    else {
      int v13 = 2;
    }
    if (v12 < 0x100) {
      int v13 = 1;
    }
    if (v12 >= 2) {
      int v14 = v13;
    }
    else {
      int v14 = 0;
    }
    int v15 = a2 - v8;
    if (a2 <= v8) {
      goto LABEL_17;
    }
  }
  if (((((((v9 + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) == 0xFFFFFFF0) {
    int v16 = v15;
  }
  else {
    int v16 = 1;
  }
  if (((((((v9 + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    int v17 = ~v8 + a2;
    bzero(a1, ((((((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16);
    *(_DWORD *)a1 = v17;
  }
  switch(v14)
  {
    case 1:
      a1[v10] = v16;
      break;
    case 2:
      *(_WORD *)&a1[v10] = v16;
      break;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x1000538E4);
    case 4:
      *(_DWORD *)&a1[v10] = v16;
      break;
    default:
      return;
  }
}

ValueMetadata *type metadata accessor for ActionMenuItemImage()
{
  return &type metadata for ActionMenuItemImage;
}

unsigned char *storeEnumTagSinglePayload for ActionMenu.Style(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000539E8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ActionMenuItemStyle()
{
  return &type metadata for ActionMenuItemStyle;
}

char *specialized Array.replaceSubrange<A>(_:with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v3 = a3;
    uint64_t v5 = a2;
    uint64_t v6 = a1;
    if (!(*v4 >> 62))
    {
      if (*(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10) >= a2) {
        goto LABEL_4;
      }
LABEL_28:
      __break(1u);
      goto LABEL_29;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v21 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v21 < v5) {
    goto LABEL_28;
  }
LABEL_4:
  uint64_t v8 = v5 - v6;
  if (__OFSUB__(v5, v6))
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  uint64_t v7 = 1 - v8;
  if (__OFSUB__(1, v8))
  {
LABEL_30:
    __break(1u);
LABEL_31:
    swift_bridgeObjectRetain();
    uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    uint64_t v10 = v22 + v7;
    if (!__OFADD__(v22, v7)) {
      goto LABEL_8;
    }
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  if (*v4 >> 62) {
    goto LABEL_31;
  }
  uint64_t v9 = *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v10 = v9 + v7;
  if (__OFADD__(v9, v7)) {
    goto LABEL_33;
  }
LABEL_8:
  unint64_t v11 = *v4;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *unsigned int v4 = v11;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v11 & 0x8000000000000000) != 0
    || (v11 & 0x4000000000000000) != 0
    || (uint64_t v13 = v11 & 0xFFFFFFFFFFFFFF8, v10 > *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1))
  {
    if (!(v11 >> 62))
    {
LABEL_13:
      swift_bridgeObjectRetain();
      unint64_t v11 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      swift_bridgeObjectRelease();
      *unsigned int v4 = v11;
      uint64_t v13 = v11 & 0xFFFFFFFFFFFFFF8;
      goto LABEL_14;
    }
LABEL_34:
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
LABEL_14:
  int v14 = (void *)(v13 + 32 + 8 * v6);
  type metadata accessor for UITab();
  swift_arrayDestroy();
  if (v7)
  {
    if (v11 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v23 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      uint64_t v16 = v23 - v5;
      if (!__OFSUB__(v23, v5)) {
        goto LABEL_17;
      }
    }
    else
    {
      uint64_t v15 = *(void *)(v13 + 16);
      uint64_t v16 = v15 - v5;
      if (!__OFSUB__(v15, v5))
      {
LABEL_17:
        uint64_t result = (char *)(v14 + 1);
        uint64_t v18 = (char *)(v13 + 32 + 8 * v5);
        if (v14 + 1 != (void *)v18 || result >= &v18[8 * v16]) {
          uint64_t result = (char *)memmove(result, v18, 8 * v16);
        }
        if (!(v11 >> 62))
        {
          uint64_t v19 = *(void *)(v13 + 16);
          uint64_t v20 = v19 + v7;
          if (!__OFADD__(v19, v7))
          {
LABEL_22:
            *(void *)(v13 + 16) = v20;
            goto LABEL_23;
          }
LABEL_40:
          __break(1u);
          return result;
        }
LABEL_38:
        swift_bridgeObjectRetain();
        uint64_t v24 = _CocoaArrayWrapper.endIndex.getter();
        uint64_t result = (char *)swift_bridgeObjectRelease();
        uint64_t v20 = v24 + v7;
        if (!__OFADD__(v24, v7)) {
          goto LABEL_22;
        }
        goto LABEL_40;
      }
    }
    __break(1u);
    goto LABEL_38;
  }
LABEL_23:
  *int v14 = v3;

  return (char *)specialized Array._endMutation()();
}

unint64_t specialized Array.replaceSubrange<A>(_:with:)(unint64_t result, int64_t a2, char a3)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  unint64_t v5 = *v3;
  int64_t v6 = *(void *)(*v3 + 16);
  if (v6 < a2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  unint64_t v7 = result;
  unint64_t v8 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = 1 - v8;
  if (__OFSUB__(1, v8))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  int64_t v10 = v6 + v9;
  if (__OFADD__(v6, v9))
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (!result || v10 > *(void *)(v5 + 24) >> 1)
  {
    if (v6 <= v10) {
      int64_t v12 = v6 + v9;
    }
    else {
      int64_t v12 = v6;
    }
    uint64_t result = (unint64_t)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((char *)result, v12, 1, (char *)v5, &demangling cache variable for type metadata for _ContiguousArrayStorage<Library.Menu.Identifier>);
    unint64_t v5 = result;
  }
  unint64_t v13 = v5 + 32;
  int v14 = (unsigned char *)(v5 + 32 + v7);
  if (!v9) {
    goto LABEL_19;
  }
  uint64_t v15 = *(void *)(v5 + 16);
  size_t v16 = v15 - a2;
  if (__OFSUB__(v15, a2)) {
    goto LABEL_25;
  }
  uint64_t result = (unint64_t)(v14 + 1);
  int v17 = (const void *)(v13 + a2);
  if (v14 + 1 != (unsigned char *)(v13 + a2) || result >= (unint64_t)v17 + v16) {
    uint64_t result = (unint64_t)memmove((void *)result, v17, v16);
  }
  uint64_t v18 = *(void *)(v5 + 16);
  BOOL v19 = __OFADD__(v18, v9);
  uint64_t v20 = v18 + v9;
  if (!v19)
  {
    *(void *)(v5 + 16) = v20;
LABEL_19:
    *int v14 = a3;
    *uint64_t v3 = v5;
    return result;
  }
LABEL_26:
  __break(1u);
  return result;
}

unint64_t specialized Array.replaceSubrange<A>(_:with:)(unint64_t result, int64_t a2)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  unint64_t v4 = *v2;
  int64_t v5 = *(void *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v6 = result;
  unint64_t v7 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  unint64_t v8 = result - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (result && v9 <= *(void *)(v4 + 24) >> 1)
  {
    if (!v8) {
      goto LABEL_20;
    }
  }
  else
  {
    if (v5 <= v9) {
      int64_t v10 = v5 + v8;
    }
    else {
      int64_t v10 = v5;
    }
    uint64_t result = (unint64_t)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((char *)result, v10, 1, (char *)v4, &demangling cache variable for type metadata for _ContiguousArrayStorage<Library.Menu.Identifier>);
    unint64_t v4 = result;
    if (!v8) {
      goto LABEL_20;
    }
  }
  uint64_t v11 = *(void *)(v4 + 16);
  size_t v12 = v11 - a2;
  if (__OFSUB__(v11, a2)) {
    goto LABEL_26;
  }
  uint64_t result = v4 + 32 + v6;
  unint64_t v13 = (const void *)(v4 + 32 + a2);
  if (v6 != a2 || result >= (unint64_t)v13 + v12) {
    uint64_t result = (unint64_t)memmove((void *)result, v13, v12);
  }
  uint64_t v14 = *(void *)(v4 + 16);
  BOOL v15 = __OFADD__(v14, v8);
  uint64_t v16 = v14 + v8;
  if (!v15)
  {
    *(void *)(v4 + 16) = v16;
LABEL_20:
    *unint64_t v2 = v4;
    return result;
  }
LABEL_27:
  __break(1u);
  return result;
}

{
  unint64_t *v2;
  unint64_t v4;
  int64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  int64_t v9;
  int64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;

  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  unint64_t v4 = *v2;
  int64_t v5 = *(void *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v6 = result;
  unint64_t v7 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  unint64_t v8 = result - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (result && v9 <= *(void *)(v4 + 24) >> 1)
  {
    if (!v8) {
      goto LABEL_20;
    }
  }
  else
  {
    if (v5 <= v9) {
      int64_t v10 = v5 + v8;
    }
    else {
      int64_t v10 = v5;
    }
    uint64_t result = (unint64_t)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((char *)result, v10, 1, (char *)v4);
    unint64_t v4 = result;
    if (!v8) {
      goto LABEL_20;
    }
  }
  uint64_t v11 = *(void *)(v4 + 16);
  size_t v12 = __OFSUB__(v11, a2);
  unint64_t v13 = v11 - a2;
  if (v12) {
    goto LABEL_26;
  }
  uint64_t result = v4 + 32 + 16 * v6;
  uint64_t v14 = (const void *)(v4 + 32 + 16 * a2);
  if (v6 != a2 || result >= (unint64_t)v14 + 16 * v13) {
    uint64_t result = (unint64_t)memmove((void *)result, v14, 16 * v13);
  }
  BOOL v15 = *(void *)(v4 + 16);
  size_t v12 = __OFADD__(v15, v8);
  uint64_t v16 = v15 + v8;
  if (!v12)
  {
    *(void *)(v4 + 16) = v16;
LABEL_20:
    *unint64_t v2 = v4;
    return result;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t specialized Array.replaceSubrange<A>(_:with:)(uint64_t result, int64_t a2)
{
  if (result < 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  unint64_t v4 = *(void **)v2;
  int64_t v5 = *(void *)(*(void *)v2 + 16);
  if (v5 < a2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v6 = result;
  int64_t v7 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v8 = result - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > v4[3] >> 1)
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    unint64_t v4 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  type metadata accessor for ICURLBagKey(0);
  uint64_t result = swift_arrayDestroy();
  if (!v7) {
    goto LABEL_19;
  }
  uint64_t v12 = v4[2];
  BOOL v13 = __OFSUB__(v12, a2);
  uint64_t v14 = v12 - a2;
  if (v13) {
    goto LABEL_25;
  }
  BOOL v15 = (char *)&v4[a2 + 4];
  if (v6 != a2 || &v4[v6 + 4] >= (void *)&v15[8 * v14]) {
    uint64_t result = (uint64_t)memmove(&v4[v6 + 4], v15, 8 * v14);
  }
  uint64_t v16 = v4[2];
  BOOL v13 = __OFADD__(v16, v8);
  uint64_t v17 = v16 - v7;
  if (!v13)
  {
    v4[2] = v17;
LABEL_19:
    *(void *)uint64_t v2 = v4;
    return result;
  }
LABEL_26:
  __break(1u);
  return result;
}

{
  uint64_t v2;
  void *v4;
  int64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  int64_t v9;
  void *isUniquelyReferenced_nonNull_native;
  int64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;

  if (result < 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  unint64_t v4 = *(void **)v2;
  int64_t v5 = *(void *)(*(void *)v2 + 16);
  if (v5 < a2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v6 = result;
  int64_t v7 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v8 = result - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > v4[3] >> 1)
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    unint64_t v4 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(isUniquelyReferenced_nonNull_native, v11, 1, v4, &demangling cache variable for type metadata for _ContiguousArrayStorage<(_:_:)>);
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ());
  uint64_t result = swift_arrayDestroy();
  if (!v7) {
    goto LABEL_19;
  }
  uint64_t v12 = v4[2];
  BOOL v13 = __OFSUB__(v12, a2);
  uint64_t v14 = v12 - a2;
  if (v13) {
    goto LABEL_25;
  }
  BOOL v15 = (char *)&v4[2 * a2 + 4];
  if (v6 != a2 || &v4[2 * v6 + 4] >= (void *)&v15[16 * v14]) {
    uint64_t result = (uint64_t)memmove(&v4[2 * v6 + 4], v15, 16 * v14);
  }
  uint64_t v16 = v4[2];
  BOOL v13 = __OFADD__(v16, v8);
  uint64_t v17 = v16 - v7;
  if (!v13)
  {
    v4[2] = v17;
LABEL_19:
    *(void *)uint64_t v2 = v4;
    return result;
  }
LABEL_26:
  __break(1u);
  return result;
}

{
  char **v2;
  char *v4;
  int64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  int64_t v9;
  char *isUniquelyReferenced_nonNull_native;
  int64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;

  if (result < 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  unint64_t v4 = *v2;
  int64_t v5 = *((void *)*v2 + 2);
  if (v5 < a2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v6 = result;
  int64_t v7 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v8 = result - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  char isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > *((void *)v4 + 3) >> 1)
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    unint64_t v4 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  uint64_t result = swift_arrayDestroy();
  if (!v7) {
    goto LABEL_19;
  }
  uint64_t v12 = *((void *)v4 + 2);
  BOOL v13 = __OFSUB__(v12, a2);
  uint64_t v14 = v12 - a2;
  if (v13) {
    goto LABEL_25;
  }
  BOOL v15 = &v4[16 * a2 + 32];
  if (v6 != a2 || &v4[16 * v6 + 32] >= &v15[16 * v14]) {
    uint64_t result = (uint64_t)memmove(&v4[16 * v6 + 32], v15, 16 * v14);
  }
  uint64_t v16 = *((void *)v4 + 2);
  BOOL v13 = __OFADD__(v16, v8);
  uint64_t v17 = v16 - v7;
  if (!v13)
  {
    *((void *)v4 + 2) = v17;
LABEL_19:
    *uint64_t v2 = v4;
    return result;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t specialized Array.replaceSubrange<A>(_:with:)(uint64_t a1, uint64_t a2)
{
  return specialized Array.replaceSubrange<A>(_:with:)(a1, a2, (void (*)(void))type metadata accessor for BagProvider.Observer);
}

{
  return specialized Array.replaceSubrange<A>(_:with:)(a1, a2, (void (*)(void))type metadata accessor for UITab);
}

{
  return specialized Array.replaceSubrange<A>(_:with:)(a1, a2, (unint64_t *)&lazy cache variable for type metadata for UIViewPropertyAnimator);
}

{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t vars8;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v2 = a2;
    unint64_t v4 = a1;
    if (!((unint64_t)*v3 >> 62))
    {
      if (*(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= a2) {
        goto LABEL_4;
      }
LABEL_28:
      __break(1u);
      goto LABEL_29;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v20 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v20 < v2) {
    goto LABEL_28;
  }
LABEL_4:
  uint64_t v6 = v2 - v4;
  if (__OFSUB__(v2, v4))
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  int64_t v5 = v4 - v2;
  if (__OFSUB__(0, v6))
  {
LABEL_30:
    __break(1u);
LABEL_31:
    swift_bridgeObjectRetain();
    uint64_t v21 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    uint64_t v8 = v21 + v5;
    if (!__OFADD__(v21, v5)) {
      goto LABEL_8;
    }
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  if ((unint64_t)*v3 >> 62) {
    goto LABEL_31;
  }
  int64_t v7 = *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v8 = v7 - v6;
  if (__OFADD__(v7, v5)) {
    goto LABEL_33;
  }
LABEL_8:
  int64_t v9 = *v3;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v3 = v9;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v9 & 0x8000000000000000) != 0
    || (v9 & 0x4000000000000000) != 0
    || (int64_t v11 = v9 & 0xFFFFFFFFFFFFFF8, v8 > *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1))
  {
    if (!(v9 >> 62))
    {
LABEL_13:
      swift_bridgeObjectRetain();
      *uint64_t v3 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      swift_bridgeObjectRelease();
      int64_t v11 = *v3 & 0xFFFFFFFFFFFFFF8;
      goto LABEL_14;
    }
LABEL_34:
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
LABEL_14:
  uint64_t v12 = v11 + 32;
  BOOL v13 = (char *)(v11 + 32 + 8 * v4);
  type metadata accessor for SyncedLyricsLineView();
  uint64_t result = swift_arrayDestroy();
  if (v5)
  {
    if ((unint64_t)*v3 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v16 = v22 - v2;
      if (!__OFSUB__(v22, v2)) {
        goto LABEL_17;
      }
    }
    else
    {
      BOOL v15 = *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t v16 = v15 - v2;
      if (!__OFSUB__(v15, v2))
      {
LABEL_17:
        uint64_t v17 = (char *)(v12 + 8 * v2);
        if (v4 != v2 || v13 >= &v17[8 * v16]) {
          uint64_t result = (uint64_t)memmove(v13, v17, 8 * v16);
        }
        if (!((unint64_t)*v3 >> 62))
        {
          uint64_t v18 = *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
          BOOL v19 = v18 + v5;
          if (!__OFADD__(v18, v5))
          {
LABEL_22:
            *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10) = v19;
            goto LABEL_23;
          }
LABEL_40:
          __break(1u);
          return result;
        }
LABEL_38:
        swift_bridgeObjectRetain();
        uint64_t v23 = _CocoaArrayWrapper.endIndex.getter();
        uint64_t result = swift_bridgeObjectRelease();
        BOOL v19 = v23 + v5;
        if (!__OFADD__(v23, v5)) {
          goto LABEL_22;
        }
        goto LABEL_40;
      }
    }
    __break(1u);
    goto LABEL_38;
  }
LABEL_23:

  return specialized Array._endMutation()();
}

{
  return specialized Array.replaceSubrange<A>(_:with:)(a1, a2, (unint64_t *)&_sSo6UIViewCML_0);
}

uint64_t specialized Array.replaceSubrange<A>(_:with:)(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v6 = a3;
    uint64_t v3 = a2;
    uint64_t v5 = a1;
    if (!(*v4 >> 62))
    {
      if (*(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10) >= a2) {
        goto LABEL_4;
      }
LABEL_28:
      __break(1u);
      goto LABEL_29;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v20 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v20 < v3) {
    goto LABEL_28;
  }
LABEL_4:
  uint64_t v8 = v3 - v5;
  if (__OFSUB__(v3, v5))
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  uint64_t v7 = v5 - v3;
  if (__OFSUB__(0, v8))
  {
LABEL_30:
    __break(1u);
LABEL_31:
    swift_bridgeObjectRetain();
    uint64_t v21 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    uint64_t v10 = v21 + v7;
    if (!__OFADD__(v21, v7)) {
      goto LABEL_8;
    }
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  if (*v4 >> 62) {
    goto LABEL_31;
  }
  uint64_t v9 = *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v10 = v9 - v8;
  if (__OFADD__(v9, v7)) {
    goto LABEL_33;
  }
LABEL_8:
  unint64_t v11 = *v4;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *unint64_t v4 = v11;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v11 & 0x8000000000000000) != 0
    || (v11 & 0x4000000000000000) != 0
    || (uint64_t v13 = v11 & 0xFFFFFFFFFFFFFF8, v10 > *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1))
  {
    if (!(v11 >> 62))
    {
LABEL_13:
      swift_bridgeObjectRetain();
      unint64_t v11 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      swift_bridgeObjectRelease();
      *unint64_t v4 = v11;
      uint64_t v13 = v11 & 0xFFFFFFFFFFFFFF8;
      goto LABEL_14;
    }
LABEL_34:
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
LABEL_14:
  v6(0);
  uint64_t result = swift_arrayDestroy();
  if (v7)
  {
    if (v11 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v16 = v22 - v3;
      if (!__OFSUB__(v22, v3)) {
        goto LABEL_17;
      }
    }
    else
    {
      uint64_t v15 = *(void *)(v13 + 16);
      uint64_t v16 = v15 - v3;
      if (!__OFSUB__(v15, v3))
      {
LABEL_17:
        uint64_t v17 = (const void *)(v13 + 32 + 8 * v3);
        if (v5 != v3 || v13 + 32 + 8 * v5 >= (unint64_t)v17 + 8 * v16) {
          uint64_t result = (uint64_t)memmove((void *)(v13 + 32 + 8 * v5), v17, 8 * v16);
        }
        if (!(v11 >> 62))
        {
          uint64_t v18 = *(void *)(v13 + 16);
          uint64_t v19 = v18 + v7;
          if (!__OFADD__(v18, v7))
          {
LABEL_22:
            *(void *)(v13 + 16) = v19;
            goto LABEL_23;
          }
LABEL_40:
          __break(1u);
          return result;
        }
LABEL_38:
        swift_bridgeObjectRetain();
        uint64_t v23 = _CocoaArrayWrapper.endIndex.getter();
        uint64_t result = swift_bridgeObjectRelease();
        uint64_t v19 = v23 + v7;
        if (!__OFADD__(v23, v7)) {
          goto LABEL_22;
        }
        goto LABEL_40;
      }
    }
    __break(1u);
    goto LABEL_38;
  }
LABEL_23:

  return specialized Array._endMutation()();
}

unint64_t type metadata accessor for UITab()
{
  unint64_t result = lazy cache variable for type metadata for UITab;
  if (!lazy cache variable for type metadata for UITab)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for UITab);
  }
  return result;
}

uint64_t specialized static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ActionMenu<ActionType>.Element>);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_100493400;
  char v3 = *(unsigned char *)(a1 + 48);
  unint64_t v4 = (_OWORD *)swift_allocObject();
  long long v5 = *(_OWORD *)(a1 + 80);
  v4[5] = *(_OWORD *)(a1 + 64);
  v4[6] = v5;
  v4[7] = *(_OWORD *)(a1 + 96);
  long long v6 = *(_OWORD *)(a1 + 16);
  v4[1] = *(_OWORD *)a1;
  v4[2] = v6;
  long long v7 = *(_OWORD *)(a1 + 48);
  v4[3] = *(_OWORD *)(a1 + 32);
  v4[4] = v7;
  uint64_t v8 = (_OWORD *)swift_allocObject();
  long long v9 = *(_OWORD *)(a1 + 80);
  v8[5] = *(_OWORD *)(a1 + 64);
  v8[6] = v9;
  v8[7] = *(_OWORD *)(a1 + 96);
  long long v10 = *(_OWORD *)(a1 + 16);
  v8[1] = *(_OWORD *)a1;
  v8[2] = v10;
  long long v11 = *(_OWORD *)(a1 + 48);
  v8[3] = *(_OWORD *)(a1 + 32);
  v8[4] = v11;
  uint64_t v12 = (_OWORD *)swift_allocObject();
  long long v13 = *(_OWORD *)(a1 + 80);
  v12[5] = *(_OWORD *)(a1 + 64);
  v12[6] = v13;
  v12[7] = *(_OWORD *)(a1 + 96);
  long long v14 = *(_OWORD *)(a1 + 16);
  v12[1] = *(_OWORD *)a1;
  void v12[2] = v14;
  long long v15 = *(_OWORD *)(a1 + 48);
  unint64_t v12[3] = *(_OWORD *)(a1 + 32);
  v12[4] = v15;
  *(unsigned char *)(v2 + 32) = v3;
  *(void *)(v2 + 40) = partial apply for specialized closure #1 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:);
  *(void *)(v2 + 48) = v4;
  *(void *)(v2 + 56) = partial apply for specialized closure #2 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:);
  *(void *)(v2 + 64) = v8;
  *(void *)(v2 + 72) = &async function pointer to partial apply for specialized closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:);
  *(void *)(v2 + 80) = v12;
  *(unsigned char *)(v2 + 112) = 0;
  outlined retain of Action<Actions.UndoSuggestLess.Context, ActionType, ()>(a1);
  outlined retain of Action<Actions.UndoSuggestLess.Context, ActionType, ()>(a1);
  outlined retain of Action<Actions.UndoSuggestLess.Context, ActionType, ()>(a1);
  return v2;
}

{
  uint64_t v2;
  char v3;
  _OWORD *v4;
  long long v5;
  long long v6;
  long long v7;
  _OWORD *v8;
  long long v9;
  long long v10;
  long long v11;
  _OWORD *v12;
  long long v13;
  long long v14;
  long long v15;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ActionMenu<ActionType>.Element>);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_100493400;
  char v3 = *(unsigned char *)(a1 + 48);
  unint64_t v4 = (_OWORD *)swift_allocObject();
  long long v5 = *(_OWORD *)(a1 + 80);
  v4[5] = *(_OWORD *)(a1 + 64);
  v4[6] = v5;
  v4[7] = *(_OWORD *)(a1 + 96);
  long long v6 = *(_OWORD *)(a1 + 16);
  v4[1] = *(_OWORD *)a1;
  v4[2] = v6;
  long long v7 = *(_OWORD *)(a1 + 48);
  v4[3] = *(_OWORD *)(a1 + 32);
  v4[4] = v7;
  uint64_t v8 = (_OWORD *)swift_allocObject();
  long long v9 = *(_OWORD *)(a1 + 80);
  v8[5] = *(_OWORD *)(a1 + 64);
  v8[6] = v9;
  v8[7] = *(_OWORD *)(a1 + 96);
  long long v10 = *(_OWORD *)(a1 + 16);
  v8[1] = *(_OWORD *)a1;
  v8[2] = v10;
  long long v11 = *(_OWORD *)(a1 + 48);
  v8[3] = *(_OWORD *)(a1 + 32);
  v8[4] = v11;
  uint64_t v12 = (_OWORD *)swift_allocObject();
  long long v13 = *(_OWORD *)(a1 + 80);
  v12[5] = *(_OWORD *)(a1 + 64);
  v12[6] = v13;
  v12[7] = *(_OWORD *)(a1 + 96);
  long long v14 = *(_OWORD *)(a1 + 16);
  v12[1] = *(_OWORD *)a1;
  void v12[2] = v14;
  long long v15 = *(_OWORD *)(a1 + 48);
  unint64_t v12[3] = *(_OWORD *)(a1 + 32);
  v12[4] = v15;
  *(unsigned char *)(v2 + 32) = v3;
  *(void *)(v2 + 40) = partial apply for specialized closure #1 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:);
  *(void *)(v2 + 48) = v4;
  *(void *)(v2 + 56) = partial apply for specialized closure #2 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:);
  *(void *)(v2 + 64) = v8;
  *(void *)(v2 + 72) = &async function pointer to partial apply for specialized closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:);
  *(void *)(v2 + 80) = v12;
  *(unsigned char *)(v2 + 112) = 0;
  outlined retain of Action<Actions.UndoSuggestLess.Context, ActionType, ()>(a1);
  outlined retain of Action<Actions.UndoSuggestLess.Context, ActionType, ()>(a1);
  outlined retain of Action<Actions.UndoSuggestLess.Context, ActionType, ()>(a1);
  return v2;
}

{
  uint64_t v2;
  char v3;
  _OWORD *v4;
  long long v5;
  long long v6;
  long long v7;
  long long v8;
  _OWORD *v9;
  long long v10;
  long long v11;
  long long v12;
  long long v13;
  _OWORD *v14;
  long long v15;
  long long v16;
  long long v17;
  long long v18;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ActionMenu<ActionType>.Element>);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_100493400;
  char v3 = *(unsigned char *)(a1 + 64);
  unint64_t v4 = (_OWORD *)swift_allocObject();
  long long v5 = *(_OWORD *)(a1 + 80);
  v4[5] = *(_OWORD *)(a1 + 64);
  v4[6] = v5;
  long long v6 = *(_OWORD *)(a1 + 112);
  v4[7] = *(_OWORD *)(a1 + 96);
  v4[8] = v6;
  long long v7 = *(_OWORD *)(a1 + 16);
  v4[1] = *(_OWORD *)a1;
  v4[2] = v7;
  uint64_t v8 = *(_OWORD *)(a1 + 48);
  v4[3] = *(_OWORD *)(a1 + 32);
  v4[4] = v8;
  long long v9 = (_OWORD *)swift_allocObject();
  long long v10 = *(_OWORD *)(a1 + 80);
  v9[5] = *(_OWORD *)(a1 + 64);
  v9[6] = v10;
  long long v11 = *(_OWORD *)(a1 + 112);
  v9[7] = *(_OWORD *)(a1 + 96);
  v9[8] = v11;
  uint64_t v12 = *(_OWORD *)(a1 + 16);
  v9[1] = *(_OWORD *)a1;
  void v9[2] = v12;
  long long v13 = *(_OWORD *)(a1 + 48);
  v9[3] = *(_OWORD *)(a1 + 32);
  v9[4] = v13;
  long long v14 = (_OWORD *)swift_allocObject();
  long long v15 = *(_OWORD *)(a1 + 80);
  v14[5] = *(_OWORD *)(a1 + 64);
  v14[6] = v15;
  uint64_t v16 = *(_OWORD *)(a1 + 112);
  v14[7] = *(_OWORD *)(a1 + 96);
  v14[8] = v16;
  uint64_t v17 = *(_OWORD *)(a1 + 16);
  v14[1] = *(_OWORD *)a1;
  v14[2] = v17;
  uint64_t v18 = *(_OWORD *)(a1 + 48);
  v14[3] = *(_OWORD *)(a1 + 32);
  v14[4] = v18;
  *(unsigned char *)(v2 + 32) = v3;
  *(void *)(v2 + 40) = partial apply for specialized closure #1 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:);
  *(void *)(v2 + 48) = v4;
  *(void *)(v2 + 56) = partial apply for specialized closure #2 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:);
  *(void *)(v2 + 64) = v9;
  *(void *)(v2 + 72) = &async function pointer to partial apply for specialized closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:);
  *(void *)(v2 + 80) = v14;
  *(unsigned char *)(v2 + 112) = 0;
  outlined retain of Action<Actions.Share.Context, ActionType, ()>(a1);
  outlined retain of Action<Actions.Share.Context, ActionType, ()>(a1);
  outlined retain of Action<Actions.Share.Context, ActionType, ()>(a1);
  return v2;
}

{
  uint64_t v2;
  char v3;
  _OWORD *v4;
  long long v5;
  long long v6;
  long long v7;
  long long v8;
  _OWORD *v9;
  long long v10;
  long long v11;
  long long v12;
  long long v13;
  _OWORD *v14;
  long long v15;
  long long v16;
  long long v17;
  long long v18;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ActionMenu<ActionType>.Element>);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_100493400;
  char v3 = *(unsigned char *)(a1 + 64);
  unint64_t v4 = (_OWORD *)swift_allocObject();
  long long v5 = *(_OWORD *)(a1 + 80);
  v4[5] = *(_OWORD *)(a1 + 64);
  v4[6] = v5;
  long long v6 = *(_OWORD *)(a1 + 112);
  v4[7] = *(_OWORD *)(a1 + 96);
  v4[8] = v6;
  long long v7 = *(_OWORD *)(a1 + 16);
  v4[1] = *(_OWORD *)a1;
  v4[2] = v7;
  uint64_t v8 = *(_OWORD *)(a1 + 48);
  v4[3] = *(_OWORD *)(a1 + 32);
  v4[4] = v8;
  long long v9 = (_OWORD *)swift_allocObject();
  long long v10 = *(_OWORD *)(a1 + 80);
  v9[5] = *(_OWORD *)(a1 + 64);
  v9[6] = v10;
  long long v11 = *(_OWORD *)(a1 + 112);
  v9[7] = *(_OWORD *)(a1 + 96);
  v9[8] = v11;
  uint64_t v12 = *(_OWORD *)(a1 + 16);
  v9[1] = *(_OWORD *)a1;
  void v9[2] = v12;
  long long v13 = *(_OWORD *)(a1 + 48);
  v9[3] = *(_OWORD *)(a1 + 32);
  v9[4] = v13;
  long long v14 = (_OWORD *)swift_allocObject();
  long long v15 = *(_OWORD *)(a1 + 80);
  v14[5] = *(_OWORD *)(a1 + 64);
  v14[6] = v15;
  uint64_t v16 = *(_OWORD *)(a1 + 112);
  v14[7] = *(_OWORD *)(a1 + 96);
  v14[8] = v16;
  uint64_t v17 = *(_OWORD *)(a1 + 16);
  v14[1] = *(_OWORD *)a1;
  v14[2] = v17;
  uint64_t v18 = *(_OWORD *)(a1 + 48);
  v14[3] = *(_OWORD *)(a1 + 32);
  v14[4] = v18;
  *(unsigned char *)(v2 + 32) = v3;
  *(void *)(v2 + 40) = partial apply for specialized closure #1 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:);
  *(void *)(v2 + 48) = v4;
  *(void *)(v2 + 56) = partial apply for specialized closure #2 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:);
  *(void *)(v2 + 64) = v9;
  *(void *)(v2 + 72) = &async function pointer to partial apply for specialized closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:);
  *(void *)(v2 + 80) = v14;
  *(unsigned char *)(v2 + 112) = 0;
  outlined retain of Action<Actions.GoToAlbum.Context, ActionType, ()>(a1);
  outlined retain of Action<Actions.GoToAlbum.Context, ActionType, ()>(a1);
  outlined retain of Action<Actions.GoToAlbum.Context, ActionType, ()>(a1);
  return v2;
}

{
  uint64_t v2;
  char v3;
  _OWORD *v4;
  long long v5;
  long long v6;
  long long v7;
  _OWORD *v8;
  long long v9;
  long long v10;
  long long v11;
  _OWORD *v12;
  long long v13;
  long long v14;
  long long v15;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ActionMenu<ActionType>.Element>);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_100493400;
  char v3 = *(unsigned char *)(a1 + 48);
  unint64_t v4 = (_OWORD *)swift_allocObject();
  long long v5 = *(_OWORD *)(a1 + 80);
  v4[5] = *(_OWORD *)(a1 + 64);
  v4[6] = v5;
  v4[7] = *(_OWORD *)(a1 + 96);
  long long v6 = *(_OWORD *)(a1 + 16);
  v4[1] = *(_OWORD *)a1;
  v4[2] = v6;
  long long v7 = *(_OWORD *)(a1 + 48);
  v4[3] = *(_OWORD *)(a1 + 32);
  v4[4] = v7;
  uint64_t v8 = (_OWORD *)swift_allocObject();
  long long v9 = *(_OWORD *)(a1 + 80);
  v8[5] = *(_OWORD *)(a1 + 64);
  v8[6] = v9;
  v8[7] = *(_OWORD *)(a1 + 96);
  long long v10 = *(_OWORD *)(a1 + 16);
  v8[1] = *(_OWORD *)a1;
  v8[2] = v10;
  long long v11 = *(_OWORD *)(a1 + 48);
  v8[3] = *(_OWORD *)(a1 + 32);
  v8[4] = v11;
  uint64_t v12 = (_OWORD *)swift_allocObject();
  long long v13 = *(_OWORD *)(a1 + 80);
  v12[5] = *(_OWORD *)(a1 + 64);
  v12[6] = v13;
  v12[7] = *(_OWORD *)(a1 + 96);
  long long v14 = *(_OWORD *)(a1 + 16);
  v12[1] = *(_OWORD *)a1;
  void v12[2] = v14;
  long long v15 = *(_OWORD *)(a1 + 48);
  unint64_t v12[3] = *(_OWORD *)(a1 + 32);
  v12[4] = v15;
  *(unsigned char *)(v2 + 32) = v3;
  *(void *)(v2 + 40) = partial apply for specialized closure #1 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:);
  *(void *)(v2 + 48) = v4;
  *(void *)(v2 + 56) = partial apply for specialized closure #2 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:);
  *(void *)(v2 + 64) = v8;
  *(void *)(v2 + 72) = &async function pointer to partial apply for specialized closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:);
  *(void *)(v2 + 80) = v12;
  *(unsigned char *)(v2 + 112) = 0;
  outlined retain of Action<Actions.UndoSuggestLess.Context, ActionType, ()>(a1);
  outlined retain of Action<Actions.UndoSuggestLess.Context, ActionType, ()>(a1);
  outlined retain of Action<Actions.UndoSuggestLess.Context, ActionType, ()>(a1);
  return v2;
}

{
  uint64_t v2;
  char v3;
  _OWORD *v4;
  long long v5;
  long long v6;
  long long v7;
  _OWORD *v8;
  long long v9;
  long long v10;
  long long v11;
  _OWORD *v12;
  long long v13;
  long long v14;
  long long v15;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ActionMenu<ActionType>.Element>);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_100493400;
  char v3 = *(unsigned char *)(a1 + 48);
  unint64_t v4 = (_OWORD *)swift_allocObject();
  long long v5 = *(_OWORD *)(a1 + 80);
  v4[5] = *(_OWORD *)(a1 + 64);
  v4[6] = v5;
  v4[7] = *(_OWORD *)(a1 + 96);
  long long v6 = *(_OWORD *)(a1 + 16);
  v4[1] = *(_OWORD *)a1;
  v4[2] = v6;
  long long v7 = *(_OWORD *)(a1 + 48);
  v4[3] = *(_OWORD *)(a1 + 32);
  v4[4] = v7;
  uint64_t v8 = (_OWORD *)swift_allocObject();
  long long v9 = *(_OWORD *)(a1 + 80);
  v8[5] = *(_OWORD *)(a1 + 64);
  v8[6] = v9;
  v8[7] = *(_OWORD *)(a1 + 96);
  long long v10 = *(_OWORD *)(a1 + 16);
  v8[1] = *(_OWORD *)a1;
  v8[2] = v10;
  long long v11 = *(_OWORD *)(a1 + 48);
  v8[3] = *(_OWORD *)(a1 + 32);
  v8[4] = v11;
  uint64_t v12 = (_OWORD *)swift_allocObject();
  long long v13 = *(_OWORD *)(a1 + 80);
  v12[5] = *(_OWORD *)(a1 + 64);
  v12[6] = v13;
  v12[7] = *(_OWORD *)(a1 + 96);
  long long v14 = *(_OWORD *)(a1 + 16);
  v12[1] = *(_OWORD *)a1;
  void v12[2] = v14;
  long long v15 = *(_OWORD *)(a1 + 48);
  unint64_t v12[3] = *(_OWORD *)(a1 + 32);
  v12[4] = v15;
  *(unsigned char *)(v2 + 32) = v3;
  *(void *)(v2 + 40) = partial apply for specialized closure #1 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:);
  *(void *)(v2 + 48) = v4;
  *(void *)(v2 + 56) = partial apply for specialized closure #2 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:);
  *(void *)(v2 + 64) = v8;
  *(void *)(v2 + 72) = &async function pointer to partial apply for specialized closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:);
  *(void *)(v2 + 80) = v12;
  *(unsigned char *)(v2 + 112) = 0;
  outlined retain of Action<Actions.UndoSuggestLess.Context, ActionType, ()>(a1);
  outlined retain of Action<Actions.UndoSuggestLess.Context, ActionType, ()>(a1);
  outlined retain of Action<Actions.UndoSuggestLess.Context, ActionType, ()>(a1);
  return v2;
}

{
  uint64_t v2;
  char v3;
  uint64_t v4;
  long long v5;
  long long v6;
  long long v7;
  long long v8;
  uint64_t v9;
  long long v10;
  long long v11;
  long long v12;
  long long v13;
  uint64_t v14;
  long long v15;
  long long v16;
  long long v17;
  long long v18;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ActionMenu<ActionType>.Element>);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_100493400;
  char v3 = *(unsigned char *)(a1 + 72);
  unint64_t v4 = swift_allocObject();
  long long v5 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(v4 + 112) = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v4 + 128) = v5;
  *(void *)(v4 + 144) = *(void *)(a1 + 128);
  long long v6 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v4 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v4 + 64) = v6;
  long long v7 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v4 + 80) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v4 + 96) = v7;
  uint64_t v8 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v4 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v4 + 32) = v8;
  long long v9 = swift_allocObject();
  long long v10 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(v9 + 112) = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v9 + 128) = v10;
  *(void *)(v9 + 144) = *(void *)(a1 + 128);
  long long v11 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v9 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v9 + 64) = v11;
  uint64_t v12 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v9 + 80) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v9 + 96) = v12;
  long long v13 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v9 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v9 + 32) = v13;
  long long v14 = swift_allocObject();
  long long v15 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(v14 + 112) = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v14 + 128) = v15;
  *(void *)(v14 + 144) = *(void *)(a1 + 128);
  uint64_t v16 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v14 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v14 + 64) = v16;
  uint64_t v17 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v14 + 80) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v14 + 96) = v17;
  uint64_t v18 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v14 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v14 + 32) = v18;
  *(unsigned char *)(v2 + 32) = v3;
  *(void *)(v2 + 40) = partial apply for specialized closure #1 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:);
  *(void *)(v2 + 48) = v4;
  *(void *)(v2 + 56) = partial apply for specialized closure #2 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:);
  *(void *)(v2 + 64) = v9;
  *(void *)(v2 + 72) = &async function pointer to partial apply for specialized closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:);
  *(void *)(v2 + 80) = v14;
  *(unsigned char *)(v2 + 112) = 0;
  outlined retain of Action<Actions.Queue.Context, ActionType, ()>((id *)a1);
  outlined retain of Action<Actions.Queue.Context, ActionType, ()>((id *)a1);
  outlined retain of Action<Actions.Queue.Context, ActionType, ()>((id *)a1);
  return v2;
}

{
  uint64_t v2;
  char v3;
  _OWORD *v4;
  long long v5;
  long long v6;
  long long v7;
  _OWORD *v8;
  long long v9;
  long long v10;
  long long v11;
  _OWORD *v12;
  long long v13;
  long long v14;
  long long v15;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ActionMenu<ActionType>.Element>);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_100493400;
  char v3 = *(unsigned char *)(a1 + 48);
  unint64_t v4 = (_OWORD *)swift_allocObject();
  long long v5 = *(_OWORD *)(a1 + 80);
  v4[5] = *(_OWORD *)(a1 + 64);
  v4[6] = v5;
  v4[7] = *(_OWORD *)(a1 + 96);
  long long v6 = *(_OWORD *)(a1 + 16);
  v4[1] = *(_OWORD *)a1;
  v4[2] = v6;
  long long v7 = *(_OWORD *)(a1 + 48);
  v4[3] = *(_OWORD *)(a1 + 32);
  v4[4] = v7;
  uint64_t v8 = (_OWORD *)swift_allocObject();
  long long v9 = *(_OWORD *)(a1 + 80);
  v8[5] = *(_OWORD *)(a1 + 64);
  v8[6] = v9;
  v8[7] = *(_OWORD *)(a1 + 96);
  long long v10 = *(_OWORD *)(a1 + 16);
  v8[1] = *(_OWORD *)a1;
  v8[2] = v10;
  long long v11 = *(_OWORD *)(a1 + 48);
  v8[3] = *(_OWORD *)(a1 + 32);
  v8[4] = v11;
  uint64_t v12 = (_OWORD *)swift_allocObject();
  long long v13 = *(_OWORD *)(a1 + 80);
  v12[5] = *(_OWORD *)(a1 + 64);
  v12[6] = v13;
  v12[7] = *(_OWORD *)(a1 + 96);
  long long v14 = *(_OWORD *)(a1 + 16);
  v12[1] = *(_OWORD *)a1;
  void v12[2] = v14;
  long long v15 = *(_OWORD *)(a1 + 48);
  unint64_t v12[3] = *(_OWORD *)(a1 + 32);
  v12[4] = v15;
  *(unsigned char *)(v2 + 32) = v3;
  *(void *)(v2 + 40) = partial apply for specialized closure #1 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:);
  *(void *)(v2 + 48) = v4;
  *(void *)(v2 + 56) = partial apply for specialized closure #2 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:);
  *(void *)(v2 + 64) = v8;
  *(void *)(v2 + 72) = &async function pointer to partial apply for specialized closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:);
  *(void *)(v2 + 80) = v12;
  *(unsigned char *)(v2 + 112) = 0;
  outlined retain of Action<Actions.UndoSuggestLess.Context, ActionType, ()>(a1);
  outlined retain of Action<Actions.UndoSuggestLess.Context, ActionType, ()>(a1);
  outlined retain of Action<Actions.UndoSuggestLess.Context, ActionType, ()>(a1);
  return v2;
}

{
  uint64_t v2;
  char v3;
  _OWORD *v4;
  long long v5;
  long long v6;
  long long v7;
  long long v8;
  _OWORD *v9;
  long long v10;
  long long v11;
  long long v12;
  long long v13;
  _OWORD *v14;
  long long v15;
  long long v16;
  long long v17;
  long long v18;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ActionMenu<ActionType>.Element>);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_100493400;
  char v3 = *(unsigned char *)(a1 + 64);
  unint64_t v4 = (_OWORD *)swift_allocObject();
  long long v5 = *(_OWORD *)(a1 + 80);
  v4[5] = *(_OWORD *)(a1 + 64);
  v4[6] = v5;
  long long v6 = *(_OWORD *)(a1 + 112);
  v4[7] = *(_OWORD *)(a1 + 96);
  v4[8] = v6;
  long long v7 = *(_OWORD *)(a1 + 16);
  v4[1] = *(_OWORD *)a1;
  v4[2] = v7;
  uint64_t v8 = *(_OWORD *)(a1 + 48);
  v4[3] = *(_OWORD *)(a1 + 32);
  v4[4] = v8;
  long long v9 = (_OWORD *)swift_allocObject();
  long long v10 = *(_OWORD *)(a1 + 80);
  v9[5] = *(_OWORD *)(a1 + 64);
  v9[6] = v10;
  long long v11 = *(_OWORD *)(a1 + 112);
  v9[7] = *(_OWORD *)(a1 + 96);
  v9[8] = v11;
  uint64_t v12 = *(_OWORD *)(a1 + 16);
  v9[1] = *(_OWORD *)a1;
  void v9[2] = v12;
  long long v13 = *(_OWORD *)(a1 + 48);
  v9[3] = *(_OWORD *)(a1 + 32);
  v9[4] = v13;
  long long v14 = (_OWORD *)swift_allocObject();
  long long v15 = *(_OWORD *)(a1 + 80);
  v14[5] = *(_OWORD *)(a1 + 64);
  v14[6] = v15;
  uint64_t v16 = *(_OWORD *)(a1 + 112);
  v14[7] = *(_OWORD *)(a1 + 96);
  v14[8] = v16;
  uint64_t v17 = *(_OWORD *)(a1 + 16);
  v14[1] = *(_OWORD *)a1;
  v14[2] = v17;
  uint64_t v18 = *(_OWORD *)(a1 + 48);
  v14[3] = *(_OWORD *)(a1 + 32);
  v14[4] = v18;
  *(unsigned char *)(v2 + 32) = v3;
  *(void *)(v2 + 40) = partial apply for specialized closure #1 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:);
  *(void *)(v2 + 48) = v4;
  *(void *)(v2 + 56) = partial apply for specialized closure #2 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:);
  *(void *)(v2 + 64) = v9;
  *(void *)(v2 + 72) = &async function pointer to partial apply for specialized closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:);
  *(void *)(v2 + 80) = v14;
  *(unsigned char *)(v2 + 112) = 0;
  outlined retain of Action<Actions.RemoveDownload.Context, ActionType, ()>(a1);
  outlined retain of Action<Actions.RemoveDownload.Context, ActionType, ()>(a1);
  outlined retain of Action<Actions.RemoveDownload.Context, ActionType, ()>(a1);
  return v2;
}

{
  uint64_t v2;
  char v3;
  _OWORD *v4;
  long long v5;
  long long v6;
  long long v7;
  long long v8;
  _OWORD *v9;
  long long v10;
  long long v11;
  long long v12;
  long long v13;
  _OWORD *v14;
  long long v15;
  long long v16;
  long long v17;
  long long v18;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ActionMenu<ActionType>.Element>);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_100493400;
  char v3 = *(unsigned char *)(a1 + 64);
  unint64_t v4 = (_OWORD *)swift_allocObject();
  long long v5 = *(_OWORD *)(a1 + 80);
  v4[5] = *(_OWORD *)(a1 + 64);
  v4[6] = v5;
  long long v6 = *(_OWORD *)(a1 + 112);
  v4[7] = *(_OWORD *)(a1 + 96);
  v4[8] = v6;
  long long v7 = *(_OWORD *)(a1 + 16);
  v4[1] = *(_OWORD *)a1;
  v4[2] = v7;
  uint64_t v8 = *(_OWORD *)(a1 + 48);
  v4[3] = *(_OWORD *)(a1 + 32);
  v4[4] = v8;
  long long v9 = (_OWORD *)swift_allocObject();
  long long v10 = *(_OWORD *)(a1 + 80);
  v9[5] = *(_OWORD *)(a1 + 64);
  v9[6] = v10;
  long long v11 = *(_OWORD *)(a1 + 112);
  v9[7] = *(_OWORD *)(a1 + 96);
  v9[8] = v11;
  uint64_t v12 = *(_OWORD *)(a1 + 16);
  v9[1] = *(_OWORD *)a1;
  void v9[2] = v12;
  long long v13 = *(_OWORD *)(a1 + 48);
  v9[3] = *(_OWORD *)(a1 + 32);
  v9[4] = v13;
  long long v14 = (_OWORD *)swift_allocObject();
  long long v15 = *(_OWORD *)(a1 + 80);
  v14[5] = *(_OWORD *)(a1 + 64);
  v14[6] = v15;
  uint64_t v16 = *(_OWORD *)(a1 + 112);
  v14[7] = *(_OWORD *)(a1 + 96);
  v14[8] = v16;
  uint64_t v17 = *(_OWORD *)(a1 + 16);
  v14[1] = *(_OWORD *)a1;
  v14[2] = v17;
  uint64_t v18 = *(_OWORD *)(a1 + 48);
  v14[3] = *(_OWORD *)(a1 + 32);
  v14[4] = v18;
  *(unsigned char *)(v2 + 32) = v3;
  *(void *)(v2 + 40) = partial apply for specialized closure #1 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:);
  *(void *)(v2 + 48) = v4;
  *(void *)(v2 + 56) = partial apply for specialized closure #2 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:);
  *(void *)(v2 + 64) = v9;
  *(void *)(v2 + 72) = &async function pointer to partial apply for specialized closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:);
  *(void *)(v2 + 80) = v14;
  *(unsigned char *)(v2 + 112) = 0;
  outlined retain of Action<Actions.RemoveDownload.Context, ActionType, ()>(a1);
  outlined retain of Action<Actions.RemoveDownload.Context, ActionType, ()>(a1);
  outlined retain of Action<Actions.RemoveDownload.Context, ActionType, ()>(a1);
  return v2;
}

{
  uint64_t v2;
  char v3;
  _OWORD *v4;
  long long v5;
  long long v6;
  long long v7;
  _OWORD *v8;
  long long v9;
  long long v10;
  long long v11;
  _OWORD *v12;
  long long v13;
  long long v14;
  long long v15;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ActionMenu<ActionType>.Element>);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_100493400;
  char v3 = *(unsigned char *)(a1 + 48);
  unint64_t v4 = (_OWORD *)swift_allocObject();
  long long v5 = *(_OWORD *)(a1 + 80);
  v4[5] = *(_OWORD *)(a1 + 64);
  v4[6] = v5;
  v4[7] = *(_OWORD *)(a1 + 96);
  long long v6 = *(_OWORD *)(a1 + 16);
  v4[1] = *(_OWORD *)a1;
  v4[2] = v6;
  long long v7 = *(_OWORD *)(a1 + 48);
  v4[3] = *(_OWORD *)(a1 + 32);
  v4[4] = v7;
  uint64_t v8 = (_OWORD *)swift_allocObject();
  long long v9 = *(_OWORD *)(a1 + 80);
  v8[5] = *(_OWORD *)(a1 + 64);
  v8[6] = v9;
  v8[7] = *(_OWORD *)(a1 + 96);
  long long v10 = *(_OWORD *)(a1 + 16);
  v8[1] = *(_OWORD *)a1;
  v8[2] = v10;
  long long v11 = *(_OWORD *)(a1 + 48);
  v8[3] = *(_OWORD *)(a1 + 32);
  v8[4] = v11;
  uint64_t v12 = (_OWORD *)swift_allocObject();
  long long v13 = *(_OWORD *)(a1 + 80);
  v12[5] = *(_OWORD *)(a1 + 64);
  v12[6] = v13;
  v12[7] = *(_OWORD *)(a1 + 96);
  long long v14 = *(_OWORD *)(a1 + 16);
  v12[1] = *(_OWORD *)a1;
  void v12[2] = v14;
  long long v15 = *(_OWORD *)(a1 + 48);
  unint64_t v12[3] = *(_OWORD *)(a1 + 32);
  v12[4] = v15;
  *(unsigned char *)(v2 + 32) = v3;
  *(void *)(v2 + 40) = partial apply for specialized closure #1 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:);
  *(void *)(v2 + 48) = v4;
  *(void *)(v2 + 56) = partial apply for specialized closure #2 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:);
  *(void *)(v2 + 64) = v8;
  *(void *)(v2 + 72) = &async function pointer to partial apply for specialized closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:);
  *(void *)(v2 + 80) = v12;
  *(unsigned char *)(v2 + 112) = 0;
  outlined retain of Action<Actions.UndoSuggestLess.Context, ActionType, ()>(a1);
  outlined retain of Action<Actions.UndoSuggestLess.Context, ActionType, ()>(a1);
  outlined retain of Action<Actions.UndoSuggestLess.Context, ActionType, ()>(a1);
  return v2;
}

{
  uint64_t v2;
  char v3;
  _OWORD *v4;
  long long v5;
  long long v6;
  long long v7;
  _OWORD *v8;
  long long v9;
  long long v10;
  long long v11;
  _OWORD *v12;
  long long v13;
  long long v14;
  long long v15;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ActionMenu<ActionType>.Element>);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_100493400;
  char v3 = *(unsigned char *)(a1 + 48);
  unint64_t v4 = (_OWORD *)swift_allocObject();
  long long v5 = *(_OWORD *)(a1 + 80);
  v4[5] = *(_OWORD *)(a1 + 64);
  v4[6] = v5;
  v4[7] = *(_OWORD *)(a1 + 96);
  long long v6 = *(_OWORD *)(a1 + 16);
  v4[1] = *(_OWORD *)a1;
  v4[2] = v6;
  long long v7 = *(_OWORD *)(a1 + 48);
  v4[3] = *(_OWORD *)(a1 + 32);
  v4[4] = v7;
  uint64_t v8 = (_OWORD *)swift_allocObject();
  long long v9 = *(_OWORD *)(a1 + 80);
  v8[5] = *(_OWORD *)(a1 + 64);
  v8[6] = v9;
  v8[7] = *(_OWORD *)(a1 + 96);
  long long v10 = *(_OWORD *)(a1 + 16);
  v8[1] = *(_OWORD *)a1;
  v8[2] = v10;
  long long v11 = *(_OWORD *)(a1 + 48);
  v8[3] = *(_OWORD *)(a1 + 32);
  v8[4] = v11;
  uint64_t v12 = (_OWORD *)swift_allocObject();
  long long v13 = *(_OWORD *)(a1 + 80);
  v12[5] = *(_OWORD *)(a1 + 64);
  v12[6] = v13;
  v12[7] = *(_OWORD *)(a1 + 96);
  long long v14 = *(_OWORD *)(a1 + 16);
  v12[1] = *(_OWORD *)a1;
  void v12[2] = v14;
  long long v15 = *(_OWORD *)(a1 + 48);
  unint64_t v12[3] = *(_OWORD *)(a1 + 32);
  v12[4] = v15;
  *(unsigned char *)(v2 + 32) = v3;
  *(void *)(v2 + 40) = partial apply for specialized closure #1 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:);
  *(void *)(v2 + 48) = v4;
  *(void *)(v2 + 56) = partial apply for specialized closure #2 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:);
  *(void *)(v2 + 64) = v8;
  *(void *)(v2 + 72) = &async function pointer to partial apply for specialized closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:);
  *(void *)(v2 + 80) = v12;
  *(unsigned char *)(v2 + 112) = 0;
  outlined retain of Action<Actions.UndoSuggestLess.Context, ActionType, ()>(a1);
  outlined retain of Action<Actions.UndoSuggestLess.Context, ActionType, ()>(a1);
  outlined retain of Action<Actions.UndoSuggestLess.Context, ActionType, ()>(a1);
  return v2;
}

{
  uint64_t v2;
  char v3;
  _OWORD *v4;
  long long v5;
  long long v6;
  long long v7;
  _OWORD *v8;
  long long v9;
  long long v10;
  long long v11;
  _OWORD *v12;
  long long v13;
  long long v14;
  long long v15;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ActionMenu<ActionType>.Element>);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_100493400;
  char v3 = *(unsigned char *)(a1 + 48);
  unint64_t v4 = (_OWORD *)swift_allocObject();
  long long v5 = *(_OWORD *)(a1 + 80);
  v4[5] = *(_OWORD *)(a1 + 64);
  v4[6] = v5;
  v4[7] = *(_OWORD *)(a1 + 96);
  long long v6 = *(_OWORD *)(a1 + 16);
  v4[1] = *(_OWORD *)a1;
  v4[2] = v6;
  long long v7 = *(_OWORD *)(a1 + 48);
  v4[3] = *(_OWORD *)(a1 + 32);
  v4[4] = v7;
  uint64_t v8 = (_OWORD *)swift_allocObject();
  long long v9 = *(_OWORD *)(a1 + 80);
  v8[5] = *(_OWORD *)(a1 + 64);
  v8[6] = v9;
  v8[7] = *(_OWORD *)(a1 + 96);
  long long v10 = *(_OWORD *)(a1 + 16);
  v8[1] = *(_OWORD *)a1;
  v8[2] = v10;
  long long v11 = *(_OWORD *)(a1 + 48);
  v8[3] = *(_OWORD *)(a1 + 32);
  v8[4] = v11;
  uint64_t v12 = (_OWORD *)swift_allocObject();
  long long v13 = *(_OWORD *)(a1 + 80);
  v12[5] = *(_OWORD *)(a1 + 64);
  v12[6] = v13;
  v12[7] = *(_OWORD *)(a1 + 96);
  long long v14 = *(_OWORD *)(a1 + 16);
  v12[1] = *(_OWORD *)a1;
  void v12[2] = v14;
  long long v15 = *(_OWORD *)(a1 + 48);
  unint64_t v12[3] = *(_OWORD *)(a1 + 32);
  v12[4] = v15;
  *(unsigned char *)(v2 + 32) = v3;
  *(void *)(v2 + 40) = partial apply for specialized closure #1 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:);
  *(void *)(v2 + 48) = v4;
  *(void *)(v2 + 56) = partial apply for specialized closure #2 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:);
  *(void *)(v2 + 64) = v8;
  *(void *)(v2 + 72) = &async function pointer to partial apply for specialized closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:);
  *(void *)(v2 + 80) = v12;
  *(unsigned char *)(v2 + 112) = 0;
  outlined retain of Action<Actions.UndoSuggestLess.Context, ActionType, ()>(a1);
  outlined retain of Action<Actions.UndoSuggestLess.Context, ActionType, ()>(a1);
  outlined retain of Action<Actions.UndoSuggestLess.Context, ActionType, ()>(a1);
  return v2;
}

{
  uint64_t v2;
  char v3;
  _OWORD *v4;
  long long v5;
  long long v6;
  long long v7;
  _OWORD *v8;
  long long v9;
  long long v10;
  long long v11;
  _OWORD *v12;
  long long v13;
  long long v14;
  long long v15;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ActionMenu<ActionType>.Element>);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_100493400;
  char v3 = *(unsigned char *)(a1 + 48);
  unint64_t v4 = (_OWORD *)swift_allocObject();
  long long v5 = *(_OWORD *)(a1 + 80);
  v4[5] = *(_OWORD *)(a1 + 64);
  v4[6] = v5;
  v4[7] = *(_OWORD *)(a1 + 96);
  long long v6 = *(_OWORD *)(a1 + 16);
  v4[1] = *(_OWORD *)a1;
  v4[2] = v6;
  long long v7 = *(_OWORD *)(a1 + 48);
  v4[3] = *(_OWORD *)(a1 + 32);
  v4[4] = v7;
  uint64_t v8 = (_OWORD *)swift_allocObject();
  long long v9 = *(_OWORD *)(a1 + 80);
  v8[5] = *(_OWORD *)(a1 + 64);
  v8[6] = v9;
  v8[7] = *(_OWORD *)(a1 + 96);
  long long v10 = *(_OWORD *)(a1 + 16);
  v8[1] = *(_OWORD *)a1;
  v8[2] = v10;
  long long v11 = *(_OWORD *)(a1 + 48);
  v8[3] = *(_OWORD *)(a1 + 32);
  v8[4] = v11;
  uint64_t v12 = (_OWORD *)swift_allocObject();
  long long v13 = *(_OWORD *)(a1 + 80);
  v12[5] = *(_OWORD *)(a1 + 64);
  v12[6] = v13;
  v12[7] = *(_OWORD *)(a1 + 96);
  long long v14 = *(_OWORD *)(a1 + 16);
  v12[1] = *(_OWORD *)a1;
  void v12[2] = v14;
  long long v15 = *(_OWORD *)(a1 + 48);
  unint64_t v12[3] = *(_OWORD *)(a1 + 32);
  v12[4] = v15;
  *(unsigned char *)(v2 + 32) = v3;
  *(void *)(v2 + 40) = partial apply for specialized closure #1 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:);
  *(void *)(v2 + 48) = v4;
  *(void *)(v2 + 56) = partial apply for specialized closure #2 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:);
  *(void *)(v2 + 64) = v8;
  *(void *)(v2 + 72) = &async function pointer to partial apply for specialized closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:);
  *(void *)(v2 + 80) = v12;
  *(unsigned char *)(v2 + 112) = 0;
  outlined retain of Action<Actions.UndoSuggestLess.Context, ActionType, ()>(a1);
  outlined retain of Action<Actions.UndoSuggestLess.Context, ActionType, ()>(a1);
  outlined retain of Action<Actions.UndoSuggestLess.Context, ActionType, ()>(a1);
  return v2;
}

{
  uint64_t v2;
  char v3;
  _OWORD *v4;
  long long v5;
  long long v6;
  long long v7;
  _OWORD *v8;
  long long v9;
  long long v10;
  long long v11;
  _OWORD *v12;
  long long v13;
  long long v14;
  long long v15;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ActionMenu<ActionType>.Element>);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_100493400;
  char v3 = *(unsigned char *)(a1 + 48);
  unint64_t v4 = (_OWORD *)swift_allocObject();
  long long v5 = *(_OWORD *)(a1 + 80);
  v4[5] = *(_OWORD *)(a1 + 64);
  v4[6] = v5;
  v4[7] = *(_OWORD *)(a1 + 96);
  long long v6 = *(_OWORD *)(a1 + 16);
  v4[1] = *(_OWORD *)a1;
  v4[2] = v6;
  long long v7 = *(_OWORD *)(a1 + 48);
  v4[3] = *(_OWORD *)(a1 + 32);
  v4[4] = v7;
  uint64_t v8 = (_OWORD *)swift_allocObject();
  long long v9 = *(_OWORD *)(a1 + 80);
  v8[5] = *(_OWORD *)(a1 + 64);
  v8[6] = v9;
  v8[7] = *(_OWORD *)(a1 + 96);
  long long v10 = *(_OWORD *)(a1 + 16);
  v8[1] = *(_OWORD *)a1;
  v8[2] = v10;
  long long v11 = *(_OWORD *)(a1 + 48);
  v8[3] = *(_OWORD *)(a1 + 32);
  v8[4] = v11;
  uint64_t v12 = (_OWORD *)swift_allocObject();
  long long v13 = *(_OWORD *)(a1 + 80);
  v12[5] = *(_OWORD *)(a1 + 64);
  v12[6] = v13;
  v12[7] = *(_OWORD *)(a1 + 96);
  long long v14 = *(_OWORD *)(a1 + 16);
  v12[1] = *(_OWORD *)a1;
  void v12[2] = v14;
  long long v15 = *(_OWORD *)(a1 + 48);
  unint64_t v12[3] = *(_OWORD *)(a1 + 32);
  v12[4] = v15;
  *(unsigned char *)(v2 + 32) = v3;
  *(void *)(v2 + 40) = partial apply for specialized closure #1 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:);
  *(void *)(v2 + 48) = v4;
  *(void *)(v2 + 56) = partial apply for specialized closure #2 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:);
  *(void *)(v2 + 64) = v8;
  *(void *)(v2 + 72) = &async function pointer to partial apply for specialized closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:);
  *(void *)(v2 + 80) = v12;
  *(unsigned char *)(v2 + 112) = 0;
  outlined retain of Action<Actions.UndoSuggestLess.Context, ActionType, ()>(a1);
  outlined retain of Action<Actions.UndoSuggestLess.Context, ActionType, ()>(a1);
  outlined retain of Action<Actions.UndoSuggestLess.Context, ActionType, ()>(a1);
  return v2;
}

{
  uint64_t v2;
  char v3;
  _OWORD *v4;
  long long v5;
  long long v6;
  long long v7;
  _OWORD *v8;
  long long v9;
  long long v10;
  long long v11;
  _OWORD *v12;
  long long v13;
  long long v14;
  long long v15;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ActionMenu<ActionType>.Element>);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_100493400;
  char v3 = *(unsigned char *)(a1 + 48);
  unint64_t v4 = (_OWORD *)swift_allocObject();
  long long v5 = *(_OWORD *)(a1 + 80);
  v4[5] = *(_OWORD *)(a1 + 64);
  v4[6] = v5;
  v4[7] = *(_OWORD *)(a1 + 96);
  long long v6 = *(_OWORD *)(a1 + 16);
  v4[1] = *(_OWORD *)a1;
  v4[2] = v6;
  long long v7 = *(_OWORD *)(a1 + 48);
  v4[3] = *(_OWORD *)(a1 + 32);
  v4[4] = v7;
  uint64_t v8 = (_OWORD *)swift_allocObject();
  long long v9 = *(_OWORD *)(a1 + 80);
  v8[5] = *(_OWORD *)(a1 + 64);
  v8[6] = v9;
  v8[7] = *(_OWORD *)(a1 + 96);
  long long v10 = *(_OWORD *)(a1 + 16);
  v8[1] = *(_OWORD *)a1;
  v8[2] = v10;
  long long v11 = *(_OWORD *)(a1 + 48);
  v8[3] = *(_OWORD *)(a1 + 32);
  v8[4] = v11;
  uint64_t v12 = (_OWORD *)swift_allocObject();
  long long v13 = *(_OWORD *)(a1 + 80);
  v12[5] = *(_OWORD *)(a1 + 64);
  v12[6] = v13;
  v12[7] = *(_OWORD *)(a1 + 96);
  long long v14 = *(_OWORD *)(a1 + 16);
  v12[1] = *(_OWORD *)a1;
  void v12[2] = v14;
  long long v15 = *(_OWORD *)(a1 + 48);
  unint64_t v12[3] = *(_OWORD *)(a1 + 32);
  v12[4] = v15;
  *(unsigned char *)(v2 + 32) = v3;
  *(void *)(v2 + 40) = partial apply for specialized closure #1 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:);
  *(void *)(v2 + 48) = v4;
  *(void *)(v2 + 56) = partial apply for specialized closure #2 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:);
  *(void *)(v2 + 64) = v8;
  *(void *)(v2 + 72) = &async function pointer to partial apply for specialized closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:);
  *(void *)(v2 + 80) = v12;
  *(unsigned char *)(v2 + 112) = 0;
  outlined retain of Action<Actions.UndoSuggestLess.Context, ActionType, ()>(a1);
  outlined retain of Action<Actions.UndoSuggestLess.Context, ActionType, ()>(a1);
  outlined retain of Action<Actions.UndoSuggestLess.Context, ActionType, ()>(a1);
  return v2;
}

{
  uint64_t v2;
  char v3;
  _OWORD *v4;
  long long v5;
  long long v6;
  long long v7;
  _OWORD *v8;
  long long v9;
  long long v10;
  long long v11;
  _OWORD *v12;
  long long v13;
  long long v14;
  long long v15;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ActionMenu<ActionType>.Element>);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_100493400;
  char v3 = *(unsigned char *)(a1 + 32);
  unint64_t v4 = (_OWORD *)swift_allocObject();
  long long v5 = *(_OWORD *)(a1 + 48);
  v4[3] = *(_OWORD *)(a1 + 32);
  v4[4] = v5;
  long long v6 = *(_OWORD *)(a1 + 80);
  v4[5] = *(_OWORD *)(a1 + 64);
  v4[6] = v6;
  long long v7 = *(_OWORD *)(a1 + 16);
  v4[1] = *(_OWORD *)a1;
  v4[2] = v7;
  uint64_t v8 = (_OWORD *)swift_allocObject();
  long long v9 = *(_OWORD *)(a1 + 48);
  v8[3] = *(_OWORD *)(a1 + 32);
  v8[4] = v9;
  long long v10 = *(_OWORD *)(a1 + 80);
  v8[5] = *(_OWORD *)(a1 + 64);
  v8[6] = v10;
  long long v11 = *(_OWORD *)(a1 + 16);
  v8[1] = *(_OWORD *)a1;
  v8[2] = v11;
  uint64_t v12 = (_OWORD *)swift_allocObject();
  long long v13 = *(_OWORD *)(a1 + 48);
  unint64_t v12[3] = *(_OWORD *)(a1 + 32);
  v12[4] = v13;
  long long v14 = *(_OWORD *)(a1 + 80);
  v12[5] = *(_OWORD *)(a1 + 64);
  v12[6] = v14;
  long long v15 = *(_OWORD *)(a1 + 16);
  v12[1] = *(_OWORD *)a1;
  void v12[2] = v15;
  *(unsigned char *)(v2 + 32) = v3;
  *(void *)(v2 + 40) = partial apply for specialized closure #1 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:);
  *(void *)(v2 + 48) = v4;
  *(void *)(v2 + 56) = partial apply for specialized closure #2 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:);
  *(void *)(v2 + 64) = v8;
  *(void *)(v2 + 72) = &async function pointer to partial apply for specialized closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:);
  *(void *)(v2 + 80) = v12;
  *(unsigned char *)(v2 + 112) = 0;
  outlined retain of Action<Actions.RateSong.Context, ActionType, ()>(a1);
  outlined retain of Action<Actions.RateSong.Context, ActionType, ()>(a1);
  outlined retain of Action<Actions.RateSong.Context, ActionType, ()>(a1);
  return v2;
}

uint64_t specialized closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)(uint64_t a1)
{
  *(void *)(v1 + 216) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&_sScPSgMD_0);
  *(void *)(v1 + 224) = swift_task_alloc();
  return _swift_task_switch(specialized closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:), 0, 0);
}

{
  uint64_t v1;
  long long v3;
  long long v4;
  uint64_t v6;

  __swift_instantiateConcreteTypeFromMangledName(&_sScPSgMD_0);
  *(void *)(v1 + 16) = swift_task_alloc();
  uint64_t v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 40) = v3;
  *(_OWORD *)(v1 + 56) = *(_OWORD *)(a1 + 32);
  *(unsigned char *)(v1 + 128) = *(unsigned char *)(a1 + 48);
  *(_OWORD *)(v1 + 72) = *(_OWORD *)(a1 + 56);
  *(void *)(v1 + 88) = *(void *)(a1 + 72);
  unint64_t v4 = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v1 + 96) = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 112) = v4;
  return _swift_task_switch(specialized closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:), 0, 0);
}

{
  uint64_t v1;
  long long v3;
  long long v4;
  uint64_t v6;

  __swift_instantiateConcreteTypeFromMangledName(&_sScPSgMD_0);
  *(void *)(v1 + 16) = swift_task_alloc();
  uint64_t v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 40) = v3;
  *(_OWORD *)(v1 + 56) = *(_OWORD *)(a1 + 32);
  *(unsigned char *)(v1 + 128) = *(unsigned char *)(a1 + 48);
  *(_OWORD *)(v1 + 72) = *(_OWORD *)(a1 + 56);
  *(void *)(v1 + 88) = *(void *)(a1 + 72);
  unint64_t v4 = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v1 + 96) = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 112) = v4;
  return _swift_task_switch(specialized closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:), 0, 0);
}

{
  uint64_t v1;
  long long v3;
  long long v4;
  uint64_t v6;

  __swift_instantiateConcreteTypeFromMangledName(&_sScPSgMD_0);
  *(void *)(v1 + 16) = swift_task_alloc();
  uint64_t v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 40) = v3;
  *(_OWORD *)(v1 + 56) = *(_OWORD *)(a1 + 32);
  *(unsigned char *)(v1 + 128) = *(unsigned char *)(a1 + 48);
  *(_OWORD *)(v1 + 72) = *(_OWORD *)(a1 + 56);
  *(void *)(v1 + 88) = *(void *)(a1 + 72);
  unint64_t v4 = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v1 + 96) = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 112) = v4;
  return _swift_task_switch(specialized closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:), 0, 0);
}

{
  uint64_t v1;
  uint64_t v3;
  long long v4;
  long long v5;
  long long v6;
  long long v7;
  uint64_t v9;

  __swift_instantiateConcreteTypeFromMangledName(&_sScPSgMD_0);
  uint64_t v3 = swift_task_alloc();
  unint64_t v4 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(v1 + 112) = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v1 + 128) = v4;
  *(void *)(v1 + 144) = *(void *)(a1 + 128);
  *(void *)(v1 + 152) = v3;
  long long v5 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v1 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v1 + 64) = v5;
  long long v6 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 80) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v1 + 96) = v6;
  long long v7 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 32) = v7;
  return _swift_task_switch(specialized closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:), 0, 0);
}

{
  uint64_t v1;
  long long v3;
  long long v4;
  uint64_t v6;

  __swift_instantiateConcreteTypeFromMangledName(&_sScPSgMD_0);
  *(void *)(v1 + 16) = swift_task_alloc();
  uint64_t v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 40) = v3;
  *(_OWORD *)(v1 + 56) = *(_OWORD *)(a1 + 32);
  *(unsigned char *)(v1 + 128) = *(unsigned char *)(a1 + 48);
  *(_OWORD *)(v1 + 72) = *(_OWORD *)(a1 + 56);
  *(void *)(v1 + 88) = *(void *)(a1 + 72);
  unint64_t v4 = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v1 + 96) = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 112) = v4;
  return _swift_task_switch(specialized closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:), 0, 0);
}

{
  uint64_t v1;
  long long v3;
  long long v4;
  uint64_t v6;

  __swift_instantiateConcreteTypeFromMangledName(&_sScPSgMD_0);
  *(void *)(v1 + 16) = swift_task_alloc();
  uint64_t v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 40) = v3;
  *(_OWORD *)(v1 + 56) = *(_OWORD *)(a1 + 32);
  *(unsigned char *)(v1 + 128) = *(unsigned char *)(a1 + 48);
  *(_OWORD *)(v1 + 72) = *(_OWORD *)(a1 + 56);
  *(void *)(v1 + 88) = *(void *)(a1 + 72);
  unint64_t v4 = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v1 + 96) = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 112) = v4;
  return _swift_task_switch(specialized closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:), 0, 0);
}

{
  uint64_t v1;
  long long v3;
  long long v4;
  uint64_t v6;

  __swift_instantiateConcreteTypeFromMangledName(&_sScPSgMD_0);
  *(void *)(v1 + 16) = swift_task_alloc();
  uint64_t v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 40) = v3;
  *(_OWORD *)(v1 + 56) = *(_OWORD *)(a1 + 32);
  *(unsigned char *)(v1 + 128) = *(unsigned char *)(a1 + 48);
  *(_OWORD *)(v1 + 72) = *(_OWORD *)(a1 + 56);
  *(void *)(v1 + 88) = *(void *)(a1 + 72);
  unint64_t v4 = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v1 + 96) = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 112) = v4;
  return _swift_task_switch(specialized closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:), 0, 0);
}

{
  uint64_t v1;
  long long v3;
  long long v4;
  uint64_t v6;

  __swift_instantiateConcreteTypeFromMangledName(&_sScPSgMD_0);
  *(void *)(v1 + 16) = swift_task_alloc();
  uint64_t v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 40) = v3;
  *(_OWORD *)(v1 + 56) = *(_OWORD *)(a1 + 32);
  *(unsigned char *)(v1 + 128) = *(unsigned char *)(a1 + 48);
  *(_OWORD *)(v1 + 72) = *(_OWORD *)(a1 + 56);
  *(void *)(v1 + 88) = *(void *)(a1 + 72);
  unint64_t v4 = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v1 + 96) = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 112) = v4;
  return _swift_task_switch(specialized closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:), 0, 0);
}

{
  uint64_t v1;
  long long v3;
  long long v4;
  uint64_t v6;

  __swift_instantiateConcreteTypeFromMangledName(&_sScPSgMD_0);
  *(void *)(v1 + 16) = swift_task_alloc();
  uint64_t v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 40) = v3;
  *(_OWORD *)(v1 + 56) = *(_OWORD *)(a1 + 32);
  *(unsigned char *)(v1 + 128) = *(unsigned char *)(a1 + 48);
  *(_OWORD *)(v1 + 72) = *(_OWORD *)(a1 + 56);
  *(void *)(v1 + 88) = *(void *)(a1 + 72);
  unint64_t v4 = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v1 + 96) = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 112) = v4;
  return _swift_task_switch(specialized closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:), 0, 0);
}

{
  uint64_t v1;
  long long v3;
  long long v4;
  uint64_t v6;

  __swift_instantiateConcreteTypeFromMangledName(&_sScPSgMD_0);
  *(void *)(v1 + 16) = swift_task_alloc();
  uint64_t v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 40) = v3;
  *(_OWORD *)(v1 + 56) = *(_OWORD *)(a1 + 32);
  *(unsigned char *)(v1 + 128) = *(unsigned char *)(a1 + 48);
  *(_OWORD *)(v1 + 72) = *(_OWORD *)(a1 + 56);
  *(void *)(v1 + 88) = *(void *)(a1 + 72);
  unint64_t v4 = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v1 + 96) = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 112) = v4;
  return _swift_task_switch(specialized closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:), 0, 0);
}

{
  uint64_t v1;
  long long v3;
  long long v4;
  uint64_t v6;

  __swift_instantiateConcreteTypeFromMangledName(&_sScPSgMD_0);
  *(void *)(v1 + 16) = swift_task_alloc();
  uint64_t v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 40) = v3;
  *(_OWORD *)(v1 + 56) = *(_OWORD *)(a1 + 32);
  *(unsigned char *)(v1 + 128) = *(unsigned char *)(a1 + 48);
  *(_OWORD *)(v1 + 72) = *(_OWORD *)(a1 + 56);
  *(void *)(v1 + 88) = *(void *)(a1 + 72);
  unint64_t v4 = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v1 + 96) = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 112) = v4;
  return _swift_task_switch(specialized closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:), 0, 0);
}

{
  uint64_t v1;
  long long v3;
  long long v4;
  uint64_t v6;

  __swift_instantiateConcreteTypeFromMangledName(&_sScPSgMD_0);
  *(void *)(v1 + 16) = swift_task_alloc();
  uint64_t v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 40) = v3;
  *(_OWORD *)(v1 + 56) = *(_OWORD *)(a1 + 32);
  *(unsigned char *)(v1 + 128) = *(unsigned char *)(a1 + 48);
  *(_OWORD *)(v1 + 72) = *(_OWORD *)(a1 + 56);
  *(void *)(v1 + 88) = *(void *)(a1 + 72);
  unint64_t v4 = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v1 + 96) = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 112) = v4;
  return _swift_task_switch(specialized closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:), 0, 0);
}

{
  uint64_t v1;
  long long v3;
  long long v4;
  uint64_t v6;

  __swift_instantiateConcreteTypeFromMangledName(&_sScPSgMD_0);
  *(void *)(v1 + 16) = swift_task_alloc();
  uint64_t v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 40) = v3;
  *(unsigned char *)(v1 + 112) = *(unsigned char *)(a1 + 32);
  *(_OWORD *)(v1 + 56) = *(_OWORD *)(a1 + 40);
  *(void *)(v1 + 72) = *(void *)(a1 + 56);
  unint64_t v4 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 80) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v1 + 96) = v4;
  return _swift_task_switch(specialized closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:), 0, 0);
}

uint64_t specialized closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)()
{
  uint64_t v2 = *(void *)(v0 + 216);
  uint64_t v1 = *(void *)(v0 + 224);
  uint64_t v3 = type metadata accessor for TaskPriority();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v1, 1, 1, v3);
  outlined init with copy of (String, Any)(v2, v0 + 16, &demangling cache variable for type metadata for Action<Actions.DeleteOrRemoveDownload.Context, ActionType, Actions.DeleteOrRemoveDownload.Choice>);
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = 0;
  *(void *)(v4 + 24) = 0;
  long long v5 = *(_OWORD *)(v0 + 192);
  *(_OWORD *)(v4 + 192) = *(_OWORD *)(v0 + 176);
  *(_OWORD *)(v4 + 208) = v5;
  *(void *)(v4 + 224) = *(void *)(v0 + 208);
  long long v6 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v4 + 128) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v4 + 144) = v6;
  long long v7 = *(_OWORD *)(v0 + 160);
  *(_OWORD *)(v4 + 160) = *(_OWORD *)(v0 + 144);
  *(_OWORD *)(v4 + 176) = v7;
  long long v8 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v4 + 64) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v4 + 80) = v8;
  long long v9 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v4 + 96) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v4 + 112) = v9;
  long long v10 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v4 + 32) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v4 + 48) = v10;
  _sScTss5Error_pRs_rlE8priority9operationScTyxsAA_pGScPSg_xyYaKYAcntcfC9MusicCore7ActionsO22DeleteOrRemoveDownloadO6ChoiceO_Tgm5(v1, (uint64_t)&async function pointer to partial apply for specialized closure #1 in closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:), v4);
  swift_release();
  swift_task_dealloc();
  long long v11 = *(uint64_t (**)(void))(v0 + 8);
  return v11();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void);
  long long v14;
  long long v15;
  long long v16;
  uint64_t v17;

  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v2 = *(void *)(v0 + 96);
  uint64_t v3 = *(void *)(v0 + 88);
  long long v5 = *(void *)(v0 + 72);
  uint64_t v4 = *(void *)(v0 + 80);
  long long v6 = *(unsigned char *)(v0 + 128);
  long long v7 = *(void *)(v0 + 64);
  long long v8 = *(void *)(v0 + 16);
  long long v9 = *(void *)(v0 + 24);
  long long v10 = type metadata accessor for TaskPriority();
  long long v14 = *(_OWORD *)(v0 + 32);
  long long v15 = *(_OWORD *)(v0 + 48);
  uint64_t v16 = *(_OWORD *)(v0 + 104);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v8, 1, 1, v10);
  long long v11 = swift_allocObject();
  *(void *)(v11 + 16) = 0;
  *(void *)(v11 + 24) = 0;
  *(void *)(v11 + 32) = v9;
  *(_OWORD *)(v11 + 40) = v14;
  *(_OWORD *)(v11 + 56) = v15;
  *(void *)(v11 + 72) = v7;
  *(unsigned char *)(v11 + 80) = v6;
  *(void *)(v11 + 88) = v5;
  *(void *)(v11 + 96) = v4;
  *(void *)(v11 + 104) = v3;
  *(void *)(v11 + 112) = v2;
  *(_OWORD *)(v11 + 120) = v16;
  *(void *)(v11 + 136) = v1;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  _sScTss5Error_pRs_rlE8priority9operationScTyxsAA_pGScPSg_xyYaKYAcntcfCyt_Tgm5(v8, (uint64_t)&async function pointer to partial apply for specialized closure #1 in closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:), v11);
  swift_release();
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void);
  long long v14;
  long long v15;
  long long v16;
  uint64_t v17;

  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v2 = *(void *)(v0 + 96);
  uint64_t v3 = *(void *)(v0 + 88);
  long long v5 = *(void *)(v0 + 72);
  uint64_t v4 = *(void *)(v0 + 80);
  long long v6 = *(unsigned char *)(v0 + 128);
  long long v7 = *(void *)(v0 + 64);
  long long v8 = *(void *)(v0 + 16);
  long long v9 = *(void *)(v0 + 24);
  long long v10 = type metadata accessor for TaskPriority();
  long long v14 = *(_OWORD *)(v0 + 32);
  long long v15 = *(_OWORD *)(v0 + 48);
  uint64_t v16 = *(_OWORD *)(v0 + 104);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v8, 1, 1, v10);
  long long v11 = swift_allocObject();
  *(void *)(v11 + 16) = 0;
  *(void *)(v11 + 24) = 0;
  *(void *)(v11 + 32) = v9;
  *(_OWORD *)(v11 + 40) = v14;
  *(_OWORD *)(v11 + 56) = v15;
  *(void *)(v11 + 72) = v7;
  *(unsigned char *)(v11 + 80) = v6;
  *(void *)(v11 + 88) = v5;
  *(void *)(v11 + 96) = v4;
  *(void *)(v11 + 104) = v3;
  *(void *)(v11 + 112) = v2;
  *(_OWORD *)(v11 + 120) = v16;
  *(void *)(v11 + 136) = v1;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  _sScTss5Error_pRs_rlE8priority9operationScTyxsAA_pGScPSg_xyYaKYAcntcfCyt_Tgm5(v8, (uint64_t)&async function pointer to partial apply for specialized closure #1 in closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:), v11);
  swift_release();
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void);
  long long v14;
  long long v15;
  long long v16;
  uint64_t v17;

  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v2 = *(void *)(v0 + 96);
  uint64_t v3 = *(void *)(v0 + 88);
  long long v5 = *(void *)(v0 + 72);
  uint64_t v4 = *(void *)(v0 + 80);
  long long v6 = *(unsigned char *)(v0 + 128);
  long long v7 = *(void *)(v0 + 64);
  long long v8 = *(void *)(v0 + 16);
  long long v9 = *(void *)(v0 + 24);
  long long v10 = type metadata accessor for TaskPriority();
  long long v14 = *(_OWORD *)(v0 + 32);
  long long v15 = *(_OWORD *)(v0 + 48);
  uint64_t v16 = *(_OWORD *)(v0 + 104);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v8, 1, 1, v10);
  long long v11 = swift_allocObject();
  *(void *)(v11 + 16) = 0;
  *(void *)(v11 + 24) = 0;
  *(void *)(v11 + 32) = v9;
  *(_OWORD *)(v11 + 40) = v14;
  *(_OWORD *)(v11 + 56) = v15;
  *(void *)(v11 + 72) = v7;
  *(unsigned char *)(v11 + 80) = v6;
  *(void *)(v11 + 88) = v5;
  *(void *)(v11 + 96) = v4;
  *(void *)(v11 + 104) = v3;
  *(void *)(v11 + 112) = v2;
  *(_OWORD *)(v11 + 120) = v16;
  *(void *)(v11 + 136) = v1;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  _sScTss5Error_pRs_rlE8priority9operationScTyxsAA_pGScPSg_xyYaKYAcntcfCyt_Tgm5(v8, (uint64_t)&async function pointer to partial apply for specialized closure #1 in closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:), v11);
  swift_release();
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  long long v4;
  long long v5;
  long long v6;
  long long v7;
  uint64_t (*v8)(void);
  uint64_t v10;

  uint64_t v1 = *(void *)(v0 + 144);
  uint64_t v2 = type metadata accessor for TaskPriority();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  uint64_t v4 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v3 + 96) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v3 + 112) = v4;
  long long v5 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v3 + 128) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v3 + 144) = v5;
  long long v6 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v3 + 32) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v3 + 48) = v6;
  long long v7 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v3 + 64) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v3 + 80) = v7;
  outlined retain of Action<Actions.GoToAlbum.Context, ActionType, ()>(v0 + 16);
  _sScTss5Error_pRs_rlE8priority9operationScTyxsAA_pGScPSg_xyYaKYAcntcfCyt_Tgm5(v1, (uint64_t)&async function pointer to partial apply for specialized closure #1 in closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:), v3);
  swift_release();
  swift_task_dealloc();
  long long v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  long long v4;
  long long v5;
  long long v6;
  long long v7;
  uint64_t (*v8)(void);
  uint64_t v10;

  uint64_t v1 = *(void *)(v0 + 144);
  uint64_t v2 = type metadata accessor for TaskPriority();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  uint64_t v4 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v3 + 96) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v3 + 112) = v4;
  long long v5 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v3 + 128) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v3 + 144) = v5;
  long long v6 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v3 + 32) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v3 + 48) = v6;
  long long v7 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v3 + 64) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v3 + 80) = v7;
  outlined retain of Action<Actions.Share.Context, ActionType, ()>(v0 + 16);
  _sScTss5Error_pRs_rlE8priority9operationScTyxsAA_pGScPSg_xyYaKYAcntcfCyt_Tgm5(v1, (uint64_t)&async function pointer to partial apply for specialized closure #1 in closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:), v3);
  swift_release();
  swift_task_dealloc();
  long long v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  long long v4;
  long long v5;
  long long v6;
  long long v7;
  uint64_t (*v8)(void);
  uint64_t v10;

  uint64_t v1 = *(void *)(v0 + 152);
  uint64_t v2 = type metadata accessor for TaskPriority();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  uint64_t v4 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v3 + 128) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v3 + 144) = v4;
  *(void *)(v3 + 160) = *(void *)(v0 + 144);
  long long v5 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v3 + 64) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v3 + 80) = v5;
  long long v6 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v3 + 96) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v3 + 112) = v6;
  long long v7 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v3 + 32) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v3 + 48) = v7;
  outlined retain of Action<Actions.Queue.Context, ActionType, ()>((id *)(v0 + 16));
  _sScTss5Error_pRs_rlE8priority9operationScTyxsAA_pGScPSg_xyYaKYAcntcfCyt_Tgm5(v1, (uint64_t)&async function pointer to partial apply for specialized closure #1 in closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:), v3);
  swift_release();
  swift_task_dealloc();
  long long v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void);
  long long v14;
  long long v15;
  long long v16;
  uint64_t v17;

  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v2 = *(void *)(v0 + 96);
  uint64_t v3 = *(void *)(v0 + 88);
  long long v5 = *(void *)(v0 + 72);
  uint64_t v4 = *(void *)(v0 + 80);
  long long v6 = *(unsigned char *)(v0 + 128);
  long long v7 = *(void *)(v0 + 64);
  long long v8 = *(void *)(v0 + 16);
  long long v9 = *(void *)(v0 + 24);
  long long v10 = type metadata accessor for TaskPriority();
  long long v14 = *(_OWORD *)(v0 + 32);
  long long v15 = *(_OWORD *)(v0 + 48);
  uint64_t v16 = *(_OWORD *)(v0 + 104);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v8, 1, 1, v10);
  long long v11 = swift_allocObject();
  *(void *)(v11 + 16) = 0;
  *(void *)(v11 + 24) = 0;
  *(void *)(v11 + 32) = v9;
  *(_OWORD *)(v11 + 40) = v14;
  *(_OWORD *)(v11 + 56) = v15;
  *(void *)(v11 + 72) = v7;
  *(unsigned char *)(v11 + 80) = v6;
  *(void *)(v11 + 88) = v5;
  *(void *)(v11 + 96) = v4;
  *(void *)(v11 + 104) = v3;
  *(void *)(v11 + 112) = v2;
  *(_OWORD *)(v11 + 120) = v16;
  *(void *)(v11 + 136) = v1;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  _sScTss5Error_pRs_rlE8priority9operationScTyxsAA_pGScPSg_xyYaKYAcntcfCyt_Tgm5(v8, (uint64_t)&async function pointer to partial apply for specialized closure #1 in closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:), v11);
  swift_release();
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void);
  long long v14;
  long long v15;
  long long v16;
  uint64_t v17;

  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v2 = *(void *)(v0 + 96);
  uint64_t v3 = *(void *)(v0 + 88);
  long long v5 = *(void *)(v0 + 72);
  uint64_t v4 = *(void *)(v0 + 80);
  long long v6 = *(unsigned char *)(v0 + 128);
  long long v7 = *(void *)(v0 + 64);
  long long v8 = *(void *)(v0 + 16);
  long long v9 = *(void *)(v0 + 24);
  long long v10 = type metadata accessor for TaskPriority();
  long long v14 = *(_OWORD *)(v0 + 32);
  long long v15 = *(_OWORD *)(v0 + 48);
  uint64_t v16 = *(_OWORD *)(v0 + 104);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v8, 1, 1, v10);
  long long v11 = swift_allocObject();
  *(void *)(v11 + 16) = 0;
  *(void *)(v11 + 24) = 0;
  *(void *)(v11 + 32) = v9;
  *(_OWORD *)(v11 + 40) = v14;
  *(_OWORD *)(v11 + 56) = v15;
  *(void *)(v11 + 72) = v7;
  *(unsigned char *)(v11 + 80) = v6;
  *(void *)(v11 + 88) = v5;
  *(void *)(v11 + 96) = v4;
  *(void *)(v11 + 104) = v3;
  *(void *)(v11 + 112) = v2;
  *(_OWORD *)(v11 + 120) = v16;
  *(void *)(v11 + 136) = v1;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  _sScTss5Error_pRs_rlE8priority9operationScTyxsAA_pGScPSg_xyYaKYAcntcfCyt_Tgm5(v8, (uint64_t)&async function pointer to partial apply for specialized closure #1 in closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:), v11);
  swift_release();
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void);
  long long v14;
  long long v15;
  long long v16;
  uint64_t v17;

  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v2 = *(void *)(v0 + 96);
  uint64_t v3 = *(void *)(v0 + 88);
  long long v5 = *(void *)(v0 + 72);
  uint64_t v4 = *(void *)(v0 + 80);
  long long v6 = *(unsigned char *)(v0 + 128);
  long long v7 = *(void *)(v0 + 64);
  long long v8 = *(void *)(v0 + 16);
  long long v9 = *(void *)(v0 + 24);
  long long v10 = type metadata accessor for TaskPriority();
  long long v14 = *(_OWORD *)(v0 + 32);
  long long v15 = *(_OWORD *)(v0 + 48);
  uint64_t v16 = *(_OWORD *)(v0 + 104);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v8, 1, 1, v10);
  long long v11 = swift_allocObject();
  *(void *)(v11 + 16) = 0;
  *(void *)(v11 + 24) = 0;
  *(void *)(v11 + 32) = v9;
  *(_OWORD *)(v11 + 40) = v14;
  *(_OWORD *)(v11 + 56) = v15;
  *(void *)(v11 + 72) = v7;
  *(unsigned char *)(v11 + 80) = v6;
  *(void *)(v11 + 88) = v5;
  *(void *)(v11 + 96) = v4;
  *(void *)(v11 + 104) = v3;
  *(void *)(v11 + 112) = v2;
  *(_OWORD *)(v11 + 120) = v16;
  *(void *)(v11 + 136) = v1;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  _sScTss5Error_pRs_rlE8priority9operationScTyxsAA_pGScPSg_xyYaKYAcntcfCyt_Tgm5(v8, (uint64_t)&async function pointer to partial apply for specialized closure #1 in closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:), v11);
  swift_release();
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  long long v4;
  long long v5;
  long long v6;
  long long v7;
  uint64_t (*v8)(void);
  uint64_t v10;

  uint64_t v1 = *(void *)(v0 + 144);
  uint64_t v2 = type metadata accessor for TaskPriority();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  uint64_t v4 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v3 + 96) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v3 + 112) = v4;
  long long v5 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v3 + 128) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v3 + 144) = v5;
  long long v6 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v3 + 32) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v3 + 48) = v6;
  long long v7 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v3 + 64) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v3 + 80) = v7;
  outlined retain of Action<Actions.RemoveDownload.Context, ActionType, ()>(v0 + 16);
  _sScTss5Error_pRs_rlE8priority9operationScTyxsAA_pGScPSg_xyYaKYAcntcfCyt_Tgm5(v1, (uint64_t)&async function pointer to partial apply for specialized closure #1 in closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:), v3);
  swift_release();
  swift_task_dealloc();
  long long v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  long long v4;
  long long v5;
  long long v6;
  long long v7;
  uint64_t (*v8)(void);
  uint64_t v10;

  uint64_t v1 = *(void *)(v0 + 144);
  uint64_t v2 = type metadata accessor for TaskPriority();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  uint64_t v4 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v3 + 96) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v3 + 112) = v4;
  long long v5 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v3 + 128) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v3 + 144) = v5;
  long long v6 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v3 + 32) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v3 + 48) = v6;
  long long v7 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v3 + 64) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v3 + 80) = v7;
  outlined retain of Action<Actions.RemoveDownload.Context, ActionType, ()>(v0 + 16);
  _sScTss5Error_pRs_rlE8priority9operationScTyxsAA_pGScPSg_xyYaKYAcntcfCyt_Tgm5(v1, (uint64_t)&async function pointer to partial apply for specialized closure #1 in closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:), v3);
  swift_release();
  swift_task_dealloc();
  long long v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void);
  long long v14;
  long long v15;
  long long v16;
  uint64_t v17;

  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v2 = *(void *)(v0 + 96);
  uint64_t v3 = *(void *)(v0 + 88);
  long long v5 = *(void *)(v0 + 72);
  uint64_t v4 = *(void *)(v0 + 80);
  long long v6 = *(unsigned char *)(v0 + 128);
  long long v7 = *(void *)(v0 + 64);
  long long v8 = *(void *)(v0 + 16);
  long long v9 = *(void *)(v0 + 24);
  long long v10 = type metadata accessor for TaskPriority();
  long long v14 = *(_OWORD *)(v0 + 32);
  long long v15 = *(_OWORD *)(v0 + 48);
  uint64_t v16 = *(_OWORD *)(v0 + 104);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v8, 1, 1, v10);
  long long v11 = swift_allocObject();
  *(void *)(v11 + 16) = 0;
  *(void *)(v11 + 24) = 0;
  *(void *)(v11 + 32) = v9;
  *(_OWORD *)(v11 + 40) = v14;
  *(_OWORD *)(v11 + 56) = v15;
  *(void *)(v11 + 72) = v7;
  *(unsigned char *)(v11 + 80) = v6;
  *(void *)(v11 + 88) = v5;
  *(void *)(v11 + 96) = v4;
  *(void *)(v11 + 104) = v3;
  *(void *)(v11 + 112) = v2;
  *(_OWORD *)(v11 + 120) = v16;
  *(void *)(v11 + 136) = v1;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  _sScTss5Error_pRs_rlE8priority9operationScTyxsAA_pGScPSg_xyYaKYAcntcfCyt_Tgm5(v8, (uint64_t)&async function pointer to partial apply for specialized closure #1 in closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:), v11);
  swift_release();
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void);
  long long v14;
  long long v15;
  long long v16;
  uint64_t v17;

  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v2 = *(void *)(v0 + 96);
  uint64_t v3 = *(void *)(v0 + 88);
  long long v5 = *(void *)(v0 + 72);
  uint64_t v4 = *(void *)(v0 + 80);
  long long v6 = *(unsigned char *)(v0 + 128);
  long long v7 = *(void *)(v0 + 64);
  long long v8 = *(void *)(v0 + 16);
  long long v9 = *(void *)(v0 + 24);
  long long v10 = type metadata accessor for TaskPriority();
  long long v14 = *(_OWORD *)(v0 + 32);
  long long v15 = *(_OWORD *)(v0 + 48);
  uint64_t v16 = *(_OWORD *)(v0 + 104);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v8, 1, 1, v10);
  long long v11 = swift_allocObject();
  *(void *)(v11 + 16) = 0;
  *(void *)(v11 + 24) = 0;
  *(void *)(v11 + 32) = v9;
  *(_OWORD *)(v11 + 40) = v14;
  *(_OWORD *)(v11 + 56) = v15;
  *(void *)(v11 + 72) = v7;
  *(unsigned char *)(v11 + 80) = v6;
  *(void *)(v11 + 88) = v5;
  *(void *)(v11 + 96) = v4;
  *(void *)(v11 + 104) = v3;
  *(void *)(v11 + 112) = v2;
  *(_OWORD *)(v11 + 120) = v16;
  *(void *)(v11 + 136) = v1;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  _sScTss5Error_pRs_rlE8priority9operationScTyxsAA_pGScPSg_xyYaKYAcntcfCyt_Tgm5(v8, (uint64_t)&async function pointer to partial apply for specialized closure #1 in closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:), v11);
  swift_release();
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void);
  long long v14;
  long long v15;
  long long v16;
  uint64_t v17;

  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v2 = *(void *)(v0 + 96);
  uint64_t v3 = *(void *)(v0 + 88);
  long long v5 = *(void *)(v0 + 72);
  uint64_t v4 = *(void *)(v0 + 80);
  long long v6 = *(unsigned char *)(v0 + 128);
  long long v7 = *(void *)(v0 + 64);
  long long v8 = *(void *)(v0 + 16);
  long long v9 = *(void *)(v0 + 24);
  long long v10 = type metadata accessor for TaskPriority();
  long long v14 = *(_OWORD *)(v0 + 32);
  long long v15 = *(_OWORD *)(v0 + 48);
  uint64_t v16 = *(_OWORD *)(v0 + 104);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v8, 1, 1, v10);
  long long v11 = swift_allocObject();
  *(void *)(v11 + 16) = 0;
  *(void *)(v11 + 24) = 0;
  *(void *)(v11 + 32) = v9;
  *(_OWORD *)(v11 + 40) = v14;
  *(_OWORD *)(v11 + 56) = v15;
  *(void *)(v11 + 72) = v7;
  *(unsigned char *)(v11 + 80) = v6;
  *(void *)(v11 + 88) = v5;
  *(void *)(v11 + 96) = v4;
  *(void *)(v11 + 104) = v3;
  *(void *)(v11 + 112) = v2;
  *(_OWORD *)(v11 + 120) = v16;
  *(void *)(v11 + 136) = v1;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  _sScTss5Error_pRs_rlE8priority9operationScTyxsAA_pGScPSg_xyYaKYAcntcfCyt_Tgm5(v8, (uint64_t)&async function pointer to partial apply for specialized closure #1 in closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:), v11);
  swift_release();
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void);
  long long v14;
  long long v15;
  long long v16;
  uint64_t v17;

  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v2 = *(void *)(v0 + 96);
  uint64_t v3 = *(void *)(v0 + 88);
  long long v5 = *(void *)(v0 + 72);
  uint64_t v4 = *(void *)(v0 + 80);
  long long v6 = *(unsigned char *)(v0 + 128);
  long long v7 = *(void *)(v0 + 64);
  long long v8 = *(void *)(v0 + 16);
  long long v9 = *(void *)(v0 + 24);
  long long v10 = type metadata accessor for TaskPriority();
  long long v14 = *(_OWORD *)(v0 + 32);
  long long v15 = *(_OWORD *)(v0 + 48);
  uint64_t v16 = *(_OWORD *)(v0 + 104);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v8, 1, 1, v10);
  long long v11 = swift_allocObject();
  *(void *)(v11 + 16) = 0;
  *(void *)(v11 + 24) = 0;
  *(void *)(v11 + 32) = v9;
  *(_OWORD *)(v11 + 40) = v14;
  *(_OWORD *)(v11 + 56) = v15;
  *(void *)(v11 + 72) = v7;
  *(unsigned char *)(v11 + 80) = v6;
  *(void *)(v11 + 88) = v5;
  *(void *)(v11 + 96) = v4;
  *(void *)(v11 + 104) = v3;
  *(void *)(v11 + 112) = v2;
  *(_OWORD *)(v11 + 120) = v16;
  *(void *)(v11 + 136) = v1;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  _sScTss5Error_pRs_rlE8priority9operationScTyxsAA_pGScPSg_xyYaKYAcntcfCyt_Tgm5(v8, (uint64_t)&async function pointer to partial apply for specialized closure #1 in closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:), v11);
  swift_release();
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void);
  long long v14;
  long long v15;
  long long v16;
  uint64_t v17;

  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v2 = *(void *)(v0 + 96);
  uint64_t v3 = *(void *)(v0 + 88);
  long long v5 = *(void *)(v0 + 72);
  uint64_t v4 = *(void *)(v0 + 80);
  long long v6 = *(unsigned char *)(v0 + 128);
  long long v7 = *(void *)(v0 + 64);
  long long v8 = *(void *)(v0 + 16);
  long long v9 = *(void *)(v0 + 24);
  long long v10 = type metadata accessor for TaskPriority();
  long long v14 = *(_OWORD *)(v0 + 32);
  long long v15 = *(_OWORD *)(v0 + 48);
  uint64_t v16 = *(_OWORD *)(v0 + 104);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v8, 1, 1, v10);
  long long v11 = swift_allocObject();
  *(void *)(v11 + 16) = 0;
  *(void *)(v11 + 24) = 0;
  *(void *)(v11 + 32) = v9;
  *(_OWORD *)(v11 + 40) = v14;
  *(_OWORD *)(v11 + 56) = v15;
  *(void *)(v11 + 72) = v7;
  *(unsigned char *)(v11 + 80) = v6;
  *(void *)(v11 + 88) = v5;
  *(void *)(v11 + 96) = v4;
  *(void *)(v11 + 104) = v3;
  *(void *)(v11 + 112) = v2;
  *(_OWORD *)(v11 + 120) = v16;
  *(void *)(v11 + 136) = v1;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  _sScTss5Error_pRs_rlE8priority9operationScTyxsAA_pGScPSg_xyYaKYAcntcfCyt_Tgm5(v8, (uint64_t)&async function pointer to partial apply for specialized closure #1 in closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:), v11);
  swift_release();
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void);
  long long v14;
  long long v15;
  uint64_t v16;

  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v2 = *(void *)(v0 + 80);
  uint64_t v3 = *(void *)(v0 + 72);
  long long v5 = *(void *)(v0 + 56);
  uint64_t v4 = *(void *)(v0 + 64);
  long long v6 = *(unsigned char *)(v0 + 112);
  long long v7 = *(void *)(v0 + 48);
  long long v8 = *(void *)(v0 + 16);
  long long v9 = *(void *)(v0 + 24);
  long long v10 = type metadata accessor for TaskPriority();
  long long v14 = *(_OWORD *)(v0 + 32);
  long long v15 = *(_OWORD *)(v0 + 88);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v8, 1, 1, v10);
  long long v11 = swift_allocObject();
  *(void *)(v11 + 16) = 0;
  *(void *)(v11 + 24) = 0;
  *(void *)(v11 + 32) = v9;
  *(_OWORD *)(v11 + 40) = v14;
  *(void *)(v11 + 56) = v7;
  *(unsigned char *)(v11 + 64) = v6;
  *(void *)(v11 + 72) = v5;
  *(void *)(v11 + 80) = v4;
  *(void *)(v11 + 88) = v3;
  *(void *)(v11 + 96) = v2;
  *(_OWORD *)(v11 + 104) = v15;
  *(void *)(v11 + 120) = v1;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  _sScTss5Error_pRs_rlE8priority9operationScTyxsAA_pGScPSg_xyYaKYAcntcfCyt_Tgm5(v8, (uint64_t)&async function pointer to partial apply for specialized closure #1 in closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:), v11);
  swift_release();
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t PlaylistContext.entry.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for Playlist.Entry();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t PlaylistContext.entry.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for Playlist.Entry();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t PlaylistContext.playlist.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PlaylistContext() + 20);
  uint64_t v4 = type metadata accessor for Playlist();
  long long v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for PlaylistContext()
{
  uint64_t result = type metadata singleton initialization cache for PlaylistContext;
  if (!type metadata singleton initialization cache for PlaylistContext) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t PlaylistContext.playlist.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PlaylistContext() + 20);
  uint64_t v4 = type metadata accessor for Playlist();
  long long v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

CFRange (__swiftcall *PlaylistContext.playlist.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

uint64_t PlaylistContext.init(entry:playlist:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for Playlist.Entry();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a3, a1, v6);
  uint64_t v7 = a3 + *(int *)(type metadata accessor for PlaylistContext() + 20);
  uint64_t v8 = type metadata accessor for Playlist();
  long long v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32);

  return v9(v7, a2, v8);
}

__n128 MusicItem.actionMenu(playbackIntent:playbackController:library:playlistContext:alertPresenter:noticePresenter:presentationSource:shareSheetPresenter:navigationPusher:playlistPickerPresenter:playActivityFeatureName:playActivityRecommendationData:)@<Q0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, unint64_t a7@<X7>, uint64_t a8@<X8>, long long a9, long long a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v33 = a4;
  unint64_t v32 = a7;
  *(void *)&long long v36 = a6;
  *(void *)&long long v35 = a5;
  long long v31 = a9;
  long long v30 = a10;
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  __chkstk_darwin(v18 - 8);
  uint64_t v20 = (char *)&v30 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PlaylistContext?);
  __chkstk_darwin(v21 - 8);
  uint64_t v23 = (char *)&v30 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for PlaylistContext();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v23, 1, 1, v24);
  uint64_t v25 = type metadata accessor for Actions.MetricsReportingContext();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v20, 1, 1, v25);
  specialized static MusicActions.actionMenu(item:playbackIntent:playbackController:library:playlistContext:alertPresenter:noticePresenter:presentationSource:shareSheetPresenter:navigationPusher:playlistPickerPresenter:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)(v34, a1, a2, a3, (uint64_t)v23, v33, v35, v36, (uint64_t *)v37, v32, v31, *((unint64_t *)&v31 + 1), v30, *((uint64_t *)&v30 + 1), a11, a12, (uint64_t)v20, a13, a14);
  long long v35 = v37[1];
  long long v36 = v37[0];
  long long v34 = v37[2];
  uint64_t v26 = v38;
  uint64_t v27 = v39;
  outlined destroy of TaskPriority?((uint64_t)v20, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  outlined destroy of TaskPriority?((uint64_t)v23, &demangling cache variable for type metadata for PlaylistContext?);
  __n128 result = v40;
  long long v29 = v35;
  *(_OWORD *)a8 = v36;
  *(_OWORD *)(a8 + 16) = v29;
  *(_OWORD *)(a8 + 32) = v34;
  *(void *)(a8 + 48) = v26;
  *(void *)(a8 + 56) = v27;
  *(__n128 *)(a8 + 64) = result;
  return result;
}

uint64_t GenericMusicItem.actionMenu(playbackIntent:playbackController:library:playlistContext:alertPresenter:noticePresenter:presentationSource:shareSheetPresenter:navigationPusher:playlistPickerPresenter:playActivityFeatureName:playActivityRecommendationData:)@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, unint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>, uint64_t a10, unint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unint64_t a15)
{
  unint64_t v225 = a8;
  uint64_t v232 = a7;
  unint64_t v233 = a6;
  uint64_t v229 = a5;
  uint64_t v203 = a4;
  uint64_t v228 = a3;
  v227 = a2;
  v226 = a1;
  v230 = a9;
  unint64_t v221 = a15;
  uint64_t v222 = a14;
  uint64_t v223 = a13;
  uint64_t v224 = a12;
  unint64_t v220 = a11;
  uint64_t v219 = type metadata accessor for UploadedVideo();
  uint64_t v177 = *(void *)(v219 - 8);
  __chkstk_darwin(v219);
  v176 = (char *)&v176 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v182 = type metadata accessor for TVShow();
  uint64_t v179 = *(void *)(v182 - 8);
  __chkstk_darwin(v182);
  v181 = (char *)&v176 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v186 = type metadata accessor for TVSeason();
  uint64_t v180 = *(void *)(v186 - 8);
  __chkstk_darwin(v186);
  v185 = (char *)&v176 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v189 = type metadata accessor for TVEpisode();
  uint64_t v184 = *(void *)(v189 - 8);
  __chkstk_darwin(v189);
  v183 = (char *)&v176 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v192 = type metadata accessor for Station();
  uint64_t v188 = *(void *)(v192 - 8);
  __chkstk_darwin(v192);
  v187 = (char *)&v176 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v193 = type metadata accessor for Song();
  uint64_t v191 = *(void *)(v193 - 8);
  __chkstk_darwin(v193);
  v190 = (char *)&v176 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v198 = type metadata accessor for RadioShow();
  uint64_t v195 = *(void *)(v198 - 8);
  __chkstk_darwin(v198);
  v194 = (char *)&v176 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v202 = type metadata accessor for Playlist();
  uint64_t v197 = *(void *)(v202 - 8);
  __chkstk_darwin(v202);
  v196 = (char *)&v176 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v201 = type metadata accessor for MusicVideo();
  uint64_t v200 = *(void *)(v201 - 8);
  __chkstk_darwin(v201);
  v199 = (char *)&v176 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v208 = type metadata accessor for MusicMovie();
  uint64_t v205 = *(void *)(v208 - 8);
  __chkstk_darwin(v208);
  v204 = (char *)&v176 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v211 = type metadata accessor for Genre();
  uint64_t v207 = *(void *)(v211 - 8);
  __chkstk_darwin(v211);
  v206 = (char *)&v176 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v215 = type metadata accessor for EditorialItem();
  uint64_t v210 = *(void *)(v215 - 8);
  __chkstk_darwin(v215);
  v209 = (char *)&v176 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v214 = type metadata accessor for Curator();
  uint64_t v213 = *(void *)(v214 - 8);
  __chkstk_darwin(v214);
  v212 = (char *)&v176 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v218 = type metadata accessor for Artist();
  uint64_t v217 = *(void *)(v218 - 8);
  __chkstk_darwin(v218);
  v216 = (char *)&v176 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  __chkstk_darwin(v29 - 8);
  long long v31 = (char *)&v176 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PlaylistContext?);
  __chkstk_darwin(v32 - 8);
  long long v34 = (char *)&v176 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = type metadata accessor for Album();
  uint64_t v36 = *(void *)(v35 - 8);
  __chkstk_darwin(v35);
  uint64_t v38 = (char *)&v176 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = type metadata accessor for GenericMusicItem();
  uint64_t v40 = *(void *)(v39 - 8);
  uint64_t v41 = __chkstk_darwin(v39);
  v178 = (char *)&v176 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v41);
  long long v44 = (char *)&v176 - v43;
  uint64_t v45 = *(void (**)(char *, uint64_t, uint64_t))(v40 + 16);
  v45((char *)&v176 - v43, v231, v39);
  int v46 = (*(uint64_t (**)(char *, uint64_t))(v40 + 88))(v44, v39);
  if (v46 == enum case for GenericMusicItem.album(_:))
  {
    (*(void (**)(char *, uint64_t))(v40 + 96))(v44, v39);
    (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v38, v44, v35);
    uint64_t v47 = type metadata accessor for PlaylistContext();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v34, 1, 1, v47);
    uint64_t v48 = type metadata accessor for Actions.MetricsReportingContext();
    long long v237 = 0u;
    long long v238 = 0u;
    uint64_t v239 = 0;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v31, 1, 1, v48);
    specialized static MusicActions.actionMenu(item:playbackIntent:playbackController:library:playlistContext:alertPresenter:noticePresenter:presentationSource:shareSheetPresenter:navigationPusher:playlistPickerPresenter:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)((uint64_t)v38, v226, v227, v228, (uint64_t)v34, v229, v233, v232, &v240, v225, (uint64_t)&v237, v220, v224, v223, v222, v221, (uint64_t)v31);
    uint64_t v232 = v240;
    unint64_t v233 = v241;
    uint64_t v49 = v243;
    uint64_t v231 = v242;
    uint64_t v50 = v245;
    uint64_t v229 = v244;
    uint64_t v51 = v246;
    unsigned int v52 = v247;
    uint64_t v53 = v248;
    uint64_t v54 = (uint64_t)v31;
    uint64_t v55 = v249;
    outlined destroy of TaskPriority?(v54, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
    outlined destroy of TaskPriority?((uint64_t)&v237, &demangling cache variable for type metadata for NavigationPushing?);
    outlined destroy of TaskPriority?((uint64_t)v34, &demangling cache variable for type metadata for PlaylistContext?);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v38, v35);
  }
  else
  {
    uint64_t v57 = v219;
    if (v46 == enum case for GenericMusicItem.artist(_:))
    {
      (*(void (**)(char *, uint64_t))(v40 + 96))(v44, v39);
      uint64_t v58 = v217;
      uint64_t v59 = (uint64_t)v216;
      uint64_t v60 = v218;
      (*(void (**)(char *, char *, uint64_t))(v217 + 32))(v216, v44, v218);
      uint64_t v61 = type metadata accessor for PlaylistContext();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v61 - 8) + 56))(v34, 1, 1, v61);
      uint64_t v239 = 0;
      long long v237 = 0u;
      long long v238 = 0u;
      uint64_t v62 = type metadata accessor for Actions.MetricsReportingContext();
      long long v234 = 0u;
      long long v235 = 0u;
      uint64_t v236 = 0;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v62 - 8) + 56))(v31, 1, 1, v62);
      specialized static MusicActions.actionMenu(item:playbackIntent:playbackController:library:playlistContext:alertPresenter:noticePresenter:presentationSource:shareSheetPresenter:navigationPusher:playlistPickerPresenter:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)(v59, v226, v227, v228, (uint64_t)v34, v229, v233, v232, &v240, v225, (uint64_t)&v237, (unint64_t)&v234, v224, v223, v222, v221, (uint64_t)v31);
      uint64_t v232 = v240;
      unint64_t v233 = v241;
      uint64_t v49 = v243;
      uint64_t v231 = v242;
      uint64_t v50 = v245;
      uint64_t v229 = v244;
      uint64_t v51 = v246;
      unsigned int v52 = v247;
      uint64_t v53 = v248;
      uint64_t v63 = (uint64_t)v31;
      uint64_t v55 = v249;
      outlined destroy of TaskPriority?(v63, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
      outlined destroy of TaskPriority?((uint64_t)&v234, &demangling cache variable for type metadata for PlaylistPickerPresenting?);
      outlined destroy of TaskPriority?((uint64_t)&v237, &demangling cache variable for type metadata for NavigationPushing?);
      outlined destroy of TaskPriority?((uint64_t)v34, &demangling cache variable for type metadata for PlaylistContext?);
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v58 + 8))(v59, v60);
    }
    else if (v46 == enum case for GenericMusicItem.curator(_:))
    {
      unint64_t v64 = v232;
      (*(void (**)(char *, uint64_t))(v40 + 96))(v44, v39);
      uint64_t v65 = v213;
      uint64_t v66 = (uint64_t)v212;
      uint64_t v67 = v214;
      (*(void (**)(char *, char *, uint64_t))(v213 + 32))(v212, v44, v214);
      uint64_t v68 = type metadata accessor for PlaylistContext();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v68 - 8) + 56))(v34, 1, 1, v68);
      uint64_t v239 = 0;
      long long v237 = 0u;
      long long v238 = 0u;
      uint64_t v69 = type metadata accessor for Actions.MetricsReportingContext();
      long long v234 = 0u;
      long long v235 = 0u;
      uint64_t v236 = 0;
      uint64_t v70 = v31;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v69 - 8) + 56))(v31, 1, 1, v69);
      specialized static MusicActions.actionMenu(item:playbackIntent:playbackController:library:playlistContext:alertPresenter:noticePresenter:presentationSource:shareSheetPresenter:navigationPusher:playlistPickerPresenter:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)(v66, v226, v227, v228, (uint64_t)v34, v229, v233, v64, &v240, v225, (uint64_t)&v237, (unint64_t)&v234, v224, v223, v222, v221, (uint64_t)v31);
      uint64_t v232 = v240;
      unint64_t v233 = v241;
      uint64_t v49 = v243;
      uint64_t v231 = v242;
      uint64_t v50 = v245;
      uint64_t v229 = v244;
      uint64_t v51 = v246;
      unsigned int v52 = v247;
      uint64_t v55 = v249;
      uint64_t v71 = (uint64_t)v70;
      uint64_t v53 = v248;
      outlined destroy of TaskPriority?(v71, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
      outlined destroy of TaskPriority?((uint64_t)&v234, &demangling cache variable for type metadata for PlaylistPickerPresenting?);
      outlined destroy of TaskPriority?((uint64_t)&v237, &demangling cache variable for type metadata for NavigationPushing?);
      outlined destroy of TaskPriority?((uint64_t)v34, &demangling cache variable for type metadata for PlaylistContext?);
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v65 + 8))(v66, v67);
    }
    else
    {
      uint64_t v72 = (uint64_t)v34;
      if (v46 == enum case for GenericMusicItem.editorialItem(_:))
      {
        unint64_t v73 = v232;
        (*(void (**)(char *, uint64_t))(v40 + 96))(v44, v39);
        uint64_t v74 = v210;
        uint64_t v75 = (uint64_t)v209;
        (*(void (**)(char *, char *, uint64_t))(v210 + 32))(v209, v44, v215);
        uint64_t v76 = type metadata accessor for PlaylistContext();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v76 - 8) + 56))(v34, 1, 1, v76);
        uint64_t v239 = 0;
        long long v237 = 0u;
        long long v238 = 0u;
        uint64_t v77 = type metadata accessor for Actions.MetricsReportingContext();
        long long v234 = 0u;
        long long v235 = 0u;
        uint64_t v236 = 0;
        uint64_t v78 = (uint64_t)v31;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v77 - 8) + 56))(v31, 1, 1, v77);
        specialized static MusicActions.actionMenu(item:playbackIntent:playbackController:library:playlistContext:alertPresenter:noticePresenter:presentationSource:shareSheetPresenter:navigationPusher:playlistPickerPresenter:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)(v75, v226, v227, v228, v72, v229, v233, v73, &v240, v225, (uint64_t)&v237, (unint64_t)&v234, v224, v223, v222, v221, (uint64_t)v31);
        uint64_t v232 = v240;
        unint64_t v233 = v241;
        uint64_t v49 = v243;
        uint64_t v231 = v242;
        uint64_t v50 = v245;
        uint64_t v229 = v244;
        uint64_t v51 = v246;
        unsigned int v52 = v247;
        uint64_t v53 = v248;
        uint64_t v55 = v249;
        outlined destroy of TaskPriority?(v78, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
        outlined destroy of TaskPriority?((uint64_t)&v234, &demangling cache variable for type metadata for PlaylistPickerPresenting?);
        outlined destroy of TaskPriority?((uint64_t)&v237, &demangling cache variable for type metadata for NavigationPushing?);
        outlined destroy of TaskPriority?(v72, &demangling cache variable for type metadata for PlaylistContext?);
        uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v74 + 8))(v75, v215);
      }
      else
      {
        uint64_t v218 = (uint64_t)v34;
        unint64_t v79 = v233;
        if (v46 == enum case for GenericMusicItem.genre(_:))
        {
          unint64_t v80 = v232;
          (*(void (**)(char *, uint64_t))(v40 + 96))(v44, v39);
          uint64_t v81 = v207;
          unint64_t v82 = v79;
          uint64_t v83 = (uint64_t)v206;
          (*(void (**)(void))(v207 + 32))();
          uint64_t v84 = type metadata accessor for PlaylistContext();
          uint64_t v85 = v218;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v84 - 8) + 56))(v218, 1, 1, v84);
          uint64_t v239 = 0;
          long long v237 = 0u;
          long long v238 = 0u;
          uint64_t v86 = type metadata accessor for Actions.MetricsReportingContext();
          long long v234 = 0u;
          long long v235 = 0u;
          uint64_t v236 = 0;
          uint64_t v87 = v31;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v86 - 8) + 56))(v31, 1, 1, v86);
          specialized static MusicActions.actionMenu(item:playbackIntent:playbackController:library:playlistContext:alertPresenter:noticePresenter:presentationSource:shareSheetPresenter:navigationPusher:playlistPickerPresenter:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)(v83, v226, v227, v228, v85, v229, v82, v80, &v240, v225, (uint64_t)&v237, (unint64_t)&v234, v224, v223, v222, v221, (uint64_t)v31);
          uint64_t v232 = v240;
          unint64_t v233 = v241;
          uint64_t v49 = v243;
          uint64_t v231 = v242;
          uint64_t v50 = v245;
          uint64_t v229 = v244;
          uint64_t v51 = v246;
          uint64_t v88 = v248;
          uint64_t v55 = v249;
          uint64_t v89 = (uint64_t)v87;
          unsigned int v52 = v247;
          outlined destroy of TaskPriority?(v89, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
          outlined destroy of TaskPriority?((uint64_t)&v234, &demangling cache variable for type metadata for PlaylistPickerPresenting?);
          outlined destroy of TaskPriority?((uint64_t)&v237, &demangling cache variable for type metadata for NavigationPushing?);
          uint64_t v90 = v85;
          uint64_t v53 = v88;
          outlined destroy of TaskPriority?(v90, &demangling cache variable for type metadata for PlaylistContext?);
          uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v81 + 8))(v83, v211);
        }
        else if (v46 == enum case for GenericMusicItem.musicMovie(_:))
        {
          unint64_t v91 = v232;
          (*(void (**)(char *, uint64_t))(v40 + 96))(v44, v39);
          uint64_t v92 = v205;
          uint64_t v93 = (uint64_t)v204;
          (*(void (**)(char *, char *, uint64_t))(v205 + 32))(v204, v44, v208);
          uint64_t v94 = type metadata accessor for PlaylistContext();
          uint64_t v95 = v218;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v94 - 8) + 56))(v218, 1, 1, v94);
          uint64_t v239 = 0;
          long long v237 = 0u;
          long long v238 = 0u;
          uint64_t v96 = type metadata accessor for Actions.MetricsReportingContext();
          long long v234 = 0u;
          long long v235 = 0u;
          uint64_t v236 = 0;
          unint64_t v97 = v31;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v96 - 8) + 56))(v31, 1, 1, v96);
          specialized static MusicActions.actionMenu(item:playbackIntent:playbackController:library:playlistContext:alertPresenter:noticePresenter:presentationSource:shareSheetPresenter:navigationPusher:playlistPickerPresenter:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)(v93, v226, v227, v228, v95, v229, v79, v91, &v240, v225, (uint64_t)&v237, (unint64_t)&v234, v224, v223, v222, v221, (uint64_t)v31);
          uint64_t v232 = v240;
          unint64_t v233 = v241;
          uint64_t v49 = v243;
          uint64_t v231 = v242;
          uint64_t v50 = v245;
          uint64_t v229 = v244;
          uint64_t v51 = v246;
          uint64_t v98 = v248;
          uint64_t v55 = v249;
          uint64_t v99 = (uint64_t)v97;
          unsigned int v52 = v247;
          outlined destroy of TaskPriority?(v99, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
          outlined destroy of TaskPriority?((uint64_t)&v234, &demangling cache variable for type metadata for PlaylistPickerPresenting?);
          outlined destroy of TaskPriority?((uint64_t)&v237, &demangling cache variable for type metadata for NavigationPushing?);
          uint64_t v100 = v95;
          uint64_t v53 = v98;
          outlined destroy of TaskPriority?(v100, &demangling cache variable for type metadata for PlaylistContext?);
          uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v92 + 8))(v93, v208);
        }
        else if (v46 == enum case for GenericMusicItem.musicVideo(_:))
        {
          unint64_t v101 = v232;
          (*(void (**)(char *, uint64_t))(v40 + 96))(v44, v39);
          uint64_t v102 = v200;
          uint64_t v103 = (uint64_t)v199;
          uint64_t v104 = v201;
          (*(void (**)(char *, char *))(v200 + 32))(v199, v44);
          uint64_t v105 = type metadata accessor for Actions.MetricsReportingContext();
          uint64_t v106 = v31;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v105 - 8) + 56))(v31, 1, 1, v105);
          specialized static MusicActions.actionMenu(item:playbackIntent:playbackController:library:playlistContext:alertPresenter:noticePresenter:presentationSource:shareSheetPresenter:navigationPusher:playlistPickerPresenter:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)(v103, v226, v227, v228, v203, v229, v233, v101, &v240, v225, a10, v220, v224, v223, v222, v221, (uint64_t)v31);
          uint64_t v232 = v240;
          unint64_t v233 = v241;
          uint64_t v49 = v243;
          uint64_t v231 = v242;
          uint64_t v50 = v245;
          uint64_t v229 = v244;
          uint64_t v51 = v246;
          unsigned int v52 = v247;
          uint64_t v55 = v249;
          uint64_t v107 = (uint64_t)v106;
          uint64_t v53 = v248;
          outlined destroy of TaskPriority?(v107, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
          uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v102 + 8))(v103, v104);
        }
        else if (v46 == enum case for GenericMusicItem.playlist(_:))
        {
          unint64_t v108 = v232;
          (*(void (**)(char *, uint64_t))(v40 + 96))(v44, v39);
          uint64_t v109 = v197;
          uint64_t v110 = (uint64_t)v196;
          (*(void (**)(char *, char *, uint64_t))(v197 + 32))(v196, v44, v202);
          uint64_t v111 = type metadata accessor for PlaylistContext();
          uint64_t v112 = v218;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v111 - 8) + 56))(v218, 1, 1, v111);
          uint64_t v113 = type metadata accessor for Actions.MetricsReportingContext();
          long long v237 = 0u;
          long long v238 = 0u;
          uint64_t v239 = 0;
          uint64_t v114 = (uint64_t)v31;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v113 - 8) + 56))(v31, 1, 1, v113);
          specialized static MusicActions.actionMenu(item:playbackIntent:playbackController:library:playlistContext:alertPresenter:noticePresenter:presentationSource:shareSheetPresenter:navigationPusher:playlistPickerPresenter:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)(v110, v226, v227, v228, v112, v229, v233, v108, &v240, v225, (uint64_t)&v237, v220, v224, v223, v222, v221, (uint64_t)v31);
          uint64_t v232 = v240;
          unint64_t v233 = v241;
          uint64_t v49 = v243;
          uint64_t v231 = v242;
          uint64_t v50 = v245;
          uint64_t v229 = v244;
          uint64_t v51 = v246;
          unsigned int v52 = v247;
          uint64_t v53 = v248;
          uint64_t v55 = v249;
          outlined destroy of TaskPriority?(v114, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
          outlined destroy of TaskPriority?((uint64_t)&v237, &demangling cache variable for type metadata for NavigationPushing?);
          outlined destroy of TaskPriority?(v112, &demangling cache variable for type metadata for PlaylistContext?);
          uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v109 + 8))(v110, v202);
        }
        else if (v46 == enum case for GenericMusicItem.radioShow(_:))
        {
          unint64_t v115 = v232;
          (*(void (**)(char *, uint64_t))(v40 + 96))(v44, v39);
          uint64_t v116 = v195;
          uint64_t v117 = (uint64_t)v194;
          (*(void (**)(char *, char *, uint64_t))(v195 + 32))(v194, v44, v198);
          uint64_t v118 = type metadata accessor for PlaylistContext();
          uint64_t v119 = v218;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v118 - 8) + 56))(v218, 1, 1, v118);
          uint64_t v239 = 0;
          long long v237 = 0u;
          long long v238 = 0u;
          uint64_t v120 = type metadata accessor for Actions.MetricsReportingContext();
          long long v234 = 0u;
          long long v235 = 0u;
          uint64_t v236 = 0;
          uint64_t v121 = (uint64_t)v31;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v120 - 8) + 56))(v31, 1, 1, v120);
          specialized static MusicActions.actionMenu(item:playbackIntent:playbackController:library:playlistContext:alertPresenter:noticePresenter:presentationSource:shareSheetPresenter:navigationPusher:playlistPickerPresenter:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)(v117, v226, v227, v228, v119, v229, v233, v115, &v240, v225, (uint64_t)&v237, (unint64_t)&v234, v224, v223, v222, v221, (uint64_t)v31);
          uint64_t v232 = v240;
          unint64_t v233 = v241;
          uint64_t v49 = v243;
          uint64_t v231 = v242;
          uint64_t v50 = v245;
          uint64_t v229 = v244;
          uint64_t v51 = v246;
          unsigned int v52 = v247;
          uint64_t v53 = v248;
          uint64_t v55 = v249;
          outlined destroy of TaskPriority?(v121, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
          outlined destroy of TaskPriority?((uint64_t)&v234, &demangling cache variable for type metadata for PlaylistPickerPresenting?);
          outlined destroy of TaskPriority?((uint64_t)&v237, &demangling cache variable for type metadata for NavigationPushing?);
          outlined destroy of TaskPriority?(v119, &demangling cache variable for type metadata for PlaylistContext?);
          uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v116 + 8))(v117, v198);
        }
        else if (v46 == enum case for GenericMusicItem.song(_:))
        {
          unint64_t v122 = v232;
          (*(void (**)(char *, uint64_t))(v40 + 96))(v44, v39);
          uint64_t v123 = v191;
          uint64_t v124 = (uint64_t)v190;
          (*(void (**)(char *, char *, uint64_t))(v191 + 32))(v190, v44, v193);
          uint64_t v125 = type metadata accessor for Actions.MetricsReportingContext();
          uint64_t v126 = v31;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v125 - 8) + 56))(v31, 1, 1, v125);
          specialized static MusicActions.actionMenu(item:playbackIntent:playbackController:library:playlistContext:alertPresenter:noticePresenter:presentationSource:shareSheetPresenter:navigationPusher:playlistPickerPresenter:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)(v124, v226, v227, v228, v203, v229, v233, v122, &v240, v225, a10, v220, v224, v223, v222, v221, (uint64_t)v31);
          uint64_t v232 = v240;
          unint64_t v233 = v241;
          uint64_t v49 = v243;
          uint64_t v231 = v242;
          uint64_t v50 = v245;
          uint64_t v229 = v244;
          uint64_t v51 = v246;
          unsigned int v52 = v247;
          uint64_t v55 = v249;
          uint64_t v127 = (uint64_t)v126;
          uint64_t v53 = v248;
          outlined destroy of TaskPriority?(v127, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
          uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v123 + 8))(v124, v193);
        }
        else if (v46 == enum case for GenericMusicItem.station(_:))
        {
          unint64_t v128 = v232;
          (*(void (**)(char *, uint64_t))(v40 + 96))(v44, v39);
          uint64_t v129 = v188;
          uint64_t v130 = (uint64_t)v187;
          (*(void (**)(char *, char *, uint64_t))(v188 + 32))(v187, v44, v192);
          uint64_t v131 = type metadata accessor for PlaylistContext();
          uint64_t v132 = v218;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v131 - 8) + 56))(v218, 1, 1, v131);
          uint64_t v239 = 0;
          long long v237 = 0u;
          long long v238 = 0u;
          uint64_t v133 = type metadata accessor for Actions.MetricsReportingContext();
          long long v234 = 0u;
          long long v235 = 0u;
          uint64_t v236 = 0;
          uint64_t v134 = (uint64_t)v31;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v133 - 8) + 56))(v31, 1, 1, v133);
          specialized static MusicActions.actionMenu(item:playbackIntent:playbackController:library:playlistContext:alertPresenter:noticePresenter:presentationSource:shareSheetPresenter:navigationPusher:playlistPickerPresenter:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)(v130, v226, v227, v228, v132, v229, v233, v128, &v240, v225, (uint64_t)&v237, (unint64_t)&v234, v224, v223, v222, v221, (uint64_t)v31);
          uint64_t v232 = v240;
          unint64_t v233 = v241;
          uint64_t v49 = v243;
          uint64_t v231 = v242;
          uint64_t v50 = v245;
          uint64_t v229 = v244;
          uint64_t v51 = v246;
          unsigned int v52 = v247;
          uint64_t v53 = v248;
          uint64_t v55 = v249;
          outlined destroy of TaskPriority?(v134, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
          outlined destroy of TaskPriority?((uint64_t)&v234, &demangling cache variable for type metadata for PlaylistPickerPresenting?);
          outlined destroy of TaskPriority?((uint64_t)&v237, &demangling cache variable for type metadata for NavigationPushing?);
          outlined destroy of TaskPriority?(v132, &demangling cache variable for type metadata for PlaylistContext?);
          uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v129 + 8))(v130, v192);
        }
        else
        {
          unint64_t v135 = v233;
          uint64_t v136 = (uint64_t)v31;
          if (v46 == enum case for GenericMusicItem.tvEpisode(_:))
          {
            uint64_t v137 = (uint64_t)v31;
            unint64_t v138 = v232;
            (*(void (**)(char *, uint64_t))(v40 + 96))(v44, v39);
            uint64_t v139 = v184;
            uint64_t v140 = (uint64_t)v183;
            unint64_t v141 = v135;
            (*(void (**)(char *, char *, uint64_t))(v184 + 32))(v183, v44, v189);
            uint64_t v142 = type metadata accessor for PlaylistContext();
            uint64_t v143 = v218;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v142 - 8) + 56))(v218, 1, 1, v142);
            uint64_t v239 = 0;
            long long v237 = 0u;
            long long v238 = 0u;
            uint64_t v144 = type metadata accessor for Actions.MetricsReportingContext();
            long long v234 = 0u;
            long long v235 = 0u;
            uint64_t v236 = 0;
            uint64_t v145 = v137;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v144 - 8) + 56))(v137, 1, 1, v144);
            specialized static MusicActions.actionMenu(item:playbackIntent:playbackController:library:playlistContext:alertPresenter:noticePresenter:presentationSource:shareSheetPresenter:navigationPusher:playlistPickerPresenter:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)(v140, v226, v227, v228, v143, v229, v141, v138, &v240, v225, (uint64_t)&v237, (unint64_t)&v234, v224, v223, v222, v221, v137);
            uint64_t v232 = v240;
            unint64_t v233 = v241;
            uint64_t v49 = v243;
            uint64_t v231 = v242;
            uint64_t v50 = v245;
            uint64_t v229 = v244;
            uint64_t v51 = v246;
            unsigned int v52 = v247;
            uint64_t v53 = v248;
            uint64_t v55 = v249;
            outlined destroy of TaskPriority?(v145, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
            outlined destroy of TaskPriority?((uint64_t)&v234, &demangling cache variable for type metadata for PlaylistPickerPresenting?);
            outlined destroy of TaskPriority?((uint64_t)&v237, &demangling cache variable for type metadata for NavigationPushing?);
            outlined destroy of TaskPriority?(v143, &demangling cache variable for type metadata for PlaylistContext?);
            uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v139 + 8))(v140, v189);
          }
          else if (v46 == enum case for GenericMusicItem.tvSeason(_:))
          {
            unint64_t v146 = v232;
            (*(void (**)(char *, uint64_t))(v40 + 96))(v44, v39);
            uint64_t v147 = v180;
            uint64_t v148 = (uint64_t)v185;
            (*(void (**)(char *, char *, uint64_t))(v180 + 32))(v185, v44, v186);
            uint64_t v149 = type metadata accessor for PlaylistContext();
            uint64_t v150 = v218;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v149 - 8) + 56))(v218, 1, 1, v149);
            uint64_t v239 = 0;
            long long v237 = 0u;
            long long v238 = 0u;
            uint64_t v151 = type metadata accessor for Actions.MetricsReportingContext();
            long long v234 = 0u;
            long long v235 = 0u;
            uint64_t v236 = 0;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v151 - 8) + 56))(v136, 1, 1, v151);
            specialized static MusicActions.actionMenu(item:playbackIntent:playbackController:library:playlistContext:alertPresenter:noticePresenter:presentationSource:shareSheetPresenter:navigationPusher:playlistPickerPresenter:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)(v148, v226, v227, v228, v150, v229, v135, v146, &v240, v225, (uint64_t)&v237, (unint64_t)&v234, v224, v223, v222, v221, v136);
            uint64_t v232 = v240;
            unint64_t v233 = v241;
            uint64_t v49 = v243;
            uint64_t v231 = v242;
            uint64_t v50 = v245;
            uint64_t v229 = v244;
            uint64_t v51 = v246;
            unsigned int v52 = v247;
            uint64_t v53 = v248;
            uint64_t v152 = v249;
            outlined destroy of TaskPriority?(v136, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
            outlined destroy of TaskPriority?((uint64_t)&v234, &demangling cache variable for type metadata for PlaylistPickerPresenting?);
            outlined destroy of TaskPriority?((uint64_t)&v237, &demangling cache variable for type metadata for NavigationPushing?);
            uint64_t v153 = v150;
            uint64_t v55 = v152;
            outlined destroy of TaskPriority?(v153, &demangling cache variable for type metadata for PlaylistContext?);
            uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v147 + 8))(v185, v186);
          }
          else if (v46 == enum case for GenericMusicItem.tvShow(_:))
          {
            (*(void (**)(char *, uint64_t))(v40 + 96))(v44, v39);
            uint64_t v154 = v179;
            uint64_t v155 = (uint64_t)v181;
            (*(void (**)(char *, char *, uint64_t))(v179 + 32))(v181, v44, v182);
            uint64_t v156 = type metadata accessor for PlaylistContext();
            uint64_t v157 = v218;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v156 - 8) + 56))(v218, 1, 1, v156);
            uint64_t v239 = 0;
            long long v237 = 0u;
            long long v238 = 0u;
            uint64_t v158 = type metadata accessor for Actions.MetricsReportingContext();
            long long v234 = 0u;
            long long v235 = 0u;
            uint64_t v236 = 0;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v158 - 8) + 56))(v136, 1, 1, v158);
            specialized static MusicActions.actionMenu(item:playbackIntent:playbackController:library:playlistContext:alertPresenter:noticePresenter:presentationSource:shareSheetPresenter:navigationPusher:playlistPickerPresenter:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)(v155, v226, v227, v228, v157, v229, v135, v232, &v240, v225, (uint64_t)&v237, (unint64_t)&v234, v224, v223, v222, v221, v136);
            uint64_t v232 = v240;
            unint64_t v233 = v241;
            uint64_t v49 = v243;
            uint64_t v231 = v242;
            uint64_t v50 = v245;
            uint64_t v229 = v244;
            uint64_t v51 = v246;
            unsigned int v52 = v247;
            uint64_t v53 = v248;
            uint64_t v159 = v249;
            outlined destroy of TaskPriority?(v136, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
            outlined destroy of TaskPriority?((uint64_t)&v234, &demangling cache variable for type metadata for PlaylistPickerPresenting?);
            outlined destroy of TaskPriority?((uint64_t)&v237, &demangling cache variable for type metadata for NavigationPushing?);
            uint64_t v160 = v157;
            uint64_t v55 = v159;
            outlined destroy of TaskPriority?(v160, &demangling cache variable for type metadata for PlaylistContext?);
            uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v154 + 8))(v181, v182);
          }
          else if (v46 == enum case for GenericMusicItem.uploadedVideo(_:))
          {
            (*(void (**)(char *, uint64_t))(v40 + 96))(v44, v39);
            uint64_t v163 = v177;
            uint64_t v164 = (uint64_t)v176;
            (*(void (**)(char *, char *, uint64_t))(v177 + 32))(v176, v44, v57);
            uint64_t v165 = type metadata accessor for PlaylistContext();
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v165 - 8) + 56))(v34, 1, 1, v165);
            uint64_t v239 = 0;
            long long v237 = 0u;
            long long v238 = 0u;
            uint64_t v166 = type metadata accessor for Actions.MetricsReportingContext();
            long long v234 = 0u;
            long long v235 = 0u;
            uint64_t v236 = 0;
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v166 - 8) + 56))(v31, 1, 1, v166);
            specialized static MusicActions.actionMenu(item:playbackIntent:playbackController:library:playlistContext:alertPresenter:noticePresenter:presentationSource:shareSheetPresenter:navigationPusher:playlistPickerPresenter:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)(v164, v226, v227, v228, (uint64_t)v34, v229, v233, v232, &v240, v225, (uint64_t)&v237, (unint64_t)&v234, v224, v223, v222, v221, (uint64_t)v31);
            uint64_t v232 = v240;
            unint64_t v233 = v241;
            uint64_t v49 = v243;
            uint64_t v231 = v242;
            uint64_t v50 = v245;
            uint64_t v229 = v244;
            uint64_t v51 = v246;
            unsigned int v52 = v247;
            uint64_t v53 = v248;
            uint64_t v167 = (uint64_t)v31;
            uint64_t v55 = v249;
            outlined destroy of TaskPriority?(v167, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
            outlined destroy of TaskPriority?((uint64_t)&v234, &demangling cache variable for type metadata for PlaylistPickerPresenting?);
            outlined destroy of TaskPriority?((uint64_t)&v237, &demangling cache variable for type metadata for NavigationPushing?);
            outlined destroy of TaskPriority?((uint64_t)v34, &demangling cache variable for type metadata for PlaylistContext?);
            uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v163 + 8))(v164, v57);
          }
          else
          {
            if (one-time initialization token for actions != -1) {
              swift_once();
            }
            uint64_t v168 = type metadata accessor for Logger();
            __swift_project_value_buffer(v168, (uint64_t)static Logger.actions);
            v45(v178, v231, v39);
            v169 = Logger.logObject.getter();
            os_log_type_t v170 = static os_log_type_t.info.getter();
            if (os_log_type_enabled(v169, v170))
            {
              uint64_t v171 = swift_slowAlloc();
              uint64_t v240 = swift_slowAlloc();
              *(_DWORD *)uint64_t v171 = 136315138;
              lazy protocol witness table accessor for type GenericMusicItem and conformance GenericMusicItem(&lazy protocol witness table cache variable for type GenericMusicItem and conformance GenericMusicItem, (void (*)(uint64_t))&type metadata accessor for GenericMusicItem);
              v172 = v178;
              uint64_t v173 = dispatch thunk of CustomStringConvertible.description.getter();
              *(void *)(v171 + 4) = _s2os32getNullTerminatedUTF8PointerImpl_21storingStringOwnersInSVSS_SpyypGSgztF_0(v173, v174, &v240);
              swift_bridgeObjectRelease();
              v175 = *(void (**)(char *, uint64_t))(v40 + 8);
              v175(v172, v39);
              _os_log_impl((void *)&_mh_execute_header, v169, v170, "GenericMusicItem %s actions not handled.", (uint8_t *)v171, 0xCu);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();
            }
            else
            {
              v175 = *(void (**)(char *, uint64_t))(v40 + 8);
              v175(v178, v39);
            }

            uint64_t result = ((uint64_t (*)(char *, uint64_t))v175)(v44, v39);
            uint64_t v232 = 0;
            unint64_t v233 = 0;
            uint64_t v231 = 0;
            uint64_t v49 = 0;
            uint64_t v229 = 0;
            uint64_t v50 = 0;
            uint64_t v51 = 0;
            unsigned int v52 = 0;
            uint64_t v53 = 0;
            uint64_t v55 = 0;
          }
        }
      }
    }
  }
  v161 = v230;
  unint64_t v162 = v233;
  uint64_t *v230 = v232;
  v161[1] = v162;
  v161[2] = v231;
  v161[3] = v49;
  v161[4] = v229;
  v161[5] = v50;
  v161[6] = v51;
  v161[7] = v52;
  v161[8] = v53;
  v161[9] = v55;
  return result;
}

void *closure #1 in static MusicActions.actionMenu(item:playbackIntent:playbackController:library:playlistContext:alertPresenter:noticePresenter:presentationSource:shareSheetPresenter:navigationPusher:playlistPickerPresenter:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unint64_t a15, void *a16)
{
  uint64_t v141 = a8;
  uint64_t v146 = a6;
  *(void *)&long long v155 = a5;
  *(void *)&long long v143 = a4;
  *(void *)&long long v156 = a3;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PlaylistContext?);
  __chkstk_darwin(v19 - 8);
  *(void *)&long long v144 = (char *)&v132 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v142 = type metadata accessor for PlaylistContext();
  *(void *)&long long v145 = *(void *)(v142 - 8);
  uint64_t v21 = __chkstk_darwin(v142);
  uint64_t v139 = v22;
  uint64_t v140 = (void *)((char *)&v132 - (((unint64_t)v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v21);
  *(void *)&long long v157 = (char *)&v132 - v23;
  uint64_t v24 = type metadata accessor for UUID();
  uint64_t v25 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v27 = (char *)&v132 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v30 = *(void *)(v29 + 64);
  __chkstk_darwin(v28 - 8);
  uint64_t v137 = a1;
  outlined init with copy of (String, Any)(a1, (uint64_t)&v167, &demangling cache variable for type metadata for NavigationPushing?);
  uint64_t v153 = a7;
  uint64_t v154 = a2;
  uint64_t v151 = v25;
  *(void *)&long long v152 = v24;
  uint64_t v149 = (uint64_t)&v132 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v150 = v27;
  uint64_t v147 = v29;
  uint64_t v148 = v30;
  if (*((void *)&v168 + 1))
  {
    outlined init with take of AlertPresenting(&v167, (uint64_t)v173);
    outlined init with copy of AlertPresenting(a2, (uint64_t)&v167);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicItem);
    uint64_t v138 = String.init<A>(describing:)();
    long long v31 = v27;
    uint64_t v33 = v32;
    outlined init with copy of AlertPresenting(a2, (uint64_t)&v167);
    outlined init with copy of AlertPresenting((uint64_t)v173, (uint64_t)v163);
    outlined init with copy of (String, Any)(v156, (uint64_t)&v132 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0), &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
    unint64_t v34 = (*(unsigned __int8 *)(v29 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
    uint64_t v35 = swift_allocObject();
    outlined init with take of AlertPresenting(&v167, v35 + 16);
    outlined init with take of AlertPresenting(v163, v35 + 56);
    outlined init with take of PresentationSource?((uint64_t)&v132 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0), v35 + v34, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
    UUID.init()();
    uint64_t v36 = UUID.uuidString.getter();
    uint64_t v38 = v37;
    (*(void (**)(char *, uint64_t))(v25 + 8))(v31, v24);
    strcpy((char *)&v167, "ActionMenu: ");
    BYTE13(v167) = 0;
    HIWORD(v167) = -5120;
    v39._uint64_t countAndFlagsBits = v138;
    v39._object = v33;
    String.append(_:)(v39);
    swift_bridgeObjectRelease();
    long long v40 = v167;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ActionMenu<ActionType>.Element>);
    uint64_t v41 = swift_allocObject();
    *(_OWORD *)(v41 + 16) = xmmword_100493400;
    *(void *)(v41 + 32) = v36;
    *(void *)(v41 + 40) = v38;
    *(_OWORD *)(v41 + 48) = v40;
    *(_OWORD *)(v41 + 64) = xmmword_100493D40;
    *(void *)(v41 + 80) = 0;
    *(void *)(v41 + 88) = 0;
    *(void *)(v41 + 96) = partial apply for closure #1 in closure #1 in static MusicActions.actionMenu(item:playbackIntent:playbackController:library:playlistContext:alertPresenter:noticePresenter:presentationSource:shareSheetPresenter:navigationPusher:playlistPickerPresenter:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:);
    *(void *)(v41 + 104) = v35;
    *(unsigned char *)(v41 + 112) = 1;
    *(void *)&long long v167 = _swiftEmptyArrayStorage;
    specialized Array.append<A>(contentsOf:)((void *)v41);
    unint64_t v135 = (void *)v167;
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v173);
  }
  else
  {
    outlined destroy of TaskPriority?((uint64_t)&v167, &demangling cache variable for type metadata for NavigationPushing?);
    unint64_t v135 = _swiftEmptyArrayStorage;
  }
  uint64_t v42 = v145;
  uint64_t v43 = v144;
  uint64_t v44 = v142;
  outlined init with copy of (String, Any)(v143, v144, &demangling cache variable for type metadata for PlaylistContext?);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v42 + 48))(v43, 1, v44) == 1)
  {
    outlined destroy of TaskPriority?(v43, &demangling cache variable for type metadata for PlaylistContext?);
    uint64_t v45 = _swiftEmptyArrayStorage;
    uint64_t v47 = v154;
    uint64_t v46 = v155;
  }
  else
  {
    uint64_t v49 = v43;
    uint64_t v50 = v157;
    outlined init with take of PlaylistContext(v49, v157);
    uint64_t v47 = v154;
    outlined init with copy of AlertPresenting(v154, (uint64_t)v173);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicItem);
    *(void *)&long long v145 = String.init<A>(describing:)();
    unsigned int v52 = v51;
    uint64_t v53 = (uint64_t)v140;
    outlined init with copy of PlaylistContext(v50, (uint64_t)v140);
    uint64_t v54 = v149;
    outlined init with copy of (String, Any)(v156, v149, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
    unint64_t v55 = (*(unsigned __int8 *)(v42 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80);
    unint64_t v56 = ((unint64_t)v139 + v55 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v57 = (*(unsigned __int8 *)(v147 + 80) + v56 + 8) & ~(unint64_t)*(unsigned __int8 *)(v147 + 80);
    uint64_t v58 = swift_allocObject();
    outlined init with take of PlaylistContext(v53, v58 + v55);
    uint64_t v59 = v155;
    *(void *)(v58 + v56) = v155;
    uint64_t v60 = v58 + v57;
    uint64_t v46 = v59;
    outlined init with take of PresentationSource?(v54, v60, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
    swift_retain();
    uint64_t v61 = v150;
    UUID.init()();
    uint64_t v62 = UUID.uuidString.getter();
    uint64_t v64 = v63;
    (*(void (**)(char *, void))(v151 + 8))(v61, v152);
    strcpy((char *)v173, "ActionMenu: ");
    BYTE13(v173[0]) = 0;
    HIWORD(v173[0]) = -5120;
    v65._uint64_t countAndFlagsBits = v145;
    v65._object = v52;
    String.append(_:)(v65);
    swift_bridgeObjectRelease();
    long long v66 = v173[0];
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ActionMenu<ActionType>.Element>);
    uint64_t v67 = swift_allocObject();
    *(_OWORD *)(v67 + 16) = xmmword_100493400;
    *(void *)(v67 + 32) = v62;
    *(void *)(v67 + 40) = v64;
    *(_OWORD *)(v67 + 48) = v66;
    *(_OWORD *)(v67 + 64) = xmmword_100493D40;
    *(void *)(v67 + 80) = 0;
    *(void *)(v67 + 88) = 0;
    *(void *)(v67 + 96) = partial apply for closure #2 in closure #1 in static MusicActions.actionMenu(item:playbackIntent:playbackController:library:playlistContext:alertPresenter:noticePresenter:presentationSource:shareSheetPresenter:navigationPusher:playlistPickerPresenter:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:);
    *(void *)(v67 + 104) = v58;
    *(unsigned char *)(v67 + 112) = 1;
    *(void *)&v173[0] = _swiftEmptyArrayStorage;
    specialized Array.append<A>(contentsOf:)((void *)v67);
    uint64_t v45 = *(void **)&v173[0];
    outlined destroy of PlaylistContext(v157);
  }
  uint64_t v48 = v153;
  uint64_t v136 = a16;
  outlined init with copy of AlertPresenting(v47, (uint64_t)v163);
  uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicItem);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicLibraryAddable & MusicLibraryActionable);
  *(void *)&long long v157 = v68;
  if (swift_dynamicCast())
  {
    outlined init with take of MusicLibraryActionable & MusicUserRatable(&v167, v173);
    outlined init with copy of AlertPresenting(v48, (uint64_t)&v167);
    uint64_t v69 = v156;
    specialized static MusicActions.libraryActions(item:library:alertPresenter:noticePresenter:presentationSource:playlistPickerPresenter:metricsReportingContext:)(v173, v46, v146, (uint64_t)&v167, v141, a9, v156, (uint64_t)v163);
    long long v144 = v163[1];
    long long v145 = v163[0];
    long long v143 = v163[2];
    uint64_t v70 = v164;
    uint64_t v71 = v165;
    outlined destroy of TaskPriority?((uint64_t)&v167, &demangling cache variable for type metadata for NoticePresenting?);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ActionMenu<ActionType>.Element>);
    uint64_t v72 = swift_allocObject();
    long long v73 = v145;
    *(_OWORD *)(v72 + 16) = xmmword_100493400;
    *(_OWORD *)(v72 + 32) = v73;
    long long v74 = v143;
    *(_OWORD *)(v72 + 48) = v144;
    *(_OWORD *)(v72 + 64) = v74;
    *(void *)(v72 + 80) = v70;
    *(void *)(v72 + 88) = v71;
    *(_OWORD *)(v72 + 96) = v166;
    *(unsigned char *)(v72 + 112) = 1;
    *(void *)&long long v167 = _swiftEmptyArrayStorage;
    specialized Array.append<A>(contentsOf:)((void *)v72);
    uint64_t v75 = (void *)v167;
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v173);
  }
  else
  {
    long long v168 = 0u;
    long long v169 = 0u;
    long long v167 = 0u;
    outlined destroy of TaskPriority?((uint64_t)&v167, &demangling cache variable for type metadata for (MusicLibraryAddable & MusicLibraryActionable)?);
    uint64_t v75 = _swiftEmptyArrayStorage;
    uint64_t v69 = v156;
  }
  *(void *)&long long v145 = a14;
  *(void *)&long long v144 = a13;
  uint64_t v142 = a12;
  *(void *)&long long v143 = a11;
  outlined init with copy of AlertPresenting(v47, (uint64_t)&v167);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PlayableMusicItem);
  char v76 = swift_dynamicCast();
  uint64_t v139 = v75;
  uint64_t v140 = v45;
  uint64_t v138 = a15;
  if ((v76 & 1) == 0)
  {
    uint64_t v162 = 0;
    memset(v161, 0, sizeof(v161));
    outlined destroy of TaskPriority?((uint64_t)v161, &demangling cache variable for type metadata for PlayableMusicItem?);
LABEL_15:
    *(void *)&long long v134 = _swiftEmptyArrayStorage;
    goto LABEL_16;
  }
  outlined init with take of AlertPresenting(v161, (uint64_t)v173);
  if (!a10)
  {
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v173);
    goto LABEL_15;
  }
  id v77 = a10;
  specialized static MusicActions.playbackActions(item:playbackIntent:playbackController:library:alertPresenter:noticePresenter:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)((uint64_t)v173, v77, (void *)v143, v48, v142, v144, v145, (uint64_t)&v167, a15, v69);
  long long v133 = v168;
  long long v134 = v167;
  long long v132 = v169;
  uint64_t v78 = v170;
  uint64_t v79 = v171;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ActionMenu<ActionType>.Element>);
  uint64_t v80 = swift_allocObject();
  long long v81 = v134;
  *(_OWORD *)(v80 + 16) = xmmword_100493400;
  *(_OWORD *)(v80 + 32) = v81;
  long long v82 = v132;
  *(_OWORD *)(v80 + 48) = v133;
  *(_OWORD *)(v80 + 64) = v82;
  *(void *)(v80 + 80) = v78;
  *(void *)(v80 + 88) = v79;
  *(_OWORD *)(v80 + 96) = v172;
  *(unsigned char *)(v80 + 112) = 1;
  *(void *)&v161[0] = _swiftEmptyArrayStorage;
  specialized Array.append<A>(contentsOf:)((void *)v80);

  *(void *)&long long v134 = *(void *)&v161[0];
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v173);
LABEL_16:
  uint64_t v84 = (uint64_t)v136;
  uint64_t v83 = v137;
  uint64_t v86 = v148;
  uint64_t v85 = v149;
  uint64_t v87 = v147;
  outlined init with copy of AlertPresenting(v47, (uint64_t)v173);
  uint64_t v88 = String.init<A>(describing:)();
  uint64_t v136 = v89;
  uint64_t v137 = v88;
  outlined init with copy of AlertPresenting(v47, (uint64_t)v173);
  outlined init with copy of AlertPresenting(v84, (uint64_t)v161);
  outlined init with copy of (String, Any)(v69, v85, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  outlined init with copy of (String, Any)(v83, (uint64_t)v159, &demangling cache variable for type metadata for NavigationPushing?);
  outlined init with copy of AlertPresenting(v48, (uint64_t)v158);
  unint64_t v90 = (*(unsigned __int8 *)(v87 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v87 + 80);
  unint64_t v91 = (v86 + v90 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v92 = (v91 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v93 = (v92 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v94 = (v93 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v95 = (v94 + 47) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v96 = swift_allocObject();
  outlined init with take of AlertPresenting(v173, v96 + 16);
  outlined init with take of AlertPresenting(v161, v96 + 56);
  outlined init with take of PresentationSource?(v85, v96 + v90, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  outlined init with take of PresentationSource?((uint64_t)v159, v96 + v91, &demangling cache variable for type metadata for NavigationPushing?);
  uint64_t v97 = v155;
  *(void *)(v96 + v92) = v155;
  uint64_t v98 = v97;
  uint64_t v99 = (void *)v143;
  *(void *)(v96 + v93) = v143;
  outlined init with take of AlertPresenting(v158, v96 + v94);
  uint64_t v100 = (void *)(v96 + v95);
  uint64_t v101 = v144;
  *uint64_t v100 = v142;
  v100[1] = v101;
  uint64_t v102 = (void *)(v96 + ((v95 + 23) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v103 = v145;
  unint64_t v104 = v138;
  *uint64_t v102 = v145;
  v102[1] = v104;
  swift_retain();
  id v105 = v99;
  swift_bridgeObjectRetain();
  outlined copy of Data?(v103, v104);
  uint64_t v106 = v150;
  UUID.init()();
  uint64_t v107 = UUID.uuidString.getter();
  uint64_t v109 = v108;
  (*(void (**)(char *, void))(v151 + 8))(v106, v152);
  strcpy((char *)v173, "ActionMenu: ");
  BYTE13(v173[0]) = 0;
  HIWORD(v173[0]) = -5120;
  v110._uint64_t countAndFlagsBits = v137;
  v110._object = v136;
  String.append(_:)(v110);
  swift_bridgeObjectRelease();
  long long v111 = v173[0];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ActionMenu<ActionType>.Element>);
  uint64_t v112 = swift_allocObject();
  long long v152 = xmmword_100493400;
  *(_OWORD *)(v112 + 16) = xmmword_100493400;
  *(void *)(v112 + 32) = v107;
  *(void *)(v112 + 40) = v109;
  *(_OWORD *)(v112 + 48) = v111;
  *(_OWORD *)(v112 + 64) = xmmword_100493D40;
  *(void *)(v112 + 80) = 0;
  *(void *)(v112 + 88) = 0;
  *(void *)(v112 + 96) = partial apply for closure #3 in closure #1 in static MusicActions.actionMenu(item:playbackIntent:playbackController:library:playlistContext:alertPresenter:noticePresenter:presentationSource:shareSheetPresenter:navigationPusher:playlistPickerPresenter:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:);
  *(void *)(v112 + 104) = v96;
  *(unsigned char *)(v112 + 112) = 1;
  outlined init with copy of AlertPresenting(v154, (uint64_t)v173);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FavoritableMusicItem);
  if (swift_dynamicCast())
  {
    outlined init with take of AlertPresenting(v159, (uint64_t)v161);
    outlined init with copy of AlertPresenting(v153, (uint64_t)v159);
    specialized static MusicActions.favoritingActions(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:)((uint64_t)v161, v98, v146, (uint64_t)v159, v141, v156, 0, 0, (uint64_t)v173);
    long long v156 = v173[1];
    long long v157 = v173[0];
    long long v155 = v173[2];
    uint64_t v113 = v174;
    uint64_t v114 = v175;
    outlined destroy of TaskPriority?((uint64_t)v159, &demangling cache variable for type metadata for NoticePresenting?);
    uint64_t v115 = swift_allocObject();
    long long v116 = v157;
    *(_OWORD *)(v115 + 16) = v152;
    *(_OWORD *)(v115 + 32) = v116;
    long long v117 = v155;
    *(_OWORD *)(v115 + 48) = v156;
    *(_OWORD *)(v115 + 64) = v117;
    *(void *)(v115 + 80) = v113;
    *(void *)(v115 + 88) = v114;
    *(_OWORD *)(v115 + 96) = v176;
    *(unsigned char *)(v115 + 112) = 1;
    *(void *)&v159[0] = _swiftEmptyArrayStorage;
    specialized Array.append<A>(contentsOf:)((void *)v115);
    uint64_t v118 = *(void **)&v159[0];
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v161);
  }
  else
  {
    uint64_t v160 = 0;
    memset(v159, 0, sizeof(v159));
    outlined destroy of TaskPriority?((uint64_t)v159, &demangling cache variable for type metadata for FavoritableMusicItem?);
    uint64_t v118 = _swiftEmptyArrayStorage;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<[ActionMenu<ActionType>.Element]>);
  uint64_t result = (void *)swift_allocObject();
  uint64_t v120 = result;
  result[4] = v135;
  *(void *)&long long v157 = result + 4;
  uint64_t v121 = v139;
  result[5] = v140;
  result[6] = v121;
  result[7] = v134;
  result[8] = v112;
  result[9] = v118;
  uint64_t v122 = 4;
  uint64_t v123 = _swiftEmptyArrayStorage;
  while (1)
  {
    uint64_t v124 = v120[v122];
    uint64_t v125 = *(void *)(v124 + 16);
    int64_t v126 = v123[2];
    int64_t v127 = v126 + v125;
    if (__OFADD__(v126, v125)) {
      break;
    }
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_isUniquelyReferenced_nonNull_native();
    if (result && v127 <= v123[3] >> 1)
    {
      if (*(void *)(v124 + 16)) {
        goto LABEL_31;
      }
    }
    else
    {
      if (v126 <= v127) {
        int64_t v128 = v126 + v125;
      }
      else {
        int64_t v128 = v126;
      }
      uint64_t result = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(result, v128, 1, v123);
      uint64_t v123 = result;
      if (*(void *)(v124 + 16))
      {
LABEL_31:
        if ((v123[3] >> 1) - v123[2] < v125) {
          goto LABEL_38;
        }
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ActionMenu<ActionType>.Element);
        uint64_t result = (void *)swift_arrayInitWithCopy();
        if (v125)
        {
          uint64_t v129 = v123[2];
          BOOL v130 = __OFADD__(v129, v125);
          uint64_t v131 = v129 + v125;
          if (v130) {
            goto LABEL_39;
          }
          v123[2] = v131;
        }
        goto LABEL_21;
      }
    }
    if (v125) {
      goto LABEL_37;
    }
LABEL_21:
    uint64_t result = (void *)swift_bridgeObjectRelease();
    if (++v122 == 10)
    {
      swift_setDeallocating();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [ActionMenu<ActionType>.Element]);
      swift_arrayDestroy();
      swift_deallocClassInstance();
      return v123;
    }
  }
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
  return result;
}

void *closure #1 in closure #1 in static MusicActions.actionMenu(item:playbackIntent:playbackController:library:playlistContext:alertPresenter:noticePresenter:presentationSource:shareSheetPresenter:navigationPusher:playlistPickerPresenter:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a1[3];
  uint64_t v10 = a1[4];
  long long v11 = __swift_project_boxed_opaque_existential_0Tm(a1, v9);
  uint64_t v12 = a2[3];
  uint64_t v13 = a2[4];
  long long v14 = __swift_project_boxed_opaque_existential_0Tm(a2, v12);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = (*(uint64_t (**)(char *, void *, uint64_t))(v17 + 16))(v16, v11, v9);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)v25 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void *, uint64_t))(v21 + 16))(v20, v14, v12);
  outlined init with copy of (String, Any)(a3, (uint64_t)v8, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  uint64_t v22 = static ApplicationCapabilities.Controller.shared;
  swift_retain();
  Actions.ShowSongCredits.Context.init<A, B>(item:applicationCapabilities:navigationPusher:metricsReportingContext:)(v16, v22, (uint64_t)v20, (uint64_t)v8, v9, v12, v10, v13, &v27);
  uint64_t v31 = v27;
  v25[1] = v28;
  v25[0] = v29;
  long long v32 = v28;
  long long v33 = v29;
  uint64_t v34 = v30;
  char v35 = 4;
  uint64_t v36 = closure #1 in static Actions.ShowSongCredits.action(context:);
  uint64_t v37 = 0;
  uint64_t v38 = 0x4014000000000000;
  Swift::String v39 = &async function pointer to closure #2 in static Actions.ShowSongCredits.action(context:);
  uint64_t v40 = 0;
  uint64_t v41 = &async function pointer to closure #3 in static Actions.ShowSongCredits.action(context:);
  uint64_t v42 = 0;
  uint64_t v23 = (void *)specialized static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)((uint64_t)&v31);
  swift_release();
  swift_release();
  swift_release();
  uint64_t v26 = _swiftEmptyArrayStorage;
  specialized Array.append<A>(contentsOf:)(v23);
  return v26;
}

void *closure #2 in closure #1 in static MusicActions.actionMenu(item:playbackIntent:playbackController:library:playlistContext:alertPresenter:noticePresenter:presentationSource:shareSheetPresenter:navigationPusher:playlistPickerPresenter:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v49 = a3;
  uint64_t v56 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  uint64_t v53 = *(void *)(v4 - 8);
  uint64_t v52 = *(void *)(v53 + 64);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = v6;
  uint64_t v7 = type metadata accessor for Playlist();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v54 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v48 = (char *)&v41 - v12;
  __chkstk_darwin(v11);
  long long v14 = (char *)&v41 - v13;
  uint64_t v15 = type metadata accessor for Playlist.Entry();
  uint64_t v47 = *(void *)(v15 - 8);
  uint64_t v16 = v47;
  uint64_t v55 = *(void *)(v47 + 64);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v51 = (char *)&v41 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v46 = (char *)&v41 - v20;
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v41 - v21;
  uint64_t v45 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  uint64_t v44 = (char *)&v41 - v21;
  v45((char *)&v41 - v21, a1, v15);
  uint64_t v23 = a1 + *(int *)(type metadata accessor for PlaylistContext() + 20);
  uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  uint64_t v43 = v14;
  v24(v14, v23, v7);
  outlined init with copy of (String, Any)(v49, (uint64_t)v6, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  uint64_t v25 = v48;
  v24(v48, (uint64_t)v14, v7);
  uint64_t v26 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v49 = swift_allocObject();
  uint64_t v27 = *(void (**)(uint64_t, char *, uint64_t))(v8 + 32);
  uint64_t v42 = v7;
  v27(v49 + ((v26 + 16) & ~v26), v25, v7);
  uint64_t v41 = v8 + 32;
  long long v28 = v46;
  v45(v46, (uint64_t)v22, v15);
  v27((uint64_t)v54, v43, v7);
  uint64_t v29 = v47;
  uint64_t v30 = *(unsigned __int8 *)(v47 + 80);
  uint64_t v31 = (v30 + 24) & ~v30;
  uint64_t v32 = (v55 + v26 + v31) & ~v26;
  uint64_t v33 = swift_allocObject();
  *(void *)(v33 + 16) = v56;
  uint64_t v34 = *(void (**)(uint64_t, char *, uint64_t))(v29 + 32);
  v34(v33 + v31, v28, v15);
  v27(v33 + v32, v54, v42);
  char v35 = v51;
  v34((uint64_t)v51, v44, v15);
  unint64_t v36 = (*(unsigned __int8 *)(v53 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80);
  unint64_t v37 = (v52 + v30 + v36) & ~v30;
  uint64_t v38 = swift_allocObject();
  outlined init with take of PresentationSource?((uint64_t)v50, v38 + v36, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  v34(v38 + v37, v35, v15);
  v58[0] = partial apply for closure #1 in Actions.RemoveFromPlaylist.Context.init(entry:playlist:library:metricsReportingContext:);
  v58[1] = v49;
  v58[2] = &async function pointer to partial apply for closure #2 in Actions.RemoveFromPlaylist.Context.init(entry:playlist:library:metricsReportingContext:);
  v58[3] = v33;
  v58[4] = &async function pointer to partial apply for closure #3 in Actions.RemoveFromPlaylist.Context.init(entry:playlist:library:metricsReportingContext:);
  v58[5] = v38;
  char v59 = 38;
  uint64_t v60 = closure #1 in static Actions.AddToLibrary.action(context:);
  uint64_t v61 = 0;
  uint64_t v62 = 0x4014000000000000;
  uint64_t v63 = &async function pointer to closure #2 in static Actions.RemoveFromPlaylist.action(context:);
  uint64_t v64 = 0;
  Swift::String v65 = &async function pointer to closure #3 in static Actions.RemoveFromPlaylist.action(context:);
  uint64_t v66 = 0;
  swift_retain();
  Swift::String v39 = (void *)specialized static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)((uint64_t)v58);
  swift_release();
  swift_release();
  swift_release();
  unint64_t v57 = _swiftEmptyArrayStorage;
  specialized Array.append<A>(contentsOf:)(v39);
  return v57;
}

__n128 static MusicActions.libraryActions(item:library:alertPresenter:noticePresenter:presentationSource:playlistPickerPresenter:metricsReportingContext:)@<Q0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  specialized static MusicActions.libraryActions(item:library:alertPresenter:noticePresenter:presentationSource:playlistPickerPresenter:metricsReportingContext:)(a1, a2, a3, a4, a5, a6, a7, (uint64_t)v11);
  long long v9 = v11[3];
  *(_OWORD *)(a8 + 32) = v11[2];
  *(_OWORD *)(a8 + 48) = v9;
  *(_OWORD *)(a8 + 64) = v11[4];
  __n128 result = (__n128)v11[1];
  *(_OWORD *)a8 = v11[0];
  *(__n128 *)(a8 + 16) = result;
  return result;
}

uint64_t closure #3 in closure #1 in static MusicActions.actionMenu(item:playbackIntent:playbackController:library:playlistContext:alertPresenter:noticePresenter:presentationSource:shareSheetPresenter:navigationPusher:playlistPickerPresenter:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)(unint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, int64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  *(void *)&long long v91 = a8;
  *(void *)&long long v90 = a7;
  uint64_t v93 = a5;
  uint64_t v89 = a11;
  uint64_t v88 = (void *)a10;
  unint64_t v92 = (char *)a9;
  uint64_t v16 = v103;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  __chkstk_darwin(v17 - 8);
  uint64_t v19 = (char *)&v80 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of AlertPresenting(a1, (uint64_t)v104);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicItem);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ShareableMusicItem);
  uint64_t v20 = _swiftEmptyArrayStorage;
  if ((swift_dynamicCast() & 1) == 0)
  {
    uint64_t v107 = 0;
    long long v105 = 0u;
    long long v106 = 0u;
    outlined destroy of TaskPriority?((uint64_t)&v105, &demangling cache variable for type metadata for ShareableMusicItem?);
    uint64_t v87 = (uint64_t (**)())_swiftEmptyArrayStorage;
    goto LABEL_5;
  }
  outlined init with take of AlertPresenting(&v105, (uint64_t)v95);
  outlined init with copy of AlertPresenting((uint64_t)v95, (uint64_t)v118);
  outlined init with copy of AlertPresenting(a2, (uint64_t)v109);
  outlined init with copy of (String, Any)(a3, (uint64_t)v19, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  if (one-time initialization token for shared != -1) {
    goto LABEL_47;
  }
  while (1)
  {
    uint64_t v21 = static ApplicationCapabilities.Controller.shared;
    swift_retain();
    specialized Actions.Share.Context.init(item:applicationCapabilities:shareSheetPresenting:metricsReportingContext:)((uint64_t)v118, v21, (uint64_t)v109, (uint64_t)v19, v103);
    uint64_t v22 = v103[6];
    uint64_t v23 = v103[7];
    long long v24 = *((_OWORD *)v16 + 1);
    *((_OWORD *)v16 + 11) = *(_OWORD *)v16;
    *((_OWORD *)v16 + 12) = v24;
    *((_OWORD *)v16 + 13) = *((_OWORD *)v16 + 2);
    v109[6] = v22;
    v109[7] = v23;
    char v110 = 39;
    long long v111 = closure #1 in static Actions.AddToLibrary.action(context:);
    uint64_t v112 = 0;
    uint64_t v113 = 0x4014000000000000;
    uint64_t v114 = &async function pointer to closure #2 in static Actions.Share.action(context:);
    uint64_t v115 = 0;
    long long v116 = &async function pointer to closure #3 in static Actions.Share.action(context:);
    uint64_t v117 = 0;
    long long v25 = *((_OWORD *)v16 + 16);
    *((_OWORD *)v16 + 23) = *((_OWORD *)v16 + 15);
    *((_OWORD *)v16 + 24) = v25;
    long long v26 = *((_OWORD *)v16 + 12);
    *((_OWORD *)v16 + 19) = *((_OWORD *)v16 + 11);
    *((_OWORD *)v16 + 20) = v26;
    long long v27 = *((_OWORD *)v16 + 14);
    *((_OWORD *)v16 + 21) = *((_OWORD *)v16 + 13);
    *((_OWORD *)v16 + 22) = v27;
    long long v28 = *((_OWORD *)v16 + 18);
    *((_OWORD *)v16 + 25) = *((_OWORD *)v16 + 17);
    *((_OWORD *)v16 + 26) = v28;
    uint64_t v29 = (void *)specialized static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)((uint64_t)v118);
    outlined release of Action<Actions.DeleteFromLibrary.Context, ActionType, ()>((uint64_t)v109, (void (*)(uint64_t))&_swift_bridgeObjectRelease);
    *(void *)&long long v101 = v20;
    specialized Array.append<A>(contentsOf:)(v29);
    uint64_t v87 = (uint64_t (**)())v101;
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v95);
LABEL_5:
    uint64_t v85 = v19;
    outlined init with copy of (String, Any)((uint64_t)a4, (uint64_t)&v101, &demangling cache variable for type metadata for NavigationPushing?);
    uint64_t v86 = a3;
    if (v102)
    {
      outlined init with take of AlertPresenting(&v101, (uint64_t)&v105);
      uint64_t v30 = *(void *)(a1 + 24);
      uint64_t v83 = *(void *)(a1 + 32);
      uint64_t v31 = __swift_project_boxed_opaque_existential_0Tm((void *)a1, v30);
      int64_t v84 = a6;
      uint64_t v32 = v31;
      uint64_t v33 = *((void *)&v106 + 1);
      uint64_t v81 = v107;
      uint64_t v34 = (void *)a1;
      char v35 = __swift_project_boxed_opaque_existential_0Tm(&v105, *((uint64_t *)&v106 + 1));
      long long v82 = &v80;
      __chkstk_darwin(v35);
      unint64_t v37 = (char *)&v80 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v39 = (*(uint64_t (**)(char *, void *, uint64_t))(v38 + 16))(v37, v32, v30);
      __chkstk_darwin(v39);
      uint64_t v41 = (char *)&v80 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, void *, uint64_t))(v42 + 16))(v41, v35, v33);
      uint64_t v43 = (uint64_t)v85;
      outlined init with copy of (String, Any)(a3, (uint64_t)v85, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
      uint64_t v44 = (uint64_t)v41;
      a6 = v84;
      Actions.GoToAlbum.Context.init<A, B>(item:navigationPusher:metricsReportingContext:)(v37, v44, v43, v30, v33, v83, v81, v104);
      long long v45 = *((_OWORD *)v16 + 6);
      long long v46 = *((_OWORD *)v16 + 7);
      long long v47 = *((_OWORD *)v16 + 5);
      v95[0] = *((_OWORD *)v16 + 4);
      v95[1] = v47;
      v95[2] = v45;
      long long v96 = v46;
      LOBYTE(v97) = 14;
      *((void *)&v97 + 1) = closure #1 in static Actions.GoToAlbum.action(context:);
      *(void *)&long long v98 = 0;
      *((void *)&v98 + 1) = 0x4014000000000000;
      *(void *)&long long v99 = &async function pointer to closure #2 in static Actions.GoToAlbum.action(context:);
      *((void *)&v99 + 1) = 0;
      *(void *)&long long v100 = &async function pointer to closure #3 in static Actions.GoToAlbum.action(context:);
      *((void *)&v100 + 1) = 0;
      long long v48 = v98;
      *((_OWORD *)v16 + 15) = v97;
      *((_OWORD *)v16 + 16) = v48;
      long long v49 = v100;
      *((_OWORD *)v16 + 17) = v99;
      *((_OWORD *)v16 + 18) = v49;
      long long v50 = v95[1];
      *((_OWORD *)v16 + 11) = v95[0];
      *((_OWORD *)v16 + 12) = v50;
      long long v51 = v96;
      *((_OWORD *)v16 + 13) = v95[2];
      *((_OWORD *)v16 + 14) = v51;
      uint64_t v52 = (void *)specialized static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)((uint64_t)v109);
      outlined release of Action<Actions.GoToAlbum.Context, ActionType, ()>((uint64_t)v95);
      unint64_t v94 = _swiftEmptyArrayStorage;
      specialized Array.append<A>(contentsOf:)(v52);
      uint64_t v53 = v94;
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v105);
    }
    else
    {
      outlined destroy of TaskPriority?((uint64_t)&v101, &demangling cache variable for type metadata for NavigationPushing?);
      uint64_t v53 = _swiftEmptyArrayStorage;
      uint64_t v34 = (void *)a1;
      uint64_t v43 = (uint64_t)v85;
    }
    uint64_t v54 = v34[3];
    uint64_t v55 = v34[4];
    uint64_t v56 = __swift_project_boxed_opaque_existential_0Tm(v34, v54);
    __chkstk_darwin(v56);
    uint64_t v58 = (char *)&v80 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v59 + 16))(v58);
    outlined init with copy of AlertPresenting(v90, (uint64_t)v95);
    outlined init with copy of (String, Any)(v86, v43, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
    uint64_t v79 = v55;
    uint64_t v78 = v43;
    uint64_t v19 = v92;
    uint64_t v20 = v88;
    a1 = v89;
    Actions.CreateStation.Context.init<A>(item:library:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)((uint64_t)v58, v93, (void *)a6, (uint64_t)v95, v91, (uint64_t)v92, (uint64_t)v88, v89, (unint64_t (**)())&v105, v78, v54, v79);
    long long v60 = *(_OWORD *)(v16 + 17);
    long long v90 = *(_OWORD *)(v16 + 19);
    long long v91 = v60;
    *(void *)&v95[0] = v105;
    *(_OWORD *)((char *)v95 + 8) = v60;
    *(_OWORD *)((char *)&v95[1] + 8) = v90;
    *((void *)&v95[2] + 1) = v108;
    LOBYTE(v96) = 5;
    *((void *)&v96 + 1) = closure #1 in static Actions.AddToLibrary.action(context:);
    *(void *)&long long v97 = 0;
    *((void *)&v97 + 1) = 0x4014000000000000;
    *(void *)&long long v98 = &async function pointer to closure #2 in static Actions.CreateStation.action(context:);
    *((void *)&v98 + 1) = 0;
    *(void *)&long long v99 = &async function pointer to closure #3 in static Actions.CreateStation.action(context:);
    *((void *)&v99 + 1) = 0;
    swift_retain();
    id v61 = (id)a6;
    swift_bridgeObjectRetain();
    outlined copy of Data?((uint64_t)v20, a1);
    uint64_t v62 = specialized static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)((uint64_t)v95);
    swift_release();
    swift_release();
    swift_release();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<[ActionMenu<ActionType>.Element]>);
    uint64_t v63 = (void *)swift_allocObject();
    uint64_t v16 = v87;
    v63[4] = v87;
    a3 = (uint64_t)(v63 + 4);
    v63[5] = v53;
    void v63[6] = v62;
    int64_t v64 = (int64_t)v16[2];
    swift_bridgeObjectRetain();
    Swift::String v65 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, v64, 1, _swiftEmptyArrayStorage);
    a4 = v65;
    if (v16[2])
    {
      if ((v65[3] >> 1) - v65[2] < v64) {
        goto LABEL_44;
      }
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ActionMenu<ActionType>.Element);
      uint64_t result = swift_arrayInitWithCopy();
      if (v64)
      {
        uint64_t v67 = a4[2];
        BOOL v68 = __OFADD__(v67, v64);
        uint64_t v69 = v67 + v64;
        if (v68)
        {
          __break(1u);
LABEL_49:
          __break(1u);
          goto LABEL_50;
        }
        a4[2] = v69;
      }
    }
    else if (v64)
    {
      __break(1u);
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      goto LABEL_46;
    }
    swift_bridgeObjectRelease();
    uint64_t v70 = v63[5];
    uint64_t v19 = *(char **)(v70 + 16);
    a6 = a4[2];
    uint64_t v16 = (uint64_t (**)())&v19[a6];
    if (__OFADD__(a6, v19))
    {
      __break(1u);
    }
    else
    {
      a1 = a4[3];
      swift_bridgeObjectRetain();
      if ((uint64_t)v16 <= (uint64_t)(a1 >> 1))
      {
        if (v19) {
          goto LABEL_17;
        }
        goto LABEL_26;
      }
    }
    if (a6 <= (uint64_t)v16) {
      int64_t v73 = (int64_t)&v19[a6];
    }
    else {
      int64_t v73 = a6;
    }
    a4 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((void *)1, v73, 1, a4);
    a6 = a4[2];
    if (*(void *)(v70 + 16))
    {
LABEL_17:
      if ((a4[3] >> 1) - a6 < (uint64_t)v19) {
        goto LABEL_45;
      }
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ActionMenu<ActionType>.Element);
      uint64_t result = swift_arrayInitWithCopy();
      if (v19)
      {
        uint64_t v71 = a4[2];
        BOOL v68 = __OFADD__(v71, v19);
        uint64_t v72 = &v19[v71];
        if (v68) {
          goto LABEL_49;
        }
        a4[2] = v72;
      }
      goto LABEL_27;
    }
LABEL_26:
    if (v19) {
      goto LABEL_42;
    }
LABEL_27:
    swift_bridgeObjectRelease();
    uint64_t v74 = v63[6];
    uint64_t v19 = *(char **)(v74 + 16);
    a6 = a4[2];
    uint64_t v16 = (uint64_t (**)())&v19[a6];
    if (__OFADD__(a6, v19))
    {
      __break(1u);
    }
    else
    {
      a1 = a4[3];
      swift_bridgeObjectRetain();
      if ((uint64_t)v16 <= (uint64_t)(a1 >> 1))
      {
        if (!v19) {
          goto LABEL_39;
        }
        goto LABEL_30;
      }
    }
    if (a6 <= (uint64_t)v16) {
      int64_t v77 = (int64_t)&v19[a6];
    }
    else {
      int64_t v77 = a6;
    }
    a4 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((void *)1, v77, 1, a4);
    a6 = a4[2];
    if (!*(void *)(v74 + 16))
    {
LABEL_39:
      if (!v19) {
        goto LABEL_40;
      }
      goto LABEL_43;
    }
LABEL_30:
    if ((a4[3] >> 1) - a6 >= (uint64_t)v19) {
      break;
    }
LABEL_46:
    __break(1u);
LABEL_47:
    swift_once();
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ActionMenu<ActionType>.Element);
  uint64_t result = swift_arrayInitWithCopy();
  if (!v19)
  {
LABEL_40:
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [ActionMenu<ActionType>.Element]);
    swift_arrayDestroy();
    swift_deallocClassInstance();
    return (uint64_t)a4;
  }
  uint64_t v75 = a4[2];
  BOOL v68 = __OFADD__(v75, v19);
  char v76 = &v19[v75];
  if (!v68)
  {
    a4[2] = v76;
    goto LABEL_40;
  }
LABEL_50:
  __break(1u);
  return result;
}

__n128 static MusicActions.favoritingActions(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  specialized static MusicActions.favoritingActions(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:)(a1, a2, a3, a4, a5, a6, a7, a8, (uint64_t)v12);
  long long v10 = v12[3];
  *(_OWORD *)(a9 + 32) = v12[2];
  *(_OWORD *)(a9 + 48) = v10;
  *(_OWORD *)(a9 + 64) = v12[4];
  __n128 result = (__n128)v12[1];
  *(_OWORD *)a9 = v12[0];
  *(__n128 *)(a9 + 16) = result;
  return result;
}

void *closure #1 in static MusicActions.playbackActions(item:playbackIntent:playbackController:library:alertPresenter:noticePresenter:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)(void *a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, uint64_t a9)
{
  unint64_t v86 = a7;
  uint64_t v87 = a8;
  uint64_t v84 = a6;
  uint64_t v89 = (void *)a4;
  uint64_t v88 = a9;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v77 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = a1[3];
  uint64_t v83 = a1[4];
  uint64_t v18 = __swift_project_boxed_opaque_existential_0Tm(a1, v17);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v77 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v21 + 16))(v20);
  uint64_t v22 = a8;
  uint64_t v23 = (uint64_t)v16;
  outlined init with copy of (String, Any)(v22, (uint64_t)v16, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  id v24 = a2;
  id v25 = a3;
  uint64_t v26 = a5;
  swift_bridgeObjectRetain();
  uint64_t v27 = v84;
  uint64_t v28 = v86;
  outlined copy of Data?(v84, v86);
  Actions.Play.Context.init<A>(item:playbackIntent:playbackController:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)((unint64_t)v20, (uint64_t)v24, (uint64_t)v25, (uint64_t)v89, v26, v27, v28, v23, &v90, v17, v83);
  long long v82 = v91;
  long long v110 = v91;
  long long v81 = v92;
  long long v111 = v92;
  uint64_t v109 = v90;
  uint64_t v112 = v93;
  char v113 = 20;
  uint64_t v114 = closure #1 in static Actions.ShowSongCredits.action(context:);
  uint64_t v115 = 0;
  uint64_t v116 = 0x4014000000000000;
  uint64_t v117 = &async function pointer to closure #2 in static Actions.Play.action(context:);
  uint64_t v118 = 0;
  uint64_t v119 = &async function pointer to closure #3 in static Actions.Play.action(context:);
  uint64_t v120 = 0;
  uint64_t v83 = specialized static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)((uint64_t)&v109);
  swift_release();
  swift_release();
  swift_release();
  uint64_t v29 = a1[3];
  *(void *)&long long v82 = a1[4];
  uint64_t v30 = __swift_project_boxed_opaque_existential_0Tm(a1, v29);
  __chkstk_darwin(v30);
  uint64_t v32 = (char *)&v77 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v33 + 16))(v32);
  outlined init with copy of AlertPresenting(v88, (uint64_t)v102);
  outlined init with copy of (String, Any)(v87, v23, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  id v34 = v24;
  id v35 = v25;
  uint64_t v36 = v26;
  uint64_t v85 = v26;
  swift_bridgeObjectRetain();
  uint64_t v37 = v84;
  unint64_t v38 = v86;
  outlined copy of Data?(v84, v86);
  uint64_t v76 = v38;
  uint64_t v39 = v37;
  Actions.Queue.Context.init<A>(item:playbackIntent:location:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)((uint64_t)v32, v34, (uint64_t)v35, (uint64_t)v102, (uint64_t)v89, v36, v37, &v94, v76, v23, v29, v82);
  specialized static Actions.Queue.action(context:)((uint64_t)&v94, (uint64_t)v96);
  outlined init with take of Player.InsertCommand.Location((uint64_t)&v94, (uint64_t)&v108);
  outlined release of Player.InsertCommand.Location(&v108);
  outlined init with take of PresentationSource?((uint64_t)&v95, (uint64_t)v107, (uint64_t *)&demangling cache variable for type metadata for String?);
  outlined release of String?((uint64_t)v107);
  swift_release();
  swift_release();
  swift_release();
  *(void *)&long long v82 = specialized static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)((uint64_t)v96);
  outlined release of Action<Actions.Queue.Context, ActionType, ()>(v96);
  uint64_t v40 = a1[3];
  *(void *)&long long v81 = a1[4];
  uint64_t v41 = __swift_project_boxed_opaque_existential_0Tm(a1, v40);
  __chkstk_darwin(v41);
  uint64_t v43 = (char *)&v77 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v44 + 16))(v43);
  outlined init with copy of AlertPresenting(v88, (uint64_t)v102);
  uint64_t v45 = v23;
  uint64_t v78 = v23;
  outlined init with copy of (String, Any)(v87, v23, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  id v46 = v34;
  id v79 = v46;
  id v47 = v35;
  id v80 = v47;
  uint64_t v48 = v85;
  swift_bridgeObjectRetain();
  unint64_t v49 = v86;
  outlined copy of Data?(v39, v86);
  long long v50 = v46;
  uint64_t v51 = v39;
  Actions.Queue.Context.init<A>(item:playbackIntent:location:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)((uint64_t)v43, v50, (uint64_t)v47, (uint64_t)v102, (uint64_t)v89, v48, v39, &v97, v49, v45, v40, v81);
  specialized static Actions.Queue.action(context:)((uint64_t)&v97, (uint64_t)v99);
  outlined init with take of Player.InsertCommand.Location((uint64_t)&v97, (uint64_t)&v106);
  outlined release of Player.InsertCommand.Location(&v106);
  outlined init with take of PresentationSource?((uint64_t)&v98, (uint64_t)v105, (uint64_t *)&demangling cache variable for type metadata for String?);
  outlined release of String?((uint64_t)v105);
  swift_release();
  swift_release();
  swift_release();
  *(void *)&long long v81 = specialized static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)((uint64_t)v99);
  outlined release of Action<Actions.Queue.Context, ActionType, ()>(v99);
  uint64_t v53 = a1[3];
  uint64_t v52 = a1[4];
  uint64_t v54 = __swift_project_boxed_opaque_existential_0Tm(a1, v53);
  __chkstk_darwin(v54);
  uint64_t v56 = (char *)&v77 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v57 + 16))(v56);
  outlined init with copy of AlertPresenting(v88, (uint64_t)v102);
  uint64_t v58 = v78;
  outlined init with copy of (String, Any)(v87, v78, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  id v59 = v79;
  id v60 = v80;
  uint64_t v61 = v85;
  swift_bridgeObjectRetain();
  outlined copy of Data?(v51, v49);
  Actions.Queue.Context.init<A>(item:playbackIntent:location:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)((uint64_t)v56, v59, (uint64_t)v60, (uint64_t)v102, (uint64_t)v89, v61, v51, &v100, v49, v58, v53, v52);
  specialized static Actions.Queue.action(context:)((uint64_t)&v100, (uint64_t)v102);
  outlined init with take of Player.InsertCommand.Location((uint64_t)&v100, (uint64_t)&v104);
  outlined release of Player.InsertCommand.Location(&v104);
  outlined init with take of PresentationSource?((uint64_t)&v101, (uint64_t)v103, (uint64_t *)&demangling cache variable for type metadata for String?);
  outlined release of String?((uint64_t)v103);
  swift_release();
  swift_release();
  swift_release();
  uint64_t v62 = specialized static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)((uint64_t)v102);
  outlined release of Action<Actions.Queue.Context, ActionType, ()>(v102);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<[ActionMenu<ActionType>.Element]>);
  __n128 result = (void *)swift_allocObject();
  int64_t v64 = result;
  result[4] = v83;
  uint64_t v89 = result + 4;
  uint64_t v65 = v81;
  result[5] = v82;
  result[6] = v65;
  result[7] = v62;
  uint64_t v66 = _swiftEmptyArrayStorage;
  uint64_t v67 = 4;
  while (1)
  {
    uint64_t v68 = v64[v67];
    uint64_t v69 = *(void *)(v68 + 16);
    int64_t v70 = v66[2];
    int64_t v71 = v70 + v69;
    if (__OFADD__(v70, v69)) {
      break;
    }
    swift_bridgeObjectRetain();
    __n128 result = (void *)swift_isUniquelyReferenced_nonNull_native();
    if (result && v71 <= v66[3] >> 1)
    {
      if (*(void *)(v68 + 16)) {
        goto LABEL_13;
      }
    }
    else
    {
      if (v70 <= v71) {
        int64_t v72 = v70 + v69;
      }
      else {
        int64_t v72 = v70;
      }
      __n128 result = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(result, v72, 1, v66);
      uint64_t v66 = result;
      if (*(void *)(v68 + 16))
      {
LABEL_13:
        if ((v66[3] >> 1) - v66[2] < v69) {
          goto LABEL_20;
        }
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ActionMenu<ActionType>.Element);
        __n128 result = (void *)swift_arrayInitWithCopy();
        if (v69)
        {
          uint64_t v73 = v66[2];
          BOOL v74 = __OFADD__(v73, v69);
          uint64_t v75 = v73 + v69;
          if (v74) {
            goto LABEL_21;
          }
          v66[2] = v75;
        }
        goto LABEL_3;
      }
    }
    if (v69) {
      goto LABEL_19;
    }
LABEL_3:
    __n128 result = (void *)swift_bridgeObjectRelease();
    if (++v67 == 8)
    {
      swift_setDeallocating();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [ActionMenu<ActionType>.Element]);
      swift_arrayDestroy();
      swift_deallocClassInstance();
      return v66;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  __break(1u);
LABEL_21:
  __break(1u);
  return result;
}

uint64_t static MusicActions.queueActions(item:playbackIntent:playbackController:library:alertPresenter:noticePresenter:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X7>, uint64_t a7@<X8>, uint64_t a8, unint64_t a9, uint64_t a10)
{
  uint64_t v44 = a5;
  uint64_t v45 = a6;
  unint64_t v38 = a2;
  unint64_t v43 = a9;
  uint64_t v41 = a3;
  uint64_t v42 = a8;
  uint64_t v46 = type metadata accessor for UUID();
  uint64_t v13 = *(void *)(v46 - 8);
  __chkstk_darwin(v46);
  uint64_t v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(void *)(v17 + 64);
  __chkstk_darwin(v16 - 8);
  uint64_t v19 = (char *)&v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of AlertPresenting(a1, (uint64_t)v48);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PlayableMusicItem);
  uint64_t v20 = String.init<A>(describing:)();
  uint64_t v39 = v21;
  uint64_t v40 = v20;
  outlined init with copy of AlertPresenting(a1, (uint64_t)v48);
  outlined init with copy of (String, Any)(a4, (uint64_t)v47, &demangling cache variable for type metadata for NoticePresenting?);
  outlined init with copy of (String, Any)(a10, (uint64_t)v19, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  unint64_t v22 = (*(unsigned __int8 *)(v17 + 80) + 144) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  uint64_t v23 = (void *)swift_allocObject();
  outlined init with take of AlertPresenting(v48, (uint64_t)(v23 + 2));
  id v24 = v38;
  id v25 = v41;
  v23[7] = v38;
  v23[8] = v25;
  outlined init with take of PresentationSource?((uint64_t)v47, (uint64_t)(v23 + 9), &demangling cache variable for type metadata for NoticePresenting?);
  uint64_t v26 = v45;
  v23[14] = v44;
  v23[15] = v26;
  uint64_t v27 = (uint64_t)v23 + v22;
  uint64_t v29 = v42;
  unint64_t v28 = v43;
  v23[16] = v42;
  v23[17] = v28;
  outlined init with take of PresentationSource?((uint64_t)v19, v27, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  id v30 = v24;
  id v31 = v25;
  swift_bridgeObjectRetain();
  outlined copy of Data?(v29, v28);
  UUID.init()();
  uint64_t v32 = UUID.uuidString.getter();
  uint64_t v34 = v33;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v46);
  strcpy((char *)v48, "ActionMenu: ");
  BYTE13(v48[0]) = 0;
  HIWORD(v48[0]) = -5120;
  v35._uint64_t countAndFlagsBits = v40;
  v35._object = v39;
  String.append(_:)(v35);
  uint64_t result = swift_bridgeObjectRelease();
  long long v37 = v48[0];
  *(void *)a7 = v32;
  *(void *)(a7 + 8) = v34;
  *(_OWORD *)(a7 + 16) = v37;
  *(void *)(a7 + 32) = 0;
  *(void *)(a7 + 40) = 0xE000000000000000;
  *(void *)(a7 + 48) = 0;
  *(unsigned char *)(a7 + 56) = 0;
  *(void *)(a7 + 64) = partial apply for closure #1 in static MusicActions.queueActions(item:playbackIntent:playbackController:library:alertPresenter:noticePresenter:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:);
  *(void *)(a7 + 72) = v23;
  return result;
}

void *closure #1 in static MusicActions.queueActions(item:playbackIntent:playbackController:library:alertPresenter:noticePresenter:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)(void *a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8, uint64_t a9)
{
  unint64_t v81 = a8;
  uint64_t v82 = a4;
  uint64_t v84 = a7;
  uint64_t v85 = (void *)a5;
  uint64_t v75 = a6;
  uint64_t v83 = a9;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v75 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = a1[3];
  uint64_t v80 = a1[4];
  uint64_t v17 = __swift_project_boxed_opaque_existential_0Tm(a1, v16);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v75 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v20 + 16))(v19);
  outlined init with copy of (String, Any)(a4, (uint64_t)v97, &demangling cache variable for type metadata for NoticePresenting?);
  outlined init with copy of (String, Any)(a9, (uint64_t)v15, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  id v21 = a2;
  id v22 = a3;
  uint64_t v23 = v75;
  swift_bridgeObjectRetain();
  uint64_t v24 = v84;
  unint64_t v25 = v81;
  outlined copy of Data?(v84, v81);
  uint64_t v73 = v25;
  uint64_t v26 = v22;
  Actions.Queue.Context.init<A>(item:playbackIntent:location:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)((uint64_t)v19, v21, (uint64_t)v22, (uint64_t)v97, (uint64_t)v85, v23, v24, &v86, v73, (uint64_t)v15, v16, v80);
  specialized static Actions.Queue.action(context:)((uint64_t)&v86, (uint64_t)v88);
  outlined init with take of Player.InsertCommand.Location((uint64_t)&v86, (uint64_t)v105);
  outlined release of Player.InsertCommand.Location(v105);
  outlined init with take of PresentationSource?((uint64_t)&v87, (uint64_t)v104, (uint64_t *)&demangling cache variable for type metadata for String?);
  outlined release of String?((uint64_t)v104);
  swift_release();
  swift_release();
  swift_release();
  uint64_t v80 = specialized static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)((uint64_t)v88);
  outlined release of Action<Actions.Queue.Context, ActionType, ()>(v88);
  uint64_t v27 = a1[3];
  uint64_t v79 = a1[4];
  unint64_t v28 = __swift_project_boxed_opaque_existential_0Tm(a1, v27);
  __chkstk_darwin(v28);
  id v30 = (char *)&v75 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v31 + 16))(v30);
  outlined init with copy of (String, Any)(v82, (uint64_t)v97, &demangling cache variable for type metadata for NoticePresenting?);
  uint64_t v32 = (uint64_t)v15;
  outlined init with copy of (String, Any)(v83, (uint64_t)v15, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  id v33 = v21;
  id v34 = v26;
  uint64_t v35 = v23;
  swift_bridgeObjectRetain();
  uint64_t v36 = v84;
  unint64_t v37 = v81;
  outlined copy of Data?(v84, v81);
  uint64_t v74 = v37;
  unint64_t v38 = v33;
  Actions.Queue.Context.init<A>(item:playbackIntent:location:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)((uint64_t)v30, v33, (uint64_t)v34, (uint64_t)v97, (uint64_t)v85, v35, v36, &v89, v74, v32, v27, v79);
  specialized static Actions.Queue.action(context:)((uint64_t)&v89, (uint64_t)v91);
  outlined init with take of Player.InsertCommand.Location((uint64_t)&v89, (uint64_t)&v103);
  outlined release of Player.InsertCommand.Location(&v103);
  outlined init with take of PresentationSource?((uint64_t)&v90, (uint64_t)v102, (uint64_t *)&demangling cache variable for type metadata for String?);
  outlined release of String?((uint64_t)v102);
  swift_release();
  swift_release();
  swift_release();
  uint64_t v79 = specialized static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)((uint64_t)v91);
  outlined release of Action<Actions.Queue.Context, ActionType, ()>(v91);
  uint64_t v39 = a1[3];
  uint64_t v78 = a1[4];
  uint64_t v40 = __swift_project_boxed_opaque_existential_0Tm(a1, v39);
  __chkstk_darwin(v40);
  uint64_t v42 = (char *)&v75 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v43 + 16))(v42);
  outlined init with copy of (String, Any)(v82, (uint64_t)v97, &demangling cache variable for type metadata for NoticePresenting?);
  uint64_t v44 = v32;
  outlined init with copy of (String, Any)(v83, v32, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  id v45 = v38;
  id v76 = v45;
  id v46 = v34;
  id v77 = v46;
  uint64_t v47 = v35;
  swift_bridgeObjectRetain();
  uint64_t v48 = v84;
  unint64_t v49 = v81;
  outlined copy of Data?(v84, v81);
  Actions.Queue.Context.init<A>(item:playbackIntent:location:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)((uint64_t)v42, v45, (uint64_t)v46, (uint64_t)v97, (uint64_t)v85, v47, v48, &v92, v49, v44, v39, v78);
  specialized static Actions.Queue.action(context:)((uint64_t)&v92, (uint64_t)v94);
  outlined init with take of Player.InsertCommand.Location((uint64_t)&v92, (uint64_t)&v101);
  outlined release of Player.InsertCommand.Location(&v101);
  outlined init with take of PresentationSource?((uint64_t)&v93, (uint64_t)v100, (uint64_t *)&demangling cache variable for type metadata for String?);
  outlined release of String?((uint64_t)v100);
  swift_release();
  swift_release();
  swift_release();
  uint64_t v78 = specialized static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)((uint64_t)v94);
  outlined release of Action<Actions.Queue.Context, ActionType, ()>(v94);
  uint64_t v51 = a1[3];
  uint64_t v50 = a1[4];
  uint64_t v52 = __swift_project_boxed_opaque_existential_0Tm(a1, v51);
  __chkstk_darwin(v52);
  uint64_t v54 = (char *)&v75 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v55 + 16))(v54);
  outlined init with copy of (String, Any)(v82, (uint64_t)v97, &demangling cache variable for type metadata for NoticePresenting?);
  outlined init with copy of (String, Any)(v83, v44, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  id v56 = v76;
  id v57 = v77;
  swift_bridgeObjectRetain();
  uint64_t v58 = v84;
  outlined copy of Data?(v84, v49);
  Actions.Queue.Context.init<A>(item:playbackIntent:location:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)((uint64_t)v54, v56, (uint64_t)v57, (uint64_t)v97, (uint64_t)v85, v47, v58, &v95, v49, v44, v51, v50);
  specialized static Actions.Queue.action(context:)((uint64_t)&v95, (uint64_t)v97);
  outlined init with take of Player.InsertCommand.Location((uint64_t)&v95, (uint64_t)&v99);
  outlined release of Player.InsertCommand.Location(&v99);
  outlined init with take of PresentationSource?((uint64_t)&v96, (uint64_t)v98, (uint64_t *)&demangling cache variable for type metadata for String?);
  outlined release of String?((uint64_t)v98);
  swift_release();
  swift_release();
  swift_release();
  uint64_t v59 = specialized static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)((uint64_t)v97);
  outlined release of Action<Actions.Queue.Context, ActionType, ()>(v97);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<[ActionMenu<ActionType>.Element]>);
  uint64_t result = (void *)swift_allocObject();
  uint64_t v61 = result;
  result[4] = v80;
  uint64_t v85 = result + 4;
  uint64_t v62 = v78;
  result[5] = v79;
  result[6] = v62;
  result[7] = v59;
  uint64_t v63 = _swiftEmptyArrayStorage;
  uint64_t v64 = 4;
  while (1)
  {
    uint64_t v65 = v61[v64];
    uint64_t v66 = *(void *)(v65 + 16);
    int64_t v67 = v63[2];
    int64_t v68 = v67 + v66;
    if (__OFADD__(v67, v66)) {
      break;
    }
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_isUniquelyReferenced_nonNull_native();
    if (result && v68 <= v63[3] >> 1)
    {
      if (*(void *)(v65 + 16)) {
        goto LABEL_13;
      }
    }
    else
    {
      if (v67 <= v68) {
        int64_t v69 = v67 + v66;
      }
      else {
        int64_t v69 = v67;
      }
      uint64_t result = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(result, v69, 1, v63);
      uint64_t v63 = result;
      if (*(void *)(v65 + 16))
      {
LABEL_13:
        if ((v63[3] >> 1) - v63[2] < v66) {
          goto LABEL_20;
        }
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ActionMenu<ActionType>.Element);
        uint64_t result = (void *)swift_arrayInitWithCopy();
        if (v66)
        {
          uint64_t v70 = v63[2];
          BOOL v71 = __OFADD__(v70, v66);
          uint64_t v72 = v70 + v66;
          if (v71) {
            goto LABEL_21;
          }
          v63[2] = v72;
        }
        goto LABEL_3;
      }
    }
    if (v66) {
      goto LABEL_19;
    }
LABEL_3:
    uint64_t result = (void *)swift_bridgeObjectRelease();
    if (++v64 == 8)
    {
      swift_setDeallocating();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [ActionMenu<ActionType>.Element]);
      swift_arrayDestroy();
      swift_deallocClassInstance();
      return v63;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  __break(1u);
LABEL_21:
  __break(1u);
  return result;
}

uint64_t specialized closure #1 in static MusicActions.libraryActions(item:library:alertPresenter:noticePresenter:presentationSource:playlistPickerPresenter:metricsReportingContext:)(uint64_t a1, char a2, void *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)&long long v146 = a6;
  *(void *)&long long v147 = a5;
  long long v144 = a4;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  __chkstk_darwin(v13 - 8);
  uint64_t v145 = (uint64_t)&v135 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = specialized static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)(a1);
  uint64_t v16 = v15;
  uint64_t v17 = _swiftEmptyArrayStorage;
  if (a2)
  {
    uint64_t v136 = a7;
    uint64_t v137 = a8;
    uint64_t v138 = v15;
    uint64_t v18 = a3[3];
    *(void *)&long long v142 = a3[4];
    *(void *)&long long v141 = a3[5];
    uint64_t v19 = __swift_project_boxed_opaque_existential_0Tm(a3, v18);
    uint64_t v20 = v144[3];
    *(void *)&long long v140 = v144[4];
    id v21 = __swift_project_boxed_opaque_existential_0Tm(v144, v20);
    *(void *)&long long v139 = &v135;
    __chkstk_darwin(v21);
    long long v143 = a3;
    uint64_t v23 = (char *)&v135 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v25 = (*(uint64_t (**)(char *, void *, uint64_t))(v24 + 16))(v23, v19, v18);
    __chkstk_darwin(v25);
    uint64_t v27 = (char *)&v135 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, void *, uint64_t))(v28 + 16))(v27, v21, v20);
    uint64_t v29 = v145;
    outlined init with copy of (String, Any)(v146, v145, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
    Actions.DeleteFromLibrary.Context.init<A, B>(item:library:alertPresenter:metricsReportingContext:)(v23, v147, (uint64_t)v27, v29, v18, v20, v142, v141, (uint64_t (**)())v196, v140);
    uint64_t v30 = *(void *)&v196[0];
    uint64_t v31 = *((void *)&v196[3] + 1);
    long long v140 = *(_OWORD *)((char *)v196 + 8);
    long long v141 = *(_OWORD *)((char *)&v196[1] + 8);
    long long v142 = *(_OWORD *)((char *)&v196[2] + 8);
    uint64_t v32 = (_OWORD *)swift_allocObject();
    long long v33 = v196[1];
    v32[1] = v196[0];
    v32[2] = v33;
    long long v34 = v196[3];
    v32[3] = v196[2];
    v32[4] = v34;
    *(_OWORD *)((char *)v182 + 8) = v140;
    *(_OWORD *)((char *)&v182[1] + 8) = v141;
    *(_OWORD *)((char *)&v182[2] + 8) = v142;
    *(void *)&v182[0] = v30;
    *((void *)&v182[3] + 1) = v31;
    LOBYTE(v183) = 8;
    *((void *)&v183 + 1) = partial apply for closure #1 in static Actions.DeleteFromLibrary.action(context:);
    *(void *)&long long v184 = v32;
    *((void *)&v184 + 1) = 0x4014000000000000;
    *(void *)&long long v185 = &async function pointer to closure #2 in static Actions.DeleteFromLibrary.action(context:);
    *((void *)&v185 + 1) = 0;
    *(void *)&long long v186 = &async function pointer to closure #3 in static Actions.DeleteFromLibrary.action(context:);
    *((void *)&v186 + 1) = 0;
    v202[2] = v182[2];
    v202[3] = v182[3];
    v202[0] = v182[0];
    v202[1] = v182[1];
    v202[4] = v183;
    v202[5] = v184;
    v202[6] = v185;
    v202[7] = v186;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    *(void *)&long long v142 = specialized static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)((uint64_t)v202);
    outlined release of Action<Actions.DeleteFromLibrary.Context, ActionType, ()>((uint64_t)v182, (void (*)(uint64_t))&_swift_release);
    uint64_t v35 = v143[3];
    uint64_t v36 = v143[4];
    uint64_t v37 = v143[5];
    unint64_t v38 = __swift_project_boxed_opaque_existential_0Tm(v143, v35);
    __chkstk_darwin(v38);
    uint64_t v40 = (char *)&v135 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v41 + 16))(v40);
    uint64_t v42 = v145;
    outlined init with copy of (String, Any)(v146, v145, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
    Actions.RemoveDownload.Context.init<A>(item:library:metricsReportingContext:)((uint64_t)v40, v147, v42, v35, v36, v37, (uint64_t (**)())&v197);
    long long v187 = v197;
    long long v188 = v198;
    long long v189 = v199;
    long long v190 = v200;
    LOBYTE(v191) = 37;
    *((void *)&v191 + 1) = closure #1 in static Actions.RemoveDownload.action(context:);
    *(void *)&long long v192 = 0;
    *((void *)&v192 + 1) = 0x4014000000000000;
    *(void *)&long long v193 = &async function pointer to closure #2 in static Actions.RemoveDownload.action(context:);
    *((void *)&v193 + 1) = 0;
    *(void *)&long long v194 = &async function pointer to closure #3 in static Actions.RemoveDownload.action(context:);
    *((void *)&v194 + 1) = 0;
    v201[4] = v191;
    v201[5] = v192;
    v201[6] = v193;
    v201[7] = v194;
    v201[0] = v197;
    v201[1] = v198;
    v201[2] = v199;
    v201[3] = v200;
    swift_retain();
    *(void *)&long long v141 = specialized static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)((uint64_t)v201);
    outlined release of Action<Actions.DeleteFromLibrary.Context, ActionType, ()>((uint64_t)&v187, (void (*)(uint64_t))&_swift_release);
    uint64_t v43 = v143[3];
    *(void *)&long long v140 = v143[4];
    *(void *)&long long v139 = v143[5];
    uint64_t v44 = __swift_project_boxed_opaque_existential_0Tm(v143, v43);
    uint64_t v46 = v144[3];
    uint64_t v45 = v144[4];
    uint64_t v47 = __swift_project_boxed_opaque_existential_0Tm(v144, v46);
    __chkstk_darwin(v47);
    unint64_t v49 = (char *)&v135 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v51 = (*(uint64_t (**)(char *, void *, uint64_t))(v50 + 16))(v49, v44, v43);
    __chkstk_darwin(v51);
    uint64_t v53 = (char *)&v135 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, void *, uint64_t))(v54 + 16))(v53, v47, v46);
    uint64_t v55 = v145;
    outlined init with copy of (String, Any)(v146, v145, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
    uint64_t v56 = v147;
    swift_retain();
    Actions.DeleteOrRemoveDownload.Context.init<A, B>(item:alertPresenter:library:metricsReportingContext:)((uint64_t)v49, (uint64_t)v53, v56, v55, v43, v46, (uint64_t (*)())v140, v139, (uint64_t (**)())v157, v45);
    outlined init with copy of Actions.DeleteOrRemoveDownload.Context((uint64_t)v157, (uint64_t)v150);
    uint64_t v57 = 4;
    uint64_t v58 = swift_allocObject();
    *(void *)(v58 + 16) = &async function pointer to closure #2 in static Actions.DeleteOrRemoveDownload.action(context:);
    *(void *)(v58 + 24) = 0;
    char v174 = 36;
    long long v171 = v153;
    long long v172 = v154;
    *(_OWORD *)uint64_t v173 = v155[0];
    *(_OWORD *)&v173[9] = *(_OWORD *)((char *)v155 + 9);
    v168[2] = v150[2];
    long long v169 = v151;
    long long v170 = v152;
    v168[0] = v150[0];
    v168[1] = v150[1];
    uint64_t v177 = 0x403E000000000000;
    unsigned __int8 v175 = closure #1 in static Actions.DeleteOrRemoveDownload.action(context:);
    uint64_t v176 = 0;
    v178 = &async function pointer to partial apply for specialized closure #1 in Action.init(_:id:waitLogInterval:supportedStatus:perform:finish:);
    uint64_t v179 = v58;
    uint64_t v180 = &async function pointer to closure #3 in static Actions.DeleteOrRemoveDownload.action(context:);
    uint64_t v181 = 0;
    outlined destroy of Actions.DeleteOrRemoveDownload.Context((uint64_t)v157);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ActionMenu<ActionType>.Element>);
    uint64_t v59 = swift_allocObject();
    *(_OWORD *)(v59 + 16) = xmmword_100493400;
    LOBYTE(v53) = v174;
    outlined init with copy of (String, Any)((uint64_t)v168, (uint64_t)v157, &demangling cache variable for type metadata for Action<Actions.DeleteOrRemoveDownload.Context, ActionType, Actions.DeleteOrRemoveDownload.Choice>);
    uint64_t v60 = swift_allocObject();
    long long v61 = v166;
    *(_OWORD *)(v60 + 176) = v165;
    *(_OWORD *)(v60 + 192) = v61;
    *(void *)(v60 + 208) = v167;
    long long v62 = v162;
    *(_OWORD *)(v60 + 112) = v161;
    *(_OWORD *)(v60 + 128) = v62;
    long long v63 = v164;
    *(_OWORD *)(v60 + 144) = v163;
    *(_OWORD *)(v60 + 160) = v63;
    long long v64 = v158;
    *(_OWORD *)(v60 + 48) = v157[2];
    *(_OWORD *)(v60 + 64) = v64;
    long long v65 = v160;
    *(_OWORD *)(v60 + 80) = v159;
    *(_OWORD *)(v60 + 96) = v65;
    long long v66 = v157[1];
    *(_OWORD *)(v60 + 16) = v157[0];
    *(_OWORD *)(v60 + 32) = v66;
    outlined init with copy of (String, Any)((uint64_t)v168, (uint64_t)v150, &demangling cache variable for type metadata for Action<Actions.DeleteOrRemoveDownload.Context, ActionType, Actions.DeleteOrRemoveDownload.Choice>);
    uint64_t v67 = swift_allocObject();
    long long v68 = v155[4];
    *(_OWORD *)(v67 + 176) = v155[3];
    *(_OWORD *)(v67 + 192) = v68;
    *(void *)(v67 + 208) = v156;
    long long v69 = v155[0];
    *(_OWORD *)(v67 + 112) = v154;
    *(_OWORD *)(v67 + 128) = v69;
    long long v70 = v155[2];
    *(_OWORD *)(v67 + 144) = v155[1];
    *(_OWORD *)(v67 + 160) = v70;
    long long v71 = v151;
    *(_OWORD *)(v67 + 48) = v150[2];
    *(_OWORD *)(v67 + 64) = v71;
    long long v72 = v153;
    *(_OWORD *)(v67 + 80) = v152;
    *(_OWORD *)(v67 + 96) = v72;
    long long v73 = v150[1];
    *(_OWORD *)(v67 + 16) = v150[0];
    *(_OWORD *)(v67 + 32) = v73;
    outlined init with copy of (String, Any)((uint64_t)v168, (uint64_t)v148, &demangling cache variable for type metadata for Action<Actions.DeleteOrRemoveDownload.Context, ActionType, Actions.DeleteOrRemoveDownload.Choice>);
    uint64_t v74 = swift_allocObject();
    long long v75 = v148[11];
    *(_OWORD *)(v74 + 176) = v148[10];
    *(_OWORD *)(v74 + 192) = v75;
    *(void *)(v74 + 208) = v149;
    long long v76 = v148[7];
    *(_OWORD *)(v74 + 112) = v148[6];
    *(_OWORD *)(v74 + 128) = v76;
    long long v77 = v148[9];
    *(_OWORD *)(v74 + 144) = v148[8];
    *(_OWORD *)(v74 + 160) = v77;
    long long v78 = v148[3];
    *(_OWORD *)(v74 + 48) = v148[2];
    *(_OWORD *)(v74 + 64) = v78;
    long long v79 = v148[5];
    *(_OWORD *)(v74 + 80) = v148[4];
    *(_OWORD *)(v74 + 96) = v79;
    long long v80 = v148[1];
    *(_OWORD *)(v74 + 16) = v148[0];
    *(_OWORD *)(v74 + 32) = v80;
    *(unsigned char *)(v59 + 32) = (_BYTE)v53;
    *(void *)(v59 + 40) = partial apply for specialized closure #1 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:);
    *(void *)(v59 + 48) = v60;
    *(void *)(v59 + 56) = partial apply for specialized closure #2 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:);
    *(void *)(v59 + 64) = v67;
    *(void *)(v59 + 72) = &async function pointer to partial apply for specialized closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:);
    *(void *)(v59 + 80) = v74;
    *(unsigned char *)(v59 + 112) = 0;
    outlined destroy of TaskPriority?((uint64_t)v168, &demangling cache variable for type metadata for Action<Actions.DeleteOrRemoveDownload.Context, ActionType, Actions.DeleteOrRemoveDownload.Choice>);
    uint64_t v81 = v143[3];
    uint64_t v82 = v143[4];
    uint64_t v83 = v143[5];
    uint64_t v84 = __swift_project_boxed_opaque_existential_0Tm(v143, v81);
    __chkstk_darwin(v84);
    uint64_t v86 = (char *)&v135 - ((v85 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v87 + 16))(v86);
    outlined init with copy of AlertPresenting((uint64_t)v144, (uint64_t)v168);
    outlined init with copy of (String, Any)(v146, v55, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
    uint64_t v88 = v147;
    swift_retain();
    Actions.Download.Context.init<A>(item:library:alertPresenter:metricsReportingContext:)((uint64_t)v86, v88, v168, v55, v81, v82, v83, (unint64_t (**)())v148);
    long long v139 = *(_OWORD *)((char *)&v148[1] + 8);
    long long v140 = *(_OWORD *)((char *)v148 + 8);
    *(long long *)((char *)v168 + 8) = *(_OWORD *)((char *)v148 + 8);
    *(long long *)((char *)&v168[1] + 8) = *(_OWORD *)((char *)&v148[1] + 8);
    *(void *)&v168[0] = *(void *)&v148[0];
    *((void *)&v168[2] + 1) = *((void *)&v148[2] + 1);
    LOBYTE(v169) = 9;
    *((void *)&v169 + 1) = closure #1 in static Actions.AddToLibrary.action(context:);
    *(void *)&long long v170 = 0;
    *((void *)&v170 + 1) = 0x4014000000000000;
    *(void *)&long long v171 = &async function pointer to closure #2 in static Actions.Download.action(context:);
    *((void *)&v171 + 1) = 0;
    *(void *)&long long v172 = &async function pointer to closure #3 in static Actions.Download.action(context:);
    *((void *)&v172 + 1) = 0;
    uint64_t v89 = specialized static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)((uint64_t)v168);
    swift_release();
    swift_release();
    swift_release();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<[ActionMenu<ActionType>.Element]>);
    uint64_t v90 = (void *)swift_allocObject();
    v90[4] = v142;
    *(void *)&long long v140 = v90 + 4;
    v90[5] = v141;
    v90[6] = v59;
    v90[7] = v89;
    uint64_t v17 = _swiftEmptyArrayStorage;
    long long v91 = &demangling cache variable for type metadata for ActionMenu<ActionType>.Element;
    while (1)
    {
      uint64_t v92 = (char *)v90[v57];
      uint64_t v93 = *((void *)v92 + 2);
      uint64_t v94 = (void *)v17[2];
      uint64_t v95 = (void *)((char *)v94 + v93);
      if (__OFADD__(v94, v93))
      {
        __break(1u);
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
LABEL_42:
        __break(1u);
        goto LABEL_43;
      }
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
      if (isUniquelyReferenced_nonNull_native && (uint64_t)v95 <= v17[3] >> 1)
      {
        if (*((void *)v92 + 2)) {
          goto LABEL_14;
        }
      }
      else
      {
        if ((uint64_t)v94 <= (uint64_t)v95) {
          int64_t v97 = (int64_t)v94 + v93;
        }
        else {
          int64_t v97 = (int64_t)v94;
        }
        uint64_t v17 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(isUniquelyReferenced_nonNull_native, v97, 1, v17);
        if (*((void *)v92 + 2))
        {
LABEL_14:
          uint64_t v98 = v17[2];
          if ((v17[3] >> 1) - v98 < v93) {
            goto LABEL_40;
          }
          uint64_t v94 = &v17[11 * v98 + 4];
          uint64_t v95 = v92 + 32;
          __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ActionMenu<ActionType>.Element);
          swift_arrayInitWithCopy();
          if (v93)
          {
            uint64_t v99 = v17[2];
            BOOL v100 = __OFADD__(v99, v93);
            uint64_t v101 = v99 + v93;
            if (v100) {
              goto LABEL_41;
            }
            v17[2] = v101;
          }
          goto LABEL_4;
        }
      }
      if (v93) {
        goto LABEL_39;
      }
LABEL_4:
      swift_bridgeObjectRelease();
      if (++v57 == 8)
      {
        swift_setDeallocating();
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [ActionMenu<ActionType>.Element]);
        swift_arrayDestroy();
        swift_deallocClassInstance();
        a8 = v137;
        uint64_t v16 = v138;
        a7 = v136;
        a3 = v143;
        break;
      }
    }
  }
  outlined init with copy of MusicLibraryAddable & MusicLibraryActionable((uint64_t)a3, (uint64_t)v157);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicLibraryAddable & MusicLibraryActionable);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicPlaylistAddable & MusicLibraryActionable);
  if (swift_dynamicCast())
  {
    outlined init with take of MusicLibraryActionable & MusicUserRatable(v150, &v187);
    outlined init with copy of (String, Any)(a7, (uint64_t)v157, &demangling cache variable for type metadata for PlaylistPickerPresenting?);
    if (*((void *)&v157[1] + 1))
    {
      outlined init with take of AlertPresenting(v157, (uint64_t)v182);
      uint64_t v102 = *((void *)&v188 + 1);
      *(void *)&long long v142 = *((void *)&v189 + 1);
      long long v143 = (void *)v189;
      id v103 = __swift_project_boxed_opaque_existential_0Tm(&v187, *((uint64_t *)&v188 + 1));
      uint64_t v104 = *((void *)&v182[1] + 1);
      *(void *)&long long v140 = *(void *)&v182[2];
      long long v105 = __swift_project_boxed_opaque_existential_0Tm(v182, *((uint64_t *)&v182[1] + 1));
      *(void *)&long long v141 = &v135;
      __chkstk_darwin(v105);
      uint64_t v107 = (char *)&v135 - ((v106 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v109 = (*(uint64_t (**)(char *, void *, uint64_t))(v108 + 16))(v107, v103, v102);
      __chkstk_darwin(v109);
      long long v111 = (char *)&v135 - ((v110 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, void *, uint64_t))(v112 + 16))(v111, v105, v104);
      outlined init with copy of AlertPresenting((uint64_t)v144, (uint64_t)v195);
      outlined init with copy of (String, Any)(a8, (uint64_t)v157, &demangling cache variable for type metadata for PresentationSource?);
      uint64_t v113 = v145;
      outlined init with copy of (String, Any)(v146, v145, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
      uint64_t v114 = v147;
      swift_retain();
      specialized Actions.AddToPlaylist.Context.init<A, B>(item:library:playlistPickerPresenter:alertPresenter:presentationSource:metricsReportingContext:)(v107, v114, (uint64_t)v111, v195, (uint64_t)v157, v113, v102, v104, (unint64_t (**)())v150, (uint64_t)v143, v142, v140);
      uint64_t v115 = *(void *)&v150[0];
      uint64_t v116 = *((void *)&v150[2] + 1);
      swift_release();
      long long v146 = *(long long *)((char *)&v150[1] + 8);
      long long v147 = *(long long *)((char *)v150 + 8);
      *(long long *)((char *)v157 + 8) = *(long long *)((char *)v150 + 8);
      *(long long *)((char *)&v157[1] + 8) = *(long long *)((char *)&v150[1] + 8);
      *(void *)&v157[0] = v115;
      *((void *)&v157[2] + 1) = v116;
      LOBYTE(v158) = 2;
      *((void *)&v158 + 1) = closure #1 in static Actions.AddToLibrary.action(context:);
      *(void *)&long long v159 = 0;
      *((void *)&v159 + 1) = 0x4014000000000000;
      *(void *)&long long v160 = &async function pointer to closure #2 in static Actions.AddToPlaylist.action(context:);
      *((void *)&v160 + 1) = 0;
      *(void *)&long long v161 = &async function pointer to closure #3 in static Actions.AddToPlaylist.action(context:);
      *((void *)&v161 + 1) = 0;
      uint64_t v117 = (void *)specialized static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)((uint64_t)v157);
      swift_release();
      swift_release();
      swift_release();
      *(void *)&v195[0] = _swiftEmptyArrayStorage;
      specialized Array.append<A>(contentsOf:)(v117);
      uint64_t v118 = *(void **)&v195[0];
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v182);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v187);
      goto LABEL_25;
    }
    outlined destroy of TaskPriority?((uint64_t)v157, &demangling cache variable for type metadata for PlaylistPickerPresenting?);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v187);
  }
  else
  {
    memset(v150, 0, sizeof(v150));
    outlined destroy of TaskPriority?((uint64_t)v150, &demangling cache variable for type metadata for (MusicPlaylistAddable & MusicLibraryActionable)?);
  }
  uint64_t v118 = _swiftEmptyArrayStorage;
LABEL_25:
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<[ActionMenu<ActionType>.Element]>);
  uint64_t v94 = (void *)swift_allocObject();
  v94[4] = v16;
  v94[5] = v17;
  v94[6] = v118;
  int64_t v119 = *(void *)(v16 + 16);
  swift_bridgeObjectRetain();
  uint64_t result = (uint64_t)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, v119, 1, _swiftEmptyArrayStorage);
  uint64_t v95 = (void *)result;
  if (*(void *)(v16 + 16))
  {
    if ((*(void *)(result + 24) >> 1) - *(void *)(result + 16) < v119)
    {
LABEL_65:
      __break(1u);
      goto LABEL_66;
    }
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ActionMenu<ActionType>.Element);
    uint64_t result = swift_arrayInitWithCopy();
    if (v119)
    {
      uint64_t v121 = v95[2];
      BOOL v100 = __OFADD__(v121, v119);
      uint64_t v122 = v121 + v119;
      if (v100)
      {
LABEL_68:
        __break(1u);
        goto LABEL_69;
      }
      v95[2] = v122;
    }
  }
  else if (v119)
  {
    __break(1u);
    goto LABEL_63;
  }
  swift_bridgeObjectRelease();
  uint64_t v93 = v17[2];
  long long v91 = (uint64_t *)v95[2];
  uint64_t v92 = (char *)v91 + v93;
  if (__OFADD__(v91, v93)) {
    goto LABEL_42;
  }
  unint64_t v123 = v95[3];
  uint64_t result = swift_bridgeObjectRetain();
  if ((uint64_t)v92 > (uint64_t)(v123 >> 1))
  {
LABEL_43:
    if ((uint64_t)v91 <= (uint64_t)v92) {
      int64_t v126 = (int64_t)v92;
    }
    else {
      int64_t v126 = (int64_t)v91;
    }
    uint64_t result = (uint64_t)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((void *)1, v126, 1, v95);
    uint64_t v95 = (void *)result;
    long long v91 = *(uint64_t **)(result + 16);
    if (v17[2]) {
      goto LABEL_34;
    }
    goto LABEL_47;
  }
  if (!v93)
  {
LABEL_47:
    if (!v93) {
      goto LABEL_48;
    }
LABEL_63:
    __break(1u);
LABEL_64:
    __break(1u);
    goto LABEL_65;
  }
LABEL_34:
  if ((v95[3] >> 1) - (void)v91 < v93)
  {
LABEL_66:
    __break(1u);
    goto LABEL_67;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ActionMenu<ActionType>.Element);
  uint64_t result = swift_arrayInitWithCopy();
  if (v93)
  {
    uint64_t v124 = v95[2];
    BOOL v100 = __OFADD__(v124, v93);
    uint64_t v125 = v124 + v93;
    if (v100)
    {
LABEL_69:
      __break(1u);
      goto LABEL_70;
    }
    v95[2] = v125;
  }
LABEL_48:
  swift_bridgeObjectRelease();
  uint64_t v127 = v94[6];
  int64_t v128 = *(void *)(v127 + 16);
  int64_t v129 = v95[2];
  int64_t v130 = v129 + v128;
  if (__OFADD__(v129, v128))
  {
    __break(1u);
  }
  else
  {
    unint64_t v131 = v95[3];
    uint64_t result = swift_bridgeObjectRetain();
    if (v130 <= (uint64_t)(v131 >> 1))
    {
      if (v128) {
        goto LABEL_51;
      }
      goto LABEL_60;
    }
  }
  if (v129 <= v130) {
    int64_t v134 = v129 + v128;
  }
  else {
    int64_t v134 = v129;
  }
  uint64_t result = (uint64_t)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((void *)1, v134, 1, v95);
  uint64_t v95 = (void *)result;
  int64_t v129 = *(void *)(result + 16);
  if (!*(void *)(v127 + 16))
  {
LABEL_60:
    if (!v128) {
      goto LABEL_61;
    }
    goto LABEL_64;
  }
LABEL_51:
  if ((v95[3] >> 1) - v129 < v128)
  {
LABEL_67:
    __break(1u);
    goto LABEL_68;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ActionMenu<ActionType>.Element);
  uint64_t result = swift_arrayInitWithCopy();
  if (!v128)
  {
LABEL_61:
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [ActionMenu<ActionType>.Element]);
    swift_arrayDestroy();
    swift_deallocClassInstance();
    return (uint64_t)v95;
  }
  uint64_t v132 = v95[2];
  BOOL v100 = __OFADD__(v132, v128);
  uint64_t v133 = v132 + v128;
  if (!v100)
  {
    v95[2] = v133;
    goto LABEL_61;
  }
LABEL_70:
  __break(1u);
  return result;
}

void *closure #1 in static MusicActions.favoritingActions(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v62 = a7;
  *(void *)&long long v63 = a8;
  uint64_t v64 = a6;
  *(void *)&long long v65 = a5;
  uint64_t v66 = a3;
  *(void *)&long long v68 = a2;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = a1[3];
  uint64_t v17 = a1[4];
  uint64_t v18 = __swift_project_boxed_opaque_existential_0Tm(a1, v16);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v60 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v21 + 16))(v20);
  outlined init with copy of AlertPresenting(a3, (uint64_t)&v109);
  uint64_t v22 = a4;
  outlined init with copy of (String, Any)(a4, (uint64_t)&v97, &demangling cache variable for type metadata for NoticePresenting?);
  outlined init with copy of (String, Any)(a5, (uint64_t)&v121, &demangling cache variable for type metadata for PresentationSource?);
  outlined init with copy of (String, Any)(a6, (uint64_t)v15, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  uint64_t v23 = v62;
  uint64_t v24 = v63;
  Actions.Favorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:)((uint64_t)v20, v68, (long long *)&v109, (uint64_t)&v97, (uint64_t)&v121, (uint64_t)v15, v62, v63, &v69, v16, v17);
  long long v61 = v70;
  long long v122 = v70;
  long long v60 = v71;
  long long v123 = v71;
  uint64_t v121 = v69;
  uint64_t v124 = v72;
  char v125 = 10;
  int64_t v126 = closure #1 in static Actions.ShowSongCredits.action(context:);
  uint64_t v127 = 0;
  uint64_t v128 = 0x4014000000000000;
  int64_t v129 = &async function pointer to closure #2 in static Actions.Favorite.action(context:);
  uint64_t v130 = 0;
  unint64_t v131 = &async function pointer to closure #3 in static Actions.Favorite.action(context:);
  uint64_t v132 = 0;
  swift_retain();
  outlined copy of (@escaping @callee_guaranteed () -> ())?(v23);
  uint64_t v67 = specialized static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)((uint64_t)&v121);
  swift_release();
  swift_release();
  swift_release();
  uint64_t v25 = a1[3];
  uint64_t v26 = a1[4];
  uint64_t v27 = __swift_project_boxed_opaque_existential_0Tm(a1, v25);
  __chkstk_darwin(v27);
  uint64_t v29 = (char *)&v60 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v30 + 16))(v29);
  outlined init with copy of AlertPresenting(v66, (uint64_t)&v97);
  outlined init with copy of (String, Any)(v22, (uint64_t)&v85, &demangling cache variable for type metadata for NoticePresenting?);
  outlined init with copy of (String, Any)(v65, (uint64_t)&v109, &demangling cache variable for type metadata for PresentationSource?);
  uint64_t v31 = v64;
  outlined init with copy of (String, Any)(v64, (uint64_t)v15, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  Actions.UndoFavorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:)((uint64_t)v29, v68, (long long *)&v97, (uint64_t)&v85, (uint64_t)&v109, (uint64_t)v15, v23, v24, &v73, v25, v26);
  long long v65 = v74;
  long long v110 = v74;
  long long v61 = v75;
  long long v111 = v75;
  uint64_t v109 = v73;
  uint64_t v112 = v76;
  char v113 = 52;
  uint64_t v114 = closure #1 in static Actions.ShowSongCredits.action(context:);
  uint64_t v115 = 0;
  uint64_t v116 = 0x4014000000000000;
  uint64_t v117 = &async function pointer to closure #2 in static Actions.UndoFavorite.action(context:);
  uint64_t v118 = 0;
  int64_t v119 = &async function pointer to closure #3 in static Actions.UndoFavorite.action(context:);
  uint64_t v120 = 0;
  swift_retain();
  outlined copy of (@escaping @callee_guaranteed () -> ())?(v23);
  uint64_t v66 = specialized static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)((uint64_t)&v109);
  swift_release();
  swift_release();
  swift_release();
  uint64_t v32 = a1[3];
  uint64_t v33 = a1[4];
  long long v34 = __swift_project_boxed_opaque_existential_0Tm(a1, v32);
  __chkstk_darwin(v34);
  uint64_t v36 = (char *)&v60 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v37 + 16))(v36);
  outlined init with copy of (String, Any)(v22, (uint64_t)&v97, &demangling cache variable for type metadata for NoticePresenting?);
  uint64_t v38 = v31;
  outlined init with copy of (String, Any)(v31, (uint64_t)v15, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  uint64_t v39 = v68;
  Actions.SuggestLess.Context.init<A>(item:library:noticePresenting:metricsReportingContext:)(v36, v68, (uint64_t)&v97, (uint64_t)v15, v32, v33, &v77);
  long long v65 = v78;
  long long v98 = v78;
  long long v63 = v79;
  long long v99 = v79;
  int64_t v97 = v77;
  uint64_t v100 = v80;
  char v101 = 51;
  uint64_t v102 = closure #1 in static Actions.AddToLibrary.action(context:);
  uint64_t v103 = 0;
  uint64_t v104 = 0x4014000000000000;
  long long v105 = &async function pointer to closure #2 in static Actions.SuggestLess.action(context:);
  uint64_t v106 = 0;
  uint64_t v107 = &async function pointer to closure #3 in static Actions.SuggestLess.action(context:);
  uint64_t v108 = 0;
  swift_retain();
  uint64_t v40 = specialized static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)((uint64_t)&v97);
  swift_release();
  swift_release();
  swift_release();
  uint64_t v41 = a1[3];
  uint64_t v42 = a1[4];
  uint64_t v43 = __swift_project_boxed_opaque_existential_0Tm(a1, v41);
  __chkstk_darwin(v43);
  uint64_t v45 = (char *)&v60 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v46 + 16))(v45);
  outlined init with copy of (String, Any)(v22, (uint64_t)&v85, &demangling cache variable for type metadata for NoticePresenting?);
  outlined init with copy of (String, Any)(v38, (uint64_t)v15, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  swift_retain();
  Actions.UndoSuggestLess.Context.init<A>(item:library:noticePresenting:metricsReportingContext:)(v45, v39, (uint64_t)v15, v41, v42, &v81);
  long long v68 = v82;
  long long v86 = v82;
  long long v65 = v83;
  long long v87 = v83;
  uint64_t v85 = v81;
  uint64_t v88 = v84;
  char v89 = 53;
  uint64_t v90 = closure #1 in static Actions.ShowSongCredits.action(context:);
  uint64_t v91 = 0;
  uint64_t v92 = 0x4014000000000000;
  uint64_t v93 = &async function pointer to closure #2 in static Actions.UndoSuggestLess.action(context:);
  uint64_t v94 = 0;
  uint64_t v95 = &async function pointer to closure #3 in static Actions.UndoSuggestLess.action(context:);
  uint64_t v96 = 0;
  uint64_t v47 = specialized static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)((uint64_t)&v85);
  swift_release();
  swift_release();
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<[ActionMenu<ActionType>.Element]>);
  uint64_t result = (void *)swift_allocObject();
  unint64_t v49 = result;
  result[4] = v67;
  *(void *)&long long v68 = result + 4;
  result[5] = v66;
  result[6] = v40;
  result[7] = v47;
  uint64_t v50 = _swiftEmptyArrayStorage;
  uint64_t v51 = 4;
  while (1)
  {
    uint64_t v52 = v49[v51];
    uint64_t v53 = *(void *)(v52 + 16);
    int64_t v54 = v50[2];
    int64_t v55 = v54 + v53;
    if (__OFADD__(v54, v53)) {
      break;
    }
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_isUniquelyReferenced_nonNull_native();
    if (result && v55 <= v50[3] >> 1)
    {
      if (*(void *)(v52 + 16)) {
        goto LABEL_13;
      }
    }
    else
    {
      if (v54 <= v55) {
        int64_t v56 = v54 + v53;
      }
      else {
        int64_t v56 = v54;
      }
      uint64_t result = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(result, v56, 1, v50);
      uint64_t v50 = result;
      if (*(void *)(v52 + 16))
      {
LABEL_13:
        if ((v50[3] >> 1) - v50[2] < v53) {
          goto LABEL_20;
        }
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ActionMenu<ActionType>.Element);
        uint64_t result = (void *)swift_arrayInitWithCopy();
        if (v53)
        {
          uint64_t v57 = v50[2];
          BOOL v58 = __OFADD__(v57, v53);
          uint64_t v59 = v57 + v53;
          if (v58) {
            goto LABEL_21;
          }
          v50[2] = v59;
        }
        goto LABEL_3;
      }
    }
    if (v53) {
      goto LABEL_19;
    }
LABEL_3:
    uint64_t result = (void *)swift_bridgeObjectRelease();
    if (++v51 == 8)
    {
      swift_setDeallocating();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [ActionMenu<ActionType>.Element]);
      swift_arrayDestroy();
      swift_deallocClassInstance();
      return v50;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  __break(1u);
LABEL_21:
  __break(1u);
  return result;
}

uint64_t static MusicActions.tasteActions(item:library:alertPresenter:noticePresenting:ratingViewController:presentationSource:metricsReportingContext:onFinish:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v40 = a8;
  uint64_t v47 = a6;
  uint64_t v46 = a5;
  uint64_t v41 = a2;
  uint64_t v45 = a11;
  uint64_t v44 = a10;
  uint64_t v48 = type metadata accessor for UUID();
  uint64_t v16 = *(void *)(v48 - 8);
  __chkstk_darwin(v48);
  uint64_t v18 = (char *)&v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(void *)(v20 + 64);
  __chkstk_darwin(v19 - 8);
  uint64_t v22 = (char *)&v40 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of AlertPresenting(a1, (uint64_t)v49);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FavoritableMusicItem);
  uint64_t v43 = String.init<A>(describing:)();
  uint64_t v42 = v23;
  outlined init with copy of AlertPresenting(a1, (uint64_t)v52);
  outlined init with copy of AlertPresenting(a3, (uint64_t)v51);
  outlined init with copy of (String, Any)(a4, (uint64_t)v50, &demangling cache variable for type metadata for NoticePresenting?);
  outlined init with copy of PresentationSource(a7, (uint64_t)v49);
  outlined init with copy of (String, Any)(v40, (uint64_t)v22, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  unint64_t v24 = (*(unsigned __int8 *)(v20 + 80) + 216) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  unint64_t v25 = (v21 + v24 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v26 = (v25 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v27 = swift_allocObject();
  outlined init with take of AlertPresenting(v52, v27 + 16);
  *(void *)(v27 + 56) = v41;
  outlined init with take of AlertPresenting(v51, v27 + 64);
  outlined init with take of PresentationSource?((uint64_t)v50, v27 + 104, &demangling cache variable for type metadata for NoticePresenting?);
  outlined init with take of PresentationSource((uint64_t)v49, v27 + 144);
  outlined init with take of PresentationSource?((uint64_t)v22, v27 + v24, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  uint64_t v28 = (uint64_t *)(v27 + v25);
  uint64_t v29 = v44;
  uint64_t v30 = v45;
  *uint64_t v28 = v44;
  v28[1] = v30;
  uint64_t v31 = (void *)(v27 + v26);
  uint64_t v32 = v47;
  *uint64_t v31 = v46;
  v31[1] = v32;
  swift_retain();
  outlined copy of (@escaping @callee_guaranteed () -> ())?(v29);
  swift_retain();
  UUID.init()();
  uint64_t v33 = UUID.uuidString.getter();
  uint64_t v35 = v34;
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v48);
  strcpy((char *)v49, "ActionMenu: ");
  BYTE5(v49[1]) = 0;
  HIWORD(v49[1]) = -5120;
  v36._uint64_t countAndFlagsBits = v43;
  v36._object = v42;
  String.append(_:)(v36);
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v38 = v49[0];
  uint64_t v39 = v49[1];
  *(void *)a9 = v33;
  *(void *)(a9 + 8) = v35;
  *(void *)(a9 + 16) = v38;
  *(void *)(a9 + 24) = v39;
  *(void *)(a9 + 32) = 0;
  *(void *)(a9 + 40) = 0xE000000000000000;
  *(void *)(a9 + 48) = 0;
  *(unsigned char *)(a9 + 56) = 0;
  *(void *)(a9 + 64) = partial apply for closure #1 in static MusicActions.tasteActions(item:library:alertPresenter:noticePresenting:ratingViewController:presentationSource:metricsReportingContext:onFinish:);
  *(void *)(a9 + 72) = v27;
  return result;
}

void *closure #1 in static MusicActions.tasteActions(item:library:alertPresenter:noticePresenting:ratingViewController:presentationSource:metricsReportingContext:onFinish:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v78 = a8;
  uint64_t v79 = a3;
  *(void *)&long long v76 = a7;
  uint64_t v82 = a5;
  *(void *)&long long v83 = a4;
  uint64_t v81 = a2;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v74 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = a1[3];
  uint64_t v18 = a1[4];
  uint64_t v20 = __swift_project_boxed_opaque_existential_0Tm(a1, v19);
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v74 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v23 + 16))(v22);
  outlined init with copy of AlertPresenting(a3, (uint64_t)&v138);
  outlined init with copy of (String, Any)(a4, (uint64_t)&v126, &demangling cache variable for type metadata for NoticePresenting?);
  outlined init with copy of PresentationSource(a5, (uint64_t)&v150);
  *(void *)&long long v77 = a6;
  uint64_t v24 = v81;
  outlined init with copy of (String, Any)(a6, (uint64_t)v17, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  uint64_t v25 = v76;
  uint64_t v26 = v78;
  Actions.Favorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:)((uint64_t)v22, v24, (long long *)&v138, (uint64_t)&v126, (uint64_t)&v150, (uint64_t)v17, v76, v78, &v89, v19, v18);
  long long v75 = v90;
  long long v151 = v90;
  long long v74 = v91;
  long long v152 = v91;
  uint64_t v150 = v89;
  uint64_t v153 = v92;
  char v154 = 10;
  long long v155 = closure #1 in static Actions.ShowSongCredits.action(context:);
  uint64_t v156 = 0;
  uint64_t v157 = 0x4014000000000000;
  long long v158 = &async function pointer to closure #2 in static Actions.Favorite.action(context:);
  uint64_t v159 = 0;
  long long v160 = &async function pointer to closure #3 in static Actions.Favorite.action(context:);
  uint64_t v161 = 0;
  swift_retain();
  outlined copy of (@escaping @callee_guaranteed () -> ())?(v25);
  uint64_t v80 = specialized static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)((uint64_t)&v150);
  swift_release();
  swift_release();
  swift_release();
  uint64_t v28 = a1[3];
  uint64_t v27 = a1[4];
  uint64_t v29 = __swift_project_boxed_opaque_existential_0Tm(a1, v28);
  __chkstk_darwin(v29);
  uint64_t v31 = (char *)&v74 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v32 + 16))(v31);
  outlined init with copy of AlertPresenting(v79, (uint64_t)&v126);
  outlined init with copy of (String, Any)(v83, (uint64_t)&v114, &demangling cache variable for type metadata for NoticePresenting?);
  outlined init with copy of PresentationSource(v82, (uint64_t)&v138);
  outlined init with copy of (String, Any)(a6, (uint64_t)v17, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  Actions.UndoFavorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:)((uint64_t)v31, v24, (long long *)&v126, (uint64_t)&v114, (uint64_t)&v138, (uint64_t)v17, v25, v26, &v93, v28, v27);
  long long v75 = v94;
  long long v139 = v94;
  long long v74 = v95;
  long long v140 = v95;
  uint64_t v138 = v93;
  uint64_t v141 = v96;
  char v142 = 52;
  long long v143 = closure #1 in static Actions.ShowSongCredits.action(context:);
  uint64_t v144 = 0;
  uint64_t v145 = 0x4014000000000000;
  long long v146 = &async function pointer to closure #2 in static Actions.UndoFavorite.action(context:);
  uint64_t v147 = 0;
  uint64_t v148 = &async function pointer to closure #3 in static Actions.UndoFavorite.action(context:);
  uint64_t v149 = 0;
  swift_retain();
  outlined copy of (@escaping @callee_guaranteed () -> ())?(v25);
  uint64_t v79 = specialized static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)((uint64_t)&v138);
  swift_release();
  swift_release();
  swift_release();
  uint64_t v33 = a1[3];
  uint64_t v34 = a1[4];
  uint64_t v35 = __swift_project_boxed_opaque_existential_0Tm(a1, v33);
  __chkstk_darwin(v35);
  uint64_t v37 = (char *)&v74 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v38 + 16))(v37);
  uint64_t v39 = v83;
  outlined init with copy of (String, Any)(v83, (uint64_t)&v126, &demangling cache variable for type metadata for NoticePresenting?);
  uint64_t v40 = v77;
  outlined init with copy of (String, Any)(v77, (uint64_t)v17, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  Actions.SuggestLess.Context.init<A>(item:library:noticePresenting:metricsReportingContext:)(v37, v24, (uint64_t)&v126, (uint64_t)v17, v33, v34, &v97);
  long long v76 = v98;
  long long v127 = v98;
  long long v75 = v99;
  long long v128 = v99;
  int64_t v126 = v97;
  uint64_t v129 = v100;
  char v130 = 51;
  unint64_t v131 = closure #1 in static Actions.AddToLibrary.action(context:);
  uint64_t v132 = 0;
  uint64_t v133 = 0x4014000000000000;
  int64_t v134 = &async function pointer to closure #2 in static Actions.SuggestLess.action(context:);
  uint64_t v135 = 0;
  uint64_t v136 = &async function pointer to closure #3 in static Actions.SuggestLess.action(context:);
  uint64_t v137 = 0;
  swift_retain();
  uint64_t v78 = specialized static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)((uint64_t)&v126);
  swift_release();
  swift_release();
  swift_release();
  uint64_t v41 = a1[3];
  uint64_t v42 = a1[4];
  uint64_t v43 = __swift_project_boxed_opaque_existential_0Tm(a1, v41);
  __chkstk_darwin(v43);
  uint64_t v45 = (char *)&v74 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v46 + 16))(v45);
  outlined init with copy of (String, Any)(v39, (uint64_t)&v114, &demangling cache variable for type metadata for NoticePresenting?);
  outlined init with copy of (String, Any)(v40, (uint64_t)v17, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  swift_retain();
  Actions.UndoSuggestLess.Context.init<A>(item:library:noticePresenting:metricsReportingContext:)(v45, v24, (uint64_t)v17, v41, v42, &v101);
  long long v83 = v102;
  long long v115 = v102;
  long long v77 = v103;
  long long v116 = v103;
  uint64_t v114 = v101;
  uint64_t v117 = v104;
  char v118 = 53;
  int64_t v119 = closure #1 in static Actions.ShowSongCredits.action(context:);
  uint64_t v120 = 0;
  uint64_t v121 = 0x4014000000000000;
  long long v122 = &async function pointer to closure #2 in static Actions.UndoSuggestLess.action(context:);
  uint64_t v123 = 0;
  uint64_t v124 = &async function pointer to closure #3 in static Actions.UndoSuggestLess.action(context:);
  uint64_t v125 = 0;
  uint64_t v47 = specialized static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)((uint64_t)&v114);
  swift_release();
  swift_release();
  swift_release();
  outlined init with copy of AlertPresenting((uint64_t)a1, (uint64_t)&v84);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FavoritableMusicItem);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicLibraryActionable & MusicUserRatable);
  if (swift_dynamicCast())
  {
    outlined init with take of MusicLibraryActionable & MusicUserRatable(&v105, &v85);
    uint64_t v48 = v86;
    uint64_t v49 = v87;
    uint64_t v50 = v88;
    uint64_t v51 = __swift_project_boxed_opaque_existential_0Tm(&v85, v86);
    __chkstk_darwin(v51);
    uint64_t v53 = (char *)&v74 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v54 + 16))(v53);
    outlined init with copy of PresentationSource(v82, (uint64_t)&v105);
    int64_t v55 = (void *)swift_allocObject();
    v55[2] = v48;
    v55[3] = v49;
    v55[4] = v50;
    v55[5] = a9;
    v55[6] = a10;
    *(void *)&long long v105 = Actions.RateSong.Context.init<A>(item:library:ratingViewController:presentationSource:)((uint64_t)v53, v81, (uint64_t)partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed MusicUserRatable) -> (@owned RatingViewController), (uint64_t)v55, (uint64_t)&v105, v48, v49, v50);
    *((void *)&v105 + 1) = v56;
    *(void *)&long long v106 = v57;
    *((void *)&v106 + 1) = v58;
    LOBYTE(v107) = 35;
    *((void *)&v107 + 1) = closure #1 in static Actions.AddToLibrary.action(context:);
    uint64_t v108 = 0;
    uint64_t v109 = 0x4014000000000000;
    long long v110 = &async function pointer to closure #2 in static Actions.RateSong.action(context:);
    uint64_t v111 = 0;
    uint64_t v112 = &async function pointer to closure #3 in static Actions.RateSong.action(context:);
    uint64_t v113 = 0;
    swift_retain();
    swift_retain();
    uint64_t v59 = (void *)specialized static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)((uint64_t)&v105);
    swift_release();
    swift_release();
    uint64_t v84 = _swiftEmptyArrayStorage;
    specialized Array.append<A>(contentsOf:)(v59);
    long long v60 = v84;
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v85);
  }
  else
  {
    long long v106 = 0u;
    long long v107 = 0u;
    long long v105 = 0u;
    outlined destroy of TaskPriority?((uint64_t)&v105, &demangling cache variable for type metadata for (MusicLibraryActionable & MusicUserRatable)?);
    long long v60 = _swiftEmptyArrayStorage;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<[ActionMenu<ActionType>.Element]>);
  uint64_t result = (void *)swift_allocObject();
  uint64_t v62 = result;
  result[4] = v80;
  *(void *)&long long v83 = result + 4;
  uint64_t v63 = v78;
  result[5] = v79;
  result[6] = v63;
  result[7] = v47;
  result[8] = v60;
  uint64_t v64 = _swiftEmptyArrayStorage;
  uint64_t v65 = 4;
  while (1)
  {
    uint64_t v66 = v62[v65];
    uint64_t v67 = *(void *)(v66 + 16);
    int64_t v68 = v64[2];
    int64_t v69 = v68 + v67;
    if (__OFADD__(v68, v67)) {
      break;
    }
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_isUniquelyReferenced_nonNull_native();
    if (result && v69 <= v64[3] >> 1)
    {
      if (*(void *)(v66 + 16)) {
        goto LABEL_16;
      }
    }
    else
    {
      if (v68 <= v69) {
        int64_t v70 = v68 + v67;
      }
      else {
        int64_t v70 = v68;
      }
      uint64_t result = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(result, v70, 1, v64);
      uint64_t v64 = result;
      if (*(void *)(v66 + 16))
      {
LABEL_16:
        if ((v64[3] >> 1) - v64[2] < v67) {
          goto LABEL_23;
        }
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ActionMenu<ActionType>.Element);
        uint64_t result = (void *)swift_arrayInitWithCopy();
        if (v67)
        {
          uint64_t v71 = v64[2];
          BOOL v72 = __OFADD__(v71, v67);
          uint64_t v73 = v71 + v67;
          if (v72) {
            goto LABEL_24;
          }
          v64[2] = v73;
        }
        goto LABEL_6;
      }
    }
    if (v67) {
      goto LABEL_22;
    }
LABEL_6:
    uint64_t result = (void *)swift_bridgeObjectRelease();
    if (++v65 == 9)
    {
      swift_setDeallocating();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [ActionMenu<ActionType>.Element]);
      swift_arrayDestroy();
      swift_deallocClassInstance();
      return v64;
    }
  }
  __break(1u);
LABEL_22:
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
  return result;
}

uint64_t thunk for @escaping @callee_guaranteed (@in_guaranteed MusicUserRatable) -> (@owned RatingViewController)(uint64_t a1, uint64_t (*a2)(uint64_t *), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  unint64_t v12[3] = a4;
  v12[4] = a6;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 16))(boxed_opaque_existential_1, a1, a4);
  uint64_t v10 = a2(v12);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v12);
  return v10;
}

uint64_t specialized static MusicActions.actionMenu(item:playbackIntent:playbackController:library:playlistContext:alertPresenter:noticePresenter:presentationSource:shareSheetPresenter:navigationPusher:playlistPickerPresenter:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>, unint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17)
{
  unint64_t v64 = a8;
  unint64_t v65 = a7;
  uint64_t v62 = a5;
  uint64_t v63 = a6;
  uint64_t v70 = a4;
  long long v75 = a3;
  uint64_t v73 = a2;
  uint64_t v80 = a9;
  uint64_t v77 = a15;
  uint64_t v72 = a14;
  uint64_t v71 = a13;
  unint64_t v66 = a12;
  unint64_t v74 = a16;
  uint64_t v60 = a17;
  unint64_t v67 = a10;
  uint64_t v18 = type metadata accessor for UUID();
  uint64_t v78 = *(void *)(v18 - 8);
  uint64_t v79 = v18;
  __chkstk_darwin(v18);
  long long v76 = (char *)&v56 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PlaylistContext?);
  uint64_t v61 = *(void *)(v20 - 8);
  uint64_t v21 = *(void *)(v61 + 64);
  __chkstk_darwin(v20 - 8);
  uint64_t v58 = (uint64_t)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  uint64_t v59 = *(void *)(v22 - 8);
  uint64_t v23 = *(void *)(v59 + 64);
  __chkstk_darwin(v22 - 8);
  uint64_t v57 = (uint64_t)&v56 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for Album();
  v88[3] = v24;
  v88[4] = (uint64_t)&protocol witness table for Album;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v88);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(boxed_opaque_existential_1, a1, v24);
  outlined init with copy of AlertPresenting((uint64_t)v88, (uint64_t)v83);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicItem);
  uint64_t v26 = String.init<A>(describing:)();
  int64_t v68 = v27;
  uint64_t v69 = v26;
  outlined init with copy of (String, Any)(a11, (uint64_t)v87, &demangling cache variable for type metadata for NavigationPushing?);
  outlined init with copy of AlertPresenting((uint64_t)v88, (uint64_t)v86);
  outlined init with copy of (String, Any)(v60, (uint64_t)&v56 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0), &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  outlined init with copy of (String, Any)(v62, (uint64_t)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0), &demangling cache variable for type metadata for PlaylistContext?);
  outlined init with copy of AlertPresenting(v63, (uint64_t)v85);
  outlined init with copy of AlertPresenting(v65, (uint64_t)v84);
  outlined init with copy of (String, Any)(v64, (uint64_t)v83, &demangling cache variable for type metadata for PresentationSource?);
  outlined init with copy of (String, Any)(v66, (uint64_t)v82, &demangling cache variable for type metadata for PlaylistPickerPresenting?);
  outlined init with copy of AlertPresenting(v67, (uint64_t)v81);
  unint64_t v28 = (*(unsigned __int8 *)(v59 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80);
  unint64_t v29 = (v23 + *(unsigned __int8 *)(v61 + 80) + v28) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80);
  unint64_t v30 = (v21 + v29 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v31 = (v30 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v32 = (v31 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v33 = (v32 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v34 = (v33 + 79) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v67 = (v34 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v65 = (v67 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v35 = (v65 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v64 = (v35 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v66 = (v64 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v36 = swift_allocObject();
  outlined init with take of PresentationSource?((uint64_t)v87, v36 + 16, &demangling cache variable for type metadata for NavigationPushing?);
  outlined init with take of AlertPresenting(v86, v36 + 56);
  outlined init with take of PresentationSource?(v57, v36 + v28, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  outlined init with take of PresentationSource?(v58, v36 + v29, &demangling cache variable for type metadata for PlaylistContext?);
  *(void *)(v36 + v30) = v70;
  outlined init with take of AlertPresenting(v85, v36 + v31);
  outlined init with take of AlertPresenting(v84, v36 + v32);
  outlined init with take of PresentationSource?((uint64_t)v83, v36 + v33, &demangling cache variable for type metadata for PresentationSource?);
  outlined init with take of PresentationSource?((uint64_t)v82, v36 + v34, &demangling cache variable for type metadata for PlaylistPickerPresenting?);
  uint64_t v37 = v72;
  uint64_t v38 = v73;
  *(void *)(v36 + v67) = v73;
  unint64_t v39 = v74;
  uint64_t v40 = v75;
  *(void *)(v36 + v65) = v75;
  uint64_t v41 = (void *)(v36 + v35);
  void *v41 = v71;
  v41[1] = v37;
  uint64_t v42 = (uint64_t *)(v36 + v64);
  uint64_t v43 = v36 + v66;
  uint64_t v44 = v77;
  *uint64_t v42 = v77;
  v42[1] = v39;
  outlined init with take of AlertPresenting(v81, v43);
  id v45 = v38;
  id v46 = v40;
  swift_bridgeObjectRetain();
  swift_retain();
  outlined copy of Data?(v44, v39);
  uint64_t v47 = v76;
  UUID.init()();
  uint64_t v48 = UUID.uuidString.getter();
  uint64_t v50 = v49;
  (*(void (**)(char *, uint64_t))(v78 + 8))(v47, v79);
  strcpy((char *)v83, "ActionMenu: ");
  BYTE5(v83[1]) = 0;
  HIWORD(v83[1]) = -5120;
  v51._uint64_t countAndFlagsBits = v69;
  v51._object = v68;
  String.append(_:)(v51);
  swift_bridgeObjectRelease();
  uint64_t v52 = v83[0];
  uint64_t v53 = v83[1];
  uint64_t result = __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v88);
  int64_t v55 = v80;
  *uint64_t v80 = v48;
  v55[1] = v50;
  v55[2] = v52;
  v55[3] = v53;
  v55[4] = 0;
  v55[5] = 0xE000000000000000;
  v55[6] = 0;
  *((unsigned char *)v55 + 56) = 0;
  v55[8] = (uint64_t)partial apply for closure #1 in static MusicActions.actionMenu(item:playbackIntent:playbackController:library:playlistContext:alertPresenter:noticePresenter:presentationSource:shareSheetPresenter:navigationPusher:playlistPickerPresenter:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:);
  v55[9] = v36;
  return result;
}

{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v26;
  void *v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  unint64_t v39;
  void *v40;
  void *v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  id v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  Swift::String v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t result;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  unint64_t v74;
  void *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t *v80;
  long long v81[2];
  unsigned char v82[40];
  void v83[9];
  long long v84[2];
  long long v85[2];
  long long v86[2];
  unsigned char v87[40];
  uint64_t v88[6];

  unint64_t v64 = a8;
  unint64_t v65 = a7;
  uint64_t v62 = a5;
  uint64_t v63 = a6;
  uint64_t v70 = a4;
  long long v75 = a3;
  uint64_t v73 = a2;
  uint64_t v80 = a9;
  uint64_t v77 = a15;
  uint64_t v72 = a14;
  uint64_t v71 = a13;
  unint64_t v66 = a12;
  unint64_t v74 = a16;
  uint64_t v60 = a17;
  unint64_t v67 = a10;
  uint64_t v18 = type metadata accessor for UUID();
  uint64_t v78 = *(void *)(v18 - 8);
  uint64_t v79 = v18;
  __chkstk_darwin(v18);
  long long v76 = (char *)&v56 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PlaylistContext?);
  uint64_t v61 = *(void *)(v20 - 8);
  uint64_t v21 = *(void *)(v61 + 64);
  __chkstk_darwin(v20 - 8);
  uint64_t v58 = (uint64_t)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  uint64_t v59 = *(void *)(v22 - 8);
  uint64_t v23 = *(void *)(v59 + 64);
  __chkstk_darwin(v22 - 8);
  uint64_t v57 = (uint64_t)&v56 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for Artist();
  v88[3] = v24;
  v88[4] = (uint64_t)&protocol witness table for Artist;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v88);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(boxed_opaque_existential_1, a1, v24);
  outlined init with copy of AlertPresenting((uint64_t)v88, (uint64_t)v83);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicItem);
  uint64_t v26 = String.init<A>(describing:)();
  int64_t v68 = v27;
  uint64_t v69 = v26;
  outlined init with copy of (String, Any)(a11, (uint64_t)v87, &demangling cache variable for type metadata for NavigationPushing?);
  outlined init with copy of AlertPresenting((uint64_t)v88, (uint64_t)v86);
  outlined init with copy of (String, Any)(v60, (uint64_t)&v56 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0), &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  outlined init with copy of (String, Any)(v62, (uint64_t)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0), &demangling cache variable for type metadata for PlaylistContext?);
  outlined init with copy of AlertPresenting(v63, (uint64_t)v85);
  outlined init with copy of AlertPresenting(v65, (uint64_t)v84);
  outlined init with copy of (String, Any)(v64, (uint64_t)v83, &demangling cache variable for type metadata for PresentationSource?);
  outlined init with copy of (String, Any)(v66, (uint64_t)v82, &demangling cache variable for type metadata for PlaylistPickerPresenting?);
  outlined init with copy of AlertPresenting(v67, (uint64_t)v81);
  unint64_t v28 = (*(unsigned __int8 *)(v59 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80);
  unint64_t v29 = (v23 + *(unsigned __int8 *)(v61 + 80) + v28) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80);
  unint64_t v30 = (v21 + v29 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v31 = (v30 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v32 = (v31 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v33 = (v32 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v34 = (v33 + 79) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v67 = (v34 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v65 = (v67 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v35 = (v65 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v64 = (v35 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v66 = (v64 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v36 = swift_allocObject();
  outlined init with take of PresentationSource?((uint64_t)v87, v36 + 16, &demangling cache variable for type metadata for NavigationPushing?);
  outlined init with take of AlertPresenting(v86, v36 + 56);
  outlined init with take of PresentationSource?(v57, v36 + v28, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  outlined init with take of PresentationSource?(v58, v36 + v29, &demangling cache variable for type metadata for PlaylistContext?);
  *(void *)(v36 + v30) = v70;
  outlined init with take of AlertPresenting(v85, v36 + v31);
  outlined init with take of AlertPresenting(v84, v36 + v32);
  outlined init with take of PresentationSource?((uint64_t)v83, v36 + v33, &demangling cache variable for type metadata for PresentationSource?);
  outlined init with take of PresentationSource?((uint64_t)v82, v36 + v34, &demangling cache variable for type metadata for PlaylistPickerPresenting?);
  uint64_t v37 = v72;
  uint64_t v38 = v73;
  *(void *)(v36 + v67) = v73;
  unint64_t v39 = v74;
  uint64_t v40 = v75;
  *(void *)(v36 + v65) = v75;
  uint64_t v41 = (void *)(v36 + v35);
  void *v41 = v71;
  v41[1] = v37;
  uint64_t v42 = (uint64_t *)(v36 + v64);
  uint64_t v43 = v36 + v66;
  uint64_t v44 = v77;
  *uint64_t v42 = v77;
  v42[1] = v39;
  outlined init with take of AlertPresenting(v81, v43);
  id v45 = v38;
  id v46 = v40;
  swift_bridgeObjectRetain();
  swift_retain();
  outlined copy of Data?(v44, v39);
  uint64_t v47 = v76;
  UUID.init()();
  uint64_t v48 = UUID.uuidString.getter();
  uint64_t v50 = v49;
  (*(void (**)(char *, uint64_t))(v78 + 8))(v47, v79);
  strcpy((char *)v83, "ActionMenu: ");
  BYTE5(v83[1]) = 0;
  HIWORD(v83[1]) = -5120;
  v51._uint64_t countAndFlagsBits = v69;
  v51._object = v68;
  String.append(_:)(v51);
  swift_bridgeObjectRelease();
  uint64_t v52 = v83[0];
  uint64_t v53 = v83[1];
  uint64_t result = __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v88);
  int64_t v55 = v80;
  *uint64_t v80 = v48;
  v55[1] = v50;
  v55[2] = v52;
  v55[3] = v53;
  v55[4] = 0;
  v55[5] = 0xE000000000000000;
  v55[6] = 0;
  *((unsigned char *)v55 + 56) = 0;
  v55[8] = (uint64_t)partial apply for closure #1 in static MusicActions.actionMenu(item:playbackIntent:playbackController:library:playlistContext:alertPresenter:noticePresenter:presentationSource:shareSheetPresenter:navigationPusher:playlistPickerPresenter:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:);
  v55[9] = v36;
  return result;
}

{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v26;
  void *v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  unint64_t v39;
  void *v40;
  void *v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  id v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  Swift::String v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t result;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  unint64_t v74;
  void *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t *v80;
  long long v81[2];
  unsigned char v82[40];
  void v83[9];
  long long v84[2];
  long long v85[2];
  long long v86[2];
  unsigned char v87[40];
  uint64_t v88[6];

  unint64_t v64 = a8;
  unint64_t v65 = a7;
  uint64_t v62 = a5;
  uint64_t v63 = a6;
  uint64_t v70 = a4;
  long long v75 = a3;
  uint64_t v73 = a2;
  uint64_t v80 = a9;
  uint64_t v77 = a15;
  uint64_t v72 = a14;
  uint64_t v71 = a13;
  unint64_t v66 = a12;
  unint64_t v74 = a16;
  uint64_t v60 = a17;
  unint64_t v67 = a10;
  uint64_t v18 = type metadata accessor for UUID();
  uint64_t v78 = *(void *)(v18 - 8);
  uint64_t v79 = v18;
  __chkstk_darwin(v18);
  long long v76 = (char *)&v56 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PlaylistContext?);
  uint64_t v61 = *(void *)(v20 - 8);
  uint64_t v21 = *(void *)(v61 + 64);
  __chkstk_darwin(v20 - 8);
  uint64_t v58 = (uint64_t)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  uint64_t v59 = *(void *)(v22 - 8);
  uint64_t v23 = *(void *)(v59 + 64);
  __chkstk_darwin(v22 - 8);
  uint64_t v57 = (uint64_t)&v56 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for Curator();
  v88[3] = v24;
  v88[4] = (uint64_t)&protocol witness table for Curator;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v88);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(boxed_opaque_existential_1, a1, v24);
  outlined init with copy of AlertPresenting((uint64_t)v88, (uint64_t)v83);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicItem);
  uint64_t v26 = String.init<A>(describing:)();
  int64_t v68 = v27;
  uint64_t v69 = v26;
  outlined init with copy of (String, Any)(a11, (uint64_t)v87, &demangling cache variable for type metadata for NavigationPushing?);
  outlined init with copy of AlertPresenting((uint64_t)v88, (uint64_t)v86);
  outlined init with copy of (String, Any)(v60, (uint64_t)&v56 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0), &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  outlined init with copy of (String, Any)(v62, (uint64_t)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0), &demangling cache variable for type metadata for PlaylistContext?);
  outlined init with copy of AlertPresenting(v63, (uint64_t)v85);
  outlined init with copy of AlertPresenting(v65, (uint64_t)v84);
  outlined init with copy of (String, Any)(v64, (uint64_t)v83, &demangling cache variable for type metadata for PresentationSource?);
  outlined init with copy of (String, Any)(v66, (uint64_t)v82, &demangling cache variable for type metadata for PlaylistPickerPresenting?);
  outlined init with copy of AlertPresenting(v67, (uint64_t)v81);
  unint64_t v28 = (*(unsigned __int8 *)(v59 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80);
  unint64_t v29 = (v23 + *(unsigned __int8 *)(v61 + 80) + v28) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80);
  unint64_t v30 = (v21 + v29 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v31 = (v30 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v32 = (v31 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v33 = (v32 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v34 = (v33 + 79) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v67 = (v34 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v65 = (v67 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v35 = (v65 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v64 = (v35 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v66 = (v64 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v36 = swift_allocObject();
  outlined init with take of PresentationSource?((uint64_t)v87, v36 + 16, &demangling cache variable for type metadata for NavigationPushing?);
  outlined init with take of AlertPresenting(v86, v36 + 56);
  outlined init with take of PresentationSource?(v57, v36 + v28, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  outlined init with take of PresentationSource?(v58, v36 + v29, &demangling cache variable for type metadata for PlaylistContext?);
  *(void *)(v36 + v30) = v70;
  outlined init with take of AlertPresenting(v85, v36 + v31);
  outlined init with take of AlertPresenting(v84, v36 + v32);
  outlined init with take of PresentationSource?((uint64_t)v83, v36 + v33, &demangling cache variable for type metadata for PresentationSource?);
  outlined init with take of PresentationSource?((uint64_t)v82, v36 + v34, &demangling cache variable for type metadata for PlaylistPickerPresenting?);
  uint64_t v37 = v72;
  uint64_t v38 = v73;
  *(void *)(v36 + v67) = v73;
  unint64_t v39 = v74;
  uint64_t v40 = v75;
  *(void *)(v36 + v65) = v75;
  uint64_t v41 = (void *)(v36 + v35);
  void *v41 = v71;
  v41[1] = v37;
  uint64_t v42 = (uint64_t *)(v36 + v64);
  uint64_t v43 = v36 + v66;
  uint64_t v44 = v77;
  *uint64_t v42 = v77;
  v42[1] = v39;
  outlined init with take of AlertPresenting(v81, v43);
  id v45 = v38;
  id v46 = v40;
  swift_bridgeObjectRetain();
  swift_retain();
  outlined copy of Data?(v44, v39);
  uint64_t v47 = v76;
  UUID.init()();
  uint64_t v48 = UUID.uuidString.getter();
  uint64_t v50 = v49;
  (*(void (**)(char *, uint64_t))(v78 + 8))(v47, v79);
  strcpy((char *)v83, "ActionMenu: ");
  BYTE5(v83[1]) = 0;
  HIWORD(v83[1]) = -5120;
  v51._uint64_t countAndFlagsBits = v69;
  v51._object = v68;
  String.append(_:)(v51);
  swift_bridgeObjectRelease();
  uint64_t v52 = v83[0];
  uint64_t v53 = v83[1];
  uint64_t result = __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v88);
  int64_t v55 = v80;
  *uint64_t v80 = v48;
  v55[1] = v50;
  v55[2] = v52;
  v55[3] = v53;
  v55[4] = 0;
  v55[5] = 0xE000000000000000;
  v55[6] = 0;
  *((unsigned char *)v55 + 56) = 0;
  v55[8] = (uint64_t)partial apply for closure #1 in static MusicActions.actionMenu(item:playbackIntent:playbackController:library:playlistContext:alertPresenter:noticePresenter:presentationSource:shareSheetPresenter:navigationPusher:playlistPickerPresenter:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:);
  v55[9] = v36;
  return result;
}

{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v26;
  void *v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  unint64_t v39;
  void *v40;
  void *v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  id v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  Swift::String v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t result;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  unint64_t v74;
  void *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t *v80;
  long long v81[2];
  unsigned char v82[40];
  void v83[9];
  long long v84[2];
  long long v85[2];
  long long v86[2];
  unsigned char v87[40];
  uint64_t v88[6];

  unint64_t v64 = a8;
  unint64_t v65 = a7;
  uint64_t v62 = a5;
  uint64_t v63 = a6;
  uint64_t v70 = a4;
  long long v75 = a3;
  uint64_t v73 = a2;
  uint64_t v80 = a9;
  uint64_t v77 = a15;
  uint64_t v72 = a14;
  uint64_t v71 = a13;
  unint64_t v66 = a12;
  unint64_t v74 = a16;
  uint64_t v60 = a17;
  unint64_t v67 = a10;
  uint64_t v18 = type metadata accessor for UUID();
  uint64_t v78 = *(void *)(v18 - 8);
  uint64_t v79 = v18;
  __chkstk_darwin(v18);
  long long v76 = (char *)&v56 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PlaylistContext?);
  uint64_t v61 = *(void *)(v20 - 8);
  uint64_t v21 = *(void *)(v61 + 64);
  __chkstk_darwin(v20 - 8);
  uint64_t v58 = (uint64_t)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  uint64_t v59 = *(void *)(v22 - 8);
  uint64_t v23 = *(void *)(v59 + 64);
  __chkstk_darwin(v22 - 8);
  uint64_t v57 = (uint64_t)&v56 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for EditorialItem();
  v88[3] = v24;
  v88[4] = lazy protocol witness table accessor for type GenericMusicItem and conformance GenericMusicItem(&lazy protocol witness table cache variable for type EditorialItem and conformance EditorialItem, (void (*)(uint64_t))&type metadata accessor for EditorialItem);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v88);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(boxed_opaque_existential_1, a1, v24);
  outlined init with copy of AlertPresenting((uint64_t)v88, (uint64_t)v83);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicItem);
  uint64_t v26 = String.init<A>(describing:)();
  int64_t v68 = v27;
  uint64_t v69 = v26;
  outlined init with copy of (String, Any)(a11, (uint64_t)v87, &demangling cache variable for type metadata for NavigationPushing?);
  outlined init with copy of AlertPresenting((uint64_t)v88, (uint64_t)v86);
  outlined init with copy of (String, Any)(v60, (uint64_t)&v56 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0), &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  outlined init with copy of (String, Any)(v62, (uint64_t)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0), &demangling cache variable for type metadata for PlaylistContext?);
  outlined init with copy of AlertPresenting(v63, (uint64_t)v85);
  outlined init with copy of AlertPresenting(v65, (uint64_t)v84);
  outlined init with copy of (String, Any)(v64, (uint64_t)v83, &demangling cache variable for type metadata for PresentationSource?);
  outlined init with copy of (String, Any)(v66, (uint64_t)v82, &demangling cache variable for type metadata for PlaylistPickerPresenting?);
  outlined init with copy of AlertPresenting(v67, (uint64_t)v81);
  unint64_t v28 = (*(unsigned __int8 *)(v59 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80);
  unint64_t v29 = (v23 + *(unsigned __int8 *)(v61 + 80) + v28) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80);
  unint64_t v30 = (v21 + v29 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v31 = (v30 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v32 = (v31 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v33 = (v32 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v34 = (v33 + 79) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v67 = (v34 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v65 = (v67 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v35 = (v65 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v64 = (v35 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v66 = (v64 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v36 = swift_allocObject();
  outlined init with take of PresentationSource?((uint64_t)v87, v36 + 16, &demangling cache variable for type metadata for NavigationPushing?);
  outlined init with take of AlertPresenting(v86, v36 + 56);
  outlined init with take of PresentationSource?(v57, v36 + v28, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  outlined init with take of PresentationSource?(v58, v36 + v29, &demangling cache variable for type metadata for PlaylistContext?);
  *(void *)(v36 + v30) = v70;
  outlined init with take of AlertPresenting(v85, v36 + v31);
  outlined init with take of AlertPresenting(v84, v36 + v32);
  outlined init with take of PresentationSource?((uint64_t)v83, v36 + v33, &demangling cache variable for type metadata for PresentationSource?);
  outlined init with take of PresentationSource?((uint64_t)v82, v36 + v34, &demangling cache variable for type metadata for PlaylistPickerPresenting?);
  uint64_t v37 = v72;
  uint64_t v38 = v73;
  *(void *)(v36 + v67) = v73;
  unint64_t v39 = v74;
  uint64_t v40 = v75;
  *(void *)(v36 + v65) = v75;
  uint64_t v41 = (void *)(v36 + v35);
  void *v41 = v71;
  v41[1] = v37;
  uint64_t v42 = (uint64_t *)(v36 + v64);
  uint64_t v43 = v36 + v66;
  uint64_t v44 = v77;
  *uint64_t v42 = v77;
  v42[1] = v39;
  outlined init with take of AlertPresenting(v81, v43);
  id v45 = v38;
  id v46 = v40;
  swift_bridgeObjectRetain();
  swift_retain();
  outlined copy of Data?(v44, v39);
  uint64_t v47 = v76;
  UUID.init()();
  uint64_t v48 = UUID.uuidString.getter();
  uint64_t v50 = v49;
  (*(void (**)(char *, uint64_t))(v78 + 8))(v47, v79);
  strcpy((char *)v83, "ActionMenu: ");
  BYTE5(v83[1]) = 0;
  HIWORD(v83[1]) = -5120;
  v51._uint64_t countAndFlagsBits = v69;
  v51._object = v68;
  String.append(_:)(v51);
  swift_bridgeObjectRelease();
  uint64_t v52 = v83[0];
  uint64_t v53 = v83[1];
  uint64_t result = __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v88);
  int64_t v55 = v80;
  *uint64_t v80 = v48;
  v55[1] = v50;
  v55[2] = v52;
  v55[3] = v53;
  v55[4] = 0;
  v55[5] = 0xE000000000000000;
  v55[6] = 0;
  *((unsigned char *)v55 + 56) = 0;
  v55[8] = (uint64_t)partial apply for closure #1 in static MusicActions.actionMenu(item:playbackIntent:playbackController:library:playlistContext:alertPresenter:noticePresenter:presentationSource:shareSheetPresenter:navigationPusher:playlistPickerPresenter:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:);
  v55[9] = v36;
  return result;
}

{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v26;
  void *v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  unint64_t v39;
  void *v40;
  void *v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  id v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  Swift::String v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t result;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  unint64_t v74;
  void *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t *v80;
  long long v81[2];
  unsigned char v82[40];
  void v83[9];
  long long v84[2];
  long long v85[2];
  long long v86[2];
  unsigned char v87[40];
  uint64_t v88[6];

  unint64_t v64 = a8;
  unint64_t v65 = a7;
  uint64_t v62 = a5;
  uint64_t v63 = a6;
  uint64_t v70 = a4;
  long long v75 = a3;
  uint64_t v73 = a2;
  uint64_t v80 = a9;
  uint64_t v77 = a15;
  uint64_t v72 = a14;
  uint64_t v71 = a13;
  unint64_t v66 = a12;
  unint64_t v74 = a16;
  uint64_t v60 = a17;
  unint64_t v67 = a10;
  uint64_t v18 = type metadata accessor for UUID();
  uint64_t v78 = *(void *)(v18 - 8);
  uint64_t v79 = v18;
  __chkstk_darwin(v18);
  long long v76 = (char *)&v56 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PlaylistContext?);
  uint64_t v61 = *(void *)(v20 - 8);
  uint64_t v21 = *(void *)(v61 + 64);
  __chkstk_darwin(v20 - 8);
  uint64_t v58 = (uint64_t)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  uint64_t v59 = *(void *)(v22 - 8);
  uint64_t v23 = *(void *)(v59 + 64);
  __chkstk_darwin(v22 - 8);
  uint64_t v57 = (uint64_t)&v56 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for Genre();
  v88[3] = v24;
  v88[4] = (uint64_t)&protocol witness table for Genre;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v88);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(boxed_opaque_existential_1, a1, v24);
  outlined init with copy of AlertPresenting((uint64_t)v88, (uint64_t)v83);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicItem);
  uint64_t v26 = String.init<A>(describing:)();
  int64_t v68 = v27;
  uint64_t v69 = v26;
  outlined init with copy of (String, Any)(a11, (uint64_t)v87, &demangling cache variable for type metadata for NavigationPushing?);
  outlined init with copy of AlertPresenting((uint64_t)v88, (uint64_t)v86);
  outlined init with copy of (String, Any)(v60, (uint64_t)&v56 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0), &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  outlined init with copy of (String, Any)(v62, (uint64_t)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0), &demangling cache variable for type metadata for PlaylistContext?);
  outlined init with copy of AlertPresenting(v63, (uint64_t)v85);
  outlined init with copy of AlertPresenting(v65, (uint64_t)v84);
  outlined init with copy of (String, Any)(v64, (uint64_t)v83, &demangling cache variable for type metadata for PresentationSource?);
  outlined init with copy of (String, Any)(v66, (uint64_t)v82, &demangling cache variable for type metadata for PlaylistPickerPresenting?);
  outlined init with copy of AlertPresenting(v67, (uint64_t)v81);
  unint64_t v28 = (*(unsigned __int8 *)(v59 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80);
  unint64_t v29 = (v23 + *(unsigned __int8 *)(v61 + 80) + v28) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80);
  unint64_t v30 = (v21 + v29 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v31 = (v30 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v32 = (v31 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v33 = (v32 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v34 = (v33 + 79) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v67 = (v34 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v65 = (v67 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v35 = (v65 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v64 = (v35 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v66 = (v64 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v36 = swift_allocObject();
  outlined init with take of PresentationSource?((uint64_t)v87, v36 + 16, &demangling cache variable for type metadata for NavigationPushing?);
  outlined init with take of AlertPresenting(v86, v36 + 56);
  outlined init with take of PresentationSource?(v57, v36 + v28, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  outlined init with take of PresentationSource?(v58, v36 + v29, &demangling cache variable for type metadata for PlaylistContext?);
  *(void *)(v36 + v30) = v70;
  outlined init with take of AlertPresenting(v85, v36 + v31);
  outlined init with take of AlertPresenting(v84, v36 + v32);
  outlined init with take of PresentationSource?((uint64_t)v83, v36 + v33, &demangling cache variable for type metadata for PresentationSource?);
  outlined init with take of PresentationSource?((uint64_t)v82, v36 + v34, &demangling cache variable for type metadata for PlaylistPickerPresenting?);
  uint64_t v37 = v72;
  uint64_t v38 = v73;
  *(void *)(v36 + v67) = v73;
  unint64_t v39 = v74;
  uint64_t v40 = v75;
  *(void *)(v36 + v65) = v75;
  uint64_t v41 = (void *)(v36 + v35);
  void *v41 = v71;
  v41[1] = v37;
  uint64_t v42 = (uint64_t *)(v36 + v64);
  uint64_t v43 = v36 + v66;
  uint64_t v44 = v77;
  *uint64_t v42 = v77;
  v42[1] = v39;
  outlined init with take of AlertPresenting(v81, v43);
  id v45 = v38;
  id v46 = v40;
  swift_bridgeObjectRetain();
  swift_retain();
  outlined copy of Data?(v44, v39);
  uint64_t v47 = v76;
  UUID.init()();
  uint64_t v48 = UUID.uuidString.getter();
  uint64_t v50 = v49;
  (*(void (**)(char *, uint64_t))(v78 + 8))(v47, v79);
  strcpy((char *)v83, "ActionMenu: ");
  BYTE5(v83[1]) = 0;
  HIWORD(v83[1]) = -5120;
  v51._uint64_t countAndFlagsBits = v69;
  v51._object = v68;
  String.append(_:)(v51);
  swift_bridgeObjectRelease();
  uint64_t v52 = v83[0];
  uint64_t v53 = v83[1];
  uint64_t result = __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v88);
  int64_t v55 = v80;
  *uint64_t v80 = v48;
  v55[1] = v50;
  v55[2] = v52;
  v55[3] = v53;
  v55[4] = 0;
  v55[5] = 0xE000000000000000;
  v55[6] = 0;
  *((unsigned char *)v55 + 56) = 0;
  v55[8] = (uint64_t)partial apply for closure #1 in static MusicActions.actionMenu(item:playbackIntent:playbackController:library:playlistContext:alertPresenter:noticePresenter:presentationSource:shareSheetPresenter:navigationPusher:playlistPickerPresenter:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:);
  v55[9] = v36;
  return result;
}

{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v26;
  void *v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  unint64_t v39;
  void *v40;
  void *v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  id v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  Swift::String v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t result;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  unint64_t v74;
  void *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t *v80;
  long long v81[2];
  unsigned char v82[40];
  void v83[9];
  long long v84[2];
  long long v85[2];
  long long v86[2];
  unsigned char v87[40];
  uint64_t v88[6];

  unint64_t v64 = a8;
  unint64_t v65 = a7;
  uint64_t v62 = a5;
  uint64_t v63 = a6;
  uint64_t v70 = a4;
  long long v75 = a3;
  uint64_t v73 = a2;
  uint64_t v80 = a9;
  uint64_t v77 = a15;
  uint64_t v72 = a14;
  uint64_t v71 = a13;
  unint64_t v66 = a12;
  unint64_t v74 = a16;
  uint64_t v60 = a17;
  unint64_t v67 = a10;
  uint64_t v18 = type metadata accessor for UUID();
  uint64_t v78 = *(void *)(v18 - 8);
  uint64_t v79 = v18;
  __chkstk_darwin(v18);
  long long v76 = (char *)&v56 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PlaylistContext?);
  uint64_t v61 = *(void *)(v20 - 8);
  uint64_t v21 = *(void *)(v61 + 64);
  __chkstk_darwin(v20 - 8);
  uint64_t v58 = (uint64_t)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  uint64_t v59 = *(void *)(v22 - 8);
  uint64_t v23 = *(void *)(v59 + 64);
  __chkstk_darwin(v22 - 8);
  uint64_t v57 = (uint64_t)&v56 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for MusicMovie();
  v88[3] = v24;
  v88[4] = lazy protocol witness table accessor for type GenericMusicItem and conformance GenericMusicItem(&lazy protocol witness table cache variable for type MusicMovie and conformance MusicMovie, (void (*)(uint64_t))&type metadata accessor for MusicMovie);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v88);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(boxed_opaque_existential_1, a1, v24);
  outlined init with copy of AlertPresenting((uint64_t)v88, (uint64_t)v83);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicItem);
  uint64_t v26 = String.init<A>(describing:)();
  int64_t v68 = v27;
  uint64_t v69 = v26;
  outlined init with copy of (String, Any)(a11, (uint64_t)v87, &demangling cache variable for type metadata for NavigationPushing?);
  outlined init with copy of AlertPresenting((uint64_t)v88, (uint64_t)v86);
  outlined init with copy of (String, Any)(v60, (uint64_t)&v56 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0), &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  outlined init with copy of (String, Any)(v62, (uint64_t)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0), &demangling cache variable for type metadata for PlaylistContext?);
  outlined init with copy of AlertPresenting(v63, (uint64_t)v85);
  outlined init with copy of AlertPresenting(v65, (uint64_t)v84);
  outlined init with copy of (String, Any)(v64, (uint64_t)v83, &demangling cache variable for type metadata for PresentationSource?);
  outlined init with copy of (String, Any)(v66, (uint64_t)v82, &demangling cache variable for type metadata for PlaylistPickerPresenting?);
  outlined init with copy of AlertPresenting(v67, (uint64_t)v81);
  unint64_t v28 = (*(unsigned __int8 *)(v59 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80);
  unint64_t v29 = (v23 + *(unsigned __int8 *)(v61 + 80) + v28) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80);
  unint64_t v30 = (v21 + v29 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v31 = (v30 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v32 = (v31 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v33 = (v32 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v34 = (v33 + 79) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v67 = (v34 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v65 = (v67 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v35 = (v65 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v64 = (v35 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v66 = (v64 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v36 = swift_allocObject();
  outlined init with take of PresentationSource?((uint64_t)v87, v36 + 16, &demangling cache variable for type metadata for NavigationPushing?);
  outlined init with take of AlertPresenting(v86, v36 + 56);
  outlined init with take of PresentationSource?(v57, v36 + v28, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  outlined init with take of PresentationSource?(v58, v36 + v29, &demangling cache variable for type metadata for PlaylistContext?);
  *(void *)(v36 + v30) = v70;
  outlined init with take of AlertPresenting(v85, v36 + v31);
  outlined init with take of AlertPresenting(v84, v36 + v32);
  outlined init with take of PresentationSource?((uint64_t)v83, v36 + v33, &demangling cache variable for type metadata for PresentationSource?);
  outlined init with take of PresentationSource?((uint64_t)v82, v36 + v34, &demangling cache variable for type metadata for PlaylistPickerPresenting?);
  uint64_t v37 = v72;
  uint64_t v38 = v73;
  *(void *)(v36 + v67) = v73;
  unint64_t v39 = v74;
  uint64_t v40 = v75;
  *(void *)(v36 + v65) = v75;
  uint64_t v41 = (void *)(v36 + v35);
  void *v41 = v71;
  v41[1] = v37;
  uint64_t v42 = (uint64_t *)(v36 + v64);
  uint64_t v43 = v36 + v66;
  uint64_t v44 = v77;
  *uint64_t v42 = v77;
  v42[1] = v39;
  outlined init with take of AlertPresenting(v81, v43);
  id v45 = v38;
  id v46 = v40;
  swift_bridgeObjectRetain();
  swift_retain();
  outlined copy of Data?(v44, v39);
  uint64_t v47 = v76;
  UUID.init()();
  uint64_t v48 = UUID.uuidString.getter();
  uint64_t v50 = v49;
  (*(void (**)(char *, uint64_t))(v78 + 8))(v47, v79);
  strcpy((char *)v83, "ActionMenu: ");
  BYTE5(v83[1]) = 0;
  HIWORD(v83[1]) = -5120;
  v51._uint64_t countAndFlagsBits = v69;
  v51._object = v68;
  String.append(_:)(v51);
  swift_bridgeObjectRelease();
  uint64_t v52 = v83[0];
  uint64_t v53 = v83[1];
  uint64_t result = __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v88);
  int64_t v55 = v80;
  *uint64_t v80 = v48;
  v55[1] = v50;
  v55[2] = v52;
  v55[3] = v53;
  v55[4] = 0;
  v55[5] = 0xE000000000000000;
  v55[6] = 0;
  *((unsigned char *)v55 + 56) = 0;
  v55[8] = (uint64_t)partial apply for closure #1 in static MusicActions.actionMenu(item:playbackIntent:playbackController:library:playlistContext:alertPresenter:noticePresenter:presentationSource:shareSheetPresenter:navigationPusher:playlistPickerPresenter:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:);
  v55[9] = v36;
  return result;
}

{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v26;
  void *v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  unint64_t v39;
  void *v40;
  void *v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  id v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  Swift::String v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t result;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  unint64_t v74;
  void *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t *v80;
  long long v81[2];
  unsigned char v82[40];
  void v83[9];
  long long v84[2];
  long long v85[2];
  long long v86[2];
  unsigned char v87[40];
  uint64_t v88[6];

  unint64_t v64 = a8;
  unint64_t v65 = a7;
  uint64_t v62 = a5;
  uint64_t v63 = a6;
  uint64_t v70 = a4;
  long long v75 = a3;
  uint64_t v73 = a2;
  uint64_t v80 = a9;
  uint64_t v77 = a15;
  uint64_t v72 = a14;
  uint64_t v71 = a13;
  unint64_t v66 = a12;
  unint64_t v74 = a16;
  uint64_t v60 = a17;
  unint64_t v67 = a10;
  uint64_t v18 = type metadata accessor for UUID();
  uint64_t v78 = *(void *)(v18 - 8);
  uint64_t v79 = v18;
  __chkstk_darwin(v18);
  long long v76 = (char *)&v56 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PlaylistContext?);
  uint64_t v61 = *(void *)(v20 - 8);
  uint64_t v21 = *(void *)(v61 + 64);
  __chkstk_darwin(v20 - 8);
  uint64_t v58 = (uint64_t)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  uint64_t v59 = *(void *)(v22 - 8);
  uint64_t v23 = *(void *)(v59 + 64);
  __chkstk_darwin(v22 - 8);
  uint64_t v57 = (uint64_t)&v56 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for MusicVideo();
  v88[3] = v24;
  v88[4] = (uint64_t)&protocol witness table for MusicVideo;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v88);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(boxed_opaque_existential_1, a1, v24);
  outlined init with copy of AlertPresenting((uint64_t)v88, (uint64_t)v83);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicItem);
  uint64_t v26 = String.init<A>(describing:)();
  int64_t v68 = v27;
  uint64_t v69 = v26;
  outlined init with copy of (String, Any)(a11, (uint64_t)v87, &demangling cache variable for type metadata for NavigationPushing?);
  outlined init with copy of AlertPresenting((uint64_t)v88, (uint64_t)v86);
  outlined init with copy of (String, Any)(v60, (uint64_t)&v56 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0), &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  outlined init with copy of (String, Any)(v62, (uint64_t)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0), &demangling cache variable for type metadata for PlaylistContext?);
  outlined init with copy of AlertPresenting(v63, (uint64_t)v85);
  outlined init with copy of AlertPresenting(v65, (uint64_t)v84);
  outlined init with copy of (String, Any)(v64, (uint64_t)v83, &demangling cache variable for type metadata for PresentationSource?);
  outlined init with copy of (String, Any)(v66, (uint64_t)v82, &demangling cache variable for type metadata for PlaylistPickerPresenting?);
  outlined init with copy of AlertPresenting(v67, (uint64_t)v81);
  unint64_t v28 = (*(unsigned __int8 *)(v59 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80);
  unint64_t v29 = (v23 + *(unsigned __int8 *)(v61 + 80) + v28) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80);
  unint64_t v30 = (v21 + v29 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v31 = (v30 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v32 = (v31 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v33 = (v32 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v34 = (v33 + 79) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v67 = (v34 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v65 = (v67 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v35 = (v65 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v64 = (v35 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v66 = (v64 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v36 = swift_allocObject();
  outlined init with take of PresentationSource?((uint64_t)v87, v36 + 16, &demangling cache variable for type metadata for NavigationPushing?);
  outlined init with take of AlertPresenting(v86, v36 + 56);
  outlined init with take of PresentationSource?(v57, v36 + v28, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  outlined init with take of PresentationSource?(v58, v36 + v29, &demangling cache variable for type metadata for PlaylistContext?);
  *(void *)(v36 + v30) = v70;
  outlined init with take of AlertPresenting(v85, v36 + v31);
  outlined init with take of AlertPresenting(v84, v36 + v32);
  outlined init with take of PresentationSource?((uint64_t)v83, v36 + v33, &demangling cache variable for type metadata for PresentationSource?);
  outlined init with take of PresentationSource?((uint64_t)v82, v36 + v34, &demangling cache variable for type metadata for PlaylistPickerPresenting?);
  uint64_t v37 = v72;
  uint64_t v38 = v73;
  *(void *)(v36 + v67) = v73;
  unint64_t v39 = v74;
  uint64_t v40 = v75;
  *(void *)(v36 + v65) = v75;
  uint64_t v41 = (void *)(v36 + v35);
  void *v41 = v71;
  v41[1] = v37;
  uint64_t v42 = (uint64_t *)(v36 + v64);
  uint64_t v43 = v36 + v66;
  uint64_t v44 = v77;
  *uint64_t v42 = v77;
  v42[1] = v39;
  outlined init with take of AlertPresenting(v81, v43);
  id v45 = v38;
  id v46 = v40;
  swift_bridgeObjectRetain();
  swift_retain();
  outlined copy of Data?(v44, v39);
  uint64_t v47 = v76;
  UUID.init()();
  uint64_t v48 = UUID.uuidString.getter();
  uint64_t v50 = v49;
  (*(void (**)(char *, uint64_t))(v78 + 8))(v47, v79);
  strcpy((char *)v83, "ActionMenu: ");
  BYTE5(v83[1]) = 0;
  HIWORD(v83[1]) = -5120;
  v51._uint64_t countAndFlagsBits = v69;
  v51._object = v68;
  String.append(_:)(v51);
  swift_bridgeObjectRelease();
  uint64_t v52 = v83[0];
  uint64_t v53 = v83[1];
  uint64_t result = __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v88);
  int64_t v55 = v80;
  *uint64_t v80 = v48;
  v55[1] = v50;
  v55[2] = v52;
  v55[3] = v53;
  v55[4] = 0;
  v55[5] = 0xE000000000000000;
  v55[6] = 0;
  *((unsigned char *)v55 + 56) = 0;
  v55[8] = (uint64_t)partial apply for closure #1 in static MusicActions.actionMenu(item:playbackIntent:playbackController:library:playlistContext:alertPresenter:noticePresenter:presentationSource:shareSheetPresenter:navigationPusher:playlistPickerPresenter:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:);
  v55[9] = v36;
  return result;
}

{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v26;
  void *v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  unint64_t v39;
  void *v40;
  void *v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  id v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  Swift::String v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t result;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  unint64_t v74;
  void *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t *v80;
  long long v81[2];
  unsigned char v82[40];
  void v83[9];
  long long v84[2];
  long long v85[2];
  long long v86[2];
  unsigned char v87[40];
  uint64_t v88[6];

  unint64_t v64 = a8;
  unint64_t v65 = a7;
  uint64_t v62 = a5;
  uint64_t v63 = a6;
  uint64_t v70 = a4;
  long long v75 = a3;
  uint64_t v73 = a2;
  uint64_t v80 = a9;
  uint64_t v77 = a15;
  uint64_t v72 = a14;
  uint64_t v71 = a13;
  unint64_t v66 = a12;
  unint64_t v74 = a16;
  uint64_t v60 = a17;
  unint64_t v67 = a10;
  uint64_t v18 = type metadata accessor for UUID();
  uint64_t v78 = *(void *)(v18 - 8);
  uint64_t v79 = v18;
  __chkstk_darwin(v18);
  long long v76 = (char *)&v56 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PlaylistContext?);
  uint64_t v61 = *(void *)(v20 - 8);
  uint64_t v21 = *(void *)(v61 + 64);
  __chkstk_darwin(v20 - 8);
  uint64_t v58 = (uint64_t)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  uint64_t v59 = *(void *)(v22 - 8);
  uint64_t v23 = *(void *)(v59 + 64);
  __chkstk_darwin(v22 - 8);
  uint64_t v57 = (uint64_t)&v56 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for Playlist();
  v88[3] = v24;
  v88[4] = (uint64_t)&protocol witness table for Playlist;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v88);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(boxed_opaque_existential_1, a1, v24);
  outlined init with copy of AlertPresenting((uint64_t)v88, (uint64_t)v83);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicItem);
  uint64_t v26 = String.init<A>(describing:)();
  int64_t v68 = v27;
  uint64_t v69 = v26;
  outlined init with copy of (String, Any)(a11, (uint64_t)v87, &demangling cache variable for type metadata for NavigationPushing?);
  outlined init with copy of AlertPresenting((uint64_t)v88, (uint64_t)v86);
  outlined init with copy of (String, Any)(v60, (uint64_t)&v56 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0), &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  outlined init with copy of (String, Any)(v62, (uint64_t)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0), &demangling cache variable for type metadata for PlaylistContext?);
  outlined init with copy of AlertPresenting(v63, (uint64_t)v85);
  outlined init with copy of AlertPresenting(v65, (uint64_t)v84);
  outlined init with copy of (String, Any)(v64, (uint64_t)v83, &demangling cache variable for type metadata for PresentationSource?);
  outlined init with copy of (String, Any)(v66, (uint64_t)v82, &demangling cache variable for type metadata for PlaylistPickerPresenting?);
  outlined init with copy of AlertPresenting(v67, (uint64_t)v81);
  unint64_t v28 = (*(unsigned __int8 *)(v59 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80);
  unint64_t v29 = (v23 + *(unsigned __int8 *)(v61 + 80) + v28) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80);
  unint64_t v30 = (v21 + v29 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v31 = (v30 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v32 = (v31 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v33 = (v32 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v34 = (v33 + 79) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v67 = (v34 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v65 = (v67 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v35 = (v65 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v64 = (v35 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v66 = (v64 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v36 = swift_allocObject();
  outlined init with take of PresentationSource?((uint64_t)v87, v36 + 16, &demangling cache variable for type metadata for NavigationPushing?);
  outlined init with take of AlertPresenting(v86, v36 + 56);
  outlined init with take of PresentationSource?(v57, v36 + v28, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  outlined init with take of PresentationSource?(v58, v36 + v29, &demangling cache variable for type metadata for PlaylistContext?);
  *(void *)(v36 + v30) = v70;
  outlined init with take of AlertPresenting(v85, v36 + v31);
  outlined init with take of AlertPresenting(v84, v36 + v32);
  outlined init with take of PresentationSource?((uint64_t)v83, v36 + v33, &demangling cache variable for type metadata for PresentationSource?);
  outlined init with take of PresentationSource?((uint64_t)v82, v36 + v34, &demangling cache variable for type metadata for PlaylistPickerPresenting?);
  uint64_t v37 = v72;
  uint64_t v38 = v73;
  *(void *)(v36 + v67) = v73;
  unint64_t v39 = v74;
  uint64_t v40 = v75;
  *(void *)(v36 + v65) = v75;
  uint64_t v41 = (void *)(v36 + v35);
  void *v41 = v71;
  v41[1] = v37;
  uint64_t v42 = (uint64_t *)(v36 + v64);
  uint64_t v43 = v36 + v66;
  uint64_t v44 = v77;
  *uint64_t v42 = v77;
  v42[1] = v39;
  outlined init with take of AlertPresenting(v81, v43);
  id v45 = v38;
  id v46 = v40;
  swift_bridgeObjectRetain();
  swift_retain();
  outlined copy of Data?(v44, v39);
  uint64_t v47 = v76;
  UUID.init()();
  uint64_t v48 = UUID.uuidString.getter();
  uint64_t v50 = v49;
  (*(void (**)(char *, uint64_t))(v78 + 8))(v47, v79);
  strcpy((char *)v83, "ActionMenu: ");
  BYTE5(v83[1]) = 0;
  HIWORD(v83[1]) = -5120;
  v51._uint64_t countAndFlagsBits = v69;
  v51._object = v68;
  String.append(_:)(v51);
  swift_bridgeObjectRelease();
  uint64_t v52 = v83[0];
  uint64_t v53 = v83[1];
  uint64_t result = __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v88);
  int64_t v55 = v80;
  *uint64_t v80 = v48;
  v55[1] = v50;
  v55[2] = v52;
  v55[3] = v53;
  v55[4] = 0;
  v55[5] = 0xE000000000000000;
  v55[6] = 0;
  *((unsigned char *)v55 + 56) = 0;
  v55[8] = (uint64_t)partial apply for closure #1 in static MusicActions.actionMenu(item:playbackIntent:playbackController:library:playlistContext:alertPresenter:noticePresenter:presentationSource:shareSheetPresenter:navigationPusher:playlistPickerPresenter:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:);
  v55[9] = v36;
  return result;
}

{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v26;
  void *v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  unint64_t v39;
  void *v40;
  void *v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  id v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  Swift::String v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t result;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  unint64_t v74;
  void *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t *v80;
  long long v81[2];
  unsigned char v82[40];
  void v83[9];
  long long v84[2];
  long long v85[2];
  long long v86[2];
  unsigned char v87[40];
  uint64_t v88[6];

  unint64_t v64 = a8;
  unint64_t v65 = a7;
  uint64_t v62 = a5;
  uint64_t v63 = a6;
  uint64_t v70 = a4;
  long long v75 = a3;
  uint64_t v73 = a2;
  uint64_t v80 = a9;
  uint64_t v77 = a15;
  uint64_t v72 = a14;
  uint64_t v71 = a13;
  unint64_t v66 = a12;
  unint64_t v74 = a16;
  uint64_t v60 = a17;
  unint64_t v67 = a10;
  uint64_t v18 = type metadata accessor for UUID();
  uint64_t v78 = *(void *)(v18 - 8);
  uint64_t v79 = v18;
  __chkstk_darwin(v18);
  long long v76 = (char *)&v56 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PlaylistContext?);
  uint64_t v61 = *(void *)(v20 - 8);
  uint64_t v21 = *(void *)(v61 + 64);
  __chkstk_darwin(v20 - 8);
  uint64_t v58 = (uint64_t)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  uint64_t v59 = *(void *)(v22 - 8);
  uint64_t v23 = *(void *)(v59 + 64);
  __chkstk_darwin(v22 - 8);
  uint64_t v57 = (uint64_t)&v56 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for RadioShow();
  v88[3] = v24;
  v88[4] = (uint64_t)&protocol witness table for RadioShow;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v88);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(boxed_opaque_existential_1, a1, v24);
  outlined init with copy of AlertPresenting((uint64_t)v88, (uint64_t)v83);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicItem);
  uint64_t v26 = String.init<A>(describing:)();
  int64_t v68 = v27;
  uint64_t v69 = v26;
  outlined init with copy of (String, Any)(a11, (uint64_t)v87, &demangling cache variable for type metadata for NavigationPushing?);
  outlined init with copy of AlertPresenting((uint64_t)v88, (uint64_t)v86);
  outlined init with copy of (String, Any)(v60, (uint64_t)&v56 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0), &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  outlined init with copy of (String, Any)(v62, (uint64_t)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0), &demangling cache variable for type metadata for PlaylistContext?);
  outlined init with copy of AlertPresenting(v63, (uint64_t)v85);
  outlined init with copy of AlertPresenting(v65, (uint64_t)v84);
  outlined init with copy of (String, Any)(v64, (uint64_t)v83, &demangling cache variable for type metadata for PresentationSource?);
  outlined init with copy of (String, Any)(v66, (uint64_t)v82, &demangling cache variable for type metadata for PlaylistPickerPresenting?);
  outlined init with copy of AlertPresenting(v67, (uint64_t)v81);
  unint64_t v28 = (*(unsigned __int8 *)(v59 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80);
  unint64_t v29 = (v23 + *(unsigned __int8 *)(v61 + 80) + v28) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80);
  unint64_t v30 = (v21 + v29 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v31 = (v30 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v32 = (v31 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v33 = (v32 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v34 = (v33 + 79) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v67 = (v34 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v65 = (v67 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v35 = (v65 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v64 = (v35 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v66 = (v64 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v36 = swift_allocObject();
  outlined init with take of PresentationSource?((uint64_t)v87, v36 + 16, &demangling cache variable for type metadata for NavigationPushing?);
  outlined init with take of AlertPresenting(v86, v36 + 56);
  outlined init with take of PresentationSource?(v57, v36 + v28, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  outlined init with take of PresentationSource?(v58, v36 + v29, &demangling cache variable for type metadata for PlaylistContext?);
  *(void *)(v36 + v30) = v70;
  outlined init with take of AlertPresenting(v85, v36 + v31);
  outlined init with take of AlertPresenting(v84, v36 + v32);
  outlined init with take of PresentationSource?((uint64_t)v83, v36 + v33, &demangling cache variable for type metadata for PresentationSource?);
  outlined init with take of PresentationSource?((uint64_t)v82, v36 + v34, &demangling cache variable for type metadata for PlaylistPickerPresenting?);
  uint64_t v37 = v72;
  uint64_t v38 = v73;
  *(void *)(v36 + v67) = v73;
  unint64_t v39 = v74;
  uint64_t v40 = v75;
  *(void *)(v36 + v65) = v75;
  uint64_t v41 = (void *)(v36 + v35);
  void *v41 = v71;
  v41[1] = v37;
  uint64_t v42 = (uint64_t *)(v36 + v64);
  uint64_t v43 = v36 + v66;
  uint64_t v44 = v77;
  *uint64_t v42 = v77;
  v42[1] = v39;
  outlined init with take of AlertPresenting(v81, v43);
  id v45 = v38;
  id v46 = v40;
  swift_bridgeObjectRetain();
  swift_retain();
  outlined copy of Data?(v44, v39);
  uint64_t v47 = v76;
  UUID.init()();
  uint64_t v48 = UUID.uuidString.getter();
  uint64_t v50 = v49;
  (*(void (**)(char *, uint64_t))(v78 + 8))(v47, v79);
  strcpy((char *)v83, "ActionMenu: ");
  BYTE5(v83[1]) = 0;
  HIWORD(v83[1]) = -5120;
  v51._uint64_t countAndFlagsBits = v69;
  v51._object = v68;
  String.append(_:)(v51);
  swift_bridgeObjectRelease();
  uint64_t v52 = v83[0];
  uint64_t v53 = v83[1];
  uint64_t result = __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v88);
  int64_t v55 = v80;
  *uint64_t v80 = v48;
  v55[1] = v50;
  v55[2] = v52;
  v55[3] = v53;
  v55[4] = 0;
  v55[5] = 0xE000000000000000;
  v55[6] = 0;
  *((unsigned char *)v55 + 56) = 0;
  v55[8] = (uint64_t)partial apply for closure #1 in static MusicActions.actionMenu(item:playbackIntent:playbackController:library:playlistContext:alertPresenter:noticePresenter:presentationSource:shareSheetPresenter:navigationPusher:playlistPickerPresenter:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:);
  v55[9] = v36;
  return result;
}

{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v26;
  void *v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  unint64_t v39;
  void *v40;
  void *v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  id v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  Swift::String v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t result;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  unint64_t v74;
  void *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t *v80;
  long long v81[2];
  unsigned char v82[40];
  void v83[9];
  long long v84[2];
  long long v85[2];
  long long v86[2];
  unsigned char v87[40];
  uint64_t v88[6];

  unint64_t v64 = a8;
  unint64_t v65 = a7;
  uint64_t v62 = a5;
  uint64_t v63 = a6;
  uint64_t v70 = a4;
  long long v75 = a3;
  uint64_t v73 = a2;
  uint64_t v80 = a9;
  uint64_t v77 = a15;
  uint64_t v72 = a14;
  uint64_t v71 = a13;
  unint64_t v66 = a12;
  unint64_t v74 = a16;
  uint64_t v60 = a17;
  unint64_t v67 = a10;
  uint64_t v18 = type metadata accessor for UUID();
  uint64_t v78 = *(void *)(v18 - 8);
  uint64_t v79 = v18;
  __chkstk_darwin(v18);
  long long v76 = (char *)&v56 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PlaylistContext?);
  uint64_t v61 = *(void *)(v20 - 8);
  uint64_t v21 = *(void *)(v61 + 64);
  __chkstk_darwin(v20 - 8);
  uint64_t v58 = (uint64_t)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  uint64_t v59 = *(void *)(v22 - 8);
  uint64_t v23 = *(void *)(v59 + 64);
  __chkstk_darwin(v22 - 8);
  uint64_t v57 = (uint64_t)&v56 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for Song();
  v88[3] = v24;
  v88[4] = (uint64_t)&protocol witness table for Song;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v88);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(boxed_opaque_existential_1, a1, v24);
  outlined init with copy of AlertPresenting((uint64_t)v88, (uint64_t)v83);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicItem);
  uint64_t v26 = String.init<A>(describing:)();
  int64_t v68 = v27;
  uint64_t v69 = v26;
  outlined init with copy of (String, Any)(a11, (uint64_t)v87, &demangling cache variable for type metadata for NavigationPushing?);
  outlined init with copy of AlertPresenting((uint64_t)v88, (uint64_t)v86);
  outlined init with copy of (String, Any)(v60, (uint64_t)&v56 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0), &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  outlined init with copy of (String, Any)(v62, (uint64_t)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0), &demangling cache variable for type metadata for PlaylistContext?);
  outlined init with copy of AlertPresenting(v63, (uint64_t)v85);
  outlined init with copy of AlertPresenting(v65, (uint64_t)v84);
  outlined init with copy of (String, Any)(v64, (uint64_t)v83, &demangling cache variable for type metadata for PresentationSource?);
  outlined init with copy of (String, Any)(v66, (uint64_t)v82, &demangling cache variable for type metadata for PlaylistPickerPresenting?);
  outlined init with copy of AlertPresenting(v67, (uint64_t)v81);
  unint64_t v28 = (*(unsigned __int8 *)(v59 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80);
  unint64_t v29 = (v23 + *(unsigned __int8 *)(v61 + 80) + v28) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80);
  unint64_t v30 = (v21 + v29 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v31 = (v30 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v32 = (v31 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v33 = (v32 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v34 = (v33 + 79) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v67 = (v34 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v65 = (v67 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v35 = (v65 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v64 = (v35 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v66 = (v64 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v36 = swift_allocObject();
  outlined init with take of PresentationSource?((uint64_t)v87, v36 + 16, &demangling cache variable for type metadata for NavigationPushing?);
  outlined init with take of AlertPresenting(v86, v36 + 56);
  outlined init with take of PresentationSource?(v57, v36 + v28, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  outlined init with take of PresentationSource?(v58, v36 + v29, &demangling cache variable for type metadata for PlaylistContext?);
  *(void *)(v36 + v30) = v70;
  outlined init with take of AlertPresenting(v85, v36 + v31);
  outlined init with take of AlertPresenting(v84, v36 + v32);
  outlined init with take of PresentationSource?((uint64_t)v83, v36 + v33, &demangling cache variable for type metadata for PresentationSource?);
  outlined init with take of PresentationSource?((uint64_t)v82, v36 + v34, &demangling cache variable for type metadata for PlaylistPickerPresenting?);
  uint64_t v37 = v72;
  uint64_t v38 = v73;
  *(void *)(v36 + v67) = v73;
  unint64_t v39 = v74;
  uint64_t v40 = v75;
  *(void *)(v36 + v65) = v75;
  uint64_t v41 = (void *)(v36 + v35);
  void *v41 = v71;
  v41[1] = v37;
  uint64_t v42 = (uint64_t *)(v36 + v64);
  uint64_t v43 = v36 + v66;
  uint64_t v44 = v77;
  *uint64_t v42 = v77;
  v42[1] = v39;
  outlined init with take of AlertPresenting(v81, v43);
  id v45 = v38;
  id v46 = v40;
  swift_bridgeObjectRetain();
  swift_retain();
  outlined copy of Data?(v44, v39);
  uint64_t v47 = v76;
  UUID.init()();
  uint64_t v48 = UUID.uuidString.getter();
  uint64_t v50 = v49;
  (*(void (**)(char *, uint64_t))(v78 + 8))(v47, v79);
  strcpy((char *)v83, "ActionMenu: ");
  BYTE5(v83[1]) = 0;
  HIWORD(v83[1]) = -5120;
  v51._uint64_t countAndFlagsBits = v69;
  v51._object = v68;
  String.append(_:)(v51);
  swift_bridgeObjectRelease();
  uint64_t v52 = v83[0];
  uint64_t v53 = v83[1];
  uint64_t result = __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v88);
  int64_t v55 = v80;
  *uint64_t v80 = v48;
  v55[1] = v50;
  v55[2] = v52;
  v55[3] = v53;
  v55[4] = 0;
  v55[5] = 0xE000000000000000;
  v55[6] = 0;
  *((unsigned char *)v55 + 56) = 0;
  v55[8] = (uint64_t)partial apply for closure #1 in static MusicActions.actionMenu(item:playbackIntent:playbackController:library:playlistContext:alertPresenter:noticePresenter:presentationSource:shareSheetPresenter:navigationPusher:playlistPickerPresenter:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:);
  v55[9] = v36;
  return result;
}

{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v26;
  void *v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  unint64_t v39;
  void *v40;
  void *v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  id v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  Swift::String v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t result;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  unint64_t v74;
  void *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t *v80;
  long long v81[2];
  unsigned char v82[40];
  void v83[9];
  long long v84[2];
  long long v85[2];
  long long v86[2];
  unsigned char v87[40];
  uint64_t v88[6];

  unint64_t v64 = a8;
  unint64_t v65 = a7;
  uint64_t v62 = a5;
  uint64_t v63 = a6;
  uint64_t v70 = a4;
  long long v75 = a3;
  uint64_t v73 = a2;
  uint64_t v80 = a9;
  uint64_t v77 = a15;
  uint64_t v72 = a14;
  uint64_t v71 = a13;
  unint64_t v66 = a12;
  unint64_t v74 = a16;
  uint64_t v60 = a17;
  unint64_t v67 = a10;
  uint64_t v18 = type metadata accessor for UUID();
  uint64_t v78 = *(void *)(v18 - 8);
  uint64_t v79 = v18;
  __chkstk_darwin(v18);
  long long v76 = (char *)&v56 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PlaylistContext?);
  uint64_t v61 = *(void *)(v20 - 8);
  uint64_t v21 = *(void *)(v61 + 64);
  __chkstk_darwin(v20 - 8);
  uint64_t v58 = (uint64_t)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  uint64_t v59 = *(void *)(v22 - 8);
  uint64_t v23 = *(void *)(v59 + 64);
  __chkstk_darwin(v22 - 8);
  uint64_t v57 = (uint64_t)&v56 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for Station();
  v88[3] = v24;
  v88[4] = (uint64_t)&protocol witness table for Station;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v88);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(boxed_opaque_existential_1, a1, v24);
  outlined init with copy of AlertPresenting((uint64_t)v88, (uint64_t)v83);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicItem);
  uint64_t v26 = String.init<A>(describing:)();
  int64_t v68 = v27;
  uint64_t v69 = v26;
  outlined init with copy of (String, Any)(a11, (uint64_t)v87, &demangling cache variable for type metadata for NavigationPushing?);
  outlined init with copy of AlertPresenting((uint64_t)v88, (uint64_t)v86);
  outlined init with copy of (String, Any)(v60, (uint64_t)&v56 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0), &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  outlined init with copy of (String, Any)(v62, (uint64_t)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0), &demangling cache variable for type metadata for PlaylistContext?);
  outlined init with copy of AlertPresenting(v63, (uint64_t)v85);
  outlined init with copy of AlertPresenting(v65, (uint64_t)v84);
  outlined init with copy of (String, Any)(v64, (uint64_t)v83, &demangling cache variable for type metadata for PresentationSource?);
  outlined init with copy of (String, Any)(v66, (uint64_t)v82, &demangling cache variable for type metadata for PlaylistPickerPresenting?);
  outlined init with copy of AlertPresenting(v67, (uint64_t)v81);
  unint64_t v28 = (*(unsigned __int8 *)(v59 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80);
  unint64_t v29 = (v23 + *(unsigned __int8 *)(v61 + 80) + v28) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80);
  unint64_t v30 = (v21 + v29 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v31 = (v30 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v32 = (v31 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v33 = (v32 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v34 = (v33 + 79) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v67 = (v34 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v65 = (v67 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v35 = (v65 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v64 = (v35 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v66 = (v64 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v36 = swift_allocObject();
  outlined init with take of PresentationSource?((uint64_t)v87, v36 + 16, &demangling cache variable for type metadata for NavigationPushing?);
  outlined init with take of AlertPresenting(v86, v36 + 56);
  outlined init with take of PresentationSource?(v57, v36 + v28, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  outlined init with take of PresentationSource?(v58, v36 + v29, &demangling cache variable for type metadata for PlaylistContext?);
  *(void *)(v36 + v30) = v70;
  outlined init with take of AlertPresenting(v85, v36 + v31);
  outlined init with take of AlertPresenting(v84, v36 + v32);
  outlined init with take of PresentationSource?((uint64_t)v83, v36 + v33, &demangling cache variable for type metadata for PresentationSource?);
  outlined init with take of PresentationSource?((uint64_t)v82, v36 + v34, &demangling cache variable for type metadata for PlaylistPickerPresenting?);
  uint64_t v37 = v72;
  uint64_t v38 = v73;
  *(void *)(v36 + v67) = v73;
  unint64_t v39 = v74;
  uint64_t v40 = v75;
  *(void *)(v36 + v65) = v75;
  uint64_t v41 = (void *)(v36 + v35);
  void *v41 = v71;
  v41[1] = v37;
  uint64_t v42 = (uint64_t *)(v36 + v64);
  uint64_t v43 = v36 + v66;
  uint64_t v44 = v77;
  *uint64_t v42 = v77;
  v42[1] = v39;
  outlined init with take of AlertPresenting(v81, v43);
  id v45 = v38;
  id v46 = v40;
  swift_bridgeObjectRetain();
  swift_retain();
  outlined copy of Data?(v44, v39);
  uint64_t v47 = v76;
  UUID.init()();
  uint64_t v48 = UUID.uuidString.getter();
  uint64_t v50 = v49;
  (*(void (**)(char *, uint64_t))(v78 + 8))(v47, v79);
  strcpy((char *)v83, "ActionMenu: ");
  BYTE5(v83[1]) = 0;
  HIWORD(v83[1]) = -5120;
  v51._uint64_t countAndFlagsBits = v69;
  v51._object = v68;
  String.append(_:)(v51);
  swift_bridgeObjectRelease();
  uint64_t v52 = v83[0];
  uint64_t v53 = v83[1];
  uint64_t result = __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v88);
  int64_t v55 = v80;
  *uint64_t v80 = v48;
  v55[1] = v50;
  v55[2] = v52;
  v55[3] = v53;
  v55[4] = 0;
  v55[5] = 0xE000000000000000;
  v55[6] = 0;
  *((unsigned char *)v55 + 56) = 0;
  v55[8] = (uint64_t)partial apply for closure #1 in static MusicActions.actionMenu(item:playbackIntent:playbackController:library:playlistContext:alertPresenter:noticePresenter:presentationSource:shareSheetPresenter:navigationPusher:playlistPickerPresenter:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:);
  v55[9] = v36;
  return result;
}

{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v26;
  void *v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  unint64_t v39;
  void *v40;
  void *v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  id v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  Swift::String v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t result;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  unint64_t v74;
  void *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t *v80;
  long long v81[2];
  unsigned char v82[40];
  void v83[9];
  long long v84[2];
  long long v85[2];
  long long v86[2];
  unsigned char v87[40];
  uint64_t v88[6];

  unint64_t v64 = a8;
  unint64_t v65 = a7;
  uint64_t v62 = a5;
  uint64_t v63 = a6;
  uint64_t v70 = a4;
  long long v75 = a3;
  uint64_t v73 = a2;
  uint64_t v80 = a9;
  uint64_t v77 = a15;
  uint64_t v72 = a14;
  uint64_t v71 = a13;
  unint64_t v66 = a12;
  unint64_t v74 = a16;
  uint64_t v60 = a17;
  unint64_t v67 = a10;
  uint64_t v18 = type metadata accessor for UUID();
  uint64_t v78 = *(void *)(v18 - 8);
  uint64_t v79 = v18;
  __chkstk_darwin(v18);
  long long v76 = (char *)&v56 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PlaylistContext?);
  uint64_t v61 = *(void *)(v20 - 8);
  uint64_t v21 = *(void *)(v61 + 64);
  __chkstk_darwin(v20 - 8);
  uint64_t v58 = (uint64_t)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  uint64_t v59 = *(void *)(v22 - 8);
  uint64_t v23 = *(void *)(v59 + 64);
  __chkstk_darwin(v22 - 8);
  uint64_t v57 = (uint64_t)&v56 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for TVEpisode();
  v88[3] = v24;
  v88[4] = lazy protocol witness table accessor for type GenericMusicItem and conformance GenericMusicItem(&lazy protocol witness table cache variable for type TVEpisode and conformance TVEpisode, (void (*)(uint64_t))&type metadata accessor for TVEpisode);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v88);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(boxed_opaque_existential_1, a1, v24);
  outlined init with copy of AlertPresenting((uint64_t)v88, (uint64_t)v83);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicItem);
  uint64_t v26 = String.init<A>(describing:)();
  int64_t v68 = v27;
  uint64_t v69 = v26;
  outlined init with copy of (String, Any)(a11, (uint64_t)v87, &demangling cache variable for type metadata for NavigationPushing?);
  outlined init with copy of AlertPresenting((uint64_t)v88, (uint64_t)v86);
  outlined init with copy of (String, Any)(v60, (uint64_t)&v56 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0), &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  outlined init with copy of (String, Any)(v62, (uint64_t)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0), &demangling cache variable for type metadata for PlaylistContext?);
  outlined init with copy of AlertPresenting(v63, (uint64_t)v85);
  outlined init with copy of AlertPresenting(v65, (uint64_t)v84);
  outlined init with copy of (String, Any)(v64, (uint64_t)v83, &demangling cache variable for type metadata for PresentationSource?);
  outlined init with copy of (String, Any)(v66, (uint64_t)v82, &demangling cache variable for type metadata for PlaylistPickerPresenting?);
  outlined init with copy of AlertPresenting(v67, (uint64_t)v81);
  unint64_t v28 = (*(unsigned __int8 *)(v59 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80);
  unint64_t v29 = (v23 + *(unsigned __int8 *)(v61 + 80) + v28) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80);
  unint64_t v30 = (v21 + v29 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v31 = (v30 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v32 = (v31 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v33 = (v32 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v34 = (v33 + 79) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v67 = (v34 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v65 = (v67 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v35 = (v65 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v64 = (v35 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v66 = (v64 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v36 = swift_allocObject();
  outlined init with take of PresentationSource?((uint64_t)v87, v36 + 16, &demangling cache variable for type metadata for NavigationPushing?);
  outlined init with take of AlertPresenting(v86, v36 + 56);
  outlined init with take of PresentationSource?(v57, v36 + v28, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  outlined init with take of PresentationSource?(v58, v36 + v29, &demangling cache variable for type metadata for PlaylistContext?);
  *(void *)(v36 + v30) = v70;
  outlined init with take of AlertPresenting(v85, v36 + v31);
  outlined init with take of AlertPresenting(v84, v36 + v32);
  outlined init with take of PresentationSource?((uint64_t)v83, v36 + v33, &demangling cache variable for type metadata for PresentationSource?);
  outlined init with take of PresentationSource?((uint64_t)v82, v36 + v34, &demangling cache variable for type metadata for PlaylistPickerPresenting?);
  uint64_t v37 = v72;
  uint64_t v38 = v73;
  *(void *)(v36 + v67) = v73;
  unint64_t v39 = v74;
  uint64_t v40 = v75;
  *(void *)(v36 + v65) = v75;
  uint64_t v41 = (void *)(v36 + v35);
  void *v41 = v71;
  v41[1] = v37;
  uint64_t v42 = (uint64_t *)(v36 + v64);
  uint64_t v43 = v36 + v66;
  uint64_t v44 = v77;
  *uint64_t v42 = v77;
  v42[1] = v39;
  outlined init with take of AlertPresenting(v81, v43);
  id v45 = v38;
  id v46 = v40;
  swift_bridgeObjectRetain();
  swift_retain();
  outlined copy of Data?(v44, v39);
  uint64_t v47 = v76;
  UUID.init()();
  uint64_t v48 = UUID.uuidString.getter();
  uint64_t v50 = v49;
  (*(void (**)(char *, uint64_t))(v78 + 8))(v47, v79);
  strcpy((char *)v83, "ActionMenu: ");
  BYTE5(v83[1]) = 0;
  HIWORD(v83[1]) = -5120;
  v51._uint64_t countAndFlagsBits = v69;
  v51._object = v68;
  String.append(_:)(v51);
  swift_bridgeObjectRelease();
  uint64_t v52 = v83[0];
  uint64_t v53 = v83[1];
  uint64_t result = __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v88);
  int64_t v55 = v80;
  *uint64_t v80 = v48;
  v55[1] = v50;
  v55[2] = v52;
  v55[3] = v53;
  v55[4] = 0;
  v55[5] = 0xE000000000000000;
  v55[6] = 0;
  *((unsigned char *)v55 + 56) = 0;
  v55[8] = (uint64_t)partial apply for closure #1 in static MusicActions.actionMenu(item:playbackIntent:playbackController:library:playlistContext:alertPresenter:noticePresenter:presentationSource:shareSheetPresenter:navigationPusher:playlistPickerPresenter:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:);
  v55[9] = v36;
  return result;
}

{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v26;
  void *v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  unint64_t v39;
  void *v40;
  void *v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  id v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  Swift::String v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t result;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  unint64_t v74;
  void *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t *v80;
  long long v81[2];
  unsigned char v82[40];
  void v83[9];
  long long v84[2];
  long long v85[2];
  long long v86[2];
  unsigned char v87[40];
  uint64_t v88[6];

  unint64_t v64 = a8;
  unint64_t v65 = a7;
  uint64_t v62 = a5;
  uint64_t v63 = a6;
  uint64_t v70 = a4;
  long long v75 = a3;
  uint64_t v73 = a2;
  uint64_t v80 = a9;
  uint64_t v77 = a15;
  uint64_t v72 = a14;
  uint64_t v71 = a13;
  unint64_t v66 = a12;
  unint64_t v74 = a16;
  uint64_t v60 = a17;
  unint64_t v67 = a10;
  uint64_t v18 = type metadata accessor for UUID();
  uint64_t v78 = *(void *)(v18 - 8);
  uint64_t v79 = v18;
  __chkstk_darwin(v18);
  long long v76 = (char *)&v56 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PlaylistContext?);
  uint64_t v61 = *(void *)(v20 - 8);
  uint64_t v21 = *(void *)(v61 + 64);
  __chkstk_darwin(v20 - 8);
  uint64_t v58 = (uint64_t)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  uint64_t v59 = *(void *)(v22 - 8);
  uint64_t v23 = *(void *)(v59 + 64);
  __chkstk_darwin(v22 - 8);
  uint64_t v57 = (uint64_t)&v56 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for TVSeason();
  v88[3] = v24;
  v88[4] = lazy protocol witness table accessor for type GenericMusicItem and conformance GenericMusicItem(&lazy protocol witness table cache variable for type TVSeason and conformance TVSeason, (void (*)(uint64_t))&type metadata accessor for TVSeason);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v88);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(boxed_opaque_existential_1, a1, v24);
  outlined init with copy of AlertPresenting((uint64_t)v88, (uint64_t)v83);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicItem);
  uint64_t v26 = String.init<A>(describing:)();
  int64_t v68 = v27;
  uint64_t v69 = v26;
  outlined init with copy of (String, Any)(a11, (uint64_t)v87, &demangling cache variable for type metadata for NavigationPushing?);
  outlined init with copy of AlertPresenting((uint64_t)v88, (uint64_t)v86);
  outlined init with copy of (String, Any)(v60, (uint64_t)&v56 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0), &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  outlined init with copy of (String, Any)(v62, (uint64_t)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0), &demangling cache variable for type metadata for PlaylistContext?);
  outlined init with copy of AlertPresenting(v63, (uint64_t)v85);
  outlined init with copy of AlertPresenting(v65, (uint64_t)v84);
  outlined init with copy of (String, Any)(v64, (uint64_t)v83, &demangling cache variable for type metadata for PresentationSource?);
  outlined init with copy of (String, Any)(v66, (uint64_t)v82, &demangling cache variable for type metadata for PlaylistPickerPresenting?);
  outlined init with copy of AlertPresenting(v67, (uint64_t)v81);
  unint64_t v28 = (*(unsigned __int8 *)(v59 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80);
  unint64_t v29 = (v23 + *(unsigned __int8 *)(v61 + 80) + v28) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80);
  unint64_t v30 = (v21 + v29 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v31 = (v30 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v32 = (v31 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v33 = (v32 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v34 = (v33 + 79) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v67 = (v34 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v65 = (v67 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v35 = (v65 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v64 = (v35 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v66 = (v64 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v36 = swift_allocObject();
  outlined init with take of PresentationSource?((uint64_t)v87, v36 + 16, &demangling cache variable for type metadata for NavigationPushing?);
  outlined init with take of AlertPresenting(v86, v36 + 56);
  outlined init with take of PresentationSource?(v57, v36 + v28, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  outlined init with take of PresentationSource?(v58, v36 + v29, &demangling cache variable for type metadata for PlaylistContext?);
  *(void *)(v36 + v30) = v70;
  outlined init with take of AlertPresenting(v85, v36 + v31);
  outlined init with take of AlertPresenting(v84, v36 + v32);
  outlined init with take of PresentationSource?((uint64_t)v83, v36 + v33, &demangling cache variable for type metadata for PresentationSource?);
  outlined init with take of PresentationSource?((uint64_t)v82, v36 + v34, &demangling cache variable for type metadata for PlaylistPickerPresenting?);
  uint64_t v37 = v72;
  uint64_t v38 = v73;
  *(void *)(v36 + v67) = v73;
  unint64_t v39 = v74;
  uint64_t v40 = v75;
  *(void *)(v36 + v65) = v75;
  uint64_t v41 = (void *)(v36 + v35);
  void *v41 = v71;
  v41[1] = v37;
  uint64_t v42 = (uint64_t *)(v36 + v64);
  uint64_t v43 = v36 + v66;
  uint64_t v44 = v77;
  *uint64_t v42 = v77;
  v42[1] = v39;
  outlined init with take of AlertPresenting(v81, v43);
  id v45 = v38;
  id v46 = v40;
  swift_bridgeObjectRetain();
  swift_retain();
  outlined copy of Data?(v44, v39);
  uint64_t v47 = v76;
  UUID.init()();
  uint64_t v48 = UUID.uuidString.getter();
  uint64_t v50 = v49;
  (*(void (**)(char *, uint64_t))(v78 + 8))(v47, v79);
  strcpy((char *)v83, "ActionMenu: ");
  BYTE5(v83[1]) = 0;
  HIWORD(v83[1]) = -5120;
  v51._uint64_t countAndFlagsBits = v69;
  v51._object = v68;
  String.append(_:)(v51);
  swift_bridgeObjectRelease();
  uint64_t v52 = v83[0];
  uint64_t v53 = v83[1];
  uint64_t result = __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v88);
  int64_t v55 = v80;
  *uint64_t v80 = v48;
  v55[1] = v50;
  v55[2] = v52;
  v55[3] = v53;
  v55[4] = 0;
  v55[5] = 0xE000000000000000;
  v55[6] = 0;
  *((unsigned char *)v55 + 56) = 0;
  v55[8] = (uint64_t)partial apply for closure #1 in static MusicActions.actionMenu(item:playbackIntent:playbackController:library:playlistContext:alertPresenter:noticePresenter:presentationSource:shareSheetPresenter:navigationPusher:playlistPickerPresenter:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:);
  v55[9] = v36;
  return result;
}

{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v26;
  void *v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  unint64_t v39;
  void *v40;
  void *v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  id v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  Swift::String v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t result;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  unint64_t v74;
  void *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t *v80;
  long long v81[2];
  unsigned char v82[40];
  void v83[9];
  long long v84[2];
  long long v85[2];
  long long v86[2];
  unsigned char v87[40];
  uint64_t v88[6];

  unint64_t v64 = a8;
  unint64_t v65 = a7;
  uint64_t v62 = a5;
  uint64_t v63 = a6;
  uint64_t v70 = a4;
  long long v75 = a3;
  uint64_t v73 = a2;
  uint64_t v80 = a9;
  uint64_t v77 = a15;
  uint64_t v72 = a14;
  uint64_t v71 = a13;
  unint64_t v66 = a12;
  unint64_t v74 = a16;
  uint64_t v60 = a17;
  unint64_t v67 = a10;
  uint64_t v18 = type metadata accessor for UUID();
  uint64_t v78 = *(void *)(v18 - 8);
  uint64_t v79 = v18;
  __chkstk_darwin(v18);
  long long v76 = (char *)&v56 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PlaylistContext?);
  uint64_t v61 = *(void *)(v20 - 8);
  uint64_t v21 = *(void *)(v61 + 64);
  __chkstk_darwin(v20 - 8);
  uint64_t v58 = (uint64_t)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  uint64_t v59 = *(void *)(v22 - 8);
  uint64_t v23 = *(void *)(v59 + 64);
  __chkstk_darwin(v22 - 8);
  uint64_t v57 = (uint64_t)&v56 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for TVShow();
  v88[3] = v24;
  v88[4] = lazy protocol witness table accessor for type GenericMusicItem and conformance GenericMusicItem(&lazy protocol witness table cache variable for type TVShow and conformance TVShow, (void (*)(uint64_t))&type metadata accessor for TVShow);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v88);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(boxed_opaque_existential_1, a1, v24);
  outlined init with copy of AlertPresenting((uint64_t)v88, (uint64_t)v83);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicItem);
  uint64_t v26 = String.init<A>(describing:)();
  int64_t v68 = v27;
  uint64_t v69 = v26;
  outlined init with copy of (String, Any)(a11, (uint64_t)v87, &demangling cache variable for type metadata for NavigationPushing?);
  outlined init with copy of AlertPresenting((uint64_t)v88, (uint64_t)v86);
  outlined init with copy of (String, Any)(v60, (uint64_t)&v56 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0), &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  outlined init with copy of (String, Any)(v62, (uint64_t)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0), &demangling cache variable for type metadata for PlaylistContext?);
  outlined init with copy of AlertPresenting(v63, (uint64_t)v85);
  outlined init with copy of AlertPresenting(v65, (uint64_t)v84);
  outlined init with copy of (String, Any)(v64, (uint64_t)v83, &demangling cache variable for type metadata for PresentationSource?);
  outlined init with copy of (String, Any)(v66, (uint64_t)v82, &demangling cache variable for type metadata for PlaylistPickerPresenting?);
  outlined init with copy of AlertPresenting(v67, (uint64_t)v81);
  unint64_t v28 = (*(unsigned __int8 *)(v59 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80);
  unint64_t v29 = (v23 + *(unsigned __int8 *)(v61 + 80) + v28) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80);
  unint64_t v30 = (v21 + v29 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v31 = (v30 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v32 = (v31 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v33 = (v32 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v34 = (v33 + 79) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v67 = (v34 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v65 = (v67 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v35 = (v65 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v64 = (v35 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v66 = (v64 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v36 = swift_allocObject();
  outlined init with take of PresentationSource?((uint64_t)v87, v36 + 16, &demangling cache variable for type metadata for NavigationPushing?);
  outlined init with take of AlertPresenting(v86, v36 + 56);
  outlined init with take of PresentationSource?(v57, v36 + v28, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  outlined init with take of PresentationSource?(v58, v36 + v29, &demangling cache variable for type metadata for PlaylistContext?);
  *(void *)(v36 + v30) = v70;
  outlined init with take of AlertPresenting(v85, v36 + v31);
  outlined init with take of AlertPresenting(v84, v36 + v32);
  outlined init with take of PresentationSource?((uint64_t)v83, v36 + v33, &demangling cache variable for type metadata for PresentationSource?);
  outlined init with take of PresentationSource?((uint64_t)v82, v36 + v34, &demangling cache variable for type metadata for PlaylistPickerPresenting?);
  uint64_t v37 = v72;
  uint64_t v38 = v73;
  *(void *)(v36 + v67) = v73;
  unint64_t v39 = v74;
  uint64_t v40 = v75;
  *(void *)(v36 + v65) = v75;
  uint64_t v41 = (void *)(v36 + v35);
  void *v41 = v71;
  v41[1] = v37;
  uint64_t v42 = (uint64_t *)(v36 + v64);
  uint64_t v43 = v36 + v66;
  uint64_t v44 = v77;
  *uint64_t v42 = v77;
  v42[1] = v39;
  outlined init with take of AlertPresenting(v81, v43);
  id v45 = v38;
  id v46 = v40;
  swift_bridgeObjectRetain();
  swift_retain();
  outlined copy of Data?(v44, v39);
  uint64_t v47 = v76;
  UUID.init()();
  uint64_t v48 = UUID.uuidString.getter();
  uint64_t v50 = v49;
  (*(void (**)(char *, uint64_t))(v78 + 8))(v47, v79);
  strcpy((char *)v83, "ActionMenu: ");
  BYTE5(v83[1]) = 0;
  HIWORD(v83[1]) = -5120;
  v51._uint64_t countAndFlagsBits = v69;
  v51._object = v68;
  String.append(_:)(v51);
  swift_bridgeObjectRelease();
  uint64_t v52 = v83[0];
  uint64_t v53 = v83[1];
  uint64_t result = __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v88);
  int64_t v55 = v80;
  *uint64_t v80 = v48;
  v55[1] = v50;
  v55[2] = v52;
  v55[3] = v53;
  v55[4] = 0;
  v55[5] = 0xE000000000000000;
  v55[6] = 0;
  *((unsigned char *)v55 + 56) = 0;
  v55[8] = (uint64_t)partial apply for closure #1 in static MusicActions.actionMenu(item:playbackIntent:playbackController:library:playlistContext:alertPresenter:noticePresenter:presentationSource:shareSheetPresenter:navigationPusher:playlistPickerPresenter:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:);
  v55[9] = v36;
  return result;
}

{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v26;
  void *v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  unint64_t v39;
  void *v40;
  void *v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  id v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  Swift::String v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t result;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  unint64_t v74;
  void *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t *v80;
  long long v81[2];
  unsigned char v82[40];
  void v83[9];
  long long v84[2];
  long long v85[2];
  long long v86[2];
  unsigned char v87[40];
  uint64_t v88[6];

  unint64_t v64 = a8;
  unint64_t v65 = a7;
  uint64_t v62 = a5;
  uint64_t v63 = a6;
  uint64_t v70 = a4;
  long long v75 = a3;
  uint64_t v73 = a2;
  uint64_t v80 = a9;
  uint64_t v77 = a15;
  uint64_t v72 = a14;
  uint64_t v71 = a13;
  unint64_t v66 = a12;
  unint64_t v74 = a16;
  uint64_t v60 = a17;
  unint64_t v67 = a10;
  uint64_t v18 = type metadata accessor for UUID();
  uint64_t v78 = *(void *)(v18 - 8);
  uint64_t v79 = v18;
  __chkstk_darwin(v18);
  long long v76 = (char *)&v56 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PlaylistContext?);
  uint64_t v61 = *(void *)(v20 - 8);
  uint64_t v21 = *(void *)(v61 + 64);
  __chkstk_darwin(v20 - 8);
  uint64_t v58 = (uint64_t)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  uint64_t v59 = *(void *)(v22 - 8);
  uint64_t v23 = *(void *)(v59 + 64);
  __chkstk_darwin(v22 - 8);
  uint64_t v57 = (uint64_t)&v56 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for UploadedVideo();
  v88[3] = v24;
  v88[4] = lazy protocol witness table accessor for type GenericMusicItem and conformance GenericMusicItem(&lazy protocol witness table cache variable for type UploadedVideo and conformance UploadedVideo, (void (*)(uint64_t))&type metadata accessor for UploadedVideo);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v88);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(boxed_opaque_existential_1, a1, v24);
  outlined init with copy of AlertPresenting((uint64_t)v88, (uint64_t)v83);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicItem);
  uint64_t v26 = String.init<A>(describing:)();
  int64_t v68 = v27;
  uint64_t v69 = v26;
  outlined init with copy of (String, Any)(a11, (uint64_t)v87, &demangling cache variable for type metadata for NavigationPushing?);
  outlined init with copy of AlertPresenting((uint64_t)v88, (uint64_t)v86);
  outlined init with copy of (String, Any)(v60, (uint64_t)&v56 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0), &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  outlined init with copy of (String, Any)(v62, (uint64_t)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0), &demangling cache variable for type metadata for PlaylistContext?);
  outlined init with copy of AlertPresenting(v63, (uint64_t)v85);
  outlined init with copy of AlertPresenting(v65, (uint64_t)v84);
  outlined init with copy of (String, Any)(v64, (uint64_t)v83, &demangling cache variable for type metadata for PresentationSource?);
  outlined init with copy of (String, Any)(v66, (uint64_t)v82, &demangling cache variable for type metadata for PlaylistPickerPresenting?);
  outlined init with copy of AlertPresenting(v67, (uint64_t)v81);
  unint64_t v28 = (*(unsigned __int8 *)(v59 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80);
  unint64_t v29 = (v23 + *(unsigned __int8 *)(v61 + 80) + v28) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80);
  unint64_t v30 = (v21 + v29 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v31 = (v30 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v32 = (v31 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v33 = (v32 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v34 = (v33 + 79) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v67 = (v34 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v65 = (v67 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v35 = (v65 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v64 = (v35 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v66 = (v64 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v36 = swift_allocObject();
  outlined init with take of PresentationSource?((uint64_t)v87, v36 + 16, &demangling cache variable for type metadata for NavigationPushing?);
  outlined init with take of AlertPresenting(v86, v36 + 56);
  outlined init with take of PresentationSource?(v57, v36 + v28, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  outlined init with take of PresentationSource?(v58, v36 + v29, &demangling cache variable for type metadata for PlaylistContext?);
  *(void *)(v36 + v30) = v70;
  outlined init with take of AlertPresenting(v85, v36 + v31);
  outlined init with take of AlertPresenting(v84, v36 + v32);
  outlined init with take of PresentationSource?((uint64_t)v83, v36 + v33, &demangling cache variable for type metadata for PresentationSource?);
  outlined init with take of PresentationSource?((uint64_t)v82, v36 + v34, &demangling cache variable for type metadata for PlaylistPickerPresenting?);
  uint64_t v37 = v72;
  uint64_t v38 = v73;
  *(void *)(v36 + v67) = v73;
  unint64_t v39 = v74;
  uint64_t v40 = v75;
  *(void *)(v36 + v65) = v75;
  uint64_t v41 = (void *)(v36 + v35);
  void *v41 = v71;
  v41[1] = v37;
  uint64_t v42 = (uint64_t *)(v36 + v64);
  uint64_t v43 = v36 + v66;
  uint64_t v44 = v77;
  *uint64_t v42 = v77;
  v42[1] = v39;
  outlined init with take of AlertPresenting(v81, v43);
  id v45 = v38;
  id v46 = v40;
  swift_bridgeObjectRetain();
  swift_retain();
  outlined copy of Data?(v44, v39);
  uint64_t v47 = v76;
  UUID.init()();
  uint64_t v48 = UUID.uuidString.getter();
  uint64_t v50 = v49;
  (*(void (**)(char *, uint64_t))(v78 + 8))(v47, v79);
  strcpy((char *)v83, "ActionMenu: ");
  BYTE5(v83[1]) = 0;
  HIWORD(v83[1]) = -5120;
  v51._uint64_t countAndFlagsBits = v69;
  v51._object = v68;
  String.append(_:)(v51);
  swift_bridgeObjectRelease();
  uint64_t v52 = v83[0];
  uint64_t v53 = v83[1];
  uint64_t result = __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v88);
  int64_t v55 = v80;
  *uint64_t v80 = v48;
  v55[1] = v50;
  v55[2] = v52;
  v55[3] = v53;
  v55[4] = 0;
  v55[5] = 0xE000000000000000;
  v55[6] = 0;
  *((unsigned char *)v55 + 56) = 0;
  v55[8] = (uint64_t)partial apply for closure #1 in static MusicActions.actionMenu(item:playbackIntent:playbackController:library:playlistContext:alertPresenter:noticePresenter:presentationSource:shareSheetPresenter:navigationPusher:playlistPickerPresenter:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:);
  v55[9] = v36;
  return result;
}

uint64_t specialized static MusicActions.actionMenu(item:playbackIntent:playbackController:library:playlistContext:alertPresenter:noticePresenter:presentationSource:shareSheetPresenter:navigationPusher:playlistPickerPresenter:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>, unint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  unint64_t v69 = a8;
  uint64_t v65 = a6;
  unint64_t v66 = a7;
  uint64_t v64 = a5;
  uint64_t v72 = a4;
  uint64_t v77 = a3;
  long long v75 = a2;
  uint64_t v82 = a9;
  uint64_t v79 = a15;
  uint64_t v74 = a14;
  uint64_t v73 = a13;
  unint64_t v67 = a12;
  unint64_t v76 = a16;
  uint64_t v62 = a17;
  unint64_t v68 = a10;
  uint64_t v61 = a11;
  uint64_t v20 = type metadata accessor for UUID();
  uint64_t v80 = *(void *)(v20 - 8);
  uint64_t v81 = v20;
  __chkstk_darwin(v20);
  uint64_t v78 = (char *)&v58 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PlaylistContext?);
  uint64_t v63 = *(void *)(v22 - 8);
  uint64_t v23 = *(void *)(v63 + 64);
  __chkstk_darwin(v22 - 8);
  uint64_t v60 = (uint64_t)&v58 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = *(void *)(v25 + 64);
  __chkstk_darwin(v24 - 8);
  uint64_t v59 = (uint64_t)&v58 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90[3] = a18;
  v90[4] = a19;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v90);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a18 - 8) + 16))(boxed_opaque_existential_1, a1, a18);
  outlined init with copy of AlertPresenting((uint64_t)v90, (uint64_t)v85);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicItem);
  uint64_t v28 = String.init<A>(describing:)();
  uint64_t v70 = v29;
  uint64_t v71 = v28;
  outlined init with copy of (String, Any)(v61, (uint64_t)v89, &demangling cache variable for type metadata for NavigationPushing?);
  outlined init with copy of AlertPresenting((uint64_t)v90, (uint64_t)v88);
  outlined init with copy of (String, Any)(v62, (uint64_t)&v58 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0), &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  outlined init with copy of (String, Any)(v64, (uint64_t)&v58 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0), &demangling cache variable for type metadata for PlaylistContext?);
  outlined init with copy of AlertPresenting(v65, (uint64_t)v87);
  outlined init with copy of AlertPresenting(v66, (uint64_t)v86);
  outlined init with copy of (String, Any)(v69, (uint64_t)v85, &demangling cache variable for type metadata for PresentationSource?);
  outlined init with copy of (String, Any)(v67, (uint64_t)v84, &demangling cache variable for type metadata for PlaylistPickerPresenting?);
  outlined init with copy of AlertPresenting(v68, (uint64_t)v83);
  unint64_t v30 = (*(unsigned __int8 *)(v25 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
  unint64_t v31 = (v26 + *(unsigned __int8 *)(v63 + 80) + v30) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80);
  unint64_t v32 = (v23 + v31 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v33 = (v32 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v34 = (v33 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v35 = (v34 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v36 = (v35 + 79) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v69 = (v36 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v67 = (v69 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v37 = (v67 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v66 = (v37 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v68 = (v66 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v38 = swift_allocObject();
  outlined init with take of PresentationSource?((uint64_t)v89, v38 + 16, &demangling cache variable for type metadata for NavigationPushing?);
  outlined init with take of AlertPresenting(v88, v38 + 56);
  outlined init with take of PresentationSource?(v59, v38 + v30, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  outlined init with take of PresentationSource?(v60, v38 + v31, &demangling cache variable for type metadata for PlaylistContext?);
  *(void *)(v38 + v32) = v72;
  outlined init with take of AlertPresenting(v87, v38 + v33);
  outlined init with take of AlertPresenting(v86, v38 + v34);
  outlined init with take of PresentationSource?((uint64_t)v85, v38 + v35, &demangling cache variable for type metadata for PresentationSource?);
  outlined init with take of PresentationSource?((uint64_t)v84, v38 + v36, &demangling cache variable for type metadata for PlaylistPickerPresenting?);
  uint64_t v39 = v74;
  uint64_t v40 = v75;
  *(void *)(v38 + v69) = v75;
  unint64_t v41 = v76;
  uint64_t v42 = v77;
  *(void *)(v38 + v67) = v77;
  uint64_t v43 = (void *)(v38 + v37);
  *uint64_t v43 = v73;
  v43[1] = v39;
  uint64_t v44 = (uint64_t *)(v38 + v66);
  uint64_t v45 = v38 + v68;
  uint64_t v46 = v79;
  *uint64_t v44 = v79;
  v44[1] = v41;
  outlined init with take of AlertPresenting(v83, v45);
  id v47 = v40;
  id v48 = v42;
  swift_bridgeObjectRetain();
  swift_retain();
  outlined copy of Data?(v46, v41);
  uint64_t v49 = v78;
  UUID.init()();
  uint64_t v50 = UUID.uuidString.getter();
  uint64_t v52 = v51;
  (*(void (**)(char *, uint64_t))(v80 + 8))(v49, v81);
  strcpy((char *)v85, "ActionMenu: ");
  BYTE5(v85[1]) = 0;
  HIWORD(v85[1]) = -5120;
  v53._uint64_t countAndFlagsBits = v71;
  v53._object = v70;
  String.append(_:)(v53);
  swift_bridgeObjectRelease();
  uint64_t v54 = v85[0];
  uint64_t v55 = v85[1];
  uint64_t result = __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v90);
  uint64_t v57 = v82;
  *uint64_t v82 = v50;
  v57[1] = v52;
  v57[2] = v54;
  v57[3] = v55;
  v57[4] = 0;
  v57[5] = 0xE000000000000000;
  v57[6] = 0;
  *((unsigned char *)v57 + 56) = 0;
  v57[8] = (uint64_t)partial apply for closure #1 in static MusicActions.actionMenu(item:playbackIntent:playbackController:library:playlistContext:alertPresenter:noticePresenter:presentationSource:shareSheetPresenter:navigationPusher:playlistPickerPresenter:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:);
  v57[9] = v38;
  return result;
}

uint64_t specialized closure #1 in closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  long long v6 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v6;
  *(_OWORD *)(v4 + 112) = a4[6];
  long long v7 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v7;
  long long v8 = a4[3];
  uint64_t v11 = (char *)&async function pointer to specialized Action.execute(bypassSupportedStatusCheck:)
      + async function pointer to specialized Action.execute(bypassSupportedStatusCheck:);
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v8;
  long long v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 128) = v9;
  *long long v9 = v4;
  v9[1] = specialized closure #1 in closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:);
  return ((uint64_t (*)(uint64_t, void))v11)(a1, 0);
}

{
  uint64_t v4;
  long long v6;
  long long v7;
  long long v8;
  void *v9;
  char *v11;
  uint64_t v12;

  long long v6 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v6;
  *(_OWORD *)(v4 + 112) = a4[6];
  long long v7 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v7;
  long long v8 = a4[3];
  uint64_t v11 = (char *)&async function pointer to specialized Action.execute(bypassSupportedStatusCheck:)
      + async function pointer to specialized Action.execute(bypassSupportedStatusCheck:);
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v8;
  long long v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 128) = v9;
  *long long v9 = v4;
  v9[1] = specialized closure #1 in closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:);
  return ((uint64_t (*)(uint64_t, void))v11)(a1, 0);
}

{
  uint64_t v4;
  long long v6;
  long long v7;
  long long v8;
  void *v9;
  char *v11;
  uint64_t v12;

  long long v6 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v6;
  *(_OWORD *)(v4 + 112) = a4[6];
  long long v7 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v7;
  long long v8 = a4[3];
  uint64_t v11 = (char *)&async function pointer to specialized Action.execute(bypassSupportedStatusCheck:)
      + async function pointer to specialized Action.execute(bypassSupportedStatusCheck:);
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v8;
  long long v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 128) = v9;
  *long long v9 = v4;
  v9[1] = specialized closure #1 in closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:);
  return ((uint64_t (*)(uint64_t, void))v11)(a1, 0);
}

{
  uint64_t v4;
  long long v6;
  long long v7;
  long long v8;
  long long v9;
  void *v10;
  char *v12;
  uint64_t v13;

  long long v6 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v6;
  long long v7 = a4[7];
  *(_OWORD *)(v4 + 112) = a4[6];
  *(_OWORD *)(v4 + 128) = v7;
  long long v8 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v8;
  long long v9 = a4[3];
  uint64_t v12 = (char *)&async function pointer to specialized Action.execute(bypassSupportedStatusCheck:)
      + async function pointer to specialized Action.execute(bypassSupportedStatusCheck:);
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v9;
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v4 + 144) = v10;
  _OWORD *v10 = v4;
  v10[1] = specialized closure #1 in closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:);
  return ((uint64_t (*)(uint64_t, void))v12)(a1, 0);
}

{
  uint64_t v4;
  long long v6;
  long long v7;
  long long v8;
  long long v9;
  void *v10;
  char *v12;
  uint64_t v13;

  long long v6 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v6;
  long long v7 = a4[7];
  *(_OWORD *)(v4 + 112) = a4[6];
  *(_OWORD *)(v4 + 128) = v7;
  long long v8 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v8;
  long long v9 = a4[3];
  uint64_t v12 = (char *)&async function pointer to specialized Action.execute(bypassSupportedStatusCheck:)
      + async function pointer to specialized Action.execute(bypassSupportedStatusCheck:);
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v9;
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v4 + 144) = v10;
  _OWORD *v10 = v4;
  v10[1] = specialized closure #1 in closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:);
  return ((uint64_t (*)(uint64_t, void))v12)(a1, 0);
}

{
  uint64_t v4;
  long long v6;
  long long v7;
  long long v8;
  void *v9;
  char *v11;
  uint64_t v12;

  long long v6 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v6;
  *(_OWORD *)(v4 + 112) = a4[6];
  long long v7 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v7;
  long long v8 = a4[3];
  uint64_t v11 = (char *)&async function pointer to specialized Action.execute(bypassSupportedStatusCheck:)
      + async function pointer to specialized Action.execute(bypassSupportedStatusCheck:);
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v8;
  long long v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 128) = v9;
  *long long v9 = v4;
  v9[1] = specialized closure #1 in closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:);
  return ((uint64_t (*)(uint64_t, void))v11)(a1, 0);
}

{
  uint64_t v4;
  long long v6;
  long long v7;
  long long v8;
  void *v9;
  char *v11;
  uint64_t v12;

  long long v6 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v6;
  *(_OWORD *)(v4 + 112) = a4[6];
  long long v7 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v7;
  long long v8 = a4[3];
  uint64_t v11 = (char *)&async function pointer to specialized Action.execute(bypassSupportedStatusCheck:)
      + async function pointer to specialized Action.execute(bypassSupportedStatusCheck:);
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v8;
  long long v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 128) = v9;
  *long long v9 = v4;
  v9[1] = specialized closure #1 in closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:);
  return ((uint64_t (*)(uint64_t, void))v11)(a1, 0);
}

{
  uint64_t v4;
  long long v6;
  long long v7;
  long long v8;
  void *v9;
  char *v11;
  uint64_t v12;

  long long v6 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v6;
  *(_OWORD *)(v4 + 112) = a4[6];
  long long v7 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v7;
  long long v8 = a4[3];
  uint64_t v11 = (char *)&async function pointer to specialized Action.execute(bypassSupportedStatusCheck:)
      + async function pointer to specialized Action.execute(bypassSupportedStatusCheck:);
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v8;
  long long v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 128) = v9;
  *long long v9 = v4;
  v9[1] = specialized closure #1 in closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:);
  return ((uint64_t (*)(uint64_t, void))v11)(a1, 0);
}

{
  uint64_t v4;
  long long v6;
  long long v7;
  long long v8;
  long long v9;
  void *v10;
  char *v12;
  uint64_t v13;

  long long v6 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v6;
  long long v7 = a4[7];
  *(_OWORD *)(v4 + 112) = a4[6];
  *(_OWORD *)(v4 + 128) = v7;
  long long v8 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v8;
  long long v9 = a4[3];
  uint64_t v12 = (char *)&async function pointer to specialized Action.execute(bypassSupportedStatusCheck:)
      + async function pointer to specialized Action.execute(bypassSupportedStatusCheck:);
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v9;
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v4 + 144) = v10;
  _OWORD *v10 = v4;
  v10[1] = specialized closure #1 in closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:);
  return ((uint64_t (*)(uint64_t, void))v12)(a1, 0);
}

{
  uint64_t v4;
  long long v6;
  long long v7;
  long long v8;
  long long v9;
  void *v10;
  char *v12;
  uint64_t v13;

  long long v6 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v6;
  long long v7 = a4[7];
  *(_OWORD *)(v4 + 112) = a4[6];
  *(_OWORD *)(v4 + 128) = v7;
  long long v8 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v8;
  long long v9 = a4[3];
  uint64_t v12 = (char *)&async function pointer to specialized Action.execute(bypassSupportedStatusCheck:)
      + async function pointer to specialized Action.execute(bypassSupportedStatusCheck:);
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v9;
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v4 + 144) = v10;
  _OWORD *v10 = v4;
  v10[1] = specialized closure #1 in closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:);
  return ((uint64_t (*)(uint64_t, void))v12)(a1, 0);
}

{
  uint64_t v4;
  long long v6;
  long long v7;
  long long v8;
  void *v9;
  char *v11;
  uint64_t v12;

  long long v6 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v6;
  *(_OWORD *)(v4 + 112) = a4[6];
  long long v7 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v7;
  long long v8 = a4[3];
  uint64_t v11 = (char *)&async function pointer to specialized Action.execute(bypassSupportedStatusCheck:)
      + async function pointer to specialized Action.execute(bypassSupportedStatusCheck:);
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v8;
  long long v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 128) = v9;
  *long long v9 = v4;
  v9[1] = specialized closure #1 in closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:);
  return ((uint64_t (*)(uint64_t, void))v11)(a1, 0);
}

{
  uint64_t v4;
  long long v6;
  long long v7;
  long long v8;
  void *v9;
  char *v11;
  uint64_t v12;

  long long v6 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v6;
  *(_OWORD *)(v4 + 112) = a4[6];
  long long v7 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v7;
  long long v8 = a4[3];
  uint64_t v11 = (char *)&async function pointer to specialized Action.execute(bypassSupportedStatusCheck:)
      + async function pointer to specialized Action.execute(bypassSupportedStatusCheck:);
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v8;
  long long v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 128) = v9;
  *long long v9 = v4;
  v9[1] = specialized closure #1 in closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:);
  return ((uint64_t (*)(uint64_t, void))v11)(a1, 0);
}

{
  uint64_t v4;
  long long v6;
  long long v7;
  long long v8;
  void *v9;
  char *v11;
  uint64_t v12;

  long long v6 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v6;
  *(_OWORD *)(v4 + 112) = a4[6];
  long long v7 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v7;
  long long v8 = a4[3];
  uint64_t v11 = (char *)&async function pointer to specialized Action.execute(bypassSupportedStatusCheck:)
      + async function pointer to specialized Action.execute(bypassSupportedStatusCheck:);
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v8;
  long long v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 128) = v9;
  *long long v9 = v4;
  v9[1] = specialized closure #1 in closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:);
  return ((uint64_t (*)(uint64_t, void))v11)(a1, 0);
}

{
  uint64_t v4;
  long long v6;
  long long v7;
  long long v8;
  void *v9;
  char *v11;
  uint64_t v12;

  long long v6 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v6;
  *(_OWORD *)(v4 + 112) = a4[6];
  long long v7 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v7;
  long long v8 = a4[3];
  uint64_t v11 = (char *)&async function pointer to specialized Action.execute(bypassSupportedStatusCheck:)
      + async function pointer to specialized Action.execute(bypassSupportedStatusCheck:);
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v8;
  long long v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 128) = v9;
  *long long v9 = v4;
  v9[1] = specialized closure #1 in closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:);
  return ((uint64_t (*)(uint64_t, void))v11)(a1, 0);
}

{
  uint64_t v4;
  long long v6;
  long long v7;
  long long v8;
  void *v9;
  char *v11;
  uint64_t v12;

  long long v6 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v6;
  *(_OWORD *)(v4 + 112) = a4[6];
  long long v7 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v7;
  long long v8 = a4[3];
  uint64_t v11 = (char *)&async function pointer to specialized Action.execute(bypassSupportedStatusCheck:)
      + async function pointer to specialized Action.execute(bypassSupportedStatusCheck:);
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v8;
  long long v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 128) = v9;
  *long long v9 = v4;
  v9[1] = specialized closure #1 in closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:);
  return ((uint64_t (*)(uint64_t, void))v11)(a1, 0);
}

{
  uint64_t v4;
  long long v6;
  long long v7;
  long long v8;
  void *v9;
  char *v11;
  uint64_t v12;

  long long v6 = a4[3];
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v6;
  long long v7 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v7;
  long long v8 = a4[1];
  uint64_t v11 = (char *)&async function pointer to specialized Action.execute(bypassSupportedStatusCheck:)
      + async function pointer to specialized Action.execute(bypassSupportedStatusCheck:);
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v8;
  long long v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 112) = v9;
  *long long v9 = v4;
  v9[1] = specialized closure #1 in closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:);
  return ((uint64_t (*)(uint64_t, void))v11)(a1, 0);
}

uint64_t specialized closure #1 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *a1;
  uint64_t v4 = a1[1];
  uint64_t v6 = a1[2];
  uint64_t v7 = a1[7];
  a2[3] = (uint64_t)&type metadata for Actions.GoToAlbum.Context;
  a2[4] = (uint64_t)&protocol witness table for Actions.GoToAlbum.Context;
  uint64_t v8 = swift_allocObject();
  *a2 = v8;
  *(void *)(v8 + 16) = v5;
  *(void *)(v8 + 24) = v4;
  *(void *)(v8 + 32) = v6;
  *(_OWORD *)(v8 + 40) = *(_OWORD *)(a1 + 3);
  *(_OWORD *)(v8 + 56) = *(_OWORD *)(a1 + 5);
  *(void *)(v8 + 72) = v7;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();

  return swift_retain();
}

{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t vars8;

  uint64_t v4 = *a1;
  uint64_t v5 = a1[5];
  uint64_t v6 = a1[6];
  uint64_t v7 = a1[7];
  a2[3] = (uint64_t)&type metadata for Actions.Share.Context;
  a2[4] = (uint64_t)&protocol witness table for Actions.Share.Context;
  uint64_t v8 = swift_allocObject();
  *a2 = v8;
  *(void *)(v8 + 16) = v4;
  *(_OWORD *)(v8 + 24) = *(_OWORD *)(a1 + 1);
  *(_OWORD *)(v8 + 40) = *(_OWORD *)(a1 + 3);
  *(void *)(v8 + 56) = v5;
  *(void *)(v8 + 64) = v6;
  *(void *)(v8 + 72) = v7;
  swift_retain();
  swift_retain();
  swift_retain();

  return swift_bridgeObjectRetain();
}

{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t vars8;

  uint64_t v4 = *a1;
  uint64_t v5 = a1[3];
  a2[3] = (uint64_t)&type metadata for Actions.RateSong.Context;
  a2[4] = (uint64_t)&protocol witness table for Actions.RateSong.Context;
  uint64_t v6 = swift_allocObject();
  *a2 = v6;
  *(void *)(v6 + 16) = v4;
  *(_OWORD *)(v6 + 24) = *(_OWORD *)(a1 + 1);
  *(void *)(v6 + 40) = v5;
  swift_retain();

  return swift_retain();
}

uint64_t specialized closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)(_OWORD *a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&_sScPSgMD_0);
  *(void *)(v1 + 144) = swift_task_alloc();
  long long v3 = a1[5];
  *(_OWORD *)(v1 + 80) = a1[4];
  *(_OWORD *)(v1 + 96) = v3;
  long long v4 = a1[7];
  *(_OWORD *)(v1 + 112) = a1[6];
  *(_OWORD *)(v1 + 128) = v4;
  long long v5 = a1[1];
  *(_OWORD *)(v1 + 16) = *a1;
  *(_OWORD *)(v1 + 32) = v5;
  long long v6 = a1[3];
  *(_OWORD *)(v1 + 48) = a1[2];
  *(_OWORD *)(v1 + 64) = v6;
  return _swift_task_switch(specialized closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:), 0, 0);
}

{
  uint64_t v1;
  long long v3;
  long long v4;
  long long v5;
  long long v6;
  uint64_t v8;

  __swift_instantiateConcreteTypeFromMangledName(&_sScPSgMD_0);
  *(void *)(v1 + 144) = swift_task_alloc();
  long long v3 = a1[5];
  *(_OWORD *)(v1 + 80) = a1[4];
  *(_OWORD *)(v1 + 96) = v3;
  long long v4 = a1[7];
  *(_OWORD *)(v1 + 112) = a1[6];
  *(_OWORD *)(v1 + 128) = v4;
  long long v5 = a1[1];
  *(_OWORD *)(v1 + 16) = *a1;
  *(_OWORD *)(v1 + 32) = v5;
  long long v6 = a1[3];
  *(_OWORD *)(v1 + 48) = a1[2];
  *(_OWORD *)(v1 + 64) = v6;
  return _swift_task_switch(specialized closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:), 0, 0);
}

{
  uint64_t v1;
  long long v3;
  long long v4;
  long long v5;
  long long v6;
  uint64_t v8;

  __swift_instantiateConcreteTypeFromMangledName(&_sScPSgMD_0);
  *(void *)(v1 + 144) = swift_task_alloc();
  long long v3 = a1[5];
  *(_OWORD *)(v1 + 80) = a1[4];
  *(_OWORD *)(v1 + 96) = v3;
  long long v4 = a1[7];
  *(_OWORD *)(v1 + 112) = a1[6];
  *(_OWORD *)(v1 + 128) = v4;
  long long v5 = a1[1];
  *(_OWORD *)(v1 + 16) = *a1;
  *(_OWORD *)(v1 + 32) = v5;
  long long v6 = a1[3];
  *(_OWORD *)(v1 + 48) = a1[2];
  *(_OWORD *)(v1 + 64) = v6;
  return _swift_task_switch(specialized closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:), 0, 0);
}

{
  uint64_t v1;
  long long v3;
  long long v4;
  long long v5;
  long long v6;
  uint64_t v8;

  __swift_instantiateConcreteTypeFromMangledName(&_sScPSgMD_0);
  *(void *)(v1 + 144) = swift_task_alloc();
  long long v3 = a1[5];
  *(_OWORD *)(v1 + 80) = a1[4];
  *(_OWORD *)(v1 + 96) = v3;
  long long v4 = a1[7];
  *(_OWORD *)(v1 + 112) = a1[6];
  *(_OWORD *)(v1 + 128) = v4;
  long long v5 = a1[1];
  *(_OWORD *)(v1 + 16) = *a1;
  *(_OWORD *)(v1 + 32) = v5;
  long long v6 = a1[3];
  *(_OWORD *)(v1 + 48) = a1[2];
  *(_OWORD *)(v1 + 64) = v6;
  return _swift_task_switch(specialized closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:), 0, 0);
}

uint64_t specialized closure #1 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  long long v4 = *(void **)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 64);
  a2[3] = (uint64_t)&type metadata for Actions.Queue.Context;
  a2[4] = (uint64_t)&protocol witness table for Actions.Queue.Context;
  uint64_t v9 = swift_allocObject();
  *a2 = v9;
  *(void *)(v9 + 16) = v4;
  *(void *)(v9 + 24) = v5;
  *(void *)(v9 + 32) = v6;
  *(void *)(v9 + 40) = v7;
  long long v11 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v9 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v9 + 64) = v11;
  *(void *)(v9 + 80) = v8;
  outlined copy of Player.InsertCommand.Location(v4);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();

  return swift_retain();
}

uint64_t specialized closure #1 in closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  long long v6 = *(_OWORD *)(a4 + 112);
  *(_OWORD *)(v4 + 112) = *(_OWORD *)(a4 + 96);
  *(_OWORD *)(v4 + 128) = v6;
  *(void *)(v4 + 144) = *(void *)(a4 + 128);
  long long v7 = *(_OWORD *)(a4 + 48);
  *(_OWORD *)(v4 + 48) = *(_OWORD *)(a4 + 32);
  *(_OWORD *)(v4 + 64) = v7;
  long long v8 = *(_OWORD *)(a4 + 80);
  *(_OWORD *)(v4 + 80) = *(_OWORD *)(a4 + 64);
  *(_OWORD *)(v4 + 96) = v8;
  long long v9 = *(_OWORD *)(a4 + 16);
  uint64_t v12 = (char *)&async function pointer to specialized Action.execute(bypassSupportedStatusCheck:)
      + async function pointer to specialized Action.execute(bypassSupportedStatusCheck:);
  *(_OWORD *)(v4 + 16) = *(_OWORD *)a4;
  *(_OWORD *)(v4 + 32) = v9;
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v4 + 152) = v10;
  void *v10 = v4;
  v10[1] = specialized closure #1 in closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:);
  return ((uint64_t (*)(uint64_t, void))v12)(a1, 0);
}

uint64_t specialized closure #1 in closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

{
  uint64_t *v0;
  uint64_t (*v1)(void);
  uint64_t v3;
  uint64_t v4;

  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

{
  uint64_t *v0;
  uint64_t (*v1)(void);
  uint64_t v3;
  uint64_t v4;

  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

{
  uint64_t *v0;
  uint64_t (*v1)(void);
  uint64_t v3;
  uint64_t v4;

  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t specialized closure #1 in closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  uint64_t v4 = (uint64_t (*)(char))((char *)&async function pointer to specialized Action.execute(bypassSupportedStatusCheck:)
                                    + async function pointer to specialized Action.execute(bypassSupportedStatusCheck:));
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  *uint64_t v2 = v1;
  v2[1] = specialized closure #1 in closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:);
  return v4(0);
}

uint64_t specialized closure #1 in closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)(char a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (!v1) {
    **(unsigned char **)(v4 + 16) = a1;
  }
  long long v6 = *(uint64_t (**)(void))(v5 + 8);
  return v6();
}

uint64_t specialized closure #1 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v6 = *a1;
  uint64_t v7 = a1[7];
  a4[3] = a2;
  a4[4] = a3;
  uint64_t v8 = swift_allocObject();
  *a4 = v8;
  *(void *)(v8 + 16) = v6;
  *(_OWORD *)(v8 + 24) = *(_OWORD *)(a1 + 1);
  *(_OWORD *)(v8 + 40) = *(_OWORD *)(a1 + 3);
  *(_OWORD *)(v8 + 56) = *(_OWORD *)(a1 + 5);
  *(void *)(v8 + 72) = v7;
  swift_retain();
  swift_retain();
  swift_retain();

  return swift_retain();
}

{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t vars8;

  uint64_t v6 = *a1;
  uint64_t v7 = a1[5];
  a4[3] = a2;
  a4[4] = a3;
  uint64_t v8 = swift_allocObject();
  *a4 = v8;
  *(void *)(v8 + 16) = v6;
  *(_OWORD *)(v8 + 24) = *(_OWORD *)(a1 + 1);
  *(_OWORD *)(v8 + 40) = *(_OWORD *)(a1 + 3);
  *(void *)(v8 + 56) = v7;
  swift_retain();
  swift_retain();

  return swift_retain();
}

uint64_t specialized closure #2 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)(uint64_t a1)
{
  char v1 = *(unsigned char *)(a1 + 48);
  uint64_t v2 = *(uint64_t (**)(void))(a1 + 56);
  uint64_t v3 = *(void *)(a1 + 64);
  uint64_t v4 = *(void *)(a1 + 72);
  long long v5 = *(_OWORD *)(a1 + 16);
  v8[0] = *(_OWORD *)a1;
  v8[1] = v5;
  v8[2] = *(_OWORD *)(a1 + 32);
  char v9 = v1;
  uint64_t v10 = v2;
  uint64_t v11 = v3;
  uint64_t v12 = v4;
  long long v6 = *(_OWORD *)(a1 + 96);
  long long v13 = *(_OWORD *)(a1 + 80);
  long long v14 = v6;
  return v2(v8);
}

{
  char v1;
  uint64_t (*v2)(void);
  uint64_t v3;
  uint64_t v4;
  long long v5;
  long long v6;
  _OWORD v8[2];
  char v9;
  uint64_t (*v10)(void);
  uint64_t v11;
  uint64_t v12;
  long long v13;
  long long v14;

  char v1 = *(unsigned char *)(a1 + 32);
  uint64_t v2 = *(uint64_t (**)(void))(a1 + 40);
  uint64_t v3 = *(void *)(a1 + 48);
  uint64_t v4 = *(void *)(a1 + 56);
  long long v5 = *(_OWORD *)(a1 + 16);
  v8[0] = *(_OWORD *)a1;
  v8[1] = v5;
  char v9 = v1;
  uint64_t v10 = v2;
  uint64_t v11 = v3;
  uint64_t v12 = v4;
  long long v6 = *(_OWORD *)(a1 + 80);
  long long v13 = *(_OWORD *)(a1 + 64);
  long long v14 = v6;
  return v2(v8);
}

uint64_t specialized static MusicActions.libraryActions(item:library:alertPresenter:noticePresenter:presentationSource:playlistPickerPresenter:metricsReportingContext:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v56 = a7;
  uint64_t v57 = a5;
  uint64_t v50 = a6;
  *(void *)&long long v55 = a4;
  uint64_t v58 = a2;
  uint64_t v11 = type metadata accessor for UUID();
  uint64_t v52 = *(void *)(v11 - 8);
  uint64_t v53 = v11;
  __chkstk_darwin(v11);
  uint64_t v51 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for Album();
  uint64_t v46 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  uint64_t v47 = *(void *)(v16 - 8);
  __chkstk_darwin(v16 - 8);
  uint64_t v48 = v17;
  uint64_t v18 = (char *)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = a1[3];
  *(void *)&long long v54 = a1[4];
  uint64_t v20 = a1[5];
  uint64_t v21 = __swift_project_boxed_opaque_existential_0Tm(a1, v19);
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)&v44 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v24 + 16))(v23);
  uint64_t v49 = a3;
  outlined init with copy of AlertPresenting(a3, (uint64_t)v60);
  outlined init with copy of (String, Any)(v55, (uint64_t)v62, &demangling cache variable for type metadata for NoticePresenting?);
  outlined init with copy of (String, Any)(v57, (uint64_t)v61, &demangling cache variable for type metadata for PresentationSource?);
  outlined init with copy of (String, Any)(v56, (uint64_t)v18, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  Actions.AddToLibrary.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:observer:metricsReportingContext:)((unint64_t)v23, v58, v60, (uint64_t)v62, (uint64_t)v61, 0, 0, (uint64_t)v18, &v63, v19, v54, v20);
  long long v54 = v64;
  long long v55 = v65;
  uint64_t v45 = v63;
  uint64_t v25 = v66;
  outlined init with copy of MusicLibraryAddable & MusicLibraryActionable((uint64_t)a1, (uint64_t)v61);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicLibraryAddable & MusicLibraryActionable);
  if (swift_dynamicCast())
  {
    uint64_t v26 = v63;
    uint64_t v27 = (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v15, v13);
    uint64_t v28 = ((uint64_t (*)(uint64_t))v26)(v27);
    BOOL v30 = v29 != 1;
    outlined consume of ActionSupportedStatus(v28, v29);
  }
  else
  {
    BOOL v30 = 1;
  }
  outlined init with copy of MusicLibraryAddable & MusicLibraryActionable((uint64_t)a1, (uint64_t)v61);
  uint64_t v46 = String.init<A>(describing:)();
  unint64_t v32 = v31;
  outlined init with copy of MusicLibraryAddable & MusicLibraryActionable((uint64_t)a1, (uint64_t)v60);
  outlined init with copy of AlertPresenting(v49, (uint64_t)v62);
  outlined init with copy of (String, Any)(v56, (uint64_t)v18, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  outlined init with copy of (String, Any)(v50, (uint64_t)v59, &demangling cache variable for type metadata for PlaylistPickerPresenting?);
  outlined init with copy of (String, Any)(v57, (uint64_t)v61, &demangling cache variable for type metadata for PresentationSource?);
  unint64_t v33 = (*(unsigned __int8 *)(v47 + 80) + 232) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
  unint64_t v34 = (v48 + v33 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v35 = swift_allocObject();
  *(void *)(v35 + 16) = v45;
  *(_OWORD *)(v35 + 24) = v54;
  *(_OWORD *)(v35 + 40) = v55;
  *(void *)(v35 + 56) = v25;
  *(unsigned char *)(v35 + 64) = 0;
  *(_DWORD *)(v35 + 65) = v67[0];
  *(_DWORD *)(v35 + 68) = *(_DWORD *)((char *)v67 + 3);
  *(void *)(v35 + 72) = closure #1 in static Actions.AddToLibrary.action(context:);
  *(void *)(v35 + 80) = 0;
  *(void *)(v35 + 88) = 0x4014000000000000;
  *(void *)(v35 + 96) = &async function pointer to closure #2 in static Actions.AddToLibrary.action(context:);
  *(void *)(v35 + 104) = 0;
  *(void *)(v35 + 112) = &async function pointer to closure #3 in static Actions.AddToLibrary.action(context:);
  *(void *)(v35 + 120) = 0;
  *(unsigned char *)(v35 + 128) = v30;
  outlined init with take of MusicLibraryActionable & MusicUserRatable(v60, (_OWORD *)(v35 + 136));
  outlined init with take of AlertPresenting(v62, v35 + 184);
  *(void *)(v35 + 224) = v58;
  outlined init with take of PresentationSource?((uint64_t)v18, v35 + v33, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  outlined init with take of PresentationSource?((uint64_t)v59, v35 + v34, &demangling cache variable for type metadata for PlaylistPickerPresenting?);
  outlined init with take of PresentationSource?((uint64_t)v61, v35 + ((v34 + 47) & 0xFFFFFFFFFFFFFFF8), &demangling cache variable for type metadata for PresentationSource?);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  unint64_t v36 = v51;
  UUID.init()();
  uint64_t v37 = UUID.uuidString.getter();
  uint64_t v39 = v38;
  (*(void (**)(char *, uint64_t))(v52 + 8))(v36, v53);
  strcpy((char *)v61, "ActionMenu: ");
  BYTE5(v61[1]) = 0;
  HIWORD(v61[1]) = -5120;
  v40._uint64_t countAndFlagsBits = v46;
  v40._object = v32;
  String.append(_:)(v40);
  swift_release();
  swift_release();
  swift_release();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v42 = v61[0];
  uint64_t v43 = v61[1];
  *(void *)a8 = v37;
  *(void *)(a8 + 8) = v39;
  *(void *)(a8 + 16) = v42;
  *(void *)(a8 + 24) = v43;
  *(void *)(a8 + 32) = 0;
  *(void *)(a8 + 40) = 0xE000000000000000;
  *(void *)(a8 + 48) = 0;
  *(unsigned char *)(a8 + 56) = 0;
  *(void *)(a8 + 64) = partial apply for specialized closure #1 in static MusicActions.libraryActions(item:library:alertPresenter:noticePresenter:presentationSource:playlistPickerPresenter:metricsReportingContext:);
  *(void *)(a8 + 72) = v35;
  return result;
}

uint64_t specialized static MusicActions.playbackActions(item:playbackIntent:playbackController:library:alertPresenter:noticePresenter:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, unint64_t a9, uint64_t a10)
{
  uint64_t v38 = a4;
  uint64_t v39 = a7;
  uint64_t v43 = a5;
  uint64_t v44 = a6;
  unint64_t v42 = a9;
  uint64_t v14 = type metadata accessor for UUID();
  uint64_t v45 = *(void *)(v14 - 8);
  uint64_t v46 = v14;
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(void *)(v18 + 64);
  __chkstk_darwin(v17 - 8);
  uint64_t v20 = (char *)&v38 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of AlertPresenting(a1, (uint64_t)v48);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PlayableMusicItem);
  uint64_t v21 = String.init<A>(describing:)();
  Swift::String v40 = v22;
  uint64_t v41 = v21;
  outlined init with copy of AlertPresenting(a1, (uint64_t)v48);
  outlined init with copy of (String, Any)(a10, (uint64_t)v20, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  outlined init with copy of AlertPresenting(v38, (uint64_t)v47);
  unint64_t v23 = (*(unsigned __int8 *)(v18 + 80) + 104) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  unint64_t v24 = (v19 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v25 = (void *)swift_allocObject();
  outlined init with take of AlertPresenting(v48, (uint64_t)(v25 + 2));
  v25[7] = a2;
  v25[8] = a3;
  uint64_t v26 = v44;
  v25[9] = v43;
  v25[10] = v26;
  uint64_t v27 = (uint64_t)v25 + v23;
  uint64_t v28 = v39;
  unint64_t v29 = v42;
  v25[11] = v39;
  _OWORD v25[12] = v29;
  outlined init with take of PresentationSource?((uint64_t)v20, v27, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  outlined init with take of AlertPresenting(v47, (uint64_t)v25 + v24);
  id v30 = a2;
  id v31 = a3;
  swift_bridgeObjectRetain();
  outlined copy of Data?(v28, v29);
  UUID.init()();
  uint64_t v32 = UUID.uuidString.getter();
  uint64_t v34 = v33;
  (*(void (**)(char *, uint64_t))(v45 + 8))(v16, v46);
  strcpy((char *)v48, "ActionMenu: ");
  BYTE13(v48[0]) = 0;
  HIWORD(v48[0]) = -5120;
  v35._uint64_t countAndFlagsBits = v41;
  v35._object = v40;
  String.append(_:)(v35);
  uint64_t result = swift_bridgeObjectRelease();
  long long v37 = v48[0];
  *(void *)a8 = v32;
  *(void *)(a8 + 8) = v34;
  *(_OWORD *)(a8 + 16) = v37;
  *(void *)(a8 + 32) = 0;
  *(void *)(a8 + 40) = 0xE000000000000000;
  *(void *)(a8 + 48) = 0;
  *(unsigned char *)(a8 + 56) = 0;
  *(void *)(a8 + 64) = partial apply for closure #1 in static MusicActions.playbackActions(item:playbackIntent:playbackController:library:alertPresenter:noticePresenter:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:);
  *(void *)(a8 + 72) = v25;
  return result;
}

uint64_t specialized static MusicActions.favoritingActions(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v41 = a8;
  uint64_t v40 = a7;
  uint64_t v36 = a6;
  uint64_t v35 = a5;
  uint64_t v37 = a2;
  uint64_t v42 = type metadata accessor for UUID();
  uint64_t v13 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(void *)(v17 + 64);
  __chkstk_darwin(v16 - 8);
  uint64_t v19 = (char *)&v34 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of AlertPresenting(a1, (uint64_t)v43);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FavoritableMusicItem);
  uint64_t v39 = String.init<A>(describing:)();
  uint64_t v38 = v20;
  outlined init with copy of AlertPresenting(a1, (uint64_t)v46);
  outlined init with copy of AlertPresenting(a3, (uint64_t)v45);
  outlined init with copy of (String, Any)(a4, (uint64_t)v44, &demangling cache variable for type metadata for NoticePresenting?);
  outlined init with copy of (String, Any)(v35, (uint64_t)v43, &demangling cache variable for type metadata for PresentationSource?);
  outlined init with copy of (String, Any)(v36, (uint64_t)v19, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  unint64_t v21 = (*(unsigned __int8 *)(v17 + 80) + 216) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  unint64_t v22 = (v18 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v23 = swift_allocObject();
  outlined init with take of AlertPresenting(v46, v23 + 16);
  *(void *)(v23 + 56) = v37;
  outlined init with take of AlertPresenting(v45, v23 + 64);
  outlined init with take of PresentationSource?((uint64_t)v44, v23 + 104, &demangling cache variable for type metadata for NoticePresenting?);
  outlined init with take of PresentationSource?((uint64_t)v43, v23 + 144, &demangling cache variable for type metadata for PresentationSource?);
  outlined init with take of PresentationSource?((uint64_t)v19, v23 + v21, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  unint64_t v24 = (uint64_t *)(v23 + v22);
  uint64_t v25 = v40;
  uint64_t v26 = v41;
  *unint64_t v24 = v40;
  v24[1] = v26;
  swift_retain();
  outlined copy of (@escaping @callee_guaranteed () -> ())?(v25);
  UUID.init()();
  uint64_t v27 = UUID.uuidString.getter();
  uint64_t v29 = v28;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v42);
  strcpy((char *)v43, "ActionMenu: ");
  BYTE5(v43[1]) = 0;
  HIWORD(v43[1]) = -5120;
  v30._uint64_t countAndFlagsBits = v39;
  v30._object = v38;
  String.append(_:)(v30);
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v32 = v43[0];
  uint64_t v33 = v43[1];
  *(void *)a9 = v27;
  *(void *)(a9 + 8) = v29;
  *(void *)(a9 + 16) = v32;
  *(void *)(a9 + 24) = v33;
  *(void *)(a9 + 32) = 0;
  *(void *)(a9 + 40) = 0xE000000000000000;
  *(void *)(a9 + 48) = 0;
  *(unsigned char *)(a9 + 56) = 0;
  *(void *)(a9 + 64) = partial apply for closure #1 in static MusicActions.favoritingActions(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:);
  *(void *)(a9 + 72) = v23;
  return result;
}

uint64_t sub_1000692A8()
{
  uint64_t v1 = *(unsigned __int8 *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?)
                                      - 8)
                          + 80);
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);

  if (*(void *)(v0 + 96)) {
    __swift_destroy_boxed_opaque_existential_0Tm(v0 + 72);
  }
  uint64_t v2 = (v1 + 144) & ~v1;
  swift_bridgeObjectRelease();
  unint64_t v3 = *(void *)(v0 + 136);
  if (v3 >> 60 != 15) {
    outlined consume of Data._Representation(*(void *)(v0 + 128), v3);
  }
  uint64_t v4 = v0 + v2;
  uint64_t v5 = type metadata accessor for Actions.MetricsReportingContext();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v0 + v2, 1, v5))
  {
    if (*(void *)(v4 + 8) >= 0xBuLL) {
      swift_bridgeObjectRelease();
    }
    uint64_t v6 = v4 + *(int *)(v5 + 20);
    uint64_t v7 = type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v8 = v6 + *(int *)(v7 + 24);
      uint64_t v9 = type metadata accessor for URL();
      uint64_t v10 = *(void *)(v9 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9)) {
        (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return swift_deallocObject();
}

void *partial apply for closure #1 in static MusicActions.queueActions(item:playbackIntent:playbackController:library:alertPresenter:noticePresenter:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?)
                 - 8);
  return closure #1 in static MusicActions.queueActions(item:playbackIntent:playbackController:library:alertPresenter:noticePresenter:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)((void *)(v0 + 16), *(void **)(v0 + 56), *(void **)(v0 + 64), v0 + 72, *(void *)(v0 + 112), *(void *)(v0 + 120), *(void *)(v0 + 128), *(void *)(v0 + 136), v0 + ((*(unsigned __int8 *)(v1 + 80) + 144) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)));
}

uint64_t outlined copy of Data?(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return outlined copy of Data._Representation(a1, a2);
  }
  return a1;
}

uint64_t outlined copy of Data._Representation(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }

  return swift_retain();
}

uint64_t outlined init with copy of PresentationSource(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_100069678()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?)
                 - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 216) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
  swift_release();
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 64);
  if (*(void *)(v0 + 128)) {
    __swift_destroy_boxed_opaque_existential_0Tm(v0 + 104);
  }
  uint64_t v4 = v3 + v2;
  swift_unknownObjectWeakDestroy();
  int v5 = *(unsigned __int8 *)(v0 + 192);
  if (v5 != 255) {
    outlined consume of PresentationSource.Position(*(id *)(v0 + 152), *(void *)(v0 + 160), *(void *)(v0 + 168), *(void *)(v0 + 176), *(void *)(v0 + 184), v5);
  }
  uint64_t v6 = v4 + 7;
  if (*(void *)(v0 + 200)) {
    swift_release();
  }
  unint64_t v7 = v6 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = v0 + v2;
  uint64_t v9 = type metadata accessor for Actions.MetricsReportingContext();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9))
  {
    if (*(void *)(v8 + 8) >= 0xBuLL) {
      swift_bridgeObjectRelease();
    }
    uint64_t v10 = v8 + *(int *)(v9 + 20);
    uint64_t v11 = type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v10, 1, v11))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v12 = v10 + *(int *)(v11 + 24);
      uint64_t v13 = type metadata accessor for URL();
      uint64_t v14 = *(void *)(v13 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13)) {
        (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(void *)(v0 + v7)) {
    swift_release();
  }
  swift_release();

  return swift_deallocObject();
}

void *partial apply for closure #1 in static MusicActions.tasteActions(item:library:alertPresenter:noticePresenting:ratingViewController:presentationSource:metricsReportingContext:onFinish:)()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?)
                 - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 216) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  return closure #1 in static MusicActions.tasteActions(item:library:alertPresenter:noticePresenting:ratingViewController:presentationSource:metricsReportingContext:onFinish:)((void *)(v0 + 16), *(void *)(v0 + 56), v0 + 64, v0 + 104, v0 + 144, v0 + v2, *(void *)(v0 + v3), *(void *)(v0 + v3 + 8), *(void *)(v0 + ((v3 + 23) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v0 + ((v3 + 23) & 0xFFFFFFFFFFFFFFF8) + 8));
}

ValueMetadata *type metadata accessor for Actions()
{
  return &type metadata for Actions;
}

uint64_t *initializeBufferWithCopyOfBuffer for PlaylistContext(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for Playlist.Entry();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for Playlist();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t destroy for PlaylistContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Playlist.Entry();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = type metadata accessor for Playlist();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);

  return v7(v5, v6);
}

uint64_t initializeWithCopy for PlaylistContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Playlist.Entry();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for Playlist();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t assignWithCopy for PlaylistContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Playlist.Entry();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for Playlist();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t initializeWithTake for PlaylistContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Playlist.Entry();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for Playlist();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for PlaylistContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Playlist.Entry();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for Playlist();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for PlaylistContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100069EB0);
}

uint64_t sub_100069EB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Playlist.Entry();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = type metadata accessor for Playlist();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for PlaylistContext(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100069FBC);
}

uint64_t sub_100069FBC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for Playlist.Entry();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = type metadata accessor for Playlist();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t type metadata completion function for PlaylistContext()
{
  uint64_t result = type metadata accessor for Playlist.Entry();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for Playlist();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MusicActions()
{
  return &type metadata for MusicActions;
}

_OWORD *outlined init with take of MusicLibraryActionable & MusicUserRatable(long long *a1, _OWORD *a2)
{
  long long v2 = *a1;
  long long v3 = a1[2];
  a2[1] = a1[1];
  a2[2] = v3;
  *a2 = v2;
  return a2;
}

uint64_t sub_10006A1B0()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed MusicUserRatable) -> (@owned RatingViewController)(uint64_t a1)
{
  return thunk for @escaping @callee_guaranteed (@in_guaranteed MusicUserRatable) -> (@owned RatingViewController)(a1, *(uint64_t (**)(uint64_t *))(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t partial apply for specialized closure #1 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)@<X0>(uint64_t *a1@<X8>)
{
  return specialized closure #1 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)((uint64_t *)(v1 + 16), a1);
}

{
  uint64_t v1;

  return specialized closure #1 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)((uint64_t *)(v1 + 16), (uint64_t)&type metadata for Actions.UndoSuggestLess.Context, (uint64_t)&protocol witness table for Actions.UndoSuggestLess.Context, a1);
}

{
  uint64_t v1;

  return specialized closure #1 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)((uint64_t *)(v1 + 16), (uint64_t)&type metadata for Actions.SuggestLess.Context, (uint64_t)&protocol witness table for Actions.SuggestLess.Context, a1);
}

{
  uint64_t v1;

  return specialized closure #1 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)((uint64_t *)(v1 + 16), (uint64_t)&type metadata for Actions.UndoFavorite.Context, (uint64_t)&protocol witness table for Actions.UndoFavorite.Context, a1);
}

{
  uint64_t v1;

  return specialized closure #1 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)((uint64_t *)(v1 + 16), (uint64_t)&type metadata for Actions.Favorite.Context, (uint64_t)&protocol witness table for Actions.Favorite.Context, a1);
}

{
  uint64_t v1;

  return specialized closure #1 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)(v1 + 16, a1);
}

{
  uint64_t v1;
  uint64_t v3;
  uint64_t vars8;

  a1[3] = (uint64_t)&type metadata for Actions.DeleteOrRemoveDownload.Context;
  a1[4] = (uint64_t)&protocol witness table for Actions.DeleteOrRemoveDownload.Context;
  long long v3 = swift_allocObject();
  *a1 = v3;

  return outlined init with copy of Actions.DeleteOrRemoveDownload.Context(v1 + 16, v3 + 16);
}

{
  uint64_t v1;

  return specialized closure #1 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)((uint64_t *)(v1 + 16), (uint64_t)&type metadata for Actions.Download.Context, (uint64_t)&protocol witness table for Actions.Download.Context, a1);
}

{
  uint64_t v1;

  return specialized closure #1 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)((uint64_t *)(v1 + 16), (uint64_t)&type metadata for Actions.RemoveDownload.Context, (uint64_t)&protocol witness table for Actions.RemoveDownload.Context, a1);
}

{
  uint64_t v1;

  return specialized closure #1 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)((uint64_t *)(v1 + 16), (uint64_t)&type metadata for Actions.DeleteFromLibrary.Context, (uint64_t)&protocol witness table for Actions.DeleteFromLibrary.Context, a1);
}

{
  uint64_t v1;

  return specialized closure #1 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)((uint64_t *)(v1 + 16), (uint64_t)&type metadata for Actions.AddToPlaylist.Context, (uint64_t)&protocol witness table for Actions.AddToPlaylist.Context, a1);
}

{
  uint64_t v1;

  return specialized closure #1 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)((uint64_t *)(v1 + 16), (uint64_t)&type metadata for Actions.AddToLibrary.Context, (uint64_t)&protocol witness table for Actions.AddToLibrary.Context, a1);
}

{
  uint64_t v1;

  return specialized closure #1 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)((uint64_t *)(v1 + 16), (uint64_t)&type metadata for Actions.ShowSongCredits.Context, (uint64_t)&protocol witness table for Actions.ShowSongCredits.Context, a1);
}

{
  uint64_t v1;

  return specialized closure #1 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)((uint64_t *)(v1 + 16), (uint64_t)&type metadata for Actions.RemoveFromPlaylist.Context, (uint64_t)&protocol witness table for Actions.RemoveFromPlaylist.Context, a1);
}

{
  uint64_t v1;

  return specialized closure #1 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)((uint64_t *)(v1 + 16), (uint64_t)&type metadata for Actions.Play.Context, (uint64_t)&protocol witness table for Actions.Play.Context, a1);
}

{
  uint64_t v1;

  return specialized closure #1 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)((uint64_t *)(v1 + 16), a1);
}

{
  uint64_t v1;

  return specialized closure #1 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)((uint64_t *)(v1 + 16), a1);
}

{
  uint64_t v1;

  return specialized closure #1 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)((uint64_t *)(v1 + 16), (uint64_t)&type metadata for Actions.CreateStation.Context, (uint64_t)&protocol witness table for Actions.CreateStation.Context, a1);
}

uint64_t partial apply for specialized closure #2 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)()
{
  return specialized closure #2 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)(v0 + 16);
}

{
  uint64_t v0;

  return specialized closure #2 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)(v0 + 16);
}

{
  uint64_t v0;
  long long v1;
  long long v2;
  uint64_t v3;
  uint64_t (*v4)(void);
  long long v5;
  _OWORD v7[5];
  uint64_t (*v8)(void);
  uint64_t v9;
  long long v10;
  long long v11;
  uint64_t v12;

  uint64_t v1 = *(_OWORD *)(v0 + 64);
  v7[2] = *(_OWORD *)(v0 + 48);
  v7[3] = v1;
  v7[4] = *(_OWORD *)(v0 + 80);
  long long v2 = *(_OWORD *)(v0 + 32);
  v7[0] = *(_OWORD *)(v0 + 16);
  v7[1] = v2;
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 96);
  long long v3 = *(void *)(v0 + 104);
  uint64_t v5 = *(_OWORD *)(v0 + 128);
  uint64_t v10 = *(_OWORD *)(v0 + 112);
  uint64_t v11 = v5;
  uint64_t v12 = *(void *)(v0 + 144);
  uint64_t v8 = v4;
  uint64_t v9 = v3;
  return v4(v7);
}

{
  uint64_t v0;

  return (*(uint64_t (**)(uint64_t))(v0 + 160))(v0 + 16);
}

{
  uint64_t v0;
  long long v1;
  long long v2;
  uint64_t v3;
  uint64_t (*v4)(void);
  long long v5;
  uint64_t v6;
  _OWORD v8[4];
  uint64_t v9;
  uint64_t (*v10)(void);
  uint64_t v11;
  long long v12;
  long long v13;
  uint64_t v14;

  uint64_t v1 = *(_OWORD *)(v0 + 64);
  v8[2] = *(_OWORD *)(v0 + 48);
  _OWORD v8[3] = v1;
  long long v2 = *(_OWORD *)(v0 + 32);
  v8[0] = *(_OWORD *)(v0 + 16);
  v8[1] = v2;
  uint64_t v14 = *(void *)(v0 + 136);
  long long v3 = *(void *)(v0 + 80);
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 88);
  uint64_t v12 = *(_OWORD *)(v0 + 104);
  uint64_t v5 = *(_OWORD *)(v0 + 120);
  uint64_t v6 = *(void *)(v0 + 96);
  uint64_t v13 = v5;
  uint64_t v9 = v3;
  uint64_t v10 = v4;
  uint64_t v11 = v6;
  return v4(v8);
}

uint64_t objectdestroy_9Tm()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t partial apply for specialized closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)()
{
  long long v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *long long v2 = v1;
  v2[1] = closure #3 in static Actions.ReportConcern.action(context:);
  long long v3 = (uint64_t (*)(uint64_t))((char *)&async function pointer to specialized closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)
                                       + async function pointer to specialized closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:));
  return v3(v0 + 16);
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v5;

  long long v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *long long v2 = v1;
  v2[1] = closure #3 in static Actions.ReportConcern.action(context:);
  long long v3 = (uint64_t (*)(uint64_t))((char *)&async function pointer to specialized closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)
                                       + async function pointer to specialized closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:));
  return v3(v0 + 16);
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v5;

  long long v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *long long v2 = v1;
  v2[1] = partial apply for closure #1 in static MusicEngagementExtension.performRequest(with:completion:);
  long long v3 = (uint64_t (*)(uint64_t))((char *)&async function pointer to specialized closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)
                                       + async function pointer to specialized closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:));
  return v3(v0 + 16);
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v5;

  long long v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *long long v2 = v1;
  v2[1] = closure #3 in static Actions.ReportConcern.action(context:);
  long long v3 = (uint64_t (*)(uint64_t))((char *)&async function pointer to specialized closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)
                                       + async function pointer to specialized closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:));
  return v3(v0 + 16);
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v5;

  long long v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *long long v2 = v1;
  v2[1] = closure #3 in static Actions.ReportConcern.action(context:);
  long long v3 = (uint64_t (*)(uint64_t))((char *)&async function pointer to specialized closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)
                                       + async function pointer to specialized closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:));
  return v3(v0 + 16);
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v5;

  long long v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *long long v2 = v1;
  v2[1] = closure #3 in static Actions.ReportConcern.action(context:);
  long long v3 = (uint64_t (*)(uint64_t))((char *)&async function pointer to specialized closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)
                                       + async function pointer to specialized closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:));
  return v3(v0 + 16);
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v4;

  long long v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *long long v2 = v1;
  v2[1] = closure #3 in static Actions.ReportConcern.action(context:);
  return specialized closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)(v0 + 16);
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v5;

  long long v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *long long v2 = v1;
  v2[1] = closure #3 in static Actions.ReportConcern.action(context:);
  long long v3 = (uint64_t (*)(uint64_t))((char *)&async function pointer to specialized closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)
                                       + async function pointer to specialized closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:));
  return v3(v0 + 16);
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t (*v3)(_OWORD *);
  uint64_t v5;

  long long v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *long long v2 = v1;
  v2[1] = closure #3 in static Actions.ReportConcern.action(context:);
  long long v3 = (uint64_t (*)(_OWORD *))((char *)&async function pointer to specialized closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)
                                        + async function pointer to specialized closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:));
  return v3((_OWORD *)(v0 + 16));
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t (*v3)(_OWORD *);
  uint64_t v5;

  long long v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *long long v2 = v1;
  v2[1] = closure #3 in static Actions.ReportConcern.action(context:);
  long long v3 = (uint64_t (*)(_OWORD *))((char *)&async function pointer to specialized closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)
                                        + async function pointer to specialized closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:));
  return v3((_OWORD *)(v0 + 16));
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v5;

  long long v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *long long v2 = v1;
  v2[1] = closure #3 in static Actions.ReportConcern.action(context:);
  long long v3 = (uint64_t (*)(uint64_t))((char *)&async function pointer to specialized closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)
                                       + async function pointer to specialized closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:));
  return v3(v0 + 16);
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v5;

  long long v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *long long v2 = v1;
  v2[1] = closure #3 in static Actions.ReportConcern.action(context:);
  long long v3 = (uint64_t (*)(uint64_t))((char *)&async function pointer to specialized closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)
                                       + async function pointer to specialized closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:));
  return v3(v0 + 16);
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v5;

  long long v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *long long v2 = v1;
  v2[1] = closure #3 in static Actions.ReportConcern.action(context:);
  long long v3 = (uint64_t (*)(uint64_t))((char *)&async function pointer to specialized closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)
                                       + async function pointer to specialized closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:));
  return v3(v0 + 16);
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v5;

  long long v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *long long v2 = v1;
  v2[1] = closure #3 in static Actions.ReportConcern.action(context:);
  long long v3 = (uint64_t (*)(uint64_t))((char *)&async function pointer to specialized closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)
                                       + async function pointer to specialized closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:));
  return v3(v0 + 16);
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v5;

  long long v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *long long v2 = v1;
  v2[1] = closure #3 in static Actions.ReportConcern.action(context:);
  long long v3 = (uint64_t (*)(uint64_t))((char *)&async function pointer to specialized closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)
                                       + async function pointer to specialized closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:));
  return v3(v0 + 16);
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t (*v3)(_OWORD *);
  uint64_t v5;

  long long v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *long long v2 = v1;
  v2[1] = closure #3 in static Actions.ReportConcern.action(context:);
  long long v3 = (uint64_t (*)(_OWORD *))((char *)&async function pointer to specialized closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)
                                        + async function pointer to specialized closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:));
  return v3((_OWORD *)(v0 + 16));
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t (*v3)(_OWORD *);
  uint64_t v5;

  long long v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *long long v2 = v1;
  v2[1] = closure #3 in static Actions.ReportConcern.action(context:);
  long long v3 = (uint64_t (*)(_OWORD *))((char *)&async function pointer to specialized closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)
                                        + async function pointer to specialized closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:));
  return v3((_OWORD *)(v0 + 16));
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v5;

  long long v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *long long v2 = v1;
  v2[1] = closure #3 in static Actions.ReportConcern.action(context:);
  long long v3 = (uint64_t (*)(uint64_t))((char *)&async function pointer to specialized closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)
                                       + async function pointer to specialized closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:));
  return v3(v0 + 16);
}

uint64_t outlined retain of Action<Actions.RateSong.Context, ActionType, ()>(uint64_t a1)
{
  return a1;
}

uint64_t sub_10006A378()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t partial apply for specialized closure #1 in closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = closure #3 in static Actions.ReportConcern.action(context:);
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&async function pointer to specialized closure #1 in closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)
                                                                   + async function pointer to specialized closure #1 in closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:));
  return v7(a1, v4, v5, (_OWORD *)(v1 + 32));
}

{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t, _OWORD *);
  uint64_t v9;

  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = closure #3 in static Actions.ReportConcern.action(context:);
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&async function pointer to specialized closure #1 in closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)
                                                                   + async function pointer to specialized closure #1 in closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:));
  return v7(a1, v4, v5, (_OWORD *)(v1 + 32));
}

{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t, _OWORD *);
  uint64_t v9;

  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = closure #3 in static Actions.ReportConcern.action(context:);
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&async function pointer to specialized closure #1 in closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)
                                                                   + async function pointer to specialized closure #1 in closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:));
  return v7(a1, v4, v5, (_OWORD *)(v1 + 32));
}

{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t, _OWORD *);
  uint64_t v9;

  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = closure #3 in static Actions.ReportConcern.action(context:);
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&async function pointer to specialized closure #1 in closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)
                                                                   + async function pointer to specialized closure #1 in closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:));
  return v7(a1, v4, v5, (_OWORD *)(v1 + 32));
}

{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t, _OWORD *);
  uint64_t v9;

  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = closure #3 in static Actions.ReportConcern.action(context:);
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&async function pointer to specialized closure #1 in closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)
                                                                   + async function pointer to specialized closure #1 in closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:));
  return v7(a1, v4, v5, (_OWORD *)(v1 + 32));
}

{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v9;

  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = closure #3 in static Actions.ReportConcern.action(context:);
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&async function pointer to specialized closure #1 in closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)
                                                                  + async function pointer to specialized closure #1 in closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:));
  return v7(a1, v4, v5, v1 + 32);
}

{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t, _OWORD *);
  uint64_t v9;

  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = closure #3 in static Actions.ReportConcern.action(context:);
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&async function pointer to specialized closure #1 in closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)
                                                                   + async function pointer to specialized closure #1 in closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:));
  return v7(a1, v4, v5, (_OWORD *)(v1 + 32));
}

{
  uint64_t v1;
  void *v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v6;

  long long v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *long long v3 = v1;
  v3[1] = closure #3 in static Actions.ReportConcern.action(context:);
  uint64_t v4 = (uint64_t (*)(uint64_t))((char *)&async function pointer to specialized closure #1 in closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)
                                       + async function pointer to specialized closure #1 in closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:));
  return v4(a1);
}

{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t, _OWORD *);
  uint64_t v9;

  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = closure #3 in static Actions.ReportConcern.action(context:);
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&async function pointer to specialized closure #1 in closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)
                                                                   + async function pointer to specialized closure #1 in closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:));
  return v7(a1, v4, v5, (_OWORD *)(v1 + 32));
}

{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t, _OWORD *);
  uint64_t v9;

  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = closure #3 in static Actions.ReportConcern.action(context:);
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&async function pointer to specialized closure #1 in closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)
                                                                   + async function pointer to specialized closure #1 in closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:));
  return v7(a1, v4, v5, (_OWORD *)(v1 + 32));
}

{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t, _OWORD *);
  uint64_t v9;

  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = closure #3 in static Actions.ReportConcern.action(context:);
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&async function pointer to specialized closure #1 in closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)
                                                                   + async function pointer to specialized closure #1 in closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:));
  return v7(a1, v4, v5, (_OWORD *)(v1 + 32));
}

{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t, _OWORD *);
  uint64_t v9;

  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = closure #3 in static Actions.ReportConcern.action(context:);
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&async function pointer to specialized closure #1 in closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)
                                                                   + async function pointer to specialized closure #1 in closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:));
  return v7(a1, v4, v5, (_OWORD *)(v1 + 32));
}

{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t, _OWORD *);
  uint64_t v9;

  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = closure #3 in static Actions.ReportConcern.action(context:);
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&async function pointer to specialized closure #1 in closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)
                                                                   + async function pointer to specialized closure #1 in closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:));
  return v7(a1, v4, v5, (_OWORD *)(v1 + 32));
}

{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t, _OWORD *);
  uint64_t v9;

  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = closure #3 in static Actions.ReportConcern.action(context:);
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&async function pointer to specialized closure #1 in closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)
                                                                   + async function pointer to specialized closure #1 in closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:));
  return v7(a1, v4, v5, (_OWORD *)(v1 + 32));
}

{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t, _OWORD *);
  uint64_t v9;

  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = closure #3 in static Actions.ReportConcern.action(context:);
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&async function pointer to specialized closure #1 in closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)
                                                                   + async function pointer to specialized closure #1 in closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:));
  return v7(a1, v4, v5, (_OWORD *)(v1 + 32));
}

{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t, _OWORD *);
  uint64_t v9;

  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = closure #3 in static Actions.ReportConcern.action(context:);
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&async function pointer to specialized closure #1 in closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)
                                                                   + async function pointer to specialized closure #1 in closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:));
  return v7(a1, v4, v5, (_OWORD *)(v1 + 32));
}

{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t, _OWORD *);
  uint64_t v9;

  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = closure #3 in static Actions.ReportConcern.action(context:);
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&async function pointer to specialized closure #1 in closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)
                                                                   + async function pointer to specialized closure #1 in closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:));
  return v7(a1, v4, v5, (_OWORD *)(v1 + 32));
}

{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t, _OWORD *);
  uint64_t v9;

  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = closure #3 in static Actions.ReportConcern.action(context:);
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&async function pointer to specialized closure #1 in closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:)
                                                                   + async function pointer to specialized closure #1 in closure #3 in static ActionMenu.ElementBuilder.buildExpression<A, B>(_:));
  return v7(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_10006A4A0()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t outlined init with take of Player.InsertCommand.Location(uint64_t a1, uint64_t a2)
{
  return a2;
}

id *outlined release of Player.InsertCommand.Location(id *a1)
{
  return a1;
}

void outlined consume of Player.InsertCommand.Location(id a1)
{
  if ((unint64_t)a1 >= 4) {
}
  }

uint64_t outlined release of String?(uint64_t a1)
{
  return a1;
}

id *outlined release of Action<Actions.Queue.Context, ActionType, ()>(id *a1)
{
  return a1;
}

uint64_t objectdestroy_104Tm()
{
  uint64_t v1 = *(void **)(v0 + 16);
  if ((unint64_t)v1 >= 4) {

  }
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

id *outlined retain of Action<Actions.Queue.Context, ActionType, ()>(id *a1)
{
  return a1;
}

id outlined copy of Player.InsertCommand.Location(id result)
{
  if ((unint64_t)result >= 4) {
    return result;
  }
  return result;
}

uint64_t sub_10006AF50()
{
  swift_unknownObjectRelease();
  uint64_t v1 = *(void **)(v0 + 32);
  if ((unint64_t)v1 >= 4) {

  }
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10006B098()
{
  uint64_t v1 = *(void **)(v0 + 16);
  if ((unint64_t)v1 >= 4) {

  }
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10006B0F8()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?)
                 - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 216) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = *(void *)(v1 + 64) + v2;
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
  swift_release();
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 64);
  if (*(void *)(v0 + 128)) {
    __swift_destroy_boxed_opaque_existential_0Tm(v0 + 104);
  }
  unint64_t v4 = v3 + 7;
  if (*(void *)(v0 + 200) != 1)
  {
    swift_unknownObjectWeakDestroy();
    int v5 = *(unsigned __int8 *)(v0 + 192);
    if (v5 != 255) {
      outlined consume of PresentationSource.Position(*(id *)(v0 + 152), *(void *)(v0 + 160), *(void *)(v0 + 168), *(void *)(v0 + 176), *(void *)(v0 + 184), v5);
    }
    if (*(void *)(v0 + 200)) {
      swift_release();
    }
  }
  unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = v0 + v2;
  uint64_t v8 = type metadata accessor for Actions.MetricsReportingContext();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8))
  {
    if (*(void *)(v7 + 8) >= 0xBuLL) {
      swift_bridgeObjectRelease();
    }
    uint64_t v9 = v7 + *(int *)(v8 + 20);
    uint64_t v10 = type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v9, 1, v10))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v11 = v9 + *(int *)(v10 + 24);
      uint64_t v12 = type metadata accessor for URL();
      uint64_t v13 = *(void *)(v12 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12)) {
        (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(void *)(v0 + v6)) {
    swift_release();
  }

  return swift_deallocObject();
}

void *partial apply for closure #1 in static MusicActions.favoritingActions(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:)()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?)
                 - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 216) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v0 + 56);
  uint64_t v4 = v0 + v2;
  int v5 = (uint64_t *)(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v6 = *v5;
  uint64_t v7 = v5[1];

  return closure #1 in static MusicActions.favoritingActions(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:)((void *)(v0 + 16), v3, v0 + 64, v0 + 104, v0 + 144, v4, v6, v7);
}

uint64_t outlined init with copy of MusicLibraryAddable & MusicLibraryActionable(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_10006B4C0()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?)
                 - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 232) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v4 = v3 + 47;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 136);
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 184);
  swift_release();
  uint64_t v5 = v0 + v2;
  uint64_t v6 = type metadata accessor for Actions.MetricsReportingContext();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6))
  {
    if (*(void *)(v5 + 8) >= 0xBuLL) {
      swift_bridgeObjectRelease();
    }
    uint64_t v7 = v5 + *(int *)(v6 + 20);
    uint64_t v8 = type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v9 = v7 + *(int *)(v8 + 24);
      uint64_t v10 = type metadata accessor for URL();
      uint64_t v11 = *(void *)(v10 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10)) {
        (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v4 = v3 + 47;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  unint64_t v12 = v4 & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)(v0 + v3 + 24)) {
    __swift_destroy_boxed_opaque_existential_0Tm(v0 + v3);
  }
  uint64_t v13 = v0 + v12;
  if (*(void *)(v0 + v12 + 56) != 1)
  {
    swift_unknownObjectWeakDestroy();
    int v14 = *(unsigned __int8 *)(v13 + 48);
    if (v14 != 255) {
      outlined consume of PresentationSource.Position(*(id *)(v13 + 8), *(void *)(v13 + 16), *(void *)(v13 + 24), *(void *)(v13 + 32), *(void *)(v13 + 40), v14);
    }
    if (*(void *)(v13 + 56)) {
      swift_release();
    }
  }

  return swift_deallocObject();
}

uint64_t partial apply for specialized closure #1 in static MusicActions.libraryActions(item:library:alertPresenter:noticePresenter:presentationSource:playlistPickerPresenter:metricsReportingContext:)()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?)
                 - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 232) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  char v4 = *(unsigned char *)(v0 + 128);
  uint64_t v5 = *(void *)(v0 + 224);

  return specialized closure #1 in static MusicActions.libraryActions(item:library:alertPresenter:noticePresenter:presentationSource:playlistPickerPresenter:metricsReportingContext:)(v0 + 16, v4, (void *)(v0 + 136), (void *)(v0 + 184), v5, v0 + v2, v0 + v3, v0 + ((v3 + 47) & 0xFFFFFFFFFFFFFFF8));
}

uint64_t sub_10006B868()
{
  return objectdestroy_129Tm((void (*)(void))&_swift_release, (void (*)(void))&_swift_release);
}

uint64_t sub_10006B894()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t objectdestroy_136Tm()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 96);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10006BC30()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 112);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10006BD80()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 96);
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_10006BDE8()
{
  return objectdestroy_174Tm((void (*)(void))&_swift_release, (void (*)(void))&_swift_release);
}

uint64_t sub_10006BE48()
{
  return objectdestroy_174Tm((void (*)(void))&_swift_release, (void (*)(void))&_swift_release);
}

uint64_t sub_10006BE78()
{
  return objectdestroy_174Tm((void (*)(void))&_swift_release, (void (*)(void))&_swift_release);
}

uint64_t sub_10006BF44()
{
  return objectdestroy_184Tm((void (*)(void))&_swift_release, (void (*)(void))&_swift_release);
}

uint64_t sub_10006C038()
{
  return objectdestroy_129Tm((void (*)(void))&_swift_release, (void (*)(void))&_swift_release);
}

uint64_t sub_10006C064()
{
  return objectdestroy_174Tm((void (*)(void))&_swift_release, (void (*)(void))&_swift_release);
}

uint64_t sub_10006C0C4()
{
  return objectdestroy_174Tm((void (*)(void))&_swift_release, (void (*)(void))&_swift_release);
}

uint64_t sub_10006C158()
{
  return objectdestroy_174Tm((void (*)(void))&_swift_release, (void (*)(void))&_swift_release);
}

uint64_t outlined retain of Action<Actions.RemoveDownload.Context, ActionType, ()>(uint64_t a1)
{
  return a1;
}

uint64_t sub_10006C2B0()
{
  return objectdestroy_184Tm((void (*)(void))&_swift_release, (void (*)(void))&_swift_release);
}

uint64_t sub_10006C3A4()
{
  return objectdestroy_129Tm((void (*)(void))&_swift_release, (void (*)(void))&_swift_release);
}

uint64_t sub_10006C738()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?)
                 - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v4 = (((v3 + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v5 = (v4 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = v6 + 23;
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 56);
  uint64_t v8 = v0 + v2;
  uint64_t v9 = type metadata accessor for Actions.MetricsReportingContext();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9))
  {
    unint64_t v19 = v6 + 23;
    if (*(void *)(v8 + 8) >= 0xBuLL) {
      swift_bridgeObjectRelease();
    }
    uint64_t v10 = v8 + *(int *)(v9 + 20);
    uint64_t v11 = type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v10, 1, v11))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v18 = v10 + *(int *)(v11 + 24);
      uint64_t v12 = type metadata accessor for URL();
      uint64_t v16 = *(void *)(v12 - 8);
      uint64_t v17 = v12;
      if (!(*(unsigned int (**)(uint64_t, uint64_t))(v16 + 48))(v18, 1)) {
        (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v18, v17);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v7 = v19;
  }
  unint64_t v13 = v7 & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)(v0 + v3 + 24)) {
    __swift_destroy_boxed_opaque_existential_0Tm(v0 + v3);
  }
  swift_release();

  __swift_destroy_boxed_opaque_existential_0Tm(v0 + v5);
  swift_bridgeObjectRelease();
  unint64_t v14 = *(void *)(v0 + v13 + 8);
  if (v14 >> 60 != 15) {
    outlined consume of Data._Representation(*(void *)(v0 + v13), v14);
  }

  return swift_deallocObject();
}

uint64_t partial apply for closure #3 in closure #1 in static MusicActions.actionMenu(item:playbackIntent:playbackController:library:playlistContext:alertPresenter:noticePresenter:presentationSource:shareSheetPresenter:navigationPusher:playlistPickerPresenter:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?)
                 - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v4 = (v3 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v5 = (v4 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 47) & 0xFFFFFFFFFFFFFFF8;
  return closure #3 in closure #1 in static MusicActions.actionMenu(item:playbackIntent:playbackController:library:playlistContext:alertPresenter:noticePresenter:presentationSource:shareSheetPresenter:navigationPusher:playlistPickerPresenter:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)(v0 + 16, v0 + 56, v0 + v2, (void *)(v0 + v3), *(void *)(v0 + v4), *(void *)(v0 + v5), v0 + v6, *(void *)(v0 + v7), *(void *)(v0 + v7 + 8), *(void *)(v0 + ((v7 + 23) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v0 + ((v7 + 23) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t outlined init with take of PlaylistContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PlaylistContext();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t outlined init with copy of PlaylistContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PlaylistContext();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10006CBB8()
{
  uint64_t v1 = (int *)(type metadata accessor for PlaylistContext() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  unint64_t v3 = (*(void *)(*(void *)v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?)
                 - 8);
  unint64_t v5 = (v3 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v0 + v2;
  uint64_t v7 = type metadata accessor for Playlist.Entry();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  uint64_t v8 = v6 + v1[7];
  uint64_t v9 = type metadata accessor for Playlist();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  swift_release();
  uint64_t v10 = v0 + v5;
  uint64_t v11 = type metadata accessor for Actions.MetricsReportingContext();
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v0 + v5, 1, v11))
  {
    if (*(void *)(v10 + 8) >= 0xBuLL) {
      swift_bridgeObjectRelease();
    }
    uint64_t v12 = v10 + *(int *)(v11 + 20);
    uint64_t v13 = type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v12, 1, v13))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v14 = v12 + *(int *)(v13 + 24);
      uint64_t v15 = type metadata accessor for URL();
      uint64_t v17 = *(void *)(v15 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v14, 1, v15)) {
        (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v14, v15);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return swift_deallocObject();
}

void *partial apply for closure #2 in closure #1 in static MusicActions.actionMenu(item:playbackIntent:playbackController:library:playlistContext:alertPresenter:noticePresenter:presentationSource:shareSheetPresenter:navigationPusher:playlistPickerPresenter:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)()
{
  uint64_t v1 = *(void *)(type metadata accessor for PlaylistContext() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?)
                 - 8);
  uint64_t v5 = *(void *)(v0 + v3);
  uint64_t v6 = v0 + ((v3 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return closure #2 in closure #1 in static MusicActions.actionMenu(item:playbackIntent:playbackController:library:playlistContext:alertPresenter:noticePresenter:presentationSource:shareSheetPresenter:navigationPusher:playlistPickerPresenter:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)(v0 + v2, v5, v6);
}

uint64_t outlined destroy of PlaylistContext(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PlaylistContext();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10006D028()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?)
                 - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 56);
  uint64_t v3 = v0 + v2;
  uint64_t v4 = type metadata accessor for Actions.MetricsReportingContext();
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(v0 + v2, 1, v4))
  {
    if (*(void *)(v3 + 8) >= 0xBuLL) {
      swift_bridgeObjectRelease();
    }
    uint64_t v5 = v3 + *(int *)(v4 + 20);
    uint64_t v6 = type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v7 = v5 + *(int *)(v6 + 24);
      uint64_t v8 = type metadata accessor for URL();
      uint64_t v10 = *(void *)(v8 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v7, 1, v8)) {
        (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v7, v8);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return swift_deallocObject();
}

void *partial apply for closure #1 in closure #1 in static MusicActions.actionMenu(item:playbackIntent:playbackController:library:playlistContext:alertPresenter:noticePresenter:presentationSource:shareSheetPresenter:navigationPusher:playlistPickerPresenter:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?)
                 - 8);
  uint64_t v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return closure #1 in closure #1 in static MusicActions.actionMenu(item:playbackIntent:playbackController:library:playlistContext:alertPresenter:noticePresenter:presentationSource:shareSheetPresenter:navigationPusher:playlistPickerPresenter:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)((void *)(v0 + 16), (void *)(v0 + 56), v2);
}

uint64_t sub_10006D490()
{
  uint64_t v1 = type metadata accessor for Playlist();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);

  return swift_deallocObject();
}

uint64_t sub_10006D520()
{
  uint64_t v1 = type metadata accessor for Playlist.Entry();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v5 = type metadata accessor for Playlist();
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);

  return swift_deallocObject();
}

uint64_t _s9MusicCore7ActionsO18RemoveFromPlaylistO7ContextV5entry8playlist7library016metricsReportingG0AG0A3Kit0F0V5EntryV_AnL0A7LibraryCAC07MetricslG0VSgtcfcyyYaYbcfU0_TA_0()
{
  uint64_t v2 = *(void *)(type metadata accessor for Playlist.Entry() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v5 = *(unsigned __int8 *)(*(void *)(type metadata accessor for Playlist() - 8) + 80);
  unint64_t v6 = v3 + v4 + v5;
  uint64_t v7 = *(void *)(v0 + 16);
  uint64_t v8 = v0 + v3;
  uint64_t v9 = v0 + (v6 & ~v5);
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v10;
  void *v10 = v1;
  v10[1] = closure #3 in static Actions.ReportConcern.action(context:);
  return closure #2 in Actions.RemoveFromPlaylist.Context.init(entry:playlist:library:metricsReportingContext:)(v7, v8, v9);
}

uint64_t sub_10006D7B4()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?)
                 - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = type metadata accessor for Playlist.Entry();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = v0 + v2;
  uint64_t v8 = type metadata accessor for Actions.MetricsReportingContext();
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v0 + v2, 1, v8))
  {
    uint64_t v16 = v3;
    if (*(void *)(v7 + 8) >= 0xBuLL) {
      swift_bridgeObjectRelease();
    }
    uint64_t v9 = v7 + *(int *)(v8 + 20);
    uint64_t v10 = type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v9, 1, v10))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v15 = v9 + *(int *)(v10 + 24);
      uint64_t v11 = type metadata accessor for URL();
      uint64_t v13 = *(void *)(v11 - 8);
      uint64_t v14 = v11;
      if (!(*(unsigned int (**)(uint64_t, uint64_t))(v13 + 48))(v15, 1)) {
        (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v15, v14);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v3 = v16;
  }
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + ((v2 + v3 + v6) & ~v6), v4);

  return swift_deallocObject();
}

uint64_t sub_10006DC2C()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?)
                 - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 104) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);

  swift_bridgeObjectRelease();
  unint64_t v4 = *(void *)(v0 + 96);
  if (v4 >> 60 != 15) {
    outlined consume of Data._Representation(*(void *)(v0 + 88), v4);
  }
  uint64_t v5 = v0 + v2;
  uint64_t v6 = type metadata accessor for Actions.MetricsReportingContext();
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v0 + v2, 1, v6))
  {
    if (*(void *)(v5 + 8) >= 0xBuLL) {
      swift_bridgeObjectRelease();
    }
    uint64_t v7 = v5 + *(int *)(v6 + 20);
    uint64_t v8 = type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v9 = v7 + *(int *)(v8 + 24);
      uint64_t v10 = type metadata accessor for URL();
      uint64_t v12 = *(void *)(v10 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v9, 1, v10)) {
        (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v9, v10);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + ((v3 + v2 + 7) & 0xFFFFFFFFFFFFFFF8));

  return swift_deallocObject();
}

void *partial apply for closure #1 in static MusicActions.playbackActions(item:playbackIntent:playbackController:library:alertPresenter:noticePresenter:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?)
                 - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 104) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return closure #1 in static MusicActions.playbackActions(item:playbackIntent:playbackController:library:alertPresenter:noticePresenter:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)((void *)(v0 + 16), *(void **)(v0 + 56), *(void **)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 88), *(void *)(v0 + 96), v0 + v2, v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));
}

uint64_t outlined release of Action<Actions.GoToAlbum.Context, ActionType, ()>(uint64_t a1)
{
  return a1;
}

uint64_t outlined release of Action<Actions.DeleteFromLibrary.Context, ActionType, ()>(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 56);
  swift_release();
  swift_release();
  swift_release();
  a2(v4);
  swift_release();
  swift_release();
  swift_release();
  return a1;
}

uint64_t sub_10006E22C()
{
  return objectdestroy_174Tm((void (*)(void))&_swift_release, (void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_10006E260()
{
  return objectdestroy_174Tm((void (*)(void))&_swift_release, (void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_10006E28C()
{
  return objectdestroy_174Tm((void (*)(void))&_swift_release, (void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t outlined retain of Action<Actions.Share.Context, ActionType, ()>(uint64_t a1)
{
  return a1;
}

uint64_t sub_10006E3E4()
{
  return objectdestroy_184Tm((void (*)(void))&_swift_release, (void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_10006E4D8()
{
  return objectdestroy_129Tm((void (*)(void))&_swift_release, (void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_10006E504()
{
  return objectdestroy_174Tm((void (*)(void))&_swift_bridgeObjectRelease, (void (*)(void))&_swift_release);
}

uint64_t sub_10006E538()
{
  return objectdestroy_174Tm((void (*)(void))&_swift_bridgeObjectRelease, (void (*)(void))&_swift_release);
}

uint64_t sub_10006E564()
{
  return objectdestroy_174Tm((void (*)(void))&_swift_bridgeObjectRelease, (void (*)(void))&_swift_release);
}

uint64_t objectdestroy_174Tm(void (*a1)(void), void (*a2)(void))
{
  a1(*(void *)(v2 + 24));
  swift_release();
  swift_release();
  a2(*(void *)(v2 + 72));
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t outlined retain of Action<Actions.GoToAlbum.Context, ActionType, ()>(uint64_t a1)
{
  return a1;
}

uint64_t sub_10006E73C()
{
  return objectdestroy_184Tm((void (*)(void))&_swift_bridgeObjectRelease, (void (*)(void))&_swift_release);
}

uint64_t objectdestroy_184Tm(void (*a1)(void), void (*a2)(void))
{
  swift_unknownObjectRelease();
  a1(*(void *)(v2 + 40));
  swift_release();
  swift_release();
  a2(*(void *)(v2 + 88));
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10006E8C0()
{
  return objectdestroy_129Tm((void (*)(void))&_swift_bridgeObjectRelease, (void (*)(void))&_swift_release);
}

uint64_t objectdestroy_129Tm(void (*a1)(void), void (*a2)(void))
{
  a1(*(void *)(v2 + 24));
  swift_release();
  swift_release();
  a2(*(void *)(v2 + 72));

  return swift_deallocObject();
}

uint64_t objectdestroy_28Tm()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t outlined retain of Action<Actions.UndoSuggestLess.Context, ActionType, ()>(uint64_t a1)
{
  return a1;
}

uint64_t objectdestroy_38Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t objectdestroy_44Tm()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t objectdestroy_250Tm()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?)
                 - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PlaylistContext?)
                 - 8);
  unint64_t v5 = (v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v25 = (v7 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v26 = (v25 + 79) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v27 = (v26 + 47) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)(v0 + 40)) {
    __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
  }
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 56);
  uint64_t v8 = v0 + v2;
  uint64_t v9 = type metadata accessor for Actions.MetricsReportingContext();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9))
  {
    if (*(void *)(v8 + 8) >= 0xBuLL) {
      swift_bridgeObjectRelease();
    }
    uint64_t v10 = v8 + *(int *)(v9 + 20);
    uint64_t v11 = type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v10, 1, v11))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v24 = v10 + *(int *)(v11 + 24);
      uint64_t v12 = type metadata accessor for URL();
      uint64_t v22 = *(void *)(v12 - 8);
      uint64_t v23 = v12;
      if (!(*(unsigned int (**)(uint64_t, uint64_t))(v22 + 48))(v24, 1)) {
        (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v24, v23);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v13 = type metadata accessor for PlaylistContext();
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v0 + v5, 1, v13))
  {
    uint64_t v14 = type metadata accessor for Playlist.Entry();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v0 + v5, v14);
    unint64_t v15 = v0 + v5 + *(int *)(v13 + 20);
    uint64_t v16 = type metadata accessor for Playlist();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  }
  swift_release();
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + v6);
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + v7);
  uint64_t v17 = v0 + v25;
  if (*(void *)(v0 + v25 + 56) != 1)
  {
    swift_unknownObjectWeakDestroy();
    int v18 = *(unsigned __int8 *)(v17 + 48);
    if (v18 != 255) {
      outlined consume of PresentationSource.Position(*(id *)(v17 + 8), *(void *)(v17 + 16), *(void *)(v17 + 24), *(void *)(v17 + 32), *(void *)(v17 + 40), v18);
    }
    if (*(void *)(v17 + 56)) {
      swift_release();
    }
  }
  unint64_t v19 = (((((v27 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)(v0 + v26 + 24)) {
    __swift_destroy_boxed_opaque_existential_0Tm(v0 + v26);
  }

  swift_bridgeObjectRelease();
  unint64_t v20 = *(void *)(v0 + v19 + 8);
  if (v20 >> 60 != 15) {
    outlined consume of Data._Representation(*(void *)(v0 + v19), v20);
  }
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + ((v19 + 23) & 0xFFFFFFFFFFFFFFF8));

  return swift_deallocObject();
}

uint64_t lazy protocol witness table accessor for type GenericMusicItem and conformance GenericMusicItem(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *partial apply for closure #1 in static MusicActions.actionMenu(item:playbackIntent:playbackController:library:playlistContext:alertPresenter:noticePresenter:presentationSource:shareSheetPresenter:navigationPusher:playlistPickerPresenter:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?)
                 - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PlaylistContext?)
                 - 8);
  unint64_t v5 = (v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v7 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v9 = (v8 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = (v9 + 79) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v11 = (v10 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v12 = (v11 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v13 = (v12 + 15) & 0xFFFFFFFFFFFFFFF8;
  return closure #1 in static MusicActions.actionMenu(item:playbackIntent:playbackController:library:playlistContext:alertPresenter:noticePresenter:presentationSource:shareSheetPresenter:navigationPusher:playlistPickerPresenter:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)(v0 + 16, v0 + 56, v0 + v2, v0 + v5, *(void *)(v0 + v6), v0 + v7, v0 + v8, v0 + v9, v0 + v10, *(void **)(v0 + v11), *(void *)(v0 + v12), *(void *)(v0 + v13), *(void *)(v0 + v13 + 8), *(void *)(v0 + ((v13 + 23) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v0 + ((v13 + 23) & 0xFFFFFFFFFFFFFFF8) + 8), (void *)(v0 + ((((v13 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t specialized Collection.first.getter@<X0>(uint64_t a1@<X8>)
{
  return specialized Collection.first.getter(&demangling cache variable for type metadata for MusicItemCollection<Album>, &lazy protocol witness table cache variable for type MusicItemCollection<Album> and conformance MusicItemCollection<A>, (uint64_t (*)(void))&type metadata accessor for Album, a1);
}

{
  return specialized Collection.first.getter(&demangling cache variable for type metadata for MusicItemCollection<Artist>, &lazy protocol witness table cache variable for type MusicItemCollection<Artist> and conformance MusicItemCollection<A>, (uint64_t (*)(void))&type metadata accessor for Artist, a1);
}

{
  return specialized Collection.first.getter(&demangling cache variable for type metadata for MusicItemCollection<MusicMovie>, &lazy protocol witness table cache variable for type MusicItemCollection<MusicMovie> and conformance MusicItemCollection<A>, (uint64_t (*)(void))&type metadata accessor for MusicMovie, a1);
}

{
  return specialized Collection.first.getter(&demangling cache variable for type metadata for MusicItemCollection<MusicVideo>, &lazy protocol witness table cache variable for type MusicItemCollection<MusicVideo> and conformance MusicItemCollection<A>, (uint64_t (*)(void))&type metadata accessor for MusicVideo, a1);
}

{
  return specialized Collection.first.getter(&demangling cache variable for type metadata for MusicItemCollection<Playlist>, &lazy protocol witness table cache variable for type MusicItemCollection<Playlist> and conformance MusicItemCollection<A>, (uint64_t (*)(void))&type metadata accessor for Playlist, a1);
}

{
  return specialized Collection.first.getter(&demangling cache variable for type metadata for MusicItemCollection<Song>, &lazy protocol witness table cache variable for type MusicItemCollection<Song> and conformance MusicItemCollection<A>, (uint64_t (*)(void))&type metadata accessor for Song, a1);
}

{
  return specialized Collection.first.getter(&demangling cache variable for type metadata for MusicItemCollection<TVEpisode>, &lazy protocol witness table cache variable for type MusicItemCollection<TVEpisode> and conformance MusicItemCollection<A>, (uint64_t (*)(void))&type metadata accessor for TVEpisode, a1);
}

{
  return specialized Collection.first.getter(&demangling cache variable for type metadata for MusicItemCollection<TVSeason>, &lazy protocol witness table cache variable for type MusicItemCollection<TVSeason> and conformance MusicItemCollection<A>, (uint64_t (*)(void))&type metadata accessor for TVSeason, a1);
}

{
  return specialized Collection.first.getter(&demangling cache variable for type metadata for MusicItemCollection<TVShow>, &lazy protocol witness table cache variable for type MusicItemCollection<TVShow> and conformance MusicItemCollection<A>, (uint64_t (*)(void))&type metadata accessor for TVShow, a1);
}

{
  return specialized Collection.first.getter(&demangling cache variable for type metadata for MusicItemCollection<UploadedAudio>, &lazy protocol witness table cache variable for type MusicItemCollection<UploadedAudio> and conformance MusicItemCollection<A>, (uint64_t (*)(void))&type metadata accessor for UploadedAudio, a1);
}

{
  return specialized Collection.first.getter(&demangling cache variable for type metadata for MusicItemCollection<UploadedVideo>, &lazy protocol witness table cache variable for type MusicItemCollection<UploadedVideo> and conformance MusicItemCollection<A>, (uint64_t (*)(void))&type metadata accessor for UploadedVideo, a1);
}

{
  return specialized Collection.first.getter(&demangling cache variable for type metadata for MusicItemCollection<Station>, &lazy protocol witness table cache variable for type MusicItemCollection<Station> and conformance MusicItemCollection<A>, (uint64_t (*)(void))&type metadata accessor for Station, a1);
}

uint64_t specialized Collection.first.getter@<X0>(uint64_t *a1@<X0>, unint64_t *a2@<X1>, uint64_t (*a3)(void)@<X2>, uint64_t a4@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(a1);
  lazy protocol witness table accessor for type MusicItemCollection<UploadedVideo> and conformance MusicItemCollection<A>(a2, a1);
  dispatch thunk of Collection.startIndex.getter();
  dispatch thunk of Collection.endIndex.getter();
  if (v15[4] == v15[0])
  {
    uint64_t v8 = a3(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(a4, 1, 1, v8);
  }
  else
  {
    unint64_t v10 = (void (*)(void *, void))dispatch thunk of Collection.subscript.read();
    uint64_t v12 = v11;
    uint64_t v13 = a3(0);
    uint64_t v14 = *(void *)(v13 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(a4, v12, v13);
    v10(v15, 0);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v14 + 56))(a4, 0, 1, v13);
  }
}

double Actions.ShowSongCredits.Context.init<A, B>(item:applicationCapabilities:navigationPusher:metricsReportingContext:)@<D0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _OWORD *a9@<X8>)
{
  uint64_t v39 = a7;
  uint64_t v40 = a8;
  uint64_t v35 = a3;
  uint64_t v36 = a4;
  uint64_t v33 = a2;
  uint64_t v37 = a9;
  uint64_t v12 = *(void *)(a5 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  uint64_t v14 = __chkstk_darwin(a1);
  uint64_t v38 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v33 - v16;
  __chkstk_darwin(v15);
  uint64_t v34 = (uint64_t)&v33 - v18;
  unint64_t v19 = *(void (**)(void))(v12 + 16);
  v19();
  ((void (*)(char *, char *, uint64_t))v19)(v17, a1, a5);
  uint64_t v20 = *(unsigned __int8 *)(v12 + 80);
  unint64_t v21 = (char *)swift_allocObject();
  *((void *)v21 + 2) = a5;
  *((void *)v21 + 3) = a6;
  uint64_t v22 = v40;
  *((void *)v21 + 4) = v39;
  *((void *)v21 + 5) = v22;
  *((void *)v21 + 6) = v33;
  uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  v23(&v21[(v20 + 56) & ~v20], v17, a5);
  v23(v38, a1, a5);
  uint64_t v24 = (v20 + 48) & ~v20;
  uint64_t v25 = *(void *)(a6 - 8);
  unint64_t v26 = (v24 + v13 + *(unsigned __int8 *)(v25 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
  unint64_t v27 = (char *)swift_allocObject();
  *((void *)v27 + 2) = a5;
  *((void *)v27 + 3) = a6;
  uint64_t v29 = v39;
  uint64_t v28 = v40;
  *((void *)v27 + 4) = v39;
  *((void *)v27 + 5) = v28;
  v23(&v27[v24], v38, a5);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 32))(&v27[v26], v35, a6);
  Actions.ShowSongCredits.Context.init<A>(item:canShowSongCredits:showSongCredits:metricsReportingContext:)(v34, (uint64_t)partial apply for closure #1 in Actions.ShowSongCredits.Context.init<A, B>(item:applicationCapabilities:navigationPusher:metricsReportingContext:), (uint64_t)v21, (uint64_t)&async function pointer to partial apply for closure #2 in Actions.ShowSongCredits.Context.init<A, B>(item:applicationCapabilities:navigationPusher:metricsReportingContext:), (uint64_t)v27, v36, a5, v29, v41);
  long long v30 = v41[1];
  id v31 = v37;
  _OWORD *v37 = v41[0];
  v31[1] = v30;
  double result = *(double *)&v42;
  v31[2] = v42;
  return result;
}

uint64_t static Actions.ShowSongCredits.action(context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return static Actions.ShowSongCredits.action(context:)(a1, 4, (uint64_t)closure #1 in static Actions.ShowSongCredits.action(context:), (uint64_t)&async function pointer to closure #2 in static Actions.ShowSongCredits.action(context:), (uint64_t)&async function pointer to closure #3 in static Actions.ShowSongCredits.action(context:), a2);
}

double Actions.GoToAlbum.Context.init<A, B>(item:navigationPusher:metricsReportingContext:)@<D0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, _OWORD *a8@<X8>)
{
  uint64_t v35 = a7;
  uint64_t v41 = a6;
  uint64_t v37 = a2;
  uint64_t v38 = a3;
  uint64_t v39 = a8;
  uint64_t v12 = *(void *)(a4 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  uint64_t v14 = __chkstk_darwin(a1);
  uint64_t v40 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v34 - v16;
  __chkstk_darwin(v15);
  uint64_t v36 = (uint64_t)&v34 - v18;
  unint64_t v19 = *(void (**)(void))(v12 + 16);
  v19();
  ((void (*)(char *, char *, uint64_t))v19)(v17, a1, a4);
  unint64_t v20 = (*(unsigned __int8 *)(v12 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v21 = v20 + v13;
  uint64_t v22 = (char *)swift_allocObject();
  *((void *)v22 + 2) = a4;
  *((void *)v22 + 3) = a5;
  *((void *)v22 + 4) = v41;
  *((void *)v22 + 5) = a7;
  uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  v23(&v22[v20], v17, a4);
  v23(v40, a1, a4);
  uint64_t v24 = *(void *)(a5 - 8);
  unint64_t v25 = (v21 + *(unsigned __int8 *)(v24 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  unint64_t v26 = (char *)swift_allocObject();
  *((void *)v26 + 2) = a4;
  *((void *)v26 + 3) = a5;
  unint64_t v27 = v40;
  uint64_t v28 = v41;
  uint64_t v29 = v35;
  *((void *)v26 + 4) = v41;
  *((void *)v26 + 5) = v29;
  v23(&v26[v20], v27, a4);
  (*(void (**)(char *, uint64_t, uint64_t))(v24 + 32))(&v26[v25], v37, a5);
  Actions.GoToAlbum.Context.init<A>(item:subtitle:canGoToAlbum:goToAlbum:metricsReportingContext:)(v36, 0, 0, (uint64_t)partial apply for closure #1 in Actions.GoToAlbum.Context.init<A, B>(item:navigationPusher:metricsReportingContext:), (uint64_t)v22, (uint64_t)&async function pointer to partial apply for closure #2 in Actions.GoToAlbum.Context.init<A, B>(item:navigationPusher:metricsReportingContext:), (uint64_t)v26, v38, v42, a4, v28);
  long long v30 = v42[1];
  id v31 = v39;
  _OWORD *v39 = v42[0];
  v31[1] = v30;
  double result = *(double *)&v43;
  long long v33 = v44;
  v31[2] = v43;
  v31[3] = v33;
  return result;
}

double static Actions.GoToAlbum.action(context:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)&double result = static Actions.GoToAlbum.action(context:)(a1, 14, (uint64_t)closure #1 in static Actions.GoToAlbum.action(context:), (uint64_t)&async function pointer to closure #2 in static Actions.GoToAlbum.action(context:), (uint64_t)&async function pointer to closure #3 in static Actions.GoToAlbum.action(context:), a2).n128_u64[0];
  return result;
}

uint64_t protocol witness for static ActionDefinition.action(context:) in conformance Actions.GoToAlbum@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return protocol witness for static ActionDefinition.action(context:) in conformance Actions.GoToAlbum(a1, 14, (uint64_t)closure #1 in static Actions.GoToAlbum.action(context:), (uint64_t)&async function pointer to closure #2 in static Actions.GoToAlbum.action(context:), (uint64_t)&async function pointer to closure #3 in static Actions.GoToAlbum.action(context:), a2);
}

uint64_t Actions.GoToAlbum.Context.init<A>(item:subtitle:canGoToAlbum:goToAlbum:metricsReportingContext:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v15 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?)
                  - 8);
  unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v17 = *(void *)(a10 - 8);
  unint64_t v18 = (v16 + *(void *)(v15 + 64) + *(unsigned __int8 *)(v17 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = a10;
  *(void *)(v19 + 24) = a11;
  outlined init with take of PresentationSource?(a8, v19 + v16, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v17 + 32))(v19 + v18, a1, a10);
  *a9 = a2;
  a9[1] = a3;
  a9[2] = a4;
  a9[3] = a5;
  a9[4] = a6;
  a9[5] = a7;
  a9[6] = &async function pointer to partial apply for closure #1 in Actions.GoToAlbum.Context.init<A>(item:subtitle:canGoToAlbum:goToAlbum:metricsReportingContext:);
  a9[7] = v19;
  return result;
}

uint64_t closure #1 in Actions.GoToAlbum.Context.init<A>(item:subtitle:canGoToAlbum:goToAlbum:metricsReportingContext:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[14] = a3;
  v4[15] = a4;
  v4[12] = a1;
  v4[13] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  v4[16] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  v4[17] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for Actions.MetricsReportingContext();
  v4[18] = v5;
  v4[19] = *(void *)(v5 - 8);
  v4[20] = swift_task_alloc();
  return _swift_task_switch(closure #1 in Actions.GoToAlbum.Context.init<A>(item:subtitle:canGoToAlbum:goToAlbum:metricsReportingContext:), 0, 0);
}

uint64_t closure #1 in Actions.GoToAlbum.Context.init<A>(item:subtitle:canGoToAlbum:goToAlbum:metricsReportingContext:)()
{
  uint64_t v1 = *(void *)(v0 + 144);
  uint64_t v2 = *(void *)(v0 + 152);
  uint64_t v3 = *(void *)(v0 + 136);
  outlined init with copy of (String, Any)(*(void *)(v0 + 96), v3, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    outlined destroy of TaskPriority?(*(void *)(v0 + 136), &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
  else
  {
    uint64_t v6 = *(void *)(v0 + 128);
    uint64_t v7 = *(void *)(v0 + 112);
    outlined init with take of Actions.MetricsReportingContext(*(void *)(v0 + 136), *(void *)(v0 + 160));
    *(void *)(v0 + 168) = MusicItem.metricsTargetIdentifier.getter(v7);
    *(void *)(v0 + 176) = v8;
    uint64_t v9 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v6, 1, 1, v9);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<MetricsEvent.Click.ActionDetails.Key>);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100493D00;
    *(void *)(inited + 32) = MusicItem.metricsContentType.getter();
    *(void *)(inited + 40) = v11;
    *(unsigned char *)(inited + 48) = 0;
    *(void *)(inited + 56) = 0;
    *(void *)(inited + 64) = 0;
    *(unsigned char *)(inited + 72) = 3;
    *(void *)(v0 + 184) = specialized MetricsEvent.Click.ActionDetails.init(_:)(inited);
    *(void *)(v0 + 192) = v12;
    *(void *)(v0 + 200) = v13;
    *(_WORD *)(v0 + 216) = v14;
    swift_setDeallocating();
    swift_arrayDestroy();
    type metadata accessor for MainActor();
    *(void *)(v0 + 208) = static MainActor.shared.getter();
    uint64_t v16 = dispatch thunk of Actor.unownedExecutor.getter();
    return _swift_task_switch(closure #1 in Actions.GoToAlbum.Context.init<A>(item:subtitle:canGoToAlbum:goToAlbum:metricsReportingContext:), v16, v15);
  }
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  uint64_t v1 = *(void *)(v0 + 200);
  uint64_t v3 = *(void **)(v0 + 184);
  uint64_t v2 = *(void *)(v0 + 192);
  uint64_t v5 = *(void *)(v0 + 168);
  uint64_t v4 = *(void *)(v0 + 176);
  uint64_t v6 = *(uint64_t **)(v0 + 160);
  uint64_t v7 = *(void *)(v0 + 128);
  uint64_t v8 = *(unsigned __int16 *)(v0 + 216);
  swift_release();
  specialized static Actions.reportClickEvent(targetIdentifier:targetType:actionType:actionURL:actionDetails:reportingContext:)(v5, v4, 5, 42, v7, v3, v2, v1, v8, v6);
  outlined consume of MetricsEvent.Click.ActionDetails(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease();
  outlined destroy of TaskPriority?(v7, &demangling cache variable for type metadata for URL?);
  return _swift_task_switch(closure #1 in Actions.GoToAlbum.Context.init<A>(item:subtitle:canGoToAlbum:goToAlbum:metricsReportingContext:), 0, 0);
}

unint64_t closure #1 in Actions.GoToAlbum.Context.init<A, B>(item:navigationPusher:metricsReportingContext:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicVideo?);
  __chkstk_darwin(v4 - 8);
  long long v55 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for MusicVideo();
  uint64_t v53 = *(void *)(v6 - 8);
  uint64_t v54 = v6;
  __chkstk_darwin(v6);
  uint64_t v50 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Song?);
  __chkstk_darwin(v8 - 8);
  uint64_t v57 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = type metadata accessor for Song();
  uint64_t v56 = *(void *)(v58 - 8);
  __chkstk_darwin(v58);
  uint64_t v51 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Track?);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  __int16 v14 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void *)(a2 - 8);
  uint64_t v16 = __chkstk_darwin(v12);
  uint64_t v52 = (char *)&v50 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  unint64_t v20 = (char *)&v50 - v19;
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v50 - v21;
  uint64_t v23 = type metadata accessor for Track();
  uint64_t v24 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  unint64_t v26 = (char *)&v50 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  uint64_t v59 = a1;
  v27(v22, a1, a2);
  char v28 = swift_dynamicCast();
  uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 56);
  if (v28)
  {
    v29(v14, 0, 1, v23);
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v26, v14, v23);
    Track.albumTitle.getter();
    uint64_t v31 = v30;
    (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v23);
    swift_bridgeObjectRelease();
    if (v31) {
      return 0;
    }
  }
  else
  {
    v29(v14, 1, 1, v23);
    outlined destroy of TaskPriority?((uint64_t)v14, &demangling cache variable for type metadata for Track?);
  }
  uint64_t v32 = v59;
  v27(v20, v59, a2);
  uint64_t v33 = (uint64_t)v57;
  uint64_t v34 = v58;
  char v35 = swift_dynamicCast();
  uint64_t v36 = v56;
  uint64_t v37 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v56 + 56);
  if ((v35 & 1) == 0)
  {
    v37(v33, 1, 1, v34);
    outlined destroy of TaskPriority?(v33, &demangling cache variable for type metadata for Song?);
    goto LABEL_9;
  }
  v37(v33, 0, 1, v34);
  uint64_t v38 = v51;
  (*(void (**)(char *, uint64_t, uint64_t))(v36 + 32))(v51, v33, v34);
  Song.albumTitle.getter();
  uint64_t v40 = v39;
  (*(void (**)(char *, uint64_t))(v36 + 8))(v38, v34);
  swift_bridgeObjectRelease();
  if (v40) {
    return 0;
  }
LABEL_9:
  v27(v52, v32, a2);
  uint64_t v42 = v54;
  uint64_t v41 = (uint64_t)v55;
  char v43 = swift_dynamicCast();
  uint64_t v44 = v53;
  uint64_t v45 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v53 + 56);
  if (v43)
  {
    v45(v41, 0, 1, v42);
    uint64_t v46 = v50;
    (*(void (**)(char *, uint64_t, uint64_t))(v44 + 32))(v50, v41, v42);
    MusicVideo.albumTitle.getter();
    uint64_t v48 = v47;
    (*(void (**)(char *, uint64_t))(v44 + 8))(v46, v42);
    swift_bridgeObjectRelease();
    if (v48) {
      return 0;
    }
  }
  else
  {
    v45(v41, 1, 1, v42);
    outlined destroy of TaskPriority?(v41, &demangling cache variable for type metadata for MusicVideo?);
  }
  return 0xD000000000000010;
}

uint64_t closure #2 in Actions.GoToAlbum.Context.init<A, B>(item:navigationPusher:metricsReportingContext:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[5] = a4;
  v6[6] = a6;
  v6[3] = a2;
  v6[4] = a3;
  v6[2] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicVideo?);
  v6[7] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for MusicVideo();
  v6[8] = v8;
  v6[9] = *(void *)(v8 - 8);
  v6[10] = swift_task_alloc();
  v6[11] = type metadata accessor for NavigationItem();
  v6[12] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Song?);
  v6[13] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for Song();
  v6[14] = v9;
  v6[15] = *(void *)(v9 - 8);
  v6[16] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Track?);
  v6[17] = swift_task_alloc();
  v6[18] = *(void *)(a3 - 8);
  v6[19] = swift_task_alloc();
  v6[20] = swift_task_alloc();
  v6[21] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for Track();
  v6[22] = v10;
  v6[23] = *(void *)(v10 - 8);
  v6[24] = swift_task_alloc();
  return _swift_task_switch(closure #2 in Actions.GoToAlbum.Context.init<A, B>(item:navigationPusher:metricsReportingContext:), 0, 0);
}

uint64_t closure #2 in Actions.GoToAlbum.Context.init<A, B>(item:navigationPusher:metricsReportingContext:)()
{
  uint64_t v1 = v0[23];
  uint64_t v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0[18] + 16);
  v2(v0[21], v0[2], v0[4]);
  char v3 = swift_dynamicCast();
  uint64_t v4 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v1 + 56);
  if (v3)
  {
    uint64_t v6 = v0[23];
    uint64_t v5 = v0[24];
    uint64_t v7 = v0[22];
    uint64_t v8 = v0[17];
    uint64_t v9 = v0[12];
    uint64_t v47 = v0[6];
    v4(v8, 0, 1, v7);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v5, v8, v7);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v9, v5, v7);
    swift_storeEnumTagMultiPayload();
    uint64_t v46 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v47 + 8) + **(int **)(v47 + 8));
    uint64_t v10 = (void *)swift_task_alloc();
    v0[25] = v10;
    void *v10 = v0;
    uint64_t v11 = closure #2 in Actions.GoToAlbum.Context.init<A, B>(item:navigationPusher:metricsReportingContext:);
LABEL_7:
    v10[1] = v11;
    uint64_t v40 = v0[12];
    uint64_t v41 = v0[5];
    uint64_t v42 = v0[6];
    return v46(v40, v41, v42);
  }
  uint64_t v12 = v0[20];
  uint64_t v13 = v0[17];
  uint64_t v14 = v0[15];
  uint64_t v15 = v0[4];
  uint64_t v16 = v0[2];
  v4(v13, 1, 1, v0[22]);
  outlined destroy of TaskPriority?(v13, &demangling cache variable for type metadata for Track?);
  v2(v12, v16, v15);
  char v17 = swift_dynamicCast();
  uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  if (v17)
  {
    uint64_t v19 = v0[22];
    uint64_t v20 = v0[23];
    uint64_t v22 = v0[15];
    uint64_t v21 = v0[16];
    uint64_t v23 = v0[13];
    uint64_t v24 = v0[14];
    uint64_t v25 = v0[12];
    uint64_t v48 = v0[6];
    v18(v23, 0, 1, v24);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 32))(v21, v23, v24);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16))(v25, v21, v24);
    (*(void (**)(uint64_t, void, uint64_t))(v20 + 104))(v25, enum case for Track.song(_:), v19);
    swift_storeEnumTagMultiPayload();
    uint64_t v46 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v48 + 8) + **(int **)(v48 + 8));
    uint64_t v10 = (void *)swift_task_alloc();
    v0[26] = v10;
    void *v10 = v0;
    uint64_t v11 = closure #2 in Actions.GoToAlbum.Context.init<A, B>(item:navigationPusher:metricsReportingContext:);
    goto LABEL_7;
  }
  uint64_t v26 = v0[19];
  uint64_t v27 = v0[13];
  uint64_t v28 = v0[9];
  uint64_t v29 = v0[4];
  uint64_t v30 = v0[2];
  v18(v27, 1, 1, v0[14]);
  outlined destroy of TaskPriority?(v27, &demangling cache variable for type metadata for Song?);
  v2(v26, v30, v29);
  char v31 = swift_dynamicCast();
  uint64_t v32 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 56);
  if (v31)
  {
    uint64_t v33 = v0[22];
    uint64_t v34 = v0[23];
    uint64_t v35 = v0[12];
    uint64_t v37 = v0[9];
    uint64_t v36 = v0[10];
    uint64_t v39 = v0[7];
    uint64_t v38 = v0[8];
    uint64_t v49 = v0[6];
    v32(v39, 0, 1, v38);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 32))(v36, v39, v38);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 16))(v35, v36, v38);
    (*(void (**)(uint64_t, void, uint64_t))(v34 + 104))(v35, enum case for Track.musicVideo(_:), v33);
    swift_storeEnumTagMultiPayload();
    uint64_t v46 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v49 + 8) + **(int **)(v49 + 8));
    uint64_t v10 = (void *)swift_task_alloc();
    v0[27] = v10;
    void *v10 = v0;
    uint64_t v11 = closure #2 in Actions.GoToAlbum.Context.init<A, B>(item:navigationPusher:metricsReportingContext:);
    goto LABEL_7;
  }
  uint64_t v44 = v0[7];
  v32(v44, 1, 1, v0[8]);
  outlined destroy of TaskPriority?(v44, &demangling cache variable for type metadata for MusicVideo?);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v45 = (uint64_t (*)(void))v0[1];
  return v45();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;

  uint64_t v1 = *(void *)(*(void *)v0 + 96);
  swift_task_dealloc();
  outlined destroy of NavigationItem(v1, (uint64_t (*)(void))type metadata accessor for NavigationItem);
  return _swift_task_switch(closure #2 in Actions.GoToAlbum.Context.init<A, B>(item:navigationPusher:metricsReportingContext:), 0, 0);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;

  uint64_t v1 = *(void *)(*(void *)v0 + 96);
  swift_task_dealloc();
  outlined destroy of NavigationItem(v1, (uint64_t (*)(void))type metadata accessor for NavigationItem);
  return _swift_task_switch(closure #2 in Actions.GoToAlbum.Context.init<A, B>(item:navigationPusher:metricsReportingContext:), 0, 0);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;

  uint64_t v1 = *(void *)(*(void *)v0 + 96);
  swift_task_dealloc();
  outlined destroy of NavigationItem(v1, (uint64_t (*)(void))type metadata accessor for NavigationItem);
  return _swift_task_switch(closure #2 in Actions.GoToAlbum.Context.init<A, B>(item:navigationPusher:metricsReportingContext:), 0, 0);
}

uint64_t Actions.GoToAlbum.Context.menuItemTitle.getter()
{
  return Actions.GoToAlbum.Context.menuItemTitle.getter();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned char *v5;
  uint64_t v6;
  unsigned char *v7;
  id v8;
  uint64_t v9;
  unsigned char v11[16];

  uint64_t v0 = type metadata accessor for Locale();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = type metadata accessor for String.LocalizationValue();
  uint64_t v2 = *(void *)(v1 - 8);
  char v3 = __chkstk_darwin(v1);
  uint64_t v5 = &v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v3);
  uint64_t v7 = &v11[-v6];
  String.LocalizationValue.init(stringLiteral:)();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v2 + 16))(v5, v7, v1);
  if (one-time initialization token for module != -1) {
    swift_once();
  }
  uint64_t v8 = (id)static NSBundle.module;
  static Locale.current.getter();
  uint64_t v9 = String.init(localized:table:bundle:locale:comment:)();
  (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v7, v1);
  return v9;
}

uint64_t (*Actions.GoToAlbum.Context.menuItemImage.getter())()
{
  return specialized closure #1 in ActionMenuItemImage.init(uiImage:);
}

id implicit closure #1 in Actions.GoToAlbum.Context.menuItemImage.getter()
{
  return implicit closure #1 in Actions.GoToAlbum.Context.menuItemImage.getter();
}

{
  NSString v0;
  id v1;

  uint64_t v0 = String._bridgeToObjectiveC()();
  uint64_t v1 = [self _systemImageNamed:v0];

  return v1;
}

uint64_t protocol witness for ActionMenuItemConfiguring.menuItemTitle.getter in conformance Actions.GoToAlbum.Context()
{
  return protocol witness for ActionMenuItemConfiguring.menuItemTitle.getter in conformance Actions.GoToAlbum.Context();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned char *v5;
  uint64_t v6;
  unsigned char *v7;
  id v8;
  uint64_t v9;
  unsigned char v11[16];

  uint64_t v0 = type metadata accessor for Locale();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = type metadata accessor for String.LocalizationValue();
  uint64_t v2 = *(void *)(v1 - 8);
  char v3 = __chkstk_darwin(v1);
  uint64_t v5 = &v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v3);
  uint64_t v7 = &v11[-v6];
  String.LocalizationValue.init(stringLiteral:)();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v2 + 16))(v5, v7, v1);
  if (one-time initialization token for module != -1) {
    swift_once();
  }
  uint64_t v8 = (id)static NSBundle.module;
  static Locale.current.getter();
  uint64_t v9 = String.init(localized:table:bundle:locale:comment:)();
  (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v7, v1);
  return v9;
}

uint64_t Song.supportsContainerNavigation(itemState:)(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicPropertySource?);
  __chkstk_darwin(v2 - 8);
  unint64_t v4 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v5 = (char *)&v10 - v4;
  if (a1)
  {
    specialized MusicLibrary.ItemState.containerLoadingSource.getter((uint64_t (*)(void))&type metadata accessor for Song, (uint64_t)&protocol witness table for Song, (void (*)(void))&Song.catalogID.getter, (uint64_t)&v10 - v4);
    uint64_t v6 = type metadata accessor for MusicPropertySource();
    uint64_t v7 = 1;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6) != 1) {
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v8 = type metadata accessor for MusicPropertySource();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v5, 1, 1, v8);
  }
  uint64_t v7 = 0;
LABEL_6:
  outlined destroy of TaskPriority?((uint64_t)v5, &demangling cache variable for type metadata for MusicPropertySource?);
  return v7;
}

uint64_t specialized MusicLibrary.ItemState.containerLoadingSource.getter@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X1>, void (*a3)(void)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a1(0);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v24 - v9;
  if (dispatch thunk of MusicLibrary.ItemState.isAdded.getter())
  {
    uint64_t v11 = enum case for MusicPropertySource.library(_:);
    uint64_t v12 = type metadata accessor for MusicPropertySource();
    uint64_t v25 = *(void *)(v12 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 104))(a4, v11, v12);
    uint64_t v13 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v25 + 56);
    return v13(a4, 0, 1, v12);
  }
  else
  {
    dispatch thunk of MusicLibrary.ItemState.item.getter();
    uint64_t v29 = v7;
    uint64_t v30 = a2;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v28);
    (*(void (**)(uint64_t *, char *, uint64_t))(v8 + 32))(boxed_opaque_existential_1, v10, v7);
    __swift_project_boxed_opaque_existential_0Tm(v28, v29);
    a3();
    uint64_t v17 = v16;
    swift_bridgeObjectRelease();
    if (!v17) {
      goto LABEL_10;
    }
    if (one-time initialization token for shared != -1) {
      swift_once();
    }
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    int v18 = v26;
    uint64_t v19 = v27;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    if (v18 == 1)
    {
      uint64_t v20 = enum case for MusicPropertySource.catalog(_:);
      uint64_t v21 = type metadata accessor for MusicPropertySource();
      uint64_t v22 = *(void *)(v21 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 104))(a4, v20, v21);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v22 + 56))(a4, 0, 1, v21);
      return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v28);
    }
    else
    {
LABEL_10:
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v28);
      uint64_t v23 = type metadata accessor for MusicPropertySource();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(a4, 1, 1, v23);
    }
  }
}

uint64_t MusicLibrary.ItemState.containerLoadingSource.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __chkstk_darwin(a1);
  if (dispatch thunk of MusicLibrary.ItemState.isAdded.getter())
  {
    uint64_t v3 = enum case for MusicPropertySource.library(_:);
    uint64_t v4 = type metadata accessor for MusicPropertySource();
    uint64_t v17 = *(void *)(v4 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 104))(a2, v3, v4);
    uint64_t v5 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v17 + 56);
    return v5(a2, 0, 1, v4);
  }
  else
  {
    dispatch thunk of MusicLibrary.ItemState.item.getter();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CatalogIDProviding);
    if (swift_dynamicCast())
    {
      outlined init with take of AlertPresenting(v18, (uint64_t)v21);
      uint64_t v7 = v22;
      uint64_t v8 = v23;
      __swift_project_boxed_opaque_existential_0Tm(v21, v22);
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v8);
      uint64_t v10 = v9;
      swift_bridgeObjectRelease();
      if (v10)
      {
        if (one-time initialization token for shared != -1) {
          swift_once();
        }
        swift_getKeyPath();
        swift_getKeyPath();
        static Published.subscript.getter();
        swift_release();
        swift_release();
        int v11 = BYTE1(v18[0]);
        uint64_t v12 = v20;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        if (v11 == 1)
        {
          uint64_t v13 = enum case for MusicPropertySource.catalog(_:);
          uint64_t v14 = type metadata accessor for MusicPropertySource();
          uint64_t v15 = *(void *)(v14 - 8);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 104))(a2, v13, v14);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v15 + 56))(a2, 0, 1, v14);
          return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v21);
        }
      }
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v21);
    }
    else
    {
      uint64_t v19 = 0;
      memset(v18, 0, sizeof(v18));
      outlined destroy of TaskPriority?((uint64_t)v18, (uint64_t *)&demangling cache variable for type metadata for CatalogIDProviding?);
    }
    uint64_t v16 = type metadata accessor for MusicPropertySource();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(a2, 1, 1, v16);
  }
}

BOOL MusicVideo.supportsContainerNavigation(itemState:)(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicItemCollection<Album>?);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Album?);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Album();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  int v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicPropertySource?);
  __chkstk_darwin(v12 - 8);
  unint64_t v14 = (v13 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v15 = (char *)&v24 - v14;
  if (!a1)
  {
    uint64_t v19 = type metadata accessor for MusicPropertySource();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v15, 1, 1, v19);
    goto LABEL_6;
  }
  specialized MusicLibrary.ItemState.containerLoadingSource.getter((uint64_t (*)(void))&type metadata accessor for MusicVideo, (uint64_t)&protocol witness table for MusicVideo, (void (*)(void))&MusicVideo.catalogID.getter, (uint64_t)&v24 - v14);
  uint64_t v16 = type metadata accessor for MusicPropertySource();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48))(v15, 1, v16) == 1)
  {
LABEL_6:
    uint64_t v20 = &demangling cache variable for type metadata for MusicPropertySource?;
    uint64_t v21 = (uint64_t)v15;
LABEL_9:
    outlined destroy of TaskPriority?(v21, v20);
    return 0;
  }
  outlined destroy of TaskPriority?((uint64_t)v15, &demangling cache variable for type metadata for MusicPropertySource?);
  MusicVideo.albums.getter();
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicItemCollection<Album>);
  uint64_t v18 = *(void *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v4, 1, v17) == 1)
  {
    outlined destroy of TaskPriority?((uint64_t)v4, &demangling cache variable for type metadata for MusicItemCollection<Album>?);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
LABEL_8:
    uint64_t v20 = &demangling cache variable for type metadata for Album?;
    uint64_t v21 = (uint64_t)v7;
    goto LABEL_9;
  }
  specialized Collection.first.getter(&demangling cache variable for type metadata for MusicItemCollection<Album>, &lazy protocol witness table cache variable for type MusicItemCollection<Album> and conformance MusicItemCollection<A>, (uint64_t (*)(void))&type metadata accessor for Album, (uint64_t)v7);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v4, v17);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1) {
    goto LABEL_8;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
  char v23 = Album.isSingleMusicVideo.getter();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  if (v23 == 2) {
    return 0;
  }
  return (v23 & 1) == 0;
}

uint64_t Track.supportsContainerNavigation(itemState:)()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Track();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicPropertySource?);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  specialized MusicLibrary.ItemState.containerLoadingSource.getter((uint64_t (*)(void))&type metadata accessor for Track, (uint64_t)&protocol witness table for Track, (void (*)(void))&Track.catalogID.getter, (uint64_t)v8);
  uint64_t v9 = type metadata accessor for MusicPropertySource();
  int v10 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9);
  outlined destroy of TaskPriority?((uint64_t)v8, &demangling cache variable for type metadata for MusicPropertySource?);
  if (v10 != 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, v2);
    (*(void (**)(char *, uint64_t))(v3 + 88))(v5, v2);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return 0;
}

BOOL Playlist.supportsContainerNavigation(itemState:)()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicPropertySource?);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  specialized MusicLibrary.ItemState.containerLoadingSource.getter((uint64_t (*)(void))&type metadata accessor for Playlist, (uint64_t)&protocol witness table for Playlist, (void (*)(void))&Playlist.catalogID.getter, (uint64_t)v2);
  uint64_t v3 = type metadata accessor for MusicPropertySource();
  BOOL v4 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v3 - 8) + 48))(v2, 1, v3) != 1;
  outlined destroy of TaskPriority?((uint64_t)v2, &demangling cache variable for type metadata for MusicPropertySource?);
  return v4;
}

uint64_t Playlist.Entry.supportsContainerNavigation(itemState:)()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Playlist.Entry.Item?);
  uint64_t v1 = __chkstk_darwin(v0 - 8);
  uint64_t v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v1);
  uint64_t v5 = (char *)&v14 - v4;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicPropertySource?);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  specialized MusicLibrary.ItemState.containerLoadingSource.getter((uint64_t (*)(void))&type metadata accessor for Playlist.Entry, (uint64_t)&protocol witness table for Playlist.Entry, (void (*)(void))&Playlist.Entry.catalogID.getter, (uint64_t)v8);
  uint64_t v9 = type metadata accessor for MusicPropertySource();
  int v10 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9);
  outlined destroy of TaskPriority?((uint64_t)v8, &demangling cache variable for type metadata for MusicPropertySource?);
  if (v10 != 1)
  {
    Playlist.Entry.item.getter();
    uint64_t v11 = type metadata accessor for Playlist.Entry.Item();
    uint64_t v12 = *(void *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v5, 1, v11) != 1)
    {
      outlined init with copy of (String, Any)((uint64_t)v5, (uint64_t)v3, &demangling cache variable for type metadata for Playlist.Entry.Item?);
      (*(void (**)(char *, uint64_t))(v12 + 88))(v3, v11);
      (*(void (**)(char *, uint64_t))(v12 + 8))(v3, v11);
    }
    outlined destroy of TaskPriority?((uint64_t)v5, &demangling cache variable for type metadata for Playlist.Entry.Item?);
  }
  return 0;
}

double static Actions.GoToPlaylist.action(context:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)&double result = static Actions.GoToAlbum.action(context:)(a1, 12, (uint64_t)closure #1 in static Actions.GoToAlbum.action(context:), (uint64_t)&async function pointer to closure #2 in static Actions.GoToPlaylist.action(context:), (uint64_t)&async function pointer to closure #3 in static Actions.GoToPlaylist.action(context:), a2).n128_u64[0];
  return result;
}

__n128 static Actions.GoToAlbum.action(context:)@<Q0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v11 = *(void *)a1;
  uint64_t v12 = *(void *)(a1 + 8);
  long long v15 = *(_OWORD *)(a1 + 32);
  long long v16 = *(_OWORD *)(a1 + 16);
  __n128 v14 = *(__n128 *)(a1 + 48);
  outlined init with take of PresentationSource?(a1, (uint64_t)v17, (uint64_t *)&demangling cache variable for type metadata for String?);
  outlined retain of String?((uint64_t)v17);
  swift_retain();
  swift_retain();
  swift_retain();
  *(void *)a6 = v11;
  *(void *)(a6 + 8) = v12;
  *(_OWORD *)(a6 + 16) = v16;
  *(_OWORD *)(a6 + 32) = v15;
  __n128 result = v14;
  *(__n128 *)(a6 + 48) = v14;
  *(unsigned char *)(a6 + 64) = a2;
  *(void *)(a6 + 72) = a3;
  *(void *)(a6 + 80) = 0;
  *(void *)(a6 + 88) = 0x4014000000000000;
  *(void *)(a6 + 96) = a4;
  *(void *)(a6 + 104) = 0;
  *(void *)(a6 + 112) = a5;
  *(void *)(a6 + 120) = 0;
  return result;
}

uint64_t protocol witness for static ActionDefinition.action(context:) in conformance Actions.GoToPlaylist@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return protocol witness for static ActionDefinition.action(context:) in conformance Actions.GoToAlbum(a1, 12, (uint64_t)closure #1 in static Actions.GoToAlbum.action(context:), (uint64_t)&async function pointer to closure #2 in static Actions.GoToPlaylist.action(context:), (uint64_t)&async function pointer to closure #3 in static Actions.GoToPlaylist.action(context:), a2);
}

uint64_t Actions.GoToPlaylist.Context.init<A>(item:subtitle:canGoToPlaylist:goToPlaylist:metricsReportingContext:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v15 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?)
                  - 8);
  unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v17 = *(void *)(a10 - 8);
  unint64_t v18 = (v16 + *(void *)(v15 + 64) + *(unsigned __int8 *)(v17 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = a10;
  *(void *)(v19 + 24) = a11;
  outlined init with take of PresentationSource?(a8, v19 + v16, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v17 + 32))(v19 + v18, a1, a10);
  *a9 = a2;
  a9[1] = a3;
  a9[2] = a4;
  a9[3] = a5;
  a9[4] = a6;
  a9[5] = a7;
  a9[6] = &async function pointer to partial apply for closure #1 in Actions.GoToPlaylist.Context.init<A>(item:subtitle:canGoToPlaylist:goToPlaylist:metricsReportingContext:);
  a9[7] = v19;
  return result;
}

uint64_t closure #1 in Actions.GoToPlaylist.Context.init<A>(item:subtitle:canGoToPlaylist:goToPlaylist:metricsReportingContext:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[14] = a3;
  v4[15] = a4;
  v4[12] = a1;
  v4[13] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  v4[16] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  v4[17] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for Actions.MetricsReportingContext();
  v4[18] = v5;
  v4[19] = *(void *)(v5 - 8);
  v4[20] = swift_task_alloc();
  return _swift_task_switch(closure #1 in Actions.GoToPlaylist.Context.init<A>(item:subtitle:canGoToPlaylist:goToPlaylist:metricsReportingContext:), 0, 0);
}

uint64_t closure #1 in Actions.GoToPlaylist.Context.init<A>(item:subtitle:canGoToPlaylist:goToPlaylist:metricsReportingContext:)()
{
  uint64_t v1 = *(void *)(v0 + 144);
  uint64_t v2 = *(void *)(v0 + 152);
  uint64_t v3 = *(void *)(v0 + 136);
  outlined init with copy of (String, Any)(*(void *)(v0 + 96), v3, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    outlined destroy of TaskPriority?(*(void *)(v0 + 136), &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
  else
  {
    uint64_t v6 = *(void *)(v0 + 128);
    uint64_t v7 = *(void *)(v0 + 112);
    outlined init with take of Actions.MetricsReportingContext(*(void *)(v0 + 136), *(void *)(v0 + 160));
    *(void *)(v0 + 168) = MusicItem.metricsTargetIdentifier.getter(v7);
    *(void *)(v0 + 176) = v8;
    uint64_t v9 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v6, 1, 1, v9);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<MetricsEvent.Click.ActionDetails.Key>);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100493D00;
    *(void *)(inited + 32) = MusicItem.metricsContentType.getter();
    *(void *)(inited + 40) = v11;
    *(unsigned char *)(inited + 48) = 0;
    *(_OWORD *)(inited + 56) = xmmword_100493D50;
    *(unsigned char *)(inited + 72) = 3;
    *(void *)(v0 + 184) = specialized MetricsEvent.Click.ActionDetails.init(_:)(inited);
    *(void *)(v0 + 192) = v12;
    *(void *)(v0 + 200) = v13;
    *(_WORD *)(v0 + 216) = v14;
    swift_setDeallocating();
    swift_arrayDestroy();
    type metadata accessor for MainActor();
    *(void *)(v0 + 208) = static MainActor.shared.getter();
    uint64_t v16 = dispatch thunk of Actor.unownedExecutor.getter();
    return _swift_task_switch(closure #1 in Actions.GoToPlaylist.Context.init<A>(item:subtitle:canGoToPlaylist:goToPlaylist:metricsReportingContext:), v16, v15);
  }
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  uint64_t v1 = *(void *)(v0 + 200);
  uint64_t v3 = *(void **)(v0 + 184);
  uint64_t v2 = *(void *)(v0 + 192);
  uint64_t v5 = *(void *)(v0 + 168);
  uint64_t v4 = *(void *)(v0 + 176);
  uint64_t v6 = *(uint64_t **)(v0 + 160);
  uint64_t v7 = *(void *)(v0 + 128);
  uint64_t v8 = *(unsigned __int16 *)(v0 + 216);
  swift_release();
  specialized static Actions.reportClickEvent(targetIdentifier:targetType:actionType:actionURL:actionDetails:reportingContext:)(v5, v4, 5, 45, v7, v3, v2, v1, v8, v6);
  outlined consume of MetricsEvent.Click.ActionDetails(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease();
  outlined destroy of TaskPriority?(v7, &demangling cache variable for type metadata for URL?);
  return _swift_task_switch(closure #1 in Actions.GoToAlbum.Context.init<A>(item:subtitle:canGoToAlbum:goToAlbum:metricsReportingContext:), 0, 0);
}

uint64_t Actions.GoToPlaylist.Context.menuItemTitle.getter()
{
  return Actions.GoToAlbum.Context.menuItemTitle.getter();
}

uint64_t (*Actions.GoToPlaylist.Context.menuItemImage.getter())()
{
  return specialized closure #1 in ActionMenuItemImage.init(uiImage:);
}

id implicit closure #1 in Actions.GoToPlaylist.Context.menuItemImage.getter()
{
  return implicit closure #1 in Actions.GoToAlbum.Context.menuItemImage.getter();
}

uint64_t protocol witness for ActionMenuItemConfiguring.menuItemTitle.getter in conformance Actions.GoToPlaylist.Context()
{
  return protocol witness for ActionMenuItemConfiguring.menuItemTitle.getter in conformance Actions.GoToAlbum.Context();
}

uint64_t closure #2 in static Actions.ShowSongCredits.action(context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (uint64_t (*)(void))(*(void *)(a2 + 16) + **(int **)(a2 + 16));
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v3;
  *uint64_t v3 = v2;
  v3[1] = closure #3 in static Actions.ReportConcern.action(context:);
  return v5();
}

uint64_t protocol witness for static ActionDefinition.action(context:) in conformance Actions.ShowSongCredits@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return protocol witness for static ActionDefinition.action(context:) in conformance Actions.ShowSongCredits(a1, 4, (uint64_t)closure #1 in static Actions.ShowSongCredits.action(context:), (uint64_t)&async function pointer to closure #2 in static Actions.ShowSongCredits.action(context:), (uint64_t)&async function pointer to closure #3 in static Actions.ShowSongCredits.action(context:), a2);
}

uint64_t Actions.ShowSongCredits.Context.init<A>(item:canShowSongCredits:showSongCredits:metricsReportingContext:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>)
{
  uint64_t v15 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?)
                  - 8);
  unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v17 = *(void *)(a7 - 8);
  unint64_t v18 = (v16 + *(void *)(v15 + 64) + *(unsigned __int8 *)(v17 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = a7;
  *(void *)(v19 + 24) = a8;
  outlined init with take of PresentationSource?(a6, v19 + v16, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v17 + 32))(v19 + v18, a1, a7);
  *a9 = a2;
  a9[1] = a3;
  a9[2] = a4;
  a9[3] = a5;
  a9[4] = &async function pointer to partial apply for closure #1 in Actions.ShowSongCredits.Context.init<A>(item:canShowSongCredits:showSongCredits:metricsReportingContext:);
  a9[5] = v19;
  return result;
}

uint64_t closure #1 in Actions.ShowSongCredits.Context.init<A>(item:canShowSongCredits:showSongCredits:metricsReportingContext:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[11] = a3;
  v4[12] = a4;
  v4[9] = a1;
  v4[10] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  v4[13] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  v4[14] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for Actions.MetricsReportingContext();
  v4[15] = v5;
  v4[16] = *(void *)(v5 - 8);
  v4[17] = swift_task_alloc();
  return _swift_task_switch(closure #1 in Actions.ShowSongCredits.Context.init<A>(item:canShowSongCredits:showSongCredits:metricsReportingContext:), 0, 0);
}

uint64_t closure #1 in Actions.ShowSongCredits.Context.init<A>(item:canShowSongCredits:showSongCredits:metricsReportingContext:)()
{
  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v2 = *(void *)(v0 + 128);
  uint64_t v3 = *(void *)(v0 + 112);
  outlined init with copy of (String, Any)(*(void *)(v0 + 72), v3, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    outlined destroy of TaskPriority?(*(void *)(v0 + 112), &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
  else
  {
    uint64_t v6 = *(void *)(v0 + 104);
    uint64_t v7 = *(void *)(v0 + 88);
    outlined init with take of Actions.MetricsReportingContext(*(void *)(v0 + 112), *(void *)(v0 + 136));
    *(void *)(v0 + 144) = MusicItem.metricsTargetIdentifier.getter(v7);
    *(void *)(v0 + 152) = v8;
    uint64_t v9 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v6, 1, 1, v9);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<MetricsEvent.Click.ActionDetails.Key>);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100493400;
    *(void *)(inited + 32) = MusicItem.metricsContentType.getter();
    *(void *)(inited + 40) = v11;
    *(unsigned char *)(inited + 48) = 0;
    *(void *)(v0 + 160) = specialized MetricsEvent.Click.ActionDetails.init(_:)(inited);
    *(void *)(v0 + 168) = v12;
    *(void *)(v0 + 176) = v13;
    *(_WORD *)(v0 + 192) = v14;
    swift_setDeallocating();
    swift_arrayDestroy();
    type metadata accessor for MainActor();
    *(void *)(v0 + 184) = static MainActor.shared.getter();
    uint64_t v16 = dispatch thunk of Actor.unownedExecutor.getter();
    return _swift_task_switch(closure #1 in Actions.ShowSongCredits.Context.init<A>(item:canShowSongCredits:showSongCredits:metricsReportingContext:), v16, v15);
  }
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  uint64_t v1 = *(void *)(v0 + 176);
  uint64_t v3 = *(void **)(v0 + 160);
  uint64_t v2 = *(void *)(v0 + 168);
  uint64_t v5 = *(void *)(v0 + 144);
  uint64_t v4 = *(void *)(v0 + 152);
  uint64_t v6 = *(uint64_t **)(v0 + 136);
  uint64_t v7 = *(void *)(v0 + 104);
  uint64_t v8 = *(unsigned __int16 *)(v0 + 192);
  swift_release();
  specialized static Actions.reportClickEvent(targetIdentifier:targetType:actionType:actionURL:actionDetails:reportingContext:)(v5, v4, 5, 44, v7, v3, v2, v1, v8, v6);
  outlined consume of MetricsEvent.Click.ActionDetails(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease();
  outlined destroy of TaskPriority?(v7, &demangling cache variable for type metadata for URL?);
  return _swift_task_switch(closure #1 in Actions.ShowSongCredits.Context.init<A>(item:canShowSongCredits:showSongCredits:metricsReportingContext:), 0, 0);
}

unint64_t closure #1 in Actions.ShowSongCredits.Context.init<A, B>(item:applicationCapabilities:navigationPusher:metricsReportingContext:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v66 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicVideo?);
  __chkstk_darwin(v4 - 8);
  uint64_t v57 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = type metadata accessor for MusicVideo();
  uint64_t v55 = *(void *)(v56 - 8);
  __chkstk_darwin(v56);
  uint64_t v52 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Song?);
  __chkstk_darwin(v7 - 8);
  uint64_t v60 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = type metadata accessor for Song();
  uint64_t v65 = *(void *)(v61 - 8);
  __chkstk_darwin(v61);
  uint64_t v53 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Track?);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v63 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = a3;
  uint64_t v64 = *(void *)(a3 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v54 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v59 = (char *)&v52 - v16;
  __chkstk_darwin(v15);
  unint64_t v18 = (char *)&v52 - v17;
  uint64_t v19 = type metadata accessor for Track();
  uint64_t v62 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v58 = (char *)&v52 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  char v21 = v69;
  uint64_t v22 = v70;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  if ((v21 & 1) == 0) {
    return 0xD00000000000003CLL;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  int v24 = v68;
  uint64_t v25 = v70;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  if (v24 != 1) {
    return 0xD000000000000016;
  }
  unsigned __int8 v26 = *(void (**)(char *, uint64_t, uint64_t))(v64 + 16);
  uint64_t v28 = v66;
  uint64_t v27 = v67;
  v26(v18, v66, v67);
  uint64_t v29 = (uint64_t)v63;
  char v30 = swift_dynamicCast();
  uint64_t v31 = v62;
  uint64_t v32 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v62 + 56);
  if (v30)
  {
    v32(v29, 0, 1, v19);
    uint64_t v33 = v58;
    (*(void (**)(char *, uint64_t, uint64_t))(v31 + 32))(v58, v29, v19);
    Track.catalogID.getter();
    uint64_t v35 = v34;
    (*(void (**)(char *, uint64_t))(v31 + 8))(v33, v19);
    swift_bridgeObjectRelease();
    uint64_t v36 = v65;
    if (v35) {
      return 0;
    }
  }
  else
  {
    v32(v29, 1, 1, v19);
    outlined destroy of TaskPriority?(v29, &demangling cache variable for type metadata for Track?);
    uint64_t v36 = v65;
  }
  v26(v59, v28, v27);
  uint64_t v37 = (uint64_t)v60;
  uint64_t v38 = v61;
  char v39 = swift_dynamicCast();
  uint64_t v40 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 56);
  if ((v39 & 1) == 0)
  {
    v40(v37, 1, 1, v38);
    outlined destroy of TaskPriority?(v37, &demangling cache variable for type metadata for Song?);
    goto LABEL_13;
  }
  v40(v37, 0, 1, v38);
  uint64_t v41 = v53;
  (*(void (**)(char *, uint64_t, uint64_t))(v36 + 32))(v53, v37, v38);
  Song.catalogID.getter();
  uint64_t v43 = v42;
  (*(void (**)(char *, uint64_t))(v36 + 8))(v41, v38);
  swift_bridgeObjectRelease();
  if (v43) {
    return 0;
  }
LABEL_13:
  v26(v54, v28, v27);
  uint64_t v44 = (uint64_t)v57;
  uint64_t v45 = v56;
  char v46 = swift_dynamicCast();
  uint64_t v47 = v55;
  uint64_t v48 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v55 + 56);
  if (v46)
  {
    v48(v44, 0, 1, v45);
    uint64_t v49 = v52;
    (*(void (**)(char *, uint64_t, uint64_t))(v47 + 32))(v52, v44, v45);
    MusicVideo.catalogID.getter();
    uint64_t v51 = v50;
    (*(void (**)(char *, uint64_t))(v47 + 8))(v49, v45);
    swift_bridgeObjectRelease();
    if (v51) {
      return 0;
    }
  }
  else
  {
    v48(v44, 1, 1, v45);
    outlined destroy of TaskPriority?(v44, &demangling cache variable for type metadata for MusicVideo?);
  }
  return 0xD000000000000010;
}

uint64_t sub_100073E9C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

unint64_t partial apply for closure #1 in Actions.ShowSongCredits.Context.init<A, B>(item:applicationCapabilities:navigationPusher:metricsReportingContext:)()
{
  return closure #1 in Actions.ShowSongCredits.Context.init<A, B>(item:applicationCapabilities:navigationPusher:metricsReportingContext:)(*(void *)(v0 + 48), v0+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80)), *(void *)(v0 + 16));
}

uint64_t closure #2 in Actions.ShowSongCredits.Context.init<A, B>(item:applicationCapabilities:navigationPusher:metricsReportingContext:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[5] = a4;
  v6[6] = a6;
  v6[3] = a2;
  v6[4] = a3;
  v6[2] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicVideo?);
  v6[7] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for MusicVideo();
  v6[8] = v8;
  v6[9] = *(void *)(v8 - 8);
  v6[10] = swift_task_alloc();
  v6[11] = type metadata accessor for NavigationItem();
  v6[12] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Song?);
  v6[13] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for Song();
  v6[14] = v9;
  v6[15] = *(void *)(v9 - 8);
  v6[16] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Track?);
  v6[17] = swift_task_alloc();
  v6[18] = *(void *)(a3 - 8);
  v6[19] = swift_task_alloc();
  v6[20] = swift_task_alloc();
  v6[21] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for Track();
  v6[22] = v10;
  v6[23] = *(void *)(v10 - 8);
  v6[24] = swift_task_alloc();
  return _swift_task_switch(closure #2 in Actions.ShowSongCredits.Context.init<A, B>(item:applicationCapabilities:navigationPusher:metricsReportingContext:), 0, 0);
}

uint64_t closure #2 in Actions.ShowSongCredits.Context.init<A, B>(item:applicationCapabilities:navigationPusher:metricsReportingContext:)()
{
  uint64_t v1 = v0[23];
  uint64_t v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0[18] + 16);
  v2(v0[21], v0[2], v0[4]);
  char v3 = swift_dynamicCast();
  uint64_t v4 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v1 + 56);
  if (v3)
  {
    uint64_t v6 = v0[23];
    uint64_t v5 = v0[24];
    uint64_t v7 = v0[22];
    uint64_t v8 = v0[17];
    uint64_t v9 = v0[12];
    uint64_t v47 = v0[6];
    v4(v8, 0, 1, v7);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v5, v8, v7);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v9, v5, v7);
    swift_storeEnumTagMultiPayload();
    char v46 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v47 + 8) + **(int **)(v47 + 8));
    uint64_t v10 = (void *)swift_task_alloc();
    v0[25] = v10;
    void *v10 = v0;
    uint64_t v11 = closure #2 in Actions.ShowSongCredits.Context.init<A, B>(item:applicationCapabilities:navigationPusher:metricsReportingContext:);
LABEL_7:
    v10[1] = v11;
    uint64_t v40 = v0[12];
    uint64_t v41 = v0[5];
    uint64_t v42 = v0[6];
    return v46(v40, v41, v42);
  }
  uint64_t v12 = v0[20];
  uint64_t v13 = v0[17];
  uint64_t v14 = v0[15];
  uint64_t v15 = v0[4];
  uint64_t v16 = v0[2];
  v4(v13, 1, 1, v0[22]);
  outlined destroy of TaskPriority?(v13, &demangling cache variable for type metadata for Track?);
  v2(v12, v16, v15);
  char v17 = swift_dynamicCast();
  unint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  if (v17)
  {
    uint64_t v19 = v0[22];
    uint64_t v20 = v0[23];
    uint64_t v22 = v0[15];
    uint64_t v21 = v0[16];
    uint64_t v23 = v0[13];
    uint64_t v24 = v0[14];
    uint64_t v25 = v0[12];
    uint64_t v48 = v0[6];
    v18(v23, 0, 1, v24);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 32))(v21, v23, v24);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16))(v25, v21, v24);
    (*(void (**)(uint64_t, void, uint64_t))(v20 + 104))(v25, enum case for Track.song(_:), v19);
    swift_storeEnumTagMultiPayload();
    char v46 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v48 + 8) + **(int **)(v48 + 8));
    uint64_t v10 = (void *)swift_task_alloc();
    v0[26] = v10;
    void *v10 = v0;
    uint64_t v11 = closure #2 in Actions.ShowSongCredits.Context.init<A, B>(item:applicationCapabilities:navigationPusher:metricsReportingContext:);
    goto LABEL_7;
  }
  uint64_t v26 = v0[19];
  uint64_t v27 = v0[13];
  uint64_t v28 = v0[9];
  uint64_t v29 = v0[4];
  uint64_t v30 = v0[2];
  v18(v27, 1, 1, v0[14]);
  outlined destroy of TaskPriority?(v27, &demangling cache variable for type metadata for Song?);
  v2(v26, v30, v29);
  char v31 = swift_dynamicCast();
  uint64_t v32 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 56);
  if (v31)
  {
    uint64_t v33 = v0[22];
    uint64_t v34 = v0[23];
    uint64_t v35 = v0[12];
    uint64_t v37 = v0[9];
    uint64_t v36 = v0[10];
    uint64_t v39 = v0[7];
    uint64_t v38 = v0[8];
    uint64_t v49 = v0[6];
    v32(v39, 0, 1, v38);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 32))(v36, v39, v38);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 16))(v35, v36, v38);
    (*(void (**)(uint64_t, void, uint64_t))(v34 + 104))(v35, enum case for Track.musicVideo(_:), v33);
    swift_storeEnumTagMultiPayload();
    char v46 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v49 + 8) + **(int **)(v49 + 8));
    uint64_t v10 = (void *)swift_task_alloc();
    v0[27] = v10;
    void *v10 = v0;
    uint64_t v11 = closure #2 in Actions.ShowSongCredits.Context.init<A, B>(item:applicationCapabilities:navigationPusher:metricsReportingContext:);
    goto LABEL_7;
  }
  uint64_t v44 = v0[7];
  v32(v44, 1, 1, v0[8]);
  outlined destroy of TaskPriority?(v44, &demangling cache variable for type metadata for MusicVideo?);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v45 = (uint64_t (*)(void))v0[1];
  return v45();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;

  uint64_t v1 = *(void *)(*(void *)v0 + 96);
  swift_task_dealloc();
  outlined destroy of NavigationItem(v1, (uint64_t (*)(void))type metadata accessor for NavigationItem);
  return _swift_task_switch(closure #2 in Actions.ShowSongCredits.Context.init<A, B>(item:applicationCapabilities:navigationPusher:metricsReportingContext:), 0, 0);
}

{
  void *v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  (*(void (**)(void, void))(v0[23] + 8))(v0[24], v0[22]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;

  uint64_t v1 = *(void *)(*(void *)v0 + 96);
  swift_task_dealloc();
  outlined destroy of NavigationItem(v1, (uint64_t (*)(void))type metadata accessor for NavigationItem);
  return _swift_task_switch(closure #2 in Actions.ShowSongCredits.Context.init<A, B>(item:applicationCapabilities:navigationPusher:metricsReportingContext:), 0, 0);
}

{
  void *v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  (*(void (**)(void, void))(v0[15] + 8))(v0[16], v0[14]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;

  uint64_t v1 = *(void *)(*(void *)v0 + 96);
  swift_task_dealloc();
  outlined destroy of NavigationItem(v1, (uint64_t (*)(void))type metadata accessor for NavigationItem);
  return _swift_task_switch(closure #2 in Actions.ShowSongCredits.Context.init<A, B>(item:applicationCapabilities:navigationPusher:metricsReportingContext:), 0, 0);
}

{
  void *v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  (*(void (**)(void, void))(v0[9] + 8))(v0[10], v0[8]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t partial apply for closure #2 in Actions.ShowSongCredits.Context.init<A, B>(item:applicationCapabilities:navigationPusher:metricsReportingContext:)()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = v0[4];
  uint64_t v5 = v0[5];
  uint64_t v6 = *(unsigned __int8 *)(*(void *)(v2 - 8) + 80);
  uint64_t v7 = (v6 + 48) & ~v6;
  uint64_t v8 = (uint64_t)v0 + v7;
  uint64_t v9 = (uint64_t)v0
     + ((v7 + *(void *)(*(void *)(v2 - 8) + 64) + *(unsigned __int8 *)(*(void *)(v3 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v3 - 8) + 80));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v10;
  void *v10 = v1;
  v10[1] = closure #3 in static Actions.ReportConcern.action(context:);
  return closure #2 in Actions.ShowSongCredits.Context.init<A, B>(item:applicationCapabilities:navigationPusher:metricsReportingContext:)(v8, v9, v2, v3, v4, v5);
}

uint64_t sub_100075018()
{
  (*(void (**)(unint64_t))(*(void *)(*(void *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80)));

  return swift_deallocObject();
}

unint64_t partial apply for closure #1 in Actions.GoToAlbum.Context.init<A, B>(item:navigationPusher:metricsReportingContext:)()
{
  return closure #1 in Actions.GoToAlbum.Context.init<A, B>(item:navigationPusher:metricsReportingContext:)(v0+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80)), *(void *)(v0 + 16));
}

uint64_t objectdestroy_2Tm()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(void *)(*(void *)(v0 + 16) - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v1 - 8);
  unint64_t v5 = (v3 + *(void *)(v2 + 64) + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  (*(void (**)(unint64_t))(v2 + 8))(v0 + v3);
  (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v5, v1);

  return swift_deallocObject();
}

uint64_t partial apply for closure #2 in Actions.GoToAlbum.Context.init<A, B>(item:navigationPusher:metricsReportingContext:)()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = v0[4];
  uint64_t v5 = v0[5];
  uint64_t v6 = *(unsigned __int8 *)(*(void *)(v2 - 8) + 80);
  uint64_t v7 = (v6 + 48) & ~v6;
  uint64_t v8 = (uint64_t)v0 + v7;
  uint64_t v9 = (uint64_t)v0
     + ((v7 + *(void *)(*(void *)(v2 - 8) + 64) + *(unsigned __int8 *)(*(void *)(v3 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v3 - 8) + 80));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v10;
  void *v10 = v1;
  v10[1] = closure #3 in static Actions.ReportConcern.action(context:);
  return closure #2 in Actions.GoToAlbum.Context.init<A, B>(item:navigationPusher:metricsReportingContext:)(v8, v9, v2, v3, v4, v5);
}

uint64_t outlined retain of String?(uint64_t a1)
{
  return a1;
}

uint64_t partial apply for closure #1 in Actions.GoToAlbum.Context.init<A>(item:subtitle:canGoToAlbum:goToAlbum:metricsReportingContext:)()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?)
                 - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v0 + v5;
  uint64_t v7 = v0
     + ((v5 + *(void *)(v4 + 64) + *(unsigned __int8 *)(*(void *)(v2 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 8) + 80));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v8;
  *uint64_t v8 = v1;
  v8[1] = closure #3 in static Actions.ReportConcern.action(context:);
  return closure #1 in Actions.GoToAlbum.Context.init<A>(item:subtitle:canGoToAlbum:goToAlbum:metricsReportingContext:)(v6, v7, v2, v3);
}

uint64_t Actions.ShowSongCredits.Context.menuItemTitle.getter()
{
  return Actions.GoToAlbum.Context.menuItemTitle.getter();
}

uint64_t (*Actions.ShowSongCredits.Context.menuItemImage.getter())()
{
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = 0x7269632E6F666E69;
  *(void *)(v0 + 24) = 0xEB00000000656C63;
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = 0x7269632E6F666E69;
  *(void *)(v1 + 24) = 0xEB00000000656C63;
  return partial apply for closure #1 in ActionMenuItemImage.init(systemName:);
}

uint64_t protocol witness for ActionMenuItemConfiguring.menuItemTitle.getter in conformance Actions.ShowSongCredits.Context()
{
  uint64_t v0 = type metadata accessor for Locale();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = type metadata accessor for String.LocalizationValue();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  unint64_t v5 = &v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v3);
  uint64_t v7 = &v11[-v6];
  String.LocalizationValue.init(stringLiteral:)();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v2 + 16))(v5, v7, v1);
  if (one-time initialization token for module != -1) {
    swift_once();
  }
  id v8 = (id)static NSBundle.module;
  static Locale.current.getter();
  uint64_t v9 = String.init(localized:table:bundle:locale:comment:)();
  (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v7, v1);
  return v9;
}

uint64_t (*protocol witness for ActionMenuItemConfiguring.menuItemImage.getter in conformance Actions.ShowSongCredits.Context())()
{
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = 0x7269632E6F666E69;
  *(void *)(v0 + 24) = 0xEB00000000656C63;
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = 0x7269632E6F666E69;
  *(void *)(v1 + 24) = 0xEB00000000656C63;
  return closure #1 in ActionMenuItemImage.init(systemName:)partial apply;
}

double static Actions.GoToArtist.action(context:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)&double result = static Actions.GoToAlbum.action(context:)(a1, 13, (uint64_t)closure #1 in static Actions.GoToArtist.action(context:), (uint64_t)&async function pointer to closure #2 in static Actions.GoToArtist.action(context:), (uint64_t)&async function pointer to closure #3 in static Actions.GoToArtist.action(context:), a2).n128_u64[0];
  return result;
}

uint64_t closure #1 in static Actions.GoToArtist.action(context:)(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 16))();
}

uint64_t closure #2 in static Actions.GoToArtist.action(context:)(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (uint64_t (*)(void))(*(void *)(a2 + 32) + **(int **)(a2 + 32));
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v3;
  *uint64_t v3 = v2;
  v3[1] = partial apply for closure #1 in static MusicEngagementExtension.performRequest(with:completion:);
  return v5();
}

uint64_t protocol witness for static ActionDefinition.action(context:) in conformance Actions.GoToArtist@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return protocol witness for static ActionDefinition.action(context:) in conformance Actions.GoToAlbum(a1, 13, (uint64_t)closure #1 in static Actions.GoToArtist.action(context:), (uint64_t)&async function pointer to closure #2 in static Actions.GoToArtist.action(context:), (uint64_t)&async function pointer to closure #3 in static Actions.GoToArtist.action(context:), a2);
}

uint64_t protocol witness for static ActionDefinition.action(context:) in conformance Actions.GoToAlbum@<X0>(uint64_t a1@<X0>, char a2@<W3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 56);
  *(void *)a6 = *(void *)a1;
  *(void *)(a6 + 8) = v6;
  *(void *)(a6 + 16) = v7;
  *(_OWORD *)(a6 + 24) = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a6 + 40) = *(_OWORD *)(a1 + 40);
  *(void *)(a6 + 56) = v8;
  *(unsigned char *)(a6 + 64) = a2;
  *(void *)(a6 + 72) = a3;
  *(void *)(a6 + 80) = 0;
  *(void *)(a6 + 88) = 0x4014000000000000;
  *(void *)(a6 + 96) = a4;
  *(void *)(a6 + 104) = 0;
  *(void *)(a6 + 112) = a5;
  *(void *)(a6 + 120) = 0;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();

  return swift_retain();
}

uint64_t Actions.GoToArtist.Context.init<A>(item:subtitle:canGoToArtist:goToArtist:metricsReportingContext:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v15 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?)
                  - 8);
  unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v17 = *(void *)(a10 - 8);
  unint64_t v18 = (v16 + *(void *)(v15 + 64) + *(unsigned __int8 *)(v17 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = a10;
  *(void *)(v19 + 24) = a11;
  outlined init with take of PresentationSource?(a8, v19 + v16, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v17 + 32))(v19 + v18, a1, a10);
  *a9 = a2;
  a9[1] = a3;
  a9[2] = a4;
  a9[3] = a5;
  a9[4] = a6;
  a9[5] = a7;
  a9[6] = &async function pointer to partial apply for closure #1 in Actions.GoToArtist.Context.init<A>(item:subtitle:canGoToArtist:goToArtist:metricsReportingContext:);
  a9[7] = v19;
  return result;
}

uint64_t closure #1 in Actions.GoToArtist.Context.init<A>(item:subtitle:canGoToArtist:goToArtist:metricsReportingContext:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[14] = a3;
  v4[15] = a4;
  v4[12] = a1;
  v4[13] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  v4[16] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  v4[17] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for Actions.MetricsReportingContext();
  v4[18] = v5;
  v4[19] = *(void *)(v5 - 8);
  v4[20] = swift_task_alloc();
  return _swift_task_switch(closure #1 in Actions.GoToArtist.Context.init<A>(item:subtitle:canGoToArtist:goToArtist:metricsReportingContext:), 0, 0);
}

uint64_t closure #1 in Actions.GoToArtist.Context.init<A>(item:subtitle:canGoToArtist:goToArtist:metricsReportingContext:)()
{
  uint64_t v1 = *(void *)(v0 + 144);
  uint64_t v2 = *(void *)(v0 + 152);
  uint64_t v3 = *(void *)(v0 + 136);
  outlined init with copy of (String, Any)(*(void *)(v0 + 96), v3, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    outlined destroy of TaskPriority?(*(void *)(v0 + 136), &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
  else
  {
    uint64_t v6 = *(void *)(v0 + 128);
    uint64_t v7 = *(void *)(v0 + 112);
    outlined init with take of Actions.MetricsReportingContext(*(void *)(v0 + 136), *(void *)(v0 + 160));
    *(void *)(v0 + 168) = MusicItem.metricsTargetIdentifier.getter(v7);
    *(void *)(v0 + 176) = v8;
    uint64_t v9 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v6, 1, 1, v9);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<MetricsEvent.Click.ActionDetails.Key>);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100493D00;
    *(void *)(inited + 32) = MusicItem.metricsContentType.getter();
    *(void *)(inited + 40) = v11;
    *(unsigned char *)(inited + 48) = 0;
    *(_OWORD *)(inited + 56) = xmmword_100493D30;
    *(unsigned char *)(inited + 72) = 3;
    *(void *)(v0 + 184) = specialized MetricsEvent.Click.ActionDetails.init(_:)(inited);
    *(void *)(v0 + 192) = v12;
    *(void *)(v0 + 200) = v13;
    *(_WORD *)(v0 + 216) = v14;
    swift_setDeallocating();
    swift_arrayDestroy();
    type metadata accessor for MainActor();
    *(void *)(v0 + 208) = static MainActor.shared.getter();
    uint64_t v16 = dispatch thunk of Actor.unownedExecutor.getter();
    return _swift_task_switch(closure #1 in Actions.GoToArtist.Context.init<A>(item:subtitle:canGoToArtist:goToArtist:metricsReportingContext:), v16, v15);
  }
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  uint64_t v1 = *(void *)(v0 + 200);
  uint64_t v3 = *(void **)(v0 + 184);
  uint64_t v2 = *(void *)(v0 + 192);
  uint64_t v5 = *(void *)(v0 + 168);
  uint64_t v4 = *(void *)(v0 + 176);
  uint64_t v6 = *(uint64_t **)(v0 + 160);
  uint64_t v7 = *(void *)(v0 + 128);
  uint64_t v8 = *(unsigned __int16 *)(v0 + 216);
  swift_release();
  specialized static Actions.reportClickEvent(targetIdentifier:targetType:actionType:actionURL:actionDetails:reportingContext:)(v5, v4, 5, 43, v7, v3, v2, v1, v8, v6);
  outlined consume of MetricsEvent.Click.ActionDetails(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease();
  outlined destroy of TaskPriority?(v7, &demangling cache variable for type metadata for URL?);
  return _swift_task_switch(closure #1 in Actions.GoToArtist.Context.init<A>(item:subtitle:canGoToArtist:goToArtist:metricsReportingContext:), 0, 0);
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  outlined destroy of NavigationItem(*(void *)(v0 + 160), (uint64_t (*)(void))type metadata accessor for Actions.MetricsReportingContext);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t Actions.GoToArtist.Context.menuItemTitle.getter()
{
  return Actions.GoToAlbum.Context.menuItemTitle.getter();
}

uint64_t (*Actions.GoToArtist.Context.menuItemImage.getter())()
{
  return specialized closure #1 in ActionMenuItemImage.init(uiImage:);
}

id implicit closure #1 in Actions.GoToArtist.Context.menuItemImage.getter()
{
  return implicit closure #1 in Actions.GoToAlbum.Context.menuItemImage.getter();
}

uint64_t protocol witness for ActionMenuItemConfiguring.menuItemTitle.getter in conformance Actions.GoToArtist.Context()
{
  return protocol witness for ActionMenuItemConfiguring.menuItemTitle.getter in conformance Actions.GoToAlbum.Context();
}

uint64_t static Actions.ViewFullLyrics.action(context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return static Actions.ShowSongCredits.action(context:)(a1, 54, (uint64_t)closure #1 in static Actions.AddToLibrary.action(context:), (uint64_t)&async function pointer to closure #2 in static Actions.ViewFullLyrics.action(context:), (uint64_t)&async function pointer to closure #3 in static Actions.ViewFullLyrics.action(context:), a2);
}

uint64_t static Actions.ShowSongCredits.action(context:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6 = *(void *)(a1 + 40);
  *(void *)a6 = *(void *)a1;
  *(_OWORD *)(a6 + 8) = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(a6 + 24) = *(_OWORD *)(a1 + 24);
  *(void *)(a6 + 40) = v6;
  *(unsigned char *)(a6 + 48) = a2;
  *(void *)(a6 + 56) = a3;
  *(void *)(a6 + 64) = 0;
  *(void *)(a6 + 72) = 0x4014000000000000;
  *(void *)(a6 + 80) = a4;
  *(void *)(a6 + 88) = 0;
  *(void *)(a6 + 96) = a5;
  *(void *)(a6 + 104) = 0;
  swift_retain();
  swift_retain();

  return swift_retain();
}

uint64_t protocol witness for static ActionDefinition.action(context:) in conformance Actions.ViewFullLyrics@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return protocol witness for static ActionDefinition.action(context:) in conformance Actions.ShowSongCredits(a1, 54, (uint64_t)closure #1 in static Actions.AddToLibrary.action(context:), (uint64_t)&async function pointer to closure #2 in static Actions.ViewFullLyrics.action(context:), (uint64_t)&async function pointer to closure #3 in static Actions.ViewFullLyrics.action(context:), a2);
}

uint64_t protocol witness for static ActionDefinition.action(context:) in conformance Actions.ShowSongCredits@<X0>(uint64_t a1@<X0>, char a2@<W3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v6 = *(void *)(a1 + 40);
  *(void *)a6 = *(void *)a1;
  *(_OWORD *)(a6 + 8) = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(a6 + 24) = *(_OWORD *)(a1 + 24);
  *(void *)(a6 + 40) = v6;
  *(unsigned char *)(a6 + 48) = a2;
  *(void *)(a6 + 56) = a3;
  *(void *)(a6 + 64) = 0;
  *(void *)(a6 + 72) = 0x4014000000000000;
  *(void *)(a6 + 80) = a4;
  *(void *)(a6 + 88) = 0;
  *(void *)(a6 + 96) = a5;
  *(void *)(a6 + 104) = 0;
  swift_retain();
  swift_retain();

  return swift_retain();
}

uint64_t Actions.ViewFullLyrics.Context.init<A>(item:canViewFullLyrics:viewFullLyrics:metricsReportingContext:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>)
{
  uint64_t v15 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?)
                  - 8);
  unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v17 = *(void *)(a7 - 8);
  unint64_t v18 = (v16 + *(void *)(v15 + 64) + *(unsigned __int8 *)(v17 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = a7;
  *(void *)(v19 + 24) = a8;
  outlined init with take of PresentationSource?(a6, v19 + v16, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v17 + 32))(v19 + v18, a1, a7);
  *a9 = a2;
  a9[1] = a3;
  a9[2] = a4;
  a9[3] = a5;
  a9[4] = &async function pointer to partial apply for closure #1 in Actions.ViewFullLyrics.Context.init<A>(item:canViewFullLyrics:viewFullLyrics:metricsReportingContext:);
  a9[5] = v19;
  return result;
}

uint64_t closure #1 in Actions.ViewFullLyrics.Context.init<A>(item:canViewFullLyrics:viewFullLyrics:metricsReportingContext:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[11] = a3;
  v4[12] = a4;
  v4[9] = a1;
  v4[10] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  v4[13] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  v4[14] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for Actions.MetricsReportingContext();
  v4[15] = v5;
  v4[16] = *(void *)(v5 - 8);
  v4[17] = swift_task_alloc();
  return _swift_task_switch(closure #1 in Actions.ViewFullLyrics.Context.init<A>(item:canViewFullLyrics:viewFullLyrics:metricsReportingContext:), 0, 0);
}

uint64_t closure #1 in Actions.ViewFullLyrics.Context.init<A>(item:canViewFullLyrics:viewFullLyrics:metricsReportingContext:)()
{
  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v2 = *(void *)(v0 + 128);
  uint64_t v3 = *(void *)(v0 + 112);
  outlined init with copy of (String, Any)(*(void *)(v0 + 72), v3, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    outlined destroy of TaskPriority?(*(void *)(v0 + 112), &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
  else
  {
    uint64_t v6 = *(void *)(v0 + 104);
    uint64_t v7 = *(void *)(v0 + 88);
    outlined init with take of Actions.MetricsReportingContext(*(void *)(v0 + 112), *(void *)(v0 + 136));
    *(void *)(v0 + 144) = MusicItem.metricsTargetIdentifier.getter(v7);
    *(void *)(v0 + 152) = v8;
    uint64_t v9 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v6, 1, 1, v9);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<MetricsEvent.Click.ActionDetails.Key>);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100493400;
    *(void *)(inited + 32) = MusicItem.metricsContentType.getter();
    *(void *)(inited + 40) = v11;
    *(unsigned char *)(inited + 48) = 0;
    *(void *)(v0 + 160) = specialized MetricsEvent.Click.ActionDetails.init(_:)(inited);
    *(void *)(v0 + 168) = v12;
    *(void *)(v0 + 176) = v13;
    *(_WORD *)(v0 + 192) = v14;
    swift_setDeallocating();
    swift_arrayDestroy();
    type metadata accessor for MainActor();
    *(void *)(v0 + 184) = static MainActor.shared.getter();
    uint64_t v16 = dispatch thunk of Actor.unownedExecutor.getter();
    return _swift_task_switch(closure #1 in Actions.ViewFullLyrics.Context.init<A>(item:canViewFullLyrics:viewFullLyrics:metricsReportingContext:), v16, v15);
  }
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  uint64_t v1 = *(void *)(v0 + 176);
  uint64_t v3 = *(void **)(v0 + 160);
  uint64_t v2 = *(void *)(v0 + 168);
  uint64_t v5 = *(void *)(v0 + 144);
  uint64_t v4 = *(void *)(v0 + 152);
  uint64_t v6 = *(uint64_t **)(v0 + 136);
  uint64_t v7 = *(void *)(v0 + 104);
  uint64_t v8 = *(unsigned __int16 *)(v0 + 192);
  swift_release();
  specialized static Actions.reportClickEvent(targetIdentifier:targetType:actionType:actionURL:actionDetails:reportingContext:)(v5, v4, 5, 39, v7, v3, v2, v1, v8, v6);
  outlined consume of MetricsEvent.Click.ActionDetails(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease();
  outlined destroy of TaskPriority?(v7, &demangling cache variable for type metadata for URL?);
  return _swift_task_switch(closure #1 in Actions.ViewFullLyrics.Context.init<A>(item:canViewFullLyrics:viewFullLyrics:metricsReportingContext:), 0, 0);
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  outlined destroy of NavigationItem(*(void *)(v0 + 136), (uint64_t (*)(void))type metadata accessor for Actions.MetricsReportingContext);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t (*Actions.ViewFullLyrics.Context.menuItemImage.getter())()
{
  return specialized closure #1 in ActionMenuItemImage.init(uiImage:);
}

id implicit closure #1 in Actions.ViewFullLyrics.Context.menuItemImage.getter()
{
  return implicit closure #1 in Actions.GoToAlbum.Context.menuItemImage.getter();
}

uint64_t partial apply for closure #1 in Actions.GoToPlaylist.Context.init<A>(item:subtitle:canGoToPlaylist:goToPlaylist:metricsReportingContext:)()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?)
                 - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v0 + v5;
  uint64_t v7 = v0
     + ((v5 + *(void *)(v4 + 64) + *(unsigned __int8 *)(*(void *)(v2 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 8) + 80));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v8;
  *uint64_t v8 = v1;
  v8[1] = closure #3 in static Actions.ReportConcern.action(context:);
  return closure #1 in Actions.GoToPlaylist.Context.init<A>(item:subtitle:canGoToPlaylist:goToPlaylist:metricsReportingContext:)(v6, v7, v2, v3);
}

uint64_t partial apply for closure #1 in Actions.ShowSongCredits.Context.init<A>(item:canShowSongCredits:showSongCredits:metricsReportingContext:)()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?)
                 - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v0 + v5;
  uint64_t v7 = v0
     + ((v5 + *(void *)(v4 + 64) + *(unsigned __int8 *)(*(void *)(v2 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 8) + 80));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v8;
  *uint64_t v8 = v1;
  v8[1] = closure #3 in static Actions.ReportConcern.action(context:);
  return closure #1 in Actions.ShowSongCredits.Context.init<A>(item:canShowSongCredits:showSongCredits:metricsReportingContext:)(v6, v7, v2, v3);
}

uint64_t sub_100077008()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in Actions.GoToArtist.Context.init<A>(item:subtitle:canGoToArtist:goToArtist:metricsReportingContext:)()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?)
                 - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v0 + v5;
  uint64_t v7 = v0
     + ((v5 + *(void *)(v4 + 64) + *(unsigned __int8 *)(*(void *)(v2 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 8) + 80));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v8;
  *uint64_t v8 = v1;
  v8[1] = partial apply for closure #1 in static MusicEngagementExtension.performRequest(with:completion:);
  return closure #1 in Actions.GoToArtist.Context.init<A>(item:subtitle:canGoToArtist:goToArtist:metricsReportingContext:)(v6, v7, v2, v3);
}

uint64_t objectdestroy_13Tm()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?)
                 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v5 = *(void *)(v1 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = v0 + v3;
  uint64_t v8 = type metadata accessor for Actions.MetricsReportingContext();
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v0 + v3, 1, v8))
  {
    uint64_t v16 = v4;
    if (*(void *)(v7 + 8) >= 0xBuLL) {
      swift_bridgeObjectRelease();
    }
    uint64_t v9 = v7 + *(int *)(v8 + 20);
    uint64_t v10 = type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v9, 1, v10))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v15 = v9 + *(int *)(v10 + 24);
      uint64_t v11 = type metadata accessor for URL();
      uint64_t v13 = *(void *)(v11 - 8);
      uint64_t v14 = v11;
      if (!(*(unsigned int (**)(uint64_t, uint64_t))(v13 + 48))(v15, 1)) {
        (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v15, v14);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v4 = v16;
  }
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + ((v3 + v4 + v6) & ~v6), v1);

  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in Actions.ViewFullLyrics.Context.init<A>(item:canViewFullLyrics:viewFullLyrics:metricsReportingContext:)()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?)
                 - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v0 + v5;
  uint64_t v7 = v0
     + ((v5 + *(void *)(v4 + 64) + *(unsigned __int8 *)(*(void *)(v2 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 8) + 80));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v8;
  *uint64_t v8 = v1;
  v8[1] = closure #3 in static Actions.ReportConcern.action(context:);
  return closure #1 in Actions.ViewFullLyrics.Context.init<A>(item:canViewFullLyrics:viewFullLyrics:metricsReportingContext:)(v6, v7, v2, v3);
}

uint64_t specialized Actions.ViewFullLyrics.Context.menuItemTitle.getter()
{
  uint64_t v0 = type metadata accessor for Locale();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = type metadata accessor for String.LocalizationValue();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  unint64_t v5 = &v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v3);
  uint64_t v7 = &v11[-v6];
  String.LocalizationValue.init(stringLiteral:)();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v2 + 16))(v5, v7, v1);
  if (one-time initialization token for module != -1) {
    swift_once();
  }
  id v8 = (id)static NSBundle.module;
  static Locale.current.getter();
  uint64_t v9 = String.init(localized:table:bundle:locale:comment:)();
  (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v7, v1);
  return v9;
}

uint64_t *initializeBufferWithCopyOfBuffer for NavigationItem(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 2) {
      uint64_t v6 = type metadata accessor for Playlist();
    }
    else {
      uint64_t v6 = type metadata accessor for Track();
    }
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for NavigationItem(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 2)
  {
    uint64_t v3 = type metadata accessor for Playlist();
  }
  else
  {
    if (result > 1) {
      return result;
    }
    uint64_t v3 = type metadata accessor for Track();
  }
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);

  return v4(a1, v3);
}

uint64_t initializeWithCopy for NavigationItem(uint64_t a1, uint64_t a2)
{
  if (swift_getEnumCaseMultiPayload() == 2) {
    uint64_t v4 = type metadata accessor for Playlist();
  }
  else {
    uint64_t v4 = type metadata accessor for Track();
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for NavigationItem(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    outlined destroy of NavigationItem(a1, (uint64_t (*)(void))type metadata accessor for NavigationItem);
    if (swift_getEnumCaseMultiPayload() == 2) {
      uint64_t v4 = type metadata accessor for Playlist();
    }
    else {
      uint64_t v4 = type metadata accessor for Track();
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t type metadata accessor for NavigationItem()
{
  uint64_t result = type metadata singleton initialization cache for NavigationItem;
  if (!type metadata singleton initialization cache for NavigationItem) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t initializeWithTake for NavigationItem(uint64_t a1, uint64_t a2)
{
  if (swift_getEnumCaseMultiPayload() == 2) {
    uint64_t v4 = type metadata accessor for Playlist();
  }
  else {
    uint64_t v4 = type metadata accessor for Track();
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithTake for NavigationItem(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    outlined destroy of NavigationItem(a1, (uint64_t (*)(void))type metadata accessor for NavigationItem);
    if (swift_getEnumCaseMultiPayload() == 2) {
      uint64_t v4 = type metadata accessor for Playlist();
    }
    else {
      uint64_t v4 = type metadata accessor for Track();
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for NavigationItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for NavigationItem(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t destructiveInjectEnumTag for NavigationItem()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t type metadata completion function for NavigationItem()
{
  uint64_t result = type metadata accessor for Track();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for Playlist();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Actions.GoToAlbum()
{
  return &type metadata for Actions.GoToAlbum;
}

ValueMetadata *type metadata accessor for Actions.GoToAlbum.Context()
{
  return &type metadata for Actions.GoToAlbum.Context;
}

ValueMetadata *type metadata accessor for Actions.GoToPlaylist()
{
  return &type metadata for Actions.GoToPlaylist;
}

ValueMetadata *type metadata accessor for Actions.GoToPlaylist.Context()
{
  return &type metadata for Actions.GoToPlaylist.Context;
}

ValueMetadata *type metadata accessor for Actions.ShowSongCredits()
{
  return &type metadata for Actions.ShowSongCredits;
}

ValueMetadata *type metadata accessor for Actions.ShowSongCredits.Context()
{
  return &type metadata for Actions.ShowSongCredits.Context;
}

ValueMetadata *type metadata accessor for Actions.GoToArtist()
{
  return &type metadata for Actions.GoToArtist;
}

uint64_t destroy for Actions.GoToAlbum.Context()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for Actions.GoToAlbum.Context(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v3 = *(void *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = v3;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for Actions.GoToAlbum.Context(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_retain();
  swift_release();
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_retain();
  swift_release();
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for Actions.GoToAlbum.Context(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  uint64_t v4 = *(void *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = v4;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for Actions.GoToAlbum.Context(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Actions.GoToAlbum.Context(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Actions.GoToArtist.Context()
{
  return &type metadata for Actions.GoToArtist.Context;
}

ValueMetadata *type metadata accessor for Actions.ViewFullLyrics()
{
  return &type metadata for Actions.ViewFullLyrics;
}

ValueMetadata *type metadata accessor for Actions.ViewFullLyrics.Context()
{
  return &type metadata for Actions.ViewFullLyrics.Context;
}

uint64_t outlined destroy of NavigationItem(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t lazy protocol witness table accessor for type MusicItemCollection<UploadedVideo> and conformance MusicItemCollection<A>(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t static Actions.OpenInClassical.action(context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *(void *)(a1 + 40);
  *(void *)a2 = *(void *)a1;
  *(_OWORD *)(a2 + 8) = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(a1 + 24);
  *(void *)(a2 + 40) = v2;
  *(unsigned char *)(a2 + 48) = 9;
  *(void *)(a2 + 56) = closure #1 in static Actions.AddToLibrary.action(context:);
  *(void *)(a2 + 64) = 0;
  *(void *)(a2 + 72) = 0x4014000000000000;
  *(void *)(a2 + 80) = &async function pointer to closure #2 in static Actions.OpenInClassical.action(context:);
  *(void *)(a2 + 88) = 0;
  *(void *)(a2 + 96) = &async function pointer to closure #3 in static Actions.OpenInClassical.action(context:);
  *(void *)(a2 + 104) = 0;
  swift_retain();
  swift_retain();

  return swift_retain();
}

uint64_t Actions.OpenInClassical.Context.init(album:presentationSource:metricsReportingContext:)@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t (**a4)()@<X8>)
{
  uint64_t v67 = a2;
  uint64_t v7 = type metadata accessor for Album();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  unsigned __int8 v68 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = v10;
  __chkstk_darwin(v9);
  uint64_t v62 = (char *)&v58 - v11;
  uint64_t v12 = type metadata accessor for URL();
  uint64_t v59 = *(uint64_t **)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<URL, Error>);
  uint64_t v64 = *(void *)(v15 - 8);
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v66 = (uint64_t)&v58 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v65 = (uint64_t)&v58 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v58 - v21;
  uint64_t v63 = v23;
  __chkstk_darwin(v20);
  uint64_t v25 = (uint64_t *)((char *)&v58 - v24);
  uint64_t v71 = a1;
  uint64_t v26 = Album.catalogID.getter();
  uint64_t v69 = a3;
  uint64_t v70 = a4;
  if (v27)
  {
    static ClassicalBridge.generatePrestoURL(type:storeAdamID:)(1, v26, v27, (uint64_t)v14);
    swift_bridgeObjectRelease();
    ((void (*)(uint64_t *, char *, uint64_t))v59[4])(v25, v14, v12);
    uint64_t v30 = v62;
  }
  else
  {
    lazy protocol witness table accessor for type ClassicalBridge.Error and conformance ClassicalBridge.Error();
    uint64_t v28 = swift_allocError();
    *(void *)uint64_t v29 = 2;
    *(void *)(v29 + 8) = 0;
    *(void *)(v29 + 16) = 0;
    *(void *)(v29 + 24) = 0;
    *(unsigned char *)(v29 + 32) = 2;
    swift_willThrow();
    uint64_t v30 = v62;
    *uint64_t v25 = v28;
  }
  uint64_t v61 = v22;
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v30, v71, v7);
  outlined init with copy of (String, Any)((uint64_t)v25, (uint64_t)v22, &demangling cache variable for type metadata for Result<URL, Error>);
  uint64_t v31 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v32 = (v31 + 16) & ~v31;
  uint64_t v33 = v7;
  uint64_t v59 = v25;
  uint64_t v60 = v7;
  uint64_t v34 = v63;
  uint64_t v35 = *(unsigned __int8 *)(v64 + 80);
  uint64_t v36 = v8;
  uint64_t v37 = (v72 + v35 + v32) & ~v35;
  uint64_t v62 = (char *)(v35 | 7 | v31);
  uint64_t v38 = swift_allocObject();
  uint64_t v39 = v38 + v32;
  uint64_t v40 = v38;
  uint64_t v64 = v38;
  uint64_t v41 = *(void (**)(uint64_t, char *, uint64_t))(v36 + 32);
  v41(v39, v30, v33);
  outlined init with take of PresentationSource?((uint64_t)v61, v40 + v37, &demangling cache variable for type metadata for Result<URL, Error>);
  uint64_t v42 = (uint64_t)v59;
  uint64_t v43 = v65;
  outlined init with copy of (String, Any)((uint64_t)v59, v65, &demangling cache variable for type metadata for Result<URL, Error>);
  uint64_t v44 = (v35 + 16) & ~v35;
  uint64_t v45 = swift_allocObject();
  uint64_t v61 = (char *)v45;
  outlined init with take of PresentationSource?(v43, v45 + v44, &demangling cache variable for type metadata for Result<URL, Error>);
  outlined init with take of PresentationSource(v67, v45 + ((v34 + v44 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v46 = v66;
  outlined init with take of PresentationSource?(v42, v66, &demangling cache variable for type metadata for Result<URL, Error>);
  uint64_t v47 = v68;
  uint64_t v48 = v60;
  v41((uint64_t)v68, v71, v60);
  uint64_t v49 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?)
                  - 8);
  unint64_t v50 = (*(unsigned __int8 *)(v49 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80);
  unint64_t v51 = (*(void *)(v49 + 64) + v35 + v50) & ~v35;
  unint64_t v52 = (v34 + v31 + v51) & ~v31;
  uint64_t v53 = swift_allocObject();
  outlined init with take of PresentationSource?(v69, v53 + v50, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  outlined init with take of PresentationSource?(v46, v53 + v51, &demangling cache variable for type metadata for Result<URL, Error>);
  uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v41)(v53 + v52, v47, v48);
  uint64_t v55 = v70;
  uint64_t v56 = v64;
  *uint64_t v70 = partial apply for closure #1 in Actions.OpenInClassical.Context.init(album:presentationSource:metricsReportingContext:);
  v55[1] = (unint64_t (*)())v56;
  uint64_t v57 = (uint64_t)v61;
  v55[2] = (unint64_t (*)())&async function pointer to partial apply for closure #2 in Actions.OpenInClassical.Context.init(album:presentationSource:metricsReportingContext:);
  v55[3] = (unint64_t (*)())v57;
  v55[4] = (unint64_t (*)())&async function pointer to partial apply for closure #3 in Actions.OpenInClassical.Context.init(album:presentationSource:metricsReportingContext:);
  v55[5] = (unint64_t (*)())v53;
  return result;
}

unint64_t lazy protocol witness table accessor for type ClassicalBridge.Error and conformance ClassicalBridge.Error()
{
  unint64_t result = lazy protocol witness table cache variable for type ClassicalBridge.Error and conformance ClassicalBridge.Error;
  if (!lazy protocol witness table cache variable for type ClassicalBridge.Error and conformance ClassicalBridge.Error)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ClassicalBridge.Error and conformance ClassicalBridge.Error);
  }
  return result;
}

unint64_t closure #1 in Actions.OpenInClassical.Context.init(album:presentationSource:metricsReportingContext:)(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = 0xD000000000000021;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<URL, Error>);
  __chkstk_darwin(v4);
  uint64_t v6 = (void *)((char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (Album.isClassicalExperienceAvailable.getter())
  {
    outlined init with copy of (String, Any)(a2, (uint64_t)v6, &demangling cache variable for type metadata for Result<URL, Error>);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = *v6;
      uint64_t v12 = 0;
      unint64_t v13 = 0xE000000000000000;
      _StringGuts.grow(_:)(43);
      v8._uint64_t countAndFlagsBits = 0xD000000000000028;
      v8._object = (void *)0x80000001004684A0;
      String.append(_:)(v8);
      v11[1] = v7;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
      _print_unlocked<A, B>(_:_:)();
      v9._uint64_t countAndFlagsBits = 41;
      v9._object = (void *)0xE100000000000000;
      String.append(_:)(v9);
      swift_errorRelease();
      return v12;
    }
    else
    {
      outlined destroy of TaskPriority?((uint64_t)v6, &demangling cache variable for type metadata for Result<URL, Error>);
      return 0;
    }
  }
  return v3;
}

uint64_t sub_100078A20()
{
  uint64_t v1 = type metadata accessor for Album();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = v3 + *(void *)(v2 + 64);
  uint64_t v5 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<URL, Error>)
                 - 8);
  unint64_t v6 = (v4 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_errorRelease();
  }
  else
  {
    uint64_t v7 = type metadata accessor for URL();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v0 + v6, v7);
  }

  return swift_deallocObject();
}

unint64_t partial apply for closure #1 in Actions.OpenInClassical.Context.init(album:presentationSource:metricsReportingContext:)()
{
  uint64_t v1 = *(void *)(type metadata accessor for Album() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = v2 + *(void *)(v1 + 64);
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<URL, Error>)
                 - 8);
  uint64_t v5 = v0 + ((v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return closure #1 in Actions.OpenInClassical.Context.init(album:presentationSource:metricsReportingContext:)(v0 + v2, v5);
}

uint64_t closure #2 in Actions.OpenInClassical.Context.init(album:presentationSource:metricsReportingContext:)(uint64_t a1, uint64_t a2)
{
  void v2[2] = a1;
  v2[3] = a2;
  v2[4] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<URL, Error>);
  v2[5] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for URL();
  v2[6] = v3;
  v2[7] = *(void *)(v3 - 8);
  v2[8] = swift_task_alloc();
  type metadata accessor for MainActor();
  v2[9] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[10] = v5;
  v2[11] = v4;
  return _swift_task_switch(closure #2 in Actions.OpenInClassical.Context.init(album:presentationSource:metricsReportingContext:), v5, v4);
}

uint64_t closure #2 in Actions.OpenInClassical.Context.init(album:presentationSource:metricsReportingContext:)()
{
  outlined init with copy of (String, Any)(v0[2], v0[5], &demangling cache variable for type metadata for Result<URL, Error>);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v1 = v0[5];
    swift_release();
    outlined destroy of TaskPriority?(v1, &demangling cache variable for type metadata for Result<URL, Error>);
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v2 = (uint64_t (*)(void))v0[1];
    return v2();
  }
  else
  {
    (*(void (**)(void, void, void))(v0[7] + 32))(v0[8], v0[5], v0[6]);
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    v0[12] = Strong;
    uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&async function pointer to specialized static ClassicalBridge.openPrestoOrStoreSheet(withURL:viewController:)
                                                  + async function pointer to specialized static ClassicalBridge.openPrestoOrStoreSheet(withURL:viewController:));
    uint64_t v5 = (void *)swift_task_alloc();
    v0[13] = v5;
    *uint64_t v5 = v0;
    v5[1] = closure #2 in Actions.OpenInClassical.Context.init(album:presentationSource:metricsReportingContext:);
    uint64_t v6 = v0[8];
    return v7(v6, Strong);
  }
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v8;

  unint64_t v2 = *v1;
  uint64_t v3 = *(void **)(*v1 + 96);
  *(void *)(*v1 + 112) = v0;
  swift_task_dealloc();

  uint64_t v4 = *(void *)(v2 + 88);
  uint64_t v5 = *(void *)(v2 + 80);
  if (v0) {
    uint64_t v6 = closure #2 in Actions.OpenInClassical.Context.init(album:presentationSource:metricsReportingContext:);
  }
  else {
    uint64_t v6 = closure #2 in Actions.OpenInClassical.Context.init(album:presentationSource:metricsReportingContext:);
  }
  return _swift_task_switch(v6, v5, v4);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);
  uint64_t v6;

  uint64_t v1 = v0[8];
  unint64_t v2 = v0[6];
  uint64_t v3 = v0[7];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);
  uint64_t v6;

  uint64_t v1 = v0[8];
  unint64_t v2 = v0[6];
  uint64_t v3 = v0[7];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1000791A4()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<URL, Error>)
                 - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = v0 + v2;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_errorRelease();
  }
  else
  {
    uint64_t v5 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  uint64_t v6 = v0 + v3;
  swift_unknownObjectWeakDestroy();
  int v7 = *(unsigned __int8 *)(v0 + v3 + 48);
  if (v7 != 255) {
    outlined consume of PresentationSource.Position(*(id *)(v6 + 8), *(void *)(v6 + 16), *(void *)(v6 + 24), *(void *)(v6 + 32), *(void *)(v6 + 40), v7);
  }
  if (*(void *)(v6 + 56)) {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t partial apply for closure #2 in Actions.OpenInClassical.Context.init(album:presentationSource:metricsReportingContext:)()
{
  uint64_t v2 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<URL, Error>)
                 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = v0 + v3;
  uint64_t v5 = v0 + ((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  *uint64_t v6 = v1;
  v6[1] = partial apply for closure #1 in static MusicEngagementExtension.performRequest(with:completion:);
  return closure #2 in Actions.OpenInClassical.Context.init(album:presentationSource:metricsReportingContext:)(v4, v5);
}

uint64_t closure #3 in Actions.OpenInClassical.Context.init(album:presentationSource:metricsReportingContext:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[10] = a2;
  v3[11] = a3;
  v3[9] = a1;
  v3[12] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<URL, Error>);
  v3[13] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  v3[14] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  v3[15] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for Actions.MetricsReportingContext();
  v3[16] = v4;
  v3[17] = *(void *)(v4 - 8);
  v3[18] = swift_task_alloc();
  return _swift_task_switch(closure #3 in Actions.OpenInClassical.Context.init(album:presentationSource:metricsReportingContext:), 0, 0);
}

uint64_t closure #3 in Actions.OpenInClassical.Context.init(album:presentationSource:metricsReportingContext:)()
{
  uint64_t v1 = *(void *)(v0 + 128);
  uint64_t v2 = *(void *)(v0 + 136);
  uint64_t v3 = *(void *)(v0 + 120);
  outlined init with copy of (String, Any)(*(void *)(v0 + 72), v3, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    outlined destroy of TaskPriority?(*(void *)(v0 + 120), &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
  else
  {
    uint64_t v6 = *(void *)(v0 + 104);
    uint64_t v7 = *(void *)(v0 + 80);
    outlined init with take of Actions.MetricsReportingContext(*(void *)(v0 + 120), *(void *)(v0 + 144));
    outlined init with copy of (String, Any)(v7, v6, &demangling cache variable for type metadata for Result<URL, Error>);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      outlined destroy of TaskPriority?(*(void *)(v0 + 104), &demangling cache variable for type metadata for Result<URL, Error>);
      uint64_t v8 = type metadata accessor for URL();
      uint64_t v9 = *(void *)(v8 - 8);
      uint64_t v10 = 1;
    }
    else
    {
      uint64_t v12 = *(void *)(v0 + 104);
      uint64_t v11 = *(void *)(v0 + 112);
      uint64_t v8 = type metadata accessor for URL();
      uint64_t v9 = *(void *)(v8 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))(v11, v12, v8);
      uint64_t v10 = 0;
    }
    (*(void (**)(void, uint64_t, uint64_t, uint64_t))(v9 + 56))(*(void *)(v0 + 112), v10, 1, v8);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<MetricsEvent.Click.ActionDetails.Key>);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100493400;
    *(void *)(inited + 32) = specialized MusicItem.metricsContentType.getter();
    *(void *)(inited + 40) = v14;
    *(unsigned char *)(inited + 48) = 0;
    *(void *)(v0 + 152) = specialized MetricsEvent.Click.ActionDetails.init(_:)(inited);
    *(void *)(v0 + 160) = v15;
    *(void *)(v0 + 168) = v16;
    *(_WORD *)(v0 + 184) = v17;
    swift_setDeallocating();
    swift_arrayDestroy();
    type metadata accessor for MainActor();
    *(void *)(v0 + 176) = static MainActor.shared.getter();
    uint64_t v19 = dispatch thunk of Actor.unownedExecutor.getter();
    return _swift_task_switch(closure #3 in Actions.OpenInClassical.Context.init(album:presentationSource:metricsReportingContext:), v19, v18);
  }
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  uint64_t v1 = *(void *)(v0 + 168);
  uint64_t v3 = *(void **)(v0 + 152);
  uint64_t v2 = *(void *)(v0 + 160);
  uint64_t v4 = *(uint64_t **)(v0 + 144);
  uint64_t v5 = *(void *)(v0 + 112);
  uint64_t v6 = *(unsigned __int16 *)(v0 + 184);
  swift_release();
  specialized static Actions.reportClickEvent(targetIdentifier:targetType:actionType:actionURL:actionDetails:reportingContext:)(0xD000000000000014, 0x8000000100468450, 5, 23, v5, v3, v2, v1, v6, v4);
  outlined consume of MetricsEvent.Click.ActionDetails(v3, v2, v1, v6, SBYTE1(v6));
  return _swift_task_switch(closure #3 in Actions.OpenInClassical.Context.init(album:presentationSource:metricsReportingContext:), 0, 0);
}

{
  void *v0;
  uint64_t v1;
  uint64_t (*v2)(void);
  uint64_t v4;

  uint64_t v1 = v0[18];
  outlined destroy of TaskPriority?(v0[14], &demangling cache variable for type metadata for URL?);
  outlined destroy of Actions.MetricsReportingContext(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_1000799AC()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?)
                 - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<URL, Error>)
                 - 8);
  unint64_t v5 = (v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v21 = *(void *)(v4 + 64);
  uint64_t v6 = type metadata accessor for Album();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = v0 + v2;
  uint64_t v10 = type metadata accessor for Actions.MetricsReportingContext();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v9, 1, v10))
  {
    unint64_t v19 = v5;
    uint64_t v20 = v6;
    if (*(void *)(v9 + 8) >= 0xBuLL) {
      swift_bridgeObjectRelease();
    }
    uint64_t v11 = v9 + *(int *)(v10 + 20);
    uint64_t v12 = type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v11, 1, v12))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v18 = v11 + *(int *)(v12 + 24);
      uint64_t v13 = type metadata accessor for URL();
      uint64_t v16 = *(void *)(v13 - 8);
      uint64_t v17 = v13;
      if (!(*(unsigned int (**)(uint64_t, uint64_t))(v16 + 48))(v18, 1)) {
        (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v18, v17);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v5 = v19;
    uint64_t v6 = v20;
  }
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_errorRelease();
  }
  else
  {
    uint64_t v14 = type metadata accessor for URL();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v0 + v5, v14);
  }
  (*(void (**)(unint64_t, uint64_t))(v7 + 8))(v0 + ((v5 + v21 + v8) & ~v8), v6);

  return swift_deallocObject();
}

uint64_t partial apply for closure #3 in Actions.OpenInClassical.Context.init(album:presentationSource:metricsReportingContext:)()
{
  uint64_t v2 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?)
                 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v5 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<URL, Error>)
                 - 8);
  unint64_t v6 = (v3 + v4 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = *(unsigned __int8 *)(*(void *)(type metadata accessor for Album() - 8) + 80);
  unint64_t v9 = v6 + v7 + v8;
  uint64_t v10 = v0 + v3;
  uint64_t v11 = v0 + v6;
  uint64_t v12 = v0 + (v9 & ~v8);
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v13;
  *uint64_t v13 = v1;
  v13[1] = closure #3 in static Actions.ReportConcern.action(context:);
  return closure #3 in Actions.OpenInClassical.Context.init(album:presentationSource:metricsReportingContext:)(v10, v11, v12);
}

uint64_t (*Actions.OpenInClassical.Context.menuItemImage.getter())()
{
  uint64_t v0 = swift_allocObject();
  strcpy((char *)(v0 + 16), "arrow.up.right");
  *(unsigned char *)(v0 + 31) = -18;
  uint64_t v1 = swift_allocObject();
  strcpy((char *)(v1 + 16), "arrow.up.right");
  *(unsigned char *)(v1 + 31) = -18;
  return partial apply for closure #1 in ActionMenuItemImage.init(systemName:);
}

uint64_t (*protocol witness for ActionMenuItemConfiguring.menuItemImage.getter in conformance Actions.OpenInClassical.Context())()
{
  uint64_t v0 = swift_allocObject();
  strcpy((char *)(v0 + 16), "arrow.up.right");
  *(unsigned char *)(v0 + 31) = -18;
  uint64_t v1 = swift_allocObject();
  strcpy((char *)(v1 + 16), "arrow.up.right");
  *(unsigned char *)(v1 + 31) = -18;
  return closure #1 in ActionMenuItemImage.init(systemName:)partial apply;
}

uint64_t specialized Actions.OpenInClassical.Context.menuItemTitle.getter()
{
  uint64_t v0 = type metadata accessor for Locale();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = type metadata accessor for String.LocalizationValue();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  uint64_t v5 = &v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v3);
  uint64_t v7 = &v11[-v6];
  String.LocalizationValue.init(stringLiteral:)();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v2 + 16))(v5, v7, v1);
  if (one-time initialization token for module != -1) {
    swift_once();
  }
  id v8 = (id)static NSBundle.module;
  static Locale.current.getter();
  uint64_t v9 = String.init(localized:table:bundle:locale:comment:)();
  (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v7, v1);
  return v9;
}

uint64_t sub_10007A214()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

ValueMetadata *type metadata accessor for Actions.OpenInClassical()
{
  return &type metadata for Actions.OpenInClassical;
}

ValueMetadata *type metadata accessor for Actions.OpenInClassical.Context()
{
  return &type metadata for Actions.OpenInClassical.Context;
}

id Actions.CreateStation.Context.init<A>(item:library:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, unint64_t (**a9)()@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v56 = a7;
  uint64_t v57 = a8;
  uint64_t v52 = a5;
  uint64_t v53 = a6;
  uint64_t v55 = a4;
  id v62 = a3;
  uint64_t v50 = a2;
  uint64_t v59 = a9;
  uint64_t v58 = a10;
  uint64_t v13 = *(void *)(a11 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  uint64_t v61 = a12;
  uint64_t v15 = __chkstk_darwin(a1);
  unint64_t v51 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v48 = (char *)&v47 - v17;
  __chkstk_darwin(v16);
  unint64_t v19 = (char *)&v47 - v18;
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  uint64_t v49 = a1;
  v20((char *)&v47 - v18, a1, a11);
  uint64_t v21 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v60 = v21 | 7;
  uint64_t v22 = (unint64_t (*)())swift_allocObject();
  uint64_t v54 = v22;
  *((void *)v22 + 2) = a11;
  *((void *)v22 + 3) = a12;
  id v23 = v62;
  *((void *)v22 + 4) = v50;
  *((void *)v22 + 5) = v23;
  uint64_t v47 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  uint64_t v50 = v13 + 32;
  v47((char *)v22 + ((v21 + 48) & ~v21), v19, a11);
  uint64_t v24 = v48;
  v20(v48, a1, a11);
  uint64_t v25 = (v21 + 32) & ~v21;
  unint64_t v26 = (v14 + v25 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v27 = (v26 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v28 = (v27 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v29 = swift_allocObject();
  uint64_t v30 = v61;
  *(void *)(v29 + 16) = a11;
  *(void *)(v29 + 24) = v30;
  uint64_t v31 = v29 + v25;
  uint64_t v32 = (void (*)(char *, uint64_t, uint64_t))v47;
  v47((char *)v31, v24, a11);
  *(void *)(v29 + v26) = v62;
  uint64_t v33 = (void *)(v29 + v27);
  uint64_t v34 = v53;
  void *v33 = v52;
  v33[1] = v34;
  uint64_t v35 = (void *)(v29 + v28);
  uint64_t v36 = v55;
  uint64_t v37 = v57;
  void *v35 = v56;
  v35[1] = v37;
  outlined init with take of PresentationSource?(v36, v29 + ((v28 + 23) & 0xFFFFFFFFFFFFFFF8), &demangling cache variable for type metadata for NoticePresenting?);
  uint64_t v38 = v51;
  v32(v51, v49, a11);
  uint64_t v39 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?)
                  - 8);
  unint64_t v40 = (*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
  unint64_t v41 = (*(void *)(v39 + 64) + v21 + v40) & ~v21;
  uint64_t v42 = swift_allocObject();
  uint64_t v43 = v61;
  *(void *)(v42 + 16) = a11;
  *(void *)(v42 + 24) = v43;
  outlined init with take of PresentationSource?(v58, v42 + v40, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  v32((char *)(v42 + v41), (uint64_t)v38, a11);
  id result = v62;
  uint64_t v45 = v59;
  uint64_t v46 = v54;
  uint64_t *v59 = partial apply for closure #1 in Actions.CreateStation.Context.init<A>(item:library:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:);
  v45[1] = v46;
  long long v45[2] = (unint64_t (*)())&async function pointer to partial apply for closure #2 in Actions.CreateStation.Context.init<A>(item:library:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:);
  v45[3] = (unint64_t (*)())v29;
  v45[4] = (unint64_t (*)())&async function pointer to partial apply for closure #3 in Actions.CreateStation.Context.init<A>(item:library:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:);
  v45[5] = (unint64_t (*)())v42;
  return result;
}

uint64_t static Actions.CreateStation.action(context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return static Actions.ShowSongCredits.action(context:)(a1, 5, (uint64_t)closure #1 in static Actions.AddToLibrary.action(context:), (uint64_t)&async function pointer to closure #2 in static Actions.CreateStation.action(context:), (uint64_t)&async function pointer to closure #3 in static Actions.CreateStation.action(context:), a2);
}

uint64_t Actions.Play.Context.init<A>(item:playbackIntent:playbackController:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, unint64_t (**a9)()@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v84 = a8;
  long long v85 = a9;
  uint64_t v81 = a6;
  uint64_t v82 = a7;
  uint64_t v78 = a4;
  uint64_t v79 = a5;
  uint64_t v77 = a2;
  uint64_t v13 = *(void *)(a10 - 8);
  uint64_t v87 = a11;
  uint64_t v14 = __chkstk_darwin(a1);
  long long v83 = (char *)&v66 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v14);
  unint64_t v76 = (char *)&v66 - v17;
  uint64_t v86 = v18;
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v66 - v19;
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicPlayer.PlayabilityStatus?);
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(void *)(v22 + 64);
  uint64_t v24 = __chkstk_darwin(v21 - 8);
  uint64_t v75 = (uint64_t)&v66 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __chkstk_darwin(v24);
  unint64_t v27 = (void (*)(uint64_t, char *, uint64_t))((char *)&v66 - v26);
  __chkstk_darwin(v25);
  uint64_t v29 = (char *)&v66 - v28;
  uint64_t v80 = a3;
  uint64_t v30 = (void *)(a3 + OBJC_IVAR____TtC9MusicCore18PlaybackController_player);
  swift_beginAccess();
  if (*v30)
  {
    swift_retain();
    Player.state<A>(for:)(a1);
    swift_release();
    MusicItemState.playabilityStatus.getter();
    swift_release();
    uint64_t v31 = type metadata accessor for MusicPlayer.PlayabilityStatus();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v29, 0, 1, v31);
  }
  else
  {
    uint64_t v32 = type metadata accessor for MusicPlayer.PlayabilityStatus();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v29, 1, 1, v32);
  }
  outlined init with copy of (String, Any)((uint64_t)v29, (uint64_t)v27, &demangling cache variable for type metadata for MusicPlayer.PlayabilityStatus?);
  unsigned __int8 v68 = v27;
  uint64_t v33 = *(void (**)(char *, unint64_t, uint64_t))(v13 + 16);
  v33(v20, a1, a10);
  uint64_t v34 = *(unsigned __int8 *)(v22 + 80);
  uint64_t v67 = v29;
  uint64_t v66 = v20;
  uint64_t v35 = (v34 + 32) & ~v34;
  uint64_t v36 = *(unsigned __int8 *)(v13 + 80);
  unint64_t v70 = a1;
  uint64_t v71 = v35;
  unint64_t v37 = a1;
  uint64_t v38 = (v23 + v36 + v35) & ~v36;
  uint64_t v39 = v38 + v86;
  uint64_t v40 = v38;
  uint64_t v72 = v38;
  uint64_t v73 = v36;
  uint64_t v69 = v36 | v34 | 7;
  uint64_t v41 = swift_allocObject();
  *(void *)(v41 + 16) = a10;
  uint64_t v42 = v87;
  *(void *)(v41 + 24) = v87;
  uint64_t v43 = v41;
  uint64_t v74 = v41;
  outlined init with take of PresentationSource?((uint64_t)v68, v41 + v35, &demangling cache variable for type metadata for MusicPlayer.PlayabilityStatus?);
  unsigned __int8 v68 = *(void (**)(uint64_t, char *, uint64_t))(v13 + 32);
  v68(v43 + v40, v66, a10);
  uint64_t v44 = v75;
  outlined init with take of PresentationSource?((uint64_t)v67, v75, &demangling cache variable for type metadata for MusicPlayer.PlayabilityStatus?);
  uint64_t v45 = v76;
  v33(v76, v37, a10);
  unint64_t v46 = (v39 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v47 = (v46 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v48 = (v47 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v49 = swift_allocObject();
  *(void *)(v49 + 16) = a10;
  *(void *)(v49 + 24) = v42;
  outlined init with take of PresentationSource?(v44, v49 + v71, &demangling cache variable for type metadata for MusicPlayer.PlayabilityStatus?);
  uint64_t v50 = (void (*)(char *, unint64_t, uint64_t))v68;
  v68(v49 + v72, v45, a10);
  uint64_t v51 = v78;
  *(void *)(v49 + v46) = v77;
  uint64_t v52 = (void *)(v49 + v47);
  uint64_t v53 = v79;
  void *v52 = v51;
  v52[1] = v53;
  uint64_t v54 = (void *)(v49 + v48);
  uint64_t v55 = v82;
  uint64_t v56 = v83;
  void *v54 = v81;
  v54[1] = v55;
  *(void *)(v49 + ((v48 + 23) & 0xFFFFFFFFFFFFFFF8)) = v80;
  v50(v56, v70, a10);
  uint64_t v57 = (uint64_t (*)(unint64_t, char *, uint64_t))v50;
  uint64_t v58 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?)
                  - 8);
  unint64_t v59 = (*(unsigned __int8 *)(v58 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80);
  unint64_t v60 = (*(void *)(v58 + 64) + v73 + v59) & ~v73;
  uint64_t v61 = swift_allocObject();
  uint64_t v62 = v87;
  *(void *)(v61 + 16) = a10;
  *(void *)(v61 + 24) = v62;
  outlined init with take of PresentationSource?(v84, v61 + v59, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  uint64_t result = v57(v61 + v60, v56, a10);
  uint64_t v64 = v85;
  uint64_t v65 = v74;
  *long long v85 = partial apply for closure #1 in Actions.Play.Context.init<A>(item:playbackIntent:playbackController:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:);
  v64[1] = (unint64_t (*)())v65;
  v64[2] = (unint64_t (*)())&async function pointer to partial apply for closure #2 in Actions.Play.Context.init<A>(item:playbackIntent:playbackController:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:);
  v64[3] = (unint64_t (*)())v49;
  v64[4] = (unint64_t (*)())&async function pointer to partial apply for closure #3 in Actions.Play.Context.init<A>(item:playbackIntent:playbackController:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:);
  v64[5] = (unint64_t (*)())v61;
  return result;
}

uint64_t static Actions.Play.action(context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return static Actions.ShowSongCredits.action(context:)(a1, 20, (uint64_t)closure #1 in static Actions.ShowSongCredits.action(context:), (uint64_t)&async function pointer to closure #2 in static Actions.Play.action(context:), (uint64_t)&async function pointer to closure #3 in static Actions.Play.action(context:), a2);
}

id Actions.Queue.Context.init<A>(item:playbackIntent:location:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, void *a8@<X8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v74 = a6;
  uint64_t v75 = a7;
  uint64_t v73 = a5;
  uint64_t v76 = a4;
  id v83 = a2;
  uint64_t v13 = a1;
  uint64_t v15 = *(void *)(a11 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  uint64_t v77 = a10;
  uint64_t v72 = a9;
  uint64_t v17 = __chkstk_darwin(a1);
  uint64_t v81 = (char *)&v67 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v67 - v19;
  uint64_t v71 = v21;
  uint64_t v78 = a8;
  uint64_t v79 = v18;
  id v82 = v22;
  uint64_t v80 = a12;
  if (v21 == (void *)3
    && (uint64_t v23 = (void *)(a3 + OBJC_IVAR____TtC9MusicCore18PlaybackController_player), swift_beginAccess(), *v23))
  {
    uint64_t v24 = v20;
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    swift_release();
    id v25 = v84;
    if (v84)
    {
      id v26 = [v84 tracklist];

      id v27 = [v26 insertCommand];
      if (v27)
      {
        id v28 = [v27 insertAfterLastSection];
        swift_unknownObjectRelease();
        if (v28)
        {
          id v29 = [v28 section];
          swift_unknownObjectRelease();
          id v30 = [v29 metadataObject];

          if (v30)
          {
            id v31 = [v30 flattenedGenericObject];

            uint64_t v20 = v24;
            if (!v31) {
              goto LABEL_20;
            }
            id v32 = [v31 anyObject];

            if (!v32) {
              goto LABEL_20;
            }
            self;
            uint64_t v33 = swift_dynamicCastObjCClass();
            if (v33)
            {
              uint64_t v34 = (void *)v33;
              id v35 = v32;
              id v36 = [v34 title];
            }
            else
            {
              self;
              uint64_t v61 = swift_dynamicCastObjCClass();
              if (!v61)
              {

                goto LABEL_20;
              }
              uint64_t v62 = (void *)v61;
              id v35 = v32;
              id v36 = [v62 name];
            }
            id v63 = v36;
            if (v63)
            {
              uint64_t v64 = v63;
              uint64_t v65 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              uint64_t v68 = v66;
              uint64_t v69 = v65;

LABEL_21:
              uint64_t v13 = v79;
              goto LABEL_13;
            }

LABEL_20:
            uint64_t v68 = 0;
            uint64_t v69 = 0;
            goto LABEL_21;
          }
        }
      }
    }
    uint64_t v68 = 0;
    uint64_t v69 = 0;
    uint64_t v13 = v79;
    uint64_t v20 = v24;
  }
  else
  {
    uint64_t v68 = 0;
    uint64_t v69 = 0;
  }
LABEL_13:
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v20, v13, a11);
  uint64_t v37 = *(unsigned __int8 *)(v15 + 80);
  uint64_t v38 = v20;
  uint64_t v39 = (v37 + 40) & ~v37;
  uint64_t v70 = v16 + 7;
  unint64_t v40 = (v16 + 7 + v39) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v41 = (v40 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v42 = (char *)swift_allocObject();
  uint64_t v43 = v80;
  *((void *)v42 + 2) = a11;
  *((void *)v42 + 3) = v43;
  id v44 = v82;
  *((void *)v42 + 4) = v82;
  uint64_t v45 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
  v45(&v42[v39], v38, a11);
  unint64_t v46 = v71;
  *(void *)&v42[v40] = v71;
  id v47 = v83;
  *(void *)&v42[v41] = v83;
  unint64_t v48 = (void *)swift_allocObject();
  uint64_t v49 = v73;
  v48[2] = v47;
  long long v48[3] = v49;
  uint64_t v50 = v75;
  v48[4] = v74;
  v48[5] = v50;
  v48[6] = v72;
  v48[7] = v44;
  v48[8] = v46;
  outlined init with take of PresentationSource?(v76, (uint64_t)(v48 + 9), &demangling cache variable for type metadata for NoticePresenting?);
  v45(v81, (char *)v79, a11);
  uint64_t v51 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?)
                  - 8);
  unint64_t v52 = (*(unsigned __int8 *)(v51 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
  unint64_t v53 = (*(void *)(v51 + 64) + v37 + v52) & ~v37;
  unint64_t v54 = (v70 + v53) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v55 = swift_allocObject();
  uint64_t v56 = v80;
  *(void *)(v55 + 16) = a11;
  *(void *)(v55 + 24) = v56;
  outlined init with take of PresentationSource?(v77, v55 + v52, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  v45((char *)(v55 + v53), v81, a11);
  *(void *)(v55 + v54) = v46;
  outlined copy of Player.InsertCommand.Location(v46);
  outlined copy of Player.InsertCommand.Location(v46);
  outlined copy of Player.InsertCommand.Location(v46);
  id v57 = v82;
  id result = v83;
  unint64_t v59 = v78;
  uint64_t v60 = v69;
  *uint64_t v78 = v46;
  v59[1] = v60;
  v59[2] = v68;
  v59[3] = partial apply for closure #1 in Actions.Queue.Context.init<A>(item:playbackIntent:location:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:);
  v59[4] = v42;
  v59[5] = &async function pointer to partial apply for closure #2 in Actions.Queue.Context.init<A>(item:playbackIntent:location:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:);
  v59[6] = v48;
  v59[7] = &async function pointer to partial apply for closure #3 in Actions.Queue.Context.init<A>(item:playbackIntent:location:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:);
  v59[8] = v55;
  return result;
}

__n128 static Actions.Queue.action(context:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  specialized static Actions.Queue.action(context:)(a1, (uint64_t)v7);
  long long v3 = v7[7];
  *(_OWORD *)(a2 + 96) = v7[6];
  *(_OWORD *)(a2 + 112) = v3;
  *(void *)(a2 + 128) = v8;
  long long v4 = v7[3];
  *(_OWORD *)(a2 + 32) = v7[2];
  *(_OWORD *)(a2 + 48) = v4;
  long long v5 = v7[5];
  *(_OWORD *)(a2 + 64) = v7[4];
  *(_OWORD *)(a2 + 80) = v5;
  __n128 result = (__n128)v7[1];
  *(_OWORD *)a2 = v7[0];
  *(__n128 *)(a2 + 16) = result;
  return result;
}

uint64_t Actions.Preview.Context.init<A>(item:canPreview:preview:metricsReportingContext:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>)
{
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a4;
  *(void *)(v15 + 24) = a5;
  uint64_t v16 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?)
                  - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v18 = *(void *)(a7 - 8);
  unint64_t v19 = (v17 + *(void *)(v16 + 64) + *(unsigned __int8 *)(v18 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = a7;
  *(void *)(v20 + 24) = a8;
  outlined init with take of PresentationSource?(a6, v20 + v17, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v18 + 32))(v20 + v19, a1, a7);
  *a9 = a2;
  a9[1] = a3;
  a9[2] = &async function pointer to partial apply for thunk for @escaping @callee_guaranteed @Sendable () -> ();
  a9[3] = v15;
  a9[4] = &async function pointer to partial apply for closure #1 in Actions.Preview.Context.init<A>(item:canPreview:preview:metricsReportingContext:);
  a9[5] = v20;
  return result;
}

uint64_t closure #1 in Actions.Preview.Context.init<A>(item:canPreview:preview:metricsReportingContext:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[11] = a3;
  v4[12] = a4;
  v4[9] = a1;
  v4[10] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  v4[13] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  v4[14] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for Actions.MetricsReportingContext();
  v4[15] = v5;
  v4[16] = *(void *)(v5 - 8);
  v4[17] = swift_task_alloc();
  return _swift_task_switch(closure #1 in Actions.Preview.Context.init<A>(item:canPreview:preview:metricsReportingContext:), 0, 0);
}

uint64_t closure #1 in Actions.Preview.Context.init<A>(item:canPreview:preview:metricsReportingContext:)()
{
  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v2 = *(void *)(v0 + 128);
  uint64_t v3 = *(void *)(v0 + 112);
  outlined init with copy of (String, Any)(*(void *)(v0 + 72), v3, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    outlined destroy of TaskPriority?(*(void *)(v0 + 112), &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    long long v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
  else
  {
    uint64_t v6 = *(void *)(v0 + 104);
    uint64_t v7 = *(void *)(v0 + 88);
    outlined init with take of Actions.MetricsReportingContext(*(void *)(v0 + 112), *(void *)(v0 + 136), (uint64_t (*)(void))type metadata accessor for Actions.MetricsReportingContext);
    *(void *)(v0 + 144) = MusicItem.metricsTargetIdentifier.getter(v7);
    *(void *)(v0 + 152) = v8;
    uint64_t v9 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v6, 1, 1, v9);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<MetricsEvent.Click.ActionDetails.Key>);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100493400;
    *(void *)(inited + 32) = MusicItem.metricsContentType.getter();
    *(void *)(inited + 40) = v11;
    *(unsigned char *)(inited + 48) = 0;
    *(void *)(v0 + 160) = specialized MetricsEvent.Click.ActionDetails.init(_:)(inited);
    *(void *)(v0 + 168) = v12;
    *(void *)(v0 + 176) = v13;
    *(_WORD *)(v0 + 192) = v14;
    swift_setDeallocating();
    swift_arrayDestroy();
    type metadata accessor for MainActor();
    *(void *)(v0 + 184) = static MainActor.shared.getter();
    uint64_t v16 = dispatch thunk of Actor.unownedExecutor.getter();
    return _swift_task_switch(closure #1 in Actions.Preview.Context.init<A>(item:canPreview:preview:metricsReportingContext:), v16, v15);
  }
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  uint64_t v1 = *(void *)(v0 + 176);
  uint64_t v3 = *(void **)(v0 + 160);
  uint64_t v2 = *(void *)(v0 + 168);
  uint64_t v5 = *(void *)(v0 + 144);
  long long v4 = *(void *)(v0 + 152);
  uint64_t v6 = *(uint64_t **)(v0 + 136);
  uint64_t v7 = *(void *)(v0 + 104);
  uint64_t v8 = *(unsigned __int16 *)(v0 + 192);
  swift_release();
  specialized static Actions.reportClickEvent(targetIdentifier:targetType:actionType:actionURL:actionDetails:reportingContext:)(v5, v4, 5, 46, v7, v3, v2, v1, v8, v6);
  outlined consume of MetricsEvent.Click.ActionDetails(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease();
  outlined destroy of TaskPriority?(v7, &demangling cache variable for type metadata for URL?);
  return _swift_task_switch(closure #1 in Actions.Preview.Context.init<A>(item:canPreview:preview:metricsReportingContext:), 0, 0);
}

uint64_t static Actions.Preview.action(context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return static Actions.ShowSongCredits.action(context:)(a1, 33, (uint64_t)closure #1 in static Actions.ShowSongCredits.action(context:), (uint64_t)&async function pointer to closure #2 in static Actions.Preview.action(context:), (uint64_t)&async function pointer to closure #3 in static Actions.Preview.action(context:), a2);
}

uint64_t protocol witness for static ActionDefinition.action(context:) in conformance Actions.Preview@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return protocol witness for static ActionDefinition.action(context:) in conformance Actions.ShowSongCredits(a1, 33, (uint64_t)closure #1 in static Actions.ShowSongCredits.action(context:), (uint64_t)&async function pointer to closure #2 in static Actions.Preview.action(context:), (uint64_t)&async function pointer to closure #3 in static Actions.Preview.action(context:), a2);
}

uint64_t (*Actions.Preview.Context.menuItemImage.getter())()
{
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = 0x7269632E79616C70;
  *(void *)(v0 + 24) = 0xEB00000000656C63;
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = 0x7269632E79616C70;
  *(void *)(v1 + 24) = 0xEB00000000656C63;
  return partial apply for closure #1 in ActionMenuItemImage.init(systemName:);
}

uint64_t (*protocol witness for ActionMenuItemConfiguring.menuItemImage.getter in conformance Actions.Preview.Context())()
{
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = 0x7269632E79616C70;
  *(void *)(v0 + 24) = 0xEB00000000656C63;
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = 0x7269632E79616C70;
  *(void *)(v1 + 24) = 0xEB00000000656C63;
  return closure #1 in ActionMenuItemImage.init(systemName:)partial apply;
}

uint64_t protocol witness for static ActionDefinition.action(context:) in conformance Actions.CreateStation@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return protocol witness for static ActionDefinition.action(context:) in conformance Actions.ShowSongCredits(a1, 5, (uint64_t)closure #1 in static Actions.AddToLibrary.action(context:), (uint64_t)&async function pointer to closure #2 in static Actions.CreateStation.action(context:), (uint64_t)&async function pointer to closure #3 in static Actions.CreateStation.action(context:), a2);
}

unint64_t closure #1 in Actions.CreateStation.Context.init<A>(item:library:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v59 = a3;
  uint64_t v6 = type metadata accessor for Artist();
  uint64_t v50 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = type metadata accessor for MusicPlayer.PlayabilityStatus();
  uint64_t v54 = *(void *)(v55 - 8);
  __chkstk_darwin(v55);
  unint64_t v53 = (char *)v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = type metadata accessor for Song();
  uint64_t v52 = *(void *)(v56 - 8);
  uint64_t v10 = __chkstk_darwin(v56);
  uint64_t v12 = (char *)v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v51 = (char *)v46 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)v46 - v16;
  uint64_t v58 = *(void *)(a4 - 8);
  uint64_t v18 = __chkstk_darwin(v15);
  id v57 = (char *)v46 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)v46 - v20;
  type metadata accessor for MusicLibrary();
  static MusicLibrary.shared.getter();
  char v22 = static MusicLibrary.== infix(_:_:)();
  swift_release();
  if ((v22 & 1) == 0) {
    return 0xD000000000000016;
  }
  uint64_t v23 = (uint64_t *)(a2 + OBJC_IVAR____TtC9MusicCore18PlaybackController_player);
  swift_beginAccess();
  uint64_t v24 = *v23;
  if (!v24)
  {
    *(void *)&long long v60 = 0;
    *((void *)&v60 + 1) = 0xE000000000000000;
    _StringGuts.grow(_:)(34);
    v32._uint64_t countAndFlagsBits = 0xD000000000000020;
    v32._object = (void *)0x80000001004686B0;
    String.append(_:)(v32);
    DefaultStringInterpolation.appendInterpolation<A>(_:)();
    return v60;
  }
  id v25 = *(void (**)(char *, uint64_t, uint64_t))(v58 + 16);
  v25(v21, v59, a4);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CatalogIDProviding);
  if ((swift_dynamicCast() & 1) == 0)
  {
    uint64_t v62 = 0;
    long long v61 = 0u;
    long long v60 = 0u;
    outlined destroy of TaskPriority?((uint64_t)&v60, (uint64_t *)&demangling cache variable for type metadata for CatalogIDProviding?);
LABEL_12:
    swift_release();
    return 0xD00000000000001DLL;
  }
  uint64_t v49 = v24;
  outlined init with take of AlertPresenting(&v60, (uint64_t)&v69);
  uint64_t v26 = v70;
  uint64_t v27 = v71;
  __swift_project_boxed_opaque_existential_0Tm(&v69, v70);
  (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v26, v27);
  uint64_t v29 = v28;
  swift_bridgeObjectRelease();
  if (!v29)
  {
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v69);
    goto LABEL_12;
  }
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  int v30 = BYTE1(v60);
  long long v46[2] = v62;
  v46[3] = v63;
  v46[4] = v64;
  id v47 = v65;
  v46[1] = v67;
  v46[0] = v68;
  uint64_t v48 = *((void *)&v61 + 1);
  switch(v66)
  {
    case 2:
      swift_bridgeObjectRelease();
      goto LABEL_16;
    default:
      char v34 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if ((v34 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v69);
        return 0xD000000000000015;
      }
LABEL_16:
      char v35 = specialized Set.contains(_:)(4u, v48);
      uint64_t v36 = v49;
      if ((v35 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v69);
        return 0xD000000000000016;
      }
      if (v30)
      {
        uint64_t v37 = v57;
        v25(v57, v59, a4);
        uint64_t v38 = v56;
        if (swift_dynamicCast())
        {
          uint64_t v39 = v52;
          unint64_t v40 = v51;
          (*(void (**)(char *, char *, uint64_t))(v52 + 32))(v51, v17, v38);
          uint64_t v41 = MPCPlaybackEngine.state<A>(for:)();
          (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v12, v40, v38);
          __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicItemState<Song>);
          swift_allocObject();
          swift_retain();
          specialized MusicItemState.init(item:musicKitItemState:player:)((uint64_t)v12, v41, v36);
          swift_release();
          uint64_t v42 = swift_release();
          __chkstk_darwin(v42);
          v46[-2] = v38;
          v46[-1] = &protocol witness table for Song;
          uint64_t KeyPath = swift_getKeyPath();
          __chkstk_darwin(KeyPath);
          v46[-2] = v38;
          v46[-1] = &protocol witness table for Song;
          swift_getKeyPath();
          id v44 = v53;
          static Published.subscript.getter();
          swift_release();
          swift_release();
          swift_release();
          uint64_t v31 = MusicPlayer.PlayabilityStatus.actionSupportedStatus.getter();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          (*(void (**)(char *, uint64_t))(v54 + 8))(v44, v55);
          (*(void (**)(char *, uint64_t))(v39 + 8))(v40, v38);
          (*(void (**)(char *, uint64_t))(v58 + 8))(v37, a4);
          __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v69);
        }
        else
        {
          int v45 = swift_dynamicCast();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          if (v45)
          {
            (*(void (**)(char *, uint64_t))(v50 + 8))(v8, v6);
            (*(void (**)(char *, uint64_t))(v58 + 8))(v37, a4);
            __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v69);
            uint64_t v31 = 0;
          }
          else
          {
            (*(void (**)(char *, uint64_t))(v58 + 8))(v37, a4);
            __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v69);
            uint64_t v31 = 0xD000000000000010;
          }
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v69);
        uint64_t v31 = 0xD000000000000017;
      }
      break;
  }
  return v31;
}

uint64_t sub_10007C608()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

unint64_t partial apply for closure #1 in Actions.CreateStation.Context.init<A>(item:library:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)()
{
  return closure #1 in Actions.CreateStation.Context.init<A>(item:library:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)(v0[4], v0[5], (uint64_t)v0+ ((*(unsigned __int8 *)(*(void *)(v0[2] - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[2] - 8) + 80)), v0[2]);
}

uint64_t MusicPlayer.PlayabilityStatus.actionSupportedStatus.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for MusicPlayer.PlayabilityStatus.UnplayableReason();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for MusicPlayer.PlayabilityStatus();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v1, v6);
  int v10 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if (v10 == enum case for MusicPlayer.PlayabilityStatus.unplayable(_:))
  {
    (*(void (**)(char *, uint64_t))(v7 + 96))(v9, v6);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v9, v2);
    uint64_t v17 = 0;
    unint64_t v18 = 0xE000000000000000;
    _print_unlocked<A, B>(_:_:)();
    uint64_t v11 = v17;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  else if (v10 == enum case for MusicPlayer.PlayabilityStatus.playable(_:))
  {
    return 0;
  }
  else
  {
    if (one-time initialization token for actions != -1) {
      swift_once();
    }
    uint64_t v12 = type metadata accessor for Logger();
    __swift_project_value_buffer(v12, (uint64_t)static Logger.actions);
    uint64_t v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v15 = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "Unknown playability status", v15, 2u);
      swift_slowDealloc();
    }

    uint64_t v17 = 0;
    unint64_t v18 = 0xE000000000000000;
    _print_unlocked<A, B>(_:_:)();
    uint64_t v11 = v17;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  return v11;
}

uint64_t closure #2 in Actions.CreateStation.Context.init<A>(item:library:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[44] = a7;
  v8[45] = a8;
  v8[42] = a5;
  v8[43] = a6;
  v8[40] = a3;
  v8[41] = a4;
  v8[38] = a1;
  v8[39] = a2;
  v8[46] = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
  v8[47] = swift_task_alloc();
  v8[48] = type metadata accessor for PlaybackIntentDescriptor(0);
  v8[49] = swift_task_alloc();
  v8[50] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicPlaybackIntentDescriptor?);
  v8[51] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for MusicPlaybackIntentDescriptor();
  v8[52] = v10;
  v8[53] = *(void *)(v10 - 8);
  v8[54] = swift_task_alloc();
  v8[55] = type metadata accessor for Notice.Variant(0);
  v8[56] = swift_task_alloc();
  type metadata accessor for Notice(0);
  v8[57] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Song?);
  v8[58] = swift_task_alloc();
  v8[59] = *(void *)(a8 - 8);
  v8[60] = swift_task_alloc();
  v8[61] = swift_task_alloc();
  uint64_t v11 = type metadata accessor for Song();
  v8[62] = v11;
  v8[63] = *(void *)(v11 - 8);
  v8[64] = swift_task_alloc();
  return _swift_task_switch(closure #2 in Actions.CreateStation.Context.init<A>(item:library:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:), 0, 0);
}

uint64_t closure #2 in Actions.CreateStation.Context.init<A>(item:library:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)()
{
  uint64_t v1 = *(void *)(v0 + 504);
  uint64_t v2 = *(void (**)(void, void, void))(*(void *)(v0 + 472) + 16);
  v2(*(void *)(v0 + 488), *(void *)(v0 + 304), *(void *)(v0 + 360));
  char v3 = swift_dynamicCast();
  uint64_t v4 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v1 + 56);
  if ((v3 & 1) == 0)
  {
    uint64_t v25 = *(void *)(v0 + 464);
    v4(v25, 1, 1, *(void *)(v0 + 496));
    outlined destroy of TaskPriority?(v25, &demangling cache variable for type metadata for Song?);
    goto LABEL_16;
  }
  uint64_t v6 = *(void *)(v0 + 504);
  uint64_t v5 = *(void *)(v0 + 512);
  uint64_t v7 = *(void *)(v0 + 496);
  uint64_t v8 = *(void *)(v0 + 464);
  uint64_t v9 = *(void *)(v0 + 312);
  v4(v8, 0, 1, v7);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v5, v8, v7);
  uint64_t v10 = (void *)(v9 + OBJC_IVAR____TtC9MusicCore18PlaybackController_player);
  swift_beginAccess();
  if (!*v10) {
    goto LABEL_15;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v11 = *(void **)(v0 + 280);
  if (!v11) {
    goto LABEL_15;
  }
  MPCPlayerResponse.playState(for:)();
  char v13 = v12;

  if (v13) {
    goto LABEL_15;
  }
  if (!*v10) {
    goto LABEL_15;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  os_log_type_t v14 = *(void **)(v0 + 288);
  if (!v14) {
    goto LABEL_15;
  }
  id v15 = [*(id *)(v0 + 288) tracklist];

  id v16 = [v15 playingItem];
  if (!v16) {
    goto LABEL_15;
  }
  id v17 = [v16 metadataObject];

  if (!v17) {
    goto LABEL_15;
  }
  id v18 = [v17 innermostModelObject];
  *(void *)(v0 + 520) = v18;

  self;
  uint64_t v19 = swift_dynamicCastObjCClass();
  if (!v19)
  {

LABEL_15:
    (*(void (**)(void, void))(*(void *)(v0 + 504) + 8))(*(void *)(v0 + 512), *(void *)(v0 + 496));
    goto LABEL_16;
  }
  id v20 = [self radioPlaybackIntentFromSong:v19];
  *(void *)(v0 + 528) = v20;
  if (v20)
  {
    uint64_t v21 = v20;
    unint64_t v22 = *(void *)(v0 + 344);
    NSString v23 = String._bridgeToObjectiveC()();
    [v21 setPlayActivityFeatureName:v23];

    if (v22 >> 60 == 15) {
      Class isa = 0;
    }
    else {
      Class isa = Data._bridgeToObjectiveC()().super.isa;
    }
    [v21 setPlayActivityRecommendationData:isa];

    uint64_t v50 = (void *)swift_task_alloc();
    *(void *)(v0 + 536) = v50;
    *uint64_t v50 = v0;
    v50[1] = closure #2 in Actions.CreateStation.Context.init<A>(item:library:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:);
    return PlaybackController.insert(_:location:)((uint64_t)v21, 0);
  }
  (*(void (**)(void, void))(*(void *)(v0 + 504) + 8))(*(void *)(v0 + 512), *(void *)(v0 + 496));

LABEL_16:
  v2(*(void *)(v0 + 480), *(void *)(v0 + 304), *(void *)(v0 + 360));
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for StationSeeding);
  if (swift_dynamicCast())
  {
    outlined init with take of AlertPresenting((long long *)(v0 + 56), v0 + 16);
    outlined init with copy of AlertPresenting(v0 + 16, v0 + 96);
    MusicPlaybackIntentDescriptor.init(stationSeed:)();
    uint64_t v29 = *(void *)(v0 + 424);
    uint64_t v28 = *(void *)(v0 + 432);
    uint64_t v31 = *(void *)(v0 + 408);
    uint64_t v30 = *(void *)(v0 + 416);
    uint64_t v33 = *(void *)(v0 + 336);
    unint64_t v32 = *(void *)(v0 + 344);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v29 + 56))(v31, 0, 1, v30);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 32))(v28, v31, v30);
    swift_bridgeObjectRetain();
    char v34 = (void *)MusicPlaybackIntentDescriptor.playbackIntent.getter();
    NSString v35 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v34 setPlayActivityFeatureName:v35];

    outlined copy of Data?(v33, v32);
    uint64_t v36 = (void *)MusicPlaybackIntentDescriptor.playbackIntent.getter();
    if (v32 >> 60 == 15)
    {
      Class v37 = 0;
    }
    else
    {
      uint64_t v38 = *(void *)(v0 + 336);
      unint64_t v39 = *(void *)(v0 + 344);
      outlined copy of Data._Representation(v38, v39);
      Class v37 = Data._bridgeToObjectiveC()().super.isa;
      outlined consume of Data?(v38, v39);
    }
    uint64_t v40 = *(void *)(v0 + 424);
    uint64_t v41 = *(void *)(v0 + 416);
    uint64_t v42 = *(void *)(v0 + 392);
    uint64_t v51 = *(void *)(v0 + 432);
    uint64_t v52 = *(void *)(v0 + 400);
    uint64_t v43 = *(void *)(v0 + 376);
    id v44 = *(int **)(v0 + 384);
    uint64_t v45 = *(void *)(v0 + 336);
    unint64_t v46 = *(void *)(v0 + 344);
    [v36 setPlayActivityRecommendationData:v37];
    outlined consume of Data?(v45, v46);

    (*(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 16))(v43, v51, v41);
    swift_storeEnumTagMultiPayload();
    *(void *)(v0 + 168) = 0;
    *(_OWORD *)(v0 + 136) = 0u;
    *(_OWORD *)(v0 + 152) = 0u;
    uint64_t v47 = v42 + v44[7];
    *(void *)(v47 + 32) = 0;
    *(_OWORD *)uint64_t v47 = 0u;
    *(_OWORD *)(v47 + 16) = 0u;
    *(unsigned char *)(v42 + v44[8]) = 0;
    *(unsigned char *)(v42 + v44[9]) = 0;
    outlined init with copy of PlaybackIntentDescriptor.IntentType(v43, v42);
    outlined assign with copy of MusicItem?(v0 + 136, v47);
    *(void *)(v42 + v44[5]) = 2;
    *(void *)(v42 + v44[6]) = 1;
    outlined destroy of TaskPriority?(v0 + 136, &demangling cache variable for type metadata for MusicItem?);
    outlined destroy of Notice.Variant(v43, type metadata accessor for PlaybackIntentDescriptor.IntentType);
    outlined init with take of Actions.MetricsReportingContext(v42, v52, type metadata accessor for PlaybackIntentDescriptor);
    uint64_t v48 = (void *)swift_task_alloc();
    *(void *)(v0 + 584) = v48;
    void *v48 = v0;
    v48[1] = closure #2 in Actions.CreateStation.Context.init<A>(item:library:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:);
    uint64_t v49 = *(void *)(v0 + 400);
    return PlaybackController.add(_:route:)(v49, 0);
  }
  else
  {
    *(void *)(v0 + 88) = 0;
    *(_OWORD *)(v0 + 56) = 0u;
    *(_OWORD *)(v0 + 72) = 0u;
    outlined destroy of TaskPriority?(v0 + 56, &demangling cache variable for type metadata for StationSeeding?);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v26 = *(uint64_t (**)(void))(v0 + 8);
    return v26();
  }
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();
  uint64_t v4;

  *(void *)(*(void *)v1 + 544) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = closure #2 in Actions.CreateStation.Context.init<A>(item:library:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:);
  }
  else {
    uint64_t v2 = closure #2 in Actions.CreateStation.Context.init<A>(item:library:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:);
  }
  return _swift_task_switch(v2, 0, 0);
}

{
  void *v0;
  uint64_t v1;
  unint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t (*v8)(void);
  uint64_t v10;

  outlined init with copy of (String, Any)(v0[44], (uint64_t)(v0 + 22), &demangling cache variable for type metadata for NoticePresenting?);
  uint64_t v1 = v0[25];
  v0[69] = v1;
  if (v1)
  {
    char v3 = v0[56];
    uint64_t v2 = (unint64_t *)v0[57];
    v0[70] = v0[26];
    v0[71] = __swift_project_boxed_opaque_existential_0Tm(v0 + 22, v1);
    swift_storeEnumTagMultiPayload();
    static Notice.variant(_:)(v3, v2);
    outlined destroy of Notice.Variant(v3, type metadata accessor for Notice.Variant);
    type metadata accessor for MainActor();
    v0[72] = static MainActor.shared.getter();
    uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
    return _swift_task_switch(closure #2 in Actions.CreateStation.Context.init<A>(item:library:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:), v5, v4);
  }
  else
  {
    uint64_t v6 = (void *)v0[66];
    uint64_t v7 = (void *)v0[65];
    (*(void (**)(void, void))(v0[63] + 8))(v0[64], v0[62]);

    outlined destroy of TaskPriority?((uint64_t)(v0 + 22), &demangling cache variable for type metadata for NoticePresenting?);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v8 = (uint64_t (*)(void))v0[1];
    return v8();
  }
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  uint64_t v1 = v0[70];
  uint64_t v2 = v0[69];
  char v3 = v0[57];
  swift_release();
  NoticePresenting.present(_:internalOnly:)(v3, 0, v2, v1);
  outlined destroy of Notice.Variant(v3, type metadata accessor for Notice);
  return _swift_task_switch(closure #2 in Actions.CreateStation.Context.init<A>(item:library:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:), 0, 0);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v7;

  uint64_t v1 = *(void **)(v0 + 528);
  char v3 = *(void *)(v0 + 504);
  uint64_t v2 = *(void *)(v0 + 512);
  uint64_t v4 = *(void *)(v0 + 496);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 176);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();
  uint64_t v4;

  *(void *)(*(void *)v1 + 592) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = closure #2 in Actions.CreateStation.Context.init<A>(item:library:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:);
  }
  else {
    uint64_t v2 = closure #2 in Actions.CreateStation.Context.init<A>(item:library:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:);
  }
  return _swift_task_switch(v2, 0, 0);
}

{
  void *v0;
  uint64_t v1;
  unint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void);
  uint64_t v11;

  outlined init with copy of (String, Any)(v0[44], (uint64_t)(v0 + 27), &demangling cache variable for type metadata for NoticePresenting?);
  uint64_t v1 = v0[30];
  v0[75] = v1;
  if (v1)
  {
    char v3 = v0[56];
    uint64_t v2 = (unint64_t *)v0[57];
    v0[76] = v0[31];
    v0[77] = __swift_project_boxed_opaque_existential_0Tm(v0 + 27, v1);
    swift_storeEnumTagMultiPayload();
    static Notice.variant(_:)(v3, v2);
    outlined destroy of Notice.Variant(v3, type metadata accessor for Notice.Variant);
    type metadata accessor for MainActor();
    v0[78] = static MainActor.shared.getter();
    uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
    return _swift_task_switch(closure #2 in Actions.CreateStation.Context.init<A>(item:library:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:), v5, v4);
  }
  else
  {
    uint64_t v7 = v0[53];
    uint64_t v6 = v0[54];
    uint64_t v8 = v0[52];
    outlined destroy of Notice.Variant(v0[50], type metadata accessor for PlaybackIntentDescriptor);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)(v0 + 2));
    outlined destroy of TaskPriority?((uint64_t)(v0 + 27), &demangling cache variable for type metadata for NoticePresenting?);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v9 = (uint64_t (*)(void))v0[1];
    return v9();
  }
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  uint64_t v1 = v0[76];
  uint64_t v2 = v0[75];
  char v3 = v0[57];
  swift_release();
  NoticePresenting.present(_:internalOnly:)(v3, 0, v2, v1);
  outlined destroy of Notice.Variant(v3, type metadata accessor for Notice);
  return _swift_task_switch(closure #2 in Actions.CreateStation.Context.init<A>(item:library:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:), 0, 0);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);
  uint64_t v6;

  uint64_t v2 = v0[53];
  uint64_t v1 = v0[54];
  char v3 = v0[52];
  outlined destroy of Notice.Variant(v0[50], type metadata accessor for PlaybackIntentDescriptor);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)(v0 + 2));
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)(v0 + 27));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t (*v12)(void);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  id v15 = v0;
  uint64_t v1 = *(void **)(v0 + 528);
  char v3 = *(void *)(v0 + 504);
  uint64_t v2 = *(void *)(v0 + 512);
  uint64_t v4 = *(void *)(v0 + 496);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  uint64_t v5 = *(void *)(v0 + 544);
  if (one-time initialization token for actions != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  __swift_project_value_buffer(v6, (uint64_t)static Logger.actions);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v7 = Logger.logObject.getter();
  uint64_t v8 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = swift_slowAlloc();
    os_log_type_t v14 = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136446210;
    *(void *)(v0 + 296) = v5;
    swift_errorRetain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
    uint64_t v10 = String.init<A>(describing:)();
    *(void *)(v9 + 4) = _s2os32getNullTerminatedUTF8PointerImpl_21storingStringOwnersInSVSS_SpyypGSgztF_0(v10, v11, &v14);
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Failed to Create Station with error=%{public}s", (uint8_t *)v9, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  char v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t (*v11)(void);
  uint64_t v13;
  void *v14;
  uint64_t v15;

  os_log_type_t v14 = v0;
  uint64_t v2 = v0[53];
  uint64_t v1 = v0[54];
  char v3 = v0[52];
  outlined destroy of Notice.Variant(v0[50], type metadata accessor for PlaybackIntentDescriptor);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)(v0 + 2));
  uint64_t v4 = v0[74];
  if (one-time initialization token for actions != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  __swift_project_value_buffer(v5, (uint64_t)static Logger.actions);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v6 = Logger.logObject.getter();
  uint64_t v7 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    char v13 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136446210;
    v0[37] = v4;
    swift_errorRetain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
    uint64_t v9 = String.init<A>(describing:)();
    *(void *)(v8 + 4) = _s2os32getNullTerminatedUTF8PointerImpl_21storingStringOwnersInSVSS_SpyypGSgztF_0(v9, v10, &v13);
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Failed to Create Station with error=%{public}s", (uint8_t *)v8, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t sub_10007E4F4()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 16) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v4 = (((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v5 = (v4 + 23) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t))(v1 + 8))(v0 + v2);

  swift_bridgeObjectRelease();
  unint64_t v6 = *(void *)(v0 + v4 + 8);
  if (v6 >> 60 != 15) {
    outlined consume of Data._Representation(*(void *)(v0 + v4), v6);
  }
  if (*(void *)(v0 + v5 + 24)) {
    __swift_destroy_boxed_opaque_existential_0Tm(v0 + v5);
  }

  return swift_deallocObject();
}

uint64_t partial apply for closure #2 in Actions.CreateStation.Context.init<A>(item:library:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)()
{
  uint64_t v2 = *(void *)(v0 + 16);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)(v2 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 8) + 80);
  unint64_t v4 = (*(void *)(*(void *)(v2 - 8) + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v5 = (v4 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = v0 + v3;
  uint64_t v8 = *(void *)(v0 + v4);
  uint64_t v9 = *(void *)(v0 + v5);
  uint64_t v10 = *(void *)(v0 + v5 + 8);
  uint64_t v11 = *(void *)(v0 + v6);
  uint64_t v12 = *(void *)(v0 + v6 + 8);
  uint64_t v13 = v0 + ((v6 + 23) & 0xFFFFFFFFFFFFFFF8);
  os_log_type_t v14 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v14;
  *os_log_type_t v14 = v1;
  v14[1] = partial apply for closure #1 in static MusicEngagementExtension.performRequest(with:completion:);
  return closure #2 in Actions.CreateStation.Context.init<A>(item:library:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)(v7, v8, v9, v10, v11, v12, v13, v2);
}

uint64_t closure #3 in Actions.CreateStation.Context.init<A>(item:library:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[14] = a3;
  v4[15] = a4;
  v4[12] = a1;
  v4[13] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  v4[16] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  v4[17] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for Actions.MetricsReportingContext();
  v4[18] = v5;
  v4[19] = *(void *)(v5 - 8);
  v4[20] = swift_task_alloc();
  return _swift_task_switch(closure #3 in Actions.CreateStation.Context.init<A>(item:library:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:), 0, 0);
}

uint64_t closure #3 in Actions.CreateStation.Context.init<A>(item:library:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)()
{
  uint64_t v1 = *(void *)(v0 + 144);
  uint64_t v2 = *(void *)(v0 + 152);
  uint64_t v3 = *(void *)(v0 + 136);
  outlined init with copy of (String, Any)(*(void *)(v0 + 96), v3, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    outlined destroy of TaskPriority?(*(void *)(v0 + 136), &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
  else
  {
    uint64_t v6 = *(void *)(v0 + 128);
    uint64_t v7 = *(void *)(v0 + 112);
    outlined init with take of Actions.MetricsReportingContext(*(void *)(v0 + 136), *(void *)(v0 + 160), (uint64_t (*)(void))type metadata accessor for Actions.MetricsReportingContext);
    *(void *)(v0 + 168) = MusicItem.metricsTargetIdentifier.getter(v7);
    *(void *)(v0 + 176) = v8;
    uint64_t v9 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v6, 1, 1, v9);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<MetricsEvent.Click.ActionDetails.Key>);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100493D00;
    *(void *)(inited + 32) = MusicItem.metricsContentType.getter();
    *(void *)(inited + 40) = v11;
    *(unsigned char *)(inited + 48) = 0;
    *(void *)(inited + 56) = 0;
    *(void *)(inited + 64) = 0;
    *(unsigned char *)(inited + 72) = 4;
    *(void *)(v0 + 184) = specialized MetricsEvent.Click.ActionDetails.init(_:)(inited);
    *(void *)(v0 + 192) = v12;
    *(void *)(v0 + 200) = v13;
    *(_WORD *)(v0 + 216) = v14;
    swift_setDeallocating();
    swift_arrayDestroy();
    type metadata accessor for MainActor();
    *(void *)(v0 + 208) = static MainActor.shared.getter();
    uint64_t v16 = dispatch thunk of Actor.unownedExecutor.getter();
    return _swift_task_switch(closure #3 in Actions.CreateStation.Context.init<A>(item:library:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:), v16, v15);
  }
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  uint64_t v1 = *(void *)(v0 + 200);
  uint64_t v3 = *(void **)(v0 + 184);
  uint64_t v2 = *(void *)(v0 + 192);
  uint64_t v5 = *(void *)(v0 + 168);
  unint64_t v4 = *(void *)(v0 + 176);
  uint64_t v6 = *(uint64_t **)(v0 + 160);
  uint64_t v7 = *(void *)(v0 + 128);
  uint64_t v8 = *(unsigned __int16 *)(v0 + 216);
  swift_release();
  specialized static Actions.reportClickEvent(targetIdentifier:targetType:actionType:actionURL:actionDetails:reportingContext:)(v5, v4, 5, 10, v7, v3, v2, v1, v8, v6);
  outlined consume of MetricsEvent.Click.ActionDetails(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease();
  outlined destroy of TaskPriority?(v7, &demangling cache variable for type metadata for URL?);
  return _swift_task_switch(closure #3 in Actions.CreateStation.Context.init<A>(item:library:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:), 0, 0);
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  outlined destroy of Notice.Variant(*(void *)(v0 + 160), (uint64_t (*)(void))type metadata accessor for Actions.MetricsReportingContext);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t partial apply for closure #3 in Actions.CreateStation.Context.init<A>(item:library:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?)
                 - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v0 + v5;
  uint64_t v7 = v0
     + ((v5 + *(void *)(v4 + 64) + *(unsigned __int8 *)(*(void *)(v2 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 8) + 80));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v8;
  *uint64_t v8 = v1;
  v8[1] = closure #3 in static Actions.ReportConcern.action(context:);
  return closure #3 in Actions.CreateStation.Context.init<A>(item:library:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)(v6, v7, v2, v3);
}

uint64_t Actions.CreateStation.Context.menuItemTitle.getter()
{
  return Actions.CreateStation.Context.menuItemTitle.getter();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned char *v5;
  uint64_t v6;
  unsigned char *v7;
  id v8;
  uint64_t v9;
  unsigned char v11[16];

  uint64_t v0 = type metadata accessor for Locale();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = type metadata accessor for String.LocalizationValue();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  unint64_t v5 = &v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v3);
  uint64_t v7 = &v11[-v6];
  String.LocalizationValue.init(stringLiteral:)();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v2 + 16))(v5, v7, v1);
  if (one-time initialization token for module != -1) {
    swift_once();
  }
  uint64_t v8 = (id)static NSBundle.module;
  static Locale.current.getter();
  uint64_t v9 = String.init(localized:table:bundle:locale:comment:)();
  (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v7, v1);
  return v9;
}

uint64_t (*Actions.CreateStation.Context.menuItemImage.getter())()
{
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = 0xD00000000000001BLL;
  *(void *)(v0 + 24) = 0x80000001004684D0;
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = 0xD00000000000001BLL;
  *(void *)(v1 + 24) = 0x80000001004684D0;
  return closure #1 in ActionMenuItemImage.init(systemName:)partial apply;
}

uint64_t protocol witness for ActionMenuItemConfiguring.menuItemTitle.getter in conformance Actions.CreateStation.Context()
{
  return protocol witness for ActionMenuItemConfiguring.menuItemTitle.getter in conformance Actions.CreateStation.Context();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned char *v5;
  uint64_t v6;
  unsigned char *v7;
  id v8;
  uint64_t v9;
  unsigned char v11[16];

  uint64_t v0 = type metadata accessor for Locale();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = type metadata accessor for String.LocalizationValue();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  unint64_t v5 = &v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v3);
  uint64_t v7 = &v11[-v6];
  String.LocalizationValue.init(stringLiteral:)();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v2 + 16))(v5, v7, v1);
  if (one-time initialization token for module != -1) {
    swift_once();
  }
  uint64_t v8 = (id)static NSBundle.module;
  static Locale.current.getter();
  uint64_t v9 = String.init(localized:table:bundle:locale:comment:)();
  (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v7, v1);
  return v9;
}

uint64_t (*protocol witness for ActionMenuItemConfiguring.menuItemImage.getter in conformance Actions.CreateStation.Context())()
{
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = 0xD00000000000001BLL;
  *(void *)(v0 + 24) = 0x80000001004684D0;
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = 0xD00000000000001BLL;
  *(void *)(v1 + 24) = 0x80000001004684D0;
  return closure #1 in ActionMenuItemImage.init(systemName:)partial apply;
}

uint64_t protocol witness for static ActionDefinition.action(context:) in conformance Actions.Play@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return protocol witness for static ActionDefinition.action(context:) in conformance Actions.ShowSongCredits(a1, 20, (uint64_t)closure #1 in static Actions.ShowSongCredits.action(context:), (uint64_t)&async function pointer to closure #2 in static Actions.Play.action(context:), (uint64_t)&async function pointer to closure #3 in static Actions.Play.action(context:), a2);
}

uint64_t closure #1 in static Actions.Queue.action(context:)(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 24))();
}

uint64_t closure #2 in static Actions.Queue.action(context:)(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (uint64_t (*)(void))(*(void *)(a2 + 40) + **(int **)(a2 + 40));
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v3;
  *uint64_t v3 = v2;
  v3[1] = closure #3 in static Actions.ReportConcern.action(context:);
  return v5();
}

uint64_t closure #3 in static Actions.Queue.action(context:)(uint64_t a1)
{
  uint64_t v4 = (uint64_t (*)(void))(*(void *)(a1 + 56) + **(int **)(a1 + 56));
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = closure #3 in static Actions.ReportConcern.action(context:);
  return v4();
}

__n128 protocol witness for static ActionDefinition.action(context:) in conformance Actions.Queue@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  long long v3 = *(_OWORD *)(a1 + 48);
  void v11[2] = *(_OWORD *)(a1 + 32);
  void v11[3] = v3;
  uint64_t v12 = *(void *)(a1 + 64);
  long long v4 = *(_OWORD *)(a1 + 16);
  v11[0] = *(_OWORD *)a1;
  v11[1] = v4;
  specialized static Actions.Queue.action(context:)((uint64_t)v11, (uint64_t)v9);
  long long v5 = v9[7];
  *(_OWORD *)(a2 + 96) = v9[6];
  *(_OWORD *)(a2 + 112) = v5;
  *(void *)(a2 + 128) = v10;
  long long v6 = v9[3];
  *(_OWORD *)(a2 + 32) = v9[2];
  *(_OWORD *)(a2 + 48) = v6;
  long long v7 = v9[5];
  *(_OWORD *)(a2 + 64) = v9[4];
  *(_OWORD *)(a2 + 80) = v7;
  __n128 result = (__n128)v9[1];
  *(_OWORD *)a2 = v9[0];
  *(__n128 *)(a2 + 16) = result;
  return result;
}

unint64_t closure #1 in Actions.Play.Context.init<A>(item:playbackIntent:playbackController:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v53 = a4;
  uint64_t v54 = a2;
  uint64_t v6 = type metadata accessor for MusicPlayer.PlayabilityStatus.UnplayableReason();
  uint64_t v51 = *(void *)(v6 - 8);
  uint64_t v52 = v6;
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v48 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v50 = (char *)&v47 - v10;
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v49 = (char *)&v47 - v12;
  uint64_t v13 = *(void *)(a3 - 8);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicPlayer.PlayabilityStatus?);
  __chkstk_darwin(v16 - 8);
  id v18 = (char *)&v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for MusicPlayer.PlayabilityStatus();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v47 = (char *)&v47 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v25 = (char *)&v47 - v24;
  __chkstk_darwin(v23);
  uint64_t v27 = (char *)&v47 - v26;
  outlined init with copy of (String, Any)(a1, (uint64_t)v18, &demangling cache variable for type metadata for MusicPlayer.PlayabilityStatus?);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1)
  {
    outlined destroy of TaskPriority?((uint64_t)v18, &demangling cache variable for type metadata for MusicPlayer.PlayabilityStatus?);
    unint64_t v55 = 0;
    unint64_t v56 = 0xE000000000000000;
    _StringGuts.grow(_:)(36);
    swift_bridgeObjectRelease();
    unint64_t v55 = 0xD000000000000022;
    unint64_t v56 = 0x8000000100468620;
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v54, a3);
    v28._uint64_t countAndFlagsBits = String.init<A>(describing:)();
    String.append(_:)(v28);
    swift_bridgeObjectRelease();
    return v55;
  }
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v27, v18, v19);
  if ((closure #1 in closure #1 in Actions.Play.Context.init<A>(item:playbackIntent:playbackController:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)(v54, a3) & 1) == 0)
  {
    unint64_t v29 = 0xD000000000000010;
    (*(void (**)(char *, uint64_t))(v20 + 8))(v27, v19);
    return v29;
  }
  uint64_t v30 = *(void (**)(char *, char *, uint64_t))(v20 + 16);
  v30(v25, v27, v19);
  int v31 = (*(uint64_t (**)(char *, uint64_t))(v20 + 88))(v25, v19);
  if (v31 == enum case for MusicPlayer.PlayabilityStatus.unplayable(_:))
  {
    (*(void (**)(char *, uint64_t))(v20 + 96))(v25, v19);
    uint64_t v33 = v51;
    uint64_t v32 = v52;
    char v34 = v49;
    (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v49, v25, v52);
    NSString v35 = *(void (**)(char *, char *, uint64_t))(v33 + 16);
    uint64_t v36 = v50;
    v35(v50, v34, v32);
    int v37 = (*(uint64_t (**)(char *, uint64_t))(v33 + 88))(v36, v32);
    if (v37 != enum case for MusicPlayer.PlayabilityStatus.UnplayableReason.ageVerificationRequired(_:)
      && v37 != enum case for MusicPlayer.PlayabilityStatus.UnplayableReason.subscriptionRequired(_:))
    {
      unint64_t v55 = 0;
      unint64_t v56 = 0xE000000000000000;
      _StringGuts.grow(_:)(26);
      swift_bridgeObjectRelease();
      unint64_t v55 = 0xD000000000000018;
      unint64_t v56 = 0x8000000100468670;
      v35(v48, v34, v32);
      v38._uint64_t countAndFlagsBits = String.init<A>(describing:)();
      String.append(_:)(v38);
      swift_bridgeObjectRelease();
      unint64_t v29 = v55;
      unint64_t v39 = *(void (**)(char *, uint64_t))(v33 + 8);
      v39(v34, v32);
      (*(void (**)(char *, uint64_t))(v20 + 8))(v27, v19);
      v39(v36, v32);
      return v29;
    }
    (*(void (**)(char *, uint64_t))(v33 + 8))(v34, v32);
LABEL_16:
    (*(void (**)(char *, uint64_t))(v20 + 8))(v27, v19);
    return 0;
  }
  if (v31 == enum case for MusicPlayer.PlayabilityStatus.playable(_:)) {
    goto LABEL_16;
  }
  if (one-time initialization token for actions != -1) {
    swift_once();
  }
  uint64_t v40 = type metadata accessor for Logger();
  __swift_project_value_buffer(v40, (uint64_t)static Logger.actions);
  uint64_t v41 = Logger.logObject.getter();
  os_log_type_t v42 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v41, v42))
  {
    uint64_t v43 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v43 = 0;
    _os_log_impl((void *)&_mh_execute_header, v41, v42, "Unknown playability status", v43, 2u);
    swift_slowDealloc();
  }

  unint64_t v55 = 0;
  unint64_t v56 = 0xE000000000000000;
  _StringGuts.grow(_:)(18);
  swift_bridgeObjectRelease();
  unint64_t v55 = 0xD000000000000010;
  unint64_t v56 = 0x8000000100468650;
  v30(v47, v27, v19);
  v44._uint64_t countAndFlagsBits = String.init<A>(describing:)();
  String.append(_:)(v44);
  swift_bridgeObjectRelease();
  unint64_t v29 = v55;
  uint64_t v45 = *(void (**)(char *, uint64_t))(v20 + 8);
  v45(v27, v19);
  v45(v25, v19);
  return v29;
}

uint64_t closure #1 in closure #1 in Actions.Play.Context.init<A>(item:playbackIntent:playbackController:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)(uint64_t a1, uint64_t a2)
{
  uint64_t v23 = type metadata accessor for Station();
  uint64_t v21 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  long long v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Playlist();
  uint64_t v22 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Album();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(a2 - 8);
  __chkstk_darwin(v11);
  uint64_t v16 = (char *)&v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a1, a2);
  if (swift_dynamicCast())
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  }
  else if (swift_dynamicCast())
  {
    (*(void (**)(char *, uint64_t))(v22 + 8))(v8, v6);
  }
  else
  {
    uint64_t v17 = v23;
    if (!swift_dynamicCast())
    {
      uint64_t v18 = 0;
      goto LABEL_8;
    }
    (*(void (**)(char *, uint64_t))(v21 + 8))(v5, v17);
  }
  uint64_t v18 = 1;
LABEL_8:
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, a2);
  return v18;
}

uint64_t closure #2 in Actions.Play.Context.init<A>(item:playbackIntent:playbackController:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[21] = v12;
  v8[22] = v13;
  v8[19] = a7;
  v8[20] = a8;
  v8[17] = a5;
  v8[18] = a6;
  v8[15] = a3;
  v8[16] = a4;
  v8[13] = a1;
  v8[14] = a2;
  v8[23] = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
  v8[24] = swift_task_alloc();
  v8[25] = type metadata accessor for PlaybackIntentDescriptor(0);
  v8[26] = swift_task_alloc();
  v8[27] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for MusicPlayer.PlayabilityStatus();
  v8[28] = v9;
  v8[29] = *(void *)(v9 - 8);
  v8[30] = swift_task_alloc();
  v8[31] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (MusicPlayer.PlayabilityStatus?, MusicPlayer.PlayabilityStatus?));
  v8[32] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicPlayer.PlayabilityStatus?);
  v8[33] = swift_task_alloc();
  v8[34] = swift_task_alloc();
  return _swift_task_switch(closure #2 in Actions.Play.Context.init<A>(item:playbackIntent:playbackController:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:), 0, 0);
}

uint64_t closure #2 in Actions.Play.Context.init<A>(item:playbackIntent:playbackController:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)()
{
  uint64_t v1 = *(void *)(v0 + 272);
  uint64_t v2 = *(void *)(v0 + 248);
  uint64_t v3 = *(void *)(v0 + 256);
  uint64_t v4 = *(void *)(v0 + 224);
  uint64_t v5 = *(void *)(v0 + 232);
  uint64_t v6 = *(void *)(v0 + 104);
  (*(void (**)(uint64_t, void, uint64_t))(v5 + 104))(v1, enum case for MusicPlayer.PlayabilityStatus.playable(_:), v4);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v5 + 56))(v1, 0, 1, v4);
  uint64_t v7 = v3 + *(int *)(v2 + 48);
  outlined init with copy of (String, Any)(v6, v3, &demangling cache variable for type metadata for MusicPlayer.PlayabilityStatus?);
  outlined init with copy of (String, Any)(v1, v7, &demangling cache variable for type metadata for MusicPlayer.PlayabilityStatus?);
  uint64_t v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v8(v3, 1, v4) == 1)
  {
    uint64_t v9 = *(void *)(v0 + 224);
    outlined destroy of TaskPriority?(*(void *)(v0 + 272), &demangling cache variable for type metadata for MusicPlayer.PlayabilityStatus?);
    if (v8(v7, 1, v9) == 1)
    {
      outlined destroy of TaskPriority?(*(void *)(v0 + 256), &demangling cache variable for type metadata for MusicPlayer.PlayabilityStatus?);
LABEL_11:
      unint64_t v28 = *(void *)(v0 + 152);
      unint64_t v29 = *(void **)(v0 + 120);
      [v29 setShuffleMode:0];
      [v29 setRepeatMode:0];
      NSString v30 = String._bridgeToObjectiveC()();
      [v29 setPlayActivityFeatureName:v30];

      Class isa = 0;
      if (v28 >> 60 != 15) {
        Class isa = Data._bridgeToObjectiveC()().super.isa;
      }
      uint64_t v32 = *(void *)(v0 + 208);
      char v34 = *(void **)(v0 + 192);
      uint64_t v33 = *(int **)(v0 + 200);
      uint64_t v35 = *(void *)(v0 + 176);
      uint64_t v36 = *(void *)(v0 + 168);
      int v37 = *(void **)(v0 + 120);
      uint64_t v43 = *(void *)(v0 + 112);
      uint64_t v44 = *(void *)(v0 + 216);
      [v37 setPlayActivityRecommendationData:isa];

      *char v34 = v37;
      swift_storeEnumTagMultiPayload();
      *(void *)(v0 + 88) = v36;
      *(void *)(v0 + 96) = *(void *)(v35 + 8);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v0 + 64));
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v36 - 8) + 16))(boxed_opaque_existential_1, v43, v36);
      uint64_t v39 = v32 + v33[7];
      *(void *)(v39 + 32) = 0;
      *(_OWORD *)uint64_t v39 = 0u;
      *(_OWORD *)(v39 + 16) = 0u;
      *(unsigned char *)(v32 + v33[8]) = 0;
      *(unsigned char *)(v32 + v33[9]) = 0;
      outlined init with copy of PlaybackIntentDescriptor.IntentType((uint64_t)v34, v32);
      id v40 = v37;
      outlined assign with copy of MusicItem?(v0 + 64, v39);
      *(void *)(v32 + v33[5]) = 2;
      *(void *)(v32 + v33[6]) = 0;
      outlined destroy of TaskPriority?(v0 + 64, &demangling cache variable for type metadata for MusicItem?);
      outlined destroy of Notice.Variant((uint64_t)v34, type metadata accessor for PlaybackIntentDescriptor.IntentType);
      outlined init with take of Actions.MetricsReportingContext(v32, v44, type metadata accessor for PlaybackIntentDescriptor);
      uint64_t v41 = (void *)swift_task_alloc();
      *(void *)(v0 + 280) = v41;
      void *v41 = v0;
      v41[1] = closure #2 in Actions.Play.Context.init<A>(item:playbackIntent:playbackController:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:);
      uint64_t v42 = *(void *)(v0 + 216);
      return PlaybackController.add(_:route:)(v42, 0);
    }
    goto LABEL_6;
  }
  uint64_t v10 = *(void *)(v0 + 224);
  outlined init with copy of (String, Any)(*(void *)(v0 + 256), *(void *)(v0 + 264), &demangling cache variable for type metadata for MusicPlayer.PlayabilityStatus?);
  unsigned int v11 = v8(v7, 1, v10);
  uint64_t v12 = *(void *)(v0 + 264);
  uint64_t v13 = *(void *)(v0 + 272);
  if (v11 == 1)
  {
    uint64_t v14 = *(void *)(v0 + 224);
    uint64_t v15 = *(void *)(v0 + 232);
    outlined destroy of TaskPriority?(*(void *)(v0 + 272), &demangling cache variable for type metadata for MusicPlayer.PlayabilityStatus?);
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v12, v14);
LABEL_6:
    outlined destroy of TaskPriority?(*(void *)(v0 + 256), &demangling cache variable for type metadata for (MusicPlayer.PlayabilityStatus?, MusicPlayer.PlayabilityStatus?));
    goto LABEL_7;
  }
  uint64_t v22 = *(void *)(v0 + 256);
  uint64_t v24 = *(void *)(v0 + 232);
  uint64_t v23 = *(void *)(v0 + 240);
  uint64_t v25 = *(void *)(v0 + 224);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 32))(v23, v7, v25);
  lazy protocol witness table accessor for type MusicPlayer.PlayabilityStatus and conformance MusicPlayer.PlayabilityStatus(&lazy protocol witness table cache variable for type MusicPlayer.PlayabilityStatus and conformance MusicPlayer.PlayabilityStatus, (void (*)(uint64_t))&type metadata accessor for MusicPlayer.PlayabilityStatus);
  char v26 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v27 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
  v27(v23, v25);
  outlined destroy of TaskPriority?(v13, &demangling cache variable for type metadata for MusicPlayer.PlayabilityStatus?);
  v27(v12, v25);
  outlined destroy of TaskPriority?(v22, &demangling cache variable for type metadata for MusicPlayer.PlayabilityStatus?);
  if (v26) {
    goto LABEL_11;
  }
LABEL_7:
  uint64_t v17 = *(void *)(v0 + 168);
  uint64_t v16 = *(void *)(v0 + 176);
  uint64_t v18 = *(void *)(v0 + 112);
  *(void *)(v0 + 40) = v17;
  *(void *)(v0 + 48) = *(void *)(v16 + 8);
  uint64_t v19 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v0 + 16));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v19, v18, v17);
  *(unsigned char *)(v0 + 56) = 0;
  specialized static SubscriptionUpsellPresenter.present(for:)(v0 + 16);
  outlined destroy of SubscriptionUpsellPresenter.Placement(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v20 = *(uint64_t (**)(void))(v0 + 8);
  return v20();
}

{
  uint64_t v0;
  uint64_t (*v1)();
  uint64_t v3;

  swift_task_dealloc();
  if (v0)
  {
    swift_errorRelease();
    uint64_t v1 = closure #2 in Actions.Play.Context.init<A>(item:playbackIntent:playbackController:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:);
  }
  else
  {
    uint64_t v1 = closure #2 in Actions.Play.Context.init<A>(item:playbackIntent:playbackController:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:);
  }
  return _swift_task_switch(v1, 0, 0);
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  outlined destroy of Notice.Variant(*(void *)(v0 + 216), type metadata accessor for PlaybackIntentDescriptor);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t closure #3 in Actions.Play.Context.init<A>(item:playbackIntent:playbackController:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[11] = a3;
  v4[12] = a4;
  v4[9] = a1;
  v4[10] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  v4[13] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  v4[14] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for Actions.MetricsReportingContext();
  v4[15] = v5;
  v4[16] = *(void *)(v5 - 8);
  v4[17] = swift_task_alloc();
  return _swift_task_switch(closure #3 in Actions.Play.Context.init<A>(item:playbackIntent:playbackController:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:), 0, 0);
}

uint64_t closure #3 in Actions.Play.Context.init<A>(item:playbackIntent:playbackController:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)()
{
  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v2 = *(void *)(v0 + 128);
  uint64_t v3 = *(void *)(v0 + 112);
  outlined init with copy of (String, Any)(*(void *)(v0 + 72), v3, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    outlined destroy of TaskPriority?(*(void *)(v0 + 112), &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
  else
  {
    uint64_t v6 = *(void *)(v0 + 104);
    uint64_t v7 = *(void *)(v0 + 88);
    outlined init with take of Actions.MetricsReportingContext(*(void *)(v0 + 112), *(void *)(v0 + 136), (uint64_t (*)(void))type metadata accessor for Actions.MetricsReportingContext);
    *(void *)(v0 + 144) = MusicItem.metricsTargetIdentifier.getter(v7);
    *(void *)(v0 + 152) = v8;
    uint64_t v9 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v6, 1, 1, v9);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<MetricsEvent.Click.ActionDetails.Key>);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100493400;
    *(void *)(inited + 32) = MusicItem.metricsContentType.getter();
    *(void *)(inited + 40) = v11;
    *(unsigned char *)(inited + 48) = 0;
    *(void *)(v0 + 160) = specialized MetricsEvent.Click.ActionDetails.init(_:)(inited);
    *(void *)(v0 + 168) = v12;
    *(void *)(v0 + 176) = v13;
    *(_WORD *)(v0 + 192) = v14;
    swift_setDeallocating();
    swift_arrayDestroy();
    type metadata accessor for MainActor();
    *(void *)(v0 + 184) = static MainActor.shared.getter();
    uint64_t v16 = dispatch thunk of Actor.unownedExecutor.getter();
    return _swift_task_switch(closure #3 in Actions.Play.Context.init<A>(item:playbackIntent:playbackController:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:), v16, v15);
  }
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  uint64_t v1 = *(void *)(v0 + 176);
  uint64_t v3 = *(void **)(v0 + 160);
  uint64_t v2 = *(void *)(v0 + 168);
  uint64_t v5 = *(void *)(v0 + 144);
  uint64_t v4 = *(void *)(v0 + 152);
  uint64_t v6 = *(uint64_t **)(v0 + 136);
  uint64_t v7 = *(void *)(v0 + 104);
  uint64_t v8 = *(unsigned __int16 *)(v0 + 192);
  swift_release();
  specialized static Actions.reportClickEvent(targetIdentifier:targetType:actionType:actionURL:actionDetails:reportingContext:)(v5, v4, 5, 24, v7, v3, v2, v1, v8, v6);
  outlined consume of MetricsEvent.Click.ActionDetails(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease();
  outlined destroy of TaskPriority?(v7, &demangling cache variable for type metadata for URL?);
  return _swift_task_switch(closure #3 in Actions.Play.Context.init<A>(item:playbackIntent:playbackController:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:), 0, 0);
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  outlined destroy of Notice.Variant(*(void *)(v0 + 136), (uint64_t (*)(void))type metadata accessor for Actions.MetricsReportingContext);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t closure #1 in Actions.Queue.Context.init<A>(item:playbackIntent:location:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)(uint64_t a1, unint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = type metadata accessor for MusicPlayer.PlayabilityStatus();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = (void *)(a1 + OBJC_IVAR____TtC9MusicCore18PlaybackController_player);
  swift_beginAccess();
  if (!*v16)
  {
    NSString v30 = 0;
    unint64_t v31 = 0xE000000000000000;
    _StringGuts.grow(_:)(39);
    v26._uint64_t countAndFlagsBits = 0xD000000000000025;
    v26._object = (void *)0x80000001004685C0;
    String.append(_:)(v26);
    DefaultStringInterpolation.appendInterpolation<A>(_:)();
    return (uint64_t)v30;
  }
  v29[1] = a6;
  _OWORD v29[2] = a5;
  uint64_t v32 = &type metadata for Player.InsertCommand;
  uint64_t v33 = &protocol witness table for Player.InsertCommand;
  NSString v30 = a4;
  unint64_t v31 = (unint64_t)a3;
  __swift_project_boxed_opaque_existential_0Tm(&v30, (uint64_t)&type metadata for Player.InsertCommand);
  uint64_t DynamicType = swift_getDynamicType();
  uint64_t v18 = (uint64_t)v33;
  id v19 = a4;
  outlined copy of Player.InsertCommand.Location(a3);
  id v20 = v19;
  outlined copy of Player.InsertCommand.Location(a3);
  id v21 = v20;
  outlined copy of Player.InsertCommand.Location(a3);
  swift_retain();
  uint64_t v22 = Player.response(for:)(DynamicType, v18);
  if (!v22)
  {
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v30);

    outlined consume of Player.InsertCommand.Location(a3);
    goto LABEL_7;
  }
  uint64_t v23 = (void *)v22;
  BOOL v24 = MPCPlayerResponse.canPerform(_:)((uint64_t)&v30);

  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v30);
  outlined consume of Player.InsertCommand.Location(a3);
  if (!v24)
  {
LABEL_7:
    NSString v30 = 0;
    unint64_t v31 = 0xE000000000000000;
    _StringGuts.grow(_:)(34);
    v27._object = (void *)0x80000001004685F0;
    v27._uint64_t countAndFlagsBits = 0xD000000000000020;
    String.append(_:)(v27);
    v29[3] = a3;
    _print_unlocked<A, B>(_:_:)();

    outlined consume of Player.InsertCommand.Location(a3);
    swift_release();
    return (uint64_t)v30;
  }
  Player.state<A>(for:)(a2);
  MusicItemState.playabilityStatus.getter();
  swift_release();
  uint64_t v25 = MusicPlayer.PlayabilityStatus.actionSupportedStatus.getter();

  swift_release();
  outlined consume of Player.InsertCommand.Location(a3);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  return v25;
}

uint64_t closure #2 in Actions.Queue.Context.init<A>(item:playbackIntent:location:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[14] = a7;
  v8[15] = a8;
  v8[12] = a5;
  v8[13] = a6;
  v8[10] = a3;
  v8[11] = a4;
  v8[8] = a1;
  v8[9] = a2;
  type metadata accessor for Notice(0);
  v8[16] = swift_task_alloc();
  return _swift_task_switch(closure #2 in Actions.Queue.Context.init<A>(item:playbackIntent:location:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:), 0, 0);
}

uint64_t closure #2 in Actions.Queue.Context.init<A>(item:playbackIntent:location:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)()
{
  unint64_t v1 = *(void *)(v0 + 96);
  uint64_t v2 = *(void **)(v0 + 64);
  NSString v3 = String._bridgeToObjectiveC()();
  [v2 setPlayActivityFeatureName:v3];

  if (v1 >> 60 == 15) {
    Class isa = 0;
  }
  else {
    Class isa = Data._bridgeToObjectiveC()().super.isa;
  }
  [*(id *)(v0 + 64) setPlayActivityRecommendationData:isa];

  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 136) = v5;
  *uint64_t v5 = v0;
  v5[1] = closure #2 in Actions.Queue.Context.init<A>(item:playbackIntent:location:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:);
  uint64_t v6 = *(void *)(v0 + 112);
  uint64_t v7 = *(void *)(v0 + 64);
  return PlaybackController.insert(_:location:)(v7, v6);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();
  uint64_t v4;

  *(void *)(*(void *)v1 + 144) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = closure #2 in Actions.Queue.Context.init<A>(item:playbackIntent:location:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:);
  }
  else {
    uint64_t v2 = closure #2 in Actions.Queue.Context.init<A>(item:playbackIntent:location:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:);
  }
  return _swift_task_switch(v2, 0, 0);
}

{
  void *v0;
  uint64_t v1;
  unint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v7;

  outlined init with copy of (String, Any)(v0[15], (uint64_t)(v0 + 2), &demangling cache variable for type metadata for NoticePresenting?);
  unint64_t v1 = v0[5];
  v0[19] = v1;
  if (v1)
  {
    uint64_t v2 = (unint64_t *)v0[16];
    v0[20] = v0[6];
    v0[21] = __swift_project_boxed_opaque_existential_0Tm(v0 + 2, v1);
    Player.InsertCommand.Location.notice.getter(v2);
    type metadata accessor for MainActor();
    v0[22] = static MainActor.shared.getter();
    uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
    return _swift_task_switch(closure #2 in Actions.Queue.Context.init<A>(item:playbackIntent:location:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:), v4, v3);
  }
  else
  {
    outlined destroy of TaskPriority?((uint64_t)(v0 + 2), &demangling cache variable for type metadata for NoticePresenting?);
    swift_task_dealloc();
    uint64_t v5 = (uint64_t (*)(void))v0[1];
    return v5();
  }
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  uint64_t v2 = v0[19];
  unint64_t v1 = v0[20];
  NSString v3 = v0[16];
  swift_release();
  NoticePresenting.present(_:internalOnly:)(v3, 0, v2, v1);
  outlined destroy of Notice.Variant(v3, type metadata accessor for Notice);
  return _swift_task_switch(closure #2 in Actions.Queue.Context.init<A>(item:playbackIntent:location:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:), 0, 0);
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
  swift_task_dealloc();
  unint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

{
  void *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  BOOL v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t (*v9)(void);
  uint64_t v11;
  void *v12;
  uint64_t v13;

  uint64_t v12 = v0;
  if (one-time initialization token for actions != -1) {
    swift_once();
  }
  unint64_t v1 = type metadata accessor for Logger();
  __swift_project_value_buffer(v1, (uint64_t)static Logger.actions);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  NSString v3 = static os_log_type_t.error.getter();
  uint64_t v4 = os_log_type_enabled(v2, v3);
  uint64_t v5 = v0[18];
  if (v4)
  {
    uint64_t v6 = swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136446210;
    v0[7] = v5;
    swift_errorRetain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
    uint64_t v7 = String.init<A>(describing:)();
    *(void *)(v6 + 4) = _s2os32getNullTerminatedUTF8PointerImpl_21storingStringOwnersInSVSS_SpyypGSgztF_0(v7, v8, &v11);
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Failed to perform add to queue with error=%{public}s", (uint8_t *)v6, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t Player.InsertCommand.Location.notice.getter@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for Notice.Variant(0);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_storeEnumTagMultiPayload();
  static Notice.variant(_:)((uint64_t)v4, a1);
  return outlined destroy of Notice.Variant((uint64_t)v4, type metadata accessor for Notice.Variant);
}

uint64_t closure #3 in Actions.Queue.Context.init<A>(item:playbackIntent:location:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[12] = a4;
  v5[13] = a5;
  v5[10] = a2;
  v5[11] = a3;
  v5[9] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  v5[14] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  v5[15] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for Actions.MetricsReportingContext();
  v5[16] = v6;
  v5[17] = *(void *)(v6 - 8);
  v5[18] = swift_task_alloc();
  return _swift_task_switch(closure #3 in Actions.Queue.Context.init<A>(item:playbackIntent:location:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:), 0, 0);
}

uint64_t closure #3 in Actions.Queue.Context.init<A>(item:playbackIntent:location:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)()
{
  uint64_t v1 = *(void *)(v0 + 128);
  uint64_t v2 = *(void *)(v0 + 136);
  uint64_t v3 = *(void *)(v0 + 120);
  outlined init with copy of (String, Any)(*(void *)(v0 + 72), v3, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    outlined destroy of TaskPriority?(*(void *)(v0 + 120), &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
  else
  {
    uint64_t v6 = *(void *)(v0 + 96);
    unint64_t v7 = *(void *)(v0 + 88);
    outlined init with take of Actions.MetricsReportingContext(*(void *)(v0 + 120), *(void *)(v0 + 144), (uint64_t (*)(void))type metadata accessor for Actions.MetricsReportingContext);
    *(void *)(v0 + 152) = MusicItem.metricsTargetIdentifier.getter(v6);
    *(void *)(v0 + 160) = v8;
    if (v7 >= 4)
    {
      return _assertionFailure(_:_:file:line:flags:)();
    }
    else
    {
      *(unsigned char *)(v0 + 202) = 0x19041A1Bu >> (8 * v7);
      uint64_t v9 = *(void *)(v0 + 112);
      uint64_t v10 = type metadata accessor for URL();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<MetricsEvent.Click.ActionDetails.Key>);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_100493400;
      *(void *)(inited + 32) = MusicItem.metricsContentType.getter();
      *(void *)(inited + 40) = v12;
      *(unsigned char *)(inited + 48) = 0;
      *(void *)(v0 + 168) = specialized MetricsEvent.Click.ActionDetails.init(_:)(inited);
      *(void *)(v0 + 176) = v13;
      *(void *)(v0 + 184) = v14;
      *(_WORD *)(v0 + 200) = v15;
      swift_setDeallocating();
      swift_arrayDestroy();
      type metadata accessor for MainActor();
      *(void *)(v0 + 192) = static MainActor.shared.getter();
      uint64_t v17 = dispatch thunk of Actor.unownedExecutor.getter();
      return _swift_task_switch(closure #3 in Actions.Queue.Context.init<A>(item:playbackIntent:location:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:), v17, v16);
    }
  }
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v11;

  uint64_t v1 = *(void *)(v0 + 184);
  uint64_t v3 = *(void **)(v0 + 168);
  uint64_t v2 = *(void *)(v0 + 176);
  uint64_t v5 = *(void *)(v0 + 152);
  uint64_t v4 = *(void *)(v0 + 160);
  uint64_t v6 = *(uint64_t **)(v0 + 144);
  unint64_t v7 = *(void *)(v0 + 112);
  uint64_t v8 = *(unsigned __int8 *)(v0 + 202);
  uint64_t v9 = *(unsigned __int16 *)(v0 + 200);
  swift_release();
  specialized static Actions.reportClickEvent(targetIdentifier:targetType:actionType:actionURL:actionDetails:reportingContext:)(v5, v4, 5, v8, v7, v3, v2, v1, v9, v6);
  outlined consume of MetricsEvent.Click.ActionDetails(v3, v2, v1, v9, SBYTE1(v9));
  swift_bridgeObjectRelease();
  outlined destroy of TaskPriority?(v7, &demangling cache variable for type metadata for URL?);
  return _swift_task_switch(closure #3 in Actions.Queue.Context.init<A>(item:playbackIntent:location:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:), 0, 0);
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  outlined destroy of Notice.Variant(*(void *)(v0 + 144), (uint64_t (*)(void))type metadata accessor for Actions.MetricsReportingContext);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t Actions.Play.Context.menuItemTitle.getter()
{
  return Actions.CreateStation.Context.menuItemTitle.getter();
}

uint64_t (*Actions.Play.Context.menuItemImage.getter())()
{
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = 2036427888;
  *(void *)(v0 + 24) = 0xE400000000000000;
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = 2036427888;
  *(void *)(v1 + 24) = 0xE400000000000000;
  return closure #1 in ActionMenuItemImage.init(systemName:)partial apply;
}

uint64_t protocol witness for ActionMenuItemConfiguring.menuItemTitle.getter in conformance Actions.Play.Context()
{
  return protocol witness for ActionMenuItemConfiguring.menuItemTitle.getter in conformance Actions.CreateStation.Context();
}

uint64_t (*protocol witness for ActionMenuItemConfiguring.menuItemImage.getter in conformance Actions.Play.Context())()
{
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = 2036427888;
  *(void *)(v0 + 24) = 0xE400000000000000;
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = 2036427888;
  *(void *)(v1 + 24) = 0xE400000000000000;
  return closure #1 in ActionMenuItemImage.init(systemName:)partial apply;
}

uint64_t Actions.Queue.Context.menuItemTitle.getter()
{
  return specialized Actions.Queue.Context.menuItemTitle.getter();
}

uint64_t Actions.Queue.Context.menuItemSubtitle.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t (*Actions.Queue.Context.menuItemImage.getter())()
{
  outlined init with take of Player.InsertCommand.Location(v0, (uint64_t)&v6);
  outlined init with take of Player.InsertCommand.Location((uint64_t)&v6, (uint64_t)&v7);
  if (v7) {
    unint64_t v1 = 0xD000000000000028;
  }
  else {
    unint64_t v1 = 0xD000000000000029;
  }
  if (v7) {
    unint64_t v2 = 0x80000001004684F0;
  }
  else {
    unint64_t v2 = 0x8000000100468520;
  }
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = v2;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v1;
  *(void *)(v4 + 24) = v2;
  swift_bridgeObjectRetain();
  return closure #1 in ActionMenuItemImage.init(systemName:)partial apply;
}

uint64_t (*protocol witness for ActionMenuItemConfiguring.menuItemImage.getter in conformance Actions.Queue.Context())()
{
  if (*v0) {
    unint64_t v1 = 0xD000000000000028;
  }
  else {
    unint64_t v1 = 0xD000000000000029;
  }
  if (*v0) {
    unint64_t v2 = 0x80000001004684F0;
  }
  else {
    unint64_t v2 = 0x8000000100468520;
  }
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = v2;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v1;
  *(void *)(v4 + 24) = v2;
  swift_bridgeObjectRetain();
  return closure #1 in ActionMenuItemImage.init(systemName:)partial apply;
}

uint64_t key path getter for Player.nowPlaying : Player@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t key path setter for Player.nowPlaying : Player(void **a1)
{
  unint64_t v1 = *a1;
  swift_getKeyPath();
  swift_getKeyPath();
  id v2 = v1;
  swift_retain();
  return static Published.subscript.setter();
}

uint64_t specialized closure #1 in MusicItemState.init(item:musicKitItemState:player:)()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    specialized MusicItemState.updatePlayabilityStatus()();
    return swift_release();
  }
  return result;
}

uint64_t specialized closure #2 in MusicItemState.init(item:musicKitItemState:player:)()
{
  uint64_t v0 = type metadata accessor for MusicPlayer.PreviewCapabilityStatus();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v11 - v5;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v8 = dispatch thunk of MusicPlayer.ItemState.previewCapabilityStatus.getter();
    __chkstk_darwin(v8);
    uint64_t v9 = type metadata accessor for Song();
    *(&v11 - 2) = v9;
    *(&v11 - 1) = (uint64_t)&protocol witness table for Song;
    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath);
    *(&v11 - 2) = v9;
    *(&v11 - 1) = (uint64_t)&protocol witness table for Song;
    swift_getKeyPath();
    (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v4, v6, v0);
    swift_retain();
    static Published.subscript.setter();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v6, v0);
    return swift_release();
  }
  return result;
}

uint64_t specialized MusicItemState.updatePlayabilityStatus()()
{
  uint64_t v80 = type metadata accessor for Song();
  uint64_t v77 = *(void *)(v80 - 8);
  __chkstk_darwin(v80);
  uint64_t v76 = (char *)&v74 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = type metadata accessor for MusicPlayer.PlayabilityStatus.UnplayableReason();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v74 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v74 - v7;
  uint64_t v9 = type metadata accessor for MusicPlayer.PlayabilityStatus();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v81 = (char *)&v74 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v79 = (char *)&v74 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v74 - v16;
  __chkstk_darwin(v15);
  id v19 = (char *)&v74 - v18;
  uint64_t v84 = v0;
  swift_retain();
  dispatch thunk of MusicPlayer.ItemState.playabilityStatus.getter();
  swift_release();
  id v20 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  id v82 = v19;
  uint64_t v78 = v20;
  v20(v17, v19, v9);
  uint64_t v83 = v10;
  uint64_t v21 = (*(uint64_t (**)(char *, uint64_t))(v10 + 88))(v17, v9);
  uint64_t v22 = enum case for MusicPlayer.PlayabilityStatus.unplayable(_:);
  if (v21 == enum case for MusicPlayer.PlayabilityStatus.unplayable(_:))
  {
    (*(void (**)(char *, uint64_t))(v83 + 96))(v17, v9);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v8, v17, v2);
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v6, enum case for MusicPlayer.PlayabilityStatus.UnplayableReason.subscriptionRequired(_:), v2);
    char v23 = static MusicPlayer.PlayabilityStatus.UnplayableReason.== infix(_:_:)();
    uint64_t v77 = *(void *)(v3 + 8);
    ((void (*)(char *, uint64_t))v77)(v6, v2);
    BOOL v24 = v8;
    uint64_t v75 = v2;
    uint64_t v76 = (char *)(v3 + 8);
    if ((v23 & 1) == 0) {
      goto LABEL_10;
    }
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    swift_release();
    id v25 = v85;

    if (v25)
    {
      uint64_t v26 = v83;
      Swift::String v27 = v79;
      uint64_t v28 = (*(uint64_t (**)(char *, void, uint64_t))(v83 + 104))(v79, enum case for MusicPlayer.PlayabilityStatus.playable(_:), v9);
      __chkstk_darwin(v28);
      uint64_t v29 = v80;
      *(&v74 - 2) = (char *)v80;
      *(&v74 - 1) = (char *)&protocol witness table for Song;
      uint64_t KeyPath = swift_getKeyPath();
      __chkstk_darwin(KeyPath);
      *(&v74 - 2) = (char *)v29;
      *(&v74 - 1) = (char *)&protocol witness table for Song;
      swift_getKeyPath();
      v78(v81, v27, v9);
      swift_retain();
      static Published.subscript.setter();
      unint64_t v31 = *(void (**)(char *, uint64_t))(v26 + 8);
      v31(v27, v9);
      uint64_t v32 = v24;
    }
    else
    {
LABEL_10:
      uint64_t v45 = v78;
      uint64_t v44 = v79;
      uint64_t v46 = ((uint64_t (*)(char *, char *, uint64_t))v78)(v79, v82, v9);
      __chkstk_darwin(v46);
      uint64_t v47 = v83;
      uint64_t v48 = v80;
      *(&v74 - 2) = (char *)v80;
      *(&v74 - 1) = (char *)&protocol witness table for Song;
      uint64_t v49 = swift_getKeyPath();
      uint64_t v74 = v24;
      __chkstk_darwin(v49);
      *(&v74 - 2) = (char *)v48;
      *(&v74 - 1) = (char *)&protocol witness table for Song;
      swift_getKeyPath();
      v45(v81, v44, v9);
      swift_retain();
      static Published.subscript.setter();
      unint64_t v31 = *(void (**)(char *, uint64_t))(v47 + 8);
      v31(v44, v9);
      uint64_t v32 = v74;
    }
    ((void (*)(char *, uint64_t))v77)(v32, v75);
    return ((uint64_t (*)(char *, uint64_t))v31)(v82, v9);
  }
  uint64_t v33 = v21;
  if (v21 == enum case for MusicPlayer.PlayabilityStatus.playable(_:))
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    swift_release();
    id v34 = v85;

    if (!v34) {
      goto LABEL_9;
    }
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    swift_release();
    if ((v85 & 1) != 0
      || (swift_retain(), unsigned __int8 v35 = Player.supportsDelegation.getter(), swift_release(), (v35 & 1) != 0))
    {
LABEL_9:
      uint64_t v36 = v78;
      int v37 = v79;
      Swift::String v38 = v82;
      uint64_t v39 = ((uint64_t (*)(char *, char *, uint64_t))v78)(v79, v82, v9);
      __chkstk_darwin(v39);
      uint64_t v40 = v80;
      *(&v74 - 2) = (char *)v80;
      *(&v74 - 1) = (char *)&protocol witness table for Song;
      uint64_t v41 = swift_getKeyPath();
      __chkstk_darwin(v41);
      *(&v74 - 2) = (char *)v40;
      *(&v74 - 1) = (char *)&protocol witness table for Song;
      swift_getKeyPath();
      v36(v81, v37, v9);
      swift_retain();
      static Published.subscript.setter();
      uint64_t v42 = *(void (**)(char *, uint64_t))(v83 + 8);
      v42(v37, v9);
      return ((uint64_t (*)(char *, uint64_t))v42)(v38, v9);
    }
    uint64_t v57 = v84 + *(void *)(*(void *)v84 + 120);
    swift_beginAccess();
    uint64_t v59 = v76;
    uint64_t v58 = v77;
    uint64_t v60 = v80;
    (*(void (**)(char *, uint64_t, uint64_t))(v77 + 16))(v76, v57, v80);
    Song.catalogID.getter();
    uint64_t v62 = v61;
    (*(void (**)(char *, uint64_t))(v58 + 8))(v59, v60);
    if (!v62)
    {
      uint64_t v69 = v79;
      (*(void (**)(char *, void, uint64_t))(v3 + 104))(v79, enum case for MusicPlayer.PlayabilityStatus.UnplayableReason.contentUnavailable(_:), v2);
      uint64_t v70 = v83;
      uint64_t v71 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v83 + 104))(v69, v22, v9);
      __chkstk_darwin(v71);
      *(&v74 - 2) = (char *)v60;
      *(&v74 - 1) = (char *)&protocol witness table for Song;
      uint64_t v72 = swift_getKeyPath();
      __chkstk_darwin(v72);
      *(&v74 - 2) = v73;
      *(&v74 - 1) = (char *)&protocol witness table for Song;
      swift_getKeyPath();
      v78(v81, v69, v9);
      swift_retain();
      static Published.subscript.setter();
      unint64_t v31 = *(void (**)(char *, uint64_t))(v70 + 8);
      v31(v69, v9);
      return ((uint64_t (*)(char *, uint64_t))v31)(v82, v9);
    }
    swift_bridgeObjectRelease();
    uint64_t v63 = v83;
    uint64_t v64 = v79;
    uint64_t v65 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v83 + 104))(v79, v33, v9);
    __chkstk_darwin(v65);
    *(&v74 - 2) = (char *)v60;
    *(&v74 - 1) = (char *)&protocol witness table for Song;
    uint64_t v66 = swift_getKeyPath();
    __chkstk_darwin(v66);
    *(&v74 - 2) = v67;
    *(&v74 - 1) = (char *)&protocol witness table for Song;
    swift_getKeyPath();
    v78(v81, v64, v9);
    swift_retain();
    static Published.subscript.setter();
    uint64_t v68 = *(void (**)(char *, uint64_t))(v63 + 8);
    v68(v64, v9);
    return ((uint64_t (*)(char *, uint64_t))v68)(v82, v9);
  }
  else
  {
    uint64_t v50 = v78;
    uint64_t v51 = v79;
    uint64_t v52 = v82;
    uint64_t v53 = ((uint64_t (*)(char *, char *, uint64_t))v78)(v79, v82, v9);
    __chkstk_darwin(v53);
    uint64_t v54 = v80;
    *(&v74 - 2) = (char *)v80;
    *(&v74 - 1) = (char *)&protocol witness table for Song;
    uint64_t v55 = swift_getKeyPath();
    __chkstk_darwin(v55);
    *(&v74 - 2) = (char *)v54;
    *(&v74 - 1) = (char *)&protocol witness table for Song;
    swift_getKeyPath();
    v50(v81, v51, v9);
    swift_retain();
    static Published.subscript.setter();
    unint64_t v56 = *(void (**)(char *, uint64_t))(v83 + 8);
    v56(v51, v9);
    v56(v52, v9);
    return ((uint64_t (*)(char *, uint64_t))v56)(v17, v9);
  }
}

uint64_t sub_100083084()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicPlayer.PlayabilityStatus?)
                 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v9 = *(void *)(v2 + 64);
  uint64_t v4 = *(void *)(v1 - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = type metadata accessor for MusicPlayer.PlayabilityStatus();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))(v0 + v3, 1, v6)) {
    (*(void (**)(unint64_t, uint64_t))(v7 + 8))(v0 + v3, v6);
  }
  (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + ((v3 + v9 + v5) & ~v5), v1);

  return swift_deallocObject();
}

unint64_t partial apply for closure #1 in Actions.Play.Context.init<A>(item:playbackIntent:playbackController:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicPlayer.PlayabilityStatus?)
                 - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = v0
     + ((v4 + *(void *)(v3 + 64) + *(unsigned __int8 *)(*(void *)(v1 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80));

  return closure #1 in Actions.Play.Context.init<A>(item:playbackIntent:playbackController:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)(v0 + v4, v5, v1, v2);
}

uint64_t sub_100083310()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicPlayer.PlayabilityStatus?)
                 - 8);
  uint64_t v14 = v1;
  uint64_t v3 = *(void *)(v1 - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v5 = v3;
  unint64_t v6 = (v4 + *(void *)(v2 + 64) + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v3 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (((v7 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = v0 + v4;
  uint64_t v10 = type metadata accessor for MusicPlayer.PlayabilityStatus();
  uint64_t v11 = *(void *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10)) {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v6, v14);

  swift_bridgeObjectRelease();
  unint64_t v12 = *(void *)(v0 + v8 + 8);
  if (v12 >> 60 != 15) {
    outlined consume of Data._Representation(*(void *)(v0 + v8), v12);
  }

  return swift_deallocObject();
}

uint64_t partial apply for closure #2 in Actions.Play.Context.init<A>(item:playbackIntent:playbackController:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicPlayer.PlayabilityStatus?)
                 - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (v4 + *(void *)(v3 + 64) + *(unsigned __int8 *)(*(void *)(v2 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 8) + 80);
  unint64_t v6 = (*(void *)(*(void *)(v2 - 8) + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v7 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = v0 + v4;
  uint64_t v10 = v0 + v5;
  uint64_t v11 = *(void *)(v0 + v6);
  uint64_t v12 = *(void *)(v0 + v7);
  uint64_t v13 = *(void *)(v0 + v7 + 8);
  uint64_t v14 = *(void *)(v0 + v8);
  uint64_t v15 = *(void *)(v0 + v8 + 8);
  uint64_t v16 = *(void *)(v0 + ((v8 + 23) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v17 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v17;
  void *v17 = v1;
  v17[1] = closure #3 in static Actions.ReportConcern.action(context:);
  return closure #2 in Actions.Play.Context.init<A>(item:playbackIntent:playbackController:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)(v9, v10, v11, v12, v13, v14, v15, v16);
}

uint64_t partial apply for closure #3 in Actions.Play.Context.init<A>(item:playbackIntent:playbackController:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?)
                 - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v0 + v5;
  uint64_t v7 = v0
     + ((v5 + *(void *)(v4 + 64) + *(unsigned __int8 *)(*(void *)(v2 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 8) + 80));
  unint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v8;
  *unint64_t v8 = v1;
  v8[1] = closure #3 in static Actions.ReportConcern.action(context:);
  return closure #3 in Actions.Play.Context.init<A>(item:playbackIntent:playbackController:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)(v6, v7, v2, v3);
}

uint64_t sub_100083838()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  unint64_t v5 = *(void **)(v0 + v4);
  if ((unint64_t)v5 >= 4) {

  }
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in Actions.Queue.Context.init<A>(item:playbackIntent:location:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)()
{
  unint64_t v1 = (*(unsigned __int8 *)(*(void *)(v0[2] - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[2] - 8) + 80);
  unint64_t v2 = (*(void *)(*(void *)(v0[2] - 8) + 64) + v1 + 7) & 0xFFFFFFFFFFFFFFF8;
  return closure #1 in Actions.Queue.Context.init<A>(item:playbackIntent:location:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)(v0[4], (unint64_t)v0 + v1, *(void **)((char *)v0 + v2), *(void **)((char *)v0 + ((v2 + 15) & 0xFFFFFFFFFFFFFFF8)), v0[2], v0[3]);
}

uint64_t sub_1000839A0()
{
  swift_bridgeObjectRelease();
  unint64_t v1 = *(void *)(v0 + 48);
  if (v1 >> 60 != 15) {
    outlined consume of Data._Representation(*(void *)(v0 + 40), v1);
  }

  unint64_t v2 = *(void **)(v0 + 64);
  if ((unint64_t)v2 >= 4) {

  }
  if (*(void *)(v0 + 96)) {
    __swift_destroy_boxed_opaque_existential_0Tm(v0 + 72);
  }

  return swift_deallocObject();
}

uint64_t partial apply for closure #2 in Actions.Queue.Context.init<A>(item:playbackIntent:location:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = v0[4];
  uint64_t v5 = v0[5];
  uint64_t v6 = v0[6];
  uint64_t v7 = v0[7];
  uint64_t v8 = v0[8];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v9;
  *uint64_t v9 = v1;
  v9[1] = closure #3 in static Actions.ReportConcern.action(context:);
  return closure #2 in Actions.Queue.Context.init<A>(item:playbackIntent:location:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)(v2, v3, v4, v5, v6, v7, v8, (uint64_t)(v0 + 9));
}

uint64_t sub_100083AF8()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?)
                 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v1 - 8);
  unint64_t v5 = (v3 + *(void *)(v2 + 64) + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = v0 + v3;
  uint64_t v8 = type metadata accessor for Actions.MetricsReportingContext();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8))
  {
    uint64_t v17 = v1;
    if (*(void *)(v7 + 8) >= 0xBuLL) {
      swift_bridgeObjectRelease();
    }
    uint64_t v9 = v7 + *(int *)(v8 + 20);
    uint64_t v10 = type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v9, 1, v10))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v16 = v9 + *(int *)(v10 + 24);
      uint64_t v11 = type metadata accessor for URL();
      uint64_t v14 = *(void *)(v11 - 8);
      uint64_t v15 = v11;
      if (!(*(unsigned int (**)(uint64_t, uint64_t))(v14 + 48))(v16, 1)) {
        (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v16, v15);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v1 = v17;
  }
  (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v5, v1);
  uint64_t v12 = *(void **)(v0 + v6);
  if ((unint64_t)v12 >= 4) {

  }
  return swift_deallocObject();
}

uint64_t partial apply for closure #3 in Actions.Queue.Context.init<A>(item:playbackIntent:location:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)()
{
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?)
                 - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (v5 + *(void *)(v4 + 64) + *(unsigned __int8 *)(*(void *)(v3 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v3 - 8) + 80);
  uint64_t v7 = v0 + v5;
  uint64_t v8 = v0 + v6;
  uint64_t v9 = *(void *)(v0 + ((*(void *)(*(void *)(v3 - 8) + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v10;
  void *v10 = v1;
  v10[1] = closure #3 in static Actions.ReportConcern.action(context:);
  return closure #3 in Actions.Queue.Context.init<A>(item:playbackIntent:location:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)(v7, v8, v9, v3, v2);
}

uint64_t specialized Actions.Queue.Context.menuItemTitle.getter()
{
  uint64_t v0 = type metadata accessor for Locale();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = type metadata accessor for String.LocalizationValue();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  unint64_t v5 = &v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v3);
  uint64_t v7 = &v11[-v6];
  String.LocalizationValue.init(stringLiteral:)();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v2 + 16))(v5, v7, v1);
  if (one-time initialization token for module != -1) {
    swift_once();
  }
  id v8 = (id)static NSBundle.module;
  static Locale.current.getter();
  uint64_t v9 = String.init(localized:table:bundle:locale:comment:)();
  (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v7, v1);
  return v9;
}

uint64_t specialized Actions.Preview.Context.menuItemTitle.getter()
{
  uint64_t v0 = type metadata accessor for Locale();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = type metadata accessor for String.LocalizationValue();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  unint64_t v5 = &v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v3);
  uint64_t v7 = &v11[-v6];
  String.LocalizationValue.init(stringLiteral:)();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v2 + 16))(v5, v7, v1);
  if (one-time initialization token for module != -1) {
    swift_once();
  }
  id v8 = (id)static NSBundle.module;
  static Locale.current.getter();
  uint64_t v9 = String.init(localized:table:bundle:locale:comment:)();
  (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v7, v1);
  return v9;
}

uint64_t specialized static Actions.Queue.action(context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)a1;
  uint64_t v4 = a1 + 8;
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  long long v10 = *(_OWORD *)(a1 + 40);
  long long v11 = *(_OWORD *)(a1 + 24);
  long long v9 = *(_OWORD *)(a1 + 56);
  outlined init with take of Player.InsertCommand.Location(a1, (uint64_t)v13);
  outlined init with take of Player.InsertCommand.Location((uint64_t)v13, (uint64_t)&v14);
  if (v14 >= 4)
  {
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    unsigned int v7 = 0x1F201D1Eu >> (8 * v14);
    outlined init with take of PresentationSource?(v4, (uint64_t)v12, (uint64_t *)&demangling cache variable for type metadata for String?);
    outlined retain of String?((uint64_t)v12);
    *(void *)a2 = v3;
    *(void *)(a2 + 8) = v5;
    *(void *)(a2 + 16) = v6;
    *(_OWORD *)(a2 + 24) = v11;
    *(_OWORD *)(a2 + 40) = v10;
    *(_OWORD *)(a2 + 56) = v9;
    *(unsigned char *)(a2 + 72) = v7;
    *(void *)(a2 + 80) = closure #1 in static Actions.Queue.action(context:);
    *(void *)(a2 + 88) = 0;
    *(void *)(a2 + 96) = 0x4014000000000000;
    *(void *)(a2 + 104) = &async function pointer to closure #2 in static Actions.Queue.action(context:);
    *(void *)(a2 + 112) = 0;
    *(void *)(a2 + 120) = &async function pointer to closure #3 in static Actions.Queue.action(context:);
    *(void *)(a2 + 128) = 0;
    swift_retain();
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_1000844F4()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in Actions.Preview.Context.init<A>(item:canPreview:preview:metricsReportingContext:)()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?)
                 - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v0 + v5;
  uint64_t v7 = v0
     + ((v5 + *(void *)(v4 + 64) + *(unsigned __int8 *)(*(void *)(v2 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 8) + 80));
  id v8 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v8;
  *id v8 = v1;
  v8[1] = closure #3 in static Actions.ReportConcern.action(context:);
  return closure #1 in Actions.Preview.Context.init<A>(item:canPreview:preview:metricsReportingContext:)(v6, v7, v2, v3);
}

ValueMetadata *type metadata accessor for Actions.Preview()
{
  return &type metadata for Actions.Preview;
}

ValueMetadata *type metadata accessor for Actions.Preview.Context()
{
  return &type metadata for Actions.Preview.Context;
}

ValueMetadata *type metadata accessor for Actions.CreateStation()
{
  return &type metadata for Actions.CreateStation;
}

ValueMetadata *type metadata accessor for Actions.CreateStation.Context()
{
  return &type metadata for Actions.CreateStation.Context;
}

ValueMetadata *type metadata accessor for Actions.Play()
{
  return &type metadata for Actions.Play;
}

ValueMetadata *type metadata accessor for Actions.Play.Context()
{
  return &type metadata for Actions.Play.Context;
}

ValueMetadata *type metadata accessor for Actions.Queue()
{
  return &type metadata for Actions.Queue;
}

uint64_t destroy for Actions.Queue.Context(id *a1)
{
  if ((unint64_t)*a1 >= 4) {

  }
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for Actions.Queue.Context(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  if (*(void *)a2 >= 4uLL) {
    id v5 = v4;
  }
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v6;
  long long v7 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v7;
  uint64_t v8 = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = v8;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for Actions.Queue.Context(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  id v5 = *(void **)a2;
  if (*(void *)a1 >= 4uLL)
  {
    if ((unint64_t)v5 >= 4)
    {
      *(void *)a1 = v5;
      id v7 = v5;

      goto LABEL_8;
    }

    id v5 = *(void **)a2;
    goto LABEL_6;
  }
  if ((unint64_t)v5 < 4)
  {
LABEL_6:
    *(void *)a1 = v5;
    goto LABEL_8;
  }
  *(void *)a1 = v5;
  id v6 = v5;
LABEL_8:
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v8;
  swift_retain();
  swift_release();
  uint64_t v9 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v9;
  swift_retain();
  swift_release();
  uint64_t v10 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v10;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy72_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for Actions.Queue.Context(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)a1;
  unint64_t v5 = *(void *)a2;
  if (*(void *)a1 >= 4uLL)
  {
    if (v5 >= 4)
    {
      *(void *)a1 = v5;

      goto LABEL_6;
    }
  }
  *(void *)a1 = v5;
LABEL_6:
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release();
  uint64_t v6 = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = v6;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for Actions.Queue.Context(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 72)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Actions.Queue.Context(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Actions.Queue.Context()
{
  return &type metadata for Actions.Queue.Context;
}

uint64_t sub_100084A2C()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t outlined init with copy of PlaybackIntentDescriptor.IntentType(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined assign with copy of MusicItem?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicItem?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t outlined init with take of Actions.MetricsReportingContext(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t outlined destroy of Notice.Variant(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t outlined consume of Data?(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return outlined consume of Data._Representation(a1, a2);
  }
  return a1;
}

void *specialized MusicItemState.init(item:musicKitItemState:player:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v74 = a3;
  uint64_t v82 = a2;
  uint64_t v83 = a1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<MusicPlayer.PreviewCapabilityStatus>.Publisher);
  uint64_t v76 = *(void *)(v5 - 8);
  uint64_t v77 = v5;
  __chkstk_darwin(v5);
  uint64_t v75 = (char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Publishers.ReceiveOn<Published<MusicPlayer.PreviewCapabilityStatus>.Publisher, OS_dispatch_queue>);
  uint64_t v79 = *(void *)(v7 - 8);
  uint64_t v80 = v7;
  __chkstk_darwin(v7);
  uint64_t v78 = (char *)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for OS_dispatch_queue.SchedulerOptions?);
  __chkstk_darwin(v9 - 8);
  uint64_t v81 = (char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<MusicPlayer.PlayabilityStatus>.Publisher);
  uint64_t v70 = *(void *)(v69 - 8);
  __chkstk_darwin(v69);
  uint64_t v67 = (char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.ReceiveOn<Published<MusicPlayer.PlayabilityStatus>.Publisher, OS_dispatch_queue>);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v71 = v12;
  uint64_t v72 = v13;
  __chkstk_darwin(v12);
  uint64_t v68 = (char *)&v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<MusicPlayer.PreviewCapabilityStatus>);
  uint64_t v65 = *(void *)(v73 - 8);
  __chkstk_darwin(v73);
  uint64_t v64 = (char *)&v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = type metadata accessor for MusicPlayer.PreviewCapabilityStatus();
  uint64_t v62 = *(void *)(v63 - 8);
  uint64_t v16 = __chkstk_darwin(v63);
  uint64_t v18 = (char *)&v60 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  id v20 = (char *)&v60 - v19;
  uint64_t v61 = (void (*)(char *, char *, uint64_t))__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<MusicPlayer.PlayabilityStatus>);
  uint64_t v21 = *((void *)v61 - 1);
  __chkstk_darwin(v61);
  char v23 = (char *)&v60 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for MusicPlayer.PlayabilityStatus();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v28 = (char *)&v60 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  NSString v30 = (char *)&v60 - v29;
  v4[4] = _swiftEmptyArrayStorage;
  uint64_t v66 = v4 + 4;
  unint64_t v31 = (char *)v4 + *(void *)(*v4 + 128);
  (*(void (**)(char *, void, uint64_t))(v25 + 104))((char *)&v60 - v29, enum case for MusicPlayer.PlayabilityStatus.playable(_:), v24);
  (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v28, v30, v24);
  Published.init(initialValue:)();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v30, v24);
  (*(void (**)(char *, char *, void *))(v21 + 32))(v31, v23, v61);
  uint64_t v32 = (char *)v4 + *(void *)(*v4 + 136);
  uint64_t v33 = enum case for MusicPlayer.PreviewCapabilityStatus.UnpreviewableReason.notSupported(_:);
  uint64_t v34 = type metadata accessor for MusicPlayer.PreviewCapabilityStatus.UnpreviewableReason();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v34 - 8) + 104))(v20, v33, v34);
  uint64_t v35 = v62;
  uint64_t v36 = v63;
  (*(void (**)(char *, void, uint64_t))(v62 + 104))(v20, enum case for MusicPlayer.PreviewCapabilityStatus.unpreviewable(_:), v63);
  uint64_t v61 = *(void (**)(char *, char *, uint64_t))(v35 + 16);
  v61(v18, v20, v36);
  int v37 = v64;
  Swift::String v38 = v18;
  Published.init(initialValue:)();
  uint64_t v62 = *(void *)(v35 + 8);
  ((void (*)(char *, uint64_t))v62)(v20, v36);
  (*(void (**)(char *, char *, uint64_t))(v65 + 32))(v32, v37, v73);
  uint64_t v39 = (char *)v4 + *(void *)(*v4 + 120);
  uint64_t v40 = type metadata accessor for Song();
  uint64_t v73 = *(void *)(v40 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v73 + 16))(v39, v83, v40);
  uint64_t v41 = v74;
  v4[2] = v82;
  v4[3] = v41;
  swift_retain();
  swift_retain();
  specialized MusicItemState.updatePlayabilityStatus()();
  dispatch thunk of MusicPlayer.ItemState.previewCapabilityStatus.getter();
  uint64_t v86 = v40;
  uint64_t v87 = &protocol witness table for Song;
  swift_getKeyPath();
  uint64_t v74 = v40;
  uint64_t v84 = v40;
  id v85 = &protocol witness table for Song;
  swift_getKeyPath();
  v61(v38, v20, v36);
  swift_retain();
  static Published.subscript.setter();
  ((void (*)(char *, uint64_t))v62)(v20, v36);
  uint64_t v42 = v67;
  dispatch thunk of MusicPlayer.ItemState.$playabilityStatus.getter();
  type metadata accessor for OS_dispatch_queue();
  id v88 = (id)static OS_dispatch_queue.main.getter();
  uint64_t v43 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  uint64_t v44 = *(void *)(v43 - 8);
  uint64_t v45 = v81;
  uint64_t v65 = *(void *)(v44 + 56);
  uint64_t v64 = (char *)(v44 + 56);
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v65)(v81, 1, 1, v43);
  lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>((unint64_t *)&lazy protocol witness table cache variable for type Published<MusicPlayer.PlayabilityStatus>.Publisher and conformance Published<A>.Publisher, &demangling cache variable for type metadata for Published<MusicPlayer.PlayabilityStatus>.Publisher);
  lazy protocol witness table accessor for type MusicPlayer.PlayabilityStatus and conformance MusicPlayer.PlayabilityStatus((unint64_t *)&lazy protocol witness table cache variable for type OS_dispatch_queue and conformance OS_dispatch_queue, (void (*)(uint64_t))type metadata accessor for OS_dispatch_queue);
  uint64_t v46 = v68;
  uint64_t v47 = (uint64_t)v45;
  uint64_t v48 = v69;
  Publisher.receive<A>(on:options:)();
  outlined destroy of TaskPriority?(v47, (uint64_t *)&demangling cache variable for type metadata for OS_dispatch_queue.SchedulerOptions?);

  (*(void (**)(char *, uint64_t))(v70 + 8))(v42, v48);
  swift_allocObject();
  swift_weakInit();
  lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type Publishers.ReceiveOn<Published<MusicPlayer.PlayabilityStatus>.Publisher, OS_dispatch_queue> and conformance Publishers.ReceiveOn<A, B>, &demangling cache variable for type metadata for Publishers.ReceiveOn<Published<MusicPlayer.PlayabilityStatus>.Publisher, OS_dispatch_queue>);
  uint64_t v49 = v71;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  uint64_t v50 = v66;
  (*(void (**)(char *, uint64_t))(v72 + 8))(v46, v49);
  swift_beginAccess();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*v50 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v50 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_endAccess();
  uint64_t v51 = v75;
  uint64_t v52 = v82;
  dispatch thunk of MusicPlayer.ItemState.$previewCapabilityStatus.getter();
  id v88 = (id)static OS_dispatch_queue.main.getter();
  uint64_t v53 = (uint64_t)v81;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v65)(v81, 1, 1, v43);
  lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>((unint64_t *)&lazy protocol witness table cache variable for type Published<MusicPlayer.PreviewCapabilityStatus>.Publisher and conformance Published<A>.Publisher, &demangling cache variable for type metadata for Published<MusicPlayer.PreviewCapabilityStatus>.Publisher);
  uint64_t v54 = v77;
  uint64_t v55 = v78;
  Publisher.receive<A>(on:options:)();
  outlined destroy of TaskPriority?(v53, (uint64_t *)&demangling cache variable for type metadata for OS_dispatch_queue.SchedulerOptions?);

  (*(void (**)(char *, uint64_t))(v76 + 8))(v51, v54);
  uint64_t v56 = swift_allocObject();
  swift_weakInit();
  uint64_t v57 = swift_allocObject();
  *(void *)(v57 + 16) = v56;
  *(void *)(v57 + 24) = v52;
  lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type Publishers.ReceiveOn<Published<MusicPlayer.PreviewCapabilityStatus>.Publisher, OS_dispatch_queue> and conformance Publishers.ReceiveOn<A, B>, (uint64_t *)&demangling cache variable for type metadata for Publishers.ReceiveOn<Published<MusicPlayer.PreviewCapabilityStatus>.Publisher, OS_dispatch_queue>);
  swift_retain();
  uint64_t v58 = v80;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v79 + 8))(v55, v58);
  swift_beginAccess();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v4[4] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v4[4] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_endAccess();
  (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v83, v74);
  return v4;
}

uint64_t sub_100085888()
{
  return 16;
}

__n128 sub_100085894(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1000858A8()
{
  return 16;
}

__n128 sub_1000858B4(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

unint64_t type metadata accessor for OS_dispatch_queue()
{
  unint64_t result = lazy cache variable for type metadata for OS_dispatch_queue;
  if (!lazy cache variable for type metadata for OS_dispatch_queue)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  }
  return result;
}

uint64_t lazy protocol witness table accessor for type MusicPlayer.PlayabilityStatus and conformance MusicPlayer.PlayabilityStatus(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100085948()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t partial apply for specialized closure #1 in MusicItemState.init(item:musicKitItemState:player:)()
{
  return specialized closure #1 in MusicItemState.init(item:musicKitItemState:player:)();
}

uint64_t sub_100085988()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t partial apply for specialized closure #2 in MusicItemState.init(item:musicKitItemState:player:)()
{
  return specialized closure #2 in MusicItemState.init(item:musicKitItemState:player:)();
}

double Actions.Share.Context.init(item:applicationCapabilities:shareSheetPresenting:metricsReportingContext:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _OWORD *a5@<X8>)
{
  specialized Actions.Share.Context.init(item:applicationCapabilities:shareSheetPresenting:metricsReportingContext:)(a1, a2, a3, a4, (uint64_t (**)())v9);
  long long v6 = v9[1];
  *a5 = v9[0];
  a5[1] = v6;
  double result = *(double *)&v10;
  long long v8 = v11;
  a5[2] = v10;
  a5[3] = v8;
  return result;
}

__n128 static Actions.Share.action(context:)@<Q0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v5 = a1[5];
  uint64_t v7 = a1[7];
  long long v10 = *(_OWORD *)(a1 + 1);
  long long v11 = *((_OWORD *)a1 + 3);
  uint64_t v6 = v11;
  swift_retain();
  __n128 v9 = *(__n128 *)(a1 + 3);
  swift_retain();
  swift_retain();
  outlined retain of String?((uint64_t)&v11);
  *(void *)a2 = v4;
  *(_OWORD *)(a2 + 8) = v10;
  __n128 result = v9;
  *(__n128 *)(a2 + 24) = v9;
  *(void *)(a2 + 40) = v5;
  *(void *)(a2 + 48) = v6;
  *(void *)(a2 + 56) = v7;
  *(unsigned char *)(a2 + 64) = 39;
  *(void *)(a2 + 72) = closure #1 in static Actions.AddToLibrary.action(context:);
  *(void *)(a2 + 80) = 0;
  *(void *)(a2 + 88) = 0x4014000000000000;
  *(void *)(a2 + 96) = &async function pointer to closure #2 in static Actions.Share.action(context:);
  *(void *)(a2 + 104) = 0;
  *(void *)(a2 + 112) = &async function pointer to closure #3 in static Actions.Share.action(context:);
  *(void *)(a2 + 120) = 0;
  return result;
}

uint64_t Actions.Share.Context.menuItemTitle.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Actions.Share.Context.menuItemTitle.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = a2;
  return result;
}

CFRange (__swiftcall *Actions.Share.Context.menuItemTitle.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

uint64_t protocol witness for static ActionDefinition.action(context:) in conformance Actions.Share@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v2 = *(void *)(a1 + 48);
  uint64_t v4 = *(void *)(a1 + 56);
  *(void *)a2 = *(void *)a1;
  *(_OWORD *)(a2 + 8) = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(a1 + 24);
  *(void *)(a2 + 40) = v3;
  *(void *)(a2 + 48) = v2;
  *(void *)(a2 + 56) = v4;
  *(unsigned char *)(a2 + 64) = 39;
  *(void *)(a2 + 72) = closure #1 in static Actions.AddToLibrary.action(context:);
  *(void *)(a2 + 80) = 0;
  *(void *)(a2 + 88) = 0x4014000000000000;
  *(void *)(a2 + 96) = &async function pointer to closure #2 in static Actions.Share.action(context:);
  *(void *)(a2 + 104) = 0;
  *(void *)(a2 + 112) = &async function pointer to closure #3 in static Actions.Share.action(context:);
  *(void *)(a2 + 120) = 0;
  swift_retain();
  swift_retain();
  swift_retain();

  return swift_bridgeObjectRetain();
}

uint64_t (*Actions.Share.Context.menuItemImage.getter())()
{
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = 0xD000000000000013;
  *(void *)(v0 + 24) = 0x8000000100468760;
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = 0xD000000000000013;
  *(void *)(v1 + 24) = 0x8000000100468760;
  return partial apply for closure #1 in ActionMenuItemImage.init(systemName:);
}

uint64_t (*protocol witness for ActionMenuItemConfiguring.menuItemImage.getter in conformance Actions.Share.Context())()
{
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = 0xD000000000000013;
  *(void *)(v0 + 24) = 0x8000000100468760;
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = 0xD000000000000013;
  *(void *)(v1 + 24) = 0x8000000100468760;
  return closure #1 in ActionMenuItemImage.init(systemName:)partial apply;
}

uint64_t closure #1 in Actions.Share.Context.init(item:applicationCapabilities:shareSheetPresenting:metricsReportingContext:)(uint64_t a1, uint64_t a2)
{
  void v2[2] = a1;
  v2[3] = a2;
  type metadata accessor for MainActor();
  v2[4] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[5] = v4;
  v2[6] = v3;
  return _swift_task_switch(closure #1 in Actions.Share.Context.init(item:applicationCapabilities:shareSheetPresenting:metricsReportingContext:), v4, v3);
}

uint64_t closure #1 in Actions.Share.Context.init(item:applicationCapabilities:shareSheetPresenting:metricsReportingContext:)()
{
  uint64_t v1 = (void *)v0[2];
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_0Tm(v1, v2);
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 + 8) + **(int **)(v3 + 8));
  uint64_t v4 = (void *)swift_task_alloc();
  v0[7] = v4;
  *uint64_t v4 = v0;
  v4[1] = closure #1 in Actions.Share.Context.init(item:applicationCapabilities:shareSheetPresenting:metricsReportingContext:);
  uint64_t v5 = v0[3];
  return v7(v5, v2, v3);
}

{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 48);
  uint64_t v3 = *(void *)(v1 + 40);
  return _swift_task_switch(closure #1 in Actions.Share.Context.init(item:applicationCapabilities:shareSheetPresenting:metricsReportingContext:), v3, v2);
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t Actions.Share.Context.init(item:applicationCapabilities:shareAction:metricsReportingContext:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, unint64_t (**a6)()@<X8>)
{
  uint64_t v27 = a5;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  __chkstk_darwin(v12 - 8);
  outlined init with copy of AlertPresenting((uint64_t)a1, (uint64_t)v29);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a2;
  outlined init with take of AlertPresenting(v29, v15 + 24);
  uint64_t v16 = (unint64_t (*)())swift_allocObject();
  uint64_t v28 = partial apply for closure #1 in Actions.Share.Context.init(item:applicationCapabilities:shareAction:metricsReportingContext:);
  *((void *)v16 + 2) = partial apply for closure #1 in Actions.Share.Context.init(item:applicationCapabilities:shareAction:metricsReportingContext:);
  *((void *)v16 + 3) = v15;
  *((void *)v16 + 4) = a3;
  *((void *)v16 + 5) = a4;
  outlined init with copy of (String, Any)(a5, (uint64_t)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  outlined init with copy of AlertPresenting((uint64_t)a1, (uint64_t)v29);
  unint64_t v17 = (*(unsigned __int8 *)(v13 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v18 = swift_allocObject();
  outlined init with take of Actions.MetricsReportingContext?((uint64_t)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v18 + v17);
  outlined init with take of AlertPresenting(v29, v18 + ((v14 + v17 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v19 = a1[3];
  uint64_t v20 = a1[4];
  __swift_project_boxed_opaque_existential_0Tm(a1, v19);
  uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t))(v20 + 32);
  swift_retain();
  uint64_t v22 = v21(v19, v20);
  uint64_t v24 = v23;
  outlined destroy of TaskPriority?(v27, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  uint64_t result = __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  *a6 = v28;
  a6[1] = (unint64_t (*)())v15;
  a6[2] = (unint64_t (*)())&async function pointer to partial apply for closure #2 in Actions.Share.Context.init(item:applicationCapabilities:shareAction:metricsReportingContext:);
  a6[3] = v16;
  a6[4] = (unint64_t (*)())&async function pointer to partial apply for closure #3 in Actions.Share.Context.init(item:applicationCapabilities:shareAction:metricsReportingContext:);
  a6[5] = (unint64_t (*)())v18;
  a6[6] = (unint64_t (*)())v22;
  a6[7] = v24;
  return result;
}

unint64_t closure #1 in Actions.Share.Context.init(item:applicationCapabilities:shareAction:metricsReportingContext:)(uint64_t a1, void *a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Playlist?);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = type metadata accessor for Playlist();
  uint64_t v35 = *(void *)(v36 - 8);
  uint64_t v6 = __chkstk_darwin(v36);
  uint64_t v33 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v34 = (char *)&v32 - v8;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  __chkstk_darwin(v9 - 8);
  long long v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  int v12 = v41[1];
  uint64_t v13 = v42;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  if (v12 != 1) {
    return 0xD000000000000016;
  }
  uint64_t v14 = a2[3];
  uint64_t v15 = a2[4];
  __swift_project_boxed_opaque_existential_0Tm(a2, v14);
  (*(void (**)(uint64_t, uint64_t))(v15 + 16))(v14, v15);
  uint64_t v16 = type metadata accessor for URL();
  LODWORD(v14) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48))(v11, 1, v16);
  outlined destroy of TaskPriority?((uint64_t)v11, &demangling cache variable for type metadata for URL?);
  outlined init with copy of AlertPresenting((uint64_t)a2, (uint64_t)v41);
  if (v14 != 1)
  {
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v41);
    return 0;
  }
  outlined init with copy of AlertPresenting((uint64_t)v41, (uint64_t)v37);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ShareableMusicItem);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CatalogIDProviding);
  if (swift_dynamicCast())
  {
    uint64_t v17 = *((void *)&v39 + 1);
    uint64_t v18 = v40;
    __swift_project_boxed_opaque_existential_0Tm(&v38, *((uint64_t *)&v39 + 1));
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v18);
    uint64_t v20 = v19;
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v41);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v38);
    if (v20)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  else
  {
    uint64_t v40 = 0;
    long long v38 = 0u;
    long long v39 = 0u;
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v41);
    outlined destroy of TaskPriority?((uint64_t)&v38, (uint64_t *)&demangling cache variable for type metadata for CatalogIDProviding?);
  }
  outlined init with copy of AlertPresenting((uint64_t)a2, (uint64_t)&v38);
  uint64_t v22 = v36;
  char v23 = swift_dynamicCast();
  uint64_t v24 = v35;
  uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v35 + 56);
  if ((v23 & 1) == 0)
  {
    v25(v5, 1, 1, v22);
    outlined destroy of TaskPriority?((uint64_t)v5, &demangling cache variable for type metadata for Playlist?);
    return 0xD000000000000023;
  }
  v25(v5, 0, 1, v22);
  uint64_t v26 = v34;
  (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v34, v5, v22);
  char v27 = Playlist.isShareable.getter();
  uint64_t v28 = v33;
  (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v33, v26, v22);
  if (v27)
  {
    uint64_t v29 = *(void (**)(char *, uint64_t))(v24 + 8);
    v29(v28, v22);
    v29(v26, v22);
    return 0;
  }
  char v30 = Playlist.canMakeShareable.getter();
  unint64_t v31 = *(void (**)(char *, uint64_t))(v24 + 8);
  v31(v28, v22);
  if (v30)
  {
    v31(v26, v22);
    return 0;
  }
  v31(v26, v22);
  return 0xD000000000000021;
}

uint64_t Playlist.isShareable.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Playlist.Variant();
  uint64_t v91 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v85 = &v72[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Playlist.Variant?, Playlist.Variant?));
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v87 = &v72[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  uint64_t v8 = &v72[-v7];
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Playlist.Variant?);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v84 = &v72[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = __chkstk_darwin(v10);
  id v88 = &v72[-v13];
  uint64_t v14 = __chkstk_darwin(v12);
  char v89 = &v72[-v15];
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v86 = &v72[-v17];
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v20 = &v72[-v19];
  __chkstk_darwin(v18);
  uint64_t v22 = &v72[-v21];
  uint64_t v23 = type metadata accessor for Playlist();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v92 = &v72[-((v26 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v93 = &v72[-v28];
  __chkstk_darwin(v27);
  char v30 = &v72[-v29];
  char v31 = Playlist.isPublic.getter();
  uint64_t v32 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v24 + 16);
  uint64_t v94 = v24 + 16;
  long long v95 = v32;
  v32(v30, v1, v23);
  if (v31)
  {
    uint64_t v40 = *(void (**)(unsigned char *, uint64_t))(v24 + 8);
    v40(v30, v23);
    uint64_t v41 = v23;
    goto LABEL_6;
  }
  uint64_t v82 = v1;
  uint64_t v83 = v23;
  uint64_t v90 = v24;
  Playlist.variant.getter();
  uint64_t v33 = v91;
  uint64_t v34 = *(void (**)(unsigned char *, void, uint64_t))(v91 + 104);
  uint64_t v77 = v91 + 104;
  uint64_t v75 = v34;
  v34(v20, enum case for Playlist.Variant.subscribed(_:), v2);
  uint64_t v35 = *(void (**)(unsigned char *, void, uint64_t, uint64_t))(v33 + 56);
  uint64_t v78 = v33 + 56;
  uint64_t v76 = v35;
  v35(v20, 0, 1, v2);
  uint64_t v79 = v4;
  uint64_t v36 = (uint64_t)&v8[*(int *)(v4 + 48)];
  outlined init with copy of (String, Any)((uint64_t)v22, (uint64_t)v8, &demangling cache variable for type metadata for Playlist.Variant?);
  outlined init with copy of (String, Any)((uint64_t)v20, v36, &demangling cache variable for type metadata for Playlist.Variant?);
  uint64_t v37 = v33 + 48;
  long long v38 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v33 + 48);
  unsigned int v39 = v38((uint64_t)v8, 1, v2);
  uint64_t v80 = v38;
  uint64_t v81 = v8;
  if (v39 == 1)
  {
    outlined destroy of TaskPriority?((uint64_t)v20, &demangling cache variable for type metadata for Playlist.Variant?);
    outlined destroy of TaskPriority?((uint64_t)v22, &demangling cache variable for type metadata for Playlist.Variant?);
    uint64_t v40 = *(void (**)(unsigned char *, uint64_t))(v90 + 8);
    uint64_t v41 = v83;
    v40(v30, v83);
    unsigned int v42 = v38(v36, 1, v2);
    uint64_t v43 = (uint64_t)v89;
    if (v42 == 1)
    {
      outlined destroy of TaskPriority?((uint64_t)v81, &demangling cache variable for type metadata for Playlist.Variant?);
      uint64_t v1 = v82;
LABEL_6:
      uint64_t v44 = v93;
      uint64_t v45 = v95;
      v95(v93, v1, v41);
LABEL_7:
      v40(v44, v41);
      uint64_t v46 = v92;
      v45(v92, v1, v41);
LABEL_8:
      v40(v46, v41);
      return 1;
    }
    uint64_t v1 = v82;
    goto LABEL_14;
  }
  uint64_t v48 = v33;
  uint64_t v49 = (uint64_t)v8;
  uint64_t v50 = v86;
  outlined init with copy of (String, Any)(v49, (uint64_t)v86, &demangling cache variable for type metadata for Playlist.Variant?);
  unsigned int v51 = v38(v36, 1, v2);
  uint64_t v52 = (void (**)(unsigned char *, uint64_t))(v33 + 8);
  uint64_t v41 = v83;
  if (v51 == 1)
  {
    outlined destroy of TaskPriority?((uint64_t)v20, &demangling cache variable for type metadata for Playlist.Variant?);
    outlined destroy of TaskPriority?((uint64_t)v22, &demangling cache variable for type metadata for Playlist.Variant?);
    uint64_t v40 = *(void (**)(unsigned char *, uint64_t))(v90 + 8);
    v40(v30, v41);
    (*v52)(v50, v2);
    uint64_t v1 = v82;
    uint64_t v43 = (uint64_t)v89;
LABEL_14:
    uint64_t v53 = v93;
    outlined destroy of TaskPriority?((uint64_t)v81, &demangling cache variable for type metadata for (Playlist.Variant?, Playlist.Variant?));
    v95(v53, v1, v41);
    goto LABEL_15;
  }
  uint64_t v60 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v48 + 32);
  uint64_t v74 = v37;
  uint64_t v61 = v50;
  uint64_t v62 = v85;
  v60(v85, v36, v2);
  lazy protocol witness table accessor for type Playlist.Variant and conformance Playlist.Variant((unint64_t *)&lazy protocol witness table cache variable for type Playlist.Variant and conformance Playlist.Variant, (void (*)(uint64_t))&type metadata accessor for Playlist.Variant);
  int v73 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v63 = *(void (**)(unsigned char *, uint64_t))(v48 + 8);
  v63(v62, v2);
  outlined destroy of TaskPriority?((uint64_t)v20, &demangling cache variable for type metadata for Playlist.Variant?);
  outlined destroy of TaskPriority?((uint64_t)v22, &demangling cache variable for type metadata for Playlist.Variant?);
  uint64_t v40 = *(void (**)(unsigned char *, uint64_t))(v90 + 8);
  v40(v30, v41);
  v63(v61, v2);
  outlined destroy of TaskPriority?((uint64_t)v81, &demangling cache variable for type metadata for Playlist.Variant?);
  uint64_t v44 = v93;
  uint64_t v1 = v82;
  uint64_t v45 = v95;
  v95(v93, v82, v41);
  uint64_t v43 = (uint64_t)v89;
  if (v73) {
    goto LABEL_7;
  }
LABEL_15:
  Playlist.variant.getter();
  uint64_t v54 = v88;
  v75(v88, enum case for Playlist.Variant.admin(_:), v2);
  v76(v54, 0, 1, v2);
  uint64_t v55 = v87;
  uint64_t v56 = (uint64_t)&v87[*(int *)(v79 + 48)];
  outlined init with copy of (String, Any)(v43, (uint64_t)v87, &demangling cache variable for type metadata for Playlist.Variant?);
  outlined init with copy of (String, Any)((uint64_t)v54, v56, &demangling cache variable for type metadata for Playlist.Variant?);
  uint64_t v57 = v80;
  if (v80((uint64_t)v55, 1, v2) == 1)
  {
    outlined destroy of TaskPriority?((uint64_t)v54, &demangling cache variable for type metadata for Playlist.Variant?);
    outlined destroy of TaskPriority?(v43, &demangling cache variable for type metadata for Playlist.Variant?);
    v40(v93, v41);
    if (v80(v56, 1, v2) == 1)
    {
      outlined destroy of TaskPriority?((uint64_t)v55, &demangling cache variable for type metadata for Playlist.Variant?);
      uint64_t v46 = v92;
      v95(v92, v1, v41);
      goto LABEL_8;
    }
    goto LABEL_20;
  }
  uint64_t v58 = v57;
  uint64_t v59 = v84;
  outlined init with copy of (String, Any)((uint64_t)v55, (uint64_t)v84, &demangling cache variable for type metadata for Playlist.Variant?);
  if (v58(v56, 1, v2) == 1)
  {
    outlined destroy of TaskPriority?((uint64_t)v88, &demangling cache variable for type metadata for Playlist.Variant?);
    outlined destroy of TaskPriority?(v43, &demangling cache variable for type metadata for Playlist.Variant?);
    v40(v93, v41);
    (*(void (**)(unsigned char *, uint64_t))(v91 + 8))(v59, v2);
LABEL_20:
    outlined destroy of TaskPriority?((uint64_t)v55, &demangling cache variable for type metadata for (Playlist.Variant?, Playlist.Variant?));
    uint64_t v46 = v92;
    v95(v92, v1, v41);
    goto LABEL_24;
  }
  uint64_t v64 = v43;
  uint64_t v65 = v91;
  uint64_t v66 = v85;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v91 + 32))(v85, v56, v2);
  lazy protocol witness table accessor for type Playlist.Variant and conformance Playlist.Variant((unint64_t *)&lazy protocol witness table cache variable for type Playlist.Variant and conformance Playlist.Variant, (void (*)(uint64_t))&type metadata accessor for Playlist.Variant);
  char v67 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v68 = *(void (**)(unsigned char *, uint64_t))(v65 + 8);
  uint64_t v69 = v66;
  uint64_t v41 = v83;
  v68(v69, v2);
  outlined destroy of TaskPriority?((uint64_t)v88, &demangling cache variable for type metadata for Playlist.Variant?);
  outlined destroy of TaskPriority?(v64, &demangling cache variable for type metadata for Playlist.Variant?);
  v40(v93, v41);
  v68(v59, v2);
  outlined destroy of TaskPriority?((uint64_t)v55, &demangling cache variable for type metadata for Playlist.Variant?);
  uint64_t v46 = v92;
  v95(v92, v82, v41);
  if (v67) {
    goto LABEL_8;
  }
LABEL_24:
  Playlist.catalogID.getter();
  uint64_t v71 = v70;
  v40(v46, v41);
  if (!v71) {
    return 0;
  }
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t Playlist.canMakeShareable.getter()
{
  uint64_t v59 = type metadata accessor for Playlist.Variant();
  uint64_t v57 = *(void *)(v59 - 8);
  __chkstk_darwin(v59);
  uint64_t v53 = (char *)&v51 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Playlist.Variant?, Playlist.Variant?));
  __chkstk_darwin(v56);
  uint64_t v58 = (uint64_t)&v51 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Playlist.Variant?);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v54 = (uint64_t)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v65 = (uint64_t)&v51 - v6;
  __chkstk_darwin(v5);
  uint64_t v63 = (char *)&v51 - v7;
  uint64_t v8 = type metadata accessor for Playlist.EditableComponents();
  uint64_t v61 = *(void *)(v8 - 8);
  uint64_t v62 = v8;
  __chkstk_darwin(v8);
  uint64_t v55 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Playlist.EditableComponents?);
  __chkstk_darwin(v10 - 8);
  uint64_t v60 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Playlist();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v64 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v51 - v16;
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  char v18 = v67;
  uint64_t v19 = v68;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v20(v17, v66, v12);
  uint64_t v21 = v12;
  uint64_t v22 = v13;
  if ((v18 & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v17, v21);
LABEL_15:
    char v33 = 0;
    return v33 & 1;
  }
  uint64_t v23 = (uint64_t)v60;
  Playlist.editableComponents.getter();
  uint64_t v25 = v61;
  uint64_t v24 = v62;
  int v26 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v61 + 48))(v23, 1, v62);
  uint64_t v52 = v17;
  if (v26 == 1)
  {
    outlined destroy of TaskPriority?(v23, (uint64_t *)&demangling cache variable for type metadata for Playlist.EditableComponents?);
    uint64_t v27 = v64;
    v20(v64, (uint64_t)v17, v21);
    uint64_t v28 = (uint64_t)v63;
    uint64_t v29 = v65;
    goto LABEL_9;
  }
  char v30 = v55;
  static Playlist.EditableComponents.tracklist.getter();
  lazy protocol witness table accessor for type Playlist.Variant and conformance Playlist.Variant((unint64_t *)&lazy protocol witness table cache variable for type Playlist.EditableComponents and conformance Playlist.EditableComponents, (void (*)(uint64_t))&type metadata accessor for Playlist.EditableComponents);
  LODWORD(v66) = dispatch thunk of SetAlgebra.isSuperset(of:)();
  char v31 = *(void (**)(char *, uint64_t))(v25 + 8);
  v31(v30, v24);
  v31((char *)v23, v24);
  uint64_t v27 = v64;
  v20(v64, (uint64_t)v17, v21);
  uint64_t v28 = (uint64_t)v63;
  uint64_t v29 = v65;
  if ((v66 & 1) == 0)
  {
LABEL_9:
    uint64_t v66 = v21;
    uint64_t v34 = v27;
    Playlist.variant.getter();
    uint64_t v35 = v57;
    uint64_t v36 = v59;
    (*(void (**)(uint64_t, void, uint64_t))(v57 + 104))(v29, enum case for Playlist.Variant.favoriteSongs(_:), v59);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v35 + 56))(v29, 0, 1, v36);
    uint64_t v37 = v58;
    uint64_t v38 = v58 + *(int *)(v56 + 48);
    outlined init with copy of (String, Any)(v28, v58, &demangling cache variable for type metadata for Playlist.Variant?);
    outlined init with copy of (String, Any)(v29, v38, &demangling cache variable for type metadata for Playlist.Variant?);
    uint64_t v39 = v29;
    uint64_t v40 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v35 + 48);
    if (v40(v37, 1, v36) == 1)
    {
      outlined destroy of TaskPriority?(v39, &demangling cache variable for type metadata for Playlist.Variant?);
      outlined destroy of TaskPriority?(v28, &demangling cache variable for type metadata for Playlist.Variant?);
      uint64_t v41 = *(void (**)(char *, uint64_t))(v22 + 8);
      uint64_t v42 = v66;
      v41(v34, v66);
      v41(v52, v42);
      if (v40(v38, 1, v36) == 1)
      {
        outlined destroy of TaskPriority?(v37, &demangling cache variable for type metadata for Playlist.Variant?);
        char v33 = 1;
        return v33 & 1;
      }
    }
    else
    {
      uint64_t v43 = v54;
      outlined init with copy of (String, Any)(v37, v54, &demangling cache variable for type metadata for Playlist.Variant?);
      if (v40(v38, 1, v36) != 1)
      {
        uint64_t v47 = v53;
        (*(void (**)(char *, uint64_t, uint64_t))(v35 + 32))(v53, v38, v36);
        lazy protocol witness table accessor for type Playlist.Variant and conformance Playlist.Variant((unint64_t *)&lazy protocol witness table cache variable for type Playlist.Variant and conformance Playlist.Variant, (void (*)(uint64_t))&type metadata accessor for Playlist.Variant);
        char v33 = dispatch thunk of static Equatable.== infix(_:_:)();
        uint64_t v48 = *(void (**)(char *, uint64_t))(v35 + 8);
        v48(v47, v36);
        outlined destroy of TaskPriority?(v65, &demangling cache variable for type metadata for Playlist.Variant?);
        outlined destroy of TaskPriority?(v28, &demangling cache variable for type metadata for Playlist.Variant?);
        uint64_t v49 = *(void (**)(char *, uint64_t))(v22 + 8);
        uint64_t v50 = v66;
        v49(v64, v66);
        v49(v52, v50);
        v48((char *)v43, v36);
        outlined destroy of TaskPriority?(v37, &demangling cache variable for type metadata for Playlist.Variant?);
        return v33 & 1;
      }
      outlined destroy of TaskPriority?(v65, &demangling cache variable for type metadata for Playlist.Variant?);
      outlined destroy of TaskPriority?(v28, &demangling cache variable for type metadata for Playlist.Variant?);
      uint64_t v44 = *(void (**)(char *, uint64_t))(v22 + 8);
      uint64_t v45 = v66;
      v44(v64, v66);
      v44(v52, v45);
      (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v43, v36);
    }
    outlined destroy of TaskPriority?(v37, &demangling cache variable for type metadata for (Playlist.Variant?, Playlist.Variant?));
    goto LABEL_15;
  }
  uint64_t v32 = *(void (**)(char *, uint64_t))(v22 + 8);
  v32(v27, v21);
  v32(v52, v21);
  char v33 = 1;
  return v33 & 1;
}

uint64_t closure #2 in Actions.Share.Context.init(item:applicationCapabilities:shareAction:metricsReportingContext:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  type metadata accessor for MainActor();
  v4[6] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[7] = v6;
  v4[8] = v5;
  return _swift_task_switch(closure #2 in Actions.Share.Context.init(item:applicationCapabilities:shareAction:metricsReportingContext:), v6, v5);
}

uint64_t closure #2 in Actions.Share.Context.init(item:applicationCapabilities:shareAction:metricsReportingContext:)()
{
  uint64_t v1 = (*(uint64_t (**)(void))(v0 + 16))();
  if (v2 == 1)
  {
    uint64_t v9 = (uint64_t (*)(void))(*(void *)(v0 + 32) + **(int **)(v0 + 32));
    uint64_t v3 = (void *)swift_task_alloc();
    *(void *)(v0 + 72) = v3;
    *uint64_t v3 = v0;
    v3[1] = closure #2 in Actions.Share.Context.init(item:applicationCapabilities:shareAction:metricsReportingContext:);
    return v9();
  }
  else
  {
    uint64_t v5 = v1;
    uint64_t v6 = v2;
    swift_release();
    lazy protocol witness table accessor for type ActionError and conformance ActionError();
    swift_allocError();
    *uint64_t v7 = v5;
    v7[1] = v6;
    swift_willThrow();
    uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
    return v8();
  }
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();
  uint64_t v7;

  uint64_t v2 = *v1;
  *(void *)(*v1 + 80) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 64);
  uint64_t v4 = *(void *)(v2 + 56);
  if (v0) {
    uint64_t v5 = closure #2 in Actions.Share.Context.init(item:applicationCapabilities:shareAction:metricsReportingContext:);
  }
  else {
    uint64_t v5 = closure #2 in Actions.Share.Context.init(item:applicationCapabilities:shareAction:metricsReportingContext:);
  }
  return _swift_task_switch(v5, v4, v3);
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t closure #3 in Actions.Share.Context.init(item:applicationCapabilities:shareAction:metricsReportingContext:)(uint64_t a1, uint64_t a2)
{
  v2[9] = a1;
  v2[10] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  v2[11] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  v2[12] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for Actions.MetricsReportingContext();
  v2[13] = v3;
  v2[14] = *(void *)(v3 - 8);
  v2[15] = swift_task_alloc();
  return _swift_task_switch(closure #3 in Actions.Share.Context.init(item:applicationCapabilities:shareAction:metricsReportingContext:), 0, 0);
}

uint64_t closure #3 in Actions.Share.Context.init(item:applicationCapabilities:shareAction:metricsReportingContext:)()
{
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v2 = *(void *)(v0 + 112);
  uint64_t v3 = *(void *)(v0 + 96);
  outlined init with copy of (String, Any)(*(void *)(v0 + 72), v3, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    outlined destroy of TaskPriority?(*(void *)(v0 + 96), &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
  else
  {
    uint64_t v6 = *(void *)(v0 + 88);
    uint64_t v7 = *(void **)(v0 + 80);
    outlined init with take of Actions.MetricsReportingContext(*(void *)(v0 + 96), *(void *)(v0 + 120));
    uint64_t v8 = v7[3];
    __swift_project_boxed_opaque_existential_0Tm(v7, v8);
    *(void *)(v0 + 128) = MusicItem.metricsTargetIdentifier.getter(v8);
    *(void *)(v0 + 136) = v9;
    uint64_t v10 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v6, 1, 1, v10);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<MetricsEvent.Click.ActionDetails.Key>);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100493400;
    __swift_project_boxed_opaque_existential_0Tm(v7, v7[3]);
    *(void *)(inited + 32) = MusicItem.metricsContentType.getter();
    *(void *)(inited + 40) = v12;
    *(unsigned char *)(inited + 48) = 0;
    *(void *)(v0 + 144) = specialized MetricsEvent.Click.ActionDetails.init(_:)(inited);
    *(void *)(v0 + 152) = v13;
    *(void *)(v0 + 160) = v14;
    *(_WORD *)(v0 + 176) = v15;
    swift_setDeallocating();
    swift_arrayDestroy();
    type metadata accessor for MainActor();
    *(void *)(v0 + 168) = static MainActor.shared.getter();
    uint64_t v17 = dispatch thunk of Actor.unownedExecutor.getter();
    return _swift_task_switch(closure #3 in Actions.Share.Context.init(item:applicationCapabilities:shareAction:metricsReportingContext:), v17, v16);
  }
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  uint64_t v1 = *(void *)(v0 + 160);
  uint64_t v3 = *(void **)(v0 + 144);
  uint64_t v2 = *(void *)(v0 + 152);
  uint64_t v5 = *(void *)(v0 + 128);
  uint64_t v4 = *(void *)(v0 + 136);
  uint64_t v6 = *(uint64_t **)(v0 + 120);
  uint64_t v7 = *(void *)(v0 + 88);
  uint64_t v8 = *(unsigned __int16 *)(v0 + 176);
  swift_release();
  specialized static Actions.reportClickEvent(targetIdentifier:targetType:actionType:actionURL:actionDetails:reportingContext:)(v5, v4, 5, 36, v7, v3, v2, v1, v8, v6);
  outlined consume of MetricsEvent.Click.ActionDetails(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease();
  outlined destroy of TaskPriority?(v7, &demangling cache variable for type metadata for URL?);
  return _swift_task_switch(closure #3 in Actions.Share.Context.init(item:applicationCapabilities:shareAction:metricsReportingContext:), 0, 0);
}

uint64_t static Actions.ShareLyrics.action(context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *(void *)(a1 + 40);
  *(void *)a2 = *(void *)a1;
  *(_OWORD *)(a2 + 8) = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(a1 + 24);
  *(void *)(a2 + 40) = v2;
  *(unsigned char *)(a2 + 48) = 40;
  *(void *)(a2 + 56) = closure #1 in static Actions.AddToLibrary.action(context:);
  *(void *)(a2 + 64) = 0;
  *(void *)(a2 + 72) = 0x4014000000000000;
  *(void *)(a2 + 80) = &async function pointer to closure #2 in static Actions.ShareLyrics.action(context:);
  *(void *)(a2 + 88) = 0;
  *(void *)(a2 + 96) = &async function pointer to closure #3 in static Actions.ShareLyrics.action(context:);
  *(void *)(a2 + 104) = 0;
  swift_retain();
  swift_retain();

  return swift_retain();
}

uint64_t Actions.ShareLyrics.Context.init(item:canShareLyrics:shareLyrics:metricsReportingContext:)@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void *a7@<X8>)
{
  uint64_t v14 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?)
                  - 8);
  unint64_t v15 = (*(unsigned __int8 *)(v14 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  unint64_t v16 = (*(void *)(v14 + 64) + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v17 = swift_allocObject();
  outlined init with take of Actions.MetricsReportingContext?(a6, v17 + v15);
  uint64_t result = outlined init with take of AlertPresenting(a1, v17 + v16);
  *a7 = a2;
  a7[1] = a3;
  a7[2] = a4;
  a7[3] = a5;
  a7[4] = &async function pointer to partial apply for closure #1 in Actions.ShareLyrics.Context.init(item:canShareLyrics:shareLyrics:metricsReportingContext:);
  a7[5] = v17;
  return result;
}

uint64_t closure #1 in Actions.ShareLyrics.Context.init(item:canShareLyrics:shareLyrics:metricsReportingContext:)(uint64_t a1, uint64_t a2)
{
  v2[9] = a1;
  v2[10] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  v2[11] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  v2[12] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for Actions.MetricsReportingContext();
  v2[13] = v3;
  v2[14] = *(void *)(v3 - 8);
  v2[15] = swift_task_alloc();
  return _swift_task_switch(closure #1 in Actions.ShareLyrics.Context.init(item:canShareLyrics:shareLyrics:metricsReportingContext:), 0, 0);
}

uint64_t closure #1 in Actions.ShareLyrics.Context.init(item:canShareLyrics:shareLyrics:metricsReportingContext:)()
{
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v2 = *(void *)(v0 + 112);
  uint64_t v3 = *(void *)(v0 + 96);
  outlined init with copy of (String, Any)(*(void *)(v0 + 72), v3, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    outlined destroy of TaskPriority?(*(void *)(v0 + 96), &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
  else
  {
    uint64_t v6 = *(void *)(v0 + 88);
    uint64_t v7 = *(void **)(v0 + 80);
    outlined init with take of Actions.MetricsReportingContext(*(void *)(v0 + 96), *(void *)(v0 + 120));
    uint64_t v8 = v7[3];
    __swift_project_boxed_opaque_existential_0Tm(v7, v8);
    *(void *)(v0 + 128) = MusicItem.metricsTargetIdentifier.getter(v8);
    *(void *)(v0 + 136) = v9;
    uint64_t v10 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v6, 1, 1, v10);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<MetricsEvent.Click.ActionDetails.Key>);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100493400;
    __swift_project_boxed_opaque_existential_0Tm(v7, v7[3]);
    *(void *)(inited + 32) = MusicItem.metricsContentType.getter();
    *(void *)(inited + 40) = v12;
    *(unsigned char *)(inited + 48) = 0;
    *(void *)(v0 + 144) = specialized MetricsEvent.Click.ActionDetails.init(_:)(inited);
    *(void *)(v0 + 152) = v13;
    *(void *)(v0 + 160) = v14;
    *(_WORD *)(v0 + 176) = v15;
    swift_setDeallocating();
    swift_arrayDestroy();
    type metadata accessor for MainActor();
    *(void *)(v0 + 168) = static MainActor.shared.getter();
    uint64_t v17 = dispatch thunk of Actor.unownedExecutor.getter();
    return _swift_task_switch(closure #1 in Actions.ShareLyrics.Context.init(item:canShareLyrics:shareLyrics:metricsReportingContext:), v17, v16);
  }
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  uint64_t v1 = *(void *)(v0 + 160);
  uint64_t v3 = *(void **)(v0 + 144);
  uint64_t v2 = *(void *)(v0 + 152);
  uint64_t v5 = *(void *)(v0 + 128);
  uint64_t v4 = *(void *)(v0 + 136);
  uint64_t v6 = *(uint64_t **)(v0 + 120);
  uint64_t v7 = *(void *)(v0 + 88);
  uint64_t v8 = *(unsigned __int16 *)(v0 + 176);
  swift_release();
  specialized static Actions.reportClickEvent(targetIdentifier:targetType:actionType:actionURL:actionDetails:reportingContext:)(v5, v4, 5, 38, v7, v3, v2, v1, v8, v6);
  outlined consume of MetricsEvent.Click.ActionDetails(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease();
  outlined destroy of TaskPriority?(v7, &demangling cache variable for type metadata for URL?);
  return _swift_task_switch(closure #1 in Actions.Collaborate.Context.init(playlist:canCollaborateOnPlaylist:collaborate:metricsReportingContext:), 0, 0);
}

uint64_t Actions.ShareLyrics.Context.menuItemTitle.getter()
{
  uint64_t v0 = type metadata accessor for Locale();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = type metadata accessor for String.LocalizationValue();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  uint64_t v5 = &v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v3);
  uint64_t v7 = &v11[-v6];
  String.LocalizationValue.init(stringLiteral:)();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v2 + 16))(v5, v7, v1);
  if (one-time initialization token for module != -1) {
    swift_once();
  }
  id v8 = (id)static NSBundle.module;
  static Locale.current.getter();
  uint64_t v9 = String.init(localized:table:bundle:locale:comment:)();
  (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v7, v1);
  return v9;
}

uint64_t (*Actions.ShareLyrics.Context.menuItemImage.getter())()
{
  return specialized closure #1 in ActionMenuItemImage.init(uiImage:);
}

id implicit closure #1 in Actions.ShareLyrics.Context.menuItemImage.getter()
{
  NSString v0 = String._bridgeToObjectiveC()();
  id v1 = [self imageNamed:v0];

  return v1;
}

uint64_t ShareableMusicItem.actionTitle.getter()
{
  return ShareableMusicItem.actionTitle.getter();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned char *v5;
  uint64_t v6;
  unsigned char *v7;
  id v8;
  uint64_t v9;
  unsigned char v11[16];

  NSString v0 = type metadata accessor for Locale();
  __chkstk_darwin(v0 - 8);
  id v1 = type metadata accessor for String.LocalizationValue();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  uint64_t v5 = &v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v3);
  uint64_t v7 = &v11[-v6];
  String.LocalizationValue.init(stringLiteral:)();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v2 + 16))(v5, v7, v1);
  if (one-time initialization token for module != -1) {
    swift_once();
  }
  id v8 = (id)static NSBundle.module;
  static Locale.current.getter();
  uint64_t v9 = String.init(localized:table:bundle:locale:comment:)();
  (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v7, v1);
  return v9;
}

uint64_t specialized ShareableMusicItem.failureMessage.getter()
{
  uint64_t v0 = type metadata accessor for Locale();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = type metadata accessor for String.LocalizationValue();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  uint64_t v5 = &v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v3);
  uint64_t v7 = &v11[-v6];
  String.LocalizationValue.init(stringLiteral:)();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v2 + 16))(v5, v7, v1);
  if (one-time initialization token for module != -1) {
    swift_once();
  }
  id v8 = (id)static NSBundle.module;
  static Locale.current.getter();
  uint64_t v9 = String.init(localized:table:bundle:locale:comment:)();
  (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v7, v1);
  return v9;
}

uint64_t ShareableMusicItem.failureMessage.getter()
{
  return ShareableMusicItem.actionTitle.getter();
}

uint64_t ShareableMusicItem.shareURL.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return _swift_task_switch(ShareableMusicItem.shareURL.getter, 0, 0);
}

uint64_t ShareableMusicItem.shareURL.getter()
{
  (*(void (**)(void))(v0[4] + 16))(v0[3]);
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t specialized ShareableMusicItem.augmentMetadata(_:)(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  *(void *)(v1 + 24) = swift_task_alloc();
  return _swift_task_switch(specialized ShareableMusicItem.augmentMetadata(_:), 0, 0);
}

{
  uint64_t v1;
  void *v2;
  uint64_t v4;

  void v2[2] = a1;
  v2[3] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  v2[4] = swift_task_alloc();
  return _swift_task_switch(specialized ShareableMusicItem.augmentMetadata(_:), 0, 0);
}

{
  uint64_t v1;
  void *v2;
  uint64_t v4;

  void v2[2] = a1;
  v2[3] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  v2[4] = swift_task_alloc();
  return _swift_task_switch(specialized ShareableMusicItem.augmentMetadata(_:), 0, 0);
}

{
  uint64_t v1;
  void *v2;
  uint64_t v4;

  void v2[2] = a1;
  v2[3] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  v2[4] = swift_task_alloc();
  return _swift_task_switch(specialized ShareableMusicItem.augmentMetadata(_:), 0, 0);
}

{
  uint64_t v1;
  void *v2;
  uint64_t v4;

  void v2[2] = a1;
  v2[3] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  v2[4] = swift_task_alloc();
  return _swift_task_switch(specialized ShareableMusicItem.augmentMetadata(_:), 0, 0);
}

{
  uint64_t v1;
  void *v2;
  uint64_t v4;

  void v2[2] = a1;
  v2[3] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  v2[4] = swift_task_alloc();
  return _swift_task_switch(specialized ShareableMusicItem.augmentMetadata(_:), 0, 0);
}

{
  uint64_t v1;
  void *v2;
  uint64_t v4;

  void v2[2] = a1;
  v2[3] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  v2[4] = swift_task_alloc();
  return _swift_task_switch(specialized ShareableMusicItem.augmentMetadata(_:), 0, 0);
}

uint64_t specialized ShareableMusicItem.augmentMetadata(_:)()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = **(void ***)(v0 + 16);
  uint64_t v3 = type metadata accessor for URL();
  uint64_t v4 = *(void *)(v3 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56))(v1, 1, 1, v3);
  int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v3);
  uint64_t v7 = 0;
  if (v5 != 1)
  {
    uint64_t v8 = *(void *)(v0 + 24);
    URL._bridgeToObjectiveC()(v6);
    uint64_t v7 = v9;
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v8, v3);
  }
  [v2 setOriginalURL:v7];

  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  NSURL *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t (*v9)(void);
  uint64_t v11;

  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = **(void ***)(v0 + 16);
  Curator.url.getter();
  uint64_t v3 = type metadata accessor for URL();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v6 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v3) != 1)
  {
    uint64_t v7 = *(void *)(v0 + 32);
    URL._bridgeToObjectiveC()(v5);
    uint64_t v6 = v8;
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
  }
  [v2 setOriginalURL:v6];

  swift_task_dealloc();
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  NSURL *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t (*v9)(void);
  uint64_t v11;

  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = **(void ***)(v0 + 16);
  EditorialItem.url.getter();
  uint64_t v3 = type metadata accessor for URL();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v6 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v3) != 1)
  {
    uint64_t v7 = *(void *)(v0 + 32);
    URL._bridgeToObjectiveC()(v5);
    uint64_t v6 = v8;
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
  }
  [v2 setOriginalURL:v6];

  swift_task_dealloc();
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  NSURL *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t (*v9)(void);
  uint64_t v11;

  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = **(void ***)(v0 + 16);
  Genre.url.getter();
  uint64_t v3 = type metadata accessor for URL();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v6 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v3) != 1)
  {
    uint64_t v7 = *(void *)(v0 + 32);
    URL._bridgeToObjectiveC()(v5);
    uint64_t v6 = v8;
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
  }
  [v2 setOriginalURL:v6];

  swift_task_dealloc();
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  NSURL *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t (*v9)(void);
  uint64_t v11;

  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = **(void ***)(v0 + 16);
  RadioShow.url.getter();
  uint64_t v3 = type metadata accessor for URL();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v6 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v3) != 1)
  {
    uint64_t v7 = *(void *)(v0 + 32);
    URL._bridgeToObjectiveC()(v5);
    uint64_t v6 = v8;
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
  }
  [v2 setOriginalURL:v6];

  swift_task_dealloc();
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  NSURL *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t (*v9)(void);
  uint64_t v11;

  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = **(void ***)(v0 + 16);
  RecordLabel.url.getter();
  uint64_t v3 = type metadata accessor for URL();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v6 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v3) != 1)
  {
    uint64_t v7 = *(void *)(v0 + 32);
    URL._bridgeToObjectiveC()(v5);
    uint64_t v6 = v8;
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
  }
  [v2 setOriginalURL:v6];

  swift_task_dealloc();
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  NSURL *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t (*v9)(void);
  uint64_t v11;

  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = **(void ***)(v0 + 16);
  SocialProfile.url.getter();
  uint64_t v3 = type metadata accessor for URL();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v6 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v3) != 1)
  {
    uint64_t v7 = *(void *)(v0 + 32);
    URL._bridgeToObjectiveC()(v5);
    uint64_t v6 = v8;
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
  }
  [v2 setOriginalURL:v6];

  swift_task_dealloc();
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t ShareableMusicItem.augmentMetadata(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  v4[6] = swift_task_alloc();
  return _swift_task_switch(ShareableMusicItem.augmentMetadata(_:), 0, 0);
}

uint64_t ShareableMusicItem.augmentMetadata(_:)()
{
  uint64_t v1 = *(void *)(v0 + 32);
  *(void *)(v0 + 56) = **(void **)(v0 + 16);
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v1 + 24) + **(int **)(v1 + 24));
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v2;
  *uint64_t v2 = v0;
  v2[1] = ShareableMusicItem.augmentMetadata(_:);
  uint64_t v3 = *(void *)(v0 + 48);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t v5 = *(void *)(v0 + 32);
  return v7(v3, v4, v5);
}

{
  uint64_t v1;

  swift_task_dealloc();
  return _swift_task_switch(ShareableMusicItem.augmentMetadata(_:), 0, 0);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSURL *v4;
  void *v5;
  void *v6;
  uint64_t (*v7)(void);
  uint64_t v9;

  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = type metadata accessor for URL();
  uint64_t v3 = *(void *)(v2 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    uint64_t v5 = 0;
  }
  else
  {
    URL._bridgeToObjectiveC()(v4);
    uint64_t v5 = v6;
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  }
  [*(id *)(v0 + 56) setOriginalURL:v5];

  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t Album.actionTitle.getter()
{
  return Album.actionTitle.getter();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned char *v5;
  uint64_t v6;
  unsigned char *v7;
  id v8;
  uint64_t v9;
  unsigned char v11[16];

  uint64_t v0 = type metadata accessor for Locale();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = type metadata accessor for String.LocalizationValue();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  uint64_t v5 = &v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v3);
  uint64_t v7 = &v11[-v6];
  String.LocalizationValue.init(stringLiteral:)();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v2 + 16))(v5, v7, v1);
  if (one-time initialization token for module != -1) {
    swift_once();
  }
  uint64_t v8 = (id)static NSBundle.module;
  static Locale.current.getter();
  uint64_t v9 = String.init(localized:table:bundle:locale:comment:)();
  (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v7, v1);
  return v9;
}

uint64_t Album.failureMessage.getter()
{
  return Album.actionTitle.getter();
}

uint64_t Album.shareURL.getter(uint64_t a1)
{
  v2[4] = a1;
  v2[5] = v1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicItemCollection<Album>);
  v2[6] = v3;
  v2[7] = *(void *)(v3 - 8);
  v2[8] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Album?);
  v2[9] = swift_task_alloc();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicCatalogResourceResponse<Album>);
  v2[10] = v4;
  v2[11] = *(void *)(v4 - 8);
  v2[12] = swift_task_alloc();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicCatalogResourceRequest<Album>);
  v2[13] = v5;
  v2[14] = *(void *)(v5 - 8);
  v2[15] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  v2[16] = swift_task_alloc();
  return _swift_task_switch(Album.shareURL.getter, 0, 0);
}

uint64_t Album.shareURL.getter()
{
  uint64_t v1 = v0[16];
  Album.url.getter();
  uint64_t v2 = type metadata accessor for URL();
  v0[17] = v2;
  uint64_t v3 = *(void *)(v2 - 8);
  v0[18] = v3;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    outlined destroy of TaskPriority?(v0[16], &demangling cache variable for type metadata for URL?);
    uint64_t v4 = Album.catalogID.getter();
    v0[19] = v4;
    v0[20] = v5;
    if (v5)
    {
      uint64_t v6 = v4;
      uint64_t v7 = v5;
      swift_getKeyPath();
      v0[2] = v6;
      v0[3] = v7;
      v0[21] = type metadata accessor for Album();
      lazy protocol witness table accessor for type Playlist.Variant and conformance Playlist.Variant(&lazy protocol witness table cache variable for type Album and conformance Album, (void (*)(uint64_t))&type metadata accessor for Album);
      swift_bridgeObjectRetain();
      MusicCatalogResourceRequest.init<A>(matching:equalTo:)();
      uint64_t v8 = (void *)swift_task_alloc();
      v0[22] = v8;
      *uint64_t v8 = v0;
      v8[1] = Album.shareURL.getter;
      uint64_t v9 = v0[12];
      uint64_t v10 = v0[13];
      return MusicCatalogResourceRequest.response()(v9, v10);
    }
    (*(void (**)(void, uint64_t, uint64_t, uint64_t))(v3 + 56))(v0[4], 1, 1, v2);
  }
  else
  {
    uint64_t v11 = v0[4];
    (*(void (**)(uint64_t, void, uint64_t))(v3 + 32))(v11, v0[16], v2);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v3 + 56))(v11, 0, 1, v2);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();
  uint64_t v4;

  *(void *)(*(void *)v1 + 184) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = Album.shareURL.getter;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = Album.shareURL.getter;
  }
  return _swift_task_switch(v2, 0, 0);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(void);
  uint64_t v24;

  uint64_t v1 = v0[21];
  uint64_t v2 = v0[9];
  uint64_t v4 = v0[7];
  uint64_t v3 = v0[8];
  uint64_t v5 = v0[6];
  MusicCatalogResourceResponse.items.getter();
  specialized Collection.first.getter(v2);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  uint64_t v6 = *(void *)(v1 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v2, 1, v1) == 1)
  {
    uint64_t v7 = v0[17];
    uint64_t v8 = v0[18];
    uint64_t v10 = v0[14];
    uint64_t v9 = v0[15];
    uint64_t v11 = v0[13];
    uint64_t v12 = v0[9];
    uint64_t v13 = v0[4];
    (*(void (**)(void, void))(v0[11] + 8))(v0[12], v0[10]);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    outlined destroy of TaskPriority?(v12, &demangling cache variable for type metadata for Album?);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v13, 1, 1, v7);
  }
  else
  {
    uint64_t v14 = v0[21];
    uint64_t v16 = v0[14];
    __int16 v15 = v0[15];
    uint64_t v18 = v0[12];
    uint64_t v17 = v0[13];
    uint64_t v19 = v0[10];
    uint64_t v20 = v0[11];
    uint64_t v21 = v0[9];
    Album.url.getter();
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v21, v14);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v22 = (uint64_t (*)(void))v0[1];
  return v22();
}

{
  void *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;

  uint64_t v19 = v0;
  if (one-time initialization token for sharing != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  __swift_project_value_buffer(v1, (uint64_t)static Logger.sharing);
  swift_errorRetain();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  uint64_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    __int16 v15 = v0[14];
    uint64_t v16 = v0[13];
    uint64_t v17 = v0[15];
    uint64_t v4 = swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136446466;
    swift_bridgeObjectRetain();
    uint64_t v6 = MusicItemID.description.getter();
    uint64_t v8 = v7;
    swift_bridgeObjectRelease();
    *(void *)(v4 + 4) = _s2os32getNullTerminatedUTF8PointerImpl_21storingStringOwnersInSVSS_SpyypGSgztF_0(v6, v8, &v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v4 + 12) = 2114;
    swift_errorRetain();
    uint64_t v9 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v4 + 14) = v9;
    *uint64_t v5 = v9;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Failed to get share URL for album catalogID: %{public}s: %{public}@", (uint8_t *)v4, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&_sSo8NSObjectCSgMD_0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v17, v16);
  }
  else
  {
    uint64_t v11 = v0[14];
    uint64_t v10 = v0[15];
    uint64_t v12 = v0[13];

    swift_errorRelease();
    swift_errorRelease();
    swift_bridgeObjectRelease_n();
    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  }
  (*(void (**)(void, uint64_t, uint64_t, void))(v0[18] + 56))(v0[4], 1, 1, v0[17]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t Album.augmentMetadata(_:)(uint64_t a1)
{
  v2[4] = a1;
  v2[5] = v1;
  uint64_t v3 = type metadata accessor for MusicOffer.Kind();
  v2[6] = v3;
  v2[7] = *(void *)(v3 - 8);
  v2[8] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for MusicOffer();
  v2[9] = v4;
  v2[10] = *(void *)(v4 - 8);
  v2[11] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  v2[12] = swift_task_alloc();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicItemCollection<Album>);
  v2[13] = v5;
  v2[14] = *(void *)(v5 - 8);
  v2[15] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Album?);
  v2[16] = swift_task_alloc();
  v2[17] = swift_task_alloc();
  v2[18] = swift_task_alloc();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicCatalogResourceResponse<Album>);
  v2[19] = v6;
  v2[20] = *(void *)(v6 - 8);
  v2[21] = swift_task_alloc();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicCatalogResourceRequest<Album>);
  v2[22] = v7;
  v2[23] = *(void *)(v7 - 8);
  v2[24] = swift_task_alloc();
  return _swift_task_switch(Album.augmentMetadata(_:), 0, 0);
}

uint64_t Album.augmentMetadata(_:)()
{
  uint64_t v1 = Album.catalogID.getter();
  *(void *)(v0 + 200) = v1;
  *(void *)(v0 + 208) = v2;
  if (v2)
  {
    uint64_t v3 = v1;
    uint64_t v4 = v2;
    id v5 = [**(id **)(v0 + 32) specialization];
    *(void *)(v0 + 216) = v5;
    if (v5)
    {
      uint64_t v6 = v5;
      self;
      uint64_t v7 = swift_dynamicCastObjCClass();
      *(void *)(v0 + 224) = v7;
      if (v7)
      {
        swift_getKeyPath();
        *(void *)(v0 + 16) = v3;
        *(void *)(v0 + 24) = v4;
        *(void *)(v0 + 232) = type metadata accessor for Album();
        lazy protocol witness table accessor for type Playlist.Variant and conformance Playlist.Variant(&lazy protocol witness table cache variable for type Album and conformance Album, (void (*)(uint64_t))&type metadata accessor for Album);
        swift_bridgeObjectRetain();
        MusicCatalogResourceRequest.init<A>(matching:equalTo:)();
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
        uint64_t v8 = swift_allocObject();
        *(_OWORD *)(v8 + 16) = xmmword_100493D20;
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PartialMusicAsyncProperty<Album>);
        *(void *)(v8 + 32) = static PartialMusicProperty<A>.offers.getter();
        specialized Array._endMutation()();
        MusicCatalogResourceRequest.properties.setter();
        uint64_t v9 = (void *)swift_task_alloc();
        *(void *)(v0 + 240) = v9;
        *uint64_t v9 = v0;
        v9[1] = Album.augmentMetadata(_:);
        uint64_t v10 = *(void *)(v0 + 168);
        uint64_t v11 = *(void *)(v0 + 176);
        return MusicCatalogResourceRequest.response()(v10, v11);
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();
  uint64_t v4;

  *(void *)(*(void *)v1 + 248) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = Album.augmentMetadata(_:);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = Album.augmentMetadata(_:);
  }
  return _swift_task_switch(v2, 0, 0);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void **v7;
  void *v8;
  uint64_t v9;
  unsigned int (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSURL *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  Class isa;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, unint64_t, uint64_t);
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  void *v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t (*v52)(void);
  uint64_t v54;
  void (**v55)(uint64_t, uint64_t);
  void (**v56)(uint64_t, uint64_t);
  uint64_t v57;
  void (*v58)(uint64_t, unint64_t, uint64_t);
  uint64_t v59;

  uint64_t v1 = *(void *)(v0 + 232);
  uint64_t v2 = *(void *)(v0 + 144);
  uint64_t v3 = *(void *)(v0 + 136);
  id v5 = *(void *)(v0 + 112);
  uint64_t v4 = *(void *)(v0 + 120);
  uint64_t v6 = *(void *)(v0 + 104);
  uint64_t v7 = *(void ***)(v0 + 32);
  MusicCatalogResourceResponse.items.getter();
  specialized Collection.first.getter(v2);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  uint64_t v8 = *v7;
  outlined init with copy of (String, Any)(v2, v3, &demangling cache variable for type metadata for Album?);
  uint64_t v9 = *(void *)(v1 - 8);
  uint64_t v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v10(v3, 1, v1) == 1)
  {
    uint64_t v11 = *(void *)(v0 + 96);
    outlined destroy of TaskPriority?(*(void *)(v0 + 136), &demangling cache variable for type metadata for Album?);
    uint64_t v12 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
    uint64_t v13 = 0;
  }
  else
  {
    uint64_t v14 = *(void *)(v0 + 232);
    __int16 v15 = *(void *)(v0 + 136);
    uint64_t v16 = *(void *)(v0 + 96);
    Album.url.getter();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v15, v14);
    uint64_t v17 = type metadata accessor for URL();
    uint64_t v18 = *(void *)(v17 - 8);
    uint64_t v13 = 0;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) != 1)
    {
      uint64_t v20 = *(void *)(v0 + 96);
      URL._bridgeToObjectiveC()(v19);
      uint64_t v13 = v21;
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v20, v17);
    }
  }
  uint64_t v22 = *(void *)(v0 + 232);
  uint64_t v23 = *(void *)(v0 + 144);
  uint64_t v24 = *(void *)(v0 + 128);
  [v8 setOriginalURL:v13];

  outlined init with copy of (String, Any)(v23, v24, &demangling cache variable for type metadata for Album?);
  if (v10(v24, 1, v22) == 1)
  {
    outlined destroy of TaskPriority?(*(void *)(v0 + 128), &demangling cache variable for type metadata for Album?);
    Class isa = 0;
  }
  else
  {
    int v26 = *(void *)(v0 + 232);
    uint64_t v27 = *(void *)(v0 + 128);
    uint64_t v28 = Album.offers.getter();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v27, v26);
    if (v28)
    {
      uint64_t v29 = *(void *)(v28 + 16);
      if (v29)
      {
        char v30 = *(void *)(v0 + 80);
        char v31 = *(void *)(v0 + 56);
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, v29, 0);
        uint64_t v32 = *(void (**)(uint64_t, unint64_t, uint64_t))(v30 + 16);
        v30 += 16;
        uint64_t v54 = v28;
        char v33 = v28 + ((*(unsigned __int8 *)(v30 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 64));
        uint64_t v57 = *(void *)(v30 + 56);
        uint64_t v58 = v32;
        uint64_t v55 = (void (**)(uint64_t, uint64_t))(v30 - 8);
        uint64_t v56 = (void (**)(uint64_t, uint64_t))(v31 + 8);
        do
        {
          uint64_t v34 = *(void *)(v0 + 88);
          uint64_t v36 = *(void *)(v0 + 64);
          uint64_t v35 = *(void *)(v0 + 72);
          uint64_t v37 = *(void *)(v0 + 48);
          v58(v34, v33, v35);
          MusicOffer.kind.getter();
          uint64_t v38 = MusicOffer.Kind.rawValue.getter();
          uint64_t v40 = v39;
          (*v56)(v36, v37);
          (*v55)(v34, v35);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, _swiftEmptyArrayStorage[2] + 1, 1);
          }
          uint64_t v42 = _swiftEmptyArrayStorage[2];
          uint64_t v41 = _swiftEmptyArrayStorage[3];
          if (v42 >= v41 >> 1) {
            specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)((char *)(v41 > 1), v42 + 1, 1);
          }
          _swiftEmptyArrayStorage[2] = v42 + 1;
          uint64_t v43 = &_swiftEmptyArrayStorage[2 * v42];
          v43[4] = v38;
          v43[5] = v40;
          v33 += v57;
          --v29;
        }
        while (v29);
      }
      swift_bridgeObjectRelease();
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
    }
    else
    {
      Class isa = 0;
    }
  }
  uint64_t v44 = *(void **)(v0 + 216);
  uint64_t v46 = *(void *)(v0 + 184);
  uint64_t v45 = *(void *)(v0 + 192);
  uint64_t v48 = *(void *)(v0 + 168);
  uint64_t v47 = *(void *)(v0 + 176);
  uint64_t v49 = *(void *)(v0 + 152);
  uint64_t v50 = *(void *)(v0 + 160);
  uint64_t v51 = *(void *)(v0 + 144);
  objc_msgSend(*(id *)(v0 + 224), "setOffers:", isa, v54);

  outlined destroy of TaskPriority?(v51, &demangling cache variable for type metadata for Album?);
  (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v48, v49);
  (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v45, v47);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v52 = *(uint64_t (**)(void))(v0 + 8);
  return v52();
}

{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void);
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  uint64_t v20 = v0;
  if (one-time initialization token for sharing != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  __swift_project_value_buffer(v1, (uint64_t)static Logger.sharing);
  swift_errorRetain();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  uint64_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    __int16 v15 = *(void **)(v0 + 216);
    uint64_t v16 = *(void *)(v0 + 184);
    uint64_t v17 = *(void *)(v0 + 176);
    uint64_t v18 = *(void *)(v0 + 192);
    uint64_t v4 = swift_slowAlloc();
    id v5 = (void *)swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136446466;
    swift_bridgeObjectRetain();
    uint64_t v6 = MusicItemID.description.getter();
    uint64_t v8 = v7;
    swift_bridgeObjectRelease();
    *(void *)(v4 + 4) = _s2os32getNullTerminatedUTF8PointerImpl_21storingStringOwnersInSVSS_SpyypGSgztF_0(v6, v8, &v19);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v4 + 12) = 2114;
    swift_errorRetain();
    uint64_t v9 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v4 + 14) = v9;
    *id v5 = v9;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Failed to get share URL and offers for album catalogID: %{public}s: %{public}@", (uint8_t *)v4, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&_sSo8NSObjectCSgMD_0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v18, v17);
  }
  else
  {
    uint64_t v11 = *(void *)(v0 + 184);
    uint64_t v10 = *(void *)(v0 + 192);
    uint64_t v12 = *(void *)(v0 + 176);

    swift_errorRelease();
    swift_errorRelease();
    swift_bridgeObjectRelease_n();
    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
  return v13();
}

uint64_t protocol witness for ShareableMusicItem.shareURL.getter in conformance Album(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = closure #3 in static Actions.ReportConcern.action(context:);
  return Album.shareURL.getter(a1);
}

uint64_t protocol witness for ShareableMusicItem.actionTitle.getter in conformance Album()
{
  return ShareableMusicItem.actionTitle.getter();
}

uint64_t protocol witness for ShareableMusicItem.failureMessage.getter in conformance Album()
{
  return Album.failureMessage.getter();
}

uint64_t protocol witness for ShareableMusicItem.augmentMetadata(_:) in conformance Album(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = closure #3 in static Actions.ReportConcern.action(context:);
  return Album.augmentMetadata(_:)(a1);
}

uint64_t Artist.actionTitle.getter()
{
  return Album.actionTitle.getter();
}

uint64_t Artist.failureMessage.getter()
{
  return Album.actionTitle.getter();
}

uint64_t Artist.shareURL.getter(uint64_t a1)
{
  v2[4] = a1;
  v2[5] = v1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicItemCollection<Artist>);
  v2[6] = v3;
  v2[7] = *(void *)(v3 - 8);
  v2[8] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Artist?);
  v2[9] = swift_task_alloc();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicCatalogResourceResponse<Artist>);
  v2[10] = v4;
  v2[11] = *(void *)(v4 - 8);
  v2[12] = swift_task_alloc();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicCatalogResourceRequest<Artist>);
  v2[13] = v5;
  v2[14] = *(void *)(v5 - 8);
  v2[15] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  v2[16] = swift_task_alloc();
  return _swift_task_switch(Artist.shareURL.getter, 0, 0);
}

uint64_t Artist.shareURL.getter()
{
  uint64_t v1 = v0[16];
  Artist.url.getter();
  uint64_t v2 = type metadata accessor for URL();
  v0[17] = v2;
  uint64_t v3 = *(void *)(v2 - 8);
  v0[18] = v3;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    outlined destroy of TaskPriority?(v0[16], &demangling cache variable for type metadata for URL?);
    uint64_t v4 = Artist.catalogID.getter();
    v0[19] = v4;
    v0[20] = v5;
    if (v5)
    {
      uint64_t v6 = v4;
      uint64_t v7 = v5;
      swift_getKeyPath();
      v0[2] = v6;
      v0[3] = v7;
      v0[21] = type metadata accessor for Artist();
      lazy protocol witness table accessor for type Playlist.Variant and conformance Playlist.Variant(&lazy protocol witness table cache variable for type Artist and conformance Artist, (void (*)(uint64_t))&type metadata accessor for Artist);
      swift_bridgeObjectRetain();
      MusicCatalogResourceRequest.init<A>(matching:equalTo:)();
      uint64_t v8 = (void *)swift_task_alloc();
      v0[22] = v8;
      *uint64_t v8 = v0;
      v8[1] = Artist.shareURL.getter;
      uint64_t v9 = v0[12];
      uint64_t v10 = v0[13];
      return MusicCatalogResourceRequest.response()(v9, v10);
    }
    (*(void (**)(void, uint64_t, uint64_t, uint64_t))(v3 + 56))(v0[4], 1, 1, v2);
  }
  else
  {
    uint64_t v11 = v0[4];
    (*(void (**)(uint64_t, void, uint64_t))(v3 + 32))(v11, v0[16], v2);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v3 + 56))(v11, 0, 1, v2);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();
  uint64_t v4;

  *(void *)(*(void *)v1 + 184) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = Artist.shareURL.getter;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = Artist.shareURL.getter;
  }
  return _swift_task_switch(v2, 0, 0);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(void);
  uint64_t v24;

  uint64_t v1 = v0[21];
  uint64_t v2 = v0[9];
  uint64_t v4 = v0[7];
  uint64_t v3 = v0[8];
  uint64_t v5 = v0[6];
  MusicCatalogResourceResponse.items.getter();
  specialized Collection.first.getter(v2);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  uint64_t v6 = *(void *)(v1 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v2, 1, v1) == 1)
  {
    uint64_t v7 = v0[17];
    uint64_t v8 = v0[18];
    uint64_t v10 = v0[14];
    uint64_t v9 = v0[15];
    uint64_t v11 = v0[13];
    uint64_t v12 = v0[9];
    uint64_t v13 = v0[4];
    (*(void (**)(void, void))(v0[11] + 8))(v0[12], v0[10]);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    outlined destroy of TaskPriority?(v12, &demangling cache variable for type metadata for Artist?);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v13, 1, 1, v7);
  }
  else
  {
    uint64_t v14 = v0[21];
    uint64_t v16 = v0[14];
    __int16 v15 = v0[15];
    uint64_t v18 = v0[12];
    uint64_t v17 = v0[13];
    uint64_t v19 = v0[10];
    uint64_t v20 = v0[11];
    uint64_t v21 = v0[9];
    Artist.url.getter();
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v21, v14);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v22 = (uint64_t (*)(void))v0[1];
  return v22();
}

{
  void *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;

  uint64_t v19 = v0;
  if (one-time initialization token for sharing != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  __swift_project_value_buffer(v1, (uint64_t)static Logger.sharing);
  swift_errorRetain();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  uint64_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    __int16 v15 = v0[14];
    uint64_t v16 = v0[13];
    uint64_t v17 = v0[15];
    uint64_t v4 = swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136446466;
    swift_bridgeObjectRetain();
    uint64_t v6 = MusicItemID.description.getter();
    uint64_t v8 = v7;
    swift_bridgeObjectRelease();
    *(void *)(v4 + 4) = _s2os32getNullTerminatedUTF8PointerImpl_21storingStringOwnersInSVSS_SpyypGSgztF_0(v6, v8, &v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v4 + 12) = 2114;
    swift_errorRetain();
    uint64_t v9 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v4 + 14) = v9;
    *uint64_t v5 = v9;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Failed to get share URL for artist catalogID: %{public}s: %{public}@", (uint8_t *)v4, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&_sSo8NSObjectCSgMD_0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v17, v16);
  }
  else
  {
    uint64_t v11 = v0[14];
    uint64_t v10 = v0[15];
    uint64_t v12 = v0[13];

    swift_errorRelease();
    swift_errorRelease();
    swift_bridgeObjectRelease_n();
    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  }
  (*(void (**)(void, uint64_t, uint64_t, void))(v0[18] + 56))(v0[4], 1, 1, v0[17]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t protocol witness for ShareableMusicItem.shareURL.getter in conformance Artist(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = closure #3 in static Actions.ReportConcern.action(context:);
  return Artist.shareURL.getter(a1);
}

uint64_t protocol witness for ShareableMusicItem.actionTitle.getter in conformance Artist()
{
  return ShareableMusicItem.actionTitle.getter();
}

uint64_t protocol witness for ShareableMusicItem.failureMessage.getter in conformance Artist()
{
  return Artist.failureMessage.getter();
}

uint64_t protocol witness for ShareableMusicItem.augmentMetadata(_:) in conformance Artist(uint64_t a1)
{
  void v2[2] = a1;
  v2[3] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  v2[4] = swift_task_alloc();
  return _swift_task_switch(protocol witness for ShareableMusicItem.augmentMetadata(_:) in conformance Artist, 0, 0);
}

uint64_t protocol witness for ShareableMusicItem.augmentMetadata(_:) in conformance Artist()
{
  *(void *)(v0 + 40) = **(void **)(v0 + 16);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v1;
  *uint64_t v1 = v0;
  v1[1] = protocol witness for ShareableMusicItem.augmentMetadata(_:) in conformance Artist;
  uint64_t v2 = *(void *)(v0 + 32);
  return Artist.shareURL.getter(v2);
}

{
  uint64_t v1;

  swift_task_dealloc();
  return _swift_task_switch(protocol witness for ShareableMusicItem.augmentMetadata(_:) in conformance Artist, 0, 0);
}

uint64_t Composer.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for URL();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(a1, 1, 1, v2);
}

uint64_t Composer.actionTitle.getter()
{
  return Album.actionTitle.getter();
}

uint64_t Composer.failureMessage.getter()
{
  return Album.actionTitle.getter();
}

uint64_t protocol witness for ShareableMusicItem.shareURL.getter in conformance Composer(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(protocol witness for ShareableMusicItem.shareURL.getter in conformance Composer, 0, 0);
}

uint64_t protocol witness for ShareableMusicItem.shareURL.getter in conformance Composer()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t protocol witness for ShareableMusicItem.actionTitle.getter in conformance Composer()
{
  return Composer.actionTitle.getter();
}

uint64_t protocol witness for ShareableMusicItem.failureMessage.getter in conformance Composer()
{
  return Composer.failureMessage.getter();
}

uint64_t protocol witness for ShareableMusicItem.augmentMetadata(_:) in conformance Composer(uint64_t a1)
{
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)&async function pointer to specialized ShareableMusicItem.augmentMetadata(_:)
                                       + async function pointer to specialized ShareableMusicItem.augmentMetadata(_:));
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = closure #3 in static Actions.ReportConcern.action(context:);
  return v5(a1);
}

uint64_t Curator.actionTitle.getter()
{
  return Album.actionTitle.getter();
}

uint64_t Curator.failureMessage.getter()
{
  return Album.actionTitle.getter();
}

uint64_t protocol witness for ShareableMusicItem.shareURL.getter in conformance Curator(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return _swift_task_switch(protocol witness for ShareableMusicItem.shareURL.getter in conformance Curator, 0, 0);
}

uint64_t protocol witness for ShareableMusicItem.shareURL.getter in conformance Curator()
{
  Curator.url.getter();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t protocol witness for ShareableMusicItem.actionTitle.getter in conformance Curator()
{
  return Curator.actionTitle.getter();
}

uint64_t protocol witness for ShareableMusicItem.failureMessage.getter in conformance Curator()
{
  return Curator.failureMessage.getter();
}

uint64_t protocol witness for ShareableMusicItem.augmentMetadata(_:) in conformance Curator(uint64_t a1)
{
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)&async function pointer to specialized ShareableMusicItem.augmentMetadata(_:)
                                       + async function pointer to specialized ShareableMusicItem.augmentMetadata(_:));
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = closure #3 in static Actions.ReportConcern.action(context:);
  return v5(a1);
}

uint64_t EditorialItem.actionTitle.getter()
{
  return Album.actionTitle.getter();
}

uint64_t protocol witness for ShareableMusicItem.shareURL.getter in conformance EditorialItem(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return _swift_task_switch(protocol witness for ShareableMusicItem.shareURL.getter in conformance EditorialItem, 0, 0);
}

uint64_t protocol witness for ShareableMusicItem.shareURL.getter in conformance EditorialItem()
{
  EditorialItem.url.getter();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t protocol witness for ShareableMusicItem.failureMessage.getter in conformance EditorialItem()
{
  return specialized ShareableMusicItem.failureMessage.getter();
}

uint64_t protocol witness for ShareableMusicItem.augmentMetadata(_:) in conformance EditorialItem(uint64_t a1)
{
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)&async function pointer to specialized ShareableMusicItem.augmentMetadata(_:)
                                       + async function pointer to specialized ShareableMusicItem.augmentMetadata(_:));
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = closure #3 in static Actions.ReportConcern.action(context:);
  return v5(a1);
}

uint64_t Genre.actionTitle.getter()
{
  return Album.actionTitle.getter();
}

uint64_t Genre.failureMessage.getter()
{
  return Album.actionTitle.getter();
}

uint64_t protocol witness for ShareableMusicItem.shareURL.getter in conformance Genre(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return _swift_task_switch(protocol witness for ShareableMusicItem.shareURL.getter in conformance Genre, 0, 0);
}

uint64_t protocol witness for ShareableMusicItem.shareURL.getter in conformance Genre()
{
  Genre.url.getter();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t protocol witness for ShareableMusicItem.actionTitle.getter in conformance Genre()
{
  return ShareableMusicItem.actionTitle.getter();
}

uint64_t protocol witness for ShareableMusicItem.failureMessage.getter in conformance Genre()
{
  return Genre.failureMessage.getter();
}

uint64_t protocol witness for ShareableMusicItem.augmentMetadata(_:) in conformance Genre(uint64_t a1)
{
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)&async function pointer to specialized ShareableMusicItem.augmentMetadata(_:)
                                       + async function pointer to specialized ShareableMusicItem.augmentMetadata(_:));
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = closure #3 in static Actions.ReportConcern.action(context:);
  return v5(a1);
}

uint64_t MusicMovie.actionTitle.getter()
{
  return Album.actionTitle.getter();
}

uint64_t MusicMovie.failureMessage.getter()
{
  return Album.actionTitle.getter();
}

uint64_t MusicMovie.shareURL.getter(uint64_t a1)
{
  v2[4] = a1;
  v2[5] = v1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicItemCollection<MusicMovie>);
  v2[6] = v3;
  v2[7] = *(void *)(v3 - 8);
  v2[8] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicMovie?);
  v2[9] = swift_task_alloc();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicCatalogResourceResponse<MusicMovie>);
  v2[10] = v4;
  v2[11] = *(void *)(v4 - 8);
  v2[12] = swift_task_alloc();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicCatalogResourceRequest<MusicMovie>);
  v2[13] = v5;
  v2[14] = *(void *)(v5 - 8);
  v2[15] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  v2[16] = swift_task_alloc();
  return _swift_task_switch(MusicMovie.shareURL.getter, 0, 0);
}

uint64_t MusicMovie.shareURL.getter()
{
  uint64_t v1 = v0[16];
  MusicMovie.url.getter();
  uint64_t v2 = type metadata accessor for URL();
  v0[17] = v2;
  uint64_t v3 = *(void *)(v2 - 8);
  v0[18] = v3;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    outlined destroy of TaskPriority?(v0[16], &demangling cache variable for type metadata for URL?);
    uint64_t v4 = MusicMovie.catalogID.getter();
    v0[19] = v4;
    v0[20] = v5;
    if (v5)
    {
      uint64_t v6 = v4;
      uint64_t v7 = v5;
      swift_getKeyPath();
      v0[2] = v6;
      v0[3] = v7;
      v0[21] = type metadata accessor for MusicMovie();
      lazy protocol witness table accessor for type Playlist.Variant and conformance Playlist.Variant(&lazy protocol witness table cache variable for type MusicMovie and conformance MusicMovie, (void (*)(uint64_t))&type metadata accessor for MusicMovie);
      lazy protocol witness table accessor for type Playlist.Variant and conformance Playlist.Variant(&lazy protocol witness table cache variable for type MusicMovie and conformance MusicMovie, (void (*)(uint64_t))&type metadata accessor for MusicMovie);
      swift_bridgeObjectRetain();
      MusicCatalogResourceRequest.init<A>(matching:equalTo:)();
      uint64_t v8 = (void *)swift_task_alloc();
      v0[22] = v8;
      *uint64_t v8 = v0;
      v8[1] = MusicMovie.shareURL.getter;
      uint64_t v9 = v0[12];
      uint64_t v10 = v0[13];
      return MusicCatalogResourceRequest.response()(v9, v10);
    }
    (*(void (**)(void, uint64_t, uint64_t, uint64_t))(v3 + 56))(v0[4], 1, 1, v2);
  }
  else
  {
    uint64_t v11 = v0[4];
    (*(void (**)(uint64_t, void, uint64_t))(v3 + 32))(v11, v0[16], v2);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v3 + 56))(v11, 0, 1, v2);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();
  uint64_t v4;

  *(void *)(*(void *)v1 + 184) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = MusicMovie.shareURL.getter;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = MusicMovie.shareURL.getter;
  }
  return _swift_task_switch(v2, 0, 0);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(void);
  uint64_t v24;

  uint64_t v1 = v0[21];
  uint64_t v2 = v0[9];
  uint64_t v4 = v0[7];
  uint64_t v3 = v0[8];
  uint64_t v5 = v0[6];
  MusicCatalogResourceResponse.items.getter();
  specialized Collection.first.getter(v2);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  uint64_t v6 = *(void *)(v1 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v2, 1, v1) == 1)
  {
    uint64_t v7 = v0[17];
    uint64_t v8 = v0[18];
    uint64_t v10 = v0[14];
    uint64_t v9 = v0[15];
    uint64_t v11 = v0[13];
    uint64_t v12 = v0[9];
    uint64_t v13 = v0[4];
    (*(void (**)(void, void))(v0[11] + 8))(v0[12], v0[10]);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    outlined destroy of TaskPriority?(v12, &demangling cache variable for type metadata for MusicMovie?);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v13, 1, 1, v7);
  }
  else
  {
    uint64_t v14 = v0[21];
    uint64_t v16 = v0[14];
    __int16 v15 = v0[15];
    uint64_t v18 = v0[12];
    uint64_t v17 = v0[13];
    uint64_t v19 = v0[10];
    uint64_t v20 = v0[11];
    uint64_t v21 = v0[9];
    MusicMovie.url.getter();
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v21, v14);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v22 = (uint64_t (*)(void))v0[1];
  return v22();
}

{
  void *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;

  uint64_t v19 = v0;
  if (one-time initialization token for sharing != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  __swift_project_value_buffer(v1, (uint64_t)static Logger.sharing);
  swift_errorRetain();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  uint64_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    __int16 v15 = v0[14];
    uint64_t v16 = v0[13];
    uint64_t v17 = v0[15];
    uint64_t v4 = swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136446466;
    swift_bridgeObjectRetain();
    uint64_t v6 = MusicItemID.description.getter();
    uint64_t v8 = v7;
    swift_bridgeObjectRelease();
    *(void *)(v4 + 4) = _s2os32getNullTerminatedUTF8PointerImpl_21storingStringOwnersInSVSS_SpyypGSgztF_0(v6, v8, &v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v4 + 12) = 2114;
    swift_errorRetain();
    uint64_t v9 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v4 + 14) = v9;
    *uint64_t v5 = v9;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Failed to get share URL for music movie catalogID: %{public}s: %{public}@", (uint8_t *)v4, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&_sSo8NSObjectCSgMD_0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v17, v16);
  }
  else
  {
    uint64_t v11 = v0[14];
    uint64_t v10 = v0[15];
    uint64_t v12 = v0[13];

    swift_errorRelease();
    swift_errorRelease();
    swift_bridgeObjectRelease_n();
    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  }
  (*(void (**)(void, uint64_t, uint64_t, void))(v0[18] + 56))(v0[4], 1, 1, v0[17]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t protocol witness for ShareableMusicItem.shareURL.getter in conformance MusicMovie(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = closure #3 in static Actions.ReportConcern.action(context:);
  return MusicMovie.shareURL.getter(a1);
}

uint64_t protocol witness for ShareableMusicItem.actionTitle.getter in conformance MusicMovie()
{
  return ShareableMusicItem.actionTitle.getter();
}

uint64_t protocol witness for ShareableMusicItem.failureMessage.getter in conformance MusicMovie()
{
  return MusicMovie.failureMessage.getter();
}

uint64_t protocol witness for ShareableMusicItem.augmentMetadata(_:) in conformance MusicMovie(uint64_t a1)
{
  void v2[2] = a1;
  v2[3] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  v2[4] = swift_task_alloc();
  return _swift_task_switch(protocol witness for ShareableMusicItem.augmentMetadata(_:) in conformance MusicMovie, 0, 0);
}

uint64_t protocol witness for ShareableMusicItem.augmentMetadata(_:) in conformance MusicMovie()
{
  *(void *)(v0 + 40) = **(void **)(v0 + 16);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v1;
  *uint64_t v1 = v0;
  v1[1] = protocol witness for ShareableMusicItem.augmentMetadata(_:) in conformance Artist;
  uint64_t v2 = *(void *)(v0 + 32);
  return MusicMovie.shareURL.getter(v2);
}

uint64_t MusicVideo.actionTitle.getter()
{
  return Album.actionTitle.getter();
}

uint64_t MusicVideo.failureMessage.getter()
{
  return Album.actionTitle.getter();
}

uint64_t MusicVideo.shareURL.getter(uint64_t a1)
{
  v2[4] = a1;
  v2[5] = v1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicItemCollection<MusicVideo>);
  v2[6] = v3;
  v2[7] = *(void *)(v3 - 8);
  v2[8] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicVideo?);
  v2[9] = swift_task_alloc();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicCatalogResourceResponse<MusicVideo>);
  v2[10] = v4;
  v2[11] = *(void *)(v4 - 8);
  v2[12] = swift_task_alloc();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicCatalogResourceRequest<MusicVideo>);
  v2[13] = v5;
  v2[14] = *(void *)(v5 - 8);
  v2[15] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  v2[16] = swift_task_alloc();
  return _swift_task_switch(MusicVideo.shareURL.getter, 0, 0);
}

uint64_t MusicVideo.shareURL.getter()
{
  uint64_t v1 = v0[16];
  MusicVideo.url.getter();
  uint64_t v2 = type metadata accessor for URL();
  v0[17] = v2;
  uint64_t v3 = *(void *)(v2 - 8);
  v0[18] = v3;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    outlined destroy of TaskPriority?(v0[16], &demangling cache variable for type metadata for URL?);
    uint64_t v4 = MusicVideo.catalogID.getter();
    v0[19] = v4;
    v0[20] = v5;
    if (v5)
    {
      uint64_t v6 = v4;
      uint64_t v7 = v5;
      swift_getKeyPath();
      v0[2] = v6;
      v0[3] = v7;
      v0[21] = type metadata accessor for MusicVideo();
      lazy protocol witness table accessor for type Playlist.Variant and conformance Playlist.Variant(&lazy protocol witness table cache variable for type MusicVideo and conformance MusicVideo, (void (*)(uint64_t))&type metadata accessor for MusicVideo);
      swift_bridgeObjectRetain();
      MusicCatalogResourceRequest.init<A>(matching:equalTo:)();
      uint64_t v8 = (void *)swift_task_alloc();
      v0[22] = v8;
      *uint64_t v8 = v0;
      v8[1] = MusicVideo.shareURL.getter;
      uint64_t v9 = v0[12];
      uint64_t v10 = v0[13];
      return MusicCatalogResourceRequest.response()(v9, v10);
    }
    (*(void (**)(void, uint64_t, uint64_t, uint64_t))(v3 + 56))(v0[4], 1, 1, v2);
  }
  else
  {
    uint64_t v11 = v0[4];
    (*(void (**)(uint64_t, void, uint64_t))(v3 + 32))(v11, v0[16], v2);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v3 + 56))(v11, 0, 1, v2);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();
  uint64_t v4;

  *(void *)(*(void *)v1 + 184) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = MusicVideo.shareURL.getter;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = MusicVideo.shareURL.getter;
  }
  return _swift_task_switch(v2, 0, 0);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(void);
  uint64_t v24;

  uint64_t v1 = v0[21];
  uint64_t v2 = v0[9];
  uint64_t v4 = v0[7];
  uint64_t v3 = v0[8];
  uint64_t v5 = v0[6];
  MusicCatalogResourceResponse.items.getter();
  specialized Collection.first.getter(v2);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  uint64_t v6 = *(void *)(v1 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v2, 1, v1) == 1)
  {
    uint64_t v7 = v0[17];
    uint64_t v8 = v0[18];
    uint64_t v10 = v0[14];
    uint64_t v9 = v0[15];
    uint64_t v11 = v0[13];
    uint64_t v12 = v0[9];
    uint64_t v13 = v0[4];
    (*(void (**)(void, void))(v0[11] + 8))(v0[12], v0[10]);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    outlined destroy of TaskPriority?(v12, &demangling cache variable for type metadata for MusicVideo?);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v13, 1, 1, v7);
  }
  else
  {
    uint64_t v14 = v0[21];
    uint64_t v16 = v0[14];
    __int16 v15 = v0[15];
    uint64_t v18 = v0[12];
    uint64_t v17 = v0[13];
    uint64_t v19 = v0[10];
    uint64_t v20 = v0[11];
    uint64_t v21 = v0[9];
    MusicVideo.url.getter();
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v21, v14);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v22 = (uint64_t (*)(void))v0[1];
  return v22();
}

{
  void *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;

  uint64_t v19 = v0;
  if (one-time initialization token for sharing != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  __swift_project_value_buffer(v1, (uint64_t)static Logger.sharing);
  swift_errorRetain();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  uint64_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    __int16 v15 = v0[14];
    uint64_t v16 = v0[13];
    uint64_t v17 = v0[15];
    uint64_t v4 = swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136446466;
    swift_bridgeObjectRetain();
    uint64_t v6 = MusicItemID.description.getter();
    uint64_t v8 = v7;
    swift_bridgeObjectRelease();
    *(void *)(v4 + 4) = _s2os32getNullTerminatedUTF8PointerImpl_21storingStringOwnersInSVSS_SpyypGSgztF_0(v6, v8, &v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v4 + 12) = 2114;
    swift_errorRetain();
    uint64_t v9 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v4 + 14) = v9;
    *uint64_t v5 = v9;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Failed to get share URL for music video catalogID: %{public}s: %{public}@", (uint8_t *)v4, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&_sSo8NSObjectCSgMD_0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v17, v16);
  }
  else
  {
    uint64_t v11 = v0[14];
    uint64_t v10 = v0[15];
    uint64_t v12 = v0[13];

    swift_errorRelease();
    swift_errorRelease();
    swift_bridgeObjectRelease_n();
    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  }
  (*(void (**)(void, uint64_t, uint64_t, void))(v0[18] + 56))(v0[4], 1, 1, v0[17]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t key path getter for MusicVideoFilter.id : MusicVideoFilter@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return key path getter for MusicVideoFilter.id : MusicVideoFilter(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of MusicVideoFilter.id.getter, a2);
}

uint64_t protocol witness for ShareableMusicItem.shareURL.getter in conformance MusicVideo(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = closure #3 in static Actions.ReportConcern.action(context:);
  return MusicVideo.shareURL.getter(a1);
}

uint64_t protocol witness for ShareableMusicItem.actionTitle.getter in conformance MusicVideo()
{
  return ShareableMusicItem.actionTitle.getter();
}

uint64_t protocol witness for ShareableMusicItem.failureMessage.getter in conformance MusicVideo()
{
  return MusicVideo.failureMessage.getter();
}

uint64_t protocol witness for ShareableMusicItem.augmentMetadata(_:) in conformance MusicVideo(uint64_t a1)
{
  void v2[2] = a1;
  v2[3] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  v2[4] = swift_task_alloc();
  return _swift_task_switch(protocol witness for ShareableMusicItem.augmentMetadata(_:) in conformance MusicVideo, 0, 0);
}

uint64_t protocol witness for ShareableMusicItem.augmentMetadata(_:) in conformance MusicVideo()
{
  *(void *)(v0 + 40) = **(void **)(v0 + 16);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v1;
  *uint64_t v1 = v0;
  v1[1] = protocol witness for ShareableMusicItem.augmentMetadata(_:) in conformance Artist;
  uint64_t v2 = *(void *)(v0 + 32);
  return MusicVideo.shareURL.getter(v2);
}

uint64_t Playlist.actionTitle.getter()
{
  return Album.actionTitle.getter();
}

uint64_t Playlist.failureMessage.getter()
{
  return Album.actionTitle.getter();
}

uint64_t Playlist.shareURL.getter(uint64_t a1)
{
  v2[4] = a1;
  v2[5] = v1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicItemCollection<Playlist>);
  v2[6] = v3;
  v2[7] = *(void *)(v3 - 8);
  v2[8] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Playlist?);
  v2[9] = swift_task_alloc();
  v2[10] = swift_task_alloc();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicCatalogResourceResponse<Playlist>);
  v2[11] = v4;
  v2[12] = *(void *)(v4 - 8);
  v2[13] = swift_task_alloc();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicCatalogResourceRequest<Playlist>);
  v2[14] = v5;
  v2[15] = *(void *)(v5 - 8);
  v2[16] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  v2[17] = swift_task_alloc();
  return _swift_task_switch(Playlist.shareURL.getter, 0, 0);
}

uint64_t Playlist.shareURL.getter()
{
  uint64_t v1 = v0[17];
  Playlist.url.getter();
  uint64_t v2 = type metadata accessor for URL();
  v0[18] = v2;
  uint64_t v3 = *(void *)(v2 - 8);
  v0[19] = v3;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    outlined destroy of TaskPriority?(v0[17], &demangling cache variable for type metadata for URL?);
    uint64_t v4 = Playlist.catalogID.getter();
    v0[20] = v4;
    v0[21] = v5;
    if (v5)
    {
      uint64_t v6 = v4;
      uint64_t v7 = v5;
      swift_getKeyPath();
      v0[2] = v6;
      v0[3] = v7;
      v0[22] = type metadata accessor for Playlist();
      lazy protocol witness table accessor for type Playlist.Variant and conformance Playlist.Variant(&lazy protocol witness table cache variable for type Playlist and conformance Playlist, (void (*)(uint64_t))&type metadata accessor for Playlist);
      swift_bridgeObjectRetain();
      MusicCatalogResourceRequest.init<A>(matching:equalTo:)();
      uint64_t v8 = (void *)swift_task_alloc();
      v0[23] = v8;
      *uint64_t v8 = v0;
      v8[1] = Playlist.shareURL.getter;
      uint64_t v9 = v0[13];
      uint64_t v10 = v0[14];
      return MusicCatalogResourceRequest.response()(v9, v10);
    }
    char v12 = Playlist.isPublic.getter();
    BOOL v13 = v12 != 2 && (v12 & 1) == 0;
    if (v13 && (Playlist.isShareable.getter() & 1) == 0 && (Playlist.canMakeShareable.getter() & 1) != 0)
    {
      uint64_t v14 = (void *)swift_task_alloc();
      v0[25] = v14;
      *uint64_t v14 = v0;
      v14[1] = Playlist.shareURL.getter;
      uint64_t v15 = v0[9];
      return Playlist.publish()(v15);
    }
    (*(void (**)(void, uint64_t, uint64_t, uint64_t))(v3 + 56))(v0[4], 1, 1, v2);
  }
  else
  {
    uint64_t v11 = v0[4];
    (*(void (**)(uint64_t, void, uint64_t))(v3 + 32))(v11, v0[17], v2);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v3 + 56))(v11, 0, 1, v2);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v16 = (uint64_t (*)(void))v0[1];
  return v16();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();
  uint64_t v4;

  *(void *)(*(void *)v1 + 192) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = Playlist.shareURL.getter;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = Playlist.shareURL.getter;
  }
  return _swift_task_switch(v2, 0, 0);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(void);
  uint64_t v24;

  uint64_t v1 = v0[22];
  uint64_t v2 = v0[10];
  uint64_t v4 = v0[7];
  uint64_t v3 = v0[8];
  uint64_t v5 = v0[6];
  MusicCatalogResourceResponse.items.getter();
  specialized Collection.first.getter(v2);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  uint64_t v6 = *(void *)(v1 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v2, 1, v1) == 1)
  {
    uint64_t v7 = v0[18];
    uint64_t v8 = v0[19];
    uint64_t v10 = v0[15];
    uint64_t v9 = v0[16];
    uint64_t v11 = v0[14];
    char v12 = v0[10];
    BOOL v13 = v0[4];
    (*(void (**)(void, void))(v0[12] + 8))(v0[13], v0[11]);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    outlined destroy of TaskPriority?(v12, &demangling cache variable for type metadata for Playlist?);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v13, 1, 1, v7);
  }
  else
  {
    uint64_t v14 = v0[22];
    uint64_t v16 = v0[15];
    uint64_t v15 = v0[16];
    uint64_t v18 = v0[13];
    uint64_t v17 = v0[14];
    uint64_t v19 = v0[11];
    uint64_t v20 = v0[12];
    uint64_t v21 = v0[10];
    Playlist.url.getter();
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v21, v14);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v22 = (uint64_t (*)(void))v0[1];
  return v22();
}

{
  uint64_t v1;

  swift_task_dealloc();
  return _swift_task_switch(Playlist.shareURL.getter, 0, 0);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);
  uint64_t v9;

  uint64_t v1 = v0[9];
  uint64_t v2 = type metadata accessor for Playlist();
  uint64_t v3 = *(void *)(v2 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    uint64_t v4 = v0[18];
    uint64_t v5 = v0[19];
    uint64_t v6 = v0[4];
    outlined destroy of TaskPriority?(v1, &demangling cache variable for type metadata for Playlist?);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(v6, 1, 1, v4);
  }
  else
  {
    Playlist.url.getter();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

{
  void *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;

  uint64_t v19 = v0;
  if (one-time initialization token for sharing != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  __swift_project_value_buffer(v1, (uint64_t)static Logger.sharing);
  swift_errorRetain();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  uint64_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v15 = v0[15];
    uint64_t v16 = v0[14];
    uint64_t v17 = v0[16];
    uint64_t v4 = swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136446466;
    swift_bridgeObjectRetain();
    uint64_t v6 = MusicItemID.description.getter();
    uint64_t v8 = v7;
    swift_bridgeObjectRelease();
    *(void *)(v4 + 4) = _s2os32getNullTerminatedUTF8PointerImpl_21storingStringOwnersInSVSS_SpyypGSgztF_0(v6, v8, &v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v4 + 12) = 2114;
    swift_errorRetain();
    uint64_t v9 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v4 + 14) = v9;
    *uint64_t v5 = v9;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Failed to get share URL for playlist catalogID: %{public}s: %{public}@", (uint8_t *)v4, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&_sSo8NSObjectCSgMD_0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v17, v16);
  }
  else
  {
    uint64_t v11 = v0[15];
    uint64_t v10 = v0[16];
    char v12 = v0[14];

    swift_errorRelease();
    swift_errorRelease();
    swift_bridgeObjectRelease_n();
    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  }
  (*(void (**)(void, uint64_t, uint64_t, void))(v0[19] + 56))(v0[4], 1, 1, v0[18]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  BOOL v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t Playlist.publish()(uint64_t a1)
{
  v2[3] = a1;
  v2[4] = v1;
  uint64_t v3 = type metadata accessor for Playlist();
  v2[5] = v3;
  v2[6] = *(void *)(v3 - 8);
  v2[7] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for MusicLibraryPlaylistResponse();
  v2[8] = v4;
  v2[9] = *(void *)(v4 - 8);
  v2[10] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for MusicLibraryPlaylistRequest.CompletionPolicy();
  v2[11] = v5;
  v2[12] = *(void *)(v5 - 8);
  v2[13] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Curator?);
  v2[14] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for MusicLibraryPlaylistRequest();
  v2[15] = v6;
  v2[16] = *(void *)(v6 - 8);
  v2[17] = swift_task_alloc();
  return _swift_task_switch(Playlist.publish(), 0, 0);
}

uint64_t Playlist.publish()()
{
  uint64_t v2 = v0[13];
  uint64_t v1 = v0[14];
  uint64_t v3 = v0[11];
  uint64_t v4 = v0[12];
  uint64_t v5 = type metadata accessor for Curator();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v1, 1, 1, v5);
  static MusicLibraryPlaylistRequest.editing(_:name:description:userImage:isPublic:isVisible:curator:)();
  outlined destroy of TaskPriority?(v1, &demangling cache variable for type metadata for Curator?);
  (*(void (**)(uint64_t, void, uint64_t))(v4 + 104))(v2, enum case for MusicLibraryPlaylistRequest.CompletionPolicy.afterCloudLibraryChanges(_:), v3);
  MusicLibraryPlaylistRequest.completionPolicy.setter();
  uint64_t v6 = (void *)swift_task_alloc();
  v0[18] = v6;
  *uint64_t v6 = v0;
  v6[1] = Playlist.publish();
  uint64_t v7 = v0[10];
  return MusicLibraryPlaylistRequest.response()(v7);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();
  uint64_t v4;

  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = Playlist.publish();
  }
  else {
    uint64_t v2 = Playlist.publish();
  }
  return _swift_task_switch(v2, 0, 0);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(void);
  uint64_t v12;

  uint64_t v2 = v0[16];
  uint64_t v1 = v0[17];
  uint64_t v3 = v0[15];
  uint64_t v5 = v0[9];
  uint64_t v4 = v0[10];
  uint64_t v6 = v0[8];
  uint64_t v7 = v0[5];
  uint64_t v8 = v0[6];
  uint64_t v9 = v0[3];
  MusicLibraryPlaylistResponse.playlist.getter();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v8 + 56))(v9, 0, 1, v7);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t (*v21)(void);
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;

  uint64_t v25 = v0;
  if (one-time initialization token for sharing != -1) {
    swift_once();
  }
  uint64_t v2 = v0[6];
  uint64_t v1 = v0[7];
  uint64_t v4 = v0[4];
  uint64_t v3 = v0[5];
  uint64_t v5 = type metadata accessor for Logger();
  __swift_project_value_buffer(v5, (uint64_t)static Logger.sharing);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v6 = Logger.logObject.getter();
  uint64_t v7 = static os_log_type_t.error.getter();
  uint64_t v8 = os_log_type_enabled(v6, v7);
  uint64_t v9 = v0[19];
  uint64_t v10 = v0[16];
  uint64_t v11 = v0[17];
  char v12 = v0[15];
  uint64_t v14 = v0[6];
  BOOL v13 = v0[7];
  uint64_t v15 = v0[5];
  if (v8)
  {
    uint64_t v23 = v0[15];
    uint64_t v16 = swift_slowAlloc();
    uint64_t v24 = swift_slowAlloc();
    *(_DWORD *)uint64_t v16 = 136446466;
    lazy protocol witness table accessor for type Playlist.Variant and conformance Playlist.Variant(&lazy protocol witness table cache variable for type Playlist and conformance Playlist, (void (*)(uint64_t))&type metadata accessor for Playlist);
    uint64_t v17 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v16 + 4) = _s2os32getNullTerminatedUTF8PointerImpl_21storingStringOwnersInSVSS_SpyypGSgztF_0(v17, v18, &v24);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
    *(_WORD *)(v16 + 12) = 2082;
    v0[2] = v9;
    swift_errorRetain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
    uint64_t v19 = String.init<A>(describing:)();
    *(void *)(v16 + 14) = _s2os32getNullTerminatedUTF8PointerImpl_21storingStringOwnersInSVSS_SpyypGSgztF_0(v19, v20, &v24);
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Failed to make playlist=%{public}s public with error=%{public}s", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v11, v23);
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v11, v12);
  }
  (*(void (**)(void, uint64_t, uint64_t, void))(v0[6] + 56))(v0[3], 1, 1, v0[5]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v21 = (uint64_t (*)(void))v0[1];
  return v21();
}

uint64_t protocol witness for ShareableMusicItem.shareURL.getter in conformance Playlist(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = closure #3 in static Actions.ReportConcern.action(context:);
  return Playlist.shareURL.getter(a1);
}

uint64_t protocol witness for ShareableMusicItem.actionTitle.getter in conformance Playlist()
{
  return Playlist.actionTitle.getter();
}

uint64_t protocol witness for ShareableMusicItem.failureMessage.getter in conformance Playlist()
{
  return Playlist.failureMessage.getter();
}

uint64_t protocol witness for ShareableMusicItem.augmentMetadata(_:) in conformance Playlist(uint64_t a1)
{
  void v2[2] = a1;
  v2[3] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  v2[4] = swift_task_alloc();
  return _swift_task_switch(protocol witness for ShareableMusicItem.augmentMetadata(_:) in conformance Playlist, 0, 0);
}

uint64_t protocol witness for ShareableMusicItem.augmentMetadata(_:) in conformance Playlist()
{
  *(void *)(v0 + 40) = **(void **)(v0 + 16);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v1;
  *uint64_t v1 = v0;
  v1[1] = protocol witness for ShareableMusicItem.augmentMetadata(_:) in conformance Artist;
  uint64_t v2 = *(void *)(v0 + 32);
  return Playlist.shareURL.getter(v2);
}

uint64_t RadioShow.actionTitle.getter()
{
  return Album.actionTitle.getter();
}

uint64_t RadioShow.failureMessage.getter()
{
  return Album.actionTitle.getter();
}

uint64_t protocol witness for ShareableMusicItem.shareURL.getter in conformance RadioShow(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return _swift_task_switch(protocol witness for ShareableMusicItem.shareURL.getter in conformance RadioShow, 0, 0);
}

uint64_t protocol witness for ShareableMusicItem.shareURL.getter in conformance RadioShow()
{
  RadioShow.url.getter();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t protocol witness for ShareableMusicItem.actionTitle.getter in conformance RadioShow()
{
  return ShareableMusicItem.actionTitle.getter();
}

uint64_t protocol witness for ShareableMusicItem.failureMessage.getter in conformance RadioShow()
{
  return RadioShow.failureMessage.getter();
}

uint64_t protocol witness for ShareableMusicItem.augmentMetadata(_:) in conformance RadioShow(uint64_t a1)
{
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)&async function pointer to specialized ShareableMusicItem.augmentMetadata(_:)
                                       + async function pointer to specialized ShareableMusicItem.augmentMetadata(_:));
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = closure #3 in static Actions.ReportConcern.action(context:);
  return v5(a1);
}

uint64_t RecordLabel.actionTitle.getter()
{
  return Album.actionTitle.getter();
}

uint64_t RecordLabel.failureMessage.getter()
{
  return Album.actionTitle.getter();
}

uint64_t protocol witness for ShareableMusicItem.shareURL.getter in conformance RecordLabel(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return _swift_task_switch(protocol witness for ShareableMusicItem.shareURL.getter in conformance RecordLabel, 0, 0);
}

uint64_t protocol witness for ShareableMusicItem.shareURL.getter in conformance RecordLabel()
{
  RecordLabel.url.getter();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t protocol witness for ShareableMusicItem.actionTitle.getter in conformance RecordLabel()
{
  return RecordLabel.actionTitle.getter();
}

uint64_t protocol witness for ShareableMusicItem.failureMessage.getter in conformance RecordLabel()
{
  return RecordLabel.failureMessage.getter();
}

uint64_t protocol witness for ShareableMusicItem.augmentMetadata(_:) in conformance RecordLabel(uint64_t a1)
{
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)&async function pointer to specialized ShareableMusicItem.augmentMetadata(_:)
                                       + async function pointer to specialized ShareableMusicItem.augmentMetadata(_:));
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = closure #3 in static Actions.ReportConcern.action(context:);
  return v5(a1);
}

uint64_t SocialProfile.actionTitle.getter()
{
  return Album.actionTitle.getter();
}

uint64_t SocialProfile.failureMessage.getter()
{
  return Album.actionTitle.getter();
}

uint64_t protocol witness for ShareableMusicItem.shareURL.getter in conformance SocialProfile(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return _swift_task_switch(protocol witness for ShareableMusicItem.shareURL.getter in conformance SocialProfile, 0, 0);
}

uint64_t protocol witness for ShareableMusicItem.shareURL.getter in conformance SocialProfile()
{
  SocialProfile.url.getter();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t protocol witness for ShareableMusicItem.actionTitle.getter in conformance SocialProfile()
{
  return SocialProfile.actionTitle.getter();
}

uint64_t protocol witness for ShareableMusicItem.failureMessage.getter in conformance SocialProfile()
{
  return SocialProfile.failureMessage.getter();
}

uint64_t protocol witness for ShareableMusicItem.augmentMetadata(_:) in conformance SocialProfile(uint64_t a1)
{
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)&async function pointer to specialized ShareableMusicItem.augmentMetadata(_:)
                                       + async function pointer to specialized ShareableMusicItem.augmentMetadata(_:));
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = closure #3 in static Actions.ReportConcern.action(context:);
  return v5(a1);
}

uint64_t Song.actionTitle.getter()
{
  return Album.actionTitle.getter();
}

uint64_t Song.failureMessage.getter()
{
  return Album.actionTitle.getter();
}

uint64_t Song.shareURL.getter(uint64_t a1)
{
  v2[4] = a1;
  v2[5] = v1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicItemCollection<Song>);
  v2[6] = v3;
  v2[7] = *(void *)(v3 - 8);
  v2[8] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Song?);
  v2[9] = swift_task_alloc();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicCatalogResourceResponse<Song>);
  v2[10] = v4;
  v2[11] = *(void *)(v4 - 8);
  v2[12] = swift_task_alloc();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicCatalogResourceRequest<Song>);
  v2[13] = v5;
  v2[14] = *(void *)(v5 - 8);
  v2[15] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  v2[16] = swift_task_alloc();
  return _swift_task_switch(Song.shareURL.getter, 0, 0);
}

uint64_t Song.shareURL.getter()
{
  uint64_t v1 = v0[16];
  Song.url.getter();
  uint64_t v2 = type metadata accessor for URL();
  v0[17] = v2;
  uint64_t v3 = *(void *)(v2 - 8);
  v0[18] = v3;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    outlined destroy of TaskPriority?(v0[16], &demangling cache variable for type metadata for URL?);
    uint64_t v4 = Song.catalogID.getter();
    v0[19] = v4;
    v0[20] = v5;
    if (v5)
    {
      uint64_t v6 = v4;
      uint64_t v7 = v5;
      swift_getKeyPath();
      v0[2] = v6;
      v0[3] = v7;
      v0[21] = type metadata accessor for Song();
      lazy protocol witness table accessor for type Playlist.Variant and conformance Playlist.Variant(&lazy protocol witness table cache variable for type Song and conformance Song, (void (*)(uint64_t))&type metadata accessor for Song);
      swift_bridgeObjectRetain();
      MusicCatalogResourceRequest.init<A>(matching:equalTo:)();
      uint64_t v8 = (void *)swift_task_alloc();
      v0[22] = v8;
      *uint64_t v8 = v0;
      v8[1] = Song.shareURL.getter;
      uint64_t v9 = v0[12];
      uint64_t v10 = v0[13];
      return MusicCatalogResourceRequest.response()(v9, v10);
    }
    (*(void (**)(void, uint64_t, uint64_t, uint64_t))(v3 + 56))(v0[4], 1, 1, v2);
  }
  else
  {
    uint64_t v11 = v0[4];
    (*(void (**)(uint64_t, void, uint64_t))(v3 + 32))(v11, v0[16], v2);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v3 + 56))(v11, 0, 1, v2);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  char v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();
  uint64_t v4;

  *(void *)(*(void *)v1 + 184) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = Song.shareURL.getter;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = Song.shareURL.getter;
  }
  return _swift_task_switch(v2, 0, 0);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(void);
  uint64_t v24;

  uint64_t v1 = v0[21];
  uint64_t v2 = v0[9];
  uint64_t v4 = v0[7];
  uint64_t v3 = v0[8];
  uint64_t v5 = v0[6];
  MusicCatalogResourceResponse.items.getter();
  specialized Collection.first.getter(v2);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  uint64_t v6 = *(void *)(v1 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v2, 1, v1) == 1)
  {
    uint64_t v7 = v0[17];
    uint64_t v8 = v0[18];
    uint64_t v10 = v0[14];
    uint64_t v9 = v0[15];
    uint64_t v11 = v0[13];
    char v12 = v0[9];
    BOOL v13 = v0[4];
    (*(void (**)(void, void))(v0[11] + 8))(v0[12], v0[10]);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    outlined destroy of TaskPriority?(v12, &demangling cache variable for type metadata for Song?);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v13, 1, 1, v7);
  }
  else
  {
    uint64_t v14 = v0[21];
    uint64_t v16 = v0[14];
    uint64_t v15 = v0[15];
    uint64_t v18 = v0[12];
    uint64_t v17 = v0[13];
    uint64_t v19 = v0[10];
    uint64_t v20 = v0[11];
    uint64_t v21 = v0[9];
    Song.url.getter();
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v21, v14);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v22 = (uint64_t (*)(void))v0[1];
  return v22();
}

{
  void *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;

  uint64_t v19 = v0;
  if (one-time initialization token for sharing != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  __swift_project_value_buffer(v1, (uint64_t)static Logger.sharing);
  swift_errorRetain();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  uint64_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v15 = v0[14];
    uint64_t v16 = v0[13];
    uint64_t v17 = v0[15];
    uint64_t v4 = swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136446466;
    swift_bridgeObjectRetain();
    uint64_t v6 = MusicItemID.description.getter();
    uint64_t v8 = v7;
    swift_bridgeObjectRelease();
    *(void *)(v4 + 4) = _s2os32getNullTerminatedUTF8PointerImpl_21storingStringOwnersInSVSS_SpyypGSgztF_0(v6, v8, &v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v4 + 12) = 2114;
    swift_errorRetain();
    uint64_t v9 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v4 + 14) = v9;
    *uint64_t v5 = v9;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Failed to get share URL for song catalogID: %{public}s: %{public}@", (uint8_t *)v4, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&_sSo8NSObjectCSgMD_0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v17, v16);
  }
  else
  {
    uint64_t v11 = v0[14];
    uint64_t v10 = v0[15];
    char v12 = v0[13];

    swift_errorRelease();
    swift_errorRelease();
    swift_bridgeObjectRelease_n();
    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  }
  (*(void (**)(void, uint64_t, uint64_t, void))(v0[18] + 56))(v0[4], 1, 1, v0[17]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  BOOL v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t key path getter for SongFilter.id : SongFilter@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return key path getter for MusicVideoFilter.id : MusicVideoFilter(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of SongFilter.id.getter, a2);
}

uint64_t key path getter for MusicVideoFilter.id : MusicVideoFilter@<X0>(void *a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X3>, uint64_t *a3@<X8>)
{
  uint64_t v5 = a1[3];
  uint64_t v6 = a1[4];
  __swift_project_boxed_opaque_existential_0Tm(a1, v5);
  uint64_t result = a2(v5, v6);
  *a3 = result;
  a3[1] = v8;
  return result;
}

uint64_t Song.augmentMetadata(_:)(uint64_t a1)
{
  v2[4] = a1;
  v2[5] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PreviewAsset?);
  v2[6] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for MusicOffer.Kind();
  v2[7] = v3;
  v2[8] = *(void *)(v3 - 8);
  v2[9] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for MusicOffer();
  v2[10] = v4;
  v2[11] = *(void *)(v4 - 8);
  v2[12] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  v2[13] = swift_task_alloc();
  v2[14] = swift_task_alloc();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicItemCollection<Song>);
  v2[15] = v5;
  v2[16] = *(void *)(v5 - 8);
  v2[17] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Song?);
  v2[18] = swift_task_alloc();
  v2[19] = swift_task_alloc();
  v2[20] = swift_task_alloc();
  v2[21] = swift_task_alloc();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicCatalogResourceResponse<Song>);
  v2[22] = v6;
  v2[23] = *(void *)(v6 - 8);
  v2[24] = swift_task_alloc();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicCatalogResourceRequest<Song>);
  v2[25] = v7;
  v2[26] = *(void *)(v7 - 8);
  v2[27] = swift_task_alloc();
  return _swift_task_switch(Song.augmentMetadata(_:), 0, 0);
}

uint64_t Song.augmentMetadata(_:)()
{
  uint64_t v1 = Song.catalogID.getter();
  *(void *)(v0 + 224) = v1;
  *(void *)(v0 + 232) = v2;
  if (v2)
  {
    uint64_t v3 = v1;
    uint64_t v4 = v2;
    id v5 = [**(id **)(v0 + 32) specialization];
    *(void *)(v0 + 240) = v5;
    if (v5)
    {
      uint64_t v6 = v5;
      self;
      uint64_t v7 = swift_dynamicCastObjCClass();
      *(void *)(v0 + 248) = v7;
      if (v7)
      {
        swift_getKeyPath();
        *(void *)(v0 + 16) = v3;
        *(void *)(v0 + 24) = v4;
        *(void *)(v0 + 256) = type metadata accessor for Song();
        lazy protocol witness table accessor for type Playlist.Variant and conformance Playlist.Variant(&lazy protocol witness table cache variable for type Song and conformance Song, (void (*)(uint64_t))&type metadata accessor for Song);
        swift_bridgeObjectRetain();
        MusicCatalogResourceRequest.init<A>(matching:equalTo:)();
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
        uint64_t v8 = swift_allocObject();
        *(_OWORD *)(v8 + 16) = xmmword_100493D20;
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PartialMusicAsyncProperty<Song>);
        *(void *)(v8 + 32) = static PartialMusicProperty<A>.offers.getter();
        specialized Array._endMutation()();
        MusicCatalogResourceRequest.properties.setter();
        uint64_t v9 = (void *)swift_task_alloc();
        *(void *)(v0 + 264) = v9;
        *uint64_t v9 = v0;
        v9[1] = Song.augmentMetadata(_:);
        uint64_t v10 = *(void *)(v0 + 192);
        uint64_t v11 = *(void *)(v0 + 200);
        return MusicCatalogResourceRequest.response()(v10, v11);
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  char v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();
  uint64_t v4;

  *(void *)(*(void *)v1 + 272) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = Song.augmentMetadata(_:);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = Song.augmentMetadata(_:);
  }
  return _swift_task_switch(v2, 0, 0);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void **v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSURL *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *isa;
  uint64_t v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t, char *, uint64_t);
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  void *v60;
  void *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  uint64_t v69;
  uint64_t (*v70)(void);
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  NSURL *v76;
  uint64_t v77;
  void *v78;
  uint64_t v79;
  unsigned int (*v80)(uint64_t, uint64_t, uint64_t);
  void (**v81)(uint64_t, uint64_t);
  void (**v82)(uint64_t, uint64_t);
  uint64_t v83;
  void (*v84)(uint64_t, char *, uint64_t);
  uint64_t v85;

  uint64_t v1 = v0[32];
  uint64_t v2 = v0[21];
  uint64_t v3 = v0[20];
  id v5 = v0[16];
  uint64_t v4 = v0[17];
  uint64_t v6 = v0[15];
  uint64_t v7 = (void **)v0[4];
  MusicCatalogResourceResponse.items.getter();
  specialized Collection.first.getter(v2);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  uint64_t v8 = *v7;
  outlined init with copy of (String, Any)(v2, v3, &demangling cache variable for type metadata for Song?);
  uint64_t v9 = *(void *)(v1 - 8);
  uint64_t v80 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v80(v3, 1, v1) == 1)
  {
    uint64_t v10 = v0[14];
    outlined destroy of TaskPriority?(v0[20], &demangling cache variable for type metadata for Song?);
    uint64_t v11 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
    char v12 = 0;
    BOOL v13 = v0;
  }
  else
  {
    uint64_t v14 = v0[32];
    uint64_t v15 = v0[20];
    uint64_t v16 = v0[14];
    Song.url.getter();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v15, v14);
    uint64_t v17 = type metadata accessor for URL();
    uint64_t v18 = *(void *)(v17 - 8);
    char v12 = 0;
    BOOL v13 = v0;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) != 1)
    {
      uint64_t v20 = v0[14];
      URL._bridgeToObjectiveC()(v19);
      char v12 = v21;
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v20, v17);
    }
  }
  uint64_t v22 = v13[32];
  uint64_t v23 = v13[21];
  uint64_t v24 = v13[19];
  [v8 setOriginalURL:v12];

  outlined init with copy of (String, Any)(v23, v24, &demangling cache variable for type metadata for Song?);
  if (v80(v24, 1, v22) == 1)
  {
    outlined destroy of TaskPriority?(v13[19], &demangling cache variable for type metadata for Song?);
    Class isa = 0;
  }
  else
  {
    int v26 = v13[32];
    uint64_t v27 = v13[19];
    Class isa = (void *)Song.offers.getter();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v27, v26);
    if (isa)
    {
      uint64_t v28 = isa[2];
      if (v28)
      {
        uint64_t v79 = v9;
        uint64_t v29 = v13[11];
        char v30 = v13[8];
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, v28, 0);
        char v31 = *(void (**)(uint64_t, char *, uint64_t))(v29 + 16);
        v29 += 16;
        uint64_t v32 = (char *)isa
            + ((*(unsigned __int8 *)(v29 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 64));
        uint64_t v83 = *(void *)(v29 + 56);
        uint64_t v84 = v31;
        uint64_t v81 = (void (**)(uint64_t, uint64_t))(v29 - 8);
        uint64_t v82 = (void (**)(uint64_t, uint64_t))(v30 + 8);
        do
        {
          char v33 = v13[12];
          uint64_t v35 = v13[9];
          uint64_t v34 = v13[10];
          uint64_t v36 = v13;
          uint64_t v37 = v13[7];
          v84(v33, v32, v34);
          MusicOffer.kind.getter();
          uint64_t v38 = MusicOffer.Kind.rawValue.getter();
          uint64_t v40 = v39;
          (*v82)(v35, v37);
          (*v81)(v33, v34);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, _swiftEmptyArrayStorage[2] + 1, 1);
          }
          uint64_t v42 = _swiftEmptyArrayStorage[2];
          uint64_t v41 = _swiftEmptyArrayStorage[3];
          if (v42 >= v41 >> 1) {
            specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)((char *)(v41 > 1), v42 + 1, 1);
          }
          _swiftEmptyArrayStorage[2] = v42 + 1;
          uint64_t v43 = &_swiftEmptyArrayStorage[2 * v42];
          v43[4] = v38;
          v43[5] = v40;
          v32 += v83;
          --v28;
          BOOL v13 = v36;
        }
        while (v28);
        swift_bridgeObjectRelease();
        uint64_t v9 = v79;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v45 = v13 + 18;
  uint64_t v44 = v13[18];
  uint64_t v46 = v13[32];
  uint64_t v47 = v13[21];
  [(id)v13[31] setOffers:isa];

  uint64_t v48 = &demangling cache variable for type metadata for Song?;
  outlined init with copy of (String, Any)(v47, v44, &demangling cache variable for type metadata for Song?);
  if (v80(v44, 1, v46) == 1) {
    goto LABEL_25;
  }
  uint64_t v49 = v13[32];
  uint64_t v50 = v13[18];
  uint64_t v51 = Song.previewAssets.getter();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v50, v49);
  if (!v51)
  {
LABEL_26:
    uint64_t v57 = v13[13];
    uint64_t v58 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 56))(v57, 1, 1, v58);
    uint64_t v59 = 0;
    goto LABEL_27;
  }
  uint64_t v52 = *(void *)(v51 + 16);
  uint64_t v53 = type metadata accessor for PreviewAsset();
  uint64_t v54 = *(void *)(v53 - 8);
  if (v52)
  {
    (*(void (**)(void, unint64_t, uint64_t))(*(void *)(v53 - 8) + 16))(v13[6], v51+ ((*(unsigned __int8 *)(*(void *)(v53 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v53 - 8) + 80)), v53);
    uint64_t v55 = 0;
  }
  else
  {
    uint64_t v55 = 1;
  }
  uint64_t v45 = v13 + 6;
  uint64_t v56 = v13[6];
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v54 + 56))(v56, v55, 1, v53);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v54 + 48))(v56, 1, v53) == 1)
  {
    uint64_t v48 = (uint64_t *)&demangling cache variable for type metadata for PreviewAsset?;
LABEL_25:
    outlined destroy of TaskPriority?(*v45, v48);
    goto LABEL_26;
  }
  uint64_t v72 = v13[13];
  int v73 = v13[6];
  PreviewAsset.url.getter();
  (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v73, v53);
  uint64_t v74 = type metadata accessor for URL();
  uint64_t v75 = *(void *)(v74 - 8);
  uint64_t v59 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v75 + 48))(v72, 1, v74) != 1)
  {
    uint64_t v77 = v13[13];
    URL._bridgeToObjectiveC()(v76);
    uint64_t v59 = v78;
    (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v77, v74);
  }
LABEL_27:
  uint64_t v61 = (void *)v13[30];
  uint64_t v60 = (void *)v13[31];
  uint64_t v63 = v13[26];
  uint64_t v62 = v13[27];
  uint64_t v65 = v13[24];
  uint64_t v64 = v13[25];
  uint64_t v66 = v13[22];
  uint64_t v67 = v13[23];
  uint64_t v68 = v13;
  uint64_t v69 = v13[21];
  [v60 setPreviewURL:v59];

  outlined destroy of TaskPriority?(v69, &demangling cache variable for type metadata for Song?);
  (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v65, v66);
  (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v62, v64);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v70 = (uint64_t (*)(void))v68[1];
  return v70();
}

{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void);
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  uint64_t v20 = v0;
  if (one-time initialization token for sharing != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  __swift_project_value_buffer(v1, (uint64_t)static Logger.sharing);
  swift_errorRetain();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  uint64_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v15 = *(void **)(v0 + 240);
    uint64_t v16 = *(void *)(v0 + 208);
    uint64_t v17 = *(void *)(v0 + 200);
    uint64_t v18 = *(void *)(v0 + 216);
    uint64_t v4 = swift_slowAlloc();
    id v5 = (void *)swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136446466;
    swift_bridgeObjectRetain();
    uint64_t v6 = MusicItemID.description.getter();
    uint64_t v8 = v7;
    swift_bridgeObjectRelease();
    *(void *)(v4 + 4) = _s2os32getNullTerminatedUTF8PointerImpl_21storingStringOwnersInSVSS_SpyypGSgztF_0(v6, v8, &v19);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v4 + 12) = 2114;
    swift_errorRetain();
    uint64_t v9 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v4 + 14) = v9;
    *id v5 = v9;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Failed to get share URL and offers for song catalogID: %{public}s: %{public}@", (uint8_t *)v4, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&_sSo8NSObjectCSgMD_0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v18, v17);
  }
  else
  {
    uint64_t v11 = *(void *)(v0 + 208);
    uint64_t v10 = *(void *)(v0 + 216);
    char v12 = *(void *)(v0 + 200);

    swift_errorRelease();
    swift_errorRelease();
    swift_bridgeObjectRelease_n();
    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  BOOL v13 = *(uint64_t (**)(void))(v0 + 8);
  return v13();
}

uint64_t protocol witness for ShareableMusicItem.shareURL.getter in conformance Song(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = closure #3 in static Actions.ReportConcern.action(context:);
  return Song.shareURL.getter(a1);
}

uint64_t protocol witness for ShareableMusicItem.actionTitle.getter in conformance Song()
{
  return ShareableMusicItem.actionTitle.getter();
}

uint64_t protocol witness for ShareableMusicItem.failureMessage.getter in conformance Song()
{
  return Song.failureMessage.getter();
}

uint64_t protocol witness for ShareableMusicItem.augmentMetadata(_:) in conformance Song(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = closure #3 in static Actions.ReportConcern.action(context:);
  return Song.augmentMetadata(_:)(a1);
}

uint64_t Station.actionTitle.getter()
{
  return Album.actionTitle.getter();
}

uint64_t Station.failureMessage.getter()
{
  return Album.actionTitle.getter();
}

uint64_t Station.shareURL.getter(uint64_t a1)
{
  v2[4] = a1;
  v2[5] = v1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicItemCollection<Station>);
  v2[6] = v3;
  v2[7] = *(void *)(v3 - 8);
  v2[8] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Station?);
  v2[9] = swift_task_alloc();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicCatalogResourceResponse<Station>);
  v2[10] = v4;
  v2[11] = *(void *)(v4 - 8);
  v2[12] = swift_task_alloc();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicCatalogResourceRequest<Station>);
  v2[13] = v5;
  v2[14] = *(void *)(v5 - 8);
  v2[15] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  v2[16] = swift_task_alloc();
  return _swift_task_switch(Station.shareURL.getter, 0, 0);
}

uint64_t Station.shareURL.getter()
{
  uint64_t v1 = v0[16];
  Station.url.getter();
  uint64_t v2 = type metadata accessor for URL();
  v0[17] = v2;
  uint64_t v3 = *(void *)(v2 - 8);
  v0[18] = v3;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    outlined destroy of TaskPriority?(v0[16], &demangling cache variable for type metadata for URL?);
    uint64_t v4 = Station.id.getter();
    uint64_t v6 = v5;
    v0[19] = v4;
    v0[20] = v5;
    swift_getKeyPath();
    v0[2] = v4;
    v0[3] = v6;
    v0[21] = type metadata accessor for Station();
    lazy protocol witness table accessor for type Playlist.Variant and conformance Playlist.Variant(&lazy protocol witness table cache variable for type Station and conformance Station, (void (*)(uint64_t))&type metadata accessor for Station);
    swift_bridgeObjectRetain();
    MusicCatalogResourceRequest.init<A>(matching:equalTo:)();
    uint64_t v7 = (void *)swift_task_alloc();
    v0[22] = v7;
    *uint64_t v7 = v0;
    v7[1] = Station.shareURL.getter;
    uint64_t v8 = v0[12];
    uint64_t v9 = v0[13];
    return MusicCatalogResourceRequest.response()(v8, v9);
  }
  else
  {
    uint64_t v10 = v0[4];
    (*(void (**)(uint64_t, void, uint64_t))(v3 + 32))(v10, v0[16], v2);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v3 + 56))(v10, 0, 1, v2);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v11 = (uint64_t (*)(void))v0[1];
    return v11();
  }
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();
  uint64_t v4;

  *(void *)(*(void *)v1 + 184) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = Station.shareURL.getter;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = Station.shareURL.getter;
  }
  return _swift_task_switch(v2, 0, 0);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(void);
  uint64_t v24;

  uint64_t v1 = v0[21];
  uint64_t v2 = v0[9];
  uint64_t v4 = v0[7];
  uint64_t v3 = v0[8];
  uint64_t v5 = v0[6];
  MusicCatalogResourceResponse.items.getter();
  specialized Collection.first.getter(v2);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  uint64_t v6 = *(void *)(v1 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v2, 1, v1) == 1)
  {
    uint64_t v7 = v0[17];
    uint64_t v8 = v0[18];
    uint64_t v10 = v0[14];
    uint64_t v9 = v0[15];
    uint64_t v11 = v0[13];
    char v12 = v0[9];
    uint64_t v13 = v0[4];
    (*(void (**)(void, void))(v0[11] + 8))(v0[12], v0[10]);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    outlined destroy of TaskPriority?(v12, &demangling cache variable for type metadata for Station?);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v13, 1, 1, v7);
  }
  else
  {
    uint64_t v14 = v0[21];
    uint64_t v16 = v0[14];
    uint64_t v15 = v0[15];
    uint64_t v18 = v0[12];
    uint64_t v17 = v0[13];
    uint64_t v19 = v0[10];
    uint64_t v20 = v0[11];
    uint64_t v21 = v0[9];
    Station.url.getter();
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v21, v14);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v22 = (uint64_t (*)(void))v0[1];
  return v22();
}

{
  void *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;

  uint64_t v19 = v0;
  if (one-time initialization token for sharing != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  __swift_project_value_buffer(v1, (uint64_t)static Logger.sharing);
  swift_errorRetain();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  uint64_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v15 = v0[14];
    uint64_t v16 = v0[13];
    uint64_t v17 = v0[15];
    uint64_t v4 = swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136446466;
    swift_bridgeObjectRetain();
    uint64_t v6 = MusicItemID.description.getter();
    uint64_t v8 = v7;
    swift_bridgeObjectRelease();
    *(void *)(v4 + 4) = _s2os32getNullTerminatedUTF8PointerImpl_21storingStringOwnersInSVSS_SpyypGSgztF_0(v6, v8, &v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v4 + 12) = 2114;
    swift_errorRetain();
    uint64_t v9 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v4 + 14) = v9;
    *uint64_t v5 = v9;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Failed to get share URL for station catalogID: %{public}s: %{public}@", (uint8_t *)v4, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&_sSo8NSObjectCSgMD_0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v17, v16);
  }
  else
  {
    uint64_t v11 = v0[14];
    uint64_t v10 = v0[15];
    char v12 = v0[13];

    swift_errorRelease();
    swift_errorRelease();
    swift_bridgeObjectRelease_n();
    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  }
  (*(void (**)(void, uint64_t, uint64_t, void))(v0[18] + 56))(v0[4], 1, 1, v0[17]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t protocol witness for ShareableMusicItem.shareURL.getter in conformance Station(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = closure #3 in static Actions.ReportConcern.action(context:);
  return Station.shareURL.getter(a1);
}

uint64_t protocol witness for ShareableMusicItem.actionTitle.getter in conformance Station()
{
  return Station.actionTitle.getter();
}

uint64_t protocol witness for ShareableMusicItem.failureMessage.getter in conformance Station()
{
  return Station.failureMessage.getter();
}

uint64_t protocol witness for ShareableMusicItem.augmentMetadata(_:) in conformance Station(uint64_t a1)
{
  void v2[2] = a1;
  v2[3] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  v2[4] = swift_task_alloc();
  return _swift_task_switch(protocol witness for ShareableMusicItem.augmentMetadata(_:) in conformance Station, 0, 0);
}

uint64_t protocol witness for ShareableMusicItem.augmentMetadata(_:) in conformance Station()
{
  *(void *)(v0 + 40) = **(void **)(v0 + 16);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v1;
  *uint64_t v1 = v0;
  v1[1] = protocol witness for ShareableMusicItem.augmentMetadata(_:) in conformance Artist;
  uint64_t v2 = *(void *)(v0 + 32);
  return Station.shareURL.getter(v2);
}

uint64_t Track.actionTitle.getter()
{
  uint64_t v0 = type metadata accessor for Song();
  uint64_t v31 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v2 = (char *)&v29 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for Locale();
  __chkstk_darwin(v3 - 8);
  char v33 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for String.LocalizationValue();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v29 - v10;
  uint64_t v12 = type metadata accessor for MusicVideo();
  uint64_t v29 = *(void *)(v12 - 8);
  uint64_t v30 = v12;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for Track();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v29 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, v32, v15);
  int v19 = (*(uint64_t (**)(char *, uint64_t))(v16 + 88))(v18, v15);
  if (v19 == enum case for Track.song(_:))
  {
    (*(void (**)(char *, uint64_t))(v16 + 96))(v18, v15);
    uint64_t v20 = v31;
    (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v2, v18, v0);
    String.LocalizationValue.init(stringLiteral:)();
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v11, v5);
    uint64_t v21 = v0;
    if (one-time initialization token for module != -1) {
      swift_once();
    }
    id v22 = (id)static NSBundle.module;
    static Locale.current.getter();
    uint64_t v23 = String.init(localized:table:bundle:locale:comment:)();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v2, v21);
  }
  else if (v19 == enum case for Track.musicVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v16 + 96))(v18, v15);
    uint64_t v25 = v29;
    uint64_t v24 = v30;
    (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v14, v18, v30);
    String.LocalizationValue.init(stringLiteral:)();
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v11, v5);
    if (one-time initialization token for module != -1) {
      swift_once();
    }
    id v26 = (id)static NSBundle.module;
    static Locale.current.getter();
    uint64_t v23 = String.init(localized:table:bundle:locale:comment:)();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v14, v24);
  }
  else
  {
    String.LocalizationValue.init(stringLiteral:)();
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v11, v5);
    if (one-time initialization token for module != -1) {
      swift_once();
    }
    id v27 = (id)static NSBundle.module;
    static Locale.current.getter();
    uint64_t v23 = String.init(localized:table:bundle:locale:comment:)();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  }
  return v23;
}

uint64_t Track.failureMessage.getter()
{
  uint64_t v30 = type metadata accessor for Song();
  uint64_t v32 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v2 = (char *)&v27 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for Locale();
  __chkstk_darwin(v3 - 8);
  char v33 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for String.LocalizationValue();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v27 - v10;
  uint64_t v12 = type metadata accessor for MusicVideo();
  uint64_t v28 = *(void *)(v12 - 8);
  uint64_t v29 = v12;
  __chkstk_darwin(v12);
  uint64_t v31 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Track();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v0, v14);
  int v18 = (*(uint64_t (**)(char *, uint64_t))(v15 + 88))(v17, v14);
  if (v18 == enum case for Track.song(_:))
  {
    (*(void (**)(char *, uint64_t))(v15 + 96))(v17, v14);
    uint64_t v19 = v32;
    uint64_t v20 = v30;
    (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v2, v17, v30);
    String.LocalizationValue.init(stringLiteral:)();
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v11, v5);
    if (one-time initialization token for module != -1) {
      swift_once();
    }
    id v21 = (id)static NSBundle.module;
    static Locale.current.getter();
    uint64_t v22 = String.init(localized:table:bundle:locale:comment:)();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v2, v20);
  }
  else if (v18 == enum case for Track.musicVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v15 + 96))(v17, v14);
    uint64_t v24 = v28;
    uint64_t v23 = v29;
    (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v31, v17, v29);
    String.LocalizationValue.init(stringLiteral:)();
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v11, v5);
    if (one-time initialization token for module != -1) {
      swift_once();
    }
    id v25 = (id)static NSBundle.module;
    static Locale.current.getter();
    uint64_t v22 = String.init(localized:table:bundle:locale:comment:)();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v31, v23);
  }
  else
  {
    uint64_t v22 = Track.failureMessage.getter();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  }
  return v22;
}

uint64_t Track.shareURL.getter(uint64_t a1)
{
  void v2[2] = a1;
  v2[3] = v1;
  uint64_t v3 = type metadata accessor for Song();
  v2[4] = v3;
  v2[5] = *(void *)(v3 - 8);
  v2[6] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for MusicVideo();
  v2[7] = v4;
  v2[8] = *(void *)(v4 - 8);
  v2[9] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for Track();
  v2[10] = v5;
  v2[11] = *(void *)(v5 - 8);
  v2[12] = swift_task_alloc();
  return _swift_task_switch(Track.shareURL.getter, 0, 0);
}

uint64_t Track.shareURL.getter()
{
  uint64_t v2 = v0[11];
  uint64_t v1 = v0[12];
  uint64_t v3 = v0[10];
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 16))(v1, v0[3], v3);
  int v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 88))(v1, v3);
  if (v4 == enum case for Track.song(_:))
  {
    uint64_t v5 = v0[12];
    uint64_t v7 = v0[5];
    uint64_t v6 = v0[6];
    uint64_t v8 = v0[4];
    (*(void (**)(uint64_t, void))(v0[11] + 96))(v5, v0[10]);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v6, v5, v8);
    uint64_t v9 = (void *)swift_task_alloc();
    v0[14] = v9;
    *uint64_t v9 = v0;
    v9[1] = Track.shareURL.getter;
    uint64_t v10 = v0[2];
    return Song.shareURL.getter(v10);
  }
  else if (v4 == enum case for Track.musicVideo(_:))
  {
    uint64_t v12 = v0[12];
    uint64_t v13 = v0[9];
    uint64_t v14 = v0[7];
    uint64_t v15 = v0[8];
    (*(void (**)(uint64_t, void))(v0[11] + 96))(v12, v0[10]);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))(v13, v12, v14);
    uint64_t v16 = (void *)swift_task_alloc();
    v0[13] = v16;
    *uint64_t v16 = v0;
    v16[1] = Track.shareURL.getter;
    uint64_t v17 = v0[2];
    return MusicVideo.shareURL.getter(v17);
  }
  else
  {
    uint64_t v18 = v0[2];
    uint64_t v19 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 1, 1, v19);
    (*(void (**)(void, void))(v0[11] + 8))(v0[12], v0[10]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v20 = (uint64_t (*)(void))v0[1];
    return v20();
  }
}

{
  uint64_t v1;

  swift_task_dealloc();
  return _swift_task_switch(Track.shareURL.getter, 0, 0);
}

{
  void *v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  (*(void (**)(void, void))(v0[8] + 8))(v0[9], v0[7]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

{
  uint64_t v1;

  swift_task_dealloc();
  return _swift_task_switch(Track.shareURL.getter, 0, 0);
}

{
  void *v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  (*(void (**)(void, void))(v0[5] + 8))(v0[6], v0[4]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t protocol witness for ShareableMusicItem.url.getter in conformance Track()
{
  return Track.url.getter();
}

uint64_t protocol witness for ShareableMusicItem.shareURL.getter in conformance Track(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = closure #3 in static Actions.ReportConcern.action(context:);
  return Track.shareURL.getter(a1);
}

uint64_t protocol witness for ShareableMusicItem.augmentMetadata(_:) in conformance Track(uint64_t a1)
{
  void v2[2] = a1;
  v2[3] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  v2[4] = swift_task_alloc();
  return _swift_task_switch(protocol witness for ShareableMusicItem.augmentMetadata(_:) in conformance Track, 0, 0);
}

uint64_t protocol witness for ShareableMusicItem.augmentMetadata(_:) in conformance Track()
{
  *(void *)(v0 + 40) = **(void **)(v0 + 16);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v1;
  *uint64_t v1 = v0;
  v1[1] = protocol witness for ShareableMusicItem.augmentMetadata(_:) in conformance Artist;
  uint64_t v2 = *(void *)(v0 + 32);
  return Track.shareURL.getter(v2);
}

uint64_t TVEpisode.actionTitle.getter()
{
  return Album.actionTitle.getter();
}

uint64_t TVEpisode.failureMessage.getter()
{
  return Album.actionTitle.getter();
}

uint64_t TVEpisode.shareURL.getter(uint64_t a1)
{
  v2[4] = a1;
  v2[5] = v1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicItemCollection<TVEpisode>);
  v2[6] = v3;
  v2[7] = *(void *)(v3 - 8);
  v2[8] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TVEpisode?);
  v2[9] = swift_task_alloc();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicCatalogResourceResponse<TVEpisode>);
  v2[10] = v4;
  v2[11] = *(void *)(v4 - 8);
  v2[12] = swift_task_alloc();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicCatalogResourceRequest<TVEpisode>);
  v2[13] = v5;
  v2[14] = *(void *)(v5 - 8);
  v2[15] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  v2[16] = swift_task_alloc();
  return _swift_task_switch(TVEpisode.shareURL.getter, 0, 0);
}

uint64_t TVEpisode.shareURL.getter()
{
  uint64_t v1 = v0[16];
  TVEpisode.url.getter();
  uint64_t v2 = type metadata accessor for URL();
  v0[17] = v2;
  uint64_t v3 = *(void *)(v2 - 8);
  v0[18] = v3;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    outlined destroy of TaskPriority?(v0[16], &demangling cache variable for type metadata for URL?);
    uint64_t v4 = TVEpisode.catalogID.getter();
    v0[19] = v4;
    v0[20] = v5;
    if (v5)
    {
      uint64_t v6 = v4;
      uint64_t v7 = v5;
      swift_getKeyPath();
      v0[2] = v6;
      v0[3] = v7;
      v0[21] = type metadata accessor for TVEpisode();
      lazy protocol witness table accessor for type Playlist.Variant and conformance Playlist.Variant(&lazy protocol witness table cache variable for type TVEpisode and conformance TVEpisode, (void (*)(uint64_t))&type metadata accessor for TVEpisode);
      lazy protocol witness table accessor for type Playlist.Variant and conformance Playlist.Variant(&lazy protocol witness table cache variable for type TVEpisode and conformance TVEpisode, (void (*)(uint64_t))&type metadata accessor for TVEpisode);
      swift_bridgeObjectRetain();
      MusicCatalogResourceRequest.init<A>(matching:equalTo:)();
      uint64_t v8 = (void *)swift_task_alloc();
      v0[22] = v8;
      *uint64_t v8 = v0;
      v8[1] = TVEpisode.shareURL.getter;
      uint64_t v9 = v0[12];
      uint64_t v10 = v0[13];
      return MusicCatalogResourceRequest.response()(v9, v10);
    }
    (*(void (**)(void, uint64_t, uint64_t, uint64_t))(v3 + 56))(v0[4], 1, 1, v2);
  }
  else
  {
    uint64_t v11 = v0[4];
    (*(void (**)(uint64_t, void, uint64_t))(v3 + 32))(v11, v0[16], v2);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v3 + 56))(v11, 0, 1, v2);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();
  uint64_t v4;

  *(void *)(*(void *)v1 + 184) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = TVEpisode.shareURL.getter;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = TVEpisode.shareURL.getter;
  }
  return _swift_task_switch(v2, 0, 0);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(void);
  uint64_t v24;

  uint64_t v1 = v0[21];
  uint64_t v2 = v0[9];
  uint64_t v4 = v0[7];
  uint64_t v3 = v0[8];
  uint64_t v5 = v0[6];
  MusicCatalogResourceResponse.items.getter();
  specialized Collection.first.getter(v2);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  uint64_t v6 = *(void *)(v1 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v2, 1, v1) == 1)
  {
    uint64_t v7 = v0[17];
    uint64_t v8 = v0[18];
    uint64_t v10 = v0[14];
    uint64_t v9 = v0[15];
    uint64_t v11 = v0[13];
    uint64_t v12 = v0[9];
    uint64_t v13 = v0[4];
    (*(void (**)(void, void))(v0[11] + 8))(v0[12], v0[10]);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    outlined destroy of TaskPriority?(v12, &demangling cache variable for type metadata for TVEpisode?);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v13, 1, 1, v7);
  }
  else
  {
    uint64_t v14 = v0[21];
    uint64_t v16 = v0[14];
    uint64_t v15 = v0[15];
    uint64_t v18 = v0[12];
    uint64_t v17 = v0[13];
    uint64_t v19 = v0[10];
    uint64_t v20 = v0[11];
    uint64_t v21 = v0[9];
    TVEpisode.url.getter();
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v21, v14);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v22 = (uint64_t (*)(void))v0[1];
  return v22();
}

{
  void *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;

  uint64_t v19 = v0;
  if (one-time initialization token for sharing != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  __swift_project_value_buffer(v1, (uint64_t)static Logger.sharing);
  swift_errorRetain();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  uint64_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v15 = v0[14];
    uint64_t v16 = v0[13];
    uint64_t v17 = v0[15];
    uint64_t v4 = swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136446466;
    swift_bridgeObjectRetain();
    uint64_t v6 = MusicItemID.description.getter();
    uint64_t v8 = v7;
    swift_bridgeObjectRelease();
    *(void *)(v4 + 4) = _s2os32getNullTerminatedUTF8PointerImpl_21storingStringOwnersInSVSS_SpyypGSgztF_0(v6, v8, &v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v4 + 12) = 2114;
    swift_errorRetain();
    uint64_t v9 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v4 + 14) = v9;
    *uint64_t v5 = v9;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Failed to get share URL for TVEpisode catalogID: %{public}s: %{public}@", (uint8_t *)v4, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&_sSo8NSObjectCSgMD_0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v17, v16);
  }
  else
  {
    uint64_t v11 = v0[14];
    uint64_t v10 = v0[15];
    uint64_t v12 = v0[13];

    swift_errorRelease();
    swift_errorRelease();
    swift_bridgeObjectRelease_n();
    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  }
  (*(void (**)(void, uint64_t, uint64_t, void))(v0[18] + 56))(v0[4], 1, 1, v0[17]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t protocol witness for ShareableMusicItem.shareURL.getter in conformance TVEpisode(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = closure #3 in static Actions.ReportConcern.action(context:);
  return TVEpisode.shareURL.getter(a1);
}

uint64_t protocol witness for ShareableMusicItem.actionTitle.getter in conformance TVEpisode()
{
  return TVEpisode.actionTitle.getter();
}

uint64_t protocol witness for ShareableMusicItem.failureMessage.getter in conformance TVEpisode()
{
  return TVEpisode.failureMessage.getter();
}

uint64_t protocol witness for ShareableMusicItem.augmentMetadata(_:) in conformance TVEpisode(uint64_t a1)
{
  void v2[2] = a1;
  v2[3] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  v2[4] = swift_task_alloc();
  return _swift_task_switch(protocol witness for ShareableMusicItem.augmentMetadata(_:) in conformance TVEpisode, 0, 0);
}

uint64_t protocol witness for ShareableMusicItem.augmentMetadata(_:) in conformance TVEpisode()
{
  *(void *)(v0 + 40) = **(void **)(v0 + 16);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v1;
  *uint64_t v1 = v0;
  v1[1] = protocol witness for ShareableMusicItem.augmentMetadata(_:) in conformance Artist;
  uint64_t v2 = *(void *)(v0 + 32);
  return TVEpisode.shareURL.getter(v2);
}

uint64_t TVSeason.actionTitle.getter()
{
  return Album.actionTitle.getter();
}

uint64_t TVSeason.failureMessage.getter()
{
  return Album.actionTitle.getter();
}

uint64_t TVSeason.shareURL.getter(uint64_t a1)
{
  v2[4] = a1;
  v2[5] = v1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicItemCollection<TVSeason>);
  v2[6] = v3;
  v2[7] = *(void *)(v3 - 8);
  v2[8] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TVSeason?);
  v2[9] = swift_task_alloc();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicCatalogResourceResponse<TVSeason>);
  v2[10] = v4;
  v2[11] = *(void *)(v4 - 8);
  v2[12] = swift_task_alloc();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicCatalogResourceRequest<TVSeason>);
  v2[13] = v5;
  v2[14] = *(void *)(v5 - 8);
  v2[15] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  v2[16] = swift_task_alloc();
  return _swift_task_switch(TVSeason.shareURL.getter, 0, 0);
}

uint64_t TVSeason.shareURL.getter()
{
  uint64_t v1 = v0[16];
  TVSeason.url.getter();
  uint64_t v2 = type metadata accessor for URL();
  v0[17] = v2;
  uint64_t v3 = *(void *)(v2 - 8);
  v0[18] = v3;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    outlined destroy of TaskPriority?(v0[16], &demangling cache variable for type metadata for URL?);
    uint64_t v4 = TVSeason.catalogID.getter();
    v0[19] = v4;
    v0[20] = v5;
    if (v5)
    {
      uint64_t v6 = v4;
      uint64_t v7 = v5;
      swift_getKeyPath();
      v0[2] = v6;
      v0[3] = v7;
      v0[21] = type metadata accessor for TVSeason();
      lazy protocol witness table accessor for type Playlist.Variant and conformance Playlist.Variant(&lazy protocol witness table cache variable for type TVSeason and conformance TVSeason, (void (*)(uint64_t))&type metadata accessor for TVSeason);
      lazy protocol witness table accessor for type Playlist.Variant and conformance Playlist.Variant(&lazy protocol witness table cache variable for type TVSeason and conformance TVSeason, (void (*)(uint64_t))&type metadata accessor for TVSeason);
      swift_bridgeObjectRetain();
      MusicCatalogResourceRequest.init<A>(matching:equalTo:)();
      uint64_t v8 = (void *)swift_task_alloc();
      v0[22] = v8;
      *uint64_t v8 = v0;
      v8[1] = TVSeason.shareURL.getter;
      uint64_t v9 = v0[12];
      uint64_t v10 = v0[13];
      return MusicCatalogResourceRequest.response()(v9, v10);
    }
    (*(void (**)(void, uint64_t, uint64_t, uint64_t))(v3 + 56))(v0[4], 1, 1, v2);
  }
  else
  {
    uint64_t v11 = v0[4];
    (*(void (**)(uint64_t, void, uint64_t))(v3 + 32))(v11, v0[16], v2);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v3 + 56))(v11, 0, 1, v2);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();
  uint64_t v4;

  *(void *)(*(void *)v1 + 184) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = TVSeason.shareURL.getter;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = TVSeason.shareURL.getter;
  }
  return _swift_task_switch(v2, 0, 0);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(void);
  uint64_t v24;

  uint64_t v1 = v0[21];
  uint64_t v2 = v0[9];
  uint64_t v4 = v0[7];
  uint64_t v3 = v0[8];
  uint64_t v5 = v0[6];
  MusicCatalogResourceResponse.items.getter();
  specialized Collection.first.getter(v2);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  uint64_t v6 = *(void *)(v1 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v2, 1, v1) == 1)
  {
    uint64_t v7 = v0[17];
    uint64_t v8 = v0[18];
    uint64_t v10 = v0[14];
    uint64_t v9 = v0[15];
    uint64_t v11 = v0[13];
    uint64_t v12 = v0[9];
    uint64_t v13 = v0[4];
    (*(void (**)(void, void))(v0[11] + 8))(v0[12], v0[10]);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    outlined destroy of TaskPriority?(v12, &demangling cache variable for type metadata for TVSeason?);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v13, 1, 1, v7);
  }
  else
  {
    uint64_t v14 = v0[21];
    uint64_t v16 = v0[14];
    uint64_t v15 = v0[15];
    uint64_t v18 = v0[12];
    uint64_t v17 = v0[13];
    uint64_t v19 = v0[10];
    uint64_t v20 = v0[11];
    uint64_t v21 = v0[9];
    TVSeason.url.getter();
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v21, v14);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v22 = (uint64_t (*)(void))v0[1];
  return v22();
}

{
  void *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;

  uint64_t v19 = v0;
  if (one-time initialization token for sharing != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  __swift_project_value_buffer(v1, (uint64_t)static Logger.sharing);
  swift_errorRetain();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  uint64_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v15 = v0[14];
    uint64_t v16 = v0[13];
    uint64_t v17 = v0[15];
    uint64_t v4 = swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136446466;
    swift_bridgeObjectRetain();
    uint64_t v6 = MusicItemID.description.getter();
    uint64_t v8 = v7;
    swift_bridgeObjectRelease();
    *(void *)(v4 + 4) = _s2os32getNullTerminatedUTF8PointerImpl_21storingStringOwnersInSVSS_SpyypGSgztF_0(v6, v8, &v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v4 + 12) = 2114;
    swift_errorRetain();
    uint64_t v9 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v4 + 14) = v9;
    *uint64_t v5 = v9;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Failed to get share URL for TVSeason catalogID: %{public}s: %{public}@", (uint8_t *)v4, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&_sSo8NSObjectCSgMD_0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v17, v16);
  }
  else
  {
    uint64_t v11 = v0[14];
    uint64_t v10 = v0[15];
    uint64_t v12 = v0[13];

    swift_errorRelease();
    swift_errorRelease();
    swift_bridgeObjectRelease_n();
    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  }
  (*(void (**)(void, uint64_t, uint64_t, void))(v0[18] + 56))(v0[4], 1, 1, v0[17]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t protocol witness for ShareableMusicItem.shareURL.getter in conformance TVSeason(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = closure #3 in static Actions.ReportConcern.action(context:);
  return TVSeason.shareURL.getter(a1);
}

uint64_t protocol witness for ShareableMusicItem.actionTitle.getter in conformance TVSeason()
{
  return ShareableMusicItem.actionTitle.getter();
}

uint64_t protocol witness for ShareableMusicItem.failureMessage.getter in conformance TVSeason()
{
  return TVSeason.failureMessage.getter();
}

uint64_t protocol witness for ShareableMusicItem.augmentMetadata(_:) in conformance TVSeason(uint64_t a1)
{
  void v2[2] = a1;
  v2[3] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  v2[4] = swift_task_alloc();
  return _swift_task_switch(protocol witness for ShareableMusicItem.augmentMetadata(_:) in conformance TVSeason, 0, 0);
}

uint64_t protocol witness for ShareableMusicItem.augmentMetadata(_:) in conformance TVSeason()
{
  *(void *)(v0 + 40) = **(void **)(v0 + 16);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v1;
  *uint64_t v1 = v0;
  v1[1] = protocol witness for ShareableMusicItem.augmentMetadata(_:) in conformance Artist;
  uint64_t v2 = *(void *)(v0 + 32);
  return TVSeason.shareURL.getter(v2);
}

uint64_t TVShow.shareURL.getter(uint64_t a1)
{
  v2[4] = a1;
  v2[5] = v1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicItemCollection<TVShow>);
  v2[6] = v3;
  v2[7] = *(void *)(v3 - 8);
  v2[8] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TVShow?);
  v2[9] = swift_task_alloc();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicCatalogResourceResponse<TVShow>);
  v2[10] = v4;
  v2[11] = *(void *)(v4 - 8);
  v2[12] = swift_task_alloc();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicCatalogResourceRequest<TVShow>);
  v2[13] = v5;
  v2[14] = *(void *)(v5 - 8);
  v2[15] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  v2[16] = swift_task_alloc();
  return _swift_task_switch(TVShow.shareURL.getter, 0, 0);
}

uint64_t TVShow.shareURL.getter()
{
  uint64_t v1 = v0[16];
  TVShow.url.getter();
  uint64_t v2 = type metadata accessor for URL();
  v0[17] = v2;
  uint64_t v3 = *(void *)(v2 - 8);
  v0[18] = v3;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    outlined destroy of TaskPriority?(v0[16], &demangling cache variable for type metadata for URL?);
    uint64_t v4 = TVShow.catalogID.getter();
    v0[19] = v4;
    v0[20] = v5;
    if (v5)
    {
      uint64_t v6 = v4;
      uint64_t v7 = v5;
      swift_getKeyPath();
      v0[2] = v6;
      v0[3] = v7;
      v0[21] = type metadata accessor for TVShow();
      lazy protocol witness table accessor for type Playlist.Variant and conformance Playlist.Variant(&lazy protocol witness table cache variable for type TVShow and conformance TVShow, (void (*)(uint64_t))&type metadata accessor for TVShow);
      lazy protocol witness table accessor for type Playlist.Variant and conformance Playlist.Variant(&lazy protocol witness table cache variable for type TVShow and conformance TVShow, (void (*)(uint64_t))&type metadata accessor for TVShow);
      swift_bridgeObjectRetain();
      MusicCatalogResourceRequest.init<A>(matching:equalTo:)();
      uint64_t v8 = (void *)swift_task_alloc();
      v0[22] = v8;
      *uint64_t v8 = v0;
      v8[1] = TVShow.shareURL.getter;
      uint64_t v9 = v0[12];
      uint64_t v10 = v0[13];
      return MusicCatalogResourceRequest.response()(v9, v10);
    }
    (*(void (**)(void, uint64_t, uint64_t, uint64_t))(v3 + 56))(v0[4], 1, 1, v2);
  }
  else
  {
    uint64_t v11 = v0[4];
    (*(void (**)(uint64_t, void, uint64_t))(v3 + 32))(v11, v0[16], v2);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v3 + 56))(v11, 0, 1, v2);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();
  uint64_t v4;

  *(void *)(*(void *)v1 + 184) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = TVShow.shareURL.getter;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = TVShow.shareURL.getter;
  }
  return _swift_task_switch(v2, 0, 0);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(void);
  uint64_t v24;

  uint64_t v1 = v0[21];
  uint64_t v2 = v0[9];
  uint64_t v4 = v0[7];
  uint64_t v3 = v0[8];
  uint64_t v5 = v0[6];
  MusicCatalogResourceResponse.items.getter();
  specialized Collection.first.getter(v2);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  uint64_t v6 = *(void *)(v1 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v2, 1, v1) == 1)
  {
    uint64_t v7 = v0[17];
    uint64_t v8 = v0[18];
    uint64_t v10 = v0[14];
    uint64_t v9 = v0[15];
    uint64_t v11 = v0[13];
    uint64_t v12 = v0[9];
    uint64_t v13 = v0[4];
    (*(void (**)(void, void))(v0[11] + 8))(v0[12], v0[10]);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    outlined destroy of TaskPriority?(v12, &demangling cache variable for type metadata for TVShow?);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v13, 1, 1, v7);
  }
  else
  {
    uint64_t v14 = v0[21];
    uint64_t v16 = v0[14];
    uint64_t v15 = v0[15];
    uint64_t v18 = v0[12];
    uint64_t v17 = v0[13];
    uint64_t v19 = v0[10];
    uint64_t v20 = v0[11];
    uint64_t v21 = v0[9];
    TVShow.url.getter();
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v21, v14);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v22 = (uint64_t (*)(void))v0[1];
  return v22();
}

{
  void *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;

  uint64_t v19 = v0;
  if (one-time initialization token for sharing != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  __swift_project_value_buffer(v1, (uint64_t)static Logger.sharing);
  swift_errorRetain();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  uint64_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v15 = v0[14];
    uint64_t v16 = v0[13];
    uint64_t v17 = v0[15];
    uint64_t v4 = swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136446466;
    swift_bridgeObjectRetain();
    uint64_t v6 = MusicItemID.description.getter();
    uint64_t v8 = v7;
    swift_bridgeObjectRelease();
    *(void *)(v4 + 4) = _s2os32getNullTerminatedUTF8PointerImpl_21storingStringOwnersInSVSS_SpyypGSgztF_0(v6, v8, &v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v4 + 12) = 2114;
    swift_errorRetain();
    uint64_t v9 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v4 + 14) = v9;
    *uint64_t v5 = v9;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Failed to get share URL for TVShow catalogID: %{public}s: %{public}@", (uint8_t *)v4, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&_sSo8NSObjectCSgMD_0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v17, v16);
  }
  else
  {
    uint64_t v11 = v0[14];
    uint64_t v10 = v0[15];
    uint64_t v12 = v0[13];

    swift_errorRelease();
    swift_errorRelease();
    swift_bridgeObjectRelease_n();
    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  }
  (*(void (**)(void, uint64_t, uint64_t, void))(v0[18] + 56))(v0[4], 1, 1, v0[17]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t protocol witness for ShareableMusicItem.shareURL.getter in conformance TVShow(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = closure #3 in static Actions.ReportConcern.action(context:);
  return TVShow.shareURL.getter(a1);
}

uint64_t protocol witness for ShareableMusicItem.augmentMetadata(_:) in conformance TVShow(uint64_t a1)
{
  void v2[2] = a1;
  v2[3] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  v2[4] = swift_task_alloc();
  return _swift_task_switch(protocol witness for ShareableMusicItem.augmentMetadata(_:) in conformance TVShow, 0, 0);
}

uint64_t protocol witness for ShareableMusicItem.augmentMetadata(_:) in conformance TVShow()
{
  *(void *)(v0 + 40) = **(void **)(v0 + 16);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v1;
  *uint64_t v1 = v0;
  v1[1] = protocol witness for ShareableMusicItem.augmentMetadata(_:) in conformance Artist;
  uint64_t v2 = *(void *)(v0 + 32);
  return TVShow.shareURL.getter(v2);
}

uint64_t UploadedAudio.shareURL.getter(uint64_t a1)
{
  v2[4] = a1;
  v2[5] = v1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicItemCollection<UploadedAudio>);
  v2[6] = v3;
  v2[7] = *(void *)(v3 - 8);
  v2[8] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UploadedAudio?);
  v2[9] = swift_task_alloc();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicCatalogResourceResponse<UploadedAudio>);
  v2[10] = v4;
  v2[11] = *(void *)(v4 - 8);
  v2[12] = swift_task_alloc();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicCatalogResourceRequest<UploadedAudio>);
  v2[13] = v5;
  v2[14] = *(void *)(v5 - 8);
  v2[15] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  v2[16] = swift_task_alloc();
  return _swift_task_switch(UploadedAudio.shareURL.getter, 0, 0);
}

uint64_t UploadedAudio.shareURL.getter()
{
  uint64_t v1 = v0[16];
  UploadedAudio.postURL.getter();
  uint64_t v2 = type metadata accessor for URL();
  v0[17] = v2;
  uint64_t v3 = *(void *)(v2 - 8);
  v0[18] = v3;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    outlined destroy of TaskPriority?(v0[16], &demangling cache variable for type metadata for URL?);
    uint64_t v4 = UploadedAudio.catalogID.getter();
    v0[19] = v4;
    v0[20] = v5;
    if (v5)
    {
      uint64_t v6 = v4;
      uint64_t v7 = v5;
      swift_getKeyPath();
      v0[2] = v6;
      v0[3] = v7;
      v0[21] = type metadata accessor for UploadedAudio();
      lazy protocol witness table accessor for type Playlist.Variant and conformance Playlist.Variant(&lazy protocol witness table cache variable for type UploadedAudio and conformance UploadedAudio, (void (*)(uint64_t))&type metadata accessor for UploadedAudio);
      lazy protocol witness table accessor for type Playlist.Variant and conformance Playlist.Variant(&lazy protocol witness table cache variable for type UploadedAudio and conformance UploadedAudio, (void (*)(uint64_t))&type metadata accessor for UploadedAudio);
      swift_bridgeObjectRetain();
      MusicCatalogResourceRequest.init<A>(matching:equalTo:)();
      uint64_t v8 = (void *)swift_task_alloc();
      v0[22] = v8;
      *uint64_t v8 = v0;
      v8[1] = UploadedAudio.shareURL.getter;
      uint64_t v9 = v0[12];
      uint64_t v10 = v0[13];
      return MusicCatalogResourceRequest.response()(v9, v10);
    }
    (*(void (**)(void, uint64_t, uint64_t, uint64_t))(v3 + 56))(v0[4], 1, 1, v2);
  }
  else
  {
    uint64_t v11 = v0[4];
    (*(void (**)(uint64_t, void, uint64_t))(v3 + 32))(v11, v0[16], v2);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v3 + 56))(v11, 0, 1, v2);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();
  uint64_t v4;

  *(void *)(*(void *)v1 + 184) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = UploadedAudio.shareURL.getter;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = UploadedAudio.shareURL.getter;
  }
  return _swift_task_switch(v2, 0, 0);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(void);
  uint64_t v24;

  uint64_t v1 = v0[21];
  uint64_t v2 = v0[9];
  uint64_t v4 = v0[7];
  uint64_t v3 = v0[8];
  uint64_t v5 = v0[6];
  MusicCatalogResourceResponse.items.getter();
  specialized Collection.first.getter(v2);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  uint64_t v6 = *(void *)(v1 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v2, 1, v1) == 1)
  {
    uint64_t v7 = v0[17];
    uint64_t v8 = v0[18];
    uint64_t v10 = v0[14];
    uint64_t v9 = v0[15];
    uint64_t v11 = v0[13];
    uint64_t v12 = v0[9];
    uint64_t v13 = v0[4];
    (*(void (**)(void, void))(v0[11] + 8))(v0[12], v0[10]);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    outlined destroy of TaskPriority?(v12, &demangling cache variable for type metadata for UploadedAudio?);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v13, 1, 1, v7);
  }
  else
  {
    uint64_t v14 = v0[21];
    uint64_t v16 = v0[14];
    uint64_t v15 = v0[15];
    uint64_t v18 = v0[12];
    uint64_t v17 = v0[13];
    uint64_t v19 = v0[10];
    uint64_t v20 = v0[11];
    uint64_t v21 = v0[9];
    UploadedAudio.postURL.getter();
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v21, v14);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v22 = (uint64_t (*)(void))v0[1];
  return v22();
}

{
  void *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;

  uint64_t v19 = v0;
  if (one-time initialization token for sharing != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  __swift_project_value_buffer(v1, (uint64_t)static Logger.sharing);
  swift_errorRetain();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  uint64_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v15 = v0[14];
    uint64_t v16 = v0[13];
    uint64_t v17 = v0[15];
    uint64_t v4 = swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136446466;
    swift_bridgeObjectRetain();
    uint64_t v6 = MusicItemID.description.getter();
    uint64_t v8 = v7;
    swift_bridgeObjectRelease();
    *(void *)(v4 + 4) = _s2os32getNullTerminatedUTF8PointerImpl_21storingStringOwnersInSVSS_SpyypGSgztF_0(v6, v8, &v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v4 + 12) = 2114;
    swift_errorRetain();
    uint64_t v9 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v4 + 14) = v9;
    *uint64_t v5 = v9;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Failed to get share URL for uploaded audio catalogID: %{public}s: %{public}@", (uint8_t *)v4, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&_sSo8NSObjectCSgMD_0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v17, v16);
  }
  else
  {
    uint64_t v11 = v0[14];
    uint64_t v10 = v0[15];
    uint64_t v12 = v0[13];

    swift_errorRelease();
    swift_errorRelease();
    swift_bridgeObjectRelease_n();
    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  }
  (*(void (**)(void, uint64_t, uint64_t, void))(v0[18] + 56))(v0[4], 1, 1, v0[17]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t protocol witness for ShareableMusicItem.shareURL.getter in conformance UploadedAudio(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = closure #3 in static Actions.ReportConcern.action(context:);
  return UploadedAudio.shareURL.getter(a1);
}

uint64_t protocol witness for ShareableMusicItem.augmentMetadata(_:) in conformance UploadedAudio(uint64_t a1)
{
  void v2[2] = a1;
  v2[3] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  v2[4] = swift_task_alloc();
  return _swift_task_switch(protocol witness for ShareableMusicItem.augmentMetadata(_:) in conformance UploadedAudio, 0, 0);
}

uint64_t protocol witness for ShareableMusicItem.augmentMetadata(_:) in conformance UploadedAudio()
{
  *(void *)(v0 + 40) = **(void **)(v0 + 16);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v1;
  *uint64_t v1 = v0;
  v1[1] = protocol witness for ShareableMusicItem.augmentMetadata(_:) in conformance Artist;
  uint64_t v2 = *(void *)(v0 + 32);
  return UploadedAudio.shareURL.getter(v2);
}

uint64_t UploadedVideo.shareURL.getter(uint64_t a1)
{
  v2[4] = a1;
  v2[5] = v1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicItemCollection<UploadedVideo>);
  v2[6] = v3;
  v2[7] = *(void *)(v3 - 8);
  v2[8] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UploadedVideo?);
  v2[9] = swift_task_alloc();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicCatalogResourceResponse<UploadedVideo>);
  v2[10] = v4;
  v2[11] = *(void *)(v4 - 8);
  v2[12] = swift_task_alloc();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicCatalogResourceRequest<UploadedVideo>);
  v2[13] = v5;
  v2[14] = *(void *)(v5 - 8);
  v2[15] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  v2[16] = swift_task_alloc();
  return _swift_task_switch(UploadedVideo.shareURL.getter, 0, 0);
}

uint64_t UploadedVideo.shareURL.getter()
{
  uint64_t v1 = v0[16];
  UploadedVideo.postURL.getter();
  uint64_t v2 = type metadata accessor for URL();
  v0[17] = v2;
  uint64_t v3 = *(void *)(v2 - 8);
  v0[18] = v3;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    outlined destroy of TaskPriority?(v0[16], &demangling cache variable for type metadata for URL?);
    uint64_t v4 = UploadedVideo.catalogID.getter();
    v0[19] = v4;
    v0[20] = v5;
    if (v5)
    {
      uint64_t v6 = v4;
      uint64_t v7 = v5;
      swift_getKeyPath();
      v0[2] = v6;
      v0[3] = v7;
      v0[21] = type metadata accessor for UploadedVideo();
      lazy protocol witness table accessor for type Playlist.Variant and conformance Playlist.Variant(&lazy protocol witness table cache variable for type UploadedVideo and conformance UploadedVideo, (void (*)(uint64_t))&type metadata accessor for UploadedVideo);
      lazy protocol witness table accessor for type Playlist.Variant and conformance Playlist.Variant(&lazy protocol witness table cache variable for type UploadedVideo and conformance UploadedVideo, (void (*)(uint64_t))&type metadata accessor for UploadedVideo);
      swift_bridgeObjectRetain();
      MusicCatalogResourceRequest.init<A>(matching:equalTo:)();
      uint64_t v8 = (void *)swift_task_alloc();
      v0[22] = v8;
      *uint64_t v8 = v0;
      v8[1] = UploadedVideo.shareURL.getter;
      uint64_t v9 = v0[12];
      uint64_t v10 = v0[13];
      return MusicCatalogResourceRequest.response()(v9, v10);
    }
    (*(void (**)(void, uint64_t, uint64_t, uint64_t))(v3 + 56))(v0[4], 1, 1, v2);
  }
  else
  {
    uint64_t v11 = v0[4];
    (*(void (**)(uint64_t, void, uint64_t))(v3 + 32))(v11, v0[16], v2);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v3 + 56))(v11, 0, 1, v2);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();
  uint64_t v4;

  *(void *)(*(void *)v1 + 184) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = UploadedVideo.shareURL.getter;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = UploadedVideo.shareURL.getter;
  }
  return _swift_task_switch(v2, 0, 0);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(void);
  uint64_t v24;

  uint64_t v1 = v0[21];
  uint64_t v2 = v0[9];
  uint64_t v4 = v0[7];
  uint64_t v3 = v0[8];
  uint64_t v5 = v0[6];
  MusicCatalogResourceResponse.items.getter();
  specialized Collection.first.getter(v2);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  uint64_t v6 = *(void *)(v1 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v2, 1, v1) == 1)
  {
    uint64_t v7 = v0[17];
    uint64_t v8 = v0[18];
    uint64_t v10 = v0[14];
    uint64_t v9 = v0[15];
    uint64_t v11 = v0[13];
    uint64_t v12 = v0[9];
    uint64_t v13 = v0[4];
    (*(void (**)(void, void))(v0[11] + 8))(v0[12], v0[10]);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    outlined destroy of TaskPriority?(v12, &demangling cache variable for type metadata for UploadedVideo?);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v13, 1, 1, v7);
  }
  else
  {
    uint64_t v14 = v0[21];
    uint64_t v16 = v0[14];
    uint64_t v15 = v0[15];
    uint64_t v18 = v0[12];
    uint64_t v17 = v0[13];
    uint64_t v19 = v0[10];
    uint64_t v20 = v0[11];
    uint64_t v21 = v0[9];
    UploadedVideo.postURL.getter();
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v21, v14);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v22 = (uint64_t (*)(void))v0[1];
  return v22();
}

{
  void *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;

  uint64_t v19 = v0;
  if (one-time initialization token for sharing != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  __swift_project_value_buffer(v1, (uint64_t)static Logger.sharing);
  swift_errorRetain();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  uint64_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v15 = v0[14];
    uint64_t v16 = v0[13];
    uint64_t v17 = v0[15];
    uint64_t v4 = swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136446466;
    swift_bridgeObjectRetain();
    uint64_t v6 = MusicItemID.description.getter();
    uint64_t v8 = v7;
    swift_bridgeObjectRelease();
    *(void *)(v4 + 4) = _s2os32getNullTerminatedUTF8PointerImpl_21storingStringOwnersInSVSS_SpyypGSgztF_0(v6, v8, &v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v4 + 12) = 2114;
    swift_errorRetain();
    uint64_t v9 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v4 + 14) = v9;
    *uint64_t v5 = v9;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Failed to get share URL for uploaded video catalogID: %{public}s: %{public}@", (uint8_t *)v4, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&_sSo8NSObjectCSgMD_0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v17, v16);
  }
  else
  {
    uint64_t v11 = v0[14];
    uint64_t v10 = v0[15];
    uint64_t v12 = v0[13];

    swift_errorRelease();
    swift_errorRelease();
    swift_bridgeObjectRelease_n();
    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  }
  (*(void (**)(void, uint64_t, uint64_t, void))(v0[18] + 56))(v0[4], 1, 1, v0[17]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t protocol witness for ShareableMusicItem.shareURL.getter in conformance UploadedVideo(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = closure #3 in static Actions.ReportConcern.action(context:);
  return UploadedVideo.shareURL.getter(a1);
}

uint64_t protocol witness for ShareableMusicItem.augmentMetadata(_:) in conformance UploadedVideo(uint64_t a1)
{
  void v2[2] = a1;
  v2[3] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  v2[4] = swift_task_alloc();
  return _swift_task_switch(protocol witness for ShareableMusicItem.augmentMetadata(_:) in conformance UploadedVideo, 0, 0);
}

uint64_t protocol witness for ShareableMusicItem.augmentMetadata(_:) in conformance UploadedVideo()
{
  *(void *)(v0 + 40) = **(void **)(v0 + 16);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v1;
  *uint64_t v1 = v0;
  v1[1] = protocol witness for ShareableMusicItem.augmentMetadata(_:) in conformance Artist;
  uint64_t v2 = *(void *)(v0 + 32);
  return UploadedVideo.shareURL.getter(v2);
}

uint64_t GenericMusicItem.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v99 = a1;
  uint64_t v53 = type metadata accessor for UploadedVideo();
  uint64_t v52 = *(void *)(v53 - 8);
  __chkstk_darwin(v53);
  uint64_t v51 = (char *)&v51 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = type metadata accessor for UploadedAudio();
  uint64_t v55 = *(void *)(v56 - 8);
  __chkstk_darwin(v56);
  uint64_t v54 = (char *)&v51 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = type metadata accessor for TVShow();
  uint64_t v58 = *(void *)(v59 - 8);
  __chkstk_darwin(v59);
  uint64_t v57 = (char *)&v51 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = type metadata accessor for TVSeason();
  uint64_t v61 = *(void *)(v62 - 8);
  __chkstk_darwin(v62);
  uint64_t v60 = (char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = type metadata accessor for TVEpisode();
  uint64_t v64 = *(void *)(v65 - 8);
  __chkstk_darwin(v65);
  uint64_t v63 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = type metadata accessor for Station();
  uint64_t v67 = *(void *)(v68 - 8);
  __chkstk_darwin(v68);
  uint64_t v66 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = type metadata accessor for Song();
  uint64_t v70 = *(void *)(v71 - 8);
  __chkstk_darwin(v71);
  uint64_t v69 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = type metadata accessor for SocialProfile();
  uint64_t v73 = *(void *)(v74 - 8);
  __chkstk_darwin(v74);
  uint64_t v72 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = type metadata accessor for RecordLabel();
  uint64_t v76 = *(void *)(v77 - 8);
  __chkstk_darwin(v77);
  uint64_t v75 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for RadioShow();
  uint64_t v79 = *(void *)(v10 - 8);
  uint64_t v80 = v10;
  __chkstk_darwin(v10);
  uint64_t v78 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Playlist();
  uint64_t v82 = *(void *)(v12 - 8);
  uint64_t v83 = v12;
  __chkstk_darwin(v12);
  uint64_t v81 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for MusicVideo();
  uint64_t v85 = *(void *)(v14 - 8);
  uint64_t v86 = v14;
  __chkstk_darwin(v14);
  uint64_t v84 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for MusicMovie();
  uint64_t v88 = *(void *)(v16 - 8);
  uint64_t v89 = v16;
  __chkstk_darwin(v16);
  uint64_t v87 = (char *)&v51 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for Genre();
  uint64_t v91 = *(void *)(v18 - 8);
  uint64_t v92 = v18;
  __chkstk_darwin(v18);
  uint64_t v90 = (char *)&v51 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for EditorialItem();
  uint64_t v94 = *(void *)(v20 - 8);
  uint64_t v95 = v20;
  __chkstk_darwin(v20);
  uint64_t v93 = (char *)&v51 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for Curator();
  uint64_t v96 = *(void *)(v22 - 8);
  uint64_t v97 = v22;
  __chkstk_darwin(v22);
  uint64_t v24 = (char *)&v51 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for Artist();
  uint64_t v26 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v28 = (char *)&v51 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = type metadata accessor for Album();
  uint64_t v30 = *(void *)(v29 - 8);
  __chkstk_darwin(v29);
  uint64_t v32 = (char *)&v51 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = type metadata accessor for GenericMusicItem();
  uint64_t v34 = *(void *)(v33 - 8);
  __chkstk_darwin(v33);
  uint64_t v36 = (char *)&v51 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v34 + 16))(v36, v98, v33);
  int v37 = (*(uint64_t (**)(char *, uint64_t))(v34 + 88))(v36, v33);
  if (v37 == enum case for GenericMusicItem.album(_:))
  {
    (*(void (**)(char *, uint64_t))(v34 + 96))(v36, v33);
    (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v32, v36, v29);
    Album.url.getter();
    return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v32, v29);
  }
  uint64_t v39 = v99;
  if (v37 == enum case for GenericMusicItem.artist(_:))
  {
    (*(void (**)(char *, uint64_t))(v34 + 96))(v36, v33);
    (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v28, v36, v25);
    Artist.url.getter();
    return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v28, v25);
  }
  uint64_t v40 = v99;
  if (v37 == enum case for GenericMusicItem.composer(_:) || v37 == enum case for GenericMusicItem.creditArtist(_:))
  {
    (*(void (**)(char *, uint64_t))(v34 + 8))(v36, v33);
LABEL_8:
    uint64_t v41 = type metadata accessor for URL();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v40, 1, 1, v41);
  }
  if (v37 == enum case for GenericMusicItem.curator(_:))
  {
    (*(void (**)(char *, uint64_t))(v34 + 96))(v36, v33);
    uint64_t v43 = v96;
    uint64_t v42 = v97;
    (*(void (**)(char *, char *, uint64_t))(v96 + 32))(v24, v36, v97);
    Curator.url.getter();
    return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v24, v42);
  }
  if (v37 == enum case for GenericMusicItem.editorialItem(_:))
  {
    (*(void (**)(char *, uint64_t))(v34 + 96))(v36, v33);
    uint64_t v45 = v93;
    uint64_t v44 = v94;
    uint64_t v46 = v95;
    (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v93, v36, v95);
    EditorialItem.url.getter();
    return (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v45, v46);
  }
  if (v37 == enum case for GenericMusicItem.genre(_:))
  {
    (*(void (**)(char *, uint64_t))(v34 + 96))(v36, v33);
    uint64_t v45 = v90;
    uint64_t v44 = v91;
    uint64_t v46 = v92;
    (*(void (**)(char *, char *, uint64_t))(v91 + 32))(v90, v36, v92);
    Genre.url.getter();
    return (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v45, v46);
  }
  if (v37 == enum case for GenericMusicItem.musicMovie(_:))
  {
    (*(void (**)(char *, uint64_t))(v34 + 96))(v36, v33);
    uint64_t v45 = v87;
    uint64_t v44 = v88;
    uint64_t v46 = v89;
    (*(void (**)(char *, char *, uint64_t))(v88 + 32))(v87, v36, v89);
    MusicMovie.url.getter();
    return (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v45, v46);
  }
  if (v37 == enum case for GenericMusicItem.musicVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v34 + 96))(v36, v33);
    uint64_t v45 = v84;
    uint64_t v44 = v85;
    uint64_t v46 = v86;
    (*(void (**)(char *, char *, uint64_t))(v85 + 32))(v84, v36, v86);
    MusicVideo.url.getter();
    return (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v45, v46);
  }
  if (v37 == enum case for GenericMusicItem.playlist(_:))
  {
    (*(void (**)(char *, uint64_t))(v34 + 96))(v36, v33);
    uint64_t v45 = v81;
    uint64_t v44 = v82;
    uint64_t v46 = v83;
    (*(void (**)(char *, char *, uint64_t))(v82 + 32))(v81, v36, v83);
    Playlist.url.getter();
    return (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v45, v46);
  }
  if (v37 == enum case for GenericMusicItem.radioShow(_:))
  {
    (*(void (**)(char *, uint64_t))(v34 + 96))(v36, v33);
    uint64_t v44 = v79;
    uint64_t v46 = v80;
    uint64_t v45 = v78;
    (*(void (**)(char *, char *, uint64_t))(v79 + 32))(v78, v36, v80);
    RadioShow.url.getter();
    return (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v45, v46);
  }
  if (v37 == enum case for GenericMusicItem.recordLabel(_:))
  {
    (*(void (**)(char *, uint64_t))(v34 + 96))(v36, v33);
    uint64_t v44 = v76;
    uint64_t v45 = v75;
    uint64_t v46 = v77;
    (*(void (**)(char *, char *, uint64_t))(v76 + 32))(v75, v36, v77);
    RecordLabel.url.getter();
    return (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v45, v46);
  }
  if (v37 == enum case for GenericMusicItem.socialProfile(_:))
  {
    (*(void (**)(char *, uint64_t))(v34 + 96))(v36, v33);
    uint64_t v44 = v73;
    uint64_t v45 = v72;
    uint64_t v46 = v74;
    (*(void (**)(char *, char *, uint64_t))(v73 + 32))(v72, v36, v74);
    SocialProfile.url.getter();
    return (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v45, v46);
  }
  if (v37 == enum case for GenericMusicItem.song(_:))
  {
    (*(void (**)(char *, uint64_t))(v34 + 96))(v36, v33);
    uint64_t v44 = v70;
    uint64_t v45 = v69;
    uint64_t v46 = v71;
    (*(void (**)(char *, char *, uint64_t))(v70 + 32))(v69, v36, v71);
    Song.url.getter();
    return (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v45, v46);
  }
  if (v37 == enum case for GenericMusicItem.station(_:))
  {
    (*(void (**)(char *, uint64_t))(v34 + 96))(v36, v33);
    uint64_t v47 = v67;
    uint64_t v48 = v66;
    uint64_t v49 = v68;
    (*(void (**)(char *, char *, uint64_t))(v67 + 32))(v66, v36, v68);
    Station.url.getter();
    return (*(uint64_t (**)(char *, uint64_t))(v47 + 8))(v48, v49);
  }
  if (v37 == enum case for GenericMusicItem.tvEpisode(_:))
  {
    (*(void (**)(char *, uint64_t))(v34 + 96))(v36, v33);
    uint64_t v47 = v64;
    uint64_t v48 = v63;
    uint64_t v49 = v65;
    (*(void (**)(char *, char *, uint64_t))(v64 + 32))(v63, v36, v65);
    TVEpisode.url.getter();
    return (*(uint64_t (**)(char *, uint64_t))(v47 + 8))(v48, v49);
  }
  if (v37 == enum case for GenericMusicItem.tvSeason(_:))
  {
    (*(void (**)(char *, uint64_t))(v34 + 96))(v36, v33);
    uint64_t v47 = v61;
    uint64_t v48 = v60;
    uint64_t v49 = v62;
    (*(void (**)(char *, char *, uint64_t))(v61 + 32))(v60, v36, v62);
    TVSeason.url.getter();
    return (*(uint64_t (**)(char *, uint64_t))(v47 + 8))(v48, v49);
  }
  if (v37 == enum case for GenericMusicItem.tvShow(_:))
  {
    (*(void (**)(char *, uint64_t))(v34 + 96))(v36, v33);
    uint64_t v47 = v58;
    uint64_t v48 = v57;
    uint64_t v49 = v59;
    (*(void (**)(char *, char *, uint64_t))(v58 + 32))(v57, v36, v59);
    TVShow.url.getter();
    return (*(uint64_t (**)(char *, uint64_t))(v47 + 8))(v48, v49);
  }
  if (v37 == enum case for GenericMusicItem.uploadedAudio(_:))
  {
    (*(void (**)(char *, uint64_t))(v34 + 96))(v36, v33);
    uint64_t v47 = v55;
    uint64_t v48 = v54;
    uint64_t v49 = v56;
    (*(void (**)(char *, char *, uint64_t))(v55 + 32))(v54, v36, v56);
    UploadedAudio.postURL.getter();
    return (*(uint64_t (**)(char *, uint64_t))(v47 + 8))(v48, v49);
  }
  if (v37 == enum case for GenericMusicItem.uploadedVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v34 + 96))(v36, v33);
    uint64_t v47 = v52;
    uint64_t v48 = v51;
    uint64_t v49 = v53;
    (*(void (**)(char *, char *, uint64_t))(v52 + 32))(v51, v36, v53);
    UploadedVideo.postURL.getter();
    return (*(uint64_t (**)(char *, uint64_t))(v47 + 8))(v48, v49);
  }
  if (v37 == enum case for GenericMusicItem.other(_:))
  {
    (*(void (**)(char *, uint64_t))(v34 + 96))(v36, v33);
    swift_bridgeObjectRelease();
    uint64_t v40 = v39;
    goto LABEL_8;
  }
  uint64_t v50 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v39, 1, 1, v50);
  return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v36, v33);
}

uint64_t GenericMusicItem.shareURL.getter(uint64_t a1)
{
  void v2[2] = a1;
  v2[3] = v1;
  uint64_t v3 = type metadata accessor for UploadedVideo();
  v2[4] = v3;
  v2[5] = *(void *)(v3 - 8);
  v2[6] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for UploadedAudio();
  v2[7] = v4;
  v2[8] = *(void *)(v4 - 8);
  v2[9] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for TVShow();
  v2[10] = v5;
  v2[11] = *(void *)(v5 - 8);
  v2[12] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for TVSeason();
  v2[13] = v6;
  v2[14] = *(void *)(v6 - 8);
  v2[15] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for TVEpisode();
  v2[16] = v7;
  v2[17] = *(void *)(v7 - 8);
  v2[18] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for Song();
  v2[19] = v8;
  v2[20] = *(void *)(v8 - 8);
  v2[21] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for Playlist();
  v2[22] = v9;
  v2[23] = *(void *)(v9 - 8);
  v2[24] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for MusicVideo();
  v2[25] = v10;
  v2[26] = *(void *)(v10 - 8);
  v2[27] = swift_task_alloc();
  uint64_t v11 = type metadata accessor for MusicMovie();
  v2[28] = v11;
  v2[29] = *(void *)(v11 - 8);
  v2[30] = swift_task_alloc();
  uint64_t v12 = type metadata accessor for Artist();
  v2[31] = v12;
  v2[32] = *(void *)(v12 - 8);
  v2[33] = swift_task_alloc();
  uint64_t v13 = type metadata accessor for Album();
  v2[34] = v13;
  v2[35] = *(void *)(v13 - 8);
  v2[36] = swift_task_alloc();
  uint64_t v14 = type metadata accessor for GenericMusicItem();
  v2[37] = v14;
  v2[38] = *(void *)(v14 - 8);
  v2[39] = swift_task_alloc();
  return _swift_task_switch(GenericMusicItem.shareURL.getter, 0, 0);
}

uint64_t GenericMusicItem.shareURL.getter()
{
  uint64_t v2 = v0[38];
  uint64_t v1 = v0[39];
  uint64_t v3 = v0[37];
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 16))(v1, v0[3], v3);
  int v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 88))(v1, v3);
  if (v4 == enum case for GenericMusicItem.album(_:))
  {
    uint64_t v5 = v0[39];
    uint64_t v6 = v0[36];
    uint64_t v7 = v0[34];
    uint64_t v8 = v0[35];
    (*(void (**)(uint64_t, void))(v0[38] + 96))(v5, v0[37]);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v6, v5, v7);
    uint64_t v9 = (void *)swift_task_alloc();
    v0[40] = v9;
    *uint64_t v9 = v0;
    v9[1] = GenericMusicItem.shareURL.getter;
    uint64_t v10 = v0[2];
    return Album.shareURL.getter(v10);
  }
  if (v4 == enum case for GenericMusicItem.artist(_:))
  {
    uint64_t v12 = v0[39];
    uint64_t v14 = v0[32];
    uint64_t v13 = v0[33];
    uint64_t v15 = v0[31];
    (*(void (**)(uint64_t, void))(v0[38] + 96))(v12, v0[37]);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 32))(v13, v12, v15);
    uint64_t v16 = (void *)swift_task_alloc();
    v0[41] = v16;
    *uint64_t v16 = v0;
    v16[1] = GenericMusicItem.shareURL.getter;
    uint64_t v17 = v0[2];
    return Artist.shareURL.getter(v17);
  }
  if (v4 == enum case for GenericMusicItem.composer(_:)) {
    goto LABEL_20;
  }
  if (v4 == enum case for GenericMusicItem.creditArtist(_:))
  {
LABEL_11:
    uint64_t v18 = v0[2];
    (*(void (**)(void, void))(v0[38] + 8))(v0[39], v0[37]);
    uint64_t v19 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 1, 1, v19);
LABEL_21:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v23 = (uint64_t (*)(void))v0[1];
    return v23();
  }
  BOOL v20 = v4 == enum case for GenericMusicItem.curator(_:) || v4 == enum case for GenericMusicItem.editorialItem(_:);
  if (v20 || v4 == enum case for GenericMusicItem.genre(_:)) {
    goto LABEL_20;
  }
  if (v4 == enum case for GenericMusicItem.musicMovie(_:))
  {
    uint64_t v24 = v0[39];
    uint64_t v26 = v0[29];
    uint64_t v25 = v0[30];
    uint64_t v27 = v0[28];
    (*(void (**)(uint64_t, void))(v0[38] + 96))(v24, v0[37]);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 32))(v25, v24, v27);
    uint64_t v28 = (void *)swift_task_alloc();
    v0[42] = v28;
    *uint64_t v28 = v0;
    v28[1] = GenericMusicItem.shareURL.getter;
    uint64_t v29 = v0[2];
    return MusicMovie.shareURL.getter(v29);
  }
  if (v4 == enum case for GenericMusicItem.musicVideo(_:))
  {
    uint64_t v30 = v0[39];
    uint64_t v32 = v0[26];
    uint64_t v31 = v0[27];
    uint64_t v33 = v0[25];
    (*(void (**)(uint64_t, void))(v0[38] + 96))(v30, v0[37]);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 32))(v31, v30, v33);
    uint64_t v34 = (void *)swift_task_alloc();
    v0[43] = v34;
    *uint64_t v34 = v0;
    v34[1] = GenericMusicItem.shareURL.getter;
    uint64_t v35 = v0[2];
    return MusicVideo.shareURL.getter(v35);
  }
  if (v4 == enum case for GenericMusicItem.playlist(_:))
  {
    uint64_t v36 = v0[39];
    uint64_t v38 = v0[23];
    uint64_t v37 = v0[24];
    uint64_t v39 = v0[22];
    (*(void (**)(uint64_t, void))(v0[38] + 96))(v36, v0[37]);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 32))(v37, v36, v39);
    uint64_t v40 = (void *)swift_task_alloc();
    v0[44] = v40;
    *uint64_t v40 = v0;
    v40[1] = GenericMusicItem.shareURL.getter;
    uint64_t v41 = v0[2];
    return Playlist.shareURL.getter(v41);
  }
  if (v4 == enum case for GenericMusicItem.radioShow(_:)
    || v4 == enum case for GenericMusicItem.recordLabel(_:)
    || v4 == enum case for GenericMusicItem.socialProfile(_:))
  {
    goto LABEL_20;
  }
  if (v4 == enum case for GenericMusicItem.song(_:))
  {
    uint64_t v42 = v0[39];
    uint64_t v44 = v0[20];
    uint64_t v43 = v0[21];
    uint64_t v45 = v0[19];
    (*(void (**)(uint64_t, void))(v0[38] + 96))(v42, v0[37]);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 32))(v43, v42, v45);
    uint64_t v46 = (void *)swift_task_alloc();
    v0[45] = v46;
    *uint64_t v46 = v0;
    v46[1] = GenericMusicItem.shareURL.getter;
    uint64_t v47 = v0[2];
    return Song.shareURL.getter(v47);
  }
  if (v4 == enum case for GenericMusicItem.station(_:))
  {
LABEL_20:
    uint64_t v22 = v0[2];
    (*(void (**)(void, void))(v0[38] + 8))(v0[39], v0[37]);
    GenericMusicItem.url.getter(v22);
    goto LABEL_21;
  }
  if (v4 == enum case for GenericMusicItem.tvEpisode(_:))
  {
    uint64_t v48 = v0[39];
    uint64_t v50 = v0[17];
    uint64_t v49 = v0[18];
    uint64_t v51 = v0[16];
    (*(void (**)(uint64_t, void))(v0[38] + 96))(v48, v0[37]);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 32))(v49, v48, v51);
    uint64_t v52 = (void *)swift_task_alloc();
    v0[46] = v52;
    void *v52 = v0;
    v52[1] = GenericMusicItem.shareURL.getter;
    uint64_t v53 = v0[2];
    return TVEpisode.shareURL.getter(v53);
  }
  else if (v4 == enum case for GenericMusicItem.tvSeason(_:))
  {
    uint64_t v54 = v0[39];
    uint64_t v56 = v0[14];
    uint64_t v55 = v0[15];
    uint64_t v57 = v0[13];
    (*(void (**)(uint64_t, void))(v0[38] + 96))(v54, v0[37]);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v56 + 32))(v55, v54, v57);
    uint64_t v58 = (void *)swift_task_alloc();
    v0[47] = v58;
    *uint64_t v58 = v0;
    v58[1] = GenericMusicItem.shareURL.getter;
    uint64_t v59 = v0[2];
    return TVSeason.shareURL.getter(v59);
  }
  else if (v4 == enum case for GenericMusicItem.tvShow(_:))
  {
    uint64_t v60 = v0[39];
    uint64_t v62 = v0[11];
    uint64_t v61 = v0[12];
    uint64_t v63 = v0[10];
    (*(void (**)(uint64_t, void))(v0[38] + 96))(v60, v0[37]);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v62 + 32))(v61, v60, v63);
    uint64_t v64 = (void *)swift_task_alloc();
    v0[48] = v64;
    *uint64_t v64 = v0;
    v64[1] = GenericMusicItem.shareURL.getter;
    uint64_t v65 = v0[2];
    return TVShow.shareURL.getter(v65);
  }
  else if (v4 == enum case for GenericMusicItem.uploadedAudio(_:))
  {
    uint64_t v66 = v0[39];
    uint64_t v68 = v0[8];
    uint64_t v67 = v0[9];
    uint64_t v69 = v0[7];
    (*(void (**)(uint64_t, void))(v0[38] + 96))(v66, v0[37]);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v68 + 32))(v67, v66, v69);
    uint64_t v70 = (void *)swift_task_alloc();
    v0[49] = v70;
    *uint64_t v70 = v0;
    v70[1] = GenericMusicItem.shareURL.getter;
    uint64_t v71 = v0[2];
    return UploadedAudio.shareURL.getter(v71);
  }
  else
  {
    if (v4 != enum case for GenericMusicItem.uploadedVideo(_:))
    {
      if (v4 != enum case for GenericMusicItem.other(_:))
      {
        uint64_t v79 = v0[38];
        uint64_t v78 = v0[39];
        uint64_t v80 = v0[37];
        GenericMusicItem.url.getter(v0[2]);
        (*(void (**)(uint64_t, uint64_t))(v79 + 8))(v78, v80);
        goto LABEL_21;
      }
      goto LABEL_11;
    }
    uint64_t v72 = v0[39];
    uint64_t v74 = v0[5];
    uint64_t v73 = v0[6];
    uint64_t v75 = v0[4];
    (*(void (**)(uint64_t, void))(v0[38] + 96))(v72, v0[37]);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v74 + 32))(v73, v72, v75);
    uint64_t v76 = (void *)swift_task_alloc();
    v0[50] = v76;
    *uint64_t v76 = v0;
    v76[1] = GenericMusicItem.shareURL.getter;
    uint64_t v77 = v0[2];
    return UploadedVideo.shareURL.getter(v77);
  }
}

{
  uint64_t v1;

  swift_task_dealloc();
  return _swift_task_switch(GenericMusicItem.shareURL.getter, 0, 0);
}

{
  void *v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  (*(void (**)(void, void))(v0[35] + 8))(v0[36], v0[34]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

{
  uint64_t v1;

  swift_task_dealloc();
  return _swift_task_switch(GenericMusicItem.shareURL.getter, 0, 0);
}

{
  void *v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  (*(void (**)(void, void))(v0[32] + 8))(v0[33], v0[31]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

{
  uint64_t v1;

  swift_task_dealloc();
  return _swift_task_switch(GenericMusicItem.shareURL.getter, 0, 0);
}

{
  void *v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  (*(void (**)(void, void))(v0[29] + 8))(v0[30], v0[28]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

{
  uint64_t v1;

  swift_task_dealloc();
  return _swift_task_switch(GenericMusicItem.shareURL.getter, 0, 0);
}

{
  void *v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  (*(void (**)(void, void))(v0[26] + 8))(v0[27], v0[25]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

{
  uint64_t v1;

  swift_task_dealloc();
  return _swift_task_switch(GenericMusicItem.shareURL.getter, 0, 0);
}

{
  void *v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  (*(void (**)(void, void))(v0[23] + 8))(v0[24], v0[22]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

{
  uint64_t v1;

  swift_task_dealloc();
  return _swift_task_switch(GenericMusicItem.shareURL.getter, 0, 0);
}

{
  void *v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  (*(void (**)(void, void))(v0[20] + 8))(v0[21], v0[19]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

{
  uint64_t v1;

  swift_task_dealloc();
  return _swift_task_switch(GenericMusicItem.shareURL.getter, 0, 0);
}

{
  void *v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  (*(void (**)(void, void))(v0[17] + 8))(v0[18], v0[16]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

{
  uint64_t v1;

  swift_task_dealloc();
  return _swift_task_switch(GenericMusicItem.shareURL.getter, 0, 0);
}

{
  void *v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  (*(void (**)(void, void))(v0[14] + 8))(v0[15], v0[13]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

{
  uint64_t v1;

  swift_task_dealloc();
  return _swift_task_switch(GenericMusicItem.shareURL.getter, 0, 0);
}

{
  void *v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  (*(void (**)(void, void))(v0[11] + 8))(v0[12], v0[10]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

{
  uint64_t v1;

  swift_task_dealloc();
  return _swift_task_switch(GenericMusicItem.shareURL.getter, 0, 0);
}

{
  void *v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  (*(void (**)(void, void))(v0[8] + 8))(v0[9], v0[7]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

{
  uint64_t v1;

  swift_task_dealloc();
  return _swift_task_switch(GenericMusicItem.shareURL.getter, 0, 0);
}

{
  void *v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  (*(void (**)(void, void))(v0[5] + 8))(v0[6], v0[4]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t GenericMusicItem.actionTitle.getter()
{
  uint64_t v66 = type metadata accessor for UploadedVideo();
  uint64_t v65 = *(void *)(v66 - 8);
  __chkstk_darwin(v66);
  uint64_t v64 = (char *)&v63 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = type metadata accessor for UploadedAudio();
  uint64_t v68 = *(void *)(v69 - 8);
  __chkstk_darwin(v69);
  uint64_t v67 = (char *)&v63 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = type metadata accessor for TVShow();
  uint64_t v71 = *(void *)(v72 - 8);
  __chkstk_darwin(v72);
  uint64_t v70 = (char *)&v63 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = type metadata accessor for TVSeason();
  uint64_t v77 = *(void *)(v78 - 8);
  __chkstk_darwin(v78);
  uint64_t v76 = (char *)&v63 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = type metadata accessor for TVEpisode();
  uint64_t v74 = *(void *)(v75 - 8);
  __chkstk_darwin(v75);
  uint64_t v73 = (char *)&v63 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = type metadata accessor for Station();
  uint64_t v80 = *(void *)(v81 - 8);
  __chkstk_darwin(v81);
  uint64_t v79 = (char *)&v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = type metadata accessor for Song();
  uint64_t v83 = *(void *)(v84 - 8);
  __chkstk_darwin(v84);
  uint64_t v82 = (char *)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = type metadata accessor for SocialProfile();
  uint64_t v86 = *(void *)(v87 - 8);
  __chkstk_darwin(v87);
  uint64_t v85 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = type metadata accessor for RecordLabel();
  uint64_t v89 = *(void *)(v90 - 8);
  __chkstk_darwin(v90);
  uint64_t v88 = (char *)&v63 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = type metadata accessor for RadioShow();
  uint64_t v92 = *(void *)(v93 - 8);
  __chkstk_darwin(v93);
  uint64_t v91 = (char *)&v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = type metadata accessor for Playlist();
  uint64_t v95 = *(void *)(v96 - 8);
  __chkstk_darwin(v96);
  uint64_t v94 = (char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = type metadata accessor for MusicVideo();
  uint64_t v98 = *(void *)(v99 - 8);
  __chkstk_darwin(v99);
  uint64_t v97 = (char *)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for MusicMovie();
  uint64_t v101 = *(void *)(v12 - 8);
  uint64_t v102 = v12;
  __chkstk_darwin(v12);
  uint64_t v100 = (char *)&v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Genre();
  uint64_t v104 = *(void *)(v14 - 8);
  uint64_t v105 = v14;
  __chkstk_darwin(v14);
  long long v103 = (char *)&v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for Curator();
  uint64_t v107 = *(void *)(v16 - 8);
  uint64_t v108 = v16;
  __chkstk_darwin(v16);
  long long v106 = (char *)&v63 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for Composer();
  uint64_t v110 = *(void *)(v18 - 8);
  uint64_t v111 = v18;
  __chkstk_darwin(v18);
  uint64_t v109 = (char *)&v63 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for Artist();
  uint64_t v113 = *(void *)(v20 - 8);
  uint64_t v114 = v20;
  __chkstk_darwin(v20);
  uint64_t v112 = (char *)&v63 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for Locale();
  __chkstk_darwin(v22 - 8);
  long long v116 = (char *)&v63 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for String.LocalizationValue();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v28 = (char *)&v63 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  uint64_t v30 = (char *)&v63 - v29;
  uint64_t v31 = type metadata accessor for Album();
  uint64_t v32 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v34 = (char *)&v63 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = type metadata accessor for GenericMusicItem();
  uint64_t v36 = *(void *)(v35 - 8);
  __chkstk_darwin(v35);
  uint64_t v38 = (char *)&v63 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v36 + 16))(v38, v115, v35);
  int v39 = (*(uint64_t (**)(char *, uint64_t))(v36 + 88))(v38, v35);
  if (v39 == enum case for GenericMusicItem.album(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v38, v35);
    (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v34, v38, v31);
    String.LocalizationValue.init(stringLiteral:)();
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v28, v30, v24);
    if (one-time initialization token for module != -1) {
      swift_once();
    }
    id v40 = (id)static NSBundle.module;
    static Locale.current.getter();
    uint64_t v41 = String.init(localized:table:bundle:locale:comment:)();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v30, v24);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v34, v31);
    return v41;
  }
  if (v39 == enum case for GenericMusicItem.artist(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v38, v35);
    uint64_t v43 = v112;
    uint64_t v42 = v113;
    uint64_t v44 = v38;
    uint64_t v45 = v114;
    (*(void (**)(char *, char *, uint64_t))(v113 + 32))(v112, v44, v114);
    String.LocalizationValue.init(stringLiteral:)();
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v28, v30, v24);
    if (one-time initialization token for module != -1) {
      swift_once();
    }
    id v46 = (id)static NSBundle.module;
    static Locale.current.getter();
    uint64_t v41 = String.init(localized:table:bundle:locale:comment:)();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v30, v24);
    uint64_t v47 = *(void (**)(char *, uint64_t))(v42 + 8);
    uint64_t v48 = v43;
    uint64_t v49 = v45;
    goto LABEL_9;
  }
  if (v39 == enum case for GenericMusicItem.composer(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v38, v35);
    uint64_t v51 = v109;
    uint64_t v50 = v110;
    uint64_t v52 = v111;
    (*(void (**)(char *, char *, uint64_t))(v110 + 32))(v109, v38, v111);
    String.LocalizationValue.init(stringLiteral:)();
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v28, v30, v24);
    if (one-time initialization token for module == -1) {
      goto LABEL_22;
    }
    goto LABEL_47;
  }
  if (v39 == enum case for GenericMusicItem.curator(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v38, v35);
    uint64_t v51 = v106;
    uint64_t v50 = v107;
    uint64_t v52 = v108;
    (*(void (**)(char *, char *, uint64_t))(v107 + 32))(v106, v38, v108);
    goto LABEL_21;
  }
  if (v39 == enum case for GenericMusicItem.genre(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v38, v35);
    uint64_t v51 = v103;
    uint64_t v50 = v104;
    uint64_t v52 = v105;
    (*(void (**)(char *, char *, uint64_t))(v104 + 32))(v103, v38, v105);
    goto LABEL_21;
  }
  if (v39 == enum case for GenericMusicItem.musicMovie(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v38, v35);
    uint64_t v51 = v100;
    uint64_t v50 = v101;
    uint64_t v52 = v102;
    (*(void (**)(char *, char *, uint64_t))(v101 + 32))(v100, v38, v102);
    goto LABEL_21;
  }
  if (v39 == enum case for GenericMusicItem.musicVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v38, v35);
    uint64_t v50 = v98;
    uint64_t v51 = v97;
    uint64_t v52 = v99;
    (*(void (**)(char *, char *, uint64_t))(v98 + 32))(v97, v38, v99);
LABEL_21:
    String.LocalizationValue.init(stringLiteral:)();
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v28, v30, v24);
    if (one-time initialization token for module == -1)
    {
LABEL_22:
      id v53 = (id)static NSBundle.module;
      static Locale.current.getter();
      uint64_t v41 = String.init(localized:table:bundle:locale:comment:)();
      (*(void (**)(char *, uint64_t))(v25 + 8))(v30, v24);
      (*(void (**)(char *, uint64_t))(v50 + 8))(v51, v52);
      return v41;
    }
LABEL_47:
    swift_once();
    goto LABEL_22;
  }
  if (v39 == enum case for GenericMusicItem.playlist(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v38, v35);
    uint64_t v55 = v95;
    uint64_t v56 = v94;
    uint64_t v35 = v96;
    (*(void (**)(char *, char *, uint64_t))(v95 + 32))(v94, v38, v96);
LABEL_38:
    String.LocalizationValue.init(stringLiteral:)();
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v28, v30, v24);
    if (one-time initialization token for module != -1) {
      swift_once();
    }
    id v57 = (id)static NSBundle.module;
    static Locale.current.getter();
    uint64_t v41 = String.init(localized:table:bundle:locale:comment:)();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v30, v24);
    uint64_t v47 = *(void (**)(char *, uint64_t))(v55 + 8);
    uint64_t v48 = v56;
LABEL_41:
    uint64_t v49 = v35;
LABEL_9:
    v47(v48, v49);
    return v41;
  }
  if (v39 == enum case for GenericMusicItem.radioShow(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v38, v35);
    uint64_t v55 = v92;
    uint64_t v56 = v91;
    uint64_t v35 = v93;
    (*(void (**)(char *, char *, uint64_t))(v92 + 32))(v91, v38, v93);
    goto LABEL_38;
  }
  if (v39 == enum case for GenericMusicItem.recordLabel(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v38, v35);
    uint64_t v55 = v89;
    uint64_t v56 = v88;
    uint64_t v35 = v90;
    (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v88, v38, v90);
    goto LABEL_38;
  }
  if (v39 == enum case for GenericMusicItem.socialProfile(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v38, v35);
    uint64_t v55 = v86;
    uint64_t v56 = v85;
    uint64_t v35 = v87;
    (*(void (**)(char *, char *, uint64_t))(v86 + 32))(v85, v38, v87);
    goto LABEL_38;
  }
  if (v39 == enum case for GenericMusicItem.song(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v38, v35);
    uint64_t v55 = v83;
    uint64_t v56 = v82;
    uint64_t v35 = v84;
    (*(void (**)(char *, char *, uint64_t))(v83 + 32))(v82, v38, v84);
    goto LABEL_38;
  }
  if (v39 == enum case for GenericMusicItem.station(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v38, v35);
    uint64_t v55 = v80;
    uint64_t v56 = v79;
    uint64_t v35 = v81;
    (*(void (**)(char *, char *, uint64_t))(v80 + 32))(v79, v38, v81);
    goto LABEL_38;
  }
  if (v39 == enum case for GenericMusicItem.tvEpisode(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v38, v35);
    uint64_t v55 = v74;
    uint64_t v56 = v73;
    uint64_t v35 = v75;
    (*(void (**)(char *, char *, uint64_t))(v74 + 32))(v73, v38, v75);
    goto LABEL_38;
  }
  if (v39 == enum case for GenericMusicItem.tvSeason(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v38, v35);
    (*(void (**)(char *, char *, uint64_t))(v77 + 32))(v76, v38, v78);
    String.LocalizationValue.init(stringLiteral:)();
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v28, v30, v24);
    if (one-time initialization token for module != -1) {
      swift_once();
    }
    id v58 = (id)static NSBundle.module;
    static Locale.current.getter();
    uint64_t v41 = String.init(localized:table:bundle:locale:comment:)();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v30, v24);
    (*(void (**)(char *, uint64_t))(v77 + 8))(v76, v78);
  }
  else if (v39 == enum case for GenericMusicItem.tvShow(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v38, v35);
    (*(void (**)(char *, char *, uint64_t))(v71 + 32))(v70, v38, v72);
    String.LocalizationValue.init(stringLiteral:)();
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v28, v30, v24);
    if (one-time initialization token for module != -1) {
      swift_once();
    }
    id v59 = (id)static NSBundle.module;
    static Locale.current.getter();
    uint64_t v41 = String.init(localized:table:bundle:locale:comment:)();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v30, v24);
    (*(void (**)(char *, uint64_t))(v71 + 8))(v70, v72);
  }
  else if (v39 == enum case for GenericMusicItem.uploadedAudio(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v38, v35);
    (*(void (**)(char *, char *, uint64_t))(v68 + 32))(v67, v38, v69);
    String.LocalizationValue.init(stringLiteral:)();
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v28, v30, v24);
    if (one-time initialization token for module != -1) {
      swift_once();
    }
    id v60 = (id)static NSBundle.module;
    static Locale.current.getter();
    uint64_t v41 = String.init(localized:table:bundle:locale:comment:)();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v30, v24);
    (*(void (**)(char *, uint64_t))(v68 + 8))(v67, v69);
  }
  else
  {
    if (v39 != enum case for GenericMusicItem.uploadedVideo(_:))
    {
      String.LocalizationValue.init(stringLiteral:)();
      (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v28, v30, v24);
      if (one-time initialization token for module != -1) {
        swift_once();
      }
      id v62 = (id)static NSBundle.module;
      static Locale.current.getter();
      uint64_t v41 = String.init(localized:table:bundle:locale:comment:)();
      (*(void (**)(char *, uint64_t))(v25 + 8))(v30, v24);
      uint64_t v47 = *(void (**)(char *, uint64_t))(v36 + 8);
      uint64_t v48 = v38;
      goto LABEL_41;
    }
    (*(void (**)(char *, uint64_t))(v36 + 96))(v38, v35);
    (*(void (**)(char *, char *, uint64_t))(v65 + 32))(v64, v38, v66);
    String.LocalizationValue.init(stringLiteral:)();
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v28, v30, v24);
    if (one-time initialization token for module != -1) {
      swift_once();
    }
    id v61 = (id)static NSBundle.module;
    static Locale.current.getter();
    uint64_t v41 = String.init(localized:table:bundle:locale:comment:)();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v30, v24);
    (*(void (**)(char *, uint64_t))(v65 + 8))(v64, v66);
  }
  return v41;
}

uint64_t GenericMusicItem.failureMessage.getter()
{
  uint64_t v74 = type metadata accessor for UploadedVideo();
  uint64_t v73 = *(void *)(v74 - 8);
  __chkstk_darwin(v74);
  uint64_t v72 = (char *)&v72 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = type metadata accessor for UploadedAudio();
  uint64_t v76 = *(void *)(v77 - 8);
  __chkstk_darwin(v77);
  uint64_t v75 = (char *)&v72 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = type metadata accessor for TVShow();
  uint64_t v79 = *(void *)(v80 - 8);
  __chkstk_darwin(v80);
  uint64_t v78 = (char *)&v72 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = type metadata accessor for TVSeason();
  uint64_t v86 = *(void *)(v87 - 8);
  __chkstk_darwin(v87);
  uint64_t v85 = (char *)&v72 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = type metadata accessor for TVEpisode();
  uint64_t v83 = *(void *)(v84 - 8);
  __chkstk_darwin(v84);
  uint64_t v82 = (char *)&v72 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = type metadata accessor for Station();
  uint64_t v89 = *(void *)(v90 - 8);
  __chkstk_darwin(v90);
  uint64_t v88 = (char *)&v72 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = type metadata accessor for Song();
  uint64_t v92 = *(void *)(v93 - 8);
  __chkstk_darwin(v93);
  uint64_t v91 = (char *)&v72 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = type metadata accessor for SocialProfile();
  uint64_t v95 = *(void *)(v96 - 8);
  __chkstk_darwin(v96);
  uint64_t v94 = (char *)&v72 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = type metadata accessor for RecordLabel();
  uint64_t v98 = *(void *)(v99 - 8);
  __chkstk_darwin(v99);
  uint64_t v97 = (char *)&v72 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = type metadata accessor for RadioShow();
  uint64_t v101 = *(void *)(v102 - 8);
  __chkstk_darwin(v102);
  uint64_t v100 = (char *)&v72 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = type metadata accessor for Playlist();
  uint64_t v104 = *(void *)(v105 - 8);
  __chkstk_darwin(v105);
  long long v103 = (char *)&v72 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v108 = type metadata accessor for MusicVideo();
  uint64_t v107 = *(void *)(v108 - 8);
  __chkstk_darwin(v108);
  long long v106 = (char *)&v72 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for MusicMovie();
  uint64_t v110 = *(void *)(v12 - 8);
  uint64_t v111 = v12;
  __chkstk_darwin(v12);
  uint64_t v109 = (char *)&v72 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Genre();
  uint64_t v113 = *(void *)(v14 - 8);
  uint64_t v114 = v14;
  __chkstk_darwin(v14);
  uint64_t v112 = (char *)&v72 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for Curator();
  uint64_t v116 = *(void *)(v16 - 8);
  uint64_t v117 = v16;
  __chkstk_darwin(v16);
  uint64_t v115 = (char *)&v72 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for Composer();
  uint64_t v119 = *(void *)(v18 - 8);
  uint64_t v120 = v18;
  __chkstk_darwin(v18);
  char v118 = (char *)&v72 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for Artist();
  uint64_t v122 = *(void *)(v20 - 8);
  uint64_t v123 = v20;
  __chkstk_darwin(v20);
  uint64_t v121 = (char *)&v72 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for Locale();
  __chkstk_darwin(v22 - 8);
  uint64_t v124 = (char *)&v72 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for String.LocalizationValue();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v28 = (char *)&v72 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  uint64_t v30 = (char *)&v72 - v29;
  uint64_t v31 = type metadata accessor for Album();
  uint64_t v32 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v34 = (char *)&v72 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = type metadata accessor for GenericMusicItem();
  uint64_t v36 = *(void *)(v35 - 8);
  __chkstk_darwin(v35);
  uint64_t v38 = (char *)&v72 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v36 + 16))(v38, v125, v35);
  uint64_t v39 = (*(uint64_t (**)(char *, uint64_t))(v36 + 88))(v38, v35);
  if (v39 == enum case for GenericMusicItem.album(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v38, v35);
    (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v34, v38, v31);
    String.LocalizationValue.init(stringLiteral:)();
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v28, v30, v24);
LABEL_3:
    if (one-time initialization token for module != -1) {
      swift_once();
    }
    id v40 = (id)static NSBundle.module;
    static Locale.current.getter();
    uint64_t v41 = String.init(localized:table:bundle:locale:comment:)();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v30, v24);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v34, v31);
    return v41;
  }
  uint64_t v81 = v24;
  uint64_t v42 = v25;
  if (v39 == enum case for GenericMusicItem.artist(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v38, v35);
    uint64_t v43 = v121;
    uint64_t v44 = v122;
    uint64_t v45 = v123;
    (*(void (**)(char *, char *, uint64_t))(v122 + 32))(v121, v38, v123);
    String.LocalizationValue.init(stringLiteral:)();
    uint64_t v46 = v42;
    uint64_t v47 = *(void (**)(char *, char *, uint64_t))(v42 + 16);
    uint64_t v48 = v81;
    v47(v28, v30, v81);
    if (one-time initialization token for module != -1) {
      swift_once();
    }
    id v49 = (id)static NSBundle.module;
    static Locale.current.getter();
    uint64_t v41 = String.init(localized:table:bundle:locale:comment:)();
    (*(void (**)(char *, uint64_t))(v46 + 8))(v30, v48);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v43, v45);
    return v41;
  }
  if (v39 == enum case for GenericMusicItem.composer(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v38, v35);
    uint64_t v52 = v118;
    uint64_t v51 = v119;
    uint64_t v53 = v120;
    (*(void (**)(char *, char *, uint64_t))(v119 + 32))(v118, v38, v120);
    String.LocalizationValue.init(stringLiteral:)();
    uint64_t v54 = v81;
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v28, v30, v81);
    if (one-time initialization token for module != -1) {
      swift_once();
    }
    id v55 = (id)static NSBundle.module;
    static Locale.current.getter();
    uint64_t v41 = String.init(localized:table:bundle:locale:comment:)();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v30, v54);
    (*(void (**)(char *, uint64_t))(v51 + 8))(v52, v53);
    return v41;
  }
  if (v39 == enum case for GenericMusicItem.curator(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v38, v35);
    uint64_t v34 = v115;
    uint64_t v32 = v116;
    uint64_t v31 = v117;
    (*(void (**)(char *, char *, uint64_t))(v116 + 32))(v115, v38, v117);
LABEL_23:
    String.LocalizationValue.init(stringLiteral:)();
    uint64_t v24 = v81;
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v28, v30, v81);
    goto LABEL_3;
  }
  if (v39 == enum case for GenericMusicItem.genre(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v38, v35);
    uint64_t v34 = v112;
    uint64_t v32 = v113;
    uint64_t v31 = v114;
    (*(void (**)(char *, char *, uint64_t))(v113 + 32))(v112, v38, v114);
    goto LABEL_23;
  }
  if (v39 == enum case for GenericMusicItem.musicMovie(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v38, v35);
    uint64_t v34 = v109;
    uint64_t v32 = v110;
    uint64_t v31 = v111;
    (*(void (**)(char *, char *, uint64_t))(v110 + 32))(v109, v38, v111);
    goto LABEL_23;
  }
  if (v39 == enum case for GenericMusicItem.musicVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v38, v35);
    uint64_t v32 = v107;
    uint64_t v34 = v106;
    uint64_t v31 = v108;
    (*(void (**)(char *, char *, uint64_t))(v107 + 32))(v106, v38, v108);
    goto LABEL_23;
  }
  if (v39 == enum case for GenericMusicItem.playlist(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v38, v35);
    uint64_t v56 = v104;
    id v57 = v103;
    id v58 = v38;
    uint64_t v59 = v105;
    (*(void (**)(char *, char *, uint64_t))(v104 + 32))(v103, v58, v105);
LABEL_38:
    String.LocalizationValue.init(stringLiteral:)();
    uint64_t v66 = v81;
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v28, v30, v81);
    if (one-time initialization token for module != -1) {
      swift_once();
    }
    id v67 = (id)static NSBundle.module;
    static Locale.current.getter();
    uint64_t v41 = String.init(localized:table:bundle:locale:comment:)();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v30, v66);
    (*(void (**)(char *, uint64_t))(v56 + 8))(v57, v59);
    return v41;
  }
  if (v39 == enum case for GenericMusicItem.radioShow(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v38, v35);
    uint64_t v56 = v101;
    id v57 = v100;
    id v60 = v38;
    uint64_t v59 = v102;
    (*(void (**)(char *, char *, uint64_t))(v101 + 32))(v100, v60, v102);
    goto LABEL_38;
  }
  if (v39 == enum case for GenericMusicItem.recordLabel(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v38, v35);
    uint64_t v56 = v98;
    id v57 = v97;
    id v61 = v38;
    uint64_t v59 = v99;
    (*(void (**)(char *, char *, uint64_t))(v98 + 32))(v97, v61, v99);
    goto LABEL_38;
  }
  if (v39 == enum case for GenericMusicItem.socialProfile(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v38, v35);
    uint64_t v56 = v95;
    id v57 = v94;
    id v62 = v38;
    uint64_t v59 = v96;
    (*(void (**)(char *, char *, uint64_t))(v95 + 32))(v94, v62, v96);
    goto LABEL_38;
  }
  if (v39 == enum case for GenericMusicItem.song(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v38, v35);
    uint64_t v56 = v92;
    id v57 = v91;
    uint64_t v63 = v38;
    uint64_t v59 = v93;
    (*(void (**)(char *, char *, uint64_t))(v92 + 32))(v91, v63, v93);
    goto LABEL_38;
  }
  if (v39 == enum case for GenericMusicItem.station(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v38, v35);
    uint64_t v56 = v89;
    id v57 = v88;
    uint64_t v64 = v38;
    uint64_t v59 = v90;
    (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v88, v64, v90);
    goto LABEL_38;
  }
  if (v39 == enum case for GenericMusicItem.tvEpisode(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v38, v35);
    uint64_t v56 = v83;
    id v57 = v82;
    uint64_t v65 = v38;
    uint64_t v59 = v84;
    (*(void (**)(char *, char *, uint64_t))(v83 + 32))(v82, v65, v84);
    goto LABEL_38;
  }
  if (v39 == enum case for GenericMusicItem.tvSeason(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v38, v35);
    (*(void (**)(char *, char *, uint64_t))(v86 + 32))(v85, v38, v87);
    String.LocalizationValue.init(stringLiteral:)();
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v28, v30, v81);
    if (one-time initialization token for module != -1) {
      swift_once();
    }
    id v68 = (id)static NSBundle.module;
    static Locale.current.getter();
    uint64_t v41 = String.init(localized:table:bundle:locale:comment:)();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v30, v81);
    (*(void (**)(char *, uint64_t))(v86 + 8))(v85, v87);
  }
  else if (v39 == enum case for GenericMusicItem.tvShow(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v38, v35);
    (*(void (**)(char *, char *, uint64_t))(v79 + 32))(v78, v38, v80);
    String.LocalizationValue.init(stringLiteral:)();
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v28, v30, v81);
    if (one-time initialization token for module != -1) {
      swift_once();
    }
    id v69 = (id)static NSBundle.module;
    static Locale.current.getter();
    uint64_t v41 = String.init(localized:table:bundle:locale:comment:)();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v30, v81);
    (*(void (**)(char *, uint64_t))(v79 + 8))(v78, v80);
  }
  else if (v39 == enum case for GenericMusicItem.uploadedAudio(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v38, v35);
    (*(void (**)(char *, char *, uint64_t))(v76 + 32))(v75, v38, v77);
    String.LocalizationValue.init(stringLiteral:)();
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v28, v30, v81);
    if (one-time initialization token for module != -1) {
      swift_once();
    }
    id v70 = (id)static NSBundle.module;
    static Locale.current.getter();
    uint64_t v41 = String.init(localized:table:bundle:locale:comment:)();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v30, v81);
    (*(void (**)(char *, uint64_t))(v76 + 8))(v75, v77);
  }
  else if (v39 == enum case for GenericMusicItem.uploadedVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v38, v35);
    (*(void (**)(char *, char *, uint64_t))(v73 + 32))(v72, v38, v74);
    String.LocalizationValue.init(stringLiteral:)();
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v28, v30, v81);
    if (one-time initialization token for module != -1) {
      swift_once();
    }
    id v71 = (id)static NSBundle.module;
    static Locale.current.getter();
    uint64_t v41 = String.init(localized:table:bundle:locale:comment:)();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v30, v81);
    (*(void (**)(char *, uint64_t))(v73 + 8))(v72, v74);
  }
  else
  {
    uint64_t v41 = GenericMusicItem.failureMessage.getter(v39, v35);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v38, v35);
  }
  return v41;
}

uint64_t protocol witness for ShareableMusicItem.shareURL.getter in conformance GenericMusicItem(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = partial apply for closure #1 in static MusicEngagementExtension.performRequest(with:completion:);
  return GenericMusicItem.shareURL.getter(a1);
}

uint64_t protocol witness for ShareableMusicItem.augmentMetadata(_:) in conformance GenericMusicItem(uint64_t a1)
{
  void v2[2] = a1;
  v2[3] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  v2[4] = swift_task_alloc();
  return _swift_task_switch(protocol witness for ShareableMusicItem.augmentMetadata(_:) in conformance GenericMusicItem, 0, 0);
}

uint64_t protocol witness for ShareableMusicItem.augmentMetadata(_:) in conformance GenericMusicItem()
{
  *(void *)(v0 + 40) = **(void **)(v0 + 16);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v1;
  *uint64_t v1 = v0;
  v1[1] = protocol witness for ShareableMusicItem.augmentMetadata(_:) in conformance GenericMusicItem;
  uint64_t v2 = *(void *)(v0 + 32);
  return GenericMusicItem.shareURL.getter(v2);
}

{
  uint64_t v1;

  swift_task_dealloc();
  return _swift_task_switch(protocol witness for ShareableMusicItem.augmentMetadata(_:) in conformance GenericMusicItem, 0, 0);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSURL *v4;
  void *v5;
  void *v6;
  uint64_t (*v7)(void);
  uint64_t v9;

  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = type metadata accessor for URL();
  uint64_t v3 = *(void *)(v2 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    uint64_t v5 = 0;
  }
  else
  {
    URL._bridgeToObjectiveC()(v4);
    uint64_t v5 = v6;
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  }
  [*(id *)(v0 + 40) setOriginalURL:v5];

  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t one-time initialization function for sharing()
{
  uint64_t v0 = type metadata accessor for Logger();
  __swift_allocate_value_buffer(v0, static Logger.sharing);
  __swift_project_value_buffer(v0, (uint64_t)static Logger.sharing);
  return Logger.init(subsystem:category:)();
}

uint64_t implicit closure #1 in OSLogInterpolation.appendInterpolation(_:privacy:attributes:)(void (*a1)(void))
{
  a1();

  return _swift_stdlib_bridgeErrorToNSError();
}

uint64_t static MPPropertySet.with(_:)(uint64_t (*a1)(void))
{
  return a1();
}

void closure #1 in OSLogArguments.append(_:)(void **a1, void **a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v6 = (void *)a4();
  uint64_t v7 = *a1;
  *uint64_t v7 = v6;
  *a1 = v7 + 1;
  uint64_t v8 = *a2;
  if (*a2)
  {
    *uint64_t v8 = v6;
    *a2 = v8 + 1;
  }
  else
  {
  }
}

size_t specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(size_t a1, int64_t a2, char a3)
{
  size_t result = specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

{
  size_t *v3;
  size_t result;

  size_t result = specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

{
  size_t *v3;
  size_t result;

  size_t result = specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

{
  size_t *v3;
  size_t result;

  size_t result = specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1, a2, a3, (void *)*v3, &demangling cache variable for type metadata for _ContiguousArrayStorage<Razzmatazz>, type metadata accessor for Razzmatazz);
  *uint64_t v3 = result;
  return result;
}

{
  size_t *v3;
  size_t result;

  size_t result = specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1, a2, a3, (void *)*v3, &demangling cache variable for type metadata for _ContiguousArrayStorage<Artist>, (uint64_t (*)(void))&type metadata accessor for Artist);
  *uint64_t v3 = result;
  return result;
}

char *specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(char *a1, int64_t a2, char a3)
{
  size_t result = specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

{
  char **v3;
  char *result;

  size_t result = specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

{
  char **v3;
  char *result;

  size_t result = specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

{
  char **v3;
  char *result;

  size_t result = specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

{
  char **v3;
  char *result;

  size_t result = specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

{
  char **v3;
  char *result;

  size_t result = specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

{
  char **v3;
  char *result;

  size_t result = specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

{
  char **v3;
  char *result;

  size_t result = specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

{
  char **v3;
  char *result;

  size_t result = specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

{
  char **v3;
  char *result;

  size_t result = specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

{
  char **v3;
  char *result;

  size_t result = specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

void *specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(void *a1, int64_t a2, char a3)
{
  size_t result = specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

{
  void **v3;
  void *result;

  size_t result = specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

{
  void **v3;
  void *result;

  size_t result = specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

{
  void **v3;
  void *result;

  size_t result = specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

{
  void **v3;
  void *result;

  size_t result = specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

size_t specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(size_t result, int64_t a2, char a3, void *a4)
{
  char v5 = result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_30:
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<URL?>);
  uint64_t v10 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?)
                  - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  size_t result = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (result - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_29;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(result - v12) / v11);
LABEL_19:
  uint64_t v15 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?)
                  - 8);
  if (v5)
  {
    if (v13 < a4
      || (unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80),
          (char *)v13 + v16 >= (char *)a4 + v16 + *(void *)(v15 + 72) * v8))
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return (size_t)v13;
}

{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  void *v13;
  uint64_t v15;
  unint64_t v16;

  char v5 = result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_30:
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<SharePlayTogetherSession.Participant>);
  uint64_t v10 = *(void *)(type metadata accessor for SharePlayTogetherSession.Participant(0) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  size_t result = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (result - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_29;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(result - v12) / v11);
LABEL_19:
  uint64_t v15 = *(void *)(type metadata accessor for SharePlayTogetherSession.Participant(0) - 8);
  if (v5)
  {
    if (v13 < a4
      || (unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80),
          (char *)v13 + v16 >= (char *)a4 + v16 + *(void *)(v15 + 72) * v8))
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return (size_t)v13;
}

{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  void *v13;
  uint64_t v15;
  unint64_t v16;

  char v5 = result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_30:
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<IndexPath>);
  uint64_t v10 = *(void *)(type metadata accessor for IndexPath() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  size_t result = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (result - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_29;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(result - v12) / v11);
LABEL_19:
  uint64_t v15 = *(void *)(type metadata accessor for IndexPath() - 8);
  if (v5)
  {
    if (v13 < a4
      || (unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80),
          (char *)v13 + v16 >= (char *)a4 + v16 + *(void *)(v15 + 72) * v8))
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return (size_t)v13;
}

char *specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<ApplicationCapabilities.Tabs.Configuration>);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    int64_t v12 = v11 - 32;
    if (v11 < 32) {
      int64_t v12 = v11 - 31;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = v12 & 0xFFFFFFFFFFFFFFFELL;
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[2 * v8]) {
      memmove(v13, v14, 2 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 2 * v8);
  }
  swift_release();
  return v10;
}

{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Alert.Action>);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 56);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  int64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[56 * v8]) {
      memmove(v12, v13, 56 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    int64_t v12 = v11 - 32;
    if (v11 < 32) {
      int64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Float>);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    int64_t v12 = v11 - 32;
    if (v11 < 32) {
      int64_t v12 = v11 - 29;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 2);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[4 * v8]) {
      memmove(v13, v14, 4 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 4 * v8);
  }
  swift_release();
  return v10;
}

{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(hue: CGFloat, saturation: CGFloat, brightness: CGFloat, alpha: CGFloat)>);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    int64_t v12 = v11 - 32;
    if (v11 < 32) {
      int64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 32 * v8);
  }
  swift_release();
  return v10;
}

{
  char v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<MPModelObject.LoggingComponent>);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  int64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v12, v13, v8);
  }
  swift_release();
  return v10;
}

{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&_ss23_ContiguousArrayStorageCyypGMD_1);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    int64_t v12 = v11 - 32;
    if (v11 < 32) {
      int64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Lyrics.Word>);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  int64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[40 * v8]) {
      memmove(v12, v13, 40 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Lyrics.Syllable>);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 56);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  int64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[56 * v8]) {
      memmove(v12, v13, 56 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Double>);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    int64_t v12 = v11 - 32;
    if (v11 < 32) {
      int64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 8 * v8);
  }
  swift_release();
  return v10;
}

{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CGRect>);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    int64_t v12 = v11 - 32;
    if (v11 < 32) {
      int64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 32 * v8);
  }
  swift_release();
  return v10;
}

{
  char v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<SymbolButton.Intent>);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  int64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v12, v13, v8);
  }
  swift_release();
  return v10;
}

{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&_ss23_ContiguousArrayStorageCy7SwiftUI4TextVGMD_0);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    int64_t v12 = v11 - 32;
    if (v11 < 32) {
      int64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

void *specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<PlayerCommand>);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  if (v5)
  {
    if (v10 != a4 || v10 + 4 >= &a4[5 * v8 + 4]) {
      memmove(v10 + 4, a4 + 4, 40 * v8);
    }
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PlayerCommand);
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  int64_t v11;
  uint64_t v12;

  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<[String]>);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    int64_t v12 = v11 - 32;
    if (v11 < 32) {
      int64_t v12 = v11 - 25;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  if (v5)
  {
    if (v10 != a4 || v10 + 4 >= &a4[v8 + 4]) {
      memmove(v10 + 4, a4 + 4, 8 * v8);
    }
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String]);
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  int64_t v11;
  uint64_t v12;

  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(key: String, value: String)>);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    int64_t v12 = v11 - 32;
    if (v11 < 32) {
      int64_t v12 = v11 - 1;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  if (v5)
  {
    if (v10 != a4 || v10 + 4 >= &a4[4 * v8 + 4]) {
      memmove(v10 + 4, a4 + 4, 32 * v8);
    }
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (key: String, value: String));
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  size_t v11;

  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<LyricsLine>);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  if (v5)
  {
    if (v10 != a4 || v10 + 4 >= &a4[5 * v8 + 4]) {
      memmove(v10 + 4, a4 + 4, 40 * v8);
    }
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for LyricsLine);
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  int64_t v11;
  uint64_t v12;

  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(Lyrics.Word, CTRunRef, [CGPoint], [Int])>);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    int64_t v12 = v11 - 32;
    if (v11 < 32) {
      int64_t v12 = v11 + 31;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 6);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  if (v5)
  {
    if (v10 != a4 || v10 + 4 >= &a4[8 * v8 + 4]) {
      memmove(v10 + 4, a4 + 4, v8 << 6);
    }
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Lyrics.Word, CTRunRef, [CGPoint], [Int]));
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  int64_t v11;
  uint64_t v12;

  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(lineView: SyncedLyricsLineView, visible: Bool)>);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    int64_t v12 = v11 - 32;
    if (v11 < 32) {
      int64_t v12 = v11 - 17;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  if (v5)
  {
    if (v10 != a4 || v10 + 4 >= &a4[2 * v8 + 4]) {
      memmove(v10 + 4, a4 + 4, 16 * v8);
    }
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (lineView: SyncedLyricsLineView, visible: Bool));
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

uint64_t specialized Actions.Share.Context.init(item:applicationCapabilities:shareSheetPresenting:metricsReportingContext:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t (**a5)()@<X8>)
{
  uint64_t v30 = a4;
  uint64_t v33 = a3;
  uint64_t v32 = a1;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  uint64_t v31 = *(void *)(v10 - 8);
  uint64_t v11 = *(void *)(v31 + 64);
  uint64_t v12 = __chkstk_darwin(v10 - 8);
  uint64_t v13 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v29 - v14;
  outlined init with copy of AlertPresenting(a1, (uint64_t)v37);
  outlined init with copy of AlertPresenting(a3, (uint64_t)v36);
  outlined init with copy of AlertPresenting(a1, (uint64_t)v35);
  uint64_t v16 = swift_allocObject();
  outlined init with take of AlertPresenting(v36, v16 + 16);
  outlined init with take of AlertPresenting(v35, v16 + 56);
  outlined init with copy of (String, Any)(a4, (uint64_t)v15, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  outlined init with copy of AlertPresenting((uint64_t)v37, (uint64_t)v34);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a2;
  outlined init with take of AlertPresenting(v34, v17 + 24);
  uint64_t v18 = (uint64_t (*)())swift_allocObject();
  uint64_t v29 = closure #1 in Actions.Share.Context.init(item:applicationCapabilities:shareAction:metricsReportingContext:)partial apply;
  *((void *)v18 + 2) = closure #1 in Actions.Share.Context.init(item:applicationCapabilities:shareAction:metricsReportingContext:)partial apply;
  *((void *)v18 + 3) = v17;
  *((void *)v18 + 4) = &async function pointer to partial apply for closure #1 in Actions.Share.Context.init(item:applicationCapabilities:shareSheetPresenting:metricsReportingContext:);
  *((void *)v18 + 5) = v16;
  outlined init with copy of (String, Any)((uint64_t)v15, (uint64_t)v13, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  outlined init with copy of AlertPresenting((uint64_t)v37, (uint64_t)v34);
  unint64_t v19 = (*(unsigned __int8 *)(v31 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
  unint64_t v20 = (v11 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v21 = swift_allocObject();
  outlined init with take of Actions.MetricsReportingContext?((uint64_t)v13, v21 + v19);
  outlined init with take of AlertPresenting(v34, v21 + v20);
  uint64_t v23 = v38;
  uint64_t v22 = v39;
  __swift_project_boxed_opaque_existential_0Tm(v37, v38);
  uint64_t v24 = *(uint64_t (**)(uint64_t, uint64_t))(v22 + 32);
  swift_retain();
  uint64_t v25 = v24(v23, v22);
  uint64_t v27 = v26;
  outlined destroy of TaskPriority?((uint64_t)v15, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v37);
  outlined destroy of TaskPriority?(v30, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  __swift_destroy_boxed_opaque_existential_0Tm(v33);
  uint64_t result = __swift_destroy_boxed_opaque_existential_0Tm(v32);
  *a5 = v29;
  a5[1] = (uint64_t (*)())v17;
  a5[2] = (uint64_t (*)())&closure #2 in Actions.Share.Context.init(item:applicationCapabilities:shareAction:metricsReportingContext:)partial apply;
  a5[3] = v18;
  a5[4] = (uint64_t (*)())&closure #3 in Actions.Share.Context.init(item:applicationCapabilities:shareAction:metricsReportingContext:)partial apply;
  a5[5] = (uint64_t (*)())v21;
  a5[6] = (uint64_t (*)())v25;
  a5[7] = v27;
  return result;
}

uint64_t sub_1000A1468()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

unint64_t partial apply for closure #1 in Actions.Share.Context.init(item:applicationCapabilities:shareAction:metricsReportingContext:)()
{
  return closure #1 in Actions.Share.Context.init(item:applicationCapabilities:shareAction:metricsReportingContext:)(*(void *)(v0 + 16), (void *)(v0 + 24));
}

uint64_t partial apply for closure #2 in Actions.Share.Context.init(item:applicationCapabilities:shareAction:metricsReportingContext:)()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v5 = v0[4];
  uint64_t v4 = v0[5];
  unint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  *unint64_t v6 = v1;
  v6[1] = closure #3 in static Actions.ReportConcern.action(context:);
  return closure #2 in Actions.Share.Context.init(item:applicationCapabilities:shareAction:metricsReportingContext:)(v2, v3, v5, v4);
}

uint64_t partial apply for closure #3 in Actions.Share.Context.init(item:applicationCapabilities:shareAction:metricsReportingContext:)()
{
  uint64_t v2 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?)
                 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = v0 + v3;
  uint64_t v5 = v0 + ((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  *unint64_t v6 = v1;
  v6[1] = closure #3 in static Actions.ReportConcern.action(context:);
  return closure #3 in Actions.Share.Context.init(item:applicationCapabilities:shareAction:metricsReportingContext:)(v4, v5);
}

uint64_t partial apply for closure #1 in Actions.ShareLyrics.Context.init(item:canShareLyrics:shareLyrics:metricsReportingContext:)()
{
  uint64_t v2 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?)
                 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = v0 + v3;
  uint64_t v5 = v0 + ((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  *unint64_t v6 = v1;
  v6[1] = partial apply for closure #1 in static MusicEngagementExtension.performRequest(with:completion:);
  return closure #1 in Actions.ShareLyrics.Context.init(item:canShareLyrics:shareLyrics:metricsReportingContext:)(v4, v5);
}

uint64_t sub_1000A1770@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return keypath_get_23Tm(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of AlbumFilter.id.getter, a2);
}

uint64_t sub_1000A1788@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return keypath_get_23Tm(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of ArtistFilter.id.getter, a2);
}

uint64_t sub_1000A17A0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return keypath_get_23Tm(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of MusicMovieFilter.id.getter, a2);
}

uint64_t sub_1000A17B8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return keypath_get_23Tm(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of MusicVideoFilter.id.getter, a2);
}

uint64_t sub_1000A17D0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return keypath_get_23Tm(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of PlaylistFilter.id.getter, a2);
}

uint64_t sub_1000A17E8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return keypath_get_23Tm(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of SongFilter.id.getter, a2);
}

uint64_t sub_1000A1800@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return keypath_get_23Tm(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of StationFilter.id.getter, a2);
}

uint64_t sub_1000A1818@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return keypath_get_23Tm(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of TVEpisodeFilter.id.getter, a2);
}

uint64_t sub_1000A1830@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return keypath_get_23Tm(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of TVSeasonFilter.id.getter, a2);
}

uint64_t sub_1000A1848@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return keypath_get_23Tm(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of TVShowFilter.id.getter, a2);
}

uint64_t sub_1000A1860@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return keypath_get_23Tm(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of UploadedAudioFilter.id.getter, a2);
}

uint64_t sub_1000A1878@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return keypath_get_23Tm(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of UploadedVideoFilter.id.getter, a2);
}

uint64_t keypath_get_23Tm@<X0>(void *a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X3>, uint64_t *a3@<X8>)
{
  uint64_t v5 = a1[3];
  uint64_t v6 = a1[4];
  __swift_project_boxed_opaque_existential_0Tm(a1, v5);
  uint64_t result = a2(v5, v6);
  *a3 = result;
  a3[1] = v8;
  return result;
}

uint64_t instantiation function for generic protocol witness table for Composer(uint64_t a1)
{
  uint64_t result = lazy protocol witness table accessor for type Playlist.Variant and conformance Playlist.Variant(&lazy protocol witness table cache variable for type Composer and conformance Composer, (void (*)(uint64_t))&type metadata accessor for Composer);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t instantiation function for generic protocol witness table for EditorialItem(uint64_t a1)
{
  uint64_t result = lazy protocol witness table accessor for type Playlist.Variant and conformance Playlist.Variant(&lazy protocol witness table cache variable for type EditorialItem and conformance EditorialItem, (void (*)(uint64_t))&type metadata accessor for EditorialItem);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t instantiation function for generic protocol witness table for MusicMovie(uint64_t a1)
{
  uint64_t result = lazy protocol witness table accessor for type Playlist.Variant and conformance Playlist.Variant(&lazy protocol witness table cache variable for type MusicMovie and conformance MusicMovie, (void (*)(uint64_t))&type metadata accessor for MusicMovie);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t instantiation function for generic protocol witness table for SocialProfile(uint64_t a1)
{
  uint64_t result = lazy protocol witness table accessor for type Playlist.Variant and conformance Playlist.Variant(&lazy protocol witness table cache variable for type SocialProfile and conformance SocialProfile, (void (*)(uint64_t))&type metadata accessor for SocialProfile);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t instantiation function for generic protocol witness table for TVEpisode(uint64_t a1)
{
  uint64_t result = lazy protocol witness table accessor for type Playlist.Variant and conformance Playlist.Variant(&lazy protocol witness table cache variable for type TVEpisode and conformance TVEpisode, (void (*)(uint64_t))&type metadata accessor for TVEpisode);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t instantiation function for generic protocol witness table for TVSeason(uint64_t a1)
{
  uint64_t result = lazy protocol witness table accessor for type Playlist.Variant and conformance Playlist.Variant(&lazy protocol witness table cache variable for type TVSeason and conformance TVSeason, (void (*)(uint64_t))&type metadata accessor for TVSeason);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t instantiation function for generic protocol witness table for TVShow(uint64_t a1)
{
  uint64_t result = lazy protocol witness table accessor for type Playlist.Variant and conformance Playlist.Variant(&lazy protocol witness table cache variable for type TVShow and conformance TVShow, (void (*)(uint64_t))&type metadata accessor for TVShow);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t instantiation function for generic protocol witness table for UploadedAudio(uint64_t a1)
{
  uint64_t result = lazy protocol witness table accessor for type Playlist.Variant and conformance Playlist.Variant(&lazy protocol witness table cache variable for type UploadedAudio and conformance UploadedAudio, (void (*)(uint64_t))&type metadata accessor for UploadedAudio);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t instantiation function for generic protocol witness table for UploadedVideo(uint64_t a1)
{
  uint64_t result = lazy protocol witness table accessor for type Playlist.Variant and conformance Playlist.Variant(&lazy protocol witness table cache variable for type UploadedVideo and conformance UploadedVideo, (void (*)(uint64_t))&type metadata accessor for UploadedVideo);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t instantiation function for generic protocol witness table for GenericMusicItem(uint64_t a1)
{
  uint64_t result = lazy protocol witness table accessor for type Playlist.Variant and conformance Playlist.Variant(&lazy protocol witness table cache variable for type GenericMusicItem and conformance GenericMusicItem, (void (*)(uint64_t))&type metadata accessor for GenericMusicItem);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t lazy protocol witness table accessor for type Playlist.Variant and conformance Playlist.Variant(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for Actions.Share()
{
  return &type metadata for Actions.Share;
}

uint64_t destroy for Actions.Share.Context()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Actions.Share.Context(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v3 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v3;
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for Actions.Share.Context(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_retain();
  swift_release();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_retain();
  swift_release();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for Actions.Share.Context(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release();
  uint64_t v4 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for Actions.Share.Context()
{
  return &type metadata for Actions.Share.Context;
}

ValueMetadata *type metadata accessor for Actions.ShareLyrics()
{
  return &type metadata for Actions.ShareLyrics;
}

ValueMetadata *type metadata accessor for Actions.ShareLyrics.Context()
{
  return &type metadata for Actions.ShareLyrics.Context;
}

uint64_t sub_1000A1EB0()
{
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 56);

  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in Actions.Share.Context.init(item:applicationCapabilities:shareSheetPresenting:metricsReportingContext:)()
{
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = closure #3 in static Actions.ReportConcern.action(context:);
  return closure #1 in Actions.Share.Context.init(item:applicationCapabilities:shareSheetPresenting:metricsReportingContext:)(v0 + 16, v0 + 56);
}

uint64_t objectdestroy_5Tm_0()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 24);

  return swift_deallocObject();
}

uint64_t objectdestroy_8Tm_0()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t objectdestroy_12Tm()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?)
                 - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = v0 + v2;
  uint64_t v5 = type metadata accessor for Actions.MetricsReportingContext();
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v0 + v2, 1, v5))
  {
    if (*(void *)(v4 + 8) >= 0xBuLL) {
      swift_bridgeObjectRelease();
    }
    uint64_t v6 = v4 + *(int *)(v5 + 20);
    uint64_t v7 = type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v8 = v6 + *(int *)(v7 + 24);
      uint64_t v9 = type metadata accessor for URL();
      uint64_t v11 = *(void *)(v9 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v8, 1, v9)) {
        (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v8, v9);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + ((v3 + v2 + 7) & 0xFFFFFFFFFFFFFFF8));

  return swift_deallocObject();
}

uint64_t Actions.Favorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, long long *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t (**a9)()@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v53 = a7;
  uint64_t v54 = a8;
  uint64_t v55 = a6;
  uint64_t v56 = a9;
  uint64_t v49 = a4;
  uint64_t v50 = a5;
  uint64_t v51 = a3;
  uint64_t v58 = a2;
  uint64_t v12 = *(void *)(a10 - 8);
  uint64_t v57 = a11;
  uint64_t v13 = __chkstk_darwin(a1);
  uint64_t v48 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v44 = (char *)&v41 - v16;
  uint64_t v18 = v17;
  uint64_t v47 = v17;
  __chkstk_darwin(v15);
  unint64_t v20 = (char *)&v41 - v19;
  uint64_t v43 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  uint64_t v45 = a1;
  v43((char *)&v41 - v19, a1, a10);
  uint64_t v46 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v21 = (v46 + 40) & ~v46;
  uint64_t v22 = (uint64_t (*)())swift_allocObject();
  uint64_t v52 = v22;
  *((void *)v22 + 2) = a10;
  *((void *)v22 + 3) = a11;
  uint64_t v23 = v58;
  *((void *)v22 + 4) = v58;
  uint64_t v42 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  v42((char *)v22 + v21, v20, a10);
  uint64_t v24 = v44;
  v43(v44, a1, a10);
  unint64_t v25 = (v21 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v26 = (v25 + 47) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v27 = (uint64_t (*)())swift_allocObject();
  uint64_t v28 = v57;
  *((void *)v27 + 2) = a10;
  *((void *)v27 + 3) = v28;
  *((void *)v27 + 4) = v23;
  uint64_t v29 = v24;
  uint64_t v30 = (void (*)(char *, uint64_t, uint64_t))v42;
  v42((char *)v27 + v21, v29, a10);
  outlined init with take of PresentationSource?(v49, (uint64_t)v27 + v25, &demangling cache variable for type metadata for NoticePresenting?);
  outlined init with take of PresentationSource?(v50, (uint64_t)v27 + v26, &demangling cache variable for type metadata for PresentationSource?);
  outlined init with take of AlertPresenting(v51, (uint64_t)v27 + ((v26 + 79) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v31 = v48;
  v30(v48, v45, a10);
  uint64_t v32 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?)
                  - 8);
  unint64_t v33 = (*(unsigned __int8 *)(v32 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
  unint64_t v34 = (*(void *)(v32 + 64) + v46 + v33) & ~v46;
  uint64_t v35 = (uint64_t (*)())swift_allocObject();
  uint64_t v36 = v57;
  *((void *)v35 + 2) = a10;
  *((void *)v35 + 3) = v36;
  uint64_t v37 = v54;
  *((void *)v35 + 4) = v53;
  *((void *)v35 + 5) = v37;
  outlined init with take of PresentationSource?(v55, (uint64_t)v35 + v33, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  v30((char *)v35 + v34, (uint64_t)v31, a10);
  uint64_t result = swift_retain();
  uint64_t v39 = v56;
  id v40 = v52;
  *uint64_t v56 = partial apply for closure #1 in Actions.Favorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:);
  v39[1] = v40;
  v39[2] = (uint64_t (*)())&async function pointer to partial apply for closure #2 in Actions.Favorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:);
  v39[3] = v27;
  v39[4] = (uint64_t (*)())&async function pointer to partial apply for closure #3 in Actions.Favorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:);
  v39[5] = v35;
  return result;
}

uint64_t static Actions.Favorite.action(context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return static Actions.ShowSongCredits.action(context:)(a1, 10, (uint64_t)closure #1 in static Actions.ShowSongCredits.action(context:), (uint64_t)&async function pointer to closure #2 in static Actions.Favorite.action(context:), (uint64_t)&async function pointer to closure #3 in static Actions.Favorite.action(context:), a2);
}

uint64_t Actions.UndoFavorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, long long *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t (**a9)()@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v53 = a7;
  uint64_t v54 = a8;
  uint64_t v55 = a6;
  uint64_t v56 = a9;
  uint64_t v49 = a4;
  uint64_t v50 = a5;
  uint64_t v51 = a3;
  uint64_t v58 = a2;
  uint64_t v12 = *(void *)(a10 - 8);
  uint64_t v57 = a11;
  uint64_t v13 = __chkstk_darwin(a1);
  uint64_t v48 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v44 = (char *)&v41 - v16;
  uint64_t v18 = v17;
  uint64_t v47 = v17;
  __chkstk_darwin(v15);
  unint64_t v20 = (char *)&v41 - v19;
  uint64_t v43 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  uint64_t v45 = a1;
  v43((char *)&v41 - v19, a1, a10);
  uint64_t v46 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v21 = (v46 + 40) & ~v46;
  uint64_t v22 = (uint64_t (*)())swift_allocObject();
  uint64_t v52 = v22;
  *((void *)v22 + 2) = a10;
  *((void *)v22 + 3) = a11;
  uint64_t v23 = v58;
  *((void *)v22 + 4) = v58;
  uint64_t v42 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  v42((char *)v22 + v21, v20, a10);
  uint64_t v24 = v44;
  v43(v44, a1, a10);
  unint64_t v25 = (v21 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v26 = (v25 + 47) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v27 = (uint64_t (*)())swift_allocObject();
  uint64_t v28 = v57;
  *((void *)v27 + 2) = a10;
  *((void *)v27 + 3) = v28;
  *((void *)v27 + 4) = v23;
  uint64_t v29 = v24;
  uint64_t v30 = (void (*)(char *, uint64_t, uint64_t))v42;
  v42((char *)v27 + v21, v29, a10);
  outlined init with take of PresentationSource?(v49, (uint64_t)v27 + v25, &demangling cache variable for type metadata for NoticePresenting?);
  outlined init with take of PresentationSource?(v50, (uint64_t)v27 + v26, &demangling cache variable for type metadata for PresentationSource?);
  outlined init with take of AlertPresenting(v51, (uint64_t)v27 + ((v26 + 79) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v31 = v48;
  v30(v48, v45, a10);
  uint64_t v32 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?)
                  - 8);
  unint64_t v33 = (*(unsigned __int8 *)(v32 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
  unint64_t v34 = (*(void *)(v32 + 64) + v46 + v33) & ~v46;
  uint64_t v35 = (uint64_t (*)())swift_allocObject();
  uint64_t v36 = v57;
  *((void *)v35 + 2) = a10;
  *((void *)v35 + 3) = v36;
  uint64_t v37 = v54;
  *((void *)v35 + 4) = v53;
  *((void *)v35 + 5) = v37;
  outlined init with take of PresentationSource?(v55, (uint64_t)v35 + v33, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  v30((char *)v35 + v34, (uint64_t)v31, a10);
  uint64_t result = swift_retain();
  uint64_t v39 = v56;
  id v40 = v52;
  *uint64_t v56 = partial apply for closure #1 in Actions.UndoFavorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:);
  v39[1] = v40;
  v39[2] = (uint64_t (*)())&async function pointer to partial apply for closure #2 in Actions.UndoFavorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:);
  v39[3] = v27;
  v39[4] = (uint64_t (*)())&async function pointer to partial apply for closure #3 in Actions.UndoFavorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:);
  v39[5] = v35;
  return result;
}

uint64_t static Actions.UndoFavorite.action(context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return static Actions.ShowSongCredits.action(context:)(a1, 52, (uint64_t)closure #1 in static Actions.ShowSongCredits.action(context:), (uint64_t)&async function pointer to closure #2 in static Actions.UndoFavorite.action(context:), (uint64_t)&async function pointer to closure #3 in static Actions.UndoFavorite.action(context:), a2);
}

uint64_t Actions.SuggestLess.Context.init<A>(item:library:noticePresenting:metricsReportingContext:)@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t (**a7)()@<X8>)
{
  uint64_t v43 = a4;
  uint64_t v44 = a7;
  uint64_t v41 = a3;
  uint64_t v45 = a1;
  uint64_t v10 = *(void *)(a5 - 8);
  uint64_t v11 = __chkstk_darwin(a1);
  id v40 = (char *)v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)v35 - v14;
  uint64_t v17 = v16;
  uint64_t v39 = v16;
  __chkstk_darwin(v13);
  uint64_t v19 = (char *)v35 - v18;
  uint64_t v36 = *(void (**)(char *))(v10 + 16);
  v36((char *)v35 - v18);
  uint64_t v38 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v20 = v10;
  uint64_t v21 = (v38 + 40) & ~v38;
  v35[1] = v38 | 7;
  uint64_t v22 = (uint64_t (*)())swift_allocObject();
  uint64_t v42 = v22;
  *((void *)v22 + 2) = a5;
  *((void *)v22 + 3) = a6;
  uint64_t v37 = a6;
  *((void *)v22 + 4) = a2;
  uint64_t v23 = v20 + 32;
  uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
  v35[0] = v23;
  v24((char *)v22 + v21, v19, a5);
  ((void (*)(char *, char *, uint64_t))v36)(v15, v45, a5);
  unint64_t v25 = (uint64_t (*)())swift_allocObject();
  *((void *)v25 + 2) = a5;
  *((void *)v25 + 3) = a6;
  *((void *)v25 + 4) = a2;
  v24((char *)v25 + v21, v15, a5);
  outlined init with take of PresentationSource?(v41, (uint64_t)v25 + ((v21 + v17 + 7) & 0xFFFFFFFFFFFFFFF8), &demangling cache variable for type metadata for NoticePresenting?);
  unint64_t v26 = v40;
  v24(v40, v45, a5);
  uint64_t v27 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?)
                  - 8);
  unint64_t v28 = (*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
  unint64_t v29 = (*(void *)(v27 + 64) + v38 + v28) & ~v38;
  uint64_t v30 = swift_allocObject();
  uint64_t v31 = v37;
  *(void *)(v30 + 16) = a5;
  *(void *)(v30 + 24) = v31;
  outlined init with take of PresentationSource?(v43, v30 + v28, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  v24((char *)(v30 + v29), v26, a5);
  uint64_t result = swift_retain();
  unint64_t v33 = v44;
  unint64_t v34 = v42;
  *uint64_t v44 = partial apply for closure #1 in Actions.SuggestLess.Context.init<A>(item:library:noticePresenting:metricsReportingContext:);
  v33[1] = v34;
  v33[2] = (uint64_t (*)())&async function pointer to partial apply for closure #2 in Actions.SuggestLess.Context.init<A>(item:library:noticePresenting:metricsReportingContext:);
  void v33[3] = v25;
  v33[4] = (uint64_t (*)())&async function pointer to partial apply for closure #3 in Actions.SuggestLess.Context.init<A>(item:library:noticePresenting:metricsReportingContext:);
  v33[5] = (uint64_t (*)())v30;
  return result;
}

uint64_t static Actions.SuggestLess.action(context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return static Actions.ShowSongCredits.action(context:)(a1, 51, (uint64_t)closure #1 in static Actions.AddToLibrary.action(context:), (uint64_t)&async function pointer to closure #2 in static Actions.SuggestLess.action(context:), (uint64_t)&async function pointer to closure #3 in static Actions.SuggestLess.action(context:), a2);
}

uint64_t Actions.UndoSuggestLess.Context.init<A>(item:library:noticePresenting:metricsReportingContext:)@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t (**a6)()@<X8>)
{
  uint64_t v40 = a3;
  uint64_t v41 = a6;
  uint64_t v42 = a1;
  uint64_t v43 = a2;
  uint64_t v9 = *(void *)(a4 - 8);
  uint64_t v10 = __chkstk_darwin(a1);
  uint64_t v38 = (char *)v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v36 = (char *)v34 - v13;
  uint64_t v37 = v14;
  uint64_t v15 = v14;
  __chkstk_darwin(v12);
  uint64_t v17 = (char *)v34 - v16;
  outlined destroy of TaskPriority?(v18, &demangling cache variable for type metadata for NoticePresenting?);
  uint64_t v35 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v35(v17, (uint64_t)a1, a4);
  uint64_t v19 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v20 = (v19 + 40) & ~v19;
  long long v34[2] = v20 + v15;
  uint64_t v21 = (uint64_t (*)())swift_allocObject();
  uint64_t v39 = v21;
  *((void *)v21 + 2) = a4;
  *((void *)v21 + 3) = a5;
  uint64_t v22 = v43;
  *((void *)v21 + 4) = v43;
  uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
  v34[1] = v9 + 32;
  v23((char *)v21 + v20, v17, a4);
  uint64_t v24 = v36;
  v35(v36, (uint64_t)v42, a4);
  unint64_t v25 = (uint64_t (*)())swift_allocObject();
  *((void *)v25 + 2) = a4;
  *((void *)v25 + 3) = a5;
  *((void *)v25 + 4) = v22;
  v23((char *)v25 + v20, v24, a4);
  unint64_t v26 = v38;
  v23(v38, v42, a4);
  uint64_t v27 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?)
                  - 8);
  unint64_t v28 = (*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
  unint64_t v29 = (*(void *)(v27 + 64) + v19 + v28) & ~v19;
  uint64_t v30 = swift_allocObject();
  *(void *)(v30 + 16) = a4;
  *(void *)(v30 + 24) = a5;
  outlined init with take of PresentationSource?(v40, v30 + v28, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  v23((char *)(v30 + v29), v26, a4);
  uint64_t result = swift_retain();
  uint64_t v32 = v41;
  unint64_t v33 = v39;
  void *v41 = partial apply for closure #1 in Actions.UndoSuggestLess.Context.init<A>(item:library:noticePresenting:metricsReportingContext:);
  v32[1] = v33;
  v32[2] = (uint64_t (*)())&async function pointer to partial apply for closure #2 in Actions.UndoSuggestLess.Context.init<A>(item:library:noticePresenting:metricsReportingContext:);
  v32[3] = v25;
  v32[4] = (uint64_t (*)())&async function pointer to partial apply for closure #3 in Actions.UndoSuggestLess.Context.init<A>(item:library:noticePresenting:metricsReportingContext:);
  v32[5] = (uint64_t (*)())v30;
  return result;
}

uint64_t static Actions.UndoSuggestLess.action(context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return static Actions.ShowSongCredits.action(context:)(a1, 53, (uint64_t)closure #1 in static Actions.ShowSongCredits.action(context:), (uint64_t)&async function pointer to closure #2 in static Actions.UndoSuggestLess.action(context:), (uint64_t)&async function pointer to closure #3 in static Actions.UndoSuggestLess.action(context:), a2);
}

uint64_t protocol witness for static ActionDefinition.action(context:) in conformance Actions.Favorite@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return protocol witness for static ActionDefinition.action(context:) in conformance Actions.ShowSongCredits(a1, 10, (uint64_t)closure #1 in static Actions.ShowSongCredits.action(context:), (uint64_t)&async function pointer to closure #2 in static Actions.Favorite.action(context:), (uint64_t)&async function pointer to closure #3 in static Actions.Favorite.action(context:), a2);
}

uint64_t protocol witness for static ActionDefinition.action(context:) in conformance Actions.UndoFavorite@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return protocol witness for static ActionDefinition.action(context:) in conformance Actions.ShowSongCredits(a1, 52, (uint64_t)closure #1 in static Actions.ShowSongCredits.action(context:), (uint64_t)&async function pointer to closure #2 in static Actions.UndoFavorite.action(context:), (uint64_t)&async function pointer to closure #3 in static Actions.UndoFavorite.action(context:), a2);
}

uint64_t closure #1 in Actions.Favorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:)()
{
  uint64_t v0 = type metadata accessor for MusicLibrary.FavoriteAction();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicLibrary.SupportedStatus<MusicLibrary.FavoriteAction>);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  static MusicLibraryAction<>.favorite.getter();
  MusicLibrary.supportedStatus<A, B>(for:action:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  uint64_t v8 = MusicLibrary.SupportedStatus<>.actionSupportedStatus.getter();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v8;
}

uint64_t partial apply for closure #1 in Actions.Favorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:)()
{
  return partial apply for closure #1 in Actions.Favorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:)((uint64_t (*)(void, unint64_t))closure #1 in Actions.Favorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:));
}

uint64_t closure #2 in Actions.Favorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[44] = a6;
  v7[45] = a7;
  v7[42] = a4;
  v7[43] = a5;
  v7[40] = a2;
  v7[41] = a3;
  v7[39] = a1;
  uint64_t v8 = type metadata accessor for MusicLibrary.FavoriteAction.UnsupportedReason();
  v7[46] = v8;
  v7[47] = *(void *)(v8 - 8);
  v7[48] = swift_task_alloc();
  v7[49] = swift_task_alloc();
  v7[50] = type metadata accessor for Notice.Variant(0);
  v7[51] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for MusicLibrary.FavoriteAction();
  v7[52] = v9;
  v7[53] = *(void *)(v9 - 8);
  v7[54] = swift_task_alloc();
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicLibrary.SupportedStatus<MusicLibrary.FavoriteAction>);
  v7[55] = v10;
  v7[56] = *(void *)(v10 - 8);
  v7[57] = swift_task_alloc();
  v7[58] = swift_task_alloc();
  return _swift_task_switch(closure #2 in Actions.Favorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:), 0, 0);
}

uint64_t closure #2 in Actions.Favorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:)()
{
  uint64_t v1 = v0[58];
  uint64_t v2 = v0[56];
  uint64_t v42 = v0[55];
  uint64_t v43 = v0[57];
  uint64_t v3 = v0[53];
  uint64_t v4 = v0[54];
  uint64_t v5 = v0[52];
  static MusicLibraryAction<>.favorite.getter();
  MusicLibrary.supportedStatus<A, B>(for:action:)();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v43, v1, v42);
  int v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 88))(v43, v42);
  if (v6 == enum case for MusicLibrary.SupportedStatus.unsupported<A>(_:))
  {
    uint64_t v7 = v0[57];
    uint64_t v9 = v0[48];
    uint64_t v8 = v0[49];
    uint64_t v10 = v0[46];
    uint64_t v11 = v0[47];
    (*(void (**)(uint64_t, void))(v0[56] + 96))(v7, v0[55]);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32))(v8, v7, v10);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v9, v8, v10);
    int v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 88))(v9, v10);
    if (v12 == enum case for MusicLibrary.FavoriteAction.UnsupportedReason.cloudLibraryRequired(_:))
    {
      outlined init with copy of (String, Any)(v0[42], (uint64_t)(v0 + 11), &demangling cache variable for type metadata for PresentationSource?);
      if (v0[18] != 1)
      {
        outlined init with take of PresentationSource((uint64_t)(v0 + 11), (uint64_t)(v0 + 2));
        v0[71] = type metadata accessor for MainActor();
        v0[72] = static MainActor.shared.getter();
        uint64_t v32 = dispatch thunk of Actor.unownedExecutor.getter();
        uint64_t v28 = v33;
        v0[73] = v32;
        v0[74] = v33;
        unint64_t v26 = closure #2 in Actions.Favorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:);
        uint64_t v27 = v32;
        goto LABEL_14;
      }
      uint64_t v13 = (void *)v0[43];
      outlined destroy of TaskPriority?((uint64_t)(v0 + 11), &demangling cache variable for type metadata for PresentationSource?);
      uint64_t v14 = v13[3];
      v0[66] = v14;
      v0[67] = v13[4];
      v0[68] = __swift_project_boxed_opaque_existential_0Tm(v13, v14);
      type metadata accessor for MainActor();
      v0[69] = static MainActor.shared.getter();
      uint64_t v15 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v17 = v16;
      uint64_t v18 = closure #2 in Actions.Favorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:);
LABEL_11:
      unint64_t v26 = v18;
      uint64_t v27 = v15;
      uint64_t v28 = v17;
LABEL_14:
      return _swift_task_switch(v26, v27, v28);
    }
    if (v12 == enum case for MusicLibrary.FavoriteAction.UnsupportedReason.explicitContentRestricted(_:))
    {
      uint64_t v23 = (void *)v0[43];
      uint64_t v24 = v23[3];
      v0[78] = v24;
      v0[79] = v23[4];
      v0[80] = __swift_project_boxed_opaque_existential_0Tm(v23, v24);
      type metadata accessor for MainActor();
      v0[81] = static MainActor.shared.getter();
      uint64_t v15 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v17 = v25;
      uint64_t v18 = closure #2 in Actions.Favorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:);
      goto LABEL_11;
    }
    uint64_t v34 = v0[58];
    uint64_t v35 = v0[55];
    uint64_t v36 = v0[56];
    uint64_t v37 = v0[48];
    uint64_t v38 = v0[46];
    uint64_t v39 = *(void (**)(uint64_t, uint64_t))(v0[47] + 8);
    v39(v0[49], v38);
    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v34, v35);
    v39(v37, v38);
    goto LABEL_18;
  }
  if (v6 != enum case for MusicLibrary.SupportedStatus.supported<A>(_:))
  {
    uint64_t v29 = v0[57];
    uint64_t v30 = v0[55];
    uint64_t v31 = *(void (**)(uint64_t, uint64_t))(v0[56] + 8);
    v31(v0[58], v30);
    v31(v29, v30);
LABEL_18:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v40 = (uint64_t (*)(void))v0[1];
    return v40();
  }
  uint64_t v19 = (void *)swift_task_alloc();
  v0[59] = v19;
  void *v19 = v0;
  v19[1] = closure #2 in Actions.Favorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:);
  uint64_t v20 = v0[44];
  uint64_t v21 = v0[45];
  uint64_t v22 = v0[40];
  return MusicLibrary.favorite<A>(_:)(v22, v20, v21);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();
  uint64_t v4;

  *(void *)(*(void *)v1 + 480) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = closure #2 in Actions.Favorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:);
  }
  else {
    uint64_t v2 = closure #2 in Actions.Favorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:);
  }
  return _swift_task_switch(v2, 0, 0);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;

  outlined init with copy of (String, Any)(v0[41], (uint64_t)(v0 + 34), &demangling cache variable for type metadata for NoticePresenting?);
  uint64_t v1 = v0[37];
  v0[61] = v1;
  if (v1)
  {
    v0[62] = v0[38];
    v0[63] = __swift_project_boxed_opaque_existential_0Tm(v0 + 34, v1);
    swift_storeEnumTagMultiPayload();
    type metadata accessor for MainActor();
    v0[64] = static MainActor.shared.getter();
    uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
    return _swift_task_switch(closure #2 in Actions.Favorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:), v3, v2);
  }
  else
  {
    outlined destroy of TaskPriority?((uint64_t)(v0 + 34), &demangling cache variable for type metadata for NoticePresenting?);
    uint64_t v7 = (uint64_t (*)(uint64_t))((char *)&async function pointer to specialized static AppReview.requestReview(in:)
                                         + async function pointer to specialized static AppReview.requestReview(in:));
    uint64_t v4 = (void *)swift_task_alloc();
    v0[65] = v4;
    *uint64_t v4 = v0;
    v4[1] = closure #2 in Actions.Favorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:);
    uint64_t v5 = v0[42];
    return v7(v5);
  }
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  uint64_t v2 = v0[61];
  uint64_t v1 = v0[62];
  uint64_t v3 = v0[51];
  swift_release();
  NoticePresenting.present(_:internalOnly:)(v3, 0, v2, v1);
  outlined destroy of Actions.MetricsReportingContext(v3, type metadata accessor for Notice.Variant);
  return _swift_task_switch(closure #2 in Actions.Favorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:), 0, 0);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;

  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 272);
  uint64_t v4 = (uint64_t (*)(uint64_t))((char *)&async function pointer to specialized static AppReview.requestReview(in:)
                                       + async function pointer to specialized static AppReview.requestReview(in:));
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 520) = v1;
  *uint64_t v1 = v0;
  v1[1] = closure #2 in Actions.Favorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:);
  uint64_t v2 = *(void *)(v0 + 336);
  return v4(v2);
}

{
  uint64_t v1;

  swift_task_dealloc();
  return _swift_task_switch(closure #2 in Actions.Favorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:), 0, 0);
}

{
  void *v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  (*(void (**)(void, void))(v0[56] + 8))(v0[58], v0[55]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v5)(void *, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;

  int v6 = v0[67];
  swift_release();
  specialized static Alert.enableCloudLibraryAlert(context:)((uint64_t)(v0 + 27));
  uint64_t v5 = (uint64_t (*)(void *, uint64_t, uint64_t))(*(void *)(v6 + 8) + **(int **)(v6 + 8));
  uint64_t v1 = (void *)swift_task_alloc();
  v0[70] = v1;
  *uint64_t v1 = v0;
  v1[1] = closure #2 in Actions.Favorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:);
  uint64_t v2 = v0[67];
  uint64_t v3 = v0[66];
  return v5(v0 + 27, v3, v2);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v3;

  uint64_t v1 = *v0 + 216;
  swift_task_dealloc();
  outlined release of Alert(v1);
  return _swift_task_switch(closure #2 in Actions.Favorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:), 0, 0);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v5;

  uint64_t v1 = static MainActor.shared.getter();
  v0[75] = v1;
  uint64_t v2 = swift_task_alloc();
  v0[76] = v2;
  *(unsigned char *)(v2 + 16) = 5;
  *(void *)(v2 + 24) = v0 + 2;
  *(void *)(v2 + 32) = 0;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[77] = v3;
  *uint64_t v3 = v0;
  v3[1] = closure #2 in Actions.Favorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:);
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 83, v1, &protocol witness table for MainActor, 0xD00000000000003DLL, 0x8000000100467B20, closure #1 in static CloudLibrary.presentCloudLibraryEnabler(context:presentationSource:style:)partial apply, v2, &type metadata for Bool);
}

{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 592);
  uint64_t v3 = *(void *)(v1 + 584);
  return _swift_task_switch(closure #2 in Actions.Favorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:), v3, v2);
}

{
  uint64_t v1;

  swift_release();
  return _swift_task_switch(closure #2 in Actions.Favorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:), 0, 0);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);
  uint64_t v9;

  uint64_t v1 = v0[58];
  uint64_t v2 = v0[55];
  uint64_t v3 = v0[56];
  uint64_t v4 = v0[49];
  uint64_t v5 = v0[46];
  int v6 = v0[47];
  outlined destroy of PresentationSource((uint64_t)(v0 + 2));
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v5)(void *, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;

  int v6 = v0[79];
  swift_release();
  specialized static Alert.explicitRestrictedAlert(forPlayback:)((uint64_t)(v0 + 20));
  uint64_t v5 = (uint64_t (*)(void *, uint64_t, uint64_t))(*(void *)(v6 + 8) + **(int **)(v6 + 8));
  uint64_t v1 = (void *)swift_task_alloc();
  v0[82] = v1;
  *uint64_t v1 = v0;
  v1[1] = closure #2 in Actions.Favorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:);
  uint64_t v2 = v0[79];
  uint64_t v3 = v0[78];
  return v5(v0 + 20, v3, v2);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v3;

  uint64_t v1 = *v0 + 160;
  swift_task_dealloc();
  outlined release of Alert(v1);
  return _swift_task_switch(closure #2 in Actions.Favorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:), 0, 0);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);
  uint64_t v6;

  uint64_t v1 = v0[58];
  uint64_t v2 = v0[55];
  uint64_t v3 = v0[56];
  (*(void (**)(void, void))(v0[47] + 8))(v0[49], v0[46]);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

{
  void *v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  (*(void (**)(void, void))(v0[56] + 8))(v0[58], v0[55]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t partial apply for closure #2 in Actions.Favorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:)()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v2 - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 8) + 80);
  unint64_t v5 = (*(void *)(*(void *)(v2 - 8) + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 47) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = v0[4];
  uint64_t v8 = (uint64_t)v0 + v4;
  uint64_t v9 = (uint64_t)v0 + v5;
  uint64_t v10 = (uint64_t)v0 + v6;
  uint64_t v11 = (uint64_t)v0 + ((v6 + 79) & 0xFFFFFFFFFFFFFFF8);
  int v12 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v12;
  *int v12 = v1;
  v12[1] = closure #3 in static Actions.ReportConcern.action(context:);
  return closure #2 in Actions.Favorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:)(v7, v8, v9, v10, v11, v2, v3);
}

uint64_t closure #3 in Actions.Favorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[13] = a5;
  v6[14] = a6;
  v6[11] = a3;
  v6[12] = a4;
  v6[9] = a1;
  v6[10] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  v6[15] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  v6[16] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for Actions.MetricsReportingContext();
  v6[17] = v7;
  v6[18] = *(void *)(v7 - 8);
  v6[19] = swift_task_alloc();
  return _swift_task_switch(closure #3 in Actions.Favorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:), 0, 0);
}

uint64_t closure #3 in Actions.Favorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:)()
{
  uint64_t v1 = *(void (**)(uint64_t))(v0 + 72);
  if (v1) {
    v1(10);
  }
  uint64_t v2 = *(void *)(v0 + 136);
  uint64_t v3 = *(void *)(v0 + 144);
  uint64_t v4 = *(void *)(v0 + 128);
  outlined init with copy of (String, Any)(*(void *)(v0 + 88), v4, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v4, 1, v2) == 1)
  {
    outlined destroy of TaskPriority?(*(void *)(v0 + 128), &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
    return v5();
  }
  else
  {
    uint64_t v7 = *(void *)(v0 + 120);
    uint64_t v8 = *(void *)(v0 + 104);
    outlined init with take of Actions.MetricsReportingContext(*(void *)(v0 + 128), *(void *)(v0 + 152));
    *(void *)(v0 + 160) = MusicItem.metricsTargetIdentifier.getter(v8);
    *(void *)(v0 + 168) = v9;
    uint64_t v10 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v7, 1, 1, v10);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<MetricsEvent.Click.ActionDetails.Key>);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100493400;
    *(void *)(inited + 32) = MusicItem.metricsContentType.getter();
    *(void *)(inited + 40) = v12;
    *(unsigned char *)(inited + 48) = 0;
    *(void *)(v0 + 176) = specialized MetricsEvent.Click.ActionDetails.init(_:)(inited);
    *(void *)(v0 + 184) = v13;
    *(void *)(v0 + 192) = v14;
    *(_WORD *)(v0 + 208) = v15;
    swift_setDeallocating();
    swift_arrayDestroy();
    type metadata accessor for MainActor();
    *(void *)(v0 + 200) = static MainActor.shared.getter();
    uint64_t v17 = dispatch thunk of Actor.unownedExecutor.getter();
    return _swift_task_switch(closure #3 in Actions.Favorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:), v17, v16);
  }
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  uint64_t v1 = *(void *)(v0 + 192);
  uint64_t v3 = *(void **)(v0 + 176);
  uint64_t v2 = *(void *)(v0 + 184);
  unint64_t v5 = *(void *)(v0 + 160);
  uint64_t v4 = *(void *)(v0 + 168);
  unint64_t v6 = *(uint64_t **)(v0 + 152);
  uint64_t v7 = *(void *)(v0 + 120);
  uint64_t v8 = *(unsigned __int16 *)(v0 + 208);
  swift_release();
  specialized static Actions.reportClickEvent(targetIdentifier:targetType:actionType:actionURL:actionDetails:reportingContext:)(v5, v4, 5, 17, v7, v3, v2, v1, v8, v6);
  outlined consume of MetricsEvent.Click.ActionDetails(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease();
  outlined destroy of TaskPriority?(v7, &demangling cache variable for type metadata for URL?);
  return _swift_task_switch(closure #3 in Actions.Favorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:), 0, 0);
}

uint64_t partial apply for closure #3 in Actions.Favorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:)()
{
  uint64_t v3 = v0[2];
  uint64_t v2 = v0[3];
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?)
                 - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v0[4];
  uint64_t v7 = v0[5];
  uint64_t v8 = (uint64_t)v0 + v5;
  uint64_t v9 = (uint64_t)v0
     + ((v5 + *(void *)(v4 + 64) + *(unsigned __int8 *)(*(void *)(v3 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v3 - 8) + 80));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v10;
  void *v10 = v1;
  v10[1] = closure #3 in static Actions.ReportConcern.action(context:);
  return closure #3 in Actions.Favorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:)(v6, v7, v8, v9, v3, v2);
}

uint64_t closure #1 in Actions.UndoFavorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:)()
{
  uint64_t v0 = type metadata accessor for MusicLibrary.UndoFavoriteAction();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicLibrary.SupportedStatus<MusicLibrary.UndoFavoriteAction>);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  static MusicLibraryAction<>.undoFavorite.getter();
  MusicLibrary.supportedStatus<A, B>(for:action:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  uint64_t v8 = MusicLibrary.SupportedStatus<>.actionSupportedStatus.getter();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v8;
}

uint64_t partial apply for closure #1 in Actions.UndoFavorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:)()
{
  return partial apply for closure #1 in Actions.Favorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:)((uint64_t (*)(void, unint64_t))closure #1 in Actions.UndoFavorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:));
}

uint64_t partial apply for closure #1 in Actions.Favorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:)(uint64_t (*a1)(void, unint64_t))
{
  return a1(*(void *)(v1 + 32), v1+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v1 + 16) - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v1 + 16) - 8) + 80)));
}

uint64_t closure #2 in Actions.UndoFavorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[44] = a6;
  v7[45] = a7;
  v7[42] = a4;
  v7[43] = a5;
  v7[40] = a2;
  v7[41] = a3;
  v7[39] = a1;
  uint64_t v8 = type metadata accessor for MusicLibrary.UndoFavoriteAction.UnsupportedReason();
  v7[46] = v8;
  v7[47] = *(void *)(v8 - 8);
  v7[48] = swift_task_alloc();
  v7[49] = swift_task_alloc();
  v7[50] = type metadata accessor for Notice.Variant(0);
  v7[51] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for MusicLibrary.UndoFavoriteAction();
  v7[52] = v9;
  v7[53] = *(void *)(v9 - 8);
  v7[54] = swift_task_alloc();
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicLibrary.SupportedStatus<MusicLibrary.UndoFavoriteAction>);
  v7[55] = v10;
  v7[56] = *(void *)(v10 - 8);
  v7[57] = swift_task_alloc();
  v7[58] = swift_task_alloc();
  return _swift_task_switch(closure #2 in Actions.UndoFavorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:), 0, 0);
}

uint64_t closure #2 in Actions.UndoFavorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:)()
{
  uint64_t v1 = v0[58];
  uint64_t v2 = v0[56];
  uint64_t v42 = v0[55];
  uint64_t v43 = v0[57];
  uint64_t v3 = v0[53];
  uint64_t v4 = v0[54];
  uint64_t v5 = v0[52];
  static MusicLibraryAction<>.undoFavorite.getter();
  MusicLibrary.supportedStatus<A, B>(for:action:)();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v43, v1, v42);
  int v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 88))(v43, v42);
  if (v6 == enum case for MusicLibrary.SupportedStatus.unsupported<A>(_:))
  {
    uint64_t v7 = v0[57];
    uint64_t v9 = v0[48];
    uint64_t v8 = v0[49];
    uint64_t v10 = v0[46];
    uint64_t v11 = v0[47];
    (*(void (**)(uint64_t, void))(v0[56] + 96))(v7, v0[55]);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32))(v8, v7, v10);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v9, v8, v10);
    int v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 88))(v9, v10);
    if (v12 == enum case for MusicLibrary.UndoFavoriteAction.UnsupportedReason.cloudLibraryRequired(_:))
    {
      outlined init with copy of (String, Any)(v0[42], (uint64_t)(v0 + 11), &demangling cache variable for type metadata for PresentationSource?);
      if (v0[18] != 1)
      {
        outlined init with take of PresentationSource((uint64_t)(v0 + 11), (uint64_t)(v0 + 2));
        v0[70] = type metadata accessor for MainActor();
        v0[71] = static MainActor.shared.getter();
        uint64_t v32 = dispatch thunk of Actor.unownedExecutor.getter();
        uint64_t v28 = v33;
        v0[72] = v32;
        v0[73] = v33;
        unint64_t v26 = closure #2 in Actions.UndoFavorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:);
        uint64_t v27 = v32;
        goto LABEL_14;
      }
      uint64_t v13 = (void *)v0[43];
      outlined destroy of TaskPriority?((uint64_t)(v0 + 11), &demangling cache variable for type metadata for PresentationSource?);
      uint64_t v14 = v13[3];
      v0[65] = v14;
      v0[66] = v13[4];
      v0[67] = __swift_project_boxed_opaque_existential_0Tm(v13, v14);
      type metadata accessor for MainActor();
      v0[68] = static MainActor.shared.getter();
      uint64_t v15 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v17 = v16;
      uint64_t v18 = closure #2 in Actions.UndoFavorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:);
LABEL_11:
      unint64_t v26 = v18;
      uint64_t v27 = v15;
      uint64_t v28 = v17;
LABEL_14:
      return _swift_task_switch(v26, v27, v28);
    }
    if (v12 == enum case for MusicLibrary.UndoFavoriteAction.UnsupportedReason.explicitContentRestricted(_:))
    {
      uint64_t v23 = (void *)v0[43];
      uint64_t v24 = v23[3];
      v0[77] = v24;
      v0[78] = v23[4];
      v0[79] = __swift_project_boxed_opaque_existential_0Tm(v23, v24);
      type metadata accessor for MainActor();
      v0[80] = static MainActor.shared.getter();
      uint64_t v15 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v17 = v25;
      uint64_t v18 = closure #2 in Actions.UndoFavorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:);
      goto LABEL_11;
    }
    uint64_t v34 = v0[58];
    uint64_t v35 = v0[55];
    uint64_t v36 = v0[56];
    uint64_t v37 = v0[48];
    uint64_t v38 = v0[46];
    uint64_t v39 = *(void (**)(uint64_t, uint64_t))(v0[47] + 8);
    v39(v0[49], v38);
    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v34, v35);
    v39(v37, v38);
    goto LABEL_18;
  }
  if (v6 != enum case for MusicLibrary.SupportedStatus.supported<A>(_:))
  {
    uint64_t v29 = v0[57];
    uint64_t v30 = v0[55];
    uint64_t v31 = *(void (**)(uint64_t, uint64_t))(v0[56] + 8);
    v31(v0[58], v30);
    v31(v29, v30);
LABEL_18:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v40 = (uint64_t (*)(void))v0[1];
    return v40();
  }
  uint64_t v19 = (void *)swift_task_alloc();
  v0[59] = v19;
  void *v19 = v0;
  v19[1] = closure #2 in Actions.UndoFavorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:);
  uint64_t v20 = v0[44];
  uint64_t v21 = v0[45];
  uint64_t v22 = v0[40];
  return MusicLibrary.undoFavorite<A>(_:)(v22, v20, v21);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();
  uint64_t v4;

  *(void *)(*(void *)v1 + 480) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = closure #2 in Actions.Favorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:);
  }
  else {
    uint64_t v2 = closure #2 in Actions.UndoFavorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:);
  }
  return _swift_task_switch(v2, 0, 0);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);
  uint64_t v6;

  outlined init with copy of (String, Any)(v0[41], (uint64_t)(v0 + 34), &demangling cache variable for type metadata for NoticePresenting?);
  uint64_t v1 = v0[37];
  v0[61] = v1;
  if (v1)
  {
    v0[62] = v0[38];
    v0[63] = __swift_project_boxed_opaque_existential_0Tm(v0 + 34, v1);
    swift_storeEnumTagMultiPayload();
    type metadata accessor for MainActor();
    v0[64] = static MainActor.shared.getter();
    uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
    return _swift_task_switch(closure #2 in Actions.UndoFavorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:), v3, v2);
  }
  else
  {
    (*(void (**)(void, void))(v0[56] + 8))(v0[58], v0[55]);
    outlined destroy of TaskPriority?((uint64_t)(v0 + 34), &demangling cache variable for type metadata for NoticePresenting?);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  uint64_t v2 = v0[61];
  uint64_t v1 = v0[62];
  uint64_t v3 = v0[51];
  swift_release();
  NoticePresenting.present(_:internalOnly:)(v3, 0, v2, v1);
  outlined destroy of Actions.MetricsReportingContext(v3, type metadata accessor for Notice.Variant);
  return _swift_task_switch(closure #2 in Actions.UndoFavorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:), 0, 0);
}

{
  void *v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  (*(void (**)(void, void))(v0[56] + 8))(v0[58], v0[55]);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)(v0 + 34));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v5)(void *, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;

  int v6 = v0[66];
  swift_release();
  specialized static Alert.enableCloudLibraryAlert(context:)((uint64_t)(v0 + 27));
  uint64_t v5 = (uint64_t (*)(void *, uint64_t, uint64_t))(*(void *)(v6 + 8) + **(int **)(v6 + 8));
  uint64_t v1 = (void *)swift_task_alloc();
  v0[69] = v1;
  *uint64_t v1 = v0;
  v1[1] = closure #2 in Actions.UndoFavorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:);
  uint64_t v2 = v0[66];
  uint64_t v3 = v0[65];
  return v5(v0 + 27, v3, v2);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v3;

  uint64_t v1 = *v0 + 216;
  swift_task_dealloc();
  outlined release of Alert(v1);
  return _swift_task_switch(closure #2 in Actions.Favorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:), 0, 0);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v5;

  uint64_t v1 = static MainActor.shared.getter();
  v0[74] = v1;
  uint64_t v2 = swift_task_alloc();
  v0[75] = v2;
  *(unsigned char *)(v2 + 16) = 5;
  *(void *)(v2 + 24) = v0 + 2;
  *(void *)(v2 + 32) = 0;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[76] = v3;
  *uint64_t v3 = v0;
  v3[1] = closure #2 in Actions.UndoFavorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:);
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 82, v1, &protocol witness table for MainActor, 0xD00000000000003DLL, 0x8000000100467B20, partial apply for closure #1 in static CloudLibrary.presentCloudLibraryEnabler(context:presentationSource:style:), v2, &type metadata for Bool);
}

{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 584);
  uint64_t v3 = *(void *)(v1 + 576);
  return _swift_task_switch(closure #2 in Actions.UndoFavorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:), v3, v2);
}

{
  uint64_t v1;

  swift_release();
  return _swift_task_switch(closure #2 in Actions.Favorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:), 0, 0);
}

{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v5)(void *, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;

  int v6 = v0[78];
  swift_release();
  specialized static Alert.explicitRestrictedAlert(forPlayback:)((uint64_t)(v0 + 20));
  uint64_t v5 = (uint64_t (*)(void *, uint64_t, uint64_t))(*(void *)(v6 + 8) + **(int **)(v6 + 8));
  uint64_t v1 = (void *)swift_task_alloc();
  v0[81] = v1;
  *uint64_t v1 = v0;
  v1[1] = closure #2 in Actions.UndoFavorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:);
  uint64_t v2 = v0[78];
  uint64_t v3 = v0[77];
  return v5(v0 + 20, v3, v2);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v3;

  uint64_t v1 = *v0 + 160;
  swift_task_dealloc();
  outlined release of Alert(v1);
  return _swift_task_switch(closure #2 in Actions.Favorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:), 0, 0);
}

uint64_t objectdestroy_2Tm_0()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v5 = (v4 + 47) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  if (*(void *)(v0 + v4 + 24)) {
    __swift_destroy_boxed_opaque_existential_0Tm(v0 + v4);
  }
  uint64_t v6 = v0 + v5;
  if (*(void *)(v0 + v5 + 56) != 1)
  {
    swift_unknownObjectWeakDestroy();
    int v7 = *(unsigned __int8 *)(v6 + 48);
    if (v7 != 255) {
      outlined consume of PresentationSource.Position(*(id *)(v6 + 8), *(void *)(v6 + 16), *(void *)(v6 + 24), *(void *)(v6 + 32), *(void *)(v6 + 40), v7);
    }
    if (*(void *)(v6 + 56)) {
      swift_release();
    }
  }
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + ((v5 + 79) & 0xFFFFFFFFFFFFFFF8));

  return swift_deallocObject();
}

uint64_t partial apply for closure #2 in Actions.UndoFavorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:)()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v2 - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 8) + 80);
  unint64_t v5 = (*(void *)(*(void *)(v2 - 8) + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 47) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = v0[4];
  uint64_t v8 = (uint64_t)v0 + v4;
  uint64_t v9 = (uint64_t)v0 + v5;
  uint64_t v10 = (uint64_t)v0 + v6;
  uint64_t v11 = (uint64_t)v0 + ((v6 + 79) & 0xFFFFFFFFFFFFFFF8);
  int v12 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v12;
  *int v12 = v1;
  v12[1] = closure #3 in static Actions.ReportConcern.action(context:);
  return closure #2 in Actions.UndoFavorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:)(v7, v8, v9, v10, v11, v2, v3);
}

uint64_t closure #3 in Actions.UndoFavorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[13] = a5;
  v6[14] = a6;
  v6[11] = a3;
  v6[12] = a4;
  v6[9] = a1;
  v6[10] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  v6[15] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  v6[16] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for Actions.MetricsReportingContext();
  v6[17] = v7;
  v6[18] = *(void *)(v7 - 8);
  v6[19] = swift_task_alloc();
  return _swift_task_switch(closure #3 in Actions.UndoFavorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:), 0, 0);
}

uint64_t closure #3 in Actions.UndoFavorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:)()
{
  uint64_t v1 = *(void (**)(uint64_t))(v0 + 72);
  if (v1) {
    v1(52);
  }
  uint64_t v2 = *(void *)(v0 + 136);
  uint64_t v3 = *(void *)(v0 + 144);
  uint64_t v4 = *(void *)(v0 + 128);
  outlined init with copy of (String, Any)(*(void *)(v0 + 88), v4, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v4, 1, v2) == 1)
  {
    outlined destroy of TaskPriority?(*(void *)(v0 + 128), &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
    return v5();
  }
  else
  {
    uint64_t v7 = *(void *)(v0 + 120);
    uint64_t v8 = *(void *)(v0 + 104);
    outlined init with take of Actions.MetricsReportingContext(*(void *)(v0 + 128), *(void *)(v0 + 152));
    *(void *)(v0 + 160) = MusicItem.metricsTargetIdentifier.getter(v8);
    *(void *)(v0 + 168) = v9;
    uint64_t v10 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v7, 1, 1, v10);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<MetricsEvent.Click.ActionDetails.Key>);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100493400;
    *(void *)(inited + 32) = MusicItem.metricsContentType.getter();
    *(void *)(inited + 40) = v12;
    *(unsigned char *)(inited + 48) = 0;
    *(void *)(v0 + 176) = specialized MetricsEvent.Click.ActionDetails.init(_:)(inited);
    *(void *)(v0 + 184) = v13;
    *(void *)(v0 + 192) = v14;
    *(_WORD *)(v0 + 208) = v15;
    swift_setDeallocating();
    swift_arrayDestroy();
    type metadata accessor for MainActor();
    *(void *)(v0 + 200) = static MainActor.shared.getter();
    uint64_t v17 = dispatch thunk of Actor.unownedExecutor.getter();
    return _swift_task_switch(closure #3 in Actions.UndoFavorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:), v17, v16);
  }
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  uint64_t v1 = *(void *)(v0 + 192);
  uint64_t v3 = *(void **)(v0 + 176);
  uint64_t v2 = *(void *)(v0 + 184);
  unint64_t v5 = *(void *)(v0 + 160);
  uint64_t v4 = *(void *)(v0 + 168);
  unint64_t v6 = *(uint64_t **)(v0 + 152);
  uint64_t v7 = *(void *)(v0 + 120);
  uint64_t v8 = *(unsigned __int16 *)(v0 + 208);
  swift_release();
  specialized static Actions.reportClickEvent(targetIdentifier:targetType:actionType:actionURL:actionDetails:reportingContext:)(v5, v4, 5, 18, v7, v3, v2, v1, v8, v6);
  outlined consume of MetricsEvent.Click.ActionDetails(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease();
  outlined destroy of TaskPriority?(v7, &demangling cache variable for type metadata for URL?);
  return _swift_task_switch(closure #3 in Actions.UndoFavorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:), 0, 0);
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  outlined destroy of Actions.MetricsReportingContext(*(void *)(v0 + 152), (uint64_t (*)(void))type metadata accessor for Actions.MetricsReportingContext);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t objectdestroy_6Tm()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?)
                 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v5 = *(void *)(v1 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  if (*(void *)(v0 + 32)) {
    swift_release();
  }
  uint64_t v7 = v0 + v3;
  uint64_t v8 = type metadata accessor for Actions.MetricsReportingContext();
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v0 + v3, 1, v8))
  {
    uint64_t v16 = v4;
    if (*(void *)(v7 + 8) >= 0xBuLL) {
      swift_bridgeObjectRelease();
    }
    uint64_t v9 = v7 + *(int *)(v8 + 20);
    uint64_t v10 = type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v9, 1, v10))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v15 = v9 + *(int *)(v10 + 24);
      uint64_t v11 = type metadata accessor for URL();
      uint64_t v13 = *(void *)(v11 - 8);
      uint64_t v14 = v11;
      if (!(*(unsigned int (**)(uint64_t, uint64_t))(v13 + 48))(v15, 1)) {
        (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v15, v14);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v4 = v16;
  }
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + ((v3 + v4 + v6) & ~v6), v1);

  return swift_deallocObject();
}

uint64_t partial apply for closure #3 in Actions.UndoFavorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:)()
{
  uint64_t v3 = v0[2];
  uint64_t v2 = v0[3];
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?)
                 - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v0[4];
  uint64_t v7 = v0[5];
  uint64_t v8 = (uint64_t)v0 + v5;
  uint64_t v9 = (uint64_t)v0
     + ((v5 + *(void *)(v4 + 64) + *(unsigned __int8 *)(*(void *)(v3 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v3 - 8) + 80));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v10;
  void *v10 = v1;
  v10[1] = closure #3 in static Actions.ReportConcern.action(context:);
  return closure #3 in Actions.UndoFavorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:)(v6, v7, v8, v9, v3, v2);
}

uint64_t Actions.Favorite.Context.menuItemTitle.getter()
{
  return Actions.Favorite.Context.menuItemTitle.getter();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned char *v5;
  uint64_t v6;
  unsigned char *v7;
  id v8;
  uint64_t v9;
  unsigned char v11[16];

  uint64_t v0 = type metadata accessor for Locale();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = type metadata accessor for String.LocalizationValue();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  unint64_t v5 = &v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v3);
  uint64_t v7 = &v11[-v6];
  String.LocalizationValue.init(stringLiteral:)();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v2 + 16))(v5, v7, v1);
  if (one-time initialization token for module != -1) {
    swift_once();
  }
  uint64_t v8 = (id)static NSBundle.module;
  static Locale.current.getter();
  uint64_t v9 = String.init(localized:table:bundle:locale:comment:)();
  (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v7, v1);
  return v9;
}

uint64_t (*Actions.Favorite.Context.menuItemImage.getter())()
{
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = 1918989427;
  *(void *)(v0 + 24) = 0xE400000000000000;
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = 1918989427;
  *(void *)(v1 + 24) = 0xE400000000000000;
  return partial apply for closure #1 in ActionMenuItemImage.init(systemName:);
}

uint64_t protocol witness for ActionMenuItemConfiguring.menuItemTitle.getter in conformance Actions.Favorite.Context()
{
  return protocol witness for ActionMenuItemConfiguring.menuItemTitle.getter in conformance Actions.Favorite.Context();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned char *v5;
  uint64_t v6;
  unsigned char *v7;
  id v8;
  uint64_t v9;
  unsigned char v11[16];

  uint64_t v0 = type metadata accessor for Locale();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = type metadata accessor for String.LocalizationValue();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  unint64_t v5 = &v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v3);
  uint64_t v7 = &v11[-v6];
  String.LocalizationValue.init(stringLiteral:)();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v2 + 16))(v5, v7, v1);
  if (one-time initialization token for module != -1) {
    swift_once();
  }
  uint64_t v8 = (id)static NSBundle.module;
  static Locale.current.getter();
  uint64_t v9 = String.init(localized:table:bundle:locale:comment:)();
  (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v7, v1);
  return v9;
}

uint64_t (*protocol witness for ActionMenuItemConfiguring.menuItemImage.getter in conformance Actions.Favorite.Context())()
{
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = 1918989427;
  *(void *)(v0 + 24) = 0xE400000000000000;
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = 1918989427;
  *(void *)(v1 + 24) = 0xE400000000000000;
  return closure #1 in ActionMenuItemImage.init(systemName:)partial apply;
}

uint64_t Actions.UndoFavorite.Context.menuItemTitle.getter()
{
  return Actions.Favorite.Context.menuItemTitle.getter();
}

uint64_t (*Actions.UndoFavorite.Context.menuItemImage.getter())()
{
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = 0x616C732E72617473;
  *(void *)(v0 + 24) = 0xEA00000000006873;
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = 0x616C732E72617473;
  *(void *)(v1 + 24) = 0xEA00000000006873;
  return closure #1 in ActionMenuItemImage.init(systemName:)partial apply;
}

uint64_t protocol witness for ActionMenuItemConfiguring.menuItemTitle.getter in conformance Actions.UndoFavorite.Context()
{
  return protocol witness for ActionMenuItemConfiguring.menuItemTitle.getter in conformance Actions.Favorite.Context();
}

uint64_t (*protocol witness for ActionMenuItemConfiguring.menuItemImage.getter in conformance Actions.UndoFavorite.Context())()
{
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = 0x616C732E72617473;
  *(void *)(v0 + 24) = 0xEA00000000006873;
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = 0x616C732E72617473;
  *(void *)(v1 + 24) = 0xEA00000000006873;
  return closure #1 in ActionMenuItemImage.init(systemName:)partial apply;
}

uint64_t protocol witness for static ActionDefinition.action(context:) in conformance Actions.SuggestLess@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return protocol witness for static ActionDefinition.action(context:) in conformance Actions.ShowSongCredits(a1, 51, (uint64_t)closure #1 in static Actions.AddToLibrary.action(context:), (uint64_t)&async function pointer to closure #2 in static Actions.SuggestLess.action(context:), (uint64_t)&async function pointer to closure #3 in static Actions.SuggestLess.action(context:), a2);
}

uint64_t protocol witness for static ActionDefinition.action(context:) in conformance Actions.UndoSuggestLess@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return protocol witness for static ActionDefinition.action(context:) in conformance Actions.ShowSongCredits(a1, 53, (uint64_t)closure #1 in static Actions.ShowSongCredits.action(context:), (uint64_t)&async function pointer to closure #2 in static Actions.UndoSuggestLess.action(context:), (uint64_t)&async function pointer to closure #3 in static Actions.UndoSuggestLess.action(context:), a2);
}

uint64_t closure #1 in Actions.SuggestLess.Context.init<A>(item:library:noticePresenting:metricsReportingContext:)()
{
  uint64_t v0 = type metadata accessor for MusicLibrary.DislikeAction();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicLibrary.SupportedStatus<MusicLibrary.DislikeAction>);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  static MusicLibraryAction<>.dislike.getter();
  MusicLibrary.supportedStatus<A, B>(for:action:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  uint64_t v8 = MusicLibrary.SupportedStatus<>.actionSupportedStatus.getter();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v8;
}

uint64_t partial apply for closure #1 in Actions.SuggestLess.Context.init<A>(item:library:noticePresenting:metricsReportingContext:)()
{
  return partial apply for closure #1 in Actions.Favorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:)((uint64_t (*)(void, unint64_t))closure #1 in Actions.SuggestLess.Context.init<A>(item:library:noticePresenting:metricsReportingContext:));
}

uint64_t closure #2 in Actions.SuggestLess.Context.init<A>(item:library:noticePresenting:metricsReportingContext:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[7] = a3;
  v5[8] = type metadata accessor for Notice.Variant(0);
  v5[9] = swift_task_alloc();
  uint64_t v9 = (void *)swift_task_alloc();
  v5[10] = v9;
  *uint64_t v9 = v5;
  v9[1] = closure #2 in Actions.SuggestLess.Context.init<A>(item:library:noticePresenting:metricsReportingContext:);
  return MusicLibrary.new_dislike<A>(_:)(a2, a4, a5);
}

uint64_t closure #2 in Actions.SuggestLess.Context.init<A>(item:library:noticePresenting:metricsReportingContext:)()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
  else
  {
    return _swift_task_switch(closure #2 in Actions.SuggestLess.Context.init<A>(item:library:noticePresenting:metricsReportingContext:), 0, 0);
  }
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);
  uint64_t v6;

  outlined init with copy of (String, Any)(v0[7], (uint64_t)(v0 + 2), &demangling cache variable for type metadata for NoticePresenting?);
  uint64_t v1 = v0[5];
  v0[11] = v1;
  if (v1)
  {
    v0[12] = v0[6];
    v0[13] = __swift_project_boxed_opaque_existential_0Tm(v0 + 2, v1);
    swift_storeEnumTagMultiPayload();
    type metadata accessor for MainActor();
    v0[14] = static MainActor.shared.getter();
    uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
    return _swift_task_switch(closure #2 in Actions.SuggestLess.Context.init<A>(item:library:noticePresenting:metricsReportingContext:), v3, v2);
  }
  else
  {
    outlined destroy of TaskPriority?((uint64_t)(v0 + 2), &demangling cache variable for type metadata for NoticePresenting?);
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  uint64_t v2 = v0[11];
  uint64_t v1 = v0[12];
  uint64_t v3 = v0[9];
  swift_release();
  NoticePresenting.present(_:internalOnly:)(v3, 0, v2, v1);
  outlined destroy of Actions.MetricsReportingContext(v3, type metadata accessor for Notice.Variant);
  return _swift_task_switch(closure #2 in Actions.SuggestLess.Context.init<A>(item:library:noticePresenting:metricsReportingContext:), 0, 0);
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1000A8C14()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  if (*(void *)(v0 + v4 + 24)) {
    __swift_destroy_boxed_opaque_existential_0Tm(v0 + v4);
  }

  return swift_deallocObject();
}

uint64_t partial apply for closure #2 in Actions.SuggestLess.Context.init<A>(item:library:noticePresenting:metricsReportingContext:)()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v2 - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 8) + 80);
  uint64_t v5 = v0[4];
  uint64_t v6 = (uint64_t)v0 + v4;
  uint64_t v7 = (uint64_t)v0 + ((*(void *)(*(void *)(v2 - 8) + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v8;
  *uint64_t v8 = v1;
  v8[1] = partial apply for closure #1 in static MusicEngagementExtension.performRequest(with:completion:);
  return closure #2 in Actions.SuggestLess.Context.init<A>(item:library:noticePresenting:metricsReportingContext:)(v5, v6, v7, v2, v3);
}

uint64_t closure #3 in Actions.SuggestLess.Context.init<A>(item:library:noticePresenting:metricsReportingContext:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[11] = a3;
  v4[12] = a4;
  v4[9] = a1;
  v4[10] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  v4[13] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  v4[14] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for Actions.MetricsReportingContext();
  v4[15] = v5;
  v4[16] = *(void *)(v5 - 8);
  v4[17] = swift_task_alloc();
  return _swift_task_switch(closure #3 in Actions.SuggestLess.Context.init<A>(item:library:noticePresenting:metricsReportingContext:), 0, 0);
}

uint64_t closure #3 in Actions.SuggestLess.Context.init<A>(item:library:noticePresenting:metricsReportingContext:)()
{
  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v2 = *(void *)(v0 + 128);
  uint64_t v3 = *(void *)(v0 + 112);
  outlined init with copy of (String, Any)(*(void *)(v0 + 72), v3, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    outlined destroy of TaskPriority?(*(void *)(v0 + 112), &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
  else
  {
    uint64_t v6 = *(void *)(v0 + 104);
    uint64_t v7 = *(void *)(v0 + 88);
    outlined init with take of Actions.MetricsReportingContext(*(void *)(v0 + 112), *(void *)(v0 + 136));
    *(void *)(v0 + 144) = MusicItem.metricsTargetIdentifier.getter(v7);
    *(void *)(v0 + 152) = v8;
    uint64_t v9 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v6, 1, 1, v9);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<MetricsEvent.Click.ActionDetails.Key>);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100493400;
    *(void *)(inited + 32) = MusicItem.metricsContentType.getter();
    *(void *)(inited + 40) = v11;
    *(unsigned char *)(inited + 48) = 0;
    *(void *)(v0 + 160) = specialized MetricsEvent.Click.ActionDetails.init(_:)(inited);
    *(void *)(v0 + 168) = v12;
    *(void *)(v0 + 176) = v13;
    *(_WORD *)(v0 + 192) = v14;
    swift_setDeallocating();
    swift_arrayDestroy();
    type metadata accessor for MainActor();
    *(void *)(v0 + 184) = static MainActor.shared.getter();
    uint64_t v16 = dispatch thunk of Actor.unownedExecutor.getter();
    return _swift_task_switch(closure #3 in Actions.SuggestLess.Context.init<A>(item:library:noticePresenting:metricsReportingContext:), v16, v15);
  }
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  uint64_t v1 = *(void *)(v0 + 176);
  uint64_t v3 = *(void **)(v0 + 160);
  uint64_t v2 = *(void *)(v0 + 168);
  uint64_t v5 = *(void *)(v0 + 144);
  unint64_t v4 = *(void *)(v0 + 152);
  uint64_t v6 = *(uint64_t **)(v0 + 136);
  uint64_t v7 = *(void *)(v0 + 104);
  uint64_t v8 = *(unsigned __int16 *)(v0 + 192);
  swift_release();
  specialized static Actions.reportClickEvent(targetIdentifier:targetType:actionType:actionURL:actionDetails:reportingContext:)(v5, v4, 5, 19, v7, v3, v2, v1, v8, v6);
  outlined consume of MetricsEvent.Click.ActionDetails(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease();
  outlined destroy of TaskPriority?(v7, &demangling cache variable for type metadata for URL?);
  return _swift_task_switch(closure #3 in Actions.SuggestLess.Context.init<A>(item:library:noticePresenting:metricsReportingContext:), 0, 0);
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  outlined destroy of Actions.MetricsReportingContext(*(void *)(v0 + 136), (uint64_t (*)(void))type metadata accessor for Actions.MetricsReportingContext);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t partial apply for closure #3 in Actions.SuggestLess.Context.init<A>(item:library:noticePresenting:metricsReportingContext:)()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?)
                 - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v0 + v5;
  uint64_t v7 = v0
     + ((v5 + *(void *)(v4 + 64) + *(unsigned __int8 *)(*(void *)(v2 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 8) + 80));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v8;
  *uint64_t v8 = v1;
  v8[1] = closure #3 in static Actions.ReportConcern.action(context:);
  return closure #3 in Actions.SuggestLess.Context.init<A>(item:library:noticePresenting:metricsReportingContext:)(v6, v7, v2, v3);
}

uint64_t closure #1 in MusicLibrary.SupportedStatus<>.actionSupportedStatus.getter(uint64_t a1)
{
  unint64_t v2 = 0xD000000000000010;
  uint64_t v3 = type metadata accessor for MusicLibrary.DislikeAction.UnsupportedReason();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v14 - v8;
  uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v10((char *)&v14 - v8, a1, v3);
  int v11 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v9, v3);
  if (v11 != enum case for MusicLibrary.DislikeAction.UnsupportedReason.unsupportedType(_:)
    && v11 != enum case for MusicLibrary.DislikeAction.UnsupportedReason.alreadyDisliked(_:))
  {
    if (v11 == enum case for MusicLibrary.DislikeAction.UnsupportedReason.cannotDislikeWhenFavorited(_:))
    {
      return 0xD00000000000001DLL;
    }
    else if (v11 == enum case for MusicLibrary.DislikeAction.UnsupportedReason.cannotDislikeWhenLiked(_:))
    {
      return 0xD000000000000019;
    }
    else if (v11 == enum case for MusicLibrary.DislikeAction.UnsupportedReason.subscriptionRequired(_:))
    {
      return 0xD000000000000015;
    }
    else if (v11 == enum case for MusicLibrary.DislikeAction.UnsupportedReason.cloudLibraryRequired(_:))
    {
      return 0xD000000000000016;
    }
    else if (v11 != enum case for MusicLibrary.DislikeAction.UnsupportedReason.networkRequired(_:))
    {
      if (v11 == enum case for MusicLibrary.DislikeAction.UnsupportedReason.sharedLibrary(_:))
      {
        return 0x6C20646572616853;
      }
      else
      {
        uint64_t v14 = 0;
        unint64_t v15 = 0xE000000000000000;
        _StringGuts.grow(_:)(17);
        swift_bridgeObjectRelease();
        uint64_t v14 = 0x206E776F6E6B6E55;
        unint64_t v15 = 0xEF206E6F73616572;
        v10(v7, a1, v3);
        v13._uint64_t countAndFlagsBits = String.init<A>(describing:)();
        String.append(_:)(v13);
        swift_bridgeObjectRelease();
        unint64_t v2 = v14;
        (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
      }
    }
  }
  return v2;
}

uint64_t closure #1 in Actions.UndoSuggestLess.Context.init<A>(item:library:noticePresenting:metricsReportingContext:)()
{
  uint64_t v0 = type metadata accessor for MusicLibrary.UndoDislikeAction();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicLibrary.SupportedStatus<MusicLibrary.UndoDislikeAction>);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  static MusicLibraryAction<>.undoDislike.getter();
  MusicLibrary.supportedStatus<A, B>(for:action:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  uint64_t v8 = MusicLibrary.SupportedStatus<>.actionSupportedStatus.getter();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v8;
}

uint64_t partial apply for closure #1 in Actions.UndoSuggestLess.Context.init<A>(item:library:noticePresenting:metricsReportingContext:)()
{
  return partial apply for closure #1 in Actions.Favorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:)((uint64_t (*)(void, unint64_t))closure #1 in Actions.UndoSuggestLess.Context.init<A>(item:library:noticePresenting:metricsReportingContext:));
}

uint64_t closure #2 in Actions.UndoSuggestLess.Context.init<A>(item:library:noticePresenting:metricsReportingContext:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  *uint64_t v8 = v4;
  v8[1] = closure #3 in static Actions.ReportConcern.action(context:);
  return MusicLibrary.new_undoDislike<A>(_:)(a2, a3, a4);
}

uint64_t objectdestroyTm_1()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t partial apply for closure #2 in Actions.UndoSuggestLess.Context.init<A>(item:library:noticePresenting:metricsReportingContext:)()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = v0[4];
  uint64_t v5 = (uint64_t)v0
     + ((*(unsigned __int8 *)(*(void *)(v2 - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 8) + 80));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  *uint64_t v6 = v1;
  v6[1] = closure #3 in static Actions.ReportConcern.action(context:);
  return closure #2 in Actions.UndoSuggestLess.Context.init<A>(item:library:noticePresenting:metricsReportingContext:)(v4, v5, v2, v3);
}

uint64_t closure #3 in Actions.UndoSuggestLess.Context.init<A>(item:library:noticePresenting:metricsReportingContext:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[11] = a3;
  v4[12] = a4;
  v4[9] = a1;
  v4[10] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  v4[13] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  v4[14] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for Actions.MetricsReportingContext();
  v4[15] = v5;
  v4[16] = *(void *)(v5 - 8);
  v4[17] = swift_task_alloc();
  return _swift_task_switch(closure #3 in Actions.UndoSuggestLess.Context.init<A>(item:library:noticePresenting:metricsReportingContext:), 0, 0);
}

uint64_t closure #3 in Actions.UndoSuggestLess.Context.init<A>(item:library:noticePresenting:metricsReportingContext:)()
{
  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v2 = *(void *)(v0 + 128);
  uint64_t v3 = *(void *)(v0 + 112);
  outlined init with copy of (String, Any)(*(void *)(v0 + 72), v3, &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    outlined destroy of TaskPriority?(*(void *)(v0 + 112), &demangling cache variable for type metadata for Actions.MetricsReportingContext?);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
  else
  {
    uint64_t v6 = *(void *)(v0 + 104);
    uint64_t v7 = *(void *)(v0 + 88);
    outlined init with take of Actions.MetricsReportingContext(*(void *)(v0 + 112), *(void *)(v0 + 136));
    *(void *)(v0 + 144) = MusicItem.metricsTargetIdentifier.getter(v7);
    *(void *)(v0 + 152) = v8;
    uint64_t v9 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v6, 1, 1, v9);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<MetricsEvent.Click.ActionDetails.Key>);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100493400;
    *(void *)(inited + 32) = MusicItem.metricsContentType.getter();
    *(void *)(inited + 40) = v11;
    *(unsigned char *)(inited + 48) = 0;
    *(void *)(v0 + 160) = specialized MetricsEvent.Click.ActionDetails.init(_:)(inited);
    *(void *)(v0 + 168) = v12;
    *(void *)(v0 + 176) = v13;
    *(_WORD *)(v0 + 192) = v14;
    swift_setDeallocating();
    swift_arrayDestroy();
    type metadata accessor for MainActor();
    *(void *)(v0 + 184) = static MainActor.shared.getter();
    uint64_t v16 = dispatch thunk of Actor.unownedExecutor.getter();
    return _swift_task_switch(closure #3 in Actions.UndoSuggestLess.Context.init<A>(item:library:noticePresenting:metricsReportingContext:), v16, v15);
  }
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  uint64_t v1 = *(void *)(v0 + 176);
  uint64_t v3 = *(void **)(v0 + 160);
  uint64_t v2 = *(void *)(v0 + 168);
  uint64_t v5 = *(void *)(v0 + 144);
  uint64_t v4 = *(void *)(v0 + 152);
  uint64_t v6 = *(uint64_t **)(v0 + 136);
  uint64_t v7 = *(void *)(v0 + 104);
  uint64_t v8 = *(unsigned __int16 *)(v0 + 192);
  swift_release();
  specialized static Actions.reportClickEvent(targetIdentifier:targetType:actionType:actionURL:actionDetails:reportingContext:)(v5, v4, 5, 20, v7, v3, v2, v1, v8, v6);
  outlined consume of MetricsEvent.Click.ActionDetails(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease();
  outlined destroy of TaskPriority?(v7, &demangling cache variable for type metadata for URL?);
  return _swift_task_switch(closure #3 in Actions.UndoSuggestLess.Context.init<A>(item:library:noticePresenting:metricsReportingContext:), 0, 0);
}

uint64_t partial apply for closure #3 in Actions.UndoSuggestLess.Context.init<A>(item:library:noticePresenting:metricsReportingContext:)()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Actions.MetricsReportingContext?)
                 - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v0 + v5;
  uint64_t v7 = v0
     + ((v5 + *(void *)(v4 + 64) + *(unsigned __int8 *)(*(void *)(v2 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 8) + 80));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v8;
  *uint64_t v8 = v1;
  v8[1] = closure #3 in static Actions.ReportConcern.action(context:);
  return closure #3 in Actions.UndoSuggestLess.Context.init<A>(item:library:noticePresenting:metricsReportingContext:)(v6, v7, v2, v3);
}

uint64_t Actions.SuggestLess.Context.menuItemTitle.getter()
{
  return Actions.Favorite.Context.menuItemTitle.getter();
}

uint64_t (*Actions.SuggestLess.Context.menuItemImage.getter())()
{
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = 0x7568742E646E6168;
  *(void *)(v0 + 24) = 0xEF6E776F6473626DLL;
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = 0x7568742E646E6168;
  *(void *)(v1 + 24) = 0xEF6E776F6473626DLL;
  return closure #1 in ActionMenuItemImage.init(systemName:)partial apply;
}

uint64_t protocol witness for ActionMenuItemConfiguring.menuItemTitle.getter in conformance Actions.SuggestLess.Context()
{
  return protocol witness for ActionMenuItemConfiguring.menuItemTitle.getter in conformance Actions.Favorite.Context();
}

uint64_t (*protocol witness for ActionMenuItemConfiguring.menuItemImage.getter in conformance Actions.SuggestLess.Context())()
{
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = 0x7568742E646E6168;
  *(void *)(v0 + 24) = 0xEF6E776F6473626DLL;
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = 0x7568742E646E6168;
  *(void *)(v1 + 24) = 0xEF6E776F6473626DLL;
  return closure #1 in ActionMenuItemImage.init(systemName:)partial apply;
}

uint64_t (*Actions.UndoSuggestLess.Context.menuItemImage.getter())()
{
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = 0xD000000000000015;
  *(void *)(v0 + 24) = 0x8000000100468AD0;
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = 0xD000000000000015;
  *(void *)(v1 + 24) = 0x8000000100468AD0;
  return closure #1 in ActionMenuItemImage.init(systemName:)partial apply;
}

uint64_t (*protocol witness for ActionMenuItemConfiguring.menuItemImage.getter in conformance Actions.UndoSuggestLess.Context())()
{
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = 0xD000000000000015;
  *(void *)(v0 + 24) = 0x8000000100468AD0;
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = 0xD000000000000015;
  *(void *)(v1 + 24) = 0x8000000100468AD0;
  return closure #1 in ActionMenuItemImage.init(systemName:)partial apply;
}

uint64_t specialized Actions.UndoSuggestLess.Context.menuItemTitle.getter()
{
  uint64_t v0 = type metadata accessor for Locale();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = type metadata accessor for String.LocalizationValue();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  unint64_t v5 = &v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v3);
  uint64_t v7 = &v11[-v6];
  String.LocalizationValue.init(stringLiteral:)();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v2 + 16))(v5, v7, v1);
  if (one-time initialization token for module != -1) {
    swift_once();
  }
  id v8 = (id)static NSBundle.module;
  static Locale.current.getter();
  uint64_t v9 = String.init(localized:table:bundle:locale:comment:)();
  (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v7, v1);
  return v9;
}

ValueMetadata *type metadata accessor for Actions.Favorite()
{
  return &type metadata for Actions.Favorite;
}

ValueMetadata *type metadata accessor for Actions.Favorite.Context()
{
  return &type metadata for Actions.Favorite.Context;
}

ValueMetadata *type metadata accessor for Actions.UndoFavorite()
{
  return &type metadata for Actions.UndoFavorite;
}

ValueMetadata *type metadata accessor for Actions.UndoFavorite.Context()
{
  return &type metadata for Actions.UndoFavorite.Context;
}

ValueMetadata *type metadata accessor for Actions.SuggestLess()
{
  return &type metadata for Actions.SuggestLess;
}

ValueMetadata *type metadata accessor for Actions.SuggestLess.Context()
{
  return &type metadata for Actions.SuggestLess.Context;
}

ValueMetadata *type metadata accessor for Actions.UndoSuggestLess()
{
  return &type metadata for Actions.UndoSuggestLess;
}

ValueMetadata *type metadata accessor for Actions.UndoSuggestLess.Context()
{
  return &type metadata for Actions.UndoSuggestLess.Context;
}

uint64_t sub_1000AACD8()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

unint64_t (*Actions.RateSong.Context.init<A>(item:library:ratingViewController:presentationSource:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8))()
{
  uint64_t v30 = a8;
  uint64_t v31 = a3;
  uint64_t v28 = a7;
  uint64_t v29 = a2;
  uint64_t v32 = a4;
  uint64_t v33 = a5;
  v27[0] = a1;
  uint64_t v11 = *(void *)(a6 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  uint64_t v13 = __chkstk_darwin(a1);
  __int16 v14 = (char *)v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)v27 - v15;
  (*(void (**)(char *))(v11 + 16))((char *)v27 - v15);
  uint64_t v17 = *(unsigned __int8 *)(v11 + 80);
  v27[1] = v17 | 7;
  uint64_t v18 = (char *)swift_allocObject();
  *((void *)v18 + 2) = a6;
  *((void *)v18 + 3) = a7;
  uint64_t v19 = v30;
  *((void *)v18 + 4) = v30;
  *((void *)v18 + 5) = a2;
  uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v20(&v18[(v17 + 48) & ~v17], v16, a6);
  v20(v14, (char *)v27[0], a6);
  uint64_t v21 = (v17 + 56) & ~v17;
  unint64_t v22 = (v12 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v23 = (char *)swift_allocObject();
  uint64_t v24 = v28;
  *((void *)v23 + 2) = a6;
  *((void *)v23 + 3) = v24;
  uint64_t v25 = v31;
  *((void *)v23 + 4) = v19;
  *((void *)v23 + 5) = v25;
  *((void *)v23 + 6) = v32;
  v20(&v23[v21], v14, a6);
  *(void *)&v23[v22] = v29;
  outlined init with take of PresentationSource(v33, (uint64_t)&v23[(v22 + 15) & 0xFFFFFFFFFFFFFFF8]);
  swift_retain();
  return partial apply for closure #1 in Actions.RateSong.Context.init<A>(item:library:ratingViewController:presentationSource:);
}

uint64_t static Actions.RateSong.action(context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  *(void *)a5 = a1;
  *(void *)(a5 + 8) = a2;
  *(void *)(a5 + 16) = a3;
  *(void *)(a5 + 24) = a4;
  *(unsigned char *)(a5 + 32) = 35;
  *(void *)(a5 + 40) = closure #1 in static Actions.AddToLibrary.action(context:);
  *(void *)(a5 + 48) = 0;
  *(void *)(a5 + 56) = 0x4014000000000000;
  *(void *)(a5 + 64) = &async function pointer to closure #2 in static Actions.RateSong.action(context:);
  *(void *)(a5 + 72) = 0;
  *(void *)(a5 + 80) = &async function pointer to closure #3 in static Actions.RateSong.action(context:);
  *(void *)(a5 + 88) = 0;
  swift_retain();

  return swift_retain();
}

uint64_t protocol witness for static ActionDefinition.action(context:) in conformance Actions.RateSong@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *(void *)(a1 + 24);
  *(void *)a2 = *(void *)a1;
  *(_OWORD *)(a2 + 8) = *(_OWORD *)(a1 + 8);
  *(void *)(a2 + 24) = v2;
  *(unsigned char *)(a2 + 32) = 35;
  *(void *)(a2 + 40) = closure #1 in static Actions.AddToLibrary.action(context:);
  *(void *)(a2 + 48) = 0;
  *(void *)(a2 + 56) = 0x4014000000000000;
  *(void *)(a2 + 64) = &async function pointer to closure #2 in static Actions.RateSong.action(context:);
  *(void *)(a2 + 72) = 0;
  *(void *)(a2 + 80) = &async function pointer to closure #3 in static Actions.RateSong.action(context:);
  *(void *)(a2 + 88) = 0;
  swift_retain();

  return swift_retain();
}

uint64_t Actions.RateSong.Context.menuItemTitle.getter()
{
  uint64_t v0 = type metadata accessor for Locale();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = type metadata accessor for String.LocalizationValue();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  unint64_t v5 = &v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v3);
  uint64_t v7 = &v11[-v6];
  String.LocalizationValue.init(stringLiteral:)();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v2 + 16))(v5, v7, v1);
  if (one-time initialization token for module != -1) {
    swift_once();
  }
  id v8 = (id)static NSBundle.module;
  static Locale.current.getter();
  uint64_t v9 = String.init(localized:table:bundle:locale:comment:)();
  (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v7, v1);
  return v9;
}

uint64_t (*Actions.RateSong.Context.menuItemImage.getter())()
{
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = 0xD000000000000017;
  *(void *)(v0 + 24) = 0x8000000100468C90;
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = 0xD000000000000017;
  *(void *)(v1 + 24) = 0x8000000100468C90;
  return partial apply for closure #1 in ActionMenuItemImage.init(systemName:);
}

uint64_t (*protocol witness for ActionMenuItemConfiguring.menuItemImage.getter in conformance Actions.RateSong.Context())()
{
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = 0xD000000000000017;
  *(void *)(v0 + 24) = 0x8000000100468C90;
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = 0xD000000000000017;
  *(void *)(v1 + 24) = 0x8000000100468C90;
  return closure #1 in ActionMenuItemImage.init(systemName:)partial apply;
}

unint64_t closure #1 in Actions.RateSong.Context.init<A>(item:library:ratingViewController:presentationSource:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v27 = a4;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  uint64_t v4 = type metadata accessor for MusicLibrary.AddAction();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicLibrary.SupportedStatus<MusicLibrary.AddAction>);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for MusicLibrary();
  static MusicLibrary.shared.getter();
  char v12 = static MusicLibrary.== infix(_:_:)();
  swift_release();
  if ((v12 & 1) == 0) {
    return 0xD00000000000001DLL;
  }
  uint64_t v24 = v4;
  uint64_t v25 = v5;
  uint64_t v26 = v9;
  id v13 = [self standardUserDefaults];
  NSString v14 = String._bridgeToObjectiveC()();
  unsigned int v15 = [v13 BOOLForKey:v14];

  if (!v15) {
    return 0xD000000000000018;
  }
  static MusicLibraryAction<>.add.getter();
  uint64_t v16 = v24;
  MusicLibrary.supportedStatus<A, B>(for:action:)();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v7, v16);
  uint64_t v17 = v26;
  unint64_t v18 = 0xD000000000000011;
  if ((*(unsigned int (**)(char *, uint64_t))(v26 + 88))(v11, v8) == enum case for MusicLibrary.SupportedStatus.unsupported<A>(_:))
  {
    (*(void (**)(char *, uint64_t))(v17 + 96))(v11, v8);
    uint64_t v19 = type metadata accessor for MusicLibrary.AddAction.UnsupportedReason();
    uint64_t v20 = *(void *)(v19 - 8);
    int v21 = (*(uint64_t (**)(char *, uint64_t))(v20 + 88))(v11, v19);
    int v22 = enum case for MusicLibrary.AddAction.UnsupportedReason.alreadyAdded(_:);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v11, v19);
    if (v21 == v22) {
      return 0;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v11, v8);
  }
  return v18;
}

uint64_t sub_1000AB764()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

unint64_t partial apply for closure #1 in Actions.RateSong.Context.init<A>(item:library:ratingViewController:presentationSource:)()
{
  return closure #1 in Actions.RateSong.Context.init<A>(item:library:ratingViewController:presentationSource:)(v0[5], (uint64_t)v0+ ((*(unsigned __int8 *)(*(void *)(v0[2] - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[2] - 8) + 80)), v0[2], v0[3]);
}

id NSUserDefaults.showStarRatings.getter()
{
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [v0 BOOLForKey:v1];

  return v2;
}

uint64_t closure #2 in Actions.RateSong.Context.init<A>(item:library:ratingViewController:presentationSource:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[14] = a7;
  v8[15] = a8;
  v8[12] = a5;
  v8[13] = a6;
  v8[10] = a3;
  v8[11] = a4;
  v8[8] = a1;
  v8[9] = a2;
  uint64_t v9 = *(void *)(a6 - 8);
  v8[16] = v9;
  v8[17] = *(void *)(v9 + 64);
  v8[18] = swift_task_alloc();
  type metadata accessor for Locale();
  v8[19] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for String.LocalizationValue();
  v8[20] = v10;
  v8[21] = *(void *)(v10 - 8);
  v8[22] = swift_task_alloc();
  v8[23] = swift_task_alloc();
  type metadata accessor for MainActor();
  v8[24] = static MainActor.shared.getter();
  uint64_t v12 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(closure #2 in Actions.RateSong.Context.init<A>(item:library:ratingViewController:presentationSource:), v12, v11);
}

uint64_t closure #2 in Actions.RateSong.Context.init<A>(item:library:ratingViewController:presentationSource:)()
{
  uint64_t v1 = *(void *)(v0 + 184);
  uint64_t v3 = *(void *)(v0 + 168);
  uint64_t v2 = *(void *)(v0 + 176);
  uint64_t v4 = *(void *)(v0 + 160);
  swift_release();
  String.LocalizationValue.init(stringLiteral:)();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v1, v4);
  if (one-time initialization token for module != -1) {
    swift_once();
  }
  uint64_t v5 = *(void *)(v0 + 184);
  uint64_t v6 = *(void *)(v0 + 160);
  uint64_t v7 = *(void *)(v0 + 168);
  id v8 = (id)static NSBundle.module;
  static Locale.current.getter();
  String.init(localized:table:bundle:locale:comment:)();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  NSString v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v10 = [self alertControllerWithTitle:v9 message:0 preferredStyle:1];

  if (one-time initialization token for cancelButtonTitle != -1) {
    swift_once();
  }
  uint64_t v11 = *(void *)(v0 + 80);
  uint64_t v12 = *(uint64_t (**)(uint64_t))(v0 + 64);
  swift_bridgeObjectRetain();
  NSString v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v32 = self;
  id v14 = [v32 actionWithTitle:v13 style:1 handler:0];

  uint64_t v33 = v14;
  [v10 addAction:v14];
  unsigned int v15 = (void *)v12(v11);
  uint64_t v31 = v16;
  if (one-time initialization token for doneButtonTitle != -1) {
    swift_once();
  }
  uint64_t v17 = *(void *)(v0 + 144);
  uint64_t v18 = *(void *)(v0 + 128);
  uint64_t v19 = *(void *)(v0 + 120);
  uint64_t v20 = *(void *)(v0 + 88);
  long long v30 = *(_OWORD *)(v0 + 104);
  uint64_t v21 = *(void *)(v0 + 104);
  (*(void (**)(uint64_t, void, uint64_t))(v18 + 16))(v17, *(void *)(v0 + 80), v21);
  unint64_t v22 = (*(unsigned __int8 *)(v18 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = v30;
  *(void *)(v23 + 32) = v19;
  *(void *)(v23 + 40) = v15;
  *(void *)(v23 + 48) = v31;
  *(void *)(v23 + 56) = v20;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v18 + 32))(v23 + v22, v17, v21);
  swift_bridgeObjectRetain();
  id v24 = v15;
  swift_retain();
  NSString v25 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  *(void *)(v0 + 48) = partial apply for closure #1 in closure #2 in Actions.RateSong.Context.init<A>(item:library:ratingViewController:presentationSource:);
  *(void *)(v0 + 56) = v23;
  *(void *)(v0 + 16) = _NSConcreteStackBlock;
  *(void *)(v0 + 24) = 1107296256;
  *(void *)(v0 + 32) = thunk for @escaping @callee_guaranteed (@guaranteed UIAlertAction) -> ();
  *(void *)(v0 + 40) = &block_descriptor;
  uint64_t v26 = _Block_copy((const void *)(v0 + 16));
  swift_release();
  id v27 = [v32 actionWithTitle:v25 style:0 handler:v26];
  _Block_release(v26);

  [v10 addAction:v27];
  [v10 setPreferredAction:v27];
  [v10 setContentViewController:v24];
  PresentationSource.present(_:wantsAutomaticModalPresentationStyle:permittedArrowDirections:animated:completion:)(v10, 1, (id)0xF, (void **)1, 0, 0);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v28 = *(uint64_t (**)(void))(v0 + 8);
  return v28();
}

uint64_t sub_1000ABF20()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  uint64_t v5 = v0 + v4;
  swift_unknownObjectWeakDestroy();
  int v6 = *(unsigned __int8 *)(v0 + v4 + 48);
  if (v6 != 255) {
    outlined consume of PresentationSource.Position(*(id *)(v5 + 8), *(void *)(v5 + 16), *(void *)(v5 + 24), *(void *)(v5 + 32), *(void *)(v5 + 40), v6);
  }
  if (*(void *)(v5 + 56)) {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t partial apply for closure #2 in Actions.RateSong.Context.init<A>(item:library:ratingViewController:presentationSource:)()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = v0[4];
  uint64_t v5 = v0[5];
  unint64_t v6 = (*(unsigned __int8 *)(*(void *)(v2 - 8) + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 8) + 80);
  unint64_t v7 = (*(void *)(*(void *)(v2 - 8) + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = v0[6];
  uint64_t v9 = (uint64_t)v0 + v6;
  uint64_t v10 = *(void *)((char *)v0 + v7);
  uint64_t v11 = (uint64_t)v0 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v12;
  *uint64_t v12 = v1;
  v12[1] = partial apply for closure #1 in static MusicEngagementExtension.performRequest(with:completion:);
  return closure #2 in Actions.RateSong.Context.init<A>(item:library:ratingViewController:presentationSource:)(v5, v8, v9, v10, v11, v2, v3, v4);
}

ValueMetadata *type metadata accessor for Actions.RateSong()
{
  return &type metadata for Actions.RateSong;
}

ValueMetadata *type metadata accessor for Actions.RateSong.Context()
{
  return &type metadata for Actions.RateSong.Context;
}

uint64_t sub_1000AC194()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t closure #1 in closure #2 in Actions.RateSong.Context.init<A>(item:library:ratingViewController:presentationSource:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v26 = a7;
  uint64_t v27 = a8;
  uint64_t v13 = *(void *)(a6 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  __chkstk_darwin(a1);
  unsigned int v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&_sScPSgMD_0);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)&v26 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 1, 1, v19);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a5, a6);
  type metadata accessor for MainActor();
  id v20 = a2;
  swift_retain();
  uint64_t v21 = static MainActor.shared.getter();
  unint64_t v22 = (*(unsigned __int8 *)(v13 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v23 = (char *)swift_allocObject();
  *((void *)v23 + 2) = v21;
  *((void *)v23 + 3) = &protocol witness table for MainActor;
  uint64_t v24 = v26;
  *((void *)v23 + 4) = a6;
  *((void *)v23 + 5) = v24;
  *((void *)v23 + 6) = v27;
  *((void *)v23 + 7) = v20;
  *((void *)v23 + 8) = a3;
  *((void *)v23 + 9) = a4;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(&v23[v22], v15, a6);
  _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5_0((uint64_t)v18, (uint64_t)&async function pointer to partial apply for closure #1 in closure #1 in closure #2 in Actions.RateSong.Context.init<A>(item:library:ratingViewController:presentationSource:), (uint64_t)v23);
  return swift_release();
}

uint64_t closure #1 in closure #1 in closure #2 in Actions.RateSong.Context.init<A>(item:library:ratingViewController:presentationSource:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[8] = v13;
  v8[9] = v14;
  v8[6] = a7;
  v8[7] = a8;
  v8[4] = a5;
  v8[5] = a6;
  _OWORD v8[3] = a4;
  v8[10] = *(void *)(a8 - 8);
  v8[11] = swift_task_alloc();
  v8[12] = swift_task_alloc();
  type metadata accessor for MainActor();
  v8[13] = static MainActor.shared.getter();
  uint64_t v10 = dispatch thunk of Actor.unownedExecutor.getter();
  v8[14] = v10;
  v8[15] = v9;
  return _swift_task_switch(closure #1 in closure #1 in closure #2 in Actions.RateSong.Context.init<A>(item:library:ratingViewController:presentationSource:), v10, v9);
}

uint64_t closure #1 in closure #1 in closure #2 in Actions.RateSong.Context.init<A>(item:library:ratingViewController:presentationSource:)()
{
  uint64_t v1 = v0[8];
  uint64_t v2 = v0[4];
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(ObjectType, v2);
  v0[16] = v4;
  double v5 = (double)v4 / 5.0;
  unint64_t v6 = (void *)swift_task_alloc();
  v0[17] = v6;
  uint64_t v7 = *(void *)(v1 + 8);
  *unint64_t v6 = v0;
  v6[1] = closure #1 in closure #1 in closure #2 in Actions.RateSong.Context.init<A>(item:library:ratingViewController:presentationSource:);
  uint64_t v8 = v0[9];
  uint64_t v10 = v0[6];
  uint64_t v9 = v0[7];
  v11.n128_f64[0] = v5;
  return MusicLibrary.setUserRating<A>(_:for:)(v10, v9, v7, v8, v11);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();
  uint64_t v7;

  uint64_t v2 = *v1;
  *(void *)(*v1 + 144) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 120);
  uint64_t v4 = *(void *)(v2 + 112);
  if (v0) {
    double v5 = closure #1 in closure #1 in closure #2 in Actions.RateSong.Context.init<A>(item:library:ratingViewController:presentationSource:);
  }
  else {
    double v5 = closure #1 in closure #1 in closure #2 in Actions.RateSong.Context.init<A>(item:library:ratingViewController:presentationSource:);
  }
  return _swift_task_switch(v5, v4, v3);
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  NSObject *v7;
  os_log_type_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(void);
  NSObject *log;
  uint64_t v27;
  void *v28;
  uint64_t v29;

  uint64_t v28 = v0;
  swift_release();
  if (one-time initialization token for actions != -1) {
    swift_once();
  }
  uint64_t v2 = v0[10];
  uint64_t v1 = v0[11];
  uint64_t v4 = v0[6];
  uint64_t v3 = v0[7];
  double v5 = type metadata accessor for Logger();
  __swift_project_value_buffer(v5, (uint64_t)static Logger.actions);
  unint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
  v6(v1, v4, v3);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v7 = Logger.logObject.getter();
  uint64_t v8 = static os_log_type_t.error.getter();
  uint64_t v9 = os_log_type_enabled(v7, v8);
  uint64_t v10 = v0[18];
  if (v9)
  {
    log = v7;
    __n128 v11 = v0[11];
    uint64_t v12 = v0[12];
    uint64_t v13 = v0[10];
    uint64_t v14 = v0[7];
    unsigned int v15 = (double)(uint64_t)v0[16] / 5.0;
    uint64_t v16 = swift_slowAlloc();
    uint64_t v27 = swift_slowAlloc();
    *(_DWORD *)uint64_t v16 = 134349570;
    *(double *)(v16 + 4) = v15;
    *(_WORD *)(v16 + 12) = 2082;
    v6(v12, v11, v14);
    uint64_t v17 = String.init<A>(describing:)();
    *(void *)(v16 + 14) = _s2os32getNullTerminatedUTF8PointerImpl_21storingStringOwnersInSVSS_SpyypGSgztF_0(v17, v18, &v27);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v14);
    *(_WORD *)(v16 + 22) = 2082;
    v0[2] = v10;
    swift_errorRetain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error);
    uint64_t v19 = String.init<A>(describing:)();
    *(void *)(v16 + 24) = _s2os32getNullTerminatedUTF8PointerImpl_21storingStringOwnersInSVSS_SpyypGSgztF_0(v19, v20, &v27);
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, log, v8, "Failed to set userRating=%{public}f for item=%{public}s with error=%{public}s", (uint8_t *)v16, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    uint64_t v21 = v0[10];
    unint64_t v22 = v0[11];
    uint64_t v23 = v0[7];
    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v22, v23);
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v24 = (uint64_t (*)(void))v0[1];
  return v24();
}