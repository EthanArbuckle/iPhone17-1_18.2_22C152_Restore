uint64_t closure #3 in closure #1 in Collaboration.Flow.View.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  void (*v11)(char *, char *, uint64_t);
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t);
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void v42[2];
  uint64_t (*v43)(uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  v58 = a1;
  v56 = a2;
  v52 = *(void *)(type metadata accessor for Collaboration.Flow.View(0) - 8);
  __chkstk_darwin();
  v53 = v2;
  v54 = (uint64_t)v42 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Alert.Button();
  __chkstk_darwin();
  v55 = (char *)v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v57 = (char *)v42 - v4;
  type metadata accessor for Locale();
  __chkstk_darwin();
  v5 = type metadata accessor for String.LocalizationValue();
  v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  v8 = (char *)v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v10 = (char *)v42 - v9;
  String.LocalizationValue.init(stringLiteral:)();
  v11 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
  v11(v8, v10, v5);
  if (one-time initialization token for module != -1) {
    swift_once();
  }
  v12 = (id)static NSBundle.module;
  static Locale.current.getter();
  v13 = String.init(localized:table:bundle:locale:comment:)();
  v15 = v14;
  v43 = *(uint64_t (**)(uint64_t))(v6 + 8);
  ((void (*)(char *, uint64_t))v43)(v10, v5);
  v59 = v13;
  v60 = v15;
  v42[1] = _sS2SSysWl_1();
  v16 = Text.init<A>(_:)();
  v50 = v17;
  v51 = v16;
  v48 = v18;
  v49 = v19;
  String.LocalizationValue.init(stringLiteral:)();
  v11(v8, v10, v5);
  v20 = (id)static NSBundle.module;
  static Locale.current.getter();
  v21 = String.init(localized:table:bundle:locale:comment:)();
  v23 = v22;
  v24 = v43;
  ((void (*)(char *, uint64_t))v43)(v10, v5);
  v59 = v21;
  v60 = v23;
  v25 = Text.init<A>(_:)();
  v46 = v26;
  v47 = v25;
  v44 = v27 & 1;
  v45 = v28;
  String.LocalizationValue.init(stringLiteral:)();
  v11(v8, v10, v5);
  v29 = (id)static NSBundle.module;
  static Locale.current.getter();
  v30 = String.init(localized:table:bundle:locale:comment:)();
  v32 = v31;
  ((void (*)(char *, uint64_t))v24)(v10, v5);
  v59 = v30;
  v60 = v32;
  v33 = Text.init<A>(_:)();
  v35 = v34;
  LOBYTE(v30) = v36 & 1;
  v43 = type metadata accessor for Collaboration.Flow.View;
  v37 = v54;
  outlined init with copy of Collaboration.Flow(v58, v54, type metadata accessor for Collaboration.Flow.View);
  v38 = (*(unsigned __int8 *)(v52 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80);
  v39 = swift_allocObject();
  outlined init with take of Collaboration.Flow.Collaborator(v37, v39 + v38, type metadata accessor for Collaboration.Flow.View);
  static Alert.Button.default(_:action:)();
  outlined consume of Text.Storage(v33, v35, v30);
  swift_release();
  swift_bridgeObjectRelease();
  outlined init with copy of Collaboration.Flow(v58, v37, v43);
  v40 = swift_allocObject();
  outlined init with take of Collaboration.Flow.Collaborator(v37, v40 + v38, type metadata accessor for Collaboration.Flow.View);
  static Alert.Button.cancel(_:)();
  swift_release();
  return Alert.init(title:message:primaryButton:secondaryButton:)();
}

uint64_t closure #1 in closure #3 in closure #1 in Collaboration.Flow.View.body.getter(uint64_t a1)
{
  uint64_t v2 = *(void *)(type metadata accessor for Collaboration.Flow.View(0) - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  __chkstk_darwin();
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&_sScPSgMD_2);
  __chkstk_darwin();
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  outlined init with copy of Collaboration.Flow(a1, (uint64_t)v4, type metadata accessor for Collaboration.Flow.View);
  type metadata accessor for MainActor();
  uint64_t v8 = static MainActor.shared.getter();
  unint64_t v9 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v8;
  *(void *)(v10 + 24) = &protocol witness table for MainActor;
  outlined init with take of Collaboration.Flow.Collaborator((uint64_t)v4, v10 + v9, type metadata accessor for Collaboration.Flow.View);
  _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5_1((uint64_t)v6, (uint64_t)&async function pointer to partial apply for closure #1 in closure #1 in closure #3 in closure #1 in Collaboration.Flow.View.body.getter, v10);
  return swift_release();
}

uint64_t closure #1 in closure #1 in closure #3 in closure #1 in Collaboration.Flow.View.body.getter()
{
  v0[2] = type metadata accessor for MainActor();
  v0[3] = static MainActor.shared.getter();
  v1 = (void *)swift_task_alloc();
  v0[4] = v1;
  void *v1 = v0;
  v1[1] = closure #1 in closure #1 in closure #1 in static Modifier.actionItems(alert:);
  return Collaboration.Flow.View.initiate(shouldDuplicate:)(1);
}

uint64_t closure #2 in closure #3 in closure #1 in Collaboration.Flow.View.body.getter(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DismissAction();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<Playlist?, Error>);
  __chkstk_darwin();
  uint64_t v7 = (uint64_t *)((char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  _s9MusicCore13CollaborationO5ErrorOAEsAdAWl_0();
  uint64_t v8 = swift_allocError();
  *(_OWORD *)uint64_t v9 = xmmword_1004A3CE0;
  *(unsigned char *)(v9 + 16) = 3;
  *uint64_t v7 = v8;
  swift_storeEnumTagMultiPayload();
  specialized Environment.wrappedValue.getter((uint64_t)v5);
  DismissAction.callAsFunction()();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t v10 = type metadata accessor for Collaboration.Flow.View(0);
  (*(void (**)(uint64_t *))(a1 + *(int *)(v10 + 48)))(v7);
  return outlined destroy of TaskPriority?((uint64_t)v7, &demangling cache variable for type metadata for Result<Playlist?, Error>);
}

uint64_t closure #1 in closure #4 in closure #1 in Collaboration.Flow.View.body.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[2] = a4;
  v5[3] = a5;
  uint64_t v6 = type metadata accessor for DismissAction();
  v5[4] = v6;
  v5[5] = *(void *)(v6 - 8);
  v5[6] = swift_task_alloc();
  v5[7] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<Playlist?, Error>);
  v5[8] = swift_task_alloc();
  type metadata accessor for MainActor();
  v5[9] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[10] = v8;
  v5[11] = v7;
  return _swift_task_switch(closure #1 in closure #4 in closure #1 in Collaboration.Flow.View.body.getter, v8, v7);
}

uint64_t closure #1 in closure #4 in closure #1 in Collaboration.Flow.View.body.getter()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = (int *)type metadata accessor for Collaboration.Flow.View(0);
  v0[12] = v2;
  if (*(unsigned char *)(v1 + v2[10]) == 1 && (uint64_t v3 = *(int **)(v1 + v2[11])) != 0)
  {
    type metadata accessor for InlineProfileEditingView.Context();
    lazy protocol witness table accessor for type InlineProfileEditingView.Context and conformance InlineProfileEditingView.Context(&lazy protocol witness table cache variable for type InlineProfileEditingView.Context and conformance InlineProfileEditingView.Context, (void (*)(uint64_t))type metadata accessor for InlineProfileEditingView.Context);
    uint64_t v4 = StateObject.wrappedValue.getter();
    v0[13] = v4;
    uint64_t v10 = (uint64_t (*)(uint64_t))((char *)v3 + *v3);
    uint64_t v5 = (void *)swift_task_alloc();
    v0[14] = v5;
    *uint64_t v5 = v0;
    v5[1] = closure #1 in closure #4 in closure #1 in Collaboration.Flow.View.body.getter;
    return v10(v4);
  }
  else
  {
    uint64_t v7 = v1 + v2[8];
    uint64_t v8 = (void *)swift_task_alloc();
    v0[16] = v8;
    *uint64_t v8 = v0;
    v8[1] = closure #1 in closure #4 in closure #1 in Collaboration.Flow.View.body.getter;
    uint64_t v9 = v0[3];
    return Collaboration.Manager.join(_:url:)(v7, v9);
  }
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();
  uint64_t v7;

  uint64_t v2 = *v1;
  *(void *)(*v1 + 120) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 80);
    uint64_t v4 = *(void *)(v2 + 88);
    uint64_t v5 = closure #1 in closure #4 in closure #1 in Collaboration.Flow.View.body.getter;
  }
  else
  {
    swift_release();
    uint64_t v3 = *(void *)(v2 + 80);
    uint64_t v4 = *(void *)(v2 + 88);
    uint64_t v5 = closure #1 in closure #4 in closure #1 in Collaboration.Flow.View.body.getter;
  }
  return _swift_task_switch(v5, v3, v4);
}

{
  void *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v5;

  uint64_t v1 = v0[2] + *(int *)(v0[12] + 32);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[16] = v2;
  *uint64_t v2 = v0;
  v2[1] = closure #1 in closure #4 in closure #1 in Collaboration.Flow.View.body.getter;
  uint64_t v3 = v0[3];
  return Collaboration.Manager.join(_:url:)(v1, v3);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();
  uint64_t v7;

  uint64_t v2 = *v1;
  *(void *)(*v1 + 136) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 88);
  uint64_t v4 = *(void *)(v2 + 80);
  if (v0) {
    uint64_t v5 = closure #1 in closure #4 in closure #1 in Collaboration.Flow.View.body.getter;
  }
  else {
    uint64_t v5 = closure #1 in closure #4 in closure #1 in Collaboration.Flow.View.body.getter;
  }
  return _swift_task_switch(v5, v4, v3);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);
  uint64_t v10;

  uint64_t v1 = v0[12];
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[6];
  uint64_t v4 = v0[4];
  uint64_t v5 = v0[5];
  uint64_t v6 = v0[2];
  swift_release();
  uint64_t v7 = type metadata accessor for Playlist();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v2, 1, 1, v7);
  swift_storeEnumTagMultiPayload();
  specialized Environment.wrappedValue.getter(v3);
  DismissAction.callAsFunction()();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  (*(void (**)(uint64_t))(v6 + *(int *)(v1 + 48)))(v2);
  outlined destroy of TaskPriority?(v2, &demangling cache variable for type metadata for Result<Playlist?, Error>);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);
  uint64_t v10;

  swift_release();
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[12];
  uint64_t v3 = (void *)v0[8];
  uint64_t v4 = v0[6];
  uint64_t v5 = v0[4];
  uint64_t v6 = v0[5];
  uint64_t v7 = v0[2];
  swift_release();
  *uint64_t v3 = v1;
  swift_storeEnumTagMultiPayload();
  swift_errorRetain();
  specialized Environment.wrappedValue.getter(v4);
  DismissAction.callAsFunction()();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(void *))(v7 + *(int *)(v2 + 48)))(v3);
  swift_errorRelease();
  outlined destroy of TaskPriority?((uint64_t)v3, &demangling cache variable for type metadata for Result<Playlist?, Error>);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);
  uint64_t v10;

  uint64_t v1 = v0[17];
  uint64_t v2 = v0[12];
  uint64_t v3 = (void *)v0[8];
  uint64_t v4 = v0[6];
  uint64_t v5 = v0[4];
  uint64_t v6 = v0[5];
  uint64_t v7 = v0[2];
  swift_release();
  *uint64_t v3 = v1;
  swift_storeEnumTagMultiPayload();
  swift_errorRetain();
  specialized Environment.wrappedValue.getter(v4);
  DismissAction.callAsFunction()();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(void *))(v7 + *(int *)(v2 + 48)))(v3);
  swift_errorRelease();
  outlined destroy of TaskPriority?((uint64_t)v3, &demangling cache variable for type metadata for Result<Playlist?, Error>);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t closure #1 in closure #5 in closure #1 in Collaboration.Flow.View.body.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[2] = a4;
  v5[3] = a5;
  uint64_t v6 = type metadata accessor for DismissAction();
  v5[4] = v6;
  v5[5] = *(void *)(v6 - 8);
  v5[6] = swift_task_alloc();
  v5[7] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<Playlist?, Error>);
  v5[8] = swift_task_alloc();
  type metadata accessor for MainActor();
  v5[9] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[10] = v8;
  v5[11] = v7;
  return _swift_task_switch(closure #1 in closure #5 in closure #1 in Collaboration.Flow.View.body.getter, v8, v7);
}

uint64_t closure #1 in closure #5 in closure #1 in Collaboration.Flow.View.body.getter()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = type metadata accessor for Collaboration.Flow.View(0);
  v0[12] = v2;
  uint64_t v3 = v1 + *(int *)(v2 + 32);
  uint64_t v4 = (void *)swift_task_alloc();
  v0[13] = v4;
  void *v4 = v0;
  v4[1] = closure #1 in closure #5 in closure #1 in Collaboration.Flow.View.body.getter;
  uint64_t v5 = v0[3];
  return Collaboration.Manager.moderate(_:collaborator:in:)(0, v5, v3);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();
  uint64_t v7;

  uint64_t v2 = *v1;
  *(void *)(*v1 + 112) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 88);
  uint64_t v4 = *(void *)(v2 + 80);
  if (v0) {
    uint64_t v5 = closure #1 in closure #5 in closure #1 in Collaboration.Flow.View.body.getter;
  }
  else {
    uint64_t v5 = closure #1 in closure #4 in closure #1 in Collaboration.Flow.View.body.getter;
  }
  return _swift_task_switch(v5, v4, v3);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);
  uint64_t v10;

  uint64_t v1 = v0[14];
  uint64_t v2 = v0[12];
  uint64_t v3 = (void *)v0[8];
  uint64_t v4 = v0[6];
  uint64_t v5 = v0[4];
  uint64_t v6 = v0[5];
  uint64_t v7 = v0[2];
  swift_release();
  *uint64_t v3 = v1;
  swift_storeEnumTagMultiPayload();
  swift_errorRetain();
  specialized Environment.wrappedValue.getter(v4);
  DismissAction.callAsFunction()();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(void *))(v7 + *(int *)(v2 + 48)))(v3);
  swift_errorRelease();
  outlined destroy of TaskPriority?((uint64_t)v3, &demangling cache variable for type metadata for Result<Playlist?, Error>);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t closure #4 in closure #1 in Collaboration.Flow.View.body.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t a5, uint64_t a6)
{
  uint64_t v23 = a5;
  uint64_t v24 = a6;
  uint64_t v8 = a4(0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin();
  uint64_t v11 = (char *)&v23 - v10;
  uint64_t v12 = *(void *)(type metadata accessor for Collaboration.Flow.View(0) - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  __chkstk_darwin();
  v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&_sScPSgMD_2);
  __chkstk_darwin();
  v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 1, 1, v17);
  outlined init with copy of Collaboration.Flow(a2, (uint64_t)v14, type metadata accessor for Collaboration.Flow.View);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a3, v8);
  type metadata accessor for MainActor();
  uint64_t v18 = static MainActor.shared.getter();
  unint64_t v19 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  unint64_t v20 = (v13 + *(unsigned __int8 *)(v9 + 80) + v19) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = v18;
  *(void *)(v21 + 24) = &protocol witness table for MainActor;
  outlined init with take of Collaboration.Flow.Collaborator((uint64_t)v14, v21 + v19, type metadata accessor for Collaboration.Flow.View);
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v21 + v20, v11, v8);
  _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5_1((uint64_t)v16, v24, v21);
  return swift_release();
}

uint64_t closure #1 in closure #6 in closure #1 in Collaboration.Flow.View.body.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[2] = a4;
  v5[3] = a5;
  uint64_t v6 = type metadata accessor for DismissAction();
  v5[4] = v6;
  v5[5] = *(void *)(v6 - 8);
  v5[6] = swift_task_alloc();
  v5[7] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<Playlist?, Error>);
  v5[8] = swift_task_alloc();
  type metadata accessor for MainActor();
  v5[9] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[10] = v8;
  v5[11] = v7;
  return _swift_task_switch(closure #1 in closure #6 in closure #1 in Collaboration.Flow.View.body.getter, v8, v7);
}

uint64_t closure #1 in closure #6 in closure #1 in Collaboration.Flow.View.body.getter()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = type metadata accessor for Collaboration.Flow.View(0);
  v0[12] = v2;
  uint64_t v3 = v1 + *(int *)(v2 + 32);
  uint64_t v4 = (void *)swift_task_alloc();
  v0[13] = v4;
  void *v4 = v0;
  v4[1] = closure #1 in closure #6 in closure #1 in Collaboration.Flow.View.body.getter;
  uint64_t v5 = v0[3];
  return Collaboration.Manager.moderate(_:collaborator:in:)(1, v5, v3);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();
  uint64_t v7;

  uint64_t v2 = *v1;
  *(void *)(*v1 + 112) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 88);
  uint64_t v4 = *(void *)(v2 + 80);
  if (v0) {
    uint64_t v5 = closure #1 in closure #6 in closure #1 in Collaboration.Flow.View.body.getter;
  }
  else {
    uint64_t v5 = closure #1 in closure #6 in closure #1 in Collaboration.Flow.View.body.getter;
  }
  return _swift_task_switch(v5, v4, v3);
}

id closure #1 in variable initialization expression of Collaboration.Flow.View._isRestricted()
{
  id v0 = [self defaultIdentityStore];
  type metadata accessor for ICUserIdentity();
  id v1 = static ICUserIdentity.active.getter();
  id v7 = 0;
  id v2 = [v0 getPropertiesForUserIdentity:v1 error:&v7];

  if (v2)
  {
    id v3 = v7;
    id v4 = [v2 isU18MinorAccount];
  }
  else
  {
    id v5 = v7;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    swift_errorRelease();
    return 0;
  }
  return v4;
}

uint64_t implicit closure #2 in implicit closure #1 in variable initialization expression of Collaboration.Flow.View._profileContext()
{
  return InlineProfileEditingView.Context.init()();
}

uint64_t protocol witness for View.body.getter in conformance Collaboration.Flow.View@<X0>(uint64_t a1@<X8>)
{
  return protocol witness for View.body.getter in conformance Collaboration.Flow.View(0, &demangling cache variable for type metadata for _VariadicView.Tree<_VStackLayout, TupleView<(ModifiedContent<<<opaque return type of View.bold(_:)>>.0, AccessibilityAttachmentModifier>?, ModifiedContent<ModifiedContent<<<opaque return type of View.bold(_:)>>.0, _EnvironmentKeyWritingModifier<TextAlignment>>, _PaddingLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FixedSizeLayout>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>, _PaddingLayout>, ModifiedContent<Collaboration.Flow.ProfileEditingView, _PaddingLayout>?, _ConditionalContent<_ConditionalContent<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Toggle<Text>, _PaddingLayout>, _BackgroundStyleModifier<Material>>, _ClipEffect<RoundedRectangle>>, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedC, (uint64_t (*)(uint64_t))closure #1 in Collaboration.Flow.View.body.getter, a1);
}

uint64_t protocol witness for View.body.getter in conformance Collaboration.Flow.GlyphImageView@<X0>(uint64_t *a1@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SymbolRenderingMode?);
  __chkstk_darwin();
  id v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  Image.init(systemName:)();
  static SymbolRenderingMode.hierarchical.getter();
  uint64_t v4 = type metadata accessor for SymbolRenderingMode();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 0, 1, v4);
  uint64_t v5 = Image.symbolRenderingMode(_:)();
  swift_release();
  outlined destroy of TaskPriority?((uint64_t)v3, &demangling cache variable for type metadata for SymbolRenderingMode?);
  uint64_t v6 = static Color.accentColor.getter();
  uint64_t result = swift_getKeyPath();
  *a1 = v5;
  a1[1] = result;
  a1[2] = v6;
  return result;
}

uint64_t closure #1 in Collaboration.Flow.ProfileEditingView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v136 = a2;
  uint64_t v137 = type metadata accessor for Font.Leading();
  uint64_t v128 = *(void *)(v137 - 8);
  __chkstk_darwin();
  v127 = (char *)&v111 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v119 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Text.Case?>);
  __chkstk_darwin();
  v122 = (uint64_t *)((char *)&v111 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Text.Case?);
  __chkstk_darwin();
  v121 = (char *)&v111 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Locale();
  __chkstk_darwin();
  v135 = (char *)&v111 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for String.LocalizationValue();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin();
  uint64_t v10 = (char *)&v111 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v12 = (char *)&v111 - v11;
  uint64_t v112 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Text, _EnvironmentKeyWritingModifier<Text.Case?>>);
  __chkstk_darwin();
  v115 = (char *)&v111 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Text.Case?>>, _EnvironmentKeyWritingModifier<Font?>>);
  __chkstk_darwin();
  uint64_t v116 = (uint64_t)&v111 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v114 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Text.Case?>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>);
  __chkstk_darwin();
  uint64_t v118 = (uint64_t)&v111 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Text.Case?>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _FlexFrameLayout>);
  __chkstk_darwin();
  uint64_t v120 = (uint64_t)&v111 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Text.Case?>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _FlexFrameLayout>, _PaddingLayout>);
  uint64_t v131 = *(void *)(v17 - 8);
  uint64_t v132 = v17;
  __chkstk_darwin();
  uint64_t v117 = (uint64_t)&v111 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for Collaboration.Flow(0);
  __chkstk_darwin();
  uint64_t v21 = (char *)&v111 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v23 = (char *)&v111 - v22;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Text.Case?>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _FlexFrameLayout>, _PaddingLayout>?);
  __chkstk_darwin();
  uint64_t v139 = (uint64_t)&v111 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v26 = (char *)&v111 - v25;
  uint64_t v27 = *(int *)(type metadata accessor for Collaboration.Flow.ProfileEditingView(0) + 20);
  uint64_t v134 = a1;
  uint64_t v129 = a1 + v27;
  outlined init with copy of Collaboration.Flow(a1 + v27, (uint64_t)v23, type metadata accessor for Collaboration.Flow);
  unint64_t v133 = v19;
  swift_storeEnumTagMultiPayload();
  LOBYTE(a1) = specialized static Collaboration.Flow.__derived_enum_equals(_:_:)((uint64_t)v23, (uint64_t)v21);
  v130 = v21;
  outlined destroy of Collaboration.Flow((uint64_t)v21, type metadata accessor for Collaboration.Flow);
  outlined destroy of Collaboration.Flow((uint64_t)v23, type metadata accessor for Collaboration.Flow);
  v138 = v26;
  uint64_t v125 = v8;
  uint64_t v126 = v7;
  v123 = v10;
  v124 = v12;
  if (a1)
  {
    uint64_t v28 = 1;
    uint64_t v29 = v137;
    uint64_t v30 = v132;
  }
  else
  {
    String.LocalizationValue.init(stringLiteral:)();
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v10, v12, v7);
    if (one-time initialization token for module != -1) {
      swift_once();
    }
    id v31 = (id)static NSBundle.module;
    static Locale.current.getter();
    uint64_t v32 = String.init(localized:table:bundle:locale:comment:)();
    uint64_t v34 = v33;
    (*(void (**)(char *, uint64_t))(v8 + 8))(v12, v7);
    uint64_t v167 = v32;
    uint64_t v168 = v34;
    _sS2SSysWl_1();
    uint64_t v35 = Text.init<A>(_:)();
    uint64_t v37 = v36;
    uint64_t v39 = v38;
    LOBYTE(v32) = v40 & 1;
    uint64_t v41 = enum case for Text.Case.uppercase(_:);
    uint64_t v42 = type metadata accessor for Text.Case();
    uint64_t v43 = *(void *)(v42 - 8);
    uint64_t v44 = (uint64_t)v121;
    (*(void (**)(char *, uint64_t, uint64_t))(v43 + 104))(v121, v41, v42);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v43 + 56))(v44, 0, 1, v42);
    uint64_t KeyPath = swift_getKeyPath();
    v46 = v122;
    outlined init with copy of (String, Any)(v44, (uint64_t)v122 + *(int *)(v119 + 28), &demangling cache variable for type metadata for Text.Case?);
    uint64_t *v46 = KeyPath;
    uint64_t v47 = (uint64_t)v115;
    outlined init with copy of (String, Any)((uint64_t)v46, (uint64_t)&v115[*(int *)(v112 + 36)], &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Text.Case?>);
    *(void *)uint64_t v47 = v35;
    *(void *)(v47 + 8) = v37;
    *(unsigned char *)(v47 + 16) = v32;
    *(void *)(v47 + 24) = v39;
    outlined copy of Text.Storage(v35, v37, v32);
    swift_bridgeObjectRetain();
    outlined destroy of TaskPriority?((uint64_t)v46, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Text.Case?>);
    outlined destroy of TaskPriority?(v44, &demangling cache variable for type metadata for Text.Case?);
    outlined consume of Text.Storage(v35, v37, v32);
    swift_bridgeObjectRelease();
    uint64_t v48 = static Font.footnote.getter();
    uint64_t v49 = swift_getKeyPath();
    uint64_t v50 = v116;
    outlined init with copy of (String, Any)(v47, v116, &demangling cache variable for type metadata for ModifiedContent<Text, _EnvironmentKeyWritingModifier<Text.Case?>>);
    v51 = (uint64_t *)(v50 + *(int *)(v113 + 36));
    uint64_t *v51 = v49;
    v51[1] = v48;
    outlined destroy of TaskPriority?(v47, &demangling cache variable for type metadata for ModifiedContent<Text, _EnvironmentKeyWritingModifier<Text.Case?>>);
    uint64_t v52 = static Color.secondary.getter();
    uint64_t v53 = swift_getKeyPath();
    uint64_t v54 = v118;
    outlined init with copy of (String, Any)(v50, v118, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Text.Case?>>, _EnvironmentKeyWritingModifier<Font?>>);
    v55 = (uint64_t *)(v54 + *(int *)(v114 + 36));
    uint64_t *v55 = v53;
    v55[1] = v52;
    outlined destroy of TaskPriority?(v50, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Text.Case?>>, _EnvironmentKeyWritingModifier<Font?>>);
    uint64_t v56 = static Alignment.leading.getter();
    uint64_t v57 = v120;
    specialized View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v120, 0.0, 1, 0.0, 1, v56, v58);
    outlined destroy of TaskPriority?(v54, (uint64_t *)&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Text.Case?>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>);
    LOBYTE(v52) = static Edge.Set.horizontal.getter();
    EdgeInsets.init(_all:)();
    uint64_t v60 = v59;
    uint64_t v62 = v61;
    uint64_t v64 = v63;
    uint64_t v66 = v65;
    uint64_t v67 = v117;
    outlined init with copy of (String, Any)(v57, v117, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Text.Case?>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _FlexFrameLayout>);
    uint64_t v30 = v132;
    uint64_t v68 = v67 + *(int *)(v132 + 36);
    *(unsigned char *)uint64_t v68 = v52;
    *(void *)(v68 + 8) = v60;
    *(void *)(v68 + 16) = v62;
    *(void *)(v68 + 24) = v64;
    *(void *)(v68 + 32) = v66;
    *(unsigned char *)(v68 + 40) = 0;
    outlined destroy of TaskPriority?(v57, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Text.Case?>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _FlexFrameLayout>);
    v26 = v138;
    outlined init with take of PresentationSource?(v67, (uint64_t)v138, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Text.Case?>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _FlexFrameLayout>, _PaddingLayout>);
    uint64_t v28 = 0;
    uint64_t v29 = v137;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v131 + 56))(v26, v28, 1, v30);
  swift_retain();
  specialized InlineProfileEditingView.init(context:)(&v169);
  outlined init with copy of Collaboration.Flow(v129, (uint64_t)v23, type metadata accessor for Collaboration.Flow);
  uint64_t v69 = (uint64_t)v130;
  swift_storeEnumTagMultiPayload();
  char v70 = specialized static Collaboration.Flow.__derived_enum_equals(_:_:)((uint64_t)v23, v69);
  outlined destroy of Collaboration.Flow(v69, type metadata accessor for Collaboration.Flow);
  outlined destroy of Collaboration.Flow((uint64_t)v23, type metadata accessor for Collaboration.Flow);
  if (v70)
  {
    _s7SwiftUI15ModifiedContentVyACyACyACyACyAA4TextVAA16_FixedSizeLayoutVGAA30_EnvironmentKeyWritingModifierVyAA0E9AlignmentOGGAJyAA4FontVSgGGAJyAA5ColorVSgGGAA08_PaddingH0VGSgWOi0_((uint64_t)v146);
    outlined init with take of PresentationSource?((uint64_t)v146, (uint64_t)&v167, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FixedSizeLayout>, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>?);
  }
  else
  {
    v71 = v124;
    String.LocalizationValue.init(stringLiteral:)();
    uint64_t v73 = v125;
    uint64_t v72 = v126;
    (*(void (**)(char *, char *, uint64_t))(v125 + 16))(v123, v71, v126);
    if (one-time initialization token for module != -1) {
      swift_once();
    }
    id v74 = (id)static NSBundle.module;
    static Locale.current.getter();
    uint64_t v75 = String.init(localized:table:bundle:locale:comment:)();
    uint64_t v77 = v76;
    (*(void (**)(char *, uint64_t))(v73 + 8))(v71, v72);
    uint64_t v167 = v75;
    uint64_t v168 = v77;
    _sS2SSysWl_1();
    uint64_t v78 = Text.init<A>(_:)();
    uint64_t v80 = v79;
    char v82 = v81;
    uint64_t v137 = v83;
    v135 = (char *)swift_getKeyPath();
    static Font.footnote.getter();
    v85 = v127;
    uint64_t v84 = v128;
    (*(void (**)(char *, void, uint64_t))(v128 + 104))(v127, enum case for Font.Leading.tight(_:), v29);
    uint64_t v86 = Font.leading(_:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v84 + 8))(v85, v29);
    uint64_t v87 = swift_getKeyPath();
    uint64_t v88 = static Color.secondary.getter();
    uint64_t v89 = swift_getKeyPath();
    LOBYTE(v84) = static Edge.Set.horizontal.getter();
    EdgeInsets.init(_all:)();
    char v145 = v82 & 1;
    char v142 = 0;
    v146[0] = v78;
    v146[1] = v80;
    char v147 = v82 & 1;
    *(_DWORD *)v148 = *(_DWORD *)v141;
    *(_DWORD *)&v148[3] = *(_DWORD *)&v141[3];
    uint64_t v149 = v137;
    __int16 v150 = 256;
    int v151 = *(_DWORD *)&v143[7];
    __int16 v152 = v144;
    v153 = v135;
    char v154 = 1;
    *(_DWORD *)&v155[3] = *(_DWORD *)&v140[3];
    *(_DWORD *)v155 = *(_DWORD *)v140;
    uint64_t v156 = v87;
    uint64_t v157 = v86;
    uint64_t v158 = v89;
    uint64_t v159 = v88;
    char v160 = v84;
    *(_DWORD *)&v161[3] = *(_DWORD *)&v143[3];
    *(_DWORD *)v161 = *(_DWORD *)v143;
    uint64_t v162 = v90;
    uint64_t v163 = v91;
    uint64_t v164 = v92;
    uint64_t v165 = v93;
    char v166 = 0;
    v94.location = (Swift::Int)v146;
    CFRange.init(_:)(v94);
    outlined init with take of PresentationSource?((uint64_t)v146, (uint64_t)&v167, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FixedSizeLayout>, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>?);
    v26 = v138;
  }
  uint64_t v95 = v139;
  outlined init with copy of (String, Any)((uint64_t)v26, v139, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Text.Case?>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _FlexFrameLayout>, _PaddingLayout>?);
  unint64_t v96 = v169.n128_u64[1];
  char v97 = v170;
  uint64_t v98 = v171;
  char v99 = v172;
  uint64_t v100 = v173;
  char v101 = v174;
  uint64_t v137 = v175;
  v102 = v177;
  unint64_t v133 = v176;
  uint64_t v134 = v178;
  v135 = (char *)v169.n128_u64[0];
  outlined init with take of PresentationSource?((uint64_t)&v167, (uint64_t)v140, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FixedSizeLayout>, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>?);
  uint64_t v103 = v136;
  outlined init with copy of (String, Any)(v95, v136, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Text.Case?>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _FlexFrameLayout>, _PaddingLayout>?);
  uint64_t v104 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Text.Case?>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _FlexFrameLayout>, _PaddingLayout>?, InlineProfileEditingView, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FixedSizeLayout>, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>?));
  uint64_t v105 = v103 + *(int *)(v104 + 48);
  char v106 = v101 & 1;
  uint64_t v107 = v134;
  *(void *)uint64_t v105 = v135;
  *(void *)(v105 + 8) = v96;
  *(unsigned char *)(v105 + 16) = v97 & 1;
  *(void *)(v105 + 24) = v98;
  *(unsigned char *)(v105 + 32) = v99 & 1;
  *(void *)(v105 + 40) = v100;
  *(unsigned char *)(v105 + 48) = v106;
  unint64_t v108 = v133;
  *(void *)(v105 + 56) = v137;
  *(void *)(v105 + 64) = v108;
  *(void *)(v105 + 72) = v102;
  *(void *)(v105 + 80) = v107;
  uint64_t v109 = v103 + *(int *)(v104 + 64);
  outlined init with take of PresentationSource?((uint64_t)v140, (uint64_t)v141, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FixedSizeLayout>, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>?);
  outlined init with take of PresentationSource?((uint64_t)v141, v109, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FixedSizeLayout>, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>?);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  outlined copy of ImagePicker.SourceType(v108, v102);
  swift_retain();
  outlined retain of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FixedSizeLayout>, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>?((uint64_t)v141, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))outlined copy of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FixedSizeLayout>, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>?);
  outlined destroy of TaskPriority?((uint64_t)v138, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Text.Case?>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _FlexFrameLayout>, _PaddingLayout>?);
  outlined init with take of PresentationSource?((uint64_t)v140, (uint64_t)v146, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FixedSizeLayout>, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>?);
  outlined retain of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FixedSizeLayout>, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>?((uint64_t)v146, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))outlined consume of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FixedSizeLayout>, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>?);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  outlined consume of ImagePicker.SourceType(v108, v102);
  swift_release();
  return outlined destroy of TaskPriority?(v139, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Text.Case?>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _FlexFrameLayout>, _PaddingLayout>?);
}

uint64_t protocol witness for View.body.getter in conformance Collaboration.Flow.ProfileEditingView@<X0>(uint64_t a1@<X8>)
{
  return protocol witness for View.body.getter in conformance Collaboration.Flow.View(0x4018000000000000, &demangling cache variable for type metadata for _VariadicView.Tree<_VStackLayout, TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Text.Case?>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _FlexFrameLayout>, _PaddingLayout>?, InlineProfileEditingView, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FixedSizeLayout>, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>?)>>, (uint64_t (*)(uint64_t))closure #1 in Collaboration.Flow.ProfileEditingView.body.getter, a1);
}

uint64_t protocol witness for View.body.getter in conformance Collaboration.Flow.View@<X0>(uint64_t a1@<X2>, uint64_t *a2@<X3>, uint64_t (*a3)(uint64_t)@<X4>, uint64_t a4@<X8>)
{
  *(void *)a4 = static HorizontalAlignment.center.getter();
  *(void *)(a4 + 8) = a1;
  *(unsigned char *)(a4 + 16) = 0;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  return a3(v4);
}

uint64_t Collaboration.Flow.ActionButton.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v74 = a1;
  uint64_t v66 = type metadata accessor for RoundedRectangle();
  __chkstk_darwin();
  uint64_t v72 = (double *)((char *)v60 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v71 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ShapeView<RoundedRectangle, Color>);
  __chkstk_darwin();
  uint64_t v73 = (uint64_t)v60 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Button<_ConditionalContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<Text, _FlexFrameLayout>>>);
  uint64_t v5 = *(void *)(v61 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ModifiedContent<Button<_ConditionalContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<Text, _FlexFrameLayout>>>, _EnvironmentKeyTransformModifier<Bool>>)
     - 8;
  __chkstk_darwin();
  uint64_t v10 = (char *)v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Button<_ConditionalContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<Text, _FlexFrameLayout>>>, _EnvironmentKeyTransformModifier<Bool>>, _FlexFrameLayout>);
  __chkstk_darwin();
  uint64_t v12 = (char *)v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Button<_ConditionalContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<Text, _FlexFrameLayout>>>, _EnvironmentKeyTransformModifier<Bool>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>);
  __chkstk_darwin();
  uint64_t v14 = (char *)v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Button<_ConditionalContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<Text, _FlexFrameLayout>>>, _EnvironmentKeyTransformModifier<Bool>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>, _FlexFrameLayout>);
  __chkstk_darwin();
  uint64_t v63 = (uint64_t)v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.bold(_:)>>.0);
  uint64_t v69 = *(void *)(v70 - 8);
  __chkstk_darwin();
  uint64_t v68 = (char *)v60 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.bold(_:)>>.0, _BackgroundModifier<_ShapeView<RoundedRectangle, Color>>>);
  __chkstk_darwin();
  uint64_t v67 = (char *)v60 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = swift_allocObject();
  long long v19 = *(_OWORD *)(v1 + 48);
  *(_OWORD *)(v18 + 48) = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(v18 + 64) = v19;
  *(unsigned char *)(v18 + 80) = *(unsigned char *)(v1 + 64);
  long long v20 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v18 + 16) = *(_OWORD *)v1;
  *(_OWORD *)(v18 + 32) = v20;
  uint64_t v75 = v1;
  outlined retain of Collaboration.Flow.ActionButton(v1);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<Text, _FlexFrameLayout>>);
  lazy protocol witness table accessor for type _ConditionalContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<Text, _FlexFrameLayout>> and conformance <> _ConditionalContent<A, B>();
  Button.init(action:label:)();
  long long v85 = *(_OWORD *)(v1 + 40);
  long long v78 = *(_OWORD *)(v1 + 40);
  v60[1] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Bool>);
  State.wrappedValue.getter();
  char v21 = v76;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v23 = swift_allocObject();
  *(unsigned char *)(v23 + 16) = v21;
  uint64_t v24 = v61;
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v10, v7, v61);
  uint64_t v25 = (uint64_t *)&v10[*(int *)(v8 + 44)];
  *uint64_t v25 = KeyPath;
  v25[1] = (uint64_t)_s7SwiftUI4ViewPAAE8disabledyQrSbFySbzcfU_TA_0;
  v25[2] = v23;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v24);
  uint64_t v26 = static Alignment.center.getter();
  specialized View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v12, 0.0, 1, 0.0, 1, v26, v27);
  outlined destroy of TaskPriority?((uint64_t)v10, (uint64_t *)&demangling cache variable for type metadata for ModifiedContent<Button<_ConditionalContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<Text, _FlexFrameLayout>>>, _EnvironmentKeyTransformModifier<Bool>>);
  char v28 = *(unsigned char *)(v2 + 16);
  if (v28) {
    uint64_t v29 = static Color.accentColor.getter();
  }
  else {
    uint64_t v29 = static Color.white.getter();
  }
  uint64_t v30 = v29;
  uint64_t v31 = swift_getKeyPath();
  outlined init with copy of (String, Any)((uint64_t)v12, (uint64_t)v14, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Button<_ConditionalContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<Text, _FlexFrameLayout>>>, _EnvironmentKeyTransformModifier<Bool>>, _FlexFrameLayout>);
  uint64_t v32 = (uint64_t *)&v14[*(int *)(v62 + 36)];
  *uint64_t v32 = v31;
  v32[1] = v30;
  outlined destroy of TaskPriority?((uint64_t)v12, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Button<_ConditionalContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<Text, _FlexFrameLayout>>>, _EnvironmentKeyTransformModifier<Bool>>, _FlexFrameLayout>);
  uint64_t v33 = v68;
  if (one-time initialization token for minHeight != -1) {
    swift_once();
  }
  static Alignment.center.getter();
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  uint64_t v34 = v63;
  outlined init with copy of (String, Any)((uint64_t)v14, v63, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Button<_ConditionalContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<Text, _FlexFrameLayout>>>, _EnvironmentKeyTransformModifier<Bool>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>);
  uint64_t v35 = (_OWORD *)(v34 + *(int *)(v64 + 36));
  long long v36 = v83;
  v35[4] = v82;
  v35[5] = v36;
  v35[6] = v84;
  long long v37 = v79;
  *uint64_t v35 = v78;
  v35[1] = v37;
  long long v38 = v81;
  v35[2] = v80;
  v35[3] = v38;
  outlined destroy of TaskPriority?((uint64_t)v14, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Button<_ConditionalContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<Text, _FlexFrameLayout>>>, _EnvironmentKeyTransformModifier<Bool>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>);
  lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Button<_ConditionalContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<Text, _FlexFrameLayout>>>, _EnvironmentKeyTransformModifier<Bool>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Button<_ConditionalContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<Text, _FlexFrameLayout>>>, _EnvironmentKeyTransformModifier<Bool>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Button<_ConditionalContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<Text, _FlexFrameLayout>>>, _EnvironmentKeyTransformModifier<Bool>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>, _FlexFrameLayout>, (void (*)(void))lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<Button<_ConditionalContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<Text, _FlexFrameLayout>>>, _EnvironmentKeyTransformModifier<Bool>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>);
  View.bold(_:)();
  outlined destroy of TaskPriority?(v34, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Button<_ConditionalContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<Text, _FlexFrameLayout>>>, _EnvironmentKeyTransformModifier<Bool>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>, _FlexFrameLayout>);
  double v39 = *(double *)&static Collaboration.Flow.ActionButton.Specs.minHeight * 0.5;
  char v40 = v72;
  uint64_t v41 = (char *)v72 + *(int *)(v66 + 20);
  uint64_t v42 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v43 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v43 - 8) + 104))(v41, v42, v43);
  *char v40 = v39;
  v40[1] = v39;
  uint64_t v44 = *(void *)(v2 + 56);
  LOBYTE(v42) = *(unsigned char *)(v2 + 64);
  outlined copy of Environment<Bool>.Content(v44, v42);
  char v45 = specialized Environment.wrappedValue.getter(v44, v42);
  outlined consume of Environment<SymbolButton.MaterialColor?>.Content(v44, v42);
  if ((v45 & 1) != 0 || (long long v76 = v85, State.wrappedValue.getter(), v77 == 1))
  {
    if (v28) {
      uint64_t v46 = static Color.clear.getter();
    }
    else {
      uint64_t v46 = static Color.accentColor.getter();
    }
  }
  else
  {
    id v47 = [self systemFillColor];
    uint64_t v46 = Color.init(_:)();
  }
  uint64_t v48 = v46;
  uint64_t v49 = v73;
  outlined init with copy of Collaboration.Flow((uint64_t)v40, v73, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  uint64_t v50 = v71;
  *(void *)(v49 + *(int *)(v71 + 52)) = v48;
  *(_WORD *)(v49 + *(int *)(v50 + 56)) = 256;
  outlined destroy of Collaboration.Flow((uint64_t)v40, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  uint64_t v51 = static Alignment.center.getter();
  uint64_t v53 = v52;
  uint64_t v54 = (uint64_t)v67;
  uint64_t v55 = (uint64_t)&v67[*(int *)(v65 + 36)];
  outlined init with copy of (String, Any)(v49, v55, &demangling cache variable for type metadata for _ShapeView<RoundedRectangle, Color>);
  uint64_t v56 = (uint64_t *)(v55
                  + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _BackgroundModifier<_ShapeView<RoundedRectangle, Color>>)
                           + 36));
  *uint64_t v56 = v51;
  v56[1] = v53;
  uint64_t v57 = v69;
  uint64_t v58 = v70;
  (*(void (**)(uint64_t, char *, uint64_t))(v69 + 16))(v54, v33, v70);
  outlined destroy of TaskPriority?(v49, &demangling cache variable for type metadata for _ShapeView<RoundedRectangle, Color>);
  (*(void (**)(char *, uint64_t))(v57 + 8))(v33, v58);
  return outlined init with take of PresentationSource?(v54, v74, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.bold(_:)>>.0, _BackgroundModifier<_ShapeView<RoundedRectangle, Color>>>);
}

uint64_t closure #1 in Collaboration.Flow.ActionButton.body.getter(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t))(a1 + 24))(a1);
}

uint64_t closure #2 in Collaboration.Flow.ActionButton.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v35[1] = a2;
  v35[0] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<Text, _FlexFrameLayout>>.Storage);
  __chkstk_darwin();
  uint64_t v4 = (_OWORD *)((char *)v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ProgressView<EmptyView, EmptyView>);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ProgressView<EmptyView, EmptyView>, _EnvironmentKeyWritingModifier<Color?>>);
  __chkstk_darwin();
  uint64_t v10 = (char *)v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v12 = (char *)v35 - v11;
  long long v46 = *(_OWORD *)(a1 + 40);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Bool>);
  State.wrappedValue.getter();
  if (v37 == 1)
  {
    ProgressView<>.init<>()();
    uint64_t v13 = static Color.white.getter();
    uint64_t KeyPath = swift_getKeyPath();
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v10, v8, v5);
    uint64_t v15 = (uint64_t *)&v10[*(int *)(v36 + 36)];
    *uint64_t v15 = KeyPath;
    v15[1] = v13;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    outlined init with take of PresentationSource?((uint64_t)v10, (uint64_t)v12, &demangling cache variable for type metadata for ModifiedContent<ProgressView<EmptyView, EmptyView>, _EnvironmentKeyWritingModifier<Color?>>);
    outlined init with copy of (String, Any)((uint64_t)v12, (uint64_t)v4, &demangling cache variable for type metadata for ModifiedContent<ProgressView<EmptyView, EmptyView>, _EnvironmentKeyWritingModifier<Color?>>);
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Text, _FlexFrameLayout>);
    lazy protocol witness table accessor for type ModifiedContent<ProgressView<EmptyView, EmptyView>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type ModifiedContent<Text, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<Text, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<Text, _FlexFrameLayout>);
    _ConditionalContent<>.init(storage:)();
    return outlined destroy of TaskPriority?((uint64_t)v12, &demangling cache variable for type metadata for ModifiedContent<ProgressView<EmptyView, EmptyView>, _EnvironmentKeyWritingModifier<Color?>>);
  }
  else
  {
    uint64_t v17 = *(void *)(a1 + 8);
    *(void *)&long long v46 = *(void *)a1;
    *((void *)&v46 + 1) = v17;
    _sS2SSysWl_1();
    swift_bridgeObjectRetain();
    uint64_t v18 = Text.init<A>(_:)();
    uint64_t v20 = v19;
    uint64_t v22 = v21;
    char v24 = v23 & 1;
    uint64_t v25 = static Alignment.center.getter();
    specialized View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)&v37, 0.0, 1, 0.0, 1, v25, v26, v18, v20, v24, v22);
    outlined consume of Text.Storage(v18, v20, v24);
    swift_bridgeObjectRelease();
    long long v27 = v44;
    long long v52 = v43;
    long long v53 = v44;
    long long v28 = v45;
    long long v54 = v45;
    long long v29 = v39;
    long long v30 = v40;
    long long v48 = v39;
    long long v49 = v40;
    long long v32 = v41;
    long long v31 = v42;
    long long v50 = v41;
    long long v51 = v42;
    long long v34 = v37;
    long long v33 = v38;
    long long v46 = v37;
    long long v47 = v38;
    v4[6] = v43;
    v4[7] = v27;
    v4[8] = v28;
    v4[2] = v29;
    v4[3] = v30;
    v4[4] = v32;
    v4[5] = v31;
    _OWORD *v4 = v34;
    v4[1] = v33;
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Text, _FlexFrameLayout>);
    lazy protocol witness table accessor for type ModifiedContent<ProgressView<EmptyView, EmptyView>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type ModifiedContent<Text, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<Text, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<Text, _FlexFrameLayout>);
    return _ConditionalContent<>.init(storage:)();
  }
}

void one-time initialization function for minHeight()
{
  id v0 = [self currentTraitCollection];
  id v1 = [v0 userInterfaceIdiom];

  double v2 = 50.0;
  if (v1 == (id)6) {
    double v2 = 44.0;
  }
  static Collaboration.Flow.ActionButton.Specs.minHeight = *(void *)&v2;
}

uint64_t key path getter for EnvironmentValues.isEnabled : EnvironmentValues@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = EnvironmentValues.isEnabled.getter();
  *a1 = result & 1;
  return result;
}

uint64_t key path setter for EnvironmentValues.isEnabled : EnvironmentValues()
{
  return EnvironmentValues.isEnabled.setter();
}

uint64_t protocol witness for View.body.getter in conformance Collaboration.Flow.ActionButton@<X0>(uint64_t a1@<X8>)
{
  return Collaboration.Flow.ActionButton.body.getter(a1);
}

uint64_t one-time initialization function for avatarSizeLength()
{
  if (one-time initialization token for isVision != -1) {
    uint64_t result = swift_once();
  }
  double v0 = 180.0;
  if (static Collaboration.Flow.Specs.isVision) {
    double v0 = 140.0;
  }
  static Collaboration.Flow.Specs.avatarSizeLength = *(void *)&v0;
  return result;
}

uint64_t one-time initialization function for subtitleBottomPadding()
{
  if (one-time initialization token for isVision != -1) {
    uint64_t result = swift_once();
  }
  double v0 = 24.0;
  if (static Collaboration.Flow.Specs.isVision) {
    double v0 = 16.0;
  }
  static Collaboration.Flow.Specs.subtitleBottomPadding = *(void *)&v0;
  return result;
}

uint64_t one-time initialization function for subtitleFont()
{
  uint64_t v0 = type metadata accessor for Font.Leading();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin();
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (one-time initialization token for isVision != -1) {
    swift_once();
  }
  if (static Collaboration.Flow.Specs.isVision == 1)
  {
    uint64_t result = static Font.subheadline.getter();
    uint64_t v5 = result;
  }
  else
  {
    static Font.body.getter();
    (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for Font.Leading.tight(_:), v0);
    uint64_t v5 = Font.leading(_:)();
    swift_release();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
  static Collaboration.Flow.Specs.subtitleFont = v5;
  return result;
}

uint64_t one-time initialization function for toggleDescriptionTextTopPadding()
{
  if (one-time initialization token for isVision != -1) {
    uint64_t result = swift_once();
  }
  double v0 = 6.0;
  if (static Collaboration.Flow.Specs.isVision) {
    double v0 = 9.0;
  }
  static Collaboration.Flow.Specs.toggleDescriptionTextTopPadding = *(void *)&v0;
  return result;
}

uint64_t ICMusicUserProfile.collaborator.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v36 = a1;
  uint64_t v3 = type metadata accessor for Collaboration.Flow.Collaborator(0);
  __chkstk_darwin();
  uint64_t v5 = (uint64_t *)((char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v31 - v8;
  uint64_t v10 = type metadata accessor for Artwork();
  uint64_t v11 = *(void *)(v10 - 8);
  long long v34 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 56);
  uint64_t v35 = v10;
  uint64_t v33 = v11 + 56;
  v34(v9, 1, 1);
  id v12 = [v2 artworkInfo];
  if (v12)
  {
    uint64_t v13 = v12;
    id v14 = [v12 responseDictionary];

    if (v14)
    {
      uint64_t v15 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

      unint64_t v16 = _ss30_dictionaryDownCastConditionalySDyq0_q1_GSgSDyxq_GSHRzSHR0_r2_lFs11AnyHashableV_ypSSypTg5_0(v15);
      swift_bridgeObjectRelease();
      if (v16)
      {
        Artwork.init(_:)();
        outlined destroy of TaskPriority?((uint64_t)v9, (uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
        outlined init with take of PresentationSource?((uint64_t)v7, (uint64_t)v9, (uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
      }
    }
  }
  id v17 = [v2 name];
  uint64_t v32 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v19 = v18;

  id v20 = [v2 handle];
  if (v20)
  {
    uint64_t v21 = v20;
    uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v24 = v23;
  }
  else
  {
    uint64_t v22 = 0;
    uint64_t v24 = 0;
  }
  outlined init with copy of (String, Any)((uint64_t)v9, (uint64_t)v7, (uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
  unsigned __int8 v25 = [v2 collaborationAllowed];
  uint64_t v26 = (uint64_t)v7;
  uint64_t v27 = v3;
  uint64_t v28 = (uint64_t)v5 + *(int *)(v3 + 24);
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v34)(v28, 1, 1, v35);
  uint64_t v29 = *(int *)(v27 + 28);
  *((unsigned char *)v5 + v29) = 0;
  *uint64_t v5 = v32;
  v5[1] = v19;
  v5[2] = v22;
  v5[3] = v24;
  outlined assign with take of Artwork?(v26, v28);
  *((unsigned char *)v5 + v29) = v25;
  outlined init with take of Collaboration.Flow.Collaborator((uint64_t)v5, v36, type metadata accessor for Collaboration.Flow.Collaborator);
  return outlined destroy of TaskPriority?((uint64_t)v9, (uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
}

unint64_t _ss30_dictionaryDownCastConditionalySDyq0_q1_GSgSDyxq_GSHRzSHR0_r2_lFs11AnyHashableV_ypSSypTg5_0(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&_ss18_DictionaryStorageCySSypGMD_1);
    uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  }
  else
  {
    uint64_t v2 = _swiftEmptyDictionarySingleton;
  }
  uint64_t v23 = a1 + 64;
  uint64_t v3 = -1;
  uint64_t v4 = -1 << *(unsigned char *)(a1 + 32);
  if (-v4 < 64) {
    uint64_t v3 = ~(-1 << -(char)v4);
  }
  unint64_t v5 = v3 & *(void *)(a1 + 64);
  int64_t v22 = (unint64_t)(63 - v4) >> 6;
  unint64_t result = swift_bridgeObjectRetain();
  int64_t v7 = 0;
  while (1)
  {
    if (v5)
    {
      uint64_t v10 = (v5 - 1) & v5;
      unint64_t v11 = __clz(__rbit64(v5)) | (v7 << 6);
      int64_t v12 = v7;
    }
    else
    {
      int64_t v13 = v7 + 1;
      if (__OFADD__(v7, 1)) {
        goto LABEL_37;
      }
      if (v13 >= v22)
      {
LABEL_33:
        outlined consume of Set<MusicItemID>.Iterator._Variant();
        return (unint64_t)v2;
      }
      unint64_t v14 = *(void *)(v23 + 8 * v13);
      int64_t v12 = v7 + 1;
      if (!v14)
      {
        int64_t v12 = v7 + 2;
        if (v7 + 2 >= v22) {
          goto LABEL_33;
        }
        unint64_t v14 = *(void *)(v23 + 8 * v12);
        if (!v14)
        {
          int64_t v12 = v7 + 3;
          if (v7 + 3 >= v22) {
            goto LABEL_33;
          }
          unint64_t v14 = *(void *)(v23 + 8 * v12);
          if (!v14)
          {
            int64_t v12 = v7 + 4;
            if (v7 + 4 >= v22) {
              goto LABEL_33;
            }
            unint64_t v14 = *(void *)(v23 + 8 * v12);
            if (!v14)
            {
              int64_t v15 = v7 + 5;
              if (v7 + 5 >= v22) {
                goto LABEL_33;
              }
              unint64_t v14 = *(void *)(v23 + 8 * v15);
              if (!v14)
              {
                while (1)
                {
                  int64_t v12 = v15 + 1;
                  if (__OFADD__(v15, 1)) {
                    goto LABEL_38;
                  }
                  if (v12 >= v22) {
                    goto LABEL_33;
                  }
                  unint64_t v14 = *(void *)(v23 + 8 * v12);
                  ++v15;
                  if (v14) {
                    goto LABEL_26;
                  }
                }
              }
              int64_t v12 = v7 + 5;
            }
          }
        }
      }
LABEL_26:
      uint64_t v10 = (v14 - 1) & v14;
      unint64_t v11 = __clz(__rbit64(v14)) + (v12 << 6);
    }
    outlined init with copy of AnyHashable(*(void *)(a1 + 48) + 40 * v11, (uint64_t)v33);
    outlined init with copy of Any(*(void *)(a1 + 56) + 32 * v11, (uint64_t)v34 + 8);
    v31[0] = v34[0];
    v31[1] = v34[1];
    uint64_t v32 = v35;
    v30[0] = v33[0];
    v30[1] = v33[1];
    outlined init with copy of AnyHashable((uint64_t)v30, (uint64_t)v25);
    if (!swift_dynamicCast())
    {
      outlined destroy of TaskPriority?((uint64_t)v30, &_ss11AnyHashableV3key_yp5valuetMD_0);
      swift_bridgeObjectRelease();
      outlined consume of Set<MusicItemID>.Iterator._Variant();
      swift_release();
      return 0;
    }
    outlined init with copy of Any((uint64_t)v31 + 8, (uint64_t)v25);
    outlined destroy of TaskPriority?((uint64_t)v30, &_ss11AnyHashableV3key_yp5valuetMD_0);
    outlined init with take of Any(v25, v26);
    long long v27 = v24;
    outlined init with take of Any(v26, v28);
    long long v16 = v27;
    outlined init with take of Any(v28, v29);
    outlined init with take of Any(v29, &v27);
    unint64_t result = specialized __RawDictionaryStorage.find<A>(_:)(v16, *((uint64_t *)&v16 + 1));
    unint64_t v17 = result;
    if (v18)
    {
      uint64_t v8 = (_OWORD *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *uint64_t v8 = v16;
      uint64_t v9 = (_OWORD *)(v2[7] + 32 * v17);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v9);
      unint64_t result = (unint64_t)outlined init with take of Any(&v27, v9);
      goto LABEL_8;
    }
    if (v2[2] >= v2[3]) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_OWORD *)(v2[6] + 16 * result) = v16;
    unint64_t result = (unint64_t)outlined init with take of Any(&v27, (_OWORD *)(v2[7] + 32 * result));
    uint64_t v19 = v2[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (v20) {
      goto LABEL_36;
    }
    v2[2] = v21;
LABEL_8:
    int64_t v7 = v12;
    unint64_t v5 = v10;
  }
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
  return result;
}

uint64_t key path getter for EnvironmentValues.multilineTextAlignment : EnvironmentValues, serialized@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = EnvironmentValues.multilineTextAlignment.getter();
  *a1 = result;
  return result;
}

uint64_t key path setter for EnvironmentValues.multilineTextAlignment : EnvironmentValues, serialized()
{
  return EnvironmentValues.multilineTextAlignment.setter();
}

uint64_t key path getter for EnvironmentValues.tintColor : EnvironmentValues, serialized@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.tintColor.getter();
  *a1 = result;
  return result;
}

uint64_t key path setter for EnvironmentValues.tintColor : EnvironmentValues, serialized()
{
  return EnvironmentValues.tintColor.setter();
}

unsigned char *closure #1 in View.disabled(_:)(unsigned char *result, char a2)
{
  *result &= a2 ^ 1;
  return result;
}

uint64_t specialized static Collaboration.Flow.__derived_enum_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v69 = (unsigned char *)a1;
  uint64_t v70 = (unsigned char *)a2;
  uint64_t v2 = type metadata accessor for Playlist.Collaborator();
  uint64_t v65 = *(unsigned char **)(v2 - 8);
  uint64_t v66 = (void *)v2;
  __chkstk_darwin();
  uint64_t v64 = &v57[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = type metadata accessor for Collaboration.Flow.Collaborator(0);
  uint64_t v61 = *(void *)(v4 - 8);
  uint64_t v62 = v4;
  __chkstk_darwin();
  uint64_t v59 = &v57[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Collaboration.Flow.Collaborator?, Collaboration.Flow.Collaborator?));
  __chkstk_darwin();
  uint64_t v63 = &v57[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = type metadata accessor for URL();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v67 = v7;
  uint64_t v68 = v8;
  __chkstk_darwin();
  uint64_t v10 = &v57[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin();
  int64_t v12 = &v57[-v11];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Collaboration.Flow.Collaborator?);
  __chkstk_darwin();
  unint64_t v14 = &v57[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin();
  long long v16 = &v57[-v15];
  type metadata accessor for Collaboration.Flow(0);
  __chkstk_darwin();
  char v18 = &v57[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin();
  BOOL v20 = &v57[-v19];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Collaboration.Flow, Collaboration.Flow));
  uint64_t v21 = __chkstk_darwin();
  uint64_t v23 = &v57[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v24 = (uint64_t)&v23[*(int *)(v21 + 56)];
  outlined init with copy of Collaboration.Flow((uint64_t)v69, (uint64_t)v23, type metadata accessor for Collaboration.Flow);
  outlined init with copy of Collaboration.Flow((uint64_t)v70, v24, type metadata accessor for Collaboration.Flow);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    uint64_t v66 = v14;
    uint64_t v69 = v16;
    uint64_t v70 = v12;
    uint64_t v31 = v67;
    outlined init with copy of Collaboration.Flow((uint64_t)v23, (uint64_t)v20, type metadata accessor for Collaboration.Flow);
    uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Collaboration.Flow.Collaborator?, URL, Bool));
    uint64_t v33 = *(int *)(v32 + 48);
    long long v34 = &v20[v33];
    uint64_t v35 = *(int *)(v32 + 64);
    int v36 = v20[v35];
    if (swift_getEnumCaseMultiPayload())
    {
      (*(void (**)(unsigned char *, uint64_t))(v68 + 8))(&v20[v33], v31);
      outlined destroy of TaskPriority?((uint64_t)v20, &demangling cache variable for type metadata for Collaboration.Flow.Collaborator?);
LABEL_10:
      outlined destroy of TaskPriority?((uint64_t)v23, &demangling cache variable for type metadata for (Collaboration.Flow, Collaboration.Flow));
LABEL_11:
      char v29 = 0;
      return v29 & 1;
    }
    LODWORD(v64) = v36;
    long long v38 = (unsigned char *)(v24 + v33);
    int v58 = *(unsigned __int8 *)(v24 + v35);
    uint64_t v39 = v24;
    uint64_t v40 = (uint64_t)v69;
    outlined init with take of PresentationSource?(v39, (uint64_t)v69, &demangling cache variable for type metadata for Collaboration.Flow.Collaborator?);
    long long v41 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v68 + 32);
    v41(v70, v34, v31);
    uint64_t v65 = v10;
    v41(v10, v38, v31);
    long long v42 = v63;
    uint64_t v43 = (uint64_t)&v63[*(int *)(v60 + 48)];
    outlined init with take of PresentationSource?((uint64_t)v20, (uint64_t)v63, &demangling cache variable for type metadata for Collaboration.Flow.Collaborator?);
    outlined init with copy of (String, Any)(v40, v43, &demangling cache variable for type metadata for Collaboration.Flow.Collaborator?);
    uint64_t v44 = v62;
    long long v45 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v61 + 48);
    if (v45((uint64_t)v42, 1, v62) == 1)
    {
      if (v45(v43, 1, v44) == 1)
      {
        outlined destroy of TaskPriority?((uint64_t)v42, &demangling cache variable for type metadata for Collaboration.Flow.Collaborator?);
        uint64_t v47 = v68;
        uint64_t v46 = (uint64_t)v69;
        uint64_t v48 = (uint64_t)v70;
        goto LABEL_21;
      }
    }
    else
    {
      long long v49 = v66;
      outlined init with copy of (String, Any)((uint64_t)v42, (uint64_t)v66, &demangling cache variable for type metadata for Collaboration.Flow.Collaborator?);
      if (v45(v43, 1, v44) != 1)
      {
        long long v51 = v59;
        outlined init with take of Collaboration.Flow.Collaborator(v43, (uint64_t)v59, type metadata accessor for Collaboration.Flow.Collaborator);
        char v52 = specialized static Collaboration.Flow.Collaborator.__derived_struct_equals(_:_:)(v49, v51);
        outlined destroy of Collaboration.Flow((uint64_t)v51, type metadata accessor for Collaboration.Flow.Collaborator);
        outlined destroy of Collaboration.Flow((uint64_t)v49, type metadata accessor for Collaboration.Flow.Collaborator);
        outlined destroy of TaskPriority?((uint64_t)v42, &demangling cache variable for type metadata for Collaboration.Flow.Collaborator?);
        uint64_t v47 = v68;
        uint64_t v46 = (uint64_t)v69;
        uint64_t v48 = (uint64_t)v70;
        if (v52)
        {
LABEL_21:
          long long v53 = v65;
          char v54 = static URL.== infix(_:_:)();
          uint64_t v55 = *(void (**)(unsigned char *, uint64_t))(v47 + 8);
          v55(v53, v31);
          v55((unsigned char *)v48, v31);
          outlined destroy of TaskPriority?(v46, &demangling cache variable for type metadata for Collaboration.Flow.Collaborator?);
          if (v54)
          {
            char v56 = v64 ^ v58;
            outlined destroy of Collaboration.Flow((uint64_t)v23, type metadata accessor for Collaboration.Flow);
            char v29 = v56 ^ 1;
            return v29 & 1;
          }
          goto LABEL_23;
        }
LABEL_19:
        long long v50 = *(void (**)(unsigned char *, uint64_t))(v47 + 8);
        v50(v65, v31);
        v50((unsigned char *)v48, v31);
        outlined destroy of TaskPriority?(v46, &demangling cache variable for type metadata for Collaboration.Flow.Collaborator?);
LABEL_23:
        outlined destroy of Collaboration.Flow((uint64_t)v23, type metadata accessor for Collaboration.Flow);
        goto LABEL_11;
      }
      outlined destroy of Collaboration.Flow((uint64_t)v49, type metadata accessor for Collaboration.Flow.Collaborator);
    }
    outlined destroy of TaskPriority?((uint64_t)v42, &demangling cache variable for type metadata for (Collaboration.Flow.Collaborator?, Collaboration.Flow.Collaborator?));
    uint64_t v47 = v68;
    uint64_t v46 = (uint64_t)v69;
    uint64_t v48 = (uint64_t)v70;
    goto LABEL_19;
  }
  if (EnumCaseMultiPayload != 1)
  {
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      outlined destroy of Collaboration.Flow((uint64_t)v23, type metadata accessor for Collaboration.Flow);
      char v29 = 1;
      return v29 & 1;
    }
    goto LABEL_10;
  }
  outlined init with copy of Collaboration.Flow((uint64_t)v23, (uint64_t)v18, type metadata accessor for Collaboration.Flow);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    (*((void (**)(unsigned char *, void *))v65 + 1))(v18, v66);
    goto LABEL_10;
  }
  long long v27 = v64;
  uint64_t v26 = v65;
  uint64_t v28 = (uint64_t)v66;
  (*((void (**)(unsigned char *, uint64_t, void *))v65 + 4))(v64, v24, v66);
  char v29 = static Playlist.Collaborator.== infix(_:_:)();
  long long v30 = (void (*)(unsigned char *, uint64_t))*((void *)v26 + 1);
  v30(v27, v28);
  v30(v18, v28);
  outlined destroy of Collaboration.Flow((uint64_t)v23, type metadata accessor for Collaboration.Flow);
  return v29 & 1;
}

uint64_t specialized static Collaboration.Flow.Collaborator.__derived_struct_equals(_:_:)(void *a1, void *a2)
{
  uint64_t v4 = type metadata accessor for Artwork();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v7 = &v31[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Artwork?, Artwork?));
  __chkstk_darwin();
  uint64_t v10 = &v31[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
  __chkstk_darwin();
  int64_t v12 = &v31[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin();
  unint64_t v14 = &v31[-v13];
  __chkstk_darwin();
  long long v16 = &v31[-v15];
  if (*a1 == *a2 && a1[1] == a2[1] || (char v17 = _stringCompareWithSmolCheck(_:_:expecting:)(), v18 = 0, (v17 & 1) != 0))
  {
    uint64_t v19 = a1[3];
    uint64_t v20 = a2[3];
    if (v19)
    {
      if (!v20) {
        goto LABEL_19;
      }
      if (a1[2] != a2[2] || v19 != v20)
      {
        char v21 = _stringCompareWithSmolCheck(_:_:expecting:)();
        char v18 = 0;
        if ((v21 & 1) == 0) {
          return v18 & 1;
        }
      }
    }
    else if (v20)
    {
      goto LABEL_19;
    }
    int v36 = v12;
    uint64_t v33 = v7;
    uint64_t v22 = v5;
    uint64_t v23 = type metadata accessor for Collaboration.Flow.Collaborator(0);
    outlined init with copy of (String, Any)((uint64_t)a1 + *(int *)(v23 + 24), (uint64_t)v16, (uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
    uint64_t v34 = v23;
    outlined init with copy of (String, Any)((uint64_t)a2 + *(int *)(v23 + 24), (uint64_t)v14, (uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
    uint64_t v24 = (uint64_t)&v10[*(int *)(v8 + 48)];
    outlined init with copy of (String, Any)((uint64_t)v16, (uint64_t)v10, (uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
    outlined init with copy of (String, Any)((uint64_t)v14, v24, (uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
    uint64_t v35 = v22;
    unsigned __int8 v25 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48);
    if (v25((uint64_t)v10, 1, v4) == 1)
    {
      outlined destroy of TaskPriority?((uint64_t)v14, (uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
      outlined destroy of TaskPriority?((uint64_t)v16, (uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
      if (v25(v24, 1, v4) == 1)
      {
        outlined destroy of TaskPriority?((uint64_t)v10, (uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
LABEL_18:
        char v18 = *((unsigned char *)a1 + *(int *)(v34 + 28)) ^ *((unsigned char *)a2 + *(int *)(v34 + 28)) ^ 1;
        return v18 & 1;
      }
      goto LABEL_16;
    }
    uint64_t v26 = (uint64_t)v36;
    outlined init with copy of (String, Any)((uint64_t)v10, (uint64_t)v36, (uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
    if (v25(v24, 1, v4) == 1)
    {
      outlined destroy of TaskPriority?((uint64_t)v14, (uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
      outlined destroy of TaskPriority?((uint64_t)v16, (uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
      (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v26, v4);
LABEL_16:
      outlined destroy of TaskPriority?((uint64_t)v10, &demangling cache variable for type metadata for (Artwork?, Artwork?));
      goto LABEL_19;
    }
    uint64_t v27 = v35;
    uint64_t v28 = v33;
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v35 + 32))(v33, v24, v4);
    lazy protocol witness table accessor for type InlineProfileEditingView.Context and conformance InlineProfileEditingView.Context(&lazy protocol witness table cache variable for type Artwork and conformance Artwork, (void (*)(uint64_t))&type metadata accessor for Artwork);
    int v32 = dispatch thunk of static Equatable.== infix(_:_:)();
    char v29 = *(void (**)(unsigned char *, uint64_t))(v27 + 8);
    v29(v28, v4);
    outlined destroy of TaskPriority?((uint64_t)v14, (uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
    outlined destroy of TaskPriority?((uint64_t)v16, (uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
    v29((unsigned char *)v26, v4);
    outlined destroy of TaskPriority?((uint64_t)v10, (uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
    if (v32) {
      goto LABEL_18;
    }
LABEL_19:
    char v18 = 0;
  }
  return v18 & 1;
}

uint64_t type metadata accessor for Collaboration.Flow(uint64_t a1)
{
  return type metadata accessor for Notice.Variant(a1, (uint64_t *)&type metadata singleton initialization cache for Collaboration.Flow);
}

unint64_t _sS2Ss7CVarArg10FoundationWl_0()
{
  unint64_t result = _sS2Ss7CVarArg10FoundationWL_0;
  if (!_sS2Ss7CVarArg10FoundationWL_0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&_sS2Ss7CVarArg10FoundationWL_0);
  }
  return result;
}

uint64_t outlined destroy of Collaboration.Flow(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t type metadata accessor for Collaboration.Flow.View(uint64_t a1)
{
  return type metadata accessor for Notice.Variant(a1, (uint64_t *)&type metadata singleton initialization cache for Collaboration.Flow.View);
}

uint64_t outlined init with take of Collaboration.Flow.Collaborator(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t associated type witness table accessor for View.Body : View in Collaboration.Flow.View()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t *initializeBufferWithCopyOfBuffer for Collaboration.Flow(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v12 = type metadata accessor for Playlist.Collaborator();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v12 - 8) + 16))(a1, a2, v12);
LABEL_14:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      uint64_t v8 = type metadata accessor for Collaboration.Flow.Collaborator(0);
      uint64_t v9 = *(void *)(v8 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8))
      {
        uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Collaboration.Flow.Collaborator?);
        memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
      }
      else
      {
        uint64_t v13 = a2[1];
        *a1 = *a2;
        a1[1] = v13;
        uint64_t v14 = a2[3];
        a1[2] = a2[2];
        a1[3] = v14;
        uint64_t v15 = *(int *)(v8 + 24);
        __dst = (char *)a1 + v15;
        uint64_t v26 = (char *)a2 + v15;
        uint64_t v16 = type metadata accessor for Artwork();
        uint64_t v17 = *(void *)(v16 - 8);
        char v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v18(v26, 1, v16))
        {
          uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
          memcpy(__dst, v26, *(void *)(*(void *)(v19 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v17 + 16))(__dst, v26, v16);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(__dst, 0, 1, v16);
        }
        *((unsigned char *)a1 + *(int *)(v8 + 28)) = *((unsigned char *)a2 + *(int *)(v8 + 28));
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
      }
      uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Collaboration.Flow.Collaborator?, URL, Bool));
      uint64_t v21 = *(int *)(v20 + 48);
      uint64_t v22 = (char *)a1 + v21;
      uint64_t v23 = (char *)a2 + v21;
      uint64_t v24 = type metadata accessor for URL();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
      *((unsigned char *)a1 + *(int *)(v20 + 64)) = *((unsigned char *)a2 + *(int *)(v20 + 64));
      goto LABEL_14;
    }
    memcpy(a1, a2, *(void *)(v6 + 64));
  }
  return a1;
}

uint64_t destroy for Collaboration.Flow(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    uint64_t v7 = type metadata accessor for Playlist.Collaborator();
  }
  else
  {
    if (result) {
      return result;
    }
    uint64_t v3 = type metadata accessor for Collaboration.Flow.Collaborator(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 48))(a1, 1, v3))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v4 = a1 + *(int *)(v3 + 24);
      uint64_t v5 = type metadata accessor for Artwork();
      uint64_t v6 = *(void *)(v5 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
        (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
      }
    }
    a1 += *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Collaboration.Flow.Collaborator?, URL, Bool))
                 + 48);
    uint64_t v7 = type metadata accessor for URL();
  }
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);

  return v8(a1, v7);
}

void *initializeWithCopy for Collaboration.Flow(void *a1, void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v10 = type metadata accessor for Playlist.Collaborator();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
LABEL_12:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  if (!EnumCaseMultiPayload)
  {
    uint64_t v7 = type metadata accessor for Collaboration.Flow.Collaborator(0);
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Collaboration.Flow.Collaborator?);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      uint64_t v11 = a2[1];
      *a1 = *a2;
      a1[1] = v11;
      uint64_t v12 = a2[3];
      a1[2] = a2[2];
      a1[3] = v12;
      uint64_t v13 = *(int *)(v7 + 24);
      __dst = (char *)a1 + v13;
      unsigned __int8 v25 = (char *)a2 + v13;
      uint64_t v14 = type metadata accessor for Artwork();
      uint64_t v15 = *(void *)(v14 - 8);
      uint64_t v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v16(v25, 1, v14))
      {
        uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
        memcpy(__dst, v25, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v15 + 16))(__dst, v25, v14);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(__dst, 0, 1, v14);
      }
      *((unsigned char *)a1 + *(int *)(v7 + 28)) = *((unsigned char *)a2 + *(int *)(v7 + 28));
      (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Collaboration.Flow.Collaborator?, URL, Bool));
    uint64_t v19 = *(int *)(v18 + 48);
    uint64_t v20 = (char *)a1 + v19;
    uint64_t v21 = (char *)a2 + v19;
    uint64_t v22 = type metadata accessor for URL();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
    *((unsigned char *)a1 + *(int *)(v18 + 64)) = *((unsigned char *)a2 + *(int *)(v18 + 64));
    goto LABEL_12;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

void *assignWithCopy for Collaboration.Flow(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    outlined destroy of Collaboration.Flow((uint64_t)a1, type metadata accessor for Collaboration.Flow);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v10 = type metadata accessor for Playlist.Collaborator();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
LABEL_13:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      uint64_t v7 = type metadata accessor for Collaboration.Flow.Collaborator(0);
      uint64_t v8 = *(void *)(v7 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
      {
        uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Collaboration.Flow.Collaborator?);
        memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
      }
      else
      {
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        uint64_t v11 = *(int *)(v7 + 24);
        __dst = (char *)a1 + v11;
        uint64_t v22 = (char *)a2 + v11;
        uint64_t v12 = type metadata accessor for Artwork();
        uint64_t v13 = *(void *)(v12 - 8);
        uint64_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v14(v22, 1, v12))
        {
          uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
          memcpy(__dst, v22, *(void *)(*(void *)(v15 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v13 + 16))(__dst, v22, v12);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v12);
        }
        *((unsigned char *)a1 + *(int *)(v7 + 28)) = *((unsigned char *)a2 + *(int *)(v7 + 28));
        (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
      uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Collaboration.Flow.Collaborator?, URL, Bool));
      uint64_t v17 = *(int *)(v16 + 48);
      uint64_t v18 = (char *)a1 + v17;
      uint64_t v19 = (char *)a2 + v17;
      uint64_t v20 = type metadata accessor for URL();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
      *((unsigned char *)a1 + *(int *)(v16 + 64)) = *((unsigned char *)a2 + *(int *)(v16 + 64));
      goto LABEL_13;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

_OWORD *initializeWithTake for Collaboration.Flow(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v10 = type metadata accessor for Playlist.Collaborator();
    (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
LABEL_12:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  if (!EnumCaseMultiPayload)
  {
    uint64_t v7 = type metadata accessor for Collaboration.Flow.Collaborator(0);
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Collaboration.Flow.Collaborator?);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      long long v11 = a2[1];
      *a1 = *a2;
      a1[1] = v11;
      uint64_t v12 = *(int *)(v7 + 24);
      uint64_t v13 = (char *)a1 + v12;
      uint64_t v14 = (char *)a2 + v12;
      uint64_t v15 = type metadata accessor for Artwork();
      uint64_t v16 = *(void *)(v15 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
      {
        uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
        memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      }
      *((unsigned char *)a1 + *(int *)(v7 + 28)) = *((unsigned char *)a2 + *(int *)(v7 + 28));
      (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Collaboration.Flow.Collaborator?, URL, Bool));
    uint64_t v19 = *(int *)(v18 + 48);
    uint64_t v20 = (char *)a1 + v19;
    uint64_t v21 = (char *)a2 + v19;
    uint64_t v22 = type metadata accessor for URL();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
    *((unsigned char *)a1 + *(int *)(v18 + 64)) = *((unsigned char *)a2 + *(int *)(v18 + 64));
    goto LABEL_12;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

_OWORD *assignWithTake for Collaboration.Flow(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    outlined destroy of Collaboration.Flow((uint64_t)a1, type metadata accessor for Collaboration.Flow);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v10 = type metadata accessor for Playlist.Collaborator();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
LABEL_13:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      uint64_t v7 = type metadata accessor for Collaboration.Flow.Collaborator(0);
      uint64_t v8 = *(void *)(v7 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
      {
        uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Collaboration.Flow.Collaborator?);
        memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
      }
      else
      {
        long long v11 = a2[1];
        *a1 = *a2;
        a1[1] = v11;
        uint64_t v12 = *(int *)(v7 + 24);
        uint64_t v13 = (char *)a1 + v12;
        uint64_t v14 = (char *)a2 + v12;
        uint64_t v15 = type metadata accessor for Artwork();
        uint64_t v16 = *(void *)(v15 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
        {
          uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
          memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
        }
        *((unsigned char *)a1 + *(int *)(v7 + 28)) = *((unsigned char *)a2 + *(int *)(v7 + 28));
        (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
      uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Collaboration.Flow.Collaborator?, URL, Bool));
      uint64_t v19 = *(int *)(v18 + 48);
      uint64_t v20 = (char *)a1 + v19;
      uint64_t v21 = (char *)a2 + v19;
      uint64_t v22 = type metadata accessor for URL();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
      *((unsigned char *)a1 + *(int *)(v18 + 64)) = *((unsigned char *)a2 + *(int *)(v18 + 64));
      goto LABEL_13;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void type metadata completion function for Collaboration.Flow()
{
  type metadata accessor for Collaboration.Flow.Collaborator?(319, &lazy cache variable for type metadata for Collaboration.Flow.Collaborator?, type metadata accessor for Collaboration.Flow.Collaborator, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if (v0 <= 0x3F)
  {
    type metadata accessor for URL();
    if (v1 <= 0x3F)
    {
      swift_getTupleTypeLayout3();
      v4[4] = v4;
      uint64_t v2 = type metadata accessor for Playlist.Collaborator();
      if (v3 <= 0x3F)
      {
        v4[5] = *(void *)(v2 - 8) + 64;
        swift_initEnumMetadataMultiPayload();
      }
    }
  }
}

void *initializeBufferWithCopyOfBuffer for Collaboration.Flow.Collaborator(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    void *v4 = *a2;
    uint64_t v4 = (void *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = *(int *)(a3 + 24);
    __dst = (char *)a1 + v9;
    uint64_t v10 = (char *)a2 + v9;
    uint64_t v11 = type metadata accessor for Artwork();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
      memcpy(__dst, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(__dst, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
    }
    *((unsigned char *)v4 + *(int *)(a3 + 28)) = *((unsigned char *)a2 + *(int *)(a3 + 28));
  }
  return v4;
}

uint64_t destroy for Collaboration.Flow.Collaborator(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = type metadata accessor for Artwork();
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
    return v7(v4, v5);
  }
  return result;
}

void *initializeWithCopy for Collaboration.Flow.Collaborator(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for Artwork();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  *((unsigned char *)a1 + *(int *)(a3 + 28)) = *((unsigned char *)a2 + *(int *)(a3 + 28));
  return a1;
}

void *assignWithCopy for Collaboration.Flow.Collaborator(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Artwork();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  *((unsigned char *)a1 + *(int *)(a3 + 28)) = *((unsigned char *)a2 + *(int *)(a3 + 28));
  return a1;
}

_OWORD *initializeWithTake for Collaboration.Flow.Collaborator(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for Artwork();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  *((unsigned char *)a1 + *(int *)(a3 + 28)) = *((unsigned char *)a2 + *(int *)(a3 + 28));
  return a1;
}

void *assignWithTake for Collaboration.Flow.Collaborator(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for Artwork();
  uint64_t v12 = *(void *)(v11 - 8);
  int v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v9, v10, v11);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
LABEL_7:
  *((unsigned char *)a1 + *(int *)(a3 + 28)) = *((unsigned char *)a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t getEnumTagSinglePayload for Collaboration.Flow.Collaborator(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003DF414);
}

uint64_t sub_1003DF414(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for Collaboration.Flow.Collaborator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003DF4DC);
}

uint64_t sub_1003DF4DC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void type metadata completion function for Collaboration.Flow.Collaborator()
{
  type metadata accessor for Collaboration.Flow.Collaborator?(319, &_s8MusicKit7ArtworkVSgML_0, (uint64_t (*)(uint64_t))&type metadata accessor for Artwork, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void type metadata accessor for Collaboration.Flow.Collaborator?(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void *initializeBufferWithCopyOfBuffer for Collaboration.Flow.View(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return a1;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DismissAction>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for DismissAction();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v9 = a3[5];
  uint64_t v10 = a3[6];
  uint64_t v11 = (char *)a1 + v9;
  uint64_t v12 = (char *)a2 + v9;
  *uint64_t v11 = *v12;
  *((void *)v11 + 1) = *((void *)v12 + 1);
  int v13 = (char *)a1 + v10;
  int v14 = (char *)a2 + v10;
  *int v13 = *v14;
  *((void *)v13 + 1) = *((void *)v14 + 1);
  uint64_t v15 = a3[7];
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (void *)((char *)a2 + v15);
  uint64_t v18 = type metadata accessor for Collaboration.Flow(0);
  swift_retain();
  swift_retain();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v23 = type metadata accessor for Playlist.Collaborator();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v23 - 8) + 16))(v16, v17, v23);
LABEL_17:
    swift_storeEnumTagMultiPayload();
    goto LABEL_18;
  }
  if (!EnumCaseMultiPayload)
  {
    uint64_t v20 = type metadata accessor for Collaboration.Flow.Collaborator(0);
    uint64_t v21 = *(void *)(v20 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v21 + 48))(v17, 1, v20))
    {
      uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Collaboration.Flow.Collaborator?);
      memcpy(v16, v17, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      uint64_t v24 = v17[1];
      void *v16 = *v17;
      v16[1] = v24;
      uint64_t v25 = v17[3];
      v16[2] = v17[2];
      v16[3] = v25;
      uint64_t v26 = *(int *)(v20 + 24);
      __dst = (char *)v16 + v26;
      uint64_t v59 = v21;
      uint64_t v57 = (char *)v17 + v26;
      uint64_t v27 = type metadata accessor for Artwork();
      uint64_t v55 = *(void *)(v27 - 8);
      char v56 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v56(v57, 1, v27))
      {
        uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
        memcpy(__dst, v57, *(void *)(*(void *)(v28 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v55 + 16))(__dst, v57, v27);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v55 + 56))(__dst, 0, 1, v27);
      }
      *((unsigned char *)v16 + *(int *)(v20 + 28)) = *((unsigned char *)v17 + *(int *)(v20 + 28));
      (*(void (**)(void *, void, uint64_t, uint64_t))(v59 + 56))(v16, 0, 1, v20);
    }
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Collaboration.Flow.Collaborator?, URL, Bool));
    uint64_t v30 = *(int *)(v29 + 48);
    uint64_t v31 = (char *)v16 + v30;
    int v32 = (char *)v17 + v30;
    uint64_t v33 = type metadata accessor for URL();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16))(v31, v32, v33);
    *((unsigned char *)v16 + *(int *)(v29 + 64)) = *((unsigned char *)v17 + *(int *)(v29 + 64));
    goto LABEL_17;
  }
  memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
LABEL_18:
  uint64_t v34 = a3[8];
  uint64_t v35 = (char *)a1 + v34;
  int v36 = (char *)a2 + v34;
  uint64_t v37 = type metadata accessor for Playlist();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16))(v35, v36, v37);
  uint64_t v38 = a3[10];
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  *((unsigned char *)a1 + v38) = *((unsigned char *)a2 + v38);
  uint64_t v39 = a3[11];
  uint64_t v40 = (void *)((char *)a1 + v39);
  long long v41 = (char *)a2 + v39;
  uint64_t v42 = *(void *)((char *)a2 + v39);
  swift_retain();
  if (v42)
  {
    uint64_t v43 = *((void *)v41 + 1);
    *uint64_t v40 = v42;
    v40[1] = v43;
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v40 = *(_OWORD *)v41;
  }
  uint64_t v44 = a3[12];
  uint64_t v45 = a3[13];
  uint64_t v46 = (void *)((char *)a1 + v44);
  uint64_t v47 = (void *)((char *)a2 + v44);
  uint64_t v48 = v47[1];
  void *v46 = *v47;
  v46[1] = v48;
  long long v49 = (char *)a1 + v45;
  long long v50 = (char *)a2 + v45;
  uint64_t v51 = *(void *)((char *)a2 + v45);
  uint64_t v52 = *((void *)v50 + 1);
  char v53 = v50[16];
  swift_retain();
  KeyValueObservationTrigger.keyPath.getter();
  *(void *)long long v49 = v51;
  *((void *)v49 + 1) = v52;
  v49[16] = v53;
  return a1;
}

uint64_t destroy for Collaboration.Flow.View(uint64_t a1, int *a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DismissAction>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for DismissAction();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  uint64_t v5 = a1 + a2[7];
  type metadata accessor for Collaboration.Flow(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v11 = type metadata accessor for Playlist.Collaborator();
  }
  else
  {
    if (EnumCaseMultiPayload) {
      goto LABEL_12;
    }
    uint64_t v7 = type metadata accessor for Collaboration.Flow.Collaborator(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v8 = v5 + *(int *)(v7 + 24);
      uint64_t v9 = type metadata accessor for Artwork();
      uint64_t v10 = *(void *)(v9 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9)) {
        (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
      }
    }
    v5 += *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Collaboration.Flow.Collaborator?, URL, Bool))
                 + 48);
    uint64_t v11 = type metadata accessor for URL();
  }
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v5, v11);
LABEL_12:
  uint64_t v12 = a1 + a2[8];
  uint64_t v13 = type metadata accessor for Playlist();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  swift_release();
  if (*(void *)(a1 + a2[11])) {
    swift_release();
  }
  swift_release();

  return outlined consume of StateObject<RazzmatazzController>.Storage();
}

void *initializeWithCopy for Collaboration.Flow.View(void *a1, void *a2, int *a3)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DismissAction>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for DismissAction();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (char *)a1 + v7;
  uint64_t v10 = (char *)a2 + v7;
  *uint64_t v9 = *v10;
  *((void *)v9 + 1) = *((void *)v10 + 1);
  uint64_t v11 = (char *)a1 + v8;
  uint64_t v12 = (char *)a2 + v8;
  *uint64_t v11 = *v12;
  *((void *)v11 + 1) = *((void *)v12 + 1);
  uint64_t v13 = a3[7];
  int v14 = (void *)((char *)a1 + v13);
  uint64_t v15 = (void *)((char *)a2 + v13);
  uint64_t v16 = type metadata accessor for Collaboration.Flow(0);
  swift_retain();
  swift_retain();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v21 = type metadata accessor for Playlist.Collaborator();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v21 - 8) + 16))(v14, v15, v21);
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
      goto LABEL_16;
    }
    uint64_t v18 = type metadata accessor for Collaboration.Flow.Collaborator(0);
    uint64_t v19 = *(void *)(v18 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v19 + 48))(v15, 1, v18))
    {
      uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Collaboration.Flow.Collaborator?);
      memcpy(v14, v15, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      uint64_t v22 = v15[1];
      void *v14 = *v15;
      v14[1] = v22;
      uint64_t v23 = v15[3];
      v14[2] = v15[2];
      v14[3] = v23;
      uint64_t v24 = *(int *)(v18 + 24);
      __dst = (char *)v14 + v24;
      uint64_t v55 = v19;
      uint64_t v57 = (char *)v15 + v24;
      uint64_t v25 = type metadata accessor for Artwork();
      uint64_t v53 = *(void *)(v25 - 8);
      char v56 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v56(v57, 1, v25))
      {
        uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
        memcpy(__dst, v57, *(void *)(*(void *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v53 + 16))(__dst, v57, v25);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v53 + 56))(__dst, 0, 1, v25);
      }
      *((unsigned char *)v14 + *(int *)(v18 + 28)) = *((unsigned char *)v15 + *(int *)(v18 + 28));
      (*(void (**)(void *, void, uint64_t, uint64_t))(v55 + 56))(v14, 0, 1, v18);
    }
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Collaboration.Flow.Collaborator?, URL, Bool));
    uint64_t v28 = *(int *)(v27 + 48);
    uint64_t v29 = (char *)v14 + v28;
    uint64_t v30 = (char *)v15 + v28;
    uint64_t v31 = type metadata accessor for URL();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
    *((unsigned char *)v14 + *(int *)(v27 + 64)) = *((unsigned char *)v15 + *(int *)(v27 + 64));
  }
  swift_storeEnumTagMultiPayload();
LABEL_16:
  uint64_t v32 = a3[8];
  uint64_t v33 = (char *)a1 + v32;
  uint64_t v34 = (char *)a2 + v32;
  uint64_t v35 = type metadata accessor for Playlist();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
  uint64_t v36 = a3[10];
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  *((unsigned char *)a1 + v36) = *((unsigned char *)a2 + v36);
  uint64_t v37 = a3[11];
  uint64_t v38 = (void *)((char *)a1 + v37);
  uint64_t v39 = (char *)a2 + v37;
  uint64_t v40 = *(void *)((char *)a2 + v37);
  swift_retain();
  if (v40)
  {
    uint64_t v41 = *((void *)v39 + 1);
    *uint64_t v38 = v40;
    v38[1] = v41;
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v38 = *(_OWORD *)v39;
  }
  uint64_t v42 = a3[12];
  uint64_t v43 = a3[13];
  uint64_t v44 = (void *)((char *)a1 + v42);
  uint64_t v45 = (void *)((char *)a2 + v42);
  uint64_t v46 = v45[1];
  *uint64_t v44 = *v45;
  v44[1] = v46;
  uint64_t v47 = (char *)a1 + v43;
  uint64_t v48 = (char *)a2 + v43;
  uint64_t v49 = *(void *)((char *)a2 + v43);
  uint64_t v50 = *((void *)v48 + 1);
  char v51 = v48[16];
  swift_retain();
  KeyValueObservationTrigger.keyPath.getter();
  *(void *)uint64_t v47 = v49;
  *((void *)v47 + 1) = v50;
  v47[16] = v51;
  return a1;
}

void *assignWithCopy for Collaboration.Flow.View(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    outlined destroy of TaskPriority?((uint64_t)a1, &demangling cache variable for type metadata for Environment<DismissAction>.Content);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DismissAction>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for DismissAction();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  *uint64_t v8 = *v9;
  *((void *)v8 + 1) = *((void *)v9 + 1);
  swift_retain();
  swift_release();
  uint64_t v10 = a3[6];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  *uint64_t v11 = *v12;
  *((void *)v11 + 1) = *((void *)v12 + 1);
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v13 = a3[7];
    int v14 = (void *)((char *)a1 + v13);
    uint64_t v15 = (void *)((char *)a2 + v13);
    outlined destroy of Collaboration.Flow((uint64_t)a1 + v13, type metadata accessor for Collaboration.Flow);
    uint64_t v16 = type metadata accessor for Collaboration.Flow(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v21 = type metadata accessor for Playlist.Collaborator();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v21 - 8) + 16))(v14, v15, v21);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
        goto LABEL_19;
      }
      uint64_t v18 = type metadata accessor for Collaboration.Flow.Collaborator(0);
      uint64_t v19 = *(void *)(v18 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v19 + 48))(v15, 1, v18))
      {
        uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Collaboration.Flow.Collaborator?);
        memcpy(v14, v15, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        void *v14 = *v15;
        v14[1] = v15[1];
        v14[2] = v15[2];
        v14[3] = v15[3];
        uint64_t v22 = *(int *)(v18 + 24);
        __dst = (char *)v14 + v22;
        uint64_t v56 = v19;
        char v54 = (char *)v15 + v22;
        uint64_t v23 = type metadata accessor for Artwork();
        uint64_t v52 = *(void *)(v23 - 8);
        uint64_t v53 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v53(v54, 1, v23))
        {
          uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
          memcpy(__dst, v54, *(void *)(*(void *)(v24 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v52 + 16))(__dst, v54, v23);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v52 + 56))(__dst, 0, 1, v23);
        }
        *((unsigned char *)v14 + *(int *)(v18 + 28)) = *((unsigned char *)v15 + *(int *)(v18 + 28));
        (*(void (**)(void *, void, uint64_t, uint64_t))(v56 + 56))(v14, 0, 1, v18);
      }
      uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Collaboration.Flow.Collaborator?, URL, Bool));
      uint64_t v26 = *(int *)(v25 + 48);
      uint64_t v27 = (char *)v14 + v26;
      uint64_t v28 = (char *)v15 + v26;
      uint64_t v29 = type metadata accessor for URL();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
      *((unsigned char *)v14 + *(int *)(v25 + 64)) = *((unsigned char *)v15 + *(int *)(v25 + 64));
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_19:
  uint64_t v30 = a3[8];
  uint64_t v31 = (char *)a1 + v30;
  uint64_t v32 = (char *)a2 + v30;
  uint64_t v33 = type metadata accessor for Playlist();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 24))(v31, v32, v33);
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  swift_retain();
  swift_release();
  *((unsigned char *)a1 + a3[10]) = *((unsigned char *)a2 + a3[10]);
  uint64_t v34 = a3[11];
  uint64_t v35 = (void *)((char *)a1 + v34);
  uint64_t v36 = (char *)a2 + v34;
  uint64_t v37 = *(void *)((char *)a1 + v34);
  uint64_t v38 = *(void *)((char *)a2 + v34);
  if (!v37)
  {
    if (v38)
    {
      uint64_t v40 = *((void *)v36 + 1);
      *uint64_t v35 = v38;
      v35[1] = v40;
      swift_retain();
      goto LABEL_26;
    }
LABEL_25:
    *(_OWORD *)uint64_t v35 = *(_OWORD *)v36;
    goto LABEL_26;
  }
  if (!v38)
  {
    swift_release();
    goto LABEL_25;
  }
  uint64_t v39 = *((void *)v36 + 1);
  *uint64_t v35 = v38;
  v35[1] = v39;
  swift_retain();
  swift_release();
LABEL_26:
  uint64_t v41 = a3[12];
  uint64_t v42 = (void *)((char *)a1 + v41);
  uint64_t v43 = (void *)((char *)a2 + v41);
  uint64_t v44 = v43[1];
  *uint64_t v42 = *v43;
  v42[1] = v44;
  swift_retain();
  swift_release();
  uint64_t v45 = a3[13];
  uint64_t v46 = (char *)a1 + v45;
  uint64_t v47 = (char *)a2 + v45;
  uint64_t v48 = *(void *)v47;
  uint64_t v49 = *((void *)v47 + 1);
  char v50 = v47[16];
  KeyValueObservationTrigger.keyPath.getter();
  *(void *)uint64_t v46 = v48;
  *((void *)v46 + 1) = v49;
  v46[16] = v50;
  outlined consume of StateObject<RazzmatazzController>.Storage();
  return a1;
}

char *initializeWithTake for Collaboration.Flow.View(char *a1, char *a2, int *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DismissAction>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for DismissAction();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[6];
  *(_OWORD *)&a1[a3[5]] = *(_OWORD *)&a2[a3[5]];
  *(_OWORD *)&a1[v8] = *(_OWORD *)&a2[v8];
  uint64_t v9 = a3[7];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = type metadata accessor for Collaboration.Flow(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v17 = type metadata accessor for Playlist.Collaborator();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v10, v11, v17);
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
      goto LABEL_16;
    }
    uint64_t v14 = type metadata accessor for Collaboration.Flow.Collaborator(0);
    uint64_t v15 = *(void *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v11, 1, v14))
    {
      uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Collaboration.Flow.Collaborator?);
      memcpy(v10, v11, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      uint64_t v43 = v15;
      long long v18 = *((_OWORD *)v11 + 1);
      *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
      *((_OWORD *)v10 + 1) = v18;
      uint64_t v19 = *(int *)(v14 + 24);
      uint64_t v44 = &v10[v19];
      uint64_t v20 = &v11[v19];
      uint64_t v21 = type metadata accessor for Artwork();
      uint64_t v22 = *(void *)(v21 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
      {
        uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
        memcpy(v44, v20, *(void *)(*(void *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v44, v20, v21);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v44, 0, 1, v21);
      }
      v10[*(int *)(v14 + 28)] = v11[*(int *)(v14 + 28)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v43 + 56))(v10, 0, 1, v14);
    }
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Collaboration.Flow.Collaborator?, URL, Bool));
    uint64_t v25 = *(int *)(v24 + 48);
    uint64_t v26 = &v10[v25];
    uint64_t v27 = &v11[v25];
    uint64_t v28 = type metadata accessor for URL();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32))(v26, v27, v28);
    v10[*(int *)(v24 + 64)] = v11[*(int *)(v24 + 64)];
  }
  swift_storeEnumTagMultiPayload();
LABEL_16:
  uint64_t v29 = a3[8];
  uint64_t v30 = &a1[v29];
  uint64_t v31 = &a2[v29];
  uint64_t v32 = type metadata accessor for Playlist();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 32))(v30, v31, v32);
  uint64_t v33 = a3[10];
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  a1[v33] = a2[v33];
  uint64_t v34 = a3[11];
  uint64_t v35 = &a1[v34];
  uint64_t v36 = &a2[v34];
  uint64_t v37 = *(void *)v36;
  if (*(void *)v36)
  {
    uint64_t v38 = *((void *)v36 + 1);
    *(void *)uint64_t v35 = v37;
    *((void *)v35 + 1) = v38;
  }
  else
  {
    *(_OWORD *)uint64_t v35 = *(_OWORD *)v36;
  }
  uint64_t v39 = a3[13];
  *(_OWORD *)&a1[a3[12]] = *(_OWORD *)&a2[a3[12]];
  uint64_t v40 = &a1[v39];
  uint64_t v41 = &a2[v39];
  *(_OWORD *)uint64_t v40 = *(_OWORD *)v41;
  v40[16] = v41[16];
  return a1;
}

char *assignWithTake for Collaboration.Flow.View(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    outlined destroy of TaskPriority?((uint64_t)a1, &demangling cache variable for type metadata for Environment<DismissAction>.Content);
    uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DismissAction>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for DismissAction();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  *uint64_t v9 = *v10;
  *((void *)v9 + 1) = *((void *)v10 + 1);
  swift_release();
  uint64_t v11 = a3[6];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  *uint64_t v12 = *v13;
  *((void *)v12 + 1) = *((void *)v13 + 1);
  swift_release();
  if (a1 != a2)
  {
    uint64_t v14 = a3[7];
    uint64_t v15 = &a1[v14];
    uint64_t v16 = &a2[v14];
    outlined destroy of Collaboration.Flow((uint64_t)&a1[v14], type metadata accessor for Collaboration.Flow);
    uint64_t v17 = type metadata accessor for Collaboration.Flow(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v22 = type metadata accessor for Playlist.Collaborator();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v15, v16, v22);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
        goto LABEL_18;
      }
      uint64_t v19 = type metadata accessor for Collaboration.Flow.Collaborator(0);
      uint64_t v20 = *(void *)(v19 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v16, 1, v19))
      {
        uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Collaboration.Flow.Collaborator?);
        memcpy(v15, v16, *(void *)(*(void *)(v21 - 8) + 64));
      }
      else
      {
        uint64_t v49 = v20;
        long long v23 = *((_OWORD *)v16 + 1);
        *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
        *((_OWORD *)v15 + 1) = v23;
        uint64_t v24 = *(int *)(v19 + 24);
        char v50 = &v15[v24];
        uint64_t v25 = &v16[v24];
        uint64_t v26 = type metadata accessor for Artwork();
        uint64_t v27 = *(void *)(v26 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
        {
          uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
          memcpy(v50, v25, *(void *)(*(void *)(v28 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v50, v25, v26);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v50, 0, 1, v26);
        }
        v15[*(int *)(v19 + 28)] = v16[*(int *)(v19 + 28)];
        (*(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56))(v15, 0, 1, v19);
      }
      uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Collaboration.Flow.Collaborator?, URL, Bool));
      uint64_t v30 = *(int *)(v29 + 48);
      uint64_t v31 = &v15[v30];
      uint64_t v32 = &v16[v30];
      uint64_t v33 = type metadata accessor for URL();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 32))(v31, v32, v33);
      v15[*(int *)(v29 + 64)] = v16[*(int *)(v29 + 64)];
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_18:
  uint64_t v34 = a3[8];
  uint64_t v35 = &a1[v34];
  uint64_t v36 = &a2[v34];
  uint64_t v37 = type metadata accessor for Playlist();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 40))(v35, v36, v37);
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  swift_release();
  uint64_t v38 = a3[11];
  a1[a3[10]] = a2[a3[10]];
  uint64_t v39 = &a1[v38];
  uint64_t v40 = &a2[v38];
  uint64_t v41 = *(void *)&a2[v38];
  if (!*(void *)&a1[v38])
  {
    if (v41)
    {
      uint64_t v43 = *((void *)v40 + 1);
      *(void *)uint64_t v39 = v41;
      *((void *)v39 + 1) = v43;
      goto LABEL_25;
    }
LABEL_24:
    *(_OWORD *)uint64_t v39 = *(_OWORD *)v40;
    goto LABEL_25;
  }
  if (!v41)
  {
    swift_release();
    goto LABEL_24;
  }
  uint64_t v42 = *((void *)v40 + 1);
  *(void *)uint64_t v39 = v41;
  *((void *)v39 + 1) = v42;
  swift_release();
LABEL_25:
  *(_OWORD *)&a1[a3[12]] = *(_OWORD *)&a2[a3[12]];
  swift_release();
  uint64_t v44 = a3[13];
  uint64_t v45 = &a1[v44];
  uint64_t v46 = &a2[v44];
  char v47 = v46[16];
  *(_OWORD *)uint64_t v45 = *(_OWORD *)v46;
  v45[16] = v47;
  outlined consume of StateObject<RazzmatazzController>.Storage();
  return a1;
}

uint64_t getEnumTagSinglePayload for Collaboration.Flow.View(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003E12EC);
}

uint64_t sub_1003E12EC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DismissAction>);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_8:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = type metadata accessor for Collaboration.Flow(0);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[7];
LABEL_7:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_8;
  }
  uint64_t v14 = type metadata accessor for Playlist();
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[8];
    goto LABEL_7;
  }
  unint64_t v16 = *(void *)(a1 + a3[9]);
  if (v16 >= 0xFFFFFFFF) {
    LODWORD(v16) = -1;
  }
  return (v16 + 1);
}

uint64_t storeEnumTagSinglePayload for Collaboration.Flow.View(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003E1464);
}

uint64_t sub_1003E1464(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DismissAction>);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t v13 = type metadata accessor for Collaboration.Flow(0);
    if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
    {
      uint64_t v10 = v13;
      uint64_t v14 = *(void *)(v13 - 8);
      uint64_t v15 = a4[7];
    }
    else
    {
      uint64_t result = type metadata accessor for Playlist();
      if (*(_DWORD *)(*(void *)(result - 8) + 84) != a3)
      {
        *(void *)(a1 + a4[9]) = (a2 - 1);
        return result;
      }
      uint64_t v10 = result;
      uint64_t v14 = *(void *)(result - 8);
      uint64_t v15 = a4[8];
    }
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

void type metadata completion function for Collaboration.Flow.View()
{
  type metadata accessor for Collaboration.Flow.Collaborator?(319, (unint64_t *)&lazy cache variable for type metadata for Environment<DismissAction>.Content, (uint64_t (*)(uint64_t))&type metadata accessor for DismissAction, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v0 <= 0x3F)
  {
    type metadata accessor for Collaboration.Flow(319);
    if (v1 <= 0x3F)
    {
      type metadata accessor for Playlist();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t sub_1003E1734()
{
  return lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type VStack<TupleView<(ModifiedContent<<<opaque return type of View.bold(_:)>>.0, AccessibilityAttachmentModifier>?, ModifiedContent<ModifiedContent<<<opaque return type of View.bold(_:)>>.0, _EnvironmentKeyWritingModifier<TextAlignment>>, _PaddingLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FixedSizeLayout>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>, _PaddingLayout>, ModifiedContent<Collaboration.Flow.ProfileEditingView, _PaddingLayout>?, _ConditionalContent<_ConditionalContent<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Toggle<Text>, _PaddingLayout>, _BackgroundStyleModifier<Material>>, _ClipEffect<RoundedRectangle>>, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<, &demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<<<opaque return type of View.bold(_:)>>.0, AccessibilityAttachmentModifier>?, ModifiedContent<ModifiedContent<<<opaque return type of View.bold(_:)>>.0, _EnvironmentKeyWritingModifier<TextAlignment>>, _PaddingLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FixedSizeLayout>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>, _PaddingLayout>, ModifiedContent<Collaboration.Flow.ProfileEditingView, _PaddingLayout>?, _ConditionalContent<_ConditionalContent<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Toggle<Text>, _PaddingLayout>, _BackgroundStyleModifier<Material>>, _ClipEffect<RoundedRectangle>>, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text);
}

uint64_t destroy for Collaboration.Flow.ActionButton(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  uint64_t v2 = *(void *)(a1 + 56);
  char v3 = *(unsigned char *)(a1 + 64);

  return outlined consume of Environment<SymbolButton.MaterialColor?>.Content(v2, v3);
}

uint64_t initializeWithCopy for Collaboration.Flow.ActionButton(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  char v6 = *(unsigned char *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  outlined copy of Environment<Bool>.Content(v5, v6);
  *(void *)(a1 + 56) = v5;
  *(unsigned char *)(a1 + 64) = v6;
  return a1;
}

uint64_t assignWithCopy for Collaboration.Flow.ActionButton(uint64_t a1, void *a2)
{
  uint64_t v2 = a2;
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *((unsigned char *)v2 + 16);
  uint64_t v4 = v2[4];
  *(void *)(a1 + 24) = v2[3];
  *(void *)(a1 + 32) = v4;
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 40) = *((unsigned char *)v2 + 40);
  *(void *)(a1 + 48) = v2[6];
  swift_retain();
  swift_release();
  uint64_t v5 = v2[7];
  LOBYTE(v2) = *((unsigned char *)v2 + 64);
  outlined copy of Environment<Bool>.Content(v5, (char)v2);
  uint64_t v6 = *(void *)(a1 + 56);
  char v7 = *(unsigned char *)(a1 + 64);
  *(void *)(a1 + 56) = v5;
  *(unsigned char *)(a1 + 64) = (_BYTE)v2;
  outlined consume of Environment<SymbolButton.MaterialColor?>.Content(v6, v7);
  return a1;
}

__n128 __swift_memcpy65_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for Collaboration.Flow.ActionButton(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_release();
  char v5 = *(unsigned char *)(a2 + 64);
  uint64_t v6 = *(void *)(a1 + 56);
  char v7 = *(unsigned char *)(a1 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = v5;
  outlined consume of Environment<SymbolButton.MaterialColor?>.Content(v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for Collaboration.Flow.ActionButton(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 65)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Collaboration.Flow.ActionButton(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 64) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 65) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 65) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void *type metadata accessor for Collaboration.Flow.ActionButton()
{
  return &unk_1005477A0;
}

uint64_t *initializeBufferWithCopyOfBuffer for Collaboration.Flow.ProfileEditingView(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    char v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    char v5 = a1;
    uint64_t v6 = *(int *)(a3 + 20);
    char v7 = (uint64_t *)((char *)a1 + v6);
    uint64_t v8 = (uint64_t *)((char *)a2 + v6);
    uint64_t v9 = type metadata accessor for Collaboration.Flow(0);
    swift_retain();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v14 = type metadata accessor for Playlist.Collaborator();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(v7, v8, v14);
LABEL_14:
      swift_storeEnumTagMultiPayload();
      return v5;
    }
    if (!EnumCaseMultiPayload)
    {
      uint64_t v11 = type metadata accessor for Collaboration.Flow.Collaborator(0);
      uint64_t v12 = *(void *)(v11 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v12 + 48))(v8, 1, v11))
      {
        uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Collaboration.Flow.Collaborator?);
        memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        uint64_t v15 = v8[1];
        *char v7 = *v8;
        v7[1] = v15;
        uint64_t v16 = v8[3];
        v7[2] = v8[2];
        v7[3] = v16;
        uint64_t v17 = *(int *)(v11 + 24);
        __dst = (char *)v7 + v17;
        uint64_t v30 = v12;
        uint64_t v28 = (char *)v8 + v17;
        uint64_t v18 = type metadata accessor for Artwork();
        uint64_t v19 = *(void *)(v18 - 8);
        uint64_t v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v27(v28, 1, v18))
        {
          uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
          memcpy(__dst, v28, *(void *)(*(void *)(v20 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v19 + 16))(__dst, v28, v18);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(__dst, 0, 1, v18);
        }
        *((unsigned char *)v7 + *(int *)(v11 + 28)) = *((unsigned char *)v8 + *(int *)(v11 + 28));
        (*(void (**)(void *, void, uint64_t, uint64_t))(v30 + 56))(v7, 0, 1, v11);
      }
      uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Collaboration.Flow.Collaborator?, URL, Bool));
      uint64_t v22 = *(int *)(v21 + 48);
      long long v23 = (char *)v7 + v22;
      uint64_t v24 = (char *)v8 + v22;
      uint64_t v25 = type metadata accessor for URL();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
      *((unsigned char *)v7 + *(int *)(v21 + 64)) = *((unsigned char *)v8 + *(int *)(v21 + 64));
      goto LABEL_14;
    }
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  return v5;
}

uint64_t destroy for Collaboration.Flow.ProfileEditingView(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  type metadata accessor for Collaboration.Flow(0);
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    uint64_t v10 = type metadata accessor for Playlist.Collaborator();
  }
  else
  {
    if (result) {
      return result;
    }
    uint64_t v6 = type metadata accessor for Collaboration.Flow.Collaborator(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v4, 1, v6))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v7 = v4 + *(int *)(v6 + 24);
      uint64_t v8 = type metadata accessor for Artwork();
      uint64_t v9 = *(void *)(v8 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8)) {
        (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
      }
    }
    v4 += *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Collaboration.Flow.Collaborator?, URL, Bool))
                 + 48);
    uint64_t v10 = type metadata accessor for URL();
  }
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);

  return v11(v4, v10);
}

void *initializeWithCopy for Collaboration.Flow.ProfileEditingView(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  char v5 = (void *)((char *)a1 + v4);
  uint64_t v6 = (void *)((char *)a2 + v4);
  uint64_t v7 = type metadata accessor for Collaboration.Flow(0);
  swift_retain();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v12 = type metadata accessor for Playlist.Collaborator();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v5, v6, v12);
LABEL_12:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  if (!EnumCaseMultiPayload)
  {
    uint64_t v9 = type metadata accessor for Collaboration.Flow.Collaborator(0);
    uint64_t v10 = *(void *)(v9 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v10 + 48))(v6, 1, v9))
    {
      uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Collaboration.Flow.Collaborator?);
      memcpy(v5, v6, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      uint64_t v13 = v6[1];
      *char v5 = *v6;
      v5[1] = v13;
      uint64_t v14 = v6[3];
      v5[2] = v6[2];
      v5[3] = v14;
      uint64_t v15 = *(int *)(v9 + 24);
      __dst = (char *)v5 + v15;
      uint64_t v27 = v10;
      uint64_t v28 = (char *)v6 + v15;
      uint64_t v16 = type metadata accessor for Artwork();
      uint64_t v25 = *(void *)(v16 - 8);
      uint64_t v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v17(v28, 1, v16))
      {
        uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
        memcpy(__dst, v28, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v25 + 16))(__dst, v28, v16);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(__dst, 0, 1, v16);
      }
      *((unsigned char *)v5 + *(int *)(v9 + 28)) = *((unsigned char *)v6 + *(int *)(v9 + 28));
      (*(void (**)(void *, void, uint64_t, uint64_t))(v27 + 56))(v5, 0, 1, v9);
    }
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Collaboration.Flow.Collaborator?, URL, Bool));
    uint64_t v20 = *(int *)(v19 + 48);
    uint64_t v21 = (char *)v5 + v20;
    uint64_t v22 = (char *)v6 + v20;
    uint64_t v23 = type metadata accessor for URL();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    *((unsigned char *)v5 + *(int *)(v19 + 64)) = *((unsigned char *)v6 + *(int *)(v19 + 64));
    goto LABEL_12;
  }
  memcpy(v5, v6, *(void *)(*(void *)(v7 - 8) + 64));
  return a1;
}

void *assignWithCopy for Collaboration.Flow.ProfileEditingView(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (void *)((char *)a1 + v6);
    uint64_t v8 = (void *)((char *)a2 + v6);
    outlined destroy of Collaboration.Flow((uint64_t)a1 + v6, type metadata accessor for Collaboration.Flow);
    uint64_t v9 = type metadata accessor for Collaboration.Flow(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v14 = type metadata accessor for Playlist.Collaborator();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(v7, v8, v14);
LABEL_13:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      uint64_t v11 = type metadata accessor for Collaboration.Flow.Collaborator(0);
      uint64_t v12 = *(void *)(v11 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v12 + 48))(v8, 1, v11))
      {
        uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Collaboration.Flow.Collaborator?);
        memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        *uint64_t v7 = *v8;
        v7[1] = v8[1];
        v7[2] = v8[2];
        v7[3] = v8[3];
        uint64_t v15 = *(int *)(v11 + 24);
        __dst = (char *)v7 + v15;
        uint64_t v28 = v12;
        uint64_t v26 = (char *)v8 + v15;
        uint64_t v16 = type metadata accessor for Artwork();
        uint64_t v17 = *(void *)(v16 - 8);
        uint64_t v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v25(v26, 1, v16))
        {
          uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
          memcpy(__dst, v26, *(void *)(*(void *)(v18 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v17 + 16))(__dst, v26, v16);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(__dst, 0, 1, v16);
        }
        *((unsigned char *)v7 + *(int *)(v11 + 28)) = *((unsigned char *)v8 + *(int *)(v11 + 28));
        (*(void (**)(void *, void, uint64_t, uint64_t))(v28 + 56))(v7, 0, 1, v11);
      }
      uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Collaboration.Flow.Collaborator?, URL, Bool));
      uint64_t v20 = *(int *)(v19 + 48);
      uint64_t v21 = (char *)v7 + v20;
      uint64_t v22 = (char *)v8 + v20;
      uint64_t v23 = type metadata accessor for URL();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
      *((unsigned char *)v7 + *(int *)(v19 + 64)) = *((unsigned char *)v8 + *(int *)(v19 + 64));
      goto LABEL_13;
    }
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  return a1;
}

void *initializeWithTake for Collaboration.Flow.ProfileEditingView(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  char v5 = (_OWORD *)((char *)a1 + v4);
  uint64_t v6 = (_OWORD *)((char *)a2 + v4);
  uint64_t v7 = type metadata accessor for Collaboration.Flow(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v12 = type metadata accessor for Playlist.Collaborator();
    (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v12 - 8) + 32))(v5, v6, v12);
LABEL_12:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  if (!EnumCaseMultiPayload)
  {
    uint64_t v9 = type metadata accessor for Collaboration.Flow.Collaborator(0);
    uint64_t v10 = *(void *)(v9 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v10 + 48))(v6, 1, v9))
    {
      uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Collaboration.Flow.Collaborator?);
      memcpy(v5, v6, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      long long v13 = v6[1];
      *char v5 = *v6;
      v5[1] = v13;
      uint64_t v14 = *(int *)(v9 + 24);
      uint64_t v15 = (char *)v5 + v14;
      uint64_t v16 = (char *)v6 + v14;
      uint64_t v17 = type metadata accessor for Artwork();
      uint64_t v18 = *(void *)(v17 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
      {
        uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
        memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v15, v16, v17);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
      }
      *((unsigned char *)v5 + *(int *)(v9 + 28)) = *((unsigned char *)v6 + *(int *)(v9 + 28));
      (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v10 + 56))(v5, 0, 1, v9);
    }
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Collaboration.Flow.Collaborator?, URL, Bool));
    uint64_t v21 = *(int *)(v20 + 48);
    uint64_t v22 = (char *)v5 + v21;
    uint64_t v23 = (char *)v6 + v21;
    uint64_t v24 = type metadata accessor for URL();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
    *((unsigned char *)v5 + *(int *)(v20 + 64)) = *((unsigned char *)v6 + *(int *)(v20 + 64));
    goto LABEL_12;
  }
  memcpy(v5, v6, *(void *)(*(void *)(v7 - 8) + 64));
  return a1;
}

void *assignWithTake for Collaboration.Flow.ProfileEditingView(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_release();
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (_OWORD *)((char *)a1 + v6);
    uint64_t v8 = (_OWORD *)((char *)a2 + v6);
    outlined destroy of Collaboration.Flow((uint64_t)a1 + v6, type metadata accessor for Collaboration.Flow);
    uint64_t v9 = type metadata accessor for Collaboration.Flow(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v14 = type metadata accessor for Playlist.Collaborator();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v14 - 8) + 32))(v7, v8, v14);
LABEL_13:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      uint64_t v11 = type metadata accessor for Collaboration.Flow.Collaborator(0);
      uint64_t v12 = *(void *)(v11 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v12 + 48))(v8, 1, v11))
      {
        uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Collaboration.Flow.Collaborator?);
        memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        long long v15 = v8[1];
        *uint64_t v7 = *v8;
        v7[1] = v15;
        uint64_t v16 = *(int *)(v11 + 24);
        uint64_t v17 = (char *)v7 + v16;
        uint64_t v18 = (char *)v8 + v16;
        uint64_t v19 = type metadata accessor for Artwork();
        uint64_t v20 = *(void *)(v19 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
        {
          uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
          memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v17, v18, v19);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
        }
        *((unsigned char *)v7 + *(int *)(v11 + 28)) = *((unsigned char *)v8 + *(int *)(v11 + 28));
        (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v12 + 56))(v7, 0, 1, v11);
      }
      uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Collaboration.Flow.Collaborator?, URL, Bool));
      uint64_t v23 = *(int *)(v22 + 48);
      uint64_t v24 = (char *)v7 + v23;
      uint64_t v25 = (char *)v8 + v23;
      uint64_t v26 = type metadata accessor for URL();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
      *((unsigned char *)v7 + *(int *)(v22 + 64)) = *((unsigned char *)v8 + *(int *)(v22 + 64));
      goto LABEL_13;
    }
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for Collaboration.Flow.ProfileEditingView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003E2CCC);
}

uint64_t sub_1003E2CCC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for Collaboration.Flow(0);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for Collaboration.Flow.ProfileEditingView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003E2D90);
}

void *sub_1003E2D90(void *result, uint64_t a2, int a3, uint64_t a4)
{
  char v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for Collaboration.Flow(0);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for Collaboration.Flow.ProfileEditingView(uint64_t a1)
{
  return type metadata accessor for Notice.Variant(a1, (uint64_t *)&type metadata singleton initialization cache for Collaboration.Flow.ProfileEditingView);
}

uint64_t type metadata completion function for Collaboration.Flow.ProfileEditingView()
{
  uint64_t result = type metadata accessor for Collaboration.Flow(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *type metadata accessor for Collaboration.Flow.GlyphImageView()
{
  return &unk_1005477D8;
}

uint64_t associated type witness table accessor for View.Body : View in Collaboration.Flow.GlyphImageView()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t associated type witness table accessor for View.Body : View in Collaboration.Flow.ProfileEditingView()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t associated type witness table accessor for View.Body : View in Collaboration.Flow.ActionButton()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1003E2F58()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  outlined consume of Environment<SymbolButton.MaterialColor?>.Content(*(void *)(v0 + 72), *(unsigned char *)(v0 + 80));

  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in Collaboration.Flow.ActionButton.body.getter()
{
  return closure #1 in Collaboration.Flow.ActionButton.body.getter(v0 + 16);
}

uint64_t partial apply for closure #2 in Collaboration.Flow.ActionButton.body.getter@<X0>(uint64_t a1@<X8>)
{
  return closure #2 in Collaboration.Flow.ActionButton.body.getter(*(void *)(v1 + 16), a1);
}

uint64_t outlined retain of Collaboration.Flow.ActionButton(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 56);
  char v3 = *(unsigned char *)(a1 + 64);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  outlined copy of Environment<Bool>.Content(v2, v3);
  return a1;
}

unint64_t lazy protocol witness table accessor for type _ConditionalContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<Text, _FlexFrameLayout>> and conformance <> _ConditionalContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type _ConditionalContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<Text, _FlexFrameLayout>> and conformance <> _ConditionalContent<A, B>;
  if (!lazy protocol witness table cache variable for type _ConditionalContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<Text, _FlexFrameLayout>> and conformance <> _ConditionalContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<Text, _FlexFrameLayout>>);
    lazy protocol witness table accessor for type ModifiedContent<ProgressView<EmptyView, EmptyView>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type ModifiedContent<Text, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<Text, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<Text, _FlexFrameLayout>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type _ConditionalContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<Text, _FlexFrameLayout>> and conformance <> _ConditionalContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ProgressView<EmptyView, EmptyView>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ProgressView<EmptyView, EmptyView>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ProgressView<EmptyView, EmptyView>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ProgressView<EmptyView, EmptyView>, _EnvironmentKeyWritingModifier<Color?>>);
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type ProgressView<EmptyView, EmptyView> and conformance ProgressView<A, B>, &demangling cache variable for type metadata for ProgressView<EmptyView, EmptyView>);
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Color?> and conformance _EnvironmentKeyWritingModifier<A>, (uint64_t *)&demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Color?>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ProgressView<EmptyView, EmptyView>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t sub_1003E317C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = EnvironmentValues.isEnabled.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1003E31AC()
{
  return EnvironmentValues.isEnabled.setter();
}

uint64_t sub_1003E31D4()
{
  return swift_deallocObject();
}

unsigned char *_s7SwiftUI4ViewPAAE8disabledyQrSbFySbzcfU_TA_0(unsigned char *result)
{
  *result &= ~*(unsigned char *)(v1 + 16) & 1;
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<Button<_ConditionalContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<Text, _FlexFrameLayout>>>, _EnvironmentKeyTransformModifier<Bool>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<Button<_ConditionalContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<Text, _FlexFrameLayout>>>, _EnvironmentKeyTransformModifier<Bool>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<Button<_ConditionalContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<Text, _FlexFrameLayout>>>, _EnvironmentKeyTransformModifier<Bool>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Button<_ConditionalContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<Text, _FlexFrameLayout>>>, _EnvironmentKeyTransformModifier<Bool>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Button<_ConditionalContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<Text, _FlexFrameLayout>>>, _EnvironmentKeyTransformModifier<Bool>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Button<_ConditionalContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<Text, _FlexFrameLayout>>>, _EnvironmentKeyTransformModifier<Bool>>, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Button<_ConditionalContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<Text, _FlexFrameLayout>>>, _EnvironmentKeyTransformModifier<Bool>>, _FlexFrameLayout>, (void (*)(void))lazy protocol witness table accessor for type ModifiedContent<Button<_ConditionalContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<Text, _FlexFrameLayout>>>, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>);
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Color?> and conformance _EnvironmentKeyWritingModifier<A>, (uint64_t *)&demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Color?>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<Button<_ConditionalContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<Text, _FlexFrameLayout>>>, _EnvironmentKeyTransformModifier<Bool>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Button<_ConditionalContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<Text, _FlexFrameLayout>>>, _EnvironmentKeyTransformModifier<Bool>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<Button<_ConditionalContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<Text, _FlexFrameLayout>>>, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<Button<_ConditionalContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<Text, _FlexFrameLayout>>>, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<Button<_ConditionalContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<Text, _FlexFrameLayout>>>, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&demangling cache variable for type metadata for ModifiedContent<Button<_ConditionalContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<Text, _FlexFrameLayout>>>, _EnvironmentKeyTransformModifier<Bool>>);
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type Button<_ConditionalContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<Text, _FlexFrameLayout>>> and conformance Button<A>, &demangling cache variable for type metadata for Button<_ConditionalContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<Text, _FlexFrameLayout>>>);
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type _EnvironmentKeyTransformModifier<Bool> and conformance _EnvironmentKeyTransformModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyTransformModifier<Bool>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<Button<_ConditionalContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<Text, _FlexFrameLayout>>>, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t outlined init with copy of Collaboration.Flow(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1003E3474@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.tintColor.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1003E34A0()
{
  return EnvironmentValues.tintColor.setter();
}

uint64_t sub_1003E34DC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = EnvironmentValues.multilineTextAlignment.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1003E3508()
{
  return EnvironmentValues.multilineTextAlignment.setter();
}

unint64_t outlined copy of ImagePicker.SourceType(unint64_t result, void *a2)
{
  if (result >= 3)
  {
    id v3 = a2;
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t outlined copy of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FixedSizeLayout>, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>?(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    outlined copy of Text.Storage(result, a2, a3 & 1);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t outlined retain of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FixedSizeLayout>, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>?(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))
{
  char v4 = *(unsigned char *)(a1 + 128);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), v4);
  return a1;
}

uint64_t outlined consume of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FixedSizeLayout>, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>?(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    outlined consume of Text.Storage(result, a2, a3 & 1);
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    return swift_release();
  }
  return result;
}

void outlined consume of ImagePicker.SourceType(unint64_t a1, void *a2)
{
  if (a1 >= 3)
  {
    swift_bridgeObjectRelease();
  }
}

double _s7SwiftUI15ModifiedContentVyACyACyACyACyAA4TextVAA16_FixedSizeLayoutVGAA30_EnvironmentKeyWritingModifierVyAA0E9AlignmentOGGAJyAA4FontVSgGGAJyAA5ColorVSgGGAA08_PaddingH0VGSgWOi0_(uint64_t a1)
{
  *(unsigned char *)(a1 + 128) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<Collaboration.Flow.GlyphImageView, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<Collaboration.Flow.GlyphImageView, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<Collaboration.Flow.GlyphImageView, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<Collaboration.Flow.GlyphImageView, _EnvironmentKeyWritingModifier<Font?>>);
    lazy protocol witness table accessor for type Collaboration.Flow.GlyphImageView and conformance Collaboration.Flow.GlyphImageView();
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>((unint64_t *)&_s7SwiftUI30_EnvironmentKeyWritingModifierVyAA4FontVSgGACyxGAA04ViewF0AAWL_0, &_s7SwiftUI30_EnvironmentKeyWritingModifierVyAA4FontVSgGMD_0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<Collaboration.Flow.GlyphImageView, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type Collaboration.Flow.GlyphImageView and conformance Collaboration.Flow.GlyphImageView()
{
  unint64_t result = lazy protocol witness table cache variable for type Collaboration.Flow.GlyphImageView and conformance Collaboration.Flow.GlyphImageView;
  if (!lazy protocol witness table cache variable for type Collaboration.Flow.GlyphImageView and conformance Collaboration.Flow.GlyphImageView)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Collaboration.Flow.GlyphImageView and conformance Collaboration.Flow.GlyphImageView);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Text, _FixedSizeLayout>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Text, _FixedSizeLayout>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Text, _FixedSizeLayout>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Text, _FixedSizeLayout>, _EnvironmentKeyWritingModifier<Font?>>);
    lazy protocol witness table accessor for type ModifiedContent<Text, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<Text, _FixedSizeLayout> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<Text, _FixedSizeLayout>);
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>((unint64_t *)&_s7SwiftUI30_EnvironmentKeyWritingModifierVyAA4FontVSgGACyxGAA04ViewF0AAWL_0, &_s7SwiftUI30_EnvironmentKeyWritingModifierVyAA4FontVSgGMD_0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Text, _FixedSizeLayout>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t lazy protocol witness table accessor for type ModifiedContent<Text, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t partial apply for closure #5 in closure #1 in Collaboration.Flow.View.body.getter(uint64_t a1)
{
  return partial apply for closure #5 in closure #1 in Collaboration.Flow.View.body.getter(a1, (uint64_t (*)(void))&type metadata accessor for Playlist.Collaborator, (uint64_t (*)(void))&type metadata accessor for Playlist.Collaborator, (uint64_t)&unk_100547A28, (uint64_t)&async function pointer to partial apply for closure #1 in closure #5 in closure #1 in Collaboration.Flow.View.body.getter);
}

uint64_t objectdestroy_38Tm_0()
{
  uint64_t v1 = (int *)type metadata accessor for Collaboration.Flow.View(0);
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v5 = type metadata accessor for Playlist.Collaborator();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = v0 + v3;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DismissAction>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = type metadata accessor for DismissAction();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v0 + v3, v9);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  uint64_t v10 = v8 + v1[7];
  type metadata accessor for Collaboration.Flow(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v10, v5);
  }
  else if (!EnumCaseMultiPayload)
  {
    uint64_t v24 = v4;
    uint64_t v12 = type metadata accessor for Collaboration.Flow.Collaborator(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v10, 1, v12))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v13 = v10 + *(int *)(v12 + 24);
      uint64_t v14 = type metadata accessor for Artwork();
      uint64_t v22 = *(void *)(v14 - 8);
      uint64_t v23 = v13;
      uint64_t v15 = v13;
      uint64_t v16 = v14;
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v15, 1, v14)) {
        (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v23, v16);
      }
    }
    uint64_t v17 = v10
        + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Collaboration.Flow.Collaborator?, URL, Bool))
                 + 48);
    uint64_t v18 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
    uint64_t v4 = v24;
  }
  uint64_t v19 = v8 + v1[8];
  uint64_t v20 = type metadata accessor for Playlist();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
  swift_release();
  if (*(void *)(v8 + v1[11])) {
    swift_release();
  }
  swift_release();
  outlined consume of StateObject<RazzmatazzController>.Storage();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + ((v3 + v4 + v7) & ~v7), v5);

  return swift_deallocObject();
}

uint64_t partial apply for closure #6 in closure #1 in Collaboration.Flow.View.body.getter(uint64_t a1)
{
  return partial apply for closure #5 in closure #1 in Collaboration.Flow.View.body.getter(a1, (uint64_t (*)(void))&type metadata accessor for Playlist.Collaborator, (uint64_t (*)(void))&type metadata accessor for Playlist.Collaborator, (uint64_t)&unk_100547A00, (uint64_t)&async function pointer to partial apply for closure #1 in closure #6 in closure #1 in Collaboration.Flow.View.body.getter);
}

uint64_t partial apply for closure #5 in closure #1 in Collaboration.Flow.View.body.getter(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(void), uint64_t a4, uint64_t a5)
{
  uint64_t v11 = *(void *)(type metadata accessor for Collaboration.Flow.View(0) - 8);
  unint64_t v12 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v13 = *(void *)(v11 + 64);
  uint64_t v14 = *(void *)(a2(0) - 8);
  return closure #4 in closure #1 in Collaboration.Flow.View.body.getter(a1, v5 + v12, v5 + ((v12 + v13 + *(unsigned __int8 *)(v14 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80)), a3, a4, a5);
}

unint64_t lazy protocol witness table accessor for type _ConditionalContent<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Toggle<Text>, _PaddingLayout>, _BackgroundStyleModifier<Material>>, _ClipEffect<RoundedRectangle>>, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FixedSizeLayout>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<TextAlignment>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _PaddingLayout>, _PaddingLayout>, <<opaque return type of View.alert(isPresented:content:)>>.0)>, ModifiedContent<Collaboration.Flow.ActionButton, _EnvironmentKeyTransformModifier<Bool>>> and conformance <> _ConditionalContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type _ConditionalContent<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Toggle<Text>, _PaddingLayout>, _BackgroundStyleModifier<Material>>, _ClipEffect<RoundedRectangle>>, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FixedSizeLayout>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<TextAlignment>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _PaddingLayout>, _PaddingLayout>, <<opaque return type of View.alert(isPresented:content:)>>.0)>, ModifiedContent<Collaboration.Flow.ActionButton, _EnvironmentKeyTransformModifier<Bool>>> and conformance <> _ConditionalContent<A, B>;
  if (!lazy protocol witness table cache variable for type _ConditionalContent<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Toggle<Text>, _PaddingLayout>, _BackgroundStyleModifier<Material>>, _ClipEffect<RoundedRectangle>>, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FixedSizeLayout>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<TextAlignment>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _PaddingLayout>, _PaddingLayout>, <<opaque return type of View.alert(isPresented:content:)>>.0)>, ModifiedContent<Collaboration.Flow.ActionButton, _EnvironmentKeyTransformModifier<Bool>>> and conformance <> _ConditionalContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _ConditionalContent<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Toggle<Text>, _PaddingLayout>, _BackgroundStyleModifier<Material>>, _ClipEffect<RoundedRectangle>>, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FixedSizeLayout>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<TextAlignment>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _PaddingLayout>, _PaddingLayout>, <<opaque return type of View.alert(isPresented:content:)>>.0)>, ModifiedContent<Collaboration.Flow.ActionButton, _EnvironmentKeyTransformModifier<Bool>>>);
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Toggle<Text>, _PaddingLayout>, _BackgroundStyleModifier<Material>>, _ClipEffect<RoundedRectangle>>, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FixedSizeLayout>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<TextAlignment>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _PaddingLayout>, _PaddingLayout>, <<opaque return type of View.alert(isPresented:content:)>>.0)> and conformance TupleView<A>, &demangling cache variable for type metadata for TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Toggle<Text>, _PaddingLayout>, _BackgroundStyleModifier<Material>>, _ClipEffect<RoundedRectangle>>, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FixedSizeLayout>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<TextAlignment>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _PaddingLayout>, _PaddingLayout>, <<opaque return type of View.alert(isPresented:content:)>>.0)>);
    lazy protocol witness table accessor for type ModifiedContent<Collaboration.Flow.ActionButton, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type _ConditionalContent<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Toggle<Text>, _PaddingLayout>, _BackgroundStyleModifier<Material>>, _ClipEffect<RoundedRectangle>>, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FixedSizeLayout>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<TextAlignment>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _PaddingLayout>, _PaddingLayout>, <<opaque return type of View.alert(isPresented:content:)>>.0)>, ModifiedContent<Collaboration.Flow.ActionButton, _EnvironmentKeyTransformModifier<Bool>>> and conformance <> _ConditionalContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<Collaboration.Flow.ActionButton, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<Collaboration.Flow.ActionButton, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<Collaboration.Flow.ActionButton, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<Collaboration.Flow.ActionButton, _EnvironmentKeyTransformModifier<Bool>>);
    lazy protocol witness table accessor for type Collaboration.Flow.ActionButton and conformance Collaboration.Flow.ActionButton();
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type _EnvironmentKeyTransformModifier<Bool> and conformance _EnvironmentKeyTransformModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyTransformModifier<Bool>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<Collaboration.Flow.ActionButton, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type Collaboration.Flow.ActionButton and conformance Collaboration.Flow.ActionButton()
{
  unint64_t result = lazy protocol witness table cache variable for type Collaboration.Flow.ActionButton and conformance Collaboration.Flow.ActionButton;
  if (!lazy protocol witness table cache variable for type Collaboration.Flow.ActionButton and conformance Collaboration.Flow.ActionButton)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Collaboration.Flow.ActionButton and conformance Collaboration.Flow.ActionButton);
  }
  return result;
}

uint64_t outlined retain of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FixedSizeLayout>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>, _PaddingLayout>(uint64_t a1)
{
  return a1;
}

uint64_t outlined release of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FixedSizeLayout>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>, _PaddingLayout>(uint64_t a1)
{
  return a1;
}

uint64_t sub_1003E4174()
{
  uint64_t v1 = (int *)type metadata accessor for Collaboration.Flow.View(0);
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = v0 + v3;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DismissAction>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = type metadata accessor for DismissAction();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v0 + v3, v9);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  uint64_t v10 = v8 + v1[7];
  type metadata accessor for Collaboration.Flow(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v18 = type metadata accessor for Playlist.Collaborator();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v10, v18);
  }
  else if (!EnumCaseMultiPayload)
  {
    uint64_t v24 = v4;
    uint64_t v12 = type metadata accessor for Collaboration.Flow.Collaborator(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v10, 1, v12))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v13 = v10 + *(int *)(v12 + 24);
      uint64_t v14 = type metadata accessor for Artwork();
      uint64_t v22 = *(void *)(v14 - 8);
      uint64_t v23 = v13;
      uint64_t v15 = v13;
      uint64_t v16 = v14;
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v15, 1, v14)) {
        (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v23, v16);
      }
    }
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Collaboration.Flow.Collaborator?, URL, Bool));
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v10 + *(int *)(v17 + 48), v5);
    uint64_t v4 = v24;
  }
  uint64_t v19 = v8 + v1[8];
  uint64_t v20 = type metadata accessor for Playlist();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
  swift_release();
  if (*(void *)(v8 + v1[11])) {
    swift_release();
  }
  swift_release();
  outlined consume of StateObject<RazzmatazzController>.Storage();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + ((v3 + v4 + v7) & ~v7), v5);

  return swift_deallocObject();
}

uint64_t partial apply for closure #4 in closure #1 in Collaboration.Flow.View.body.getter(uint64_t a1)
{
  return partial apply for closure #5 in closure #1 in Collaboration.Flow.View.body.getter(a1, (uint64_t (*)(void))&type metadata accessor for URL, (uint64_t (*)(void))&type metadata accessor for URL, (uint64_t)&unk_1005479D8, (uint64_t)&async function pointer to partial apply for closure #1 in closure #4 in closure #1 in Collaboration.Flow.View.body.getter);
}

uint64_t sub_1003E4580()
{
  return swift_deallocObject();
}

uint64_t partial apply for closure #2 in closure #1 in Collaboration.Flow.View.body.getter(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for Collaboration.Flow.View(0) - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return closure #2 in closure #1 in Collaboration.Flow.View.body.getter(a1, v4);
}

uint64_t sub_1003E4604()
{
  return swift_deallocObject();
}

uint64_t partial apply for closure #3 in closure #1 in Collaboration.Flow.View.body.getter@<X0>(uint64_t a1@<X8>)
{
  return closure #3 in closure #1 in Collaboration.Flow.View.body.getter(*(void *)(v1 + 16), a1);
}

uint64_t outlined retain of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FixedSizeLayout>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<TextAlignment>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _PaddingLayout>, _PaddingLayout>(uint64_t a1)
{
  return a1;
}

uint64_t outlined release of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FixedSizeLayout>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<TextAlignment>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _PaddingLayout>, _PaddingLayout>(uint64_t a1)
{
  return a1;
}

uint64_t objectdestroy_55Tm()
{
  uint64_t v1 = (int *)type metadata accessor for Collaboration.Flow.View(0);
  unint64_t v2 = (*(unsigned __int8 *)(*((void *)v1 - 1) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = v0 + v2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DismissAction>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for DismissAction();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v0 + v2, v4);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  uint64_t v5 = v3 + v1[7];
  type metadata accessor for Collaboration.Flow(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v11 = type metadata accessor for Playlist.Collaborator();
  }
  else
  {
    if (EnumCaseMultiPayload) {
      goto LABEL_12;
    }
    uint64_t v7 = type metadata accessor for Collaboration.Flow.Collaborator(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v8 = v5 + *(int *)(v7 + 24);
      uint64_t v9 = type metadata accessor for Artwork();
      uint64_t v10 = *(void *)(v9 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9)) {
        (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
      }
    }
    v5 += *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Collaboration.Flow.Collaborator?, URL, Bool))
                 + 48);
    uint64_t v11 = type metadata accessor for URL();
  }
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v5, v11);
LABEL_12:
  uint64_t v12 = v3 + v1[8];
  uint64_t v13 = type metadata accessor for Playlist();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  swift_release();
  if (*(void *)(v3 + v1[11])) {
    swift_release();
  }
  swift_release();
  outlined consume of StateObject<RazzmatazzController>.Storage();

  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #3 in closure #1 in Collaboration.Flow.View.body.getter()
{
  return partial apply for closure #1 in closure #3 in closure #1 in Collaboration.Flow.View.body.getter(closure #1 in closure #3 in closure #1 in Collaboration.Flow.View.body.getter);
}

uint64_t partial apply for closure #2 in closure #3 in closure #1 in Collaboration.Flow.View.body.getter()
{
  return partial apply for closure #1 in closure #3 in closure #1 in Collaboration.Flow.View.body.getter(closure #2 in closure #3 in closure #1 in Collaboration.Flow.View.body.getter);
}

uint64_t partial apply for closure #1 in closure #3 in closure #1 in Collaboration.Flow.View.body.getter(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for Collaboration.Flow.View(0) - 8);
  uint64_t v3 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  return a1(v3);
}

unint64_t _s9MusicCore13CollaborationO5ErrorOAEsAdAWl_0()
{
  unint64_t result = _s9MusicCore13CollaborationO5ErrorOAEsAdAWL_0;
  if (!_s9MusicCore13CollaborationO5ErrorOAEsAdAWL_0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&_s9MusicCore13CollaborationO5ErrorOAEsAdAWL_0);
  }
  return result;
}

uint64_t partial apply for closure #1 in closure #1 in closure #3 in closure #1 in Collaboration.Flow.View.body.getter()
{
  type metadata accessor for Collaboration.Flow.View(0);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = partial apply for closure #1 in static MusicEngagementExtension.performRequest(with:completion:);
  return closure #1 in closure #1 in closure #3 in closure #1 in Collaboration.Flow.View.body.getter();
}

uint64_t objectdestroy_68Tm()
{
  uint64_t v1 = (int *)type metadata accessor for Collaboration.Flow.View(0);
  unint64_t v2 = (*(unsigned __int8 *)(*((void *)v1 - 1) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  swift_unknownObjectRelease();
  uint64_t v3 = v0 + v2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DismissAction>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for DismissAction();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v0 + v2, v4);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  uint64_t v5 = v3 + v1[7];
  type metadata accessor for Collaboration.Flow(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v11 = type metadata accessor for Playlist.Collaborator();
  }
  else
  {
    if (EnumCaseMultiPayload) {
      goto LABEL_12;
    }
    uint64_t v7 = type metadata accessor for Collaboration.Flow.Collaborator(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v8 = v5 + *(int *)(v7 + 24);
      uint64_t v9 = type metadata accessor for Artwork();
      uint64_t v10 = *(void *)(v9 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9)) {
        (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
      }
    }
    v5 += *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Collaboration.Flow.Collaborator?, URL, Bool))
                 + 48);
    uint64_t v11 = type metadata accessor for URL();
  }
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v5, v11);
LABEL_12:
  uint64_t v12 = v3 + v1[8];
  uint64_t v13 = type metadata accessor for Playlist();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  swift_release();
  if (*(void *)(v3 + v1[11])) {
    swift_release();
  }
  swift_release();
  outlined consume of StateObject<RazzmatazzController>.Storage();

  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #2 in closure #1 in Collaboration.Flow.View.body.getter()
{
  type metadata accessor for Collaboration.Flow.View(0);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = closure #3 in static Actions.ReportConcern.action(context:);
  return closure #1 in closure #2 in closure #1 in Collaboration.Flow.View.body.getter();
}

uint64_t sub_1003E501C()
{
  uint64_t v1 = (int *)type metadata accessor for Collaboration.Flow.View(0);
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  swift_unknownObjectRelease();
  uint64_t v8 = v0 + v3;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DismissAction>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = type metadata accessor for DismissAction();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v0 + v3, v9);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  uint64_t v10 = v8 + v1[7];
  type metadata accessor for Collaboration.Flow(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v18 = type metadata accessor for Playlist.Collaborator();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v10, v18);
  }
  else if (!EnumCaseMultiPayload)
  {
    uint64_t v24 = v4;
    uint64_t v12 = type metadata accessor for Collaboration.Flow.Collaborator(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v10, 1, v12))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v13 = v10 + *(int *)(v12 + 24);
      uint64_t v14 = type metadata accessor for Artwork();
      uint64_t v22 = *(void *)(v14 - 8);
      uint64_t v23 = v13;
      uint64_t v15 = v13;
      uint64_t v16 = v14;
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v15, 1, v14)) {
        (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v23, v16);
      }
    }
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Collaboration.Flow.Collaborator?, URL, Bool));
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v10 + *(int *)(v17 + 48), v5);
    uint64_t v4 = v24;
  }
  uint64_t v19 = v8 + v1[8];
  uint64_t v20 = type metadata accessor for Playlist();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
  swift_release();
  if (*(void *)(v8 + v1[11])) {
    swift_release();
  }
  swift_release();
  outlined consume of StateObject<RazzmatazzController>.Storage();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + ((v3 + v4 + v7) & ~v7), v5);

  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #4 in closure #1 in Collaboration.Flow.View.body.getter(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for Collaboration.Flow.View(0) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64);
  uint64_t v7 = *(unsigned __int8 *)(*(void *)(type metadata accessor for URL() - 8) + 80);
  unint64_t v8 = v5 + v6 + v7;
  uint64_t v9 = *(void *)(v1 + 16);
  uint64_t v10 = *(void *)(v1 + 24);
  uint64_t v11 = v1 + v5;
  uint64_t v12 = v1 + (v8 & ~v7);
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v13;
  *uint64_t v13 = v2;
  v13[1] = closure #3 in static Actions.ReportConcern.action(context:);
  return closure #1 in closure #4 in closure #1 in Collaboration.Flow.View.body.getter(a1, v9, v10, v11, v12);
}

uint64_t partial apply for closure #1 in closure #6 in closure #1 in Collaboration.Flow.View.body.getter(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for Collaboration.Flow.View(0) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64);
  uint64_t v7 = *(unsigned __int8 *)(*(void *)(type metadata accessor for Playlist.Collaborator() - 8) + 80);
  unint64_t v8 = v5 + v6 + v7;
  uint64_t v9 = *(void *)(v1 + 16);
  uint64_t v10 = *(void *)(v1 + 24);
  uint64_t v11 = v1 + v5;
  uint64_t v12 = v1 + (v8 & ~v7);
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v13;
  *uint64_t v13 = v2;
  v13[1] = closure #3 in static Actions.ReportConcern.action(context:);
  return closure #1 in closure #6 in closure #1 in Collaboration.Flow.View.body.getter(a1, v9, v10, v11, v12);
}

uint64_t objectdestroy_88Tm()
{
  uint64_t v1 = (int *)type metadata accessor for Collaboration.Flow.View(0);
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v5 = type metadata accessor for Playlist.Collaborator();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  swift_unknownObjectRelease();
  uint64_t v8 = v0 + v3;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DismissAction>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = type metadata accessor for DismissAction();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v0 + v3, v9);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  uint64_t v10 = v8 + v1[7];
  type metadata accessor for Collaboration.Flow(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v10, v5);
  }
  else if (!EnumCaseMultiPayload)
  {
    uint64_t v24 = v4;
    uint64_t v12 = type metadata accessor for Collaboration.Flow.Collaborator(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v10, 1, v12))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v13 = v10 + *(int *)(v12 + 24);
      uint64_t v14 = type metadata accessor for Artwork();
      uint64_t v22 = *(void *)(v14 - 8);
      uint64_t v23 = v13;
      uint64_t v15 = v13;
      uint64_t v16 = v14;
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v15, 1, v14)) {
        (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v23, v16);
      }
    }
    uint64_t v17 = v10
        + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Collaboration.Flow.Collaborator?, URL, Bool))
                 + 48);
    uint64_t v18 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
    uint64_t v4 = v24;
  }
  uint64_t v19 = v8 + v1[8];
  uint64_t v20 = type metadata accessor for Playlist();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
  swift_release();
  if (*(void *)(v8 + v1[11])) {
    swift_release();
  }
  swift_release();
  outlined consume of StateObject<RazzmatazzController>.Storage();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + ((v3 + v4 + v7) & ~v7), v5);

  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #5 in closure #1 in Collaboration.Flow.View.body.getter(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for Collaboration.Flow.View(0) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64);
  uint64_t v7 = *(unsigned __int8 *)(*(void *)(type metadata accessor for Playlist.Collaborator() - 8) + 80);
  unint64_t v8 = v5 + v6 + v7;
  uint64_t v9 = *(void *)(v1 + 16);
  uint64_t v10 = *(void *)(v1 + 24);
  uint64_t v11 = v1 + v5;
  uint64_t v12 = v1 + (v8 & ~v7);
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v13;
  *uint64_t v13 = v2;
  v13[1] = closure #3 in static Actions.ReportConcern.action(context:);
  return closure #1 in closure #5 in closure #1 in Collaboration.Flow.View.body.getter(a1, v9, v10, v11, v12);
}

unint64_t type metadata accessor for ICUserIdentity()
{
  unint64_t result = lazy cache variable for type metadata for ICUserIdentity;
  if (!lazy cache variable for type metadata for ICUserIdentity)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for ICUserIdentity);
  }
  return result;
}

uint64_t lazy protocol witness table accessor for type InlineProfileEditingView.Context and conformance InlineProfileEditingView.Context(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for Collaboration.Flow.ActionButton.Style(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1003E5D10);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

void *type metadata accessor for Collaboration.Flow.ActionButton.Style()
{
  return &unk_100547AC0;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.bold(_:)>>.0, _BackgroundModifier<_ShapeView<RoundedRectangle, Color>>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.bold(_:)>>.0, _BackgroundModifier<_ShapeView<RoundedRectangle, Color>>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.bold(_:)>>.0, _BackgroundModifier<_ShapeView<RoundedRectangle, Color>>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.bold(_:)>>.0, _BackgroundModifier<_ShapeView<RoundedRectangle, Color>>>);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Button<_ConditionalContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<Text, _FlexFrameLayout>>>, _EnvironmentKeyTransformModifier<Bool>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>, _FlexFrameLayout>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Button<_ConditionalContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<Text, _FlexFrameLayout>>>, _EnvironmentKeyTransformModifier<Bool>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Button<_ConditionalContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<Text, _FlexFrameLayout>>>, _EnvironmentKeyTransformModifier<Bool>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Button<_ConditionalContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<Text, _FlexFrameLayout>>>, _EnvironmentKeyTransformModifier<Bool>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>, _FlexFrameLayout>, (void (*)(void))lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<Button<_ConditionalContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<Text, _FlexFrameLayout>>>, _EnvironmentKeyTransformModifier<Bool>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>);
    swift_getOpaqueTypeConformance2();
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type _BackgroundModifier<_ShapeView<RoundedRectangle, Color>> and conformance _BackgroundModifier<A>, &demangling cache variable for type metadata for _BackgroundModifier<_ShapeView<RoundedRectangle, Color>>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.bold(_:)>>.0, _BackgroundModifier<_ShapeView<RoundedRectangle, Color>>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t sub_1003E5E4C()
{
  return lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Text.Case?>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _FlexFrameLayout>, _PaddingLayout>?, InlineProfileEditingView, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FixedSizeLayout>, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>?)>> and conformance VStack<A>, &demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Text.Case?>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _FlexFrameLayout>, _PaddingLayout>?, InlineProfileEditingView, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FixedSizeLayout>, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>?)>>);
}

unint64_t lazy protocol witness table accessor for type Collaboration.Flow.ActionButton.Style and conformance Collaboration.Flow.ActionButton.Style()
{
  unint64_t result = lazy protocol witness table cache variable for type Collaboration.Flow.ActionButton.Style and conformance Collaboration.Flow.ActionButton.Style;
  if (!lazy protocol witness table cache variable for type Collaboration.Flow.ActionButton.Style and conformance Collaboration.Flow.ActionButton.Style)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Collaboration.Flow.ActionButton.Style and conformance Collaboration.Flow.ActionButton.Style);
  }
  return result;
}

double specialized View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = specialized View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t *)&demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<NoticeView, _PaddingLayout>, _PaddingLayout>, _PaddingLayout>, _TraitWritingModifier<TransitionTraitKey>>, _EnvironmentKeyWritingModifier<NoticeDismissal?>>?, ModifiedContent<Spacer, _FrameLayout>)>>, &demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<NoticeView, _PaddingLayout>, _PaddingLayout>, _PaddingLayout>, _TraitWritingModifier<TransitionTraitKey>>, _EnvironmentKeyWritingModifier<NoticeDismissal?>>?, ModifiedContent<Spacer, _FrameLayout>)>>, _FlexFrameLayout>).n128_u64[0];
  return result;
}

{
  double result;

  *(void *)&double result = specialized View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &demangling cache variable for type metadata for Group<_ConditionalContent<HStack<TupleView<(ProgressView<EmptyView, EmptyView>, Text)>>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<OpenURLAction>>>?>, &demangling cache variable for type metadata for ModifiedContent<Group<_ConditionalContent<HStack<TupleView<(ProgressView<EmptyView, EmptyView>, Text)>>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<OpenURLAction>>>?>, _FlexFrameLayout>).n128_u64[0];
  return result;
}

{
  double result;

  *(void *)&double result = specialized View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t *)&demangling cache variable for type metadata for ModifiedContent<_VariadicView.Tree<_LayoutRoot<VStackLayout>, TupleView<(Spacer, <<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, Text, Spacer)>>, _OffsetEffect>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<_VariadicView.Tree<_LayoutRoot<VStackLayout>, TupleView<(Spacer, <<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, Text, Spacer)>>, _OffsetEffect>, _FlexFrameLayout>).n128_u64[0];
  return result;
}

{
  double result;

  *(void *)&double result = specialized View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t *)&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Text.Case?>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Text.Case?>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _FlexFrameLayout>).n128_u64[0];
  return result;
}

{
  double result;

  *(void *)&double result = specialized View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t *)&demangling cache variable for type metadata for ModifiedContent<Button<_ConditionalContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<Text, _FlexFrameLayout>>>, _EnvironmentKeyTransformModifier<Bool>>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Button<_ConditionalContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<Text, _FlexFrameLayout>>>, _EnvironmentKeyTransformModifier<Bool>>, _FlexFrameLayout>).n128_u64[0];
  return result;
}

__n128 specialized View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t *a16, uint64_t *a17)
{
  uint64_t v19 = a17;
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    uint64_t v28 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();

    uint64_t v19 = a17;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  outlined init with copy of (String, Any)(v17, a9, a16);
  uint64_t v29 = (_OWORD *)(a9 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(v19) + 36));
  v29[4] = v35;
  v29[5] = v36;
  v29[6] = v37;
  *uint64_t v29 = v31;
  v29[1] = v32;
  __n128 result = v34;
  _OWORD v29[2] = v33;
  v29[3] = v34;
  return result;
}

uint64_t specialized View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19)
{
  uint64_t v20 = a19;
  char v21 = a18;
  uint64_t v22 = a17;
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    long long v31 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();

    char v21 = a18;
    uint64_t v20 = a19;
    uint64_t v22 = a17;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  *(void *)a9 = a16;
  *(void *)(a9 + 8) = v22;
  *(unsigned char *)(a9 + 16) = v21 & 1;
  *(void *)(a9 + 24) = v20;
  *(_OWORD *)(a9 + 96) = v37;
  *(_OWORD *)(a9 + 112) = v38;
  *(_OWORD *)(a9 + 128) = v39;
  *(_OWORD *)(a9 + 32) = v33;
  *(_OWORD *)(a9 + 48) = v34;
  *(_OWORD *)(a9 + 64) = v35;
  *(_OWORD *)(a9 + 80) = v36;
  outlined copy of Text.Storage(a16, v22, v21 & 1);

  return swift_bridgeObjectRetain();
}

__n128 specialized View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    uint64_t v23 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Button<ModifiedContent<ModifiedContent<_VariadicView.Tree<_LayoutRoot<VStackLayout>, TupleView<(Spacer, <<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, Text, Spacer)>>, _OffsetEffect>, _FlexFrameLayout>>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(a9, v13, v24);
  uint64_t v25 = (_OWORD *)(a9
                 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Button<ModifiedContent<ModifiedContent<_VariadicView.Tree<_LayoutRoot<VStackLayout>, TupleView<(Spacer, <<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, Text, Spacer)>>, _OffsetEffect>, _FlexFrameLayout>>, _FlexFrameLayout>)
                          + 36));
  v25[4] = v31;
  v25[5] = v32;
  v25[6] = v33;
  *uint64_t v25 = v27;
  v25[1] = v28;
  __n128 result = v30;
  _OWORD v25[2] = v29;
  v25[3] = v30;
  return result;
}

uint64_t specialized View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    uint64_t v23 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  long long v24 = v13[1];
  long long v34 = *v13;
  long long v35 = v24;
  outlined init with take of Text.Storage((uint64_t)&v34, (uint64_t)v37);
  long long v25 = v13[1];
  *(_OWORD *)a9 = *v13;
  *(_OWORD *)(a9 + 16) = v25;
  *(_OWORD *)(a9 + 88) = v30;
  *(_OWORD *)(a9 + 104) = v31;
  *(_OWORD *)(a9 + 120) = v32;
  *(_OWORD *)(a9 + 136) = v33;
  *(_OWORD *)(a9 + 40) = v27;
  *(_OWORD *)(a9 + 56) = v28;
  uint64_t v36 = *((void *)&v35 + 1);
  *(_WORD *)(a9 + 32) = *((_WORD *)v13 + 16);
  *(_OWORD *)(a9 + 72) = v29;
  outlined retain of Text.Storage((uint64_t)v37);
  return outlined retain of [Text.Modifier]((uint64_t)&v36);
}

uint64_t InlineProfileEditingView.Context.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  InlineProfileEditingView.Context.init()();
  return v0;
}

double InlineProfileEditingView.init(context:)@<D0>(__n128 *a1@<X8>)
{
  specialized InlineProfileEditingView.init(context:)(v5);
  __n128 v2 = v5[3];
  a1[2] = v5[2];
  a1[3] = v2;
  a1[4] = v5[4];
  a1[5].n128_u64[0] = v6;
  double result = v5[0].n128_f64[0];
  __n128 v4 = v5[1];
  *a1 = v5[0];
  a1[1] = v4;
  return result;
}

uint64_t property wrapper backing initializer of InlineProfileEditingView.Context.artwork(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
  __chkstk_darwin();
  outlined init with copy of (String, Any)(a1, (uint64_t)&v4 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
  Published.init(initialValue:)();
  return outlined destroy of TaskPriority?(a1, (uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
}

uint64_t InlineProfileEditingView.Context.userArtwork.getter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();

  return swift_release();
}

uint64_t InlineProfileEditingView.Context.name.getter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t property wrapper backing initializer of Reactions.StackView.Model.userImage()
{
  return Published.init(initialValue:)();
}

uint64_t InlineProfileEditingView.Context.image.getter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t InlineProfileEditingView.Context.init()()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<UIImage?>);
  uint64_t v77 = *(void *)(v1 - 8);
  uint64_t v78 = v1;
  __chkstk_darwin();
  long long v76 = (char *)&v70 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = __swift_instantiateConcreteTypeFromMangledName(&_s7Combine9PublishedVySSGMD_0);
  uint64_t v3 = *(void *)(v75 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v70 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Artwork?>);
  uint64_t v6 = *(void *)(v74 - 8);
  __chkstk_darwin();
  unint64_t v8 = (char *)&v70 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
  __chkstk_darwin();
  uint64_t v72 = (char *)&v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v73 = (char *)&v70 - v10;
  __chkstk_darwin();
  uint64_t v12 = (char *)&v70 - v11;
  __chkstk_darwin();
  uint64_t v14 = (char *)&v70 - v13;
  uint64_t v15 = v0 + OBJC_IVAR____TtCV11MusicCoreUI24InlineProfileEditingView7Context__artwork;
  uint64_t v16 = type metadata accessor for Artwork();
  uint64_t v79 = *(void *)(v16 - 8);
  uint64_t v80 = v16;
  (*(void (**)(char *, uint64_t, uint64_t))(v79 + 56))(v14, 1, 1);
  outlined init with copy of (String, Any)((uint64_t)v14, (uint64_t)v12, (uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
  uint64_t v71 = v12;
  Published.init(initialValue:)();
  uint64_t v70 = v14;
  outlined destroy of TaskPriority?((uint64_t)v14, (uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v15, v8, v74);
  uint64_t v17 = v0;
  uint64_t v18 = v0 + OBJC_IVAR____TtCV11MusicCoreUI24InlineProfileEditingView7Context__name;
  id v82 = 0;
  unint64_t v83 = 0xE000000000000000;
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(v18, v5, v75);
  uint64_t v19 = v0 + OBJC_IVAR____TtCV11MusicCoreUI24InlineProfileEditingView7Context__image;
  id v82 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIImage?);
  uint64_t v20 = v76;
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v77 + 32))(v19, v20, v78);
  *(unsigned char *)(v0 + OBJC_IVAR____TtCV11MusicCoreUI24InlineProfileEditingView7Context_hasRemovedImage) = 0;
  id v21 = [self shared];
  id v22 = [v21 activeUserState];

  id v23 = [v22 music];
  id v24 = [v23 userProfile];

  if (v24)
  {
    id v25 = [v24 name];
    uint64_t v26 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v28 = v27;

    swift_getKeyPath();
    swift_getKeyPath();
    id v82 = v26;
    unint64_t v83 = v28;
    swift_retain();
    static Published.subscript.setter();
    id v29 = [v24 artworkInfo];
    if (v29)
    {
      long long v30 = v29;
      id v31 = [v29 responseDictionary];

      if (v31)
      {
        uint64_t v32 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

        unint64_t v33 = _ss30_dictionaryDownCastConditionalySDyq0_q1_GSgSDyxq_GSHRzSHR0_r2_lFs11AnyHashableV_ypSSypTg5_0(v32);
        swift_bridgeObjectRelease();
        if (v33)
        {
          uint64_t v34 = (uint64_t)v70;
          Artwork.init(_:)();
          swift_getKeyPath();
          swift_getKeyPath();
          outlined init with copy of (String, Any)(v34, (uint64_t)v71, (uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
          swift_retain();
          static Published.subscript.setter();
          outlined destroy of TaskPriority?(v34, (uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
        }
      }
    }
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  unint64_t v36 = (unint64_t)v82;
  unint64_t v35 = v83;
  swift_bridgeObjectRelease();
  uint64_t v37 = HIBYTE(v35) & 0xF;
  if ((v35 & 0x2000000000000000) == 0) {
    uint64_t v37 = v36 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v39 = v79;
  uint64_t v38 = v80;
  if (v37)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    uint64_t v40 = (uint64_t)v73;
    static Published.subscript.getter();
    swift_release();
    swift_release();
    int v41 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v40, 1, v38);
    outlined destroy of TaskPriority?(v40, (uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
    if (v41 != 1) {
      goto LABEL_24;
    }
  }
  __swift_instantiateConcreteTypeFromMangledName(&_ss23_ContiguousArrayStorageCyyXlGMD_1);
  uint64_t v42 = swift_allocObject();
  *(_OWORD *)(v42 + 16) = xmmword_100493D20;
  *(void *)(v42 + 32) = CNContactThumbnailImageDataKey;
  id v82 = (id)v42;
  specialized Array._endMutation()();
  unint64_t v81 = (unint64_t)v82;
  uint64_t v43 = self;
  uint64_t v44 = CNContactThumbnailImageDataKey;
  id v45 = [v43 descriptorForRequiredKeysForStyle:0];
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v81 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v81 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  id v46 = [objc_allocWithZone((Class)CNContactStore) init];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CNKeyDescriptor);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v82 = 0;
  id v48 = objc_msgSend(v46, "_ios_meContactWithKeysToFetch:error:", isa, &v82);

  id v49 = v82;
  if (!v48)
  {
    id v68 = v82;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    swift_errorRelease();
    return v17;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  id v50 = v49;
  static Published.subscript.getter();
  swift_release();
  swift_release();
  unint64_t v52 = (unint64_t)v82;
  unint64_t v51 = v83;
  swift_bridgeObjectRelease();
  uint64_t v53 = HIBYTE(v51) & 0xF;
  if ((v51 & 0x2000000000000000) == 0) {
    uint64_t v53 = v52 & 0xFFFFFFFFFFFFLL;
  }
  if (!v53)
  {
    id v54 = [v43 stringFromContact:v48 style:0];
    if (v54)
    {
      uint64_t v55 = v54;
      uint64_t v56 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v58 = v57;

      swift_getKeyPath();
      swift_getKeyPath();
      id v82 = v56;
      unint64_t v83 = v58;
      swift_retain();
      static Published.subscript.setter();
    }
  }
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v59 = (uint64_t)v72;
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v59, 1, v38) != 1)
  {

    outlined destroy of TaskPriority?(v59, (uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
    return v17;
  }
  outlined destroy of TaskPriority?(v59, (uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
  id v60 = [v48 thumbnailImageData];
  if (!v60)
  {

LABEL_24:
    return v17;
  }
  uint64_t v61 = v60;
  uint64_t v62 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v64 = v63;

  id v65 = objc_allocWithZone((Class)UIImage);
  outlined copy of Data._Representation(v62, v64);
  Class v66 = Data._bridgeToObjectiveC()().super.isa;
  id v67 = [v65 initWithData:v66];
  outlined consume of Data._Representation(v62, v64);

  specialized InlineProfileEditingView.Context.image.setter(v67);
  outlined consume of Data._Representation(v62, v64);
  return v17;
}

BOOL InlineProfileEditingView.Context.canValidate.getter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  Swift::String v0 = String.trim()();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v1 = ((unint64_t)v0._object >> 56) & 0xF;
  if (((uint64_t)v0._object & 0x2000000000000000) == 0) {
    unint64_t v1 = v0._countAndFlagsBits & 0xFFFFFFFFFFFFLL;
  }
  return v1 != 0;
}

uint64_t InlineProfileEditingView.Context.userName.getter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t countAndFlagsBits = String.trim()()._countAndFlagsBits;
  swift_bridgeObjectRelease();
  return countAndFlagsBits;
}

uint64_t InlineProfileEditingView.Context.hasRemovedImage.getter()
{
  unint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtCV11MusicCoreUI24InlineProfileEditingView7Context_hasRemovedImage);
  swift_beginAccess();
  return *v1;
}

uint64_t InlineProfileEditingView.Context.hasRemovedImage.setter(char a1)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR____TtCV11MusicCoreUI24InlineProfileEditingView7Context_hasRemovedImage);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = a1;
  return result;
}

uint64_t (*InlineProfileEditingView.Context.hasRemovedImage.modify())()
{
  return ArtworkVideoReportingController.videoArtworkContextProviding.modify;
}

uint64_t InlineProfileEditingView.Context.userImage.getter()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
  __chkstk_darwin();
  uint64_t v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = (unsigned char *)(v0 + OBJC_IVAR____TtCV11MusicCoreUI24InlineProfileEditingView7Context_hasRemovedImage);
  swift_beginAccess();
  uint64_t result = 0;
  if ((*v3 & 1) == 0)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    uint64_t v5 = type metadata accessor for Artwork();
    int v6 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v2, 1, v5);
    outlined destroy of TaskPriority?((uint64_t)v2, (uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
    uint64_t result = 0;
    if (v6 == 1)
    {
      swift_getKeyPath();
      swift_getKeyPath();
      static Published.subscript.getter();
      swift_release();
      swift_release();
      return v7;
    }
  }
  return result;
}

uint64_t InlineProfileEditingView.Context.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCV11MusicCoreUI24InlineProfileEditingView7Context__artwork;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Artwork?>);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtCV11MusicCoreUI24InlineProfileEditingView7Context__name;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&_s7Combine9PublishedVySSGMD_0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  uint64_t v5 = v0 + OBJC_IVAR____TtCV11MusicCoreUI24InlineProfileEditingView7Context__image;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<UIImage?>);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  return v0;
}

uint64_t InlineProfileEditingView.Context.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCV11MusicCoreUI24InlineProfileEditingView7Context__artwork;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Artwork?>);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtCV11MusicCoreUI24InlineProfileEditingView7Context__name;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&_s7Combine9PublishedVySSGMD_0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  uint64_t v5 = v0 + OBJC_IVAR____TtCV11MusicCoreUI24InlineProfileEditingView7Context__image;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<UIImage?>);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);

  return swift_deallocClassInstance();
}

uint64_t protocol witness for ObservableObject.objectWillChange.getter in conformance InlineProfileEditingView.Context@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for InlineProfileEditingView.Context();
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

uint64_t property wrapper backing initializer of InlineProfileEditingView.imagePickerSourceType()
{
  State.init(wrappedValue:)();
  return v1;
}

uint64_t property wrapper backing initializer of InlineProfileEditingView.context()
{
  type metadata accessor for InlineProfileEditingView.Context();
  _s11MusicCoreUI24InlineProfileEditingViewV7ContextCAE7Combine16ObservableObjectAAWlTm_0(&lazy protocol witness table cache variable for type InlineProfileEditingView.Context and conformance InlineProfileEditingView.Context, (void (*)(uint64_t))type metadata accessor for InlineProfileEditingView.Context);

  return ObservedObject.init(wrappedValue:)();
}

uint64_t InlineProfileEditingView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v80 = a1;
  type metadata accessor for Locale();
  __chkstk_darwin();
  uint64_t v79 = (char *)&v63 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = type metadata accessor for String.LocalizationValue();
  uint64_t v74 = *(void *)(v78 - 8);
  __chkstk_darwin();
  uint64_t v73 = (char *)&v63 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v72 = (char *)&v63 - v5;
  uint64_t v68 = type metadata accessor for RoundedRectangle() - 8;
  __chkstk_darwin();
  id v65 = (char *)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HStack<TupleView<(_ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>>, _ConditionalContent<Text, ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>>, Spacer, ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Int?>>, _TraitWritingModifier<LayoutPriorityTraitKey>>?)>>);
  __chkstk_darwin();
  unint64_t v8 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(_ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>>, _ConditionalContent<Text, ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>>, Spacer, ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Int?>>, _TraitWritingModifier<LayoutPriorityTraitKey>>?)>>, _BackgroundStyleModifier<Color>>)
     - 8;
  __chkstk_darwin();
  uint64_t v11 = (char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<HStack<TupleView<(_ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>>, _ConditionalContent<Text, ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>>, Spacer, ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Int?>>, _TraitWritingModifier<LayoutPriorityTraitKey>>?)>>, _BackgroundStyleModifier<Color>>, _FlexFrameLayout>)
      - 8;
  __chkstk_darwin();
  uint64_t v14 = (char *)&v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(_ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>>, _ConditionalContent<Text, ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>>, Spacer, ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Int?>>, _TraitWritingModifier<LayoutPriorityTraitKey>>?)>>, _BackgroundStyleModifier<Color>>, _FlexFrameLayout>, _FlexFrameLayout>);
  __chkstk_darwin();
  uint64_t v16 = (char *)&v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(_ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>>, _ConditionalContent<Text, ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>>, Spacer, ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Int?>>, _TraitWritingModifier<LayoutPriorityTraitKey>>?)>>, _BackgroundStyleModifier<Color>>, _FlexFrameLayout>, _FlexFrameLayout>, _ClipEffect<RoundedRectangle>>);
  __chkstk_darwin();
  Class v66 = (char *)&v63 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.confirmationDialog<A, B>(_:isPresented:titleVisibility:actions:)>>.0);
  uint64_t v70 = *(void *)(v71 - 8);
  __chkstk_darwin();
  uint64_t v69 = (char *)&v63 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.confirmationDialog<A, B>(_:isPresented:titleVisibility:actions:)>>.0, _BackgroundModifier<ModifiedContent<ImagePicker, _FrameLayout>>>);
  __chkstk_darwin();
  id v67 = (char *)&v63 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.alert<A, B>(_:isPresented:actions:)>>.0);
  uint64_t v76 = *(void *)(v77 - 8);
  __chkstk_darwin();
  uint64_t v75 = (char *)&v63 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)unint64_t v8 = static VerticalAlignment.center.getter();
  *((void *)v8 + 1) = 0;
  v8[16] = 1;
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_HStackLayout, TupleView<(_ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>>, _ConditionalContent<Text, ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>>, Spacer, ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Int?>>, _TraitWritingModifier<LayoutPriorityTraitKey>>?)>>);
  closure #1 in InlineProfileEditingView.body.getter(v2, (uint64_t)&v8[*(int *)(v21 + 44)]);
  id v22 = [self quaternarySystemFillColor];
  uint64_t v23 = Color.init(_:)();
  char v24 = static Edge.Set.all.getter();
  outlined init with copy of (String, Any)((uint64_t)v8, (uint64_t)v11, &demangling cache variable for type metadata for HStack<TupleView<(_ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>>, _ConditionalContent<Text, ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>>, Spacer, ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Int?>>, _TraitWritingModifier<LayoutPriorityTraitKey>>?)>>);
  id v25 = &v11[*(int *)(v9 + 44)];
  *(void *)id v25 = v23;
  v25[8] = v24;
  outlined destroy of TaskPriority?((uint64_t)v8, &demangling cache variable for type metadata for HStack<TupleView<(_ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>>, _ConditionalContent<Text, ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>>, Spacer, ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Int?>>, _TraitWritingModifier<LayoutPriorityTraitKey>>?)>>);
  static Alignment.center.getter();
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  outlined init with copy of (String, Any)((uint64_t)v11, (uint64_t)v14, &demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(_ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>>, _ConditionalContent<Text, ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>>, Spacer, ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Int?>>, _TraitWritingModifier<LayoutPriorityTraitKey>>?)>>, _BackgroundStyleModifier<Color>>);
  uint64_t v26 = &v14[*(int *)(v12 + 44)];
  long long v27 = v92;
  *((_OWORD *)v26 + 4) = v91;
  *((_OWORD *)v26 + 5) = v27;
  *((_OWORD *)v26 + 6) = v93;
  long long v28 = v88;
  *(_OWORD *)uint64_t v26 = v87;
  *((_OWORD *)v26 + 1) = v28;
  long long v29 = v90;
  *((_OWORD *)v26 + 2) = v89;
  *((_OWORD *)v26 + 3) = v29;
  outlined destroy of TaskPriority?((uint64_t)v11, &demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(_ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>>, _ConditionalContent<Text, ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>>, Spacer, ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Int?>>, _TraitWritingModifier<LayoutPriorityTraitKey>>?)>>, _BackgroundStyleModifier<Color>>);
  uint64_t v30 = static Alignment.center.getter();
  specialized View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v16, 0.0, 1, 0.0, 1, v30, v31, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<HStack<TupleView<(_ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>>, _ConditionalContent<Text, ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>>, Spacer, ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Int?>>, _TraitWritingModifier<LayoutPriorityTraitKey>>?)>>, _BackgroundStyleModifier<Color>>, _FlexFrameLayout>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(_ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>>, _ConditionalContent<Text, ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>>, Spacer, ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Int?>>, _TraitWritingModifier<LayoutPriorityTraitKey>>?)>>, _BackgroundStyleModifier<Color>>, _FlexFrameLayout>, _FlexFrameLayout>);
  outlined destroy of TaskPriority?((uint64_t)v14, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<HStack<TupleView<(_ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>>, _ConditionalContent<Text, ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>>, Spacer, ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Int?>>, _TraitWritingModifier<LayoutPriorityTraitKey>>?)>>, _BackgroundStyleModifier<Color>>, _FlexFrameLayout>);
  uint64_t v32 = v65;
  unint64_t v33 = &v65[*(int *)(v68 + 28)];
  uint64_t v34 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v35 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v35 - 8) + 104))(v33, v34, v35);
  __asm { FMOV            V0.2D, #16.0 }
  *uint64_t v32 = _Q0;
  uint64_t v41 = (uint64_t)v66;
  uint64_t v42 = (uint64_t)&v66[*(int *)(v81 + 36)];
  _s7SwiftUI16RoundedRectangleVWOcTm_1((uint64_t)v32, v42, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  *(_WORD *)(v42
           + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ClipEffect<RoundedRectangle>)
                    + 36)) = 256;
  outlined init with copy of (String, Any)((uint64_t)v16, v41, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(_ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>>, _ConditionalContent<Text, ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>>, Spacer, ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Int?>>, _TraitWritingModifier<LayoutPriorityTraitKey>>?)>>, _BackgroundStyleModifier<Color>>, _FlexFrameLayout>, _FlexFrameLayout>);
  _s7SwiftUI16RoundedRectangleVWOhTm_0((uint64_t)v32, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  outlined destroy of TaskPriority?((uint64_t)v16, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(_ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>>, _ConditionalContent<Text, ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>>, Spacer, ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Int?>>, _TraitWritingModifier<LayoutPriorityTraitKey>>?)>>, _BackgroundStyleModifier<Color>>, _FlexFrameLayout>, _FlexFrameLayout>);
  uint64_t v85 = 0;
  unint64_t v86 = 0xE000000000000000;
  uint64_t v43 = v64;
  long long v84 = *(_OWORD *)(v64 + 16);
  id v65 = (char *)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Bool>);
  State.projectedValue.getter();
  uint64_t v83 = v43;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TupleView<(Button<Text>, Button<Text>, Button<Text>, Button<Text>)>);
  lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(_ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>>, _ConditionalContent<Text, ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>>, Spacer, ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Int?>>, _TraitWritingModifier<LayoutPriorityTraitKey>>?)>>, _BackgroundStyleModifier<Color>>, _FlexFrameLayout>, _FlexFrameLayout>, _ClipEffect<RoundedRectangle>> and conformance <> ModifiedContent<A, B>();
  unint64_t v44 = _sS2SSysWl_1();
  uint64_t v45 = v74;
  lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type TupleView<(Button<Text>, Button<Text>, Button<Text>, Button<Text>)> and conformance TupleView<A>, &demangling cache variable for type metadata for TupleView<(Button<Text>, Button<Text>, Button<Text>, Button<Text>)>);
  uint64_t v68 = v44;
  id v46 = v73;
  char v47 = v72;
  id v48 = v69;
  View.confirmationDialog<A, B>(_:isPresented:titleVisibility:actions:)();
  uint64_t v49 = v43;
  uint64_t v50 = (uint64_t)v67;
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  outlined destroy of TaskPriority?(v41, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(_ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>>, _ConditionalContent<Text, ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>>, Spacer, ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Int?>>, _TraitWritingModifier<LayoutPriorityTraitKey>>?)>>, _BackgroundStyleModifier<Color>>, _FlexFrameLayout>, _FlexFrameLayout>, _ClipEffect<RoundedRectangle>>);
  uint64_t v51 = static Alignment.center.getter();
  uint64_t v53 = v52;
  uint64_t v54 = v50 + *(int *)(v82 + 36);
  closure #3 in InlineProfileEditingView.body.getter(v49, v54);
  uint64_t v55 = (uint64_t *)(v54
                  + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _BackgroundModifier<ModifiedContent<ImagePicker, _FrameLayout>>)
                           + 36));
  uint64_t v56 = v78;
  uint64_t *v55 = v51;
  v55[1] = v53;
  (*(void (**)(uint64_t, char *, uint64_t))(v70 + 32))(v50, v48, v71);
  String.LocalizationValue.init(stringLiteral:)();
  (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v46, v47, v56);
  if (one-time initialization token for module != -1) {
    swift_once();
  }
  id v57 = (id)static NSBundle.module;
  static Locale.current.getter();
  uint64_t v58 = String.init(localized:table:bundle:locale:comment:)();
  unint64_t v60 = v59;
  (*(void (**)(char *, uint64_t))(v45 + 8))(v47, v56);
  uint64_t v85 = v58;
  unint64_t v86 = v60;
  long long v84 = *(_OWORD *)(v49 + 48);
  State.projectedValue.getter();
  __chkstk_darwin();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TupleView<(TextField<Text>, ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>, Button<Text>)>);
  lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.confirmationDialog<A, B>(_:isPresented:titleVisibility:actions:)>>.0, _BackgroundModifier<ModifiedContent<ImagePicker, _FrameLayout>>> and conformance <> ModifiedContent<A, B>();
  lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type TupleView<(TextField<Text>, ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>, Button<Text>)> and conformance TupleView<A>, &demangling cache variable for type metadata for TupleView<(TextField<Text>, ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>, Button<Text>)>);
  uint64_t v61 = v75;
  View.alert<A, B>(_:isPresented:actions:)();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  outlined destroy of TaskPriority?(v50, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.confirmationDialog<A, B>(_:isPresented:titleVisibility:actions:)>>.0, _BackgroundModifier<ModifiedContent<ImagePicker, _FrameLayout>>>);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v76 + 32))(v80, v61, v77);
}

uint64_t closure #1 in InlineProfileEditingView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v218 = a2;
  uint64_t v195 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Button<Text>, _PaddingLayout>);
  __chkstk_darwin();
  v199 = (char *)&v173 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v197 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Button<Text>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Int?>>);
  __chkstk_darwin();
  uint64_t v198 = (uint64_t)&v173 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v215 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Int?>>, _TraitWritingModifier<LayoutPriorityTraitKey>>);
  uint64_t v214 = *(void *)(v215 - 8);
  __chkstk_darwin();
  uint64_t v196 = (uint64_t)&v173 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Int?>>, _TraitWritingModifier<LayoutPriorityTraitKey>>?);
  __chkstk_darwin();
  uint64_t v217 = (uint64_t)&v173 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v216 = (char *)&v173 - v7;
  type metadata accessor for Locale();
  __chkstk_darwin();
  v206 = (char *)&v173 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v208 = type metadata accessor for String.LocalizationValue();
  uint64_t v207 = *(void *)(v208 - 8);
  __chkstk_darwin();
  v221 = (char *)&v173 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v220 = (char *)&v173 - v10;
  uint64_t v211 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&_s7SwiftUI6ButtonVyAA4TextVGMD_0);
  uint64_t v210 = *(void *)(v211 - 8);
  __chkstk_darwin();
  v209 = (char *)&v173 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v204 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>);
  __chkstk_darwin();
  v193 = (char *)&v173 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v194 = (uint64_t)&v173 - v13;
  uint64_t v202 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<Text, ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>>.Storage);
  __chkstk_darwin();
  v203 = (uint64_t *)((char *)&v173 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<Text, ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>>);
  __chkstk_darwin();
  uint64_t v212 = (uint64_t)&v173 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v223 = (uint64_t)&v173 - v16;
  uint64_t v191 = type metadata accessor for ArtworkImage.ReusePolicy();
  uint64_t v190 = *(void *)(v191 - 8);
  __chkstk_darwin();
  v189 = (char *)&v173 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin();
  v188 = (char *)&v173 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v177 = type metadata accessor for Artwork();
  uint64_t v176 = *(void *)(v177 - 8);
  __chkstk_darwin();
  uint64_t v178 = (char *)&v173 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ArtworkImage.ViewModel?);
  __chkstk_darwin();
  v180 = (char *)&v173 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v187 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0);
  uint64_t v186 = *(void *)(v187 - 8);
  __chkstk_darwin();
  uint64_t v184 = (uint64_t)&v173 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v179 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>);
  __chkstk_darwin();
  v183 = (char *)&v173 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v181 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, _ClipEffect<Circle>>);
  __chkstk_darwin();
  uint64_t v185 = (uint64_t)&v173 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v201 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>);
  __chkstk_darwin();
  uint64_t v182 = (uint64_t)&v173 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v192 = (uint64_t)&v173 - v25;
  uint64_t v200 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>>.Storage);
  __chkstk_darwin();
  long long v27 = (char *)&v173 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = type metadata accessor for Image.ResizingMode();
  uint64_t v29 = *(void *)(v28 - 8);
  __chkstk_darwin();
  uint64_t v31 = (char *)&v173 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
  __chkstk_darwin();
  unint64_t v33 = (char *)&v173 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v35 = (char *)&v173 - v34;
  __chkstk_darwin();
  uint64_t v37 = (char *)&v173 - v36;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>>);
  __chkstk_darwin();
  uint64_t v205 = (uint64_t)&v173 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v222 = (uint64_t)&v173 - v39;
  Int.seconds.getter(54);
  Int.seconds.getter(10);
  uint64_t v213 = a1;
  uint64_t v40 = *(void *)(a1 + 8);
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v219 = v40;
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if ((void)v225)
  {
    id v41 = (id)v225;
    Image.init(uiImage:)();
    (*(void (**)(char *, void, uint64_t))(v29 + 104))(v31, enum case for Image.ResizingMode.stretch(_:), v28);
    uint64_t v42 = Image.resizable(capInsets:resizingMode:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v31, v28);
    static Alignment.center.getter();
    _FrameLayout.init(width:height:alignment:)();
    uint64_t v43 = v225;
    char v44 = BYTE8(v225);
    uint64_t v45 = v226;
    char v46 = BYTE8(v226);
    long long v47 = v227;
    char v48 = static Edge.Set.all.getter();
    EdgeInsets.init(_all:)();
    *(void *)long long v27 = v42;
    *((void *)v27 + 1) = v43;
    v27[16] = v44;
    *((void *)v27 + 3) = v45;
    v27[32] = v46;
    *(_OWORD *)(v27 + 40) = v47;
    *((_WORD *)v27 + 28) = 256;
    v27[64] = v48;
    *((void *)v27 + 9) = v49;
    *((void *)v27 + 10) = v50;
    *((void *)v27 + 11) = v51;
    *((void *)v27 + 12) = v52;
    v27[104] = 0;
    swift_storeEnumTagMultiPayload();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Image, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(_ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>>, _ConditionalContent<Text, ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>>, Spacer, ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Int?>>, _TraitWritingModifier<LayoutPriorityTraitKey>>?)>>, _BackgroundStyleModifier<Color>>, _FlexFrameLayout>, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<Image, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Image, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>, (void (*)(void))lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Image, _FrameLayout>, _ClipEffect<Circle>> and conformance <> ModifiedContent<A, B>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(_ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>>, _ConditionalContent<Text, ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>>, Spacer, ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Int?>>, _TraitWritingModifier<LayoutPriorityTraitKey>>?)>>, _BackgroundStyleModifier<Color>>, _FlexFrameLayout>, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>, (void (*)(void))lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, _ClipEffect<Circle>> and conformance <> ModifiedContent<A, B>);
    _ConditionalContent<>.init(storage:)();
    swift_release();

    uint64_t v53 = v220;
    uint64_t v54 = v221;
  }
  else
  {
    char v174 = v33;
    uint64_t v175 = v37;
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    uint64_t v55 = v176;
    uint64_t v56 = *(unsigned int (**)(void, void, void))(v176 + 48);
    uint64_t v57 = v177;
    if (v56(v35, 1, v177) == 1)
    {
      uint64_t v173 = v56;
      swift_getKeyPath();
      swift_getKeyPath();
      static Published.subscript.getter();
      swift_release();
      swift_release();
      Swift::String v58 = String.trim()();
      swift_bridgeObjectRelease();
      type metadata accessor for MPArtworkCatalog();
      uint64_t v59 = 1;
      id v60 = static MPArtworkCatalog.monogram(for:layoutDirection:)(v58._countAndFlagsBits, (uint64_t)v58._object, 0, 1);
      uint64_t v61 = v178;
      if (v60)
      {
        uint64_t v62 = (uint64_t)v175;
        Artwork.init(_:)();
        uint64_t v59 = 0;
        uint64_t v53 = v220;
      }
      else
      {
        uint64_t v53 = v220;
        uint64_t v62 = (uint64_t)v175;
      }
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v55 + 56))(v62, v59, 1, v57);
      swift_bridgeObjectRelease();
      outlined destroy of TaskPriority?((uint64_t)v35, (uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
      uint64_t v56 = v173;
    }
    else
    {
      uint64_t v62 = (uint64_t)v175;
      (*(void (**)(char *, char *, uint64_t))(v55 + 32))(v175, v35, v57);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v55 + 56))(v62, 0, 1, v57);
      uint64_t v53 = v220;
      uint64_t v61 = v178;
    }
    uint64_t v63 = v62;
    uint64_t v64 = (uint64_t)v174;
    outlined init with copy of (String, Any)(v63, (uint64_t)v174, (uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
    unsigned int v65 = v56(v64, 1, v57);
    uint64_t v66 = (uint64_t)v189;
    id v67 = v180;
    if (v65 == 1)
    {
      uint64_t v68 = type metadata accessor for ArtworkImage.ViewModel(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v68 - 8) + 56))(v67, 1, 1, v68);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v55 + 32))(v61, v64, v57);
      (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v67, v61, v57);
      uint64_t v69 = type metadata accessor for ArtworkImage.ViewModel(0);
      uint64_t v70 = v61;
      uint64_t v71 = &v67[*(int *)(v69 + 20)];
      uint64_t v72 = type metadata accessor for Artwork.CropStyle();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v72 - 8) + 56))(v71, 1, 1, v72);
      (*(void (**)(char *, uint64_t))(v55 + 8))(v70, v57);
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v69 - 8) + 56))(v67, 0, 1, v69);
    }
    uint64_t v73 = v191;
    uint64_t v74 = v190;
    uint64_t v75 = (uint64_t)v67;
    uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (type: Playlist.Variant?));
    uint64_t v77 = (uint64_t)v188;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v76 - 8) + 56))(v188, 7, 10, v76);
    uint64_t v228 = 0;
    char v229 = 1;
    uint64_t v230 = 0;
    char v231 = 1;
    uint64_t v232 = 0;
    __int16 v233 = 513;
    (*(void (**)(uint64_t, void, uint64_t))(v74 + 104))(v66, enum case for ArtworkImage.ReusePolicy.reusableForDistinctItems(_:), v73);
    uint64_t v78 = v184;
    static ArtworkImage.with(_:placeholder:size:reusePolicy:)(v75, v77, (uint64_t)&v228, v66, v184);
    (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v66, v73);
    _s7SwiftUI16RoundedRectangleVWOhTm_0(v77, type metadata accessor for ArtworkImage.Placeholder);
    outlined destroy of TaskPriority?(v75, (uint64_t *)&demangling cache variable for type metadata for ArtworkImage.ViewModel?);
    static Alignment.center.getter();
    _FrameLayout.init(width:height:alignment:)();
    uint64_t v79 = v186;
    uint64_t v80 = (uint64_t)v183;
    uint64_t v81 = v187;
    (*(void (**)(char *, uint64_t, uint64_t))(v186 + 16))(v183, v78, v187);
    uint64_t v82 = (_OWORD *)(v80 + *(int *)(v179 + 36));
    long long v83 = v226;
    *uint64_t v82 = v225;
    v82[1] = v83;
    v82[2] = v227;
    (*(void (**)(uint64_t, uint64_t))(v79 + 8))(v78, v81);
    uint64_t v84 = v185;
    outlined init with copy of (String, Any)(v80, v185, (uint64_t *)&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>);
    *(_WORD *)(v84 + *(int *)(v181 + 36)) = 256;
    outlined destroy of TaskPriority?(v80, (uint64_t *)&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>);
    LOBYTE(v81) = static Edge.Set.all.getter();
    EdgeInsets.init(_all:)();
    uint64_t v86 = v85;
    uint64_t v88 = v87;
    uint64_t v90 = v89;
    uint64_t v92 = v91;
    uint64_t v93 = v182;
    outlined init with copy of (String, Any)(v84, v182, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, _ClipEffect<Circle>>);
    uint64_t v94 = v93 + *(int *)(v201 + 36);
    *(unsigned char *)uint64_t v94 = v81;
    *(void *)(v94 + 8) = v86;
    *(void *)(v94 + 16) = v88;
    *(void *)(v94 + 24) = v90;
    *(void *)(v94 + 32) = v92;
    *(unsigned char *)(v94 + 40) = 0;
    outlined destroy of TaskPriority?(v84, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, _ClipEffect<Circle>>);
    uint64_t v95 = v192;
    outlined init with take of PresentationSource?(v93, v192, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>);
    outlined init with copy of (String, Any)(v95, (uint64_t)v27, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>);
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Image, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(_ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>>, _ConditionalContent<Text, ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>>, Spacer, ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Int?>>, _TraitWritingModifier<LayoutPriorityTraitKey>>?)>>, _BackgroundStyleModifier<Color>>, _FlexFrameLayout>, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<Image, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Image, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>, (void (*)(void))lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Image, _FrameLayout>, _ClipEffect<Circle>> and conformance <> ModifiedContent<A, B>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(_ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>>, _ConditionalContent<Text, ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>>, Spacer, ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Int?>>, _TraitWritingModifier<LayoutPriorityTraitKey>>?)>>, _BackgroundStyleModifier<Color>>, _FlexFrameLayout>, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>, (void (*)(void))lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, _ClipEffect<Circle>> and conformance <> ModifiedContent<A, B>);
    _ConditionalContent<>.init(storage:)();
    outlined destroy of TaskPriority?(v95, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>);
    outlined destroy of TaskPriority?((uint64_t)v175, (uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
    uint64_t v54 = v221;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  Swift::String v96 = String.trim()();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v97 = ((unint64_t)v96._object >> 56) & 0xF;
  if (((uint64_t)v96._object & 0x2000000000000000) == 0) {
    unint64_t v97 = v96._countAndFlagsBits & 0xFFFFFFFFFFFFLL;
  }
  if (v97)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    Swift::String v98 = String.trim()();
    swift_bridgeObjectRelease();
    Swift::String v224 = v98;
    _sS2SSysWl_1();
    uint64_t v99 = Text.init<A>(_:)();
    uint64_t v101 = v100;
    char v103 = v102 & 1;
    uint64_t v104 = Text.bold()();
    uint64_t v106 = v105;
    char v108 = v107;
    uint64_t v110 = v109;
    outlined consume of Text.Storage(v99, v101, v103);
    swift_bridgeObjectRelease();
    uint64_t v111 = v203;
    uint64_t *v203 = v104;
    v111[1] = v106;
    uint64_t v54 = v221;
    char v112 = v108 & 1;
    uint64_t v53 = v220;
    *((unsigned char *)v111 + 16) = v112;
    v111[3] = v110;
    swift_storeEnumTagMultiPayload();
    lazy protocol witness table accessor for type ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>();
    _ConditionalContent<>.init(storage:)();
    uint64_t v113 = (uint64_t)v216;
  }
  else
  {
    String.LocalizationValue.init(stringLiteral:)();
    uint64_t v114 = v207;
    uint64_t v115 = v208;
    (*(void (**)(char *, char *, uint64_t))(v207 + 16))(v54, v53, v208);
    if (one-time initialization token for module != -1) {
      swift_once();
    }
    id v116 = (id)static NSBundle.module;
    static Locale.current.getter();
    uint64_t v117 = String.init(localized:table:bundle:locale:comment:)();
    uint64_t v119 = v118;
    (*(void (**)(char *, uint64_t))(v114 + 8))(v53, v115);
    v224._uint64_t countAndFlagsBits = v117;
    v224._object = v119;
    uint64_t v120 = swift_allocObject();
    uint64_t v121 = v213;
    long long v122 = *(_OWORD *)(v213 + 48);
    *(_OWORD *)(v120 + 48) = *(_OWORD *)(v213 + 32);
    *(_OWORD *)(v120 + 64) = v122;
    *(_OWORD *)(v120 + 80) = *(_OWORD *)(v121 + 64);
    *(void *)(v120 + 96) = *(void *)(v121 + 80);
    long long v123 = *(_OWORD *)(v121 + 16);
    *(_OWORD *)(v120 + 16) = *(_OWORD *)v121;
    *(_OWORD *)(v120 + 32) = v123;
    outlined retain of InlineProfileEditingView(v121);
    _sS2SSysWl_1();
    v124 = v209;
    Button<>.init<A>(_:action:)();
    uint64_t v125 = static Color.secondary.getter();
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v127 = v210;
    uint64_t v128 = (uint64_t)v193;
    uint64_t v129 = v211;
    (*(void (**)(char *, char *, uint64_t))(v210 + 16))(v193, v124, v211);
    v130 = (uint64_t *)(v128 + *(int *)(v204 + 36));
    uint64_t *v130 = KeyPath;
    v130[1] = v125;
    (*(void (**)(char *, uint64_t))(v127 + 8))(v124, v129);
    uint64_t v131 = v194;
    outlined init with take of PresentationSource?(v128, v194, (uint64_t *)&demangling cache variable for type metadata for ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>);
    outlined init with copy of (String, Any)(v131, (uint64_t)v203, (uint64_t *)&demangling cache variable for type metadata for ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>);
    swift_storeEnumTagMultiPayload();
    lazy protocol witness table accessor for type ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>();
    _ConditionalContent<>.init(storage:)();
    outlined destroy of TaskPriority?(v131, (uint64_t *)&demangling cache variable for type metadata for ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>);
    uint64_t v113 = (uint64_t)v216;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  Swift::String v132 = String.trim()();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v133 = ((unint64_t)v132._object >> 56) & 0xF;
  if (((uint64_t)v132._object & 0x2000000000000000) == 0) {
    unint64_t v133 = v132._countAndFlagsBits & 0xFFFFFFFFFFFFLL;
  }
  if (v133)
  {
    String.LocalizationValue.init(stringLiteral:)();
    uint64_t v134 = v207;
    uint64_t v135 = v208;
    (*(void (**)(char *, char *, uint64_t))(v207 + 16))(v54, v53, v208);
    if (one-time initialization token for module != -1) {
      swift_once();
    }
    id v136 = (id)static NSBundle.module;
    static Locale.current.getter();
    uint64_t v137 = String.init(localized:table:bundle:locale:comment:)();
    uint64_t v139 = v138;
    (*(void (**)(char *, uint64_t))(v134 + 8))(v53, v135);
    v224._uint64_t countAndFlagsBits = v137;
    v224._object = v139;
    uint64_t v140 = swift_allocObject();
    uint64_t v141 = v213;
    long long v142 = *(_OWORD *)(v213 + 48);
    *(_OWORD *)(v140 + 48) = *(_OWORD *)(v213 + 32);
    *(_OWORD *)(v140 + 64) = v142;
    *(_OWORD *)(v140 + 80) = *(_OWORD *)(v141 + 64);
    *(void *)(v140 + 96) = *(void *)(v141 + 80);
    long long v143 = *(_OWORD *)(v141 + 16);
    *(_OWORD *)(v140 + 16) = *(_OWORD *)v141;
    *(_OWORD *)(v140 + 32) = v143;
    outlined retain of InlineProfileEditingView(v141);
    _sS2SSysWl_1();
    __int16 v144 = v209;
    Button<>.init<A>(_:action:)();
    LOBYTE(v140) = static Edge.Set.trailing.getter();
    EdgeInsets.init(_all:)();
    uint64_t v146 = v145;
    uint64_t v148 = v147;
    uint64_t v150 = v149;
    uint64_t v152 = v151;
    uint64_t v153 = v210;
    uint64_t v154 = (uint64_t)v199;
    uint64_t v155 = v211;
    (*(void (**)(char *, char *, uint64_t))(v210 + 16))(v199, v144, v211);
    uint64_t v156 = v154 + *(int *)(v195 + 36);
    *(unsigned char *)uint64_t v156 = v140;
    *(void *)(v156 + 8) = v146;
    *(void *)(v156 + 16) = v148;
    *(void *)(v156 + 24) = v150;
    *(void *)(v156 + 32) = v152;
    *(unsigned char *)(v156 + 40) = 0;
    (*(void (**)(char *, uint64_t))(v153 + 8))(v144, v155);
    uint64_t v157 = swift_getKeyPath();
    uint64_t v158 = v198;
    outlined init with copy of (String, Any)(v154, v198, &demangling cache variable for type metadata for ModifiedContent<Button<Text>, _PaddingLayout>);
    uint64_t v159 = v158 + *(int *)(v197 + 36);
    *(void *)uint64_t v159 = v157;
    *(void *)(v159 + 8) = 1;
    *(unsigned char *)(v159 + 16) = 0;
    outlined destroy of TaskPriority?(v154, &demangling cache variable for type metadata for ModifiedContent<Button<Text>, _PaddingLayout>);
    uint64_t v160 = v196;
    outlined init with copy of (String, Any)(v158, v196, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Button<Text>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Int?>>);
    uint64_t v161 = v215;
    *(void *)(v160 + *(int *)(v215 + 36)) = 0x3FF0000000000000;
    outlined destroy of TaskPriority?(v158, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Button<Text>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Int?>>);
    outlined init with take of PresentationSource?(v160, v113, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Int?>>, _TraitWritingModifier<LayoutPriorityTraitKey>>);
    uint64_t v162 = 0;
  }
  else
  {
    uint64_t v162 = 1;
    uint64_t v161 = v215;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v214 + 56))(v113, v162, 1, v161);
  uint64_t v163 = v222;
  uint64_t v164 = v113;
  uint64_t v165 = v205;
  outlined init with copy of (String, Any)(v222, v205, (uint64_t *)&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>>);
  uint64_t v166 = v223;
  uint64_t v167 = v212;
  outlined init with copy of (String, Any)(v223, v212, &demangling cache variable for type metadata for _ConditionalContent<Text, ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>>);
  uint64_t v168 = v217;
  outlined init with copy of (String, Any)(v164, v217, (uint64_t *)&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Int?>>, _TraitWritingModifier<LayoutPriorityTraitKey>>?);
  uint64_t v169 = v218;
  outlined init with copy of (String, Any)(v165, v218, (uint64_t *)&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>>);
  char v170 = (int *)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (_ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>>, _ConditionalContent<Text, ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>>, Spacer, ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Int?>>, _TraitWritingModifier<LayoutPriorityTraitKey>>?));
  outlined init with copy of (String, Any)(v167, v169 + v170[12], &demangling cache variable for type metadata for _ConditionalContent<Text, ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>>);
  uint64_t v171 = v169 + v170[16];
  *(void *)uint64_t v171 = 0;
  *(unsigned char *)(v171 + 8) = 1;
  outlined init with copy of (String, Any)(v168, v169 + v170[20], (uint64_t *)&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Int?>>, _TraitWritingModifier<LayoutPriorityTraitKey>>?);
  outlined destroy of TaskPriority?(v164, (uint64_t *)&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Int?>>, _TraitWritingModifier<LayoutPriorityTraitKey>>?);
  outlined destroy of TaskPriority?(v166, &demangling cache variable for type metadata for _ConditionalContent<Text, ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>>);
  outlined destroy of TaskPriority?(v163, (uint64_t *)&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>>);
  outlined destroy of TaskPriority?(v168, (uint64_t *)&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Int?>>, _TraitWritingModifier<LayoutPriorityTraitKey>>?);
  outlined destroy of TaskPriority?(v167, &demangling cache variable for type metadata for _ConditionalContent<Text, ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>>);
  return outlined destroy of TaskPriority?(v165, (uint64_t *)&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>>);
}

uint64_t closure #2 in InlineProfileEditingView.body.getter@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v77 = a2;
  type metadata accessor for Locale();
  __chkstk_darwin();
  uint64_t v4 = (char *)&v67 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for String.LocalizationValue();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v10 = (char *)&v67 - v9;
  uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&_s7SwiftUI6ButtonVyAA4TextVGMD_0);
  uint64_t v76 = *(void *)(v68 - 8);
  __chkstk_darwin();
  uint64_t v75 = (char *)&v67 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v74 = (char *)&v67 - v12;
  __chkstk_darwin();
  uint64_t v73 = (char *)&v67 - v13;
  __chkstk_darwin();
  uint64_t v78 = (char *)&v67 - v14;
  __chkstk_darwin();
  uint64_t v72 = (char *)&v67 - v15;
  __chkstk_darwin();
  long long v83 = (char *)&v67 - v16;
  __chkstk_darwin();
  uint64_t v82 = (char *)&v67 - v17;
  __chkstk_darwin();
  uint64_t v81 = (char *)&v67 - v18;
  String.LocalizationValue.init(stringLiteral:)();
  uint64_t v19 = v6;
  uint64_t v20 = v6 + 16;
  uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
  uint64_t v22 = v5;
  uint64_t v79 = v21;
  uint64_t v80 = v20;
  v21(v8, v10, v5);
  if (one-time initialization token for module != -1) {
    swift_once();
  }
  id v23 = (id)static NSBundle.module;
  static Locale.current.getter();
  uint64_t v24 = String.init(localized:table:bundle:locale:comment:)();
  uint64_t v25 = v4;
  uint64_t v27 = v26;
  uint64_t v70 = *(void (**)(char *, uint64_t))(v19 + 8);
  uint64_t v71 = v19 + 8;
  v70(v10, v22);
  uint64_t v84 = v24;
  uint64_t v85 = v27;
  uint64_t v28 = swift_allocObject();
  long long v29 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v28 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v28 + 64) = v29;
  *(_OWORD *)(v28 + 80) = *(_OWORD *)(a1 + 64);
  *(void *)(v28 + 96) = *(void *)(a1 + 80);
  long long v30 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v28 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v28 + 32) = v30;
  outlined retain of InlineProfileEditingView(a1);
  uint64_t v31 = v8;
  unint64_t v32 = _sS2SSysWl_1();
  Button<>.init<A>(_:action:)();
  String.LocalizationValue.init(stringLiteral:)();
  v79(v31, v10, v22);
  id v33 = (id)static NSBundle.module;
  id v67 = v25;
  static Locale.current.getter();
  uint64_t v34 = String.init(localized:table:bundle:locale:comment:)();
  uint64_t v36 = v35;
  uint64_t v37 = v70;
  v70(v10, v22);
  uint64_t v84 = v34;
  uint64_t v85 = v36;
  uint64_t v38 = swift_allocObject();
  long long v39 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v38 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v38 + 64) = v39;
  *(_OWORD *)(v38 + 80) = *(_OWORD *)(a1 + 64);
  *(void *)(v38 + 96) = *(void *)(a1 + 80);
  long long v40 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v38 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v38 + 32) = v40;
  outlined retain of InlineProfileEditingView(a1);
  unint64_t v69 = v32;
  Button<>.init<A>(_:action:)();
  String.LocalizationValue.init(stringLiteral:)();
  v79(v31, v10, v22);
  id v41 = (id)static NSBundle.module;
  static Locale.current.getter();
  uint64_t v42 = String.init(localized:table:bundle:locale:comment:)();
  uint64_t v44 = v43;
  v37(v10, v22);
  uint64_t v84 = v42;
  uint64_t v85 = v44;
  uint64_t v45 = swift_allocObject();
  long long v46 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v45 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v45 + 64) = v46;
  *(_OWORD *)(v45 + 80) = *(_OWORD *)(a1 + 64);
  *(void *)(v45 + 96) = *(void *)(a1 + 80);
  long long v47 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v45 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v45 + 32) = v47;
  outlined retain of InlineProfileEditingView(a1);
  Button<>.init<A>(_:action:)();
  String.LocalizationValue.init(stringLiteral:)();
  v79(v31, v10, v22);
  id v48 = (id)static NSBundle.module;
  static Locale.current.getter();
  uint64_t v49 = String.init(localized:table:bundle:locale:comment:)();
  uint64_t v51 = v50;
  v37(v10, v22);
  uint64_t v84 = v49;
  uint64_t v85 = v51;
  uint64_t v52 = swift_allocObject();
  long long v53 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v52 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v52 + 64) = v53;
  *(_OWORD *)(v52 + 80) = *(_OWORD *)(a1 + 64);
  *(void *)(v52 + 96) = *(void *)(a1 + 80);
  long long v54 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v52 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v52 + 32) = v54;
  outlined retain of InlineProfileEditingView(a1);
  uint64_t v55 = v72;
  Button<>.init<A>(_:action:)();
  uint64_t v56 = v76;
  uint64_t v57 = *(void (**)(char *, char *, uint64_t))(v76 + 16);
  Swift::String v58 = v78;
  uint64_t v59 = v68;
  v57(v78, v81, v68);
  id v60 = v73;
  v57(v73, v82, v59);
  uint64_t v61 = v74;
  v57(v74, v83, v59);
  uint64_t v62 = v75;
  v57(v75, v55, v59);
  uint64_t v63 = v77;
  v57(v77, v58, v59);
  uint64_t v64 = (int *)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Button<Text>, Button<Text>, Button<Text>, Button<Text>));
  v57(&v63[v64[12]], v60, v59);
  v57(&v63[v64[16]], v61, v59);
  v57(&v63[v64[20]], v62, v59);
  unsigned int v65 = *(void (**)(char *, uint64_t))(v56 + 8);
  v65(v55, v59);
  v65(v83, v59);
  v65(v82, v59);
  v65(v81, v59);
  v65(v62, v59);
  v65(v61, v59);
  v65(v60, v59);
  return ((uint64_t (*)(char *, uint64_t))v65)(v78, v59);
}

uint64_t closure #2 in closure #2 in InlineProfileEditingView.body.getter()
{
  return State.wrappedValue.setter();
}

uint64_t closure #3 in closure #2 in InlineProfileEditingView.body.getter()
{
  return State.wrappedValue.setter();
}

uint64_t closure #4 in closure #2 in InlineProfileEditingView.body.getter(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
  __chkstk_darwin();
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v10 - v4;
  uint64_t v6 = *(void *)(a1 + 8);
  specialized InlineProfileEditingView.Context.image.setter(0);
  uint64_t v7 = type metadata accessor for Artwork();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v5, 1, 1, v7);
  swift_getKeyPath();
  swift_getKeyPath();
  outlined init with copy of (String, Any)((uint64_t)v5, (uint64_t)v3, (uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
  swift_retain();
  static Published.subscript.setter();
  outlined destroy of TaskPriority?((uint64_t)v5, (uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
  uint64_t v8 = (unsigned char *)(v6 + OBJC_IVAR____TtCV11MusicCoreUI24InlineProfileEditingView7Context_hasRemovedImage);
  uint64_t result = swift_beginAccess();
  *uint64_t v8 = 1;
  return result;
}

uint64_t closure #3 in InlineProfileEditingView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v28 = a2;
  uint64_t v3 = (int *)type metadata accessor for ImagePicker(0);
  __chkstk_darwin();
  uint64_t v5 = (uint64_t *)((char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin();
  uint64_t v7 = (char *)&v23 - v6;
  type metadata accessor for InlineProfileEditingView.Context();
  _s11MusicCoreUI24InlineProfileEditingViewV7ContextCAE7Combine16ObservableObjectAAWlTm_0(&lazy protocol witness table cache variable for type InlineProfileEditingView.Context and conformance InlineProfileEditingView.Context, (void (*)(uint64_t))type metadata accessor for InlineProfileEditingView.Context);
  ObservedObject.projectedValue.getter();
  swift_getKeyPath();
  ObservedObject.Wrapper.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v26 = v32;
  uint64_t v27 = v31;
  uint64_t v25 = v33;
  long long v29 = *(_OWORD *)(a1 + 64);
  uint64_t v30 = *(void *)(a1 + 80);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for State<ImagePicker.SourceType>);
  State.projectedValue.getter();
  uint64_t v24 = *((void *)&v34 + 1);
  uint64_t v8 = v34;
  long long v9 = v35;
  long long v29 = *(_OWORD *)(a1 + 32);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Bool>);
  State.projectedValue.getter();
  long long v10 = v34;
  char v11 = v35;
  if (one-time initialization token for profileImagePickerProperties != -1) {
    swift_once();
  }
  uint64_t v12 = static UIImagePickerController.profileImagePickerProperties;
  *uint64_t v5 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DismissAction>.Content);
  swift_storeEnumTagMultiPayload();
  uint64_t v13 = (uint64_t *)((char *)v5 + v3[7]);
  uint64_t v14 = v3[9];
  uint64_t v15 = (uint64_t *)((char *)v5 + v3[5]);
  *uint64_t v15 = v27;
  v15[1] = v26;
  v15[2] = v25;
  uint64_t v16 = (char *)v5 + v3[6];
  uint64_t v17 = v24;
  *(void *)uint64_t v16 = v8;
  *((void *)v16 + 1) = v17;
  *((_OWORD *)v16 + 1) = v9;
  uint64_t v18 = (char *)v5 + v3[8];
  *(_OWORD *)uint64_t v18 = v10;
  v18[16] = v11;
  *uint64_t v13 = 0;
  v13[1] = 0;
  *(uint64_t *)((char *)v5 + v14) = v12;
  outlined init with take of ImagePicker((uint64_t)v5, (uint64_t)v7);
  swift_bridgeObjectRetain();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v19 = v28;
  _s7SwiftUI16RoundedRectangleVWOcTm_1((uint64_t)v7, v28, type metadata accessor for ImagePicker);
  uint64_t v20 = (_OWORD *)(v19
                 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ImagePicker, _FrameLayout>)
                          + 36));
  long long v21 = v35;
  *uint64_t v20 = v34;
  v20[1] = v21;
  v20[2] = v36;
  return _s7SwiftUI16RoundedRectangleVWOhTm_0((uint64_t)v7, type metadata accessor for ImagePicker);
}

uint64_t key path getter for InlineProfileEditingView.Context.image : InlineProfileEditingView.Context@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t closure #4 in InlineProfileEditingView.body.getter@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  uint64_t v85 = a2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&_s7SwiftUI10ButtonRoleVSgMD_0);
  __chkstk_darwin();
  uint64_t v81 = (char *)&v69 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&_s7SwiftUI6ButtonVyAA4TextVGMD_0);
  uint64_t v91 = *(void *)(v89 - 8);
  __chkstk_darwin();
  uint64_t v84 = (char *)&v69 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  long long v83 = (char *)&v69 - v5;
  __chkstk_darwin();
  uint64_t v78 = (char *)&v69 - v6;
  uint64_t v77 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>);
  __chkstk_darwin();
  uint64_t v88 = (uint64_t)&v69 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v76 = (char *)&v69 - v8;
  __chkstk_darwin();
  uint64_t v87 = (uint64_t)&v69 - v9;
  type metadata accessor for Locale();
  __chkstk_darwin();
  uint64_t v10 = type metadata accessor for String.LocalizationValue();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin();
  uint64_t v13 = (char *)&v69 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v15 = (char *)&v69 - v14;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TextField<Text>);
  uint64_t v79 = *(void *)(v16 - 8);
  uint64_t v80 = v16;
  __chkstk_darwin();
  uint64_t v86 = (char *)&v69 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v90 = (char *)&v69 - v18;
  uint64_t v19 = a1[1];
  uint64_t v71 = *a1;
  uint64_t v82 = a1;
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v75 = v94;
  uint64_t v74 = v95;
  String.LocalizationValue.init(stringLiteral:)();
  uint64_t v73 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  v73(v13, v15, v10);
  if (one-time initialization token for module != -1) {
    swift_once();
  }
  id v20 = (id)static NSBundle.module;
  static Locale.current.getter();
  uint64_t v21 = String.init(localized:table:bundle:locale:comment:)();
  uint64_t v23 = v22;
  uint64_t v24 = *(void (**)(char *, uint64_t))(v11 + 8);
  uint64_t v69 = v11 + 8;
  uint64_t v72 = v24;
  v24(v15, v10);
  type metadata accessor for InlineProfileEditingView.Context();
  _s11MusicCoreUI24InlineProfileEditingViewV7ContextCAE7Combine16ObservableObjectAAWlTm_0(&lazy protocol witness table cache variable for type InlineProfileEditingView.Context and conformance InlineProfileEditingView.Context, (void (*)(uint64_t))type metadata accessor for InlineProfileEditingView.Context);
  uint64_t v70 = v10;
  ObservedObject.projectedValue.getter();
  swift_getKeyPath();
  uint64_t v71 = v19;
  ObservedObject.Wrapper.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v92 = v21;
  uint64_t v93 = v23;
  _sS2SSysWl_1();
  TextField<>.init<A>(_:text:onEditingChanged:onCommit:)();
  String.LocalizationValue.init(stringLiteral:)();
  uint64_t v25 = v70;
  v73(v13, v15, v70);
  id v26 = (id)static NSBundle.module;
  static Locale.current.getter();
  uint64_t v27 = String.init(localized:table:bundle:locale:comment:)();
  uint64_t v29 = v28;
  v72(v15, v25);
  uint64_t v94 = v27;
  uint64_t v95 = v29;
  uint64_t v30 = v78;
  Button<>.init<A>(_:action:)();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  Swift::String v31 = String.trim()();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v32 = ((unint64_t)v31._object >> 56) & 0xF;
  if (((uint64_t)v31._object & 0x2000000000000000) == 0) {
    unint64_t v32 = v31._countAndFlagsBits & 0xFFFFFFFFFFFFLL;
  }
  BOOL v33 = v32 == 0;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v35 = swift_allocObject();
  *(unsigned char *)(v35 + 16) = v33;
  uint64_t v36 = v91;
  uint64_t v37 = (void (*)(char *, uint64_t))(v91 + 16);
  uint64_t v73 = *(void (**)(char *, char *, uint64_t))(v91 + 16);
  uint64_t v38 = (uint64_t)v76;
  uint64_t v39 = v89;
  v73(v76, v30, v89);
  uint64_t v72 = v37;
  long long v40 = (uint64_t *)(v38 + *(int *)(v77 + 36));
  *long long v40 = KeyPath;
  v40[1] = (uint64_t)partial apply for closure #1 in View.disabled(_:);
  v40[2] = v35;
  id v41 = *(void (**)(char *, uint64_t))(v36 + 8);
  uint64_t v91 = v36 + 8;
  uint64_t v77 = (uint64_t)v41;
  v41(v30, v39);
  uint64_t v42 = v87;
  outlined init with take of PresentationSource?(v38, v87, &demangling cache variable for type metadata for ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>);
  uint64_t v43 = String.cancelButtonTitle.unsafeMutableAddressor();
  uint64_t v45 = *v43;
  uint64_t v44 = v43[1];
  uint64_t v94 = v45;
  uint64_t v95 = v44;
  swift_bridgeObjectRetain();
  long long v46 = v81;
  static ButtonRole.cancel.getter();
  uint64_t v47 = type metadata accessor for ButtonRole();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v46, 0, 1, v47);
  uint64_t v48 = swift_allocObject();
  uint64_t v49 = (uint64_t)v82;
  long long v50 = *((_OWORD *)v82 + 3);
  *(_OWORD *)(v48 + 48) = *((_OWORD *)v82 + 2);
  *(_OWORD *)(v48 + 64) = v50;
  *(_OWORD *)(v48 + 80) = *(_OWORD *)(v49 + 64);
  uint64_t v51 = *(void *)(v49 + 80);
  long long v52 = *(_OWORD *)(v49 + 16);
  *(_OWORD *)(v48 + 16) = *(_OWORD *)v49;
  *(_OWORD *)(v48 + 32) = v52;
  uint64_t v53 = v75;
  *(void *)(v48 + 96) = v51;
  *(void *)(v48 + 104) = v53;
  *(void *)(v48 + 112) = v74;
  outlined retain of InlineProfileEditingView(v49);
  long long v54 = v83;
  Button<>.init<A>(_:role:action:)();
  uint64_t v55 = v79;
  uint64_t v56 = v80;
  uint64_t v57 = *(void (**)(char *, char *, uint64_t))(v79 + 16);
  Swift::String v58 = v86;
  v57(v86, v90, v80);
  outlined init with copy of (String, Any)(v42, v88, &demangling cache variable for type metadata for ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>);
  uint64_t v59 = v84;
  uint64_t v60 = v89;
  uint64_t v61 = (void (*)(uint64_t, char *, uint64_t))v73;
  v73(v84, v54, v89);
  uint64_t v62 = v85;
  v57(v85, v58, v56);
  uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (TextField<Text>, ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>, Button<Text>));
  uint64_t v64 = v88;
  outlined init with copy of (String, Any)(v88, (uint64_t)&v62[*(int *)(v63 + 48)], &demangling cache variable for type metadata for ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>);
  v61((uint64_t)&v62[*(int *)(v63 + 64)], v59, v60);
  unsigned int v65 = v54;
  uint64_t v66 = (void (*)(char *, uint64_t))v77;
  ((void (*)(char *, uint64_t))v77)(v65, v60);
  outlined destroy of TaskPriority?(v87, &demangling cache variable for type metadata for ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>);
  id v67 = *(void (**)(char *, uint64_t))(v55 + 8);
  v67(v90, v56);
  v66(v59, v60);
  outlined destroy of TaskPriority?(v64, &demangling cache variable for type metadata for ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>);
  return ((uint64_t (*)(char *, uint64_t))v67)(v86, v56);
}

uint64_t key path getter for InlineProfileEditingView.Context.name : InlineProfileEditingView.Context@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t key path setter for InlineProfileEditingView.Context.name : InlineProfileEditingView.Context()
{
  return static Published.subscript.setter();
}

uint64_t closure #2 in closure #4 in InlineProfileEditingView.body.getter(long long *a1)
{
  long long v2 = *a1;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  outlined retain of State<Bool>((uint64_t)&v2);
  return static Published.subscript.setter();
}

uint64_t protocol witness for View.body.getter in conformance InlineProfileEditingView@<X0>(uint64_t a1@<X8>)
{
  return InlineProfileEditingView.body.getter(a1);
}

uint64_t key path getter for InlineProfileEditingView.Context.artwork : InlineProfileEditingView.Context()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();

  return swift_release();
}

uint64_t key path setter for InlineProfileEditingView.Context.artwork : InlineProfileEditingView.Context(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
  __chkstk_darwin();
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v7 - v4;
  outlined init with copy of (String, Any)(a1, (uint64_t)&v7 - v4, (uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
  swift_getKeyPath();
  swift_getKeyPath();
  outlined init with copy of (String, Any)((uint64_t)v5, (uint64_t)v3, (uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
  swift_retain();
  static Published.subscript.setter();
  return outlined destroy of TaskPriority?((uint64_t)v5, (uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
}

void specialized InlineProfileEditingView.Context.image.setter(void *a1)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
  __chkstk_darwin();
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v6 = (char *)&v11 - v5;
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v12 = a1;
  id v7 = a1;
  swift_retain();
  static Published.subscript.setter();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v8 = v12;
  if (v12)
  {
    uint64_t v9 = (unsigned char *)(v1 + OBJC_IVAR____TtCV11MusicCoreUI24InlineProfileEditingView7Context_hasRemovedImage);
    swift_beginAccess();
    *uint64_t v9 = 0;
    uint64_t v10 = type metadata accessor for Artwork();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v6, 1, 1, v10);
    swift_getKeyPath();
    swift_getKeyPath();
    outlined init with copy of (String, Any)((uint64_t)v6, (uint64_t)v4, (uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
    swift_retain();
    static Published.subscript.setter();
    outlined destroy of TaskPriority?((uint64_t)v6, (uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
  }
}

__n128 specialized InlineProfileEditingView.init(context:)@<Q0>(__n128 *a1@<X8>)
{
  State.init(wrappedValue:)();
  State.init(wrappedValue:)();
  State.init(wrappedValue:)();
  State.init(wrappedValue:)();
  type metadata accessor for InlineProfileEditingView.Context();
  _s11MusicCoreUI24InlineProfileEditingViewV7ContextCAE7Combine16ObservableObjectAAWlTm_0(&lazy protocol witness table cache variable for type InlineProfileEditingView.Context and conformance InlineProfileEditingView.Context, (void (*)(uint64_t))type metadata accessor for InlineProfileEditingView.Context);
  a1->n128_u64[0] = ObservedObject.init(wrappedValue:)();
  a1->n128_u64[1] = v2;
  a1[1].n128_u8[0] = v4.n128_u8[0];
  a1[1].n128_u64[1] = v4.n128_u64[1];
  a1[2].n128_u8[0] = v4.n128_u8[0];
  a1[2].n128_u64[1] = v4.n128_u64[1];
  a1[3].n128_u8[0] = v4.n128_u8[0];
  a1[3].n128_u64[1] = v4.n128_u64[1];
  __n128 result = v4;
  a1[4] = v4;
  a1[5].n128_u64[0] = v5;
  return result;
}

void sub_1003EC35C(id *a1)
{
  id v1 = *a1;
  id v2 = *a1;
  specialized InlineProfileEditingView.Context.image.setter(v1);
}

uint64_t type metadata accessor for InlineProfileEditingView.Context()
{
  uint64_t result = type metadata singleton initialization cache for InlineProfileEditingView.Context;
  if (!type metadata singleton initialization cache for InlineProfileEditingView.Context) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t partial apply for closure #2 in InlineProfileEditingView.body.getter@<X0>(char *a1@<X8>)
{
  return closure #2 in InlineProfileEditingView.body.getter(*(void *)(v1 + 16), a1);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(_ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>>, _ConditionalContent<Text, ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>>, Spacer, ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Int?>>, _TraitWritingModifier<LayoutPriorityTraitKey>>?)>>, _BackgroundStyleModifier<Color>>, _FlexFrameLayout>, _FlexFrameLayout>, _ClipEffect<RoundedRectangle>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(_ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>>, _ConditionalContent<Text, ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>>, Spacer, ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Int?>>, _TraitWritingModifier<LayoutPriorityTraitKey>>?)>>, _BackgroundStyleModifier<Color>>, _FlexFrameLayout>, _FlexFrameLayout>, _ClipEffect<RoundedRectangle>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(_ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>>, _ConditionalContent<Text, ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>>, Spacer, ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Int?>>, _TraitWritingModifier<LayoutPriorityTraitKey>>?)>>, _BackgroundStyleModifier<Color>>, _FlexFrameLayout>, _FlexFrameLayout>, _ClipEffect<RoundedRectangle>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(_ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>>, _ConditionalContent<Text, ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>>, Spacer, ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Int?>>, _TraitWritingModifier<LayoutPriorityTraitKey>>?)>>, _BackgroundStyleModifier<Color>>, _FlexFrameLayout>, _FlexFrameLayout>, _ClipEffect<RoundedRectangle>>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(_ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>>, _ConditionalContent<Text, ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>>, Spacer, ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Int?>>, _TraitWritingModifier<LayoutPriorityTraitKey>>?)>>, _BackgroundStyleModifier<Color>>, _FlexFrameLayout>, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(_ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>>, _ConditionalContent<Text, ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>>, Spacer, ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Int?>>, _TraitWritingModifier<LayoutPriorityTraitKey>>?)>>, _BackgroundStyleModifier<Color>>, _FlexFrameLayout>, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(_ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>>, _ConditionalContent<Text, ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>>, Spacer, ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Int?>>, _TraitWritingModifier<LayoutPriorityTraitKey>>?)>>, _BackgroundStyleModifier<Color>>, _FlexFrameLayout>, _FlexFrameLayout>, (void (*)(void))lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<HStack<TupleView<(_ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>>, _ConditionalContent<Text, ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>>, Spacer, ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Int?>>, _TraitWritingModifier<LayoutPriorityTraitKey>>?)>>, _BackgroundStyleModifier<Color>>, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>);
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>((unint64_t *)&lazy protocol witness table cache variable for type _ClipEffect<RoundedRectangle> and conformance _ClipEffect<A>, (uint64_t *)&demangling cache variable for type metadata for _ClipEffect<RoundedRectangle>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(_ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>>, _ConditionalContent<Text, ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>>, Spacer, ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Int?>>, _TraitWritingModifier<LayoutPriorityTraitKey>>?)>>, _BackgroundStyleModifier<Color>>, _FlexFrameLayout>, _FlexFrameLayout>, _ClipEffect<RoundedRectangle>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<HStack<TupleView<(_ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>>, _ConditionalContent<Text, ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>>, Spacer, ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Int?>>, _TraitWritingModifier<LayoutPriorityTraitKey>>?)>>, _BackgroundStyleModifier<Color>>, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>()
{
  return lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(_ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>>, _ConditionalContent<Text, ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>>, Spacer, ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Int?>>, _TraitWritingModifier<LayoutPriorityTraitKey>>?)>>, _BackgroundStyleModifier<Color>>, _FlexFrameLayout>, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<HStack<TupleView<(_ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>>, _ConditionalContent<Text, ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>>, Spacer, ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Int?>>, _TraitWritingModifier<LayoutPriorityTraitKey>>?)>>, _BackgroundStyleModifier<Color>>, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<HStack<TupleView<(_ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>>, _ConditionalContent<Text, ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>>, Spacer, ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Int?>>, _TraitWritingModifier<LayoutPriorityTraitKey>>?)>>, _BackgroundStyleModifier<Color>>, _FlexFrameLayout>, (void (*)(void))lazy protocol witness table accessor for type ModifiedContent<HStack<TupleView<(_ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>>, _ConditionalContent<Text, ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>>, Spacer, ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Int?>>, _TraitWritingModifier<LayoutPriorityTraitKey>>?)>>, _BackgroundStyleModifier<Color>> and conformance <> ModifiedContent<A, B>);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<HStack<TupleView<(_ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>>, _ConditionalContent<Text, ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>>, Spacer, ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Int?>>, _TraitWritingModifier<LayoutPriorityTraitKey>>?)>>, _BackgroundStyleModifier<Color>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<HStack<TupleView<(_ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>>, _ConditionalContent<Text, ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>>, Spacer, ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Int?>>, _TraitWritingModifier<LayoutPriorityTraitKey>>?)>>, _BackgroundStyleModifier<Color>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<HStack<TupleView<(_ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>>, _ConditionalContent<Text, ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>>, Spacer, ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Int?>>, _TraitWritingModifier<LayoutPriorityTraitKey>>?)>>, _BackgroundStyleModifier<Color>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(_ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>>, _ConditionalContent<Text, ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>>, Spacer, ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Int?>>, _TraitWritingModifier<LayoutPriorityTraitKey>>?)>>, _BackgroundStyleModifier<Color>>);
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type HStack<TupleView<(_ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>>, _ConditionalContent<Text, ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>>, Spacer, ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Int?>>, _TraitWritingModifier<LayoutPriorityTraitKey>>?)>> and conformance HStack<A>, &demangling cache variable for type metadata for HStack<TupleView<(_ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>>, _ConditionalContent<Text, ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>>, Spacer, ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Int?>>, _TraitWritingModifier<LayoutPriorityTraitKey>>?)>>);
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>((unint64_t *)&lazy protocol witness table cache variable for type _BackgroundStyleModifier<Color> and conformance _BackgroundStyleModifier<A>, &demangling cache variable for type metadata for _BackgroundStyleModifier<Color>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<HStack<TupleView<(_ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>>, _ConditionalContent<Text, ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>>, Spacer, ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Int?>>, _TraitWritingModifier<LayoutPriorityTraitKey>>?)>>, _BackgroundStyleModifier<Color>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t partial apply for closure #4 in InlineProfileEditingView.body.getter@<X0>(char *a1@<X8>)
{
  return closure #4 in InlineProfileEditingView.body.getter(*(void **)(v1 + 16), a1);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.confirmationDialog<A, B>(_:isPresented:titleVisibility:actions:)>>.0, _BackgroundModifier<ModifiedContent<ImagePicker, _FrameLayout>>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.confirmationDialog<A, B>(_:isPresented:titleVisibility:actions:)>>.0, _BackgroundModifier<ModifiedContent<ImagePicker, _FrameLayout>>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.confirmationDialog<A, B>(_:isPresented:titleVisibility:actions:)>>.0, _BackgroundModifier<ModifiedContent<ImagePicker, _FrameLayout>>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.confirmationDialog<A, B>(_:isPresented:titleVisibility:actions:)>>.0, _BackgroundModifier<ModifiedContent<ImagePicker, _FrameLayout>>>);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(_ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>>, _ConditionalContent<Text, ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>>, Spacer, ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Int?>>, _TraitWritingModifier<LayoutPriorityTraitKey>>?)>>, _BackgroundStyleModifier<Color>>, _FlexFrameLayout>, _FlexFrameLayout>, _ClipEffect<RoundedRectangle>>);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for TupleView<(Button<Text>, Button<Text>, Button<Text>, Button<Text>)>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(_ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>>, _ConditionalContent<Text, ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>>, Spacer, ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Int?>>, _TraitWritingModifier<LayoutPriorityTraitKey>>?)>>, _BackgroundStyleModifier<Color>>, _FlexFrameLayout>, _FlexFrameLayout>, _ClipEffect<RoundedRectangle>> and conformance <> ModifiedContent<A, B>();
    _sS2SSysWl_1();
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type TupleView<(Button<Text>, Button<Text>, Button<Text>, Button<Text>)> and conformance TupleView<A>, &demangling cache variable for type metadata for TupleView<(Button<Text>, Button<Text>, Button<Text>, Button<Text>)>);
    swift_getOpaqueTypeConformance2();
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type _BackgroundModifier<ModifiedContent<ImagePicker, _FrameLayout>> and conformance _BackgroundModifier<A>, &demangling cache variable for type metadata for _BackgroundModifier<ModifiedContent<ImagePicker, _FrameLayout>>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.confirmationDialog<A, B>(_:isPresented:titleVisibility:actions:)>>.0, _BackgroundModifier<ModifiedContent<ImagePicker, _FrameLayout>>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t associated type witness table accessor for View.Body : View in InlineProfileEditingView()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for InlineProfileEditingView(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  if (*(void *)(a1 + 64) >= 3uLL)
  {
    swift_bridgeObjectRelease();
  }

  return swift_release();
}

uint64_t initializeWithCopy for InlineProfileEditingView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  uint64_t v6 = (_OWORD *)(a2 + 64);
  unint64_t v5 = *(void *)(a2 + 64);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  if (v5 >= 3)
  {
    id v7 = *(void **)(a2 + 72);
    *(void *)(a1 + 64) = v5;
    *(void *)(a1 + 72) = v7;
    swift_bridgeObjectRetain();
    id v8 = v7;
  }
  else
  {
    *(_OWORD *)(a1 + 64) = *v6;
  }
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for InlineProfileEditingView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_retain();
  swift_release();
  unint64_t v4 = *(void *)(a2 + 64);
  if (*(void *)(a1 + 64) >= 3uLL)
  {
    if (v4 >= 3)
    {
      *(void *)(a1 + 64) = v4;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      id v7 = *(void **)(a1 + 72);
      id v8 = *(void **)(a2 + 72);
      *(void *)(a1 + 72) = v8;
      id v9 = v8;

      goto LABEL_8;
    }
    outlined destroy of TaskPriority?(a1 + 64, &demangling cache variable for type metadata for (concepts: [String], sourceImage: UIImage?));
    goto LABEL_6;
  }
  if (v4 < 3)
  {
LABEL_6:
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    goto LABEL_8;
  }
  *(void *)(a1 + 64) = v4;
  unint64_t v5 = *(void **)(a2 + 72);
  *(void *)(a1 + 72) = v5;
  swift_bridgeObjectRetain();
  id v6 = v5;
LABEL_8:
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for InlineProfileEditingView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_release();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_release();
  unint64_t v5 = *(void *)(a2 + 64);
  if (*(void *)(a1 + 64) >= 3uLL)
  {
    if (v5 >= 3)
    {
      *(void *)(a1 + 64) = v5;
      swift_bridgeObjectRelease();
      id v6 = *(void **)(a1 + 72);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);

      goto LABEL_6;
    }
    outlined destroy of TaskPriority?(a1 + 64, &demangling cache variable for type metadata for (concepts: [String], sourceImage: UIImage?));
  }
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
LABEL_6:
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for InlineProfileEditingView()
{
  return &type metadata for InlineProfileEditingView;
}

uint64_t ObjC metadata update function for InlineProfileEditingView.Context()
{
  return type metadata accessor for InlineProfileEditingView.Context();
}

void type metadata completion function for InlineProfileEditingView.Context()
{
  type metadata accessor for Published<MPCPlayerResponse?>(319, (unint64_t *)&lazy cache variable for type metadata for Published<Artwork?>, (uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
  if (v0 <= 0x3F)
  {
    type metadata accessor for Published<String>();
    if (v1 <= 0x3F)
    {
      type metadata accessor for Published<MPCPlayerResponse?>(319, &lazy cache variable for type metadata for Published<UIImage?>, &demangling cache variable for type metadata for UIImage?);
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

uint64_t sub_1003ECBDC()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.confirmationDialog<A, B>(_:isPresented:titleVisibility:actions:)>>.0, _BackgroundModifier<ModifiedContent<ImagePicker, _FrameLayout>>>);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for TupleView<(TextField<Text>, ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>, Button<Text>)>);
  lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.confirmationDialog<A, B>(_:isPresented:titleVisibility:actions:)>>.0, _BackgroundModifier<ModifiedContent<ImagePicker, _FrameLayout>>> and conformance <> ModifiedContent<A, B>();
  _sS2SSysWl_1();
  lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type TupleView<(TextField<Text>, ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>, Button<Text>)> and conformance TupleView<A>, &demangling cache variable for type metadata for TupleView<(TextField<Text>, ModifiedContent<Button<Text>, _EnvironmentKeyTransformModifier<Bool>>, Button<Text>)>);
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1003ECCA4()
{
  return swift_deallocObject();
}

uint64_t sub_1003ECCB4()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  if (*(void *)(v0 + 80) >= 3uLL)
  {
    swift_bridgeObjectRelease();
  }
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t partial apply for closure #2 in closure #4 in InlineProfileEditingView.body.getter()
{
  return closure #2 in closure #4 in InlineProfileEditingView.body.getter((long long *)(v0 + 16));
}

uint64_t outlined retain of InlineProfileEditingView(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 64);
  uint64_t v3 = *(void **)(a1 + 72);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  outlined copy of ImagePicker.SourceType(v2, v3);
  swift_retain();
  return a1;
}

uint64_t outlined init with take of ImagePicker(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ImagePicker(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t _s7SwiftUI16RoundedRectangleVWOcTm_1(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t partial apply for closure #2 in closure #2 in InlineProfileEditingView.body.getter()
{
  return closure #2 in closure #2 in InlineProfileEditingView.body.getter();
}

uint64_t partial apply for closure #3 in closure #2 in InlineProfileEditingView.body.getter()
{
  return closure #3 in closure #2 in InlineProfileEditingView.body.getter();
}

uint64_t partial apply for closure #4 in closure #2 in InlineProfileEditingView.body.getter()
{
  return closure #4 in closure #2 in InlineProfileEditingView.body.getter(v0 + 16);
}

unint64_t type metadata accessor for MPArtworkCatalog()
{
  unint64_t result = lazy cache variable for type metadata for MPArtworkCatalog;
  if (!lazy cache variable for type metadata for MPArtworkCatalog)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for MPArtworkCatalog);
  }
  return result;
}

uint64_t _s7SwiftUI16RoundedRectangleVWOhTm_0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Image, _FrameLayout>, _ClipEffect<Circle>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Image, _FrameLayout>, _ClipEffect<Circle>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Image, _FrameLayout>, _ClipEffect<Circle>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Image, _FrameLayout>, _ClipEffect<Circle>>);
    lazy protocol witness table accessor for type ModifiedContent<Image, _FrameLayout> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>((unint64_t *)&lazy protocol witness table cache variable for type _ClipEffect<Circle> and conformance _ClipEffect<A>, &demangling cache variable for type metadata for _ClipEffect<Circle>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Image, _FrameLayout>, _ClipEffect<Circle>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<Image, _FrameLayout> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<Image, _FrameLayout> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<Image, _FrameLayout> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&demangling cache variable for type metadata for ModifiedContent<Image, _FrameLayout>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<Image, _FrameLayout> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, _ClipEffect<Circle>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, _ClipEffect<Circle>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, _ClipEffect<Circle>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, _ClipEffect<Circle>>);
    lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>((unint64_t *)&lazy protocol witness table cache variable for type _ClipEffect<Circle> and conformance _ClipEffect<A>, &demangling cache variable for type metadata for _ClipEffect<Circle>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, _ClipEffect<Circle>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>);
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<ArtworkImage.Placeholder.View, _PreferenceWritingModifier<RadiosityEnabledPreferenceKey>>, _FrameLayout>, GeometryReader<ModifiedContent<ModifiedContent<ArtworkImage.Placeholder.View, _PreferenceWritingModifier<RadiosityEnabledPreferenceKey>>, _FrameLayout>>>);
    lazy protocol witness table accessor for type _ConditionalContent<ModifiedContent<ModifiedContent<ArtworkImage.Placeholder.View, _PreferenceWritingModifier<RadiosityEnabledPreferenceKey>>, _FrameLayout>, GeometryReader<ModifiedContent<ModifiedContent<ArtworkImage.Placeholder.View, _PreferenceWritingModifier<RadiosityEnabledPreferenceKey>>, _FrameLayout>>> and conformance <> _ConditionalContent<A, B>();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(_ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>>, _ConditionalContent<Text, ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>>, Spacer, ModifiedContent<ModifiedContent<ModifiedContent<Button<Text>, _PaddingLayout>, _EnvironmentKeyWritingModifier<Int?>>, _TraitWritingModifier<LayoutPriorityTraitKey>>?)>>, _BackgroundStyleModifier<Color>>, _FlexFrameLayout>, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t _s11MusicCoreUI24InlineProfileEditingViewV7ContextCAE7Combine16ObservableObjectAAWlTm_0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t partial apply for closure #3 in closure #1 in InlineProfileEditingView.body.getter()
{
  return State.wrappedValue.setter();
}

uint64_t objectdestroy_45Tm()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  if (*(void *)(v0 + 80) >= 3uLL)
  {
    swift_bridgeObjectRelease();
  }
  swift_release();

  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #2 in InlineProfileEditingView.body.getter()
{
  return State.wrappedValue.setter();
}

uint64_t outlined init with take of Text.Storage(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t outlined retain of Text.Storage(uint64_t a1)
{
  return a1;
}

uint64_t outlined retain of [Text.Modifier](uint64_t a1)
{
  return a1;
}

uint64_t BottomGradientBlurMask.body(content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v56 = a1;
  uint64_t v60 = a2;
  uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.onScrollGeometryChange<A>(for:of:action:)>>.0);
  uint64_t v4 = *(void *)(v53 - 8);
  __chkstk_darwin();
  id v6 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.onScrollGeometryChange<A>(for:of:action:)>>.0, _MaskAlignmentEffect<ModifiedContent<HStack<TupleView<(VStack<TupleView<(Color, ModifiedContent<LinearGradient, _FrameLayout>)>>, ModifiedContent<Color, _FrameLayout>?)>>, _SafeAreaRegionsIgnoringLayout>>>);
  __chkstk_darwin();
  long long v52 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.onScrollGeometryChange<A>(for:of:action:)>>.0, _MaskAlignmentEffect<ModifiedContent<HStack<TupleView<(VStack<TupleView<(Color, ModifiedContent<LinearGradient, _FrameLayout>)>>, ModifiedContent<Color, _FrameLayout>?)>>, _SafeAreaRegionsIgnoringLayout>>>, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Spacer, ModifiedContent<ZStack<ProgressiveBlur>, _FrameLayout>)>>, _PaddingLayout>, _OpacityEffect>, _SafeAreaRegionsIgnoringLayout>>>);
  __chkstk_darwin();
  uint64_t v54 = (uint64_t)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v55 = (uint64_t)&v47 - v9;
  uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<_ViewModifier_Content<BottomGradientBlurMask>, ModifiedContent<ModifiedContent<<<opaque return type of View.onScrollGeometryChange<A>(for:of:action:)>>.0, _MaskAlignmentEffect<ModifiedContent<HStack<TupleView<(VStack<TupleView<(Color, ModifiedContent<LinearGradient, _FrameLayout>)>>, ModifiedContent<Color, _FrameLayout>?)>>, _SafeAreaRegionsIgnoringLayout>>>, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Spacer, ModifiedContent<ZStack<ProgressiveBlur>, _FrameLayout>)>>, _PaddingLayout>, _OpacityEffect>, _SafeAreaRegionsIgnoringLayout>>>>.Storage);
  __chkstk_darwin();
  uint64_t v57 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ViewModifier_Content<BottomGradientBlurMask>);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin();
  uint64_t v14 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void *)(v2 + 40);
  char v16 = *(unsigned char *)(v3 + 48);
  outlined copy of Environment<Bool>.Content(v15, v16);
  char v17 = specialized Environment.wrappedValue.getter(v15, v16);
  outlined consume of Environment<SymbolButton.MaterialColor?>.Content(v15, v16);
  if (v17)
  {
    uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
    v18(v14, v56, v11);
    v18(v57, (uint64_t)v14, v11);
    swift_storeEnumTagMultiPayload();
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type _ViewModifier_Content<BottomGradientBlurMask> and conformance _ViewModifier_Content<A>, &demangling cache variable for type metadata for _ViewModifier_Content<BottomGradientBlurMask>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<<<opaque return type of View.onScrollGeometryChange<A>(for:of:action:)>>.0, _MaskAlignmentEffect<ModifiedContent<HStack<TupleView<(VStack<TupleView<(Color, ModifiedContent<LinearGradient, _FrameLayout>)>>, ModifiedContent<Color, _FrameLayout>?)>>, _SafeAreaRegionsIgnoringLayout>>>, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Spacer, ModifiedContent<ZStack<ProgressiveBlur>, _FrameLayout>)>>, _PaddingLayout>, _OpacityEffect>, _SafeAreaRegionsIgnoringLayout>>> and conformance <> ModifiedContent<A, B>();
    _ConditionalContent<>.init(storage:)();
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  else
  {
    type metadata accessor for ScrollGeometry();
    long long v65 = *(_OWORD *)(v3 + 24);
    uint64_t v20 = swift_allocObject();
    long long v21 = *(_OWORD *)(v3 + 16);
    *(_OWORD *)(v20 + 16) = *(_OWORD *)v3;
    *(_OWORD *)(v20 + 32) = v21;
    *(_OWORD *)(v20 + 48) = *(_OWORD *)(v3 + 32);
    *(unsigned char *)(v20 + 64) = *(unsigned char *)(v3 + 48);
    outlined copy of Environment<Bool>.Content(v15, v16);
    outlined retain of State<Bool>((uint64_t)&v65);
    uint64_t v50 = lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type _ViewModifier_Content<BottomGradientBlurMask> and conformance _ViewModifier_Content<A>, &demangling cache variable for type metadata for _ViewModifier_Content<BottomGradientBlurMask>);
    lazy protocol witness table accessor for type ScrollGeometry and conformance ScrollGeometry();
    uint64_t v49 = v11;
    View.onScrollGeometryChange<A>(for:of:action:)();
    swift_release();
    uint64_t v56 = static Alignment.bottom.getter();
    uint64_t v48 = v22;
    uint64_t v47 = static VerticalAlignment.center.getter();
    closure #1 in closure #3 in BottomGradientBlurMask.body(content:)(v3, (uint64_t)v61);
    *(_OWORD *)&v62[119] = v61[7];
    *(_OWORD *)&v62[135] = v61[8];
    *(_OWORD *)&v62[151] = v61[9];
    *(_OWORD *)&v62[167] = v61[10];
    *(_OWORD *)&v62[55] = v61[3];
    *(_OWORD *)&v62[71] = v61[4];
    *(_OWORD *)&v62[87] = v61[5];
    *(_OWORD *)&v62[103] = v61[6];
    *(_OWORD *)&v62[7] = v61[0];
    *(_OWORD *)&v62[23] = v61[1];
    char v63 = 0;
    *(_OWORD *)&v62[39] = v61[2];
    uint64_t v23 = static SafeAreaRegions.all.getter();
    char v24 = static Edge.Set.all.getter();
    uint64_t v26 = (uint64_t)v52;
    uint64_t v25 = v53;
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v52, v6, v53);
    uint64_t v27 = v26 + *(int *)(v51 + 36);
    long long v28 = *(_OWORD *)&v62[144];
    *(_OWORD *)(v27 + 161) = *(_OWORD *)&v62[128];
    *(_OWORD *)(v27 + 177) = v28;
    *(_OWORD *)(v27 + 193) = *(_OWORD *)&v62[160];
    long long v29 = *(_OWORD *)&v62[80];
    *(_OWORD *)(v27 + 97) = *(_OWORD *)&v62[64];
    *(_OWORD *)(v27 + 113) = v29;
    long long v30 = *(_OWORD *)&v62[112];
    *(_OWORD *)(v27 + 129) = *(_OWORD *)&v62[96];
    *(_OWORD *)(v27 + 145) = v30;
    long long v31 = *(_OWORD *)&v62[16];
    *(_OWORD *)(v27 + 33) = *(_OWORD *)v62;
    *(_OWORD *)(v27 + 49) = v31;
    long long v32 = *(_OWORD *)&v62[48];
    *(_OWORD *)(v27 + 65) = *(_OWORD *)&v62[32];
    uint64_t v33 = v48;
    *(void *)uint64_t v27 = v56;
    *(void *)(v27 + 8) = v33;
    *(void *)(v27 + 16) = v47;
    *(void *)(v27 + 24) = 0;
    *(unsigned char *)(v27 + 32) = 0;
    uint64_t v34 = *(void *)&v62[175];
    *(_OWORD *)(v27 + 81) = v32;
    *(void *)(v27 + 208) = v34;
    *(void *)(v27 + 216) = v23;
    *(unsigned char *)(v27 + 224) = v24;
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v25);
    uint64_t v35 = static Alignment.center.getter();
    uint64_t v37 = v36;
    closure #4 in BottomGradientBlurMask.body(content:)(v3, (uint64_t)v64);
    uint64_t v38 = v54;
    outlined init with copy of (String, Any)(v26, v54, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.onScrollGeometryChange<A>(for:of:action:)>>.0, _MaskAlignmentEffect<ModifiedContent<HStack<TupleView<(VStack<TupleView<(Color, ModifiedContent<LinearGradient, _FrameLayout>)>>, ModifiedContent<Color, _FrameLayout>?)>>, _SafeAreaRegionsIgnoringLayout>>>);
    uint64_t v39 = v38 + *(int *)(v59 + 36);
    long long v40 = v64[9];
    *(_OWORD *)(v39 + 128) = v64[8];
    *(_OWORD *)(v39 + 144) = v40;
    long long v41 = v64[11];
    *(_OWORD *)(v39 + 160) = v64[10];
    *(_OWORD *)(v39 + 176) = v41;
    long long v42 = v64[5];
    *(_OWORD *)(v39 + 64) = v64[4];
    *(_OWORD *)(v39 + 80) = v42;
    long long v43 = v64[7];
    *(_OWORD *)(v39 + 96) = v64[6];
    *(_OWORD *)(v39 + 112) = v43;
    long long v44 = v64[1];
    *(_OWORD *)uint64_t v39 = v64[0];
    *(_OWORD *)(v39 + 16) = v44;
    long long v45 = v64[3];
    *(_OWORD *)(v39 + 32) = v64[2];
    *(_OWORD *)(v39 + 48) = v45;
    *(void *)(v39 + 192) = v35;
    *(void *)(v39 + 200) = v37;
    outlined destroy of TaskPriority?(v26, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.onScrollGeometryChange<A>(for:of:action:)>>.0, _MaskAlignmentEffect<ModifiedContent<HStack<TupleView<(VStack<TupleView<(Color, ModifiedContent<LinearGradient, _FrameLayout>)>>, ModifiedContent<Color, _FrameLayout>?)>>, _SafeAreaRegionsIgnoringLayout>>>);
    uint64_t v46 = v55;
    outlined init with take of ModifiedContent<ModifiedContent<<<opaque return type of View.onScrollGeometryChange<A>(for:of:action:)>>.0, _MaskAlignmentEffect<ModifiedContent<HStack<TupleView<(VStack<TupleView<(Color, ModifiedContent<LinearGradient, _FrameLayout>)>>, ModifiedContent<Color, _FrameLayout>?)>>, _SafeAreaRegionsIgnoringLayout>>>, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Spacer, ModifiedContent<ZStack<ProgressiveBlur>, _FrameLayout>)>>, _PaddingLayout>, _OpacityEffect>, _SafeAreaRegionsIgnoringLayout>>>(v38, v55);
    outlined init with copy of (String, Any)(v46, (uint64_t)v57, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.onScrollGeometryChange<A>(for:of:action:)>>.0, _MaskAlignmentEffect<ModifiedContent<HStack<TupleView<(VStack<TupleView<(Color, ModifiedContent<LinearGradient, _FrameLayout>)>>, ModifiedContent<Color, _FrameLayout>?)>>, _SafeAreaRegionsIgnoringLayout>>>, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Spacer, ModifiedContent<ZStack<ProgressiveBlur>, _FrameLayout>)>>, _PaddingLayout>, _OpacityEffect>, _SafeAreaRegionsIgnoringLayout>>>);
    swift_storeEnumTagMultiPayload();
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<<<opaque return type of View.onScrollGeometryChange<A>(for:of:action:)>>.0, _MaskAlignmentEffect<ModifiedContent<HStack<TupleView<(VStack<TupleView<(Color, ModifiedContent<LinearGradient, _FrameLayout>)>>, ModifiedContent<Color, _FrameLayout>?)>>, _SafeAreaRegionsIgnoringLayout>>>, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Spacer, ModifiedContent<ZStack<ProgressiveBlur>, _FrameLayout>)>>, _PaddingLayout>, _OpacityEffect>, _SafeAreaRegionsIgnoringLayout>>> and conformance <> ModifiedContent<A, B>();
    _ConditionalContent<>.init(storage:)();
    return outlined destroy of TaskPriority?(v46, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.onScrollGeometryChange<A>(for:of:action:)>>.0, _MaskAlignmentEffect<ModifiedContent<HStack<TupleView<(VStack<TupleView<(Color, ModifiedContent<LinearGradient, _FrameLayout>)>>, ModifiedContent<Color, _FrameLayout>?)>>, _SafeAreaRegionsIgnoringLayout>>>, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Spacer, ModifiedContent<ZStack<ProgressiveBlur>, _FrameLayout>)>>, _PaddingLayout>, _OpacityEffect>, _SafeAreaRegionsIgnoringLayout>>>);
  }
}

uint64_t closure #1 in BottomGradientBlurMask.body(content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for ScrollGeometry();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a2, a1, v4);
}

uint64_t closure #2 in BottomGradientBlurMask.body(content:)()
{
  ScrollGeometry.contentSize.getter();
  ScrollGeometry.visibleRect.getter();
  CGRectGetMaxY(v1);
  ScrollGeometry.contentInsets.getter();
  __swift_instantiateConcreteTypeFromMangledName(&_s7SwiftUI5StateVy12CoreGraphics7CGFloatVGMD_0);
  return State.wrappedValue.setter();
}

void closure #1 in closure #3 in BottomGradientBlurMask.body(content:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = static HorizontalAlignment.center.getter();
  closure #1 in closure #1 in closure #3 in BottomGradientBlurMask.body(content:)(a1, (uint64_t)&v23);
  long long v5 = v23;
  long long v6 = v24;
  long long v7 = v25;
  uint64_t v8 = v26;
  char v9 = v27;
  uint64_t v10 = v28;
  char v11 = v29;
  long long v12 = v30;
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v13 = 0;
    uint64_t v14 = 0;
    uint64_t v15 = 0;
    uint64_t v16 = 0;
    uint64_t v17 = 0;
    long long v18 = 0uLL;
  }
  else
  {
    long long v21 = v24;
    long long v22 = v23;
    long long v19 = v30;
    long long v20 = v25;
    uint64_t v13 = static Color.black.getter();
    static Alignment.center.getter();
    _FrameLayout.init(width:height:alignment:)();
    long long v12 = v19;
    long long v7 = v20;
    long long v6 = v21;
    long long v5 = v22;
    uint64_t v14 = v23;
    uint64_t v15 = BYTE8(v23);
    uint64_t v16 = v24;
    uint64_t v17 = BYTE8(v24);
    long long v18 = v25;
  }
  *(void *)a2 = v4;
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 0;
  *(_OWORD *)(a2 + 24) = v5;
  *(_OWORD *)(a2 + 40) = v6;
  *(_OWORD *)(a2 + 56) = v7;
  *(void *)(a2 + 72) = v8;
  *(unsigned char *)(a2 + 80) = v9;
  *(void *)(a2 + 88) = v10;
  *(unsigned char *)(a2 + 96) = v11;
  *(_OWORD *)(a2 + 104) = v12;
  *(void *)(a2 + 120) = v13;
  *(void *)(a2 + 128) = v14;
  *(void *)(a2 + 136) = v15;
  *(void *)(a2 + 144) = v16;
  *(void *)(a2 + 152) = v17;
  *(_OWORD *)(a2 + 160) = v18;
}

double closure #1 in closure #1 in closure #3 in BottomGradientBlurMask.body(content:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = static Color.black.getter();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Color>);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_100493D00;
  *(void *)(v5 + 32) = static Color.black.getter();
  static Color.black.getter();
  long long v12 = *(_OWORD *)(a1 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&_s7SwiftUI5StateVy12CoreGraphics7CGFloatVGMD_0);
  State.wrappedValue.getter();
  uint64_t v6 = Color.opacity(_:)();
  swift_release();
  *(void *)(v5 + 40) = v6;
  specialized Array._endMutation()();
  static UnitPoint.top.getter();
  static UnitPoint.bottom.getter();
  Gradient.init(colors:)();
  LinearGradient.init(gradient:startPoint:endPoint:)();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  *(void *)a2 = v4;
  *(void *)(a2 + 8) = v8;
  *(_OWORD *)(a2 + 16) = v9;
  *(void *)(a2 + 32) = v10;
  *(void *)(a2 + 40) = v11;
  *(void *)(a2 + 48) = v5;
  *(unsigned char *)(a2 + 56) = BYTE8(v12);
  *(void *)(a2 + 64) = v13;
  *(unsigned char *)(a2 + 72) = v14;
  double result = *(double *)&v15;
  *(_OWORD *)(a2 + 80) = v15;
  return result;
}

uint64_t closure #4 in BottomGradientBlurMask.body(content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v18 = static HorizontalAlignment.center.getter();
  uint64_t v4 = static Alignment.center.getter();
  uint64_t v19 = v5;
  uint64_t v20 = v4;
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  char v6 = static Edge.Set.trailing.getter();
  char v7 = *(unsigned char *)(a1 + 16);
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  if ((v7 & 1) == 0)
  {
    EdgeInsets.init(_all:)();
    uint64_t v8 = v12;
    uint64_t v9 = v13;
    uint64_t v10 = v14;
    uint64_t v11 = v15;
  }
  __swift_instantiateConcreteTypeFromMangledName(&_s7SwiftUI5StateVy12CoreGraphics7CGFloatVGMD_0);
  State.wrappedValue.getter();
  char v16 = static Edge.Set.bottom.getter();
  uint64_t result = static SafeAreaRegions.all.getter();
  *(void *)a2 = v18;
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 1;
  *(void *)(a2 + 24) = 0;
  *(unsigned char *)(a2 + 32) = 1;
  *(void *)(a2 + 40) = v20;
  *(void *)(a2 + 48) = v19;
  *(void *)(a2 + 56) = 0x4018000000000000;
  *(unsigned char *)(a2 + 64) = 3;
  *(void *)(a2 + 72) = v22;
  *(unsigned char *)(a2 + 80) = v23;
  *(void *)(a2 + 88) = v24;
  *(unsigned char *)(a2 + 96) = v25;
  *(void *)(a2 + 104) = v26;
  *(void *)(a2 + 112) = v27;
  *(unsigned char *)(a2 + 120) = v6;
  *(void *)(a2 + 128) = v8;
  *(void *)(a2 + 136) = v9;
  *(void *)(a2 + 144) = v10;
  *(void *)(a2 + 152) = v11;
  *(unsigned char *)(a2 + 160) = v7;
  *(void *)(a2 + 168) = v21;
  *(void *)(a2 + 176) = result;
  *(unsigned char *)(a2 + 184) = v16;
  return result;
}

uint64_t protocol witness for ViewModifier.body(content:) in conformance BottomGradientBlurMask@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return BottomGradientBlurMask.body(content:)(a1, a2);
}

uint64_t View.bottomGradientBlurMask(height:trailingGutterWidth:)()
{
  return swift_release();
}

uint64_t sub_1003EE14C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = EnvironmentValues.accessibilityReduceTransparency.getter();
  *a1 = result & 1;
  return result;
}

uint64_t destroy for BottomGradientBlurMask(uint64_t a1)
{
  swift_release();
  uint64_t v2 = *(void *)(a1 + 40);
  char v3 = *(unsigned char *)(a1 + 48);

  return outlined consume of Environment<SymbolButton.MaterialColor?>.Content(v2, v3);
}

uint64_t initializeWithCopy for BottomGradientBlurMask(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  char v6 = *(unsigned char *)(a2 + 48);
  swift_retain();
  outlined copy of Environment<Bool>.Content(v5, v6);
  *(void *)(a1 + 40) = v5;
  *(unsigned char *)(a1 + 48) = v6;
  return a1;
}

uint64_t assignWithCopy for BottomGradientBlurMask(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  *(void *)a1 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_release();
  uint64_t v5 = *(void *)(v2 + 40);
  LOBYTE(v2) = *(unsigned char *)(v2 + 48);
  outlined copy of Environment<Bool>.Content(v5, v2);
  uint64_t v6 = *(void *)(a1 + 40);
  char v7 = *(unsigned char *)(a1 + 48);
  *(void *)(a1 + 40) = v5;
  *(unsigned char *)(a1 + 48) = v2;
  outlined consume of Environment<SymbolButton.MaterialColor?>.Content(v6, v7);
  return a1;
}

__n128 __swift_memcpy49_8_0(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for BottomGradientBlurMask(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_release();
  char v4 = *(unsigned char *)(a2 + 48);
  uint64_t v5 = *(void *)(a1 + 40);
  char v6 = *(unsigned char *)(a1 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = v4;
  outlined consume of Environment<SymbolButton.MaterialColor?>.Content(v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for BottomGradientBlurMask(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 49)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 32);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for BottomGradientBlurMask(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 48) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 49) = 0;
    }
    if (a2) {
      *(void *)(result + 32) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BottomGradientBlurMask()
{
  return &type metadata for BottomGradientBlurMask;
}

uint64_t associated type witness table accessor for ViewModifier.Body : View in BottomGradientBlurMask()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1003EE42C()
{
  swift_release();
  outlined consume of Environment<SymbolButton.MaterialColor?>.Content(*(void *)(v0 + 56), *(unsigned char *)(v0 + 64));

  return swift_deallocObject();
}

uint64_t partial apply for closure #2 in BottomGradientBlurMask.body(content:)()
{
  return closure #2 in BottomGradientBlurMask.body(content:)();
}

unint64_t lazy protocol witness table accessor for type ScrollGeometry and conformance ScrollGeometry()
{
  unint64_t result = lazy protocol witness table cache variable for type ScrollGeometry and conformance ScrollGeometry;
  if (!lazy protocol witness table cache variable for type ScrollGeometry and conformance ScrollGeometry)
  {
    type metadata accessor for ScrollGeometry();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ScrollGeometry and conformance ScrollGeometry);
  }
  return result;
}

uint64_t outlined init with take of ModifiedContent<ModifiedContent<<<opaque return type of View.onScrollGeometryChange<A>(for:of:action:)>>.0, _MaskAlignmentEffect<ModifiedContent<HStack<TupleView<(VStack<TupleView<(Color, ModifiedContent<LinearGradient, _FrameLayout>)>>, ModifiedContent<Color, _FrameLayout>?)>>, _SafeAreaRegionsIgnoringLayout>>>, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Spacer, ModifiedContent<ZStack<ProgressiveBlur>, _FrameLayout>)>>, _PaddingLayout>, _OpacityEffect>, _SafeAreaRegionsIgnoringLayout>>>(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.onScrollGeometryChange<A>(for:of:action:)>>.0, _MaskAlignmentEffect<ModifiedContent<HStack<TupleView<(VStack<TupleView<(Color, ModifiedContent<LinearGradient, _FrameLayout>)>>, ModifiedContent<Color, _FrameLayout>?)>>, _SafeAreaRegionsIgnoringLayout>>>, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Spacer, ModifiedContent<ZStack<ProgressiveBlur>, _FrameLayout>)>>, _PaddingLayout>, _OpacityEffect>, _SafeAreaRegionsIgnoringLayout>>>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<<<opaque return type of View.onScrollGeometryChange<A>(for:of:action:)>>.0, _MaskAlignmentEffect<ModifiedContent<HStack<TupleView<(VStack<TupleView<(Color, ModifiedContent<LinearGradient, _FrameLayout>)>>, ModifiedContent<Color, _FrameLayout>?)>>, _SafeAreaRegionsIgnoringLayout>>>, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Spacer, ModifiedContent<ZStack<ProgressiveBlur>, _FrameLayout>)>>, _PaddingLayout>, _OpacityEffect>, _SafeAreaRegionsIgnoringLayout>>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<<<opaque return type of View.onScrollGeometryChange<A>(for:of:action:)>>.0, _MaskAlignmentEffect<ModifiedContent<HStack<TupleView<(VStack<TupleView<(Color, ModifiedContent<LinearGradient, _FrameLayout>)>>, ModifiedContent<Color, _FrameLayout>?)>>, _SafeAreaRegionsIgnoringLayout>>>, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Spacer, ModifiedContent<ZStack<ProgressiveBlur>, _FrameLayout>)>>, _PaddingLayout>, _OpacityEffect>, _SafeAreaRegionsIgnoringLayout>>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<<<opaque return type of View.onScrollGeometryChange<A>(for:of:action:)>>.0, _MaskAlignmentEffect<ModifiedContent<HStack<TupleView<(VStack<TupleView<(Color, ModifiedContent<LinearGradient, _FrameLayout>)>>, ModifiedContent<Color, _FrameLayout>?)>>, _SafeAreaRegionsIgnoringLayout>>>, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Spacer, ModifiedContent<ZStack<ProgressiveBlur>, _FrameLayout>)>>, _PaddingLayout>, _OpacityEffect>, _SafeAreaRegionsIgnoringLayout>>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.onScrollGeometryChange<A>(for:of:action:)>>.0, _MaskAlignmentEffect<ModifiedContent<HStack<TupleView<(VStack<TupleView<(Color, ModifiedContent<LinearGradient, _FrameLayout>)>>, ModifiedContent<Color, _FrameLayout>?)>>, _SafeAreaRegionsIgnoringLayout>>>, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Spacer, ModifiedContent<ZStack<ProgressiveBlur>, _FrameLayout>)>>, _PaddingLayout>, _OpacityEffect>, _SafeAreaRegionsIgnoringLayout>>>);
    lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.onScrollGeometryChange<A>(for:of:action:)>>.0, _MaskAlignmentEffect<ModifiedContent<HStack<TupleView<(VStack<TupleView<(Color, ModifiedContent<LinearGradient, _FrameLayout>)>>, ModifiedContent<Color, _FrameLayout>?)>>, _SafeAreaRegionsIgnoringLayout>>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Spacer, ModifiedContent<ZStack<ProgressiveBlur>, _FrameLayout>)>>, _PaddingLayout>, _OpacityEffect>, _SafeAreaRegionsIgnoringLayout>> and conformance _OverlayModifier<A>, &demangling cache variable for type metadata for _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Spacer, ModifiedContent<ZStack<ProgressiveBlur>, _FrameLayout>)>>, _PaddingLayout>, _OpacityEffect>, _SafeAreaRegionsIgnoringLayout>>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<<<opaque return type of View.onScrollGeometryChange<A>(for:of:action:)>>.0, _MaskAlignmentEffect<ModifiedContent<HStack<TupleView<(VStack<TupleView<(Color, ModifiedContent<LinearGradient, _FrameLayout>)>>, ModifiedContent<Color, _FrameLayout>?)>>, _SafeAreaRegionsIgnoringLayout>>>, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Spacer, ModifiedContent<ZStack<ProgressiveBlur>, _FrameLayout>)>>, _PaddingLayout>, _OpacityEffect>, _SafeAreaRegionsIgnoringLayout>>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.onScrollGeometryChange<A>(for:of:action:)>>.0, _MaskAlignmentEffect<ModifiedContent<HStack<TupleView<(VStack<TupleView<(Color, ModifiedContent<LinearGradient, _FrameLayout>)>>, ModifiedContent<Color, _FrameLayout>?)>>, _SafeAreaRegionsIgnoringLayout>>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.onScrollGeometryChange<A>(for:of:action:)>>.0, _MaskAlignmentEffect<ModifiedContent<HStack<TupleView<(VStack<TupleView<(Color, ModifiedContent<LinearGradient, _FrameLayout>)>>, ModifiedContent<Color, _FrameLayout>?)>>, _SafeAreaRegionsIgnoringLayout>>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.onScrollGeometryChange<A>(for:of:action:)>>.0, _MaskAlignmentEffect<ModifiedContent<HStack<TupleView<(VStack<TupleView<(Color, ModifiedContent<LinearGradient, _FrameLayout>)>>, ModifiedContent<Color, _FrameLayout>?)>>, _SafeAreaRegionsIgnoringLayout>>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.onScrollGeometryChange<A>(for:of:action:)>>.0, _MaskAlignmentEffect<ModifiedContent<HStack<TupleView<(VStack<TupleView<(Color, ModifiedContent<LinearGradient, _FrameLayout>)>>, ModifiedContent<Color, _FrameLayout>?)>>, _SafeAreaRegionsIgnoringLayout>>>);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _ViewModifier_Content<BottomGradientBlurMask>);
    type metadata accessor for ScrollGeometry();
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type _ViewModifier_Content<BottomGradientBlurMask> and conformance _ViewModifier_Content<A>, &demangling cache variable for type metadata for _ViewModifier_Content<BottomGradientBlurMask>);
    lazy protocol witness table accessor for type ScrollGeometry and conformance ScrollGeometry();
    swift_getOpaqueTypeConformance2();
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type _MaskAlignmentEffect<ModifiedContent<HStack<TupleView<(VStack<TupleView<(Color, ModifiedContent<LinearGradient, _FrameLayout>)>>, ModifiedContent<Color, _FrameLayout>?)>>, _SafeAreaRegionsIgnoringLayout>> and conformance _MaskAlignmentEffect<A>, &demangling cache variable for type metadata for _MaskAlignmentEffect<ModifiedContent<HStack<TupleView<(VStack<TupleView<(Color, ModifiedContent<LinearGradient, _FrameLayout>)>>, ModifiedContent<Color, _FrameLayout>?)>>, _SafeAreaRegionsIgnoringLayout>>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.onScrollGeometryChange<A>(for:of:action:)>>.0, _MaskAlignmentEffect<ModifiedContent<HStack<TupleView<(VStack<TupleView<(Color, ModifiedContent<LinearGradient, _FrameLayout>)>>, ModifiedContent<Color, _FrameLayout>?)>>, _SafeAreaRegionsIgnoringLayout>>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type _ConditionalContent<_ViewModifier_Content<BottomGradientBlurMask>, ModifiedContent<ModifiedContent<<<opaque return type of View.onScrollGeometryChange<A>(for:of:action:)>>.0, _MaskAlignmentEffect<ModifiedContent<HStack<TupleView<(VStack<TupleView<(Color, ModifiedContent<LinearGradient, _FrameLayout>)>>, ModifiedContent<Color, _FrameLayout>?)>>, _SafeAreaRegionsIgnoringLayout>>>, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Spacer, ModifiedContent<ZStack<ProgressiveBlur>, _FrameLayout>)>>, _PaddingLayout>, _OpacityEffect>, _SafeAreaRegionsIgnoringLayout>>>> and conformance <> _ConditionalContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type _ConditionalContent<_ViewModifier_Content<BottomGradientBlurMask>, ModifiedContent<ModifiedContent<<<opaque return type of View.onScrollGeometryChange<A>(for:of:action:)>>.0, _MaskAlignmentEffect<ModifiedContent<HStack<TupleView<(VStack<TupleView<(Color, ModifiedContent<LinearGradient, _FrameLayout>)>>, ModifiedContent<Color, _FrameLayout>?)>>, _SafeAreaRegionsIgnoringLayout>>>, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Spacer, ModifiedContent<ZStack<ProgressiveBlur>, _FrameLayout>)>>, _PaddingLayout>, _OpacityEffect>, _SafeAreaRegionsIgnoringLayout>>>> and conformance <> _ConditionalContent<A, B>;
  if (!lazy protocol witness table cache variable for type _ConditionalContent<_ViewModifier_Content<BottomGradientBlurMask>, ModifiedContent<ModifiedContent<<<opaque return type of View.onScrollGeometryChange<A>(for:of:action:)>>.0, _MaskAlignmentEffect<ModifiedContent<HStack<TupleView<(VStack<TupleView<(Color, ModifiedContent<LinearGradient, _FrameLayout>)>>, ModifiedContent<Color, _FrameLayout>?)>>, _SafeAreaRegionsIgnoringLayout>>>, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Spacer, ModifiedContent<ZStack<ProgressiveBlur>, _FrameLayout>)>>, _PaddingLayout>, _OpacityEffect>, _SafeAreaRegionsIgnoringLayout>>>> and conformance <> _ConditionalContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _ConditionalContent<_ViewModifier_Content<BottomGradientBlurMask>, ModifiedContent<ModifiedContent<<<opaque return type of View.onScrollGeometryChange<A>(for:of:action:)>>.0, _MaskAlignmentEffect<ModifiedContent<HStack<TupleView<(VStack<TupleView<(Color, ModifiedContent<LinearGradient, _FrameLayout>)>>, ModifiedContent<Color, _FrameLayout>?)>>, _SafeAreaRegionsIgnoringLayout>>>, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Spacer, ModifiedContent<ZStack<ProgressiveBlur>, _FrameLayout>)>>, _PaddingLayout>, _OpacityEffect>, _SafeAreaRegionsIgnoringLayout>>>>);
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type _ViewModifier_Content<BottomGradientBlurMask> and conformance _ViewModifier_Content<A>, &demangling cache variable for type metadata for _ViewModifier_Content<BottomGradientBlurMask>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<<<opaque return type of View.onScrollGeometryChange<A>(for:of:action:)>>.0, _MaskAlignmentEffect<ModifiedContent<HStack<TupleView<(VStack<TupleView<(Color, ModifiedContent<LinearGradient, _FrameLayout>)>>, ModifiedContent<Color, _FrameLayout>?)>>, _SafeAreaRegionsIgnoringLayout>>>, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Spacer, ModifiedContent<ZStack<ProgressiveBlur>, _FrameLayout>)>>, _PaddingLayout>, _OpacityEffect>, _SafeAreaRegionsIgnoringLayout>>> and conformance <> ModifiedContent<A, B>();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type _ConditionalContent<_ViewModifier_Content<BottomGradientBlurMask>, ModifiedContent<ModifiedContent<<<opaque return type of View.onScrollGeometryChange<A>(for:of:action:)>>.0, _MaskAlignmentEffect<ModifiedContent<HStack<TupleView<(VStack<TupleView<(Color, ModifiedContent<LinearGradient, _FrameLayout>)>>, ModifiedContent<Color, _FrameLayout>?)>>, _SafeAreaRegionsIgnoringLayout>>>, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(Spacer, ModifiedContent<ZStack<ProgressiveBlur>, _FrameLayout>)>>, _PaddingLayout>, _OpacityEffect>, _SafeAreaRegionsIgnoringLayout>>>> and conformance <> _ConditionalContent<A, B>);
  }
  return result;
}

uint64_t ScrollView.init(_:content:)()
{
  return ScrollView.init(_:showsIndicators:content:)();
}

uint64_t ExpandableTextView.init(title:buttonColor:_:sheetContent:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(uint64_t)@<X3>, void (*a5)(uint64_t)@<X5>, uint64_t a6@<X8>)
{
  State.init(wrappedValue:)();
  *(unsigned char *)a6 = v15;
  *(void *)(a6 + 8) = v16;
  *(void *)(a6 + 16) = a1;
  *(void *)(a6 + 24) = a2;
  *(void *)(a6 + *(int *)(type metadata accessor for ExpandableTextView() + 64)) = a3;
  uint64_t v12 = swift_retain();
  uint64_t v13 = a4(v12);
  a5(v13);
  return swift_release();
}

uint64_t type metadata accessor for ExpandableTextView()
{
  return swift_getGenericMetadata();
}

uint64_t ExpandableTextView.init<>(title:buttonColor:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(uint64_t)@<X3>, uint64_t a5@<X8>)
{
  return ExpandableTextView.init(title:buttonColor:_:sheetContent:)(a1, a2, a3, a4, (void (*)(uint64_t))a4, a5);
}

uint64_t ExpandableTextView.body.getter@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v80 = a2;
  uint64_t v67 = *(a1 - 1);
  uint64_t v69 = *(void *)(v67 + 64);
  uint64_t v3 = __chkstk_darwin();
  uint64_t v84 = (char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = *(void *)(v3 + 16);
  uint64_t v5 = v63;
  uint64_t v6 = type metadata accessor for MoreLabel();
  uint64_t v77 = v6;
  uint64_t v83 = a1[4];
  uint64_t v7 = v83;
  uint64_t v72 = lazy protocol witness table accessor for type MoreLabel and conformance MoreLabel(&lazy protocol witness table cache variable for type MoreLabel and conformance MoreLabel, (void (*)(uint64_t))type metadata accessor for MoreLabel);
  uint64_t v97 = v5;
  Swift::String v98 = (void *)v6;
  uint64_t v99 = v7;
  uint64_t v100 = (void *)v72;
  uint64_t v8 = type metadata accessor for HeightLimitedButtonTextView();
  uint64_t v78 = *(void *)(v8 - 8);
  __chkstk_darwin();
  uint64_t v68 = (uint64_t)&v53 - v9;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v97 = v8;
  Swift::String v98 = &type metadata for Bool;
  uint64_t v59 = v8;
  uint64_t v99 = WitnessTable;
  uint64_t v100 = &protocol witness table for Bool;
  uint64_t v60 = WitnessTable;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v71 = OpaqueTypeMetadata2;
  uint64_t v79 = *(void *)(OpaqueTypeMetadata2 - 8);
  __chkstk_darwin();
  uint64_t v66 = (char *)&v53 - v12;
  uint64_t v54 = a1;
  uint64_t v81 = a1[3];
  uint64_t v82 = a1[5];
  uint64_t v13 = type metadata accessor for Sheet();
  uint64_t v14 = swift_getWitnessTable();
  unint64_t v15 = lazy protocol witness table accessor for type DescriptionSheetSizing and conformance DescriptionSheetSizing();
  uint64_t v97 = v13;
  Swift::String v98 = &unk_100547E08;
  uint64_t v99 = v14;
  uint64_t v100 = (void *)v15;
  uint64_t v16 = swift_getOpaqueTypeMetadata2();
  uint64_t v62 = v16;
  uint64_t v97 = v8;
  Swift::String v98 = &type metadata for Bool;
  uint64_t v99 = WitnessTable;
  uint64_t v100 = &protocol witness table for Bool;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v65 = OpaqueTypeConformance2;
  uint64_t v97 = v13;
  Swift::String v98 = &unk_100547E08;
  uint64_t v99 = v14;
  uint64_t v100 = (void *)v15;
  uint64_t v64 = swift_getOpaqueTypeConformance2();
  uint64_t v97 = OpaqueTypeMetadata2;
  Swift::String v98 = (void *)v16;
  uint64_t v99 = OpaqueTypeConformance2;
  uint64_t v100 = (void *)v64;
  uint64_t v74 = &opaque type descriptor for <<opaque return type of View.sheet<A>(isPresented:onDismiss:content:)>>;
  uint64_t v75 = swift_getOpaqueTypeMetadata2();
  uint64_t v76 = *(void *)(v75 - 8);
  __chkstk_darwin();
  uint64_t v61 = (char *)&v53 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v70 = (char *)&v53 - v19;
  uint64_t v20 = v67;
  uint64_t v21 = *(void (**)(char *, char *, void *))(v67 + 16);
  uint64_t v57 = v67 + 16;
  uint64_t v58 = v21;
  uint64_t v22 = v84;
  char v23 = v73;
  uint64_t v24 = v54;
  v21(v84, v73, v54);
  uint64_t v25 = *(unsigned __int8 *)(v20 + 80);
  uint64_t v26 = (v25 + 48) & ~v25;
  v69 += v26;
  uint64_t v56 = v26;
  uint64_t v55 = v25 | 7;
  uint64_t v27 = (void *)swift_allocObject();
  uint64_t v28 = v63;
  uint64_t v29 = v81;
  v27[2] = v63;
  v27[3] = v29;
  uint64_t v30 = v83;
  uint64_t v31 = v82;
  v27[4] = v83;
  v27[5] = v31;
  long long v32 = (char *)v27 + v26;
  uint64_t v33 = *(void (**)(char *, char *, void *))(v20 + 32);
  v33(v32, v22, v24);
  uint64_t v90 = v28;
  uint64_t v91 = v29;
  uint64_t v92 = v30;
  uint64_t v93 = v31;
  uint64_t v94 = v23;
  uint64_t v85 = v28;
  uint64_t v86 = v29;
  uint64_t v87 = v30;
  uint64_t v88 = v31;
  uint64_t v89 = v23;
  uint64_t v34 = v68;
  HeightLimitedButtonTextView.init(action:body:trailingView:)((uint64_t)partial apply for closure #1 in ExpandableTextView.body.getter, (uint64_t)v27, (void (*)(void))partial apply for closure #2 in ExpandableTextView.body.getter, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))partial apply for closure #3 in ExpandableTextView.body.getter, v68);
  uint64_t v35 = (void *)*((void *)v23 + 1);
  LOBYTE(v97) = *v23;
  Swift::String v98 = v35;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Bool>);
  State.wrappedValue.getter();
  LOBYTE(v97) = v95;
  uint64_t v36 = v66;
  uint64_t v37 = v59;
  View.onChange<A>(of:initial:_:)();
  (*(void (**)(uint64_t, uint64_t))(v78 + 8))(v34, v37);
  uint64_t v38 = *((void *)v23 + 1);
  char v95 = *v23;
  uint64_t v96 = v38;
  State.projectedValue.getter();
  uint64_t v39 = v84;
  v58(v84, v23, v24);
  long long v40 = (char *)swift_allocObject();
  uint64_t v41 = v81;
  *((void *)v40 + 2) = v28;
  *((void *)v40 + 3) = v41;
  uint64_t v42 = v82;
  *((void *)v40 + 4) = v83;
  *((void *)v40 + 5) = v42;
  v33(&v40[v56], v39, v24);
  uint64_t v43 = swift_checkMetadataState();
  long long v44 = (void *)v64;
  uint64_t v45 = v65;
  uint64_t v46 = v61;
  uint64_t v47 = v71;
  View.sheet<A>(isPresented:onDismiss:content:)();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v79 + 8))(v36, v47);
  uint64_t v97 = v47;
  Swift::String v98 = (void *)v43;
  uint64_t v99 = v45;
  uint64_t v100 = v44;
  uint64_t v48 = swift_getOpaqueTypeConformance2();
  uint64_t v49 = v70;
  uint64_t v50 = v75;
  static ViewBuilder.buildExpression<A>(_:)(v46, v75, v48);
  uint64_t v51 = *(void (**)(char *, uint64_t))(v76 + 8);
  v51(v46, v50);
  static ViewBuilder.buildExpression<A>(_:)(v49, v50, v48);
  return ((uint64_t (*)(char *, uint64_t))v51)(v49, v50);
}

uint64_t type metadata accessor for Sheet()
{
  return __swift_instantiateGenericMetadata();
}

unint64_t lazy protocol witness table accessor for type DescriptionSheetSizing and conformance DescriptionSheetSizing()
{
  unint64_t result = lazy protocol witness table cache variable for type DescriptionSheetSizing and conformance DescriptionSheetSizing;
  if (!lazy protocol witness table cache variable for type DescriptionSheetSizing and conformance DescriptionSheetSizing)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type DescriptionSheetSizing and conformance DescriptionSheetSizing);
  }
  return result;
}

uint64_t partial apply for closure #1 in ExpandableTextView.body.getter()
{
  return partial apply for closure #1 in ExpandableTextView.body.getter();
}

{
  type metadata accessor for ExpandableTextView();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Bool>);
  return State.wrappedValue.setter();
}

uint64_t closure #2 in ExpandableTextView.body.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a2 - 8);
  __chkstk_darwin();
  uint64_t v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16[0] = v10;
  v16[1] = v11;
  v16[2] = v12;
  v16[3] = v13;
  uint64_t v14 = type metadata accessor for ExpandableTextView();
  static ViewBuilder.buildExpression<A>(_:)(a1 + *(int *)(v14 + 56), a2, a4);
  static ViewBuilder.buildExpression<A>(_:)(v9, a2, a4);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, a2);
}

uint64_t partial apply for closure #2 in ExpandableTextView.body.getter()
{
  return partial apply for closure #2 in ExpandableTextView.body.getter((uint64_t (*)(void, void, void, void, void))closure #2 in ExpandableTextView.body.getter);
}

uint64_t closure #3 in ExpandableTextView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12 = type metadata accessor for MoreLabel();
  __chkstk_darwin();
  uint64_t v14 = (void *)((char *)v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin();
  uint64_t v16 = (char *)v24 - v15;
  __chkstk_darwin();
  uint64_t v18 = (char *)v24 - v17;
  v24[0] = a2;
  v24[1] = a3;
  v24[2] = a4;
  v24[3] = a5;
  uint64_t v19 = *(int *)(type metadata accessor for ExpandableTextView() + 64);
  if (*(void *)(a1 + v19)) {
    uint64_t v20 = *(void *)(a1 + v19);
  }
  else {
    uint64_t v20 = static Color.primary.getter();
  }
  uint64_t v21 = (uint64_t *)((char *)v14 + *(int *)(v12 + 20));
  *uint64_t v21 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<LayoutDirection>.Content);
  swift_storeEnumTagMultiPayload();
  uint64_t v22 = (char *)v14 + *(int *)(v12 + 24);
  *(void *)uint64_t v22 = swift_getKeyPath();
  v22[8] = 0;
  uint64_t *v14 = v20;
  outlined init with take of MoreLabel((uint64_t)v14, (uint64_t)v16);
  outlined init with take of MoreLabel((uint64_t)v16, (uint64_t)v18);
  outlined init with take of MoreLabel((uint64_t)v18, a6);
  return swift_retain();
}

uint64_t partial apply for closure #3 in ExpandableTextView.body.getter()
{
  return partial apply for closure #2 in ExpandableTextView.body.getter((uint64_t (*)(void, void, void, void, void))closure #3 in ExpandableTextView.body.getter);
}

uint64_t closure #5 in ExpandableTextView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, unint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v48 = a4;
  uint64_t v50 = a6;
  uint64_t v56 = a2;
  uint64_t v57 = a3;
  uint64_t v58 = a4;
  unint64_t v59 = a5;
  unint64_t v41 = a5;
  uint64_t v9 = type metadata accessor for ExpandableTextView();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin();
  uint64_t v12 = (char *)&v35 - v11;
  uint64_t v13 = type metadata accessor for Sheet();
  uint64_t v49 = *(void *)(v13 - 8);
  __chkstk_darwin();
  uint64_t v45 = (uint64_t *)((char *)&v35 - v14);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v43 = WitnessTable;
  unint64_t v42 = lazy protocol witness table accessor for type DescriptionSheetSizing and conformance DescriptionSheetSizing();
  uint64_t v56 = v13;
  uint64_t v57 = &unk_100547E08;
  uint64_t v58 = WitnessTable;
  unint64_t v59 = v42;
  uint64_t v46 = &opaque type descriptor for <<opaque return type of View.presentationSizing<A>(_:)>>;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v47 = *(void *)(OpaqueTypeMetadata2 - 8);
  __chkstk_darwin();
  uint64_t v39 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  long long v40 = (char *)&v35 - v17;
  uint64_t v36 = a1;
  uint64_t v38 = *(void *)(a1 + 16);
  uint64_t v37 = *(void *)(a1 + 24);
  uint64_t v18 = v9;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a1, v9);
  unint64_t v19 = (*(unsigned __int8 *)(v10 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v20 = (char *)swift_allocObject();
  uint64_t v21 = a2;
  *((void *)v20 + 2) = a2;
  *((void *)v20 + 3) = a3;
  uint64_t v22 = a3;
  uint64_t v23 = v48;
  unint64_t v24 = v41;
  *((void *)v20 + 4) = v48;
  *((void *)v20 + 5) = v24;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v20[v19], v12, v18);
  uint64_t v51 = v21;
  long long v52 = v22;
  uint64_t v53 = v23;
  unint64_t v54 = v24;
  uint64_t v55 = v36;
  uint64_t v25 = v37;
  swift_bridgeObjectRetain();
  uint64_t v26 = v45;
  Sheet.init(title:closeButtonAction:content:)(v38, v25, (uint64_t)partial apply for closure #1 in closure #5 in ExpandableTextView.body.getter, (uint64_t)v20, (uint64_t (*)(uint64_t))partial apply for closure #2 in closure #5 in ExpandableTextView.body.getter, v45);
  uint64_t v27 = v39;
  unint64_t v29 = v42;
  uint64_t v28 = v43;
  View.presentationSizing<A>(_:)();
  (*(void (**)(void *, uint64_t))(v49 + 8))(v26, v13);
  uint64_t v56 = v13;
  uint64_t v57 = &unk_100547E08;
  uint64_t v58 = v28;
  unint64_t v59 = v29;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v31 = v40;
  uint64_t v32 = OpaqueTypeMetadata2;
  static ViewBuilder.buildExpression<A>(_:)(v27, OpaqueTypeMetadata2, OpaqueTypeConformance2);
  uint64_t v33 = *(void (**)(char *, uint64_t))(v47 + 8);
  v33(v27, v32);
  static ViewBuilder.buildExpression<A>(_:)(v31, v32, OpaqueTypeConformance2);
  return ((uint64_t (*)(char *, uint64_t))v33)(v31, v32);
}

uint64_t partial apply for closure #5 in ExpandableTextView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1[2];
  uint64_t v4 = (void *)v1[3];
  uint64_t v5 = v1[4];
  unint64_t v6 = v1[5];
  uint64_t v7 = *(void *)(type metadata accessor for ExpandableTextView() - 8);
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v7 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));

  return closure #5 in ExpandableTextView.body.getter(v8, v3, v4, v5, v6, a1);
}

uint64_t associated type witness table accessor for View.Body : View in ExpandableTextView<A, B>()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t closure #2 in closure #5 in ExpandableTextView.body.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = *(void *)(a3 - 8);
  __chkstk_darwin();
  uint64_t v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = v11;
  v17[1] = v12;
  v17[2] = v13;
  v17[3] = v14;
  uint64_t v15 = type metadata accessor for ExpandableTextView();
  static ViewBuilder.buildExpression<A>(_:)(a1 + *(int *)(v15 + 60), a3, a5);
  static ViewBuilder.buildExpression<A>(_:)(v10, a3, a5);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, a3);
}

uint64_t Sheet.init(title:closeButtonAction:content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t (*a5)(uint64_t)@<X4>, void *a6@<X8>)
{
  uint64_t v12 = type metadata accessor for Sheet();
  uint64_t v13 = (void *)((char *)a6 + *(int *)(v12 + 44));
  *uint64_t v13 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DismissAction>.Content);
  uint64_t v14 = swift_storeEnumTagMultiPayload();
  *a6 = a1;
  a6[1] = a2;
  uint64_t result = a5(v14);
  uint64_t v16 = (void *)((char *)a6 + *(int *)(v12 + 40));
  void *v16 = a3;
  v16[1] = a4;
  return result;
}

uint64_t type metadata completion function for ExpandableTextView()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for ExpandableTextView(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(a3 + 24);
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  unint64_t v6 = *(_DWORD *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = *(void *)(v4 - 8);
  uint64_t v9 = *(_DWORD *)(v8 + 80);
  uint64_t v10 = v7 + v9;
  uint64_t v11 = *(void *)(v8 + 64) + 7;
  if ((v9 | v6) > 7
    || ((*(_DWORD *)(v8 + 80) | *(_DWORD *)(v5 + 80)) & 0x100000) != 0
    || ((v11 + ((v7 + v9 + ((v6 + 32) & ~v6)) & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    uint64_t v14 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v14 + (((v9 | v6) & 0xF8 ^ 0x1F8) & ((v9 | v6) + 16)));
  }
  else
  {
    uint64_t v21 = *(void *)(a3 + 16);
    uint64_t v22 = ~v9;
    *(unsigned char *)a1 = *(unsigned char *)a2;
    a1[1] = a2[1];
    uint64_t v15 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v16 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v15 = *v16;
    v15[1] = v16[1];
    uint64_t v17 = ((unint64_t)v15 + v6 + 16) & ~v6;
    uint64_t v18 = ((unint64_t)v16 + v6 + 16) & ~v6;
    unint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_retain();
    swift_bridgeObjectRetain();
    v19(v17, v18, v21);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))((v17 + v10) & v22, (v18 + v10) & v22, v4);
    *(void *)((v11 + ((v17 + v10) & v22)) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v11 + ((v18 + v10) & v22)) & 0xFFFFFFFFFFFFFFF8);
  }
  swift_retain();
  return v3;
}

uint64_t destroy for ExpandableTextView(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v5 = v4 + 8;
  unint64_t v6 = (((a1 + 23) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  (*(void (**)(unint64_t))(v4 + 8))(v6);
  (*(void (**)(unint64_t))(*(void *)(*(void *)(a2 + 24) - 8) + 8))((v6
                                                                                            + *(void *)(v5 + 56)
                                                                                            + *(unsigned __int8 *)(*(void *)(*(void *)(a2 + 24) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(a2 + 24) - 8) + 80));

  return swift_release();
}

uint64_t initializeWithCopy for ExpandableTextView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v5 = (void *)((a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v6 = (void *)((a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v5 = *v6;
  v5[1] = v6[1];
  uint64_t v7 = *(void *)(a3 + 16);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);
  uint64_t v9 = *(void *)(v7 - 8) + 16;
  uint64_t v10 = *(unsigned __int8 *)(*(void *)(v7 - 8) + 80);
  uint64_t v11 = ((unint64_t)v5 + v10 + 16) & ~v10;
  uint64_t v12 = ((unint64_t)v6 + v10 + 16) & ~v10;
  swift_retain();
  swift_bridgeObjectRetain();
  v8(v11, v12, v7);
  uint64_t v13 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v14 = v13 + 16;
  uint64_t v15 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = *(void *)(v9 + 48) + v15;
  uint64_t v17 = (v16 + v11) & ~v15;
  uint64_t v18 = (v16 + v12) & ~v15;
  (*(void (**)(uint64_t, uint64_t))(v13 + 16))(v17, v18);
  *(void *)((*(void *)(v14 + 48) + 7 + v17) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v14 + 48)
                                                                                       + 7
                                                                                       + v18) & 0xFFFFFFFFFFFFFFF8);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ExpandableTextView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  unint64_t v6 = (void *)((a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v7 = (void *)((a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  void *v6 = *v7;
  v6[1] = v7[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v9 = v8 + 24;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = ((unint64_t)v6 + v10 + 16) & ~v10;
  uint64_t v12 = ((unint64_t)v7 + v10 + 16) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 24))(v11, v12);
  uint64_t v13 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v14 = v13 + 24;
  uint64_t v15 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = *(void *)(v9 + 40) + v15;
  uint64_t v17 = (v16 + v11) & ~v15;
  uint64_t v18 = (v16 + v12) & ~v15;
  (*(void (**)(uint64_t, uint64_t))(v13 + 24))(v17, v18);
  *(void *)((*(void *)(v14 + 40) + 7 + v17) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v14 + 40)
                                                                                       + 7
                                                                                       + v18) & 0xFFFFFFFFFFFFFFF8);
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *initializeWithTake for ExpandableTextView(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v5 = (_OWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v6 = (_OWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v5 = *v6;
  uint64_t v7 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v8 = v7 + 32;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = ((unint64_t)v5 + v9 + 16) & ~v9;
  uint64_t v11 = ((unint64_t)v6 + v9 + 16) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v7 + 32))(v10, v11);
  uint64_t v12 = *(void *)(v8 + 32);
  uint64_t v13 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v14 = v13 + 32;
  uint64_t v15 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = v12 + v15;
  uint64_t v17 = (v16 + v10) & ~v15;
  uint64_t v18 = (v16 + v11) & ~v15;
  (*(void (**)(uint64_t, uint64_t))(v13 + 32))(v17, v18);
  *(void *)((*(void *)(v14 + 32) + 7 + v17) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v14 + 32)
                                                                                       + 7
                                                                                       + v18) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t assignWithTake for ExpandableTextView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_release();
  unint64_t v6 = (void *)((a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v7 = (void *)((a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  void *v6 = *v7;
  v6[1] = v7[1];
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v9 = v8 + 40;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = ((unint64_t)v6 + v10 + 16) & ~v10;
  uint64_t v12 = ((unint64_t)v7 + v10 + 16) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 40))(v11, v12);
  uint64_t v13 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v14 = v13 + 40;
  uint64_t v15 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = *(void *)(v9 + 24) + v15;
  uint64_t v17 = (v16 + v11) & ~v15;
  uint64_t v18 = (v16 + v12) & ~v15;
  (*(void (**)(uint64_t, uint64_t))(v13 + 40))(v17, v18);
  *(void *)((*(void *)(v14 + 24) + 7 + v17) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v14 + 24)
                                                                                       + 7
                                                                                       + v18) & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ExpandableTextView(int *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(a3 + 24);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  uint64_t v9 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v10 = *(void *)(v4 + 64);
  uint64_t v11 = *(unsigned __int8 *)(v7 + 80);
  if (v5 <= v8) {
    unsigned int v12 = *(_DWORD *)(v7 + 84);
  }
  else {
    unsigned int v12 = *(_DWORD *)(v4 + 84);
  }
  if (v12 <= 0x7FFFFFFE) {
    unsigned int v13 = 2147483646;
  }
  else {
    unsigned int v13 = v12;
  }
  if (!a2) {
    return 0;
  }
  if (v13 < a2)
  {
    unint64_t v14 = ((*(void *)(*(void *)(v6 - 8) + 64) + ((v10 + v11 + ((v9 + 32) & ~v9)) & ~v11) + 7) & 0xFFFFFFFFFFFFFFF8)
        + 8;
    if ((v14 & 0xFFFFFFF8) != 0) {
      unsigned int v15 = 2;
    }
    else {
      unsigned int v15 = a2 - v13 + 1;
    }
    if (v15 >= 0x10000) {
      unsigned int v16 = 4;
    }
    else {
      unsigned int v16 = 2;
    }
    if (v15 < 0x100) {
      unsigned int v16 = 1;
    }
    if (v15 >= 2) {
      uint64_t v17 = v16;
    }
    else {
      uint64_t v17 = 0;
    }
    switch(v17)
    {
      case 1:
        int v18 = *((unsigned __int8 *)a1 + v14);
        if (!*((unsigned char *)a1 + v14)) {
          break;
        }
        goto LABEL_25;
      case 2:
        int v18 = *(unsigned __int16 *)((char *)a1 + v14);
        if (*(_WORD *)((char *)a1 + v14)) {
          goto LABEL_25;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1003F06C8);
      case 4:
        int v18 = *(int *)((char *)a1 + v14);
        if (!v18) {
          break;
        }
LABEL_25:
        int v20 = v18 - 1;
        if ((v14 & 0xFFFFFFF8) != 0)
        {
          int v20 = 0;
          int v21 = *a1;
        }
        else
        {
          int v21 = 0;
        }
        return v13 + (v21 | v20) + 1;
      default:
        break;
    }
  }
  if (v12 > 0x7FFFFFFE)
  {
    unint64_t v24 = ((((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8) + v9 + 16) & ~v9;
    if (v5 == v13) {
      return (*(uint64_t (**)(unint64_t))(v4 + 48))(v24);
    }
    else {
      return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))((v24 + v10 + v11) & ~v11, v8, v6);
    }
  }
  else
  {
    unint64_t v22 = *((void *)a1 + 1);
    if (v22 >= 0xFFFFFFFF) {
      LODWORD(v22) = -1;
    }
    int v23 = v22 - 1;
    if (v23 < 0) {
      int v23 = -1;
    }
    return (v23 + 1);
  }
}

void storeEnumTagSinglePayload for ExpandableTextView(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(void *)(a4 + 24);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v11 = *(void *)(v6 + 64);
  uint64_t v12 = *(unsigned __int8 *)(v9 + 80);
  if (v7 <= *(_DWORD *)(v9 + 84)) {
    unsigned int v13 = *(_DWORD *)(v9 + 84);
  }
  else {
    unsigned int v13 = *(_DWORD *)(v6 + 84);
  }
  if (v13 <= 0x7FFFFFFE) {
    unsigned int v14 = 2147483646;
  }
  else {
    unsigned int v14 = v13;
  }
  size_t v15 = ((*(void *)(*(void *)(v8 - 8) + 64) + ((v11 + v12 + ((v10 + 32) & ~v10)) & ~v12) + 7) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  if (v14 >= a3)
  {
    int v19 = 0;
    int v20 = a2 - v14;
    if (a2 <= v14)
    {
LABEL_20:
      switch(v19)
      {
        case 1:
          a1[v15] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_33;
        case 2:
          *(_WORD *)&a1[v15] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_33;
        case 3:
          goto LABEL_49;
        case 4:
          *(_DWORD *)&a1[v15] = 0;
          goto LABEL_32;
        default:
LABEL_32:
          if (a2)
          {
LABEL_33:
            if (v13 > 0x7FFFFFFE)
            {
              unint64_t v23 = (((unint64_t)(a1 + 23) & 0xFFFFFFFFFFFFFFF8) + v10 + 16) & ~v10;
              if (v7 == v14)
              {
                unint64_t v24 = *(void (**)(unint64_t))(v6 + 56);
                v24(v23);
              }
              else
              {
                unint64_t v25 = (v23 + v11 + v12) & ~v12;
                uint64_t v26 = *(void (**)(unint64_t))(v9 + 56);
                v26(v25);
              }
            }
            else if (a2 > 0x7FFFFFFE)
            {
              *(void *)a1 = a2 - 0x7FFFFFFF;
              *((void *)a1 + 1) = 0;
            }
            else
            {
              *((void *)a1 + 1) = a2;
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v16 = a3 - v14;
    if (((*(_DWORD *)(*(void *)(v8 - 8) + 64)
         + ((v11 + v12 + ((v10 + 32) & ~v10)) & ~v12)
         + 7) & 0xFFFFFFF8) == 0xFFFFFFF8)
      unsigned int v17 = v16 + 1;
    else {
      unsigned int v17 = 2;
    }
    if (v17 >= 0x10000) {
      int v18 = 4;
    }
    else {
      int v18 = 2;
    }
    if (v17 < 0x100) {
      int v18 = 1;
    }
    if (v17 >= 2) {
      int v19 = v18;
    }
    else {
      int v19 = 0;
    }
    int v20 = a2 - v14;
    if (a2 <= v14) {
      goto LABEL_20;
    }
  }
  if (((*(_DWORD *)(*(void *)(v8 - 8) + 64)
       + ((v11 + v12 + ((v10 + 32) & ~v10)) & ~v12)
       + 7) & 0xFFFFFFF8) == 0xFFFFFFF8)
    int v21 = v20;
  else {
    int v21 = 1;
  }
  if (((*(_DWORD *)(*(void *)(v8 - 8) + 64)
       + ((v11 + v12 + ((v10 + 32) & ~v10)) & ~v12)
       + 7) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    unsigned int v22 = ~v14 + a2;
    bzero(a1, v15);
    *(_DWORD *)a1 = v22;
  }
  switch(v19)
  {
    case 1:
      a1[v15] = v21;
      break;
    case 2:
      *(_WORD *)&a1[v15] = v21;
      break;
    case 3:
LABEL_49:
      __break(1u);
      JUMPOUT(0x1003F09A0);
    case 4:
      *(_DWORD *)&a1[v15] = v21;
      break;
    default:
      return;
  }
}

uint64_t sub_1003F09C8()
{
  return swift_getOpaqueTypeConformance2();
}

void *type metadata accessor for DescriptionSheetSizing()
{
  return &unk_100547E08;
}

void type metadata completion function for Sheet()
{
  swift_checkMetadataState();
  if (v0 <= 0x3F)
  {
    type metadata accessor for Environment<DismissAction>.Content();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for Sheet(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  int v7 = *(_DWORD *)(v6 + 80);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v6 + 64) + 7;
  uint64_t v10 = type metadata accessor for DismissAction();
  uint64_t v11 = *(void *)(v10 - 8);
  int v12 = *(_DWORD *)(v11 + 80);
  uint64_t v13 = v12 & 0xF8 | 7;
  if (*(void *)(v11 + 64) <= 8uLL) {
    uint64_t v14 = 8;
  }
  else {
    uint64_t v14 = *(void *)(v11 + 64);
  }
  int v15 = (v12 | v7) & 0x100000;
  if ((v13 | v7) != 7
    || v15 != 0
    || v14
     + ((v13
       + ((v9 + ((v7 + 16) & ~(unint64_t)v7)) & 0xFFFFFFFFFFFFFFF8)
       + 16) & ~v13)
     + 1 > 0x18)
  {
    uint64_t v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + (((v13 | v7) + 16) & ~(v13 | v7)));
LABEL_30:
    swift_retain();
    return a1;
  }
  uint64_t v36 = *(void *)(v10 - 8);
  uint64_t v19 = ~v13;
  uint64_t v20 = a2[1];
  *a1 = *a2;
  a1[1] = v20;
  int v21 = (char *)a2 + v8;
  uint64_t v22 = ((unint64_t)a1 + v8 + 16) & ~v8;
  uint64_t v23 = (unint64_t)(v21 + 16) & ~v8;
  unint64_t v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  swift_bridgeObjectRetain();
  v24(v22, v23, v5);
  unint64_t v25 = (v9 + v22) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v26 = (v9 + v23) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)v26 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)unint64_t v25 = *(_OWORD *)v26;
  }
  else
  {
    uint64_t v27 = *(void *)(v26 + 8);
    *(void *)unint64_t v25 = *(void *)v26;
    *(void *)(v25 + 8) = v27;
    swift_retain();
  }
  uint64_t v28 = (void *)((v25 + v13 + 16) & v19);
  unint64_t v29 = (unsigned __int8 *)((v26 + v13 + 16) & v19);
  unsigned int v30 = v29[v14];
  unsigned int v31 = v30 - 2;
  if (v30 >= 2)
  {
    if (v14 <= 3) {
      uint64_t v32 = v14;
    }
    else {
      uint64_t v32 = 4;
    }
    switch(v32)
    {
      case 1:
        int v33 = *v29;
        goto LABEL_25;
      case 2:
        int v33 = *(unsigned __int16 *)v29;
        goto LABEL_25;
      case 3:
        int v33 = *(unsigned __int16 *)v29 | (*(unsigned __int8 *)(((v26 + v13 + 16) & v19) + 2) << 16);
        goto LABEL_25;
      case 4:
        int v33 = *(_DWORD *)v29;
LABEL_25:
        int v34 = (v33 | (v31 << (8 * v14))) + 2;
        unsigned int v30 = v33 + 2;
        if (v14 < 4) {
          unsigned int v30 = v34;
        }
        break;
      default:
        break;
    }
  }
  if (v30 != 1)
  {
    *uint64_t v28 = *(void *)v29;
    *((unsigned char *)v28 + v14) = 0;
    goto LABEL_30;
  }
  (*(void (**)(void *))(v36 + 16))(v28);
  *((unsigned char *)v28 + v14) = 1;
  return a1;
}

uint64_t destroy for Sheet(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v5 = v4 + 8;
  unint64_t v6 = (a1 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  (*(void (**)(unint64_t))(v4 + 8))(v6);
  int v7 = (void *)((*(void *)(v5 + 56) + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  if (*v7 >= 0xFFFFFFFFuLL) {
    swift_release();
  }
  uint64_t v8 = *(void *)(type metadata accessor for DismissAction() - 8);
  uint64_t v9 = *(_DWORD *)(v8 + 80) & 0xF8 | 7;
  uint64_t v10 = (unsigned __int8 *)(((unint64_t)v7 + v9 + 16) & ~v9);
  unint64_t v11 = *(void *)(v8 + 64);
  if (v11 <= 8) {
    unint64_t v11 = 8;
  }
  unsigned int v12 = v10[v11];
  unsigned int v13 = v12 - 2;
  if (v12 >= 2)
  {
    if (v11 <= 3) {
      uint64_t v14 = v11;
    }
    else {
      uint64_t v14 = 4;
    }
    switch(v14)
    {
      case 1:
        int v15 = *v10;
        goto LABEL_14;
      case 2:
        int v15 = *(unsigned __int16 *)v10;
        goto LABEL_14;
      case 3:
        int v15 = *(unsigned __int16 *)v10 | (v10[2] << 16);
        goto LABEL_14;
      case 4:
        int v15 = *(_DWORD *)v10;
LABEL_14:
        int v16 = (v15 | (v13 << (8 * v11))) + 2;
        unsigned int v12 = v15 + 2;
        if (v11 < 4) {
          unsigned int v12 = v16;
        }
        break;
      default:
        break;
    }
  }
  if (v12 == 1)
  {
    unsigned int v17 = *(uint64_t (**)(void))(v8 + 8);
    return v17();
  }
  else
  {
    return swift_release();
  }
}

void *initializeWithCopy for Sheet(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(void *)(a3 + 16);
  unint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  uint64_t v7 = *(void *)(v5 - 8) + 16;
  uint64_t v8 = *(unsigned __int8 *)(*(void *)(v5 - 8) + 80);
  uint64_t v9 = ((unint64_t)a1 + v8 + 16) & ~v8;
  uint64_t v10 = ((unint64_t)a2 + v8 + 16) & ~v8;
  swift_bridgeObjectRetain();
  v6(v9, v10, v5);
  uint64_t v11 = *(void *)(v7 + 48) + 7;
  unint64_t v12 = (v11 + v9) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v13 = (v11 + v10) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)v13 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)unint64_t v12 = *(_OWORD *)v13;
  }
  else
  {
    uint64_t v14 = *(void *)(v13 + 8);
    *(void *)unint64_t v12 = *(void *)v13;
    *(void *)(v12 + 8) = v14;
    swift_retain();
  }
  uint64_t v15 = *(void *)(type metadata accessor for DismissAction() - 8);
  uint64_t v16 = v15;
  uint64_t v17 = *(_DWORD *)(v15 + 80) & 0xF8 | 7;
  uint64_t v18 = (void *)((v12 + v17 + 16) & ~v17);
  uint64_t v19 = (unsigned __int8 *)((v13 + v17 + 16) & ~v17);
  if (*(void *)(v15 + 64) <= 8uLL) {
    uint64_t v20 = 8;
  }
  else {
    uint64_t v20 = *(void *)(v15 + 64);
  }
  unsigned int v21 = v19[v20];
  unsigned int v22 = v21 - 2;
  if (v21 >= 2)
  {
    if (v20 <= 3) {
      uint64_t v23 = v20;
    }
    else {
      uint64_t v23 = 4;
    }
    switch(v23)
    {
      case 1:
        int v24 = *v19;
        goto LABEL_16;
      case 2:
        int v24 = *(unsigned __int16 *)v19;
        goto LABEL_16;
      case 3:
        int v24 = *(unsigned __int16 *)v19 | (v19[2] << 16);
        goto LABEL_16;
      case 4:
        int v24 = *(_DWORD *)v19;
LABEL_16:
        int v25 = (v24 | (v22 << (8 * v20))) + 2;
        unsigned int v21 = v24 + 2;
        if (v20 < 4) {
          unsigned int v21 = v25;
        }
        break;
      default:
        break;
    }
  }
  if (v21 == 1)
  {
    (*(void (**)(void *))(v16 + 16))(v18);
    char v26 = 1;
  }
  else
  {
    *uint64_t v18 = *(void *)v19;
    swift_retain();
    char v26 = 0;
  }
  *((unsigned char *)v18 + v20) = v26;
  return a1;
}

void *assignWithCopy for Sheet(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v7 = v6 + 24;
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = ((unint64_t)a1 + v8 + 16) & ~v8;
  uint64_t v10 = ((unint64_t)a2 + v8 + 16) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v6 + 24))(v9, v10);
  uint64_t v11 = *(void *)(v7 + 40) + 7;
  unint64_t v12 = (void *)((v11 + v9) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v13 = (unint64_t *)((v11 + v10) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v14 = *v13;
  if (*v12 < 0xFFFFFFFFuLL)
  {
    if (v14 >= 0xFFFFFFFF)
    {
      unint64_t v16 = v13[1];
      *unint64_t v12 = v14;
      v12[1] = v16;
      swift_retain();
      goto LABEL_8;
    }
  }
  else
  {
    if (v14 >= 0xFFFFFFFF)
    {
      unint64_t v15 = v13[1];
      *unint64_t v12 = v14;
      v12[1] = v15;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  *(_OWORD *)unint64_t v12 = *(_OWORD *)v13;
LABEL_8:
  uint64_t v17 = type metadata accessor for DismissAction();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(_DWORD *)(v18 + 80) & 0xF8 | 7;
  uint64_t v20 = (char *)v13 + v19;
  unsigned int v21 = (unsigned __int8 *)(((unint64_t)v12 + v19 + 16) & ~v19);
  unsigned int v22 = (unsigned __int8 *)((unint64_t)(v20 + 16) & ~v19);
  if (v21 != v22)
  {
    uint64_t v23 = v17;
    uint64_t v24 = *(void *)(v17 - 8);
    if (*(void *)(v18 + 64) <= 8uLL) {
      uint64_t v25 = 8;
    }
    else {
      uint64_t v25 = *(void *)(v18 + 64);
    }
    unsigned int v26 = v21[v25];
    unsigned int v27 = v26 - 2;
    if (v26 >= 2)
    {
      if (v25 <= 3) {
        uint64_t v28 = v25;
      }
      else {
        uint64_t v28 = 4;
      }
      switch(v28)
      {
        case 1:
          int v29 = *v21;
          goto LABEL_21;
        case 2:
          int v29 = *(unsigned __int16 *)v21;
          goto LABEL_21;
        case 3:
          int v29 = *(unsigned __int16 *)v21 | (v21[2] << 16);
          goto LABEL_21;
        case 4:
          int v29 = *(_DWORD *)v21;
LABEL_21:
          int v30 = (v29 | (v27 << (8 * v25))) + 2;
          unsigned int v26 = v29 + 2;
          if (v25 < 4) {
            unsigned int v26 = v30;
          }
          break;
        default:
          break;
      }
    }
    if (v26 == 1) {
      (*(void (**)(unsigned __int8 *, uint64_t))(v24 + 8))(v21, v17);
    }
    else {
      swift_release();
    }
    unsigned int v31 = v22[v25];
    unsigned int v32 = v31 - 2;
    if (v31 >= 2)
    {
      if (v25 <= 3) {
        uint64_t v33 = v25;
      }
      else {
        uint64_t v33 = 4;
      }
      switch(v33)
      {
        case 1:
          int v34 = *v22;
          goto LABEL_35;
        case 2:
          int v34 = *(unsigned __int16 *)v22;
          goto LABEL_35;
        case 3:
          int v34 = *(unsigned __int16 *)v22 | (v22[2] << 16);
          goto LABEL_35;
        case 4:
          int v34 = *(_DWORD *)v22;
LABEL_35:
          int v35 = (v34 | (v32 << (8 * v25))) + 2;
          unsigned int v31 = v34 + 2;
          if (v25 < 4) {
            unsigned int v31 = v35;
          }
          break;
        default:
          break;
      }
    }
    if (v31 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v24 + 16))(v21, v22, v23);
      v21[v25] = 1;
    }
    else
    {
      *(void *)unsigned int v21 = *(void *)v22;
      v21[v25] = 0;
      swift_retain();
    }
  }
  return a1;
}

_OWORD *initializeWithTake for Sheet(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = v4 + 32;
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = ((unint64_t)a1 + v6 + 16) & ~v6;
  uint64_t v8 = ((unint64_t)a2 + v6 + 16) & ~v6;
  (*(void (**)(uint64_t, uint64_t))(v4 + 32))(v7, v8);
  uint64_t v9 = *(void *)(v5 + 32) + 7;
  unint64_t v10 = (v9 + v7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v11 = (v9 + v8) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)v11 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)unint64_t v10 = *(_OWORD *)v11;
  }
  else
  {
    uint64_t v12 = *(void *)(v11 + 8);
    *(void *)unint64_t v10 = *(void *)v11;
    *(void *)(v10 + 8) = v12;
  }
  uint64_t v13 = *(void *)(type metadata accessor for DismissAction() - 8);
  uint64_t v14 = v13;
  uint64_t v15 = *(_DWORD *)(v13 + 80) & 0xF8 | 7;
  unint64_t v16 = (void *)((v10 + v15 + 16) & ~v15);
  uint64_t v17 = (unsigned __int8 *)((v11 + v15 + 16) & ~v15);
  if (*(void *)(v13 + 64) <= 8uLL) {
    uint64_t v18 = 8;
  }
  else {
    uint64_t v18 = *(void *)(v13 + 64);
  }
  unsigned int v19 = v17[v18];
  unsigned int v20 = v19 - 2;
  if (v19 >= 2)
  {
    if (v18 <= 3) {
      uint64_t v21 = v18;
    }
    else {
      uint64_t v21 = 4;
    }
    switch(v21)
    {
      case 1:
        int v22 = *v17;
        goto LABEL_16;
      case 2:
        int v22 = *(unsigned __int16 *)v17;
        goto LABEL_16;
      case 3:
        int v22 = *(unsigned __int16 *)v17 | (v17[2] << 16);
        goto LABEL_16;
      case 4:
        int v22 = *(_DWORD *)v17;
LABEL_16:
        int v23 = (v22 | (v20 << (8 * v18))) + 2;
        unsigned int v19 = v22 + 2;
        if (v18 < 4) {
          unsigned int v19 = v23;
        }
        break;
      default:
        break;
    }
  }
  if (v19 == 1)
  {
    (*(void (**)(void *))(v14 + 32))(v16);
    char v24 = 1;
  }
  else
  {
    char v24 = 0;
    void *v16 = *(void *)v17;
  }
  *((unsigned char *)v16 + v18) = v24;
  return a1;
}

void *assignWithTake for Sheet(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v8 = v7 + 40;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = ((unint64_t)a1 + v9 + 16) & ~v9;
  uint64_t v11 = ((unint64_t)a2 + v9 + 16) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v7 + 40))(v10, v11);
  uint64_t v12 = *(void *)(v8 + 24) + 7;
  uint64_t v13 = (void *)((v12 + v10) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v14 = (unint64_t *)((v12 + v11) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v15 = *v14;
  if (*v13 < 0xFFFFFFFFuLL)
  {
    if (v15 >= 0xFFFFFFFF)
    {
      unint64_t v17 = v14[1];
      *uint64_t v13 = v15;
      v13[1] = v17;
      goto LABEL_8;
    }
  }
  else
  {
    if (v15 >= 0xFFFFFFFF)
    {
      unint64_t v16 = v14[1];
      *uint64_t v13 = v15;
      v13[1] = v16;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
LABEL_8:
  uint64_t v18 = type metadata accessor for DismissAction();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(_DWORD *)(v19 + 80) & 0xF8 | 7;
  uint64_t v21 = (unsigned __int8 *)(((unint64_t)v13 + v20 + 16) & ~v20);
  int v22 = (unsigned __int8 *)(((unint64_t)v14 + v20 + 16) & ~v20);
  if (v21 != v22)
  {
    uint64_t v23 = v18;
    uint64_t v24 = *(void *)(v18 - 8);
    if (*(void *)(v19 + 64) <= 8uLL) {
      uint64_t v25 = 8;
    }
    else {
      uint64_t v25 = *(void *)(v19 + 64);
    }
    unsigned int v26 = v21[v25];
    unsigned int v27 = v26 - 2;
    if (v26 >= 2)
    {
      if (v25 <= 3) {
        uint64_t v28 = v25;
      }
      else {
        uint64_t v28 = 4;
      }
      switch(v28)
      {
        case 1:
          int v29 = *v21;
          goto LABEL_21;
        case 2:
          int v29 = *(unsigned __int16 *)v21;
          goto LABEL_21;
        case 3:
          int v29 = *(unsigned __int16 *)v21 | (v21[2] << 16);
          goto LABEL_21;
        case 4:
          int v29 = *(_DWORD *)v21;
LABEL_21:
          int v30 = (v29 | (v27 << (8 * v25))) + 2;
          unsigned int v26 = v29 + 2;
          if (v25 < 4) {
            unsigned int v26 = v30;
          }
          break;
        default:
          break;
      }
    }
    if (v26 == 1) {
      (*(void (**)(unsigned __int8 *, uint64_t))(v24 + 8))(v21, v18);
    }
    else {
      swift_release();
    }
    unsigned int v31 = v22[v25];
    unsigned int v32 = v31 - 2;
    if (v31 >= 2)
    {
      if (v25 <= 3) {
        uint64_t v33 = v25;
      }
      else {
        uint64_t v33 = 4;
      }
      switch(v33)
      {
        case 1:
          int v34 = *v22;
          goto LABEL_35;
        case 2:
          int v34 = *(unsigned __int16 *)v22;
          goto LABEL_35;
        case 3:
          int v34 = *(unsigned __int16 *)v22 | (v22[2] << 16);
          goto LABEL_35;
        case 4:
          int v34 = *(_DWORD *)v22;
LABEL_35:
          int v35 = (v34 | (v32 << (8 * v25))) + 2;
          unsigned int v31 = v34 + 2;
          if (v25 < 4) {
            unsigned int v31 = v35;
          }
          break;
        default:
          break;
      }
    }
    if (v31 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v24 + 32))(v21, v22, v23);
      char v36 = 1;
    }
    else
    {
      char v36 = 0;
      *(void *)uint64_t v21 = *(void *)v22;
    }
    v21[v25] = v36;
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for Sheet(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  if (v7 <= 0x7FFFFFFE) {
    unsigned int v8 = 2147483646;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(type metadata accessor for DismissAction() - 8);
  uint64_t v10 = 8;
  if (*(void *)(v9 + 64) > 8uLL) {
    uint64_t v10 = *(void *)(v9 + 64);
  }
  uint64_t v11 = *(unsigned __int8 *)(v6 + 80);
  if (!a2) {
    return 0;
  }
  if (a2 <= v8) {
    goto LABEL_25;
  }
  uint64_t v12 = *(_DWORD *)(v9 + 80) & 0xF8 | 7;
  unint64_t v13 = v10 + ((v12 + ((*(void *)(v6 + 64) + ((v11 + 16) & ~v11) + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v12) + 1;
  char v14 = 8 * v13;
  if (v13 <= 3)
  {
    unsigned int v17 = ((a2 - v8 + ~(-1 << v14)) >> v14) + 1;
    if (HIWORD(v17))
    {
      int v15 = *(_DWORD *)((char *)a1 + v13);
      if (!v15) {
        goto LABEL_25;
      }
      goto LABEL_17;
    }
    if (v17 > 0xFF)
    {
      int v15 = *(unsigned __int16 *)((char *)a1 + v13);
      if (!*(unsigned __int16 *)((char *)a1 + v13)) {
        goto LABEL_25;
      }
      goto LABEL_17;
    }
    if (v17 < 2)
    {
LABEL_25:
      if (v7 > 0x7FFFFFFE)
      {
        uint64_t v20 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v6 + 48);
        return v20(((unint64_t)a1 + v11 + 16) & ~v11, v7, v5);
      }
      else
      {
        unint64_t v19 = *((void *)a1 + 1);
        if (v19 >= 0xFFFFFFFF) {
          LODWORD(v19) = -1;
        }
        if ((v19 + 1) >= 2) {
          return v19;
        }
        else {
          return 0;
        }
      }
    }
  }
  int v15 = *((unsigned __int8 *)a1 + v13);
  if (!*((unsigned char *)a1 + v13)) {
    goto LABEL_25;
  }
LABEL_17:
  int v18 = (v15 - 1) << v14;
  if (v13 > 3) {
    int v18 = 0;
  }
  if (v13)
  {
    if (v13 > 3) {
      LODWORD(v13) = 4;
    }
    switch((int)v13)
    {
      case 2:
        LODWORD(v13) = *a1;
        break;
      case 3:
        LODWORD(v13) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v13) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v13) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v8 + (v13 | v18) + 1;
}

void storeEnumTagSinglePayload for Sheet(_WORD *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a4 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v22 = v8;
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  if (v9 <= 0x7FFFFFFE) {
    unsigned int v10 = 2147483646;
  }
  else {
    unsigned int v10 = *(_DWORD *)(v8 + 84);
  }
  uint64_t v11 = *(void *)(type metadata accessor for DismissAction() - 8);
  uint64_t v12 = 8;
  if (*(void *)(v11 + 64) > 8uLL) {
    uint64_t v12 = *(void *)(v11 + 64);
  }
  uint64_t v13 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v14 = *(_DWORD *)(v11 + 80) & 0xF8 | 7;
  size_t v15 = v12 + ((v14 + ((*(void *)(v8 + 64) + ((v13 + 16) & ~v13) + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v14) + 1;
  if (a3 <= v10)
  {
    int v16 = 0;
  }
  else if (v15 <= 3)
  {
    unsigned int v19 = ((a3 - v10 + ~(-1 << (8 * v15))) >> (8 * v15)) + 1;
    if (HIWORD(v19))
    {
      int v16 = 4;
    }
    else if (v19 >= 0x100)
    {
      int v16 = 2;
    }
    else
    {
      int v16 = v19 > 1;
    }
  }
  else
  {
    int v16 = 1;
  }
  if (v10 < a2)
  {
    unsigned int v17 = ~v10 + a2;
    if (v15 < 4)
    {
      int v18 = (v17 >> (8 * v15)) + 1;
      if (v15)
      {
        int v20 = v17 & ~(-1 << (8 * v15));
        bzero(a1, v15);
        if (v15 == 3)
        {
          *a1 = v20;
          *((unsigned char *)a1 + 2) = BYTE2(v20);
        }
        else if (v15 == 2)
        {
          *a1 = v20;
        }
        else
        {
          *(unsigned char *)a1 = v20;
        }
      }
    }
    else
    {
      bzero(a1, v15);
      *(_DWORD *)a1 = v17;
      int v18 = 1;
    }
    switch(v16)
    {
      case 1:
        *((unsigned char *)a1 + v15) = v18;
        return;
      case 2:
        *(_WORD *)((char *)a1 + v15) = v18;
        return;
      case 3:
        goto LABEL_43;
      case 4:
        *(_DWORD *)((char *)a1 + v15) = v18;
        return;
      default:
        return;
    }
  }
  switch(v16)
  {
    case 1:
      *((unsigned char *)a1 + v15) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_26;
    case 2:
      *(_WORD *)((char *)a1 + v15) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_26;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x1003F2138);
    case 4:
      *(_DWORD *)((char *)a1 + v15) = 0;
      goto LABEL_25;
    default:
LABEL_25:
      if (a2)
      {
LABEL_26:
        if (v9 > 0x7FFFFFFE)
        {
          uint64_t v21 = *(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v22 + 56);
          v21(((unint64_t)a1 + v13 + 16) & ~v13, a2, v9, v7);
        }
        else if (a2 > 0x7FFFFFFE)
        {
          *(void *)a1 = 0;
          *((void *)a1 + 1) = 0;
          *(_DWORD *)a1 = a2 - 0x7FFFFFFF;
        }
        else
        {
          *((void *)a1 + 1) = a2;
        }
      }
      return;
  }
}

uint64_t Sheet.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v17[3] = a2;
  v17[1] = type metadata accessor for NavigationPath();
  v17[0] = *(void *)(a1 + 16);
  type metadata accessor for ModifiedContent();
  type metadata accessor for ModifiedContent();
  uint64_t v3 = *(void *)(a1 + 24);
  v17[17] = v3;
  v17[18] = &protocol witness table for _PaddingLayout;
  v17[15] = swift_getWitnessTable();
  v17[16] = &protocol witness table for _PaddingLayout;
  swift_getWitnessTable();
  type metadata accessor for ScrollView();
  swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  swift_getOpaqueTypeConformance2();
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  type metadata accessor for Sheet.Toolbar();
  swift_getWitnessTable();
  uint64_t v5 = swift_getOpaqueTypeMetadata2();
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v7 = swift_getOpaqueTypeConformance2();
  swift_getOpaqueTypeMetadata2();
  type metadata accessor for ModifiedContent();
  v17[11] = OpaqueTypeMetadata2;
  v17[12] = v5;
  v17[13] = OpaqueTypeConformance2;
  v17[14] = v7;
  v17[9] = swift_getOpaqueTypeConformance2();
  v17[10] = lazy protocol witness table accessor for type BottomGradientBlurMask and conformance BottomGradientBlurMask();
  swift_getWitnessTable();
  uint64_t v8 = type metadata accessor for NavigationStack();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin();
  uint64_t v11 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v13 = (char *)v17 - v12;
  v17[6] = v17[0];
  v17[7] = v3;
  v17[8] = v17[2];
  NavigationStack.init<>(root:)();
  uint64_t WitnessTable = swift_getWitnessTable();
  static ViewBuilder.buildExpression<A>(_:)(v11, v8, WitnessTable);
  size_t v15 = *(void (**)(char *, uint64_t))(v9 + 8);
  v15(v11, v8);
  static ViewBuilder.buildExpression<A>(_:)(v13, v8, WitnessTable);
  return ((uint64_t (*)(char *, uint64_t))v15)(v13, v8);
}

uint64_t closure #1 in Sheet.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v78 = a4;
  uint64_t v79 = a1;
  uint64_t v6 = type metadata accessor for NavigationBarItem.TitleDisplayMode();
  uint64_t v75 = *(void *)(v6 - 8);
  uint64_t v76 = v6;
  __chkstk_darwin();
  uint64_t v74 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = type metadata accessor for ScrollBounceBehavior();
  uint64_t v72 = *(void *)(v73 - 8);
  __chkstk_darwin();
  long long v52 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ModifiedContent();
  uint64_t v9 = type metadata accessor for ModifiedContent();
  uint64_t v92 = a3;
  uint64_t v93 = &protocol witness table for _PaddingLayout;
  uint64_t v80 = a3;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v91 = &protocol witness table for _PaddingLayout;
  uint64_t v61 = v9;
  uint64_t v59 = swift_getWitnessTable();
  uint64_t v10 = type metadata accessor for ScrollView();
  uint64_t v71 = *(void *)(v10 - 8);
  __chkstk_darwin();
  uint64_t v53 = (char *)&v51 - v11;
  uint64_t v12 = swift_getWitnessTable();
  uint64_t v86 = v10;
  uint64_t v87 = v12;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v70 = *(void *)(OpaqueTypeMetadata2 - 8);
  __chkstk_darwin();
  uint64_t v65 = (char *)&v51 - v14;
  uint64_t v86 = v10;
  uint64_t v87 = v12;
  uint64_t v66 = v12;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v86 = OpaqueTypeMetadata2;
  uint64_t v87 = OpaqueTypeConformance2;
  uint64_t v16 = swift_getOpaqueTypeMetadata2();
  uint64_t v68 = *(void *)(v16 - 8);
  __chkstk_darwin();
  uint64_t v63 = (char *)&v51 - v17;
  uint64_t v18 = type metadata accessor for Sheet.Toolbar();
  uint64_t v19 = swift_getWitnessTable();
  uint64_t v86 = v18;
  uint64_t v87 = v19;
  uint64_t v20 = swift_getOpaqueTypeMetadata2();
  uint64_t v69 = OpaqueTypeMetadata2;
  uint64_t v86 = OpaqueTypeMetadata2;
  uint64_t v87 = OpaqueTypeConformance2;
  uint64_t v62 = OpaqueTypeConformance2;
  uint64_t v21 = v52;
  uint64_t v22 = swift_getOpaqueTypeConformance2();
  uint64_t v86 = v18;
  uint64_t v87 = v19;
  uint64_t v23 = swift_getOpaqueTypeConformance2();
  uint64_t v67 = v16;
  uint64_t v86 = v16;
  uint64_t v87 = v20;
  uint64_t v54 = v20;
  uint64_t v57 = v22;
  uint64_t v88 = v22;
  uint64_t v89 = v23;
  uint64_t v55 = v23;
  uint64_t v58 = *(void *)(swift_getOpaqueTypeMetadata2() - 8);
  __chkstk_darwin();
  uint64_t v25 = (char *)&v51 - v24;
  uint64_t v60 = v26;
  uint64_t v27 = type metadata accessor for ModifiedContent();
  uint64_t v64 = *(void *)(v27 - 8);
  __chkstk_darwin();
  int v29 = (char *)&v51 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v56 = (char *)&v51 - v30;
  uint64_t v77 = a2;
  uint64_t v81 = a2;
  uint64_t v82 = v80;
  uint64_t v83 = v79;
  static Axis.Set.vertical.getter();
  unsigned int v31 = v53;
  ScrollView.init(_:showsIndicators:content:)();
  static ScrollBounceBehavior.basedOnSize.getter();
  unsigned __int8 v32 = static Axis.Set.vertical.getter();
  Axis.Set.init(rawValue:)();
  Axis.Set.init(rawValue:)();
  if (Axis.Set.init(rawValue:)() != v32) {
    Axis.Set.init(rawValue:)();
  }
  uint64_t v33 = v65;
  View.scrollBounceBehavior(_:axes:)();
  (*(void (**)(char *, uint64_t))(v72 + 8))(v21, v73);
  (*(void (**)(char *, uint64_t))(v71 + 8))(v31, v10);
  uint64_t v35 = v75;
  uint64_t v34 = v76;
  char v36 = v74;
  (*(void (**)(char *, void, uint64_t))(v75 + 104))(v74, enum case for NavigationBarItem.TitleDisplayMode.inline(_:), v76);
  uint64_t v37 = v63;
  uint64_t v38 = v69;
  View.navigationBarTitleDisplayMode(_:)();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v36, v34);
  (*(void (**)(char *, uint64_t))(v70 + 8))(v33, v38);
  __chkstk_darwin();
  uint64_t v39 = v80;
  *(&v51 - 4) = v77;
  *(&v51 - 3) = v39;
  *(&v51 - 2) = v79;
  uint64_t v40 = swift_checkMetadataState();
  uint64_t v41 = v67;
  uint64_t v42 = v57;
  uint64_t v43 = v55;
  View.toolbar<A>(content:)();
  (*(void (**)(char *, uint64_t))(v68 + 8))(v37, v41);
  uint64_t v86 = v41;
  uint64_t v87 = v40;
  uint64_t v88 = v42;
  uint64_t v89 = v43;
  uint64_t v44 = swift_getOpaqueTypeConformance2();
  uint64_t v45 = v60;
  View.bottomGradientBlurMask(height:trailingGutterWidth:)();
  (*(void (**)(char *, uint64_t))(v58 + 8))(v25, v45);
  unint64_t v46 = lazy protocol witness table accessor for type BottomGradientBlurMask and conformance BottomGradientBlurMask();
  uint64_t v84 = v44;
  unint64_t v85 = v46;
  uint64_t v47 = swift_getWitnessTable();
  uint64_t v48 = v56;
  static ViewBuilder.buildExpression<A>(_:)(v29, v27, v47);
  uint64_t v49 = *(void (**)(char *, uint64_t))(v64 + 8);
  v49(v29, v27);
  static ViewBuilder.buildExpression<A>(_:)(v48, v27, v47);
  return ((uint64_t (*)(char *, uint64_t))v49)(v48, v27);
}

uint64_t closure #1 in closure #1 in Sheet.body.getter@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  v16[1] = a2;
  uint64_t v3 = type metadata accessor for ModifiedContent();
  v16[0] = *(void *)(v3 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)v16 - v4;
  uint64_t v6 = type metadata accessor for ModifiedContent();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  uint64_t v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v11 = (char *)v16 - v10;
  type metadata accessor for Sheet();
  static Edge.Set.horizontal.getter();
  View.padding(_:_:)();
  static Edge.Set.vertical.getter();
  void v16[4] = a1;
  v16[5] = &protocol witness table for _PaddingLayout;
  uint64_t WitnessTable = swift_getWitnessTable();
  View.padding(_:_:)();
  (*(void (**)(char *, uint64_t))(v16[0] + 8))(v5, v3);
  v16[2] = WitnessTable;
  v16[3] = &protocol witness table for _PaddingLayout;
  uint64_t v13 = swift_getWitnessTable();
  static ViewBuilder.buildExpression<A>(_:)(v9, v6, v13);
  uint64_t v14 = *(void (**)(char *, uint64_t))(v7 + 8);
  v14(v9, v6);
  static ViewBuilder.buildExpression<A>(_:)(v11, v6, v13);
  return ((uint64_t (*)(char *, uint64_t))v14)(v11, v6);
}

uint64_t closure #2 in closure #1 in Sheet.body.getter@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v37 = a4;
  uint64_t v7 = type metadata accessor for DismissAction();
  uint64_t v32 = *(void *)(v7 - 8);
  uint64_t v33 = v7;
  uint64_t v8 = *(void *)(v32 + 64);
  __chkstk_darwin();
  unsigned int v31 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v30 = (uint64_t)&v30 - v9;
  uint64_t v35 = a2;
  uint64_t v36 = a3;
  uint64_t v10 = type metadata accessor for Sheet();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin();
  uint64_t v14 = (char *)&v30 - v13;
  uint64_t v15 = a1[1];
  uint64_t v34 = *a1;
  uint64_t v16 = (uint64_t *)((char *)a1 + *(int *)(v12 + 40));
  uint64_t v18 = *v16;
  uint64_t v17 = v16[1];
  if (*v16)
  {
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = v18;
    *(void *)(v19 + 24) = v17;
    uint64_t v20 = partial apply for closure #2 in ActionMenuView.body.getter;
  }
  else
  {
    uint64_t v20 = 0;
    uint64_t v19 = 0;
  }
  (*(void (**)(char *, uint64_t *, uint64_t))(v11 + 16))(v14, a1, v10);
  swift_bridgeObjectRetain();
  if (v18)
  {
    outlined copy of (@escaping @callee_guaranteed () -> ())?(v18);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  }
  else
  {
    outlined copy of (@escaping @callee_guaranteed () -> ())?(0);
    uint64_t v21 = v30;
    specialized Environment.wrappedValue.getter(v30);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    uint64_t v23 = v31;
    uint64_t v22 = v32;
    uint64_t v24 = v33;
    (*(void (**)(char *, uint64_t, uint64_t))(v32 + 16))(v31, v21, v33);
    unint64_t v25 = (*(unsigned __int8 *)(v22 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
    uint64_t v26 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v22 + 32))(v26 + v25, v23, v24);
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v24);
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = partial apply for implicit closure #3 in implicit closure #2 in implicit closure #1 in closure #2 in closure #1 in Sheet.body.getter;
    *(void *)(v19 + 24) = v26;
    uint64_t v20 = partial apply for closure #3 in View.actionContextMenu<A, B>(title:menu:excluding:preview:previewAction:);
  }
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = v20;
  *(void *)(v27 + 24) = v19;
  uint64_t v38 = v34;
  uint64_t v39 = v15;
  uint64_t v40 = partial apply for thunk for @escaping @callee_guaranteed () -> (@out ());
  uint64_t v41 = v27;
  uint64_t v28 = type metadata accessor for Sheet.Toolbar();
  swift_getWitnessTable();
  (*(void (**)(void *, uint64_t *, uint64_t))(*(void *)(v28 - 8) + 16))(v42, &v38, v28);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v38 = v42[0];
  uint64_t v39 = v42[1];
  uint64_t v40 = (uint64_t (*)())v42[2];
  uint64_t v41 = v42[3];
  static ToolbarContentBuilder.buildBlock<A>(_:)();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t Sheet.Toolbar.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v38 = a7;
  uint64_t v30 = a5;
  uint64_t v36 = type metadata accessor for Sheet.Toolbar.CloseButton();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v13 = type metadata accessor for ToolbarItem();
  uint64_t v37 = *(void *)(v13 - 8);
  __chkstk_darwin();
  uint64_t v32 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v33 = (char *)&v29 - v15;
  uint64_t v16 = type metadata accessor for ToolbarItemPlacement();
  uint64_t v39 = *(void *)(v16 - 8);
  uint64_t v40 = v16;
  __chkstk_darwin();
  uint64_t v18 = (char *)&v29 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v20 = (char *)&v29 - v19;
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ToolbarItem<(), ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<TextAlignment>>, AccessibilityAttachmentModifier>?>);
  uint64_t v34 = *(void *)(v31 - 8);
  __chkstk_darwin();
  uint64_t v22 = (char *)&v29 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  static ToolbarItemPlacement.principal.getter();
  uint64_t v47 = a5;
  uint64_t v48 = a6;
  uint64_t v49 = a1;
  uint64_t v50 = a2;
  uint64_t v51 = a3;
  uint64_t v52 = a4;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<TextAlignment>>, AccessibilityAttachmentModifier>?);
  lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<TextAlignment>>, AccessibilityAttachmentModifier>? and conformance <A> A?();
  ToolbarItem<>.init(placement:content:)();
  static ToolbarItemPlacement.automatic.getter();
  (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v18, v20, v40);
  uint64_t v41 = v30;
  uint64_t v42 = a6;
  uint64_t v43 = a1;
  uint64_t v44 = a2;
  uint64_t v45 = a3;
  uint64_t v46 = a4;
  uint64_t v23 = v32;
  ToolbarItem<>.init(placement:content:)();
  swift_getWitnessTable();
  uint64_t v24 = v37;
  uint64_t v25 = (uint64_t)v33;
  (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v33, v23, v13);
  uint64_t v26 = *(void (**)(char *, uint64_t))(v24 + 8);
  v26(v23, v13);
  lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type ToolbarItem<(), ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<TextAlignment>>, AccessibilityAttachmentModifier>?> and conformance ToolbarItem<A, B>, &demangling cache variable for type metadata for ToolbarItem<(), ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<TextAlignment>>, AccessibilityAttachmentModifier>?>);
  uint64_t v27 = v31;
  static ToolbarContentBuilder.buildBlock<A, B>(_:_:)((uint64_t)v22, v25, v31, v13);
  v26((char *)v25, v13);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v20, v40);
  return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v22, v27);
}

uint64_t closure #1 in Sheet.Toolbar.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for AccessibilityTraits();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<TextAlignment>>, AccessibilityAttachmentModifier>);
  __chkstk_darwin();
  uint64_t v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    uint64_t v35 = a1;
    uint64_t v36 = a2;
    uint64_t v33 = v11;
    uint64_t v34 = v10;
    _sS2SSysWl_1();
    swift_bridgeObjectRetain();
    uint64_t v14 = Text.init<A>(_:)();
    uint64_t v16 = v15;
    char v18 = v17;
    uint64_t v20 = v19;
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v22 = static Font.headline.getter();
    uint64_t v32 = a3;
    uint64_t v23 = v22;
    uint64_t v24 = swift_getKeyPath();
    uint64_t v31 = v6;
    uint64_t v25 = v24;
    uint64_t v26 = swift_getKeyPath();
    uint64_t v35 = v14;
    uint64_t v36 = v16;
    char v37 = v18 & 1;
    uint64_t v38 = v20;
    uint64_t v39 = KeyPath;
    uint64_t v40 = 1;
    char v41 = 0;
    uint64_t v42 = v25;
    uint64_t v43 = v23;
    uint64_t v44 = v26;
    char v45 = 1;
    static AccessibilityTraits.isHeader.getter();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<TextAlignment>>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<TextAlignment>> and conformance <> ModifiedContent<A, B>();
    View.accessibilityAddTraits(_:)();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v31);
    outlined consume of Text.Storage(v35, v36, v37);
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v27 = v32;
    outlined init with take of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<TextAlignment>>, AccessibilityAttachmentModifier>((uint64_t)v13, v32);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v33 + 56))(v27, 0, 1, v34);
  }
  else
  {
    uint64_t v29 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 56);
    return v29(a3, 1, 1);
  }
}

uint64_t closure #3 in Sheet.Toolbar.body.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = a3;
  uint64_t v8 = a4;
  uint64_t v4 = type metadata accessor for Sheet.Toolbar.CloseButton();
  uint64_t WitnessTable = swift_getWitnessTable();
  static ViewBuilder.buildExpression<A>(_:)(&v7, v4, WitnessTable);
  uint64_t v7 = v9;
  uint64_t v8 = v10;
  static ViewBuilder.buildExpression<A>(_:)(&v7, v4, WitnessTable);
  return swift_release();
}

uint64_t static ToolbarContentBuilder.buildBlock<A, B>(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_getTupleTypeMetadata2();
  uint64_t v8 = __chkstk_darwin();
  uint64_t v10 = (char *)&v12 + *(int *)(v8 + 48) - v9;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))((char *)&v12 - v9, a1, a3);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 16))(v10, a2, a4);
  return TupleToolbarContent.init(_:)();
}

uint64_t Sheet.Toolbar.CloseButton.body.getter()
{
  swift_retain();

  return Button.init(action:label:)();
}

uint64_t closure #1 in Sheet.Toolbar.CloseButton.body.getter@<X0>(uint64_t a1@<X8>)
{
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v2 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v4 = v3;
  char v6 = v5 & 1;
  uint64_t v7 = Text.bold()();
  uint64_t v9 = v8;
  char v11 = v10;
  uint64_t v13 = v12;
  outlined consume of Text.Storage(v2, v4, v6);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a1 = v7;
  *(void *)(a1 + 8) = v9;
  *(unsigned char *)(a1 + 16) = v11 & 1;
  *(void *)(a1 + 24) = v13;
  return result;
}

uint64_t protocol witness for View.body.getter in conformance Sheet<A>.Toolbar.CloseButton()
{
  return Sheet.Toolbar.CloseButton.body.getter();
}

uint64_t protocol witness for ToolbarContent.body.getter in conformance Sheet<A>.Toolbar@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return Sheet.Toolbar.body.getter(*v2, v2[1], v2[2], v2[3], *(void *)(a1 + 16), *(void *)(a1 + 24), a2);
}

uint64_t protocol witness for static ToolbarContent._makeToolbar(content:inputs:) in conformance Sheet<A>.Toolbar()
{
  return static ToolbarContent._makeToolbar(content:inputs:)();
}

uint64_t protocol witness for static ToolbarContent._makeContent(content:inputs:resolved:) in conformance Sheet<A>.Toolbar()
{
  return static ToolbarContent._makeContent(content:inputs:resolved:)();
}

uint64_t protocol witness for PresentationSizing.proposedSize(for:context:) in conformance DescriptionSheetSizing()
{
  return PresentationSizing.proposedSize(for:context:)();
}

{
  return 0x4080E00000000000;
}

uint64_t protocol witness for PresentationSizing.sizingOptions(context:) in conformance DescriptionSheetSizing()
{
  return PresentationSizing.sizingOptions(context:)();
}

uint64_t associated type witness table accessor for View.Body : View in Sheet<A>()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t type metadata accessor for Sheet.Toolbar()
{
  return __swift_instantiateGenericMetadata();
}

unint64_t lazy protocol witness table accessor for type BottomGradientBlurMask and conformance BottomGradientBlurMask()
{
  unint64_t result = lazy protocol witness table cache variable for type BottomGradientBlurMask and conformance BottomGradientBlurMask;
  if (!lazy protocol witness table cache variable for type BottomGradientBlurMask and conformance BottomGradientBlurMask)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type BottomGradientBlurMask and conformance BottomGradientBlurMask);
  }
  return result;
}

uint64_t partial apply for closure #1 in Sheet.body.getter@<X0>(uint64_t a1@<X8>)
{
  return closure #1 in Sheet.body.getter(v1[4], v1[2], v1[3], a1);
}

uint64_t partial apply for closure #1 in closure #1 in Sheet.body.getter@<X0>(uint64_t a1@<X8>)
{
  return closure #1 in closure #1 in Sheet.body.getter(*(void *)(v1 + 24), a1);
}

uint64_t partial apply for closure #2 in closure #1 in Sheet.body.getter@<X0>(uint64_t a1@<X8>)
{
  return closure #2 in closure #1 in Sheet.body.getter(*(uint64_t **)(v1 + 32), *(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_1003F40E8()
{
  uint64_t v1 = type metadata accessor for DismissAction();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);

  return swift_deallocObject();
}

void partial apply for implicit closure #3 in implicit closure #2 in implicit closure #1 in closure #2 in closure #1 in Sheet.body.getter()
{
}

uint64_t sub_1003F41D4()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t objectdestroyTm_15()
{
  uint64_t v1 = *(void *)(v0 + 16);
  long long v5 = *(_OWORD *)(v0 + 24);
  uint64_t v2 = (int *)(type metadata accessor for ExpandableTextView() - 8);
  uint64_t v3 = v0
     + ((*(unsigned __int8 *)(*(void *)v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v2 + 80));
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v3 + v2[16], v1);
  (*(void (**)(uint64_t))(*(void *)(v5 - 8) + 8))(v3 + v2[17]);
  swift_release();
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #5 in ExpandableTextView.body.getter()
{
  return partial apply for closure #1 in ExpandableTextView.body.getter();
}

uint64_t partial apply for closure #2 in closure #5 in ExpandableTextView.body.getter()
{
  return partial apply for closure #2 in ExpandableTextView.body.getter(closure #2 in closure #5 in ExpandableTextView.body.getter);
}

uint64_t partial apply for closure #2 in ExpandableTextView.body.getter(uint64_t (*a1)(void, void, void, void, void))
{
  return a1(v1[6], v1[2], v1[3], v1[4], v1[5]);
}

uint64_t outlined init with take of MoreLabel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MoreLabel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t destroy for Sheet.Toolbar()
{
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t initializeWithCopy for Sheet.Toolbar(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = v3;
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

void *assignWithCopy for Sheet.Toolbar(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for Sheet.Toolbar(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = v4;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for Sheet.Toolbar(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Sheet.Toolbar(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_1003F4674()
{
  return swift_getWitnessTable();
}

uint64_t associated type witness table accessor for ToolbarContent.Body : ToolbarContent in Sheet<A>.Toolbar()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t type metadata accessor for Sheet.Toolbar.CloseButton()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t partial apply for closure #1 in Sheet.Toolbar.body.getter@<X0>(uint64_t a1@<X8>)
{
  return closure #1 in Sheet.Toolbar.body.getter(*(void *)(v1 + 32), *(void *)(v1 + 40), a1);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<TextAlignment>>, AccessibilityAttachmentModifier>? and conformance <A> A?()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<TextAlignment>>, AccessibilityAttachmentModifier>? and conformance <A> A?;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<TextAlignment>>, AccessibilityAttachmentModifier>? and conformance <A> A?)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<TextAlignment>>, AccessibilityAttachmentModifier>?);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<TextAlignment>>, AccessibilityAttachmentModifier> and conformance <> ModifiedContent<A, B>();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<TextAlignment>>, AccessibilityAttachmentModifier>? and conformance <A> A?);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<TextAlignment>>, AccessibilityAttachmentModifier> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<TextAlignment>>, AccessibilityAttachmentModifier> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<TextAlignment>>, AccessibilityAttachmentModifier> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<TextAlignment>>, AccessibilityAttachmentModifier>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<TextAlignment>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type MoreLabel and conformance MoreLabel(&_s7SwiftUI31AccessibilityAttachmentModifierVAcA04ViewE0AAWL_1, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<TextAlignment>>, AccessibilityAttachmentModifier> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<TextAlignment>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<TextAlignment>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<TextAlignment>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<TextAlignment>>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<TextAlignment>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<TextAlignment>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>);
    lazy protocol witness table accessor for type ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>((unint64_t *)&_s7SwiftUI30_EnvironmentKeyWritingModifierVyAA4FontVSgGACyxGAA04ViewF0AAWL_0, &_s7SwiftUI30_EnvironmentKeyWritingModifierVyAA4FontVSgGMD_0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>);
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>((unint64_t *)&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Int?>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t lazy protocol witness table accessor for type MoreLabel and conformance MoreLabel(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t partial apply for closure #3 in Sheet.Toolbar.body.getter()
{
  return closure #3 in Sheet.Toolbar.body.getter(v0[4], v0[5], v0[6], v0[7]);
}

uint64_t outlined init with take of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<TextAlignment>>, AccessibilityAttachmentModifier>(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<TextAlignment>>, AccessibilityAttachmentModifier>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003F4D6C()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ToolbarItem<(), ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<TextAlignment>>, AccessibilityAttachmentModifier>?>);
  type metadata accessor for Sheet.Toolbar.CloseButton();
  swift_getWitnessTable();
  type metadata accessor for ToolbarItem();
  swift_getTupleTypeMetadata2();
  type metadata accessor for TupleToolbarContent();

  return swift_getWitnessTable();
}

uint64_t associated type witness table accessor for View.Body : View in Sheet<A>.Toolbar.CloseButton()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1003F4E80()
{
  return lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&_s7SwiftUI6ButtonVyAA4TextVGACyxGAA4ViewAAWL_0, (uint64_t *)&_s7SwiftUI6ButtonVyAA4TextVGMD_0);
}

uint64_t _s7SwiftUI11ViewBuilderV10buildBlockyAA05TupleC0VyxxQp_tGxxQpRvzAA0C0RzlFZ_0(uint64_t *a1, unint64_t a2, uint64_t a3)
{
  long long v5 = (uint64_t *)(a3 & 0xFFFFFFFFFFFFFFFELL);
  if (a2 == 1)
  {
    uint64_t TupleTypeMetadata = *v5;
  }
  else
  {
    __chkstk_darwin();
    uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    if (a2)
    {
      unint64_t v9 = 0;
      if (a2 < 4) {
        goto LABEL_9;
      }
      if ((unint64_t)(v8 - (char *)v5) < 0x20) {
        goto LABEL_9;
      }
      unint64_t v9 = a2 & 0xFFFFFFFFFFFFFFFCLL;
      char v10 = (long long *)(v5 + 2);
      char v11 = v8 + 16;
      unint64_t v12 = a2 & 0xFFFFFFFFFFFFFFFCLL;
      do
      {
        long long v13 = *v10;
        *(v11 - 1) = *(v10 - 1);
        *char v11 = v13;
        v10 += 2;
        v11 += 2;
        v12 -= 4;
      }
      while (v12);
      if (v9 != a2)
      {
LABEL_9:
        unint64_t v14 = a2 - v9;
        uint64_t v15 = v9;
        uint64_t v16 = &v8[8 * v9];
        char v17 = &v5[v15];
        do
        {
          uint64_t v18 = *v17++;
          *(void *)uint64_t v16 = v18;
          v16 += 8;
          --v14;
        }
        while (v14);
      }
    }
    uint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
  }
  __chkstk_darwin();
  uint64_t v20 = (char *)&v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    uint64_t v21 = (int *)(TupleTypeMetadata + 32);
    unint64_t v22 = a2;
    do
    {
      if (a2 == 1) {
        int v23 = 0;
      }
      else {
        int v23 = *v21;
      }
      uint64_t v25 = *v5++;
      uint64_t v24 = v25;
      uint64_t v26 = *a1++;
      (*(void (**)(char *, uint64_t))(*(void *)(v24 - 8) + 16))(&v20[v23], v26);
      v21 += 4;
      --v22;
    }
    while (v22);
  }
  return TupleView.init(_:)();
}

uint64_t HeightLimitedButtonTextView.init(action:body:trailingView:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void (*a3)(void)@<X2>, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, uint64_t)@<X4>, uint64_t a5@<X8>)
{
  a3();
  uint64_t v9 = type metadata accessor for HeightLimitedButtonTextView();
  uint64_t result = a4(v9, v10, v11, v12);
  unint64_t v14 = (void *)(a5 + *(int *)(v9 + 56));
  void *v14 = a1;
  v14[1] = a2;
  return result;
}

uint64_t type metadata accessor for HeightLimitedButtonTextView()
{
  return swift_getGenericMetadata();
}

uint64_t HeightLimitedButtonTextView.body.getter@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v32 = a2;
  uint64_t v3 = a1[2];
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Int?>);
  type metadata accessor for ModifiedContent();
  type metadata accessor for ModifiedContent();
  uint64_t v30 = a1[3];
  swift_getTupleTypeMetadata2();
  type metadata accessor for TupleView();
  swift_getWitnessTable();
  type metadata accessor for ZStack();
  type metadata accessor for ModifiedContent();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v47 = &protocol witness table for _CompositingGroupEffect;
  uint64_t v29 = &protocol conformance descriptor for <> ModifiedContent<A, B>;
  swift_getWitnessTable();
  uint64_t v42 = type metadata accessor for Button();
  uint64_t v43 = type metadata accessor for PlainButtonStyle();
  uint64_t v44 = swift_getWitnessTable();
  unint64_t v45 = lazy protocol witness table accessor for type PlainButtonStyle and conformance PlainButtonStyle();
  swift_getOpaqueTypeMetadata2();
  swift_getTupleTypeMetadata2();
  v25[4] = type metadata accessor for TupleView();
  v25[3] = swift_getWitnessTable();
  v25[0] = type metadata accessor for ViewThatFits();
  uint64_t v28 = *(void *)(v25[0] - 8);
  __chkstk_darwin();
  long long v5 = (char *)v25 - v4;
  uint64_t v6 = type metadata accessor for ModifiedContent();
  uint64_t v27 = *(void *)(v6 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)v25 - v7;
  v25[1] = swift_getWitnessTable();
  _OWORD v25[2] = type metadata accessor for _OverlayModifier();
  uint64_t v9 = type metadata accessor for ModifiedContent();
  uint64_t v26 = *(void *)(v9 - 8);
  __chkstk_darwin();
  uint64_t v11 = (char *)v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  long long v13 = (char *)v25 - v12;
  uint64_t v14 = a1[4];
  uint64_t v15 = v3;
  uint64_t v16 = v31;
  View.hidden()();
  static Axis.Set.vertical.getter();
  uint64_t v33 = v15;
  uint64_t v34 = v30;
  uint64_t v17 = a1[5];
  uint64_t v35 = v14;
  uint64_t v36 = v17;
  uint64_t v37 = v16;
  ViewThatFits.init(in:content:)();
  static Alignment.center.getter();
  unint64_t v18 = lazy protocol witness table accessor for type _HiddenModifier and conformance _HiddenModifier();
  uint64_t v40 = v14;
  unint64_t v41 = v18;
  uint64_t v19 = swift_getWitnessTable();
  uint64_t v20 = v25[0];
  View.overlay<A>(_:alignment:)();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v5, v20);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v8, v6);
  uint64_t v21 = swift_getWitnessTable();
  uint64_t v38 = v19;
  uint64_t v39 = v21;
  uint64_t v22 = swift_getWitnessTable();
  static ViewBuilder.buildExpression<A>(_:)(v11, v9, v22);
  int v23 = *(void (**)(char *, uint64_t))(v26 + 8);
  v23(v11, v9);
  static ViewBuilder.buildExpression<A>(_:)(v13, v9, v22);
  return ((uint64_t (*)(char *, uint64_t))v23)(v13, v9);
}

unint64_t lazy protocol witness table accessor for type PlainButtonStyle and conformance PlainButtonStyle()
{
  unint64_t result = lazy protocol witness table cache variable for type PlainButtonStyle and conformance PlainButtonStyle;
  if (!lazy protocol witness table cache variable for type PlainButtonStyle and conformance PlainButtonStyle)
  {
    type metadata accessor for PlainButtonStyle();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PlainButtonStyle and conformance PlainButtonStyle);
  }
  return result;
}

uint64_t closure #1 in HeightLimitedButtonTextView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unint64_t a5@<X4>, uint64_t a6@<X8>)
{
  unint64_t v64 = a5;
  uint64_t v63 = a3;
  uint64_t v47 = a1;
  uint64_t v67 = a6;
  uint64_t v8 = type metadata accessor for PlainButtonStyle();
  uint64_t v54 = v8;
  uint64_t v66 = *(void *)(v8 - 8);
  __chkstk_darwin();
  uint64_t v65 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getTupleTypeMetadata2();
  type metadata accessor for TupleView();
  swift_getWitnessTable();
  type metadata accessor for ZStack();
  uint64_t v10 = type metadata accessor for ModifiedContent();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v83 = &protocol witness table for _CompositingGroupEffect;
  uint64_t v61 = v10;
  uint64_t v60 = swift_getWitnessTable();
  uint64_t v11 = type metadata accessor for Button();
  uint64_t v55 = v11;
  uint64_t v62 = *(void *)(v11 - 8);
  __chkstk_darwin();
  uint64_t v56 = (char *)&v46 - v12;
  uint64_t v13 = swift_getWitnessTable();
  uint64_t v53 = v13;
  unint64_t v52 = lazy protocol witness table accessor for type PlainButtonStyle and conformance PlainButtonStyle();
  uint64_t v78 = (char *)v11;
  uint64_t v79 = v8;
  uint64_t v80 = v13;
  unint64_t v81 = v52;
  uint64_t v57 = &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v59 = *(void *)(OpaqueTypeMetadata2 - 8);
  __chkstk_darwin();
  uint64_t v69 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v51 = (char *)&v46 - v15;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Int?>);
  uint64_t v46 = a2;
  uint64_t v16 = type metadata accessor for ModifiedContent();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin();
  uint64_t v19 = (char *)&v46 - v18;
  uint64_t v20 = type metadata accessor for ModifiedContent();
  uint64_t v68 = *(void *)(v20 - 8);
  __chkstk_darwin();
  uint64_t v22 = (char *)&v46 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v24 = (char *)&v46 - v23;
  View.lineLimit(_:)();
  unint64_t v25 = lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>();
  v77[4] = a4;
  v77[5] = v25;
  uint64_t v26 = a4;
  uint64_t v27 = swift_getWitnessTable();
  View.fixedSize(horizontal:vertical:)();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  v77[2] = v27;
  v77[3] = &protocol witness table for _FixedSizeLayout;
  uint64_t v48 = swift_getWitnessTable();
  uint64_t v28 = v24;
  static ViewBuilder.buildExpression<A>(_:)(v22, v20, v48);
  uint64_t v49 = *(void (**)(char *, uint64_t))(v68 + 8);
  uint64_t v50 = v68 + 8;
  v49(v22, v20);
  uint64_t v29 = v46;
  uint64_t v30 = v63;
  uint64_t v78 = (char *)v46;
  uint64_t v79 = v63;
  unint64_t v31 = v64;
  uint64_t v80 = v26;
  unint64_t v81 = v64;
  type metadata accessor for HeightLimitedButtonTextView();
  uint64_t v70 = v29;
  uint64_t v71 = v30;
  uint64_t v72 = v26;
  unint64_t v73 = v31;
  uint64_t v74 = v47;
  swift_retain();
  uint64_t v32 = v56;
  Button.init(action:label:)();
  uint64_t v33 = v65;
  PlainButtonStyle.init()();
  uint64_t v34 = v55;
  uint64_t v35 = v54;
  uint64_t v36 = v53;
  unint64_t v37 = v52;
  View.buttonStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v66 + 8))(v33, v35);
  (*(void (**)(char *, uint64_t))(v62 + 8))(v32, v34);
  uint64_t v78 = (char *)v34;
  uint64_t v79 = v35;
  uint64_t v80 = v36;
  unint64_t v81 = v37;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v39 = v51;
  uint64_t v40 = v69;
  uint64_t v41 = OpaqueTypeMetadata2;
  static ViewBuilder.buildExpression<A>(_:)(v69, OpaqueTypeMetadata2, OpaqueTypeConformance2);
  uint64_t v42 = v59;
  uint64_t v43 = *(void (**)(char *, uint64_t))(v59 + 8);
  v43(v40, v41);
  (*(void (**)(char *, char *, uint64_t))(v68 + 16))(v22, v28, v20);
  uint64_t v78 = v22;
  (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v40, v39, v41);
  uint64_t v79 = (uint64_t)v40;
  v77[0] = v20;
  v77[1] = v41;
  uint64_t v75 = v48;
  uint64_t v76 = OpaqueTypeConformance2;
  _s7SwiftUI11ViewBuilderV10buildBlockyAA05TupleC0VyxxQp_tGxxQpRvzAA0C0RzlFZ_0((uint64_t *)&v78, 2uLL, (uint64_t)v77);
  v43(v39, v41);
  uint64_t v44 = (uint64_t (*)(char *, uint64_t))v49;
  v49(v28, v20);
  v43(v40, v41);
  return v44(v22, v20);
}

uint64_t partial apply for closure #1 in HeightLimitedButtonTextView.body.getter()
{
  return partial apply for closure #1 in HeightLimitedButtonTextView.body.getter((uint64_t (*)(void, void, void, void, void))closure #1 in HeightLimitedButtonTextView.body.getter);
}

uint64_t closure #1 in closure #1 in HeightLimitedButtonTextView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v23 = a4;
  uint64_t v24 = a5;
  uint64_t v20 = a2;
  uint64_t v21 = a3;
  uint64_t v22 = a1;
  uint64_t v25 = a6;
  swift_getTupleTypeMetadata2();
  type metadata accessor for TupleView();
  swift_getWitnessTable();
  uint64_t v6 = type metadata accessor for ZStack();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v20 - v8;
  uint64_t v10 = type metadata accessor for ModifiedContent();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin();
  uint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v15 = (char *)&v20 - v14;
  static HorizontalAlignment.trailing.getter();
  static VerticalAlignment.lastTextBaseline.getter();
  uint64_t v26 = v20;
  uint64_t v27 = v21;
  uint64_t v28 = v23;
  uint64_t v29 = v24;
  uint64_t v30 = v22;
  ZStack.init(alignment:content:)();
  uint64_t WitnessTable = swift_getWitnessTable();
  View.compositingGroup()();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v31 = WitnessTable;
  uint64_t v32 = &protocol witness table for _CompositingGroupEffect;
  uint64_t v17 = swift_getWitnessTable();
  static ViewBuilder.buildExpression<A>(_:)(v13, v10, v17);
  uint64_t v18 = *(void (**)(char *, uint64_t))(v11 + 8);
  v18(v13, v10);
  static ViewBuilder.buildExpression<A>(_:)(v15, v10, v17);
  return ((uint64_t (*)(char *, uint64_t))v18)(v15, v10);
}

uint64_t closure #1 in closure #1 in closure #1 in HeightLimitedButtonTextView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v31 = a5;
  uint64_t v32 = a6;
  uint64_t v10 = *((void *)a3 - 1);
  __chkstk_darwin();
  uint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v14 = (char *)&v29 - v13;
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin();
  uint64_t v18 = (char *)&v29 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin();
  uint64_t v21 = (char *)&v29 - v20;
  uint64_t v30 = v22;
  static ViewBuilder.buildExpression<A>(_:)(v19, v23, v22);
  uint64_t v36 = (char *)a2;
  unint64_t v37 = a3;
  uint64_t v38 = a4;
  uint64_t v24 = v31;
  uint64_t v39 = v31;
  uint64_t v25 = type metadata accessor for HeightLimitedButtonTextView();
  static ViewBuilder.buildExpression<A>(_:)(a1 + *(int *)(v25 + 52), a3, v24);
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v18, v21, a2);
  uint64_t v36 = v18;
  (*(void (**)(char *, char *, char *))(v10 + 16))(v12, v14, a3);
  unint64_t v37 = v12;
  v35[0] = a2;
  v35[1] = a3;
  uint64_t v33 = v30;
  uint64_t v34 = v24;
  _s7SwiftUI11ViewBuilderV10buildBlockyAA05TupleC0VyxxQp_tGxxQpRvzAA0C0RzlFZ_0((uint64_t *)&v36, 2uLL, (uint64_t)v35);
  uint64_t v26 = *(void (**)(char *, char *))(v10 + 8);
  v26(v14, a3);
  uint64_t v27 = *(void (**)(char *, uint64_t))(v16 + 8);
  v27(v21, a2);
  v26(v12, a3);
  return ((uint64_t (*)(char *, uint64_t))v27)(v18, a2);
}

unint64_t lazy protocol witness table accessor for type _HiddenModifier and conformance _HiddenModifier()
{
  unint64_t result = lazy protocol witness table cache variable for type _HiddenModifier and conformance _HiddenModifier;
  if (!lazy protocol witness table cache variable for type _HiddenModifier and conformance _HiddenModifier)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type _HiddenModifier and conformance _HiddenModifier);
  }
  return result;
}

uint64_t associated type witness table accessor for View.Body : View in HeightLimitedButtonTextView<A, B>()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t type metadata completion function for HeightLimitedButtonTextView()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for HeightLimitedButtonTextView(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = *(void *)(a3 + 24);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(_DWORD *)(v8 + 80);
  uint64_t v10 = v6 + v9;
  uint64_t v11 = *(void *)(v8 + 64) + 7;
  unint64_t v12 = ((v11 + ((v6 + v9) & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 16;
  unsigned int v13 = v9 | *(_DWORD *)(v5 + 80) & 0xF8;
  if (v13 > 7 || ((*(_DWORD *)(v5 + 80) | *(_DWORD *)(v8 + 80)) & 0x100000) != 0 || v12 > 0x18)
  {
    uint64_t v16 = *a2;
    uint64_t *v4 = *a2;
    uint64_t v4 = (uint64_t *)(v16 + (((v13 | 7) + 16) & ~(unint64_t)(v13 | 7)));
  }
  else
  {
    uint64_t v17 = ~v9;
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    unint64_t v18 = ((unint64_t)a2 + v10) & v17;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))(((unint64_t)v4 + v10) & v17, v18, v7);
    uint64_t v19 = (void *)((v11 + v18) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v20 = v19[1];
    uint64_t v21 = (void *)((v11 + (((unint64_t)v4 + v10) & v17)) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v21 = *v19;
    v21[1] = v20;
  }
  swift_retain();
  return v4;
}

uint64_t destroy for HeightLimitedButtonTextView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v4)();
  (*(void (**)(unint64_t))(*(void *)(*(void *)(a2 + 24) - 8) + 8))((*(void *)(v4 + 56)
                                                                                            + a1
                                                                                            + *(unsigned __int8 *)(*(void *)(*(void *)(a2 + 24) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(a2 + 24) - 8) + 80));

  return swift_release();
}

uint64_t initializeWithCopy for HeightLimitedButtonTextView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 48);
  uint64_t v8 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v9 = v8 + 16;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (v11 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 16))(v12, v13);
  uint64_t v14 = *(void *)(v9 + 48) + 7;
  uint64_t v15 = (void *)((v14 + v12) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v16 = (void *)((v14 + v13) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v17 = v16[1];
  *uint64_t v15 = *v16;
  v15[1] = v17;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for HeightLimitedButtonTextView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 40);
  uint64_t v8 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v9 = v8 + 24;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (v11 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 24))(v12, v13);
  uint64_t v14 = *(void *)(v9 + 40) + 7;
  uint64_t v15 = (void *)((v14 + v12) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v16 = (void *)((v14 + v13) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v17 = v16[1];
  *uint64_t v15 = *v16;
  v15[1] = v17;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t initializeWithTake for HeightLimitedButtonTextView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 32);
  uint64_t v8 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v9 = v8 + 32;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (v11 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 32))(v12, v13);
  *(_OWORD *)((*(void *)(v9 + 32) + 7 + v12) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((*(void *)(v9 + 32) + 7 + v13) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t assignWithTake for HeightLimitedButtonTextView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 24);
  uint64_t v8 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v9 = v8 + 40;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (v11 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 40))(v12, v13);
  *(_OWORD *)((*(void *)(v9 + 24) + 7 + v12) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((*(void *)(v9 + 24) + 7 + v13) & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for HeightLimitedButtonTextView(int *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned int *)(v5 + 84);
  uint64_t v7 = *(void *)(*(void *)(a3 + 24) - 8);
  unsigned int v8 = *(_DWORD *)(v7 + 84);
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  if (v8 <= v6) {
    unsigned int v10 = *(_DWORD *)(v5 + 84);
  }
  else {
    unsigned int v10 = *(_DWORD *)(v7 + 84);
  }
  if (v10 <= 0x7FFFFFFF) {
    unsigned int v10 = 0x7FFFFFFF;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v11 = *(void *)(*(void *)(v4 - 8) + 64) + v9;
  uint64_t v12 = *(void *)(v7 + 64) + 7;
  if (v10 < a2)
  {
    unint64_t v13 = ((v12 + (v11 & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 16;
    unsigned int v14 = a2 - v10;
    uint64_t v15 = v13 & 0xFFFFFFF8;
    if ((v13 & 0xFFFFFFF8) != 0) {
      unsigned int v16 = 2;
    }
    else {
      unsigned int v16 = v14 + 1;
    }
    if (v16 >= 0x10000) {
      unsigned int v17 = 4;
    }
    else {
      unsigned int v17 = 2;
    }
    if (v16 < 0x100) {
      unsigned int v17 = 1;
    }
    if (v16 >= 2) {
      uint64_t v18 = v17;
    }
    else {
      uint64_t v18 = 0;
    }
    switch(v18)
    {
      case 1:
        int v19 = *((unsigned __int8 *)a1 + v13);
        if (!v19) {
          break;
        }
        goto LABEL_24;
      case 2:
        int v19 = *(unsigned __int16 *)((char *)a1 + v13);
        if (v19) {
          goto LABEL_24;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1003F6D84);
      case 4:
        int v19 = *(int *)((char *)a1 + v13);
        if (!v19) {
          break;
        }
LABEL_24:
        int v21 = v19 - 1;
        if (v15)
        {
          int v21 = 0;
          int v22 = *a1;
        }
        else
        {
          int v22 = 0;
        }
        return v10 + (v22 | v21) + 1;
      default:
        break;
    }
  }
  if (v6 == v10) {
    return (*(uint64_t (**)(int *, uint64_t, uint64_t))(v5 + 48))(a1, v6, v4);
  }
  unint64_t v23 = ((unint64_t)a1 + v11) & ~v9;
  if (v8 == v10) {
    return (*(uint64_t (**)(unint64_t))(v7 + 48))(v23);
  }
  unint64_t v24 = *(void *)((v12 + v23) & 0xFFFFFFFFFFFFFFF8);
  if (v24 >= 0xFFFFFFFF) {
    LODWORD(v24) = -1;
  }
  return (v24 + 1);
}

void storeEnumTagSinglePayload for HeightLimitedButtonTextView(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(void *)(a4 + 24);
  uint64_t v9 = *(void *)(v8 - 8);
  unsigned int v10 = *(_DWORD *)(v9 + 84);
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  if (v10 <= v7) {
    unsigned int v12 = *(_DWORD *)(v6 + 84);
  }
  else {
    unsigned int v12 = *(_DWORD *)(v9 + 84);
  }
  if (v12 <= 0x7FFFFFFF) {
    unsigned int v12 = 0x7FFFFFFF;
  }
  uint64_t v13 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + v11;
  uint64_t v14 = *(void *)(*(void *)(v8 - 8) + 64) + 7;
  unint64_t v15 = ((v14 + (v13 & ~v11)) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v12 >= a3)
  {
    int v19 = 0;
    int v20 = a2 - v12;
    if (a2 <= v12)
    {
LABEL_19:
      switch(v19)
      {
        case 1:
          a1[v15] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_32;
        case 2:
          *(_WORD *)&a1[v15] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_32;
        case 3:
          goto LABEL_49;
        case 4:
          *(_DWORD *)&a1[v15] = 0;
          goto LABEL_31;
        default:
LABEL_31:
          if (a2)
          {
LABEL_32:
            if (v7 == v12)
            {
              unint64_t v23 = *(void (**)(void))(v6 + 56);
              v23();
            }
            else
            {
              unint64_t v24 = (unint64_t)&a1[v13] & ~v11;
              if (v10 == v12)
              {
                uint64_t v25 = *(void (**)(unint64_t))(v9 + 56);
                v25(v24);
              }
              else
              {
                uint64_t v26 = (void *)((v14 + v24) & 0xFFFFFFFFFFFFFFF8);
                if ((a2 & 0x80000000) != 0)
                {
                  uint64_t v27 = a2 ^ 0x80000000;
                  v26[1] = 0;
                }
                else
                {
                  uint64_t v27 = a2 - 1;
                }
                void *v26 = v27;
              }
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v16 = a3 - v12;
    if (((v14 + (v13 & ~v11)) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      unsigned int v17 = v16 + 1;
    }
    else {
      unsigned int v17 = 2;
    }
    if (v17 >= 0x10000) {
      int v18 = 4;
    }
    else {
      int v18 = 2;
    }
    if (v17 < 0x100) {
      int v18 = 1;
    }
    if (v17 >= 2) {
      int v19 = v18;
    }
    else {
      int v19 = 0;
    }
    int v20 = a2 - v12;
    if (a2 <= v12) {
      goto LABEL_19;
    }
  }
  if (((v14 + (v13 & ~v11)) & 0xFFFFFFF8) == 0xFFFFFFF0) {
    int v21 = v20;
  }
  else {
    int v21 = 1;
  }
  if (((v14 + (v13 & ~v11)) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    int v22 = ~v12 + a2;
    bzero(a1, ((v14 + (v13 & ~v11)) & 0xFFFFFFFFFFFFFFF8) + 16);
    *(_DWORD *)a1 = v22;
  }
  switch(v19)
  {
    case 1:
      a1[v15] = v21;
      break;
    case 2:
      *(_WORD *)&a1[v15] = v21;
      break;
    case 3:
LABEL_49:
      __break(1u);
      JUMPOUT(0x1003F7030);
    case 4:
      *(_DWORD *)&a1[v15] = v21;
      break;
    default:
      return;
  }
}

uint64_t sub_1003F7058()
{
  return swift_getWitnessTable();
}

unint64_t lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>()
{
  unint64_t result = lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>;
  if (!lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Int?>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>);
  }
  return result;
}

uint64_t partial apply for closure #1 in closure #1 in HeightLimitedButtonTextView.body.getter()
{
  return partial apply for closure #1 in HeightLimitedButtonTextView.body.getter((uint64_t (*)(void, void, void, void, void))closure #1 in closure #1 in HeightLimitedButtonTextView.body.getter);
}

uint64_t partial apply for closure #1 in closure #1 in closure #1 in HeightLimitedButtonTextView.body.getter()
{
  return partial apply for closure #1 in HeightLimitedButtonTextView.body.getter((uint64_t (*)(void, void, void, void, void))closure #1 in closure #1 in closure #1 in HeightLimitedButtonTextView.body.getter);
}

uint64_t partial apply for closure #1 in HeightLimitedButtonTextView.body.getter(uint64_t (*a1)(void, void, void, void, void))
{
  return a1(v1[6], v1[2], v1[3], v1[4], v1[5]);
}

uint64_t MoreLabel.init(color:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for MoreLabel();
  uint64_t v5 = (void *)((char *)a2 + *(int *)(v4 + 20));
  *uint64_t v5 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<LayoutDirection>.Content);
  swift_storeEnumTagMultiPayload();
  uint64_t v6 = (char *)a2 + *(int *)(v4 + 24);
  uint64_t result = swift_getKeyPath();
  *(void *)uint64_t v6 = result;
  v6[8] = 0;
  *a2 = a1;
  return result;
}

uint64_t type metadata accessor for MoreLabel()
{
  uint64_t result = type metadata singleton initialization cache for MoreLabel;
  if (!type metadata singleton initialization cache for MoreLabel) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t MoreLabel.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v113 = a1;
  type metadata accessor for _BlendModeEffect();
  __chkstk_darwin();
  char v112 = (char *)&v88 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v111 = type metadata accessor for BlendMode();
  uint64_t v115 = *(void *)(v111 - 8);
  __chkstk_darwin();
  uint64_t v109 = (char *)&v88 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(ModifiedContent<LinearGradient, _FrameLayout>, Color)>>, _BlendModeEffect>)
       - 8;
  __chkstk_darwin();
  char v108 = (char *)&v88 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = type metadata accessor for Text.LineStyle.Pattern();
  *(void *)&long long v106 = *(void *)(v107 - 8);
  __chkstk_darwin();
  uint64_t v105 = (char *)&v88 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Text.Case?>)
      - 8;
  __chkstk_darwin();
  uint64_t v6 = (uint64_t *)((char *)&v88 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Text.Case?);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v88 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Text, _EnvironmentKeyWritingModifier<Text.Case?>>);
  __chkstk_darwin();
  unsigned int v10 = (char *)&v88 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.fontWeight(_:)>>.0);
  uint64_t v96 = *(void *)(v97 - 8);
  __chkstk_darwin();
  uint64_t v90 = (char *)&v88 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Font?>>)
      - 8;
  __chkstk_darwin();
  uint64_t v91 = (char *)&v88 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>);
  __chkstk_darwin();
  uint64_t v93 = (uint64_t)&v88 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.underline(_:pattern:color:)>>.0);
  uint64_t v102 = *(void *)(v104 - 8);
  __chkstk_darwin();
  Swift::String v98 = (char *)&v88 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.underline(_:pattern:color:)>>.0, _PaddingLayout>)
       - 8;
  __chkstk_darwin();
  uint64_t v100 = (char *)&v88 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.underline(_:pattern:color:)>>.0, _PaddingLayout>, _PaddingLayout>)
       - 8;
  __chkstk_darwin();
  uint64_t v114 = (uint64_t)&v88 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  Int.seconds.getter(44);
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v17 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v19 = v18;
  uint64_t v21 = v20;
  char v23 = v22 & 1;
  uint64_t v24 = enum case for Text.Case.uppercase(_:);
  uint64_t v25 = type metadata accessor for Text.Case();
  uint64_t v26 = *(void *)(v25 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 104))(v8, v24, v25);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v8, 0, 1, v25);
  uint64_t KeyPath = swift_getKeyPath();
  outlined init with copy of (String, Any)((uint64_t)v8, (uint64_t)v6 + *(int *)(v92 + 36), &demangling cache variable for type metadata for Text.Case?);
  uint64_t *v6 = KeyPath;
  outlined init with copy of (String, Any)((uint64_t)v6, (uint64_t)&v10[*(int *)(v89 + 36)], &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Text.Case?>);
  *(void *)unsigned int v10 = v17;
  *((void *)v10 + 1) = v19;
  v10[16] = v23;
  *((void *)v10 + 3) = v21;
  outlined copy of Text.Storage(v17, v19, v23);
  swift_bridgeObjectRetain();
  outlined destroy of TaskPriority?((uint64_t)v6, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Text.Case?>);
  outlined destroy of TaskPriority?((uint64_t)v8, &demangling cache variable for type metadata for Text.Case?);
  outlined consume of Text.Storage(v17, v19, v23);
  swift_bridgeObjectRelease();
  static Font.Weight.bold.getter();
  lazy protocol witness table accessor for type ModifiedContent<Text, _EnvironmentKeyWritingModifier<Text.Case?>> and conformance <> ModifiedContent<A, B>();
  uint64_t v28 = v90;
  View.fontWeight(_:)();
  outlined destroy of TaskPriority?((uint64_t)v10, &demangling cache variable for type metadata for ModifiedContent<Text, _EnvironmentKeyWritingModifier<Text.Case?>>);
  uint64_t v29 = static Font.footnote.getter();
  uint64_t v30 = swift_getKeyPath();
  uint64_t v31 = v96;
  uint64_t v32 = (uint64_t)v91;
  uint64_t v33 = v97;
  (*(void (**)(char *, char *, uint64_t))(v96 + 16))(v91, v28, v97);
  uint64_t v34 = (uint64_t *)(v32 + *(int *)(v94 + 44));
  *uint64_t v34 = v30;
  v34[1] = v29;
  (*(void (**)(char *, uint64_t))(v31 + 8))(v28, v33);
  uint64_t v35 = v99;
  uint64_t v36 = *v99;
  uint64_t v37 = swift_getKeyPath();
  uint64_t v38 = v93;
  outlined init with copy of (String, Any)(v32, v93, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Font?>>);
  uint64_t v39 = (uint64_t *)(v38 + *(int *)(v95 + 36));
  *uint64_t v39 = v37;
  v39[1] = v36;
  swift_retain();
  outlined destroy of TaskPriority?(v32, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Font?>>);
  uint64_t v40 = (char *)v35 + *(int *)(type metadata accessor for MoreLabel() + 24);
  uint64_t v41 = *(void *)v40;
  LOBYTE(v37) = v40[8];
  outlined copy of Environment<Bool>.Content(*(void *)v40, v37);
  specialized Environment.wrappedValue.getter(v41, v37);
  outlined consume of Environment<SymbolButton.MaterialColor?>.Content(v41, v37);
  uint64_t v42 = v105;
  static Text.LineStyle.Pattern.solid.getter();
  lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>();
  uint64_t v43 = v98;
  View.underline(_:pattern:color:)();
  (*(void (**)(char *, uint64_t))(v106 + 8))(v42, v107);
  outlined destroy of TaskPriority?(v38, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>);
  LOBYTE(v42) = static Edge.Set.leading.getter();
  EdgeInsets.init(_all:)();
  uint64_t v45 = v44;
  uint64_t v47 = v46;
  uint64_t v49 = v48;
  uint64_t v51 = v50;
  uint64_t v52 = v102;
  uint64_t v53 = (uint64_t)v100;
  uint64_t v54 = v104;
  (*(void (**)(char *, char *, uint64_t))(v102 + 16))(v100, v43, v104);
  uint64_t v55 = v53 + *(int *)(v101 + 44);
  *(unsigned char *)uint64_t v55 = (_BYTE)v42;
  *(void *)(v55 + 8) = v45;
  *(void *)(v55 + 16) = v47;
  *(void *)(v55 + 24) = v49;
  *(void *)(v55 + 32) = v51;
  *(unsigned char *)(v55 + 40) = 0;
  (*(void (**)(char *, uint64_t))(v52 + 8))(v43, v54);
  LOBYTE(v42) = static Edge.Set.top.getter();
  EdgeInsets.init(_all:)();
  uint64_t v57 = v56;
  uint64_t v59 = v58;
  uint64_t v61 = v60;
  uint64_t v63 = v62;
  uint64_t v64 = v114;
  outlined init with copy of (String, Any)(v53, v114, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.underline(_:pattern:color:)>>.0, _PaddingLayout>);
  uint64_t v65 = v64 + *(int *)(v103 + 44);
  *(unsigned char *)uint64_t v65 = (_BYTE)v42;
  *(void *)(v65 + 8) = v57;
  *(void *)(v65 + 16) = v59;
  *(void *)(v65 + 24) = v61;
  *(void *)(v65 + 32) = v63;
  *(unsigned char *)(v65 + 40) = 0;
  outlined destroy of TaskPriority?(v53, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.underline(_:pattern:color:)>>.0, _PaddingLayout>);
  uint64_t v107 = static VerticalAlignment.center.getter();
  closure #1 in MoreLabel.body.getter((uint64_t)&v116);
  long long v106 = v117;
  uint64_t v66 = v118;
  uint64_t v67 = v119;
  uint64_t v105 = v120;
  LODWORD(v104) = v121;
  uint64_t v68 = v122;
  LOBYTE(v21) = v123;
  uint64_t v69 = v124;
  uint64_t v70 = v125;
  uint64_t v71 = v126;
  uint64_t v73 = v115;
  uint64_t v72 = v116;
  uint64_t v74 = v109;
  uint64_t v75 = v111;
  (*(void (**)(char *, void, uint64_t))(v115 + 104))(v109, enum case for BlendMode.destinationOut(_:), v111);
  uint64_t v76 = *(void (**)(char *, char *, uint64_t))(v73 + 16);
  uint64_t v77 = (uint64_t)v112;
  v76(v112, v74, v75);
  uint64_t v78 = (uint64_t)v108;
  outlined init with copy of _BlendModeEffect(v77, (uint64_t)&v108[*(int *)(v110 + 44)]);
  *(void *)uint64_t v78 = v107;
  *(void *)(v78 + 8) = 0;
  *(unsigned char *)(v78 + 16) = 0;
  *(void *)(v78 + 24) = v72;
  *(_OWORD *)(v78 + 32) = v106;
  *(void *)(v78 + 48) = v66;
  *(void *)(v78 + 56) = v67;
  *(void *)(v78 + 64) = v105;
  *(unsigned char *)(v78 + 72) = v104;
  *(void *)(v78 + 80) = v68;
  *(unsigned char *)(v78 + 88) = v21;
  *(void *)(v78 + 96) = v69;
  *(void *)(v78 + 104) = v70;
  *(void *)(v78 + 112) = v71;
  swift_bridgeObjectRetain();
  swift_retain();
  outlined destroy of _BlendModeEffect(v77);
  (*(void (**)(char *, uint64_t))(v115 + 8))(v74, v75);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v79 = static Alignment.center.getter();
  uint64_t v81 = v80;
  uint64_t v82 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.underline(_:pattern:color:)>>.0, _PaddingLayout>, _PaddingLayout>, _BackgroundModifier<ModifiedContent<HStack<TupleView<(ModifiedContent<LinearGradient, _FrameLayout>, Color)>>, _BlendModeEffect>>>);
  uint64_t v83 = v113;
  uint64_t v84 = v113 + *(int *)(v82 + 36);
  outlined init with copy of (String, Any)(v78, v84, &demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(ModifiedContent<LinearGradient, _FrameLayout>, Color)>>, _BlendModeEffect>);
  unint64_t v85 = (uint64_t *)(v84
                  + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _BackgroundModifier<ModifiedContent<HStack<TupleView<(ModifiedContent<LinearGradient, _FrameLayout>, Color)>>, _BlendModeEffect>>)
                           + 36));
  uint64_t *v85 = v79;
  v85[1] = v81;
  uint64_t v86 = v114;
  outlined init with copy of (String, Any)(v114, v83, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.underline(_:pattern:color:)>>.0, _PaddingLayout>, _PaddingLayout>);
  outlined destroy of TaskPriority?(v78, &demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(ModifiedContent<LinearGradient, _FrameLayout>, Color)>>, _BlendModeEffect>);
  return outlined destroy of TaskPriority?(v86, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.underline(_:pattern:color:)>>.0, _PaddingLayout>, _PaddingLayout>);
}

double closure #1 in MoreLabel.body.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for LayoutDirection();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v23 - v6;
  type metadata accessor for MoreLabel();
  specialized Environment.wrappedValue.getter((uint64_t)v7);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for LayoutDirection.rightToLeft(_:), v2);
  char v8 = static LayoutDirection.== infix(_:_:)();
  uint64_t v9 = *(void (**)(char *, uint64_t))(v3 + 8);
  v9(v5, v2);
  v9(v7, v2);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Color>);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_100493D00;
  if (v8)
  {
    *(void *)(v10 + 32) = static Color.black.getter();
    uint64_t v11 = static Color.clear.getter();
  }
  else
  {
    *(void *)(v10 + 32) = static Color.clear.getter();
    uint64_t v11 = static Color.black.getter();
  }
  *(void *)(v10 + 40) = v11;
  uint64_t v28 = v10;
  specialized Array._endMutation()();
  Gradient.init(colors:)();
  static UnitPoint.leading.getter();
  static UnitPoint.trailing.getter();
  LinearGradient.init(gradient:startPoint:endPoint:)();
  uint64_t v12 = v24;
  long long v23 = v25;
  uint64_t v13 = v26;
  uint64_t v14 = v27;
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v15 = v28;
  char v16 = v29;
  uint64_t v17 = v30;
  char v18 = v31;
  uint64_t v19 = v32;
  uint64_t v20 = v33;
  uint64_t v21 = static Color.black.getter();
  *(void *)a1 = v12;
  double result = *(double *)&v23;
  *(_OWORD *)(a1 + 8) = v23;
  *(void *)(a1 + 24) = v13;
  *(void *)(a1 + 32) = v14;
  *(void *)(a1 + 40) = v15;
  *(unsigned char *)(a1 + 48) = v16;
  *(void *)(a1 + 56) = v17;
  *(unsigned char *)(a1 + 64) = v18;
  *(void *)(a1 + 72) = v19;
  *(void *)(a1 + 80) = v20;
  *(void *)(a1 + 88) = v21;
  return result;
}

uint64_t key path getter for EnvironmentValues.accessibilityShowButtonShapes : EnvironmentValues@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = EnvironmentValues.accessibilityShowButtonShapes.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1003F82F4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = EnvironmentValues.accessibilityShowButtonShapes.getter();
  *a1 = result & 1;
  return result;
}

uint64_t key path getter for EnvironmentValues.textCase : EnvironmentValues, serialized()
{
  return EnvironmentValues.textCase.getter();
}

uint64_t sub_1003F834C()
{
  return EnvironmentValues.textCase.getter();
}

uint64_t key path setter for EnvironmentValues.textCase : EnvironmentValues, serialized(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Text.Case?);
  __chkstk_darwin();
  outlined init with copy of (String, Any)(a1, (uint64_t)&v4 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), &demangling cache variable for type metadata for Text.Case?);
  return EnvironmentValues.textCase.setter();
}

uint64_t key path getter for EnvironmentValues.font : EnvironmentValues, serialized@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.font.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1003F8434@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.font.getter();
  *a1 = result;
  return result;
}

uint64_t key path setter for EnvironmentValues.font : EnvironmentValues, serialized()
{
  return EnvironmentValues.font.setter();
}

uint64_t sub_1003F848C()
{
  return EnvironmentValues.font.setter();
}

uint64_t key path getter for EnvironmentValues.foregroundColor : EnvironmentValues, serialized@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.foregroundColor.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1003F84E4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.foregroundColor.getter();
  *a1 = result;
  return result;
}

uint64_t key path setter for EnvironmentValues.foregroundColor : EnvironmentValues, serialized()
{
  return EnvironmentValues.foregroundColor.setter();
}

uint64_t sub_1003F853C()
{
  return EnvironmentValues.foregroundColor.setter();
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>);
    lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Color?> and conformance _EnvironmentKeyWritingModifier<A>, (uint64_t *)&demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Color?>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Font?>>);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<Text, _EnvironmentKeyWritingModifier<Text.Case?>>);
    lazy protocol witness table accessor for type ModifiedContent<Text, _EnvironmentKeyWritingModifier<Text.Case?>> and conformance <> ModifiedContent<A, B>();
    swift_getOpaqueTypeConformance2();
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>((unint64_t *)&_s7SwiftUI30_EnvironmentKeyWritingModifierVyAA4FontVSgGACyxGAA04ViewF0AAWL_0, &_s7SwiftUI30_EnvironmentKeyWritingModifierVyAA4FontVSgGMD_0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t outlined init with copy of _BlendModeEffect(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for _BlendModeEffect();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of _BlendModeEffect(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for _BlendModeEffect();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t associated type witness table accessor for View.Body : View in MoreLabel()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t *initializeBufferWithCopyOfBuffer for MoreLabel(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (uint64_t *)((char *)a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<LayoutDirection>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = type metadata accessor for LayoutDirection();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    }
    else
    {
      *uint64_t v9 = *v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v12 = *(int *)(a3 + 24);
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = *(void *)v14;
    char v16 = v14[8];
    outlined copy of Environment<Bool>.Content(*(void *)v14, v16);
    *(void *)uint64_t v13 = v15;
    v13[8] = v16;
  }
  return a1;
}

uint64_t destroy for MoreLabel(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<LayoutDirection>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for LayoutDirection();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = a1 + *(int *)(a2 + 24);
  uint64_t v7 = *(void *)v6;
  char v8 = *(unsigned char *)(v6 + 8);

  return outlined consume of Environment<SymbolButton.MaterialColor?>.Content(v7, v8);
}

void *initializeWithCopy for MoreLabel(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (void *)((char *)a1 + v6);
  char v8 = (void *)((char *)a2 + v6);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<LayoutDirection>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = type metadata accessor for LayoutDirection();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  }
  else
  {
    *uint64_t v7 = *v8;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = *(void *)v12;
  char v14 = v12[8];
  outlined copy of Environment<Bool>.Content(*(void *)v12, v14);
  *(void *)uint64_t v11 = v13;
  v11[8] = v14;
  return a1;
}

void *assignWithCopy for MoreLabel(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (void *)((char *)a1 + v6);
    char v8 = (void *)((char *)a2 + v6);
    outlined destroy of TaskPriority?((uint64_t)a1 + v6, &demangling cache variable for type metadata for Environment<LayoutDirection>.Content);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<LayoutDirection>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = type metadata accessor for LayoutDirection();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *uint64_t v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = *(void *)v12;
  char v14 = v12[8];
  outlined copy of Environment<Bool>.Content(*(void *)v12, v14);
  uint64_t v15 = *(void *)v11;
  char v16 = v11[8];
  *(void *)uint64_t v11 = v13;
  v11[8] = v14;
  outlined consume of Environment<SymbolButton.MaterialColor?>.Content(v15, v16);
  return a1;
}

void *initializeWithTake for MoreLabel(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  char v8 = (char *)a2 + v6;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<LayoutDirection>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = type metadata accessor for LayoutDirection();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  *(void *)uint64_t v12 = *(void *)v13;
  v12[8] = v13[8];
  return a1;
}

void *assignWithTake for MoreLabel(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_release();
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    char v8 = (char *)a2 + v6;
    outlined destroy of TaskPriority?((uint64_t)a1 + v6, &demangling cache variable for type metadata for Environment<LayoutDirection>.Content);
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<LayoutDirection>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = type metadata accessor for LayoutDirection();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
    }
  }
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = *(void *)v13;
  LOBYTE(v13) = v13[8];
  uint64_t v15 = *(void *)v12;
  char v16 = v12[8];
  *(void *)uint64_t v12 = v14;
  v12[8] = (char)v13;
  outlined consume of Environment<SymbolButton.MaterialColor?>.Content(v15, v16);
  return a1;
}

uint64_t getEnumTagSinglePayload for MoreLabel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003F8E30);
}

uint64_t sub_1003F8E30(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<LayoutDirection>);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for MoreLabel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003F8EF8);
}

void *sub_1003F8EF8(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<LayoutDirection>);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

void type metadata completion function for MoreLabel()
{
  type metadata accessor for Environment<LayoutDirection>.Content();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.underline(_:pattern:color:)>>.0, _PaddingLayout>, _PaddingLayout>, _BackgroundModifier<ModifiedContent<HStack<TupleView<(ModifiedContent<LinearGradient, _FrameLayout>, Color)>>, _BlendModeEffect>>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.underline(_:pattern:color:)>>.0, _PaddingLayout>, _PaddingLayout>, _BackgroundModifier<ModifiedContent<HStack<TupleView<(ModifiedContent<LinearGradient, _FrameLayout>, Color)>>, _BlendModeEffect>>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.underline(_:pattern:color:)>>.0, _PaddingLayout>, _PaddingLayout>, _BackgroundModifier<ModifiedContent<HStack<TupleView<(ModifiedContent<LinearGradient, _FrameLayout>, Color)>>, _BlendModeEffect>>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.underline(_:pattern:color:)>>.0, _PaddingLayout>, _PaddingLayout>, _BackgroundModifier<ModifiedContent<HStack<TupleView<(ModifiedContent<LinearGradient, _FrameLayout>, Color)>>, _BlendModeEffect>>>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<<<opaque return type of View.underline(_:pattern:color:)>>.0, _PaddingLayout>, _PaddingLayout> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type _BackgroundModifier<ModifiedContent<HStack<TupleView<(ModifiedContent<LinearGradient, _FrameLayout>, Color)>>, _BlendModeEffect>> and conformance _BackgroundModifier<A>, &demangling cache variable for type metadata for _BackgroundModifier<ModifiedContent<HStack<TupleView<(ModifiedContent<LinearGradient, _FrameLayout>, Color)>>, _BlendModeEffect>>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.underline(_:pattern:color:)>>.0, _PaddingLayout>, _PaddingLayout>, _BackgroundModifier<ModifiedContent<HStack<TupleView<(ModifiedContent<LinearGradient, _FrameLayout>, Color)>>, _BlendModeEffect>>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<<<opaque return type of View.underline(_:pattern:color:)>>.0, _PaddingLayout>, _PaddingLayout> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<<<opaque return type of View.underline(_:pattern:color:)>>.0, _PaddingLayout>, _PaddingLayout> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<<<opaque return type of View.underline(_:pattern:color:)>>.0, _PaddingLayout>, _PaddingLayout> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.underline(_:pattern:color:)>>.0, _PaddingLayout>, _PaddingLayout>);
    lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.underline(_:pattern:color:)>>.0, _PaddingLayout> and conformance <> ModifiedContent<A, B>();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<<<opaque return type of View.underline(_:pattern:color:)>>.0, _PaddingLayout>, _PaddingLayout> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.underline(_:pattern:color:)>>.0, _PaddingLayout> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.underline(_:pattern:color:)>>.0, _PaddingLayout> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.underline(_:pattern:color:)>>.0, _PaddingLayout> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.underline(_:pattern:color:)>>.0, _PaddingLayout>);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.underline(_:pattern:color:)>>.0, _PaddingLayout> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

double Gradient.startPoint.getter()
{
  return *(double *)(v0 + 32);
}

void Gradient.startPoint.setter(double a1, double a2)
{
  *(double *)(v2 + 32) = a1;
  *(double *)(v2 + 40) = a2;
}

double Gradient.endPoint.getter()
{
  return *(double *)(v0 + 48);
}

void Gradient.endPoint.setter(double a1, double a2)
{
  *(double *)(v2 + 48) = a1;
  *(double *)(v2 + 56) = a2;
}

uint64_t Gradient.init(kind:colors:locations:interpolations:startPoint:endPoint:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, double a6@<D0>, double a7@<D1>, double a8@<D2>, double a9@<D3>)
{
  *(void *)a5 = result;
  *(void *)(a5 + 8) = a2;
  *(void *)(a5 + 16) = a3;
  *(void *)(a5 + 24) = a4;
  *(double *)(a5 + 32) = a6;
  *(double *)(a5 + 40) = a7;
  *(double *)(a5 + 48) = a8;
  *(double *)(a5 + 56) = a9;
  return result;
}

char *Gradient.configureLayer(_:)(void *a1)
{
  uint64_t v2 = v1;
  [a1 setType:*(void *)v1];
  outlined init with take of PresentationSource?((uint64_t)(v1 + 2), (uint64_t)v21, &demangling cache variable for type metadata for [CGFloat]?);
  outlined init with take of PresentationSource?((uint64_t)v21, (uint64_t)&v22, &demangling cache variable for type metadata for [CGFloat]?);
  if (v22)
  {
    specialized _arrayForceCast<A, B>(_:)(v22);
    type metadata accessor for UIMenu(0, &_sSo8NSNumberCML_1);
    v4.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v4.super.Class isa = 0;
  }
  [a1 setLocations:v4.super.isa];

  outlined init with take of PresentationSource?((uint64_t)(v2 + 3), (uint64_t)v20, &demangling cache variable for type metadata for [CAMediaTimingFunction]?);
  outlined init with take of PresentationSource?((uint64_t)v20, (uint64_t)&v23, &demangling cache variable for type metadata for [CAMediaTimingFunction]?);
  Class isa = v23;
  if (v23)
  {
    type metadata accessor for UIMenu(0, &lazy cache variable for type metadata for CAMediaTimingFunction);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
  }
  [a1 setInterpolations:isa];

  Class v6 = (Class)*((void *)v2 + 1);
  if (!v6) {
    goto LABEL_21;
  }
  if (!((unint64_t)v6 >> 62))
  {
    uint64_t v7 = *(void *)(((unint64_t)v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v7) {
      goto LABEL_9;
    }
LABEL_19:
    swift_bridgeObjectRelease();
LABEL_20:
    Class v6 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
LABEL_21:
    [a1 setColors:v6];

    objc_msgSend(a1, "setStartPoint:", v2[4], v2[5]);
    return (char *)objc_msgSend(a1, "setEndPoint:", v2[6], v2[7]);
  }
  swift_bridgeObjectRetain();
  uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
  if (!v7) {
    goto LABEL_19;
  }
LABEL_9:
  uint64_t v19 = _swiftEmptyArrayStorage;
  unint64_t result = specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, v7 & ~(v7 >> 63), 0);
  if ((v7 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = 0;
    uint64_t v10 = v19;
    do
    {
      if (((unint64_t)v6 & 0xC000000000000001) != 0) {
        id v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v11 = *((id *)v6 + v9 + 4);
      }
      uint64_t v12 = v11;
      id v13 = [v11 CGColor];
      _sSo10CGColorRefaMa_0(0);
      uint64_t v18 = v14;

      *(void *)&long long v17 = v13;
      uint64_t v19 = v10;
      unint64_t v16 = v10[2];
      unint64_t v15 = v10[3];
      if (v16 >= v15 >> 1)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)((char *)(v15 > 1), v16 + 1, 1);
        uint64_t v10 = v19;
      }
      ++v9;
      v10[2] = v16 + 1;
      outlined init with take of Any(&v17, &v10[4 * v16 + 4]);
    }
    while (v7 != v9);
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  __break(1u);
  return result;
}

id Gradient.View.__allocating_init(configuration:)(void **a1)
{
  uint64_t v2 = v1;
  NSArray v4 = (char *)objc_allocWithZone(v2);
  uint64_t v5 = &v4[OBJC_IVAR____TtCV11MusicCoreUI8Gradient4View_typedConfiguration];
  long long v6 = *((_OWORD *)a1 + 3);
  long long v8 = *(_OWORD *)a1;
  long long v7 = *((_OWORD *)a1 + 1);
  *((_OWORD *)v5 + 2) = *((_OWORD *)a1 + 2);
  *((_OWORD *)v5 + 3) = v6;
  *(_OWORD *)uint64_t v5 = v8;
  *((_OWORD *)v5 + 1) = v7;
  outlined retain of Gradient(a1);
  v13.receiver = v4;
  v13.super_class = v2;
  id v9 = objc_msgSendSuper2(&v13, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  id v10 = [v9 layer];
  self;
  id v11 = (void *)swift_dynamicCastObjCClassUnconditional();
  Gradient.configureLayer(_:)(v11);
  outlined release of Gradient(a1);

  return v9;
}

id Gradient.View.init(configuration:)(uint64_t a1)
{
  uint64_t v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v5 = &v2[OBJC_IVAR____TtCV11MusicCoreUI8Gradient4View_typedConfiguration];
  long long v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)uint64_t v5 = *(_OWORD *)a1;
  *((_OWORD *)v5 + 1) = v6;
  long long v7 = *(_OWORD *)(a1 + 48);
  *((_OWORD *)v5 + 2) = *(_OWORD *)(a1 + 32);
  *((_OWORD *)v5 + 3) = v7;
  outlined retain of Gradient((void **)a1);
  v12.receiver = v2;
  v12.super_class = ObjectType;
  id v8 = objc_msgSendSuper2(&v12, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  id v9 = [v8 layer];
  self;
  id v10 = (void *)swift_dynamicCastObjCClassUnconditional();
  Gradient.configureLayer(_:)(v10);
  outlined release of Gradient((id *)a1);

  return v8;
}

void **outlined retain of Gradient(void **a1)
{
  uint64_t v2 = *a1;
  swift_bridgeObjectRetain();
  id v3 = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

id *outlined release of Gradient(id *a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

void Gradient.View.init(coder:)()
{
}

uint64_t static Gradient.View.layerClass.getter()
{
  return type metadata accessor for UIMenu(0, (unint64_t *)&lazy cache variable for type metadata for CAGradientLayer);
}

uint64_t Gradient.View.typedConfiguration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtCV11MusicCoreUI8Gradient4View_typedConfiguration;
  swift_beginAccess();
  NSArray v4 = *(void **)v3;
  uint64_t v5 = *(void *)(v3 + 8);
  uint64_t v6 = *(void *)(v3 + 16);
  uint64_t v7 = *(void *)(v3 + 24);
  *(void *)a1 = *(void *)v3;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  long long v8 = *(_OWORD *)(v3 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(v3 + 32);
  *(_OWORD *)(a1 + 48) = v8;
  id v9 = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

id *Gradient.View.typedConfiguration.setter(uint64_t a1)
{
  uint64_t v3 = &v1[OBJC_IVAR____TtCV11MusicCoreUI8Gradient4View_typedConfiguration];
  swift_beginAccess();
  long long v4 = *((_OWORD *)v3 + 1);
  v19[0] = *(_OWORD *)v3;
  v19[1] = v4;
  long long v5 = *((_OWORD *)v3 + 3);
  v19[2] = *((_OWORD *)v3 + 2);
  v19[3] = v5;
  uint64_t v6 = *(void **)v3;
  long long v7 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)uint64_t v3 = *(_OWORD *)a1;
  *((_OWORD *)v3 + 1) = v7;
  long long v8 = *(_OWORD *)(a1 + 48);
  *((_OWORD *)v3 + 2) = *(_OWORD *)(a1 + 32);
  *((_OWORD *)v3 + 3) = v8;
  outlined retain of Gradient((void **)v19);
  outlined retain of Gradient((void **)a1);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  long long v9 = *((_OWORD *)v3 + 1);
  v18[0] = *(_OWORD *)v3;
  v18[1] = v9;
  long long v10 = *((_OWORD *)v3 + 3);
  v18[2] = *((_OWORD *)v3 + 2);
  v18[3] = v10;
  outlined retain of Gradient((void **)v18);
  BOOL v11 = specialized static Gradient.__derived_struct_equals(_:_:)((uint64_t)v18, (uint64_t)v19);
  outlined release of Gradient((id *)v18);
  if (!v11)
  {
    long long v12 = *((_OWORD *)v3 + 1);
    v17[0] = *(_OWORD *)v3;
    v17[1] = v12;
    long long v13 = *((_OWORD *)v3 + 3);
    v17[2] = *((_OWORD *)v3 + 2);
    v17[3] = v13;
    outlined retain of Gradient((void **)v17);
    id v14 = [v1 layer];
    self;
    unint64_t v15 = (void *)swift_dynamicCastObjCClassUnconditional();
    Gradient.configureLayer(_:)(v15);

    outlined release of Gradient((id *)v17);
  }
  outlined release of Gradient((id *)a1);
  return outlined release of Gradient((id *)v19);
}

void (*Gradient.View.typedConfiguration.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0xE0uLL);
  *a1 = v3;
  v3[27] = v1;
  uint64_t v4 = v1 + OBJC_IVAR____TtCV11MusicCoreUI8Gradient4View_typedConfiguration;
  swift_beginAccess();
  uint64_t v6 = *(void **)v4;
  uint64_t v5 = *(void *)(v4 + 8);
  uint64_t v8 = *(void *)(v4 + 16);
  uint64_t v7 = *(void *)(v4 + 24);
  v3[16] = *(void *)v4;
  v3[17] = v5;
  v3 += 16;
  v3[2] = v8;
  v3[3] = v7;
  long long v9 = *(_OWORD *)(v4 + 48);
  *((_OWORD *)v3 + 2) = *(_OWORD *)(v4 + 32);
  *((_OWORD *)v3 + 3) = v9;
  swift_bridgeObjectRetain();
  id v10 = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return Gradient.View.typedConfiguration.modify;
}

void Gradient.View.typedConfiguration.modify(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (_OWORD *)(*a1 + 128);
  long long v4 = *(_OWORD *)(*a1 + 144);
  if (a2)
  {
    *(_OWORD *)uint64_t v2 = *v3;
    *(_OWORD *)(v2 + 16) = v4;
    long long v5 = v3[3];
    *(_OWORD *)(v2 + 32) = v3[2];
    *(_OWORD *)(v2 + 48) = v5;
    outlined retain of Gradient((void **)v2);
    Gradient.View.typedConfiguration.setter(v2);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    *(_OWORD *)(v2 + 64) = *v3;
    *(_OWORD *)(v2 + 80) = v4;
    long long v6 = v3[3];
    *(_OWORD *)(v2 + 96) = v3[2];
    *(_OWORD *)(v2 + 112) = v6;
    Gradient.View.typedConfiguration.setter(v2 + 64);
  }

  free((void *)v2);
}

id protocol witness for MusicUIContentView.init(configuration:) in conformance Gradient.View(_OWORD *a1)
{
  long long v3 = a1[1];
  v14[0] = *a1;
  v14[1] = v3;
  long long v4 = a1[3];
  v14[2] = a1[2];
  v14[3] = v4;
  long long v5 = (char *)objc_allocWithZone(v1);
  long long v6 = &v5[OBJC_IVAR____TtCV11MusicCoreUI8Gradient4View_typedConfiguration];
  long long v7 = a1[1];
  *(_OWORD *)long long v6 = *a1;
  *((_OWORD *)v6 + 1) = v7;
  long long v8 = a1[3];
  *((_OWORD *)v6 + 2) = a1[2];
  *((_OWORD *)v6 + 3) = v8;
  outlined retain of Gradient((void **)v14);
  v13.receiver = v5;
  v13.super_class = v1;
  id v9 = objc_msgSendSuper2(&v13, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  id v10 = [v9 layer];
  self;
  BOOL v11 = (void *)swift_dynamicCastObjCClassUnconditional();
  Gradient.configureLayer(_:)(v11);
  outlined release of Gradient((id *)v14);

  return v9;
}

uint64_t protocol witness for MusicUIContentView.typedConfiguration.getter in conformance Gradient.View@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtCV11MusicCoreUI8Gradient4View_typedConfiguration;
  swift_beginAccess();
  long long v5 = *(void **)v3;
  uint64_t v4 = *(void *)(v3 + 8);
  uint64_t v7 = *(void *)(v3 + 16);
  uint64_t v6 = *(void *)(v3 + 24);
  *(void *)a1 = *(void *)v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v7;
  *(void *)(a1 + 24) = v6;
  long long v8 = *(_OWORD *)(v3 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(v3 + 32);
  *(_OWORD *)(a1 + 48) = v8;
  swift_bridgeObjectRetain();
  id v9 = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

id *protocol witness for MusicUIContentView.typedConfiguration.setter in conformance Gradient.View(_OWORD *a1)
{
  long long v1 = a1[1];
  v4[0] = *a1;
  v4[1] = v1;
  long long v2 = a1[3];
  v4[2] = a1[2];
  v4[3] = v2;
  return Gradient.View.typedConfiguration.setter((uint64_t)v4);
}

uint64_t protocol witness for UIContentView.configuration.getter in conformance Gradient.View@<X0>(uint64_t *a1@<X8>)
{
  a1[3] = (uint64_t)&type metadata for Gradient;
  a1[4] = lazy protocol witness table accessor for type Gradient and conformance Gradient();
  uint64_t v3 = swift_allocObject();
  *a1 = v3;
  uint64_t v4 = v1 + OBJC_IVAR____TtCV11MusicCoreUI8Gradient4View_typedConfiguration;
  swift_beginAccess();
  uint64_t v6 = *(void **)v4;
  uint64_t v5 = *(void *)(v4 + 8);
  uint64_t v8 = *(void *)(v4 + 16);
  uint64_t v7 = *(void *)(v4 + 24);
  *(void *)(v3 + 16) = *(void *)v4;
  *(void *)(v3 + 24) = v5;
  *(void *)(v3 + 32) = v8;
  *(void *)(v3 + 40) = v7;
  long long v9 = *(_OWORD *)(v4 + 48);
  *(_OWORD *)(v3 + 48) = *(_OWORD *)(v4 + 32);
  *(_OWORD *)(v3 + 64) = v9;
  swift_bridgeObjectRetain();
  id v10 = v6;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t protocol witness for UIContentView.configuration.setter in conformance Gradient.View(uint64_t a1)
{
  outlined init with copy of AlertPresenting(a1, (uint64_t)v7);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIContentConfiguration);
  swift_dynamicCast();
  v8[0] = v3;
  v8[1] = v4;
  v8[2] = v5;
  v8[3] = v6;
  Gradient.View.typedConfiguration.setter((uint64_t)v8);
  return __swift_destroy_boxed_opaque_existential_0Tm(a1);
}

void (*protocol witness for UIContentView.configuration.modify in conformance Gradient.View(void *a1))(_OWORD **a1, char a2)
{
  long long v3 = malloc(0x158uLL);
  *a1 = v3;
  v3[42] = v1;
  v3[32] = &type metadata for Gradient;
  v3[33] = lazy protocol witness table accessor for type Gradient and conformance Gradient();
  uint64_t v4 = swift_allocObject();
  v3[29] = v4;
  uint64_t v5 = v1 + OBJC_IVAR____TtCV11MusicCoreUI8Gradient4View_typedConfiguration;
  swift_beginAccess();
  uint64_t v7 = *(void **)v5;
  uint64_t v6 = *(void *)(v5 + 8);
  uint64_t v9 = *(void *)(v5 + 16);
  uint64_t v8 = *(void *)(v5 + 24);
  *(void *)(v4 + 16) = *(void *)v5;
  *(void *)(v4 + 24) = v6;
  *(void *)(v4 + 32) = v9;
  *(void *)(v4 + 40) = v8;
  long long v10 = *(_OWORD *)(v5 + 48);
  *(_OWORD *)(v4 + 48) = *(_OWORD *)(v5 + 32);
  *(_OWORD *)(v4 + 64) = v10;
  swift_bridgeObjectRetain();
  id v11 = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return protocol witness for UIContentView.configuration.modify in conformance Gradient.View;
}

void protocol witness for UIContentView.configuration.modify in conformance Gradient.View(_OWORD **a1, char a2)
{
  long long v2 = *a1;
  long long v3 = *a1 + 8;
  uint64_t v4 = (uint64_t)(*a1 + 12);
  uint64_t v5 = (uint64_t)*a1 + 232;
  if (a2)
  {
    outlined init with copy of AlertPresenting((uint64_t)*a1 + 232, (uint64_t)(v2 + 17));
    outlined init with copy of AlertPresenting((uint64_t)(v2 + 17), v4);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIContentConfiguration);
    swift_dynamicCast();
    long long v6 = v3[1];
    *long long v2 = *v3;
    v2[1] = v6;
    long long v7 = v3[3];
    v2[2] = v3[2];
    v2[3] = v7;
    Gradient.View.typedConfiguration.setter((uint64_t)v2);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)(v2 + 17));
  }
  else
  {
    outlined init with copy of AlertPresenting((uint64_t)*a1 + 232, v4);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIContentConfiguration);
    swift_dynamicCast();
    long long v8 = v3[1];
    v2[4] = *v3;
    v2[5] = v8;
    long long v9 = v3[3];
    v2[6] = v3[2];
    v2[7] = v9;
    Gradient.View.typedConfiguration.setter((uint64_t)(v2 + 4));
  }
  __swift_destroy_boxed_opaque_existential_0Tm(v5);

  free(v2);
}

id protocol witness for UIContentConfiguration.makeContentView() in conformance Gradient()
{
  long long v1 = v0[1];
  long long v14 = *v0;
  long long v15 = v1;
  long long v2 = v0[3];
  long long v16 = v0[2];
  long long v17 = v2;
  long long v3 = (objc_class *)type metadata accessor for Gradient.View();
  uint64_t v4 = (char *)objc_allocWithZone(v3);
  uint64_t v5 = &v4[OBJC_IVAR____TtCV11MusicCoreUI8Gradient4View_typedConfiguration];
  long long v6 = v17;
  long long v8 = v14;
  long long v7 = v15;
  *((_OWORD *)v5 + 2) = v16;
  *((_OWORD *)v5 + 3) = v6;
  *(_OWORD *)uint64_t v5 = v8;
  *((_OWORD *)v5 + 1) = v7;
  outlined retain of Gradient((void **)&v14);
  v13.receiver = v4;
  v13.super_class = v3;
  id v9 = objc_msgSendSuper2(&v13, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  id v10 = [v9 layer];
  self;
  id v11 = (void *)swift_dynamicCastObjCClassUnconditional();
  Gradient.configureLayer(_:)(v11);

  lazy protocol witness table accessor for type Gradient.View and conformance Gradient.View(&lazy protocol witness table cache variable for type Gradient.View and conformance Gradient.View);
  return v9;
}

uint64_t protocol witness for UIContentConfiguration.updated(for:) in conformance Gradient@<X0>(uint64_t a1@<X8>)
{
  long long v3 = *(void **)v1;
  uint64_t v2 = *(void *)(v1 + 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v4;
  long long v6 = *(_OWORD *)(v1 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  swift_bridgeObjectRetain();
  id v7 = v3;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance Gradient(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  long long v3 = a1[3];
  v7[2] = a1[2];
  v7[3] = v3;
  long long v4 = a2[1];
  v8[0] = *a2;
  v8[1] = v4;
  long long v5 = a2[3];
  v8[2] = a2[2];
  v8[3] = v5;
  return specialized static Gradient.__derived_struct_equals(_:_:)((uint64_t)v7, (uint64_t)v8);
}

uint64_t static Gradient.vertical(colors:locations:interpolations:)@<X0>(unint64_t a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, __n128 *a4@<X8>)
{
  return static Gradient.vertical(colors:locations:interpolations:)(a1, a2, a3, a4, (__n128)xmmword_1004A3CF0, (__n128)xmmword_1004A3B70);
}

uint64_t static Gradient.horizontal(colors:locations:interpolations:)@<X0>(unint64_t a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, __n128 *a4@<X8>)
{
  return static Gradient.vertical(colors:locations:interpolations:)(a1, a2, a3, a4, (__n128)xmmword_100493FB0, (__n128)xmmword_1004A3D00);
}

uint64_t static Gradient.vertical(colors:locations:interpolations:)@<X0>(unint64_t a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, __n128 *a4@<X8>, __n128 a5@<Q0>, __n128 a6@<Q1>)
{
  a4->n128_u64[0] = (unint64_t)kCAGradientLayerAxial;
  a4->n128_u64[1] = a1;
  a4[1].n128_u64[0] = a2;
  a4[1].n128_u64[1] = a3;
  a4[2] = a5;
  a4[3] = a6;
  long long v6 = kCAGradientLayerAxial;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

Swift::Void __swiftcall Gradient.flip()()
{
  long long v1 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v0 + 32) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v0 + 48) = v1;
}

__n128 Gradient.flipped()@<Q0>(uint64_t a1@<X8>)
{
  long long v2 = v1;
  uint64_t v4 = *((void *)v1 + 3);
  uint64_t v5 = *((void *)v2 + 2);
  long long v9 = *v2;
  __n128 v10 = (__n128)v2[3];
  uint64_t v6 = *((void *)v2 + 4);
  uint64_t v7 = *((void *)v2 + 5);
  outlined retain of Gradient((void **)v2);
  *(_OWORD *)a1 = v9;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v4;
  __n128 result = v10;
  *(__n128 *)(a1 + 32) = v10;
  *(void *)(a1 + 48) = v6;
  *(void *)(a1 + 56) = v7;
  return result;
}

BOOL specialized static Gradient.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  id v20 = *(id *)a2;
  id v21 = v4;
  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v7 = v6;
  if (v5 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v7 == v8)
  {
    outlined retain of ICMusicSubscriptionStatus?(&v21);
    outlined retain of ICMusicSubscriptionStatus?(&v20);
    swift_bridgeObjectRelease_n();
    outlined release of UIView.Shadow(&v20);
    outlined release of UIView.Shadow(&v21);
LABEL_8:
    uint64_t v12 = *(void *)(a2 + 8);
    if (*(void *)(a1 + 8))
    {
      if (!v12) {
        return 0;
      }
      swift_bridgeObjectRetain();
      uint64_t v13 = swift_bridgeObjectRetain();
      char v14 = specialized static Array<A>.== infix(_:_:)(v13, v12);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v14 & 1) == 0) {
        return 0;
      }
    }
    else if (v12)
    {
      return 0;
    }
    uint64_t v15 = *(void *)(a1 + 16);
    uint64_t v16 = *(void *)(a2 + 16);
    if (v15)
    {
      if (!v16 || !specialized static Array<A>.== infix(_:_:)(v15, v16)) {
        return 0;
      }
    }
    else if (v16)
    {
      return 0;
    }
    uint64_t v17 = *(void *)(a2 + 24);
    if (*(void *)(a1 + 24))
    {
      if (!v17) {
        return 0;
      }
      swift_bridgeObjectRetain();
      uint64_t v18 = swift_bridgeObjectRetain();
      char v19 = specialized static Array<A>.== infix(_:_:)(v18, v17);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v19 & 1) == 0) {
        return 0;
      }
      return *(double *)(a1 + 32) == *(double *)(a2 + 32)
          && *(double *)(a1 + 40) == *(double *)(a2 + 40)
          && *(double *)(a1 + 48) == *(double *)(a2 + 48)
          && *(double *)(a1 + 56) == *(double *)(a2 + 56);
    }
    if (!v17) {
      return *(double *)(a1 + 32) == *(double *)(a2 + 32)
    }
          && *(double *)(a1 + 40) == *(double *)(a2 + 40)
          && *(double *)(a1 + 48) == *(double *)(a2 + 48)
          && *(double *)(a1 + 56) == *(double *)(a2 + 56);
    return 0;
  }
  char v10 = _stringCompareWithSmolCheck(_:_:expecting:)();
  outlined retain of ICMusicSubscriptionStatus?(&v21);
  outlined retain of ICMusicSubscriptionStatus?(&v20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  outlined release of UIView.Shadow(&v20);
  outlined release of UIView.Shadow(&v21);
  BOOL result = 0;
  if (v10) {
    goto LABEL_8;
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type Gradient and conformance Gradient()
{
  unint64_t result = lazy protocol witness table cache variable for type Gradient and conformance Gradient;
  if (!lazy protocol witness table cache variable for type Gradient and conformance Gradient)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Gradient and conformance Gradient);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type Gradient and conformance Gradient;
  if (!lazy protocol witness table cache variable for type Gradient and conformance Gradient)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Gradient and conformance Gradient);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type Gradient and conformance Gradient;
  if (!lazy protocol witness table cache variable for type Gradient and conformance Gradient)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Gradient and conformance Gradient);
  }
  return result;
}

uint64_t instantiation function for generic protocol witness table for Gradient.View(uint64_t a1)
{
  uint64_t result = lazy protocol witness table accessor for type Gradient.View and conformance Gradient.View(&lazy protocol witness table cache variable for type Gradient.View and conformance Gradient.View);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for Gradient.View()
{
  return self;
}

uint64_t associated type witness table accessor for MusicUIContentConfiguration.View : MusicUIContentView in Gradient()
{
  return lazy protocol witness table accessor for type Gradient.View and conformance Gradient.View(&lazy protocol witness table cache variable for type Gradient.View and conformance Gradient.View);
}

uint64_t lazy protocol witness table accessor for type Gradient.View and conformance Gradient.View(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for Gradient.View();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t instantiation function for generic protocol witness table for Gradient(uint64_t a1)
{
  *(void *)(a1 + 8) = lazy protocol witness table accessor for type Gradient and conformance Gradient();
  unint64_t result = lazy protocol witness table accessor for type Gradient and conformance Gradient();
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t destroy for Gradient(id *a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Gradient(uint64_t a1, uint64_t a2)
{
  long long v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  long long v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  id v7 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Gradient(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  return a1;
}

uint64_t assignWithTake for Gradient(uint64_t a1, _OWORD *a2)
{
  *(_OWORD *)a1 = *a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = a2[1];
  swift_bridgeObjectRelease();
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  return a1;
}

ValueMetadata *type metadata accessor for Gradient()
{
  return &type metadata for Gradient;
}

uint64_t sub_1003FAA3C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t *UIImagePickerController.profileImagePickerProperties.unsafeMutableAddressor()
{
  if (one-time initialization token for profileImagePickerProperties != -1) {
    swift_once();
  }
  return &static UIImagePickerController.profileImagePickerProperties;
}

int *ImagePicker.init(pickedImage:sourceType:shouldPresent:didPickImage:editingControllerProperties:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *a9 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DismissAction>.Content);
  swift_storeEnumTagMultiPayload();
  unint64_t result = (int *)type metadata accessor for ImagePicker(0);
  uint64_t v22 = (uint64_t *)((char *)a9 + result[7]);
  uint64_t v23 = result[9];
  uint64_t v24 = (uint64_t *)((char *)a9 + result[5]);
  *uint64_t v24 = a1;
  v24[1] = a2;
  v24[2] = a3;
  long long v25 = (uint64_t *)((char *)a9 + result[6]);
  *long long v25 = a4;
  v25[1] = a5;
  _OWORD v25[2] = a6;
  v25[3] = a7;
  uint64_t v26 = (char *)a9 + result[8];
  *(void *)uint64_t v26 = a8;
  *((void *)v26 + 1) = a10;
  v26[16] = a11;
  *uint64_t v22 = a12;
  v22[1] = a13;
  *(uint64_t *)((char *)a9 + v23) = a14;
  return result;
}

id ImagePicker.makeUIViewController(context:)()
{
  id v0 = objc_allocWithZone((Class)UIViewController);

  return [v0 init];
}

void ImagePicker.updateUIViewController(_:context:)(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v64 = a2;
  uint64_t v5 = type metadata accessor for PHPickerConfiguration.AssetRepresentationMode();
  uint64_t v59 = *(void *)(v5 - 8);
  __chkstk_darwin();
  id v7 = (char *)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PHPickerFilter?);
  __chkstk_darwin();
  long long v9 = (char *)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for PHPickerConfiguration();
  uint64_t v60 = *(void *)(v10 - 8);
  uint64_t v61 = v10;
  __chkstk_darwin();
  uint64_t v12 = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v63 = (char *)&v57 - v13;
  uint64_t v14 = type metadata accessor for UTType();
  uint64_t v62 = *(void *)(v14 - 8);
  __chkstk_darwin();
  uint64_t v16 = (char *)&v57 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = (int *)type metadata accessor for ImagePicker(0);
  uint64_t v18 = v2 + v17[8];
  char v19 = *(void **)v18;
  uint64_t v20 = *(void *)(v18 + 8);
  LOBYTE(v18) = *(unsigned char *)(v18 + 16);
  uint64_t v65 = v19;
  uint64_t v66 = v20;
  LOBYTE(v67) = v18;
  __swift_instantiateConcreteTypeFromMangledName(&_s7SwiftUI7BindingVySbGMD_0);
  Binding.wrappedValue.getter();
  if (v68 != 1) {
    return;
  }
  id v21 = [a1 presentedViewController];

  if (v21) {
    return;
  }
  id v58 = a1;
  uint64_t v22 = v3 + v17[6];
  uint64_t v23 = *(void *)(v22 + 8);
  uint64_t v65 = *(void **)v22;
  uint64_t v66 = v23;
  long long v67 = *(_OWORD *)(v22 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<ImagePicker.SourceType>);
  Binding.wrappedValue.getter();
  if (v68)
  {
    if (v68 != 1)
    {
      id v24 = v58;
      if (v68 != 2)
      {
        uint64_t v53 = v69;
        swift_bridgeObjectRelease();
        id v54 = [v24 view];
        if (v54)
        {
          uint64_t v55 = v54;
          id v56 = [self clearColor];
          [v55 setBackgroundColor:v56];

          return;
        }
        goto LABEL_20;
      }
      id v25 = [v58 view];
      if (v25)
      {
        uint64_t v26 = v25;
        id v27 = [self clearColor];
        [v26 setBackgroundColor:v27];

        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UTType>);
        *(_OWORD *)(swift_allocObject() + 16) = xmmword_100493400;
        static UTType.image.getter();
        id v28 = objc_allocWithZone((Class)UIDocumentPickerViewController);
        Class isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        id v30 = [v28 initForOpeningContentTypes:isa asCopy:1];

        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIViewControllerRepresentableContext<ImagePicker>);
        UIViewControllerRepresentableContext.coordinator.getter();
        char v31 = v65;
        [v30 setDelegate:v65];

        [v30 _setAutomaticallyDismissesAfterCompletion:0];
        [v24 presentViewController:v30 animated:1 completion:0];

        return;
      }
      __break(1u);
LABEL_19:
      __break(1u);
LABEL_20:
      __break(1u);
      return;
    }
    id v40 = v58;
    id v41 = [v58 view];
    if (!v41) {
      goto LABEL_19;
    }
    uint64_t v42 = v41;
    id v43 = [self clearColor];
    [v42 setBackgroundColor:v43];

    id v44 = [self sharedPhotoLibrary];
    uint64_t v45 = v63;
    PHPickerConfiguration.init(photoLibrary:)();
    static PHPickerFilter.images.getter();
    uint64_t v46 = type metadata accessor for PHPickerFilter();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v9, 0, 1, v46);
    PHPickerConfiguration.filter.setter();
    (*(void (**)(char *, void, uint64_t))(v59 + 104))(v7, enum case for PHPickerConfiguration.AssetRepresentationMode.current(_:), v5);
    PHPickerConfiguration.preferredAssetRepresentationMode.setter();
    type metadata accessor for UIMenu(0, &lazy cache variable for type metadata for PHPickerViewController);
    uint64_t v48 = v60;
    uint64_t v47 = v61;
    (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v12, v45, v61);
    uint64_t v49 = (void *)PHPickerViewController.init(configuration:)();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIViewControllerRepresentableContext<ImagePicker>);
    UIViewControllerRepresentableContext.coordinator.getter();
    lazy protocol witness table accessor for type ImagePicker.Coordinator and conformance ImagePicker.Coordinator(&lazy protocol witness table cache variable for type ImagePicker.Coordinator and conformance ImagePicker.Coordinator, (void (*)(uint64_t))type metadata accessor for ImagePicker.Coordinator);
    PHPickerViewController.delegate.setter();
    id v50 = [v49 presentationController];
    if (v50)
    {
      uint64_t v51 = v50;
      UIViewControllerRepresentableContext.coordinator.getter();
      uint64_t v52 = v65;
      [v51 setDelegate:v65];
    }
    [v40 presentViewController:v49 animated:1 completion:0];

    (*(void (**)(char *, uint64_t))(v48 + 8))(v63, v47);
  }
  else
  {
    id v32 = [objc_allocWithZone((Class)UIImagePickerController) init];
    [v32 setSourceType:1];
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIViewControllerRepresentableContext<ImagePicker>);
    UIViewControllerRepresentableContext.coordinator.getter();
    uint64_t v33 = v65;
    [v32 setDelegate:v65];

    [v32 setAllowsEditing:1];
    __swift_instantiateConcreteTypeFromMangledName(&_ss23_ContiguousArrayStorageCySSGMD_1);
    uint64_t v34 = swift_allocObject();
    *(_OWORD *)(v34 + 16) = xmmword_100493400;
    static UTType.image.getter();
    uint64_t v35 = UTType.identifier.getter();
    uint64_t v37 = v36;
    (*(void (**)(char *, uint64_t))(v62 + 8))(v16, v14);
    *(void *)(v34 + 32) = v35;
    *(void *)(v34 + 40) = v37;
    Class v38 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v32 setMediaTypes:v38];

    v39._rawValue = *(void **)(v3 + v17[9]);
    if (v39._rawValue) {
      UIImagePickerController.setProperties(_:)(v39);
    }
    [v58 presentViewController:v32 animated:1 completion:0];
  }
}

Swift::Void __swiftcall UIImagePickerController.setProperties(_:)(Swift::OpaquePointer a1)
{
  id v3 = [v1 _properties];
  id v34 = v1;
  if (v3)
  {
    long long v4 = v3;
    uint64_t v5 = (void *)static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    uint64_t v5 = 0;
  }
  uint64_t v6 = (char *)a1._rawValue + 64;
  uint64_t v7 = 1 << *((unsigned char *)a1._rawValue + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *((void *)a1._rawValue + 8);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v11 = 0;
  while (1)
  {
    while (1)
    {
      uint64_t v13 = v5;
      if (!v9) {
        break;
      }
      unint64_t v14 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      uint64_t v5 = 0;
      if (v13) {
        goto LABEL_26;
      }
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_42;
    }
    if (v16 >= v10) {
      break;
    }
    unint64_t v17 = *(void *)&v6[8 * v16];
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v10) {
        break;
      }
      unint64_t v17 = *(void *)&v6[8 * v11];
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v10) {
          break;
        }
        unint64_t v17 = *(void *)&v6[8 * v11];
        if (!v17)
        {
          int64_t v18 = v16 + 3;
          if (v18 >= v10) {
            break;
          }
          unint64_t v17 = *(void *)&v6[8 * v18];
          if (!v17)
          {
            while (1)
            {
              int64_t v11 = v18 + 1;
              if (__OFADD__(v18, 1)) {
                goto LABEL_44;
              }
              if (v11 >= v10) {
                goto LABEL_37;
              }
              unint64_t v17 = *(void *)&v6[8 * v11];
              ++v18;
              if (v17) {
                goto LABEL_25;
              }
            }
          }
          int64_t v11 = v18;
        }
      }
    }
LABEL_25:
    unint64_t v9 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
    uint64_t v5 = 0;
    if (v13)
    {
LABEL_26:
      char v19 = *(unsigned char *)(*((void *)a1._rawValue + 7) + v15);
      uint64_t v20 = *(void *)(*((void *)a1._rawValue + 6) + 16 * v15 + 8);
      *(void *)&long long v36 = *(void *)(*((void *)a1._rawValue + 6) + 16 * v15);
      *((void *)&v36 + 1) = v20;
      swift_bridgeObjectRetain();
      AnyHashable.init<A>(_:)();
      uint64_t v37 = &type metadata for Bool;
      LOBYTE(v36) = v19;
      outlined init with take of Any(&v36, v35);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v23 = specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)v38);
      uint64_t v24 = v13[2];
      BOOL v25 = (v22 & 1) == 0;
      uint64_t v26 = v24 + v25;
      if (__OFADD__(v24, v25))
      {
        __break(1u);
LABEL_42:
        __break(1u);
LABEL_43:
        __break(1u);
LABEL_44:
        __break(1u);
LABEL_45:
        KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
        __break(1u);
        return;
      }
      char v27 = v22;
      if (v13[3] >= v26)
      {
        if (isUniquelyReferenced_nonNull_native)
        {
          uint64_t v5 = v13;
          if (v22) {
            goto LABEL_7;
          }
        }
        else
        {
          _ss17_NativeDictionaryV4copyyyFs11AnyHashableV_ypTg5_0();
          uint64_t v5 = v13;
          if (v27) {
            goto LABEL_7;
          }
        }
      }
      else
      {
        _ss17_NativeDictionaryV20_copyOrMoveAndResize8capacity12moveElementsySi_SbtFs11AnyHashableV_ypTg5_0(v26, isUniquelyReferenced_nonNull_native);
        unint64_t v28 = specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)v38);
        if ((v27 & 1) != (v29 & 1)) {
          goto LABEL_45;
        }
        unint64_t v23 = v28;
        uint64_t v5 = v13;
        if (v27)
        {
LABEL_7:
          uint64_t v12 = (_OWORD *)(v5[7] + 32 * v23);
          __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v12);
          outlined init with take of Any(v35, v12);
          goto LABEL_8;
        }
      }
      v5[(v23 >> 6) + 8] |= 1 << v23;
      outlined init with copy of AnyHashable((uint64_t)v38, v5[6] + 40 * v23);
      outlined init with take of Any(v35, (_OWORD *)(v5[7] + 32 * v23));
      uint64_t v30 = v5[2];
      BOOL v31 = __OFADD__(v30, 1);
      uint64_t v32 = v30 + 1;
      if (v31) {
        goto LABEL_43;
      }
      v5[2] = v32;
LABEL_8:
      swift_bridgeObjectRelease();
      outlined destroy of AnyHashable((uint64_t)v38);
    }
  }
LABEL_37:
  swift_release();
  if (v5)
  {
    swift_bridgeObjectRetain();
    v33.super.Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v33.super.Class isa = 0;
  }
  [v34 _setProperties:v33.super.isa];
  swift_bridgeObjectRelease();
}

Swift::Void __swiftcall ImagePicker.Coordinator.imagePickerController(_:didFinishPickingMediaWithInfo:)(UIImagePickerController _, Swift::OpaquePointer didFinishPickingMediaWithInfo)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for ImagePicker(0);
  __chkstk_darwin();
  uint64_t v8 = (char *)v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  int64_t v10 = (char *)v64 - v9;
  if (*((void *)didFinishPickingMediaWithInfo._rawValue + 2))
  {
    int64_t v11 = UIImagePickerControllerEditedImage;
    uint64_t v12 = specialized __RawDictionaryStorage.find<A>(_:)();
    if (v13)
    {
      outlined init with copy of Any(*((void *)didFinishPickingMediaWithInfo._rawValue + 7) + 32 * v12, (uint64_t)&v65);

      if (*((void *)&v66 + 1))
      {
        outlined init with take of Any(&v65, &v67);
        goto LABEL_13;
      }
    }
    else
    {
      long long v65 = 0u;
      long long v66 = 0u;
    }
    if (*((void *)didFinishPickingMediaWithInfo._rawValue + 2))
    {
      unint64_t v14 = UIImagePickerControllerOriginalImage;
      uint64_t v15 = specialized __RawDictionaryStorage.find<A>(_:)();
      if (v16)
      {
        outlined init with copy of Any(*((void *)didFinishPickingMediaWithInfo._rawValue + 7) + 32 * v15, (uint64_t)&v67);
      }
      else
      {
        long long v67 = 0u;
        long long v68 = 0u;
      }

      goto LABEL_12;
    }
  }
  else
  {
    long long v65 = 0u;
    long long v66 = 0u;
  }
  long long v67 = 0u;
  long long v68 = 0u;
LABEL_12:
  outlined destroy of TaskPriority?((uint64_t)&v65, &_sypSgMD_2);
LABEL_13:
  if (!*((void *)&v68 + 1))
  {
    outlined destroy of TaskPriority?((uint64_t)&v67, &_sypSgMD_2);
LABEL_19:
    *(void *)&long long v67 = 0;
    *((void *)&v67 + 1) = 0xE000000000000000;
    _StringGuts.grow(_:)(61);
    v22._uint64_t countAndFlagsBits = 0xD00000000000002ALL;
    v22._object = (void *)0x8000000100475AD0;
    String.append(_:)(v22);
    type metadata accessor for UIImagePickerControllerInfoKey(0);
    lazy protocol witness table accessor for type ImagePicker.Coordinator and conformance ImagePicker.Coordinator(&lazy protocol witness table cache variable for type UIImagePickerControllerInfoKey and conformance UIImagePickerControllerInfoKey, type metadata accessor for UIImagePickerControllerInfoKey);
    v23._uint64_t countAndFlagsBits = Dictionary.description.getter();
    String.append(_:)(v23);
    swift_bridgeObjectRelease();
    v24._object = (void *)0x8000000100475B00;
    v24._uint64_t countAndFlagsBits = 0xD000000000000011;
    String.append(_:)(v24);
    uint64_t v25 = *((void *)&v67 + 1);
    uint64_t v26 = *(void (**)(uint64_t, uint64_t))(v3
                                                  + OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_pickHandler);
    if (v26)
    {
      uint64_t v27 = v67;
      lazy protocol witness table accessor for type ImagePicker.Coordinator.ImagePickerError and conformance ImagePicker.Coordinator.ImagePickerError();
      uint64_t v28 = swift_allocError();
      *char v29 = v27;
      v29[1] = v25;
      swift_retain();
      v26(v28, 1);
      outlined consume of (@escaping @callee_guaranteed () -> ())?((uint64_t)v26);
      swift_errorRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    return;
  }
  type metadata accessor for UIMenu(0, &lazy cache variable for type metadata for UIImage);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_19;
  }
  unint64_t v17 = (void *)v65;
  if (!*((void *)didFinishPickingMediaWithInfo._rawValue + 2))
  {
    long long v67 = 0u;
    long long v68 = 0u;
    id v30 = (id)v65;
    if (*((void *)&v68 + 1)) {
      goto LABEL_27;
    }
LABEL_24:
    outlined destroy of TaskPriority?((uint64_t)&v67, &_sypSgMD_2);
LABEL_29:
    char v40 = 1;
    uint64_t v33 = 0;
    uint64_t v35 = 0;
    uint64_t v37 = 0;
    uint64_t v39 = 0;
    goto LABEL_30;
  }
  id v18 = (id)v65;
  char v19 = UIImagePickerControllerCropRect;
  uint64_t v20 = specialized __RawDictionaryStorage.find<A>(_:)();
  if (v21)
  {
    outlined init with copy of Any(*((void *)didFinishPickingMediaWithInfo._rawValue + 7) + 32 * v20, (uint64_t)&v67);
  }
  else
  {
    long long v67 = 0u;
    long long v68 = 0u;
  }

  if (!*((void *)&v68 + 1)) {
    goto LABEL_24;
  }
LABEL_27:
  type metadata accessor for UIMenu(0, (unint64_t *)&_sSo7NSValueCML_0);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_29;
  }
  BOOL v31 = (void *)v65;
  [(id)v65 CGRectValue];
  uint64_t v33 = v32;
  uint64_t v35 = v34;
  uint64_t v37 = v36;
  uint64_t v39 = v38;

  char v40 = 0;
LABEL_30:
  *(void *)&long long v67 = v33;
  *((void *)&v67 + 1) = v35;
  *(void *)&long long v68 = v37;
  *((void *)&v68 + 1) = v39;
  char v69 = v40;
  id v41 = UIImage.centerCropIfNeeded(imageRect:)((uint64_t)&v67);

  uint64_t v42 = *(void (**)(id, void))(v3 + OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_pickHandler);
  if (v42)
  {
    id v43 = v41;
    outlined copy of (@escaping @callee_guaranteed () -> ())?((uint64_t)v42);
    v42(v41, 0);
    outlined consume of (@escaping @callee_guaranteed () -> ())?((uint64_t)v42);
  }
  uint64_t v44 = v3 + OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_imagePicker;
  outlined init with copy of ImagePicker(v44, (uint64_t)v10);
  uint64_t v45 = &v10[*(int *)(v6 + 24)];
  uint64_t v46 = *((void *)v45 + 1);
  *(void *)&long long v65 = *(void *)v45;
  *((void *)&v65 + 1) = v46;
  long long v66 = *((_OWORD *)v45 + 1);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<ImagePicker.SourceType>);
  Binding.wrappedValue.getter();
  unint64_t v48 = v64[0];
  uint64_t v47 = (void *)v64[1];
  outlined destroy of ImagePicker((uint64_t)v10);
  if (v48 - 1 < 2)
  {
    id v49 = [(objc_class *)_.super.super.super.super.isa presentingViewController];
    if (!v49
      || (id v50 = v49,
          id v51 = [v49 presentingViewController],
          v50,
          !v51))
    {

      return;
    }
    outlined init with copy of ImagePicker(v44, (uint64_t)v8);
    uint64_t v52 = &v8[*(int *)(v6 + 32)];
    uint64_t v53 = *(void *)v52;
    uint64_t v54 = *((void *)v52 + 1);
    LOBYTE(v52) = v52[16];
    *(void *)&long long v65 = v53;
    *((void *)&v65 + 1) = v54;
    LOBYTE(v66) = (_BYTE)v52;
    LOBYTE(v64[0]) = 0;
    __swift_instantiateConcreteTypeFromMangledName(&_s7SwiftUI7BindingVySbGMD_0);
    Binding.wrappedValue.setter();
    [v51 dismissViewControllerAnimated:1 completion:0];

    goto LABEL_42;
  }
  if (!v48)
  {
    outlined init with copy of ImagePicker(v44, (uint64_t)v8);
    uint64_t v55 = &v8[*(int *)(v6 + 32)];
    uint64_t v56 = *(void *)v55;
    uint64_t v57 = *((void *)v55 + 1);
    LOBYTE(v55) = v55[16];
    *(void *)&long long v65 = v56;
    *((void *)&v65 + 1) = v57;
    LOBYTE(v66) = (_BYTE)v55;
    LOBYTE(v64[0]) = 0;
    __swift_instantiateConcreteTypeFromMangledName(&_s7SwiftUI7BindingVySbGMD_0);
    Binding.wrappedValue.setter();
    [(objc_class *)_.super.super.super.super.isa dismissViewControllerAnimated:1 completion:0];

LABEL_42:
    outlined destroy of ImagePicker((uint64_t)v8);
    return;
  }
  id v58 = [(objc_class *)_.super.super.super.super.isa presentingViewController];
  if (v58)
  {
    uint64_t v59 = v58;
    id v60 = [v58 presentingViewController];

    if (v60)
    {
      outlined init with copy of ImagePicker(v44, (uint64_t)v8);
      uint64_t v61 = &v8[*(int *)(v6 + 32)];
      uint64_t v62 = *(void *)v61;
      uint64_t v63 = *((void *)v61 + 1);
      LOBYTE(v61) = v61[16];
      *(void *)&long long v65 = v62;
      *((void *)&v65 + 1) = v63;
      LOBYTE(v66) = (_BYTE)v61;
      LOBYTE(v64[0]) = 0;
      __swift_instantiateConcreteTypeFromMangledName(&_s7SwiftUI7BindingVySbGMD_0);
      Binding.wrappedValue.setter();
      [v60 dismissViewControllerAnimated:1 completion:0];

      outlined consume of ImagePicker.SourceType(v48, v47);
      goto LABEL_42;
    }
  }

  outlined consume of ImagePicker.SourceType(v48, v47);
}

id UIImage.centerCropIfNeeded(imageRect:)(uint64_t a1)
{
  outlined init with take of CGRect?(a1, (uint64_t)v7);
  if (v10)
  {
    [v6 size];
    double v2 = v1;
    double v4 = v3;
  }
  else
  {
    double v2 = v8;
    double v4 = v9;
  }
  if ((static ApproximatelyEquatable.!=~ infix(_:_:)() & 1) == 0
    || vabdd_f64(1.0, v2 / v4) <= 0.05
    || (id result = (id)UIImage.byCroppingToUniformCenter()()) == 0)
  {
    return v6;
  }
  return result;
}

Swift::Void __swiftcall ImagePicker.Coordinator.imagePickerControllerDidCancel(_:)(UIImagePickerController a1)
{
  uint64_t v3 = type metadata accessor for ImagePicker(0);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v24 - v6;
  id v8 = [(objc_class *)a1.super.super.super.super.isa presentingViewController];
  if (v8)
  {
    double v9 = v8;
    self;
    uint64_t v10 = swift_dynamicCastObjCClass();
    if (v10)
    {
      int64_t v11 = (uint64_t *)(v1 + OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_selectedPhotoIdentifier);
      uint64_t v12 = *(void *)(v1 + OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_selectedPhotoIdentifier + 8);
      if (v12)
      {
        char v13 = (void *)v10;
        uint64_t v25 = *v11;
        __swift_instantiateConcreteTypeFromMangledName(&_ss23_ContiguousArrayStorageCySSGMD_1);
        uint64_t v14 = swift_allocObject();
        *(_OWORD *)(v14 + 16) = xmmword_100493400;
        *(void *)(v14 + 32) = v25;
        *(void *)(v14 + 40) = v12;
        swift_bridgeObjectRetain();
        Class isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v13 deselectAssetsWithIdentifiers:isa];

        *int64_t v11 = 0;
        v11[1] = 0;
        swift_bridgeObjectRelease();
        [v13 setModalInPresentation:0];
      }
    }
  }
  uint64_t v16 = v1 + OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_imagePicker;
  outlined init with copy of ImagePicker(v1 + OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_imagePicker, (uint64_t)v7);
  unint64_t v17 = &v7[*(int *)(v3 + 24)];
  uint64_t v18 = *((void *)v17 + 1);
  uint64_t v26 = *(void *)v17;
  uint64_t v27 = v18;
  long long v28 = *((_OWORD *)v17 + 1);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<ImagePicker.SourceType>);
  Binding.wrappedValue.getter();
  unint64_t v19 = v29;
  uint64_t v20 = v30;
  outlined destroy of ImagePicker((uint64_t)v7);
  if (v19 - 1 >= 2)
  {
    if (!v19)
    {
      outlined init with copy of ImagePicker(v16, (uint64_t)v5);
      char v21 = &v5[*(int *)(v3 + 32)];
      uint64_t v22 = *(void *)v21;
      uint64_t v23 = *((void *)v21 + 1);
      LOBYTE(v21) = v21[16];
      uint64_t v26 = v22;
      uint64_t v27 = v23;
      LOBYTE(v28) = (_BYTE)v21;
      LOBYTE(v29) = 0;
      __swift_instantiateConcreteTypeFromMangledName(&_s7SwiftUI7BindingVySbGMD_0);
      Binding.wrappedValue.setter();
      [(objc_class *)a1.super.super.super.super.isa dismissViewControllerAnimated:1 completion:0];
      outlined destroy of ImagePicker((uint64_t)v5);
      return;
    }
    outlined consume of ImagePicker.SourceType(v19, v20);
  }
  [(objc_class *)a1.super.super.super.super.isa dismissViewControllerAnimated:1 completion:0];
}

Swift::Void __swiftcall ImagePicker.Coordinator.picker(_:didFinishPicking:)(PHPickerViewController _, Swift::OpaquePointer didFinishPicking)
{
  uint64_t v5 = type metadata accessor for ImagePicker(0);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for PHPickerResult();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin();
  type metadata accessor for UTType();
  uint64_t v11 = __chkstk_darwin();
  uint64_t v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*((void *)didFinishPicking._rawValue + 2))
  {
    uint64_t v16 = *(unsigned __int8 *)(v9 + 80);
    unint64_t v17 = v2;
    Class isa = _.super.super.super.isa;
    uint64_t v31 = v12;
    uint64_t v18 = (v16 + 32) & ~v16;
    uint64_t v19 = v13 + v18;
    uint64_t v32 = v11;
    uint64_t v20 = (void *)PHPickerResult.itemProvider.getter();
    static UTType.image.getter();
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v19, v8);
    uint64_t v21 = swift_allocObject();
    Class v22 = isa;
    *(void *)(v21 + 16) = v17;
    *(void *)(v21 + 24) = v22;
    (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v21 + v18, (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
    id v23 = v17;
    uint64_t v24 = v22;
    uint64_t v25 = NSItemProvider.loadDataRepresentation(for:completionHandler:)();
    swift_release();

    (*(void (**)(char *, uint64_t))(v31 + 8))(v15, v32);
  }
  else
  {
    outlined init with copy of ImagePicker((uint64_t)v2 + OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_imagePicker, (uint64_t)v7);
    uint64_t v26 = &v7[*(int *)(v5 + 32)];
    uint64_t v27 = *(void *)v26;
    uint64_t v28 = *((void *)v26 + 1);
    LOBYTE(v26) = v26[16];
    uint64_t v34 = v27;
    uint64_t v35 = v28;
    char v36 = (char)v26;
    char v33 = 0;
    __swift_instantiateConcreteTypeFromMangledName(&_s7SwiftUI7BindingVySbGMD_0);
    Binding.wrappedValue.setter();
    [(objc_class *)_.super.super.super.isa dismissViewControllerAnimated:1 completion:0];
    outlined destroy of ImagePicker((uint64_t)v7);
  }
}

uint64_t closure #1 in ImagePicker.Coordinator.picker(_:didFinishPicking:)(uint64_t a1, unint64_t a2, uint64_t a3, void *a4, void *a5, uint64_t a6)
{
  id v31 = a5;
  unint64_t v29 = a2;
  uint64_t v11 = type metadata accessor for PHPickerResult();
  uint64_t v30 = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  __chkstk_darwin();
  uint64_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&_sScPSgMD_2);
  __chkstk_darwin();
  uint64_t v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 1, 1, v17);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a6, v11);
  type metadata accessor for MainActor();
  uint64_t v18 = a1;
  outlined copy of Data?(a1, a2);
  uint64_t v19 = a3;
  swift_errorRetain();
  id v20 = a4;
  id v21 = v31;
  uint64_t v22 = static MainActor.shared.getter();
  unint64_t v23 = (*(unsigned __int8 *)(v12 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v24 = (char *)swift_allocObject();
  *((void *)v24 + 2) = v22;
  *((void *)v24 + 3) = &protocol witness table for MainActor;
  unint64_t v26 = v29;
  uint64_t v25 = v30;
  *((void *)v24 + 4) = v18;
  *((void *)v24 + 5) = v26;
  *((void *)v24 + 6) = v19;
  *((void *)v24 + 7) = v20;
  *((void *)v24 + 8) = v21;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v24[v23], v14, v25);
  _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5_1((uint64_t)v16, (uint64_t)&async function pointer to partial apply for closure #1 in closure #1 in ImagePicker.Coordinator.picker(_:didFinishPicking:), (uint64_t)v24);
  return swift_release();
}

uint64_t closure #1 in closure #1 in ImagePicker.Coordinator.picker(_:didFinishPicking:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[7] = a8;
  v8[8] = v13;
  v8[5] = a6;
  v8[6] = a7;
  v8[3] = a4;
  _OWORD v8[4] = a5;
  type metadata accessor for MainActor();
  v8[9] = static MainActor.shared.getter();
  uint64_t v10 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(closure #1 in closure #1 in ImagePicker.Coordinator.picker(_:didFinishPicking:), v10, v9);
}

uint64_t closure #1 in closure #1 in ImagePicker.Coordinator.picker(_:didFinishPicking:)()
{
  unint64_t v1 = *(void *)(v0 + 32);
  swift_release();
  if (v1 >> 60 != 15)
  {
    uint64_t v2 = *(void *)(v0 + 24);
    unint64_t v3 = *(void *)(v0 + 32);
    id v4 = objc_allocWithZone((Class)UIImage);
    outlined copy of Data._Representation(v2, v3);
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    uint64_t v6 = (UIImage *)[v4 initWithData:isa];

    if (v6)
    {
      uint64_t v7 = *(void *)(v0 + 48);
      uint64_t v8 = PHPickerResult.assetIdentifier.getter();
      uint64_t v9 = (uint64_t *)(v7 + OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_selectedPhotoIdentifier);
      *uint64_t v9 = v8;
      v9[1] = v10;
      swift_bridgeObjectRelease();
      uint64_t v11 = UIImagePNGRepresentation(v6);
      if (v11)
      {
        uint64_t v12 = v11;
        uint64_t v13 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v15 = v14;

        double v16 = UIImage.centeredSquareCropRect.getter();
        id v20 = ImagePicker.Coordinator.imageEditingViewController(imageData:cropRect:)(v16, v17, v18, v19);
        if (v20)
        {
          id v21 = v20;
          uint64_t v23 = *(void *)(v0 + 24);
          unint64_t v22 = *(void *)(v0 + 32);
          [*(id *)(v0 + 56) presentViewController:v20 animated:1 completion:0];
          [v21 becomeFirstResponder];
          outlined consume of Data?(v23, v22);
        }
        else
        {
          outlined consume of Data?(*(void *)(v0 + 24), *(void *)(v0 + 32));
        }

        outlined consume of Data._Representation(v13, v15);
      }
      else
      {
        outlined consume of Data?(*(void *)(v0 + 24), *(void *)(v0 + 32));
      }
      goto LABEL_15;
    }
    outlined consume of Data?(*(void *)(v0 + 24), *(void *)(v0 + 32));
  }
  uint64_t v24 = *(void *)(v0 + 40);
  uint64_t v25 = *(void *)(v0 + 48);
  _StringGuts.grow(_:)(49);
  swift_bridgeObjectRelease();
  *(void *)(v0 + 16) = v24;
  swift_errorRetain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&_ss5Error_pSgMD_0);
  v26._uint64_t countAndFlagsBits = String.init<A>(describing:)();
  String.append(_:)(v26);
  swift_bridgeObjectRelease();
  uint64_t v27 = *(void (**)(uint64_t, uint64_t))(v25
                                                + OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_pickHandler);
  if (v27)
  {
    lazy protocol witness table accessor for type ImagePicker.Coordinator.ImagePickerError and conformance ImagePicker.Coordinator.ImagePickerError();
    uint64_t v28 = swift_allocError();
    *unint64_t v29 = 0xD00000000000002FLL;
    v29[1] = 0x8000000100475D20;
    swift_retain();
    v27(v28, 1);
    outlined consume of (@escaping @callee_guaranteed () -> ())?((uint64_t)v27);
    swift_errorRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v30 = *(void **)(v0 + 56);
  id v31 = ImagePicker.Coordinator.downloadFailureAlertController.getter();
  [v30 presentViewController:v31 animated:1 completion:0];

  uint64_t v32 = PHPickerResult.assetIdentifier.getter();
  if (v33)
  {
    uint64_t v34 = v32;
    uint64_t v35 = v33;
    char v36 = *(void **)(v0 + 56);
    __swift_instantiateConcreteTypeFromMangledName(&_ss23_ContiguousArrayStorageCySSGMD_1);
    uint64_t v37 = swift_allocObject();
    *(_OWORD *)(v37 + 16) = xmmword_100493400;
    *(void *)(v37 + 32) = v34;
    *(void *)(v37 + 40) = v35;
    Class v38 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v36 deselectAssetsWithIdentifiers:v38];
  }
LABEL_15:
  uint64_t v39 = *(uint64_t (**)(void))(v0 + 8);
  return v39();
}

double UIImage.centeredSquareCropRect.getter()
{
  [v0 size];
  double v2 = v1;
  [v0 size];
  double v4 = v3;
  [v0 size];
  double v6 = v5;
  [v0 size];
  double v8 = v7;
  [v0 size];
  double v10 = v9;
  double v12 = v11;
  [v0 size];
  double v14 = (v10 - v13) * 0.5 + 0.0;
  double v16 = (v12 - v15) * 0.5 + 0.0;
  if (v6 < v8) {
    double v17 = v16;
  }
  else {
    double v17 = 0.0;
  }
  if (v6 < v8) {
    double v18 = 0.0;
  }
  else {
    double v18 = v14;
  }
  if (v4 >= v2) {
    double v19 = v2;
  }
  else {
    double v19 = v4;
  }
  double v20 = v19;
  CGRect v26 = CGRectIntegral(*(CGRect *)(&v17 - 1));
  double x = v26.origin.x;
  CGFloat y = v26.origin.y;
  CGFloat width = v26.size.width;
  CGFloat height = v26.size.height;
  CGRectGetWidth(v26);
  v27.origin.double x = x;
  v27.origin.CGFloat y = y;
  v27.size.CGFloat width = width;
  v27.size.CGFloat height = height;
  CGRectGetHeight(v27);
  return x;
}

Swift::Void __swiftcall ImagePicker.Coordinator.documentPicker(_:didPickDocumentsAt:)(UIDocumentPickerViewController _, Swift::OpaquePointer didPickDocumentsAt)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for ImagePicker(0);
  __chkstk_darwin();
  double v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&_s10Foundation3URLVSgMD_1);
  __chkstk_darwin();
  double v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for URL();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin();
  double v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*((void *)didPickDocumentsAt._rawValue + 2))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
    goto LABEL_9;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v10, (char *)didPickDocumentsAt._rawValue+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80)), v11);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
LABEL_9:
    outlined destroy of TaskPriority?((uint64_t)v10, &_s10Foundation3URLVSgMD_1);
LABEL_10:
    uint64_t v46 = 0;
    unint64_t v47 = 0xE000000000000000;
    _StringGuts.grow(_:)(59);
    v32._uint64_t countAndFlagsBits = 0xD000000000000025;
    v32._object = (void *)0x8000000100475B20;
    String.append(_:)(v32);
    v33._uint64_t countAndFlagsBits = Array.description.getter();
    String.append(_:)(v33);
    swift_bridgeObjectRelease();
    v34._object = (void *)0x8000000100475B50;
    v34._uint64_t countAndFlagsBits = 0xD000000000000014;
    String.append(_:)(v34);
    unint64_t v35 = v47;
    char v36 = *(void (**)(uint64_t, uint64_t))(v3
                                                  + OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_pickHandler);
    if (v36)
    {
      uint64_t v37 = v46;
      lazy protocol witness table accessor for type ImagePicker.Coordinator.ImagePickerError and conformance ImagePicker.Coordinator.ImagePickerError();
      uint64_t v38 = swift_allocError();
      *uint64_t v39 = v37;
      v39[1] = v35;
      swift_retain();
      v36(v38, 1);
      outlined consume of (@escaping @callee_guaranteed () -> ())?((uint64_t)v36);
      swift_errorRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    outlined init with copy of ImagePicker(v3 + OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_imagePicker, (uint64_t)v8);
    char v40 = &v8[*(int *)(v6 + 32)];
    uint64_t v41 = *(void *)v40;
    unint64_t v42 = *((void *)v40 + 1);
    LOBYTE(v40) = v40[16];
    uint64_t v46 = v41;
    unint64_t v47 = v42;
    char v48 = (char)v40;
    char v45 = 0;
    __swift_instantiateConcreteTypeFromMangledName(&_s7SwiftUI7BindingVySbGMD_0);
    Binding.wrappedValue.setter();
    [(objc_class *)_.super.super.super.isa dismissViewControllerAnimated:1 completion:0];
    outlined destroy of ImagePicker((uint64_t)v8);
    return;
  }
  uint64_t v44 = v3;
  Class isa = _.super.super.super.isa;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
  URL.path.getter();
  id v16 = objc_allocWithZone((Class)UIImage);
  NSString v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  double v18 = (UIImage *)[v16 initWithContentsOfFile:v17];

  if (!v18)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    _.super.super.super.Class isa = isa;
    uint64_t v3 = v44;
    goto LABEL_10;
  }
  id v19 = [(objc_class *)isa view];
  if (v19)
  {
    double v20 = v19;
    [v19 endEditing:1];

    id v21 = UIImagePNGRepresentation(v18);
    if (!v21)
    {

      goto LABEL_17;
    }
    unint64_t v22 = v21;
    uint64_t v23 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v25 = v24;

    double v26 = UIImage.centeredSquareCropRect.getter();
    id v30 = ImagePicker.Coordinator.imageEditingViewController(imageData:cropRect:)(v26, v27, v28, v29);
    if (v30)
    {
      id v31 = v30;
      [(objc_class *)isa presentViewController:v30 animated:1 completion:0];

      outlined consume of Data._Representation(v23, v25);
LABEL_17:
      (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
      return;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    outlined consume of Data._Representation(v23, v25);
  }
  else
  {
    __break(1u);
  }
}

Swift::Void __swiftcall ImagePicker.Coordinator.documentPickerWasCancelled(_:)(UIDocumentPickerViewController a1)
{
  uint64_t v3 = type metadata accessor for ImagePicker(0) - 8;
  __chkstk_darwin();
  double v5 = &v9[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  outlined init with copy of ImagePicker(v1 + OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_imagePicker, (uint64_t)v5);
  uint64_t v6 = &v5[*(int *)(v3 + 40)];
  uint64_t v7 = *(void *)v6;
  uint64_t v8 = *((void *)v6 + 1);
  LOBYTE(v6) = v6[16];
  uint64_t v10 = v7;
  uint64_t v11 = v8;
  char v12 = (char)v6;
  v9[7] = 0;
  __swift_instantiateConcreteTypeFromMangledName(&_s7SwiftUI7BindingVySbGMD_0);
  Binding.wrappedValue.setter();
  [(objc_class *)a1.super.super.super.isa dismissViewControllerAnimated:1 completion:0];
  outlined destroy of ImagePicker((uint64_t)v5);
}

Swift::Void __swiftcall ImagePicker.Coordinator.presentationControllerDidDismiss(_:)(UIPresentationController a1)
{
}

id ImagePicker.Coordinator.imageEditingViewController(imageData:cropRect:)(double a1, double a2, double a3, double a4)
{
  type metadata accessor for ImageEditingViewController();
  id v9 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  id v11 = objc_msgSend(v9, "_initWithSourceImageData:cropRect:", isa, a1, a2, a3, a4);

  if (v11)
  {
    id v12 = v11;
    [v12 setDelegate:v4];
    [v12 setModalInPresentation:1];
    uint64_t v13 = v4 + OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_imagePicker;
    if (*(void *)(v13 + *(int *)(type metadata accessor for ImagePicker(0) + 36)))
    {
      uint64_t v14 = swift_bridgeObjectRetain();
      UIImagePickerController.setProperties(_:)((Swift::OpaquePointer)v14);
      swift_bridgeObjectRelease();
    }
  }
  return v11;
}

id ImagePicker.Coordinator.downloadFailureAlertController.getter()
{
  uint64_t v1 = OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator____lazy_storage___downloadFailureAlertController;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator____lazy_storage___downloadFailureAlertController);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator____lazy_storage___downloadFailureAlertController);
  }
  else
  {
    id v4 = closure #1 in ImagePicker.Coordinator.downloadFailureAlertController.getter();
    double v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id closure #1 in ImagePicker.Coordinator.downloadFailureAlertController.getter()
{
  type metadata accessor for Locale();
  __chkstk_darwin();
  uint64_t v0 = type metadata accessor for String.LocalizationValue();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin();
  id v3 = (char *)v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  double v5 = (char *)v16 - v4;
  String.LocalizationValue.init(stringLiteral:)();
  id v6 = *(void (**)(char *, char *, uint64_t))(v1 + 16);
  v6(v3, v5, v0);
  if (one-time initialization token for module != -1) {
    swift_once();
  }
  id v7 = (id)static NSBundle.module;
  static Locale.current.getter();
  v16[0] = String.init(localized:table:bundle:locale:comment:)();
  uint64_t v8 = *(void (**)(char *, uint64_t))(v1 + 8);
  v8(v5, v0);
  String.LocalizationValue.init(stringLiteral:)();
  v6(v3, v5, v0);
  id v9 = (id)static NSBundle.module;
  static Locale.current.getter();
  String.init(localized:table:bundle:locale:comment:)();
  v8(v5, v0);
  NSString v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v12 = [self alertControllerWithTitle:v10 message:v11 preferredStyle:1];

  String.okButtonTitle.unsafeMutableAddressor();
  swift_bridgeObjectRetain();
  NSString v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v14 = [self actionWithTitle:v13 style:1 handler:0];

  [v12 addAction:v14];
  return v12;
}

void ImagePicker.Coordinator.init()()
{
}

id ImagePicker.Coordinator.__deallocating_deinit()
{
  return ImagePicker.Coordinator.__deallocating_deinit(0, (uint64_t (*)(void))type metadata accessor for ImagePicker.Coordinator);
}

char *ImagePicker.makeCoordinator()()
{
  uint64_t v1 = *(void *)(type metadata accessor for ImagePicker(0) - 8);
  uint64_t v2 = *(void *)(v1 + 64);
  __chkstk_darwin();
  outlined init with copy of ImagePicker(v0, (uint64_t)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v3 = (objc_class *)type metadata accessor for ImagePicker.Coordinator(0);
  uint64_t v4 = (char *)objc_allocWithZone(v3);
  double v5 = &v4[OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_pickHandler];
  *(void *)double v5 = 0;
  *((void *)v5 + 1) = 0;
  id v6 = &v4[OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_selectedPhotoIdentifier];
  *(void *)id v6 = 0;
  *((void *)v6 + 1) = 0;
  *(void *)&v4[OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator____lazy_storage___downloadFailureAlertController] = 0;
  outlined init with copy of ImagePicker((uint64_t)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t)&v4[OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_imagePicker]);
  v13.receiver = v4;
  v13.super_class = v3;
  id v7 = (char *)objc_msgSendSuper2(&v13, "init");
  outlined destroy of ImagePicker((uint64_t)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  outlined init with copy of ImagePicker(v0, (uint64_t)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v8 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v9 = swift_allocObject();
  outlined init with take of ImagePicker((uint64_t)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), v9 + v8);
  NSString v10 = (void (**)(void *, char))&v7[OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_pickHandler];
  uint64_t v11 = *(void *)&v7[OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_pickHandler];
  *NSString v10 = partial apply for closure #1 in ImagePicker.makeCoordinator();
  v10[1] = (void (*)(void *, char))v9;
  outlined consume of (@escaping @callee_guaranteed () -> ())?(v11);
  return v7;
}

void closure #1 in ImagePicker.makeCoordinator()(void *a1, char a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Logger();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    swift_errorRetain();
    uint64_t v20 = Logger.playlistCovers.unsafeMutableAddressor();
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v20, v6);
    swift_errorRetain();
    swift_errorRetain();
    id v21 = Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = swift_slowAlloc();
      *(void *)&long long v26 = swift_slowAlloc();
      *(_DWORD *)uint64_t v23 = 136446210;
      unint64_t v28 = (unint64_t)a1;
      swift_errorRetain();
      __swift_instantiateConcreteTypeFromMangledName(&_ss5Error_pMD_1);
      uint64_t v24 = String.init<A>(describing:)();
      *(void *)(v23 + 4) = _s2os32getNullTerminatedUTF8PointerImpl_21storingStringOwnersInSVSS_SpyypGSgztF_2(v24, v25, (uint64_t *)&v26);
      swift_bridgeObjectRelease();
      outlined consume of Result<A.ResultContent, Error><A>(a1, 1);
      outlined consume of Result<A.ResultContent, Error><A>(a1, 1);
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "ImagePicker failed with error: %{public}s", (uint8_t *)v23, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      outlined consume of Result<A.ResultContent, Error><A>(a1, 1);
    }
    else
    {
      outlined consume of Result<A.ResultContent, Error><A>(a1, 1);
      outlined consume of Result<A.ResultContent, Error><A>(a1, 1);
      swift_errorRelease();
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  else
  {
    NSString v10 = (int *)type metadata accessor for ImagePicker(0);
    uint64_t v11 = (long long *)(a3 + v10[5]);
    long long v12 = *v11;
    uint64_t v13 = *((void *)v11 + 2);
    long long v26 = v12;
    *(void *)&long long v27 = v13;
    unint64_t v28 = (unint64_t)a1;
    id v14 = a1;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Binding<UIImage?>);
    Binding.wrappedValue.setter();
    double v15 = *(void (**)(unint64_t, void *))(a3 + v10[7]);
    if (v15)
    {
      uint64_t v16 = a3 + v10[6];
      uint64_t v17 = *(void *)(v16 + 8);
      *(void *)&long long v26 = *(void *)v16;
      *((void *)&v26 + 1) = v17;
      long long v27 = *(_OWORD *)(v16 + 16);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<ImagePicker.SourceType>);
      Binding.wrappedValue.getter();
      unint64_t v18 = v28;
      id v19 = v29;
      v15(v28, v29);
      outlined consume of ImagePicker.SourceType(v18, v19);
    }
  }
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance ImagePicker.SourceType(uint64_t a1, uint64_t a2)
{
  return specialized static ImagePicker.SourceType.__derived_enum_equals(_:_:)(*(void **)a1, *(void **)(a1 + 8), *(void **)a2, *(void **)(a2 + 8));
}

char *protocol witness for UIViewControllerRepresentable.makeCoordinator() in conformance ImagePicker@<X0>(char **a1@<X8>)
{
  id result = ImagePicker.makeCoordinator()();
  *a1 = result;
  return result;
}

uint64_t protocol witness for static View._makeView(view:inputs:) in conformance ImagePicker(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = lazy protocol witness table accessor for type ImagePicker.Coordinator and conformance ImagePicker.Coordinator((unint64_t *)&lazy protocol witness table cache variable for type ImagePicker and conformance ImagePicker, (void (*)(uint64_t))type metadata accessor for ImagePicker);

  return static UIViewControllerRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t protocol witness for static View._makeViewList(view:inputs:) in conformance ImagePicker(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = lazy protocol witness table accessor for type ImagePicker.Coordinator and conformance ImagePicker.Coordinator((unint64_t *)&lazy protocol witness table cache variable for type ImagePicker and conformance ImagePicker, (void (*)(uint64_t))type metadata accessor for ImagePicker);

  return static UIViewControllerRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void protocol witness for View.body.getter in conformance ImagePicker()
{
}

id ImageEditingViewController.__allocating_init(navigationBarClass:toolbarClass:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a2;
  if (a1)
  {
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    if (!v3) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  uint64_t ObjCClassFromMetadata = 0;
  if (a2) {
LABEL_3:
  }
    uint64_t v3 = swift_getObjCClassFromMetadata();
LABEL_4:
  id v5 = objc_allocWithZone(v2);

  return [v5 initWithNavigationBarClass:ObjCClassFromMetadata toolbarClass:v3];
}

id ImageEditingViewController.init(navigationBarClass:toolbarClass:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a2;
  if (!a1)
  {
    uint64_t ObjCClassFromMetadata = 0;
    if (!a2) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  if (v3) {
LABEL_3:
  }
    uint64_t v3 = swift_getObjCClassFromMetadata();
LABEL_4:
  v6.receiver = v2;
  v6.super_class = (Class)type metadata accessor for ImageEditingViewController();
  return objc_msgSendSuper2(&v6, "initWithNavigationBarClass:toolbarClass:", ObjCClassFromMetadata, v3);
}

id ImageEditingViewController.__allocating_init(rootViewController:)(void *a1)
{
  id v3 = [objc_allocWithZone(v1) initWithRootViewController:a1];

  return v3;
}

id ImageEditingViewController.init(rootViewController:)(void *a1)
{
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for ImageEditingViewController();
  id v3 = objc_msgSendSuper2(&v5, "initWithRootViewController:", a1);

  return v3;
}

id ImageEditingViewController.init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  if (a2)
  {
    NSString v5 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v5 = 0;
  }
  v8.receiver = v3;
  v8.super_class = (Class)type metadata accessor for ImageEditingViewController();
  id v6 = objc_msgSendSuper2(&v8, "initWithNibName:bundle:", v5, a3);

  return v6;
}

id ImageEditingViewController.init(coder:)(void *a1)
{
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for ImageEditingViewController();
  id v3 = objc_msgSendSuper2(&v5, "initWithCoder:", a1);

  return v3;
}

id ImageEditingViewController.__deallocating_deinit(uint64_t a1)
{
  return ImagePicker.Coordinator.__deallocating_deinit(a1, type metadata accessor for ImageEditingViewController);
}

id ImagePicker.Coordinator.__deallocating_deinit(uint64_t a1, uint64_t (*a2)(void))
{
  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return objc_msgSendSuper2(&v4, "dealloc");
}

unint64_t one-time initialization function for profileImagePickerProperties()
{
  unint64_t result = _sSD17dictionaryLiteralSDyxq_Gx_q_td_tcfCSS_SbTgm5_1((uint64_t)&outlined read-only object #0 of one-time initialization function for profileImagePickerProperties);
  static UIImagePickerController.profileImagePickerProperties = result;
  return result;
}

uint64_t type metadata accessor for ImagePicker(uint64_t a1)
{
  return type metadata accessor for Notice.Variant(a1, type metadata singleton initialization cache for ImagePicker);
}

uint64_t type metadata accessor for ImagePicker.Coordinator(uint64_t a1)
{
  return type metadata accessor for Notice.Variant(a1, (uint64_t *)&type metadata singleton initialization cache for ImagePicker.Coordinator);
}

uint64_t static UIImagePickerController.profileImagePickerProperties.getter()
{
  if (one-time initialization token for profileImagePickerProperties != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

uint64_t lazy protocol witness table accessor for type ImagePicker.Coordinator and conformance ImagePicker.Coordinator(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ImagePicker.Coordinator.ImagePickerError and conformance ImagePicker.Coordinator.ImagePickerError()
{
  unint64_t result = lazy protocol witness table cache variable for type ImagePicker.Coordinator.ImagePickerError and conformance ImagePicker.Coordinator.ImagePickerError;
  if (!lazy protocol witness table cache variable for type ImagePicker.Coordinator.ImagePickerError and conformance ImagePicker.Coordinator.ImagePickerError)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ImagePicker.Coordinator.ImagePickerError and conformance ImagePicker.Coordinator.ImagePickerError);
  }
  return result;
}

uint64_t outlined init with copy of ImagePicker(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ImagePicker(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of ImagePicker(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ImagePicker(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t specialized static ImagePicker.SourceType.__derived_enum_equals(_:_:)(void *a1, void *a2, void *a3, void *a4)
{
  if (!a1) {
    return !a3;
  }
  if (a1 == (void *)1) {
    return a3 == (void *)1;
  }
  if (a1 == (void *)2) {
    return a3 == (void *)2;
  }
  if ((unint64_t)a3 < 3) {
    return 0;
  }
  if (specialized static Array<A>.== infix(_:_:)(a1, a3))
  {
    if (a2)
    {
      if (a4)
      {
        type metadata accessor for UIMenu(0, &lazy cache variable for type metadata for UIImage);
        id v7 = a2;
        id v8 = a4;
        char v9 = static NSObject.== infix(_:_:)();

        if (v9) {
          return 1;
        }
      }
    }
    else if (!a4)
    {
      return 1;
    }
  }
  return 0;
}

uint64_t sub_1003FE974()
{
  uint64_t v1 = type metadata accessor for PHPickerResult();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in ImagePicker.Coordinator.picker(_:didFinishPicking:)(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(type metadata accessor for PHPickerResult() - 8);
  id v8 = *(void **)(v3 + 16);
  char v9 = *(void **)(v3 + 24);
  uint64_t v10 = v3 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));

  return closure #1 in ImagePicker.Coordinator.picker(_:didFinishPicking:)(a1, a2, a3, v8, v9, v10);
}

uint64_t sub_1003FEAD4()
{
  uint64_t v1 = (int *)type metadata accessor for ImagePicker(0);
  unint64_t v2 = (*(unsigned __int8 *)(*((void *)v1 - 1) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = v0 + v2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DismissAction>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for DismissAction();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v0 + v2, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = v3 + v1[5];
  swift_release();
  swift_release();

  uint64_t v6 = v3 + v1[6];
  swift_release();
  swift_release();
  if (*(void *)(v6 + 16) >= 3uLL)
  {
    swift_bridgeObjectRelease();
  }
  if (*(void *)(v3 + v1[7])) {
    swift_release();
  }
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void partial apply for closure #1 in ImagePicker.makeCoordinator()(void *a1, char a2)
{
  char v4 = a2 & 1;
  uint64_t v5 = *(void *)(type metadata accessor for ImagePicker(0) - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  closure #1 in ImagePicker.makeCoordinator()(a1, v4, v6);
}

uint64_t type metadata accessor for ImageEditingViewController()
{
  return self;
}

uint64_t base witness table accessor for View in ImagePicker()
{
  return lazy protocol witness table accessor for type ImagePicker.Coordinator and conformance ImagePicker.Coordinator(&lazy protocol witness table cache variable for type ImagePicker and conformance ImagePicker, (void (*)(uint64_t))type metadata accessor for ImagePicker);
}

uint64_t *initializeBufferWithCopyOfBuffer for ImagePicker(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DismissAction>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for DismissAction();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = a3[5];
    uint64_t v10 = a3[6];
    Swift::String v33 = a3;
    uint64_t v11 = (uint64_t *)((char *)a1 + v9);
    long long v12 = (uint64_t *)((char *)a2 + v9);
    uint64_t v13 = v12[1];
    *uint64_t v11 = *v12;
    v11[1] = v13;
    id v14 = (void *)v12[2];
    v11[2] = v14;
    double v15 = (uint64_t *)((char *)a1 + v10);
    uint64_t v16 = (char *)a2 + v10;
    uint64_t v17 = *(uint64_t *)((char *)a2 + v10 + 8);
    *double v15 = *(uint64_t *)((char *)a2 + v10);
    v15[1] = v17;
    id v19 = (unint64_t *)((char *)a2 + v10 + 16);
    unint64_t v18 = *v19;
    swift_retain();
    swift_retain();
    id v20 = v14;
    swift_retain();
    swift_retain();
    if (v18 >= 3)
    {
      id v21 = (void *)*((void *)v16 + 3);
      v15[2] = v18;
      v15[3] = v21;
      swift_bridgeObjectRetain();
      id v22 = v21;
    }
    else
    {
      *((_OWORD *)v15 + 1) = *(_OWORD *)v19;
    }
    uint64_t v23 = v33[7];
    uint64_t v24 = (uint64_t *)((char *)a1 + v23);
    unint64_t v25 = (uint64_t *)((char *)a2 + v23);
    if (*v25)
    {
      uint64_t v26 = v25[1];
      *uint64_t v24 = *v25;
      v24[1] = v26;
      swift_retain();
    }
    else
    {
      *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
    }
    uint64_t v27 = v33[8];
    uint64_t v28 = v33[9];
    double v29 = (char *)a1 + v27;
    id v30 = (char *)a2 + v27;
    uint64_t v31 = *((void *)v30 + 1);
    *(void *)double v29 = *(void *)v30;
    *((void *)v29 + 1) = v31;
    v29[16] = v30[16];
    *(uint64_t *)((char *)a1 + v28) = *(uint64_t *)((char *)a2 + v28);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ImagePicker(uint64_t a1, int *a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DismissAction>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for DismissAction();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + a2[5];
  swift_release();
  swift_release();

  uint64_t v6 = a1 + a2[6];
  swift_release();
  swift_release();
  if (*(void *)(v6 + 16) >= 3uLL)
  {
    swift_bridgeObjectRelease();
  }
  if (*(void *)(a1 + a2[7])) {
    swift_release();
  }
  swift_release();
  swift_release();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for ImagePicker(void *a1, void *a2, int *a3)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DismissAction>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for DismissAction();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v31 = a3;
  uint64_t v9 = (void *)((char *)a1 + v7);
  uint64_t v10 = (void *)((char *)a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  long long v12 = (void *)v10[2];
  v9[2] = v12;
  uint64_t v13 = (void *)((char *)a1 + v8);
  id v14 = (char *)a2 + v8;
  uint64_t v15 = *(void *)((char *)a2 + v8 + 8);
  *uint64_t v13 = *(void *)((char *)a2 + v8);
  v13[1] = v15;
  uint64_t v17 = (void *)((char *)a2 + v8 + 16);
  unint64_t v16 = *v17;
  swift_retain();
  swift_retain();
  id v18 = v12;
  swift_retain();
  swift_retain();
  if (v16 >= 3)
  {
    id v19 = (void *)*((void *)v14 + 3);
    v13[2] = v16;
    v13[3] = v19;
    swift_bridgeObjectRetain();
    id v20 = v19;
  }
  else
  {
    *((_OWORD *)v13 + 1) = *(_OWORD *)v17;
  }
  uint64_t v21 = v31[7];
  id v22 = (void *)((char *)a1 + v21);
  uint64_t v23 = (void *)((char *)a2 + v21);
  if (*v23)
  {
    uint64_t v24 = v23[1];
    *id v22 = *v23;
    v22[1] = v24;
    swift_retain();
  }
  else
  {
    *(_OWORD *)id v22 = *(_OWORD *)v23;
  }
  uint64_t v25 = v31[8];
  uint64_t v26 = v31[9];
  uint64_t v27 = (char *)a1 + v25;
  uint64_t v28 = (char *)a2 + v25;
  uint64_t v29 = *((void *)v28 + 1);
  *(void *)uint64_t v27 = *(void *)v28;
  *((void *)v27 + 1) = v29;
  v27[16] = v28[16];
  *(void *)((char *)a1 + v26) = *(void *)((char *)a2 + v26);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ImagePicker(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    outlined destroy of TaskPriority?((uint64_t)a1, &demangling cache variable for type metadata for Environment<DismissAction>.Content);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DismissAction>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for DismissAction();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  *(void *)((char *)a1 + v7) = *(void *)((char *)a2 + v7);
  swift_retain();
  swift_release();
  *((void *)v8 + 1) = *((void *)v9 + 1);
  swift_retain();
  swift_release();
  uint64_t v10 = (void *)*((void *)v8 + 2);
  uint64_t v11 = (void *)*((void *)v9 + 2);
  *((void *)v8 + 2) = v11;
  id v12 = v11;

  uint64_t v13 = a3[6];
  id v14 = (void *)((char *)a1 + v13);
  uint64_t v15 = (void *)((char *)a2 + v13);
  *(void *)((char *)a1 + v13) = *(void *)((char *)a2 + v13);
  swift_retain();
  swift_release();
  v14[1] = v15[1];
  swift_retain();
  swift_release();
  unint64_t v16 = v15[2];
  if (v14[2] < 3uLL)
  {
    if (v16 >= 3)
    {
      v14[2] = v16;
      uint64_t v17 = (void *)v15[3];
      v14[3] = v17;
      swift_bridgeObjectRetain();
      id v18 = v17;
      goto LABEL_13;
    }
    goto LABEL_11;
  }
  if (v16 < 3)
  {
    outlined destroy of TaskPriority?((uint64_t)(v14 + 2), &demangling cache variable for type metadata for (concepts: [String], sourceImage: UIImage?));
LABEL_11:
    *((_OWORD *)v14 + 1) = *((_OWORD *)v15 + 1);
    goto LABEL_13;
  }
  v14[2] = v16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id v19 = (void *)v14[3];
  id v20 = (void *)v15[3];
  v14[3] = v20;
  id v21 = v20;

LABEL_13:
  uint64_t v22 = a3[7];
  uint64_t v23 = (void *)((char *)a1 + v22);
  uint64_t v24 = (char *)a2 + v22;
  uint64_t v25 = *(void *)((char *)a1 + v22);
  uint64_t v26 = *(void *)((char *)a2 + v22);
  if (!v25)
  {
    if (v26)
    {
      uint64_t v28 = *((void *)v24 + 1);
      *uint64_t v23 = v26;
      v23[1] = v28;
      swift_retain();
      goto LABEL_20;
    }
LABEL_19:
    *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
    goto LABEL_20;
  }
  if (!v26)
  {
    swift_release();
    goto LABEL_19;
  }
  uint64_t v27 = *((void *)v24 + 1);
  *uint64_t v23 = v26;
  v23[1] = v27;
  swift_retain();
  swift_release();
LABEL_20:
  uint64_t v29 = a3[8];
  id v30 = (char *)a1 + v29;
  uint64_t v31 = (char *)a2 + v29;
  *(void *)((char *)a1 + v29) = *(void *)((char *)a2 + v29);
  swift_retain();
  swift_release();
  *((void *)v30 + 1) = *((void *)v31 + 1);
  swift_retain();
  swift_release();
  v30[16] = v31[16];
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *initializeWithTake for ImagePicker(char *a1, char *a2, int *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DismissAction>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for DismissAction();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = a3[6];
  uint64_t v10 = &a1[v8];
  uint64_t v11 = &a2[v8];
  *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
  *((void *)v10 + 2) = *((void *)v11 + 2);
  id v12 = &a1[v9];
  uint64_t v13 = &a2[v9];
  long long v14 = *((_OWORD *)v13 + 1);
  *(_OWORD *)id v12 = *(_OWORD *)v13;
  *((_OWORD *)v12 + 1) = v14;
  uint64_t v15 = a3[7];
  unint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  uint64_t v18 = *(void *)v17;
  if (*(void *)v17)
  {
    uint64_t v19 = *((void *)v17 + 1);
    *(void *)unint64_t v16 = v18;
    *((void *)v16 + 1) = v19;
  }
  else
  {
    *(_OWORD *)unint64_t v16 = *(_OWORD *)v17;
  }
  uint64_t v20 = a3[8];
  uint64_t v21 = a3[9];
  uint64_t v22 = &a1[v20];
  uint64_t v23 = &a2[v20];
  *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
  v22[16] = v23[16];
  *(void *)&a1[v21] = *(void *)&a2[v21];
  return a1;
}

char *assignWithTake for ImagePicker(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    outlined destroy of TaskPriority?((uint64_t)a1, &demangling cache variable for type metadata for Environment<DismissAction>.Content);
    uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DismissAction>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for DismissAction();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  *(void *)&a1[v8] = *(void *)&a2[v8];
  swift_release();
  *((void *)v9 + 1) = *((void *)v10 + 1);
  swift_release();
  uint64_t v11 = (void *)*((void *)v9 + 2);
  *((void *)v9 + 2) = *((void *)v10 + 2);

  uint64_t v12 = a3[6];
  uint64_t v13 = &a1[v12];
  long long v14 = &a2[v12];
  *(void *)&a1[v12] = *(void *)&a2[v12];
  swift_release();
  *((void *)v13 + 1) = *((void *)v14 + 1);
  swift_release();
  unint64_t v15 = *((void *)v14 + 2);
  if (*((void *)v13 + 2) < 3uLL) {
    goto LABEL_8;
  }
  if (v15 < 3)
  {
    outlined destroy of TaskPriority?((uint64_t)(v13 + 16), &demangling cache variable for type metadata for (concepts: [String], sourceImage: UIImage?));
LABEL_8:
    *((_OWORD *)v13 + 1) = *((_OWORD *)v14 + 1);
    goto LABEL_10;
  }
  *((void *)v13 + 2) = v15;
  swift_bridgeObjectRelease();
  unint64_t v16 = (void *)*((void *)v13 + 3);
  *((void *)v13 + 3) = *((void *)v14 + 3);

LABEL_10:
  uint64_t v17 = a3[7];
  uint64_t v18 = &a1[v17];
  uint64_t v19 = &a2[v17];
  uint64_t v20 = *(void *)&a1[v17];
  uint64_t v21 = *(void *)&a2[v17];
  if (!v20)
  {
    if (v21)
    {
      uint64_t v23 = *((void *)v19 + 1);
      *(void *)uint64_t v18 = v21;
      *((void *)v18 + 1) = v23;
      goto LABEL_17;
    }
LABEL_16:
    *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
    goto LABEL_17;
  }
  if (!v21)
  {
    swift_release();
    goto LABEL_16;
  }
  uint64_t v22 = *((void *)v19 + 1);
  *(void *)uint64_t v18 = v21;
  *((void *)v18 + 1) = v22;
  swift_release();
LABEL_17:
  uint64_t v24 = a3[8];
  uint64_t v25 = &a1[v24];
  uint64_t v26 = &a2[v24];
  *(void *)&a1[v24] = *(void *)&a2[v24];
  swift_release();
  *((void *)v25 + 1) = *((void *)v26 + 1);
  swift_release();
  v25[16] = v26[16];
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ImagePicker(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003FF8C0);
}

uint64_t sub_1003FF8C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DismissAction>);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for ImagePicker(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003FF99C);
}

uint64_t sub_1003FF99C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DismissAction>);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

void type metadata completion function for ImagePicker()
{
  type metadata accessor for Environment<DismissAction>.Content();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t ObjC metadata update function for ImagePicker.Coordinator()
{
  return type metadata accessor for ImagePicker.Coordinator(0);
}

uint64_t type metadata completion function for ImagePicker.Coordinator()
{
  uint64_t result = type metadata accessor for ImagePicker(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

void destroy for ImagePicker.SourceType(void *a1)
{
  if (*a1 >= 0xFFFFFFFFuLL)
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = (void *)a1[1];
  }
}

uint64_t initializeBufferWithCopyOfBuffer for ImagePicker.SourceType(uint64_t a1, uint64_t a2)
{
  if (*(void *)a2 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    uint64_t v3 = *(void **)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    swift_bridgeObjectRetain();
    id v4 = v3;
  }
  return a1;
}

uint64_t assignWithCopy for ImagePicker.SourceType(uint64_t a1, unint64_t *a2)
{
  unint64_t v4 = *(void *)a1;
  unint64_t v5 = *a2;
  if (v4 < 0xFFFFFFFF)
  {
    if (v5 >= 0xFFFFFFFF)
    {
      *(void *)a1 = v5;
      uint64_t v9 = (void *)a2[1];
      *(void *)(a1 + 8) = v9;
      swift_bridgeObjectRetain();
      id v10 = v9;
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v5 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();

    goto LABEL_7;
  }
  *(void *)a1 = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void **)(a1 + 8);
  uint64_t v7 = (void *)a2[1];
  *(void *)(a1 + 8) = v7;
  id v8 = v7;

  return a1;
}

uint64_t assignWithTake for ImagePicker.SourceType(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  if (*(void *)a2 < 0xFFFFFFFFuLL)
  {
    swift_bridgeObjectRelease();

LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  unint64_t v4 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);

  return a1;
}

uint64_t getEnumTagSinglePayload for ImagePicker.SourceType(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFD && *((unsigned char *)a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483645);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 2;
  if (v4 >= 4) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ImagePicker.SourceType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(void *)uint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)uint64_t result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2 + 2;
    }
  }
  return result;
}

void *destructiveInjectEnumTag for ImagePicker.SourceType(void *result, int a2)
{
  if (a2 < 0)
  {
    uint64_t v2 = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else
  {
    if (!a2) {
      return result;
    }
    uint64_t v2 = (a2 - 1);
  }
  *uint64_t result = v2;
  return result;
}

ValueMetadata *type metadata accessor for ImagePicker.SourceType()
{
  return &type metadata for ImagePicker.SourceType;
}

void *type metadata accessor for ImagePicker.Coordinator.ImagePickerError()
{
  return &unk_100548258;
}

uint64_t sub_1003FFE88()
{
  uint64_t v1 = type metadata accessor for PHPickerResult();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  unint64_t v4 = *(void *)(v0 + 40);
  if (v4 >> 60 != 15) {
    outlined consume of Data._Representation(*(void *)(v0 + 32), v4);
  }
  swift_errorRelease();

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + ((v3 + 72) & ~v3), v1);

  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #1 in ImagePicker.Coordinator.picker(_:didFinishPicking:)(uint64_t a1)
{
  type metadata accessor for PHPickerResult();
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = v1[7];
  uint64_t v10 = v1[8];
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = partial apply for closure #1 in static MusicEngagementExtension.performRequest(with:completion:);
  return closure #1 in closure #1 in ImagePicker.Coordinator.picker(_:didFinishPicking:)(a1, v4, v5, v6, v7, v8, v9, v10);
}

double InteractionFeedbackLoadingView.init(delay:)(double a1)
{
  return a1;
}

uint64_t InteractionFeedbackLoadingView.body.getter@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<<<opaque return type of View.progressViewStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _TraitWritingModifier<TransitionTraitKey>>?, Spacer)>>);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v9 = static VerticalAlignment.center.getter();
  *((void *)v9 + 1) = 0;
  v9[16] = 1;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_HStackLayout, TupleView<(Spacer, ModifiedContent<ModifiedContent<<<opaque return type of View.progressViewStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _TraitWritingModifier<TransitionTraitKey>>?, Spacer)>>);
  closure #1 in InteractionFeedbackLoadingView.body.getter(a1, a2, &v9[*(int *)(v10 + 44)]);
  uint64_t v11 = swift_allocObject();
  *(double *)(v11 + 16) = a4;
  *(unsigned char *)(v11 + 24) = a1;
  *(void *)(v11 + 32) = a2;
  outlined init with copy of (String, Any)((uint64_t)v9, a3, &demangling cache variable for type metadata for HStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<<<opaque return type of View.progressViewStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _TraitWritingModifier<TransitionTraitKey>>?, Spacer)>>);
  uint64_t v12 = (uint64_t (**)())(a3
                       + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<<<opaque return type of View.progressViewStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _TraitWritingModifier<TransitionTraitKey>>?, Spacer)>>, _AppearanceActionModifier>)
                                + 36));
  *uint64_t v12 = partial apply for closure #2 in InteractionFeedbackLoadingView.body.getter;
  v12[1] = (uint64_t (*)())v11;
  v12[2] = 0;
  v12[3] = 0;
  swift_retain();
  return outlined destroy of TaskPriority?((uint64_t)v9, &demangling cache variable for type metadata for HStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<<<opaque return type of View.progressViewStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _TraitWritingModifier<TransitionTraitKey>>?, Spacer)>>);
}

uint64_t closure #1 in InteractionFeedbackLoadingView.body.getter@<X0>(char a1@<W0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v56 = a2;
  uint64_t v57 = a3;
  uint64_t v4 = type metadata accessor for OpacityTransition();
  uint64_t v54 = *(void *)(v4 - 8);
  uint64_t v55 = v4;
  __chkstk_darwin();
  uint64_t v52 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v53 = (char *)&v43 - v6;
  uint64_t v7 = type metadata accessor for ControlSize();
  uint64_t v50 = *(void *)(v7 - 8);
  uint64_t v51 = v7;
  __chkstk_darwin();
  uint64_t v46 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for CircularProgressViewStyle();
  uint64_t v45 = *(void *)(v9 - 8);
  __chkstk_darwin();
  uint64_t v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ProgressView<EmptyView, EmptyView>);
  uint64_t v44 = *(void *)(v12 - 8);
  __chkstk_darwin();
  uint64_t v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.progressViewStyle<A>(_:)>>.0);
  uint64_t v47 = *(void *)(v49 - 8);
  __chkstk_darwin();
  unint64_t v16 = (char *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.progressViewStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>);
  __chkstk_darwin();
  uint64_t v18 = (char *)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.progressViewStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _TraitWritingModifier<TransitionTraitKey>>);
  uint64_t v19 = *(void *)(v58 - 8);
  __chkstk_darwin();
  uint64_t v48 = (uint64_t)&v43 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.progressViewStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _TraitWritingModifier<TransitionTraitKey>>?);
  __chkstk_darwin();
  uint64_t v22 = (char *)&v43 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v24 = (char *)&v43 - v23;
  char v59 = a1;
  uint64_t v60 = v56;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Bool>);
  State.wrappedValue.getter();
  uint64_t v25 = 1;
  if (v61 == 1)
  {
    ProgressView<>.init<>()();
    CircularProgressViewStyle.init()();
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type ProgressView<EmptyView, EmptyView> and conformance ProgressView<A, B>, &demangling cache variable for type metadata for ProgressView<EmptyView, EmptyView>);
    lazy protocol witness table accessor for type CircularProgressViewStyle and conformance CircularProgressViewStyle(&lazy protocol witness table cache variable for type CircularProgressViewStyle and conformance CircularProgressViewStyle, (void (*)(uint64_t))&type metadata accessor for CircularProgressViewStyle);
    View.progressViewStyle<A>(_:)();
    (*(void (**)(char *, uint64_t))(v45 + 8))(v11, v9);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v14, v12);
    uint64_t v27 = v50;
    uint64_t v26 = v51;
    uint64_t v28 = v46;
    (*(void (**)(char *, void, uint64_t))(v50 + 104))(v46, enum case for ControlSize.large(_:), v51);
    uint64_t KeyPath = swift_getKeyPath();
    id v30 = (uint64_t *)&v18[*(int *)(v43 + 36)];
    uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<ControlSize>);
    (*(void (**)(char *, char *, uint64_t))(v27 + 16))((char *)v30 + *(int *)(v31 + 28), v28, v26);
    *id v30 = KeyPath;
    uint64_t v32 = v47;
    uint64_t v33 = v49;
    (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v18, v16, v49);
    (*(void (**)(char *, uint64_t))(v27 + 8))(v28, v26);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v33);
    Swift::String v34 = v53;
    OpacityTransition.init()();
    uint64_t v36 = v54;
    uint64_t v35 = v55;
    (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v52, v34, v55);
    lazy protocol witness table accessor for type CircularProgressViewStyle and conformance CircularProgressViewStyle(&lazy protocol witness table cache variable for type OpacityTransition and conformance OpacityTransition, (void (*)(uint64_t))&type metadata accessor for OpacityTransition);
    uint64_t v37 = AnyTransition.init<A>(_:)();
    uint64_t v38 = v48;
    outlined init with copy of (String, Any)((uint64_t)v18, v48, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.progressViewStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>);
    *(void *)(v38 + *(int *)(v58 + 36)) = v37;
    (*(void (**)(char *, uint64_t))(v36 + 8))(v34, v35);
    outlined destroy of TaskPriority?((uint64_t)v18, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.progressViewStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>);
    outlined init with take of ModifiedContent<ModifiedContent<<<opaque return type of View.progressViewStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _TraitWritingModifier<TransitionTraitKey>>(v38, (uint64_t)v24);
    uint64_t v25 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56))(v24, v25, 1, v58);
  outlined init with copy of (String, Any)((uint64_t)v24, (uint64_t)v22, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.progressViewStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _TraitWritingModifier<TransitionTraitKey>>?);
  uint64_t v39 = v57;
  *uint64_t v57 = 0;
  *((unsigned char *)v39 + 8) = 1;
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Spacer, ModifiedContent<ModifiedContent<<<opaque return type of View.progressViewStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _TraitWritingModifier<TransitionTraitKey>>?, Spacer));
  outlined init with copy of (String, Any)((uint64_t)v22, (uint64_t)v39 + *(int *)(v40 + 48), &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.progressViewStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _TraitWritingModifier<TransitionTraitKey>>?);
  uint64_t v41 = (char *)v39 + *(int *)(v40 + 64);
  *(void *)uint64_t v41 = 0;
  v41[8] = 1;
  outlined destroy of TaskPriority?((uint64_t)v24, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.progressViewStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _TraitWritingModifier<TransitionTraitKey>>?);
  return outlined destroy of TaskPriority?((uint64_t)v22, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.progressViewStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _TraitWritingModifier<TransitionTraitKey>>?);
}

uint64_t closure #2 in InteractionFeedbackLoadingView.body.getter(char a1, uint64_t a2, double a3)
{
  __swift_instantiateConcreteTypeFromMangledName(&_sScPSgMD_2);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  uint64_t v9 = swift_allocObject();
  *(double *)(v9 + 16) = a3;
  *(unsigned char *)(v9 + 24) = a1;
  *(void *)(v9 + 32) = a2;
  swift_retain();
  static Task<>.delayed(by:priority:task:)((uint64_t)v7, (uint64_t)&async function pointer to partial apply for closure #1 in closure #2 in InteractionFeedbackLoadingView.body.getter, v9, (uint64_t)&type metadata for () + 8, a3);
  swift_release();
  swift_release();
  return outlined destroy of TaskPriority?((uint64_t)v7, &_sScPSgMD_2);
}

uint64_t sub_100400AC4()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t partial apply for closure #2 in InteractionFeedbackLoadingView.body.getter()
{
  return closure #2 in InteractionFeedbackLoadingView.body.getter(*(unsigned char *)(v0 + 24), *(void *)(v0 + 32), *(double *)(v0 + 16));
}

uint64_t associated type witness table accessor for View.Body : View in InteractionFeedbackLoadingView()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t closure #1 in closure #2 in InteractionFeedbackLoadingView.body.getter(uint64_t a1, char a2, uint64_t a3)
{
  *(void *)(v3 + 32) = a3;
  *(unsigned char *)(v3 + 41) = a2;
  return _swift_task_switch(closure #1 in closure #2 in InteractionFeedbackLoadingView.body.getter, 0, 0);
}

uint64_t closure #1 in closure #2 in InteractionFeedbackLoadingView.body.getter()
{
  *(unsigned char *)(v0 + 16) = *(unsigned char *)(v0 + 41);
  *(void *)(v0 + 24) = *(void *)(v0 + 32);
  *(unsigned char *)(v0 + 40) = 1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Bool>);
  State.wrappedValue.setter();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t protocol witness for View.body.getter in conformance InteractionFeedbackLoadingView@<X0>(uint64_t a1@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<<<opaque return type of View.progressViewStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _TraitWritingModifier<TransitionTraitKey>>?, Spacer)>>);
  __chkstk_darwin();
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *v1;
  char v6 = *((unsigned char *)v1 + 8);
  uint64_t v7 = v1[2];
  *(void *)uint64_t v4 = static VerticalAlignment.center.getter();
  *((void *)v4 + 1) = 0;
  v4[16] = 1;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_HStackLayout, TupleView<(Spacer, ModifiedContent<ModifiedContent<<<opaque return type of View.progressViewStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _TraitWritingModifier<TransitionTraitKey>>?, Spacer)>>);
  closure #1 in InteractionFeedbackLoadingView.body.getter(v6, v7, &v4[*(int *)(v8 + 44)]);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v5;
  *(unsigned char *)(v9 + 24) = v6;
  *(void *)(v9 + 32) = v7;
  outlined init with copy of (String, Any)((uint64_t)v4, a1, &demangling cache variable for type metadata for HStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<<<opaque return type of View.progressViewStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _TraitWritingModifier<TransitionTraitKey>>?, Spacer)>>);
  uint64_t v10 = (void *)(a1
                 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<<<opaque return type of View.progressViewStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _TraitWritingModifier<TransitionTraitKey>>?, Spacer)>>, _AppearanceActionModifier>)
                          + 36));
  *uint64_t v10 = closure #2 in InteractionFeedbackLoadingView.body.getterpartial apply;
  v10[1] = v9;
  v10[2] = 0;
  v10[3] = 0;
  swift_retain();
  return outlined destroy of TaskPriority?((uint64_t)v4, &demangling cache variable for type metadata for HStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<<<opaque return type of View.progressViewStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _TraitWritingModifier<TransitionTraitKey>>?, Spacer)>>);
}

uint64_t initializeBufferWithCopyOfBuffer for InteractionFeedbackLoadingView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for InteractionFeedbackLoadingView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for InteractionFeedbackLoadingView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for InteractionFeedbackLoadingView()
{
  return &type metadata for InteractionFeedbackLoadingView;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<HStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<<<opaque return type of View.progressViewStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _TraitWritingModifier<TransitionTraitKey>>?, Spacer)>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<HStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<<<opaque return type of View.progressViewStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _TraitWritingModifier<TransitionTraitKey>>?, Spacer)>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<HStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<<<opaque return type of View.progressViewStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _TraitWritingModifier<TransitionTraitKey>>?, Spacer)>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<<<opaque return type of View.progressViewStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _TraitWritingModifier<TransitionTraitKey>>?, Spacer)>>, _AppearanceActionModifier>);
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type HStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<<<opaque return type of View.progressViewStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _TraitWritingModifier<TransitionTraitKey>>?, Spacer)>> and conformance HStack<A>, &demangling cache variable for type metadata for HStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<<<opaque return type of View.progressViewStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _TraitWritingModifier<TransitionTraitKey>>?, Spacer)>>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<HStack<TupleView<(Spacer, ModifiedContent<ModifiedContent<<<opaque return type of View.progressViewStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _TraitWritingModifier<TransitionTraitKey>>?, Spacer)>>, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t partial apply for closure #1 in closure #2 in InteractionFeedbackLoadingView.body.getter()
{
  char v2 = *(unsigned char *)(v0 + 24);
  uint64_t v3 = *(void *)(v0 + 32);
  uint64_t v4 = swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *(void *)uint64_t v4 = v1;
  *(void *)(v4 + 8) = partial apply for closure #1 in static MusicEngagementExtension.performRequest(with:completion:);
  *(void *)(v4 + 32) = v3;
  *(unsigned char *)(v4 + 41) = v2;
  return _swift_task_switch(closure #1 in closure #2 in InteractionFeedbackLoadingView.body.getter, 0, 0);
}

uint64_t sub_100400F58()
{
  return EnvironmentValues.controlSize.getter();
}

uint64_t key path setter for EnvironmentValues.controlSize : EnvironmentValues, serialized(uint64_t a1)
{
  type metadata accessor for ControlSize();
  __chkstk_darwin();
  (*(void (**)(char *, uint64_t))(v3 + 16))((char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return EnvironmentValues.controlSize.setter();
}

uint64_t lazy protocol witness table accessor for type CircularProgressViewStyle and conformance CircularProgressViewStyle(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t outlined init with take of ModifiedContent<ModifiedContent<<<opaque return type of View.progressViewStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _TraitWritingModifier<TransitionTraitKey>>(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.progressViewStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ControlSize>>, _TraitWritingModifier<TransitionTraitKey>>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t Layout.callAsFunction<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  v17[0] = a6;
  v17[1] = a7;
  uint64_t v13 = *(void *)(a3 - 8);
  __chkstk_darwin();
  uint64_t v15 = (char *)v17 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for _LayoutRoot();
  __chkstk_darwin();
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v7, a3);
  _LayoutRoot.init(_:)();
  _OWORD v17[4] = a3;
  v17[5] = a4;
  v17[6] = a5;
  v17[7] = v17[0];
  v17[8] = a1;
  v17[9] = a2;
  swift_getWitnessTable();
  return _VariadicView.Tree.init(_:content:)();
}

int *LayoutProviderStack.init(layoutProvider:alignment:spacing:content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a8 - 8) + 32))(a9, a1, a8);
  uint64_t result = (int *)type metadata accessor for LayoutProviderStack();
  uint64_t v17 = (void *)(a9 + result[13]);
  *uint64_t v17 = a2;
  v17[1] = a3;
  uint64_t v18 = a9 + result[14];
  *(void *)uint64_t v18 = a4;
  *(unsigned char *)(v18 + 8) = a5 & 1;
  uint64_t v19 = (void *)(a9 + result[15]);
  *uint64_t v19 = a6;
  v19[1] = a7;
  return result;
}

uint64_t type metadata accessor for LayoutProviderStack()
{
  return swift_getGenericMetadata();
}

uint64_t LayoutProviderStack.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v21[1] = a2;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _LayoutRoot<AnyLayout>);
  uint64_t v4 = *(void *)(a1 + 24);
  lazy protocol witness table accessor for type _LayoutRoot<AnyLayout> and conformance _LayoutRoot<A>(&lazy protocol witness table cache variable for type _LayoutRoot<AnyLayout> and conformance _LayoutRoot<A>);
  uint64_t v5 = type metadata accessor for _VariadicView.Tree();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v10 = (char *)v21 - v9;
  (*(void (**)(void *__return_ptr, void, void, void, void, void))(*(void *)(a1 + 32) + 8))(v22, *(void *)(v2 + *(int *)(a1 + 52)), *(void *)(v2 + *(int *)(a1 + 52) + 8), *(void *)(v2 + *(int *)(a1 + 56)), *(unsigned __int8 *)(v2 + *(int *)(a1 + 56) + 8), *(void *)(a1 + 16));
  __swift_project_boxed_opaque_existential_0Tm(v22, v22[3]);
  __chkstk_darwin();
  (*(void (**)(char *))(v12 + 16))((char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v21[4] = AnyLayout.init<A>(_:)();
  uint64_t v13 = (uint64_t *)(v2 + *(int *)(a1 + 60));
  uint64_t v14 = *v13;
  uint64_t v15 = v13[1];
  unint64_t v16 = lazy protocol witness table accessor for type AnyLayout and conformance AnyLayout();
  uint64_t v17 = *(void *)(a1 + 40);
  Layout.callAsFunction<A>(_:)(v14, v15, (uint64_t)&type metadata for AnyLayout, v4, v16, v17, (uint64_t)v8);
  swift_release();
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v22);
  v21[2] = lazy protocol witness table accessor for type _LayoutRoot<AnyLayout> and conformance _LayoutRoot<A>(&lazy protocol witness table cache variable for type _LayoutRoot<AnyLayout> and conformance _LayoutRoot<A>);
  v21[3] = v17;
  uint64_t WitnessTable = swift_getWitnessTable();
  static ViewBuilder.buildExpression<A>(_:)(v8, v5, WitnessTable);
  uint64_t v19 = *(void (**)(char *, uint64_t))(v6 + 8);
  v19(v8, v5);
  static ViewBuilder.buildExpression<A>(_:)(v10, v5, WitnessTable);
  return ((uint64_t (*)(char *, uint64_t))v19)(v10, v5);
}

unint64_t lazy protocol witness table accessor for type AnyLayout and conformance AnyLayout()
{
  unint64_t result = lazy protocol witness table cache variable for type AnyLayout and conformance AnyLayout;
  if (!lazy protocol witness table cache variable for type AnyLayout and conformance AnyLayout)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type AnyLayout and conformance AnyLayout);
  }
  return result;
}

uint64_t lazy protocol witness table accessor for type _LayoutRoot<AnyLayout> and conformance _LayoutRoot<A>(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _LayoutRoot<AnyLayout>);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t AxisStack.init(axis:alignment:spacing:content:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  *(unsigned char *)a8 = result & 1;
  *(void *)(a8 + 8) = a2;
  *(void *)(a8 + 16) = a3;
  *(void *)(a8 + 24) = a4;
  *(unsigned char *)(a8 + 32) = a5 & 1;
  *(void *)(a8 + 40) = a6;
  *(void *)(a8 + 48) = a7;
  return result;
}

uint64_t AxisStack.body.getter(uint64_t a1)
{
  LOBYTE(v19) = *(unsigned char *)v1;
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  LayoutProviderStack.init(layoutProvider:alignment:spacing:content:)((uint64_t)&v19, *(void *)(v1 + 8), *(void *)(v1 + 16), *(void *)(v1 + 24), *(unsigned char *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), (uint64_t)&type metadata for Axis, (uint64_t)v13);
  v7[0] = v13[0];
  long long v8 = v14;
  uint64_t v9 = v15;
  char v10 = v16;
  uint64_t v11 = v17;
  uint64_t v12 = v18;
  uint64_t v19 = &type metadata for Axis;
  *(void *)&long long v20 = v2;
  *((void *)&v20 + 1) = &protocol witness table for Axis;
  uint64_t v21 = v3;
  uint64_t v4 = type metadata accessor for LayoutProviderStack();
  uint64_t WitnessTable = swift_getWitnessTable();
  static ViewBuilder.buildExpression<A>(_:)(v7, v4, WitnessTable);
  swift_retain();
  swift_release();
  v13[0] = (_BYTE)v19;
  long long v14 = v20;
  uint64_t v15 = v21;
  char v16 = v22;
  uint64_t v17 = v23;
  uint64_t v18 = v24;
  static ViewBuilder.buildExpression<A>(_:)(v13, v4, WitnessTable);
  return swift_release();
}

unint64_t Axis.layout(alignment:spacing:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, char a5@<W4>, uint64_t a6@<X8>)
{
  if (a5)
  {
    *(void *)(a6 + 24) = &type metadata for VStackLayout;
    unint64_t result = lazy protocol witness table accessor for type VStackLayout and conformance VStackLayout();
    *(void *)(a6 + 32) = result;
    *(void *)a6 = a1;
  }
  else
  {
    *(void *)(a6 + 24) = &type metadata for HStackLayout;
    unint64_t result = lazy protocol witness table accessor for type HStackLayout and conformance HStackLayout();
    *(void *)(a6 + 32) = result;
    *(void *)a6 = a2;
  }
  *(void *)(a6 + 8) = a3;
  *(unsigned char *)(a6 + 16) = a4 & 1;
  return result;
}

unint64_t lazy protocol witness table accessor for type VStackLayout and conformance VStackLayout()
{
  unint64_t result = lazy protocol witness table cache variable for type VStackLayout and conformance VStackLayout;
  if (!lazy protocol witness table cache variable for type VStackLayout and conformance VStackLayout)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type VStackLayout and conformance VStackLayout);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type HStackLayout and conformance HStackLayout()
{
  unint64_t result = lazy protocol witness table cache variable for type HStackLayout and conformance HStackLayout;
  if (!lazy protocol witness table cache variable for type HStackLayout and conformance HStackLayout)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type HStackLayout and conformance HStackLayout);
  }
  return result;
}

uint64_t associated type witness table accessor for View.Body : View in LayoutProviderStack<A, B>()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t associated type witness table accessor for View.Body : View in AxisStack<A>()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t protocol witness for LayoutProvider.layout(alignment:spacing:) in conformance Axis@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  if (*v5)
  {
    *(void *)(a5 + 24) = &type metadata for VStackLayout;
    unint64_t result = lazy protocol witness table accessor for type VStackLayout and conformance VStackLayout();
    *(void *)(a5 + 32) = result;
    *(void *)a5 = a1;
  }
  else
  {
    *(void *)(a5 + 24) = &type metadata for HStackLayout;
    unint64_t result = lazy protocol witness table accessor for type HStackLayout and conformance HStackLayout();
    *(void *)(a5 + 32) = result;
    *(void *)a5 = a2;
  }
  *(void *)(a5 + 8) = a3;
  *(unsigned char *)(a5 + 16) = a4 & 1;
  return result;
}

uint64_t type metadata completion function for LayoutProviderStack()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for LayoutProviderStack(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    uint64_t v9 = *a2;
    uint64_t *v4 = *a2;
    uint64_t v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    char v10 = (_OWORD *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v11 = (_OWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *char v10 = *v11;
    unint64_t v12 = ((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v13 = ((unint64_t)v11 + 23) & 0xFFFFFFFFFFFFFFF8;
    char v14 = *(unsigned char *)(v13 + 8);
    *(void *)unint64_t v12 = *(void *)v13;
    *(unsigned char *)(v12 + 8) = v14;
    uint64_t v15 = (void *)(((unint64_t)v10 + 39) & 0xFFFFFFFFFFFFFFF8);
    char v16 = (void *)(((unint64_t)v11 + 39) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v17 = v16[1];
    *uint64_t v15 = *v16;
    v15[1] = v17;
  }
  swift_retain();
  return v4;
}

uint64_t destroy for LayoutProviderStack(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();

  return swift_release();
}

uint64_t initializeWithCopy for LayoutProviderStack(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  int v7 = (_OWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  long long v8 = (_OWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  unint64_t v9 = ((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = ((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v11 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  *(void *)unint64_t v9 = v11;
  unint64_t v12 = (void *)(((unint64_t)v7 + 39) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v13 = (void *)(((unint64_t)v8 + 39) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v14 = v13[1];
  *unint64_t v12 = *v13;
  v12[1] = v14;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for LayoutProviderStack(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  long long v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  v7[1] = v8[1];
  unint64_t v9 = ((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = ((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8;
  char v11 = *(unsigned char *)(v10 + 8);
  *(void *)unint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = v11;
  unint64_t v12 = (void *)(((unint64_t)v7 + 39) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v13 = (void *)(((unint64_t)v8 + 39) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v14 = v13[1];
  *unint64_t v12 = *v13;
  v12[1] = v14;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t initializeWithTake for LayoutProviderStack(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32) + 7;
  int v7 = (_OWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  long long v8 = (_OWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  unint64_t v9 = ((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = ((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v11 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  *(void *)unint64_t v9 = v11;
  *(_OWORD *)(((unint64_t)v7 + 39) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v8 + 39) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t assignWithTake for LayoutProviderStack(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  long long v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  v7[1] = v8[1];
  unint64_t v9 = ((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = ((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8;
  char v11 = *(unsigned char *)(v10 + 8);
  *(void *)unint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = v11;
  *(_OWORD *)(((unint64_t)v7 + 39) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v8 + 39) & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for LayoutProviderStack(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8) + 16;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1004021ACLL);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  unint64_t v17 = *(void *)(((((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void storeEnumTagSinglePayload for LayoutProviderStack(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  unint64_t v10 = ((((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v8 >= a3)
  {
    int v14 = 0;
    int v15 = a2 - v8;
    if (a2 <= v8)
    {
LABEL_17:
      switch(v14)
      {
        case 1:
          a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 2:
          *(_WORD *)&a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 3:
          goto LABEL_43;
        case 4:
          *(_DWORD *)&a1[v10] = 0;
          goto LABEL_29;
        default:
LABEL_29:
          if (a2)
          {
LABEL_30:
            if (v7 < 0x7FFFFFFF)
            {
              uint64_t v19 = (void *)((((unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8);
              if ((a2 & 0x80000000) != 0)
              {
                uint64_t v20 = a2 ^ 0x80000000;
                v19[1] = 0;
              }
              else
              {
                uint64_t v20 = a2 - 1;
              }
              *uint64_t v19 = v20;
            }
            else
            {
              uint64_t v18 = *(void (**)(void))(v6 + 56);
              v18();
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v11 = a3 - v8;
    if (((((v9 + 7) & 0xFFFFFFF8) + 39) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      unsigned int v12 = v11 + 1;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v12 >= 0x10000) {
      int v13 = 4;
    }
    else {
      int v13 = 2;
    }
    if (v12 < 0x100) {
      int v13 = 1;
    }
    if (v12 >= 2) {
      int v14 = v13;
    }
    else {
      int v14 = 0;
    }
    int v15 = a2 - v8;
    if (a2 <= v8) {
      goto LABEL_17;
    }
  }
  if (((((v9 + 7) & 0xFFFFFFF8) + 39) & 0xFFFFFFF8) == 0xFFFFFFF0) {
    int v16 = v15;
  }
  else {
    int v16 = 1;
  }
  if (((((v9 + 7) & 0xFFFFFFF8) + 39) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    int v17 = ~v8 + a2;
    bzero(a1, ((((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8) + 16);
    *(_DWORD *)a1 = v17;
  }
  switch(v14)
  {
    case 1:
      a1[v10] = v16;
      break;
    case 2:
      *(_WORD *)&a1[v10] = v16;
      break;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x1004023BCLL);
    case 4:
      *(_DWORD *)&a1[v10] = v16;
      break;
    default:
      return;
  }
}

uint64_t destroy for AxisStack()
{
  return swift_release();
}

uint64_t initializeWithCopy for AxisStack(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v3 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v3;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for AxisStack(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v3 = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 24) = v3;
  uint64_t v4 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v4;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for AxisStack(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  return a1;
}

uint64_t type metadata accessor for AxisStack()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_10040250C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1004025CC()
{
  return swift_getWitnessTable();
}

uint64_t closure #1 in Layout.callAsFunction<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8 = *(void *)(a4 - 8);
  uint64_t v9 = __chkstk_darwin(a1);
  unsigned int v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v12 = (void (*)(void))__chkstk_darwin(v9);
  int v14 = (char *)&v17 - v13;
  v12();
  static ViewBuilder.buildExpression<A>(_:)(v11, a4, a6);
  int v15 = *(void (**)(char *, uint64_t))(v8 + 8);
  v15(v11, a4);
  static ViewBuilder.buildExpression<A>(_:)(v14, a4, a6);
  return ((uint64_t (*)(char *, uint64_t))v15)(v14, a4);
}

uint64_t partial apply for closure #1 in Layout.callAsFunction<A>(_:)()
{
  return closure #1 in Layout.callAsFunction<A>(_:)(v0[6], v0[7], v0[2], v0[3], v0[4], v0[5]);
}

char *LoadingView.__allocating_init(title:style:usesSubtitleTextColor:)(uint64_t a1, uint64_t a2, unint64_t a3, char a4)
{
  id v9 = objc_allocWithZone(v4);
  return LoadingView.init(title:style:usesSubtitleTextColor:)(a1, a2, a3 & 0xFFFFFFFFFFLL | (((a3 >> 40) & 1) << 40), a4);
}

char *LoadingView.init(title:style:usesSubtitleTextColor:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  unsigned int v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v10 = &v5[OBJC_IVAR____TtC11MusicCoreUI11LoadingView_style];
  *(_DWORD *)uint64_t v10 = 0;
  *((_WORD *)v10 + 2) = 256;
  v5[OBJC_IVAR____TtC11MusicCoreUI11LoadingView_titlePosition] = 1;
  unsigned int v11 = &v5[OBJC_IVAR____TtC11MusicCoreUI11LoadingView_title];
  *unsigned int v11 = 0;
  v11[1] = 0;
  uint64_t v12 = OBJC_IVAR____TtC11MusicCoreUI11LoadingView_label;
  id v13 = objc_allocWithZone((Class)UILabel);
  int v14 = v5;
  *(void *)&v5[v12] = objc_msgSend(v13, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  uint64_t v15 = OBJC_IVAR____TtC11MusicCoreUI11LoadingView_activityIndicator;
  *(void *)&v14[v15] = [objc_allocWithZone((Class)UIActivityIndicatorView) initWithActivityIndicatorStyle:100];
  *(void *)&v14[OBJC_IVAR____TtC11MusicCoreUI11LoadingView____lazy_storage___progressBar] = 0;
  swift_beginAccess();
  *unsigned int v11 = a1;
  v11[1] = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v10[4] = BYTE4(a3);
  *(_DWORD *)uint64_t v10 = a3;
  v10[5] = BYTE5(a3) & 1;

  v33.receiver = v14;
  v33.super_class = ObjectType;
  int v16 = (char *)objc_msgSendSuper2(&v33, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  uint64_t v17 = OBJC_IVAR____TtC11MusicCoreUI11LoadingView_activityIndicator;
  uint64_t v18 = *(void **)&v16[OBJC_IVAR____TtC11MusicCoreUI11LoadingView_activityIndicator];
  uint64_t v19 = v16;
  [v18 setHidesWhenStopped:1];
  uint64_t v20 = OBJC_IVAR____TtC11MusicCoreUI11LoadingView_label;
  id v21 = *(id *)&v19[OBJC_IVAR____TtC11MusicCoreUI11LoadingView_label];
  if (a2)
  {
    NSString v22 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v22 = 0;
  }
  [v21 setText:v22];

  [*(id *)&v19[v20] setAdjustsFontForContentSizeCategory:1];
  uint64_t v23 = one-time initialization token for preferredFont;
  id v24 = *(id *)&v19[v20];
  if (v23 != -1) {
    swift_once();
  }
  [v24 setFont:static LoadingView.preferredFont];

  [*(id *)&v19[v20] setMaximumContentSizeCategory:UIContentSizeCategoryAccessibilityMedium];
  [*(id *)&v19[v20] setNumberOfLines:0];
  [*(id *)&v19[v20] setTextAlignment:1];
  if (a4)
  {
    uint64_t v25 = *(void **)&v19[v20];
    uint64_t v26 = self;
    id v27 = v25;
    id v28 = [v26 secondaryLabelColor];
    [v27 setTextColor:v28];
  }
  LoadingView.updateLoadingAppearance()();
  [v19 addSubview:*(void *)&v19[v20]];
  [v19 addSubview:*(void *)&v16[v17]];
  uint64_t v29 = v19;
  id v30 = LoadingView.progressBar.getter();
  [v29 addSubview:v30];

  return v29;
}

void LoadingView.updateLoadingAppearance()()
{
  unint64_t v1 = (unsigned int *)(v0 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView_style);
  swift_beginAccess();
  if (*((unsigned char *)v1 + 5))
  {
    [*(id *)(v0 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView_activityIndicator) stopAnimating];
    id v2 = LoadingView.progressBar.getter();
    [v2 setHidden:1];

    [*(id *)(v0 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView_label) setHidden:1];
  }
  else if (((*v1 | ((unint64_t)*((unsigned __int8 *)v1 + 4) << 32)) & 0x100000000) != 0)
  {
    [*(id *)(v0 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView_activityIndicator) startAnimating];
    id v7 = LoadingView.progressBar.getter();
    [v7 setHidden:1];

    [*(id *)(v0 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView_label) setHidden:0];
  }
  else
  {
    int v3 = *v1;
    [*(id *)(v0 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView_activityIndicator) stopAnimating];
    id v4 = LoadingView.progressBar.getter();
    [v4 setHidden:0];

    [*(id *)(v0 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView_label) setHidden:0];
    id v5 = LoadingView.progressBar.getter();
    LODWORD(v6) = v3;
    [v5 setProgress:v6];
  }
}

id LoadingView.progressBar.getter()
{
  uint64_t v1 = OBJC_IVAR____TtC11MusicCoreUI11LoadingView____lazy_storage___progressBar;
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView____lazy_storage___progressBar);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView____lazy_storage___progressBar);
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)UIProgressView) initWithProgressViewStyle:1];
    id v5 = [self systemFillColor];
    [v4 setTrackTintColor:v5];

    double v6 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    id v2 = 0;
  }
  id v7 = v2;
  return v3;
}

unint64_t LoadingView.style.getter()
{
  uint64_t v1 = (unsigned int *)(v0 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView_style);
  swift_beginAccess();
  return *v1 | ((unint64_t)*((unsigned __int8 *)v1 + 4) << 32) | ((unint64_t)*((unsigned __int8 *)v1 + 5) << 40);
}

float LoadingView.style.setter(uint64_t a1)
{
  id v3 = (unsigned int *)(v1 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView_style);
  swift_beginAccess();
  uint64_t v5 = *((unsigned __int8 *)v3 + 4);
  uint64_t v6 = *v3;
  char v7 = *((unsigned char *)v3 + 5);
  *id v3 = a1;
  *((unsigned char *)v3 + 4) = BYTE4(a1);
  *((unsigned char *)v3 + 5) = BYTE5(a1) & 1;
  if ((a1 & 0x10000000000) != 0)
  {
    if (v7) {
      return result;
    }
    goto LABEL_5;
  }
  if (v7) {
    goto LABEL_5;
  }
  uint64_t v8 = v6 | (v5 << 32);
  if ((a1 & 0x100000000) != 0)
  {
    if ((v8 & 0x100000000) != 0) {
      return result;
    }
    goto LABEL_5;
  }
  if ((v8 & 0x100000000) != 0 || (float result = *(float *)&a1, *(float *)&a1 != *(float *)&v8)) {
LABEL_5:
  }
    LoadingView.updateLoadingAppearance()();
  return result;
}

void (*LoadingView.style.modify(void *a1))(uint64_t a1, char a2)
{
  id v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC11MusicCoreUI11LoadingView_style;
  v3[3] = v1;
  v3[4] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  char v6 = *(unsigned char *)(v5 + 4);
  char v7 = *(unsigned char *)(v5 + 5);
  *((_DWORD *)v3 + 10) = *(_DWORD *)v5;
  v3 += 5;
  *((unsigned char *)v3 + 4) = v6;
  *((unsigned char *)v3 + 5) = v7;
  return LoadingView.style.modify;
}

void LoadingView.style.modify(uint64_t a1, char a2)
{
  id v2 = *(void **)a1;
  uint64_t v3 = *(unsigned int *)(*(void *)a1 + 40);
  uint64_t v4 = (unsigned int *)(*(void *)(*(void *)a1 + 24) + *(void *)(*(void *)a1 + 32));
  uint64_t v5 = *(unsigned __int8 *)(*(void *)a1 + 44);
  uint64_t v6 = v3 | (v5 << 32);
  char v7 = *(unsigned char *)(*(void *)a1 + 45);
  unint64_t v8 = *v4 | ((unint64_t)*((unsigned __int8 *)v4 + 4) << 32);
  char v9 = *((unsigned char *)v4 + 5);
  unsigned int *v4 = v3;
  *((unsigned char *)v4 + 4) = v5;
  *((unsigned char *)v4 + 5) = v7;
  if (a2)
  {
    if ((v7 & 1) == 0)
    {
      if (v9) {
        goto LABEL_14;
      }
      if ((v6 & 0x100000000) != 0)
      {
LABEL_5:
        if ((v8 & 0x100000000) != 0) {
          goto LABEL_15;
        }
LABEL_14:
        LoadingView.updateLoadingAppearance()();
        goto LABEL_15;
      }
      goto LABEL_12;
    }
  }
  else if ((v7 & 1) == 0)
  {
    if (v9) {
      goto LABEL_14;
    }
    if ((v6 & 0x100000000) != 0) {
      goto LABEL_5;
    }
LABEL_12:
    if ((v8 & 0x100000000) != 0 || *(float *)&v3 != *(float *)&v8) {
      goto LABEL_14;
    }
    goto LABEL_15;
  }
  if ((v9 & 1) == 0) {
    goto LABEL_14;
  }
LABEL_15:

  free(v2);
}

uint64_t LoadingView.titlePosition.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView_titlePosition);
  swift_beginAccess();
  return *v1;
}

id LoadingView.titlePosition.setter(unsigned __int8 a1)
{
  uint64_t v3 = &v1[OBJC_IVAR____TtC11MusicCoreUI11LoadingView_titlePosition];
  id result = (id)swift_beginAccess();
  int v5 = *v3;
  *uint64_t v3 = a1;
  if (v5 != a1) {
    return [v1 setNeedsLayout];
  }
  return result;
}

void (*LoadingView.titlePosition.modify(void *a1))(id **a1)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC11MusicCoreUI11LoadingView_titlePosition;
  v3[3] = v1;
  v3[4] = v4;
  int v5 = (unsigned char *)(v1 + v4);
  swift_beginAccess();
  *((unsigned char *)v3 + 40) = *v5;
  return LoadingView.titlePosition.modify;
}

void LoadingView.titlePosition.modify(id **a1)
{
  uint64_t v1 = *a1;
  int v2 = *((unsigned __int8 *)*a1 + 40);
  id v4 = (*a1)[3];
  uint64_t v3 = (*a1)[4];
  int v5 = v3[(void)v4];
  v3[(void)v4] = v2;
  if (v2 != v5) {
    [v1[3] setNeedsLayout];
  }

  free(v1);
}

id LoadingView.font.getter()
{
  id v1 = [*(id *)(v0 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView_label) font];

  return v1;
}

void LoadingView.font.setter(void *a1)
{
  id v2 = *(id *)(v1 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView_label);
  [v2 setFont:a1];
}

void (*LoadingView.font.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v2 = OBJC_IVAR____TtC11MusicCoreUI11LoadingView_label;
  a1[1] = v1;
  a1[2] = v2;
  *a1 = [*(id *)(v1 + v2) font];
  return LoadingView.font.modify;
}

void LoadingView.font.modify(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void **)(*(void *)(a1 + 8) + *(void *)(a1 + 16));
  if (a2)
  {
    [v3 setFont:v2];
    id v4 = v2;
  }
  else
  {
    id v5 = v3;
    [v5 setFont:v2];

    id v4 = v5;
  }
}

uint64_t LoadingView.title.didset(uint64_t a1, uint64_t a2)
{
  id v5 = &v2[OBJC_IVAR____TtC11MusicCoreUI11LoadingView_title];
  uint64_t result = swift_beginAccess();
  uint64_t v7 = *((void *)v5 + 1);
  if (!v7)
  {
    if (!a2) {
      return result;
    }
    id v10 = *(id *)&v2[OBJC_IVAR____TtC11MusicCoreUI11LoadingView_label];
    NSString v11 = 0;
    goto LABEL_11;
  }
  uint64_t v8 = *(void *)v5;
  if (!a2
    || (v8 == a1 ? (BOOL v9 = v7 == a2) : (BOOL v9 = 0),
        !v9 && (uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)(), (result & 1) == 0)))
  {
    id v10 = *(id *)&v2[OBJC_IVAR____TtC11MusicCoreUI11LoadingView_label];
    swift_bridgeObjectRetain();
    NSString v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
LABEL_11:
    [v10 setText:v11];

    return (uint64_t)[v2 setNeedsLayout];
  }
  return result;
}

uint64_t LoadingView.title.getter()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView_title);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t LoadingView.title.setter(uint64_t a1, uint64_t a2)
{
  id v5 = &v2[OBJC_IVAR____TtC11MusicCoreUI11LoadingView_title];
  uint64_t result = swift_beginAccess();
  uint64_t v7 = *(void *)v5;
  uint64_t v8 = *((void *)v5 + 1);
  *(void *)id v5 = a1;
  *((void *)v5 + 1) = a2;
  if (a2)
  {
    if (v8)
    {
      BOOL v9 = v7 == a1 && v8 == a2;
      if (v9 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
        return swift_bridgeObjectRelease();
      }
    }
    id v10 = *(id *)&v2[OBJC_IVAR____TtC11MusicCoreUI11LoadingView_label];
    swift_bridgeObjectRetain();
    NSString v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    if (!v8) {
      return result;
    }
    id v10 = *(id *)&v2[OBJC_IVAR____TtC11MusicCoreUI11LoadingView_label];
    NSString v11 = 0;
  }
  [v10 setText:v11];

  [v2 setNeedsLayout];
  return swift_bridgeObjectRelease();
}

void (*LoadingView.title.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC11MusicCoreUI11LoadingView_title;
  v3[5] = v1;
  v3[6] = v4;
  id v5 = (void *)(v1 + v4);
  swift_beginAccess();
  uint64_t v6 = v5[1];
  v3[3] = *v5;
  v3[4] = v6;
  swift_bridgeObjectRetain();
  return LoadingView.title.modify;
}

void LoadingView.title.modify(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void *)(*(void *)a1 + 24);
  uint64_t v5 = *(void *)(*(void *)a1 + 40);
  uint64_t v4 = *(void *)(*(void *)a1 + 48);
  uint64_t v6 = *(void *)(*(void *)a1 + 32);
  uint64_t v7 = (uint64_t *)(v5 + v4);
  uint64_t v9 = *v7;
  uint64_t v8 = v7[1];
  *uint64_t v7 = v3;
  v7[1] = v6;
  if (a2)
  {
    swift_bridgeObjectRetain();
    LoadingView.title.didset(v9, v8);
    swift_bridgeObjectRelease();
  }
  else
  {
    LoadingView.title.didset(v9, v8);
  }
  swift_bridgeObjectRelease();

  free(v2);
}

Swift::Void __swiftcall LoadingView.layoutSubviews()()
{
  v54.receiver = v0;
  v54.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v54, "layoutSubviews");
  [v0 effectiveUserInterfaceLayoutDirection];
  id v1 = [v0 traitCollection];
  [v1 displayScale];

  [v0 bounds];
  double v3 = v2;
  double v5 = v4;
  double v7 = v6;
  double v9 = v8;
  [v0 layoutMargins];
  UIEdgeInsetsInsetRect(v3, v5, v7, v9, v10, v11);
  LoadingView.sizeThatFits(_:)(v12, v13);
  uint64_t v15 = v14;
  [v0 bounds];
  uint64_t v48 = v15;
  CGRect.centeringAlong(axes:bounds:scale:)();
  CGFloat x = v55.origin.x;
  CGFloat y = v55.origin.y;
  double width = v55.size.width;
  double height = v55.size.height;
  CGFloat v20 = CGRectGetWidth(v55);
  uint64_t v21 = OBJC_IVAR____TtC11MusicCoreUI11LoadingView_label;
  CGFloat rect = height;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC11MusicCoreUI11LoadingView_label], "sizeThatFits:", width, height, v48);
  CGFloat v51 = v23;
  CGFloat v52 = v22;
  v56.origin.CGFloat x = 0.0;
  v56.origin.CGFloat y = 0.0;
  v56.size.double height = 0.0;
  v56.size.double width = v20;
  CGFloat v24 = CGRectGetWidth(v56);
  id v25 = LoadingView.progressBar.getter();
  [v25 intrinsicContentSize];
  CGFloat v27 = v26;

  uint64_t v28 = OBJC_IVAR____TtC11MusicCoreUI11LoadingView_activityIndicator;
  [*(id *)&v0[OBJC_IVAR____TtC11MusicCoreUI11LoadingView_activityIndicator] intrinsicContentSize];
  CGFloat v30 = v29;
  CGFloat v32 = v31;
  v57.origin.CGFloat x = 0.0;
  v57.origin.CGFloat y = 0.0;
  v57.size.double width = v24;
  v57.size.double height = v27;
  double v33 = CGRectGetHeight(v57);
  v58.origin.CGFloat x = 0.0;
  v58.origin.CGFloat y = 0.0;
  v58.size.double width = v30;
  v58.size.double height = v32;
  double v34 = CGRectGetHeight(v58);
  if (v33 > v34) {
    CGFloat v35 = v33;
  }
  else {
    CGFloat v35 = v34;
  }
  uint64_t v36 = &v0[OBJC_IVAR____TtC11MusicCoreUI11LoadingView_titlePosition];
  swift_beginAccess();
  if (*v36)
  {
    if (*v36 == 1)
    {
      v59.origin.CGFloat x = x;
      v59.origin.CGFloat y = y;
      v59.size.double width = width;
      v59.size.double height = rect;
      CGRectGetMinX(v59);
      v60.origin.CGFloat x = x;
      v60.origin.CGFloat y = y;
      v60.size.double width = v20;
      v60.size.double height = v35;
      CGRectGetMaxY(v60);
      [*(id *)&v0[v21] _firstBaselineOffsetFromTop];
    }
    else
    {
      [*(id *)&v0[v28] intrinsicContentSize];
      double v38 = v37;
      id v39 = LoadingView.progressBar.getter();
      [v39 intrinsicContentSize];
      double v41 = v40;

      if (v38 > v41) {
        double v41 = v38;
      }
      v63.origin.CGFloat x = x;
      v63.origin.CGFloat y = y;
      v63.size.double width = v41;
      v63.size.double height = v35;
      CGRectGetMaxX(v63);
      v64.origin.CGFloat x = x;
      v64.origin.CGFloat y = y;
      v64.size.double width = width;
      v64.size.double height = rect;
      CGRectGetMinY(v64);
    }
  }
  else
  {
    v61.origin.CGFloat x = x;
    v61.origin.CGFloat y = y;
    v61.size.double width = width;
    v61.size.double height = rect;
    CGRectGetMinX(v61);
    v62.origin.CGFloat x = x;
    v62.origin.CGFloat y = y;
    v62.size.double height = v51;
    v62.size.double width = v52;
    CGRectGetMaxY(v62);
    [*(id *)&v0[v21] _baselineOffsetFromBottom];
  }
  int v42 = *v36;
  id v43 = LoadingView.progressBar.getter();
  CGRect.centeringAlong(axes:bounds:scale:)();
  if (v42 == 2)
  {
    objc_msgSend(v0, "bounds", *(void *)&v35);
    CGRect.applyingLayoutDirection(_:inBounds:)();
    objc_msgSend(v43, "setFrame:");

    id v45 = *(id *)&v0[v28];
    CGRect.centeringAlong(axes:bounds:scale:)();
    objc_msgSend(v0, "bounds", *(void *)&v35);
  }
  else
  {
    uint64_t v49 = v44;
    CGRect.centeringAlong(axes:bounds:scale:)();
    objc_msgSend(v0, "bounds", v49);
    CGRect.applyingLayoutDirection(_:inBounds:)();
    objc_msgSend(v43, "setFrame:");

    id v45 = *(id *)&v0[v28];
    CGRect.centeringAlong(axes:bounds:scale:)();
    uint64_t v50 = v47;
    CGRect.centeringAlong(axes:bounds:scale:)();
    objc_msgSend(v0, "bounds", v50);
  }
  CGRect.applyingLayoutDirection(_:inBounds:)();
  objc_msgSend(v45, "setFrame:");

  id v46 = *(id *)&v0[v21];
  CGRect.centeringAlong(axes:bounds:scale:)();
  objc_msgSend(v0, "bounds", *(void *)&v51);
  CGRect.applyingLayoutDirection(_:inBounds:)();
  objc_msgSend(v46, "setFrame:");
}

double LoadingView.sizeThatFits(_:)(double a1, double a2)
{
  uint64_t v3 = v2;
  id v6 = LoadingView.progressBar.getter();
  objc_msgSend(v6, "sizeThatFits:", 0.0, 0.0);
  double v8 = v7;
  double v10 = v9;

  objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView_activityIndicator), "sizeThatFits:", 0.0, 0.0);
  double v13 = v12;
  if (v8 > v11) {
    double v14 = v8;
  }
  else {
    double v14 = v11;
  }
  uint64_t v15 = (unsigned char *)(v3 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView_titlePosition);
  swift_beginAccess();
  if (v10 > v13) {
    double v16 = v10;
  }
  else {
    double v16 = v13;
  }
  if (*v15 == 2)
  {
    uint64_t v17 = OBJC_IVAR____TtC11MusicCoreUI11LoadingView_label;
    [*(id *)(v3 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView_label) intrinsicContentSize];
    [*(id *)(v3 + v17) intrinsicContentSize];
    return v14 + v18;
  }
  else
  {
    uint64_t v19 = OBJC_IVAR____TtC11MusicCoreUI11LoadingView_label;
    objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView_label), "sizeThatFits:", 0.0, 0.0);
    double v21 = v20;
    _sSo6CGSizeVMa_1(0);
    if (static ApproximatelyEquatable.!=~ infix(_:_:)())
    {
      objc_msgSend(*(id *)(v3 + v19), "sizeThatFits:", a1, a2 - (v16 + 0.0 + 8.0));
    }
    else if (v21 > v14)
    {
      return v21;
    }
    else
    {
      return v14;
    }
  }
  return a1;
}

double LoadingView.intrinsicContentSize.getter()
{
  return LoadingView.sizeThatFits(_:)(0.0, 0.0);
}

BOOL static LoadingView.Style.__derived_enum_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  if (((a1 | a2) & (unint64_t)&_mh_execute_header) != 0) {
    return BYTE4(a1) & BYTE4(a2) & 1;
  }
  else {
    return *(float *)&a1 == *(float *)&a2;
  }
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance LoadingView.Style(uint64_t a1, uint64_t a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 4);
  unsigned int v4 = *(unsigned __int8 *)(a2 + 4);
  uint64_t result = v3 & v4;
  if ((v3 & 1) == 0 && (v4 & 1) == 0) {
    return *(float *)a1 == *(float *)a2;
  }
  return result;
}

uint64_t one-time initialization function for preferredFont()
{
  type metadata accessor for UIFont();
  uint64_t result = static UIFont.preferredFont(forTextStyle:weight:)();
  static LoadingView.preferredFont = result;
  return result;
}

void LoadingView.init(frame:)()
{
}

unint64_t lazy protocol witness table accessor for type LoadingView.TextPosition and conformance LoadingView.TextPosition()
{
  unint64_t result = lazy protocol witness table cache variable for type LoadingView.TextPosition and conformance LoadingView.TextPosition;
  if (!lazy protocol witness table cache variable for type LoadingView.TextPosition and conformance LoadingView.TextPosition)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LoadingView.TextPosition and conformance LoadingView.TextPosition);
  }
  return result;
}

uint64_t type metadata accessor for LoadingView()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for LoadingView.TextPosition(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100404274);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LoadingView.TextPosition()
{
  return &type metadata for LoadingView.TextPosition;
}

uint64_t __swift_memcpy5_4_0(uint64_t result, int *a2)
{
  int v2 = *a2;
  *(unsigned char *)(result + 4) = *((unsigned char *)a2 + 4);
  *(_DWORD *)unint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for LoadingView.Style(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 5)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for LoadingView.Style(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(unsigned char *)(result + 4) = 0;
    *(_DWORD *)unint64_t result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 5) = v3;
  return result;
}

uint64_t getEnumTag for LoadingView.Style(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 4)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t destructiveInjectEnumTag for LoadingView.Style(uint64_t result, int a2)
{
  if (a2)
  {
    *(_DWORD *)unint64_t result = a2 - 1;
    *(unsigned char *)(result + 4) = 1;
  }
  else
  {
    *(unsigned char *)(result + 4) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for LoadingView.Style()
{
  return &type metadata for LoadingView.Style;
}

void specialized LoadingView.init(coder:)()
{
  id v1 = &v0[OBJC_IVAR____TtC11MusicCoreUI11LoadingView_style];
  *((_WORD *)v1 + 2) = 256;
  *(_DWORD *)id v1 = 0;
  v0[OBJC_IVAR____TtC11MusicCoreUI11LoadingView_titlePosition] = 1;
  int v2 = &v0[OBJC_IVAR____TtC11MusicCoreUI11LoadingView_title];
  *int v2 = 0;
  v2[1] = 0;
  uint64_t v3 = OBJC_IVAR____TtC11MusicCoreUI11LoadingView_label;
  *(void *)&v0[v3] = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  uint64_t v4 = OBJC_IVAR____TtC11MusicCoreUI11LoadingView_activityIndicator;
  *(void *)&v0[v4] = [objc_allocWithZone((Class)UIActivityIndicatorView) initWithActivityIndicatorStyle:100];
  *(void *)&v0[OBJC_IVAR____TtC11MusicCoreUI11LoadingView____lazy_storage___progressBar] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

unint64_t type metadata accessor for UIFont()
{
  unint64_t result = _sSo6UIFontCML_0;
  if (!_sSo6UIFontCML_0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&_sSo6UIFontCML_0);
  }
  return result;
}

uint64_t MarkupView.body.getter@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for AttributedString();
  __chkstk_darwin();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MarkupRenderer<String>);
  swift_allocObject();
  swift_bridgeObjectRetain();
  MarkupRenderer.init(_:)();
  dispatch thunk of MarkupRenderer.attributedString.getter();
  swift_release();
  uint64_t result = Text.init(_:)();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(void *)(a1 + 24) = v5;
  return result;
}

uint64_t associated type witness table accessor for View.Body : View in MarkupView()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t protocol witness for View.body.getter in conformance MarkupView@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for AttributedString();
  __chkstk_darwin();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MarkupRenderer<String>);
  swift_allocObject();
  swift_bridgeObjectRetain();
  MarkupRenderer.init(_:)();
  dispatch thunk of MarkupRenderer.attributedString.getter();
  swift_release();
  uint64_t result = Text.init(_:)();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(void *)(a1 + 24) = v5;
  return result;
}

ValueMetadata *type metadata accessor for MarkupView()
{
  return &type metadata for MarkupView;
}

void *sub_10040467C()
{
  return &protocol witness table for Text;
}

uint64_t NoticeView.init(notice:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char v4 = (int *)type metadata accessor for NoticeView(0);
  uint64_t v5 = a2 + v4[5];
  *(void *)uint64_t v5 = swift_getKeyPath();
  *(void *)(v5 + 8) = 0;
  *(_WORD *)(v5 + 16) = 0;
  unsigned int v6 = (void *)(a2 + v4[6]);
  State.init(wrappedValue:)();
  void *v6 = v10;
  v6[1] = v11;
  uint64_t v7 = a2 + v4[7];
  GestureState.init(wrappedValue:)();
  *(unsigned char *)uint64_t v7 = v10;
  *(void *)(v7 + 8) = v11;
  *(_OWORD *)(v7 + 16) = v12;
  uint64_t v8 = a2 + v4[8];
  State.init(wrappedValue:)();
  *(unsigned char *)uint64_t v8 = v10;
  *(void *)(v8 + 8) = v11;
  return outlined init with take of Notice(a1, a2, type metadata accessor for Notice);
}

uint64_t type metadata accessor for NoticeView(uint64_t a1)
{
  return type metadata accessor for Notice.Variant(a1, (uint64_t *)&type metadata singleton initialization cache for NoticeView);
}

uint64_t EnvironmentValues.noticeDismissal.getter()
{
  lazy protocol witness table accessor for type EnvironmentValues.NoticeDismissalContextKey and conformance EnvironmentValues.NoticeDismissalContextKey();
  EnvironmentValues.subscript.getter();
  return v1;
}

double key path getter for EnvironmentValues.noticeDismissal : EnvironmentValues@<D0>(uint64_t a1@<X8>)
{
  lazy protocol witness table accessor for type EnvironmentValues.NoticeDismissalContextKey and conformance EnvironmentValues.NoticeDismissalContextKey();
  EnvironmentValues.subscript.getter();
  double result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(unsigned char *)(a1 + 16) = v4;
  return result;
}

double sub_100404860@<D0>(uint64_t a1@<X8>)
{
  lazy protocol witness table accessor for type EnvironmentValues.NoticeDismissalContextKey and conformance EnvironmentValues.NoticeDismissalContextKey();
  EnvironmentValues.subscript.getter();
  double result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(unsigned char *)(a1 + 16) = v4;
  return result;
}

uint64_t key path setter for EnvironmentValues.noticeDismissal : EnvironmentValues(uint64_t *a1)
{
  return EnvironmentValues.subscript.setter();
}

uint64_t EnvironmentValues.noticeDismissal.setter()
{
  return EnvironmentValues.subscript.setter();
}

uint64_t property wrapper backing initializer of NoticeView.swapScale()
{
  State.init(wrappedValue:)();
  return v1;
}

uint64_t property wrapper backing initializer of NoticeView.isHighlighted()
{
  GestureState.init(wrappedValue:)();
  return v1;
}

unint64_t lazy protocol witness table accessor for type EnvironmentValues.NoticeDismissalContextKey and conformance EnvironmentValues.NoticeDismissalContextKey()
{
  unint64_t result = lazy protocol witness table cache variable for type EnvironmentValues.NoticeDismissalContextKey and conformance EnvironmentValues.NoticeDismissalContextKey;
  if (!lazy protocol witness table cache variable for type EnvironmentValues.NoticeDismissalContextKey and conformance EnvironmentValues.NoticeDismissalContextKey)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type EnvironmentValues.NoticeDismissalContextKey and conformance EnvironmentValues.NoticeDismissalContextKey);
  }
  return result;
}

uint64_t NoticeView.notice.getter@<X0>(uint64_t a1@<X8>)
{
  return _s9MusicCore6NoticeVWOcTm_0(v1, a1, type metadata accessor for Notice);
}

uint64_t NoticeView.notice.setter(uint64_t a1)
{
  return outlined assign with take of Notice(a1, v1);
}

uint64_t outlined assign with take of Notice(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Notice(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t NoticeView.dismiss.getter()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for NoticeView(0) + 20);
  uint64_t v2 = *(void *)v1;
  uint64_t v3 = *(void *)(v1 + 8);
  uint64_t v4 = *(unsigned __int8 *)(v1 + 16);
  int v5 = *(unsigned __int8 *)(v1 + 17);
  outlined copy of Environment<NoticeDismissal?>.Content(*(void *)v1, v3, v4, *(unsigned char *)(v1 + 17));
  uint64_t v6 = specialized Environment.wrappedValue.getter(v2, v3, v4 | (v5 << 8));
  outlined consume of Environment<NoticeDismissal?>.Content(v2, v3, v4, v5);
  return v6;
}

uint64_t outlined copy of Environment<NoticeDismissal?>.Content(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4) {
    return outlined copy of NoticeDismissal?(a1, a2);
  }
  else {
    return swift_retain();
  }
}

uint64_t NoticeView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v146 = a1;
  uint64_t v187 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (lower: DynamicTypeSize, upper: DynamicTypeSize));
  __chkstk_darwin();
  uint64_t v145 = (char *)&v138 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  long long v143 = (char *)&v138 - v4;
  uint64_t v186 = type metadata accessor for DynamicTypeSize();
  uint64_t v185 = *(void **)(v186 - 8);
  __chkstk_darwin();
  uint64_t v184 = (char *)&v138 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v183 = (char *)&v138 - v6;
  uint64_t v144 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ClosedRange<DynamicTypeSize>);
  __chkstk_darwin();
  uint64_t v141 = (char *)&v138 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v142 = (uint64_t)&v138 - v8;
  uint64_t v182 = type metadata accessor for ContentTransition();
  uint64_t v181 = *(void *)(v182 - 8);
  __chkstk_darwin();
  v180 = (char *)&v138 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v178 = type metadata accessor for TapGesture();
  uint64_t v177 = *(void *)(v178 - 8);
  __chkstk_darwin();
  char v174 = (char *)&v138 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v176 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _EndedGesture<TapGesture>);
  uint64_t v175 = *(void *)(v176 - 8);
  __chkstk_darwin();
  uint64_t v173 = (char *)&v138 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v195 = type metadata accessor for NoticeView(0);
  uint64_t v190 = *(uint64_t (**)(uint64_t))(v195 - 8);
  __chkstk_darwin();
  uint64_t v191 = v12;
  uint64_t v179 = (uint64_t)&v138 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v192 = (uint64_t (*)(void))type metadata accessor for LocalCoordinateSpace();
  __chkstk_darwin();
  uint64_t v153 = (char *)&v138 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v165 = type metadata accessor for DragGesture();
  uint64_t v163 = *(void *)(v165 - 8);
  __chkstk_darwin();
  uint64_t v160 = (char *)&v138 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v156 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for GestureStateGesture<DragGesture, Bool>);
  __chkstk_darwin();
  uint64_t v168 = (char *)&v138 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v172 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SequenceGesture<GestureStateGesture<DragGesture, Bool>, _EndedGesture<TapGesture>>);
  __chkstk_darwin();
  uint64_t v169 = (uint64_t)&v138 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v152 = type metadata accessor for Material();
  *(void *)&long long v150 = *(void *)(v152 - 8);
  __chkstk_darwin();
  uint64_t v149 = (char *)&v138 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>);
  __chkstk_darwin();
  uint64_t v19 = (uint64_t *)((char *)&v138 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v170 = type metadata accessor for Notice(0);
  __chkstk_darwin();
  double v21 = (char *)&v138 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for NoticeView.Content(0) - 8;
  __chkstk_darwin();
  CGFloat v24 = (char *)&v138 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<NoticeView.Content, _FlexFrameLayout>)
      - 8;
  __chkstk_darwin();
  CGFloat v27 = (char *)&v138 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<NoticeView.Content, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>)
      - 8;
  __chkstk_darwin();
  CGFloat v30 = (char *)&v138 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v147 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<NoticeView.Content, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, CornerRadiusModifier>);
  __chkstk_darwin();
  CGFloat v32 = (char *)&v138 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v148 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<NoticeView.Content, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, CornerRadiusModifier>, _OpacityEffect>);
  __chkstk_darwin();
  uint64_t v151 = (uint64_t)&v138 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v194 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<NoticeView.Content, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, CornerRadiusModifier>, _OpacityEffect>, _AnimationModifier<Bool>>);
  __chkstk_darwin();
  v193 = (uint64_t (*)(uint64_t))((char *)&v138 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v158 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.gesture<A>(_:including:)>>.0);
  uint64_t v157 = *(void *)(v158 - 8);
  __chkstk_darwin();
  uint64_t v155 = (char *)&v138 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v164 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.onChange<A>(of:initial:_:)>>.0);
  uint64_t v162 = *(void *)(v164 - 8);
  __chkstk_darwin();
  uint64_t v159 = (char *)&v138 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v154 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.onChange<A>(of:initial:_:)>>.0, _EnvironmentKeyWritingModifier<ContentTransition>>);
  __chkstk_darwin();
  uint64_t v166 = (char *)&v138 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v161 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.onChange<A>(of:initial:_:)>>.0, _EnvironmentKeyWritingModifier<ContentTransition>>, _ScaleEffect>);
  __chkstk_darwin();
  uint64_t v167 = (uint64_t)&v138 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v189 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.onChange<A>(of:initial:_:)>>.0, _EnvironmentKeyWritingModifier<ContentTransition>>, _ScaleEffect>, _AnimationModifier<Notice>>);
  __chkstk_darwin();
  v188 = (char *)&v138 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v140 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.dynamicTypeSize<A>(_:)>>.0);
  uint64_t v139 = *(void *)(v140 - 8);
  __chkstk_darwin();
  v138 = (char *)&v138 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v196 = v2;
  _s9MusicCore6NoticeVWOcTm_0(v2, (uint64_t)v21, type metadata accessor for Notice);
  *uint64_t v19 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
  swift_storeEnumTagMultiPayload();
  *(void *)&v24[*(int *)(v22 + 40)] = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<LayoutDirection>.Content);
  swift_storeEnumTagMultiPayload();
  uint64_t v171 = v21;
  outlined init with take of Notice((uint64_t)v21, (uint64_t)v24, type metadata accessor for Notice);
  *(void *)&long long v203 = 0x4041000000000000;
  _sS2dSBsWl_0();
  ScaledMetric.init(wrappedValue:)();
  *(void *)&long long v203 = 0x4010000000000000;
  lazy protocol witness table accessor for type CGFloat and conformance CGFloat();
  ScaledMetric.init(wrappedValue:)();
  outlined init with take of PresentationSource?((uint64_t)v19, (uint64_t)&v24[*(int *)(v22 + 36)], &demangling cache variable for type metadata for Environment<DynamicTypeSize>);
  static Alignment.center.getter();
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  _s9MusicCore6NoticeVWOcTm_0((uint64_t)v24, (uint64_t)v27, type metadata accessor for NoticeView.Content);
  double v41 = &v27[*(int *)(v25 + 44)];
  long long v42 = v208;
  *((_OWORD *)v41 + 4) = v207;
  *((_OWORD *)v41 + 5) = v42;
  *((_OWORD *)v41 + 6) = v209;
  long long v43 = v204;
  *(_OWORD *)double v41 = v203;
  *((_OWORD *)v41 + 1) = v43;
  long long v44 = v206;
  *((_OWORD *)v41 + 2) = v205;
  *((_OWORD *)v41 + 3) = v44;
  outlined destroy of NoticeView.Content((uint64_t)v24, type metadata accessor for NoticeView.Content);
  id v45 = v149;
  static Material.regular.getter();
  LOBYTE(v25) = static Edge.Set.all.getter();
  id v46 = &v30[*(int *)(v28 + 44)];
  uint64_t v47 = v150;
  uint64_t v48 = v152;
  (*(void (**)(char *, char *, uint64_t))(v150 + 16))(v46, v45, v152);
  v46[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _BackgroundStyleModifier<Material>)
             + 36)] = v25;
  outlined init with copy of (String, Any)((uint64_t)v27, (uint64_t)v30, &demangling cache variable for type metadata for ModifiedContent<NoticeView.Content, _FlexFrameLayout>);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v45, v48);
  outlined destroy of TaskPriority?((uint64_t)v27, &demangling cache variable for type metadata for ModifiedContent<NoticeView.Content, _FlexFrameLayout>);
  if (one-time initialization token for extraLarge != -1) {
    swift_once();
  }
  uint64_t v49 = static Corner.extraLarge;
  uint64_t v50 = *(void *)algn_1005AE918;
  char v51 = byte_1005AE920;
  outlined init with copy of (String, Any)((uint64_t)v30, (uint64_t)v32, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<NoticeView.Content, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>);
  CGFloat v52 = &v32[*(int *)(v147 + 36)];
  *(void *)CGFloat v52 = v49;
  *((void *)v52 + 1) = v50;
  v52[16] = v51;
  outlined destroy of TaskPriority?((uint64_t)v30, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<NoticeView.Content, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>);
  uint64_t v53 = v196 + *(int *)(v195 + 28);
  uint64_t v54 = v196;
  uint64_t v55 = *(void *)(v53 + 8);
  LOBYTE(v200) = *(unsigned char *)v53;
  uint64_t v201 = v55;
  long long v202 = *(_OWORD *)(v53 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for GestureState<Bool>);
  GestureState.wrappedValue.getter();
  if ((_BYTE)v197) {
    double v56 = 0.4;
  }
  else {
    double v56 = 1.0;
  }
  uint64_t v57 = v151;
  outlined init with copy of (String, Any)((uint64_t)v32, v151, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<NoticeView.Content, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, CornerRadiusModifier>);
  *(double *)(v57 + *(int *)(v148 + 36)) = v56;
  outlined destroy of TaskPriority?((uint64_t)v32, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<NoticeView.Content, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, CornerRadiusModifier>);
  uint64_t v58 = static Animation.easeIn(duration:)();
  uint64_t v59 = *(void *)(v53 + 8);
  LOBYTE(v200) = *(unsigned char *)v53;
  uint64_t v201 = v59;
  long long v202 = *(_OWORD *)(v53 + 16);
  GestureState.wrappedValue.getter();
  char v60 = v197;
  CGRect v61 = v193;
  outlined init with copy of (String, Any)(v57, (uint64_t)v193, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<NoticeView.Content, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, CornerRadiusModifier>, _OpacityEffect>);
  CGRect v62 = (char *)v61 + *(int *)(v194 + 36);
  *(void *)CGRect v62 = v58;
  v62[8] = v60;
  outlined destroy of TaskPriority?(v57, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<NoticeView.Content, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, CornerRadiusModifier>, _OpacityEffect>);
  static CoordinateSpaceProtocol<>.local.getter();
  CGRect v63 = v160;
  DragGesture.init<A>(minimumDistance:coordinateSpace:)();
  uint64_t v64 = *(void *)(v53 + 8);
  LOBYTE(v197) = *(unsigned char *)v53;
  uint64_t v198 = v64;
  long long v199 = *(_OWORD *)(v53 + 16);
  GestureState.projectedValue.getter();
  char v65 = v200;
  uint64_t v151 = v201;
  long long v150 = v202;
  uint64_t v192 = type metadata accessor for NoticeView;
  uint64_t v66 = v179;
  _s9MusicCore6NoticeVWOcTm_0(v54, v179, type metadata accessor for NoticeView);
  uint64_t v67 = *((unsigned __int8 *)v190 + 80);
  uint64_t v68 = (v67 + 16) & ~v67;
  uint64_t v69 = v68 + v191;
  uint64_t v191 = v67 | 7;
  uint64_t v152 = v69;
  uint64_t v70 = swift_allocObject();
  uint64_t v153 = (char *)v68;
  uint64_t v190 = type metadata accessor for NoticeView;
  outlined init with take of Notice(v66, v70 + v68, type metadata accessor for NoticeView);
  uint64_t v71 = v163;
  uint64_t v72 = (uint64_t)v168;
  uint64_t v73 = v165;
  (*(void (**)(char *, char *, uint64_t))(v163 + 16))(v168, v63, v165);
  uint64_t v74 = v156;
  uint64_t v75 = v72 + *(int *)(v156 + 44);
  *(unsigned char *)uint64_t v75 = v65;
  *(void *)(v75 + 8) = v151;
  *(_OWORD *)(v75 + 16) = v150;
  uint64_t v76 = (void *)(v72 + *(int *)(v74 + 48));
  *uint64_t v76 = partial apply for closure #1 in NoticeView.body.getter;
  v76[1] = v70;
  (*(void (**)(char *, uint64_t))(v71 + 8))(v63, v73);
  uint64_t v77 = v174;
  TapGesture.init(count:)();
  _s9MusicCore6NoticeVWOcTm_0(v54, v66, v192);
  uint64_t v78 = swift_allocObject();
  uint64_t v79 = v66;
  outlined init with take of Notice(v66, v78 + v68, v190);
  uint64_t v80 = swift_allocObject();
  *(void *)(v80 + 16) = partial apply for closure #2 in NoticeView.body.getter;
  *(void *)(v80 + 24) = v78;
  uint64_t v81 = v173;
  uint64_t v82 = v178;
  Gesture.onEnded(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v177 + 8))(v77, v82);
  uint64_t v83 = v169;
  outlined init with copy of (String, Any)(v72, v169, &demangling cache variable for type metadata for GestureStateGesture<DragGesture, Bool>);
  uint64_t v84 = v172;
  (*(void (**)(uint64_t, char *, uint64_t))(v175 + 32))(v83 + *(int *)(v172 + 52), v81, v176);
  outlined destroy of TaskPriority?(v72, &demangling cache variable for type metadata for GestureStateGesture<DragGesture, Bool>);
  static GestureMask.all.getter();
  unint64_t v85 = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<NoticeView.Content, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, CornerRadiusModifier>, _OpacityEffect>, _AnimationModifier<Bool>> and conformance <> ModifiedContent<A, B>();
  uint64_t v86 = lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type SequenceGesture<GestureStateGesture<DragGesture, Bool>, _EndedGesture<TapGesture>> and conformance SequenceGesture<A, B>, &demangling cache variable for type metadata for SequenceGesture<GestureStateGesture<DragGesture, Bool>, _EndedGesture<TapGesture>>);
  uint64_t v87 = v155;
  uint64_t v88 = v194;
  uint64_t v89 = v193;
  View.gesture<A>(_:including:)();
  outlined destroy of TaskPriority?(v83, &demangling cache variable for type metadata for SequenceGesture<GestureStateGesture<DragGesture, Bool>, _EndedGesture<TapGesture>>);
  outlined destroy of TaskPriority?((uint64_t)v89, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<NoticeView.Content, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, CornerRadiusModifier>, _OpacityEffect>, _AnimationModifier<Bool>>);
  v193 = type metadata accessor for Notice;
  uint64_t v90 = v196;
  uint64_t v91 = (uint64_t)v171;
  _s9MusicCore6NoticeVWOcTm_0(v196, (uint64_t)v171, type metadata accessor for Notice);
  _s9MusicCore6NoticeVWOcTm_0(v90, v79, v192);
  uint64_t v92 = swift_allocObject();
  outlined init with take of Notice(v79, (uint64_t)&v153[v92], v190);
  uint64_t v200 = v88;
  uint64_t v201 = v84;
  *(void *)&long long v202 = v85;
  *((void *)&v202 + 1) = v86;
  swift_getOpaqueTypeConformance2();
  lazy protocol witness table accessor for type NoticeView.Content and conformance NoticeView.Content(&lazy protocol witness table cache variable for type Notice and conformance Notice, (void (*)(uint64_t))type metadata accessor for Notice);
  uint64_t v93 = v159;
  uint64_t v94 = v158;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  outlined destroy of NoticeView.Content(v91, type metadata accessor for Notice);
  (*(void (**)(char *, uint64_t))(v157 + 8))(v87, v94);
  uint64_t v95 = v180;
  static ContentTransition.opacity.getter();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v97 = (uint64_t)v166;
  Swift::String v98 = (uint64_t *)&v166[*(int *)(v154 + 36)];
  uint64_t v99 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<ContentTransition>);
  uint64_t v100 = v181;
  uint64_t v101 = v182;
  (*(void (**)(char *, char *, uint64_t))(v181 + 16))((char *)v98 + *(int *)(v99 + 28), v95, v182);
  *Swift::String v98 = KeyPath;
  uint64_t v102 = v162;
  uint64_t v103 = v164;
  (*(void (**)(uint64_t, char *, uint64_t))(v162 + 16))(v97, v93, v164);
  (*(void (**)(char *, uint64_t))(v100 + 8))(v95, v101);
  (*(void (**)(char *, uint64_t))(v102 + 8))(v93, v103);
  uint64_t v104 = (uint64_t *)(v90 + *(int *)(v195 + 24));
  uint64_t v105 = *v104;
  uint64_t v106 = v104[1];
  uint64_t v200 = v105;
  uint64_t v201 = v106;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Double>);
  State.wrappedValue.getter();
  uint64_t v107 = v197;
  static UnitPoint.center.getter();
  uint64_t v109 = v108;
  uint64_t v111 = v110;
  uint64_t v112 = v167;
  outlined init with copy of (String, Any)(v97, v167, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.onChange<A>(of:initial:_:)>>.0, _EnvironmentKeyWritingModifier<ContentTransition>>);
  uint64_t v113 = (void *)(v112 + *(int *)(v161 + 36));
  *uint64_t v113 = v107;
  v113[1] = v107;
  v113[2] = v109;
  v113[3] = v111;
  outlined destroy of TaskPriority?(v97, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.onChange<A>(of:initial:_:)>>.0, _EnvironmentKeyWritingModifier<ContentTransition>>);
  static Animation.interpolatingSpring(mass:stiffness:damping:initialVelocity:)();
  uint64_t v114 = Animation.delay(_:)();
  swift_release();
  uint64_t v115 = (uint64_t)v188;
  uint64_t v116 = (uint64_t *)&v188[*(int *)(v189 + 36)];
  uint64_t v117 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _AnimationModifier<Notice>);
  _s9MusicCore6NoticeVWOcTm_0(v90, (uint64_t)v116 + *(int *)(v117 + 36), v193);
  *uint64_t v116 = v114;
  outlined init with take of PresentationSource?(v112, v115, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.onChange<A>(of:initial:_:)>>.0, _EnvironmentKeyWritingModifier<ContentTransition>>, _ScaleEffect>);
  uint64_t v118 = v185;
  uint64_t v119 = (void (*)(char *, void, uint64_t))v185[13];
  uint64_t v120 = v183;
  uint64_t v121 = v186;
  v119(v183, enum case for DynamicTypeSize.xSmall(_:), v186);
  uint64_t v122 = v184;
  v119(v184, enum case for DynamicTypeSize.accessibility2(_:), v121);
  lazy protocol witness table accessor for type NoticeView.Content and conformance NoticeView.Content((unint64_t *)&lazy protocol witness table cache variable for type DynamicTypeSize and conformance DynamicTypeSize, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  uint64_t result = dispatch thunk of static Comparable.<= infix(_:_:)();
  if (result)
  {
    uint64_t v124 = v120;
    uint64_t v125 = v187;
    uint64_t v126 = v143;
    uint64_t v127 = &v143[*(int *)(v187 + 48)];
    uint64_t v128 = (void (*)(char *, char *, uint64_t))v118[4];
    v128(v143, v124, v121);
    v128(v127, v122, v121);
    uint64_t v129 = v145;
    v130 = &v145[*(int *)(v125 + 48)];
    uint64_t v131 = (void (*)(char *, char *, uint64_t))v118[2];
    v131(v145, v126, v121);
    v131(v130, v127, v121);
    uint64_t v132 = (uint64_t)v141;
    v128(v141, v129, v121);
    unint64_t v133 = (void (*)(char *, uint64_t))v118[1];
    v133(v130, v121);
    uint64_t v134 = &v129[*(int *)(v187 + 48)];
    v128(v129, v126, v121);
    v128(v134, v127, v121);
    v128((char *)(v132 + *(int *)(v144 + 36)), v134, v121);
    v133(v129, v121);
    uint64_t v135 = v142;
    outlined init with take of PresentationSource?(v132, v142, &demangling cache variable for type metadata for ClosedRange<DynamicTypeSize>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.onChange<A>(of:initial:_:)>>.0, _EnvironmentKeyWritingModifier<ContentTransition>>, _ScaleEffect>, _AnimationModifier<Notice>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type ClosedRange<DynamicTypeSize> and conformance ClosedRange<A>, &demangling cache variable for type metadata for ClosedRange<DynamicTypeSize>);
    id v136 = v138;
    uint64_t v137 = (uint64_t)v188;
    View.dynamicTypeSize<A>(_:)();
    outlined destroy of TaskPriority?(v135, &demangling cache variable for type metadata for ClosedRange<DynamicTypeSize>);
    outlined destroy of TaskPriority?(v137, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.onChange<A>(of:initial:_:)>>.0, _EnvironmentKeyWritingModifier<ContentTransition>>, _ScaleEffect>, _AnimationModifier<Notice>>);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v139 + 32))(v146, v136, v140);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for NoticeView.Content(uint64_t a1)
{
  return type metadata accessor for Notice.Variant(a1, (uint64_t *)&type metadata singleton initialization cache for NoticeView.Content);
}

unint64_t _sS2dSBsWl_0()
{
  unint64_t result = _sS2dSBsWL_0;
  if (!_sS2dSBsWL_0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&_sS2dSBsWL_0);
  }
  return result;
}

uint64_t _s9MusicCore6NoticeVWOcTm_0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t closure #1 in NoticeView.body.getter(uint64_t a1, unsigned char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = type metadata accessor for NoticeView(0);
  __chkstk_darwin();
  uint64_t v8 = &v21[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin();
  uint64_t v10 = &v21[-v9];
  uint64_t v11 = type metadata accessor for Notice(0);
  int v12 = *(unsigned __int8 *)(a4 + *(int *)(v11 + 40));
  _s9MusicCore6NoticeVWOcTm_0(a4, (uint64_t)v10, type metadata accessor for NoticeView);
  if (v12 == 1)
  {
    uint64_t result = outlined destroy of NoticeView.Content((uint64_t)v10, type metadata accessor for NoticeView);
LABEL_5:
    *a2 = 1;
    return result;
  }
  uint64_t v14 = (uint64_t *)&v10[*(int *)(v11 + 32)];
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  if (*v14)
  {
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = v16;
    *(void *)(v17 + 24) = v15;
    outlined copy of (@escaping @callee_guaranteed () -> ())?(v16);
    outlined consume of (@escaping @callee_guaranteed () -> ())?((uint64_t)partial apply for thunk for @escaping @callee_guaranteed () -> ());
    _s9MusicCore6NoticeVWOcTm_0((uint64_t)v10, (uint64_t)v8, type metadata accessor for NoticeView);
    uint64_t v18 = &v8[*(int *)(v6 + 32)];
    char v19 = *v18;
    uint64_t v20 = *((void *)v18 + 1);
    char v21[8] = v19;
    uint64_t v22 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Bool>);
    State.wrappedValue.getter();
    outlined destroy of NoticeView.Content((uint64_t)v8, type metadata accessor for NoticeView);
    uint64_t result = outlined destroy of NoticeView.Content((uint64_t)v10, type metadata accessor for NoticeView);
    if (v23) {
      return result;
    }
    goto LABEL_5;
  }
  outlined copy of (@escaping @callee_guaranteed () -> ())?(0);
  outlined consume of (@escaping @callee_guaranteed () -> ())?(0);
  _s9MusicCore6NoticeVWOcTm_0((uint64_t)v10, (uint64_t)v8, type metadata accessor for NoticeView);
  outlined destroy of NoticeView.Content((uint64_t)v8, type metadata accessor for NoticeView);
  return outlined destroy of NoticeView.Content((uint64_t)v10, type metadata accessor for NoticeView);
}

uint64_t outlined init with take of Notice(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t partial apply for closure #1 in NoticeView.body.getter(uint64_t a1, unsigned char *a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(type metadata accessor for NoticeView(0) - 8);
  uint64_t v8 = v3 + ((*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));

  return closure #1 in NoticeView.body.getter(a1, a2, a3, v8);
}

uint64_t closure #2 in NoticeView.body.getter(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for NoticeView(0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Bool>);
  State.wrappedValue.getter();
  if ((v12 & 1) == 0)
  {
    State.wrappedValue.setter();
    uint64_t v3 = *(void (**)(void))(a1 + *(int *)(type metadata accessor for Notice(0) + 32));
    if (v3) {
      v3();
    }
  }
  uint64_t result = type metadata accessor for Notice(0);
  if (*(unsigned char *)(a1 + *(int *)(result + 40)) == 1)
  {
    uint64_t v5 = a1 + *(int *)(v2 + 20);
    uint64_t v6 = *(void *)v5;
    uint64_t v7 = *(void *)(v5 + 8);
    uint64_t v8 = *(unsigned __int8 *)(v5 + 16);
    int v9 = *(unsigned __int8 *)(v5 + 17);
    outlined copy of Environment<NoticeDismissal?>.Content(*(void *)v5, v7, v8, *(unsigned char *)(v5 + 17));
    specialized Environment.wrappedValue.getter(v6, v7, v8 | (v9 << 8));
    uint64_t v11 = v10;
    uint64_t result = outlined consume of Environment<NoticeDismissal?>.Content(v6, v7, v8, v9);
    if (v11)
    {
      __swift_instantiateConcreteTypeFromMangledName(&_s7SwiftUI7BindingVySbGMD_0);
      Binding.wrappedValue.setter();
      swift_release();
      return swift_release();
    }
  }
  return result;
}

uint64_t objectdestroyTm_16()
{
  uint64_t v1 = type metadata accessor for NoticeView(0);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80));
  swift_bridgeObjectRelease();
  uint64_t v3 = type metadata accessor for Notice(0);
  uint64_t v4 = v2 + *(int *)(v3 + 20);
  uint64_t v5 = type metadata accessor for Notice.Thumbnail(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5))
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v8 = type metadata accessor for Artwork();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v4, v8);
    }
    else if (!EnumCaseMultiPayload)
    {
      swift_release();
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v2 + *(int *)(v3 + 32))) {
    swift_release();
  }
  outlined consume of Environment<NoticeDismissal?>.Content(*(void *)(v2 + *(int *)(v1 + 20)), *(void *)(v2 + *(int *)(v1 + 20) + 8), *(unsigned __int8 *)(v2 + *(int *)(v1 + 20) + 16), *(unsigned char *)(v2 + *(int *)(v1 + 20) + 17));
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t partial apply for closure #2 in NoticeView.body.getter()
{
  return partial apply for closure #2 in NoticeView.body.getter(closure #2 in NoticeView.body.getter);
}

uint64_t sub_100406D20()
{
  swift_release();

  return swift_deallocObject();
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<NoticeView.Content, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, CornerRadiusModifier>, _OpacityEffect>, _AnimationModifier<Bool>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<NoticeView.Content, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, CornerRadiusModifier>, _OpacityEffect>, _AnimationModifier<Bool>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<NoticeView.Content, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, CornerRadiusModifier>, _OpacityEffect>, _AnimationModifier<Bool>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<NoticeView.Content, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, CornerRadiusModifier>, _OpacityEffect>, _AnimationModifier<Bool>>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<NoticeView.Content, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, CornerRadiusModifier>, _OpacityEffect> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type _AnimationModifier<Bool> and conformance _AnimationModifier<A>, &demangling cache variable for type metadata for _AnimationModifier<Bool>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<NoticeView.Content, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, CornerRadiusModifier>, _OpacityEffect>, _AnimationModifier<Bool>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<NoticeView.Content, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, CornerRadiusModifier>, _OpacityEffect> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<NoticeView.Content, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, CornerRadiusModifier>, _OpacityEffect> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<NoticeView.Content, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, CornerRadiusModifier>, _OpacityEffect> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<NoticeView.Content, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, CornerRadiusModifier>, _OpacityEffect>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<NoticeView.Content, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, CornerRadiusModifier> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<NoticeView.Content, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, CornerRadiusModifier> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<NoticeView.Content, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, CornerRadiusModifier>, (void (*)(void))lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<NoticeView.Content, _FlexFrameLayout>, _BackgroundStyleModifier<Material>> and conformance <> ModifiedContent<A, B>, (void (*)(void))lazy protocol witness table accessor for type CornerRadiusModifier and conformance CornerRadiusModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<NoticeView.Content, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, CornerRadiusModifier>, _OpacityEffect> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<NoticeView.Content, _FlexFrameLayout>, _BackgroundStyleModifier<Material>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<NoticeView.Content, _FlexFrameLayout>, _BackgroundStyleModifier<Material>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<NoticeView.Content, _FlexFrameLayout>, _BackgroundStyleModifier<Material>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<NoticeView.Content, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>);
    lazy protocol witness table accessor for type ModifiedContent<NoticeView.Content, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type _BackgroundStyleModifier<Material> and conformance _BackgroundStyleModifier<A>, &demangling cache variable for type metadata for _BackgroundStyleModifier<Material>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<NoticeView.Content, _FlexFrameLayout>, _BackgroundStyleModifier<Material>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<NoticeView.Content, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<NoticeView.Content, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<NoticeView.Content, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<NoticeView.Content, _FlexFrameLayout>);
    lazy protocol witness table accessor for type NoticeView.Content and conformance NoticeView.Content(&lazy protocol witness table cache variable for type NoticeView.Content and conformance NoticeView.Content, (void (*)(uint64_t))type metadata accessor for NoticeView.Content);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<NoticeView.Content, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

void closure #3 in NoticeView.body.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(type metadata accessor for NoticeView(0) - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin();
  static Animation.interpolatingSpring(mass:stiffness:damping:initialVelocity:)();
  uint64_t v10 = a3;
  withAnimation<A>(_:_:)();
  swift_release();
  _sSo17OS_dispatch_queueCMa_1();
  uint64_t v6 = (void *)static OS_dispatch_queue.main.getter();
  _s9MusicCore6NoticeVWOcTm_0(a3, (uint64_t)&v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)], type metadata accessor for NoticeView);
  unint64_t v7 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v8 = swift_allocObject();
  outlined init with take of Notice((uint64_t)&v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)], v8 + v7, type metadata accessor for NoticeView);
  OS_dispatch_queue.asyncAfter(_:block:)((uint64_t)partial apply for closure #2 in closure #3 in NoticeView.body.getter, v8);
  swift_release();
}

void partial apply for closure #3 in NoticeView.body.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for NoticeView(0) - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  closure #3 in NoticeView.body.getter(a1, a2, v6);
}

uint64_t lazy protocol witness table accessor for type NoticeView.Content and conformance NoticeView.Content(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t outlined destroy of NoticeView.Content(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t closure #2 in closure #3 in NoticeView.body.getter()
{
  return swift_release();
}

uint64_t closure #1 in closure #3 in NoticeView.body.getter()
{
  return State.wrappedValue.setter();
}

uint64_t NoticeView.Content.body.getter@<X0>(uint64_t a1@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Group<_ConditionalContent<_ConditionalContent<Image, ModifiedContent<ModifiedContent<ArtworkImage, CornerRadiusModifier>, BorderViewModifier>>, _ConditionalContent<ModifiedContent<CircularProgressView, _FrameLayout>, EmptyView>>>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _FlexFrameLayout>, _AspectRatioLayout>, VStack<TupleView<(ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>?, ModifiedContent<<<opaque return type of View.bodyHeadOutdent(_:)>>.0, _EnvironmentKeyWritingModifier<Int?>>)>>)>>);
  __chkstk_darwin();
  uint64_t v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Group<_ConditionalContent<_ConditionalContent<Image, ModifiedContent<ModifiedContent<ArtworkImage, CornerRadiusModifier>, BorderViewModifier>>, _ConditionalContent<ModifiedContent<CircularProgressView, _FrameLayout>, EmptyView>>>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _FlexFrameLayout>, _AspectRatioLayout>, VStack<TupleView<(ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>?, ModifiedContent<<<opaque return type of View.bodyHeadOutdent(_:)>>.0, _EnvironmentKeyWritingModifier<Int?>>)>>)>>, _PaddingLayout>);
  __chkstk_darwin();
  unint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for DynamicTypeSize();
  __chkstk_darwin();
  int v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Notice(0);
  __chkstk_darwin();
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s9MusicCore6NoticeVWOcTm_0(v1, (uint64_t)v11, type metadata accessor for Notice);
  type metadata accessor for NoticeView.Content(0);
  specialized Environment.wrappedValue.getter((uint64_t)v9);
  specialized NoticeView.Content.DynamicSizeSpecs.init(notice:typeSize:)((uint64_t)v11, (uint64_t)v9, (double *)&v21);
  if (NoticeView.Content.canOutdentMessage.getter()) {
    uint64_t v12 = static VerticalAlignment.top.getter();
  }
  else {
    uint64_t v12 = static VerticalAlignment.center.getter();
  }
  uint64_t v13 = v24;
  *(void *)uint64_t v4 = v12;
  *((void *)v4 + 1) = v13;
  v4[16] = 0;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_HStackLayout, TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Group<_ConditionalContent<_ConditionalContent<Image, ModifiedContent<ModifiedContent<ArtworkImage, CornerRadiusModifier>, BorderViewModifier>>, _ConditionalContent<ModifiedContent<CircularProgressView, _FrameLayout>, EmptyView>>>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _FlexFrameLayout>, _AspectRatioLayout>, VStack<TupleView<(ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>?, ModifiedContent<<<opaque return type of View.bodyHeadOutdent(_:)>>.0, _EnvironmentKeyWritingModifier<Int?>>)>>)>>);
  closure #1 in NoticeView.Content.body.getter(v1, (uint64_t)&v21, (uint64_t)&v4[*(int *)(v14 + 44)]);
  long long v20 = v21;
  uint64_t v15 = v22;
  uint64_t v16 = v23;
  char v17 = static Edge.Set.all.getter();
  outlined init with copy of (String, Any)((uint64_t)v4, (uint64_t)v7, &demangling cache variable for type metadata for HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Group<_ConditionalContent<_ConditionalContent<Image, ModifiedContent<ModifiedContent<ArtworkImage, CornerRadiusModifier>, BorderViewModifier>>, _ConditionalContent<ModifiedContent<CircularProgressView, _FrameLayout>, EmptyView>>>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _FlexFrameLayout>, _AspectRatioLayout>, VStack<TupleView<(ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>?, ModifiedContent<<<opaque return type of View.bodyHeadOutdent(_:)>>.0, _EnvironmentKeyWritingModifier<Int?>>)>>)>>);
  uint64_t v18 = &v7[*(int *)(v5 + 36)];
  *uint64_t v18 = v17;
  *(_OWORD *)(v18 + 8) = v20;
  *((void *)v18 + 3) = v15;
  *((void *)v18 + 4) = v16;
  v18[40] = 0;
  outlined destroy of TaskPriority?((uint64_t)v4, &demangling cache variable for type metadata for HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Group<_ConditionalContent<_ConditionalContent<Image, ModifiedContent<ModifiedContent<ArtworkImage, CornerRadiusModifier>, BorderViewModifier>>, _ConditionalContent<ModifiedContent<CircularProgressView, _FrameLayout>, EmptyView>>>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _FlexFrameLayout>, _AspectRatioLayout>, VStack<TupleView<(ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>?, ModifiedContent<<<opaque return type of View.bodyHeadOutdent(_:)>>.0, _EnvironmentKeyWritingModifier<Int?>>)>>)>>);
  return outlined init with take of PresentationSource?((uint64_t)v7, a1, &demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Group<_ConditionalContent<_ConditionalContent<Image, ModifiedContent<ModifiedContent<ArtworkImage, CornerRadiusModifier>, BorderViewModifier>>, _ConditionalContent<ModifiedContent<CircularProgressView, _FrameLayout>, EmptyView>>>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _FlexFrameLayout>, _AspectRatioLayout>, VStack<TupleView<(ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>?, ModifiedContent<<<opaque return type of View.bodyHeadOutdent(_:)>>.0, _EnvironmentKeyWritingModifier<Int?>>)>>)>>, _PaddingLayout>);
}

BOOL NoticeView.Content.canOutdentMessage.getter()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&_s9MusicCore6NoticeV9ThumbnailOSgMD_0);
  __chkstk_darwin();
  uint64_t v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for DynamicTypeSize();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  unint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for NoticeView.Content(0);
  specialized Environment.wrappedValue.getter((uint64_t)v7);
  char v8 = DynamicTypeSize.isAccessibilitySize.getter();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (v8)
  {
    uint64_t v9 = type metadata accessor for Notice(0);
    uint64_t v10 = (void *)(v1 + *(int *)(v9 + 28));
    unint64_t v11 = v10[1];
    if (v11)
    {
      uint64_t v12 = *v10 & 0xFFFFFFFFFFFFLL;
      if ((v11 & 0x2000000000000000) != 0 ? HIBYTE(v11) & 0xF : v12)
      {
        outlined init with copy of (String, Any)(v1 + *(int *)(v9 + 20), (uint64_t)v3, &_s9MusicCore6NoticeV9ThumbnailOSgMD_0);
        uint64_t v14 = type metadata accessor for Notice.Thumbnail(0);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v3, 1, v14) != 1)
        {
          BOOL v15 = swift_getEnumCaseMultiPayload() == 1;
          outlined destroy of NoticeView.Content((uint64_t)v3, type metadata accessor for Notice.Thumbnail);
          return v15;
        }
        outlined destroy of TaskPriority?((uint64_t)v3, &_s9MusicCore6NoticeV9ThumbnailOSgMD_0);
      }
    }
  }
  return 0;
}

uint64_t closure #1 in NoticeView.Content.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v45 = a2;
  uint64_t v46 = a3;
  uint64_t v41 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>?, ModifiedContent<<<opaque return type of View.bodyHeadOutdent(_:)>>.0, _EnvironmentKeyWritingModifier<Int?>>)>>);
  __chkstk_darwin();
  uint64_t v44 = (uint64_t)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  long long v43 = (uint64_t *)((char *)&v38 - v5);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Group<_ConditionalContent<_ConditionalContent<Image, ModifiedContent<ModifiedContent<ArtworkImage, CornerRadiusModifier>, BorderViewModifier>>, _ConditionalContent<ModifiedContent<CircularProgressView, _FrameLayout>, EmptyView>>>);
  __chkstk_darwin();
  unint64_t v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Group<_ConditionalContent<_ConditionalContent<Image, ModifiedContent<ModifiedContent<ArtworkImage, CornerRadiusModifier>, BorderViewModifier>>, _ConditionalContent<ModifiedContent<CircularProgressView, _FrameLayout>, EmptyView>>>, _EnvironmentKeyWritingModifier<Font?>>)
     - 8;
  __chkstk_darwin();
  uint64_t v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Group<_ConditionalContent<_ConditionalContent<Image, ModifiedContent<ModifiedContent<ArtworkImage, CornerRadiusModifier>, BorderViewModifier>>, _ConditionalContent<ModifiedContent<CircularProgressView, _FrameLayout>, EmptyView>>>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>)
      - 8;
  __chkstk_darwin();
  uint64_t v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Group<_ConditionalContent<_ConditionalContent<Image, ModifiedContent<ModifiedContent<ArtworkImage, CornerRadiusModifier>, BorderViewModifier>>, _ConditionalContent<ModifiedContent<CircularProgressView, _FrameLayout>, EmptyView>>>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _FlexFrameLayout>)
      - 8;
  __chkstk_darwin();
  uint64_t v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Group<_ConditionalContent<_ConditionalContent<Image, ModifiedContent<ModifiedContent<ArtworkImage, CornerRadiusModifier>, BorderViewModifier>>, _ConditionalContent<ModifiedContent<CircularProgressView, _FrameLayout>, EmptyView>>>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _FlexFrameLayout>, _AspectRatioLayout>)
      - 8;
  __chkstk_darwin();
  uint64_t v42 = (uint64_t)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v38 = (uint64_t)&v38 - v18;
  __chkstk_darwin();
  uint64_t v39 = (uint64_t)&v38 - v19;
  closure #1 in closure #1 in NoticeView.Content.body.getter(a1, (uint64_t)v7);
  static Font.subheadline.getter();
  static Font.Weight.semibold.getter();
  uint64_t v20 = Font.weight(_:)();
  swift_release();
  uint64_t KeyPath = swift_getKeyPath();
  outlined init with copy of (String, Any)((uint64_t)v7, (uint64_t)v10, &demangling cache variable for type metadata for Group<_ConditionalContent<_ConditionalContent<Image, ModifiedContent<ModifiedContent<ArtworkImage, CornerRadiusModifier>, BorderViewModifier>>, _ConditionalContent<ModifiedContent<CircularProgressView, _FrameLayout>, EmptyView>>>);
  uint64_t v22 = (uint64_t *)&v10[*(int *)(v8 + 44)];
  *uint64_t v22 = KeyPath;
  v22[1] = v20;
  outlined destroy of TaskPriority?((uint64_t)v7, &demangling cache variable for type metadata for Group<_ConditionalContent<_ConditionalContent<Image, ModifiedContent<ModifiedContent<ArtworkImage, CornerRadiusModifier>, BorderViewModifier>>, _ConditionalContent<ModifiedContent<CircularProgressView, _FrameLayout>, EmptyView>>>);
  LODWORD(KeyPath) = static HierarchicalShapeStyle.primary.getter();
  outlined init with copy of (String, Any)((uint64_t)v10, (uint64_t)v13, &demangling cache variable for type metadata for ModifiedContent<Group<_ConditionalContent<_ConditionalContent<Image, ModifiedContent<ModifiedContent<ArtworkImage, CornerRadiusModifier>, BorderViewModifier>>, _ConditionalContent<ModifiedContent<CircularProgressView, _FrameLayout>, EmptyView>>>, _EnvironmentKeyWritingModifier<Font?>>);
  *(_DWORD *)&v13[*(int *)(v11 + 44)] = KeyPath;
  outlined destroy of TaskPriority?((uint64_t)v10, &demangling cache variable for type metadata for ModifiedContent<Group<_ConditionalContent<_ConditionalContent<Image, ModifiedContent<ModifiedContent<ArtworkImage, CornerRadiusModifier>, BorderViewModifier>>, _ConditionalContent<ModifiedContent<CircularProgressView, _FrameLayout>, EmptyView>>>, _EnvironmentKeyWritingModifier<Font?>>);
  static Alignment.center.getter();
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  outlined init with copy of (String, Any)((uint64_t)v13, (uint64_t)v16, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Group<_ConditionalContent<_ConditionalContent<Image, ModifiedContent<ModifiedContent<ArtworkImage, CornerRadiusModifier>, BorderViewModifier>>, _ConditionalContent<ModifiedContent<CircularProgressView, _FrameLayout>, EmptyView>>>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>);
  uint64_t v23 = &v16[*(int *)(v14 + 44)];
  long long v24 = v52;
  *((_OWORD *)v23 + 4) = v51;
  *((_OWORD *)v23 + 5) = v24;
  *((_OWORD *)v23 + 6) = v53;
  long long v25 = v48;
  *(_OWORD *)uint64_t v23 = v47;
  *((_OWORD *)v23 + 1) = v25;
  long long v26 = v50;
  *((_OWORD *)v23 + 2) = v49;
  *((_OWORD *)v23 + 3) = v26;
  outlined destroy of TaskPriority?((uint64_t)v13, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Group<_ConditionalContent<_ConditionalContent<Image, ModifiedContent<ModifiedContent<ArtworkImage, CornerRadiusModifier>, BorderViewModifier>>, _ConditionalContent<ModifiedContent<CircularProgressView, _FrameLayout>, EmptyView>>>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>);
  uint64_t v27 = v38;
  outlined init with copy of (String, Any)((uint64_t)v16, v38, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Group<_ConditionalContent<_ConditionalContent<Image, ModifiedContent<ModifiedContent<ArtworkImage, CornerRadiusModifier>, BorderViewModifier>>, _ConditionalContent<ModifiedContent<CircularProgressView, _FrameLayout>, EmptyView>>>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _FlexFrameLayout>);
  uint64_t v28 = v27 + *(int *)(v40 + 44);
  *(void *)uint64_t v28 = 0x3FF0000000000000;
  *(_WORD *)(v28 + 8) = 0;
  outlined destroy of TaskPriority?((uint64_t)v16, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Group<_ConditionalContent<_ConditionalContent<Image, ModifiedContent<ModifiedContent<ArtworkImage, CornerRadiusModifier>, BorderViewModifier>>, _ConditionalContent<ModifiedContent<CircularProgressView, _FrameLayout>, EmptyView>>>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _FlexFrameLayout>);
  uint64_t v29 = v39;
  outlined init with take of PresentationSource?(v27, v39, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Group<_ConditionalContent<_ConditionalContent<Image, ModifiedContent<ModifiedContent<ArtworkImage, CornerRadiusModifier>, BorderViewModifier>>, _ConditionalContent<ModifiedContent<CircularProgressView, _FrameLayout>, EmptyView>>>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _FlexFrameLayout>, _AspectRatioLayout>);
  uint64_t v30 = static HorizontalAlignment.leading.getter();
  uint64_t v31 = (uint64_t)v43;
  *long long v43 = v30;
  *(void *)(v31 + 8) = 0;
  *(unsigned char *)(v31 + 16) = 1;
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_VStackLayout, TupleView<(ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>?, ModifiedContent<<<opaque return type of View.bodyHeadOutdent(_:)>>.0, _EnvironmentKeyWritingModifier<Int?>>)>>);
  closure #2 in closure #1 in NoticeView.Content.body.getter(v41, v45, (uint64_t *)(v31 + *(int *)(v32 + 44)));
  uint64_t v33 = v42;
  outlined init with copy of (String, Any)(v29, v42, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Group<_ConditionalContent<_ConditionalContent<Image, ModifiedContent<ModifiedContent<ArtworkImage, CornerRadiusModifier>, BorderViewModifier>>, _ConditionalContent<ModifiedContent<CircularProgressView, _FrameLayout>, EmptyView>>>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _FlexFrameLayout>, _AspectRatioLayout>);
  uint64_t v34 = v44;
  outlined init with copy of (String, Any)(v31, v44, &demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>?, ModifiedContent<<<opaque return type of View.bodyHeadOutdent(_:)>>.0, _EnvironmentKeyWritingModifier<Int?>>)>>);
  uint64_t v35 = v46;
  outlined init with copy of (String, Any)(v33, v46, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Group<_ConditionalContent<_ConditionalContent<Image, ModifiedContent<ModifiedContent<ArtworkImage, CornerRadiusModifier>, BorderViewModifier>>, _ConditionalContent<ModifiedContent<CircularProgressView, _FrameLayout>, EmptyView>>>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _FlexFrameLayout>, _AspectRatioLayout>);
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Group<_ConditionalContent<_ConditionalContent<Image, ModifiedContent<ModifiedContent<ArtworkImage, CornerRadiusModifier>, BorderViewModifier>>, _ConditionalContent<ModifiedContent<CircularProgressView, _FrameLayout>, EmptyView>>>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _FlexFrameLayout>, _AspectRatioLayout>, VStack<TupleView<(ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>?, ModifiedContent<<<opaque return type of View.bodyHeadOutdent(_:)>>.0, _EnvironmentKeyWritingModifier<Int?>>)>>));
  outlined init with copy of (String, Any)(v34, v35 + *(int *)(v36 + 48), &demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>?, ModifiedContent<<<opaque return type of View.bodyHeadOutdent(_:)>>.0, _EnvironmentKeyWritingModifier<Int?>>)>>);
  outlined destroy of TaskPriority?(v31, &demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>?, ModifiedContent<<<opaque return type of View.bodyHeadOutdent(_:)>>.0, _EnvironmentKeyWritingModifier<Int?>>)>>);
  outlined destroy of TaskPriority?(v29, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Group<_ConditionalContent<_ConditionalContent<Image, ModifiedContent<ModifiedContent<ArtworkImage, CornerRadiusModifier>, BorderViewModifier>>, _ConditionalContent<ModifiedContent<CircularProgressView, _FrameLayout>, EmptyView>>>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _FlexFrameLayout>, _AspectRatioLayout>);
  outlined destroy of TaskPriority?(v34, &demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>?, ModifiedContent<<<opaque return type of View.bodyHeadOutdent(_:)>>.0, _EnvironmentKeyWritingModifier<Int?>>)>>);
  return outlined destroy of TaskPriority?(v33, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Group<_ConditionalContent<_ConditionalContent<Image, ModifiedContent<ModifiedContent<ArtworkImage, CornerRadiusModifier>, BorderViewModifier>>, _ConditionalContent<ModifiedContent<CircularProgressView, _FrameLayout>, EmptyView>>>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _FlexFrameLayout>, _AspectRatioLayout>);
}

uint64_t closure #1 in closure #1 in NoticeView.Content.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v84 = a2;
  uint64_t v82 = (char *)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<CircularProgressView, _FrameLayout>, EmptyView>.Storage);
  __chkstk_darwin();
  uint64_t v4 = (char *)v59 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<CircularProgressView, _FrameLayout>, EmptyView>);
  __chkstk_darwin();
  uint64_t v6 = (char *)v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = type metadata accessor for CircularProgressView.LineStyle();
  uint64_t v62 = *(void *)(v63 - 8);
  __chkstk_darwin();
  char v65 = (char *)v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = type metadata accessor for CircularProgressView();
  uint64_t v71 = *(void *)(v72 - 8);
  __chkstk_darwin();
  uint64_t v69 = (char *)v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<CircularProgressView, _FrameLayout>);
  __chkstk_darwin();
  uint64_t v67 = (char *)v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v73 = (uint64_t)v59 - v11;
  uint64_t v66 = type metadata accessor for ArtworkImage();
  uint64_t v64 = *(void *)(v66 - 8);
  __chkstk_darwin();
  CGRect v61 = (char *)v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ArtworkImage, CornerRadiusModifier>);
  __chkstk_darwin();
  uint64_t v70 = (char *)v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ArtworkImage, CornerRadiusModifier>, BorderViewModifier>);
  __chkstk_darwin();
  uint64_t v68 = (uint64_t)v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v75 = (uint64_t)v59 - v15;
  uint64_t v76 = type metadata accessor for Artwork();
  uint64_t v74 = *(void *)(v76 - 8);
  __chkstk_darwin();
  uint64_t v17 = (char *)v59 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v79 = (char *)v59 - v18;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<_ConditionalContent<Image, ModifiedContent<ModifiedContent<ArtworkImage, CornerRadiusModifier>, BorderViewModifier>>, _ConditionalContent<ModifiedContent<CircularProgressView, _FrameLayout>, EmptyView>>.Storage);
  __chkstk_darwin();
  long long v21 = (char *)v59 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<Image, ModifiedContent<ModifiedContent<ArtworkImage, CornerRadiusModifier>, BorderViewModifier>>.Storage);
  __chkstk_darwin();
  uint64_t v78 = (void *)((char *)v59 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<Image, ModifiedContent<ModifiedContent<ArtworkImage, CornerRadiusModifier>, BorderViewModifier>>);
  __chkstk_darwin();
  uint64_t v80 = (char *)v59 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&_s9MusicCore6NoticeV9ThumbnailOSgMD_0);
  __chkstk_darwin();
  long long v26 = (void *)((char *)v59 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v27 = type metadata accessor for Notice(0);
  outlined init with copy of (String, Any)(a1 + *(int *)(v27 + 20), (uint64_t)v26, &_s9MusicCore6NoticeV9ThumbnailOSgMD_0);
  uint64_t v28 = type metadata accessor for Notice.Thumbnail(0);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(*(void *)(v28 - 8) + 48))(v26, 1, v28) == 1)
  {
    swift_storeEnumTagMultiPayload();
    lazy protocol witness table accessor for type ModifiedContent<CircularProgressView, _FrameLayout> and conformance <> ModifiedContent<A, B>();
    _ConditionalContent<>.init(storage:)();
    outlined init with copy of (String, Any)((uint64_t)v6, (uint64_t)v21, &demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<CircularProgressView, _FrameLayout>, EmptyView>);
    swift_storeEnumTagMultiPayload();
    lazy protocol witness table accessor for type _ConditionalContent<Image, ModifiedContent<ModifiedContent<ArtworkImage, CornerRadiusModifier>, BorderViewModifier>> and conformance <> _ConditionalContent<A, B>();
    lazy protocol witness table accessor for type _ConditionalContent<ModifiedContent<CircularProgressView, _FrameLayout>, EmptyView> and conformance <> _ConditionalContent<A, B>(&lazy protocol witness table cache variable for type _ConditionalContent<ModifiedContent<CircularProgressView, _FrameLayout>, EmptyView> and conformance <> _ConditionalContent<A, B>, &demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<CircularProgressView, _FrameLayout>, EmptyView>, (void (*)(void))lazy protocol witness table accessor for type ModifiedContent<CircularProgressView, _FrameLayout> and conformance <> ModifiedContent<A, B>);
    _ConditionalContent<>.init(storage:)();
    uint64_t v29 = (uint64_t)v6;
    uint64_t v30 = &demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<CircularProgressView, _FrameLayout>, EmptyView>;
    return outlined destroy of TaskPriority?(v29, v30);
  }
  v59[1] = v19;
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    *uint64_t v78 = *v26;
    swift_storeEnumTagMultiPayload();
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<NoticeView.Content, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, CornerRadiusModifier> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ArtworkImage, CornerRadiusModifier>, BorderViewModifier> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ArtworkImage, CornerRadiusModifier>, BorderViewModifier>, (void (*)(void))lazy protocol witness table accessor for type ModifiedContent<ArtworkImage, CornerRadiusModifier> and conformance <> ModifiedContent<A, B>, (void (*)(void))lazy protocol witness table accessor for type BorderViewModifier and conformance BorderViewModifier);
    swift_retain();
    uint64_t v51 = (uint64_t)v80;
    _ConditionalContent<>.init(storage:)();
    outlined init with copy of (String, Any)(v51, (uint64_t)v21, &demangling cache variable for type metadata for _ConditionalContent<Image, ModifiedContent<ModifiedContent<ArtworkImage, CornerRadiusModifier>, BorderViewModifier>>);
    swift_storeEnumTagMultiPayload();
    lazy protocol witness table accessor for type _ConditionalContent<Image, ModifiedContent<ModifiedContent<ArtworkImage, CornerRadiusModifier>, BorderViewModifier>> and conformance <> _ConditionalContent<A, B>();
    lazy protocol witness table accessor for type _ConditionalContent<ModifiedContent<CircularProgressView, _FrameLayout>, EmptyView> and conformance <> _ConditionalContent<A, B>(&lazy protocol witness table cache variable for type _ConditionalContent<ModifiedContent<CircularProgressView, _FrameLayout>, EmptyView> and conformance <> _ConditionalContent<A, B>, &demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<CircularProgressView, _FrameLayout>, EmptyView>, (void (*)(void))lazy protocol witness table accessor for type ModifiedContent<CircularProgressView, _FrameLayout> and conformance <> ModifiedContent<A, B>);
    _ConditionalContent<>.init(storage:)();
    outlined destroy of TaskPriority?(v51, &demangling cache variable for type metadata for _ConditionalContent<Image, ModifiedContent<ModifiedContent<ArtworkImage, CornerRadiusModifier>, BorderViewModifier>>);
    return swift_release();
  }
  uint64_t v32 = (uint64_t)v21;
  v59[0] = v23;
  if (EnumCaseMultiPayload != 1)
  {
    static Color.white.getter();
    (*(void (**)(char *, void, uint64_t))(v62 + 104))(v65, enum case for CircularProgressView.LineStyle.round(_:), v63);
    LOBYTE(v85) = 1;
    long long v52 = v69;
    CircularProgressView.init(value:trackColor:lineWidth:lineStyle:)();
    static Alignment.center.getter();
    _FrameLayout.init(width:height:alignment:)();
    uint64_t v53 = v71;
    uint64_t v54 = (uint64_t)v67;
    uint64_t v55 = v72;
    (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v67, v52, v72);
    double v56 = (_OWORD *)(v54 + *(int *)(v9 + 36));
    long long v57 = v86;
    *double v56 = v85;
    v56[1] = v57;
    v56[2] = v87;
    (*(void (**)(char *, uint64_t))(v53 + 8))(v52, v55);
    uint64_t v58 = v73;
    outlined init with take of PresentationSource?(v54, v73, &demangling cache variable for type metadata for ModifiedContent<CircularProgressView, _FrameLayout>);
    outlined init with copy of (String, Any)(v58, (uint64_t)v4, &demangling cache variable for type metadata for ModifiedContent<CircularProgressView, _FrameLayout>);
    swift_storeEnumTagMultiPayload();
    lazy protocol witness table accessor for type ModifiedContent<CircularProgressView, _FrameLayout> and conformance <> ModifiedContent<A, B>();
    _ConditionalContent<>.init(storage:)();
    outlined init with copy of (String, Any)((uint64_t)v6, v32, &demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<CircularProgressView, _FrameLayout>, EmptyView>);
    swift_storeEnumTagMultiPayload();
    lazy protocol witness table accessor for type _ConditionalContent<Image, ModifiedContent<ModifiedContent<ArtworkImage, CornerRadiusModifier>, BorderViewModifier>> and conformance <> _ConditionalContent<A, B>();
    lazy protocol witness table accessor for type _ConditionalContent<ModifiedContent<CircularProgressView, _FrameLayout>, EmptyView> and conformance <> _ConditionalContent<A, B>(&lazy protocol witness table cache variable for type _ConditionalContent<ModifiedContent<CircularProgressView, _FrameLayout>, EmptyView> and conformance <> _ConditionalContent<A, B>, &demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<CircularProgressView, _FrameLayout>, EmptyView>, (void (*)(void))lazy protocol witness table accessor for type ModifiedContent<CircularProgressView, _FrameLayout> and conformance <> ModifiedContent<A, B>);
    _ConditionalContent<>.init(storage:)();
    outlined destroy of TaskPriority?((uint64_t)v6, &demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<CircularProgressView, _FrameLayout>, EmptyView>);
    uint64_t v29 = v58;
    uint64_t v30 = &demangling cache variable for type metadata for ModifiedContent<CircularProgressView, _FrameLayout>;
    return outlined destroy of TaskPriority?(v29, v30);
  }
  uint64_t v82 = v21;
  uint64_t v33 = v74;
  uint64_t v34 = v79;
  uint64_t v35 = v76;
  (*(void (**)(char *, void *, uint64_t))(v74 + 32))(v79, v26, v76);
  (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v17, v34, v35);
  type metadata accessor for NoticeView.Content(0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScaledMetric<Double>);
  ScaledMetric.wrappedValue.getter();
  uint64_t v36 = v61;
  ArtworkImage.init(_:height:)();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScaledMetric<CGFloat>);
  ScaledMetric.wrappedValue.getter();
  uint64_t v37 = v85;
  uint64_t v38 = v64;
  uint64_t v39 = (uint64_t)v70;
  uint64_t v40 = v66;
  (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v70, v36, v66);
  uint64_t v41 = v39 + *(int *)(v60 + 36);
  *(void *)uint64_t v41 = v37;
  *(void *)(v41 + 8) = -1;
  *(unsigned char *)(v41 + 16) = 0;
  (*(void (**)(char *, uint64_t))(v38 + 8))(v36, v40);
  if (one-time initialization token for artwork != -1) {
    swift_once();
  }
  uint64_t v42 = static Border.artwork;
  uint64_t v43 = qword_1005AE930;
  char v44 = byte_1005AE938;
  ScaledMetric.wrappedValue.getter();
  uint64_t v45 = v85;
  uint64_t v46 = v68;
  outlined init with copy of (String, Any)(v39, v68, &demangling cache variable for type metadata for ModifiedContent<ArtworkImage, CornerRadiusModifier>);
  uint64_t v47 = v46 + *(int *)(v81 + 36);
  *(void *)uint64_t v47 = v42;
  *(void *)(v47 + 8) = v43;
  *(unsigned char *)(v47 + 16) = v44;
  *(void *)(v47 + 24) = v45;
  *(void *)(v47 + 32) = -1;
  *(unsigned char *)(v47 + 40) = 0;
  swift_retain();
  outlined destroy of TaskPriority?(v39, &demangling cache variable for type metadata for ModifiedContent<ArtworkImage, CornerRadiusModifier>);
  uint64_t v48 = v75;
  outlined init with take of PresentationSource?(v46, v75, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ArtworkImage, CornerRadiusModifier>, BorderViewModifier>);
  outlined init with copy of (String, Any)(v48, (uint64_t)v78, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ArtworkImage, CornerRadiusModifier>, BorderViewModifier>);
  swift_storeEnumTagMultiPayload();
  lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<NoticeView.Content, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, CornerRadiusModifier> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ArtworkImage, CornerRadiusModifier>, BorderViewModifier> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ArtworkImage, CornerRadiusModifier>, BorderViewModifier>, (void (*)(void))lazy protocol witness table accessor for type ModifiedContent<ArtworkImage, CornerRadiusModifier> and conformance <> ModifiedContent<A, B>, (void (*)(void))lazy protocol witness table accessor for type BorderViewModifier and conformance BorderViewModifier);
  uint64_t v49 = (uint64_t)v80;
  _ConditionalContent<>.init(storage:)();
  outlined init with copy of (String, Any)(v49, (uint64_t)v82, &demangling cache variable for type metadata for _ConditionalContent<Image, ModifiedContent<ModifiedContent<ArtworkImage, CornerRadiusModifier>, BorderViewModifier>>);
  swift_storeEnumTagMultiPayload();
  lazy protocol witness table accessor for type _ConditionalContent<Image, ModifiedContent<ModifiedContent<ArtworkImage, CornerRadiusModifier>, BorderViewModifier>> and conformance <> _ConditionalContent<A, B>();
  lazy protocol witness table accessor for type _ConditionalContent<ModifiedContent<CircularProgressView, _FrameLayout>, EmptyView> and conformance <> _ConditionalContent<A, B>(&lazy protocol witness table cache variable for type _ConditionalContent<ModifiedContent<CircularProgressView, _FrameLayout>, EmptyView> and conformance <> _ConditionalContent<A, B>, &demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<CircularProgressView, _FrameLayout>, EmptyView>, (void (*)(void))lazy protocol witness table accessor for type ModifiedContent<CircularProgressView, _FrameLayout> and conformance <> ModifiedContent<A, B>);
  _ConditionalContent<>.init(storage:)();
  outlined destroy of TaskPriority?(v49, &demangling cache variable for type metadata for _ConditionalContent<Image, ModifiedContent<ModifiedContent<ArtworkImage, CornerRadiusModifier>, BorderViewModifier>>);
  outlined destroy of TaskPriority?(v48, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ArtworkImage, CornerRadiusModifier>, BorderViewModifier>);
  return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v79, v35);
}

uint64_t closure #2 in closure #1 in NoticeView.Content.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  v52[1] = a2;
  uint64_t v64 = a3;
  uint64_t v4 = type metadata accessor for Font.Leading();
  uint64_t v56 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v55 = (char *)v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.bodyHeadOutdent(_:)>>.0);
  uint64_t v67 = *(void *)(v6 - 8);
  uint64_t v68 = v6;
  __chkstk_darwin();
  uint64_t v66 = (char *)v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.bodyHeadOutdent(_:)>>.0, _EnvironmentKeyWritingModifier<Int?>>);
  __chkstk_darwin();
  uint64_t v70 = (uint64_t)v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v63 = (char *)v52 - v9;
  __chkstk_darwin();
  uint64_t v69 = (uint64_t)v52 - v10;
  uint64_t v11 = *(int *)(type metadata accessor for Notice(0) + 28);
  uint64_t v71 = a1;
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = v12[1];
  if (v13)
  {
    *(void *)&long long v72 = *v12;
    *((void *)&v72 + 1) = v13;
    _sS2SSysWl_1();
    swift_bridgeObjectRetain();
    uint64_t v14 = Text.init<A>(_:)();
    uint64_t v16 = v15;
    char v18 = v17 & 1;
    static Font.footnote.getter();
    uint64_t v19 = Text.font(_:)();
    uint64_t v21 = v20;
    char v23 = v22;
    uint64_t v54 = v4;
    swift_release();
    outlined consume of Text.Storage(v14, v16, v18);
    swift_bridgeObjectRelease();
    LODWORD(v72) = static HierarchicalShapeStyle.secondary.getter();
    uint64_t v62 = Text.foregroundStyle<A>(_:)();
    uint64_t v61 = v24;
    uint64_t v60 = v25;
    uint64_t v59 = v26 & 1;
    outlined consume of Text.Storage(v19, v21, v23 & 1);
    uint64_t v4 = v54;
    swift_bridgeObjectRelease();
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v57 = 2;
  }
  else
  {
    uint64_t v62 = 0;
    uint64_t v61 = 0;
    uint64_t v59 = 0;
    uint64_t v60 = 0;
    uint64_t KeyPath = 0;
    uint64_t v57 = 0;
  }
  closure #1 in closure #2 in closure #1 in NoticeView.Content.body.getter(v71, &v72);
  long long v27 = v72;
  uint64_t v28 = v73;
  uint64_t v54 = v74;
  int v29 = v75;
  int v53 = v76;
  static Font.subheadline.getter();
  uint64_t v30 = v56;
  uint64_t v31 = v55;
  (*(void (**)(char *, void, uint64_t))(v56 + 104))(v55, enum case for Font.Leading.tight(_:), v4);
  Font.leading(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v31, v4);
  static Font.Weight.semibold.getter();
  uint64_t v32 = Font.weight(_:)();
  swift_release();
  uint64_t v33 = swift_getKeyPath();
  long long v72 = v27;
  uint64_t v56 = v28;
  uint64_t v73 = v28;
  uint64_t v34 = v54;
  uint64_t v74 = v54;
  LODWORD(v55) = v29;
  unsigned __int8 v75 = v29;
  char v35 = v53;
  unsigned __int8 v76 = v53;
  uint64_t v77 = v33;
  uint64_t v78 = v32;
  if (NoticeView.Content.canOutdentMessage.getter())
  {
    type metadata accessor for NoticeView.Content(0);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScaledMetric<Double>);
    ScaledMetric.wrappedValue.getter();
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Group<_ConditionalContent<_ConditionalContent<Text, Text>, Text>>, _EnvironmentKeyWritingModifier<Font?>>);
  lazy protocol witness table accessor for type ModifiedContent<Group<_ConditionalContent<_ConditionalContent<Text, Text>, Text>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>();
  uint64_t v36 = v66;
  View.bodyHeadOutdent(_:)();
  outlined consume of _ConditionalContent<_ConditionalContent<Text, Text>, Text>.Storage(v27, *((uint64_t *)&v27 + 1), v56, v34, v55, v35);
  swift_release();
  swift_release();
  uint64_t v37 = swift_getKeyPath();
  uint64_t v39 = v67;
  uint64_t v38 = v68;
  uint64_t v40 = (uint64_t)v63;
  (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v63, v36, v68);
  uint64_t v41 = v40 + *(int *)(v65 + 36);
  *(void *)uint64_t v41 = v37;
  *(void *)(v41 + 8) = 4;
  *(unsigned char *)(v41 + 16) = 0;
  (*(void (**)(char *, uint64_t))(v39 + 8))(v36, v38);
  uint64_t v42 = v69;
  outlined init with take of PresentationSource?(v40, v69, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.bodyHeadOutdent(_:)>>.0, _EnvironmentKeyWritingModifier<Int?>>);
  uint64_t v43 = v70;
  outlined init with copy of (String, Any)(v42, v70, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.bodyHeadOutdent(_:)>>.0, _EnvironmentKeyWritingModifier<Int?>>);
  uint64_t v44 = v62;
  uint64_t v45 = v64;
  uint64_t v46 = v61;
  *uint64_t v64 = v62;
  v45[1] = v46;
  char v47 = v59;
  uint64_t v48 = v60;
  v45[2] = v59;
  v45[3] = v48;
  uint64_t v49 = v57;
  v45[4] = KeyPath;
  v45[5] = v49;
  *((unsigned char *)v45 + 48) = 0;
  uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>?, ModifiedContent<<<opaque return type of View.bodyHeadOutdent(_:)>>.0, _EnvironmentKeyWritingModifier<Int?>>));
  outlined init with copy of (String, Any)(v43, (uint64_t)v45 + *(int *)(v50 + 48), &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.bodyHeadOutdent(_:)>>.0, _EnvironmentKeyWritingModifier<Int?>>);
  outlined copy of ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>?(v44, v46, v47, v48);
  outlined destroy of TaskPriority?(v42, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.bodyHeadOutdent(_:)>>.0, _EnvironmentKeyWritingModifier<Int?>>);
  outlined destroy of TaskPriority?(v43, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.bodyHeadOutdent(_:)>>.0, _EnvironmentKeyWritingModifier<Int?>>);
  return outlined consume of ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>?(v44, v46, v47, v48);
}

double closure #1 in closure #2 in closure #1 in NoticeView.Content.body.getter@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v131 = a2;
  uint64_t v3 = type metadata accessor for Locale.Language();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin();
  uint64_t v129 = (char *)&v125 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for LayoutDirection();
  uint64_t v130 = *(void *)(v6 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v125 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v10 = (char *)&v125 - v9;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DynamicTypeSize?);
  __chkstk_darwin();
  uint64_t v12 = (char *)&v125 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for Notice(0);
  if (*(void *)(a1 + *(int *)(v13 + 32)))
  {
    uint64_t v128 = v4;
    uint64_t v126 = v3;
    uint64_t v14 = type metadata accessor for NoticeView.Content(0);
    specialized Environment.wrappedValue.getter((uint64_t)v12);
    uint64_t v15 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v12, 0, 1, v15);
    uint64_t v16 = (void *)UIContentSizeCategory.init(_:)();
    id v17 = [self traitCollectionWithPreferredContentSizeCategory:v16];

    id v18 = [self preferredFontDescriptorWithTextStyle:UIFontTextStyleSubheadline compatibleWithTraitCollection:v17];
    id v19 = [v18 fontDescriptorWithSymbolicTraits:32770];

    uint64_t v20 = self;
    uint64_t v127 = v14;
    if (v19)
    {
      id v21 = [v20 fontWithDescriptor:v19 size:0.0];
    }
    else
    {
      id v21 = [v20 preferredFontForTextStyle:UIFontTextStyleSubheadline compatibleWithTraitCollection:v17];
    }
    id v22 = [self configurationWithFont:v21 scale:1];
    NSString v23 = String._bridgeToObjectiveC()();
    id v24 = [self systemImageNamed:v23 withConfiguration:v22];

    if (v24)
    {
      id v25 = [v24 imageWithRenderingMode:2];

      uint64_t v26 = v128;
      if (v25)
      {
        specialized Environment.wrappedValue.getter((uint64_t)v10);
        uint64_t v27 = v130;
        (*(void (**)(char *, void, uint64_t))(v130 + 104))(v8, enum case for LayoutDirection.rightToLeft(_:), v6);
        char v28 = static LayoutDirection.== infix(_:_:)();
        int v29 = *(void (**)(char *, uint64_t))(v27 + 8);
        v29(v8, v6);
        v29(v10, v6);
        id v125 = v25;
        if (v28)
        {
          uint64_t v30 = self;
          uint64_t v31 = (void *)(a1 + *(int *)(v13 + 24));
          NSString v32 = String._bridgeToObjectiveC()();
          uint64_t v33 = (char *)objc_msgSend(v30, "dominantLanguageForString:", v32, v125);

          if (v33)
          {
            static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v34 = v129;
            Locale.Language.init(identifier:)();
            uint64_t v35 = Locale.Language.characterDirection.getter();
            (*(void (**)(char *, uint64_t))(v26 + 8))(v34, v126);
            if (v35 == 1)
            {
              id v36 = v25;
              Image.init(uiImage:)();
              uint64_t v37 = Text.init(_:)();
              uint64_t v39 = v38;
              uint64_t v129 = v33;
              char v41 = v40 & 1;
              LODWORD(v135) = static HierarchicalShapeStyle.secondary.getter();
              uint64_t v42 = Text.foregroundStyle<A>(_:)();
              uint64_t v44 = v43;
              char v46 = v45 & 1;
              outlined consume of Text.Storage(v37, v39, v41);
              swift_bridgeObjectRelease();
              String.nonBreakingSpace.unsafeMutableAddressor();
              swift_bridgeObjectRetain();
              uint64_t v47 = static Text.+ infix(_:_:)();
              uint64_t v128 = v48;
              char v50 = v49;
              uint64_t v130 = v51;
              swift_bridgeObjectRelease();
              LOBYTE(v37) = v50 & 1;
              outlined consume of Text.Storage(v42, v44, v46);
              swift_bridgeObjectRelease();
              uint64_t v52 = v31[1];
              *(void *)&long long v135 = *v31;
              *((void *)&v135 + 1) = v52;
              _sS2SSysWl_1();
              swift_bridgeObjectRetain();
              uint64_t v53 = Text.init<A>(_:)();
              uint64_t v55 = v54;
              LOBYTE(v44) = v56 & 1;
              LODWORD(v135) = static HierarchicalShapeStyle.primary.getter();
              uint64_t v57 = Text.foregroundStyle<A>(_:)();
              uint64_t v59 = v58;
              LODWORD(v127) = v60 & 1;
              outlined consume of Text.Storage(v53, v55, v44);
              swift_bridgeObjectRelease();
              uint64_t v61 = v47;
              uint64_t v62 = v128;
              uint64_t v63 = static Text.+ infix(_:_:)();
              uint64_t v65 = v64;
              uint64_t v67 = v66;
              uint64_t v69 = v68 & 1;
              outlined consume of Text.Storage(v57, v59, v127);
              swift_bridgeObjectRelease();
              outlined consume of Text.Storage(v61, v62, v37);
              swift_bridgeObjectRelease();
              *(void *)&long long v132 = v63;
              *((void *)&v132 + 1) = v65;
              *(void *)&long long v133 = v69;
              *((void *)&v133 + 1) = v67;
              LOBYTE(v134) = 0;
              outlined copy of Text.Storage(v63, v65, v69);
              swift_bridgeObjectRetain();
              outlined copy of Text.Storage(v63, v65, v69);
              swift_bridgeObjectRetain();
              _ConditionalContent<>.init(storage:)();

              outlined consume of Text.Storage(v63, v65, v69);
              swift_bridgeObjectRelease();
              outlined consume of Text.Storage(v63, v65, v69);
              swift_bridgeObjectRelease();
LABEL_15:
              long long v118 = v135;
              char v119 = v136;
              long long v132 = v135;
              long long v133 = v136;
              __int16 v134 = v137;
              outlined copy of _ConditionalContent<Text, Text>.Storage(v135, *((uint64_t *)&v135 + 1), v136);
              __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<Text, Text>);
              lazy protocol witness table accessor for type _ConditionalContent<Text, Text> and conformance <> _ConditionalContent<A, B>();
              _ConditionalContent<>.init(storage:)();

              outlined consume of _ConditionalContent<Text, Text>.Storage(v118, *((uint64_t *)&v118 + 1), v119);
              goto LABEL_16;
            }
          }
        }
        uint64_t v84 = (void *)(a1 + *(int *)(v13 + 24));
        uint64_t v85 = v84[1];
        *(void *)&long long v135 = *v84;
        *((void *)&v135 + 1) = v85;
        _sS2SSysWl_1();
        swift_bridgeObjectRetain();
        long long v86 = v25;
        uint64_t v87 = Text.init<A>(_:)();
        uint64_t v89 = v88;
        char v91 = v90 & 1;
        LODWORD(v135) = static HierarchicalShapeStyle.primary.getter();
        uint64_t v92 = Text.foregroundStyle<A>(_:)();
        uint64_t v94 = v93;
        char v96 = v95 & 1;
        outlined consume of Text.Storage(v87, v89, v91);
        swift_bridgeObjectRelease();
        String.nonBreakingSpace.unsafeMutableAddressor();
        swift_bridgeObjectRetain();
        uint64_t v97 = static Text.+ infix(_:_:)();
        uint64_t v129 = v98;
        LOBYTE(v85) = v99;
        uint64_t v130 = v100;
        swift_bridgeObjectRelease();
        char v101 = v85 & 1;
        outlined consume of Text.Storage(v92, v94, v96);
        swift_bridgeObjectRelease();
        id v102 = v86;
        Image.init(uiImage:)();
        uint64_t v103 = Text.init(_:)();
        uint64_t v105 = v104;
        char v107 = v106 & 1;
        LODWORD(v135) = static HierarchicalShapeStyle.secondary.getter();
        uint64_t v108 = Text.foregroundStyle<A>(_:)();
        uint64_t v110 = v109;
        LOBYTE(v89) = v111 & 1;
        outlined consume of Text.Storage(v103, v105, v107);
        swift_bridgeObjectRelease();
        uint64_t v112 = (uint64_t)v129;
        uint64_t v128 = static Text.+ infix(_:_:)();
        uint64_t v127 = v113;
        uint64_t v115 = v114;
        uint64_t v117 = v116 & 1;
        outlined consume of Text.Storage(v108, v110, v89);
        swift_bridgeObjectRelease();
        outlined consume of Text.Storage(v97, v112, v101);
        swift_bridgeObjectRelease();
        *(void *)&long long v132 = v128;
        *((void *)&v132 + 1) = v127;
        *(void *)&long long v133 = v117;
        *((void *)&v133 + 1) = v115;
        LOBYTE(v134) = 1;
        _ConditionalContent<>.init(storage:)();
        goto LABEL_15;
      }
    }
    else
    {
    }
  }
  uint64_t v70 = (void *)(a1 + *(int *)(v13 + 24));
  uint64_t v71 = v70[1];
  *(void *)&long long v135 = *v70;
  *((void *)&v135 + 1) = v71;
  _sS2SSysWl_1();
  swift_bridgeObjectRetain();
  uint64_t v72 = Text.init<A>(_:)();
  uint64_t v74 = v73;
  char v76 = v75 & 1;
  LODWORD(v135) = static HierarchicalShapeStyle.primary.getter();
  uint64_t v77 = Text.foregroundStyle<A>(_:)();
  uint64_t v79 = v78;
  uint64_t v81 = v80;
  uint64_t v83 = v82 & 1;
  outlined consume of Text.Storage(v72, v74, v76);
  swift_bridgeObjectRelease();
  *(void *)&long long v132 = v77;
  *((void *)&v132 + 1) = v79;
  *(void *)&long long v133 = v83;
  *((void *)&v133 + 1) = v81;
  __int16 v134 = 256;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<Text, Text>);
  lazy protocol witness table accessor for type _ConditionalContent<Text, Text> and conformance <> _ConditionalContent<A, B>();
  _ConditionalContent<>.init(storage:)();
LABEL_16:
  double result = *(double *)&v135;
  long long v121 = v136;
  unsigned __int8 v122 = v137;
  char v123 = v138;
  uint64_t v124 = v131;
  *uint64_t v131 = v135;
  v124[1] = v121;
  *((unsigned char *)v124 + 32) = v122;
  *((unsigned char *)v124 + 33) = v123;
  return result;
}

uint64_t NoticeDismissal.presented.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&_s7SwiftUI7BindingVySbGMD_0);
  Binding.wrappedValue.getter();
  return v1;
}

uint64_t NoticeDismissal.presented.setter()
{
  return Binding.wrappedValue.setter();
}

void (*NoticeDismissal.presented.modify(void *a1, uint64_t a2, uint64_t a3, char a4))(uint64_t a1)
{
  uint64_t v8 = malloc(0x30uLL);
  *a1 = v8;
  v8[19] = a4;
  *((void *)v8 + 3) = a2;
  *((void *)v8 + 4) = a3;
  *(void *)uint64_t v8 = a2;
  *((void *)v8 + 1) = a3;
  v8[16] = a4;
  swift_retain();
  swift_retain();
  *((void *)v8 + 5) = __swift_instantiateConcreteTypeFromMangledName(&_s7SwiftUI7BindingVySbGMD_0);
  Binding.wrappedValue.getter();
  return NoticeDismissal.presented.modify;
}

void NoticeDismissal.presented.modify(uint64_t a1)
{
  unsigned __int8 v1 = *(void **)a1;
  char v2 = *(unsigned char *)(*(void *)a1 + 17);
  uint64_t v3 = *(void *)(*(void *)a1 + 32);
  char v4 = *(unsigned char *)(*(void *)a1 + 19);
  void *v1 = *(void *)(*(void *)a1 + 24);
  v1[1] = v3;
  *((unsigned char *)v1 + 16) = v4;
  *((unsigned char *)v1 + 18) = v2;
  Binding.wrappedValue.setter();
  swift_release();
  swift_release();

  free(v1);
}

uint64_t NoticeDismissal.$presented.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&_s7SwiftUI7BindingVySbGMD_0);
  Binding.projectedValue.getter();
  return v1;
}

void protocol witness for static EnvironmentKey.defaultValue.getter in conformance EnvironmentValues.NoticeDismissalContextKey(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 0;
}

void (*EnvironmentValues.noticeDismissal.modify(void *a1))(uint64_t **a1, char a2)
{
  uint64_t v3 = (char *)malloc(0x40uLL);
  *a1 = v3;
  *((void *)v3 + 6) = v1;
  *((void *)v3 + 7) = lazy protocol witness table accessor for type EnvironmentValues.NoticeDismissalContextKey and conformance EnvironmentValues.NoticeDismissalContextKey();
  EnvironmentValues.subscript.getter();
  char v4 = v3[40];
  *(_OWORD *)uint64_t v3 = *(_OWORD *)(v3 + 24);
  v3[16] = v4;
  return EnvironmentValues.noticeDismissal.modify;
}

void EnvironmentValues.noticeDismissal.modify(uint64_t **a1, char a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = **a1;
  uint64_t v5 = v3[1];
  v3[3] = v4;
  char v6 = *((unsigned char *)v3 + 16);
  v3[4] = v5;
  *((unsigned char *)v3 + 40) = v6;
  if (a2)
  {
    outlined copy of NoticeDismissal?(v4, v5);
    EnvironmentValues.subscript.setter();
    outlined consume of OrderedSet<A.Items.Element>?<A>(*v3, v3[1]);
  }
  else
  {
    EnvironmentValues.subscript.setter();
  }

  free(v3);
}

uint64_t sub_100409FB8()
{
  return EnvironmentValues.contentTransition.getter();
}

uint64_t key path setter for EnvironmentValues.contentTransition : EnvironmentValues, serialized(uint64_t a1)
{
  type metadata accessor for ContentTransition();
  __chkstk_darwin();
  (*(void (**)(char *, uint64_t))(v3 + 16))((char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return EnvironmentValues.contentTransition.setter();
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.onChange<A>(of:initial:_:)>>.0, _EnvironmentKeyWritingModifier<ContentTransition>>, _ScaleEffect>, _AnimationModifier<Notice>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.onChange<A>(of:initial:_:)>>.0, _EnvironmentKeyWritingModifier<ContentTransition>>, _ScaleEffect>, _AnimationModifier<Notice>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.onChange<A>(of:initial:_:)>>.0, _EnvironmentKeyWritingModifier<ContentTransition>>, _ScaleEffect>, _AnimationModifier<Notice>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.onChange<A>(of:initial:_:)>>.0, _EnvironmentKeyWritingModifier<ContentTransition>>, _ScaleEffect>, _AnimationModifier<Notice>>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<<<opaque return type of View.onChange<A>(of:initial:_:)>>.0, _EnvironmentKeyWritingModifier<ContentTransition>>, _ScaleEffect> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type _AnimationModifier<Notice> and conformance _AnimationModifier<A>, &demangling cache variable for type metadata for _AnimationModifier<Notice>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.onChange<A>(of:initial:_:)>>.0, _EnvironmentKeyWritingModifier<ContentTransition>>, _ScaleEffect>, _AnimationModifier<Notice>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<<<opaque return type of View.onChange<A>(of:initial:_:)>>.0, _EnvironmentKeyWritingModifier<ContentTransition>>, _ScaleEffect> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<<<opaque return type of View.onChange<A>(of:initial:_:)>>.0, _EnvironmentKeyWritingModifier<ContentTransition>>, _ScaleEffect> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<<<opaque return type of View.onChange<A>(of:initial:_:)>>.0, _EnvironmentKeyWritingModifier<ContentTransition>>, _ScaleEffect> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.onChange<A>(of:initial:_:)>>.0, _EnvironmentKeyWritingModifier<ContentTransition>>, _ScaleEffect>);
    lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.onChange<A>(of:initial:_:)>>.0, _EnvironmentKeyWritingModifier<ContentTransition>> and conformance <> ModifiedContent<A, B>();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<<<opaque return type of View.onChange<A>(of:initial:_:)>>.0, _EnvironmentKeyWritingModifier<ContentTransition>>, _ScaleEffect> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.onChange<A>(of:initial:_:)>>.0, _EnvironmentKeyWritingModifier<ContentTransition>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.onChange<A>(of:initial:_:)>>.0, _EnvironmentKeyWritingModifier<ContentTransition>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.onChange<A>(of:initial:_:)>>.0, _EnvironmentKeyWritingModifier<ContentTransition>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.onChange<A>(of:initial:_:)>>.0, _EnvironmentKeyWritingModifier<ContentTransition>>);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for <<opaque return type of View.gesture<A>(_:including:)>>.0);
    type metadata accessor for Notice(255);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<NoticeView.Content, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, CornerRadiusModifier>, _OpacityEffect>, _AnimationModifier<Bool>>);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for SequenceGesture<GestureStateGesture<DragGesture, Bool>, _EndedGesture<TapGesture>>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<NoticeView.Content, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, CornerRadiusModifier>, _OpacityEffect>, _AnimationModifier<Bool>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type SequenceGesture<GestureStateGesture<DragGesture, Bool>, _EndedGesture<TapGesture>> and conformance SequenceGesture<A, B>, &demangling cache variable for type metadata for SequenceGesture<GestureStateGesture<DragGesture, Bool>, _EndedGesture<TapGesture>>);
    swift_getOpaqueTypeConformance2();
    lazy protocol witness table accessor for type NoticeView.Content and conformance NoticeView.Content(&lazy protocol witness table cache variable for type Notice and conformance Notice, (void (*)(uint64_t))type metadata accessor for Notice);
    swift_getOpaqueTypeConformance2();
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<ContentTransition> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<ContentTransition>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.onChange<A>(of:initial:_:)>>.0, _EnvironmentKeyWritingModifier<ContentTransition>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t associated type witness table accessor for View.Body : View in NoticeView()
{
  return swift_getOpaqueTypeConformance2();
}

void *initializeBufferWithCopyOfBuffer for NoticeView(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    uint64_t v4 = (void *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = (int *)type metadata accessor for Notice(0);
    uint64_t v9 = v8[5];
    __dst = (void *)((char *)v4 + v9);
    uint64_t v10 = (void *)((char *)a2 + v9);
    uint64_t v11 = type metadata accessor for Notice.Thumbnail(0);
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&_s9MusicCore6NoticeV9ThumbnailOSgMD_0);
      memcpy(__dst, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v17 = type metadata accessor for Artwork();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(__dst, v10, v17);
        swift_storeEnumTagMultiPayload();
      }
      else if (EnumCaseMultiPayload)
      {
        memcpy(__dst, v10, *(void *)(v12 + 64));
      }
      else
      {
        void *__dst = *v10;
        swift_retain();
        swift_storeEnumTagMultiPayload();
      }
      (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
    }
    uint64_t v18 = v8[6];
    id v19 = (void *)((char *)v4 + v18);
    uint64_t v20 = (void *)((char *)a2 + v18);
    uint64_t v21 = v20[1];
    *id v19 = *v20;
    v19[1] = v21;
    uint64_t v22 = v8[7];
    NSString v23 = (void *)((char *)v4 + v22);
    id v24 = (void *)((char *)a2 + v22);
    uint64_t v25 = v24[1];
    *NSString v23 = *v24;
    v23[1] = v25;
    uint64_t v26 = v8[8];
    uint64_t v27 = (void *)((char *)v4 + v26);
    char v28 = (char *)a2 + v26;
    uint64_t v29 = *(void *)((char *)a2 + v26);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v29)
    {
      uint64_t v30 = *((void *)v28 + 1);
      *uint64_t v27 = v29;
      v27[1] = v30;
      swift_retain();
    }
    else
    {
      *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
    }
    uint64_t v31 = v8[9];
    NSString v32 = (char *)v4 + v31;
    uint64_t v33 = (char *)a2 + v31;
    *(void *)NSString v32 = *(void *)v33;
    v32[8] = v33[8];
    *((unsigned char *)v4 + v8[10]) = *((unsigned char *)a2 + v8[10]);
    uint64_t v34 = a3[5];
    uint64_t v35 = (char *)v4 + v34;
    id v36 = (char *)a2 + v34;
    uint64_t v37 = *(void *)v36;
    uint64_t v38 = *((void *)v36 + 1);
    char v39 = v36[17];
    unsigned __int8 v40 = v36[16];
    outlined copy of Environment<NoticeDismissal?>.Content(*(void *)v36, v38, v40, v39);
    *(void *)uint64_t v35 = v37;
    *((void *)v35 + 1) = v38;
    v35[16] = v40;
    v35[17] = v39;
    uint64_t v41 = a3[6];
    uint64_t v42 = a3[7];
    uint64_t v43 = (void *)((char *)v4 + v41);
    uint64_t v44 = (void *)((char *)a2 + v41);
    uint64_t v45 = v44[1];
    *uint64_t v43 = *v44;
    v43[1] = v45;
    char v46 = (char *)v4 + v42;
    uint64_t v47 = (char *)a2 + v42;
    char *v46 = *v47;
    uint64_t v48 = *((void *)v47 + 3);
    *(_OWORD *)(v46 + 8) = *(_OWORD *)(v47 + 8);
    *((void *)v46 + 3) = v48;
    uint64_t v49 = a3[8];
    char v50 = (char *)v4 + v49;
    uint64_t v51 = (char *)a2 + v49;
    *char v50 = *v51;
    *((void *)v50 + 1) = *((void *)v51 + 1);
    swift_retain();
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t destroy for NoticeView(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = type metadata accessor for Notice(0);
  uint64_t v5 = a1 + *(int *)(v4 + 20);
  uint64_t v6 = type metadata accessor for Notice.Thumbnail(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6))
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v9 = type metadata accessor for Artwork();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v5, v9);
    }
    else if (!EnumCaseMultiPayload)
    {
      swift_release();
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + *(int *)(v4 + 32))) {
    swift_release();
  }
  outlined consume of Environment<NoticeDismissal?>.Content(*(void *)(a1 + *(int *)(a2 + 20)), *(void *)(a1 + *(int *)(a2 + 20) + 8), *(unsigned __int8 *)(a1 + *(int *)(a2 + 20) + 16), *(unsigned char *)(a1 + *(int *)(a2 + 20) + 17));
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

void *initializeWithCopy for NoticeView(void *a1, void *a2, int *a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = (int *)type metadata accessor for Notice(0);
  uint64_t v7 = v6[5];
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  uint64_t v10 = type metadata accessor for Notice.Thumbnail(0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&_s9MusicCore6NoticeV9ThumbnailOSgMD_0);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v15 = type metadata accessor for Artwork();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(v8, v9, v15);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(v8, v9, *(void *)(v11 + 64));
    }
    else
    {
      *uint64_t v8 = *v9;
      swift_retain();
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v16 = v6[6];
  uint64_t v17 = (void *)((char *)a1 + v16);
  uint64_t v18 = (void *)((char *)a2 + v16);
  uint64_t v19 = v18[1];
  *uint64_t v17 = *v18;
  v17[1] = v19;
  uint64_t v20 = v6[7];
  uint64_t v21 = (void *)((char *)a1 + v20);
  uint64_t v22 = (void *)((char *)a2 + v20);
  uint64_t v23 = v22[1];
  *uint64_t v21 = *v22;
  v21[1] = v23;
  uint64_t v24 = v6[8];
  uint64_t v25 = (void *)((char *)a1 + v24);
  uint64_t v26 = (char *)a2 + v24;
  uint64_t v27 = *(void *)((char *)a2 + v24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v27)
  {
    uint64_t v28 = *((void *)v26 + 1);
    *uint64_t v25 = v27;
    v25[1] = v28;
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
  }
  uint64_t v29 = v6[9];
  uint64_t v30 = (char *)a1 + v29;
  uint64_t v31 = (char *)a2 + v29;
  *(void *)uint64_t v30 = *(void *)v31;
  v30[8] = v31[8];
  *((unsigned char *)a1 + v6[10]) = *((unsigned char *)a2 + v6[10]);
  uint64_t v32 = a3[5];
  uint64_t v33 = (char *)a1 + v32;
  uint64_t v34 = (char *)a2 + v32;
  uint64_t v35 = *(void *)v34;
  uint64_t v36 = *((void *)v34 + 1);
  char v37 = v34[17];
  unsigned __int8 v38 = v34[16];
  outlined copy of Environment<NoticeDismissal?>.Content(*(void *)v34, v36, v38, v37);
  *(void *)uint64_t v33 = v35;
  *((void *)v33 + 1) = v36;
  v33[16] = v38;
  v33[17] = v37;
  uint64_t v39 = a3[6];
  uint64_t v40 = a3[7];
  uint64_t v41 = (void *)((char *)a1 + v39);
  uint64_t v42 = (void *)((char *)a2 + v39);
  uint64_t v43 = v42[1];
  *uint64_t v41 = *v42;
  v41[1] = v43;
  uint64_t v44 = (char *)a1 + v40;
  uint64_t v45 = (char *)a2 + v40;
  *uint64_t v44 = *v45;
  uint64_t v46 = *((void *)v45 + 3);
  *(_OWORD *)(v44 + 8) = *(_OWORD *)(v45 + 8);
  *((void *)v44 + 3) = v46;
  uint64_t v47 = a3[8];
  uint64_t v48 = (char *)a1 + v47;
  uint64_t v49 = (char *)a2 + v47;
  *uint64_t v48 = *v49;
  *((void *)v48 + 1) = *((void *)v49 + 1);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for NoticeView(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = (int *)type metadata accessor for Notice(0);
  uint64_t v6 = v5[5];
  uint64_t v7 = (void *)((char *)a1 + v6);
  uint64_t v8 = (void *)((char *)a2 + v6);
  uint64_t v9 = type metadata accessor for Notice.Thumbnail(0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v15 = a3;
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v18 = type metadata accessor for Artwork();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 16))(v7, v8, v18);
        swift_storeEnumTagMultiPayload();
      }
      else if (EnumCaseMultiPayload)
      {
        memcpy(v7, v8, *(void *)(v10 + 64));
      }
      else
      {
        *uint64_t v7 = *v8;
        swift_retain();
        swift_storeEnumTagMultiPayload();
      }
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_16;
    }
LABEL_8:
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&_s9MusicCore6NoticeV9ThumbnailOSgMD_0);
    memcpy(v7, v8, *(void *)(*(void *)(v16 - 8) + 64));
    uint64_t v15 = a3;
    goto LABEL_16;
  }
  if (v13)
  {
    outlined destroy of NoticeView.Content((uint64_t)v7, type metadata accessor for Notice.Thumbnail);
    goto LABEL_8;
  }
  uint64_t v15 = a3;
  if (a1 != a2)
  {
    outlined destroy of NoticeView.Content((uint64_t)v7, type metadata accessor for Notice.Thumbnail);
    int v17 = swift_getEnumCaseMultiPayload();
    if (v17 == 1)
    {
      uint64_t v58 = type metadata accessor for Artwork();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v58 - 8) + 16))(v7, v8, v58);
      swift_storeEnumTagMultiPayload();
    }
    else if (v17)
    {
      memcpy(v7, v8, *(void *)(v10 + 64));
    }
    else
    {
      *uint64_t v7 = *v8;
      swift_retain();
      swift_storeEnumTagMultiPayload();
    }
  }
LABEL_16:
  uint64_t v19 = v5[6];
  uint64_t v20 = (void *)((char *)a1 + v19);
  uint64_t v21 = (void *)((char *)a2 + v19);
  *uint64_t v20 = *v21;
  v20[1] = v21[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v22 = v5[7];
  uint64_t v23 = (void *)((char *)a1 + v22);
  uint64_t v24 = (void *)((char *)a2 + v22);
  *uint64_t v23 = *v24;
  v23[1] = v24[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v25 = v5[8];
  uint64_t v26 = (void *)((char *)a1 + v25);
  uint64_t v27 = (char *)a2 + v25;
  uint64_t v28 = *(void *)((char *)a1 + v25);
  uint64_t v29 = *(void *)((char *)a2 + v25);
  if (!v28)
  {
    if (v29)
    {
      uint64_t v31 = *((void *)v27 + 1);
      void *v26 = v29;
      v26[1] = v31;
      swift_retain();
      goto LABEL_23;
    }
LABEL_22:
    *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
    goto LABEL_23;
  }
  if (!v29)
  {
    swift_release();
    goto LABEL_22;
  }
  uint64_t v30 = *((void *)v27 + 1);
  void *v26 = v29;
  v26[1] = v30;
  swift_retain();
  swift_release();
LABEL_23:
  uint64_t v32 = v5[9];
  uint64_t v33 = (char *)a1 + v32;
  uint64_t v34 = (char *)a2 + v32;
  uint64_t v35 = *(void *)v34;
  v33[8] = v34[8];
  *(void *)uint64_t v33 = v35;
  *((unsigned char *)a1 + v5[10]) = *((unsigned char *)a2 + v5[10]);
  uint64_t v36 = v15[5];
  char v37 = (char *)a1 + v36;
  unsigned __int8 v38 = (char *)a2 + v36;
  uint64_t v39 = *(void *)v38;
  uint64_t v40 = *((void *)v38 + 1);
  char v41 = v38[17];
  unsigned __int8 v42 = v38[16];
  outlined copy of Environment<NoticeDismissal?>.Content(*(void *)v38, v40, v42, v41);
  uint64_t v43 = *(void *)v37;
  uint64_t v44 = *((void *)v37 + 1);
  char v45 = v37[17];
  *(void *)char v37 = v39;
  *((void *)v37 + 1) = v40;
  uint64_t v46 = v37[16];
  v37[16] = v42;
  v37[17] = v41;
  outlined consume of Environment<NoticeDismissal?>.Content(v43, v44, v46, v45);
  uint64_t v47 = v15[6];
  uint64_t v48 = (void *)((char *)a1 + v47);
  uint64_t v49 = (void *)((char *)a2 + v47);
  *uint64_t v48 = *v49;
  v48[1] = v49[1];
  swift_retain();
  swift_release();
  uint64_t v50 = v15[7];
  uint64_t v51 = (char *)a1 + v50;
  uint64_t v52 = (char *)a2 + v50;
  char *v51 = *((unsigned char *)a2 + v50);
  *((void *)v51 + 1) = *(void *)((char *)a2 + v50 + 8);
  swift_retain();
  swift_release();
  uint64_t v53 = *((void *)v52 + 3);
  *((void *)v51 + 2) = *((void *)v52 + 2);
  *((void *)v51 + 3) = v53;
  swift_retain();
  swift_release();
  uint64_t v54 = v15[8];
  uint64_t v55 = (char *)a1 + v54;
  char v56 = (char *)a2 + v54;
  char *v55 = *v56;
  *((void *)v55 + 1) = *((void *)v56 + 1);
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *initializeWithTake for NoticeView(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = (int *)type metadata accessor for Notice(0);
  uint64_t v7 = v6[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for Notice.Thumbnail(0);
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&_s9MusicCore6NoticeV9ThumbnailOSgMD_0);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = type metadata accessor for Artwork();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v8, v9, v13);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(void *)(v11 + 64));
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  *(_OWORD *)((char *)a1 + v6[6]) = *(_OWORD *)((char *)a2 + v6[6]);
  *(_OWORD *)((char *)a1 + v6[7]) = *(_OWORD *)((char *)a2 + v6[7]);
  uint64_t v14 = v6[8];
  uint64_t v15 = (void *)((char *)a1 + v14);
  uint64_t v16 = (uint64_t *)((char *)a2 + v14);
  uint64_t v17 = *v16;
  if (*v16)
  {
    uint64_t v18 = v16[1];
    *uint64_t v15 = v17;
    v15[1] = v18;
  }
  else
  {
    *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
  }
  uint64_t v19 = v6[9];
  uint64_t v20 = (char *)a1 + v19;
  uint64_t v21 = (char *)a2 + v19;
  *(void *)uint64_t v20 = *(void *)v21;
  char v20[8] = v21[8];
  *((unsigned char *)a1 + v6[10]) = *((unsigned char *)a2 + v6[10]);
  uint64_t v22 = a3[5];
  uint64_t v23 = a3[6];
  uint64_t v24 = (char *)a1 + v22;
  uint64_t v25 = (char *)a2 + v22;
  *((_WORD *)v24 + 8) = *((_WORD *)v25 + 8);
  *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
  *(_OWORD *)((char *)a1 + v23) = *(_OWORD *)((char *)a2 + v23);
  uint64_t v26 = a3[7];
  uint64_t v27 = a3[8];
  uint64_t v28 = (_OWORD *)((char *)a1 + v26);
  uint64_t v29 = (_OWORD *)((char *)a2 + v26);
  long long v30 = v29[1];
  *uint64_t v28 = *v29;
  v28[1] = v30;
  *(_OWORD *)((char *)a1 + v27) = *(_OWORD *)((char *)a2 + v27);
  return a1;
}

void *assignWithTake for NoticeView(void *a1, void *a2, int *a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = (int *)type metadata accessor for Notice(0);
  uint64_t v7 = v6[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for Notice.Thumbnail(0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      if (a1 == a2) {
        goto LABEL_14;
      }
      outlined destroy of NoticeView.Content((uint64_t)v8, type metadata accessor for Notice.Thumbnail);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v17 = type metadata accessor for Artwork();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v8, v9, v17);
        swift_storeEnumTagMultiPayload();
        goto LABEL_14;
      }
      size_t v16 = *(void *)(v11 + 64);
LABEL_8:
      memcpy(v8, v9, v16);
      goto LABEL_14;
    }
    outlined destroy of NoticeView.Content((uint64_t)v8, type metadata accessor for Notice.Thumbnail);
LABEL_7:
    size_t v16 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&_s9MusicCore6NoticeV9ThumbnailOSgMD_0)
                                - 8)
                    + 64);
    goto LABEL_8;
  }
  if (v14) {
    goto LABEL_7;
  }
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = type metadata accessor for Artwork();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v8, v9, v15);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v8, v9, *(void *)(v11 + 64));
  }
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_14:
  uint64_t v18 = v6[6];
  uint64_t v19 = (void *)((char *)a1 + v18);
  uint64_t v20 = (void *)((char *)a2 + v18);
  uint64_t v22 = *v20;
  uint64_t v21 = v20[1];
  *uint64_t v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease();
  uint64_t v23 = v6[7];
  uint64_t v24 = (void *)((char *)a1 + v23);
  uint64_t v25 = (void *)((char *)a2 + v23);
  uint64_t v27 = *v25;
  uint64_t v26 = v25[1];
  *uint64_t v24 = v27;
  v24[1] = v26;
  swift_bridgeObjectRelease();
  uint64_t v28 = v6[8];
  uint64_t v29 = (void *)((char *)a1 + v28);
  long long v30 = (char *)a2 + v28;
  uint64_t v31 = *(void *)((char *)a1 + v28);
  uint64_t v32 = *(void *)((char *)a2 + v28);
  if (!v31)
  {
    if (v32)
    {
      uint64_t v34 = *((void *)v30 + 1);
      *uint64_t v29 = v32;
      v29[1] = v34;
      goto LABEL_21;
    }
LABEL_20:
    *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
    goto LABEL_21;
  }
  if (!v32)
  {
    swift_release();
    goto LABEL_20;
  }
  uint64_t v33 = *((void *)v30 + 1);
  *uint64_t v29 = v32;
  v29[1] = v33;
  swift_release();
LABEL_21:
  uint64_t v35 = v6[9];
  uint64_t v36 = (char *)a1 + v35;
  char v37 = (char *)a2 + v35;
  *(void *)uint64_t v36 = *(void *)v37;
  v36[8] = v37[8];
  *((unsigned char *)a1 + v6[10]) = *((unsigned char *)a2 + v6[10]);
  uint64_t v38 = a3[5];
  uint64_t v39 = (char *)a1 + v38;
  uint64_t v40 = (char *)a2 + v38;
  char v41 = v40[16];
  char v42 = v40[17];
  uint64_t v43 = *(void *)v39;
  uint64_t v44 = *((void *)v39 + 1);
  char v45 = v39[17];
  *(_OWORD *)uint64_t v39 = *(_OWORD *)v40;
  uint64_t v46 = v39[16];
  v39[16] = v41;
  v39[17] = v42;
  outlined consume of Environment<NoticeDismissal?>.Content(v43, v44, v46, v45);
  uint64_t v47 = a3[6];
  uint64_t v48 = (void *)((char *)a1 + v47);
  uint64_t v49 = (void *)((char *)a2 + v47);
  *uint64_t v48 = *v49;
  v48[1] = v49[1];
  swift_release();
  uint64_t v50 = a3[7];
  uint64_t v51 = (char *)a1 + v50;
  uint64_t v52 = (char *)a2 + v50;
  char *v51 = *((unsigned char *)a2 + v50);
  *((void *)v51 + 1) = *(void *)((char *)a2 + v50 + 8);
  swift_release();
  *((_OWORD *)v51 + 1) = *((_OWORD *)v52 + 1);
  swift_release();
  uint64_t v53 = a3[8];
  uint64_t v54 = (char *)a1 + v53;
  uint64_t v55 = (char *)a2 + v53;
  *uint64_t v54 = *v55;
  *((void *)v54 + 1) = *((void *)v55 + 1);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for NoticeView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10040B5FC);
}

uint64_t sub_10040B5FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Notice(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 28) + 16);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for NoticeView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10040B6D4);
}

uint64_t sub_10040B6D4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for Notice(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 28) + 16) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata completion function for NoticeView()
{
  uint64_t result = type metadata accessor for Notice(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t destroy for NoticeDismissal()
{
  swift_release();

  return swift_release();
}

uint64_t initializeBufferWithCopyOfBuffer for NoticeDismissal(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for NoticeDismissal(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for NoticeDismissal(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for NoticeDismissal(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 17)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for NoticeDismissal(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 17) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NoticeDismissal()
{
  return &type metadata for NoticeDismissal;
}

uint64_t sub_10040BA08()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.onChange<A>(of:initial:_:)>>.0, _EnvironmentKeyWritingModifier<ContentTransition>>, _ScaleEffect>, _AnimationModifier<Notice>>);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ClosedRange<DynamicTypeSize>);
  lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.onChange<A>(of:initial:_:)>>.0, _EnvironmentKeyWritingModifier<ContentTransition>>, _ScaleEffect>, _AnimationModifier<Notice>> and conformance <> ModifiedContent<A, B>();
  lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type ClosedRange<DynamicTypeSize> and conformance ClosedRange<A>, &demangling cache variable for type metadata for ClosedRange<DynamicTypeSize>);
  return swift_getOpaqueTypeConformance2();
}

void *initializeBufferWithCopyOfBuffer for NoticeView.Content(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    void *v4 = *a2;
    uint64_t v4 = (void *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    uint64_t v7 = (int *)type metadata accessor for Notice(0);
    uint64_t v8 = v7[5];
    uint64_t v9 = (char *)v4 + v8;
    unint64_t v10 = (void *)((char *)a2 + v8);
    uint64_t v11 = type metadata accessor for Notice.Thumbnail(0);
    uint64_t v12 = *(void *)(v11 - 8);
    int v13 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&_s9MusicCore6NoticeV9ThumbnailOSgMD_0);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
      uint64_t v15 = a3;
    }
    else
    {
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v19 = type metadata accessor for Artwork();
        uint64_t v18 = v9;
        (*(void (**)(char *, void *, uint64_t))(*(void *)(v19 - 8) + 16))(v9, v10, v19);
        swift_storeEnumTagMultiPayload();
        uint64_t v15 = a3;
      }
      else
      {
        uint64_t v18 = v9;
        uint64_t v15 = a3;
        if (EnumCaseMultiPayload)
        {
          memcpy(v18, v10, *(void *)(v12 + 64));
        }
        else
        {
          *(void *)uint64_t v18 = *v10;
          swift_retain();
          swift_storeEnumTagMultiPayload();
        }
      }
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v18, 0, 1, v11);
    }
    uint64_t v20 = v7[6];
    uint64_t v21 = (void *)((char *)v4 + v20);
    uint64_t v22 = (void *)((char *)a2 + v20);
    uint64_t v23 = v22[1];
    *uint64_t v21 = *v22;
    v21[1] = v23;
    uint64_t v24 = v7[7];
    uint64_t v25 = (void *)((char *)v4 + v24);
    uint64_t v26 = (void *)((char *)a2 + v24);
    uint64_t v27 = v26[1];
    *uint64_t v25 = *v26;
    v25[1] = v27;
    uint64_t v28 = v7[8];
    uint64_t v29 = (void *)((char *)v4 + v28);
    long long v30 = (char *)a2 + v28;
    uint64_t v31 = *(void *)((char *)a2 + v28);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v31)
    {
      uint64_t v32 = *((void *)v30 + 1);
      *uint64_t v29 = v31;
      v29[1] = v32;
      swift_retain();
    }
    else
    {
      *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
    }
    uint64_t v33 = v7[9];
    uint64_t v34 = (char *)v4 + v33;
    uint64_t v35 = (char *)a2 + v33;
    *(void *)uint64_t v34 = *(void *)v35;
    v34[8] = v35[8];
    *((unsigned char *)v4 + v7[10]) = *((unsigned char *)a2 + v7[10]);
    uint64_t v36 = v15[5];
    char v37 = (char *)v4 + v36;
    uint64_t v38 = (char *)a2 + v36;
    uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScaledMetric<Double>);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
    uint64_t v40 = v15[6];
    char v41 = (char *)v4 + v40;
    char v42 = (char *)a2 + v40;
    uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScaledMetric<CGFloat>);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v41, v42, v43);
    uint64_t v44 = v15[7];
    char v45 = (void *)((char *)v4 + v44);
    uint64_t v46 = (void *)((char *)a2 + v44);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v47 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v47 - 8) + 16))(v45, v46, v47);
    }
    else
    {
      *char v45 = *v46;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v48 = v15[8];
    uint64_t v49 = (void *)((char *)v4 + v48);
    uint64_t v50 = (void *)((char *)a2 + v48);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<LayoutDirection>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v51 = type metadata accessor for LayoutDirection();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v51 - 8) + 16))(v49, v50, v51);
    }
    else
    {
      *uint64_t v49 = *v50;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v4;
}

uint64_t destroy for NoticeView.Content(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = type metadata accessor for Notice(0);
  uint64_t v5 = a1 + *(int *)(v4 + 20);
  uint64_t v6 = type metadata accessor for Notice.Thumbnail(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6))
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v18 = type metadata accessor for Artwork();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v5, v18);
    }
    else if (!EnumCaseMultiPayload)
    {
      swift_release();
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + *(int *)(v4 + 32))) {
    swift_release();
  }
  uint64_t v7 = a1 + a2[5];
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScaledMetric<Double>);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[6];
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScaledMetric<CGFloat>);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[7];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  }
  else
  {
    swift_release();
  }
  uint64_t v13 = a1 + a2[8];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<LayoutDirection>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v14 = type metadata accessor for LayoutDirection();
    uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8);
    return v15(v13, v14);
  }
  else
  {
    return swift_release();
  }
}

void *initializeWithCopy for NoticeView.Content(void *a1, void *a2, int *a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = (int *)type metadata accessor for Notice(0);
  uint64_t v7 = v6[5];
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  uint64_t v10 = type metadata accessor for Notice.Thumbnail(0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&_s9MusicCore6NoticeV9ThumbnailOSgMD_0);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
    uint64_t v14 = a3;
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v16 = type metadata accessor for Artwork();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(v8, v9, v16);
      swift_storeEnumTagMultiPayload();
      uint64_t v14 = a3;
    }
    else
    {
      uint64_t v14 = a3;
      if (EnumCaseMultiPayload)
      {
        memcpy(v8, v9, *(void *)(v11 + 64));
      }
      else
      {
        *uint64_t v8 = *v9;
        swift_retain();
        swift_storeEnumTagMultiPayload();
      }
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v17 = v6[6];
  uint64_t v18 = (void *)((char *)a1 + v17);
  uint64_t v19 = (void *)((char *)a2 + v17);
  uint64_t v20 = v19[1];
  *uint64_t v18 = *v19;
  v18[1] = v20;
  uint64_t v21 = v6[7];
  uint64_t v22 = (void *)((char *)a1 + v21);
  uint64_t v23 = (void *)((char *)a2 + v21);
  uint64_t v24 = v23[1];
  *uint64_t v22 = *v23;
  v22[1] = v24;
  uint64_t v25 = v6[8];
  uint64_t v26 = (void *)((char *)a1 + v25);
  uint64_t v27 = (char *)a2 + v25;
  uint64_t v28 = *(void *)((char *)a2 + v25);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v28)
  {
    uint64_t v29 = *((void *)v27 + 1);
    void *v26 = v28;
    v26[1] = v29;
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
  }
  uint64_t v30 = v6[9];
  uint64_t v31 = (char *)a1 + v30;
  uint64_t v32 = (char *)a2 + v30;
  *(void *)uint64_t v31 = *(void *)v32;
  v31[8] = v32[8];
  *((unsigned char *)a1 + v6[10]) = *((unsigned char *)a2 + v6[10]);
  uint64_t v33 = v14[5];
  uint64_t v34 = (char *)a1 + v33;
  uint64_t v35 = (char *)a2 + v33;
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScaledMetric<Double>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16))(v34, v35, v36);
  uint64_t v37 = v14[6];
  uint64_t v38 = (char *)a1 + v37;
  uint64_t v39 = (char *)a2 + v37;
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScaledMetric<CGFloat>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 16))(v38, v39, v40);
  uint64_t v41 = v14[7];
  char v42 = (void *)((char *)a1 + v41);
  uint64_t v43 = (void *)((char *)a2 + v41);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v44 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v44 - 8) + 16))(v42, v43, v44);
  }
  else
  {
    *char v42 = *v43;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v45 = v14[8];
  uint64_t v46 = (void *)((char *)a1 + v45);
  uint64_t v47 = (void *)((char *)a2 + v45);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<LayoutDirection>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v48 = type metadata accessor for LayoutDirection();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v48 - 8) + 16))(v46, v47, v48);
  }
  else
  {
    void *v46 = *v47;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *assignWithCopy for NoticeView.Content(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = (int *)type metadata accessor for Notice(0);
  uint64_t v6 = v5[5];
  uint64_t v7 = (void *)((char *)a1 + v6);
  uint64_t v8 = (void *)((char *)a2 + v6);
  uint64_t v9 = type metadata accessor for Notice.Thumbnail(0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v15 = a3;
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v18 = type metadata accessor for Artwork();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 16))(v7, v8, v18);
        swift_storeEnumTagMultiPayload();
      }
      else if (EnumCaseMultiPayload)
      {
        memcpy(v7, v8, *(void *)(v10 + 64));
      }
      else
      {
        *uint64_t v7 = *v8;
        swift_retain();
        swift_storeEnumTagMultiPayload();
      }
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_16;
    }
LABEL_8:
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&_s9MusicCore6NoticeV9ThumbnailOSgMD_0);
    memcpy(v7, v8, *(void *)(*(void *)(v16 - 8) + 64));
    uint64_t v15 = a3;
    goto LABEL_16;
  }
  if (v13)
  {
    outlined destroy of NoticeView.Content((uint64_t)v7, type metadata accessor for Notice.Thumbnail);
    goto LABEL_8;
  }
  uint64_t v15 = a3;
  if (a1 != a2)
  {
    outlined destroy of NoticeView.Content((uint64_t)v7, type metadata accessor for Notice.Thumbnail);
    int v17 = swift_getEnumCaseMultiPayload();
    if (v17 == 1)
    {
      uint64_t v53 = type metadata accessor for Artwork();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v53 - 8) + 16))(v7, v8, v53);
      swift_storeEnumTagMultiPayload();
    }
    else if (v17)
    {
      memcpy(v7, v8, *(void *)(v10 + 64));
    }
    else
    {
      *uint64_t v7 = *v8;
      swift_retain();
      swift_storeEnumTagMultiPayload();
    }
  }
LABEL_16:
  uint64_t v19 = v5[6];
  uint64_t v20 = (void *)((char *)a1 + v19);
  uint64_t v21 = (void *)((char *)a2 + v19);
  *uint64_t v20 = *v21;
  v20[1] = v21[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v22 = v5[7];
  uint64_t v23 = (void *)((char *)a1 + v22);
  uint64_t v24 = (void *)((char *)a2 + v22);
  *uint64_t v23 = *v24;
  v23[1] = v24[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v25 = v5[8];
  uint64_t v26 = (void *)((char *)a1 + v25);
  uint64_t v27 = (char *)a2 + v25;
  uint64_t v28 = *(void *)((char *)a1 + v25);
  uint64_t v29 = *(void *)((char *)a2 + v25);
  if (v28)
  {
    if (v29)
    {
      uint64_t v30 = *((void *)v27 + 1);
      void *v26 = v29;
      v26[1] = v30;
      swift_retain();
      swift_release();
      goto LABEL_23;
    }
    swift_release();
  }
  else if (v29)
  {
    uint64_t v31 = *((void *)v27 + 1);
    void *v26 = v29;
    v26[1] = v31;
    swift_retain();
    goto LABEL_23;
  }
  *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
LABEL_23:
  uint64_t v32 = v5[9];
  uint64_t v33 = (char *)a1 + v32;
  uint64_t v34 = (char *)a2 + v32;
  uint64_t v35 = *(void *)v34;
  v33[8] = v34[8];
  *(void *)uint64_t v33 = v35;
  *((unsigned char *)a1 + v5[10]) = *((unsigned char *)a2 + v5[10]);
  uint64_t v36 = v15[5];
  uint64_t v37 = (char *)a1 + v36;
  uint64_t v38 = (char *)a2 + v36;
  uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScaledMetric<Double>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 24))(v37, v38, v39);
  uint64_t v40 = v15[6];
  uint64_t v41 = (char *)a1 + v40;
  char v42 = (char *)a2 + v40;
  uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScaledMetric<CGFloat>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 24))(v41, v42, v43);
  if (a1 != a2)
  {
    uint64_t v44 = v15[7];
    uint64_t v45 = (void *)((char *)a1 + v44);
    uint64_t v46 = (void *)((char *)a2 + v44);
    outlined destroy of TaskPriority?((uint64_t)a1 + v44, (uint64_t *)&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v47 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v47 - 8) + 16))(v45, v46, v47);
    }
    else
    {
      *uint64_t v45 = *v46;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v48 = v15[8];
    uint64_t v49 = (void *)((char *)a1 + v48);
    uint64_t v50 = (void *)((char *)a2 + v48);
    outlined destroy of TaskPriority?((uint64_t)a1 + v48, &demangling cache variable for type metadata for Environment<LayoutDirection>.Content);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<LayoutDirection>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v51 = type metadata accessor for LayoutDirection();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v51 - 8) + 16))(v49, v50, v51);
    }
    else
    {
      *uint64_t v49 = *v50;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *initializeWithTake for NoticeView.Content(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = (int *)type metadata accessor for Notice(0);
  uint64_t v7 = v6[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for Notice.Thumbnail(0);
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&_s9MusicCore6NoticeV9ThumbnailOSgMD_0);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = type metadata accessor for Artwork();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v8, v9, v13);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(void *)(v11 + 64));
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  *(_OWORD *)((char *)a1 + v6[6]) = *(_OWORD *)((char *)a2 + v6[6]);
  *(_OWORD *)((char *)a1 + v6[7]) = *(_OWORD *)((char *)a2 + v6[7]);
  uint64_t v14 = v6[8];
  uint64_t v15 = (void *)((char *)a1 + v14);
  uint64_t v16 = (uint64_t *)((char *)a2 + v14);
  uint64_t v17 = *v16;
  if (*v16)
  {
    uint64_t v18 = v16[1];
    *uint64_t v15 = v17;
    v15[1] = v18;
  }
  else
  {
    *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
  }
  uint64_t v19 = v6[9];
  uint64_t v20 = (char *)a1 + v19;
  uint64_t v21 = (char *)a2 + v19;
  *(void *)uint64_t v20 = *(void *)v21;
  char v20[8] = v21[8];
  *((unsigned char *)a1 + v6[10]) = *((unsigned char *)a2 + v6[10]);
  uint64_t v22 = a3[5];
  uint64_t v23 = (char *)a1 + v22;
  uint64_t v24 = (char *)a2 + v22;
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScaledMetric<Double>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(v23, v24, v25);
  uint64_t v26 = a3[6];
  uint64_t v27 = (char *)a1 + v26;
  uint64_t v28 = (char *)a2 + v26;
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScaledMetric<CGFloat>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 32))(v27, v28, v29);
  uint64_t v30 = a3[7];
  uint64_t v31 = (char *)a1 + v30;
  uint64_t v32 = (char *)a2 + v30;
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v34 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 32))(v31, v32, v34);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
  }
  uint64_t v35 = a3[8];
  uint64_t v36 = (char *)a1 + v35;
  uint64_t v37 = (char *)a2 + v35;
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<LayoutDirection>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v39 = type metadata accessor for LayoutDirection();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 32))(v36, v37, v39);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v36, v37, *(void *)(*(void *)(v38 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for NoticeView.Content(void *a1, void *a2, int *a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = (int *)type metadata accessor for Notice(0);
  uint64_t v7 = v6[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for Notice.Thumbnail(0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      uint64_t v15 = a3;
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v16 = type metadata accessor for Artwork();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v8, v9, v16);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v8, v9, *(void *)(v11 + 64));
      }
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_13;
    }
LABEL_7:
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&_s9MusicCore6NoticeV9ThumbnailOSgMD_0);
    memcpy(v8, v9, *(void *)(*(void *)(v17 - 8) + 64));
    uint64_t v15 = a3;
    goto LABEL_13;
  }
  if (v14)
  {
    outlined destroy of NoticeView.Content((uint64_t)v8, type metadata accessor for Notice.Thumbnail);
    goto LABEL_7;
  }
  uint64_t v15 = a3;
  if (a1 != a2)
  {
    outlined destroy of NoticeView.Content((uint64_t)v8, type metadata accessor for Notice.Thumbnail);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v18 = type metadata accessor for Artwork();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v8, v9, v18);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(void *)(v11 + 64));
    }
  }
LABEL_13:
  uint64_t v19 = v6[6];
  uint64_t v20 = (void *)((char *)a1 + v19);
  uint64_t v21 = (void *)((char *)a2 + v19);
  uint64_t v23 = *v21;
  uint64_t v22 = v21[1];
  *uint64_t v20 = v23;
  v20[1] = v22;
  swift_bridgeObjectRelease();
  uint64_t v24 = v6[7];
  uint64_t v25 = (void *)((char *)a1 + v24);
  uint64_t v26 = (void *)((char *)a2 + v24);
  uint64_t v28 = *v26;
  uint64_t v27 = v26[1];
  *uint64_t v25 = v28;
  v25[1] = v27;
  swift_bridgeObjectRelease();
  uint64_t v29 = v6[8];
  uint64_t v30 = (void *)((char *)a1 + v29);
  uint64_t v31 = (char *)a2 + v29;
  uint64_t v32 = *(void *)((char *)a1 + v29);
  uint64_t v33 = *(void *)((char *)a2 + v29);
  if (v32)
  {
    if (v33)
    {
      uint64_t v34 = *((void *)v31 + 1);
      *uint64_t v30 = v33;
      v30[1] = v34;
      swift_release();
      goto LABEL_20;
    }
    swift_release();
  }
  else if (v33)
  {
    uint64_t v35 = *((void *)v31 + 1);
    *uint64_t v30 = v33;
    v30[1] = v35;
    goto LABEL_20;
  }
  *(_OWORD *)uint64_t v30 = *(_OWORD *)v31;
LABEL_20:
  uint64_t v36 = v6[9];
  uint64_t v37 = (char *)a1 + v36;
  uint64_t v38 = (char *)a2 + v36;
  *(void *)uint64_t v37 = *(void *)v38;
  v37[8] = v38[8];
  *((unsigned char *)a1 + v6[10]) = *((unsigned char *)a2 + v6[10]);
  uint64_t v39 = v15[5];
  uint64_t v40 = (char *)a1 + v39;
  uint64_t v41 = (char *)a2 + v39;
  uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScaledMetric<Double>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 40))(v40, v41, v42);
  uint64_t v43 = v15[6];
  uint64_t v44 = (char *)a1 + v43;
  uint64_t v45 = (char *)a2 + v43;
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScaledMetric<CGFloat>);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 40))(v44, v45, v46);
  if (a1 != a2)
  {
    uint64_t v47 = v15[7];
    uint64_t v48 = (char *)a1 + v47;
    uint64_t v49 = (char *)a2 + v47;
    outlined destroy of TaskPriority?((uint64_t)a1 + v47, (uint64_t *)&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
    uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v51 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 32))(v48, v49, v51);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v48, v49, *(void *)(*(void *)(v50 - 8) + 64));
    }
    uint64_t v52 = v15[8];
    uint64_t v53 = (char *)a1 + v52;
    uint64_t v54 = (char *)a2 + v52;
    outlined destroy of TaskPriority?((uint64_t)a1 + v52, &demangling cache variable for type metadata for Environment<LayoutDirection>.Content);
    uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<LayoutDirection>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v56 = type metadata accessor for LayoutDirection();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 32))(v53, v54, v56);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for NoticeView.Content(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10040D47C);
}

uint64_t sub_10040D47C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Notice(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_10:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScaledMetric<Double>);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_9:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_10;
  }
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScaledMetric<CGFloat>);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_9;
  }
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_9;
  }
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<LayoutDirection>);
  uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48);
  uint64_t v19 = v17;
  uint64_t v20 = a1 + a3[8];

  return v18(v20, a2, v19);
}

uint64_t storeEnumTagSinglePayload for NoticeView.Content(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10040D684);
}

uint64_t sub_10040D684(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = type metadata accessor for Notice(0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_10:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScaledMetric<Double>);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_9:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_10;
  }
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScaledMetric<CGFloat>);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_9;
  }
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_9;
  }
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<LayoutDirection>);
  uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
  uint64_t v21 = v19;
  uint64_t v22 = a1 + a4[8];

  return v20(v22, a2, a2, v21);
}

void type metadata completion function for NoticeView.Content()
{
  type metadata accessor for Notice(319);
  if (v0 <= 0x3F)
  {
    type metadata accessor for ScaledMetric<Double>(319, &lazy cache variable for type metadata for ScaledMetric<Double>, (void (*)(void))_sS2dSBsWl_0);
    if (v1 <= 0x3F)
    {
      type metadata accessor for ScaledMetric<Double>(319, (unint64_t *)&lazy cache variable for type metadata for ScaledMetric<CGFloat>, (void (*)(void))lazy protocol witness table accessor for type CGFloat and conformance CGFloat);
      if (v2 <= 0x3F)
      {
        type metadata accessor for Environment<DynamicTypeSize>.Content(319, &lazy cache variable for type metadata for Environment<DynamicTypeSize>.Content, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
        if (v3 <= 0x3F)
        {
          type metadata accessor for Environment<DynamicTypeSize>.Content(319, (unint64_t *)&lazy cache variable for type metadata for Environment<LayoutDirection>.Content, (void (*)(uint64_t))&type metadata accessor for LayoutDirection);
          if (v4 <= 0x3F) {
            swift_initStructMetadata();
          }
        }
      }
    }
  }
}

void type metadata accessor for ScaledMetric<Double>(uint64_t a1, unint64_t *a2, void (*a3)(void))
{
  if (!*a2)
  {
    a3();
    unint64_t v4 = type metadata accessor for ScaledMetric();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void type metadata accessor for Environment<DynamicTypeSize>.Content(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Environment.Content();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void *type metadata accessor for EnvironmentValues.NoticeDismissalContextKey()
{
  return &unk_100548718;
}

uint64_t associated type witness table accessor for View.Body : View in NoticeView.Content()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t key path getter for EnvironmentValues.lineLimit : EnvironmentValues, serialized@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = EnvironmentValues.lineLimit.getter();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t key path setter for EnvironmentValues.lineLimit : EnvironmentValues, serialized()
{
  return EnvironmentValues.lineLimit.setter();
}

uint64_t specialized NoticeView.Content.DynamicSizeSpecs.init(notice:typeSize:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, double *a3@<X8>)
{
  uint64_t v6 = type metadata accessor for DynamicTypeSize();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&_s9MusicCore6NoticeV9ThumbnailOSgMD_0);
  __chkstk_darwin();
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Notice(0);
  outlined init with copy of (String, Any)(a1 + *(int *)(v12 + 20), (uint64_t)v11, &_s9MusicCore6NoticeV9ThumbnailOSgMD_0);
  uint64_t v13 = type metadata accessor for Notice.Thumbnail(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v11, 1, v13) == 1)
  {
    outlined destroy of TaskPriority?((uint64_t)v11, &_s9MusicCore6NoticeV9ThumbnailOSgMD_0);
    BOOL v14 = 0;
  }
  else
  {
    BOOL v14 = swift_getEnumCaseMultiPayload() == 1;
    outlined destroy of NoticeView.Content((uint64_t)v11, type metadata accessor for Notice.Thumbnail);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  int v15 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if (v15 == enum case for DynamicTypeSize.xSmall(_:) || v15 == enum case for DynamicTypeSize.small(_:))
  {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a2, v6);
    uint64_t result = outlined destroy of NoticeView.Content(a1, type metadata accessor for Notice);
    double v18 = 4.0;
    double v19 = 12.0;
    if (v14) {
      double v20 = 12.0;
    }
    else {
      double v20 = 4.0;
    }
    double v21 = 0.0;
    if (v14) {
      double v21 = 6.0;
    }
  }
  else
  {
    if (v15 == enum case for DynamicTypeSize.medium(_:)
      || v15 == enum case for DynamicTypeSize.large(_:)
      || v15 == enum case for DynamicTypeSize.xLarge(_:))
    {
      uint64_t v24 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
LABEL_32:
      if (*(void *)(a1 + *(int *)(v12 + 32))) {
        double v19 = 19.0;
      }
      else {
        double v19 = 20.0;
      }
      v24(a2, v6);
      uint64_t result = outlined destroy of NoticeView.Content(a1, type metadata accessor for Notice);
      double v21 = 10.0;
      if (v14) {
        double v20 = 10.0;
      }
      else {
        double v20 = 12.0;
      }
      double v18 = 4.0;
      if (!v14) {
        double v21 = 4.0;
      }
      goto LABEL_43;
    }
    uint64_t v24 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
    if (v15 != enum case for DynamicTypeSize.xxLarge(_:)
      && v15 != enum case for DynamicTypeSize.xxxLarge(_:)
      && v15 != enum case for DynamicTypeSize.accessibility1(_:)
      && v15 != enum case for DynamicTypeSize.accessibility2(_:)
      && v15 != enum case for DynamicTypeSize.accessibility3(_:)
      && v15 != enum case for DynamicTypeSize.accessibility4(_:)
      && v15 != enum case for DynamicTypeSize.accessibility5(_:))
    {
      v24((uint64_t)v9, v6);
      goto LABEL_32;
    }
    v24(a2, v6);
    uint64_t result = outlined destroy of NoticeView.Content(a1, type metadata accessor for Notice);
    double v21 = 10.0;
    if (!v14) {
      double v21 = 6.0;
    }
    double v19 = 20.0;
    double v20 = 12.0;
    double v18 = 8.0;
  }
LABEL_43:
  *a3 = v18;
  a3[1] = v20;
  a3[2] = v18;
  a3[3] = v19;
  a3[4] = v21;
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<Group<_ConditionalContent<_ConditionalContent<Text, Text>, Text>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<Group<_ConditionalContent<_ConditionalContent<Text, Text>, Text>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<Group<_ConditionalContent<_ConditionalContent<Text, Text>, Text>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<Group<_ConditionalContent<_ConditionalContent<Text, Text>, Text>>, _EnvironmentKeyWritingModifier<Font?>>);
    lazy protocol witness table accessor for type Group<_ConditionalContent<_ConditionalContent<Text, Text>, Text>> and conformance <A> Group<A>();
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>((unint64_t *)&_s7SwiftUI30_EnvironmentKeyWritingModifierVyAA4FontVSgGACyxGAA04ViewF0AAWL_0, &_s7SwiftUI30_EnvironmentKeyWritingModifierVyAA4FontVSgGMD_0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<Group<_ConditionalContent<_ConditionalContent<Text, Text>, Text>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type Group<_ConditionalContent<_ConditionalContent<Text, Text>, Text>> and conformance <A> Group<A>()
{
  unint64_t result = lazy protocol witness table cache variable for type Group<_ConditionalContent<_ConditionalContent<Text, Text>, Text>> and conformance <A> Group<A>;
  if (!lazy protocol witness table cache variable for type Group<_ConditionalContent<_ConditionalContent<Text, Text>, Text>> and conformance <A> Group<A>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Group<_ConditionalContent<_ConditionalContent<Text, Text>, Text>>);
    lazy protocol witness table accessor for type _ConditionalContent<ModifiedContent<CircularProgressView, _FrameLayout>, EmptyView> and conformance <> _ConditionalContent<A, B>((unint64_t *)&lazy protocol witness table cache variable for type _ConditionalContent<_ConditionalContent<Text, Text>, Text> and conformance <> _ConditionalContent<A, B>, &demangling cache variable for type metadata for _ConditionalContent<_ConditionalContent<Text, Text>, Text>, (void (*)(void))lazy protocol witness table accessor for type _ConditionalContent<Text, Text> and conformance <> _ConditionalContent<A, B>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Group<_ConditionalContent<_ConditionalContent<Text, Text>, Text>> and conformance <A> Group<A>);
  }
  return result;
}

uint64_t lazy protocol witness table accessor for type _ConditionalContent<ModifiedContent<CircularProgressView, _FrameLayout>, EmptyView> and conformance <> _ConditionalContent<A, B>(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type _ConditionalContent<Text, Text> and conformance <> _ConditionalContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type _ConditionalContent<Text, Text> and conformance <> _ConditionalContent<A, B>;
  if (!lazy protocol witness table cache variable for type _ConditionalContent<Text, Text> and conformance <> _ConditionalContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _ConditionalContent<Text, Text>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type _ConditionalContent<Text, Text> and conformance <> _ConditionalContent<A, B>);
  }
  return result;
}

uint64_t outlined consume of _ConditionalContent<_ConditionalContent<Text, Text>, Text>.Storage(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  if (a6)
  {
    outlined consume of Text.Storage(a1, a2, a3 & 1);
    return swift_bridgeObjectRelease();
  }
  else
  {
    return outlined consume of _ConditionalContent<Text, Text>.Storage(a1, a2, a3);
  }
}

uint64_t sub_10040E278@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = EnvironmentValues.lineLimit.getter();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_10040E2AC()
{
  return EnvironmentValues.lineLimit.setter();
}

uint64_t outlined copy of ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>?(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    outlined copy of Text.Storage(result, a2, a3 & 1);
    swift_bridgeObjectRetain();
    return swift_retain();
  }
  return result;
}

uint64_t outlined consume of ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>?(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    outlined consume of Text.Storage(result, a2, a3 & 1);
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<CircularProgressView, _FrameLayout> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<CircularProgressView, _FrameLayout> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<CircularProgressView, _FrameLayout> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<CircularProgressView, _FrameLayout>);
    lazy protocol witness table accessor for type NoticeView.Content and conformance NoticeView.Content(&lazy protocol witness table cache variable for type CircularProgressView and conformance CircularProgressView, (void (*)(uint64_t))&type metadata accessor for CircularProgressView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<CircularProgressView, _FrameLayout> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type _ConditionalContent<Image, ModifiedContent<ModifiedContent<ArtworkImage, CornerRadiusModifier>, BorderViewModifier>> and conformance <> _ConditionalContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type _ConditionalContent<Image, ModifiedContent<ModifiedContent<ArtworkImage, CornerRadiusModifier>, BorderViewModifier>> and conformance <> _ConditionalContent<A, B>;
  if (!lazy protocol witness table cache variable for type _ConditionalContent<Image, ModifiedContent<ModifiedContent<ArtworkImage, CornerRadiusModifier>, BorderViewModifier>> and conformance <> _ConditionalContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _ConditionalContent<Image, ModifiedContent<ModifiedContent<ArtworkImage, CornerRadiusModifier>, BorderViewModifier>>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<NoticeView.Content, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, CornerRadiusModifier> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ArtworkImage, CornerRadiusModifier>, BorderViewModifier> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ArtworkImage, CornerRadiusModifier>, BorderViewModifier>, (void (*)(void))lazy protocol witness table accessor for type ModifiedContent<ArtworkImage, CornerRadiusModifier> and conformance <> ModifiedContent<A, B>, (void (*)(void))lazy protocol witness table accessor for type BorderViewModifier and conformance BorderViewModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type _ConditionalContent<Image, ModifiedContent<ModifiedContent<ArtworkImage, CornerRadiusModifier>, BorderViewModifier>> and conformance <> _ConditionalContent<A, B>);
  }
  return result;
}

uint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<NoticeView.Content, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, CornerRadiusModifier> and conformance <> ModifiedContent<A, B>(unint64_t *a1, uint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ArtworkImage, CornerRadiusModifier> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ArtworkImage, CornerRadiusModifier> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ArtworkImage, CornerRadiusModifier> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ArtworkImage, CornerRadiusModifier>);
    lazy protocol witness table accessor for type NoticeView.Content and conformance NoticeView.Content(&lazy protocol witness table cache variable for type ArtworkImage and conformance ArtworkImage, (void (*)(uint64_t))&type metadata accessor for ArtworkImage);
    lazy protocol witness table accessor for type CornerRadiusModifier and conformance CornerRadiusModifier();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ArtworkImage, CornerRadiusModifier> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t partial apply for closure #1 in closure #3 in NoticeView.body.getter()
{
  return closure #1 in closure #3 in NoticeView.body.getter();
}

unint64_t _sSo17OS_dispatch_queueCMa_1()
{
  unint64_t result = _sSo17OS_dispatch_queueCML_1;
  if (!_sSo17OS_dispatch_queueCML_1)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&_sSo17OS_dispatch_queueCML_1);
  }
  return result;
}

uint64_t partial apply for closure #2 in closure #3 in NoticeView.body.getter()
{
  return partial apply for closure #2 in NoticeView.body.getter((uint64_t (*)(uint64_t))closure #2 in closure #3 in NoticeView.body.getter);
}

uint64_t partial apply for closure #2 in NoticeView.body.getter(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for NoticeView(0) - 8);
  uint64_t v3 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  return a1(v3);
}

uint64_t partial apply for closure #1 in closure #2 in closure #3 in NoticeView.body.getter()
{
  return closure #1 in closure #3 in NoticeView.body.getter();
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Group<_ConditionalContent<_ConditionalContent<Image, ModifiedContent<ModifiedContent<ArtworkImage, CornerRadiusModifier>, BorderViewModifier>>, _ConditionalContent<ModifiedContent<CircularProgressView, _FrameLayout>, EmptyView>>>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _FlexFrameLayout>, _AspectRatioLayout>, VStack<TupleView<(ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>?, ModifiedContent<<<opaque return type of View.bodyHeadOutdent(_:)>>.0, _EnvironmentKeyWritingModifier<Int?>>)>>)>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Group<_ConditionalContent<_ConditionalContent<Image, ModifiedContent<ModifiedContent<ArtworkImage, CornerRadiusModifier>, BorderViewModifier>>, _ConditionalContent<ModifiedContent<CircularProgressView, _FrameLayout>, EmptyView>>>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _FlexFrameLayout>, _AspectRatioLayout>, VStack<TupleView<(ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>?, ModifiedContent<<<opaque return type of View.bodyHeadOutdent(_:)>>.0, _EnvironmentKeyWritingModifier<Int?>>)>>)>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Group<_ConditionalContent<_ConditionalContent<Image, ModifiedContent<ModifiedContent<ArtworkImage, CornerRadiusModifier>, BorderViewModifier>>, _ConditionalContent<ModifiedContent<CircularProgressView, _FrameLayout>, EmptyView>>>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _FlexFrameLayout>, _AspectRatioLayout>, VStack<TupleView<(ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>?, ModifiedContent<<<opaque return type of View.bodyHeadOutdent(_:)>>.0, _EnvironmentKeyWritingModifier<Int?>>)>>)>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Group<_ConditionalContent<_ConditionalContent<Image, ModifiedContent<ModifiedContent<ArtworkImage, CornerRadiusModifier>, BorderViewModifier>>, _ConditionalContent<ModifiedContent<CircularProgressView, _FrameLayout>, EmptyView>>>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _FlexFrameLayout>, _AspectRatioLayout>, VStack<TupleView<(ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>?, ModifiedContent<<<opaque return type of View.bodyHeadOutdent(_:)>>.0, _EnvironmentKeyWritingModifier<Int?>>)>>)>>, _PaddingLayout>);
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Group<_ConditionalContent<_ConditionalContent<Image, ModifiedContent<ModifiedContent<ArtworkImage, CornerRadiusModifier>, BorderViewModifier>>, _ConditionalContent<ModifiedContent<CircularProgressView, _FrameLayout>, EmptyView>>>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _FlexFrameLayout>, _AspectRatioLayout>, VStack<TupleView<(ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>?, ModifiedContent<<<opaque return type of View.bodyHeadOutdent(_:)>>.0, _EnvironmentKeyWritingModifier<Int?>>)>>)>> and conformance HStack<A>, &demangling cache variable for type metadata for HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Group<_ConditionalContent<_ConditionalContent<Image, ModifiedContent<ModifiedContent<ArtworkImage, CornerRadiusModifier>, BorderViewModifier>>, _ConditionalContent<ModifiedContent<CircularProgressView, _FrameLayout>, EmptyView>>>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _FlexFrameLayout>, _AspectRatioLayout>, VStack<TupleView<(ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>?, ModifiedContent<<<opaque return type of View.bodyHeadOutdent(_:)>>.0, _EnvironmentKeyWritingModifier<Int?>>)>>)>>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Group<_ConditionalContent<_ConditionalContent<Image, ModifiedContent<ModifiedContent<ArtworkImage, CornerRadiusModifier>, BorderViewModifier>>, _ConditionalContent<ModifiedContent<CircularProgressView, _FrameLayout>, EmptyView>>>, _EnvironmentKeyWritingModifier<Font?>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _FlexFrameLayout>, _AspectRatioLayout>, VStack<TupleView<(ModifiedContent<Text, _EnvironmentKeyWritingModifier<Int?>>?, ModifiedContent<<<opaque return type of View.bodyHeadOutdent(_:)>>.0, _EnvironmentKeyWritingModifier<Int?>>)>>)>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

id PassthroughView.hitTest(_:with:)(uint64_t a1, double a2, double a3)
{
  if (UIViewIgnoresTouchEvents()) {
    return 0;
  }
  v12.receiver = v3;
  v12.super_class = (Class)type metadata accessor for PassthroughView();
  id v7 = objc_msgSendSuper2(&v12, "hitTest:withEvent:", a1, a2, a3);
  if (v7)
  {
    _sSo6UIViewCMa_0();
    id v8 = v3;
    id v9 = v7;
    char v10 = static NSObject.== infix(_:_:)();

    if (v10)
    {

      return 0;
    }
  }
  return v7;
}

uint64_t type metadata accessor for PassthroughView()
{
  return self;
}

unint64_t _sSo6UIViewCMa_0()
{
  unint64_t result = _sSo6UIViewCML_0;
  if (!_sSo6UIViewCML_0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&_sSo6UIViewCML_0);
  }
  return result;
}

id PassthroughView.init(frame:)(double a1, double a2, double a3, double a4)
{
  v10.receiver = v4;
  v10.super_class = (Class)type metadata accessor for PassthroughView();
  return objc_msgSendSuper2(&v10, "initWithFrame:", a1, a2, a3, a4);
}

id PassthroughView.init(coder:)(void *a1)
{
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for PassthroughView();
  id v3 = objc_msgSendSuper2(&v5, "initWithCoder:", a1);

  return v3;
}

id PassthroughView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PassthroughView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

char *SymbolButton.__allocating_init(intent:)(int a1)
{
  type metadata accessor for SymbolButton.Configuration(0);
  __chkstk_darwin();
  id v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  SymbolButton.Configuration.init(intent:materialColor:)(a1, 2, (uint64_t)v3);
  id v4 = objc_allocWithZone((Class)type metadata accessor for SymbolButton(0));
  objc_super v5 = SymbolButton.init(configuration:handler:)((uint64_t)v3, 0, 0);
  uint64_t v6 = (uint64_t *)&v5[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_configurationProvider];
  swift_beginAccess();
  uint64_t v7 = *v6;
  uint64_t *v6 = (uint64_t)closure #1 in SymbolButton.init(intent:);
  v6[1] = 0;
  id v8 = v5;
  outlined consume of (@escaping @callee_guaranteed () -> ())?(v7);
  if ((_BYTE)a1)
  {
    if (a1 == 1) {
      id v9 = AccessibilityIdentifier.shuffleIntentButton.unsafeMutableAddressor();
    }
    else {
      id v9 = AccessibilityIdentifier.startSingingIntentButton.unsafeMutableAddressor();
    }
  }
  else
  {
    id v9 = AccessibilityIdentifier.playIntentButton.unsafeMutableAddressor();
  }
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  UIAccessibilityIdentification.musicAccessibilityIdentifier.setter(v11, v10);

  return v8;
}

uint64_t SymbolButton.Configuration.init(intent:materialColor:)@<X0>(int a1@<W0>, int a2@<W1>, uint64_t a3@<X8>)
{
  int v24 = a1;
  int v25 = a2;
  uint64_t v26 = type metadata accessor for UIViewConfigurationState();
  uint64_t v4 = *(void *)(v26 - 8);
  __chkstk_darwin();
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (int *)type metadata accessor for SymbolButton.Configuration(0);
  uint64_t v8 = __chkstk_darwin();
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)a3 = 0;
  *(void *)(a3 + 8) = 0;
  *(void *)(a3 + 16) = 0;
  *(void *)(a3 + 24) = UIFontTextStyleSubheadline;
  *(void *)(a3 + 32) = 0;
  *(unsigned char *)(a3 + 40) = 1;
  *(_OWORD *)(a3 + 48) = xmmword_1004A3B50;
  *(void *)(a3 + 64) = 0;
  *(void *)(a3 + 72) = 0;
  *(unsigned char *)(a3 + 80) = -1;
  *(void *)(a3 + 88) = 0;
  *(void *)(a3 + 96) = 0;
  *(void *)(a3 + 104) = 0x3FF0000000000000;
  *(void *)(a3 + 112) = 0;
  *(void *)(a3 + 120) = 0;
  *(void *)(a3 + 128) = 0;
  *(void *)(a3 + 136) = UIFontTextStyleSubheadline;
  *(UIFontWeight *)(a3 + 144) = UIFontWeightSemibold;
  *(void *)(a3 + 152) = 0;
  *(void *)(a3 + 160) = 0;
  *(void *)(a3 + 168) = 0x3FF0000000000000;
  *(void *)(a3 + 176) = 0;
  *(unsigned char *)(a3 + 184) = 0;
  *(_OWORD *)(a3 + 192) = xmmword_100493CF0;
  *(void *)(a3 + 208) = 0;
  *(void *)(a3 + 216) = 0;
  *(void *)(a3 + 224) = 1;
  *(_OWORD *)(a3 + 232) = 0u;
  *(_OWORD *)(a3 + 248) = 0u;
  *(_OWORD *)(a3 + 264) = 0u;
  *(_OWORD *)(a3 + 280) = 0u;
  uint64_t v11 = a3 + *(int *)(v8 + 36);
  uint64_t v12 = type metadata accessor for UIView.Corner();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  uint64_t v13 = a3 + v7[10];
  *(void *)(v13 + 48) = 0;
  *(_OWORD *)(v13 + 16) = 0u;
  *(_OWORD *)(v13 + 32) = 0u;
  *(_OWORD *)uint64_t v13 = 0u;
  BOOL v14 = (void *)(a3 + v7[11]);
  void *v14 = 0;
  v14[1] = 0;
  v14[2] = 1;
  *(void *)(a3 + v7[12]) = 0x4010000000000000;
  uint64_t v15 = v7[13];
  uint64_t v16 = one-time initialization token for platterMinimumSize;
  uint64_t v17 = UIFontTextStyleSubheadline;
  if (v16 != -1) {
    swift_once();
  }
  *(_OWORD *)(a3 + v15) = static SymbolButton.Configuration.platterMinimumSize;
  uint64_t v18 = a3 + v7[14];
  *(void *)uint64_t v18 = 0;
  *(void *)(v18 + 8) = 0;
  *(unsigned char *)(v18 + 16) = 1;
  double v19 = (_OWORD *)(a3 + v7[15]);
  long long v20 = *(_OWORD *)&NSDirectionalEdgeInsetsZero.bottom;
  *double v19 = *(_OWORD *)&NSDirectionalEdgeInsetsZero.top;
  v19[1] = v20;
  uint64_t v21 = a3 + v7[16];
  *(unsigned char *)uint64_t v21 = 1;
  *(void *)(v21 + 8) = 0;
  *(void *)(v21 + 16) = 0;
  *(unsigned char *)(v21 + 24) = 0;
  *(void *)(a3 + v7[17]) = 0x3FF0000000000000;
  *(void *)(a3 + v7[18]) = 0;
  *(unsigned char *)(a3 + v7[19]) = 2;
  SymbolButton.Configuration.init()((uint64_t)v10);
  closure #1 in SymbolButton.Configuration.init(intent:materialColor:)((uint64_t)v10, v24, v25);
  outlined destroy of SymbolButton.Configuration(a3);
  outlined init with take of SymbolButton.Configuration((uint64_t)v10, a3);
  id v22 = [self currentTraitCollection];
  UIViewConfigurationState.init(traitCollection:)();
  SymbolButton.Configuration.update(for:)((uint64_t)v6);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v26);
}

void closure #1 in SymbolButton.init(intent:)(uint64_t a1)
{
}

void SymbolButton.Configuration.update(for:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for UIViewConfigurationState();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (void *)UIViewConfigurationState.traitCollection.getter();
  id v9 = [v8 userInterfaceIdiom];

  if (v9 != (id)6)
  {
    if (*(void *)(v2 + 224) == 1 || (int v10 = *(unsigned __int8 *)(v2 + 248), v10 == 2))
    {
      char v11 = UIViewConfigurationState.isHighlighted.getter();
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
      if (v11)
      {
        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      }
      else
      {
        char v12 = UIViewConfigurationState.isSelected.getter();
        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
        if ((v12 & 1) == 0)
        {

          *(void *)(v2 + 112) = 0;
          *(void *)(v2 + 176) = 0;
          return;
        }
      }
      if (one-time initialization token for pressed != -1) {
        swift_once();
      }
      uint64_t v13 = static UIColor.MusicTint.pressed;
      BOOL v14 = *(void **)(v2 + 112);
      id v15 = (id)static UIColor.MusicTint.pressed;

      *(void *)(v2 + 112) = v13;
      uint64_t v16 = static UIColor.MusicTint.pressed;
      uint64_t v17 = *(void **)(v2 + 176);
      id v18 = (id)static UIColor.MusicTint.pressed;

      *(void *)(v2 + 176) = v16;
    }
    else
    {
      double v19 = self;
      long long v20 = v19;
      if (v10)
      {
        id v32 = [v19 blackColor];

        *(void *)(v2 + 112) = v32;
        id v33 = [v20 blackColor];

        *(void *)(v2 + 176) = v33;
        [objc_allocWithZone((Class)UIColor) initWithWhite:0.0 alpha:0.05];
        UIView.Border.init(thickness:color:)();
        uint64_t v35 = v34;
        uint64_t v37 = v36;
        uint64_t v39 = v38 & 1;

        *(void *)(v2 + 272) = v35;
        *(void *)(v2 + 280) = v39;
        *(void *)(v2 + 288) = v37;
        LOBYTE(v35) = UIViewConfigurationState.isHighlighted.getter();
        type metadata accessor for UIColor();
        id v40 = UIColor.init(decimalRed:decimalGreen:decimalBlue:alpha:)(19, 19, 20, 1.0);
        if (v35) {
          uint64_t v41 = 0x3FD5C28F5C28F5C3;
        }
        else {
          uint64_t v41 = 0x3FD3333333333333;
        }
        outlined consume of SymbolButton.Background?(*(void *)(v2 + 192), *(void **)(v2 + 200));
        *(void *)(v2 + 192) = v41;
        *(void *)(v2 + 200) = v40;
      }
      else
      {
        id v21 = [v19 whiteColor];

        *(void *)(v2 + 112) = v21;
        id v22 = [v20 whiteColor];

        *(void *)(v2 + 176) = v22;
        [objc_allocWithZone((Class)UIColor) initWithWhite:1.0 alpha:0.05];
        UIView.Border.init(thickness:color:)();
        uint64_t v24 = v23;
        uint64_t v26 = v25;
        uint64_t v28 = v27 & 1;

        *(void *)(v2 + 272) = v24;
        *(void *)(v2 + 280) = v28;
        *(void *)(v2 + 288) = v26;
        char v29 = UIViewConfigurationState.isHighlighted.getter();
        id v30 = [v20 whiteColor];
        if (v29) {
          uint64_t v31 = 0x3FD0A3D70A3D70A4;
        }
        else {
          uint64_t v31 = 0x3FCC28F5C28F5C29;
        }
        outlined consume of SymbolButton.Background?(*(void *)(v2 + 192), *(void **)(v2 + 200));
        *(void *)(v2 + 192) = v31;
        *(void *)(v2 + 200) = v30;
      }
      *(void *)(v2 + 208) = 0;
      *(void *)(v2 + 216) = 0;
    }
  }
}

uint64_t SymbolButton.Intent.accessibilityIdentifier.getter(char a1)
{
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v1 = AccessibilityIdentifier.shuffleIntentButton.unsafeMutableAddressor();
    }
    else {
      uint64_t v1 = AccessibilityIdentifier.startSingingIntentButton.unsafeMutableAddressor();
    }
  }
  else
  {
    uint64_t v1 = AccessibilityIdentifier.playIntentButton.unsafeMutableAddressor();
  }
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v2;
}

void SymbolButton.update(to:)(int a1)
{
  type metadata accessor for SymbolButton.Configuration(0);
  __chkstk_darwin();
  id v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v4 = SymbolButton.materialColor.getter();
  SymbolButton.Configuration.init(intent:materialColor:)(a1, v4, (uint64_t)v3);
  SymbolButton.setConfiguration(_:animation:updates:)((uint64_t)v3, 0, 0, 0, 1, (uint64_t)_swiftEmptyArrayStorage);
  outlined destroy of SymbolButton.Configuration((uint64_t)v3);
  if ((_BYTE)a1)
  {
    if (a1 == 1) {
      uint64_t v5 = AccessibilityIdentifier.shuffleIntentButton.unsafeMutableAddressor();
    }
    else {
      uint64_t v5 = AccessibilityIdentifier.startSingingIntentButton.unsafeMutableAddressor();
    }
  }
  else
  {
    uint64_t v5 = AccessibilityIdentifier.playIntentButton.unsafeMutableAddressor();
  }
  uint64_t v7 = *v5;
  uint64_t v6 = v5[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  type metadata accessor for SymbolButton(0);
  UIAccessibilityIdentification.musicAccessibilityIdentifier.setter(v7, v6);
}

uint64_t SymbolButton.materialColor.getter()
{
  type metadata accessor for SymbolButton.Configuration(0);
  __chkstk_darwin();
  uint64_t v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration;
  swift_beginAccess();
  outlined init with copy of SymbolButton.Configuration(v3, (uint64_t)v2);
  if (*((void *)v2 + 28) == 1)
  {
    outlined destroy of SymbolButton.Configuration((uint64_t)v2);
    return 2;
  }
  else
  {
    int v5 = v2[248];
    outlined destroy of SymbolButton.Configuration((uint64_t)v2);
    if (v5 == 2) {
      return 2;
    }
    else {
      return (v5 & 1) == 0;
    }
  }
}

void SymbolButton.materialColor.setter(char a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SymbolButton.Configuration?);
  __chkstk_darwin();
  int v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for SymbolButton.Configuration(0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v8 = (void **)((char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v9 = [v1 traitCollection];
  id v10 = [v9 userInterfaceIdiom];

  if (v10 != (id)6)
  {
    if (a1 == 2)
    {
      uint64_t v17 = 0;
      id v18 = 0;
      char v11 = 0;
      char v12 = 0;
      uint64_t v13 = 0;
      uint64_t v14 = 1;
    }
    else
    {
      uint64_t v19 = 0;
      long long v20 = 0;
      id v21 = 0;
      unsigned __int8 v22 = 2;
      uint64_t v23 = 0;
      uint64_t v24 = 0;
      closure #1 in SymbolButton.Material.init(materialColor:)((uint64_t)&v19, a1 & 1);
      uint64_t v14 = v19;
      uint64_t v17 = v21;
      id v18 = v20;
      char v11 = (void *)v22;
      char v12 = v23;
      uint64_t v13 = v24;
    }
    uint64_t v15 = (uint64_t)v1 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration;
    swift_beginAccess();
    outlined init with copy of SymbolButton.Configuration(v15, (uint64_t)v8);
    outlined consume of SymbolButton.Material?(v8[28], v8[29], v8[30]);
    uint64_t v16 = v18;
    v8[28] = (void *)v14;
    v8[29] = v16;
    v8[30] = v17;
    v8[31] = v11;
    v8[32] = v12;
    v8[33] = v13;
    SymbolButton.setConfiguration(_:animation:updates:)((uint64_t)v8, 0, 0, 0, 1, (uint64_t)_swiftEmptyArrayStorage);
    outlined destroy of SymbolButton.Configuration((uint64_t)v8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
    SymbolButton.updateConfigurationIfNeeded(_:animation:)((uint64_t)v4, 0, 0, 0, 1);
    outlined destroy of TaskPriority?((uint64_t)v4, &demangling cache variable for type metadata for SymbolButton.Configuration?);
  }
}

void (*SymbolButton.materialColor.modify(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = SymbolButton.materialColor.getter();
  return SymbolButton.materialColor.modify;
}

void SymbolButton.materialColor.modify(uint64_t a1)
{
}

uint64_t SymbolButton.Intent.title.getter()
{
  type metadata accessor for Locale();
  __chkstk_darwin();
  uint64_t v0 = type metadata accessor for String.LocalizationValue();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin();
  uint64_t v3 = &v9[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin();
  uint64_t v5 = &v9[-v4];
  String.LocalizationValue.init(stringLiteral:)();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v1 + 16))(v3, v5, v0);
  if (one-time initialization token for module != -1) {
    swift_once();
  }
  id v6 = (id)static NSBundle.module;
  static Locale.current.getter();
  uint64_t v7 = String.init(localized:table:bundle:locale:comment:)();
  (*(void (**)(unsigned char *, uint64_t))(v1 + 8))(v5, v0);
  return v7;
}

uint64_t SymbolButton.Intent.symbolName.getter(char a1)
{
  if (!a1) {
    return 0x6C69662E79616C70;
  }
  if (a1 == 1) {
    return 0x656C6666756873;
  }
  return 0x2E646E612E63696DLL;
}

uint64_t SymbolButton.Intent.symbolBundle.getter(char a1)
{
  if (a1 != 2) {
    return 0;
  }
  if (one-time initialization token for musicCoreUIBundle != -1) {
    swift_once();
  }
  uint64_t v1 = static NSBundle.musicCoreUIBundle;
  id v2 = (id)static NSBundle.musicCoreUIBundle;
  return v1;
}

unint64_t SymbolButton.Intent.id.getter(char a1)
{
  unint64_t result = 0xD000000000000015;
  if (a1 == 1) {
    return 0xD000000000000018;
  }
  return result;
}

unint64_t protocol witness for Identifiable.id.getter in conformance SymbolButton.Intent@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = SymbolButton.Intent.id.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t closure #1 in SymbolButton.Material.init(materialColor:)(uint64_t a1, char a2)
{
  *(unsigned char *)(a1 + 24) = !(a2 & 1);
  id v3 = [self effectWithBlurRadius:50.0];

  *(void *)a1 = v3;
  id v4 = [self colorEffectSaturate:1.6];

  *(void *)(a1 + 8) = v4;
  _StringGuts.grow(_:)(19);
  swift_bridgeObjectRelease();
  v5._uint64_t countAndFlagsBits = String.init<A>(describing:)();
  String.append(_:)(v5);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = 0xD000000000000011;
  *(void *)(a1 + 40) = 0x8000000100475E60;
  return result;
}

double closure #1 in SymbolButton.Configuration.init(intent:materialColor:)(uint64_t a1, unsigned __int8 a2, int a3)
{
  HIDWORD(v38) = a3;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIView.Corner?);
  __chkstk_darwin();
  uint64_t v39 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    unsigned __int8 v6 = a2;
    if (a2 == 1)
    {
      uint64_t v7 = 0;
      unint64_t v8 = 0xE700000000000000;
      uint64_t v9 = 0x656C6666756873;
      UIFontTextStyle v10 = UIFontTextStyleSubheadline;
    }
    else
    {
      uint64_t v11 = one-time initialization token for musicCoreUIBundle;
      char v12 = UIFontTextStyleSubheadline;
      if (v11 != -1) {
        swift_once();
      }
      UIFontTextStyle v10 = (UIFontTextStyle)static NSBundle.musicCoreUIBundle;
      unint64_t v8 = 0xED00007372617473;
      uint64_t v9 = 0x2E646E612E63696DLL;
      uint64_t v7 = static NSBundle.musicCoreUIBundle;
    }
  }
  else
  {
    unsigned __int8 v6 = a2;
    uint64_t v7 = a2;
    unint64_t v8 = 0xE90000000000006CLL;
    uint64_t v9 = 0x6C69662E79616C70;
    UIFontTextStyle v10 = UIFontTextStyleSubheadline;
  }
  uint64_t v13 = v10;
  uint64_t v14 = *(void **)(a1 + 16);
  uint64_t v15 = *(void **)(a1 + 112);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  *(void *)a1 = v9;
  *(void *)(a1 + 8) = v8;
  *(void *)(a1 + 16) = v7;
  *(void *)(a1 + 24) = UIFontTextStyleSubheadline;
  *(void *)(a1 + 32) = 0;
  *(unsigned char *)(a1 + 40) = 1;
  *(_OWORD *)(a1 + 48) = xmmword_1004A3B50;
  *(_OWORD *)(a1 + 64) = xmmword_1004A3D10;
  *(unsigned char *)(a1 + 80) = 1;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = 0x3FF0000000000000;
  *(void *)(a1 + 112) = 0;
  uint64_t v16 = UIFontTextStyleSubheadline;
  unsigned __int8 v17 = v6;
  uint64_t v18 = SymbolButton.Intent.title.getter();
  uint64_t v20 = v19;
  id v21 = UIFontTextStyleBody;

  unsigned __int8 v22 = *(void **)(a1 + 176);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  *(void *)(a1 + 120) = v18;
  *(void *)(a1 + 128) = v20;
  *(void *)(a1 + 136) = v21;
  *(UIFontWeight *)(a1 + 144) = UIFontWeightSemibold;
  *(void *)(a1 + 152) = 0;
  *(void *)(a1 + 160) = 0;
  *(void *)(a1 + 168) = 0x3FF0000000000000;
  *(void *)(a1 + 176) = 0;
  *(unsigned char *)(a1 + 184) = 0;
  id v23 = [self currentTraitCollection];
  id v24 = [v23 userInterfaceIdiom];

  if (v24 != (id)6)
  {
    if (BYTE4(v38) == 2)
    {
      uint64_t v25 = 0;
      uint64_t v26 = 0;
      uint64_t v27 = 0;
      uint64_t v28 = 0;
      uint64_t v29 = 0;
      uint64_t v30 = 1;
    }
    else
    {
      uint64_t v40 = 0;
      uint64_t v41 = 0;
      uint64_t v42 = 0;
      unsigned __int8 v43 = 2;
      uint64_t v44 = 0;
      uint64_t v45 = 0;
      closure #1 in SymbolButton.Material.init(materialColor:)((uint64_t)&v40, BYTE4(v38) & 1);
      uint64_t v30 = v40;
      uint64_t v25 = v41;
      uint64_t v26 = v42;
      uint64_t v27 = v43;
      uint64_t v28 = v44;
      uint64_t v29 = v45;
    }
    outlined consume of SymbolButton.Material?(*(void **)(a1 + 224), *(void **)(a1 + 232), *(void **)(a1 + 240));
    *(void *)(a1 + 224) = v30;
    *(void *)(a1 + 232) = v25;
    *(void *)(a1 + 240) = v26;
    *(void *)(a1 + 248) = v27;
    *(void *)(a1 + 256) = v28;
    *(void *)(a1 + 264) = v29;
  }
  if (one-time initialization token for roundedRect != -1) {
    swift_once();
  }
  uint64_t v31 = type metadata accessor for UIView.Corner();
  uint64_t v32 = __swift_project_value_buffer(v31, (uint64_t)static UIView.Corner.roundedRect);
  uint64_t v33 = *(void *)(v31 - 8);
  uint64_t v34 = (uint64_t)v39;
  (*(void (**)(char *, uint64_t, uint64_t))(v33 + 16))(v39, v32, v31);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v33 + 56))(v34, 0, 1, v31);
  uint64_t v35 = (int *)type metadata accessor for SymbolButton.Configuration(0);
  outlined assign with take of UIView.Corner?(v34, a1 + v35[9]);
  *(void *)(a1 + v35[12]) = qword_1004ADE70[(char)v17];
  *(int64x2_t *)(a1 + v35[13]) = vdupq_n_s64(0x4048000000000000uLL);
  uint64_t v36 = (_OWORD *)(a1 + v35[15]);
  double result = 0.0;
  *uint64_t v36 = xmmword_1004A3D20;
  v36[1] = xmmword_1004A3D20;
  return result;
}

Swift::Int static PlayIntentButtonStack.playShuffle(_:)(uint64_t a1, uint64_t a2)
{
  return static PlayIntentButtonStack.playShuffle(_:)(a1, a2, (uint64_t)&outlined read-only object #0 of static PlayIntentButtonStack.playShuffle(_:));
}

Swift::Int static PlayIntentButtonStack.sing(_:)(uint64_t a1, uint64_t a2)
{
  return static PlayIntentButtonStack.playShuffle(_:)(a1, a2, (uint64_t)&outlined read-only object #0 of static PlayIntentButtonStack.sing(_:));
}

Swift::Int static PlayIntentButtonStack.playShuffle(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  Swift::Int v3 = specialized Set.init(_nonEmptyArrayLiteral:)(a3);
  swift_retain();
  return v3;
}

Swift::Int PlayIntentButtonStack.init(_:handler:)(char a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<SymbolButton.Intent>);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100493400;
  *(unsigned char *)(inited + 32) = a1;
  Swift::Int v3 = specialized Set.init(_nonEmptyArrayLiteral:)(inited);
  swift_setDeallocating();
  return v3;
}

uint64_t PlayIntentButtonStack.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ViewThatFits<TupleView<(<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, <<opaque return type of View.dynamicTypeSize<A>(_:)>>.0)>>);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned __int8 v10 = static Axis.Set.horizontal.getter();
  char v11 = Axis.Set.init(rawValue:)();
  Axis.Set.init(rawValue:)();
  if (Axis.Set.init(rawValue:)() != v10) {
    char v11 = Axis.Set.init(rawValue:)();
  }
  *uint64_t v9 = v11;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_SizeFittingRoot, TupleView<(<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, <<opaque return type of View.dynamicTypeSize<A>(_:)>>.0)>>);
  closure #1 in PlayIntentButtonStack.body.getter(a1, a2, a3, &v9[*(int *)(v12 + 44)]);
  return outlined init with take of PresentationSource?((uint64_t)v9, a4, &demangling cache variable for type metadata for ViewThatFits<TupleView<(<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, <<opaque return type of View.dynamicTypeSize<A>(_:)>>.0)>>);
}

uint64_t closure #1 in PlayIntentButtonStack.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.dynamicTypeSize<A>(_:)>>.0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin();
  char v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v13 = (char *)&v22 - v12;
  __chkstk_darwin();
  uint64_t v15 = (char *)&v22 - v14;
  __chkstk_darwin();
  unsigned __int8 v17 = (char *)&v22 - v16;
  PlayIntentButtonStack.stack(iconOnly:)(0, a1, a2, a3, (uint64_t)&v22 - v16);
  PlayIntentButtonStack.stack(iconOnly:)(1, a1, a2, a3, (uint64_t)v15);
  uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  v18(v13, v17, v8);
  v18(v11, v15, v8);
  v18(a4, v13, v8);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, <<opaque return type of View.dynamicTypeSize<A>(_:)>>.0));
  v18(&a4[*(int *)(v19 + 48)], v11, v8);
  uint64_t v20 = *(void (**)(char *, uint64_t))(v9 + 8);
  v20(v15, v8);
  v20(v17, v8);
  v20(v11, v8);
  return ((uint64_t (*)(char *, uint64_t))v20)(v13, v8);
}

uint64_t PlayIntentButtonStack.stack(iconOnly:)@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v56 = a5;
  uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (lower: DynamicTypeSize, upper: DynamicTypeSize));
  __chkstk_darwin();
  uint64_t v55 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v52 = (char *)&v51 - v10;
  uint64_t v57 = type metadata accessor for DynamicTypeSize();
  uint64_t v61 = *(void **)(v57 - 8);
  __chkstk_darwin();
  char v60 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v59 = (char *)&v51 - v12;
  uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ClosedRange<DynamicTypeSize>);
  __chkstk_darwin();
  uint64_t v51 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v53 = (uint64_t)&v51 - v14;
  uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ForEach<[SymbolButton.Intent], String, PlayIntentButtonWrapper>);
  uint64_t v15 = *(void *)(v58 - 8);
  __chkstk_darwin();
  unsigned __int8 v17 = (char *)&v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v19 = (char *)&v51 - v18;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_LayoutRoot<PlayIntentButtonStack.SmartHStack>, ForEach<[SymbolButton.Intent], String, PlayIntentButtonWrapper>>);
  __chkstk_darwin();
  uint64_t v22 = (char **)((char *)&v51 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<_VariadicView.Tree<_LayoutRoot<PlayIntentButtonStack.SmartHStack>, ForEach<[SymbolButton.Intent], String, PlayIntentButtonWrapper>>, _FixedSizeLayout>);
  __chkstk_darwin();
  uint64_t v64 = (uint64_t)&v51 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  *uint64_t v22 = 0x4030000000000000;
  swift_bridgeObjectRetain_n();
  id v24 = (char *)specialized _copyCollectionToContiguousArray<A>(_:)(a2);
  swift_bridgeObjectRelease();
  uint64_t v65 = v24;
  specialized MutableCollection<>.sort(by:)(&v65);
  swift_bridgeObjectRelease();
  uint64_t v25 = (char *)v22 + *(int *)(v20 + 44);
  uint64_t v26 = swift_allocObject();
  *(unsigned char *)(v26 + 16) = a1 & 1;
  *(void *)(v26 + 24) = a2;
  *(void *)(v26 + 32) = a3;
  *(void *)(v26 + 40) = a4;
  swift_bridgeObjectRetain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [SymbolButton.Intent]);
  lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type [SymbolButton.Intent] and conformance [A], &demangling cache variable for type metadata for [SymbolButton.Intent]);
  lazy protocol witness table accessor for type PlayIntentButtonWrapper and conformance PlayIntentButtonWrapper();
  lazy protocol witness table accessor for type SymbolButton.Intent and conformance SymbolButton.Intent();
  ForEach<>.init(_:content:)();
  uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
  uint64_t v28 = v58;
  v27(v19, v17, v58);
  v27(v25, v19, v28);
  LOBYTE(v27) = *(void *)(a2 + 16) < 2uLL;
  uint64_t v29 = v64;
  outlined init with copy of _VariadicView.Tree<_LayoutRoot<PlayIntentButtonStack.SmartHStack>, ForEach<[SymbolButton.Intent], String, PlayIntentButtonWrapper>>((uint64_t)v22, v64);
  uint64_t v30 = (unsigned char *)(v29 + *(int *)(v63 + 36));
  *uint64_t v30 = (_BYTE)v27;
  v30[1] = 1;
  outlined destroy of TaskPriority?((uint64_t)v22, &demangling cache variable for type metadata for _VariadicView.Tree<_LayoutRoot<PlayIntentButtonStack.SmartHStack>, ForEach<[SymbolButton.Intent], String, PlayIntentButtonWrapper>>);
  uint64_t v31 = v61;
  uint64_t v32 = (void (*)(char *, void, uint64_t))v61[13];
  uint64_t v33 = v59;
  uint64_t v34 = v57;
  v32(v59, enum case for DynamicTypeSize.xSmall(_:), v57);
  uint64_t v35 = v60;
  v32(v60, enum case for DynamicTypeSize.accessibility2(_:), v34);
  lazy protocol witness table accessor for type LayoutSubviews and conformance LayoutSubviews((unint64_t *)&lazy protocol witness table cache variable for type DynamicTypeSize and conformance DynamicTypeSize, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  uint64_t v36 = v34;
  if (dispatch thunk of static Comparable.<= infix(_:_:)())
  {
    uint64_t v37 = v62;
    uint64_t v38 = v52;
    uint64_t v39 = &v52[*(int *)(v62 + 48)];
    uint64_t v40 = (void (*)(char *, char *, uint64_t))v31[4];
    v40(v52, v33, v36);
    uint64_t v58 = (uint64_t)v39;
    v40(v39, v35, v36);
    uint64_t v41 = *(int *)(v37 + 48);
    uint64_t v42 = v55;
    unsigned __int8 v43 = &v55[v41];
    uint64_t v44 = (void (*)(char *, char *, uint64_t))v31[2];
    v44(v55, v38, v36);
    v44(v43, v39, v36);
    uint64_t v45 = (uint64_t)v51;
    v40(v51, v42, v36);
    uint64_t v46 = (void (*)(char *, uint64_t))v31[1];
    v46(v43, v36);
    uint64_t v47 = &v42[*(int *)(v62 + 48)];
    v40(v42, v38, v36);
    v40(v47, (char *)v58, v36);
    v40((char *)(v45 + *(int *)(v54 + 36)), v47, v36);
    v46(v42, v36);
    uint64_t v48 = v53;
    outlined init with take of PresentationSource?(v45, v53, &demangling cache variable for type metadata for ClosedRange<DynamicTypeSize>);
    lazy protocol witness table accessor for type ModifiedContent<_VariadicView.Tree<_LayoutRoot<PlayIntentButtonStack.SmartHStack>, ForEach<[SymbolButton.Intent], String, PlayIntentButtonWrapper>>, _FixedSizeLayout> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type ClosedRange<DynamicTypeSize> and conformance ClosedRange<A>, &demangling cache variable for type metadata for ClosedRange<DynamicTypeSize>);
    uint64_t v49 = v64;
    View.dynamicTypeSize<A>(_:)();
    outlined destroy of TaskPriority?(v48, &demangling cache variable for type metadata for ClosedRange<DynamicTypeSize>);
    return outlined destroy of TaskPriority?(v49, &demangling cache variable for type metadata for ModifiedContent<_VariadicView.Tree<_LayoutRoot<PlayIntentButtonStack.SmartHStack>, ForEach<[SymbolButton.Intent], String, PlayIntentButtonWrapper>>, _FixedSizeLayout>);
  }
  else
  {
    __break(1u);
    uint64_t result = swift_release();
    __break(1u);
  }
  return result;
}

uint64_t PlayIntentButtonWrapper.init(intent:iconOnly:handler:)@<X0>(char a1@<W0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t result = swift_getKeyPath();
  *(unsigned char *)a5 = a1;
  *(unsigned char *)(a5 + 1) = a2;
  *(void *)(a5 + 8) = a3;
  *(void *)(a5 + 16) = a4;
  *(void *)(a5 + 24) = result;
  *(unsigned char *)(a5 + 32) = 0;
  return result;
}

uint64_t PlayIntentButtonStack.SmartHStack.sizeThatFits(proposal:subviews:cache:)(uint64_t a1, int a2, uint64_t a3, int a4, uint64_t a5, double *a6, double a7)
{
  uint64_t v44 = a6;
  int v42 = a4;
  uint64_t v41 = a3;
  int v40 = a2;
  uint64_t v39 = a1;
  uint64_t v9 = type metadata accessor for LayoutSubview();
  uint64_t v46 = *(void *)(v9 - 8);
  __chkstk_darwin();
  uint64_t v52 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for LayoutSubview?);
  __chkstk_darwin();
  uint64_t v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for LayoutSubviews();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin();
  uint64_t v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IndexingIterator<LayoutSubviews>)
      - 8;
  __chkstk_darwin();
  uint64_t v19 = (char *)&v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = v14;
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  uint64_t v43 = a5;
  uint64_t v53 = v21;
  uint64_t v54 = v14 + 16;
  v21(v16, a5, v13);
  lazy protocol witness table accessor for type LayoutSubviews and conformance LayoutSubviews(&lazy protocol witness table cache variable for type LayoutSubviews and conformance LayoutSubviews, (void (*)(uint64_t))&type metadata accessor for LayoutSubviews);
  dispatch thunk of Sequence.makeIterator()();
  uint64_t v22 = &v19[*(int *)(v17 + 44)];
  lazy protocol witness table accessor for type LayoutSubviews and conformance LayoutSubviews(&lazy protocol witness table cache variable for type LayoutSubviews and conformance LayoutSubviews, (void (*)(uint64_t))&type metadata accessor for LayoutSubviews);
  uint64_t v23 = *(void *)v22;
  uint64_t v45 = v19;
  dispatch thunk of Collection.endIndex.getter();
  if (v23 == v56[0])
  {
    id v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v46 + 56);
    double v25 = 0.0;
LABEL_10:
    uint64_t v35 = v44;
    v24(v12, 1, 1, v9);
    uint64_t v36 = (uint64_t)v45;
  }
  else
  {
    uint64_t v26 = (uint64_t)v45;
    uint64_t v49 = (void (**)(char *, uint64_t))(v20 + 8);
    uint64_t v50 = (void (**)(char *))(v46 + 16);
    uint64_t v51 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v46 + 56);
    double v25 = 0.0;
    uint64_t v47 = (void (**)(char *, char *, uint64_t))(v46 + 32);
    uint64_t v48 = (unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48);
    double v27 = 0.0;
    v46 += 8;
    while (1)
    {
      uint64_t v28 = (void (*)(uint64_t *, void))dispatch thunk of Collection.subscript.read();
      (*v50)(v12);
      v28(v56, 0);
      v53(v16, v26, v13);
      dispatch thunk of Collection.formIndex(after:)();
      (*v49)(v16, v13);
      id v24 = *v51;
      (*v51)(v12, 0, 1, v9);
      if ((*v48)(v12, 1, v9) == 1) {
        break;
      }
      uint64_t v29 = v52;
      (*v47)(v52, v12, v9);
      static ProposedViewSize.zero.getter();
      LOBYTE(v56[0]) = v30 & 1;
      char v55 = v31 & 1;
      LayoutSubview.sizeThatFits(_:)();
      if (v25 <= v32) {
        double v25 = v32;
      }
      if (v27 <= v33) {
        double v27 = v33;
      }
      (*(void (**)(char *, uint64_t))v46)(v29, v9);
      uint64_t v34 = *(void *)v22;
      dispatch thunk of Collection.endIndex.getter();
      if (v34 == v56[0]) {
        goto LABEL_10;
      }
    }
    uint64_t v35 = v44;
    uint64_t v36 = v26;
  }
  outlined destroy of TaskPriority?(v36, &demangling cache variable for type metadata for IndexingIterator<LayoutSubviews>);
  dispatch thunk of Collection.startIndex.getter();
  dispatch thunk of Collection.endIndex.getter();
  uint64_t v37 = dispatch thunk of Collection.distance(from:to:)();
  dispatch thunk of Collection.startIndex.getter();
  dispatch thunk of Collection.endIndex.getter();
  uint64_t result = dispatch thunk of Collection.distance(from:to:)();
  if (__OFSUB__(result, 1))
  {
    __break(1u);
  }
  else
  {
    *uint64_t v35 = v25;
    v35[1] = v25 * (double)v37 + (double)(result - 1) * a7;
  }
  return result;
}

uint64_t protocol witness for static Layout.layoutProperties.getter in conformance PlayIntentButtonStack.SmartHStack()
{
  return static Layout.layoutProperties.getter();
}

void protocol witness for Layout.makeCache(subviews:) in conformance PlayIntentButtonStack.SmartHStack(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
}

uint64_t protocol witness for Layout.updateCache(_:subviews:) in conformance PlayIntentButtonStack.SmartHStack()
{
  return Layout.updateCache(_:subviews:)();
}

uint64_t protocol witness for Layout.spacing(subviews:cache:) in conformance PlayIntentButtonStack.SmartHStack()
{
  return Layout.spacing(subviews:cache:)();
}

uint64_t protocol witness for Layout.sizeThatFits(proposal:subviews:cache:) in conformance PlayIntentButtonStack.SmartHStack(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5, double *a6)
{
  return PlayIntentButtonStack.SmartHStack.sizeThatFits(proposal:subviews:cache:)(a1, a2 & 1, a3, a4 & 1, a5, a6, *v6);
}

uint64_t protocol witness for Layout.placeSubviews(in:proposal:subviews:cache:) in conformance PlayIntentButtonStack.SmartHStack(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return specialized PlayIntentButtonStack.SmartHStack.placeSubviews(in:proposal:subviews:cache:)(a9, a10, a1, a2, a3, a4, *v10);
}

uint64_t protocol witness for Layout.explicitAlignment(of:in:proposal:subviews:cache:) in conformance PlayIntentButtonStack.SmartHStack(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return protocol witness for Layout.explicitAlignment(of:in:proposal:subviews:cache:) in conformance PlayIntentButtonStack.SmartHStack(a1, a2, a3, a4, a5, a6, a7, a8, a9, (uint64_t (*)(uint64_t))&Layout.explicitAlignment(of:in:proposal:subviews:cache:));
}

{
  return protocol witness for Layout.explicitAlignment(of:in:proposal:subviews:cache:) in conformance PlayIntentButtonStack.SmartHStack(a1, a2, a3, a4, a5, a6, a7, a8, a9, (uint64_t (*)(uint64_t))&Layout.explicitAlignment(of:in:proposal:subviews:cache:));
}

uint64_t protocol witness for Layout.explicitAlignment(of:in:proposal:subviews:cache:) in conformance PlayIntentButtonStack.SmartHStack(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(uint64_t))
{
  return a10(a1);
}

uint64_t protocol witness for static Layout._makeLayoutView(root:inputs:body:) in conformance PlayIntentButtonStack.SmartHStack()
{
  return static Layout._makeLayoutView(root:inputs:body:)();
}

uint64_t protocol witness for View.body.getter in conformance PlayIntentButtonStack@<X0>(uint64_t a1@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ViewThatFits<TupleView<(<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, <<opaque return type of View.dynamicTypeSize<A>(_:)>>.0)>>);
  __chkstk_darwin();
  id v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *v1;
  uint64_t v6 = v1[1];
  uint64_t v7 = v1[2];
  unsigned __int8 v8 = static Axis.Set.horizontal.getter();
  char v9 = Axis.Set.init(rawValue:)();
  Axis.Set.init(rawValue:)();
  if (Axis.Set.init(rawValue:)() != v8) {
    char v9 = Axis.Set.init(rawValue:)();
  }
  unsigned char *v4 = v9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_SizeFittingRoot, TupleView<(<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, <<opaque return type of View.dynamicTypeSize<A>(_:)>>.0)>>);
  closure #1 in PlayIntentButtonStack.body.getter(v5, v6, v7, &v4[*(int *)(v10 + 44)]);
  return outlined init with take of PresentationSource?((uint64_t)v4, a1, &demangling cache variable for type metadata for ViewThatFits<TupleView<(<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, <<opaque return type of View.dynamicTypeSize<A>(_:)>>.0)>>);
}

uint64_t EnvironmentValues.playIntentButtonMaterial.getter()
{
  lazy protocol witness table accessor for type PlayIntentButtonMaterialKey and conformance PlayIntentButtonMaterialKey();
  EnvironmentValues.subscript.getter();
  return v1;
}

uint64_t key path getter for EnvironmentValues.playIntentButtonMaterial : EnvironmentValues@<X0>(unsigned char *a1@<X8>)
{
  lazy protocol witness table accessor for type PlayIntentButtonMaterialKey and conformance PlayIntentButtonMaterialKey();
  uint64_t result = EnvironmentValues.subscript.getter();
  *a1 = v3;
  return result;
}

uint64_t key path setter for EnvironmentValues.playIntentButtonMaterial : EnvironmentValues()
{
  return EnvironmentValues.subscript.setter();
}

uint64_t EnvironmentValues.playIntentButtonMaterial.setter()
{
  return EnvironmentValues.subscript.setter();
}

char *PlayIntentButtonWrapper.makeUIView(context:)()
{
  unsigned __int8 v1 = v0;
  type metadata accessor for SymbolButton.Configuration(0);
  __chkstk_darwin();
  char v3 = &v17[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for SymbolButton(0);
  int v4 = *v0;
  uint64_t v5 = SymbolButton.__allocating_init(intent:)(v4);
  SymbolButton.update(to:)(v4);
  uint64_t v6 = *((void *)v1 + 3);
  char v7 = v1[32];
  outlined copy of Environment<Bool>.Content(v6, v7);
  char v8 = specialized Environment.wrappedValue.getter(v6, v7);
  outlined consume of Environment<SymbolButton.MaterialColor?>.Content(v6, v7);
  SymbolButton.materialColor.setter(v8);
  unsigned __int8 v9 = v1[1];
  uint64_t v10 = (uint64_t)&v5[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration];
  swift_beginAccess();
  outlined init with copy of SymbolButton.Configuration(v10, (uint64_t)v3);
  v3[184] = v9;
  SymbolButton.setConfiguration(_:animation:updates:)((uint64_t)v3, 0, 0, 0, 1, (uint64_t)_swiftEmptyArrayStorage);
  outlined destroy of SymbolButton.Configuration((uint64_t)v3);
  uint64_t v11 = *((void *)v1 + 1);
  uint64_t v12 = swift_allocObject();
  long long v13 = *((_OWORD *)v1 + 1);
  *(_OWORD *)(v12 + 16) = *(_OWORD *)v1;
  *(_OWORD *)(v12 + 32) = v13;
  *(unsigned char *)(v12 + 48) = v1[32];
  uint64_t v14 = (uint64_t *)&v5[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_handler];
  swift_beginAccess();
  uint64_t v15 = *v14;
  uint64_t *v14 = (uint64_t)partial apply for closure #1 in PlayIntentButtonWrapper.updateUIView(_:context:);
  v14[1] = v12;
  outlined copy of Environment<Bool>.Content(v6, v7);
  outlined copy of (@escaping @callee_guaranteed () -> ())?(v11);
  outlined consume of (@escaping @callee_guaranteed () -> ())?(v15);
  return v5;
}

uint64_t PlayIntentButtonWrapper.updateUIView(_:context:)(uint64_t a1)
{
  uint64_t v2 = v1;
  type metadata accessor for SymbolButton.Configuration(0);
  __chkstk_darwin();
  uint64_t v5 = &v17[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  SymbolButton.update(to:)(*v2);
  uint64_t v6 = *((void *)v2 + 3);
  char v7 = v2[32];
  outlined copy of Environment<Bool>.Content(v6, v7);
  char v8 = specialized Environment.wrappedValue.getter(v6, v7);
  outlined consume of Environment<SymbolButton.MaterialColor?>.Content(v6, v7);
  SymbolButton.materialColor.setter(v8);
  unsigned __int8 v9 = v2[1];
  uint64_t v10 = a1 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration;
  swift_beginAccess();
  outlined init with copy of SymbolButton.Configuration(v10, (uint64_t)v5);
  v5[184] = v9;
  SymbolButton.setConfiguration(_:animation:updates:)((uint64_t)v5, 0, 0, 0, 1, (uint64_t)_swiftEmptyArrayStorage);
  outlined destroy of SymbolButton.Configuration((uint64_t)v5);
  uint64_t v11 = *((void *)v2 + 1);
  uint64_t v12 = swift_allocObject();
  long long v13 = *((_OWORD *)v2 + 1);
  *(_OWORD *)(v12 + 16) = *(_OWORD *)v2;
  *(_OWORD *)(v12 + 32) = v13;
  *(unsigned char *)(v12 + 48) = v2[32];
  uint64_t v14 = (uint64_t *)(a1 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_handler);
  swift_beginAccess();
  uint64_t v15 = *v14;
  uint64_t *v14 = (uint64_t)partial apply for closure #1 in PlayIntentButtonWrapper.updateUIView(_:context:);
  v14[1] = v12;
  outlined copy of Environment<Bool>.Content(v6, v7);
  outlined copy of (@escaping @callee_guaranteed () -> ())?(v11);
  return outlined consume of (@escaping @callee_guaranteed () -> ())?(v15);
}

double PlayIntentButtonWrapper.sizeThatFits(_:uiView:context:)(uint64_t a1, char a2, int a3, int a4, id a5)
{
  [a5 intrinsicContentSize];
  if ((a2 & 1) == 0)
  {
    if (result > *(double *)&a1) {
      double v8 = result;
    }
    else {
      double v8 = *(double *)&a1;
    }
    if (*(double *)&a1 != INFINITY) {
      return v8;
    }
  }
  return result;
}

uint64_t protocol witness for UIViewRepresentable._resetUIView(_:coordinator:destroy:) in conformance PlayIntentButtonWrapper()
{
  return UIViewRepresentable._resetUIView(_:coordinator:destroy:)();
}

uint64_t protocol witness for static UIViewRepresentable.dismantleUIView(_:coordinator:) in conformance PlayIntentButtonWrapper()
{
  return static UIViewRepresentable.dismantleUIView(_:coordinator:)();
}

uint64_t protocol witness for UIViewRepresentable.makeCoordinator() in conformance PlayIntentButtonWrapper()
{
  return UIViewRepresentable<>.makeCoordinator()();
}

uint64_t protocol witness for UIViewRepresentable._identifiedViewTree(in:) in conformance PlayIntentButtonWrapper()
{
  return UIViewRepresentable._identifiedViewTree(in:)();
}

uint64_t protocol witness for UIViewRepresentable._overrideSizeThatFits(_:in:uiView:) in conformance PlayIntentButtonWrapper()
{
  return UIViewRepresentable._overrideSizeThatFits(_:in:uiView:)();
}

uint64_t protocol witness for UIViewRepresentable._overrideLayoutTraits(_:for:) in conformance PlayIntentButtonWrapper()
{
  return UIViewRepresentable._overrideLayoutTraits(_:for:)();
}

uint64_t protocol witness for static UIViewRepresentable._modifyBridgedViewInputs(_:) in conformance PlayIntentButtonWrapper()
{
  return static UIViewRepresentable._modifyBridgedViewInputs(_:)();
}

uint64_t protocol witness for static UIViewRepresentable._layoutOptions(_:) in conformance PlayIntentButtonWrapper()
{
  return static UIViewRepresentable._layoutOptions(_:)();
}

uint64_t protocol witness for static View._makeView(view:inputs:) in conformance PlayIntentButtonWrapper(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = lazy protocol witness table accessor for type PlayIntentButtonWrapper and conformance PlayIntentButtonWrapper();

  return static UIViewRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t protocol witness for static View._makeViewList(view:inputs:) in conformance PlayIntentButtonWrapper(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = lazy protocol witness table accessor for type PlayIntentButtonWrapper and conformance PlayIntentButtonWrapper();

  return static UIViewRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void protocol witness for View.body.getter in conformance PlayIntentButtonWrapper()
{
}

uint64_t View.playIntentButtonMaterial(_:)()
{
  return swift_release();
}

uint64_t protocol witness for static EnvironmentKey._valuesEqual(_:_:) in conformance PlayIntentButtonMaterialKey(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = lazy protocol witness table accessor for type SymbolButton.MaterialColor? and conformance <A> A?(&lazy protocol witness table cache variable for type SymbolButton.MaterialColor? and conformance <A> A?, &demangling cache variable for type metadata for SymbolButton.MaterialColor?, (void (*)(void))lazy protocol witness table accessor for type SymbolButton.MaterialColor and conformance SymbolButton.MaterialColor);

  return static EnvironmentKey<>._valuesEqual(_:_:)(a1, a2, a3, a4, v8);
}

uint64_t (*EnvironmentValues.playIntentButtonMaterial.modify(void *a1))(uint64_t a1)
{
  *a1 = v1;
  a1[1] = lazy protocol witness table accessor for type PlayIntentButtonMaterialKey and conformance PlayIntentButtonMaterialKey();
  EnvironmentValues.subscript.getter();
  return EnvironmentValues.playIntentButtonMaterial.modify;
}

uint64_t EnvironmentValues.playIntentButtonMaterial.modify(uint64_t a1)
{
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a1 + 16);
  return EnvironmentValues.subscript.setter();
}

uint64_t PlayIntentLayoutHelper.Configuration.distribution.getter(__int16 a1)
{
  return HIBYTE(a1);
}

uint64_t static PlayIntentLayoutHelper.Configuration.with(_:)(void (*a1)(unsigned __int16 *))
{
  unsigned __int16 v2 = 513;
  uint64_t v3 = 0x4030000000000000;
  a1(&v2);
  return v2;
}

BOOL static PlayIntentLayoutHelper.Configuration.__derived_struct_equals(_:_:)(__int16 a1, __int16 a2, double a3, double a4)
{
  return a3 == a4 && a1 == a2;
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance PlayIntentLayoutHelper.Configuration(double *a1, double *a2)
{
  return *(unsigned __int8 *)a1 == *(unsigned __int8 *)a2
      && *((unsigned __int8 *)a1 + 1) == *((unsigned __int8 *)a2 + 1)
      && a1[1] == a2[1];
}

uint64_t PlayIntentLayoutHelper.configuration.setter(uint64_t result, double a2)
{
  *(_WORD *)(v2 + 16) = result;
  *(double *)(v2 + 24) = a2;
  return result;
}

char *PlayIntentLayoutHelper.init()()
{
  type metadata accessor for SymbolButton(0);
  uint64_t v0 = SymbolButton.__allocating_init(intent:)(0);
  SymbolButton.__allocating_init(intent:)(1);
  return v0;
}

uint64_t PlayIntentLayoutHelper.layout(in:rect:)(void *a1, uint64_t a2, void *a3, void *a4, int a5, double a6)
{
  __swift_instantiateConcreteTypeFromMangledName(&_ss23_ContiguousArrayStorageCyyXlGMD_1);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100493E20;
  *(void *)(inited + 32) = a3;
  *(void *)(inited + 40) = a4;
  unint64_t v16 = inited;
  specialized Array._endMutation()();
  id v13 = a3;
  id v14 = a4;
  specialized static PlayIntentLayoutHelper.layout(_:in:rect:configuration:)(v16, a1, a2, a5, a6);
  return swift_bridgeObjectRelease();
}

uint64_t PlaybackIntentDescriptor.configure(for:)(unsigned __int8 a1)
{
  int v2 = a1;
  uint64_t v3 = (void *)PlaybackIntentDescriptor.intent.getter();
  [v3 setShuffleMode:v2 == 1];
  [v3 setRepeatMode:0];

  uint64_t result = type metadata accessor for PlaybackIntentDescriptor(0);
  *(unsigned char *)(v1 + *(int *)(result + 32)) = v2 == 2;
  return result;
}

id MPCPlaybackIntent.configure(for:)(char a1)
{
  [v1 setShuffleMode:a1 == 1];

  return [v1 setRepeatMode:0];
}

uint64_t outlined destroy of SymbolButton.Configuration(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SymbolButton.Configuration(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t outlined init with copy of SymbolButton.Configuration(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SymbolButton.Configuration(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void *outlined consume of SymbolButton.Material?(void *result, void *a2, void *a3)
{
  if (result != (void *)1)
  {

    return (void *)swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100412720@<X0>(unsigned char *a1@<X8>)
{
  lazy protocol witness table accessor for type PlayIntentButtonMaterialKey and conformance PlayIntentButtonMaterialKey();
  uint64_t result = EnvironmentValues.subscript.getter();
  *a1 = v3;
  return result;
}

uint64_t sub_100412770()
{
  return EnvironmentValues.subscript.setter();
}

unint64_t lazy protocol witness table accessor for type PlayIntentButtonMaterialKey and conformance PlayIntentButtonMaterialKey()
{
  unint64_t result = lazy protocol witness table cache variable for type PlayIntentButtonMaterialKey and conformance PlayIntentButtonMaterialKey;
  if (!lazy protocol witness table cache variable for type PlayIntentButtonMaterialKey and conformance PlayIntentButtonMaterialKey)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PlayIntentButtonMaterialKey and conformance PlayIntentButtonMaterialKey);
  }
  return result;
}

uint64_t objectdestroyTm_17()
{
  if (*(void *)(v0 + 24)) {
    swift_release();
  }
  outlined consume of Environment<SymbolButton.MaterialColor?>.Content(*(void *)(v0 + 40), *(unsigned char *)(v0 + 48));

  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in PlayIntentButtonWrapper.updateUIView(_:context:)()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 24);
  if (v1) {
    return v1(*(unsigned __int8 *)(v0 + 16));
  }
  return result;
}

uint64_t specialized PlayIntentButtonStack.SmartHStack.placeSubviews(in:proposal:subviews:cache:)(uint64_t a1, uint64_t a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6, double a7)
{
  uint64_t v55 = type metadata accessor for ViewDimensions();
  uint64_t v47 = *(void (***)(char *, uint64_t))(v55 - 8);
  __chkstk_darwin();
  uint64_t v54 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for LayoutSubview();
  uint64_t v46 = *(void *)(v15 - 8);
  __chkstk_darwin();
  uint64_t v53 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for LayoutSubview?);
  __chkstk_darwin();
  uint64_t v18 = (char *)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for LayoutSubviews();
  uint64_t v20 = *(void **)(v19 - 8);
  __chkstk_darwin();
  uint64_t v22 = (char *)&v45 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IndexingIterator<LayoutSubviews>)
      - 8;
  __chkstk_darwin();
  double v25 = (char *)&v45 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63.origin.CGFloat x = a3;
  v63.origin.CGFloat y = a4;
  v63.size.double width = a5;
  v63.size.double height = a6;
  CGRectGetWidth(v63);
  uint64_t v56 = a2;
  uint64_t v26 = lazy protocol witness table accessor for type LayoutSubviews and conformance LayoutSubviews(&lazy protocol witness table cache variable for type LayoutSubviews and conformance LayoutSubviews, (void (*)(uint64_t))&type metadata accessor for LayoutSubviews);
  dispatch thunk of Collection.startIndex.getter();
  dispatch thunk of Collection.endIndex.getter();
  uint64_t v52 = (void (**)(char *))dispatch thunk of Collection.distance(from:to:)();
  uint64_t v57 = v20;
  uint64_t v58 = (void (*)(char *, uint64_t, uint64_t))v20[2];
  uint64_t v59 = v20 + 2;
  v58(v22, a1, v19);
  lazy protocol witness table accessor for type LayoutSubviews and conformance LayoutSubviews(&lazy protocol witness table cache variable for type LayoutSubviews and conformance LayoutSubviews, (void (*)(uint64_t))&type metadata accessor for LayoutSubviews);
  char v60 = v22;
  dispatch thunk of Sequence.makeIterator()();
  double v27 = &v25[*(int *)(v23 + 44)];
  uint64_t v28 = *(void *)v27;
  dispatch thunk of Collection.endIndex.getter();
  if (v28 == v61[0])
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v46 + 56))(v18, 1, 1, v15);
  }
  else
  {
    uint64_t v52 = (void (**)(char *))(v46 + 16);
    uint64_t v51 = (void (**)(char *, uint64_t))(v57 + 1);
    uint64_t v57 = (void *)(v46 + 56);
    uint64_t v50 = (unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48);
    uint64_t v48 = (void (**)(char *, char *, uint64_t))(v46 + 32);
    ++v47;
    v46 += 8;
    double v29 = a3;
    uint64_t v49 = v25;
    while (1)
    {
      char v30 = (void (*)(uint64_t *, void))dispatch thunk of Collection.subscript.read();
      (*v52)(v18);
      v30(v61, 0);
      char v31 = v60;
      v58(v60, (uint64_t)v25, v19);
      dispatch thunk of Collection.formIndex(after:)();
      (*v51)(v31, v19);
      double v32 = (void (*)(char *, uint64_t, uint64_t, uint64_t))*v57;
      ((void (*)(char *, void, uint64_t, uint64_t))*v57)(v18, 0, 1, v15);
      if ((*v50)(v18, 1, v15) == 1) {
        break;
      }
      uint64_t v45 = v32;
      double v33 = v53;
      (*v48)(v53, v18, v15);
      v64.origin.CGFloat x = a3;
      v64.origin.CGFloat y = a4;
      v64.size.double width = a5;
      v64.size.double height = a6;
      CGRectGetHeight(v64);
      static UnitPoint.topLeading.getter();
      LOBYTE(v61[0]) = 0;
      char v62 = 0;
      LayoutSubview.place(at:anchor:proposal:)();
      LOBYTE(v61[0]) = 0;
      char v62 = 0;
      uint64_t v34 = v27;
      uint64_t v35 = v19;
      uint64_t v36 = v26;
      uint64_t v37 = v18;
      uint64_t v38 = v54;
      LayoutSubview.dimensions(in:)();
      ViewDimensions.width.getter();
      double v40 = v39;
      uint64_t v41 = v38;
      uint64_t v18 = v37;
      uint64_t v26 = v36;
      uint64_t v19 = v35;
      double v27 = v34;
      (*v47)(v41, v55);
      double v29 = v29 + v40 + a7;
      int v42 = v33;
      double v25 = v49;
      (*(void (**)(char *, uint64_t))v46)(v42, v15);
      uint64_t v43 = *(void *)v34;
      dispatch thunk of Collection.endIndex.getter();
      if (v43 == v61[0])
      {
        v45(v18, 1, 1, v15);
        return outlined destroy of TaskPriority?((uint64_t)v25, &demangling cache variable for type metadata for IndexingIterator<LayoutSubviews>);
      }
    }
  }
  return outlined destroy of TaskPriority?((uint64_t)v25, &demangling cache variable for type metadata for IndexingIterator<LayoutSubviews>);
}

void specialized closure #3 in static PlayIntentLayoutHelper.layout(_:in:rect:configuration:)(id *a1, id a2, CGFloat *a3, uint64_t a4, unint64_t a5, double a6, double a7, double a8, double a9, double a10, double a11, double a12, uint64_t a13, BOOL *a14)
{
  id v20 = *a1;
  id v21 = [*a1 superview];
  if (!v21 || (id v22 = v21, v21, v22 != a2)) {
    [a2 addSubview:v20];
  }
  CGFloat v23 = *a3;
  CGFloat v24 = a3[1];
  CGFloat v25 = a3[3];
  if (*(unsigned char *)(a4 + 8))
  {
    [v20 intrinsicContentSize];
    double v27 = v26;
    if (a5 >> 62)
    {
      swift_bridgeObjectRetain();
      _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    CGFloat.ceilingValue(scale:)();
    double v29 = v27 - v28;
  }
  else
  {
    double v29 = *(double *)a4;
  }
  CGRect.applyingLayoutDirection(_:inBounds:)();
  objc_msgSend(v20, "setFrame:");
  v33.origin.CGFloat x = v23;
  v33.origin.CGFloat y = v24;
  v33.size.double width = v29;
  v33.size.double height = v25;
  a3[2] = a3[2] - (CGRectGetWidth(v33) + a12);
  v34.origin.CGFloat x = v23;
  v34.origin.CGFloat y = v24;
  v34.size.double width = v29;
  v34.size.double height = v25;
  *a3 = *a3 + CGRectGetWidth(v34) + a12;
  if (*a14)
  {
    BOOL v30 = 1;
  }
  else
  {
    [v20 intrinsicContentSize];
    double v32 = v31;
    v35.origin.CGFloat x = v23;
    v35.origin.CGFloat y = v24;
    v35.size.double width = v29;
    v35.size.double height = v25;
    BOOL v30 = CGRectGetWidth(v35) < v32;
  }
  *a14 = v30;
}

void specialized static PlayIntentLayoutHelper.layout(_:in:rect:configuration:)(unint64_t a1, void *a2, uint64_t a3, int a4, double a5)
{
  int v83 = a4;
  uint64_t v6 = a3;
  outlined init with take of PresentationSource?(a3, (uint64_t)v93, (uint64_t *)&_sSo6CGRectVSgMD_0);
  CGFloat x = *(double *)v93;
  CGFloat v85 = *(double *)&v93[1];
  *(void *)&size.CGFloat height = v93[2];
  *(void *)&size.CGFloat width = v93[3];
  type metadata accessor for SymbolButton.Configuration(0);
  __chkstk_darwin();
  uint64_t v10 = (char *)v79 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = _swiftEmptyArrayStorage;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
  }
  else
  {
    uint64_t v11 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  double v87 = a5;
  if (v11)
  {
    if (v11 < 1)
    {
LABEL_71:
      __break(1u);
      goto LABEL_72;
    }
    uint64_t v81 = v6;
    for (uint64_t i = 0; i != v11; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v13 = *(id *)(a1 + 8 * i + 32);
      }
      uint64_t v14 = v13;
      if ([v13 isHidden])
      {
      }
      else
      {
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
      }
    }
    swift_bridgeObjectRelease();
    int64_t v15 = (int64_t)v94;
    uint64_t v6 = v81;
  }
  else
  {
    swift_bridgeObjectRelease();
    int64_t v15 = (int64_t)_swiftEmptyArrayStorage;
  }
  [a2 bounds];
  double v17 = v16;
  double v19 = v18;
  double v21 = v20;
  double v23 = v22;
  id v24 = [a2 traitCollection];
  [v24 displayScale];
  double v26 = v25;

  id v27 = [a2 effectiveUserInterfaceLayoutDirection];
  [a2 layoutMargins];
  double v29 = v28;
  double v31 = v30;
  v79[1] = v32;
  BOOL v33 = v15 < 0 || (v15 & 0x4000000000000000) != 0;
  if (!v33)
  {
    uint64_t v34 = *(void *)(v15 + 16);
    *(void *)&double v35 = v34 - 1;
    if (!__OFSUB__(v34, 1)) {
      goto LABEL_20;
    }
    goto LABEL_70;
  }
  swift_bridgeObjectRetain();
  uint64_t v34 = _CocoaArrayWrapper.endIndex.getter();
  swift_release();
  *(void *)&double v35 = v34 - 1;
  if (__OFSUB__(v34, 1))
  {
LABEL_70:
    __break(1u);
    goto LABEL_71;
  }
LABEL_20:
  outlined init with take of PresentationSource?(v6, (uint64_t)&v94, (uint64_t *)&_sSo6CGRectVSgMD_0);
  double v36 = x;
  CGFloat v37 = v85;
  CGFloat height = size.height;
  CGFloat width = size.width;
  if (v95) {
    double v36 = UIEdgeInsetsInsetRect(v17, v19, v21, v23, v29, v31);
  }
  CGFloat x = v35;
  v92.origin.CGFloat x = v36;
  v92.origin.CGFloat y = v37;
  v92.size.CGFloat width = height;
  v92.size.CGFloat height = width;
  if (v33)
  {
    swift_retain();
    uint64_t v40 = _CocoaArrayWrapper.endIndex.getter();
  }
  else
  {
    uint64_t v40 = *(void *)(v15 + 16);
    swift_retain();
  }
  char v82 = a2;
  uint64_t v80 = (uint64_t)v27;
  uint64_t v81 = v34;
  if (v40)
  {
    if (v40 >= 1)
    {
      uint64_t v41 = 0;
      double v42 = 0.0;
      do
      {
        if ((v15 & 0xC000000000000001) != 0) {
          id v43 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v43 = *(id *)(v15 + 8 * v41 + 32);
        }
        uint64_t v44 = v43;
        uint64_t v45 = (uint64_t)v43 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration;
        swift_beginAccess();
        outlined init with copy of SymbolButton.Configuration(v45, (uint64_t)v10);
        v10[184] = 0;
        SymbolButton.setConfiguration(_:animation:updates:)((uint64_t)v10, 0, 0, 0, 1, (uint64_t)_swiftEmptyArrayStorage);
        outlined destroy of SymbolButton.Configuration((uint64_t)v10);
        [v44 intrinsicContentSize];
        CGFloat.ceilingValue(scale:)();
        double v42 = v42 + v46;
        ++v41;
        CGFloat.ceilingValue(scale:)();
        double v48 = v47;
      }
      while (v40 != v41);
      goto LABEL_33;
    }
LABEL_72:
    __break(1u);
    __break(1u);
    return;
  }
  double v42 = 0.0;
  double v48 = 0.0;
LABEL_33:
  char v49 = v83;
  int v50 = BYTE1(v83);
  double v51 = (double)(*(void *)&x & ~(*(uint64_t *)&x >> 63)) * v87;
  swift_release();
  if (v50)
  {
    uint64_t v52 = v82;
    uint64_t v53 = v81;
    if (v50 == 1)
    {
      double v90 = v48;
      char v91 = 0;
      double v54 = v51 + v48 * (double)v81;
    }
    else
    {
      CGFloat x = v92.origin.x;
      CGFloat y = v92.origin.y;
      CGFloat v85 = v92.size.width;
      size.CGFloat height = v92.size.height;
      CGRectGetWidth(v92);
      CGFloat.ceilingValue(scale:)();
      double v48 = v57;
      double v90 = v57;
      char v91 = 0;
      v96.origin.CGFloat x = x;
      v96.origin.CGFloat y = y;
      v96.size.CGFloat width = v85;
      v96.size.CGFloat height = size.height;
      double v54 = CGRectGetWidth(v96);
    }
    int v55 = 1;
  }
  else
  {
    int v55 = 0;
    double v90 = 0.0;
    char v91 = 1;
    double v54 = v51 + v42;
    double v48 = 0.0;
    uint64_t v52 = v82;
    uint64_t v53 = v81;
  }
  CGFloat v58 = v92.origin.y;
  CGFloat v85 = v92.origin.x;
  CGSize size = v92.size;
  CGFloat v59 = CGRectGetWidth(v92);
  CGFloat x = v54;
  double v60 = v54 - v59;
  if (v60 < 0.0) {
    double v61 = 0.0;
  }
  else {
    double v61 = v60;
  }
  if (v55 && v61 > 0.0)
  {
    CGFloat.ceilingValue(scale:)();
    double v90 = v48 - v62;
    char v91 = 0;
    v97.origin.CGFloat x = v85;
    v97.origin.CGFloat y = v58;
    v97.size.CGFloat width = size.width;
    v97.size.CGFloat height = size.height;
    CGFloat x = CGRectGetWidth(v97);
  }
  double v63 = v87;
  if (v50 != 2)
  {
    if (v49)
    {
      CGFloat v64 = v85;
      CGFloat v65 = v58;
      CGFloat v66 = size.width;
      CGFloat v67 = size.height;
      if (v49 == 1)
      {
        CGRectGetWidth(*(CGRect *)&v64);
        CGFloat.floorValue(scale:)();
        double v69 = v85 + v68;
      }
      else
      {
        double v69 = CGRectGetMaxX(*(CGRect *)&v64) - x;
      }
      v92.origin.CGFloat x = v69;
    }
    v92.size.CGFloat width = x;
  }
  BOOL v89 = 0;
  if (v40)
  {
    unint64_t v70 = v15 & 0xC000000000000001;
    swift_retain();
    uint64_t v71 = 0;
    uint64_t v72 = v80;
    do
    {
      if (v70) {
        id v73 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v73 = *(id *)(v15 + 8 * v71 + 32);
      }
      uint64_t v74 = v73;
      ++v71;
      id v88 = v73;
      specialized closure #3 in static PlayIntentLayoutHelper.layout(_:in:rect:configuration:)(&v88, v52, &v92.origin.x, (uint64_t)&v90, v15, v61, v26, v17, v19, v21, v23, v63, v72, &v89);
    }
    while (v40 != v71);
    swift_release();
    if (v89 && v53 > 1)
    {
      swift_retain();
      uint64_t v75 = 0;
      do
      {
        if (v70) {
          id v76 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v76 = *(id *)(v15 + 8 * v75 + 32);
        }
        uint64_t v77 = v76;
        ++v75;
        uint64_t v78 = (uint64_t)v76 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration;
        swift_beginAccess();
        outlined init with copy of SymbolButton.Configuration(v78, (uint64_t)v10);
        v10[184] = 1;
        SymbolButton.setConfiguration(_:animation:updates:)((uint64_t)v10, 0, 0, 0, 1, (uint64_t)_swiftEmptyArrayStorage);
        outlined destroy of SymbolButton.Configuration((uint64_t)v10);
      }
      while (v40 != v75);
      swift_release();
    }
  }
  swift_release();
}

unint64_t lazy protocol witness table accessor for type SymbolButton.Intent and conformance SymbolButton.Intent()
{
  unint64_t result = lazy protocol witness table cache variable for type SymbolButton.Intent and conformance SymbolButton.Intent;
  if (!lazy protocol witness table cache variable for type SymbolButton.Intent and conformance SymbolButton.Intent)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SymbolButton.Intent and conformance SymbolButton.Intent);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type SymbolButton.Intent and conformance SymbolButton.Intent;
  if (!lazy protocol witness table cache variable for type SymbolButton.Intent and conformance SymbolButton.Intent)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SymbolButton.Intent and conformance SymbolButton.Intent);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type SymbolButton.MaterialColor and conformance SymbolButton.MaterialColor()
{
  unint64_t result = lazy protocol witness table cache variable for type SymbolButton.MaterialColor and conformance SymbolButton.MaterialColor;
  if (!lazy protocol witness table cache variable for type SymbolButton.MaterialColor and conformance SymbolButton.MaterialColor)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SymbolButton.MaterialColor and conformance SymbolButton.MaterialColor);
  }
  return result;
}

uint64_t associated type witness table accessor for View.Body : View in PlayIntentButtonStack()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t lazy protocol witness table accessor for type PlayIntentButtonWrapper and conformance PlayIntentButtonWrapper()
{
  unint64_t result = lazy protocol witness table cache variable for type PlayIntentButtonWrapper and conformance PlayIntentButtonWrapper;
  if (!lazy protocol witness table cache variable for type PlayIntentButtonWrapper and conformance PlayIntentButtonWrapper)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PlayIntentButtonWrapper and conformance PlayIntentButtonWrapper);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type PlayIntentButtonWrapper and conformance PlayIntentButtonWrapper;
  if (!lazy protocol witness table cache variable for type PlayIntentButtonWrapper and conformance PlayIntentButtonWrapper)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PlayIntentButtonWrapper and conformance PlayIntentButtonWrapper);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type PlayIntentLayoutHelper.Alignment and conformance PlayIntentLayoutHelper.Alignment()
{
  unint64_t result = lazy protocol witness table cache variable for type PlayIntentLayoutHelper.Alignment and conformance PlayIntentLayoutHelper.Alignment;
  if (!lazy protocol witness table cache variable for type PlayIntentLayoutHelper.Alignment and conformance PlayIntentLayoutHelper.Alignment)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PlayIntentLayoutHelper.Alignment and conformance PlayIntentLayoutHelper.Alignment);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type PlayIntentLayoutHelper.Distribution and conformance PlayIntentLayoutHelper.Distribution()
{
  unint64_t result = lazy protocol witness table cache variable for type PlayIntentLayoutHelper.Distribution and conformance PlayIntentLayoutHelper.Distribution;
  if (!lazy protocol witness table cache variable for type PlayIntentLayoutHelper.Distribution and conformance PlayIntentLayoutHelper.Distribution)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PlayIntentLayoutHelper.Distribution and conformance PlayIntentLayoutHelper.Distribution);
  }
  return result;
}

ValueMetadata *type metadata accessor for SymbolButton.Intent()
{
  return &type metadata for SymbolButton.Intent;
}

unsigned char *storeEnumTagSinglePayload for SymbolButton.MaterialColor(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100413CCCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SymbolButton.MaterialColor()
{
  return &type metadata for SymbolButton.MaterialColor;
}

uint64_t destroy for PlayIntentButtonStack()
{
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t initializeBufferWithCopyOfBuffer for PlayIntentButtonStack(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

void *assignWithCopy for PlayIntentButtonStack(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for PlayIntentButtonStack(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v4;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for PlayIntentButtonStack()
{
  return &type metadata for PlayIntentButtonStack;
}

uint64_t destroy for PlayIntentButtonWrapper(uint64_t a1)
{
  if (*(void *)(a1 + 8)) {
    swift_release();
  }
  uint64_t v2 = *(void *)(a1 + 24);
  char v3 = *(unsigned char *)(a1 + 32);

  return outlined consume of Environment<SymbolButton.MaterialColor?>.Content(v2, v3);
}

uint64_t initializeWithCopy for PlayIntentButtonWrapper(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4)
  {
    uint64_t v5 = *(void *)(a2 + 16);
    *(void *)(a1 + 8) = v4;
    *(void *)(a1 + 16) = v5;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  }
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  outlined copy of Environment<Bool>.Content(v6, v7);
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for PlayIntentButtonWrapper(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  uint64_t v4 = (_OWORD *)(a1 + 8);
  uint64_t v6 = (_OWORD *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 8);
  if (!*(void *)(a1 + 8))
  {
    if (v5)
    {
      uint64_t v8 = *(void *)(a2 + 16);
      *(void *)(a1 + 8) = v5;
      *(void *)(a1 + 16) = v8;
      swift_retain();
      goto LABEL_8;
    }
LABEL_7:
    _OWORD *v4 = *v6;
    goto LABEL_8;
  }
  if (!v5)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v7 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v7;
  swift_retain();
  swift_release();
LABEL_8:
  uint64_t v9 = *(void *)(a2 + 24);
  char v10 = *(unsigned char *)(a2 + 32);
  outlined copy of Environment<Bool>.Content(v9, v10);
  uint64_t v11 = *(void *)(a1 + 24);
  char v12 = *(unsigned char *)(a1 + 32);
  *(void *)(a1 + 24) = v9;
  *(unsigned char *)(a1 + 32) = v10;
  outlined consume of Environment<SymbolButton.MaterialColor?>.Content(v11, v12);
  return a1;
}

uint64_t assignWithTake for PlayIntentButtonWrapper(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  uint64_t v4 = (_OWORD *)(a1 + 8);
  uint64_t v6 = (_OWORD *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 8);
  if (!*(void *)(a1 + 8))
  {
    if (v5)
    {
      uint64_t v8 = *(void *)(a2 + 16);
      *(void *)(a1 + 8) = v5;
      *(void *)(a1 + 16) = v8;
      goto LABEL_8;
    }
LABEL_7:
    _OWORD *v4 = *v6;
    goto LABEL_8;
  }
  if (!v5)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v7 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v7;
  swift_release();
LABEL_8:
  char v9 = *(unsigned char *)(a2 + 32);
  uint64_t v10 = *(void *)(a1 + 24);
  char v11 = *(unsigned char *)(a1 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = v9;
  outlined consume of Environment<SymbolButton.MaterialColor?>.Content(v10, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for PlayIntentButtonWrapper(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PlayIntentButtonWrapper(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PlayIntentButtonWrapper()
{
  return &type metadata for PlayIntentButtonWrapper;
}

uint64_t initializeWithCopy for PlayIntentLayoutHelper(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void **)a2;
  int v4 = *(void **)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  id v5 = v3;
  id v6 = v4;
  return a1;
}

uint64_t assignWithCopy for PlayIntentLayoutHelper(uint64_t a1, uint64_t a2)
{
  int v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  uint64_t v7 = *(void **)(a2 + 8);
  uint64_t v8 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v7;
  id v9 = v7;

  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  return a1;
}

uint64_t assignWithTake for PlayIntentLayoutHelper(uint64_t a1, uint64_t a2)
{
  int v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  return a1;
}

ValueMetadata *type metadata accessor for PlayIntentLayoutHelper()
{
  return &type metadata for PlayIntentLayoutHelper;
}

uint64_t getEnumTagSinglePayload for PlayIntentLayoutHelper.Configuration(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && a1[16]) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 3;
  int v5 = v3 - 3;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for PlayIntentLayoutHelper.Configuration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)unint64_t result = a2 - 254;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(unsigned char *)unint64_t result = a2 + 2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PlayIntentLayoutHelper.Configuration()
{
  return &type metadata for PlayIntentLayoutHelper.Configuration;
}

ValueMetadata *type metadata accessor for PlayIntentLayoutHelper.Alignment()
{
  return &type metadata for PlayIntentLayoutHelper.Alignment;
}

unsigned char *storeEnumTagSinglePayload for SymbolButton.Intent(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1004143ACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PlayIntentLayoutHelper.Distribution()
{
  return &type metadata for PlayIntentLayoutHelper.Distribution;
}

uint64_t sub_1004143E4()
{
  return lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type ViewThatFits<TupleView<(<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, <<opaque return type of View.dynamicTypeSize<A>(_:)>>.0)>> and conformance ViewThatFits<A>, &demangling cache variable for type metadata for ViewThatFits<TupleView<(<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, <<opaque return type of View.dynamicTypeSize<A>(_:)>>.0)>>);
}

uint64_t sub_100414420()
{
  return swift_getWitnessTable();
}

ValueMetadata *type metadata accessor for PlayIntentButtonMaterialKey()
{
  return &type metadata for PlayIntentButtonMaterialKey;
}

void *type metadata accessor for PlayIntentButtonStack.SmartHStack()
{
  return &unk_100548C50;
}

unint64_t lazy protocol witness table accessor for type PlayIntentButtonStack.SmartHStack and conformance PlayIntentButtonStack.SmartHStack()
{
  unint64_t result = lazy protocol witness table cache variable for type PlayIntentButtonStack.SmartHStack and conformance PlayIntentButtonStack.SmartHStack;
  if (!lazy protocol witness table cache variable for type PlayIntentButtonStack.SmartHStack and conformance PlayIntentButtonStack.SmartHStack)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PlayIntentButtonStack.SmartHStack and conformance PlayIntentButtonStack.SmartHStack);
  }
  return result;
}

uint64_t sub_100414588()
{
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #1 in PlayIntentButtonStack.stack(iconOnly:)@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  char v4 = *(unsigned char *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 32);
  uint64_t v5 = *(void *)(v2 + 40);
  char v7 = *a1;
  uint64_t KeyPath = swift_getKeyPath();
  *(unsigned char *)a2 = v7;
  *(unsigned char *)(a2 + 1) = v4;
  *(void *)(a2 + 8) = v6;
  *(void *)(a2 + 16) = v5;
  *(void *)(a2 + 24) = KeyPath;
  *(unsigned char *)(a2 + 32) = 0;

  return swift_retain();
}

uint64_t outlined init with copy of _VariadicView.Tree<_LayoutRoot<PlayIntentButtonStack.SmartHStack>, ForEach<[SymbolButton.Intent], String, PlayIntentButtonWrapper>>(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_LayoutRoot<PlayIntentButtonStack.SmartHStack>, ForEach<[SymbolButton.Intent], String, PlayIntentButtonWrapper>>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t lazy protocol witness table accessor for type LayoutSubviews and conformance LayoutSubviews(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<_VariadicView.Tree<_LayoutRoot<PlayIntentButtonStack.SmartHStack>, ForEach<[SymbolButton.Intent], String, PlayIntentButtonWrapper>>, _FixedSizeLayout> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<_VariadicView.Tree<_LayoutRoot<PlayIntentButtonStack.SmartHStack>, ForEach<[SymbolButton.Intent], String, PlayIntentButtonWrapper>>, _FixedSizeLayout> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<_VariadicView.Tree<_LayoutRoot<PlayIntentButtonStack.SmartHStack>, ForEach<[SymbolButton.Intent], String, PlayIntentButtonWrapper>>, _FixedSizeLayout> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<_VariadicView.Tree<_LayoutRoot<PlayIntentButtonStack.SmartHStack>, ForEach<[SymbolButton.Intent], String, PlayIntentButtonWrapper>>, _FixedSizeLayout>);
    lazy protocol witness table accessor for type _VariadicView.Tree<_LayoutRoot<PlayIntentButtonStack.SmartHStack>, ForEach<[SymbolButton.Intent], String, PlayIntentButtonWrapper>> and conformance <> _VariadicView.Tree<A, B>();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<_VariadicView.Tree<_LayoutRoot<PlayIntentButtonStack.SmartHStack>, ForEach<[SymbolButton.Intent], String, PlayIntentButtonWrapper>>, _FixedSizeLayout> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type _VariadicView.Tree<_LayoutRoot<PlayIntentButtonStack.SmartHStack>, ForEach<[SymbolButton.Intent], String, PlayIntentButtonWrapper>> and conformance <> _VariadicView.Tree<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type _VariadicView.Tree<_LayoutRoot<PlayIntentButtonStack.SmartHStack>, ForEach<[SymbolButton.Intent], String, PlayIntentButtonWrapper>> and conformance <> _VariadicView.Tree<A, B>;
  if (!lazy protocol witness table cache variable for type _VariadicView.Tree<_LayoutRoot<PlayIntentButtonStack.SmartHStack>, ForEach<[SymbolButton.Intent], String, PlayIntentButtonWrapper>> and conformance <> _VariadicView.Tree<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _VariadicView.Tree<_LayoutRoot<PlayIntentButtonStack.SmartHStack>, ForEach<[SymbolButton.Intent], String, PlayIntentButtonWrapper>>);
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type _LayoutRoot<PlayIntentButtonStack.SmartHStack> and conformance _LayoutRoot<A>, &demangling cache variable for type metadata for _LayoutRoot<PlayIntentButtonStack.SmartHStack>);
    lazy protocol witness table accessor for type SymbolButton.MaterialColor? and conformance <A> A?(&lazy protocol witness table cache variable for type ForEach<[SymbolButton.Intent], String, PlayIntentButtonWrapper> and conformance <> ForEach<A, B, C>, &demangling cache variable for type metadata for ForEach<[SymbolButton.Intent], String, PlayIntentButtonWrapper>, (void (*)(void))lazy protocol witness table accessor for type PlayIntentButtonWrapper and conformance PlayIntentButtonWrapper);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type _VariadicView.Tree<_LayoutRoot<PlayIntentButtonStack.SmartHStack>, ForEach<[SymbolButton.Intent], String, PlayIntentButtonWrapper>> and conformance <> _VariadicView.Tree<A, B>);
  }
  return result;
}

uint64_t lazy protocol witness table accessor for type SymbolButton.MaterialColor? and conformance <A> A?(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t outlined init with take of SymbolButton.Configuration(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SymbolButton.Configuration(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void *type metadata accessor for PlayIntentButtonStack.SmartHStack.Cache()
{
  return &unk_100548CF8;
}

uint64_t PlaylistCovers.CarouselItem.itemType.getter@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of PlaylistCovers.CarouselItem.CarouselItemType(v1, a1);
}

uint64_t outlined init with copy of PlaylistCovers.CarouselItem.CarouselItemType(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t PlaylistCovers.CarouselItem.itemType.setter(uint64_t a1)
{
  return outlined assign with take of PlaylistCovers.CarouselItem.CarouselItemType(a1, v1);
}

uint64_t outlined assign with take of PlaylistCovers.CarouselItem.CarouselItemType(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t PlaylistCovers.CarouselItem.pageIndicator.getter@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of (String, Any)(v1 + 80, a1, &demangling cache variable for type metadata for PageIndicator?);
}

uint64_t PlaylistCovers.CarouselItem.pageIndicator.setter(uint64_t a1)
{
  return outlined assign with take of PageIndicator?(a1, v1 + 80);
}

uint64_t outlined assign with take of PageIndicator?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PageIndicator?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

__n128 PlaylistCovers.CarouselItem.init(itemType:pageIndicator:)@<Q0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  outlined init with take of PageIndicator?(a2, (uint64_t)v14);
  __n128 v11 = (__n128)v14[1];
  long long v12 = v14[0];
  uint64_t v5 = v15;
  outlined init with take of PlaylistCovers.CarouselItem.CarouselItemType(a1, v13);
  long long v6 = v13[1];
  long long v7 = v13[2];
  long long v8 = v13[3];
  long long v9 = v13[4];
  *(_OWORD *)a3 = v13[0];
  *(_OWORD *)(a3 + 16) = v6;
  *(_OWORD *)(a3 + 32) = v7;
  *(_OWORD *)(a3 + 48) = v8;
  *(_OWORD *)(a3 + 64) = v9;
  *(_OWORD *)(a3 + 80) = v12;
  __n128 result = v11;
  *(__n128 *)(a3 + 96) = v11;
  *(void *)(a3 + 112) = v5;
  return result;
}

uint64_t outlined init with take of PageIndicator?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PageIndicator?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

_OWORD *outlined init with take of PlaylistCovers.CarouselItem.CarouselItemType(_OWORD *a1, _OWORD *a2)
{
  *a2 = *a1;
  long long v2 = a1[1];
  long long v3 = a1[2];
  long long v4 = a1[4];
  a2[3] = a1[3];
  a2[4] = v4;
  a2[1] = v2;
  a2[2] = v3;
  return a2;
}

uint64_t static PlaylistCovers.CarouselItem.CarouselItemType.__derived_enum_equals(_:_:)(_OWORD *a1, _OWORD *a2)
{
  outlined init with take of PlaylistCovers.CarouselItem.CarouselItemType(a1, v8);
  if (*(void *)&v8[0])
  {
    v9[2] = v8[2];
    v9[3] = v8[3];
    v9[4] = v8[4];
    v9[0] = v8[0];
    v9[1] = v8[1];
    outlined init with take of PlaylistCovers.CarouselItem.CarouselItemType(a2, v6);
    if (*(void *)&v6[0])
    {
      v7[2] = v6[2];
      v7[3] = v6[3];
      _OWORD v7[4] = v6[4];
      v7[0] = v6[0];
      v7[1] = v6[1];
      outlined retain of PlaylistCovers.CarouselItem.CarouselItemType(a1, (void (*)(void, void, void, void, void, void, void, void, void, void))outlined copy of PlaylistCovers.CarouselItem.CarouselItemType);
      outlined retain of PlaylistCovers.CarouselItem.CarouselItemType(a2, (void (*)(void, void, void, void, void, void, void, void, void, void))outlined copy of PlaylistCovers.CarouselItem.CarouselItemType);
      char v4 = static PlaylistCovers.Cover.__derived_struct_equals(_:_:)(v9, v7);
      outlined retain of PlaylistCovers.CarouselItem.CarouselItemType(a2, (void (*)(void, void, void, void, void, void, void, void, void, void))outlined consume of PlaylistCovers.CarouselItem.CarouselItemType);
      outlined retain of PlaylistCovers.CarouselItem.CarouselItemType(a1, (void (*)(void, void, void, void, void, void, void, void, void, void))outlined consume of PlaylistCovers.CarouselItem.CarouselItemType);
    }
    else
    {
      char v4 = 0;
    }
  }
  else
  {
    outlined init with take of PlaylistCovers.CarouselItem.CarouselItemType(a2, v9);
    char v4 = *(void *)&v9[0] == 0;
  }
  return v4 & 1;
}

void *outlined retain of PlaylistCovers.CarouselItem.CarouselItemType(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void, void))
{
  return a1;
}

void *outlined consume of PlaylistCovers.CarouselItem.CarouselItemType(void *result, uint64_t a2, void *a3, void *a4, void *a5, void *a6, void *a7, void *a8)
{
  if (result)
  {

    outlined consume of PlaylistCovers.Cover.Representation?(a2, a3, a4, a5, a6, a7, a8);
    return (void *)swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance PlaylistCovers.CarouselItem.CarouselItemType(uint64_t a1, uint64_t a2)
{
  long long v2 = *(void **)a1;
  long long v3 = *(void **)a2;
  if (*(void *)a1)
  {
    uint64_t v4 = *(void *)(a1 + 8);
    uint64_t v5 = *(void **)(a1 + 16);
    long long v6 = *(void **)(a1 + 24);
    long long v7 = *(void **)(a1 + 32);
    long long v8 = *(void **)(a1 + 40);
    long long v9 = *(void **)(a1 + 48);
    uint64_t v10 = *(void **)(a1 + 56);
    uint64_t v11 = *(void *)(a1 + 64);
    uint64_t v12 = *(void *)(a1 + 72);
    uint64_t v13 = *(void *)(a2 + 8);
    uint64_t v14 = *(void **)(a2 + 16);
    uint64_t v15 = *(void **)(a2 + 24);
    double v16 = *(void **)(a2 + 32);
    double v17 = *(void **)(a2 + 40);
    double v18 = *(void **)(a2 + 48);
    double v19 = *(void **)(a2 + 56);
    uint64_t v20 = *(void *)(a2 + 64);
    uint64_t v21 = *(void *)(a2 + 72);
    v35[0] = *(void *)a1;
    v35[1] = v4;
    _OWORD v35[2] = v5;
    v35[3] = v6;
    v35[4] = v7;
    v35[5] = v8;
    v35[6] = v9;
    v35[7] = v10;
    v35[8] = v11;
    v35[9] = v12;
    if (v3)
    {
      v36[0] = v3;
      v36[1] = v13;
      v36[2] = v14;
      v36[3] = v15;
      v36[4] = v16;
      v36[5] = v17;
      v36[6] = v18;
      v36[7] = v19;
      v36[8] = v20;
      v36[9] = v21;
      BOOL v33 = v6;
      uint64_t v34 = v5;
      id v27 = v14;
      double v31 = v8;
      uint64_t v32 = v7;
      double v26 = v16;
      double v29 = v10;
      double v30 = v9;
      double v22 = v19;
      uint64_t v28 = v4;
      uint64_t v23 = v13;
      outlined copy of PlaylistCovers.CarouselItem.CarouselItemType(v2, v4, v5, v6, v7, v8, v9, v10);
      outlined copy of PlaylistCovers.CarouselItem.CarouselItemType(v3, v23, v14, v15, v26, v17, v18, v22);
      char v24 = static PlaylistCovers.Cover.__derived_struct_equals(_:_:)(v35, v36);
      outlined consume of PlaylistCovers.CarouselItem.CarouselItemType(v3, v23, v27, v15, v26, v17, v18, v22);
      outlined consume of PlaylistCovers.CarouselItem.CarouselItemType(v2, v28, v34, v33, v32, v31, v30, v29);
    }
    else
    {
      char v24 = 0;
    }
  }
  else
  {
    char v24 = v3 == 0;
  }
  return v24 & 1;
}

void PlaylistCovers.CarouselItem.hash(into:)()
{
  outlined init with take of PlaylistCovers.CarouselItem.CarouselItemType(v0, v8);
  outlined init with take of PlaylistCovers.CarouselItem.CarouselItemType(v8, &v16);
  if ((void)v16)
  {
    uint64_t v1 = v17;
    if (v17)
    {
      long long v3 = v21;
      long long v2 = v22;
      uint64_t v5 = v19;
      uint64_t v4 = v20;
      long long v6 = v18;
      uint64_t v7 = *((void *)&v16 + 1);
      char v9 = BYTE8(v16);
      uint64_t v10 = v17;
      uint64_t v11 = v18;
      uint64_t v12 = v19;
      uint64_t v13 = v20;
      uint64_t v14 = v21;
      uint64_t v15 = v22;
      Hasher._combine(_:)(1u);
      outlined retain of PlaylistCovers.CarouselItem.CarouselItemType(v8, (void (*)(void, void, void, void, void, void, void, void, void, void))outlined copy of PlaylistCovers.CarouselItem.CarouselItemType);
      outlined copy of PlaylistCovers.Cover.Representation?(v7, v1, v6, v5, v4, v3, v2);
      PlaylistCovers.Cover.Representation.hash(into:)();
      outlined retain of PlaylistCovers.CarouselItem.CarouselItemType(v8, (void (*)(void, void, void, void, void, void, void, void, void, void))outlined consume of PlaylistCovers.CarouselItem.CarouselItemType);
      outlined consume of PlaylistCovers.Cover.Representation?(v7, v1, v6, v5, v4, v3, v2);
    }
    else
    {
      Hasher._combine(_:)(0);
    }
  }
  else
  {
    String.hash(into:)();
  }
}

uint64_t static PlaylistCovers.CarouselItem.== infix(_:_:)(_OWORD *a1, _OWORD *a2)
{
  outlined init with take of PlaylistCovers.CarouselItem.CarouselItemType(a1, v6);
  outlined init with take of PlaylistCovers.CarouselItem.CarouselItemType(a2, v5);
  outlined init with take of PlaylistCovers.CarouselItem.CarouselItemType(v6, v9);
  if (*(void *)&v9[0])
  {
    v7[2] = v9[2];
    v7[3] = v9[3];
    _OWORD v7[4] = v9[4];
    v7[0] = v9[0];
    v7[1] = v9[1];
    outlined init with take of PlaylistCovers.CarouselItem.CarouselItemType(v5, v10);
    if (*(void *)&v10[0])
    {
      v8[2] = v10[2];
      v8[3] = v10[3];
      _OWORD v8[4] = v10[4];
      v8[0] = v10[0];
      v8[1] = v10[1];
      outlined retain of PlaylistCovers.CarouselItem.CarouselItemType(v6, (void (*)(void, void, void, void, void, void, void, void, void, void))outlined copy of PlaylistCovers.CarouselItem.CarouselItemType);
      outlined retain of PlaylistCovers.CarouselItem.CarouselItemType(v5, (void (*)(void, void, void, void, void, void, void, void, void, void))outlined copy of PlaylistCovers.CarouselItem.CarouselItemType);
      char v3 = static PlaylistCovers.Cover.__derived_struct_equals(_:_:)(v7, v8);
      outlined retain of PlaylistCovers.CarouselItem.CarouselItemType(v5, (void (*)(void, void, void, void, void, void, void, void, void, void))outlined consume of PlaylistCovers.CarouselItem.CarouselItemType);
      outlined retain of PlaylistCovers.CarouselItem.CarouselItemType(v6, (void (*)(void, void, void, void, void, void, void, void, void, void))outlined consume of PlaylistCovers.CarouselItem.CarouselItemType);
    }
    else
    {
      char v3 = 0;
    }
  }
  else
  {
    outlined init with take of PlaylistCovers.CarouselItem.CarouselItemType(v5, v10);
    char v3 = *(void *)&v10[0] == 0;
  }
  return v3 & 1;
}

void *PlaylistCovers.CarouselItem.cover.getter@<X0>(void *a1@<X8>)
{
  outlined init with take of PlaylistCovers.CarouselItem.CarouselItemType(v1, v14);
  outlined init with take of PlaylistCovers.CarouselItem.CarouselItemType(v14, &v15);
  uint64_t v3 = v15;
  if ((void)v15)
  {
    uint64_t v4 = v16;
    uint64_t v13 = *((void *)&v15 + 1);
    uint64_t v5 = v17;
    uint64_t v6 = v18;
    uint64_t v7 = v19;
    uint64_t v8 = v20;
    uint64_t v9 = v21;
    uint64_t v10 = v22;
    uint64_t v11 = v23;
  }
  else
  {
    uint64_t v13 = 0;
    uint64_t v4 = 0;
    uint64_t v5 = 0;
    uint64_t v6 = 0;
    uint64_t v7 = 0;
    uint64_t v8 = 0;
    uint64_t v9 = 0;
    uint64_t v10 = 0;
    uint64_t v11 = 0;
  }
  __n128 result = outlined retain of PlaylistCovers.CarouselItem.CarouselItemType(v14, (void (*)(void, void, void, void, void, void, void, void, void, void))outlined copy of PlaylistCovers.CarouselItem.CarouselItemType);
  *a1 = v3;
  a1[1] = v13;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  a1[7] = v9;
  a1[8] = v10;
  a1[9] = v11;
  return result;
}

double static PlaylistCovers.CarouselItem.picker.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = Image.init(systemName:)();
  uint64_t v3 = static Font.caption2.getter();
  uint64_t v4 = static Animation.spring(response:dampingFraction:blendDuration:)();
  static Color.primary.getter();
  uint64_t v5 = Color.opacity(_:)();
  swift_release();
  static Color.primary.getter();
  uint64_t v6 = Color.opacity(_:)();
  swift_release();
  double result = 0.0;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(void *)(a1 + 80) = v2;
  *(void *)(a1 + 88) = v3;
  *(void *)(a1 + 96) = v4;
  *(void *)(a1 + 104) = v5;
  *(void *)(a1 + 112) = v6;
  return result;
}

double static PlaylistCovers.CarouselItem.tracksTiled(image:)@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  type metadata accessor for Locale();
  __chkstk_darwin();
  uint64_t v4 = type metadata accessor for String.LocalizationValue();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin();
  uint64_t v9 = &v21[-v8];
  id v10 = a1;
  String.LocalizationValue.init(stringLiteral:)();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v5 + 16))(v7, v9, v4);
  if (one-time initialization token for module != -1) {
    swift_once();
  }
  id v11 = (id)static NSBundle.module;
  static Locale.current.getter();
  uint64_t v12 = String.init(localized:table:bundle:locale:comment:)();
  uint64_t v14 = v13;
  (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v9, v4);
  PlaylistCovers.Cover.init(image:accessibilityLabel:)((uint64_t)v10, v12, v14, (uint64_t)&v22);
  uint64_t v15 = v27;
  long long v16 = v23;
  long long v17 = v24;
  long long v18 = v25;
  long long v19 = v26;
  *(void *)a2 = v22;
  *(_OWORD *)(a2 + 8) = v16;
  *(_OWORD *)(a2 + 24) = v17;
  *(_OWORD *)(a2 + 40) = v18;
  *(_OWORD *)(a2 + 56) = v19;
  *(void *)(a2 + 72) = v15;
  double result = 0.0;
  *(_OWORD *)(a2 + 80) = 0u;
  *(_OWORD *)(a2 + 96) = 0u;
  *(void *)(a2 + 112) = 0;
  return result;
}

Swift::Int PlaylistCovers.CarouselItem.hashValue.getter()
{
  Hasher.init(_seed:)();
  outlined init with take of PlaylistCovers.CarouselItem.CarouselItemType(v0, v9);
  outlined init with take of PlaylistCovers.CarouselItem.CarouselItemType(v9, &v17);
  if ((void)v17)
  {
    uint64_t v1 = v18;
    if (v18)
    {
      uint64_t v3 = v22;
      uint64_t v2 = v23;
      uint64_t v5 = v20;
      uint64_t v4 = v21;
      uint64_t v6 = v19;
      uint64_t v7 = *((void *)&v17 + 1);
      char v10 = BYTE8(v17);
      id v11 = v18;
      uint64_t v12 = v19;
      uint64_t v13 = v20;
      uint64_t v14 = v21;
      uint64_t v15 = v22;
      long long v16 = v23;
      Hasher._combine(_:)(1u);
      outlined retain of PlaylistCovers.CarouselItem.CarouselItemType(v9, (void (*)(void, void, void, void, void, void, void, void, void, void))outlined copy of PlaylistCovers.CarouselItem.CarouselItemType);
      outlined copy of PlaylistCovers.Cover.Representation?(v7, v1, v6, v5, v4, v3, v2);
      PlaylistCovers.Cover.Representation.hash(into:)();
      outlined retain of PlaylistCovers.CarouselItem.CarouselItemType(v9, (void (*)(void, void, void, void, void, void, void, void, void, void))outlined consume of PlaylistCovers.CarouselItem.CarouselItemType);
      outlined consume of PlaylistCovers.Cover.Representation?(v7, v1, v6, v5, v4, v3, v2);
    }
    else
    {
      Hasher._combine(_:)(0);
    }
  }
  else
  {
    String.hash(into:)();
  }
  return Hasher._finalize()();
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance PlaylistCovers.CarouselItem()
{
  return PlaylistCovers.CarouselItem.hashValue.getter();
}

void protocol witness for Hashable.hash(into:) in conformance PlaylistCovers.CarouselItem()
{
  uint64_t v1 = *(void **)v0;
  if (*(void *)v0)
  {
    uint64_t v2 = *(void **)(v0 + 16);
    if (v2)
    {
      uint64_t v3 = *(void **)(v0 + 24);
      uint64_t v4 = *(void **)(v0 + 32);
      uint64_t v5 = *(void **)(v0 + 40);
      uint64_t v6 = *(void **)(v0 + 48);
      uint64_t v7 = *(void **)(v0 + 56);
      uint64_t v8 = *(void *)(v0 + 8);
      Hasher._combine(_:)(1u);
      outlined copy of PlaylistCovers.CarouselItem.CarouselItemType(v1, v8, v2, v3, v4, v5, v6, v7);
      outlined copy of PlaylistCovers.Cover.Representation?(v8, v2, v3, v4, v5, v6, v7);
      PlaylistCovers.Cover.Representation.hash(into:)();
      outlined consume of PlaylistCovers.CarouselItem.CarouselItemType(v1, v8, v2, v3, v4, v5, v6, v7);
      outlined consume of PlaylistCovers.Cover.Representation?(v8, v2, v3, v4, v5, v6, v7);
    }
    else
    {
      Hasher._combine(_:)(0);
    }
  }
  else
  {
    String.hash(into:)();
  }
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance PlaylistCovers.CarouselItem()
{
  uint64_t v1 = *(void **)v0;
  uint64_t v2 = *(void *)(v0 + 8);
  uint64_t v3 = *(void **)(v0 + 16);
  uint64_t v4 = *(void **)(v0 + 24);
  uint64_t v5 = *(void **)(v0 + 32);
  uint64_t v6 = *(void **)(v0 + 40);
  uint64_t v7 = *(void **)(v0 + 48);
  uint64_t v8 = *(void **)(v0 + 56);
  Hasher.init(_seed:)();
  if (v1)
  {
    if (v3)
    {
      Hasher._combine(_:)(1u);
      outlined copy of PlaylistCovers.CarouselItem.CarouselItemType(v1, v2, v3, v4, v5, v6, v7, v8);
      outlined copy of PlaylistCovers.Cover.Representation?(v2, v3, v4, v5, v6, v7, v8);
      PlaylistCovers.Cover.Representation.hash(into:)();
      outlined consume of PlaylistCovers.CarouselItem.CarouselItemType(v1, v2, v3, v4, v5, v6, v7, v8);
      outlined consume of PlaylistCovers.Cover.Representation?(v2, v3, v4, v5, v6, v7, v8);
    }
    else
    {
      Hasher._combine(_:)(0);
    }
  }
  else
  {
    String.hash(into:)();
  }
  return Hasher._finalize()();
}

uint64_t static PlaylistCovers.carouselItems(from:playlistTitle:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[4] = a2;
  v3[5] = a3;
  v3[3] = a1;
  return _swift_task_switch(static PlaylistCovers.carouselItems(from:playlistTitle:), 0, 0);
}

uint64_t static PlaylistCovers.carouselItems(from:playlistTitle:)()
{
  uint64_t v1 = *(void *)(v0 + 40);
  long long v7 = *(_OWORD *)(v0 + 24);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (PlaylistCovers.Cover.Representation, UIImage));
  uint64_t v3 = swift_task_alloc();
  *(void *)(v0 + 48) = v3;
  *(_OWORD *)(v3 + 16) = v7;
  *(void *)(v3 + 32) = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [PlaylistCovers.CarouselItem]);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v5;
  *uint64_t v5 = v0;
  v5[1] = static PlaylistCovers.carouselItems(from:playlistTitle:);
  return withTaskGroup<A, B>(of:returning:isolation:body:)(v0 + 16, v2, v4, 0, 0, &async function pointer to partial apply for closure #1 in static PlaylistCovers.carouselItems(from:playlistTitle:), v3, v2);
}

{
  uint64_t v1;

  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(static PlaylistCovers.coverRepresentations(size:expressions:colors:graphicsFormat:), 0, 0);
}

uint64_t closure #1 in static PlaylistCovers.carouselItems(from:playlistTitle:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[45] = a4;
  v5[46] = a5;
  v5[43] = a2;
  v5[44] = a3;
  v5[42] = a1;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TaskGroup<(PlaylistCovers.Cover.Representation, UIImage)>.Iterator);
  v5[47] = v6;
  v5[48] = *(void *)(v6 - 8);
  v5[49] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&_sScPSgMD_2);
  v5[50] = swift_task_alloc();
  v5[51] = swift_task_alloc();
  return _swift_task_switch(closure #1 in static PlaylistCovers.carouselItems(from:playlistTitle:), 0, 0);
}

uint64_t closure #1 in static PlaylistCovers.carouselItems(from:playlistTitle:)()
{
  uint64_t v1 = *(void *)(v0 + 352);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = (_OWORD *)(v0 + 216);
    uint64_t v4 = (long long *)(v1 + 32);
    uint64_t v32 = type metadata accessor for TaskPriority();
    uint64_t v5 = *(void *)(v32 - 8);
    double v31 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56);
    double v30 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    double v29 = (void (**)(uint64_t, uint64_t))(v5 + 8);
    swift_bridgeObjectRetain();
    while (1)
    {
      uint64_t v7 = *(void *)(v0 + 408);
      uint64_t v9 = *(void *)(v0 + 360);
      uint64_t v8 = *(void *)(v0 + 368);
      long long v11 = v4[1];
      long long v10 = v4[2];
      long long v12 = *v4;
      *(void *)(v0 + 264) = *((void *)v4 + 6);
      *(_OWORD *)(v0 + 232) = v11;
      *(_OWORD *)(v0 + 248) = v10;
      *uint64_t v3 = v12;
      v31(v7, 1, 1, v32);
      uint64_t v13 = swift_allocObject();
      *(void *)(v13 + 16) = 0;
      uint64_t v14 = (void *)(v13 + 16);
      *(void *)(v13 + 24) = 0;
      long long v15 = *(_OWORD *)(v0 + 232);
      *(_OWORD *)(v13 + 32) = *v3;
      *(_OWORD *)(v13 + 48) = v15;
      *(_OWORD *)(v13 + 64) = *(_OWORD *)(v0 + 248);
      *(void *)(v13 + 80) = *(void *)(v0 + 264);
      *(void *)(v13 + 88) = v9;
      *(void *)(v13 + 96) = v8;
      outlined retain of PlaylistCovers.Cover.Representation(v0 + 216);
      outlined retain of PlaylistCovers.Cover.Representation(v0 + 216);
      swift_bridgeObjectRetain();
      if (swift_taskGroup_addPending()) {
        break;
      }
LABEL_3:
      swift_release();
      uint64_t v6 = *(void *)(v0 + 408);
      outlined release of PlaylistCovers.Cover.Representation(v0 + 216);
      _sScPSgWOh_1(v6);
      uint64_t v4 = (long long *)((char *)v4 + 56);
      if (!--v2)
      {
        swift_bridgeObjectRelease();
        goto LABEL_14;
      }
    }
    uint64_t v16 = *(void *)(v0 + 400);
    outlined init with copy of (String, Any)(*(void *)(v0 + 408), v16, &_sScPSgMD_2);
    int v17 = (*v30)(v16, 1, v32);
    uint64_t v18 = *(void *)(v0 + 400);
    if (v17 == 1)
    {
      _sScPSgWOh_1(*(void *)(v0 + 400));
      if (*v14)
      {
LABEL_7:
        swift_getObjectType();
        swift_unknownObjectRetain();
        uint64_t v19 = dispatch thunk of Actor.unownedExecutor.getter();
        uint64_t v21 = v20;
        swift_unknownObjectRelease();
LABEL_10:
        uint64_t v22 = **(void **)(v0 + 344);
        uint64_t v23 = swift_allocObject();
        *(void *)(v23 + 16) = &async function pointer to partial apply for closure #1 in closure #1 in static PlaylistCovers.carouselItems(from:playlistTitle:);
        *(void *)(v23 + 24) = v13;
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (PlaylistCovers.Cover.Representation, UIImage));
        uint64_t v24 = v21 | v19;
        if (v21 | v19)
        {
          uint64_t v24 = v0 + 272;
          *(void *)(v0 + 272) = 0;
          *(void *)(v0 + 280) = 0;
          *(void *)(v0 + 288) = v19;
          *(void *)(v0 + 296) = v21;
        }
        *(void *)(v0 + 304) = 1;
        *(void *)(v0 + 312) = v24;
        *(void *)(v0 + 320) = v22;
        swift_task_create();
        goto LABEL_3;
      }
    }
    else
    {
      TaskPriority.rawValue.getter();
      (*v29)(v18, v32);
      if (*v14) {
        goto LABEL_7;
      }
    }
    uint64_t v19 = 0;
    uint64_t v21 = 0;
    goto LABEL_10;
  }
LABEL_14:
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (PlaylistCovers.Cover.Representation, UIImage));
  TaskGroup.makeAsyncIterator()();
  *(void *)(v0 + 416) = _swiftEmptyDictionarySingleton;
  unint64_t v25 = lazy protocol witness table accessor for type TaskGroup<(PlaylistCovers.Cover.Representation, UIImage)>.Iterator and conformance TaskGroup<A>.Iterator();
  long long v26 = (void *)swift_task_alloc();
  *(void *)(v0 + 424) = v26;
  void *v26 = v0;
  v26[1] = closure #1 in static PlaylistCovers.carouselItems(from:playlistTitle:);
  uint64_t v27 = *(void *)(v0 + 376);
  return dispatch thunk of AsyncIteratorProtocol.next()(v0 + 96, v27, v25);
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v8;

  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 432) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v4 = v2[48];
    uint64_t v3 = v2[49];
    uint64_t v5 = v2[47];
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    uint64_t v6 = CFRange.init(_:);
  }
  else
  {
    uint64_t v6 = closure #1 in static PlaylistCovers.carouselItems(from:playlistTitle:);
  }
  return _swift_task_switch(v6, 0, 0);
}

{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  char isUniquelyReferenced_nonNull_native;
  long long *v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  char v29;
  uint64_t v31;
  uint64_t v32;
  char **v33;
  char *v34;
  uint64_t (*v35)(void);
  void *v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  uint64_t v43;
  long long v44;
  long long v45;
  long long v46;
  uint64_t v47;
  uint64_t v48;
  BOOL v49;
  uint64_t v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  unint64_t v57;
  void *v58;
  void *v59;
  id v60;
  id v61;
  id v62;
  void *v63;
  void *v64;
  void *v65;
  void *v66;
  void *v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  id v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  id v82;
  id v83;
  void *v84;
  uint64_t v85;

  uint64_t v1 = *(void **)(v0 + 104);
  if (v1)
  {
    uint64_t v2 = *(void **)(v0 + 112);
    uint64_t v3 = *(void **)(v0 + 120);
    uint64_t v5 = *(void **)(v0 + 128);
    uint64_t v4 = *(void **)(v0 + 136);
    uint64_t v6 = *(void **)(v0 + 144);
    uint64_t v84 = *(void **)(v0 + 152);
    uint64_t v80 = *(void *)(v0 + 416);
    double v68 = *(void **)(v0 + 104);
    double v69 = *(void *)(v0 + 96);
    *(unsigned char *)(v0 + 160) = v69;
    *(void *)(v0 + 168) = v1;
    *(void *)(v0 + 176) = v2;
    *(void *)(v0 + 184) = v3;
    *(void *)(v0 + 192) = v5;
    *(void *)(v0 + 200) = v4;
    *(void *)(v0 + 208) = v6;
    uint64_t v7 = v1;
    CGFloat v67 = v2;
    uint64_t v8 = v2;
    CGFloat v66 = v3;
    uint64_t v9 = v3;
    CGFloat v65 = v5;
    long long v10 = v5;
    CGFloat v64 = v4;
    long long v11 = v4;
    double v63 = v6;
    long long v12 = v6;
    uint64_t v13 = v7;
    uint64_t v14 = v8;
    long long v15 = v9;
    uint64_t v16 = v10;
    int v17 = v11;
    uint64_t v18 = v12;
    uint64_t v19 = v84;
    uint64_t v78 = v13;
    double v60 = v14;
    double v61 = v15;
    double v62 = v16;
    int v83 = v17;
    char v82 = v18;
    PlaylistCovers.Cover.init(image:representation:)((uint64_t)v19, (unsigned __int8 *)(v0 + 160), v0 + 16);
    unint64_t v70 = *(void *)(v0 + 16);
    uint64_t v71 = *(void *)(v0 + 24);
    uint64_t v72 = *(void *)(v0 + 32);
    id v73 = *(void *)(v0 + 40);
    uint64_t v74 = *(void *)(v0 + 48);
    uint64_t v75 = *(void *)(v0 + 56);
    id v76 = *(void *)(v0 + 64);
    uint64_t v77 = *(void *)(v0 + 72);
    uint64_t v20 = *(void *)(v0 + 88);
    uint64_t v79 = *(void *)(v0 + 80);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v0 + 328) = v80;
    uint64_t v22 = (long long *)(v0 + 160);
    unint64_t v25 = specialized __RawDictionaryStorage.find<A>(_:)(v0 + 160);
    long long v26 = *(void *)(v80 + 16);
    uint64_t v27 = (v23 & 1) == 0;
    uint64_t v28 = v26 + v27;
    if (__OFADD__(v26, v27))
    {
      __break(1u);
    }
    else
    {
      double v29 = v23;
      uint64_t v81 = v20;
      if (*(void *)(*(void *)(v0 + 416) + 24) >= v28)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          uint64_t v28 = (uint64_t)specialized _NativeDictionary.copy()();
        }
      }
      else
      {
        specialized _NativeDictionary._copyOrMoveAndResize(capacity:moveElements:)(v28, isUniquelyReferenced_nonNull_native);
        uint64_t v28 = specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)v22);
        if ((v29 & 1) != (v23 & 1))
        {
          return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
        }
        unint64_t v25 = v28;
      }
      CGFloat v59 = v19;
      double v36 = *(void **)(v0 + 328);
      if (v29)
      {
        CGFloat v37 = v36[7] + 120 * v25;
        uint64_t v38 = *(void *)(v37 + 80);
        outlined consume of PlaylistCovers.CarouselItem.CarouselItemType(*(void **)v37, *(void *)(v37 + 8), *(void **)(v37 + 16), *(void **)(v37 + 24), *(void **)(v37 + 32), *(void **)(v37 + 40), *(void **)(v37 + 48), *(void **)(v37 + 56));
        outlined consume of PageIndicator?(v38);
        *(void *)CGFloat v37 = v70;
        *(void *)(v37 + 8) = v71;
        *(void *)(v37 + 16) = v72;
        *(void *)(v37 + 24) = v73;
        *(void *)(v37 + 32) = v74;
        *(void *)(v37 + 40) = v75;
        double v39 = v78;
        *(void *)(v37 + 48) = v76;
        *(void *)(v37 + 56) = v77;
        *(void *)(v37 + 64) = v79;
        *(void *)(v37 + 72) = v81;
        *(_OWORD *)(v37 + 80) = 0u;
        *(_OWORD *)(v37 + 96) = 0u;
        *(void *)(v37 + 112) = 0;
        uint64_t v41 = v61;
        uint64_t v40 = v62;
        double v42 = v60;
        goto LABEL_18;
      }
      v36[(v25 >> 6) + 8] |= 1 << v25;
      id v43 = v36[6] + 56 * v25;
      uint64_t v44 = *v22;
      uint64_t v45 = *(_OWORD *)(v0 + 176);
      double v46 = *(_OWORD *)(v0 + 192);
      *(void *)(v43 + 48) = *(void *)(v0 + 208);
      *(_OWORD *)(v43 + 16) = v45;
      *(_OWORD *)(v43 + 32) = v46;
      *(_OWORD *)id v43 = v44;
      double v47 = v36[7] + 120 * v25;
      *(void *)double v47 = v70;
      *(void *)(v47 + 8) = v71;
      *(void *)(v47 + 16) = v72;
      *(void *)(v47 + 24) = v73;
      *(void *)(v47 + 32) = v74;
      *(void *)(v47 + 40) = v75;
      double v39 = v78;
      *(void *)(v47 + 48) = v76;
      *(void *)(v47 + 56) = v77;
      *(void *)(v47 + 64) = v79;
      *(void *)(v47 + 72) = v81;
      *(void *)(v47 + 112) = 0;
      *(_OWORD *)(v47 + 80) = 0u;
      *(_OWORD *)(v47 + 96) = 0u;
      double v48 = v36[2];
      char v49 = __OFADD__(v48, 1);
      int v50 = v48 + 1;
      if (!v49)
      {
        v36[2] = v50;
        double v51 = v78;
        double v42 = v60;
        uint64_t v52 = v60;
        uint64_t v41 = v61;
        uint64_t v53 = v61;
        uint64_t v40 = v62;
        double v54 = v62;
        int v55 = v83;
        uint64_t v56 = v82;
LABEL_18:
        swift_bridgeObjectRelease();

        outlined consume of (PlaylistCovers.Cover.Representation, UIImage)?(v69, v68, v67, v66, v65, v64, v63, v84);
        *(void *)(v0 + 416) = v36;
        double v57 = lazy protocol witness table accessor for type TaskGroup<(PlaylistCovers.Cover.Representation, UIImage)>.Iterator and conformance TaskGroup<A>.Iterator();
        CGFloat v58 = (void *)swift_task_alloc();
        *(void *)(v0 + 424) = v58;
        *CGFloat v58 = v0;
        v58[1] = closure #1 in static PlaylistCovers.carouselItems(from:playlistTitle:);
        uint64_t v23 = *(void *)(v0 + 376);
        uint64_t v28 = v0 + 96;
        uint64_t v24 = v57;
        return dispatch thunk of AsyncIteratorProtocol.next()(v28, v23, v24);
      }
    }
    __break(1u);
    return dispatch thunk of AsyncIteratorProtocol.next()(v28, v23, v24);
  }
  double v31 = *(void *)(v0 + 416);
  uint64_t v32 = *(void *)(v0 + 352);
  uint64_t v33 = *(char ***)(v0 + 336);
  (*(void (**)(void, void))(*(void *)(v0 + 384) + 8))(*(void *)(v0 + 392), *(void *)(v0 + 376));
  outlined consume of (PlaylistCovers.Cover.Representation, UIImage)?(*(void *)(v0 + 96), *(void **)(v0 + 104), *(void **)(v0 + 112), *(void **)(v0 + 120), *(void **)(v0 + 128), *(void **)(v0 + 136), *(void **)(v0 + 144), *(void **)(v0 + 152));
  swift_bridgeObjectRetain();
  uint64_t v34 = specialized Sequence.compactMap<A>(_:)(v32, v31);
  swift_bridgeObjectRelease_n();
  *uint64_t v33 = v34;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  double v35 = *(uint64_t (**)(void))(v0 + 8);
  return v35();
}

uint64_t partial apply for closure #1 in static PlaylistCovers.carouselItems(from:playlistTitle:)(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = v2[2];
  uint64_t v7 = v2[3];
  uint64_t v8 = v2[4];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v9;
  *uint64_t v9 = v3;
  v9[1] = closure #3 in static Actions.ReportConcern.action(context:);
  return closure #1 in static PlaylistCovers.carouselItems(from:playlistTitle:)(a1, a2, v6, v7, v8);
}

unint64_t lazy protocol witness table accessor for type PlaylistCovers.CarouselItem and conformance PlaylistCovers.CarouselItem()
{
  unint64_t result = lazy protocol witness table cache variable for type PlaylistCovers.CarouselItem and conformance PlaylistCovers.CarouselItem;
  if (!lazy protocol witness table cache variable for type PlaylistCovers.CarouselItem and conformance PlaylistCovers.CarouselItem)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PlaylistCovers.CarouselItem and conformance PlaylistCovers.CarouselItem);
  }
  return result;
}

uint64_t destroy for PlaylistCovers.CarouselItem(uint64_t a1)
{
  if (*(void *)a1)
  {

    uint64_t v2 = *(void **)(a1 + 16);
    if (v2)
    {
    }
    swift_bridgeObjectRelease();
  }
  uint64_t result = *(void *)(a1 + 80);
  if (result)
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t initializeWithCopy for PlaylistCovers.CarouselItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  if (*(void *)a2)
  {
    *(void *)a1 = v4;
    uint64_t v5 = (_OWORD *)(a1 + 8);
    uint64_t v6 = *(void **)(a2 + 16);
    id v7 = v4;
    if (v6)
    {
      *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
      uint64_t v8 = *(void **)(a2 + 24);
      uint64_t v9 = *(void **)(a2 + 32);
      *(void *)(a1 + 16) = v6;
      *(void *)(a1 + 24) = v8;
      long long v10 = *(void **)(a2 + 40);
      uint64_t v11 = *(void **)(a2 + 48);
      *(void *)(a1 + 32) = v9;
      *(void *)(a1 + 40) = v10;
      long long v12 = *(void **)(a2 + 56);
      *(void *)(a1 + 48) = v11;
      *(void *)(a1 + 56) = v12;
      id v13 = v6;
      id v14 = v8;
      id v15 = v9;
      id v16 = v10;
      id v17 = v11;
      id v18 = v12;
    }
    else
    {
      long long v21 = *(_OWORD *)(a2 + 24);
      *uint64_t v5 = *(_OWORD *)(a2 + 8);
      *(_OWORD *)(a1 + 24) = v21;
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
    }
    uint64_t v22 = *(void *)(a2 + 72);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(void *)(a1 + 72) = v22;
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v19 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v19;
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    long long v20 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v20;
  }
  uint64_t v23 = *(void *)(a2 + 80);
  if (v23)
  {
    uint64_t v24 = *(void *)(a2 + 88);
    uint64_t v25 = *(void *)(a2 + 96);
    *(void *)(a1 + 80) = v23;
    *(void *)(a1 + 88) = v24;
    uint64_t v27 = *(void *)(a2 + 104);
    uint64_t v26 = *(void *)(a2 + 112);
    *(void *)(a1 + 96) = v25;
    *(void *)(a1 + 104) = v27;
    *(void *)(a1 + 112) = v26;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
  }
  else
  {
    long long v28 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v28;
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
  }
  return a1;
}

uint64_t assignWithCopy for PlaylistCovers.CarouselItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  uint64_t v5 = *(void **)a2;
  if (*(void *)a1)
  {
    if (v5)
    {
      *(void *)a1 = v5;
      id v6 = v5;

      id v7 = (_OWORD *)(a1 + 8);
      uint64_t v8 = (long long *)(a2 + 8);
      uint64_t v9 = *(void **)(a1 + 16);
      uint64_t v10 = *(void *)(a2 + 16);
      if (v9)
      {
        if (v10)
        {
          *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
          uint64_t v11 = *(void **)(a2 + 16);
          *(void *)(a1 + 16) = v11;
          id v12 = v11;

          id v13 = *(void **)(a2 + 24);
          id v14 = *(void **)(a1 + 24);
          *(void *)(a1 + 24) = v13;
          id v15 = v13;

          id v16 = *(void **)(a2 + 32);
          id v17 = *(void **)(a1 + 32);
          *(void *)(a1 + 32) = v16;
          id v18 = v16;

          long long v19 = *(void **)(a2 + 40);
          long long v20 = *(void **)(a1 + 40);
          *(void *)(a1 + 40) = v19;
          id v21 = v19;

          uint64_t v22 = *(void **)(a2 + 48);
          uint64_t v23 = *(void **)(a1 + 48);
          *(void *)(a1 + 48) = v22;
          id v24 = v22;

          uint64_t v25 = *(void **)(a2 + 56);
          uint64_t v26 = *(void **)(a1 + 56);
          *(void *)(a1 + 56) = v25;
          id v27 = v25;
        }
        else
        {
          _s9MusicCore14PlaylistCoversO5CoverV14RepresentationVWOh_0(a1 + 8);
          long long v61 = *(_OWORD *)(a2 + 24);
          long long v60 = *(_OWORD *)(a2 + 40);
          long long v62 = *v8;
          *(void *)(a1 + 56) = *(void *)(a2 + 56);
          *(_OWORD *)(a1 + 24) = v61;
          *(_OWORD *)(a1 + 40) = v60;
          *id v7 = v62;
        }
      }
      else if (v10)
      {
        *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
        uint64_t v45 = *(void **)(a2 + 16);
        *(void *)(a1 + 16) = v45;
        double v46 = *(void **)(a2 + 24);
        *(void *)(a1 + 24) = v46;
        double v47 = *(void **)(a2 + 32);
        *(void *)(a1 + 32) = v47;
        double v48 = *(void **)(a2 + 40);
        *(void *)(a1 + 40) = v48;
        char v49 = *(void **)(a2 + 48);
        *(void *)(a1 + 48) = v49;
        int v50 = *(void **)(a2 + 56);
        *(void *)(a1 + 56) = v50;
        id v51 = v45;
        id v52 = v46;
        id v53 = v47;
        id v54 = v48;
        id v55 = v49;
        id v56 = v50;
      }
      else
      {
        long long v66 = *v8;
        long long v67 = *(_OWORD *)(a2 + 24);
        long long v68 = *(_OWORD *)(a2 + 40);
        *(void *)(a1 + 56) = *(void *)(a2 + 56);
        *(_OWORD *)(a1 + 24) = v67;
        *(_OWORD *)(a1 + 40) = v68;
        *id v7 = v66;
      }
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      outlined destroy of PlaylistCovers.Cover(a1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      long long v42 = *(_OWORD *)(a2 + 64);
      long long v44 = *(_OWORD *)(a2 + 16);
      long long v43 = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 64) = v42;
      *(_OWORD *)(a1 + 16) = v44;
      *(_OWORD *)(a1 + 32) = v43;
    }
  }
  else if (v5)
  {
    *(void *)a1 = v5;
    uint64_t v28 = *(void *)(a2 + 16);
    id v29 = v5;
    if (v28)
    {
      *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
      double v30 = *(void **)(a2 + 16);
      *(void *)(a1 + 16) = v30;
      double v31 = *(void **)(a2 + 24);
      *(void *)(a1 + 24) = v31;
      uint64_t v32 = *(void **)(a2 + 32);
      *(void *)(a1 + 32) = v32;
      uint64_t v33 = *(void **)(a2 + 40);
      *(void *)(a1 + 40) = v33;
      uint64_t v34 = *(void **)(a2 + 48);
      *(void *)(a1 + 48) = v34;
      double v35 = *(void **)(a2 + 56);
      *(void *)(a1 + 56) = v35;
      id v36 = v30;
      id v37 = v31;
      id v38 = v32;
      id v39 = v33;
      id v40 = v34;
      id v41 = v35;
    }
    else
    {
      long long v63 = *(_OWORD *)(a2 + 8);
      long long v64 = *(_OWORD *)(a2 + 24);
      long long v65 = *(_OWORD *)(a2 + 40);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(_OWORD *)(a1 + 24) = v64;
      *(_OWORD *)(a1 + 40) = v65;
      *(_OWORD *)(a1 + 8) = v63;
    }
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    long long v57 = *(_OWORD *)(a2 + 16);
    long long v58 = *(_OWORD *)(a2 + 32);
    long long v59 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v59;
    *(_OWORD *)(a1 + 16) = v57;
    *(_OWORD *)(a1 + 32) = v58;
  }
  double v69 = (_OWORD *)(a1 + 80);
  uint64_t v71 = (_OWORD *)(a2 + 80);
  uint64_t v70 = *(void *)(a2 + 80);
  if (*(void *)(a1 + 80))
  {
    if (v70)
    {
      *(void *)(a1 + 80) = v70;
      swift_retain();
      swift_release();
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      swift_retain();
      swift_release();
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      swift_retain();
      swift_release();
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      swift_retain();
      swift_release();
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      swift_retain();
      swift_release();
    }
    else
    {
      outlined destroy of PageIndicator(a1 + 80);
      uint64_t v72 = *(void *)(a2 + 112);
      long long v73 = *(_OWORD *)(a2 + 96);
      *double v69 = *v71;
      *(_OWORD *)(a1 + 96) = v73;
      *(void *)(a1 + 112) = v72;
    }
  }
  else if (v70)
  {
    *(void *)(a1 + 80) = v70;
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
  }
  else
  {
    long long v74 = *v71;
    long long v75 = *(_OWORD *)(a2 + 96);
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    *double v69 = v74;
    *(_OWORD *)(a1 + 96) = v75;
  }
  return a1;
}

uint64_t _s9MusicCore14PlaylistCoversO5CoverV14RepresentationVWOh_0(uint64_t a1)
{
  return a1;
}

uint64_t outlined destroy of PlaylistCovers.Cover(uint64_t a1)
{
  return a1;
}

uint64_t outlined destroy of PageIndicator(uint64_t a1)
{
  return a1;
}

__n128 __swift_memcpy120_8_0(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = (__n128)a2[4];
  long long v6 = a2[5];
  long long v7 = a2[6];
  *(void *)(a1 + 112) = *((void *)a2 + 14);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t assignWithTake for PlaylistCovers.CarouselItem(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)a1;
  if (!*(void *)a1) {
    goto LABEL_7;
  }
  if (!*(void *)a2)
  {
    outlined destroy of PlaylistCovers.Cover(a1);
LABEL_7:
    long long v12 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v12;
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    long long v13 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v13;
    goto LABEL_11;
  }
  *(void *)a1 = *(void *)a2;

  uint64_t v5 = *(void **)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    long long v14 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 24) = v14;
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    goto LABEL_10;
  }
  uint64_t v6 = *(void *)(a2 + 16);
  if (!v6)
  {
    _s9MusicCore14PlaylistCoversO5CoverV14RepresentationVWOh_0(a1 + 8);
    goto LABEL_9;
  }
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = v6;

  long long v7 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);

  uint64_t v8 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);

  uint64_t v9 = *(void **)(a1 + 40);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);

  uint64_t v10 = *(void **)(a1 + 48);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);

  uint64_t v11 = *(void **)(a1 + 56);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);

LABEL_10:
  uint64_t v15 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v15;
  swift_bridgeObjectRelease();
LABEL_11:
  uint64_t v16 = *(void *)(a2 + 80);
  if (!*(void *)(a1 + 80))
  {
LABEL_15:
    long long v17 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v17;
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    return a1;
  }
  if (!v16)
  {
    outlined destroy of PageIndicator(a1 + 80);
    goto LABEL_15;
  }
  *(void *)(a1 + 80) = v16;
  swift_release();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_release();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_release();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_release();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for PlaylistCovers.CarouselItem(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 120)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PlaylistCovers.CarouselItem(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 120) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 120) = 0;
    }
    if (a2) {
      *(void *)__n128 result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PlaylistCovers.CarouselItem()
{
  return &type metadata for PlaylistCovers.CarouselItem;
}

id *destroy for PlaylistCovers.CarouselItem.CarouselItemType(id *result)
{
  if ((unint64_t)*result >= 0xFFFFFFFF)
  {
    uint64_t v1 = result;

    id v2 = v1[2];
    if (v2)
    {
    }
    return (id *)swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for PlaylistCovers.CarouselItem.CarouselItemType(uint64_t a1, uint64_t a2)
{
  int v4 = *(void **)a2;
  if (*(void *)a2 < 0xFFFFFFFFuLL)
  {
    long long v19 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v19;
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    long long v20 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v20;
  }
  else
  {
    *(void *)a1 = v4;
    uint64_t v5 = (_OWORD *)(a1 + 8);
    uint64_t v6 = *(void **)(a2 + 16);
    id v7 = v4;
    if (v6)
    {
      *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
      uint64_t v8 = *(void **)(a2 + 24);
      uint64_t v9 = *(void **)(a2 + 32);
      *(void *)(a1 + 16) = v6;
      *(void *)(a1 + 24) = v8;
      uint64_t v10 = *(void **)(a2 + 40);
      uint64_t v11 = *(void **)(a2 + 48);
      *(void *)(a1 + 32) = v9;
      *(void *)(a1 + 40) = v10;
      long long v12 = *(void **)(a2 + 56);
      *(void *)(a1 + 48) = v11;
      *(void *)(a1 + 56) = v12;
      id v13 = v6;
      id v14 = v8;
      id v15 = v9;
      id v16 = v10;
      id v17 = v11;
      id v18 = v12;
    }
    else
    {
      long long v21 = *(_OWORD *)(a2 + 24);
      *uint64_t v5 = *(_OWORD *)(a2 + 8);
      *(_OWORD *)(a1 + 24) = v21;
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
    }
    uint64_t v22 = *(void *)(a2 + 72);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(void *)(a1 + 72) = v22;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t assignWithCopy for PlaylistCovers.CarouselItem.CarouselItemType(uint64_t a1, uint64_t a2)
{
  int v4 = *(void **)a1;
  uint64_t v5 = *(void **)a2;
  if (*(void *)a1 >= 0xFFFFFFFFuLL)
  {
    if ((unint64_t)v5 >= 0xFFFFFFFF)
    {
      *(void *)a1 = v5;
      id v6 = v5;

      id v7 = (_OWORD *)(a1 + 8);
      uint64_t v8 = (long long *)(a2 + 8);
      uint64_t v9 = *(void **)(a1 + 16);
      uint64_t v10 = *(void *)(a2 + 16);
      if (v9)
      {
        if (v10)
        {
          *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
          uint64_t v11 = *(void **)(a2 + 16);
          *(void *)(a1 + 16) = v11;
          id v12 = v11;

          id v13 = *(void **)(a2 + 24);
          id v14 = *(void **)(a1 + 24);
          *(void *)(a1 + 24) = v13;
          id v15 = v13;

          id v16 = *(void **)(a2 + 32);
          id v17 = *(void **)(a1 + 32);
          *(void *)(a1 + 32) = v16;
          id v18 = v16;

          long long v19 = *(void **)(a2 + 40);
          long long v20 = *(void **)(a1 + 40);
          *(void *)(a1 + 40) = v19;
          id v21 = v19;

          uint64_t v22 = *(void **)(a2 + 48);
          uint64_t v23 = *(void **)(a1 + 48);
          *(void *)(a1 + 48) = v22;
          id v24 = v22;

          uint64_t v25 = *(void **)(a2 + 56);
          uint64_t v26 = *(void **)(a1 + 56);
          *(void *)(a1 + 56) = v25;
          id v27 = v25;
        }
        else
        {
          _s9MusicCore14PlaylistCoversO5CoverV14RepresentationVWOh_0(a1 + 8);
          long long v62 = *(_OWORD *)(a2 + 24);
          long long v61 = *(_OWORD *)(a2 + 40);
          long long v63 = *v8;
          *(void *)(a1 + 56) = *(void *)(a2 + 56);
          *(_OWORD *)(a1 + 24) = v62;
          *(_OWORD *)(a1 + 40) = v61;
          *id v7 = v63;
        }
      }
      else if (v10)
      {
        *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
        double v46 = *(void **)(a2 + 16);
        *(void *)(a1 + 16) = v46;
        double v47 = *(void **)(a2 + 24);
        *(void *)(a1 + 24) = v47;
        double v48 = *(void **)(a2 + 32);
        *(void *)(a1 + 32) = v48;
        char v49 = *(void **)(a2 + 40);
        *(void *)(a1 + 40) = v49;
        int v50 = *(void **)(a2 + 48);
        *(void *)(a1 + 48) = v50;
        id v51 = *(void **)(a2 + 56);
        *(void *)(a1 + 56) = v51;
        id v52 = v46;
        id v53 = v47;
        id v54 = v48;
        id v55 = v49;
        id v56 = v50;
        id v57 = v51;
      }
      else
      {
        long long v64 = *v8;
        long long v65 = *(_OWORD *)(a2 + 24);
        long long v66 = *(_OWORD *)(a2 + 40);
        *(void *)(a1 + 56) = *(void *)(a2 + 56);
        *(_OWORD *)(a1 + 24) = v65;
        *(_OWORD *)(a1 + 40) = v66;
        *id v7 = v64;
      }
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }

    long long v42 = *(void **)(a1 + 16);
    if (v42)
    {
    }
    swift_bridgeObjectRelease();
LABEL_12:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    long long v43 = *(_OWORD *)(a2 + 16);
    long long v44 = *(_OWORD *)(a2 + 32);
    long long v45 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v45;
    *(_OWORD *)(a1 + 16) = v43;
    *(_OWORD *)(a1 + 32) = v44;
    return a1;
  }
  if ((unint64_t)v5 < 0xFFFFFFFF) {
    goto LABEL_12;
  }
  *(void *)a1 = v5;
  uint64_t v28 = *(void *)(a2 + 16);
  id v29 = v5;
  if (v28)
  {
    *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
    double v30 = *(void **)(a2 + 16);
    *(void *)(a1 + 16) = v30;
    double v31 = *(void **)(a2 + 24);
    *(void *)(a1 + 24) = v31;
    uint64_t v32 = *(void **)(a2 + 32);
    *(void *)(a1 + 32) = v32;
    uint64_t v33 = *(void **)(a2 + 40);
    *(void *)(a1 + 40) = v33;
    uint64_t v34 = *(void **)(a2 + 48);
    *(void *)(a1 + 48) = v34;
    double v35 = *(void **)(a2 + 56);
    *(void *)(a1 + 56) = v35;
    id v36 = v30;
    id v37 = v31;
    id v38 = v32;
    id v39 = v33;
    id v40 = v34;
    id v41 = v35;
  }
  else
  {
    long long v58 = *(_OWORD *)(a2 + 8);
    long long v59 = *(_OWORD *)(a2 + 24);
    long long v60 = *(_OWORD *)(a2 + 40);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(_OWORD *)(a1 + 24) = v59;
    *(_OWORD *)(a1 + 40) = v60;
    *(_OWORD *)(a1 + 8) = v58;
  }
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithTake for PlaylistCovers.CarouselItem.CarouselItemType(uint64_t a1, uint64_t a2)
{
  int v4 = *(void **)a1;
  if (*(void *)a1 >= 0xFFFFFFFFuLL)
  {
    if (*(void *)a2 >= 0xFFFFFFFFuLL)
    {
      *(void *)a1 = *(void *)a2;

      uint64_t v5 = *(void **)(a1 + 16);
      if (v5)
      {
        uint64_t v6 = *(void *)(a2 + 16);
        if (v6)
        {
          *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
          *(void *)(a1 + 16) = v6;

          id v7 = *(void **)(a1 + 24);
          *(void *)(a1 + 24) = *(void *)(a2 + 24);

          uint64_t v8 = *(void **)(a1 + 32);
          *(void *)(a1 + 32) = *(void *)(a2 + 32);

          uint64_t v9 = *(void **)(a1 + 40);
          *(void *)(a1 + 40) = *(void *)(a2 + 40);

          uint64_t v10 = *(void **)(a1 + 48);
          *(void *)(a1 + 48) = *(void *)(a2 + 48);

          uint64_t v11 = *(void **)(a1 + 56);
          *(void *)(a1 + 56) = *(void *)(a2 + 56);

LABEL_12:
          uint64_t v16 = *(void *)(a2 + 72);
          *(void *)(a1 + 64) = *(void *)(a2 + 64);
          *(void *)(a1 + 72) = v16;
          swift_bridgeObjectRelease();
          return a1;
        }
        _s9MusicCore14PlaylistCoversO5CoverV14RepresentationVWOh_0(a1 + 8);
      }
      long long v15 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      *(_OWORD *)(a1 + 24) = v15;
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      goto LABEL_12;
    }

    id v12 = *(void **)(a1 + 16);
    if (v12)
    {
    }
    swift_bridgeObjectRelease();
  }
  long long v13 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v13;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  long long v14 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v14;
  return a1;
}

uint64_t getEnumTagSinglePayload for PlaylistCovers.CarouselItem.CarouselItemType(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 80)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for PlaylistCovers.CarouselItem.CarouselItemType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)__n128 result = 0u;
    *(_DWORD *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 80) = 0;
    }
    if (a2) {
      *(void *)__n128 result = a2;
    }
  }
  return result;
}

uint64_t destructiveInjectEnumTag for PlaylistCovers.CarouselItem.CarouselItemType(uint64_t result, int a2)
{
  if (a2 < 0)
  {
    uint64_t v2 = a2 ^ 0x80000000;
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
  }
  else
  {
    if (!a2) {
      return result;
    }
    uint64_t v2 = (a2 - 1);
  }
  *(void *)__n128 result = v2;
  return result;
}

ValueMetadata *type metadata accessor for PlaylistCovers.CarouselItem.CarouselItemType()
{
  return &type metadata for PlaylistCovers.CarouselItem.CarouselItemType;
}

uint64_t closure #1 in closure #1 in static PlaylistCovers.carouselItems(from:playlistTitle:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[4] = a5;
  _OWORD v6[5] = a6;
  v6[2] = a1;
  v6[3] = a4;
  return _swift_task_switch(closure #1 in closure #1 in static PlaylistCovers.carouselItems(from:playlistTitle:), 0, 0);
}

uint64_t closure #1 in closure #1 in static PlaylistCovers.carouselItems(from:playlistTitle:)()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = v0[5];
  uint64_t v4 = v0[2];
  uint64_t v3 = v0[3];
  long long v5 = *(_OWORD *)v3;
  long long v6 = *(_OWORD *)(v3 + 16);
  long long v7 = *(_OWORD *)(v3 + 32);
  *(void *)(v4 + 48) = *(void *)(v3 + 48);
  *(_OWORD *)(v4 + 16) = v6;
  *(_OWORD *)(v4 + 32) = v7;
  *(_OWORD *)uint64_t v4 = v5;
  outlined retain of PlaylistCovers.Cover.Representation(v3);
  uint64_t v8 = PlaylistCovers.Specs.coverSize.unsafeMutableAddressor();
  double v9 = *(double *)v8;
  double v10 = *((double *)v8 + 1);
  uint64_t v11 = *(void *)(v3 + 8);
  uint64_t v12 = *(void *)(v3 + 48);
  _sSo29UIGraphicsImageRendererFormatCMa_0();
  id v13 = [(id)swift_getObjCClassFromMetadata() preferredFormat];
  uint64_t v14 = static PlaylistCovers.playlistCoverImage(size:backgroundImage:textColor:title:graphicsFormat:)(v11, v12, v1, v2, v13, v9, v10);

  *(void *)(v4 + 56) = v14;
  long long v15 = (uint64_t (*)(void))v0[1];
  return v15();
}

uint64_t sub_100417A04()
{
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #1 in static PlaylistCovers.carouselItems(from:playlistTitle:)(uint64_t a1)
{
  uint64_t v4 = v1 + 32;
  uint64_t v6 = *(void *)(v1 + 88);
  uint64_t v5 = *(void *)(v1 + 96);
  long long v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *long long v7 = v2;
  _OWORD v7[4] = v6;
  _OWORD v7[5] = v5;
  v7[2] = a1;
  v7[3] = v4;
  v7[1] = partial apply for closure #1 in static MusicEngagementExtension.performRequest(with:completion:);
  return _swift_task_switch(closure #1 in closure #1 in static PlaylistCovers.carouselItems(from:playlistTitle:), 0, 0);
}

uint64_t _sScPSgWOh_1(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&_sScPSgMD_2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t lazy protocol witness table accessor for type TaskGroup<(PlaylistCovers.Cover.Representation, UIImage)>.Iterator and conformance TaskGroup<A>.Iterator()
{
  unint64_t result = lazy protocol witness table cache variable for type TaskGroup<(PlaylistCovers.Cover.Representation, UIImage)>.Iterator and conformance TaskGroup<A>.Iterator;
  if (!lazy protocol witness table cache variable for type TaskGroup<(PlaylistCovers.Cover.Representation, UIImage)>.Iterator and conformance TaskGroup<A>.Iterator)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for TaskGroup<(PlaylistCovers.Cover.Representation, UIImage)>.Iterator);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type TaskGroup<(PlaylistCovers.Cover.Representation, UIImage)>.Iterator and conformance TaskGroup<A>.Iterator);
  }
  return result;
}

void outlined consume of (PlaylistCovers.Cover.Representation, UIImage)?(uint64_t a1, void *a2, void *a3, void *a4, void *a5, void *a6, void *a7, void *a8)
{
  if (a2)
  {
  }
}

uint64_t outlined consume of PageIndicator?(uint64_t result)
{
  if (result)
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_100417F04()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzlTR9MusicCore14PlaylistCoversO5CoverV14RepresentationV_So7UIImageCt_Tg5TA(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = partial apply for closure #1 in static MusicEngagementExtension.performRequest(with:completion:);
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&_sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzlTR9MusicCore14PlaylistCoversO5CoverV14RepresentationV_So7UIImageCt_Tg5Tu
                                              + _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzlTR9MusicCore14PlaylistCoversO5CoverV14RepresentationV_So7UIImageCt_Tg5Tu);
  return v6(a1, v4);
}

unint64_t _sSo29UIGraphicsImageRendererFormatCMa_0()
{
  unint64_t result = _sSo29UIGraphicsImageRendererFormatCML_0;
  if (!_sSo29UIGraphicsImageRendererFormatCML_0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&_sSo29UIGraphicsImageRendererFormatCML_0);
  }
  return result;
}

id ProgressiveBlur.makeUIView(context:)(double a1, uint64_t a2, char a3)
{
  uint64_t v5 = (objc_class *)type metadata accessor for ProgressiveBlurView();
  uint64_t v6 = objc_allocWithZone(v5);
  *(double *)&v6[OBJC_IVAR____TtC11MusicCoreUI19ProgressiveBlurView_blurRadius] = a1;
  v6[OBJC_IVAR____TtC11MusicCoreUI19ProgressiveBlurView_edge] = a3;
  long long v7 = (void *)specialized static ProgressiveBlurView.effect(bounds:blurRadius:edge:)(a3, 0.0, 0.0, 1.0, 1.0, a1);
  v10.receiver = v6;
  v10.super_class = v5;
  id v8 = objc_msgSendSuper2(&v10, "initWithEffect:", v7);

  return v8;
}

id ProgressiveBlurView.__allocating_init(blurRadius:edge:)(char a1, double a2)
{
  uint64_t v5 = objc_allocWithZone(v2);
  *(double *)&v5[OBJC_IVAR____TtC11MusicCoreUI19ProgressiveBlurView_blurRadius] = a2;
  v5[OBJC_IVAR____TtC11MusicCoreUI19ProgressiveBlurView_edge] = a1;
  uint64_t v6 = (void *)specialized static ProgressiveBlurView.effect(bounds:blurRadius:edge:)(a1, 0.0, 0.0, 1.0, 1.0, a2);
  v9.receiver = v5;
  v9.super_class = v2;
  id v7 = objc_msgSendSuper2(&v9, "initWithEffect:", v6);

  return v7;
}

void ProgressiveBlur.updateUIView(_:context:)(unsigned char *a1, double a2, uint64_t a3, char a4)
{
  uint64_t v5 = OBJC_IVAR____TtC11MusicCoreUI19ProgressiveBlurView_blurRadius;
  *(double *)&a1[OBJC_IVAR____TtC11MusicCoreUI19ProgressiveBlurView_blurRadius] = a2;
  uint64_t v6 = OBJC_IVAR____TtC11MusicCoreUI19ProgressiveBlurView_edge;
  a1[OBJC_IVAR____TtC11MusicCoreUI19ProgressiveBlurView_edge] = a4;
  [a1 bounds];
  id v11 = (id)specialized static ProgressiveBlurView.effect(bounds:blurRadius:edge:)(a1[v6], v7, v8, v9, v10, *(double *)&a1[v5]);
  [a1 setEffect:v11];
}

id protocol witness for UIViewRepresentable.makeUIView(context:) in conformance ProgressiveBlur()
{
  double v1 = *(double *)v0;
  char v2 = *(unsigned char *)(v0 + 8);
  uint64_t v3 = (objc_class *)type metadata accessor for ProgressiveBlurView();
  uint64_t v4 = objc_allocWithZone(v3);
  *(double *)&v4[OBJC_IVAR____TtC11MusicCoreUI19ProgressiveBlurView_blurRadius] = v1;
  v4[OBJC_IVAR____TtC11MusicCoreUI19ProgressiveBlurView_edge] = v2;
  uint64_t v5 = (void *)specialized static ProgressiveBlurView.effect(bounds:blurRadius:edge:)(v2, 0.0, 0.0, 1.0, 1.0, v1);
  v8.receiver = v4;
  v8.super_class = v3;
  id v6 = objc_msgSendSuper2(&v8, "initWithEffect:", v5);

  return v6;
}

void protocol witness for UIViewRepresentable.updateUIView(_:context:) in conformance ProgressiveBlur(uint64_t a1)
{
  char v2 = *(unsigned char *)(v1 + 8);
  *(void *)(a1 + OBJC_IVAR____TtC11MusicCoreUI19ProgressiveBlurView_blurRadius) = *(void *)v1;
  *(unsigned char *)(a1 + OBJC_IVAR____TtC11MusicCoreUI19ProgressiveBlurView_edge) = v2;
  ProgressiveBlurView.updateEffect()();
}

uint64_t protocol witness for UIViewRepresentable._resetUIView(_:coordinator:destroy:) in conformance ProgressiveBlur()
{
  return UIViewRepresentable._resetUIView(_:coordinator:destroy:)();
}

uint64_t protocol witness for static UIViewRepresentable.dismantleUIView(_:coordinator:) in conformance ProgressiveBlur()
{
  return static UIViewRepresentable.dismantleUIView(_:coordinator:)();
}

uint64_t protocol witness for UIViewRepresentable.makeCoordinator() in conformance ProgressiveBlur()
{
  return UIViewRepresentable<>.makeCoordinator()();
}

uint64_t protocol witness for UIViewRepresentable.sizeThatFits(_:uiView:context:) in conformance ProgressiveBlur()
{
  return UIViewRepresentable.sizeThatFits(_:uiView:context:)();
}

uint64_t protocol witness for static View._makeView(view:inputs:) in conformance ProgressiveBlur(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = lazy protocol witness table accessor for type ProgressiveBlur and conformance ProgressiveBlur();

  return static UIViewRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t protocol witness for static View._makeViewList(view:inputs:) in conformance ProgressiveBlur(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = lazy protocol witness table accessor for type ProgressiveBlur and conformance ProgressiveBlur();

  return static UIViewRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void protocol witness for View.body.getter in conformance ProgressiveBlur()
{
}

double ProgressiveBlurView.Edge.startPoint.getter(char a1)
{
  return ProgressiveBlurView.Edge.startPoint.getter(a1, (uint64_t (*)(void))CGPoint.topCenter.unsafeMutableAddressor, (uint64_t (*)(void))CGPoint.centerLeft.unsafeMutableAddressor, (uint64_t (*)(void))CGPoint.centerRight.unsafeMutableAddressor, (uint64_t (*)(void))CGPoint.bottomCenter.unsafeMutableAddressor);
}

double ProgressiveBlurView.Edge.endPoint.getter(char a1)
{
  return ProgressiveBlurView.Edge.startPoint.getter(a1, (uint64_t (*)(void))CGPoint.bottomCenter.unsafeMutableAddressor, (uint64_t (*)(void))CGPoint.centerRight.unsafeMutableAddressor, (uint64_t (*)(void))CGPoint.centerLeft.unsafeMutableAddressor, (uint64_t (*)(void))CGPoint.topCenter.unsafeMutableAddressor);
}

double ProgressiveBlurView.Edge.startPoint.getter(char a1, uint64_t (*a2)(void), uint64_t (*a3)(void), uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  switch(a1)
  {
    case 1:
      uint64_t v5 = a3();
      break;
    case 2:
      uint64_t v5 = a4();
      break;
    case 3:
      uint64_t v5 = a5();
      break;
    default:
      uint64_t v5 = a2();
      break;
  }
  uint64_t v6 = v5;
  swift_beginAccess();
  return *(double *)v6;
}

id ProgressiveBlurView.init(blurRadius:edge:)(char a1, double a2)
{
  *(double *)&v2[OBJC_IVAR____TtC11MusicCoreUI19ProgressiveBlurView_blurRadius] = a2;
  v2[OBJC_IVAR____TtC11MusicCoreUI19ProgressiveBlurView_edge] = a1;
  uint64_t v3 = (void *)specialized static ProgressiveBlurView.effect(bounds:blurRadius:edge:)(a1, 0.0, 0.0, 1.0, 1.0, a2);
  v6.receiver = v2;
  v6.super_class = (Class)type metadata accessor for ProgressiveBlurView();
  id v4 = objc_msgSendSuper2(&v6, "initWithEffect:", v3);

  return v4;
}

uint64_t type metadata accessor for ProgressiveBlurView()
{
  return self;
}

Swift::Void __swiftcall ProgressiveBlurView.layoutSubviews()()
{
  v6.receiver = v0;
  v6.super_class = (Class)type metadata accessor for ProgressiveBlurView();
  objc_msgSendSuper2(&v6, "layoutSubviews");
  [v0 bounds];
  uint64_t v5 = (void *)specialized static ProgressiveBlurView.effect(bounds:blurRadius:edge:)(v0[OBJC_IVAR____TtC11MusicCoreUI19ProgressiveBlurView_edge], v1, v2, v3, v4, *(double *)&v0[OBJC_IVAR____TtC11MusicCoreUI19ProgressiveBlurView_blurRadius]);
  [v0 setEffect:v5];
}

Swift::Void __swiftcall ProgressiveBlurView.updateEffect()()
{
  [v0 bounds];
  id v5 = (id)specialized static ProgressiveBlurView.effect(bounds:blurRadius:edge:)(v0[OBJC_IVAR____TtC11MusicCoreUI19ProgressiveBlurView_edge], v1, v2, v3, v4, *(double *)&v0[OBJC_IVAR____TtC11MusicCoreUI19ProgressiveBlurView_blurRadius]);
  [v0 setEffect:v5];
}

void closure #1 in static ProgressiveBlurView.maskImage(bounds:edge:)(void *a1, char a2, double a3, double a4, double a5, double a6)
{
  id v12 = [objc_allocWithZone((Class)CAGradientLayer) init];
  objc_msgSend(v12, "setBounds:", a3, a4, a5, a6);
  objc_msgSend(v12, "setStartPoint:", ProgressiveBlurView.Edge.startPoint.getter(a2, (uint64_t (*)(void))CGPoint.topCenter.unsafeMutableAddressor, (uint64_t (*)(void))CGPoint.centerLeft.unsafeMutableAddressor, (uint64_t (*)(void))CGPoint.centerRight.unsafeMutableAddressor, (uint64_t (*)(void))CGPoint.bottomCenter.unsafeMutableAddressor));
  objc_msgSend(v12, "setEndPoint:", ProgressiveBlurView.Edge.startPoint.getter(a2, (uint64_t (*)(void))CGPoint.bottomCenter.unsafeMutableAddressor, (uint64_t (*)(void))CGPoint.centerRight.unsafeMutableAddressor, (uint64_t (*)(void))CGPoint.centerLeft.unsafeMutableAddressor, (uint64_t (*)(void))CGPoint.topCenter.unsafeMutableAddressor));
  __swift_instantiateConcreteTypeFromMangledName(&_ss23_ContiguousArrayStorageCyypGMD_1);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_100493D00;
  uint64_t v14 = self;
  id v15 = [v14 whiteColor];
  id v16 = [v15 colorWithAlphaComponent:0.3];

  id v17 = [v16 CGColor];
  _sSo10CGColorRefaMa_0(0);
  uint64_t v19 = v18;
  *(void *)(v13 + 56) = v18;
  *(void *)(v13 + 32) = v17;
  id v20 = [v14 whiteColor];
  id v21 = [v20 colorWithAlphaComponent:0.0];

  id v22 = [v21 CGColor];
  *(void *)(v13 + 88) = v19;
  *(void *)(v13 + 64) = v22;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v12 setColors:isa];

  id v24 = [a1 CGContext];
  [v12 renderInContext:v24];
}

id ProgressiveBlurView.__allocating_init(effect:)(void *a1)
{
  id v3 = [objc_allocWithZone(v1) initWithEffect:a1];

  return v3;
}

void ProgressiveBlurView.init(effect:)()
{
}

id ProgressiveBlurView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ProgressiveBlurView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t specialized static ProgressiveBlurView.effect(bounds:blurRadius:edge:)(char a1, double a2, double a3, double a4, double a5, double a6)
{
  if (CGRectIsEmpty(*(CGRect *)&a2)) {
    return 0;
  }
  id v12 = [objc_allocWithZone((Class)UIGraphicsImageRendererFormat) init];
  [v12 setScale:1.0];
  [v12 setPreferredRange:2];
  id v13 = objc_msgSend(objc_allocWithZone((Class)UIGraphicsImageRenderer), "initWithBounds:format:", v12, a2, a3, a4, a5);
  uint64_t v14 = swift_allocObject();
  *(double *)(v14 + 16) = a2;
  *(double *)(v14 + 24) = a3;
  *(double *)(v14 + 32) = a4;
  *(double *)(v14 + 40) = a5;
  *(unsigned char *)(v14 + 48) = a1;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = partial apply for closure #1 in static ProgressiveBlurView.maskImage(bounds:edge:);
  *(void *)(v15 + 24) = v14;
  v20[4] = _sSo22MPMutableIdentifierSet_So012MPIdentifierC0CXcIgg_SoAA_ACXcIegg_TRTA_0;
  v20[5] = v15;
  v20[0] = _NSConcreteStackBlock;
  v20[1] = 1107296256;
  v20[2] = thunk for @escaping @callee_guaranteed (@guaranteed MPIdentifierSet & MPMutableIdentifierSet) -> ();
  v20[3] = &block_descriptor_68;
  id v16 = _Block_copy(v20);
  swift_retain();
  swift_release();
  id v17 = [v13 imageWithActions:v16];

  _Block_release(v16);
  LOBYTE(v12) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if ((v12 & 1) == 0)
  {
    if (v17)
    {
      id v19 = [self _effectWithVariableBlurRadius:v17 imageMask:a6 scale:1.0];

      return (uint64_t)v19;
    }
    return 0;
  }
  __break(1u);
  return result;
}

unint64_t lazy protocol witness table accessor for type ProgressiveBlur and conformance ProgressiveBlur()
{
  unint64_t result = lazy protocol witness table cache variable for type ProgressiveBlur and conformance ProgressiveBlur;
  if (!lazy protocol witness table cache variable for type ProgressiveBlur and conformance ProgressiveBlur)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ProgressiveBlur and conformance ProgressiveBlur);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ProgressiveBlur and conformance ProgressiveBlur;
  if (!lazy protocol witness table cache variable for type ProgressiveBlur and conformance ProgressiveBlur)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ProgressiveBlur and conformance ProgressiveBlur);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ProgressiveBlurView.Edge and conformance ProgressiveBlurView.Edge()
{
  unint64_t result = lazy protocol witness table cache variable for type ProgressiveBlurView.Edge and conformance ProgressiveBlurView.Edge;
  if (!lazy protocol witness table cache variable for type ProgressiveBlurView.Edge and conformance ProgressiveBlurView.Edge)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ProgressiveBlurView.Edge and conformance ProgressiveBlurView.Edge);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ProgressiveBlur(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  BOOL v4 = v3 >= 4;
  int v5 = v3 - 4;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ProgressiveBlur(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = a2 - 253;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = a2 + 3;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ProgressiveBlur()
{
  return &type metadata for ProgressiveBlur;
}

unsigned char *storeEnumTagSinglePayload for ProgressiveBlurView.Edge(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100418FE8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ProgressiveBlurView.Edge()
{
  return &type metadata for ProgressiveBlurView.Edge;
}

uint64_t sub_100419074()
{
  return swift_deallocObject();
}

void partial apply for closure #1 in static ProgressiveBlurView.maskImage(bounds:edge:)(void *a1)
{
  closure #1 in static ProgressiveBlurView.maskImage(bounds:edge:)(a1, *(unsigned char *)(v1 + 48), *(double *)(v1 + 16), *(double *)(v1 + 24), *(double *)(v1 + 32), *(double *)(v1 + 40));
}

uint64_t sub_100419094()
{
  return swift_deallocObject();
}

uint64_t block_copy_helper_66(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_66()
{
  return swift_release();
}

char *QRCodeOverlayViewController.__allocating_init(qrCode:title:subtitle:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return QRCodeOverlayViewController.init(qrCode:title:subtitle:)(a1);
}

void one-time initialization function for carPlayQRCodePadding()
{
  static QRCodeOverlayViewController.Specs.carPlayQRCodePadding = Int.seconds.getter(10);
}

void one-time initialization function for qrCodeHorizontalPadding()
{
  static QRCodeOverlayViewController.Specs.qrCodeHorizontalPadding = Int.seconds.getter(20);
}

void one-time initialization function for qrCodeBackgroundPadding()
{
  static QRCodeOverlayViewController.Specs.qrCodeBackgroundPadding = Int.seconds.getter(22);
}

void one-time initialization function for qrCodeMaxWidth()
{
  static QRCodeOverlayViewController.Specs.qrCodeMaxWidth = Int.seconds.getter(350);
}

void one-time initialization function for logoMaxWidth()
{
  static QRCodeOverlayViewController.Specs.logoMaxWidth = Int.seconds.getter(90);
}

void one-time initialization function for titleTopPadding()
{
  static QRCodeOverlayViewController.Specs.titleTopPadding = Int.seconds.getter(33);
}

void one-time initialization function for subtitleTopPadding()
{
  static QRCodeOverlayViewController.Specs.subtitleTopPadding = Int.seconds.getter(4);
}

void one-time initialization function for scrollContentViewVerticalPadding()
{
  static QRCodeOverlayViewController.Specs.scrollContentViewVerticalPadding = Int.seconds.getter(10);
}

id one-time initialization function for blurEffect()
{
  id result = [self effectWithStyle:18];
  static QRCodeOverlayViewController.Specs.blurEffect = (uint64_t)result;
  return result;
}

char *QRCodeOverlayViewController.init(qrCode:title:subtitle:)(void *a1)
{
  swift_getObjectType();
  uint64_t v3 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_backgroundView;
  id v4 = objc_allocWithZone((Class)UIVisualEffectView);
  uint64_t v5 = v1;
  *(void *)&v1[v3] = [v4 init];
  uint64_t v6 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCodeView;
  type metadata accessor for QRCodeOverlayViewController.ContainerView();
  *(void *)&v5[v6] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  uint64_t v7 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_destOutLayer;
  *(void *)&v5[v7] = [objc_allocWithZone((Class)CAShapeLayer) init];
  uint64_t v8 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_logoView;
  NSString v9 = String._bridgeToObjectiveC()();
  id v10 = [self _systemImageNamed:v9];

  id v11 = [objc_allocWithZone((Class)UIImageView) initWithImage:v10];
  *(void *)&v5[v8] = v11;
  uint64_t v12 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_titleLabel;
  *(void *)&v5[v12] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v13 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_subtitleLabelEffectView;
  if (one-time initialization token for blurEffect != -1) {
    swift_once();
  }
  id v14 = [self effectForBlurEffect:static QRCodeOverlayViewController.Specs.blurEffect];
  id v15 = [objc_allocWithZone((Class)UIVisualEffectView) initWithEffect:v14];

  *(void *)&v5[v13] = v15;
  uint64_t v16 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_subtitleLabel;
  *(void *)&v5[v16] = [objc_allocWithZone((Class)UILabel) init];
  *(void *)&v5[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCodeBackgroundView] = 0;
  uint64_t v17 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_scrollView;
  *(void *)&v5[v17] = [objc_allocWithZone((Class)UIScrollView) init];
  uint64_t v18 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_scrollContentView;
  *(void *)&v5[v18] = [objc_allocWithZone((Class)UIView) init];
  *(void *)&v5[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_brightnessManager] = 0;
  if (a1[4] == 76)
  {
    QRCode.with(errorCorrectionLevel:)(77, (uint64_t)v39);
    uint64_t v20 = v39[0];
    uint64_t v19 = v39[1];
    uint64_t v22 = v39[2];
    uint64_t v21 = v39[3];
    uint64_t v23 = v39[4];
    _s9MusicCore6QRCodeVSgWOb_0((uint64_t)v39, (uint64_t)v40);
    if (!v41)
    {
      uint64_t v22 = a1[2];
      uint64_t v21 = a1[3];
      uint64_t v20 = *a1;
      uint64_t v19 = a1[1];
      outlined retain of Collaboration.Management.QRCodeView(a1);
      uint64_t v23 = 76;
    }
    id v24 = &v5[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCode];
    *(void *)id v24 = v20;
    *((void *)v24 + 1) = v19;
    *((void *)v24 + 2) = v22;
    *((void *)v24 + 3) = v21;
    *((void *)v24 + 4) = v23;
  }
  else
  {
    uint64_t v25 = &v5[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCode];
    uint64_t v26 = a1[4];
    long long v27 = *((_OWORD *)a1 + 1);
    *(_OWORD *)uint64_t v25 = *(_OWORD *)a1;
    *((_OWORD *)v25 + 1) = v27;
    *((void *)v25 + 4) = v26;
    outlined retain of Collaboration.Management.QRCodeView(a1);
  }

  v38.receiver = v5;
  v38.super_class = (Class)type metadata accessor for QRCodeOverlayViewController();
  uint64_t v28 = (char *)objc_msgSendSuper2(&v38, "initWithNibName:bundle:", 0, 0);
  id v29 = *(void **)&v28[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_titleLabel];
  double v30 = v28;
  id v31 = v29;
  NSString v32 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v31 setText:v32];

  id v33 = *(id *)&v30[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_subtitleLabel];
  NSString v34 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v33 setText:v34];

  __swift_instantiateConcreteTypeFromMangledName(&_ss23_ContiguousArrayStorageCy5UIKit17UITraitDefinition_pXpGMD_0);
  uint64_t v35 = swift_allocObject();
  *(_OWORD *)(v35 + 16) = xmmword_100493400;
  *(void *)(v35 + 32) = type metadata accessor for UITraitPreferredContentSizeCategory();
  *(void *)(v35 + 40) = &protocol witness table for UITraitPreferredContentSizeCategory;
  id v36 = v30;
  UIViewController.registerForTraitChanges<A>(_:handler:)();
  outlined release of QRCode(a1);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  return v36;
}

uint64_t type metadata accessor for QRCodeOverlayViewController.ContainerView()
{
  return self;
}

Swift::Void __swiftcall QRCodeOverlayViewController.viewDidLoad()()
{
  uint64_t v1 = v0;
  v41.receiver = v0;
  v41.super_class = (Class)type metadata accessor for QRCodeOverlayViewController();
  objc_msgSendSuper2(&v41, "viewDidLoad");
  id v2 = [v0 view];
  if (!v2)
  {
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v3 = v2;
  id v4 = self;
  id v5 = [v4 clearColor];
  [v3 setBackgroundColor:v5];

  id v6 = [v1 navigationItem];
  type metadata accessor for UIMenu(0, &_sSo15UIBarButtonItemCML_1);
  type metadata accessor for UIMenu(0, &_sSo8UIActionCML_1);
  uint64_t v7 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v42.value.super.super.Class isa = (Class)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  v42.is_nil = 0;
  Class isa = UIBarButtonItem.init(systemItem:primaryAction:menu:)(UIBarButtonSystemItemDone, v42, v43).super.super.isa;
  objc_msgSend(v6, "setLeftBarButtonItem:", isa, 0, 0, 0, partial apply for closure #1 in QRCodeOverlayViewController.viewDidLoad(), v7);

  id v9 = [objc_allocWithZone((Class)UITapGestureRecognizer) initWithTarget:v1 action:"dismissAnimated"];
  id v10 = [v1 view];
  if (!v10)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  id v11 = v10;
  id v39 = v9;
  [v10 addGestureRecognizer:v9];

  uint64_t v12 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCodeView;
  uint64_t v13 = *(char **)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCodeView];
  id v40 = &v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCode];
  id v14 = *(void **)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCode + 24];
  uint64_t v15 = OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_image;
  uint64_t v16 = *(void **)&v13[OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_image];
  *(void *)&v13[OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_image] = v14;
  id v17 = v14;
  uint64_t v18 = v13;

  [*(id *)&v18[OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_imageView] setImage:*(void *)&v13[v15]];
  uint64_t v38 = v12;
  [*(id *)&v1[v12] setAlpha:0.0];
  uint64_t v37 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_logoView;
  [*(id *)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_logoView] setContentMode:1];
  uint64_t v19 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_titleLabel;
  uint64_t v20 = *(void **)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_titleLabel];
  type metadata accessor for UIMenu(0, (unint64_t *)&_sSo6UIFontCML_0);
  id v21 = v20;
  uint64_t v22 = (void *)static UIFont.preferredFont(forTextStyle:weight:)();
  [v21 setFont:v22];

  id v23 = *(id *)&v1[v19];
  id v24 = [v4 whiteColor];
  [v23 setTextColor:v24];

  [*(id *)&v1[v19] setTextAlignment:1];
  [*(id *)&v1[v19] setNumberOfLines:0];
  [*(id *)&v1[v19] setAlpha:0.0];
  [*(id *)&v1[v19] setAdjustsFontForContentSizeCategory:1];
  uint64_t v25 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_subtitleLabel;
  uint64_t v26 = *(void **)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_subtitleLabel];
  long long v27 = self;
  id v28 = v26;
  id v29 = [v27 preferredFontForTextStyle:UIFontTextStyleBody];
  [v28 setFont:v29];

  [*(id *)&v1[v25] setTextAlignment:1];
  [*(id *)&v1[v25] setNumberOfLines:0];
  [*(id *)&v1[v25] setAlpha:0.0];
  [*(id *)&v1[v25] setAdjustsFontForContentSizeCategory:1];
  uint64_t v30 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_destOutLayer;
  id v31 = *(id *)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_destOutLayer];
  id v32 = [v4 blackColor];
  id v33 = [v32 CGColor];

  [v31 setFillColor:v33];
  [*(id *)&v1[v30] setFillRule:kCAFillRuleNonZero];
  [*(id *)&v1[v30] setCompositingFilter:kCAFilterDestOut];
  if (*((void *)v40 + 4) != 76)
  {
    id v34 = [*(id *)&v1[v38] layer];
    [v34 addSublayer:*(void *)&v1[v30]];

    [*(id *)&v1[v38] addSubview:*(void *)&v1[v37]];
  }
  id v35 = [v1 view];
  if (v35)
  {
    id v36 = v35;
    [v35 addSubview:*(void *)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_backgroundView]];

    return;
  }
LABEL_9:
  __break(1u);
}

void closure #1 in QRCodeOverlayViewController.viewDidLoad()()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    QRCodeOverlayViewController.dismissAnimated()();
  }
}

Swift::Void __swiftcall QRCodeOverlayViewController.viewIsAppearing(_:)(Swift::Bool a1)
{
  id v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIView.Corner?);
  __chkstk_darwin();
  id v5 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = (objc_class *)type metadata accessor for QRCodeOverlayViewController();
  v38.receiver = v2;
  v38.super_class = v6;
  objc_msgSendSuper2(&v38, "viewIsAppearing:", a1);
  id v7 = [v2 traitCollection];
  id v8 = [v7 userInterfaceIdiom];

  if (v8 != (id)3)
  {
    id v20 = [objc_allocWithZone((Class)UIView) init];
    id v21 = self;
    id v22 = [v21 whiteColor];
    [v20 setBackgroundColor:v22];

    static UIView.Corner.value(_:continuous:)();
    uint64_t v23 = type metadata accessor for UIView.Corner();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v5, 0, 1, v23);
    UIView.corner.setter();
    [v20 setClipsToBounds:1];
    [v20 setAlpha:0.0];
    uint64_t v24 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCodeView;
    [v20 addSubview:*(void *)&v2[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCodeView]];
    uint64_t v25 = *(void **)&v2[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCodeBackgroundView];
    *(void *)&v2[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCodeBackgroundView] = v20;
    id v26 = v20;

    id v27 = [*(id *)&v2[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_backgroundView] contentView];
    uint64_t v28 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_scrollView;
    [v27 addSubview:*(void *)&v2[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_scrollView]];

    uint64_t v29 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_scrollContentView;
    [*(id *)&v2[v28] addSubview:*(void *)&v2[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_scrollContentView]];
    [*(id *)&v2[v29] addSubview:v26];
    [*(id *)&v2[v29] addSubview:*(void *)&v2[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_titleLabel]];
    uint64_t v30 = *(void **)&v2[v29];
    uint64_t v31 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_subtitleLabelEffectView;
    [v30 addSubview:*(void *)&v2[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_subtitleLabelEffectView]];
    id v32 = [*(id *)&v2[v31] contentView];
    [v32 addSubview:*(void *)&v2[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_subtitleLabel]];

    id v33 = (char *)*(id *)&v2[v24];
    id v34 = [v21 blackColor];
    id v35 = *(void **)&v33[OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_overlayColor];
    *(void *)&v33[OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_overlayColor] = v34;
    id v36 = v34;

    QRCodeOverlayViewController.ContainerView.updateColor()();
    id v37 = *(id *)&v2[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_logoView];
    id v19 = [v21 blackColor];
    [v37 setTintColor:v19];

    goto LABEL_5;
  }
  uint64_t v9 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCodeView;
  id v10 = *(void **)&v2[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCodeView];
  id v11 = self;
  uint64_t v12 = v10;
  id v13 = [v11 whiteColor];
  id v14 = *(void **)&v12[OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_overlayColor];
  *(void *)&v12[OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_overlayColor] = v13;
  id v15 = v13;

  QRCodeOverlayViewController.ContainerView.updateColor()();
  id v16 = *(id *)&v2[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_logoView];
  id v17 = [v11 whiteColor];
  [v16 setTintColor:v17];

  id v18 = [v2 view];
  if (v18)
  {
    id v19 = v18;
    [v18 addSubview:*(void *)&v2[v9]];
LABEL_5:

    return;
  }
  __break(1u);
}

Swift::Void __swiftcall QRCodeOverlayViewController.viewDidAppear(_:)(Swift::Bool a1)
{
  id v2 = v1;
  v15.receiver = v2;
  v15.super_class = (Class)type metadata accessor for QRCodeOverlayViewController();
  objc_msgSendSuper2(&v15, "viewDidAppear:", a1);
  uint64_t v4 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_brightnessManager;
  if (*(void *)&v2[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_brightnessManager])
  {
LABEL_2:
    id v5 = self;
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v2;
    _OWORD v14[4] = partial apply for closure #1 in QRCodeOverlayViewController.viewDidAppear(_:);
    _OWORD v14[5] = v6;
    v14[0] = _NSConcreteStackBlock;
    v14[1] = 1107296256;
    _OWORD v14[2] = thunk for @escaping @callee_guaranteed @Sendable () -> ();
    v14[3] = &block_descriptor_69;
    id v7 = _Block_copy(v14);
    id v8 = v2;
    swift_release();
    [v5 animateWithDuration:v7 animations:0.25];
    _Block_release(v7);
    return;
  }
  id v9 = [v2 view];
  if (v9)
  {
    id v10 = v9;
    id v11 = [v9 window];

    if (v11)
    {
      id v12 = [v11 windowScene];

      if (v12)
      {
        type metadata accessor for BrightnessManager();
        swift_allocObject();
        id v13 = v12;
        *(void *)&v2[v4] = BrightnessManager.init(windowScene:)(v13);

        swift_release();
      }
    }
    goto LABEL_2;
  }
  __break(1u);
}

void closure #1 in QRCodeOverlayViewController.viewDidAppear(_:)(uint64_t a1)
{
  [*(id *)(a1 + OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCodeView) setAlpha:1.0];
  [*(id *)(a1 + OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCodeBackgroundView) setAlpha:1.0];
  [*(id *)(a1 + OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_titleLabel) setAlpha:1.0];
  [*(id *)(a1 + OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_subtitleLabel) setAlpha:1.0];
  uint64_t v2 = one-time initialization token for blurEffect;
  id v3 = *(id *)(a1 + OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_backgroundView);
  if (v2 != -1) {
    swift_once();
  }
  [v3 setEffect:static QRCodeOverlayViewController.Specs.blurEffect];

  if (*(void *)(a1 + OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_brightnessManager))
  {
    swift_retain();
    BrightnessManager.increaseBrightnessIfNeeded()();
    swift_release();
  }
}

Swift::Void __swiftcall QRCodeOverlayViewController.viewDidLayoutSubviews()()
{
  uint64_t v1 = v0;
  v175.receiver = v0;
  v175.super_class = (Class)type metadata accessor for QRCodeOverlayViewController();
  objc_msgSendSuper2(&v175, "viewDidLayoutSubviews");
  id v2 = [v0 traitCollection];
  id v3 = [v2 userInterfaceIdiom];

  id v4 = [v1 view];
  id v5 = v4;
  if (v3 == (id)3)
  {
    if (!v4)
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    id v6 = [v4 safeAreaLayoutGuide];

    [v6 layoutFrame];
    CGFloat v8 = v7;
    CGFloat v10 = v9;
    CGFloat v12 = v11;
    CGFloat v14 = v13;

    if (one-time initialization token for carPlayQRCodePadding != -1) {
      swift_once();
    }
    long long v15 = *(_OWORD *)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCode + 16];
    long long v178 = *(_OWORD *)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCode];
    long long v179 = v15;
    uint64_t v180 = *(void *)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCode + 32];
    outlined retain of Collaboration.Management.QRCodeView(&v178);
    if (one-time initialization token for qrCodeMaxWidth != -1) {
      swift_once();
    }
    v193.origin.CGFloat x = v8;
    v193.origin.CGFloat y = v10;
    v193.size.CGFloat width = v12;
    v193.size.CGFloat height = v14;
    CGRectGetWidth(v193);
    v194.origin.CGFloat x = v8;
    v194.origin.CGFloat y = v10;
    v194.size.CGFloat width = v12;
    v194.size.CGFloat height = v14;
    CGRectGetHeight(v194);
    id v16 = [v1 traitCollection];
    [v16 displayScale];

    double v17 = QRCode.dotAdjustedWidth(with:scale:)();
    outlined release of QRCode(&v178);
    id v18 = *(id *)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCodeView];
    id v19 = [v1 traitCollection];
    [v19 displayScale];

    double v169 = v17;
    CGRect.centeringAlong(axes:bounds:scale:)();
  }
  else
  {
    if (!v4)
    {
LABEL_39:
      __break(1u);
LABEL_40:
      __break(1u);
      goto LABEL_41;
    }
    [v4 bounds];
    double v21 = v20;
    double v23 = v22;
    double v25 = v24;
    double v27 = v26;

    if (one-time initialization token for qrCodeHorizontalPadding != -1) {
      swift_once();
    }
    if (one-time initialization token for qrCodeBackgroundPadding != -1) {
      swift_once();
    }
    long long v28 = *(_OWORD *)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCode + 16];
    long long v178 = *(_OWORD *)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCode];
    long long v179 = v28;
    uint64_t v180 = *(void *)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCode + 32];
    outlined retain of Collaboration.Management.QRCodeView(&v178);
    if (one-time initialization token for qrCodeMaxWidth != -1) {
      swift_once();
    }
    v195.origin.CGFloat x = v21;
    v195.origin.CGFloat y = v23;
    v195.size.CGFloat width = v25;
    v195.size.CGFloat height = v27;
    CGRectGetWidth(v195);
    v196.origin.CGFloat x = v21;
    v196.origin.CGFloat y = v23;
    v196.size.CGFloat width = v25;
    v196.size.CGFloat height = v27;
    CGRectGetHeight(v196);
    id v29 = [v1 traitCollection];
    [v29 displayScale];

    double v30 = QRCode.dotAdjustedWidth(with:scale:)();
    outlined release of QRCode(&v178);
    double v31 = *(double *)&static QRCodeOverlayViewController.Specs.qrCodeBackgroundPadding;
    v197.origin.CGFloat x = v21;
    v197.origin.CGFloat y = v23;
    v197.size.CGFloat width = v25;
    v197.size.CGFloat height = v27;
    double Width = CGRectGetWidth(v197);
    id v33 = [v1 view];
    if (!v33) {
      goto LABEL_40;
    }
    id v34 = v33;
    [v33 safeAreaInsets];
    double v36 = v35;

    id v37 = [v1 view];
    if (!v37)
    {
LABEL_41:
      __break(1u);
      return;
    }
    objc_super v38 = v37;
    double v172 = v30;
    double v39 = v30 + v31 + v31;
    [v37 safeAreaInsets];

    double v40 = UIEdgeInsetsInsetRect(v21, v23, v25, v27, v36, (Width - v39) * 0.5);
    double v42 = v41;
    double v44 = v43;
    double v46 = v45;
    uint64_t v47 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_titleLabel;
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_titleLabel], "sizeThatFits:", v43, v45);
    double v49 = v48;
    uint64_t v50 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_subtitleLabel;
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_subtitleLabel], "sizeThatFits:", v44, v46);
    double v52 = v51;
    if (one-time initialization token for titleTopPadding != -1) {
      swift_once();
    }
    double v171 = v49;
    double v53 = v49 + v39 + *(double *)&static QRCodeOverlayViewController.Specs.titleTopPadding;
    if (one-time initialization token for subtitleTopPadding != -1) {
      swift_once();
    }
    double v54 = v52 + v53 + *(double *)&static QRCodeOverlayViewController.Specs.subtitleTopPadding;
    if (one-time initialization token for scrollContentViewVerticalPadding != -1) {
      swift_once();
    }
    double v55 = v54
        + *(double *)&static QRCodeOverlayViewController.Specs.scrollContentViewVerticalPadding
        + *(double *)&static QRCodeOverlayViewController.Specs.scrollContentViewVerticalPadding;
    v198.origin.CGFloat x = v40;
    v198.origin.CGFloat y = v42;
    v198.size.CGFloat width = v44;
    v198.size.CGFloat height = v46;
    double v56 = CGRectGetWidth(v198);
    uint64_t v57 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_scrollView;
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_scrollView], "setFrame:", v40, v42, v44, v46);
    objc_msgSend(*(id *)&v1[v57], "setContentSize:", v56, v55);
    v199.origin.CGFloat x = v40;
    v199.origin.CGFloat y = v42;
    v199.size.CGFloat width = v44;
    v199.size.CGFloat height = v46;
    CGRectGetHeight(v199);
    long long v58 = *(void **)&v1[v57];
    id v59 = *(id *)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_scrollContentView];
    id v60 = v58;
    CGRect.centeringAlong(axes:in:)();
    double v62 = v61;
    double v64 = v63;
    double v66 = v65;
    double v68 = v67;

    objc_msgSend(v59, "setFrame:", v62, v64, v66, v68);
    uint64_t v69 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_scrollContentView;
    [*(id *)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_scrollContentView] bounds];
    CGFloat rect = v70;
    double v72 = v71;
    CGFloat v74 = v73;
    double v76 = v75;
    uint64_t v77 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCodeBackgroundView;
    uint64_t v78 = *(void **)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCodeBackgroundView];
    if (v78)
    {
      uint64_t v79 = *(void **)&v1[v69];
      id v80 = v78;
      id v81 = v79;
      CGRect.centeringAlong(axes:in:)();
      double v83 = v82;
      double v85 = v84;
      double v87 = v86;
      double v89 = v88;

      objc_msgSend(v80, "setFrame:", v83, v85, v87, v89);
      double v90 = *(void **)&v1[v77];
    }
    else
    {
      double v90 = 0;
    }
    double v91 = v72 + v39 + *(double *)&static QRCodeOverlayViewController.Specs.titleTopPadding;
    CGRect v92 = *(void **)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCodeView];
    double v170 = v76 - (v39 + *(double *)&static QRCodeOverlayViewController.Specs.titleTopPadding);
    id v93 = v92;
    if (v90) {
      [v90 bounds];
    }
    id v94 = [v1 traitCollection];
    [v94 displayScale];

    CGRect.centeringAlong(axes:bounds:scale:)();
    [v92 setFrame:*(void *)&v172];

    id v95 = *(id *)&v1[v47];
    v200.origin.CGFloat x = rect;
    v200.origin.CGFloat y = v91;
    v200.size.CGFloat width = v74;
    v200.size.CGFloat height = v170;
    CGRectGetMinY(v200);
    id v96 = *(id *)&v1[v69];
    CGRect.centeringAlong(axes:in:)();
    double v98 = v97;
    double v100 = v99;
    double v102 = v101;
    double v104 = v103;

    objc_msgSend(v95, "setFrame:", v98, v100, v102, v104);
    CGFloat v105 = v170 - (v171 + *(double *)&static QRCodeOverlayViewController.Specs.subtitleTopPadding);
    CGFloat v106 = v91 + v171 + *(double *)&static QRCodeOverlayViewController.Specs.subtitleTopPadding;
    uint64_t v107 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_subtitleLabelEffectView;
    id v108 = *(id *)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_subtitleLabelEffectView];
    v201.origin.CGFloat x = rect;
    v201.origin.CGFloat y = v106;
    v201.size.CGFloat width = v74;
    v201.size.CGFloat height = v105;
    CGRectGetMinY(v201);
    id v109 = *(id *)&v1[v69];
    CGRect.centeringAlong(axes:in:)();
    double v111 = v110;
    double v113 = v112;
    double v115 = v114;
    double v117 = v116;

    objc_msgSend(v108, "setFrame:", v111, v113, v115, v117);
    long long v118 = *(void **)&v1[v107];
    id v18 = *(id *)&v1[v50];
    [v118 bounds];
  }
  [v18 setFrame:*(void *)&v169];

  id v119 = *(id *)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_backgroundView];
  id v120 = [v1 view];
  if (!v120)
  {
    __break(1u);
    goto LABEL_38;
  }
  long long v121 = v120;
  [v120 bounds];
  double v123 = v122;
  double v125 = v124;
  double v127 = v126;
  double v129 = v128;

  objc_msgSend(v119, "setFrame:", v123, v125, v127, v129);
  uint64_t v130 = &v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCode];
  if (*(void *)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCode + 32] != 76)
  {
    uint64_t v131 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCodeView;
    [*(id *)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCodeView] frame];
    double v132 = CGRectGetWidth(v202) * 0.3;
    if (one-time initialization token for logoMaxWidth != -1) {
      swift_once();
    }
    if (*(double *)&static QRCodeOverlayViewController.Specs.logoMaxWidth < v132) {
      double v132 = *(double *)&static QRCodeOverlayViewController.Specs.logoMaxWidth;
    }
    id v133 = *(id *)&v1[v131];
    CGRect.centeringAlong(axes:in:)();
    double v135 = v134;
    double v137 = v136;
    double v139 = v138;
    double v141 = v140;

    uint64_t v142 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_logoView;
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_logoView], "setFrame:", v135, v137, v139, v141);
    CGAffineTransformMakeScale(&v174, v132 / *(double *)&static QRCodeOverlayViewController.Specs.logoMaxWidth, v132 / *(double *)&static QRCodeOverlayViewController.Specs.logoMaxWidth);
    CGFloat a = v174.a;
    CGFloat b = v174.b;
    CGFloat c = v174.c;
    CGFloat d = v174.d;
    tCGFloat x = v174.tx;
    tCGFloat y = v174.ty;
    long long v149 = *((_OWORD *)v130 + 1);
    v176[0] = *(_OWORD *)v130;
    v176[1] = v149;
    uint64_t v177 = *((void *)v130 + 4);
    __swift_instantiateConcreteTypeFromMangledName(&_ss23_ContiguousArrayStorageCySo7CGPointVGMD_1);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1004A3D30;
    v174.CGFloat a = a;
    v174.CGFloat b = b;
    v174.CGFloat c = c;
    v174.CGFloat d = d;
    v174.tCGFloat x = tx;
    v174.tCGFloat y = ty;
    v181.CGFloat x = 12.0;
    v181.CGFloat y = 15.0;
    *(CGPoint *)(inited + 32) = CGPointApplyAffineTransform(v181, &v174);
    v174.CGFloat a = a;
    v174.CGFloat b = b;
    v174.CGFloat c = c;
    v174.CGFloat d = d;
    v174.tCGFloat x = tx;
    v174.tCGFloat y = ty;
    v182.CGFloat x = 12.0;
    v182.CGFloat y = 6.0;
    *(CGPoint *)(inited + 48) = CGPointApplyAffineTransform(v182, &v174);
    v174.CGFloat a = a;
    v174.CGFloat b = b;
    v174.CGFloat c = c;
    v174.CGFloat d = d;
    v174.tCGFloat x = tx;
    v174.tCGFloat y = ty;
    v183.CGFloat y = 6.0;
    v183.CGFloat x = 36.0;
    *(CGPoint *)(inited + 64) = CGPointApplyAffineTransform(v183, &v174);
    v174.CGFloat a = a;
    v174.CGFloat b = b;
    v174.CGFloat c = c;
    v174.CGFloat d = d;
    v174.tCGFloat x = tx;
    v174.tCGFloat y = ty;
    v184.CGFloat y = 0.0;
    v184.CGFloat x = 36.0;
    *(CGPoint *)(inited + 80) = CGPointApplyAffineTransform(v184, &v174);
    v174.CGFloat a = a;
    v174.CGFloat b = b;
    v174.CGFloat c = c;
    v174.CGFloat d = d;
    v174.tCGFloat x = tx;
    v174.tCGFloat y = ty;
    v185.CGFloat y = 0.0;
    v185.CGFloat x = 85.0;
    *(CGPoint *)(inited + 96) = CGPointApplyAffineTransform(v185, &v174);
    v174.CGFloat a = a;
    v174.CGFloat b = b;
    v174.CGFloat c = c;
    v174.CGFloat d = d;
    v174.tCGFloat x = tx;
    v174.tCGFloat y = ty;
    v186.CGFloat x = 85.0;
    v186.CGFloat y = 90.0;
    *(CGPoint *)(inited + 112) = CGPointApplyAffineTransform(v186, &v174);
    v174.CGFloat a = a;
    v174.CGFloat b = b;
    v174.CGFloat c = c;
    v174.CGFloat d = d;
    v174.tCGFloat x = tx;
    v174.tCGFloat y = ty;
    v187.CGFloat x = 36.0;
    v187.CGFloat y = 90.0;
    *(CGPoint *)(inited + 128) = CGPointApplyAffineTransform(v187, &v174);
    v174.CGFloat a = a;
    v174.CGFloat b = b;
    v174.CGFloat c = c;
    v174.CGFloat d = d;
    v174.tCGFloat x = tx;
    v174.tCGFloat y = ty;
    v188.CGFloat x = 36.0;
    v188.CGFloat y = 95.0;
    *(CGPoint *)(inited + 144) = CGPointApplyAffineTransform(v188, &v174);
    v174.CGFloat a = a;
    v174.CGFloat b = b;
    v174.CGFloat c = c;
    v174.CGFloat d = d;
    v174.tCGFloat x = tx;
    v174.tCGFloat y = ty;
    v189.CGFloat x = 0.0;
    v189.CGFloat y = 95.0;
    *(CGPoint *)(inited + 160) = CGPointApplyAffineTransform(v189, &v174);
    v174.CGFloat a = a;
    v174.CGFloat b = b;
    v174.CGFloat c = c;
    v174.CGFloat d = d;
    v174.tCGFloat x = tx;
    v174.tCGFloat y = ty;
    v190.CGFloat x = 0.0;
    v190.CGFloat y = 57.0;
    *(CGPoint *)(inited + 176) = CGPointApplyAffineTransform(v190, &v174);
    v174.CGFloat a = a;
    v174.CGFloat b = b;
    v174.CGFloat c = c;
    v174.CGFloat d = d;
    v174.tCGFloat x = tx;
    v174.tCGFloat y = ty;
    v191.CGFloat x = 12.0;
    v191.CGFloat y = 57.0;
    *(CGPoint *)(inited + 192) = CGPointApplyAffineTransform(v191, &v174);
    v174.CGFloat a = a;
    v174.CGFloat b = b;
    v174.CGFloat c = c;
    v174.CGFloat d = d;
    v174.tCGFloat x = tx;
    v174.tCGFloat y = ty;
    v192.CGFloat x = 12.0;
    v192.CGFloat y = 15.0;
    *(CGPoint *)(inited + 208) = CGPointApplyAffineTransform(v192, &v174);
    uint64_t v151 = *(void **)&v1[v142];
    outlined retain of Collaboration.Management.QRCodeView(v176);
    [v151 frame];
    CGFloat v153 = v152;
    CGFloat v155 = v154;
    CGFloat v157 = v156;
    CGFloat v159 = v158;
    [*(id *)&v1[v131] bounds];
    CGMutablePathRef v164 = QRCode.dotAlignedPath(with:in:imageBounds:)(inited, v153, v155, v157, v159, v160, v161, v162, v163);
    swift_setDeallocating();
    outlined release of QRCode(v176);
    uint64_t v165 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_destOutLayer;
    [*(id *)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_destOutLayer] setPath:v164];
    uint64_t v166 = *(void **)&v1[v165];
    uint64_t v167 = *(void **)&v1[v131];
    id v168 = v166;
    [v167 bounds];
    objc_msgSend(v168, "setFrame:");
  }
}

Swift::Void __swiftcall QRCodeOverlayViewController.dismissAnimated()()
{
  uint64_t v1 = self;
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = v0;
  CGFloat v12 = partial apply for closure #1 in QRCodeOverlayViewController.dismissAnimated();
  uint64_t v13 = v2;
  CGFloat v8 = _NSConcreteStackBlock;
  uint64_t v9 = 1107296256;
  CGFloat v10 = thunk for @escaping @callee_guaranteed @Sendable () -> ();
  double v11 = &block_descriptor_9_5;
  id v3 = _Block_copy(&v8);
  id v4 = v0;
  swift_release();
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  CGFloat v12 = partial apply for closure #2 in QRCodeOverlayViewController.dismissAnimated();
  uint64_t v13 = v5;
  CGFloat v8 = _NSConcreteStackBlock;
  uint64_t v9 = 1107296256;
  CGFloat v10 = thunk for @escaping @callee_guaranteed (@unowned Bool) -> ();
  double v11 = &block_descriptor_15_2;
  id v6 = _Block_copy(&v8);
  id v7 = v4;
  swift_release();
  [v1 animateWithDuration:v3 animations:v6 completion:0.25];
  _Block_release(v6);
  _Block_release(v3);
}

id closure #1 in QRCodeOverlayViewController.dismissAnimated()(uint64_t a1)
{
  [*(id *)(a1 + OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCodeView) setAlpha:0.0];
  [*(id *)(a1 + OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCodeBackgroundView) setAlpha:0.0];
  [*(id *)(a1 + OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_titleLabel) setAlpha:0.0];
  [*(id *)(a1 + OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_subtitleLabel) setAlpha:0.0];
  id result = [*(id *)(a1 + OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_backgroundView) setEffect:0];
  if (*(void *)(a1 + OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_brightnessManager))
  {
    swift_retain();
    BrightnessManager.resetBrightnessToSystemDefault()();
    return (id)swift_release();
  }
  return result;
}

void QRCodeOverlayViewController.init(nibName:bundle:)()
{
}

id QRCodeOverlayViewController.__deallocating_deinit()
{
  return QRCodeOverlayViewController.__deallocating_deinit(type metadata accessor for QRCodeOverlayViewController);
}

char *QRCodeOverlayViewController.ContainerView.init(frame:)(double a1, double a2, double a3, double a4)
{
  uint64_t v5 = v4;
  *(void *)&v4[OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_image] = 0;
  *(void *)&v4[OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_overlayColor] = 0;
  uint64_t v10 = OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_imageView;
  id v11 = objc_allocWithZone((Class)UIImageView);
  CGFloat v12 = v5;
  id v13 = [v11 init];
  id v14 = UIView.forAutolayout.getter();

  *(void *)&v5[v10] = v14;
  uint64_t v15 = OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_overlayLayer;
  *(void *)&v12[v15] = [objc_allocWithZone((Class)CALayer) init];

  id v16 = (objc_class *)type metadata accessor for QRCodeOverlayViewController.ContainerView();
  v40.receiver = v12;
  v40.super_class = v16;
  double v17 = (char *)objc_msgSendSuper2(&v40, "initWithFrame:", a1, a2, a3, a4);
  uint64_t v18 = OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_imageView;
  uint64_t v19 = *(void *)&v17[OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_imageView];
  double v20 = v17;
  [v20 addSubview:v19];
  double v21 = self;
  __swift_instantiateConcreteTypeFromMangledName(&_ss23_ContiguousArrayStorageCyyXlGMD_1);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_100493EA0;
  id v23 = [*(id *)&v17[v18] leadingAnchor];
  id v24 = [v20 leadingAnchor];
  id v25 = [v23 constraintEqualToAnchor:v24];

  *(void *)(v22 + 32) = v25;
  id v26 = [*(id *)&v17[v18] trailingAnchor];
  id v27 = [v20 trailingAnchor];
  id v28 = [v26 constraintEqualToAnchor:v27];

  *(void *)(v22 + 40) = v28;
  id v29 = [*(id *)&v17[v18] topAnchor];
  id v30 = [v20 topAnchor];
  id v31 = [v29 constraintEqualToAnchor:v30];

  *(void *)(v22 + 48) = v31;
  id v32 = [*(id *)&v17[v18] bottomAnchor];
  id v33 = [v20 bottomAnchor];
  id v34 = [v32 constraintEqualToAnchor:v33];

  *(void *)(v22 + 56) = v34;
  specialized Array._endMutation()();
  type metadata accessor for UIMenu(0, &_sSo18NSLayoutConstraintCML_0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  objc_msgSend(v21, "activateConstraints:", isa, v22);

  type metadata accessor for UIMenu(0, &lazy cache variable for type metadata for UITraitCollection);
  double v36 = v20;
  static UITraitCollection.systemTraitsAffectingColorAppearance.getter();
  v39[3] = v16;
  v39[0] = v36;
  id v37 = v36;
  UIView.registerForTraitChanges(_:target:action:)();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v39);
  return v37;
}

Swift::Void __swiftcall QRCodeOverlayViewController.ContainerView.layoutSubviews()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for QRCodeOverlayViewController.ContainerView();
  objc_msgSendSuper2(&v2, "layoutSubviews");
  type metadata accessor for UIMenu(0, &lazy cache variable for type metadata for CATransaction);
  *(void *)(swift_allocObject() + 16) = v0;
  id v1 = v0;
  static CATransaction.performWithoutAnimation(_:)((void (*)(id))partial apply for closure #1 in QRCodeOverlayViewController.ContainerView.layoutSubviews());
  swift_release();
}

void closure #1 in QRCodeOverlayViewController.ContainerView.layoutSubviews()(uint64_t a1)
{
  id v1 = *(void **)(a1 + OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_imageView);
  id v2 = *(id *)(a1 + OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_overlayLayer);
  [v1 bounds];
  objc_msgSend(v2, "setFrame:");
}

void QRCodeOverlayViewController.ContainerView.updateColor()()
{
  id v1 = *(void **)&v0[OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_overlayColor];
  if (v1)
  {
    uint64_t v2 = OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_overlayLayer;
    id v3 = *(void **)&v0[OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_overlayLayer];
    uint64_t v4 = kCAFilterSourceIn;
    id v13 = v1;
    [v3 setCompositingFilter:v4];
    id v5 = *(id *)&v0[v2];
    id v6 = [v0 traitCollection];
    id v7 = [v13 resolvedColorWithTraitCollection:v6];

    id v8 = [v7 CGColor];
    [v5 setBackgroundColor:v8];

    id v9 = [*(id *)&v0[v2] superlayer];
    if (!v9)
    {
      id v10 = [*(id *)&v0[OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_imageView] layer];
      id v11 = *(id *)&v0[v2];
      [v10 addSublayer:v11];
    }
  }
  else
  {
    CGFloat v12 = *(void **)&v0[OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_overlayLayer];
    [v12 removeFromSuperlayer];
  }
}

id QRCodeOverlayViewController.ContainerView.__deallocating_deinit()
{
  return QRCodeOverlayViewController.__deallocating_deinit(type metadata accessor for QRCodeOverlayViewController.ContainerView);
}

id QRCodeOverlayViewController.__deallocating_deinit(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, "dealloc");
}

uint64_t QRCodeOverlayViewController.ImageViewRepresentable.init(image:)()
{
  return swift_getKeyPath();
}

char *QRCodeOverlayViewController.ImageViewRepresentable.makeUIView(context:)(uint64_t a1, uint64_t a2, char a3, void *a4)
{
  type metadata accessor for QRCodeOverlayViewController.ContainerView();
  id v7 = (char *)[objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  uint64_t v8 = OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_image;
  id v9 = *(void **)&v7[OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_image];
  *(void *)&v7[OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_image] = a4;
  id v10 = a4;

  [*(id *)&v7[OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_imageView] setImage:*(void *)&v7[v8]];
  uint64_t v11 = a3 & 1;
  outlined copy of Environment<Color?>.Content(a2, v11);
  uint64_t v12 = specialized Environment.wrappedValue.getter(a2, a3 & 1);
  outlined consume of Environment<Color?>.Content(a2, v11);
  if (v12)
  {
    type metadata accessor for UIMenu(0, (unint64_t *)&_sSo7UIColorCML_0);
    swift_retain();
    id v13 = (void *)UIColor.init(_:)();
    id v14 = *(void **)&v7[OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_overlayColor];
    *(void *)&v7[OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_overlayColor] = v13;
    id v15 = v13;

    QRCodeOverlayViewController.ContainerView.updateColor()();
    swift_release();
  }
  return v7;
}

void QRCodeOverlayViewController.ImageViewRepresentable.updateUIView(_:context:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  uint64_t v8 = OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_image;
  id v9 = *(void **)(a1 + OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_image);
  *(void *)(a1 + OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_image) = a5;
  id v10 = a5;

  [*(id *)(a1 + OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_imageView) setImage:*(void *)(a1 + v8)];
  uint64_t v11 = a4 & 1;
  outlined copy of Environment<Color?>.Content(a3, v11);
  uint64_t v12 = specialized Environment.wrappedValue.getter(a3, v11);
  outlined consume of Environment<Color?>.Content(a3, v11);
  if (v12)
  {
    type metadata accessor for UIMenu(0, (unint64_t *)&_sSo7UIColorCML_0);
    swift_retain();
    id v13 = (void *)UIColor.init(_:)();
    id v14 = *(void **)(a1 + OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_overlayColor);
    *(void *)(a1 + OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_overlayColor) = v13;
    id v15 = v13;

    QRCodeOverlayViewController.ContainerView.updateColor()();
    swift_release();
  }
}

char *protocol witness for UIViewRepresentable.makeUIView(context:) in conformance QRCodeOverlayViewController.ImageViewRepresentable(uint64_t a1)
{
  return QRCodeOverlayViewController.ImageViewRepresentable.makeUIView(context:)(a1, *(void *)v1, *(unsigned char *)(v1 + 8), *(void **)(v1 + 16));
}

void protocol witness for UIViewRepresentable.updateUIView(_:context:) in conformance QRCodeOverlayViewController.ImageViewRepresentable(uint64_t a1, uint64_t a2)
{
  QRCodeOverlayViewController.ImageViewRepresentable.updateUIView(_:context:)(a1, a2, *(void *)v2, *(unsigned char *)(v2 + 8), *(void **)(v2 + 16));
}

uint64_t protocol witness for static View._makeView(view:inputs:) in conformance QRCodeOverlayViewController.ImageViewRepresentable(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = lazy protocol witness table accessor for type QRCodeOverlayViewController.ImageViewRepresentable and conformance QRCodeOverlayViewController.ImageViewRepresentable();

  return static UIViewRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t protocol witness for static View._makeViewList(view:inputs:) in conformance QRCodeOverlayViewController.ImageViewRepresentable(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = lazy protocol witness table accessor for type QRCodeOverlayViewController.ImageViewRepresentable and conformance QRCodeOverlayViewController.ImageViewRepresentable();

  return static UIViewRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void protocol witness for View.body.getter in conformance QRCodeOverlayViewController.ImageViewRepresentable()
{
}

uint64_t type metadata accessor for QRCodeOverlayViewController()
{
  return self;
}

void specialized closure #1 in QRCodeOverlayViewController.init(qrCode:title:subtitle:)(void *a1)
{
  id v1 = [a1 view];
  if (v1)
  {
    id v2 = v1;
    [v1 setNeedsLayout];
  }
  else
  {
    __break(1u);
  }
}

void *outlined release of QRCode(void *a1)
{
  id v2 = (void *)a1[3];
  outlined consume of Data._Representation(a1[1], a1[2]);

  return a1;
}

uint64_t _s9MusicCore6QRCodeVSgWOb_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&_s9MusicCore6QRCodeVSgMD_0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10041C524()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

void partial apply for closure #1 in QRCodeOverlayViewController.viewDidLoad()()
{
}

void partial apply for closure #1 in QRCodeOverlayViewController.viewDidAppear(_:)()
{
  closure #1 in QRCodeOverlayViewController.viewDidAppear(_:)(*(void *)(v0 + 16));
}

uint64_t block_copy_helper_67(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_67()
{
  return swift_release();
}

id partial apply for closure #1 in QRCodeOverlayViewController.dismissAnimated()()
{
  return closure #1 in QRCodeOverlayViewController.dismissAnimated()(*(void *)(v0 + 16));
}

uint64_t sub_10041C58C()
{
  return swift_deallocObject();
}

id partial apply for closure #2 in QRCodeOverlayViewController.dismissAnimated()()
{
  return [*(id *)(v0 + 16) dismissViewControllerAnimated:0 completion:0];
}

void partial apply for closure #1 in QRCodeOverlayViewController.ContainerView.layoutSubviews()()
{
  closure #1 in QRCodeOverlayViewController.ContainerView.layoutSubviews()(*(void *)(v0 + 16));
}

unint64_t lazy protocol witness table accessor for type QRCodeOverlayViewController.ImageViewRepresentable and conformance QRCodeOverlayViewController.ImageViewRepresentable()
{
  unint64_t result = lazy protocol witness table cache variable for type QRCodeOverlayViewController.ImageViewRepresentable and conformance QRCodeOverlayViewController.ImageViewRepresentable;
  if (!lazy protocol witness table cache variable for type QRCodeOverlayViewController.ImageViewRepresentable and conformance QRCodeOverlayViewController.ImageViewRepresentable)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type QRCodeOverlayViewController.ImageViewRepresentable and conformance QRCodeOverlayViewController.ImageViewRepresentable);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type QRCodeOverlayViewController.ImageViewRepresentable and conformance QRCodeOverlayViewController.ImageViewRepresentable;
  if (!lazy protocol witness table cache variable for type QRCodeOverlayViewController.ImageViewRepresentable and conformance QRCodeOverlayViewController.ImageViewRepresentable)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type QRCodeOverlayViewController.ImageViewRepresentable and conformance QRCodeOverlayViewController.ImageViewRepresentable);
  }
  return result;
}

void destroy for QRCodeOverlayViewController.ImageViewRepresentable(uint64_t a1)
{
  outlined consume of Environment<Color?>.Content(*(void *)a1, *(unsigned __int8 *)(a1 + 8));
  uint64_t v2 = *(void **)(a1 + 16);
}

uint64_t initializeBufferWithCopyOfBuffer for QRCodeOverlayViewController.ImageViewRepresentable(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  unsigned __int8 v5 = *((unsigned char *)a2 + 8);
  outlined copy of Environment<Color?>.Content(*a2, v5);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  unint64_t v6 = (void *)a2[2];
  *(void *)(a1 + 16) = v6;
  id v7 = v6;
  return a1;
}

uint64_t *assignWithCopy for QRCodeOverlayViewController.ImageViewRepresentable(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  unsigned __int8 v5 = *((unsigned char *)a2 + 8);
  outlined copy of Environment<Color?>.Content(*a2, v5);
  uint64_t v6 = *a1;
  uint64_t v7 = *((unsigned __int8 *)a1 + 8);
  *a1 = v4;
  *((unsigned char *)a1 + 8) = v5;
  outlined consume of Environment<Color?>.Content(v6, v7);
  uint64_t v8 = (void *)a2[2];
  id v9 = (void *)a1[2];
  a1[2] = (uint64_t)v8;
  id v10 = v8;

  return a1;
}

uint64_t *assignWithTake for QRCodeOverlayViewController.ImageViewRepresentable(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  char v5 = *((unsigned char *)a2 + 8);
  uint64_t v6 = *a1;
  uint64_t v7 = *((unsigned __int8 *)a1 + 8);
  *a1 = v4;
  *((unsigned char *)a1 + 8) = v5;
  outlined consume of Environment<Color?>.Content(v6, v7);
  uint64_t v8 = (void *)a1[2];
  a1[2] = a2[2];

  return a1;
}

ValueMetadata *type metadata accessor for QRCodeOverlayViewController.ImageViewRepresentable()
{
  return &type metadata for QRCodeOverlayViewController.ImageViewRepresentable;
}

void specialized QRCodeOverlayViewController.init(coder:)()
{
  uint64_t v1 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_backgroundView;
  *(void *)&v0[v1] = [objc_allocWithZone((Class)UIVisualEffectView) init];
  uint64_t v2 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCodeView;
  type metadata accessor for QRCodeOverlayViewController.ContainerView();
  *(void *)&v0[v2] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  uint64_t v3 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_destOutLayer;
  *(void *)&v0[v3] = [objc_allocWithZone((Class)CAShapeLayer) init];
  uint64_t v4 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_logoView;
  NSString v5 = String._bridgeToObjectiveC()();
  id v6 = [self _systemImageNamed:v5];

  id v7 = [objc_allocWithZone((Class)UIImageView) initWithImage:v6];
  *(void *)&v0[v4] = v7;
  uint64_t v8 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_titleLabel;
  *(void *)&v0[v8] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v9 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_subtitleLabelEffectView;
  if (one-time initialization token for blurEffect != -1) {
    swift_once();
  }
  id v10 = [self effectForBlurEffect:static QRCodeOverlayViewController.Specs.blurEffect];
  id v11 = [objc_allocWithZone((Class)UIVisualEffectView) initWithEffect:v10];

  *(void *)&v0[v9] = v11;
  uint64_t v12 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_subtitleLabel;
  *(void *)&v0[v12] = [objc_allocWithZone((Class)UILabel) init];
  *(void *)&v0[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCodeBackgroundView] = 0;
  uint64_t v13 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_scrollView;
  *(void *)&v0[v13] = [objc_allocWithZone((Class)UIScrollView) init];
  uint64_t v14 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_scrollContentView;
  *(void *)&v0[v14] = [objc_allocWithZone((Class)UIView) init];
  *(void *)&v0[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_brightnessManager] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void specialized QRCodeOverlayViewController.ContainerView.init(coder:)()
{
  uint64_t v1 = v0;
  *(void *)&v0[OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_image] = 0;
  *(void *)&v0[OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_overlayColor] = 0;
  uint64_t v2 = OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_imageView;
  id v3 = [objc_allocWithZone((Class)UIImageView) init];
  id v4 = UIView.forAutolayout.getter();

  *(void *)&v1[v2] = v4;
  uint64_t v5 = OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_overlayLayer;
  *(void *)&v1[v5] = [objc_allocWithZone((Class)CALayer) init];

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t Radiosity.ViewModifier.body(content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  id v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Radiosity.View<_ViewModifier_Content<Radiosity.ViewModifier>>)
     - 8;
  __chkstk_darwin();
  uint64_t v8 = &v31[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v32[0] = v2[8];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Bool>);
  State.wrappedValue.getter();
  long long v9 = v2[5];
  long long v11 = v2[3];
  long long v35 = v2[4];
  long long v10 = v35;
  long long v36 = v9;
  long long v12 = v2[5];
  long long v13 = v2[7];
  long long v37 = v2[6];
  long long v14 = v37;
  long long v38 = v13;
  long long v15 = v2[1];
  long long v16 = v2[3];
  long long v33 = v2[2];
  long long v17 = v33;
  long long v34 = v16;
  long long v18 = *v2;
  long long v19 = v2[1];
  v8[*(int *)(v6 + 48)] = v31[15];
  long long v20 = *v2;
  v32[0] = v18;
  v32[1] = v19;
  double v21 = &v8[*(int *)(v6 + 44)];
  v21[4] = v10;
  void v21[5] = v12;
  long long v22 = v2[7];
  v21[6] = v14;
  v21[7] = v22;
  *double v21 = v20;
  v21[1] = v15;
  v21[2] = v17;
  v21[3] = v11;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ViewModifier_Content<Radiosity.ViewModifier>);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16))(v8, a1, v23);
  id v24 = (_OWORD *)swift_allocObject();
  long long v25 = v3[7];
  v24[7] = v3[6];
  v24[8] = v25;
  v24[9] = v3[8];
  long long v26 = v3[3];
  v24[3] = v3[2];
  void v24[4] = v26;
  long long v27 = v3[5];
  v24[5] = v3[4];
  v24[6] = v27;
  long long v28 = v3[1];
  v24[1] = *v3;
  v24[2] = v28;
  outlined init with copy of Radiosity.View<_ViewModifier_Content<Radiosity.ViewModifier>>((uint64_t)v8, a2);
  id v29 = (void *)(a2
                 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Radiosity.View<_ViewModifier_Content<Radiosity.ViewModifier>>, _PreferenceActionModifier<RadiosityEnabledPreferenceKey>>)
                          + 36));
  *id v29 = partial apply for closure #2 in Radiosity.ViewModifier.body(content:);
  v29[1] = v24;
  outlined retain of Radiosity.Specs((uint64_t)v32);
  outlined retain of Radiosity.ViewModifier((uint64_t)v3);
  return outlined destroy of TaskPriority?((uint64_t)v8, &demangling cache variable for type metadata for Radiosity.View<_ViewModifier_Content<Radiosity.ViewModifier>>);
}

uint64_t outlined init with copy of Radiosity.View<_ViewModifier_Content<Radiosity.ViewModifier>>(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Radiosity.View<_ViewModifier_Content<Radiosity.ViewModifier>>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined retain of Radiosity.Specs(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 72);
  id v3 = *(id *)(a1 + 56);
  outlined copy of (@escaping @callee_guaranteed () -> ())?(v2);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t outlined retain of Radiosity.ViewModifier(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 72);
  id v3 = *(id *)(a1 + 56);
  outlined copy of (@escaping @callee_guaranteed () -> ())?(v2);
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t protocol witness for ViewModifier.body(content:) in conformance Radiosity.ViewModifier@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Radiosity.View<_ViewModifier_Content<Radiosity.ViewModifier>>)
     - 8;
  __chkstk_darwin();
  uint64_t v7 = &v30[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  long long v9 = v2[7];
  long long v8 = v2[8];
  long long v37 = v2[6];
  long long v38 = v9;
  long long v10 = v2[3];
  long long v33 = v2[2];
  long long v34 = v10;
  long long v11 = v2[5];
  long long v35 = v2[4];
  long long v36 = v11;
  long long v12 = v2[1];
  long long v31 = *v2;
  long long v32 = v12;
  long long v39 = v8;
  v40[0] = v8;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Bool>);
  State.wrappedValue.getter();
  long long v13 = v35;
  long long v14 = v36;
  v40[4] = v35;
  v40[5] = v36;
  long long v15 = v37;
  long long v16 = v38;
  v40[6] = v37;
  v40[7] = v38;
  long long v17 = v33;
  long long v18 = v34;
  v40[2] = v33;
  v40[3] = v34;
  long long v19 = v31;
  long long v20 = v32;
  v40[0] = v31;
  v40[1] = v32;
  v7[*(int *)(v5 + 48)] = v30[15];
  double v21 = &v7[*(int *)(v5 + 44)];
  v21[4] = v13;
  void v21[5] = v14;
  v21[6] = v15;
  v21[7] = v16;
  *double v21 = v19;
  v21[1] = v20;
  v21[2] = v17;
  v21[3] = v18;
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ViewModifier_Content<Radiosity.ViewModifier>);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v7, a1, v22);
  uint64_t v23 = (_OWORD *)swift_allocObject();
  long long v24 = v38;
  v23[7] = v37;
  v23[8] = v24;
  v23[9] = v39;
  long long v25 = v34;
  v23[3] = v33;
  v23[4] = v25;
  long long v26 = v36;
  v23[5] = v35;
  v23[6] = v26;
  long long v27 = v32;
  v23[1] = v31;
  v23[2] = v27;
  outlined init with copy of Radiosity.View<_ViewModifier_Content<Radiosity.ViewModifier>>((uint64_t)v7, a2);
  long long v28 = (void *)(a2
                 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Radiosity.View<_ViewModifier_Content<Radiosity.ViewModifier>>, _PreferenceActionModifier<RadiosityEnabledPreferenceKey>>)
                          + 36));
  *long long v28 = partial apply for closure #2 in Radiosity.ViewModifier.body(content:);
  v28[1] = v23;
  outlined retain of Radiosity.Specs((uint64_t)v40);
  outlined retain of Radiosity.ViewModifier((uint64_t)&v31);
  return outlined destroy of TaskPriority?((uint64_t)v7, &demangling cache variable for type metadata for Radiosity.View<_ViewModifier_Content<Radiosity.ViewModifier>>);
}

id Radiosity.UIView.__allocating_init(content:isRadiosityEnabled:specs:)(void *a1, char a2, _OWORD *a3)
{
  id v7 = objc_allocWithZone(v3);
  return Radiosity.UIView.init(content:isRadiosityEnabled:specs:)(a1, a2, a3);
}

id protocol witness for UIViewRepresentable.makeUIView(context:) in conformance Radiosity.View<A>(uint64_t a1, uint64_t a2)
{
  return specialized Radiosity.View.makeUIView(context:)(a2);
}

id protocol witness for UIViewRepresentable.updateUIView(_:context:) in conformance Radiosity.View<A>(void *a1, uint64_t a2, uint64_t a3)
{
  return specialized Radiosity.View.updateUIView(_:context:)(a1, a3);
}

double protocol witness for UIViewRepresentable.sizeThatFits(_:uiView:context:) in conformance Radiosity.View<A>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  return specialized Radiosity.View.sizeThatFits(_:uiView:context:)(a5);
}

uint64_t protocol witness for static View._makeView(view:inputs:) in conformance Radiosity.View<A>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return static UIViewRepresentable._makeView(view:inputs:)(a1, a2, a3, WitnessTable);
}

uint64_t protocol witness for static View._makeViewList(view:inputs:) in conformance Radiosity.View<A>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return static UIViewRepresentable._makeViewList(view:inputs:)(a1, a2, a3, WitnessTable);
}

void protocol witness for View.body.getter in conformance Radiosity.View<A>()
{
}

id Radiosity.UIView.content.getter()
{
  return *(id *)(v0 + direct field offset for Radiosity.UIView.content);
}

id Radiosity.UIView.isRadiosityEnabled.didset(char a1)
{
  int v2 = a1 & 1;
  id v3 = &v1[direct field offset for Radiosity.UIView.isRadiosityEnabled];
  id result = (id)swift_beginAccess();
  if (*v3 != v2)
  {
    if (*v3)
    {
      [v1 addSubview:*(void *)&v1[direct field offset for Radiosity.UIView.dropShadow]];
      return [v1 addSubview:*(void *)&v1[direct field offset for Radiosity.UIView.radiosity]];
    }
    else
    {
      [*(id *)&v1[direct field offset for Radiosity.UIView.dropShadow] removeFromSuperview];
      return [*(id *)&v1[direct field offset for Radiosity.UIView.radiosity] removeFromSuperview];
    }
  }
  return result;
}

uint64_t Radiosity.UIView.isRadiosityEnabled.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + direct field offset for Radiosity.UIView.isRadiosityEnabled);
  swift_beginAccess();
  return *v1;
}

id Radiosity.UIView.isRadiosityEnabled.setter(char a1)
{
  id v3 = (char *)(v1 + direct field offset for Radiosity.UIView.isRadiosityEnabled);
  swift_beginAccess();
  char v4 = *v3;
  *id v3 = a1;
  return Radiosity.UIView.isRadiosityEnabled.didset(v4);
}

void (*Radiosity.UIView.isRadiosityEnabled.modify(void *a1))(uint64_t a1)
{
  id v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[3] = v1;
  char v4 = (unsigned char *)(v1 + direct field offset for Radiosity.UIView.isRadiosityEnabled);
  swift_beginAccess();
  *((unsigned char *)v3 + 32) = *v4;
  return Radiosity.UIView.isRadiosityEnabled.modify;
}

void Radiosity.UIView.isRadiosityEnabled.modify(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  Radiosity.UIView.isRadiosityEnabled.setter(*(unsigned char *)(*(void *)a1 + 32));

  free(v1);
}

void Radiosity.UIView.specs.didset(uint64_t a1)
{
  long long v5 = *(_OWORD *)(a1 + 64);
  uint64_t v6 = *(void *)(a1 + 80);
  outlined init with take of Radiosity.Specs.Shadow.DrawMode((long long *)((char *)&v5 + 8), &v7);
  uint64_t v2 = v1 + direct field offset for Radiosity.UIView.specs;
  swift_beginAccess();
  uint64_t v3 = *(void *)(v2 + 72);
  outlined init with take of Radiosity.Specs.Shadow.DrawMode(&v7, &v8);
  if ((void)v8) {
    char v4 = v3 == 0;
  }
  else {
    char v4 = v3 != 0;
  }
  Radiosity.UIView.updateDropShadow(requireReinstallation:)(v4);
  Radiosity.UIView.updateRadiosity()();
}

double Radiosity.UIView.specs.getter@<D0>(_OWORD *a1@<X8>)
{
  specialized Radiosity.UIView.specs.getter((uint64_t)v7);
  outlined retain of Radiosity.Specs((uint64_t)v7);
  long long v2 = v11;
  a1[4] = v10;
  a1[5] = v2;
  long long v3 = v13;
  a1[6] = v12;
  a1[7] = v3;
  long long v4 = v7[1];
  *a1 = v7[0];
  a1[1] = v4;
  double result = *(double *)&v8;
  long long v6 = v9;
  a1[2] = v8;
  a1[3] = v6;
  return result;
}

uint64_t Radiosity.UIView.specs.setter(_OWORD *a1)
{
  long long v3 = (_OWORD *)(v1 + direct field offset for Radiosity.UIView.specs);
  swift_beginAccess();
  long long v4 = v3[5];
  long long v16 = v3[4];
  long long v17 = v4;
  long long v5 = v3[7];
  long long v18 = v3[6];
  long long v6 = v3[1];
  v13[0] = *v3;
  v13[1] = v6;
  long long v7 = v3[3];
  long long v14 = v3[2];
  long long v15 = v7;
  long long v19 = v5;
  v20[0] = v13[0];
  v20[1] = v6;
  v20[2] = v14;
  v20[3] = v7;
  v20[4] = v16;
  v20[5] = v4;
  void v20[6] = v18;
  v20[7] = v5;
  long long v8 = a1[3];
  v3[2] = a1[2];
  v3[3] = v8;
  long long v9 = a1[1];
  *long long v3 = *a1;
  v3[1] = v9;
  long long v10 = a1[7];
  v3[6] = a1[6];
  v3[7] = v10;
  long long v11 = a1[5];
  v3[4] = a1[4];
  v3[5] = v11;
  outlined retain of Radiosity.Specs((uint64_t)v13);
  outlined retain of Radiosity.Specs((uint64_t)a1);
  outlined release of Radiosity.Specs((uint64_t)v20);
  Radiosity.UIView.specs.didset((uint64_t)v13);
  outlined release of Radiosity.Specs((uint64_t)a1);
  return outlined release of Radiosity.Specs((uint64_t)v13);
}

void (*Radiosity.UIView.specs.modify(void *a1))(uint64_t a1, char a2)
{
  long long v3 = malloc(0x2A0uLL);
  *a1 = v3;
  v3[83] = v1;
  long long v4 = (long long *)(v1 + direct field offset for Radiosity.UIView.specs);
  swift_beginAccess();
  long long v5 = v4[4];
  long long v6 = v4[5];
  *((_OWORD *)v3 + 4) = v5;
  *((_OWORD *)v3 + 5) = v6;
  long long v7 = v4[6];
  long long v8 = v4[7];
  *((_OWORD *)v3 + 6) = v7;
  *((_OWORD *)v3 + 7) = v8;
  long long v9 = *v4;
  long long v10 = v4[1];
  *(_OWORD *)long long v3 = *v4;
  *((_OWORD *)v3 + 1) = v10;
  long long v11 = v4[2];
  long long v12 = v4[3];
  *((_OWORD *)v3 + 2) = v11;
  *((_OWORD *)v3 + 3) = v12;
  *((_OWORD *)v3 + 24) = v9;
  *((_OWORD *)v3 + 25) = v10;
  *((_OWORD *)v3 + 26) = v11;
  *((_OWORD *)v3 + 27) = v12;
  *((_OWORD *)v3 + 28) = v5;
  *((_OWORD *)v3 + 29) = v6;
  *((_OWORD *)v3 + 30) = v7;
  *((_OWORD *)v3 + 31) = v8;
  outlined retain of Radiosity.Specs((uint64_t)v3);
  return Radiosity.UIView.specs.modify;
}

void Radiosity.UIView.specs.modify(uint64_t a1, char a2)
{
  long long v2 = *(_OWORD **)a1;
  long long v3 = (_OWORD *)(*(void *)a1 + 384);
  long long v4 = *(_OWORD *)(*(void *)a1 + 464);
  if (a2)
  {
    v2[12] = *(_OWORD *)(*(void *)a1 + 448);
    v2[13] = v4;
    long long v5 = v3[7];
    v2[14] = v3[6];
    v2[15] = v5;
    long long v6 = v3[1];
    v2[8] = *v3;
    v2[9] = v6;
    long long v7 = v3[3];
    v2[10] = v3[2];
    v2[11] = v7;
    outlined retain of Radiosity.Specs((uint64_t)(v2 + 8));
    Radiosity.UIView.specs.setter(v2 + 8);
    long long v8 = v3[5];
    v2[36] = v3[4];
    v2[37] = v8;
    long long v9 = v3[7];
    v2[38] = v3[6];
    v2[39] = v9;
    long long v10 = v3[1];
    v2[32] = *v3;
    v2[33] = v10;
    long long v11 = v3[3];
    v2[34] = v3[2];
    v2[35] = v11;
    outlined release of Radiosity.Specs((uint64_t)(v2 + 32));
  }
  else
  {
    v2[20] = *(_OWORD *)(*(void *)a1 + 448);
    v2[21] = v4;
    long long v12 = v3[7];
    v2[22] = v3[6];
    v2[23] = v12;
    long long v13 = v3[1];
    v2[16] = *v3;
    v2[17] = v13;
    long long v14 = v3[3];
    v2[18] = v3[2];
    v2[19] = v14;
    Radiosity.UIView.specs.setter(v2 + 16);
  }

  free(v2);
}

long long *Radiosity.Specs.containerDetailHeaderArtwork.unsafeMutableAddressor()
{
  if (one-time initialization token for containerDetailHeaderArtwork != -1) {
    swift_once();
  }
  return &static Radiosity.Specs.containerDetailHeaderArtwork;
}

id Radiosity.UIView.init(content:isRadiosityEnabled:specs:)(void *a1, char a2, _OWORD *a3)
{
  long long v4 = v3;
  uint64_t ObjectType = swift_getObjectType();
  *(void *)&v4[direct field offset for Radiosity.UIView.content] = a1;
  long long v9 = &v4[direct field offset for Radiosity.UIView.specs];
  objc_super v10 = (objc_super)a3[3];
  long long v12 = a3[4];
  long long v11 = a3[5];
  v9[4] = v12;
  _OWORD v9[5] = v11;
  long long v13 = a3[7];
  v9[6] = a3[6];
  v9[7] = v13;
  long long v14 = a3[1];
  *long long v9 = *a3;
  v9[1] = v14;
  long long v15 = a3[3];
  v9[2] = a3[2];
  v9[3] = v15;
  v4[direct field offset for Radiosity.UIView.isRadiosityEnabled] = a2;
  uint64_t v37 = *((void *)a3 + 10);
  v35[1] = v10;
  long long v36 = v12;
  outlined init with take of Radiosity.Specs.Shadow.DrawMode((long long *)((char *)&v36 + 8), &v38);
  outlined init with take of Radiosity.Specs.Shadow.DrawMode(&v38, &v39);
  if ((void)v39)
  {
    id v16 = objc_allocWithZone((Class)UIView);
    long long v17 = v4;
    id v18 = a1;
    outlined retain of Radiosity.Specs((uint64_t)a3);
    id v19 = [v16 init];
  }
  else
  {
    id v20 = objc_allocWithZone((Class)_UIPortalView);
    double v21 = v4;
    id v22 = a1;
    outlined retain of Radiosity.Specs((uint64_t)a3);
    id v19 = [v20 initWithSourceView:v22];
  }
  uint64_t v23 = v19;
  *(void *)&v4[direct field offset for Radiosity.UIView.dropShadow] = v19;
  id v24 = objc_allocWithZone((Class)_UIPortalView);
  id v25 = v23;
  id v26 = [v24 initWithSourceView:a1];
  *(void *)&v4[direct field offset for Radiosity.UIView.radiosity] = v26;
  id v27 = v26;

  v35[0].receiver = v4;
  v35[0].super_class = (Class)type metadata accessor for Radiosity.UIView();
  id v28 = -[objc_super initWithFrame:](v35, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  [v28 addSubview:a1];
  if (a2)
  {
    [v28 addSubview:v25];
    [v28 addSubview:v27];
  }
  id v29 = a1;
  [v28 bounds];
  objc_msgSend(v29, "setFrame:");

  [v29 setAutoresizingMask:18];
  Radiosity.UIView.updateDropShadow(requireReinstallation:)(0);
  Radiosity.UIView.updateRadiosity()();
  id v30 = [v28 traitCollection];
  id v31 = [v30 userInterfaceStyle];

  Radiosity.UIView.updateUserInterfaceStyle(userInterfaceStyle:)((uint64_t)v31);
  __swift_instantiateConcreteTypeFromMangledName(&_ss23_ContiguousArrayStorageCy5UIKit17UITraitDefinition_pXpGMD_0);
  uint64_t v32 = swift_allocObject();
  *(_OWORD *)(v32 + 16) = xmmword_100493400;
  *(void *)(v32 + 32) = type metadata accessor for UITraitUserInterfaceStyle();
  *(void *)(v32 + 40) = &protocol witness table for UITraitUserInterfaceStyle;
  *(void *)(swift_allocObject() + 16) = ObjectType;
  id v33 = v28;
  UIView.registerForTraitChanges<A>(_:handler:)();
  outlined release of Radiosity.Specs((uint64_t)a3);

  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return v33;
}

void @objc Radiosity.UIView.init(coder:)()
{
}

uint64_t sub_10041DBD8(uint64_t a1)
{
  id v3 = v1;
  return a1;
}

double @objc Radiosity.UIView.intrinsicContentSize.getter(void *a1)
{
  id v1 = a1;
  Radiosity.UIView.intrinsicContentSize.getter();
  double v3 = v2;

  return v3;
}

id Radiosity.UIView.intrinsicContentSize.getter()
{
  return [*(id *)(v0 + direct field offset for Radiosity.UIView.content) intrinsicContentSize];
}

Swift::Void __swiftcall Radiosity.UIView.layoutSubviews()()
{
  v1.receiver = v0;
  v1.super_class = (Class)type metadata accessor for Radiosity.UIView();
  objc_msgSendSuper2(&v1, "layoutSubviews");
  Radiosity.UIView.updateDropShadow(requireReinstallation:)(0);
  Radiosity.UIView.updateRadiosity()();
}

void @objc Radiosity.UIView.layoutSubviews()(void *a1)
{
  id v1 = a1;
  Radiosity.UIView.layoutSubviews()();
}

void Radiosity.UIView.dropShadow.setter(uint64_t a1)
{
  double v2 = *(void **)(v1 + direct field offset for Radiosity.UIView.dropShadow);
  *(void *)(v1 + direct field offset for Radiosity.UIView.dropShadow) = a1;
}

void Radiosity.UIView.updateDropShadow(requireReinstallation:)(char a1)
{
  double v2 = v1;
  if (a1)
  {
    [*(id *)&v1[direct field offset for Radiosity.UIView.dropShadow] removeFromSuperview];
    double v3 = &v1[direct field offset for Radiosity.UIView.specs];
    swift_beginAccess();
    long long v56 = *((_OWORD *)v3 + 4);
    long long v57 = *((_OWORD *)v3 + 5);
    v84[1] = *((_OWORD *)v3 + 3);
    long long v85 = v56;
    uint64_t v86 = v57;
    outlined init with take of Radiosity.Specs.Shadow.DrawMode((long long *)((char *)&v85 + 8), &v87);
    outlined init with take of Radiosity.Specs.Shadow.DrawMode(&v87, &v88);
    if ((void)v88) {
      id v4 = [objc_allocWithZone((Class)UIView) init];
    }
    else {
      id v4 = [objc_allocWithZone((Class)_UIPortalView) initWithSourceView:*(void *)&v2[direct field offset for Radiosity.UIView.content]];
    }
    long long v5 = *(void **)&v2[direct field offset for Radiosity.UIView.dropShadow];
    *(void *)&v2[direct field offset for Radiosity.UIView.dropShadow] = v4;
    id v6 = v4;

    long long v7 = &v2[direct field offset for Radiosity.UIView.isRadiosityEnabled];
    swift_beginAccess();
    if (*v7 == 1) {
      [v2 addSubview:v6];
    }
  }
  long long v8 = &v2[direct field offset for Radiosity.UIView.specs];
  swift_beginAccess();
  long long v9 = *((_OWORD *)v8 + 5);
  long long v60 = *((_OWORD *)v8 + 4);
  long long v61 = v9;
  long long v10 = *((_OWORD *)v8 + 7);
  long long v62 = *((_OWORD *)v8 + 6);
  long long v63 = v10;
  long long v11 = *((_OWORD *)v8 + 1);
  *(_OWORD *)&v58.CGFloat a = *(_OWORD *)v8;
  *(_OWORD *)&v58.CGFloat c = v11;
  long long v12 = *((_OWORD *)v8 + 3);
  *(_OWORD *)&v58.tCGFloat x = *((_OWORD *)v8 + 2);
  long long v59 = v12;
  outlined retain of Radiosity.Specs((uint64_t)&v58);
  [v2 bounds];
  CGFloat x = v91.origin.x;
  CGFloat y = v91.origin.y;
  CGFloat width = v91.size.width;
  CGFloat height = v91.size.height;
  CGAffineTransform v72 = v58;
  CGRect v92 = CGRectApplyAffineTransform(v91, &v72);
  CGFloat v17 = v92.origin.x;
  CGFloat v18 = v92.origin.y;
  double v19 = v92.size.width;
  double v20 = v92.size.height;
  v92.origin.CGFloat x = x;
  v92.origin.CGFloat y = y;
  v92.size.CGFloat width = width;
  v92.size.CGFloat height = height;
  double MinX = CGRectGetMinX(v92);
  v93.origin.CGFloat x = x;
  v93.origin.CGFloat y = y;
  v93.size.CGFloat width = width;
  v93.size.CGFloat height = height;
  double v54 = CGRectGetWidth(v93);
  v94.origin.CGFloat x = v17;
  v94.origin.CGFloat y = v18;
  v94.size.CGFloat width = v19;
  v94.size.CGFloat height = v20;
  double v53 = CGRectGetWidth(v94);
  v95.origin.CGFloat x = x;
  v95.origin.CGFloat y = y;
  v95.size.CGFloat width = width;
  v95.size.CGFloat height = height;
  double v21 = CGRectGetHeight(v95);
  v96.origin.CGFloat x = v17;
  v96.origin.CGFloat y = v18;
  v96.size.CGFloat width = v19;
  v96.size.CGFloat height = v20;
  double v22 = CGRectGetHeight(v96);
  outlined release of Radiosity.Specs((uint64_t)&v58);
  id v23 = *(id *)&v2[direct field offset for Radiosity.UIView.dropShadow];
  [v2 bounds];
  objc_msgSend(v23, "setFrame:");

  id v24 = [*(id *)&v2[direct field offset for Radiosity.UIView.dropShadow] layer];
  id v25 = &v2[direct field offset for Radiosity.UIView.specs];
  swift_beginAccess();
  [v24 setShadowColor:*((void *)v25 + 7)];

  id v26 = [*(id *)&v2[direct field offset for Radiosity.UIView.dropShadow] layer];
  id v27 = &v2[direct field offset for Radiosity.UIView.specs];
  swift_beginAccess();
  LODWORD(v28) = *((_DWORD *)v27 + 12);
  [v26 setShadowOpacity:v28];

  id v29 = [*(id *)&v2[direct field offset for Radiosity.UIView.dropShadow] layer];
  id v30 = (double *)&v2[direct field offset for Radiosity.UIView.specs];
  swift_beginAccess();
  [v29 setShadowRadius:v30[8]];

  id v31 = [*(id *)&v2[direct field offset for Radiosity.UIView.dropShadow] layer];
  uint64_t v32 = &v2[direct field offset for Radiosity.UIView.specs];
  swift_beginAccess();
  long long v33 = *((_OWORD *)v32 + 5);
  long long v68 = *((_OWORD *)v32 + 4);
  long long v69 = v33;
  long long v34 = *((_OWORD *)v32 + 7);
  long long v70 = *((_OWORD *)v32 + 6);
  long long v71 = v34;
  long long v35 = *((_OWORD *)v32 + 1);
  long long v64 = *(_OWORD *)v32;
  long long v65 = v35;
  long long v36 = *((_OWORD *)v32 + 3);
  long long v66 = *((_OWORD *)v32 + 2);
  long long v67 = v36;
  v81[1] = v36;
  long long v82 = v68;
  uint64_t v83 = v33;
  outlined init with take of Radiosity.Specs.Shadow.DrawMode((long long *)((char *)&v82 + 8), v84);
  outlined init with take of Radiosity.Specs.Shadow.DrawMode(v84, &v89);
  uint64_t v37 = (uint64_t (*)(uint64_t *, double, double, double, double, double))v89;
  if ((void)v89)
  {
    long long v38 = (double *)&v2[direct field offset for Radiosity.UIView.specs];
    swift_beginAccess();
    double v39 = v38[8];
    objc_super v40 = outlined retain of Radiosity.Specs.Shadow.DrawMode((uint64_t *)v84);
    double v41 = (void *)v37(v40, MinX + (v54 - v53) * 0.5, v21 - v22, v19, v20, v39);
    double v43 = v42;
    outlined release of Radiosity.Specs.Shadow.DrawMode((uint64_t *)v84);
  }
  else
  {
    double v41 = 0;
  }
  [v31 setShadowPath:v41];

  id v44 = [*(id *)&v2[direct field offset for Radiosity.UIView.dropShadow] layer];
  double v45 = &v2[direct field offset for Radiosity.UIView.specs];
  swift_beginAccess();
  long long v46 = *((_OWORD *)v45 + 5);
  long long v74 = *((_OWORD *)v45 + 4);
  long long v75 = v46;
  long long v47 = *((_OWORD *)v45 + 7);
  long long v76 = *((_OWORD *)v45 + 6);
  long long v77 = v47;
  long long v48 = *((_OWORD *)v45 + 1);
  *(_OWORD *)&v72.CGFloat a = *(_OWORD *)v45;
  *(_OWORD *)&v72.CGFloat c = v48;
  long long v49 = *((_OWORD *)v45 + 3);
  *(_OWORD *)&v72.tCGFloat x = *((_OWORD *)v45 + 2);
  long long v73 = v49;
  long long v78 = v49;
  long long v79 = v74;
  uint64_t v80 = v46;
  outlined init with take of Radiosity.Specs.Shadow.DrawMode((long long *)((char *)&v79 + 8), v81);
  outlined init with take of Radiosity.Specs.Shadow.DrawMode(v81, &v90);
  uint64_t v50 = (uint64_t (*)(uint64_t, double, double, double, double, double))v90;
  if ((void)v90)
  {
    uint64_t v51 = *((void *)&v90 + 1);
    outlined retain of Radiosity.Specs.Shadow.DrawMode((uint64_t *)v81);
    id v52 = closure #1 in Radiosity.UIView.updateDropShadow(requireReinstallation:)(v50, v51, v2);
    outlined release of Radiosity.Specs.Shadow.DrawMode((uint64_t *)v81);
  }
  else
  {
    id v52 = 0;
  }
  [v44 setMask:v52];
}

id closure #1 in Radiosity.UIView.updateDropShadow(requireReinstallation:)(uint64_t (*a1)(uint64_t, double, double, double, double, double), uint64_t a2, char *a3)
{
  id v5 = [objc_allocWithZone((Class)CAShapeLayer) init];
  id v6 = self;
  id v7 = v5;
  id v8 = [v6 blackColor];
  id v9 = [v8 CGColor];

  [v7 setBackgroundColor:v9];
  [a3 bounds];
  double v11 = v10;
  double v13 = v12;
  double v15 = v14;
  double v17 = v16;
  CGFloat v18 = (double *)&a3[direct field offset for Radiosity.UIView.specs];
  uint64_t v19 = swift_beginAccess();
  double v20 = (void *)a1(v19, v11, v13, v15, v17, v18[8]);
  double v22 = v21;

  [v7 setPath:v22];
  [v7 setFillRule:kCAFillRuleEvenOdd];
  return v7;
}

void Radiosity.UIView.updateRadiosity()()
{
  uint64_t v1 = v0;
  double v2 = &v0[direct field offset for Radiosity.UIView.specs];
  swift_beginAccess();
  long long v3 = *((_OWORD *)v2 + 5);
  long long v44 = *((_OWORD *)v2 + 4);
  long long v45 = v3;
  long long v4 = *((_OWORD *)v2 + 7);
  long long v46 = *((_OWORD *)v2 + 6);
  long long v47 = v4;
  long long v5 = *((_OWORD *)v2 + 1);
  long long v40 = *(_OWORD *)v2;
  long long v41 = v5;
  long long v6 = *((_OWORD *)v2 + 3);
  long long v42 = *((_OWORD *)v2 + 2);
  long long v43 = v6;
  outlined retain of Radiosity.Specs((uint64_t)&v40);
  [v1 bounds];
  CGFloat x = v48.origin.x;
  CGFloat y = v48.origin.y;
  CGFloat width = v48.size.width;
  CGFloat height = v48.size.height;
  *(_OWORD *)&rect[3] = v40;
  *(_OWORD *)&rect[5] = v41;
  *(_OWORD *)&rect[7] = v42;
  CGRect v49 = CGRectApplyAffineTransform(v48, (CGAffineTransform *)&rect[3]);
  CGFloat v11 = v49.origin.x;
  rect[0] = *(void *)&v49.origin.x;
  rect[2] = *(void *)&v49.origin.y;
  double v12 = v49.size.width;
  double v13 = v49.size.height;
  v49.origin.CGFloat x = x;
  v49.origin.CGFloat y = y;
  v49.size.CGFloat width = width;
  v49.size.CGFloat height = height;
  rect[1] = CGRectGetMinX(v49);
  v50.origin.CGFloat x = x;
  v50.origin.CGFloat y = y;
  v50.size.CGFloat width = width;
  v50.size.CGFloat height = height;
  double v14 = CGRectGetWidth(v50);
  v51.origin.CGFloat x = v11;
  *(void *)&v51.origin.CGFloat y = rect[2];
  v51.size.CGFloat width = v12;
  v51.size.CGFloat height = v13;
  double v15 = *(double *)&rect[1] + (v14 - CGRectGetWidth(v51)) * 0.5;
  v52.origin.CGFloat x = x;
  v52.origin.CGFloat y = y;
  v52.size.CGFloat width = width;
  v52.size.CGFloat height = height;
  double v16 = CGRectGetHeight(v52);
  *(void *)&v53.origin.CGFloat x = rect[0];
  *(void *)&v53.origin.CGFloat y = rect[2];
  v53.size.CGFloat width = v12;
  v53.size.CGFloat height = v13;
  double v17 = CGRectGetHeight(v53);
  outlined release of Radiosity.Specs((uint64_t)&v40);
  CGFloat v18 = *(void **)&v1[direct field offset for Radiosity.UIView.radiosity];
  objc_msgSend(v18, "setFrame:", v15, v16 - v17, v12, v13);
  uint64_t v19 = &v1[direct field offset for Radiosity.UIView.specs];
  swift_beginAccess();
  long long v20 = *((_OWORD *)v19 + 1);
  *(_OWORD *)&rect[3] = *(_OWORD *)v19;
  *(_OWORD *)&rect[5] = v20;
  *(_OWORD *)&rect[7] = *((_OWORD *)v19 + 2);
  [v18 setTransform:&rect[3]];
  rect[2] = [v18 layer];
  __swift_instantiateConcreteTypeFromMangledName(&_ss23_ContiguousArrayStorageCyypGMD_1);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_100493D00;
  double v22 = &v1[direct field offset for Radiosity.UIView.specs];
  swift_beginAccess();
  id v23 = (void (*)(id))*((void *)v22 + 13);
  swift_retain();
  swift_retain();
  id v24 = [v1 traitCollection];
  id v25 = [v24 userInterfaceStyle];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v26 = objc_allocWithZone((Class)CAFilter);
  NSString v27 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v28 = [v26 initWithType:v27];

  v23(v25);
  Class isa = Double._bridgeToObjectiveC()().super.super.isa;
  [v28 setValue:isa forKey:kCAFilterInputAmount];
  swift_release();
  swift_release();

  unint64_t v30 = type metadata accessor for CAFilter();
  *(void *)(v21 + 56) = v30;
  *(void *)(v21 + 32) = v28;
  swift_beginAccess();
  id v31 = specialized Radiosity.Specs.Radiosity.gaussianBlurFilter.getter();
  *(void *)(v21 + 88) = v30;
  *(void *)(v21 + 64) = v31;
  Class v32 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [(id)rect[2] setFilters:v32];

  id v33 = [v18 layer];
  long long v34 = &v1[direct field offset for Radiosity.UIView.specs];
  swift_beginAccess();
  long long v35 = (float (*)(id))*((void *)v34 + 11);
  swift_retain();
  id v36 = [v1 traitCollection];
  id v37 = [v36 userInterfaceStyle];

  LODWORD(v16) = v35(v37);
  swift_release();
  LODWORD(v38) = LODWORD(v16);
  [v33 setOpacity:v38];
}

void Radiosity.UIView.updateUserInterfaceStyle(userInterfaceStyle:)(uint64_t a1)
{
  Radiosity.UIView.updateRadiosity()();
  id v3 = [*(id *)(v1 + direct field offset for Radiosity.UIView.dropShadow) layer];
  long long v4 = v3;
  if (a1 == 2) {
    double v5 = -1.0;
  }
  else {
    double v5 = -2.0;
  }
  if (a1 == 2) {
    double v6 = -2.0;
  }
  else {
    double v6 = -1.0;
  }
  [v3 setZPosition:v5];

  id v7 = [*(id *)(v1 + direct field offset for Radiosity.UIView.radiosity) layer];
  [v7 setZPosition:v6];
}

void Radiosity.UIView.init(frame:)()
{
}

void @objc Radiosity.UIView.init(frame:)()
{
}

id Radiosity.UIView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for Radiosity.UIView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

void @objc Radiosity.UIView.__ivar_destroyer(uint64_t a1)
{
  long long v2 = *(_OWORD *)(a1 + direct field offset for Radiosity.UIView.specs + 80);
  v6[4] = *(_OWORD *)(a1 + direct field offset for Radiosity.UIView.specs + 64);
  _OWORD v6[5] = v2;
  long long v3 = *(_OWORD *)(a1 + direct field offset for Radiosity.UIView.specs + 112);
  v6[6] = *(_OWORD *)(a1 + direct field offset for Radiosity.UIView.specs + 96);
  v6[7] = v3;
  long long v4 = *(_OWORD *)(a1 + direct field offset for Radiosity.UIView.specs + 16);
  v6[0] = *(_OWORD *)(a1 + direct field offset for Radiosity.UIView.specs);
  v6[1] = v4;
  long long v5 = *(_OWORD *)(a1 + direct field offset for Radiosity.UIView.specs + 48);
  v6[2] = *(_OWORD *)(a1 + direct field offset for Radiosity.UIView.specs + 32);
  v6[3] = v5;
  outlined release of Radiosity.Specs((uint64_t)v6);
}

__n128 Radiosity.Specs.transform.getter@<Q0>(uint64_t a1@<X8>)
{
  long long v2 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v1;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(v1 + 32);
  *(__n128 *)(a1 + 32) = result;
  return result;
}

__n128 Radiosity.Specs.transform.setter(uint64_t a1)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)uint64_t v1 = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 16) = v2;
  __n128 result = *(__n128 *)(a1 + 32);
  *(__n128 *)(v1 + 32) = result;
  return result;
}

float Radiosity.Specs.Shadow.opacity.getter()
{
  return *(float *)v0;
}

uint64_t Radiosity.Specs.Shadow.drawMode.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  outlined copy of (@escaping @callee_guaranteed () -> ())?(v1);
  return v1;
}

uint64_t Radiosity.Specs.Shadow.drawMode.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = outlined consume of (@escaping @callee_guaranteed () -> ())?(*(void *)(v2 + 24));
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return result;
}

uint64_t Radiosity.Specs.shadow.getter@<X0>(uint64_t a1@<X8>)
{
  int v3 = *(_DWORD *)(v1 + 48);
  long long v4 = *(void **)(v1 + 56);
  uint64_t v5 = *(void *)(v1 + 64);
  uint64_t v7 = *(void *)(v1 + 72);
  uint64_t v6 = *(void *)(v1 + 80);
  id v8 = v4;
  uint64_t result = outlined copy of (@escaping @callee_guaranteed () -> ())?(v7);
  *(_DWORD *)a1 = v3;
  *(void *)(a1 + 8) = v8;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v6;
  return result;
}

__n128 Radiosity.Specs.shadow.setter(uint64_t a1)
{
  outlined consume of (@escaping @callee_guaranteed () -> ())?(*(void *)(v1 + 72));
  __n128 result = *(__n128 *)a1;
  long long v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 48) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 64) = v4;
  *(void *)(v1 + 80) = *(void *)(a1 + 32);
  return result;
}

uint64_t Radiosity.Specs.radiosity.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 112);
  uint64_t v3 = *(void *)(v1 + 120);
  *(void *)a1 = *(void *)(v1 + 88);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v1 + 96);
  *(void *)(a1 + 24) = v2;
  *(void *)(a1 + 32) = v3;
  swift_retain();

  return swift_retain();
}

__n128 Radiosity.Specs.radiosity.setter(uint64_t a1)
{
  swift_release();
  swift_release();
  __n128 result = *(__n128 *)a1;
  long long v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 88) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 104) = v4;
  *(void *)(v1 + 120) = *(void *)(a1 + 32);
  return result;
}

uint64_t View.radiosity(specs:)(long long *a1)
{
  long long v8 = a1[4];
  long long v9 = a1[5];
  long long v10 = a1[6];
  long long v11 = a1[7];
  long long v4 = *a1;
  long long v5 = a1[1];
  long long v6 = a1[2];
  long long v7 = a1[3];
  outlined retain of Radiosity.Specs((uint64_t)a1);
  State.init(wrappedValue:)();
  char v1 = v12[0];
  uint64_t v2 = *((void *)&v12[0] + 1);
  v12[4] = v8;
  v12[5] = v9;
  v12[6] = v10;
  v12[7] = v11;
  v12[0] = v4;
  v12[1] = v5;
  v12[2] = v6;
  v12[3] = v7;
  char v13 = v1;
  uint64_t v14 = v2;
  View.modifier<A>(_:)();
  return outlined release of Radiosity.ViewModifier((uint64_t)v12);
}

double Radiosity.Specs.with(_:)@<D0>(void (*a1)(long long *)@<X0>, _OWORD *a2@<X8>)
{
  long long v5 = v2[5];
  long long v18 = v2[4];
  long long v19 = v5;
  long long v6 = v2[7];
  long long v20 = v2[6];
  long long v21 = v6;
  long long v7 = v2[1];
  long long v14 = *v2;
  long long v15 = v7;
  long long v8 = v2[3];
  long long v16 = v2[2];
  long long v17 = v8;
  outlined retain of Radiosity.Specs((uint64_t)v2);
  a1(&v14);
  long long v9 = v19;
  a2[4] = v18;
  a2[5] = v9;
  long long v10 = v21;
  a2[6] = v20;
  a2[7] = v10;
  long long v11 = v15;
  *a2 = v14;
  a2[1] = v11;
  double result = *(double *)&v16;
  long long v13 = v17;
  a2[2] = v16;
  a2[3] = v13;
  return result;
}

__n128 one-time initialization function for containerDetailHeaderArtwork()
{
  v8.CGFloat a = 1.0;
  v8.CGFloat b = 0.0;
  v8.CGFloat c = 0.0;
  v8.CGFloat d = 1.0;
  v8.tCGFloat x = 0.0;
  v8.tCGFloat y = 0.0;
  CGAffineTransformScale(&v7, &v8, 0.85, 0.85);
  __n128 v5 = *(__n128 *)&v7.c;
  long long v6 = *(_OWORD *)&v7.a;
  tCGFloat x = v7.tx;
  tCGFloat y = v7.ty;
  id v2 = [self blackColor];
  id v3 = [v2 CGColor];

  __n128 result = v5;
  static Radiosity.Specs.containerDetailHeaderArtwork = v6;
  *(__n128 *)algn_1005AEAD0 = v5;
  qword_1005AEAE0 = *(void *)&tx;
  unk_1005AEAE8 = *(void *)&ty;
  dword_1005AEAF0 = 1050253722;
  qword_1005AEAF8 = (uint64_t)v3;
  unk_1005AEB00 = 0x402E000000000000;
  qword_1005AEB08 = 0;
  unk_1005AEB10 = 0;
  qword_1005AEB18 = (uint64_t)closure #3 in variable initialization expression of static Radiosity.Specs.containerDetailHeaderArtwork;
  unk_1005AEB20 = 0;
  qword_1005AEB28 = (uint64_t)closure #4 in variable initialization expression of static Radiosity.Specs.containerDetailHeaderArtwork;
  unk_1005AEB30 = 0;
  qword_1005AEB38 = 0x4040000000000000;
  return result;
}

float closure #3 in variable initialization expression of static Radiosity.Specs.containerDetailHeaderArtwork(unint64_t a1)
{
  if (a1 > 2) {
    return 0.42;
  }
  else {
    return flt_1004AE4BC[a1];
  }
}

double closure #4 in variable initialization expression of static Radiosity.Specs.containerDetailHeaderArtwork(unint64_t a1)
{
  if (a1 > 2) {
    return 1.8;
  }
  else {
    return dbl_1004AE4C8[a1];
  }
}

uint64_t static Radiosity.Specs.containerDetailHeaderArtwork.getter@<X0>(uint64_t a1@<X8>)
{
  return static Radiosity.Specs.containerDetailHeaderArtwork.getter(&one-time initialization token for containerDetailHeaderArtwork, (uint64_t)&static Radiosity.Specs.containerDetailHeaderArtwork, a1);
}

__n128 one-time initialization function for nowPlaying()
{
  v8.CGFloat a = 1.0;
  v8.CGFloat b = 0.0;
  v8.CGFloat c = 0.0;
  v8.CGFloat d = 1.0;
  v8.tCGFloat x = 0.0;
  v8.tCGFloat y = 0.0;
  CGAffineTransformScale(&v7, &v8, 0.94, 0.94);
  __n128 v5 = *(__n128 *)&v7.c;
  long long v6 = *(_OWORD *)&v7.a;
  tCGFloat x = v7.tx;
  tCGFloat y = v7.ty;
  id v2 = [self blackColor];
  id v3 = [v2 CGColor];

  __n128 result = v5;
  static Radiosity.Specs.nowPlaying = v6;
  *(__n128 *)algn_1005AEB50 = v5;
  qword_1005AEB60 = *(void *)&tx;
  unk_1005AEB68 = *(void *)&ty;
  dword_1005AEB70 = 1053609165;
  qword_1005AEB78 = (uint64_t)v3;
  unk_1005AEB80 = 0x402E000000000000;
  qword_1005AEB88 = 0;
  unk_1005AEB90 = 0;
  qword_1005AEB98 = (uint64_t)variable initialization expression of VerticalToggleSlider._maxValue;
  unk_1005AEBA0 = 0;
  qword_1005AEBA8 = (uint64_t)closure #3 in variable initialization expression of static Radiosity.Specs.nowPlaying;
  unk_1005AEBB0 = 0;
  qword_1005AEBB8 = 0x4049000000000000;
  return result;
}

double closure #3 in variable initialization expression of static Radiosity.Specs.nowPlaying()
{
  return 1.5;
}

long long *Radiosity.Specs.nowPlaying.unsafeMutableAddressor()
{
  if (one-time initialization token for nowPlaying != -1) {
    swift_once();
  }
  return &static Radiosity.Specs.nowPlaying;
}

uint64_t static Radiosity.Specs.nowPlaying.getter@<X0>(uint64_t a1@<X8>)
{
  return static Radiosity.Specs.containerDetailHeaderArtwork.getter(&one-time initialization token for nowPlaying, (uint64_t)&static Radiosity.Specs.nowPlaying, a1);
}

uint64_t static Radiosity.Specs.containerDetailHeaderArtwork.getter@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }

  return outlined init with copy of Radiosity.Specs(a2, a3);
}

double Radiosity.Specs.pathShadow(for:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  int v6 = *(_DWORD *)(v4 + 48);
  uint64_t v7 = *(void *)(v4 + 56);
  uint64_t v8 = *(void *)(v4 + 64);
  long long v9 = *(id (**)(double, double, double, double, double))(v4 + 72);
  uint64_t v10 = *(void *)(v4 + 80);
  if (a3)
  {
    outlined retain of Radiosity.Specs(v4);
  }
  else
  {
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = a2;
    *(void *)(v13 + 24) = a1;
    outlined retain of Radiosity.Specs(v4);
    outlined consume of (@escaping @callee_guaranteed () -> ())?((uint64_t)v9);
    long long v9 = partial apply for closure #1 in closure #1 in Radiosity.Specs.pathShadow(for:);
    uint64_t v10 = v13;
  }
  double result = *(double *)(v4 + 120);
  long long v15 = *(_OWORD *)(v4 + 16);
  *(_OWORD *)a4 = *(_OWORD *)v4;
  *(_OWORD *)(a4 + 16) = v15;
  *(_OWORD *)(a4 + 32) = *(_OWORD *)(v4 + 32);
  *(_DWORD *)(a4 + 48) = v6;
  *(void *)(a4 + 56) = v7;
  *(void *)(a4 + 64) = v8;
  *(void *)(a4 + 72) = v9;
  *(void *)(a4 + 80) = v10;
  *(_OWORD *)(a4 + 88) = *(_OWORD *)(v4 + 88);
  *(_OWORD *)(a4 + 104) = *(_OWORD *)(v4 + 104);
  *(double *)(a4 + 120) = result;
  return result;
}

id closure #1 in closure #1 in Radiosity.Specs.pathShadow(for:)(uint64_t a1, double a2, double a3, double a4, double a5, double a6, double a7)
{
  uint64_t v13 = self;
  id v14 = objc_msgSend(v13, "bezierPathWithRoundedRect:byRoundingCorners:cornerRadii:", a1, a2, a3, a4, a5, a7, a7);
  id v15 = [v14 CGPath];

  id v16 = objc_msgSend(v13, "bezierPathWithRoundedRect:cornerRadius:", a2, a3, a4, a5, a7);
  UIEdgeInsets.init(edges:inset:)();
  id v19 = objc_msgSend(v13, "bezierPathWithRoundedRect:cornerRadius:", UIEdgeInsetsInsetRect(a2, a3, a4, a5, v17, v18));
  CGPathCreateMutable();
  id v20 = [v16 CGPath];
  CGMutablePathRef.addPath(_:transform:)();

  id v21 = objc_msgSend(v19, "CGPath", 0x3FF0000000000000, 0, 0, 0x3FF0000000000000, 0, 0);
  CGMutablePathRef.addPath(_:transform:)();

  return v15;
}

unsigned char *protocol witness for static PreferenceKey.reduce(value:nextValue:) in conformance RadiosityEnabledPreferenceKey(unsigned char *result, void *(*a2)(uint64_t *__return_ptr))
{
  id v2 = result;
  if (*result == 1)
  {
    double result = a2(&v4);
    char v3 = v4;
  }
  else
  {
    char v3 = 0;
  }
  *id v2 = v3;
  return result;
}

uint64_t protocol witness for static PreferenceKey._includesRemovedValues.getter in conformance RadiosityEnabledPreferenceKey()
{
  return static PreferenceKey._includesRemovedValues.getter();
}

uint64_t protocol witness for static PreferenceKey._isReadableByHost.getter in conformance RadiosityEnabledPreferenceKey()
{
  return static PreferenceKey._isReadableByHost.getter();
}

__n128 specialized Radiosity.UIView.specs.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + direct field offset for Radiosity.UIView.specs;
  swift_beginAccess();
  long long v4 = *(_OWORD *)(v3 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(v3 + 64);
  *(_OWORD *)(a1 + 80) = v4;
  long long v5 = *(_OWORD *)(v3 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(v3 + 96);
  *(_OWORD *)(a1 + 112) = v5;
  long long v6 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(_OWORD *)(a1 + 16) = v6;
  __n128 result = *(__n128 *)(v3 + 32);
  long long v8 = *(_OWORD *)(v3 + 48);
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v8;
  return result;
}

uint64_t outlined release of Radiosity.Specs(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 72);

  outlined consume of (@escaping @callee_guaranteed () -> ())?(v2);
  swift_release();
  swift_release();
  return a1;
}

_OWORD *outlined init with take of Radiosity.Specs.Shadow.DrawMode(_OWORD *a1, _OWORD *a2)
{
  *a2 = *a1;
  return a2;
}

uint64_t type metadata accessor for Radiosity.UIView()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_10041F55C()
{
  return swift_deallocObject();
}

id specialized Radiosity.Specs.Radiosity.gaussianBlurFilter.getter()
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v0 = objc_allocWithZone((Class)CAFilter);
  NSString v1 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v2 = [v0 initWithType:v1];

  Class isa = Double._bridgeToObjectiveC()().super.super.isa;
  [v2 setValue:isa forKey:kCAFilterInputRadius];

  Class v4 = Bool._bridgeToObjectiveC()().super.super.isa;
  [v2 setValue:v4 forKey:kCAFilterInputNormalizeEdges];

  return v2;
}

id specialized Radiosity.View.makeUIView(context:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for _UIHostingView();
  long long v8 = (objc_class *)type metadata accessor for Radiosity.UIView();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v2, v4);
  long long v9 = (void *)_UIHostingView.__allocating_init(rootView:)();
  uint64_t v10 = *(int *)(v3 + 36);
  LOBYTE(v3) = *(unsigned char *)(v2 + *(int *)(v3 + 40));
  long long v11 = *(_OWORD *)(v2 + v10 + 80);
  _OWORD v17[4] = *(_OWORD *)(v2 + v10 + 64);
  v17[5] = v11;
  long long v12 = *(_OWORD *)(v2 + v10 + 112);
  v17[6] = *(_OWORD *)(v2 + v10 + 96);
  v17[7] = v12;
  long long v13 = *(_OWORD *)(v2 + v10 + 16);
  v17[0] = *(_OWORD *)(v2 + v10);
  v17[1] = v13;
  long long v14 = *(_OWORD *)(v2 + v10 + 48);
  v17[2] = *(_OWORD *)(v2 + v10 + 32);
  v17[3] = v14;
  outlined retain of Radiosity.Specs((uint64_t)v17);
  id v15 = objc_allocWithZone(v8);
  return Radiosity.UIView.init(content:isRadiosityEnabled:specs:)(v9, v3, v17);
}

id specialized Radiosity.View.updateUIView(_:context:)(void *a1, uint64_t a2)
{
  __chkstk_darwin();
  (*(void (**)(char *, uint64_t))(v6 + 16))((char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  dispatch thunk of _UIHostingView.rootView.setter();
  [a1 invalidateIntrinsicContentSize];
  uint64_t v7 = (_OWORD *)(v2 + *(int *)(a2 + 36));
  long long v8 = v7[5];
  v13[4] = v7[4];
  _OWORD v13[5] = v8;
  long long v9 = v7[7];
  v13[6] = v7[6];
  v13[7] = v9;
  long long v10 = v7[1];
  v13[0] = *v7;
  v13[1] = v10;
  long long v11 = v7[3];
  _OWORD v13[2] = v7[2];
  v13[3] = v11;
  outlined retain of Radiosity.Specs((uint64_t)v13);
  Radiosity.UIView.specs.setter(v13);
  return Radiosity.UIView.isRadiosityEnabled.setter(*(unsigned char *)(v2 + *(int *)(a2 + 40)));
}

double specialized Radiosity.View.sizeThatFits(_:uiView:context:)(void *a1)
{
  [a1 intrinsicContentSize];
  return result;
}

void specialized closure #1 in Radiosity.UIView.init(content:isRadiosityEnabled:specs:)(void *a1)
{
  id v1 = [a1 traitCollection];
  id v2 = [v1 userInterfaceStyle];

  Radiosity.UIView.updateUserInterfaceStyle(userInterfaceStyle:)((uint64_t)v2);
}

void specialized Radiosity.UIView.init(coder:)()
{
}

void specialized Radiosity.UIView.init(frame:)()
{
}

uint64_t outlined release of Radiosity.ViewModifier(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 72);

  outlined consume of (@escaping @callee_guaranteed () -> ())?(v2);
  swift_release();
  swift_release();
  swift_release();
  return a1;
}

uint64_t outlined init with copy of Radiosity.Specs(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_10041FAC0()
{
  return swift_deallocObject();
}

id partial apply for closure #1 in closure #1 in Radiosity.Specs.pathShadow(for:)(double a1, double a2, double a3, double a4, double a5)
{
  return closure #1 in closure #1 in Radiosity.Specs.pathShadow(for:)(*(void *)(v5 + 16), a1, a2, a3, a4, a5, *(double *)(v5 + 24));
}

uint64_t associated type witness table accessor for ViewModifier.Body : View in Radiosity.ViewModifier()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for Radiosity()
{
  return &type metadata for Radiosity;
}

uint64_t destroy for Radiosity.ViewModifier(uint64_t a1)
{
  if (*(void *)(a1 + 72)) {
    swift_release();
  }
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for Radiosity.ViewModifier(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  uint64_t v5 = *(void **)(a2 + 56);
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = v5;
  *(void *)(a1 + 64) = v6;
  long long v8 = (_OWORD *)(a2 + 72);
  uint64_t v7 = *(void *)(a2 + 72);
  id v9 = v5;
  if (v7)
  {
    uint64_t v10 = *(void *)(a2 + 80);
    *(void *)(a1 + 72) = v7;
    *(void *)(a1 + 80) = v10;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 72) = *v8;
  }
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  uint64_t v11 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v11;
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for Radiosity.ViewModifier(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  long long v4 = *(void **)(a2 + 56);
  uint64_t v5 = *(void **)(a1 + 56);
  *(void *)(a1 + 56) = v4;
  id v6 = v4;

  uint64_t v7 = *(void *)(a1 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  uint64_t v8 = *(void *)(a2 + 72);
  if (!v7)
  {
    if (v8)
    {
      uint64_t v10 = *(void *)(a2 + 80);
      *(void *)(a1 + 72) = v8;
      *(void *)(a1 + 80) = v10;
      swift_retain();
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    goto LABEL_8;
  }
  if (!v8)
  {
    outlined destroy of TaskPriority?(a1 + 72, &demangling cache variable for type metadata for (shadow: ()));
    goto LABEL_7;
  }
  uint64_t v9 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = v8;
  *(void *)(a1 + 80) = v9;
  swift_retain();
  swift_release();
LABEL_8:
  uint64_t v11 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v11;
  swift_retain();
  swift_release();
  uint64_t v12 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v12;
  swift_retain();
  swift_release();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy144_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  __n128 result = *(__n128 *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(__n128 *)(a1 + 80) = result;
  *(_OWORD *)(a1 + 96) = v6;
  return result;
}

uint64_t assignWithTake for Radiosity.ViewModifier(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  uint64_t v5 = *(void **)(a1 + 56);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);

  uint64_t v6 = *(void *)(a2 + 72);
  uint64_t v7 = *(void *)(a1 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  if (!v7) {
    goto LABEL_5;
  }
  if (!v6)
  {
    outlined destroy of TaskPriority?(a1 + 72, &demangling cache variable for type metadata for (shadow: ()));
LABEL_5:
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    goto LABEL_6;
  }
  uint64_t v8 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = v6;
  *(void *)(a1 + 80) = v8;
  swift_release();
LABEL_6:
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  swift_release();
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  swift_release();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for Radiosity.ViewModifier(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 144)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 56);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Radiosity.ViewModifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 136) = 0;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 144) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 56) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 144) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Radiosity.ViewModifier()
{
  return &type metadata for Radiosity.ViewModifier;
}

uint64_t type metadata completion function for Radiosity.UIView()
{
  return swift_initClassMetadata2();
}

uint64_t destroy for Radiosity.Specs(uint64_t a1)
{
  if (*(void *)(a1 + 72)) {
    swift_release();
  }
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for Radiosity.Specs(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  uint64_t v5 = *(void **)(a2 + 56);
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = v5;
  *(void *)(a1 + 64) = v6;
  uint64_t v8 = (_OWORD *)(a2 + 72);
  uint64_t v7 = *(void *)(a2 + 72);
  id v9 = v5;
  if (v7)
  {
    uint64_t v10 = *(void *)(a2 + 80);
    *(void *)(a1 + 72) = v7;
    *(void *)(a1 + 80) = v10;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 72) = *v8;
  }
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  uint64_t v11 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v11;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for Radiosity.Specs(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  long long v4 = *(void **)(a2 + 56);
  uint64_t v5 = *(void **)(a1 + 56);
  *(void *)(a1 + 56) = v4;
  id v6 = v4;

  uint64_t v7 = *(void *)(a1 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  uint64_t v8 = *(void *)(a2 + 72);
  if (!v7)
  {
    if (v8)
    {
      uint64_t v10 = *(void *)(a2 + 80);
      *(void *)(a1 + 72) = v8;
      *(void *)(a1 + 80) = v10;
      swift_retain();
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    goto LABEL_8;
  }
  if (!v8)
  {
    outlined destroy of TaskPriority?(a1 + 72, &demangling cache variable for type metadata for (shadow: ()));
    goto LABEL_7;
  }
  uint64_t v9 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = v8;
  *(void *)(a1 + 80) = v9;
  swift_retain();
  swift_release();
LABEL_8:
  uint64_t v11 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v11;
  swift_retain();
  swift_release();
  uint64_t v12 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v12;
  swift_retain();
  swift_release();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  return a1;
}

__n128 __swift_memcpy128_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = (__n128)a2[4];
  long long v6 = a2[5];
  long long v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 64) = result;
  *(_OWORD *)(a1 + 80) = v6;
  return result;
}

uint64_t assignWithTake for Radiosity.Specs(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  uint64_t v5 = *(void **)(a1 + 56);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);

  uint64_t v6 = *(void *)(a2 + 72);
  uint64_t v7 = *(void *)(a1 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  if (!v7) {
    goto LABEL_5;
  }
  if (!v6)
  {
    outlined destroy of TaskPriority?(a1 + 72, &demangling cache variable for type metadata for (shadow: ()));
LABEL_5:
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    goto LABEL_6;
  }
  uint64_t v8 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = v6;
  *(void *)(a1 + 80) = v8;
  swift_release();
LABEL_6:
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  swift_release();
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  swift_release();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  return a1;
}

uint64_t getEnumTagSinglePayload for Radiosity.Specs(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 128)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 56);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Radiosity.Specs(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 128) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 56) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 128) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Radiosity.Specs()
{
  return &type metadata for Radiosity.Specs;
}

void destroy for Radiosity.Specs.Shadow(uint64_t a1)
{
  if (*(void *)(a1 + 24))
  {
    swift_release();
  }
}

uint64_t initializeWithCopy for Radiosity.Specs.Shadow(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  long long v4 = *(void **)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  uint64_t v7 = (_OWORD *)(a2 + 24);
  uint64_t v6 = *(void *)(a2 + 24);
  id v8 = v4;
  if (v6)
  {
    uint64_t v9 = *(void *)(a2 + 32);
    *(void *)(a1 + 24) = v6;
    *(void *)(a1 + 32) = v9;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 24) = *v7;
  }
  return a1;
}

uint64_t assignWithCopy for Radiosity.Specs.Shadow(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  long long v4 = *(void **)(a2 + 8);
  uint64_t v5 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v4;
  id v6 = v4;

  uint64_t v7 = *(void *)(a1 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 24);
  if (!v7)
  {
    if (v8)
    {
      uint64_t v10 = *(void *)(a2 + 32);
      *(void *)(a1 + 24) = v8;
      *(void *)(a1 + 32) = v10;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    return a1;
  }
  if (!v8)
  {
    outlined destroy of TaskPriority?(a1 + 24, &demangling cache variable for type metadata for (shadow: ()));
    goto LABEL_7;
  }
  uint64_t v9 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = v8;
  *(void *)(a1 + 32) = v9;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for Radiosity.Specs.Shadow(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  long long v4 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);

  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t v6 = *(void *)(a1 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  if (!v6) {
    goto LABEL_5;
  }
  if (!v5)
  {
    outlined destroy of TaskPriority?(a1 + 24, &demangling cache variable for type metadata for (shadow: ()));
LABEL_5:
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    return a1;
  }
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v7;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for Radiosity.Specs.Shadow(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Radiosity.Specs.Shadow(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Radiosity.Specs.Shadow()
{
  return &type metadata for Radiosity.Specs.Shadow;
}

void *destroy for Radiosity.Specs.Shadow.DrawMode(void *result)
{
  if (*result >= 0xFFFFFFFFuLL) {
    return (void *)swift_release();
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for Radiosity.Specs.Shadow.DrawMode(uint64_t a1, uint64_t a2)
{
  if (*(void *)a2 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    uint64_t v3 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    swift_retain();
  }
  return a1;
}

unint64_t *assignWithCopy for Radiosity.Specs.Shadow.DrawMode(unint64_t *a1, unint64_t *a2)
{
  unint64_t v4 = *a2;
  if (*a1 < 0xFFFFFFFF)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      unint64_t v6 = a2[1];
      *a1 = v4;
      a1[1] = v6;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_release();
    goto LABEL_7;
  }
  unint64_t v5 = a2[1];
  *a1 = v4;
  a1[1] = v5;
  swift_retain();
  swift_release();
  return a1;
}

void *assignWithTake for Radiosity.Specs.Shadow.DrawMode(void *a1, uint64_t a2)
{
  if (*a1 < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  if (*(void *)a2 < 0xFFFFFFFFuLL)
  {
    swift_release();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for Radiosity.Specs.Shadow.DrawMode(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for Radiosity.Specs.Shadow.DrawMode(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)__n128 result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)__n128 result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Radiosity.Specs.Shadow.DrawMode()
{
  return &type metadata for Radiosity.Specs.Shadow.DrawMode;
}

uint64_t initializeWithCopy for Radiosity.Specs.Radiosity(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v3;
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for Radiosity.Specs.Radiosity(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_retain();
  swift_release();
  a1[4] = a2[4];
  return a1;
}

uint64_t assignWithTake for Radiosity.Specs.Radiosity(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

ValueMetadata *type metadata accessor for Radiosity.Specs.Radiosity()
{
  return &type metadata for Radiosity.Specs.Radiosity;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<Radiosity.View<_ViewModifier_Content<Radiosity.ViewModifier>>, _PreferenceActionModifier<RadiosityEnabledPreferenceKey>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<Radiosity.View<_ViewModifier_Content<Radiosity.ViewModifier>>, _PreferenceActionModifier<RadiosityEnabledPreferenceKey>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<Radiosity.View<_ViewModifier_Content<Radiosity.ViewModifier>>, _PreferenceActionModifier<RadiosityEnabledPreferenceKey>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<Radiosity.View<_ViewModifier_Content<Radiosity.ViewModifier>>, _PreferenceActionModifier<RadiosityEnabledPreferenceKey>>);
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type Radiosity.View<_ViewModifier_Content<Radiosity.ViewModifier>> and conformance Radiosity.View<A>, &demangling cache variable for type metadata for Radiosity.View<_ViewModifier_Content<Radiosity.ViewModifier>>);
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type _PreferenceActionModifier<RadiosityEnabledPreferenceKey> and conformance _PreferenceActionModifier<A>, &demangling cache variable for type metadata for _PreferenceActionModifier<RadiosityEnabledPreferenceKey>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<Radiosity.View<_ViewModifier_Content<Radiosity.ViewModifier>>, _PreferenceActionModifier<RadiosityEnabledPreferenceKey>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t sub_1004209E8()
{
  return swift_getWitnessTable();
}

unint64_t lazy protocol witness table accessor for type Radiosity.ViewModifier and conformance Radiosity.ViewModifier()
{
  unint64_t result = lazy protocol witness table cache variable for type Radiosity.ViewModifier and conformance Radiosity.ViewModifier;
  if (!lazy protocol witness table cache variable for type Radiosity.ViewModifier and conformance Radiosity.ViewModifier)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Radiosity.ViewModifier and conformance Radiosity.ViewModifier);
  }
  return result;
}

uint64_t type metadata completion function for Radiosity.View()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for Radiosity.View(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 129 > 0x18)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    uint64_t v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    unint64_t v10 = ((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v11 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    long long v12 = *(_OWORD *)(v11 + 32);
    long long v13 = *(_OWORD *)v11;
    *(_OWORD *)(v10 + 16) = *(_OWORD *)(v11 + 16);
    *(_OWORD *)(v10 + 32) = v12;
    *(_OWORD *)unint64_t v10 = v13;
    *(_DWORD *)(v10 + 48) = *(_DWORD *)(v11 + 48);
    long long v14 = *(void **)(v11 + 56);
    *(void *)(v10 + 56) = v14;
    *(void *)(v10 + 64) = *(void *)(v11 + 64);
    uint64_t v15 = *(void *)(v11 + 72);
    id v16 = v14;
    if (v15)
    {
      uint64_t v17 = *(void *)(v11 + 80);
      *(void *)(v10 + 72) = v15;
      *(void *)(v10 + 80) = v17;
      swift_retain();
    }
    else
    {
      *(_OWORD *)(v10 + 72) = *(_OWORD *)(v11 + 72);
    }
    uint64_t v18 = *(void *)(v11 + 96);
    *(void *)(v10 + 88) = *(void *)(v11 + 88);
    *(void *)(v10 + 96) = v18;
    uint64_t v19 = *(void *)(v11 + 112);
    *(void *)(v10 + 104) = *(void *)(v11 + 104);
    *(void *)(v10 + 112) = v19;
    *(void *)(v10 + 120) = *(void *)(v11 + 120);
    *(unsigned char *)(v10 + 128) = *(unsigned char *)(v11 + 128);
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t destroy for Radiosity.View(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v3)();
  unint64_t v4 = (a1 + *(void *)(v3 + 56) + 7) & 0xFFFFFFFFFFFFFFF8;

  if (*(void *)(v4 + 72)) {
    swift_release();
  }
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for Radiosity.View(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  long long v9 = *(_OWORD *)v8;
  long long v10 = *(_OWORD *)(v8 + 32);
  *(_OWORD *)(v7 + 16) = *(_OWORD *)(v8 + 16);
  *(_OWORD *)(v7 + 32) = v10;
  *(_OWORD *)unint64_t v7 = v9;
  *(_DWORD *)(v7 + 48) = *(_DWORD *)(v8 + 48);
  unint64_t v11 = *(void **)(v8 + 56);
  *(void *)(v7 + 56) = v11;
  *(void *)(v7 + 64) = *(void *)(v8 + 64);
  uint64_t v12 = *(void *)(v8 + 72);
  id v13 = v11;
  if (v12)
  {
    uint64_t v14 = *(void *)(v8 + 80);
    *(void *)(v7 + 72) = v12;
    *(void *)(v7 + 80) = v14;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(v7 + 72) = *(_OWORD *)(v8 + 72);
  }
  uint64_t v15 = *(void *)(v8 + 96);
  *(void *)(v7 + 88) = *(void *)(v8 + 88);
  *(void *)(v7 + 96) = v15;
  uint64_t v16 = *(void *)(v8 + 112);
  *(void *)(v7 + 104) = *(void *)(v8 + 104);
  *(void *)(v7 + 112) = v16;
  *(void *)(v7 + 120) = *(void *)(v8 + 120);
  *(unsigned char *)(v7 + 128) = *(unsigned char *)(v8 + 128);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for Radiosity.View(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v7 = *(void *)v8;
  *(void *)(v7 + 8) = *(void *)(v8 + 8);
  *(void *)(v7 + 16) = *(void *)(v8 + 16);
  *(void *)(v7 + 24) = *(void *)(v8 + 24);
  *(void *)(v7 + 32) = *(void *)(v8 + 32);
  *(void *)(v7 + 40) = *(void *)(v8 + 40);
  *(_DWORD *)(v7 + 48) = *(_DWORD *)(v8 + 48);
  long long v9 = *(void **)(v8 + 56);
  long long v10 = *(void **)(v7 + 56);
  *(void *)(v7 + 56) = v9;
  id v11 = v9;

  *(void *)(v7 + 64) = *(void *)(v8 + 64);
  uint64_t v12 = *(void *)(v8 + 72);
  if (!*(void *)(v7 + 72))
  {
    if (v12)
    {
      uint64_t v14 = *(void *)(v8 + 80);
      *(void *)(v7 + 72) = v12;
      *(void *)(v7 + 80) = v14;
      swift_retain();
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(v7 + 72) = *(_OWORD *)(v8 + 72);
    goto LABEL_8;
  }
  if (!v12)
  {
    outlined destroy of TaskPriority?(v7 + 72, &demangling cache variable for type metadata for (shadow: ()));
    goto LABEL_7;
  }
  uint64_t v13 = *(void *)(v8 + 80);
  *(void *)(v7 + 72) = v12;
  *(void *)(v7 + 80) = v13;
  swift_retain();
  swift_release();
LABEL_8:
  uint64_t v15 = *(void *)(v8 + 96);
  *(void *)(v7 + 88) = *(void *)(v8 + 88);
  *(void *)(v7 + 96) = v15;
  swift_retain();
  swift_release();
  uint64_t v16 = *(void *)(v8 + 112);
  *(void *)(v7 + 104) = *(void *)(v8 + 104);
  *(void *)(v7 + 112) = v16;
  swift_retain();
  swift_release();
  *(void *)(v7 + 120) = *(void *)(v8 + 120);
  *(unsigned char *)(v7 + 128) = *(unsigned char *)(v8 + 128);
  return a1;
}

uint64_t initializeWithTake for Radiosity.View(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  long long v9 = *(_OWORD *)(v8 + 48);
  long long v11 = *(_OWORD *)v8;
  long long v10 = *(_OWORD *)(v8 + 16);
  *(_OWORD *)(v7 + 32) = *(_OWORD *)(v8 + 32);
  *(_OWORD *)(v7 + 48) = v9;
  *(_OWORD *)unint64_t v7 = v11;
  *(_OWORD *)(v7 + 16) = v10;
  long long v12 = *(_OWORD *)(v8 + 112);
  long long v14 = *(_OWORD *)(v8 + 64);
  long long v13 = *(_OWORD *)(v8 + 80);
  *(_OWORD *)(v7 + 96) = *(_OWORD *)(v8 + 96);
  *(_OWORD *)(v7 + 112) = v12;
  *(_OWORD *)(v7 + 64) = v14;
  *(_OWORD *)(v7 + 80) = v13;
  *(unsigned char *)(v7 + 128) = *(unsigned char *)(v8 + 128);
  return a1;
}

uint64_t assignWithTake for Radiosity.View(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v7 = *(void *)v8;
  *(void *)(v7 + 8) = *(void *)(v8 + 8);
  *(void *)(v7 + 16) = *(void *)(v8 + 16);
  *(void *)(v7 + 24) = *(void *)(v8 + 24);
  *(void *)(v7 + 32) = *(void *)(v8 + 32);
  *(void *)(v7 + 40) = *(void *)(v8 + 40);
  *(_DWORD *)(v7 + 48) = *(_DWORD *)(v8 + 48);
  long long v9 = *(void **)(v7 + 56);
  *(void *)(v7 + 56) = *(void *)(v8 + 56);

  *(void *)(v7 + 64) = *(void *)(v8 + 64);
  uint64_t v10 = *(void *)(v8 + 72);
  if (!*(void *)(v7 + 72)) {
    goto LABEL_5;
  }
  if (!v10)
  {
    outlined destroy of TaskPriority?(v7 + 72, &demangling cache variable for type metadata for (shadow: ()));
LABEL_5:
    *(_OWORD *)(v7 + 72) = *(_OWORD *)(v8 + 72);
    goto LABEL_6;
  }
  uint64_t v11 = *(void *)(v8 + 80);
  *(void *)(v7 + 72) = v10;
  *(void *)(v7 + 80) = v11;
  swift_release();
LABEL_6:
  *(_OWORD *)(v7 + 88) = *(_OWORD *)(v8 + 88);
  swift_release();
  *(_OWORD *)(v7 + 104) = *(_OWORD *)(v8 + 104);
  swift_release();
  *(void *)(v7 + 120) = *(void *)(v8 + 120);
  *(unsigned char *)(v7 + 128) = *(unsigned char *)(v8 + 128);
  return a1;
}

uint64_t getEnumTagSinglePayload for Radiosity.View(unsigned __int8 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 129;
    unsigned int v9 = (a2 - v7 + 255) >> (8 * (((v6 + 7) & 0xF8) - 127));
    if (v8 < 4) {
      unsigned int v10 = v9 + 1;
    }
    else {
      unsigned int v10 = 2;
    }
    if (v10 >= 0x10000) {
      unsigned int v11 = 4;
    }
    else {
      unsigned int v11 = 2;
    }
    if (v10 < 0x100) {
      unsigned int v11 = 1;
    }
    if (v10 >= 2) {
      uint64_t v12 = v11;
    }
    else {
      uint64_t v12 = 0;
    }
    switch(v12)
    {
      case 1:
        int v13 = a1[v8];
        if (!a1[v8]) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v13 = *(unsigned __int16 *)&a1[v8];
        if (*(_WORD *)&a1[v8]) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1004212F8);
      case 4:
        int v13 = *(_DWORD *)&a1[v8];
        if (!v13) {
          break;
        }
LABEL_22:
        int v15 = (v13 - 1) << (8 * (((v6 + 7) & 0xF8) - 127));
        if (v8 >= 4) {
          int v15 = 0;
        }
        if (((v6 + 7) & 0xFFFFFFF8) == 0xFFFFFF80) {
          int v16 = *a1;
        }
        else {
          int v16 = *(_DWORD *)a1;
        }
        return v7 + (v16 | v15) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  unint64_t v17 = *(void *)(((unint64_t)&a1[v6 + 7] & 0xFFFFFFFFFFFFFFF8) + 56);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

double storeEnumTagSinglePayload for Radiosity.View(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  size_t v10 = ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 129;
  char v11 = 8 * (((v9 + 7) & 0xF8) - 127);
  if (v8 >= a3)
  {
    int v15 = 0;
    if (v8 >= a2)
    {
LABEL_17:
      switch(v15)
      {
        case 1:
          a1[v10] = 0;
          if (!a2) {
            return result;
          }
          goto LABEL_34;
        case 2:
          *(_WORD *)&a1[v10] = 0;
          if (!a2) {
            return result;
          }
          goto LABEL_34;
        case 3:
          goto LABEL_46;
        case 4:
          *(_DWORD *)&a1[v10] = 0;
          goto LABEL_33;
        default:
LABEL_33:
          if (a2)
          {
LABEL_34:
            if (v7 < 0x7FFFFFFF)
            {
              unint64_t v22 = (unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8;
              if ((a2 & 0x80000000) != 0)
              {
                *(void *)(v22 + 120) = 0;
                double result = 0.0;
                *(_OWORD *)(v22 + 104) = 0u;
                *(_OWORD *)(v22 + 88) = 0u;
                *(_OWORD *)(v22 + 72) = 0u;
                *(_OWORD *)(v22 + 56) = 0u;
                *(_OWORD *)(v22 + 40) = 0u;
                *(_OWORD *)(v22 + 24) = 0u;
                *(_OWORD *)(v22 + 8) = 0u;
                *(void *)unint64_t v22 = a2 ^ 0x80000000;
              }
              else
              {
                *(void *)(v22 + 56) = a2 - 1;
              }
            }
            else
            {
              id v21 = *(void (**)(void))(v6 + 56);
              v21();
            }
          }
          break;
      }
      return result;
    }
  }
  else
  {
    unsigned int v12 = (a3 - v8 + 255) >> v11;
    if (v10 <= 3) {
      unsigned int v13 = v12 + 1;
    }
    else {
      unsigned int v13 = 2;
    }
    if (v13 >= 0x10000) {
      int v14 = 4;
    }
    else {
      int v14 = 2;
    }
    if (v13 < 0x100) {
      int v14 = 1;
    }
    if (v13 >= 2) {
      int v15 = v14;
    }
    else {
      int v15 = 0;
    }
    if (v8 >= a2) {
      goto LABEL_17;
    }
  }
  unsigned int v16 = ~v8 + a2;
  unsigned int v17 = (~(_BYTE)v8 + a2);
  if (v10 < 4) {
    int v18 = (v16 >> v11) + 1;
  }
  else {
    int v18 = 1;
  }
  if (v10 >= 4) {
    unsigned int v19 = v16;
  }
  else {
    unsigned int v19 = v17;
  }
  bzero(a1, v10);
  if (v10 == 1) {
    *a1 = v19;
  }
  else {
    *(_DWORD *)a1 = v19;
  }
  switch(v15)
  {
    case 1:
      a1[v10] = v18;
      break;
    case 2:
      *(_WORD *)&a1[v10] = v18;
      break;
    case 3:
LABEL_46:
      __break(1u);
      JUMPOUT(0x100421544);
    case 4:
      *(_DWORD *)&a1[v10] = v18;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t type metadata accessor for Radiosity.View()
{
  return __swift_instantiateGenericMetadata();
}

ValueMetadata *type metadata accessor for RadiosityEnabledPreferenceKey()
{
  return &type metadata for RadiosityEnabledPreferenceKey;
}

uint64_t base witness table accessor for View in Radiosity.View<A>()
{
  return swift_getWitnessTable();
}

uint64_t objectdestroyTm_18()
{
  if (*(void *)(v0 + 88)) {
    swift_release();
  }
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t partial apply for closure #2 in Radiosity.ViewModifier.body(content:)()
{
  return State.wrappedValue.setter();
}

unint64_t type metadata accessor for CAFilter()
{
  unint64_t result = lazy cache variable for type metadata for CAFilter;
  if (!lazy cache variable for type metadata for CAFilter)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for CAFilter);
  }
  return result;
}

uint64_t *outlined retain of Radiosity.Specs.Shadow.DrawMode(uint64_t *a1)
{
  return a1;
}

uint64_t *outlined release of Radiosity.Specs.Shadow.DrawMode(uint64_t *a1)
{
  return a1;
}

uint64_t key path getter for EnvironmentValues.colorScheme : EnvironmentValues()
{
  return EnvironmentValues.colorScheme.getter();
}

uint64_t key path setter for EnvironmentValues.colorScheme : EnvironmentValues(uint64_t a1)
{
  type metadata accessor for ColorScheme();
  __chkstk_darwin();
  (*(void (**)(char *, uint64_t))(v3 + 16))((char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return EnvironmentValues.colorScheme.setter();
}

uint64_t property wrapper backing initializer of Reactions.StackView.Model.reaction()
{
  return Published.init(initialValue:)();
}

uint64_t Reactions.StackView.Model.reaction.getter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

double key path getter for Reactions.StackView.Model.reaction : Reactions.StackView.Model@<D0>(_OWORD *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  double result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t key path setter for Reactions.StackView.Model.reaction : Reactions.StackView.Model()
{
  return static Published.subscript.setter();
}

uint64_t Reactions.StackView.Model.reaction.setter()
{
  return static Published.subscript.setter();
}

uint64_t (*Reactions.StackView.Model.reaction.modify(void *a1))()
{
  uint64_t v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = static Published.subscript.modify();
  return MPCPlayerResponse.VideoContext.isReadyForDisplay.modify;
}

uint64_t Reactions.StackView.Model.$reaction.getter()
{
  return MPCPlayerResponse.VideoContext.$isReadyForDisplay.getter((uint64_t)&OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__reaction, &demangling cache variable for type metadata for Published<String?>);
}

uint64_t Reactions.StackView.Model.$reaction.setter(uint64_t a1)
{
  return Reactions.StackView.Model.$reaction.setter(a1, &demangling cache variable for type metadata for Published<String?>.Publisher, (uint64_t)&OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__reaction, &demangling cache variable for type metadata for Published<String?>);
}

uint64_t (*Reactions.StackView.Model.$reaction.modify(void *a1))()
{
  long long v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<String?>.Publisher);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  unsigned int v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__reaction;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<String?>);
  Published.projectedValue.getter();
  swift_endAccess();
  return MPCPlayerResponse.VideoContext.$isReadyForDisplay.modify;
}

uint64_t Reactions.StackView.Model.count.getter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t key path getter for Reactions.StackView.Model.count : Reactions.StackView.Model@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t key path setter for Reactions.StackView.Model.count : Reactions.StackView.Model()
{
  return static Published.subscript.setter();
}

uint64_t Reactions.StackView.Model.count.setter()
{
  return static Published.subscript.setter();
}

uint64_t (*Reactions.StackView.Model.count.modify(void *a1))()
{
  uint64_t v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = static Published.subscript.modify();
  return MPCPlayerResponse.VideoContext.isReadyForDisplay.modify;
}

uint64_t Reactions.StackView.Model.$count.getter()
{
  return MPCPlayerResponse.VideoContext.$isReadyForDisplay.getter((uint64_t)&OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__count, &_s7Combine9PublishedVySiGMD_0);
}

uint64_t Reactions.StackView.Model.$count.setter(uint64_t a1)
{
  return Reactions.StackView.Model.$reaction.setter(a1, &_s7Combine9PublishedV9PublisherVySi_GMD_0, (uint64_t)&OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__count, &_s7Combine9PublishedVySiGMD_0);
}

uint64_t (*Reactions.StackView.Model.$count.modify(void *a1))()
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&_s7Combine9PublishedV9PublisherVySi_GMD_0);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  unsigned int v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__count;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName(&_s7Combine9PublishedVySiGMD_0);
  Published.projectedValue.getter();
  swift_endAccess();
  return MPCPlayerResponse.VideoContext.$isReadyForDisplay.modify;
}

uint64_t Reactions.StackView.Model.userImage.getter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t key path getter for Reactions.StackView.Model.userImage : Reactions.StackView.Model@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t key path setter for Reactions.StackView.Model.userImage : Reactions.StackView.Model(void **a1)
{
  uint64_t v1 = *a1;
  swift_getKeyPath();
  swift_getKeyPath();
  id v2 = v1;
  swift_retain();
  return static Published.subscript.setter();
}

uint64_t Reactions.StackView.Model.userImage.setter()
{
  return static Published.subscript.setter();
}

uint64_t (*Reactions.StackView.Model.userImage.modify(void *a1))()
{
  id v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = static Published.subscript.modify();
  return MPCPlayerResponse.VideoContext.isReadyForDisplay.modify;
}

uint64_t Reactions.StackView.Model.$userImage.getter()
{
  return MPCPlayerResponse.VideoContext.$isReadyForDisplay.getter((uint64_t)&OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__userImage, (uint64_t *)&demangling cache variable for type metadata for Published<UIImage?>);
}

uint64_t Reactions.StackView.Model.$userImage.setter(uint64_t a1)
{
  return Reactions.StackView.Model.$reaction.setter(a1, &demangling cache variable for type metadata for Published<UIImage?>.Publisher, (uint64_t)&OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__userImage, (uint64_t *)&demangling cache variable for type metadata for Published<UIImage?>);
}

uint64_t (*Reactions.StackView.Model.$userImage.modify(void *a1))()
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<UIImage?>.Publisher);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  unsigned int v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__userImage;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<UIImage?>);
  Published.projectedValue.getter();
  swift_endAccess();
  return MPCPlayerResponse.VideoContext.$isReadyForDisplay.modify;
}

uint64_t Reactions.StackView.Model.isReacting.getter()
{
  return Player.isHostingSharePlayTogetherSession.getter();
}

uint64_t sub_100422370@<X0>(unsigned char *a1@<X8>)
{
  return key path getter for Player.isHostingSharePlayTogetherSession : Player(a1);
}

uint64_t sub_100422398()
{
  return key path setter for Player.isHostingSharePlayTogetherSession : Player();
}

uint64_t Reactions.StackView.Model.isReacting.setter()
{
  return Reactions.StackView.Model.isReacting.setter();
}

{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return static Published.subscript.setter();
}

uint64_t (*Reactions.StackView.Model.isReacting.modify(void *a1))()
{
  id v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = static Published.subscript.modify();
  return MPCPlayerResponse.VideoContext.isReadyForDisplay.modify;
}

uint64_t Reactions.StackView.Model.$isReacting.getter()
{
  return MPCPlayerResponse.VideoContext.$isReadyForDisplay.getter((uint64_t)&OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__isReacting, &_s7Combine9PublishedVySbGMD_0);
}

uint64_t Reactions.StackView.Model.$isReacting.setter(uint64_t a1)
{
  return Reactions.StackView.Model.$reaction.setter(a1, &_s7Combine9PublishedV9PublisherVySb_GMD_0, (uint64_t)&OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__isReacting, &_s7Combine9PublishedVySbGMD_0);
}

uint64_t (*Reactions.StackView.Model.$isReacting.modify(void *a1))()
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&_s7Combine9PublishedV9PublisherVySb_GMD_0);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  unsigned int v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__isReacting;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName(&_s7Combine9PublishedVySbGMD_0);
  Published.projectedValue.getter();
  swift_endAccess();
  return MPCPlayerResponse.VideoContext.$isReadyForDisplay.modify;
}

uint64_t Reactions.StackView.Model.hasAnimatedBackground.getter()
{
  return Player.isHostingSharePlayTogetherSession.getter();
}

uint64_t sub_1004225B4@<X0>(unsigned char *a1@<X8>)
{
  return key path getter for Player.isHostingSharePlayTogetherSession : Player(a1);
}

uint64_t sub_1004225DC()
{
  return key path setter for Player.isHostingSharePlayTogetherSession : Player();
}

uint64_t Reactions.StackView.Model.hasAnimatedBackground.setter()
{
  return Reactions.StackView.Model.isReacting.setter();
}

uint64_t (*Reactions.StackView.Model.hasAnimatedBackground.modify(void *a1))()
{
  id v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = static Published.subscript.modify();
  return MPCPlayerResponse.VideoContext.isReadyForDisplay.modify;
}

uint64_t Reactions.StackView.Model.$hasAnimatedBackground.getter()
{
  return MPCPlayerResponse.VideoContext.$isReadyForDisplay.getter((uint64_t)&OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__hasAnimatedBackground, &_s7Combine9PublishedVySbGMD_0);
}

uint64_t Reactions.StackView.Model.$hasAnimatedBackground.setter(uint64_t a1)
{
  return Reactions.StackView.Model.$reaction.setter(a1, &_s7Combine9PublishedV9PublisherVySb_GMD_0, (uint64_t)&OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__hasAnimatedBackground, &_s7Combine9PublishedVySbGMD_0);
}

uint64_t Reactions.StackView.Model.$reaction.setter(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v10 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(a4);
  Published.projectedValue.setter();
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
}

uint64_t (*Reactions.StackView.Model.$hasAnimatedBackground.modify(void *a1))()
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&_s7Combine9PublishedV9PublisherVySb_GMD_0);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  uint64_t v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__hasAnimatedBackground;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName(&_s7Combine9PublishedVySbGMD_0);
  Published.projectedValue.getter();
  swift_endAccess();
  return MPCPlayerResponse.VideoContext.$isReadyForDisplay.modify;
}

uint64_t Reactions.StackView.Model.__allocating_init(reaction:count:userImage:isVibrant:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v10 = swift_allocObject();
  Reactions.StackView.Model.init(reaction:count:userImage:isVibrant:)(a1, a2, a3, a4, a5);
  return v10;
}

uint64_t Reactions.StackView.Model.init(reaction:count:userImage:isVibrant:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v31 = a5;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  uint64_t v27 = a1;
  uint64_t v28 = a2;
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&_s7Combine9PublishedVySbGMD_0);
  uint64_t v6 = *(void *)(v26 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<UIImage?>);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin();
  unsigned int v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<String?>);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin();
  unsigned int v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = v5 + OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__reaction;
  uint64_t v34 = 0;
  uint64_t v35 = 0;
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&_sSSSgMD_1);
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(v17, v16, v13);
  uint64_t v18 = v5 + OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__userImage;
  uint64_t v34 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIImage?);
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v18, v12, v9);
  uint64_t v19 = v5 + OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__isReacting;
  LOBYTE(v34) = 0;
  Published.init(initialValue:)();
  id v20 = *(void (**)(uint64_t, char *, uint64_t))(v6 + 32);
  uint64_t v21 = v26;
  v20(v19, v8, v26);
  uint64_t v22 = v5 + OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__hasAnimatedBackground;
  LOBYTE(v34) = 1;
  Published.init(initialValue:)();
  v20(v22, v8, v21);
  uint64_t v23 = OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model_isVibrant;
  *(unsigned char *)(v5 + OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model_isVibrant) = 0;
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v17, v13);
  uint64_t v32 = v27;
  uint64_t v33 = v28;
  Published.init(initialValue:)();
  swift_endAccess();
  swift_beginAccess();
  uint64_t v32 = v29;
  Published.init(initialValue:)();
  swift_endAccess();
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v34 = v30;
  swift_retain();
  static Published.subscript.setter();
  *(unsigned char *)(v5 + v23) = v31;
  return v5;
}

uint64_t Reactions.StackView.Model.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__reaction;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<String?>);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__count;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&_s7Combine9PublishedVySiGMD_0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  uint64_t v5 = v0 + OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__userImage;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<UIImage?>);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = v0 + OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__isReacting;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&_s7Combine9PublishedVySbGMD_0);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
  v9(v7, v8);
  v9(v0 + OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__hasAnimatedBackground, v8);
  return v0;
}

uint64_t Reactions.StackView.Model.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__reaction;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<String?>);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__count;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&_s7Combine9PublishedVySiGMD_0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  uint64_t v5 = v0 + OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__userImage;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Published<UIImage?>);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = v0 + OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__isReacting;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&_s7Combine9PublishedVySbGMD_0);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
  v9(v7, v8);
  v9(v0 + OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__hasAnimatedBackground, v8);

  return swift_deallocClassInstance();
}

uint64_t protocol witness for ObservableObject.objectWillChange.getter in conformance Reactions.StackView.Model@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for Reactions.StackView.Model(0);
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

uint64_t property wrapper backing initializer of Reactions.StackView.model()
{
  type metadata accessor for Reactions.StackView.Model(0);
  lazy protocol witness table accessor for type Reactions.StackView.Model and conformance Reactions.StackView.Model(&lazy protocol witness table cache variable for type Reactions.StackView.Model and conformance Reactions.StackView.Model, (void (*)(uint64_t))type metadata accessor for Reactions.StackView.Model);

  return ObservedObject.init(wrappedValue:)();
}

uint64_t type metadata accessor for Reactions.StackView.Model(uint64_t a1)
{
  return type metadata accessor for Notice.Variant(a1, (uint64_t *)&type metadata singleton initialization cache for Reactions.StackView.Model);
}

uint64_t Reactions.StackView.model.getter()
{
  return swift_retain();
}

uint64_t Reactions.StackView.model.setter(uint64_t a1)
{
  uint64_t result = swift_release();
  *(void *)(v1 + 8) = a1;
  return result;
}

uint64_t Reactions.StackView.$model.getter()
{
  type metadata accessor for Reactions.StackView.Model(0);
  lazy protocol witness table accessor for type Reactions.StackView.Model and conformance Reactions.StackView.Model(&lazy protocol witness table cache variable for type Reactions.StackView.Model and conformance Reactions.StackView.Model, (void (*)(uint64_t))type metadata accessor for Reactions.StackView.Model);

  return ObservedObject.projectedValue.getter();
}

uint64_t Reactions.StackView.init(model:)@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = (int *)type metadata accessor for Reactions.StackView(0);
  uint64_t v3 = (uint64_t *)((char *)a1 + v2[5]);
  *uint64_t v3 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ColorScheme>.Content);
  swift_storeEnumTagMultiPayload();
  uint64_t v4 = (uint64_t *)((char *)a1 + v2[6]);
  uint64_t *v4 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ColorSchemeContrast>.Content);
  swift_storeEnumTagMultiPayload();
  uint64_t v5 = (uint64_t *)((char *)a1 + v2[7]);
  *uint64_t v5 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
  swift_storeEnumTagMultiPayload();
  type metadata accessor for Reactions.StackView.Model(0);
  lazy protocol witness table accessor for type Reactions.StackView.Model and conformance Reactions.StackView.Model(&lazy protocol witness table cache variable for type Reactions.StackView.Model and conformance Reactions.StackView.Model, (void (*)(uint64_t))type metadata accessor for Reactions.StackView.Model);
  uint64_t result = ObservedObject.init(wrappedValue:)();
  *a1 = result;
  a1[1] = v7;
  return result;
}

uint64_t type metadata accessor for Reactions.StackView(uint64_t a1)
{
  return type metadata accessor for Notice.Variant(a1, (uint64_t *)&type metadata singleton initialization cache for Reactions.StackView);
}

uint64_t sub_1004233BC()
{
  return EnvironmentValues.colorScheme.getter();
}

uint64_t Reactions.StackView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v38 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HStack<TupleView<(Spacer, ForEach<ReversedCollection<Range<Int>>, Int, ModifiedContent<ZStack<TupleView<(ModifiedContent<ModifiedContent<Color, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<_ImplicitShapeStyle>, Circle>>, ModifiedContent<ModifiedContent<Color, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<AnyShapeStyle>, Circle>>)>>, _TraitWritingModifier<TransitionTraitKey>>>, ZStack<TupleView<(ModifiedContent<ModifiedContent<Color, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<_ImplicitShapeStyle>, Circle>>, ModifiedContent<ModifiedContent<ModifiedContent<Group<_ConditionalContent<ModifiedContent<_AnimationView<Text>, _TraitWritingModifier<TransitionTraitKey>>, ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Font?>>>>, _EnvironmentKeyWritingModifier<Font?>>, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<An);
  __chkstk_darwin();
  uint64_t v3 = (double *)((char *)&v35 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(Spacer, ForEach<ReversedCollection<Range<Int>>, Int, ModifiedContent<ZStack<TupleView<(ModifiedContent<ModifiedContent<Color, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<_ImplicitShapeStyle>, Circle>>, ModifiedContent<ModifiedContent<Color, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<AnyShapeStyle>, Circle>>)>>, _TraitWritingModifier<TransitionTraitKey>>>, ZStack<TupleView<(ModifiedContent<ModifiedContent<Color, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<_ImplicitShapeStyle>, Circle>>, ModifiedContent<ModifiedContent<ModifiedContent<Group<_ConditionalContent<ModifiedContent<_AnimationView<Text>, _TraitWritingModifier<TransitionTraitKey>>, ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Font?>>>>, _EnvironmentKeyWritingModifier<Font?>>, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendM);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<HStack<TupleView<(Spacer, ForEach<ReversedCollection<Range<Int>>, Int, ModifiedContent<ZStack<TupleView<(ModifiedContent<ModifiedContent<Color, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<_ImplicitShapeStyle>, Circle>>, ModifiedContent<ModifiedContent<Color, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<AnyShapeStyle>, Circle>>)>>, _TraitWritingModifier<TransitionTraitKey>>>, ZStack<TupleView<(ModifiedContent<ModifiedContent<Color, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<_ImplicitShapeStyle>, Circle>>, ModifiedContent<ModifiedContent<ModifiedContent<Group<_ConditionalContent<ModifiedContent<_AnimationView<Text>, _TraitWritingModifier<TransitionTraitKey>>, ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Font?>>>>, _EnvironmentKeyWritingModifier<Font?>>, _FrameLayout>, _InsettableBackgroundShape);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(Spacer, ForEach<ReversedCollection<Range<Int>>, Int, ModifiedContent<ZStack<TupleView<(ModifiedContent<ModifiedContent<Color, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<_ImplicitShapeStyle>, Circle>>, ModifiedContent<ModifiedContent<Color, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<AnyShapeStyle>, Circle>>)>>, _TraitWritingModifier<TransitionTraitKey>>>, ZStack<TupleView<(ModifiedContent<ModifiedContent<Color, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<_ImplicitShapeStyle>, Circle>>, ModifiedContent<ModifiedContent<ModifiedContent<Group<_ConditionalContent<ModifiedContent<_AnimationView<Text>, _TraitWritingModifier<TransitionTraitKey>>, ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Font?>>>>, _EnvironmentKeyWritingModifier<Font?>>, _FrameLayout>, _Insettabl);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(type metadata accessor for BlendMode() - 8);
  __chkstk_darwin();
  uint64_t v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void (**)(char *, uint64_t))(v10 + 104);
  if (*(unsigned char *)(*(void *)(v1 + 8) + OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model_isVibrant)) {
    uint64_t v15 = (unsigned int *)&enum case for BlendMode.plusLighter(_:);
  }
  else {
    uint64_t v15 = (unsigned int *)&enum case for BlendMode.normal(_:);
  }
  uint64_t v16 = *v15;
  uint64_t v36 = v11;
  v14(v13, v16);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v17 = v39;
  if ((uint64_t)v39 >= 3) {
    uint64_t v17 = 3;
  }
  uint64_t v18 = v17 - 1;
  if (__OFSUB__(v17, 1))
  {
    __break(1u);
    goto LABEL_10;
  }
  if (one-time initialization token for stackSpacing != -1) {
LABEL_10:
  }
    swift_once();
  uint64_t v19 = v18 & ~(v18 >> 63);
  double v20 = *(double *)&static Reactions.StackView.Specs.stackSpacing;
  double v21 = v20 - Reactions.StackView.platterLength.getter();
  *(void *)uint64_t v3 = static VerticalAlignment.center.getter();
  v3[1] = v21;
  *((unsigned char *)v3 + 16) = 0;
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_HStackLayout, TupleView<(Spacer, ForEach<ReversedCollection<Range<Int>>, Int, ModifiedContent<ZStack<TupleView<(ModifiedContent<ModifiedContent<Color, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<_ImplicitShapeStyle>, Circle>>, ModifiedContent<ModifiedContent<Color, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<AnyShapeStyle>, Circle>>)>>, _TraitWritingModifier<TransitionTraitKey>>>, ZStack<TupleView<(ModifiedContent<ModifiedContent<Color, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<_ImplicitShapeStyle>, Circle>>, ModifiedContent<ModifiedContent<ModifiedContent<Group<_ConditionalContent<ModifiedContent<_AnimationView<Text>, _TraitWritingModifier<TransitionTraitKey>>, ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Font?>>>>, _EnvironmentKeyWritingModifier<Font?>>, _FrameLayout>, _InsettableBackgroundShapeModif);
  closure #1 in Reactions.StackView.body.getter(v19, v1, v13, (uint64_t)v3 + *(int *)(v22 + 44));
  Reactions.StackView.platterLength.getter();
  Int.seconds.getter(v19 + 1);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  outlined init with copy of (String, Any)((uint64_t)v3, (uint64_t)v5, &demangling cache variable for type metadata for HStack<TupleView<(Spacer, ForEach<ReversedCollection<Range<Int>>, Int, ModifiedContent<ZStack<TupleView<(ModifiedContent<ModifiedContent<Color, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<_ImplicitShapeStyle>, Circle>>, ModifiedContent<ModifiedContent<Color, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<AnyShapeStyle>, Circle>>)>>, _TraitWritingModifier<TransitionTraitKey>>>, ZStack<TupleView<(ModifiedContent<ModifiedContent<Color, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<_ImplicitShapeStyle>, Circle>>, ModifiedContent<ModifiedContent<ModifiedContent<Group<_ConditionalContent<ModifiedContent<_AnimationView<Text>, _TraitWritingModifier<TransitionTraitKey>>, ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Font?>>>>, _EnvironmentKeyWritingModifier<Font?>>, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<An);
  uint64_t v23 = &v5[*(int *)(v35 + 36)];
  long long v24 = v40;
  *(_OWORD *)uint64_t v23 = v39;
  *((_OWORD *)v23 + 1) = v24;
  *((_OWORD *)v23 + 2) = v41;
  outlined destroy of TaskPriority?((uint64_t)v3, &demangling cache variable for type metadata for HStack<TupleView<(Spacer, ForEach<ReversedCollection<Range<Int>>, Int, ModifiedContent<ZStack<TupleView<(ModifiedContent<ModifiedContent<Color, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<_ImplicitShapeStyle>, Circle>>, ModifiedContent<ModifiedContent<Color, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<AnyShapeStyle>, Circle>>)>>, _TraitWritingModifier<TransitionTraitKey>>>, ZStack<TupleView<(ModifiedContent<ModifiedContent<Color, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<_ImplicitShapeStyle>, Circle>>, ModifiedContent<ModifiedContent<ModifiedContent<Group<_ConditionalContent<ModifiedContent<_AnimationView<Text>, _TraitWritingModifier<TransitionTraitKey>>, ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Font?>>>>, _EnvironmentKeyWritingModifier<Font?>>, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<An);
  LOBYTE(v19) = static Edge.Set.all.getter();
  EdgeInsets.init(_all:)();
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  outlined init with copy of (String, Any)((uint64_t)v5, (uint64_t)v7, &demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(Spacer, ForEach<ReversedCollection<Range<Int>>, Int, ModifiedContent<ZStack<TupleView<(ModifiedContent<ModifiedContent<Color, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<_ImplicitShapeStyle>, Circle>>, ModifiedContent<ModifiedContent<Color, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<AnyShapeStyle>, Circle>>)>>, _TraitWritingModifier<TransitionTraitKey>>>, ZStack<TupleView<(ModifiedContent<ModifiedContent<Color, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<_ImplicitShapeStyle>, Circle>>, ModifiedContent<ModifiedContent<ModifiedContent<Group<_ConditionalContent<ModifiedContent<_AnimationView<Text>, _TraitWritingModifier<TransitionTraitKey>>, ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Font?>>>>, _EnvironmentKeyWritingModifier<Font?>>, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendM);
  uint64_t v33 = &v7[*(int *)(v37 + 36)];
  *uint64_t v33 = v19;
  *((void *)v33 + 1) = v26;
  *((void *)v33 + 2) = v28;
  *((void *)v33 + 3) = v30;
  *((void *)v33 + 4) = v32;
  v33[40] = 0;
  outlined destroy of TaskPriority?((uint64_t)v5, &demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(Spacer, ForEach<ReversedCollection<Range<Int>>, Int, ModifiedContent<ZStack<TupleView<(ModifiedContent<ModifiedContent<Color, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<_ImplicitShapeStyle>, Circle>>, ModifiedContent<ModifiedContent<Color, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<AnyShapeStyle>, Circle>>)>>, _TraitWritingModifier<TransitionTraitKey>>>, ZStack<TupleView<(ModifiedContent<ModifiedContent<Color, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<_ImplicitShapeStyle>, Circle>>, ModifiedContent<ModifiedContent<ModifiedContent<Group<_ConditionalContent<ModifiedContent<_AnimationView<Text>, _TraitWritingModifier<TransitionTraitKey>>, ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Font?>>>>, _EnvironmentKeyWritingModifier<Font?>>, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendM);
  outlined init with copy of (String, Any)((uint64_t)v7, (uint64_t)v9, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<HStack<TupleView<(Spacer, ForEach<ReversedCollection<Range<Int>>, Int, ModifiedContent<ZStack<TupleView<(ModifiedContent<ModifiedContent<Color, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<_ImplicitShapeStyle>, Circle>>, ModifiedContent<ModifiedContent<Color, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<AnyShapeStyle>, Circle>>)>>, _TraitWritingModifier<TransitionTraitKey>>>, ZStack<TupleView<(ModifiedContent<ModifiedContent<Color, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<_ImplicitShapeStyle>, Circle>>, ModifiedContent<ModifiedContent<ModifiedContent<Group<_ConditionalContent<ModifiedContent<_AnimationView<Text>, _TraitWritingModifier<TransitionTraitKey>>, ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Font?>>>>, _EnvironmentKeyWritingModifier<Font?>>, _FrameLayout>, _InsettableBackgroundShape);
  outlined destroy of TaskPriority?((uint64_t)v7, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<HStack<TupleView<(Spacer, ForEach<ReversedCollection<Range<Int>>, Int, ModifiedContent<ZStack<TupleView<(ModifiedContent<ModifiedContent<Color, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<_ImplicitShapeStyle>, Circle>>, ModifiedContent<ModifiedContent<Color, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<AnyShapeStyle>, Circle>>)>>, _TraitWritingModifier<TransitionTraitKey>>>, ZStack<TupleView<(ModifiedContent<ModifiedContent<Color, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<_ImplicitShapeStyle>, Circle>>, ModifiedContent<ModifiedContent<ModifiedContent<Group<_ConditionalContent<ModifiedContent<_AnimationView<Text>, _TraitWritingModifier<TransitionTraitKey>>, ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Font?>>>>, _EnvironmentKeyWritingModifier<Font?>>, _FrameLayout>, _InsettableBackgroundShape);
  outlined init with take of PresentationSource?((uint64_t)v9, v38, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(Spacer, ForEach<ReversedCollection<Range<Int>>, Int, ModifiedContent<ZStack<TupleView<(ModifiedContent<ModifiedContent<Color, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<_ImplicitShapeStyle>, Circle>>, ModifiedContent<ModifiedContent<Color, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<AnyShapeStyle>, Circle>>)>>, _TraitWritingModifier<TransitionTraitKey>>>, ZStack<TupleView<(ModifiedContent<ModifiedContent<Color, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<_ImplicitShapeStyle>, Circle>>, ModifiedContent<ModifiedContent<ModifiedContent<Group<_ConditionalContent<ModifiedContent<_AnimationView<Text>, _TraitWritingModifier<TransitionTraitKey>>, ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Font?>>>>, _EnvironmentKeyWritingModifier<Font?>>, _FrameLayout>, _Insettabl);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v36);
}

double Reactions.StackView.platterLength.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DynamicTypeSize?);
  __chkstk_darwin();
  uint64_t v1 = (char *)&v13 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = type metadata accessor for DynamicTypeSize();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (one-time initialization token for defaultPlatterLength != -1) {
    swift_once();
  }
  double v6 = *(double *)&static Reactions.StackView.Specs.defaultPlatterLength;
  type metadata accessor for Reactions.StackView(0);
  specialized Environment.wrappedValue.getter((uint64_t)v5);
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v1, v5, v2);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v3 + 56))(v1, 0, 1, v2);
  uint64_t v7 = (void *)UIContentSizeCategory.init(_:)();
  id v8 = [self traitCollectionWithPreferredContentSizeCategory:v7];
  id v9 = [self defaultMetrics];
  [v9 scaledValueForValue:v8 compatibleWithTraitCollection:v6];
  double v11 = v10;

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v11;
}

uint64_t closure #1 in Reactions.StackView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v45 = a2;
  uint64_t v43 = a4;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ZStack<TupleView<(ModifiedContent<ModifiedContent<Color, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<_ImplicitShapeStyle>, Circle>>, ModifiedContent<ModifiedContent<ModifiedContent<Group<_ConditionalContent<ModifiedContent<_AnimationView<Text>, _TraitWritingModifier<TransitionTraitKey>>, ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Font?>>>>, _EnvironmentKeyWritingModifier<Font?>>, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<AnyShapeStyle>, Circle>>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _MaskAlignmentEffect<Circle>>, BorderViewModifier>, _TraitWritingModifier<ZIndexTraitKey>>, _TraitWritingModifier<TransitionTraitKey>>, _FrameLayout>?)>>);
  __chkstk_darwin();
  uint64_t v7 = (char *)v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  long long v42 = (void *)((char *)v37 - v8);
  uint64_t v9 = type metadata accessor for BlendMode();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin();
  long long v41 = *(char **)(type metadata accessor for Reactions.StackView(0) - 8);
  uint64_t v12 = *((void *)v41 + 8);
  __chkstk_darwin();
  uint64_t v13 = (char *)v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ForEach<ReversedCollection<Range<Int>>, Int, ModifiedContent<ZStack<TupleView<(ModifiedContent<ModifiedContent<Color, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<_ImplicitShapeStyle>, Circle>>, ModifiedContent<ModifiedContent<Color, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<AnyShapeStyle>, Circle>>)>>, _TraitWritingModifier<TransitionTraitKey>>>);
  __chkstk_darwin();
  uint64_t result = __chkstk_darwin();
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v46 = 0;
    uint64_t v47 = a1;
    long long v39 = v18;
    uint64_t v40 = v14;
    long long v44 = (char *)v37 - v16;
    uint64_t v19 = v17;
    v37[1] = swift_getKeyPath();
    outlined init with copy of Reactions.StackView(v45, (uint64_t)v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))((char *)v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v9);
    uint64_t v20 = v41[80];
    long long v41 = v7;
    uint64_t v21 = (v20 + 16) & ~v20;
    uint64_t v22 = *(unsigned __int8 *)(v10 + 80);
    uint64_t v38 = a3;
    uint64_t v23 = v43;
    uint64_t v24 = (v12 + v22 + v21) & ~v22;
    uint64_t v25 = swift_allocObject();
    outlined init with take of Reactions.StackView((uint64_t)v13, v25 + v21);
    (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v25 + v24, (char *)v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ReversedCollection<Range<Int>>);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ZStack<TupleView<(ModifiedContent<ModifiedContent<Color, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<_ImplicitShapeStyle>, Circle>>, ModifiedContent<ModifiedContent<Color, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<AnyShapeStyle>, Circle>>)>>, _TraitWritingModifier<TransitionTraitKey>>);
    lazy protocol witness table accessor for type ReversedCollection<Range<Int>> and conformance <> ReversedCollection<A>();
    lazy protocol witness table accessor for type ModifiedContent<ZStack<TupleView<(ModifiedContent<ModifiedContent<Color, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<_ImplicitShapeStyle>, Circle>>, ModifiedContent<ModifiedContent<Color, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<AnyShapeStyle>, Circle>>)>>, _TraitWritingModifier<TransitionTraitKey>> and conformance <> ModifiedContent<A, B>();
    uint64_t v26 = v44;
    ForEach<>.init(_:id:content:)();
    uint64_t v27 = static Alignment.center.getter();
    uint64_t v28 = (uint64_t)v42;
    *long long v42 = v27;
    *(void *)(v28 + 8) = v29;
    uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_ZStackLayout, TupleView<(ModifiedContent<ModifiedContent<Color, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<_ImplicitShapeStyle>, Circle>>, ModifiedContent<ModifiedContent<ModifiedContent<Group<_ConditionalContent<ModifiedContent<_AnimationView<Text>, _TraitWritingModifier<TransitionTraitKey>>, ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Font?>>>>, _EnvironmentKeyWritingModifier<Font?>>, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<AnyShapeStyle>, Circle>>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _MaskAlignmentEffect<Circle>>, BorderViewModifier>, _TraitWritingModifier<ZIndexTraitKey>>, _TraitWritingModifier<TransitionTraitKey>>, _FrameLayout>?)>>);
    closure #2 in closure #1 in Reactions.StackView.body.getter(v45, v38, v28 + *(int *)(v30 + 44));
    uint64_t v31 = *(void (**)(uint64_t, char *, uint64_t))(v19 + 16);
    uint64_t v32 = v39;
    uint64_t v33 = v40;
    v31((uint64_t)v39, v26, v40);
    uint64_t v34 = (uint64_t)v41;
    outlined init with copy of (String, Any)(v28, (uint64_t)v41, &demangling cache variable for type metadata for ZStack<TupleView<(ModifiedContent<ModifiedContent<Color, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<_ImplicitShapeStyle>, Circle>>, ModifiedContent<ModifiedContent<ModifiedContent<Group<_ConditionalContent<ModifiedContent<_AnimationView<Text>, _TraitWritingModifier<TransitionTraitKey>>, ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Font?>>>>, _EnvironmentKeyWritingModifier<Font?>>, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<AnyShapeStyle>, Circle>>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _MaskAlignmentEffect<Circle>>, BorderViewModifier>, _TraitWritingModifier<ZIndexTraitKey>>, _TraitWritingModifier<TransitionTraitKey>>, _FrameLayout>?)>>);
    *(void *)uint64_t v23 = 0;
    *(unsigned char *)(v23 + 8) = 1;
    uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Spacer, ForEach<ReversedCollection<Range<Int>>, Int, ModifiedContent<ZStack<TupleView<(ModifiedContent<ModifiedContent<Color, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<_ImplicitShapeStyle>, Circle>>, ModifiedContent<ModifiedContent<Color, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<AnyShapeStyle>, Circle>>)>>, _TraitWritingModifier<TransitionTraitKey>>>, ZStack<TupleView<(ModifiedContent<ModifiedContent<Color, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<_ImplicitShapeStyle>, Circle>>, ModifiedContent<ModifiedContent<ModifiedContent<Group<_ConditionalContent<ModifiedContent<_AnimationView<Text>, _TraitWritingModifier<TransitionTraitKey>>, ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Font?>>>>, _EnvironmentKeyWritingModifier<Font?>>, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<AnyShapeStyle>, Cir);
    v31(v23 + *(int *)(v35 + 48), v32, v33);
    outlined init with copy of (String, Any)(v34, v23 + *(int *)(v35 + 64), &demangling cache variable for type metadata for ZStack<TupleView<(ModifiedContent<ModifiedContent<Color, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<_ImplicitShapeStyle>, Circle>>, ModifiedContent<ModifiedContent<ModifiedContent<Group<_ConditionalContent<ModifiedContent<_AnimationView<Text>, _TraitWritingModifier<TransitionTraitKey>>, ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Font?>>>>, _EnvironmentKeyWritingModifier<Font?>>, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<AnyShapeStyle>, Circle>>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _MaskAlignmentEffect<Circle>>, BorderViewModifier>, _TraitWritingModifier<ZIndexTraitKey>>, _TraitWritingModifier<TransitionTraitKey>>, _FrameLayout>?)>>);
    outlined destroy of TaskPriority?(v28, &demangling cache variable for type metadata for ZStack<TupleView<(ModifiedContent<ModifiedContent<Color, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<_ImplicitShapeStyle>, Circle>>, ModifiedContent<ModifiedContent<ModifiedContent<Group<_ConditionalContent<ModifiedContent<_AnimationView<Text>, _TraitWritingModifier<TransitionTraitKey>>, ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Font?>>>>, _EnvironmentKeyWritingModifier<Font?>>, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<AnyShapeStyle>, Circle>>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _MaskAlignmentEffect<Circle>>, BorderViewModifier>, _TraitWritingModifier<ZIndexTraitKey>>, _TraitWritingModifier<TransitionTraitKey>>, _FrameLayout>?)>>);
    uint64_t v36 = *(void (**)(char *, uint64_t))(v19 + 8);
    v36(v44, v33);
    outlined destroy of TaskPriority?(v34, &demangling cache variable for type metadata for ZStack<TupleView<(ModifiedContent<ModifiedContent<Color, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<_ImplicitShapeStyle>, Circle>>, ModifiedContent<ModifiedContent<ModifiedContent<Group<_ConditionalContent<ModifiedContent<_AnimationView<Text>, _TraitWritingModifier<TransitionTraitKey>>, ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Font?>>>>, _EnvironmentKeyWritingModifier<Font?>>, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<AnyShapeStyle>, Circle>>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _MaskAlignmentEffect<Circle>>, BorderViewModifier>, _TraitWritingModifier<ZIndexTraitKey>>, _TraitWritingModifier<TransitionTraitKey>>, _FrameLayout>?)>>);
    return ((uint64_t (*)(char *, uint64_t))v36)(v32, v33);
  }
  return result;
}

uint64_t closure #1 in closure #1 in Reactions.StackView.body.getter@<X0>(uint64_t a1@<X1>, char *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v24 = a3;
  uint64_t v5 = type metadata accessor for ScaleTransition();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of Transition.animation(_:)>>.0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin();
  uint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v14 = (char *)&v23 - v13;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ZStack<TupleView<(ModifiedContent<ModifiedContent<Color, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<_ImplicitShapeStyle>, Circle>>, ModifiedContent<ModifiedContent<Color, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<AnyShapeStyle>, Circle>>)>>);
  __chkstk_darwin();
  uint64_t v16 = (uint64_t *)((char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t *v16 = static Alignment.center.getter();
  v16[1] = v17;
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_ZStackLayout, TupleView<(ModifiedContent<ModifiedContent<Color, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<_ImplicitShapeStyle>, Circle>>, ModifiedContent<ModifiedContent<Color, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<AnyShapeStyle>, Circle>>)>>);
  closure #1 in closure #1 in closure #1 in Reactions.StackView.body.getter(a1, a2, (uint64_t)v16 + *(int *)(v18 + 44));
  static UnitPoint.center.getter();
  ScaleTransition.init(_:anchor:)();
  static Animation.easeInOut(duration:)();
  uint64_t v19 = lazy protocol witness table accessor for type Reactions.StackView.Model and conformance Reactions.StackView.Model(&lazy protocol witness table cache variable for type ScaleTransition and conformance ScaleTransition, (void (*)(uint64_t))&type metadata accessor for ScaleTransition);
  Transition.animation(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v12, v14, v9);
  uint64_t v25 = v5;
  uint64_t v26 = v19;
  swift_getOpaqueTypeConformance2();
  uint64_t v20 = AnyTransition.init<A>(_:)();
  uint64_t v21 = v24;
  outlined init with copy of (String, Any)((uint64_t)v16, v24, &demangling cache variable for type metadata for ZStack<TupleView<(ModifiedContent<ModifiedContent<Color, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<_ImplicitShapeStyle>, Circle>>, ModifiedContent<ModifiedContent<Color, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<AnyShapeStyle>, Circle>>)>>);
  *(void *)(v21
            + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ZStack<TupleView<(ModifiedContent<ModifiedContent<Color, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<_ImplicitShapeStyle>, Circle>>, ModifiedContent<ModifiedContent<Color, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<AnyShapeStyle>, Circle>>)>>, _TraitWritingModifier<TransitionTraitKey>>)
                     + 36)) = v20;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v9);
  return outlined destroy of TaskPriority?((uint64_t)v16, &demangling cache variable for type metadata for ZStack<TupleView<(ModifiedContent<ModifiedContent<Color, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<_ImplicitShapeStyle>, Circle>>, ModifiedContent<ModifiedContent<Color, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<AnyShapeStyle>, Circle>>)>>);
}

uint64_t closure #1 in closure #1 in closure #1 in Reactions.StackView.body.getter@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  CGRect v51 = a2;
  uint64_t v52 = a3;
  uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<AnyShapeStyle>, Circle>)
      - 8;
  __chkstk_darwin();
  uint64_t v49 = (uint64_t)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _BlendModeShapeStyle<AnyShapeStyle>)
      - 8;
  __chkstk_darwin();
  uint64_t v45 = (uint64_t *)((char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Color, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<AnyShapeStyle>, Circle>>)
      - 8;
  __chkstk_darwin();
  uint64_t v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v48 = (uint64_t)&v35 - v8;
  uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<_ImplicitShapeStyle>, Circle>)
      - 8;
  __chkstk_darwin();
  uint64_t v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = type metadata accessor for BlendMode();
  uint64_t v11 = *(void *)(v53 - 8);
  __chkstk_darwin();
  uint64_t v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _BlendModeShapeStyle<_ImplicitShapeStyle>);
  __chkstk_darwin();
  uint64_t v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Color, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<_ImplicitShapeStyle>, Circle>>)
      - 8;
  __chkstk_darwin();
  uint64_t v18 = (char *)&v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v54 = (uint64_t)&v35 - v19;
  uint64_t v41 = static Color.clear.getter();
  uint64_t v42 = a1;
  Reactions.StackView.platterLength.getter();
  Reactions.StackView.platterLength.getter();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v20 = v55[1];
  LODWORD(v40) = v56;
  uint64_t v39 = v57;
  int v38 = v58;
  uint64_t v37 = v59;
  uint64_t v36 = v60;
  uint64_t v21 = v53;
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, enum case for BlendMode.destinationOut(_:), v53);
  uint64_t v43 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  v43(v15, v13, v21);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v21);
  outlined init with copy of (String, Any)((uint64_t)v15, (uint64_t)v10, &demangling cache variable for type metadata for _BlendModeShapeStyle<_ImplicitShapeStyle>);
  *(_WORD *)&v10[*(int *)(v44 + 64)] = 256;
  outlined init with copy of (String, Any)((uint64_t)v10, (uint64_t)&v18[*(int *)(v16 + 44)], &demangling cache variable for type metadata for _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<_ImplicitShapeStyle>, Circle>);
  *(void *)uint64_t v18 = v41;
  *((void *)v18 + 1) = v20;
  v18[16] = v40;
  *((void *)v18 + 3) = v39;
  v18[32] = v38;
  uint64_t v22 = v36;
  *((void *)v18 + 5) = v37;
  *((void *)v18 + 6) = v22;
  swift_retain();
  outlined destroy of TaskPriority?((uint64_t)v10, &demangling cache variable for type metadata for _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<_ImplicitShapeStyle>, Circle>);
  outlined destroy of TaskPriority?((uint64_t)v15, &demangling cache variable for type metadata for _BlendModeShapeStyle<_ImplicitShapeStyle>);
  swift_release();
  outlined init with take of PresentationSource?((uint64_t)v18, v54, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Color, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<_ImplicitShapeStyle>, Circle>>);
  uint64_t v23 = static Color.clear.getter();
  Reactions.StackView.platterLength.getter();
  Reactions.StackView.platterLength.getter();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v44 = v61;
  LOBYTE(v20) = v62;
  uint64_t v41 = v63;
  LOBYTE(v10) = v64;
  uint64_t v24 = v65;
  uint64_t v40 = v66;
  Reactions.StackView.backgroundColor.getter(v55);
  uint64_t v25 = v55[0];
  uint64_t v26 = v45;
  v43((char *)v45 + *(int *)(v47 + 44), v51, v53);
  uint64_t *v26 = v25;
  uint64_t v27 = v49;
  outlined init with copy of (String, Any)((uint64_t)v26, v49, &demangling cache variable for type metadata for _BlendModeShapeStyle<AnyShapeStyle>);
  *(_WORD *)(v27 + *(int *)(v50 + 64)) = 256;
  outlined init with copy of (String, Any)(v27, (uint64_t)&v7[*(int *)(v46 + 44)], &demangling cache variable for type metadata for _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<AnyShapeStyle>, Circle>);
  uint64_t v28 = v44;
  *(void *)uint64_t v7 = v23;
  *((void *)v7 + 1) = v28;
  unsigned char v7[16] = v20;
  *((void *)v7 + 3) = v41;
  v7[32] = (char)v10;
  uint64_t v29 = v40;
  *((void *)v7 + 5) = v24;
  *((void *)v7 + 6) = v29;
  swift_retain();
  outlined destroy of TaskPriority?(v27, &demangling cache variable for type metadata for _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<AnyShapeStyle>, Circle>);
  outlined destroy of TaskPriority?((uint64_t)v26, &demangling cache variable for type metadata for _BlendModeShapeStyle<AnyShapeStyle>);
  swift_release();
  uint64_t v30 = v48;
  outlined init with take of PresentationSource?((uint64_t)v7, v48, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Color, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<AnyShapeStyle>, Circle>>);
  uint64_t v31 = v54;
  outlined init with copy of (String, Any)(v54, (uint64_t)v18, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Color, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<_ImplicitShapeStyle>, Circle>>);
  outlined init with copy of (String, Any)(v30, (uint64_t)v7, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Color, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<AnyShapeStyle>, Circle>>);
  uint64_t v32 = v52;
  outlined init with copy of (String, Any)((uint64_t)v18, v52, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Color, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<_ImplicitShapeStyle>, Circle>>);
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModifiedContent<ModifiedContent<Color, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<_ImplicitShapeStyle>, Circle>>, ModifiedContent<ModifiedContent<Color, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<AnyShapeStyle>, Circle>>));
  outlined init with copy of (String, Any)((uint64_t)v7, v32 + *(int *)(v33 + 48), &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Color, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<AnyShapeStyle>, Circle>>);
  outlined destroy of TaskPriority?(v30, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Color, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<AnyShapeStyle>, Circle>>);
  outlined destroy of TaskPriority?(v31, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Color, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<_ImplicitShapeStyle>, Circle>>);
  outlined destroy of TaskPriority?((uint64_t)v7, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Color, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<AnyShapeStyle>, Circle>>);
  return outlined destroy of TaskPriority?((uint64_t)v18, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Color, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<_ImplicitShapeStyle>, Circle>>);
}

uint64_t Reactions.StackView.backgroundColor.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v22 = a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ColorScheme, ColorSchemeContrast))
     - 8;
  __chkstk_darwin();
  uint64_t v21 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ColorSchemeContrast();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ColorScheme();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin();
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Reactions.StackView(0);
  specialized Environment.wrappedValue.getter((uint64_t)v12);
  specialized Environment.wrappedValue.getter((uint64_t)v8);
  uint64_t v13 = *(int *)(v3 + 56);
  uint64_t v14 = (uint64_t)v21;
  uint64_t v15 = &v21[v13];
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v21, v12, v9);
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v15, v8, v5);
  int v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 88))(v14, v9);
  if (v16 == enum case for ColorScheme.light(_:))
  {
    if ((*(unsigned int (**)(char *, uint64_t))(v6 + 88))(v15, v5) == enum case for ColorSchemeContrast.increased(_:))
    {
      id v17 = [self secondarySystemFillColor];
      uint64_t v23 = Color.init(_:)();
LABEL_7:
      *uint64_t v22 = AnyShapeStyle.init<A>(_:)();
      return (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(v14, v9);
    }
  }
  else if (v16 == enum case for ColorScheme.dark(_:) {
         && (*(unsigned int (**)(char *, uint64_t))(v6 + 88))(v15, v5) == enum case for ColorSchemeContrast.increased(_:))
  }
  {
    LODWORD(v23) = static HierarchicalShapeStyle.quinary.getter();
    goto LABEL_7;
  }
  if (*(unsigned char *)(*(void *)(v2 + 8) + OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model_isVibrant) == 1)
  {
    LODWORD(v23) = static HierarchicalShapeStyle.quaternary.getter();
  }
  else
  {
    id v19 = [self secondarySystemFillColor];
    uint64_t v23 = Color.init(_:)();
  }
  *uint64_t v22 = AnyShapeStyle.init<A>(_:)();
  return outlined destroy of TaskPriority?(v14, &demangling cache variable for type metadata for (ColorScheme, ColorSchemeContrast));
}

uint64_t closure #2 in closure #1 in Reactions.StackView.body.getter@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  double v102 = a2;
  uint64_t v105 = a3;
  uint64_t v86 = type metadata accessor for ScaleTransition();
  uint64_t v84 = *(void *)(v86 - 8);
  __chkstk_darwin();
  id v81 = (char *)&v78 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of Transition.animation(_:)>>.0);
  uint64_t v85 = *(void *)(v87 - 8);
  __chkstk_darwin();
  long long v82 = (char *)&v78 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v83 = (char *)&v78 - v6;
  uint64_t v7 = type metadata accessor for Image.ResizingMode();
  uint64_t v79 = *(void *)(v7 - 8);
  uint64_t v80 = v7;
  __chkstk_darwin();
  long long v78 = (char *)&v78 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<AnyShapeStyle>, Circle>)
       - 8;
  __chkstk_darwin();
  uint64_t v111 = (uint64_t)&v78 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v100 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _BlendModeShapeStyle<AnyShapeStyle>)
       - 8;
  __chkstk_darwin();
  double v110 = (uint64_t *)((char *)&v78 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Font.Design?);
  __chkstk_darwin();
  double v98 = (char *)&v78 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Group<_ConditionalContent<ModifiedContent<_AnimationView<Text>, _TraitWritingModifier<TransitionTraitKey>>, ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Font?>>>>, _EnvironmentKeyWritingModifier<Font?>>, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<AnyShapeStyle>, Circle>>)
      - 8;
  __chkstk_darwin();
  uint64_t v104 = (uint64_t)&v78 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v14 = (char *)&v78 - v13;
  __chkstk_darwin();
  CGFloat v106 = (char *)&v78 - v15;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<_ImplicitShapeStyle>, Circle>)
      - 8;
  __chkstk_darwin();
  id v108 = (char *)&v78 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = type metadata accessor for BlendMode();
  uint64_t v18 = *(void *)(v109 - 8);
  __chkstk_darwin();
  uint64_t v20 = (char *)&v78 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _BlendModeShapeStyle<_ImplicitShapeStyle>);
  __chkstk_darwin();
  uint64_t v22 = (char *)&v78 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Color, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<_ImplicitShapeStyle>, Circle>>)
      - 8;
  __chkstk_darwin();
  uint64_t v25 = (char *)&v78 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v112 = (uint64_t)&v78 - v26;
  uint64_t v107 = static Color.clear.getter();
  uint64_t v113 = a1;
  Reactions.StackView.platterLength.getter();
  Reactions.StackView.platterLength.getter();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  double v103 = (char *)v147;
  LODWORD(v95) = v148;
  uint64_t v94 = v149;
  LODWORD(v93) = v150;
  uint64_t v91 = v152;
  uint64_t v92 = v151;
  uint64_t v27 = v109;
  (*(void (**)(char *, void, uint64_t))(v18 + 104))(v20, enum case for BlendMode.destinationOut(_:), v109);
  CGRect v96 = *(void (**)(char *, char *, uint64_t))(v18 + 16);
  uint64_t v97 = v18 + 16;
  v96(v22, v20, v27);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v27);
  uint64_t v28 = (uint64_t)v108;
  outlined init with copy of (String, Any)((uint64_t)v22, (uint64_t)v108, &demangling cache variable for type metadata for _BlendModeShapeStyle<_ImplicitShapeStyle>);
  *(_WORD *)(v28 + *(int *)(v16 + 64)) = 256;
  outlined init with copy of (String, Any)(v28, (uint64_t)&v25[*(int *)(v23 + 44)], &demangling cache variable for type metadata for _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<_ImplicitShapeStyle>, Circle>);
  uint64_t v29 = (uint64_t)v103;
  *(void *)uint64_t v25 = v107;
  *((void *)v25 + 1) = v29;
  v25[16] = v95;
  *((void *)v25 + 3) = v94;
  v25[32] = v93;
  uint64_t v30 = v91;
  *((void *)v25 + 5) = v92;
  *((void *)v25 + 6) = v30;
  swift_retain();
  outlined destroy of TaskPriority?(v28, &demangling cache variable for type metadata for _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<_ImplicitShapeStyle>, Circle>);
  outlined destroy of TaskPriority?((uint64_t)v22, &demangling cache variable for type metadata for _BlendModeShapeStyle<_ImplicitShapeStyle>);
  swift_release();
  double v103 = v25;
  outlined init with take of PresentationSource?((uint64_t)v25, v112, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Color, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<_ImplicitShapeStyle>, Circle>>);
  closure #1 in closure #2 in closure #1 in Reactions.StackView.body.getter((uint64_t)&v164);
  id v108 = v164;
  uint64_t v94 = v166;
  uint64_t v95 = v165;
  uint64_t v92 = v168;
  uint64_t v93 = v167;
  uint64_t v91 = v169;
  LODWORD(v107) = v170;
  Reactions.StackView.fontSize.getter();
  uint64_t v31 = type metadata accessor for Font.Design();
  uint64_t v32 = (uint64_t)v98;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v98, 1, 1, v31);
  uint64_t v90 = static Font.system(size:weight:design:)();
  outlined destroy of TaskPriority?(v32, &demangling cache variable for type metadata for Font.Design?);
  uint64_t KeyPath = swift_getKeyPath();
  Reactions.StackView.platterLength.getter();
  Reactions.StackView.platterLength.getter();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v34 = v153;
  LOBYTE(v23) = v154;
  double v98 = v155;
  LOBYTE(v20) = v156;
  uint64_t v35 = v157;
  uint64_t v89 = v158;
  Reactions.StackView.backgroundColor.getter((uint64_t *)&v164);
  uint64_t v36 = (uint64_t)v164;
  uint64_t v37 = v110;
  v96((char *)v110 + *(int *)(v100 + 44), (char *)v102, v109);
  *uint64_t v37 = v36;
  uint64_t v38 = v111;
  outlined init with copy of (String, Any)((uint64_t)v37, v111, &demangling cache variable for type metadata for _BlendModeShapeStyle<AnyShapeStyle>);
  *(_WORD *)(v38 + *(int *)(v101 + 64)) = 256;
  outlined init with copy of (String, Any)(v38, (uint64_t)&v14[*(int *)(v99 + 44)], &demangling cache variable for type metadata for _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<AnyShapeStyle>, Circle>);
  uint64_t v39 = (uint64_t)v108;
  uint64_t v40 = v94;
  uint64_t v41 = v95;
  *(void *)uint64_t v14 = v108;
  *((void *)v14 + 1) = v41;
  uint64_t v43 = v92;
  uint64_t v42 = v93;
  *((void *)v14 + 2) = v40;
  *((void *)v14 + 3) = v42;
  uint64_t v45 = v90;
  uint64_t v44 = v91;
  *((void *)v14 + 4) = v43;
  *((void *)v14 + 5) = v44;
  char v46 = v107;
  v14[48] = v107;
  uint64_t v88 = KeyPath;
  *((void *)v14 + 7) = KeyPath;
  *((void *)v14 + 8) = v45;
  *((void *)v14 + 9) = v34;
  v14[80] = v23;
  *((void *)v14 + 11) = v98;
  uint64_t v47 = (uint64_t)v106;
  v14[96] = (char)v20;
  uint64_t v48 = v89;
  *((void *)v14 + 13) = v35;
  *((void *)v14 + 14) = v48;
  LOBYTE(v23) = v40;
  uint64_t v49 = v42;
  uint64_t v50 = v43;
  uint64_t v51 = v44;
  outlined copy of _ConditionalContent<ModifiedContent<_AnimationView<Text>, _TraitWritingModifier<TransitionTraitKey>>, ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Font?>>>.Storage(v39, v41, v40, v42, v43, v44, v46);
  swift_retain();
  swift_retain();
  outlined destroy of TaskPriority?(v111, &demangling cache variable for type metadata for _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<AnyShapeStyle>, Circle>);
  outlined destroy of TaskPriority?((uint64_t)v110, &demangling cache variable for type metadata for _BlendModeShapeStyle<AnyShapeStyle>);
  outlined consume of _ConditionalContent<ModifiedContent<_AnimationView<Text>, _TraitWritingModifier<TransitionTraitKey>>, ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Font?>>>.Storage((uint64_t)v108, v41, v23, v49, v50, v51, v107);
  swift_release();
  swift_release();
  uint64_t v52 = v47;
  outlined init with take of PresentationSource?((uint64_t)v14, v47, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Group<_ConditionalContent<ModifiedContent<_AnimationView<Text>, _TraitWritingModifier<TransitionTraitKey>>, ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Font?>>>>, _EnvironmentKeyWritingModifier<Font?>>, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<AnyShapeStyle>, Circle>>);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v53 = v164;
  if (!v164) {
    goto LABEL_5;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  if (v164 != 1)
  {

LABEL_5:
    _s7SwiftUI15ModifiedContentVyACyACyACyACyACyAA5ImageVAA18_AspectRatioLayoutVGAA20_MaskAlignmentEffectVyAA6CircleVGG09MusicCoreB018BorderViewModifier33_0FA4743D1401B6C1F29D2373CEDF9367LLVGAA013_TraitWritingQ0VyAA06ZIndexY3KeyVGGAUyAA010TransitionY3KeyVGGAA06_FrameH0VGSgWOi0_((uint64_t)v124);
    goto LABEL_6;
  }
  uint64_t v54 = v53;
  Image.init(uiImage:)();
  unsigned __int8 v56 = v78;
  uint64_t v55 = v79;
  uint64_t v57 = v80;
  (*(void (**)(char *, void, uint64_t))(v79 + 104))(v78, enum case for Image.ResizingMode.stretch(_:), v80);
  uint64_t v111 = Image.resizable(capInsets:resizingMode:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v55 + 8))(v56, v57);
  uint64_t v58 = static Alignment.center.getter();
  uint64_t v109 = v59;
  double v110 = (uint64_t *)v58;
  static Color.black.getter();
  id v108 = (char *)Color.opacity(_:)();
  swift_release();
  static UnitPoint.center.getter();
  uint64_t v60 = v81;
  ScaleTransition.init(_:anchor:)();
  static Animation.easeInOut(duration:)();
  uint64_t v61 = lazy protocol witness table accessor for type Reactions.StackView.Model and conformance Reactions.StackView.Model(&lazy protocol witness table cache variable for type ScaleTransition and conformance ScaleTransition, (void (*)(uint64_t))&type metadata accessor for ScaleTransition);
  char v62 = v83;
  uint64_t v63 = v86;
  Transition.animation(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v84 + 8))(v60, v63);
  uint64_t v64 = v85;
  uint64_t v65 = v87;
  (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v82, v62, v87);
  CGMutablePathRef v164 = (char *)v63;
  uint64_t v165 = v61;
  swift_getOpaqueTypeConformance2();
  uint64_t v66 = AnyTransition.init<A>(_:)();
  (*(void (**)(char *, uint64_t))(v64 + 8))(v62, v65);
  Reactions.StackView.platterLength.getter();
  Reactions.StackView.platterLength.getter();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v67 = v159;
  LOBYTE(v61) = v160;
  uint64_t v68 = v161;
  char v69 = v162;

  char v121 = 1;
  char v118 = 1;
  char v117 = v61;
  char v115 = v69;
  v124[0] = v111;
  v124[1] = 0;
  __int16 v125 = 257;
  int v126 = v119;
  __int16 v127 = v120;
  uint64_t v128 = (uint64_t)v110;
  uint64_t v129 = v109;
  uint64_t v130 = (uint64_t)v108;
  uint64_t v131 = 0x3FE0000000000000;
  char v132 = 0;
  *(_DWORD *)&v133[3] = *(_DWORD *)((char *)v123 + 3);
  *(_DWORD *)id v133 = v123[0];
  uint64_t v134 = 0;
  uint64_t v135 = 0;
  char v136 = 1;
  *(_DWORD *)double v137 = *(_DWORD *)v122;
  *(_DWORD *)&v137[3] = *(_DWORD *)&v122[3];
  uint64_t v138 = 0x3FF0000000000000;
  uint64_t v139 = v66;
  uint64_t v52 = (uint64_t)v106;
  uint64_t v140 = v67;
  char v141 = v61;
  *(_DWORD *)uint64_t v142 = *(_DWORD *)v116;
  *(_DWORD *)&v142[3] = *(_DWORD *)&v116[3];
  uint64_t v143 = v68;
  char v144 = v69;
  *(_DWORD *)&v145[3] = *(_DWORD *)&v114[3];
  *(_DWORD *)uint64_t v145 = *(_DWORD *)v114;
  long long v146 = v163;
  v70.location = (Swift::Int)v124;
  CFRange.init(_:)(v70);
LABEL_6:
  outlined init with take of PresentationSource?((uint64_t)v124, (uint64_t)&v164, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _MaskAlignmentEffect<Circle>>, BorderViewModifier>, _TraitWritingModifier<ZIndexTraitKey>>, _TraitWritingModifier<TransitionTraitKey>>, _FrameLayout>?);
  uint64_t v71 = v112;
  uint64_t v72 = (uint64_t)v103;
  outlined init with copy of (String, Any)(v112, (uint64_t)v103, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Color, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<_ImplicitShapeStyle>, Circle>>);
  uint64_t v73 = v104;
  outlined init with copy of (String, Any)(v52, v104, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Group<_ConditionalContent<ModifiedContent<_AnimationView<Text>, _TraitWritingModifier<TransitionTraitKey>>, ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Font?>>>>, _EnvironmentKeyWritingModifier<Font?>>, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<AnyShapeStyle>, Circle>>);
  outlined init with take of PresentationSource?((uint64_t)&v164, (uint64_t)v122, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _MaskAlignmentEffect<Circle>>, BorderViewModifier>, _TraitWritingModifier<ZIndexTraitKey>>, _TraitWritingModifier<TransitionTraitKey>>, _FrameLayout>?);
  uint64_t v74 = v105;
  outlined init with copy of (String, Any)(v72, v105, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Color, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<_ImplicitShapeStyle>, Circle>>);
  uint64_t v75 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModifiedContent<ModifiedContent<Color, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<_ImplicitShapeStyle>, Circle>>, ModifiedContent<ModifiedContent<ModifiedContent<Group<_ConditionalContent<ModifiedContent<_AnimationView<Text>, _TraitWritingModifier<TransitionTraitKey>>, ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Font?>>>>, _EnvironmentKeyWritingModifier<Font?>>, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<AnyShapeStyle>, Circle>>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _MaskAlignmentEffect<Circle>>, BorderViewModifier>, _TraitWritingModifier<ZIndexTraitKey>>, _TraitWritingModifier<TransitionTraitKey>>, _FrameLayout>?));
  outlined init with copy of (String, Any)(v73, v74 + *(int *)(v75 + 48), &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Group<_ConditionalContent<ModifiedContent<_AnimationView<Text>, _TraitWritingModifier<TransitionTraitKey>>, ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Font?>>>>, _EnvironmentKeyWritingModifier<Font?>>, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<AnyShapeStyle>, Circle>>);
  uint64_t v76 = v74 + *(int *)(v75 + 64);
  outlined init with take of PresentationSource?((uint64_t)v122, (uint64_t)v123, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _MaskAlignmentEffect<Circle>>, BorderViewModifier>, _TraitWritingModifier<ZIndexTraitKey>>, _TraitWritingModifier<TransitionTraitKey>>, _FrameLayout>?);
  outlined init with take of PresentationSource?((uint64_t)v123, v76, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _MaskAlignmentEffect<Circle>>, BorderViewModifier>, _TraitWritingModifier<ZIndexTraitKey>>, _TraitWritingModifier<TransitionTraitKey>>, _FrameLayout>?);
  outlined retain of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _MaskAlignmentEffect<Circle>>, BorderViewModifier>, _TraitWritingModifier<ZIndexTraitKey>>, _TraitWritingModifier<TransitionTraitKey>>, _FrameLayout>?(v123, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))outlined copy of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _MaskAlignmentEffect<Circle>>, BorderViewModifier>, _TraitWritingModifier<ZIndexTraitKey>>, _TraitWritingModifier<TransitionTraitKey>>, _FrameLayout>?);
  outlined destroy of TaskPriority?(v52, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Group<_ConditionalContent<ModifiedContent<_AnimationView<Text>, _TraitWritingModifier<TransitionTraitKey>>, ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Font?>>>>, _EnvironmentKeyWritingModifier<Font?>>, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<AnyShapeStyle>, Circle>>);
  outlined destroy of TaskPriority?(v71, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Color, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<_ImplicitShapeStyle>, Circle>>);
  outlined init with take of PresentationSource?((uint64_t)v122, (uint64_t)v124, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _MaskAlignmentEffect<Circle>>, BorderViewModifier>, _TraitWritingModifier<ZIndexTraitKey>>, _TraitWritingModifier<TransitionTraitKey>>, _FrameLayout>?);
  outlined retain of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _MaskAlignmentEffect<Circle>>, BorderViewModifier>, _TraitWritingModifier<ZIndexTraitKey>>, _TraitWritingModifier<TransitionTraitKey>>, _FrameLayout>?(v124, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))outlined consume of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _MaskAlignmentEffect<Circle>>, BorderViewModifier>, _TraitWritingModifier<ZIndexTraitKey>>, _TraitWritingModifier<TransitionTraitKey>>, _FrameLayout>?);
  outlined destroy of TaskPriority?(v73, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Group<_ConditionalContent<ModifiedContent<_AnimationView<Text>, _TraitWritingModifier<TransitionTraitKey>>, ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Font?>>>>, _EnvironmentKeyWritingModifier<Font?>>, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<AnyShapeStyle>, Circle>>);
  return outlined destroy of TaskPriority?(v72, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Color, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<_ImplicitShapeStyle>, Circle>>);
}

double closure #1 in closure #2 in closure #1 in Reactions.StackView.body.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for ScaleTransition();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v26 - v6;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  if (*((void *)&v34 + 1))
  {
    _sS2SSysWl_1();
    uint64_t v8 = Text.init<A>(_:)();
    uint64_t v10 = v9;
    uint64_t v12 = v11;
    uint64_t v14 = v13 & 1;
    uint64_t v15 = static Animation.easeInOut(duration:)();
    static UnitPoint.center.getter();
    ScaleTransition.init(_:anchor:)();
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v7, v2);
    lazy protocol witness table accessor for type Reactions.StackView.Model and conformance Reactions.StackView.Model(&lazy protocol witness table cache variable for type ScaleTransition and conformance ScaleTransition, (void (*)(uint64_t))&type metadata accessor for ScaleTransition);
    uint64_t v16 = AnyTransition.init<A>(_:)();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v7, v2);
    uint64_t v27 = v8;
    uint64_t v28 = v10;
    uint64_t v29 = v14;
    uint64_t v30 = v12;
    uint64_t v31 = v15;
    uint64_t v32 = v16;
    char v33 = 0;
  }
  else
  {
    uint64_t v17 = Image.init(_internalSystemName:)();
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    swift_release();
    if (v34 == 1) {
      uint64_t v18 = static Color.primary.getter();
    }
    else {
      uint64_t v18 = static Color.accentColor.getter();
    }
    uint64_t v19 = v18;
    uint64_t v20 = static Font.callout.getter();
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v27 = v17;
    uint64_t v28 = v19;
    uint64_t v29 = KeyPath;
    uint64_t v30 = v20;
    uint64_t v31 = 0;
    uint64_t v32 = 0;
    char v33 = 1;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<_AnimationView<Text>, _TraitWritingModifier<TransitionTraitKey>>);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Font?>>);
  lazy protocol witness table accessor for type ModifiedContent<_AnimationView<Text>, _TraitWritingModifier<TransitionTraitKey>> and conformance <> ModifiedContent<A, B>();
  lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>();
  _ConditionalContent<>.init(storage:)();
  double result = *(double *)&v34;
  long long v23 = v35;
  long long v24 = v36;
  char v25 = v37;
  *(_OWORD *)a1 = v34;
  *(_OWORD *)(a1 + 16) = v23;
  *(_OWORD *)(a1 + 32) = v24;
  *(unsigned char *)(a1 + 48) = v25;
  return result;
}

double Reactions.StackView.fontSize.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DynamicTypeSize?);
  __chkstk_darwin();
  uint64_t v1 = (char *)&v12 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = type metadata accessor for DynamicTypeSize();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Reactions.StackView(0);
  specialized Environment.wrappedValue.getter((uint64_t)v5);
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v1, v5, v2);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v3 + 56))(v1, 0, 1, v2);
  uint64_t v6 = (void *)UIContentSizeCategory.init(_:)();
  id v7 = [self traitCollectionWithPreferredContentSizeCategory:v6];
  id v8 = [self defaultMetrics];
  [v8 scaledValueForValue:v7 compatibleWithTraitCollection:14.0];
  double v10 = v9;

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v10;
}

double static Reactions.StackView.Specs.width(for:)(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for DynamicTypeSize?);
  __chkstk_darwin();
  uint64_t v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (one-time initialization token for defaultPlatterLength != -1) {
    swift_once();
  }
  double v4 = *(double *)&static Reactions.StackView.Specs.defaultPlatterLength;
  uint64_t v5 = type metadata accessor for DynamicTypeSize();
  uint64_t v6 = *(void *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v3, a1, v5);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v3, 0, 1, v5);
  id v7 = (void *)UIContentSizeCategory.init(_:)();
  id v8 = [self traitCollectionWithPreferredContentSizeCategory:v7];
  id v9 = [self defaultMetrics];
  [v9 scaledValueForValue:v8 compatibleWithTraitCollection:v4];
  double v11 = v10;

  if (one-time initialization token for stackSpacing != -1) {
    swift_once();
  }
  return v11 + *(double *)&static Reactions.StackView.Specs.stackSpacing * 3.0;
}

void one-time initialization function for defaultPlatterLength()
{
  static Reactions.StackView.Specs.defaultPlatterLength = 0x403C000000000000;
}

void one-time initialization function for stackSpacing()
{
  static Reactions.StackView.Specs.stackSpacing = 0x4014000000000000;
}

uint64_t associated type witness table accessor for View.Body : View in Reactions.StackView()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for Reactions()
{
  return &type metadata for Reactions;
}

uint64_t *initializeBufferWithCopyOfBuffer for Reactions.StackView(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    id v9 = (uint64_t *)((char *)a1 + v8);
    double v10 = (uint64_t *)((char *)a2 + v8);
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ColorScheme>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = type metadata accessor for ColorScheme();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    }
    else
    {
      *id v9 = *v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v13 = a3[6];
    uint64_t v14 = (uint64_t *)((char *)a1 + v13);
    uint64_t v15 = (uint64_t *)((char *)a2 + v13);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ColorSchemeContrast>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v16 = type metadata accessor for ColorSchemeContrast();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    }
    else
    {
      void *v14 = *v15;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v17 = a3[7];
    uint64_t v18 = (uint64_t *)((char *)a1 + v17);
    uint64_t v19 = (uint64_t *)((char *)a2 + v17);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v20 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
    }
    else
    {
      *uint64_t v18 = *v19;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for Reactions.StackView(uint64_t a1, int *a2)
{
  swift_release();
  uint64_t v4 = a1 + a2[5];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ColorScheme>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for ColorScheme();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = a1 + a2[6];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ColorSchemeContrast>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for ColorSchemeContrast();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  uint64_t v8 = a1 + a2[7];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = type metadata accessor for DynamicTypeSize();
    double v10 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
    return v10(v8, v9);
  }
  else
  {
    return swift_release();
  }
}

void *initializeWithCopy for Reactions.StackView(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ColorScheme>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = type metadata accessor for ColorScheme();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    *uint64_t v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ColorSchemeContrast>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v14 = type metadata accessor for ColorSchemeContrast();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  }
  else
  {
    *uint64_t v12 = *v13;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v15 = a3[7];
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (void *)((char *)a2 + v15);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v18 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  }
  else
  {
    void *v16 = *v17;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *assignWithCopy for Reactions.StackView(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v6 = a3[5];
    uint64_t v7 = (void *)((char *)a1 + v6);
    uint64_t v8 = (void *)((char *)a2 + v6);
    outlined destroy of TaskPriority?((uint64_t)a1 + v6, &demangling cache variable for type metadata for Environment<ColorScheme>.Content);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ColorScheme>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = type metadata accessor for ColorScheme();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *uint64_t v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v10 = a3[6];
    uint64_t v11 = (void *)((char *)a1 + v10);
    uint64_t v12 = (void *)((char *)a2 + v10);
    outlined destroy of TaskPriority?((uint64_t)a1 + v10, &demangling cache variable for type metadata for Environment<ColorSchemeContrast>.Content);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ColorSchemeContrast>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = type metadata accessor for ColorSchemeContrast();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
    }
    else
    {
      *uint64_t v11 = *v12;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v14 = a3[7];
    uint64_t v15 = (void *)((char *)a1 + v14);
    uint64_t v16 = (void *)((char *)a2 + v14);
    outlined destroy of TaskPriority?((uint64_t)a1 + v14, (uint64_t *)&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    }
    else
    {
      *uint64_t v15 = *v16;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *initializeWithTake for Reactions.StackView(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ColorScheme>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = type metadata accessor for ColorScheme();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  uint64_t v11 = a3[6];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ColorSchemeContrast>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = type metadata accessor for ColorSchemeContrast();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v12, v13, v15);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
  }
  uint64_t v16 = a3[7];
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v20 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v17, v18, v20);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for Reactions.StackView(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_release();
  if (a1 != a2)
  {
    uint64_t v7 = a3[5];
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    outlined destroy of TaskPriority?((uint64_t)a1 + v7, &demangling cache variable for type metadata for Environment<ColorScheme>.Content);
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ColorScheme>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = type metadata accessor for ColorScheme();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v8, v9, v11);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
    }
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    outlined destroy of TaskPriority?((uint64_t)a1 + v12, &demangling cache variable for type metadata for Environment<ColorSchemeContrast>.Content);
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ColorSchemeContrast>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v16 = type metadata accessor for ColorSchemeContrast();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v13, v14, v16);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
    }
    uint64_t v17 = a3[7];
    uint64_t v18 = (char *)a1 + v17;
    uint64_t v19 = (char *)a2 + v17;
    outlined destroy of TaskPriority?((uint64_t)a1 + v17, (uint64_t *)&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v21 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v18, v19, v21);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for Reactions.StackView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100426EF4);
}

uint64_t sub_100426EF4(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ColorScheme>);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a2)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a3[5];
LABEL_9:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    return v13(a1 + v11, a2, v9);
  }
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ColorSchemeContrast>);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a3[6];
    goto LABEL_9;
  }
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + a3[7];

  return v15(v17, a2, v16);
}

uint64_t storeEnumTagSinglePayload for Reactions.StackView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10042708C);
}

uint64_t sub_10042708C(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
    return result;
  }
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ColorScheme>);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[5];
LABEL_7:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v13(v5 + v11, a2, a2, v9);
  }
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ColorSchemeContrast>);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[6];
    goto LABEL_7;
  }
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  uint64_t v16 = v14;
  uint64_t v17 = v5 + a4[7];

  return v15(v17, a2, a2, v16);
}

void type metadata completion function for Reactions.StackView()
{
  type metadata accessor for Environment<ColorScheme>.Content(319, &lazy cache variable for type metadata for Environment<ColorScheme>.Content, (void (*)(uint64_t))&type metadata accessor for ColorScheme);
  if (v0 <= 0x3F)
  {
    type metadata accessor for Environment<ColorScheme>.Content(319, &lazy cache variable for type metadata for Environment<ColorSchemeContrast>.Content, (void (*)(uint64_t))&type metadata accessor for ColorSchemeContrast);
    if (v1 <= 0x3F)
    {
      type metadata accessor for Environment<ColorScheme>.Content(319, &lazy cache variable for type metadata for Environment<DynamicTypeSize>.Content, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void type metadata accessor for Environment<ColorScheme>.Content(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Environment.Content();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t ObjC metadata update function for Reactions.StackView.Model()
{
  return type metadata accessor for Reactions.StackView.Model(0);
}

void type metadata completion function for Reactions.StackView.Model()
{
  type metadata accessor for Published<MPCPlayerResponse?>(319, &lazy cache variable for type metadata for Published<String?>, &_sSSSgMD_1);
  if (v0 <= 0x3F)
  {
    type metadata accessor for Published<String>(319, &_s7Combine9PublishedVySiGML_0);
    if (v1 <= 0x3F)
    {
      type metadata accessor for Published<MPCPlayerResponse?>(319, &lazy cache variable for type metadata for Published<UIImage?>, &demangling cache variable for type metadata for UIImage?);
      if (v2 <= 0x3F)
      {
        type metadata accessor for Published<String>(319, (unint64_t *)&_s7Combine9PublishedVySbGML_0);
        if (v3 <= 0x3F) {
          swift_updateClassMetadata2();
        }
      }
    }
  }
}

ValueMetadata *type metadata accessor for Reactions.StackView.Specs()
{
  return &type metadata for Reactions.StackView.Specs;
}

uint64_t sub_10042756C()
{
  return lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(Spacer, ForEach<ReversedCollection<Range<Int>>, Int, ModifiedContent<ZStack<TupleView<(ModifiedContent<ModifiedContent<Color, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<_ImplicitShapeStyle>, Circle>>, ModifiedContent<ModifiedContent<Color, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<AnyShapeStyle>, Circle>>)>>, _TraitWritingModifier<TransitionTraitKey>>>, ZStack<TupleView<(ModifiedContent<ModifiedContent<Color, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<_ImplicitShapeStyle>, Circle>>, ModifiedContent<ModifiedContent<ModifiedContent<Group<_ConditionalContent<ModifiedContent<_AnimationView<Text>, _TraitWritingModifier<TransitionTraitKey>>, ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Font?>>>>, _EnvironmentKeyWritingModifier<Font?>>, _FrameLayout>, _InsettableB(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(Spacer, ForEach<ReversedCollection<Range<Int>>, Int, ModifiedContent<ZStack<TupleView<(ModifiedContent<ModifiedContent<Color, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<_ImplicitShapeStyle>, Circle>>, ModifiedContent<ModifiedContent<Color, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<AnyShapeStyle>, Circle>>)>>, _TraitWritingModifier<TransitionTraitKey>>>, ZStack<TupleView<(ModifiedContent<ModifiedContent<Color, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<_ImplicitShapeStyle>, Circle>>, ModifiedContent<ModifiedContent<ModifiedContent<Group<_ConditionalContent<ModifiedContent<_AnimationView<Text>, _TraitWritingModifier<TransitionTraitKey>>, ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Font?>>>>, _EnvironmentKeyWritingModifier<Font?>>, _FrameLayout>, _Inset, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(Spacer, ForEach<ReversedCollection<Range<Int>>, Int, ModifiedContent<ZStack<TupleView<(ModifiedContent<ModifiedContent<Color, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<_ImplicitShapeStyle>, Circle>>, ModifiedContent<ModifiedContent<Color, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<AnyShapeStyle>, Circle>>)>>, _TraitWritingModifier<TransitionTraitKey>>>, ZStack<TupleView<(ModifiedContent<ModifiedContent<Color, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<_ImplicitShapeStyle>, Circle>>, ModifiedContent<ModifiedContent<ModifiedContent<Group<_ConditionalContent<ModifiedContent<_AnimationView<Text>, _TraitWritingModifier<TransitionTraitKey>>, ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Font?>>>>, _EnvironmentKeyWritingModifier<Font?>>, _FrameLayout>, _Insettabl, (void (*)(void))lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<HStack<TupleView<(Spacer, ForEach<ReversedCollection<Range<Int>>, Int, ModifiedContent<ZStack<TupleView<(ModifiedContent<ModifiedContent<Color, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<_ImplicitShapeStyle>, Circle>>, ModifiedContent<ModifiedContent<Color, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<AnyShapeStyle>, Circle>>)>>, _TraitWritingModifier<TransitionTraitKey>>>, ZStack<TupleView<(ModifiedContent<ModifiedContent<Color, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<_ImplicitShapeStyle>, Circle>>, ModifiedContent<ModifiedContent<ModifiedContent<Group<_ConditionalContent<ModifiedContent<_AnimationView<Text>, _TraitWritingModifier<TransitionTraitKey>>, ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Font?>>>>, _EnvironmentKeyWritingModifier<Font?>>, _FrameLayout>, _InsettableBackgroundShapeMo);
}

uint64_t outlined init with copy of Reactions.StackView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Reactions.StackView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100427760()
{
  unint64_t v1 = (int *)type metadata accessor for Reactions.StackView(0);
  unint64_t v2 = (*(unsigned __int8 *)(*((void *)v1 - 1) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v14 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v3 = type metadata accessor for BlendMode();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v0 + v2;
  swift_release();
  unint64_t v7 = v0 + v2 + v1[5];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ColorScheme>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = type metadata accessor for ColorScheme();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  uint64_t v9 = v6 + v1[6];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ColorSchemeContrast>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = type metadata accessor for ColorSchemeContrast();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  }
  else
  {
    swift_release();
  }
  uint64_t v11 = v6 + v1[7];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  }
  else
  {
    swift_release();
  }
  (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + ((v2 + v14 + v5) & ~v5), v3);

  return swift_deallocObject();
}

uint64_t outlined init with take of Reactions.StackView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Reactions.StackView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t partial apply for closure #1 in closure #1 in Reactions.StackView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for Reactions.StackView(0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  uint64_t v6 = *(void *)(type metadata accessor for BlendMode() - 8);
  unint64_t v7 = (char *)(v1 + ((v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)));

  return closure #1 in closure #1 in Reactions.StackView.body.getter(v1 + v4, v7, a1);
}

unint64_t lazy protocol witness table accessor for type ReversedCollection<Range<Int>> and conformance <> ReversedCollection<A>()
{
  unint64_t result = lazy protocol witness table cache variable for type ReversedCollection<Range<Int>> and conformance <> ReversedCollection<A>;
  if (!lazy protocol witness table cache variable for type ReversedCollection<Range<Int>> and conformance <> ReversedCollection<A>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ReversedCollection<Range<Int>>);
    lazy protocol witness table accessor for type Range<Int> and conformance <> Range<A>();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ReversedCollection<Range<Int>> and conformance <> ReversedCollection<A>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ZStack<TupleView<(ModifiedContent<ModifiedContent<Color, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<_ImplicitShapeStyle>, Circle>>, ModifiedContent<ModifiedContent<Color, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<AnyShapeStyle>, Circle>>)>>, _TraitWritingModifier<TransitionTraitKey>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ZStack<TupleView<(ModifiedContent<ModifiedContent<Color, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<_ImplicitShapeStyle>, Circle>>, ModifiedContent<ModifiedContent<Color, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<AnyShapeStyle>, Circle>>)>>, _TraitWritingModifier<TransitionTraitKey>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ZStack<TupleView<(ModifiedContent<ModifiedContent<Color, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<_ImplicitShapeStyle>, Circle>>, ModifiedContent<ModifiedContent<Color, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<AnyShapeStyle>, Circle>>)>>, _TraitWritingModifier<TransitionTraitKey>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ZStack<TupleView<(ModifiedContent<ModifiedContent<Color, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<_ImplicitShapeStyle>, Circle>>, ModifiedContent<ModifiedContent<Color, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<AnyShapeStyle>, Circle>>)>>, _TraitWritingModifier<TransitionTraitKey>>);
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type ZStack<TupleView<(ModifiedContent<ModifiedContent<Color, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<_ImplicitShapeStyle>, Circle>>, ModifiedContent<ModifiedContent<Color, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<AnyShapeStyle>, Circle>>)>> and conformance ZStack<A>, &demangling cache variable for type metadata for ZStack<TupleView<(ModifiedContent<ModifiedContent<Color, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<_ImplicitShapeStyle>, Circle>>, ModifiedContent<ModifiedContent<Color, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<AnyShapeStyle>, Circle>>)>>);
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type _TraitWritingModifier<TransitionTraitKey> and conformance _TraitWritingModifier<A>, &demangling cache variable for type metadata for _TraitWritingModifier<TransitionTraitKey>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ZStack<TupleView<(ModifiedContent<ModifiedContent<Color, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<_ImplicitShapeStyle>, Circle>>, ModifiedContent<ModifiedContent<Color, _FrameLayout>, _InsettableBackgroundShapeModifier<_BlendModeShapeStyle<AnyShapeStyle>, Circle>>)>>, _TraitWritingModifier<TransitionTraitKey>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t outlined copy of _ConditionalContent<ModifiedContent<_AnimationView<Text>, _TraitWritingModifier<TransitionTraitKey>>, ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Font?>>>.Storage(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if (a7)
  {
    swift_retain();
    swift_retain();
    swift_retain();
    return swift_retain();
  }
  else
  {
    outlined copy of Text.Storage(a1, a2, a3 & 1);
    swift_retain();
    swift_retain();
    return swift_bridgeObjectRetain();
  }
}

uint64_t outlined consume of _ConditionalContent<ModifiedContent<_AnimationView<Text>, _TraitWritingModifier<TransitionTraitKey>>, ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Font?>>>.Storage(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if (a7)
  {
    swift_release();
    swift_release();
    swift_release();
  }
  else
  {
    outlined consume of Text.Storage(a1, a2, a3 & 1);
    swift_release();
    swift_bridgeObjectRelease();
  }

  return swift_release();
}

double _s7SwiftUI15ModifiedContentVyACyACyACyACyACyAA5ImageVAA18_AspectRatioLayoutVGAA20_MaskAlignmentEffectVyAA6CircleVGG09MusicCoreB018BorderViewModifier33_0FA4743D1401B6C1F29D2373CEDF9367LLVGAA013_TraitWritingQ0VyAA06ZIndexY3KeyVGGAUyAA010TransitionY3KeyVGGAA06_FrameH0VGSgWOi0_(uint64_t a1)
{
  *(void *)(a1 + 144) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  return result;
}

uint64_t outlined copy of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _MaskAlignmentEffect<Circle>>, BorderViewModifier>, _TraitWritingModifier<ZIndexTraitKey>>, _TraitWritingModifier<TransitionTraitKey>>, _FrameLayout>?(uint64_t result)
{
  if (result)
  {
    swift_retain();
    swift_retain();
    return swift_retain();
  }
  return result;
}

void *outlined retain of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _MaskAlignmentEffect<Circle>>, BorderViewModifier>, _TraitWritingModifier<ZIndexTraitKey>>, _TraitWritingModifier<TransitionTraitKey>>, _FrameLayout>?(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  return a1;
}

uint64_t outlined consume of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _AspectRatioLayout>, _MaskAlignmentEffect<Circle>>, BorderViewModifier>, _TraitWritingModifier<ZIndexTraitKey>>, _TraitWritingModifier<TransitionTraitKey>>, _FrameLayout>?(uint64_t result)
{
  if (result)
  {
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t lazy protocol witness table accessor for type Reactions.StackView.Model and conformance Reactions.StackView.Model(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<_AnimationView<Text>, _TraitWritingModifier<TransitionTraitKey>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<_AnimationView<Text>, _TraitWritingModifier<TransitionTraitKey>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<_AnimationView<Text>, _TraitWritingModifier<TransitionTraitKey>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<_AnimationView<Text>, _TraitWritingModifier<TransitionTraitKey>>);
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type _AnimationView<Text> and conformance _AnimationView<A>, &demangling cache variable for type metadata for _AnimationView<Text>);
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type _TraitWritingModifier<TransitionTraitKey> and conformance _TraitWritingModifier<A>, &demangling cache variable for type metadata for _TraitWritingModifier<TransitionTraitKey>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<_AnimationView<Text>, _TraitWritingModifier<TransitionTraitKey>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Font?>>);
    lazy protocol witness table accessor for type ModifiedContent<Image, _ForegroundStyleModifier<Color>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>((unint64_t *)&_s7SwiftUI30_EnvironmentKeyWritingModifierVyAA4FontVSgGACyxGAA04ViewF0AAWL_0, &_s7SwiftUI30_EnvironmentKeyWritingModifierVyAA4FontVSgGMD_0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<Color>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<Image, _ForegroundStyleModifier<Color>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<Image, _ForegroundStyleModifier<Color>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<Image, _ForegroundStyleModifier<Color>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<Image, _ForegroundStyleModifier<Color>>);
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type _ForegroundStyleModifier<Color> and conformance _ForegroundStyleModifier<A>, &demangling cache variable for type metadata for _ForegroundStyleModifier<Color>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<Image, _ForegroundStyleModifier<Color>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

id SliderView.PanGestureRecognizer.init(target:action:)(uint64_t a1, uint64_t a2)
{
  _sypSgWOc_0(a1, (uint64_t)v14);
  uint64_t v5 = v15;
  if (v15)
  {
    __swift_project_boxed_opaque_existential_0Tm(v14, v15);
    uint64_t v6 = *(void *)(v5 - 8);
    __chkstk_darwin();
    uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v6 + 16))(v8);
    uint64_t v9 = _bridgeAnythingToObjectiveC<A>(_:)();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v14);
  }
  else
  {
    uint64_t v9 = 0;
  }
  uint64_t v10 = (objc_class *)type metadata accessor for SliderView.PanGestureRecognizer();
  v13.receiver = v2;
  v13.super_class = v10;
  id v11 = objc_msgSendSuper2(&v13, "initWithTarget:action:", v9, a2);
  swift_unknownObjectRelease();
  _sypSgWOh_1(a1);
  return v11;
}

id SliderView.PanGestureRecognizer.__deallocating_deinit()
{
  return SliderView.PanGestureRecognizer.__deallocating_deinit(0, type metadata accessor for SliderView.PanGestureRecognizer);
}

void one-time initialization function for barHeight()
{
  static SliderView.Specs.barHeight = Int.seconds.getter(7);
}

uint64_t *SliderView.Specs.barHeight.unsafeMutableAddressor()
{
  if (one-time initialization token for barHeight != -1) {
    swift_once();
  }
  return &static SliderView.Specs.barHeight;
}

double static SliderView.Specs.barHeight.getter()
{
  return static Artwork.Size.musicVideoAspectRatio.getter(&one-time initialization token for barHeight, (uint64_t)&static SliderView.Specs.barHeight);
}

void one-time initialization function for expandedBarHeight()
{
  static SliderView.Specs.expandedBarHeight = Int.seconds.getter(16);
}

uint64_t *SliderView.Specs.expandedBarHeight.unsafeMutableAddressor()
{
  if (one-time initialization token for expandedBarHeight != -1) {
    swift_once();
  }
  return &static SliderView.Specs.expandedBarHeight;
}

double static SliderView.Specs.expandedBarHeight.getter()
{
  return static Artwork.Size.musicVideoAspectRatio.getter(&one-time initialization token for expandedBarHeight, (uint64_t)&static SliderView.Specs.expandedBarHeight);
}

CGFloat one-time initialization function for expandedTransform()
{
  CGAffineTransformMakeScale(&v1, 1.05, 1.05);
  CGFloat result = v1.a;
  *(CGAffineTransform *)static SliderView.Specs.expandedTransform = v1;
  return result;
}

char *SliderView.Specs.expandedTransform.unsafeMutableAddressor()
{
  if (one-time initialization token for expandedTransform != -1) {
    swift_once();
  }
  return static SliderView.Specs.expandedTransform;
}

double static SliderView.Specs.expandedTransform.getter@<D0>(_OWORD *a1@<X8>)
{
  if (one-time initialization token for expandedTransform != -1) {
    swift_once();
  }
  long long v2 = *(_OWORD *)&static SliderView.Specs.expandedTransform[16];
  *a1 = *(_OWORD *)static SliderView.Specs.expandedTransform;
  a1[1] = v2;
  double result = *(double *)&static SliderView.Specs.expandedTransform[32];
  a1[2] = *(_OWORD *)&static SliderView.Specs.expandedTransform[32];
  return result;
}

void one-time initialization function for stretchLimit()
{
  static SliderView.Specs.stretchLimit = Int.seconds.getter(12);
}

uint64_t *SliderView.Specs.stretchLimit.unsafeMutableAddressor()
{
  if (one-time initialization token for stretchLimit != -1) {
    swift_once();
  }
  return &static SliderView.Specs.stretchLimit;
}

double static SliderView.Specs.stretchLimit.getter()
{
  return static Artwork.Size.musicVideoAspectRatio.getter(&one-time initialization token for stretchLimit, (uint64_t)&static SliderView.Specs.stretchLimit);
}

void one-time initialization function for escapeHeight()
{
  static SliderView.Specs.escapeHeight = Int.seconds.getter(180);
}

uint64_t *SliderView.Specs.escapeHeight.unsafeMutableAddressor()
{
  if (one-time initialization token for escapeHeight != -1) {
    swift_once();
  }
  return &static SliderView.Specs.escapeHeight;
}

double static SliderView.Specs.escapeHeight.getter()
{
  return static Artwork.Size.musicVideoAspectRatio.getter(&one-time initialization token for escapeHeight, (uint64_t)&static SliderView.Specs.escapeHeight);
}

id SliderView.panRecognizer.getter()
{
  uint64_t v1 = OBJC_IVAR____TtC11MusicCoreUI10SliderView____lazy_storage___panRecognizer;
  long long v2 = *(void **)(v0 + OBJC_IVAR____TtC11MusicCoreUI10SliderView____lazy_storage___panRecognizer);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC11MusicCoreUI10SliderView____lazy_storage___panRecognizer);
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)type metadata accessor for SliderView.PanGestureRecognizer()) initWithTarget:v0 action:"panGestureRecognized:"];
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    long long v2 = 0;
  }
  id v6 = v2;
  return v3;
}

uint64_t type metadata accessor for SliderView.PanGestureRecognizer()
{
  return self;
}

void SliderView.panRecognizer.setter(uint64_t a1)
{
  long long v2 = *(void **)(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView____lazy_storage___panRecognizer);
  *(void *)(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView____lazy_storage___panRecognizer) = a1;
}

void (*SliderView.panRecognizer.modify(id *a1))(uint64_t *a1)
{
  a1[1] = v1;
  *a1 = SliderView.panRecognizer.getter();
  return SliderView.panRecognizer.modify;
}

void SliderView.panRecognizer.modify(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v1 = a1[1];
  id v3 = *(void **)(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView____lazy_storage___panRecognizer);
  *(void *)(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView____lazy_storage___panRecognizer) = v2;
}

id SliderView.trackLayoutGuide.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackLayoutGuide);
  swift_beginAccess();
  uint64_t v2 = *v1;

  return v2;
}

void SliderView.trackLayoutGuide.setter(void *a1)
{
  id v3 = (void **)(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackLayoutGuide);
  swift_beginAccess();
  id v4 = *v3;
  *id v3 = a1;
}

uint64_t (*SliderView.trackLayoutGuide.modify())()
{
  return ArtworkVideoReportingController.isEnabled.modify;
}

id SliderView.elapsedTrackColor.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrackColor);
  swift_beginAccess();
  uint64_t v2 = *v1;

  return v2;
}

void SliderView.elapsedTrackColor.setter(void *a1)
{
  id v3 = (void *)(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrackColor);
  swift_beginAccess();
  id v4 = (void *)*v3;
  *id v3 = a1;
  id v5 = a1;

  id v6 = *(void **)(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrack);
  uint64_t v7 = (unsigned char *)(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking);
  swift_beginAccess();
  if (*v7 == 1)
  {
    id v3 = (void *)(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackingColor);
    swift_beginAccess();
  }
  [v6 setBackgroundColor:*v3];
  uint64_t v8 = *(void **)(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrack);
  uint64_t v9 = (void *)(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrackColor);
  swift_beginAccess();
  [v8 setBackgroundColor:*v9];
}

void (*SliderView.elapsedTrackColor.modify(void *a1))(void **a1, char a2)
{
  id v3 = malloc(0x58uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrackColor;
  v3[9] = v1;
  v3[10] = v4;
  swift_beginAccess();
  return SliderView.elapsedTrackColor.modify;
}

void SliderView.elapsedTrackColor.modify(void **a1, char a2)
{
  id v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    uint64_t v4 = v3[9];
    id v5 = *(void **)(v4 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrack);
    id v6 = (unsigned char *)(v4 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking);
    swift_beginAccess();
    if (*v6)
    {
      uint64_t v7 = (void *)(v3[9] + OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackingColor);
      swift_beginAccess();
      uint64_t v8 = v3[9];
    }
    else
    {
      uint64_t v8 = v3[9];
      uint64_t v7 = (void *)(v8 + v3[10]);
    }
    [v5 setBackgroundColor:*v7];
    uint64_t v9 = *(void **)(v8 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrack);
    uint64_t v10 = (void *)(v8 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrackColor);
    swift_beginAccess();
    [v9 setBackgroundColor:*v10];
  }

  free(v3);
}

id SliderView.remainingTrackColor.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrackColor);
  swift_beginAccess();
  uint64_t v2 = *v1;

  return v2;
}

void SliderView.remainingTrackColor.setter(void *a1)
{
  id v3 = (void *)(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrackColor);
  swift_beginAccess();
  uint64_t v4 = (void *)*v3;
  *id v3 = a1;
  id v5 = a1;

  id v6 = *(void **)(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrack);
  uint64_t v7 = (unsigned char *)(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking);
  swift_beginAccess();
  if (*v7 == 1) {
    uint64_t v8 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackingColor;
  }
  else {
    uint64_t v8 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrackColor;
  }
  uint64_t v9 = (void *)(v1 + v8);
  swift_beginAccess();
  [v6 setBackgroundColor:*v9];
  [*(id *)(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrack) setBackgroundColor:*v3];
}

void (*SliderView.remainingTrackColor.modify(void *a1))(void **a1, char a2)
{
  id v3 = malloc(0x58uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrackColor;
  v3[9] = v1;
  v3[10] = v4;
  swift_beginAccess();
  return SliderView.remainingTrackColor.modify;
}

void SliderView.remainingTrackColor.modify(void **a1, char a2)
{
  id v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    uint64_t v4 = v3[9];
    id v5 = *(void **)(v4 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrack);
    id v6 = (unsigned char *)(v4 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking);
    swift_beginAccess();
    uint64_t v7 = &OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackingColor;
    if (!*v6) {
      uint64_t v7 = &OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrackColor;
    }
    uint64_t v9 = v3[9];
    uint64_t v8 = v3[10];
    uint64_t v10 = (void *)(v9 + *v7);
    swift_beginAccess();
    [v5 setBackgroundColor:*v10];
    [*(id *)(v9 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrack) setBackgroundColor:*(void *)(v9 + v8)];
  }

  free(v3);
}

id SliderView.trackingColor.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackingColor);
  swift_beginAccess();
  uint64_t v2 = *v1;

  return v2;
}

void SliderView.trackingColor.setter(void *a1)
{
  id v3 = (void *)(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackingColor);
  swift_beginAccess();
  uint64_t v4 = (void *)*v3;
  *id v3 = a1;
  id v5 = a1;

  id v6 = *(void **)(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrack);
  uint64_t v7 = (unsigned char *)(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking);
  swift_beginAccess();
  if ((*v7 & 1) == 0)
  {
    id v3 = (void *)(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrackColor);
    swift_beginAccess();
  }
  [v6 setBackgroundColor:*v3];
  uint64_t v8 = *(void **)(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrack);
  uint64_t v9 = (void *)(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrackColor);
  swift_beginAccess();
  [v8 setBackgroundColor:*v9];
}

void (*SliderView.trackingColor.modify(void *a1))(void **a1, char a2)
{
  id v3 = malloc(0x58uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackingColor;
  v3[9] = v1;
  v3[10] = v4;
  swift_beginAccess();
  return SliderView.trackingColor.modify;
}

void SliderView.trackingColor.modify(void **a1, char a2)
{
  id v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    uint64_t v4 = v3[9];
    id v5 = *(void **)(v4 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrack);
    id v6 = (unsigned char *)(v4 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking);
    swift_beginAccess();
    if (*v6 == 1)
    {
      uint64_t v7 = v3[9];
      uint64_t v8 = (void *)(v7 + v3[10]);
    }
    else
    {
      uint64_t v8 = (void *)(v3[9] + OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrackColor);
      swift_beginAccess();
      uint64_t v7 = v3[9];
    }
    [v5 setBackgroundColor:*v8];
    uint64_t v9 = *(void **)(v7 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrack);
    uint64_t v10 = (void *)(v7 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrackColor);
    swift_beginAccess();
    [v9 setBackgroundColor:*v10];
  }

  free(v3);
}

double SliderView.value.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_value;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t SliderView.isEnabled.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_isEnabled);
  swift_beginAccess();
  return *v1;
}

void SliderView.isEnabled.setter(unsigned __int8 a1)
{
  id v3 = (unsigned __int8 *)(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_isEnabled);
  swift_beginAccess();
  *id v3 = a1;
  id v4 = SliderView.panRecognizer.getter();
  [v4 setEnabled:*v3];
}

void (*SliderView.isEnabled.modify(void *a1))(void **a1, char a2)
{
  id v3 = malloc(0x28uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_isEnabled;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess();
  return SliderView.isEnabled.modify;
}

void SliderView.isEnabled.modify(void **a1, char a2)
{
  id v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    uint64_t v4 = v3[3];
    uint64_t v5 = v3[4];
    id v6 = SliderView.panRecognizer.getter();
    [v6 setEnabled:*(unsigned __int8 *)(v4 + v5)];
  }

  free(v3);
}

uint64_t SliderView.isTracking.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking);
  swift_beginAccess();
  return *v1;
}

uint64_t SliderView.valueChangedHandler.getter()
{
  return SliderView.valueChangedHandler.getter(&OBJC_IVAR____TtC11MusicCoreUI10SliderView_valueChangedHandler, (void (*)(void, void))outlined copy of (@escaping @callee_guaranteed () -> ())?);
}

uint64_t SliderView.valueChangedHandler.setter(uint64_t a1, uint64_t a2)
{
  return SliderView.valueChangedHandler.setter(a1, a2, &OBJC_IVAR____TtC11MusicCoreUI10SliderView_valueChangedHandler, (uint64_t (*)(uint64_t, uint64_t))outlined consume of (@escaping @callee_guaranteed () -> ())?);
}

uint64_t (*SliderView.valueChangedHandler.modify())()
{
  return ArtworkVideoReportingController.isEnabled.modify;
}

uint64_t SliderView.cancelledHandler.getter()
{
  return SliderView.valueChangedHandler.getter(&OBJC_IVAR____TtC11MusicCoreUI10SliderView_cancelledHandler, (void (*)(void, void))outlined copy of (@escaping @callee_guaranteed () -> ())?);
}

uint64_t SliderView.valueChangedHandler.getter(void *a1, void (*a2)(void, void))
{
  uint64_t v4 = (void *)(v2 + *a1);
  swift_beginAccess();
  uint64_t v5 = *v4;
  a2(*v4, v4[1]);
  return v5;
}

uint64_t SliderView.cancelledHandler.setter(uint64_t a1, uint64_t a2)
{
  return SliderView.valueChangedHandler.setter(a1, a2, &OBJC_IVAR____TtC11MusicCoreUI10SliderView_cancelledHandler, (uint64_t (*)(uint64_t, uint64_t))outlined consume of (@escaping @callee_guaranteed () -> ())?);
}

uint64_t SliderView.valueChangedHandler.setter(uint64_t a1, uint64_t a2, void *a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v8 = (uint64_t *)(v4 + *a3);
  swift_beginAccess();
  uint64_t v9 = *v8;
  uint64_t v10 = v8[1];
  *uint64_t v8 = a1;
  v8[1] = a2;
  return a4(v9, v10);
}

uint64_t (*SliderView.cancelledHandler.modify())()
{
  return ArtworkVideoReportingController.videoArtworkContextProviding.modify;
}

id SliderView.semanticContentAttribute.getter()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SliderView();
  return objc_msgSendSuper2(&v2, "semanticContentAttribute");
}

uint64_t type metadata accessor for SliderView()
{
  return self;
}

id SliderView.semanticContentAttribute.setter(uint64_t a1)
{
  v4.receiver = v1;
  v4.super_class = (Class)type metadata accessor for SliderView();
  objc_msgSendSuper2(&v4, "setSemanticContentAttribute:", a1);
  return objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_stackView], "setSemanticContentAttribute:", objc_msgSend(v1, "semanticContentAttribute"));
}

uint64_t SliderView.init(frame:)(double a1, double a2, double a3, double a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = type metadata accessor for UIView.Corner.Radius();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin();
  objc_super v13 = (double *)((char *)&v93 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIView.Corner?);
  __chkstk_darwin();
  uint64_t v15 = (char *)&v93 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_stackView;
  id v17 = objc_allocWithZone((Class)UIStackView);
  uint64_t v18 = v5;
  id v19 = [v17 init];
  id v20 = UIView.forAutolayout.getter();

  *(void *)&v5[v16] = v20;
  uint64_t v21 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrack;
  id v22 = [objc_allocWithZone((Class)UIView) init];
  id v23 = UIView.forAutolayout.getter();

  *(void *)&v18[v21] = v23;
  uint64_t v24 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrack;
  id v25 = [objc_allocWithZone((Class)UIView) init];
  id v26 = UIView.forAutolayout.getter();

  *(void *)&v18[v24] = v26;
  *(void *)&v18[OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrackWidthConstraint] = 0;
  *(void *)&v18[OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackHeightConstraint] = 0;
  uint64_t v27 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_feedbackGenerator;
  *(void *)&v18[v27] = [objc_allocWithZone((Class)UIImpactFeedbackGenerator) initWithStyle:0];
  uint64_t v28 = &v18[OBJC_IVAR____TtC11MusicCoreUI10SliderView_startingWidth];
  *(void *)uint64_t v28 = 0;
  v28[8] = 1;
  uint64_t v29 = &v18[OBJC_IVAR____TtC11MusicCoreUI10SliderView_lastSeenBounds];
  *(_OWORD *)uint64_t v29 = 0u;
  *((_OWORD *)v29 + 1) = 0u;
  *(void *)&v18[OBJC_IVAR____TtC11MusicCoreUI10SliderView____lazy_storage___panRecognizer] = 0;
  uint64_t v30 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackLayoutGuide;
  *(void *)&v18[v30] = [objc_allocWithZone((Class)UILayoutGuide) init];
  uint64_t v31 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrackColor;
  uint64_t v32 = self;
  *(void *)&v18[v31] = [v32 whiteColor];
  uint64_t v33 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrackColor;
  *(void *)&v18[v33] = [v32 systemFillColor];
  uint64_t v34 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackingColor;
  if (one-time initialization token for normal != -1) {
    swift_once();
  }
  long long v35 = (void *)static UIColor.MusicTint.normal;
  *(void *)&v18[v34] = static UIColor.MusicTint.normal;
  uint64_t v36 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_value;
  *(double *)&v18[v36] = Int.seconds.getter(0);
  v18[OBJC_IVAR____TtC11MusicCoreUI10SliderView_isEnabled] = 1;
  v18[OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking] = 0;
  char v37 = &v18[OBJC_IVAR____TtC11MusicCoreUI10SliderView_valueChangedHandler];
  *(void *)char v37 = 0;
  *((void *)v37 + 1) = 0;
  uint64_t v38 = &v18[OBJC_IVAR____TtC11MusicCoreUI10SliderView_cancelledHandler];
  *(void *)uint64_t v38 = 0;
  *((void *)v38 + 1) = 0;
  id v39 = v35;

  uint64_t v40 = (objc_class *)type metadata accessor for SliderView();
  v96.receiver = v18;
  v96.super_class = v40;
  id v41 = objc_msgSendSuper2(&v96, "initWithFrame:", a1, a2, a3, a4);
  id v42 = SliderView.panRecognizer.getter();
  [v42 _setRequiresSystemGesturesToFail:0];

  uint64_t v43 = (char *)v41;
  id v44 = SliderView.panRecognizer.getter();
  [v43 addGestureRecognizer:v44];

  uint64_t v45 = (id *)&v43[OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackLayoutGuide];
  swift_beginAccess();
  [v43 addLayoutGuide:*v45];
  [v43 setExclusiveTouch:1];
  uint64_t v46 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_stackView;
  uint64_t v47 = *(void **)&v43[OBJC_IVAR____TtC11MusicCoreUI10SliderView_stackView];
  uint64_t v48 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrack;
  [v47 addArrangedSubview:*(void *)&v43[OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrack]];
  [v47 addArrangedSubview:*(void *)&v43[OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrack]];
  [v47 setAxis:0];
  if (one-time initialization token for barHeight != -1) {
    swift_once();
  }
  *objc_super v13 = *(double *)&static SliderView.Specs.barHeight * 0.5;
  *((unsigned char *)v13 + 8) = 1;
  (*(void (**)(double *, void, uint64_t))(v11 + 104))(v13, enum case for UIView.Corner.Radius.value(_:), v10);
  static CACornerMask.all.getter();
  UIView.Corner.init(radius:mask:)();
  uint64_t v49 = type metadata accessor for UIView.Corner();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(v15, 0, 1, v49);
  UIView.corner.setter();
  id v50 = [*(id *)&v43[v46] layer];
  [v50 setMasksToBounds:1];

  [v43 addSubview:*(void *)&v43[v46]];
  id v51 = [*(id *)&v43[v48] widthAnchor];
  id v52 = [v51 constraintEqualToConstant:0.0];

  uint64_t v53 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrackWidthConstraint;
  uint64_t v54 = *(void **)&v43[OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrackWidthConstraint];
  *(void *)&v43[OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrackWidthConstraint] = v52;

  id v55 = [*(id *)&v43[v46] heightAnchor];
  id v56 = [v55 constraintEqualToConstant:*(double *)&static SliderView.Specs.barHeight];

  uint64_t v57 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackHeightConstraint;
  uint64_t v58 = *(void **)&v43[OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackHeightConstraint];
  *(void *)&v43[OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackHeightConstraint] = v56;

  __swift_instantiateConcreteTypeFromMangledName(&_ss23_ContiguousArrayStorageCyyXlGMD_1);
  uint64_t result = swift_allocObject();
  *(_OWORD *)(result + 16) = xmmword_1004A3D40;
  uint64_t v60 = *(void **)&v43[v53];
  if (v60)
  {
    uint64_t v61 = (void *)result;
    *(void *)(result + 32) = v60;
    char v62 = *(void **)&v43[v57];
    if (v62)
    {
      id v94 = self;
      v61[5] = v62;
      uint64_t v63 = *(void **)&v43[v46];
      id v64 = v60;
      id v65 = v62;
      id v66 = [v63 leadingAnchor];
      id v67 = [v43 leadingAnchor];
      id v68 = [v66 constraintEqualToAnchor:v67];

      v61[6] = v68;
      id v69 = [*(id *)&v43[v46] trailingAnchor];
      id v70 = [v43 trailingAnchor];
      id v71 = [v69 constraintEqualToAnchor:v70];

      v61[7] = v71;
      id v72 = [*(id *)&v43[v46] topAnchor];
      id v73 = [v43 topAnchor];
      id v74 = [v72 constraintEqualToAnchor:v73];

      v61[8] = v74;
      id v75 = [*(id *)&v43[v46] bottomAnchor];
      id v76 = [v43 bottomAnchor];
      id v77 = [v75 constraintEqualToAnchor:v76];

      v61[9] = v77;
      id v78 = [*(id *)&v43[v46] centerYAnchor];
      id v79 = [v43 centerYAnchor];
      id v80 = [v78 constraintEqualToAnchor:v79];

      v61[10] = v80;
      id v81 = [*v45 leadingAnchor];
      id v82 = [v43 leadingAnchor];
      id v83 = [v81 constraintEqualToAnchor:v82];

      _OWORD v61[11] = v83;
      id v84 = [*v45 trailingAnchor];
      id v85 = [v43 trailingAnchor];
      id v86 = [v84 constraintEqualToAnchor:v85];

      v61[12] = v86;
      id v87 = [*v45 centerYAnchor];
      id v88 = [v43 centerYAnchor];
      id v89 = [v87 constraintEqualToAnchor:v88];

      v61[13] = v89;
      id v90 = [*v45 heightAnchor];
      id v91 = [v90 constraintEqualToConstant:*(double *)&static SliderView.Specs.barHeight];

      v61[14] = v91;
      uint64_t v95 = v61;
      specialized Array._endMutation()();
      type metadata accessor for UIMenu(0, &_sSo18NSLayoutConstraintCML_0);
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v94 activateConstraints:isa];

      return (uint64_t)v43;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

Swift::Void __swiftcall SliderView.layoutSubviews()()
{
  v10.receiver = v0;
  v10.super_class = (Class)type metadata accessor for SliderView();
  objc_msgSendSuper2(&v10, "layoutSubviews");
  [v0 bounds];
  uint64_t v1 = &v0[OBJC_IVAR____TtC11MusicCoreUI10SliderView_lastSeenBounds];
  if (!CGRectEqualToRect(v11, *(CGRect *)&v0[OBJC_IVAR____TtC11MusicCoreUI10SliderView_lastSeenBounds]))
  {
    objc_super v2 = *(void **)&v0[OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrackWidthConstraint];
    if (v2)
    {
      id v3 = v2;
      [v0 bounds];
      double Width = CGRectGetWidth(v12);
      uint64_t v5 = (double *)&v0[OBJC_IVAR____TtC11MusicCoreUI10SliderView_value];
      swift_beginAccess();
      [v3 setConstant:Width * *v5];

      [v0 bounds];
      *(void *)uint64_t v1 = v6;
      *((void *)v1 + 1) = v7;
      *((void *)v1 + 2) = v8;
      *((void *)v1 + 3) = v9;
    }
    else
    {
      __break(1u);
    }
  }
}

void SliderView.setValue(_:animated:)(char a1, double a2)
{
  if (a2 < 0.0) {
    a2 = 0.0;
  }
  if (a2 <= 1.0) {
    double v4 = a2;
  }
  else {
    double v4 = 1.0;
  }
  uint64_t v5 = (double *)&v2[OBJC_IVAR____TtC11MusicCoreUI10SliderView_value];
  swift_beginAccess();
  if (v4 != *v5)
  {
    uint64_t v6 = *(void **)&v2[OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrackWidthConstraint];
    if (v6)
    {
      id v7 = v6;
      [v2 bounds];
      [v7 setConstant:v4 * CGRectGetWidth(v16)];

      uint64_t v8 = swift_allocObject();
      *(void *)(v8 + 16) = v2;
      *(double *)(v8 + 24) = v4;
      if (a1)
      {
        double v9 = vabdd_f64(*v5, v4) * 0.25;
        if (v9 > 0.1) {
          double v10 = v9;
        }
        else {
          double v10 = 0.1;
        }
        CGRect v11 = self;
        uint64_t v12 = swift_allocObject();
        *(void *)(v12 + 16) = partial apply for closure #1 in SliderView.setValue(_:animated:);
        *(void *)(v12 + 24) = v8;
        aBlock[4] = partial apply for closure #3 in View.actionContextMenu<A, B>(title:menu:excluding:preview:previewAction:);
        aBlock[5] = v12;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = thunk for @escaping @callee_guaranteed @Sendable () -> ();
        aBlock[3] = &block_descriptor_70;
        objc_super v13 = _Block_copy(aBlock);
        uint64_t v14 = v2;
        swift_retain();
        swift_release();
        [v11 animateWithDuration:4 delay:v13 options:0 animations:v10 completion:0.0];
        swift_release();
        _Block_release(v13);
      }
      else
      {
        *uint64_t v5 = v4;
        [v2 layoutIfNeeded];
        swift_release();
      }
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_10042A5F8()
{
  return swift_deallocObject();
}

id partial apply for closure #1 in SliderView.setValue(_:animated:)()
{
  uint64_t v1 = *(char **)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  id v3 = &v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_value];
  swift_beginAccess();
  *(void *)id v3 = v2;
  return [v1 layoutIfNeeded];
}

void SliderView.panGestureRecognized(_:)(void *a1)
{
  switch((unint64_t)[a1 state])
  {
    case 1uLL:
      id v3 = *(void **)&v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrackWidthConstraint];
      if (!v3)
      {
        __break(1u);
        JUMPOUT(0x10042ACFCLL);
      }
      [v3 constant];
      double v4 = &v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_startingWidth];
      *(void *)double v4 = v5;
      v4[8] = 0;
      uint64_t v6 = swift_allocObject();
      *(void *)(v6 + 16) = v1;
      id v7 = &v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking];
      swift_beginAccess();
      if (*v7 == 1)
      {
        uint64_t v8 = v1;
        goto LABEL_35;
      }
      *id v7 = 1;
      uint64_t v37 = swift_allocObject();
      *(unsigned char *)(v37 + 16) = 1;
      *(void *)(v37 + 24) = v1;
      *(void *)(v37 + 32) = partial apply for closure #1 in SliderView.panGestureRecognized(_:);
      *(void *)(v37 + 40) = v6;
      uint64_t v38 = self;
      uint64_t v46 = (id (*)())closure #1 in SliderView.setTracking(_:animated:animations:)partial apply;
      uint64_t v47 = v37;
      aBlock = _NSConcreteStackBlock;
      uint64_t v43 = 1107296256;
      id v44 = thunk for @escaping @callee_guaranteed @Sendable () -> ();
      uint64_t v45 = &block_descriptor_58_0;
      id v17 = _Block_copy(&aBlock);
      id v39 = v1;
      swift_retain();
      swift_retain();
      swift_release();
      [v38 _animateUsingSpringWithDuration:2 delay:v17 options:0 mass:1.0 stiffness:0.0 damping:1.0 initialVelocity:288.0 animations:26.5 completion:0.0];
      goto LABEL_34;
    case 2uLL:
      id v19 = &v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking];
      swift_beginAccess();
      if (*v19 == 1 && (v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_startingWidth + 8] & 1) == 0)
      {
        double v20 = *(double *)&v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_startingWidth];
        [a1 translationInView:v1];
        double v22 = v21;
        double v24 = fabs(v23);
        if (one-time initialization token for escapeHeight != -1)
        {
          double v41 = v24;
          swift_once();
          double v24 = v41;
        }
        if (v24 >= *(double *)&static SliderView.Specs.escapeHeight)
        {
          id v40 = SliderView.panRecognizer.getter();
          [v40 setState:4];
        }
        else
        {
          id v25 = [v1 effectiveUserInterfaceLayoutDirection];
          double v26 = -v22;
          if (v25 != (id)1) {
            double v26 = v22;
          }
          double v27 = v20 + v26;
          objc_msgSend(v1, "bounds", *(void *)&v41);
          double Width = CGRectGetWidth(v48);
          if (Width >= v27) {
            double Width = v27;
          }
          if (Width < 0.0) {
            double v29 = 0.0;
          }
          else {
            double v29 = Width;
          }
          [v1 bounds];
          double v30 = v29 / CGRectGetWidth(v49);
          if (v30 < 0.0) {
            double v30 = 0.0;
          }
          if (v30 <= 1.0) {
            double v31 = v30;
          }
          else {
            double v31 = 1.0;
          }
          if (v31 == 1.0 || v31 == 0.0)
          {
            uint64_t v32 = (double *)&v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_value];
            swift_beginAccess();
            if (v31 != *v32) {
              [*(id *)&v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_feedbackGenerator] impactOccurred];
            }
          }
          SliderView.setValue(_:animated:)(0, v31);
          uint64_t v33 = &v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_valueChangedHandler];
          swift_beginAccess();
          uint64_t v34 = *(void (**)(uint64_t, double))v33;
          if (*(void *)v33)
          {
            long long v35 = (double *)&v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_value];
            swift_beginAccess();
            double v36 = *v35;
            swift_retain();
            v34(1, v36);
            outlined consume of (@escaping @callee_guaranteed () -> ())?((uint64_t)v34);
          }
        }
      }
      return;
    case 3uLL:
      double v9 = &v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking];
      swift_beginAccess();
      if (*v9 != 1) {
        return;
      }
      uint64_t v10 = swift_allocObject();
      *(void *)(v10 + 16) = v1;
      *double v9 = 0;
      uint64_t v11 = swift_allocObject();
      *(unsigned char *)(v11 + 16) = 0;
      *(void *)(v11 + 24) = v1;
      *(void *)(v11 + 32) = partial apply for closure #2 in SliderView.panGestureRecognized(_:);
      *(void *)(v11 + 40) = v10;
      uint64_t v12 = self;
      uint64_t v46 = (id (*)())closure #1 in SliderView.setTracking(_:animated:animations:)partial apply;
      uint64_t v47 = v11;
      aBlock = _NSConcreteStackBlock;
      uint64_t v43 = 1107296256;
      objc_super v13 = &block_descriptor_48_0;
      break;
    case 4uLL:
      uint64_t v14 = &v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking];
      swift_beginAccess();
      if (*v14 != 1) {
        return;
      }
      uint64_t v15 = swift_allocObject();
      *(void *)(v15 + 16) = v1;
      char *v14 = 0;
      uint64_t v16 = swift_allocObject();
      *(unsigned char *)(v16 + 16) = 0;
      *(void *)(v16 + 24) = v1;
      *(void *)(v16 + 32) = partial apply for closure #3 in SliderView.panGestureRecognized(_:);
      *(void *)(v16 + 40) = v15;
      uint64_t v12 = self;
      uint64_t v46 = partial apply for closure #1 in SliderView.setTracking(_:animated:animations:);
      uint64_t v47 = v16;
      aBlock = _NSConcreteStackBlock;
      uint64_t v43 = 1107296256;
      objc_super v13 = &block_descriptor_38_1;
      break;
    default:
      return;
  }
  id v44 = thunk for @escaping @callee_guaranteed @Sendable () -> ();
  uint64_t v45 = v13;
  id v17 = _Block_copy(&aBlock);
  uint64_t v18 = v1;
  swift_retain();
  swift_retain();
  swift_release();
  [v12 _animateUsingSpringWithDuration:2 delay:v17 options:0 mass:1.0 stiffness:0.0 damping:2.0 initialVelocity:500.0 animations:40.0 completion:0.0];
LABEL_34:
  swift_release();
  _Block_release(v17);
LABEL_35:
  swift_release();
}

uint64_t closure #3 in SliderView.panGestureRecognized(_:)(uint64_t a1)
{
  uint64_t v1 = (void (**)(uint64_t))(a1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_cancelledHandler);
  uint64_t result = swift_beginAccess();
  id v3 = *v1;
  if (*v1)
  {
    uint64_t v4 = swift_retain();
    v3(v4);
    return outlined consume of (@escaping @callee_guaranteed () -> ())?((uint64_t)v3);
  }
  return result;
}

uint64_t closure #1 in SliderView.panGestureRecognized(_:)(uint64_t a1, char a2)
{
  uint64_t v4 = (void (**)(void, double))(a1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_valueChangedHandler);
  uint64_t result = swift_beginAccess();
  uint64_t v6 = *v4;
  if (*v4)
  {
    id v7 = (double *)(a1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_value);
    swift_beginAccess();
    double v8 = *v7;
    swift_retain();
    v6(a2 & 1, v8);
    return outlined consume of (@escaping @callee_guaranteed () -> ())?((uint64_t)v6);
  }
  return result;
}

id closure #1 in SliderView.setTracking(_:animated:animations:)(char a1, char *a2, void (*a3)(uint64_t))
{
  uint64_t v6 = type metadata accessor for UIView.Corner.Radius();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  double v9 = (double *)((char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIView.Corner?);
  id result = (id)__chkstk_darwin();
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_super v13 = *(void **)&a2[OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackHeightConstraint];
  if ((a1 & 1) == 0)
  {
    if (v13)
    {
      uint64_t v17 = one-time initialization token for barHeight;
      id v15 = v13;
      if (v17 != -1) {
        swift_once();
      }
      uint64_t v16 = &static SliderView.Specs.barHeight;
      goto LABEL_10;
    }
LABEL_17:
    __break(1u);
    return result;
  }
  if (!v13)
  {
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v14 = one-time initialization token for expandedBarHeight;
  id v15 = v13;
  if (v14 != -1) {
    swift_once();
  }
  uint64_t v16 = &static SliderView.Specs.expandedBarHeight;
LABEL_10:
  [v15 setConstant:*(double *)v16];

  *double v9 = *(double *)v16 * 0.5;
  *((unsigned char *)v9 + 8) = 1;
  (*(void (**)(double *, void, uint64_t))(v7 + 104))(v9, enum case for UIView.Corner.Radius.value(_:), v6);
  static CACornerMask.all.getter();
  UIView.Corner.init(radius:mask:)();
  uint64_t v18 = type metadata accessor for UIView.Corner();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v12, 0, 1, v18);
  uint64_t v19 = UIView.corner.setter();
  if (a3) {
    a3(v19);
  }
  double v20 = *(void **)&a2[OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrack];
  double v21 = &a2[OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking];
  swift_beginAccess();
  if (*v21 == 1) {
    uint64_t v22 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackingColor;
  }
  else {
    uint64_t v22 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrackColor;
  }
  double v23 = &a2[v22];
  swift_beginAccess();
  [v20 setBackgroundColor:*(void *)v23];
  double v24 = *(void **)&a2[OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrack];
  id v25 = &a2[OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrackColor];
  swift_beginAccess();
  [v24 setBackgroundColor:*(void *)v25];
  return [a2 layoutIfNeeded];
}

id SliderView.__deallocating_deinit(uint64_t a1)
{
  return SliderView.PanGestureRecognizer.__deallocating_deinit(a1, type metadata accessor for SliderView);
}

id SliderView.PanGestureRecognizer.__deallocating_deinit(uint64_t a1, uint64_t (*a2)(void))
{
  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return objc_msgSendSuper2(&v4, "dealloc");
}

uint64_t sub_10042B328()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t block_copy_helper_68(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_68()
{
  return swift_release();
}

double sub_10042B378@<D0>(void *a1@<X0>, void *a2@<X8>)
{
  id v3 = (double *)(*a1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_value);
  swift_beginAccess();
  double result = *v3;
  *a2 = *(void *)v3;
  return result;
}

uint64_t sub_10042B3CC(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  id v3 = (void *)(*a2 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_value);
  uint64_t result = swift_beginAccess();
  *id v3 = v2;
  return result;
}

uint64_t sub_10042B424@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  id v3 = (unsigned char *)(*a1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t sub_10042B478(char *a1, void *a2)
{
  char v2 = *a1;
  id v3 = (unsigned char *)(*a2 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking);
  uint64_t result = swift_beginAccess();
  *id v3 = v2;
  return result;
}

ValueMetadata *type metadata accessor for SliderView.Specs()
{
  return &type metadata for SliderView.Specs;
}

uint64_t _sypSgWOc_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&_sypSgMD_2);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t lazy protocol witness table accessor for type UITouch and conformance NSObject()
{
  unint64_t result = lazy protocol witness table cache variable for type UITouch and conformance NSObject;
  if (!lazy protocol witness table cache variable for type UITouch and conformance NSObject)
  {
    type metadata accessor for UIMenu(255, &lazy cache variable for type metadata for UITouch);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type UITouch and conformance NSObject);
  }
  return result;
}

uint64_t sub_10042B5A8()
{
  return swift_deallocObject();
}

uint64_t partial apply for closure #3 in SliderView.panGestureRecognized(_:)()
{
  return closure #3 in SliderView.panGestureRecognized(_:)(*(void *)(v0 + 16));
}

id partial apply for closure #1 in SliderView.setTracking(_:animated:animations:)()
{
  return closure #1 in SliderView.setTracking(_:animated:animations:)(*(unsigned char *)(v0 + 16), *(char **)(v0 + 24), *(void (**)(uint64_t))(v0 + 32));
}

uint64_t partial apply for closure #2 in SliderView.panGestureRecognized(_:)()
{
  return closure #1 in SliderView.panGestureRecognized(_:)(*(void *)(v0 + 16), 0);
}

uint64_t partial apply for closure #1 in SliderView.panGestureRecognized(_:)()
{
  return closure #1 in SliderView.panGestureRecognized(_:)(*(void *)(v0 + 16), 1);
}

uint64_t objectdestroy_34Tm_0()
{
  if (*(void *)(v0 + 32)) {
    swift_release();
  }

  return swift_deallocObject();
}

void specialized SliderView.init(coder:)()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_stackView;
  id v3 = [objc_allocWithZone((Class)UIStackView) init];
  id v4 = UIView.forAutolayout.getter();

  *(void *)&v1[v2] = v4;
  uint64_t v5 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrack;
  id v6 = [objc_allocWithZone((Class)UIView) init];
  id v7 = UIView.forAutolayout.getter();

  *(void *)&v1[v5] = v7;
  uint64_t v8 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrack;
  id v9 = [objc_allocWithZone((Class)UIView) init];
  id v10 = UIView.forAutolayout.getter();

  *(void *)&v1[v8] = v10;
  *(void *)&v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrackWidthConstraint] = 0;
  *(void *)&v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackHeightConstraint] = 0;
  uint64_t v11 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_feedbackGenerator;
  *(void *)&v1[v11] = [objc_allocWithZone((Class)UIImpactFeedbackGenerator) initWithStyle:0];
  uint64_t v12 = &v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_startingWidth];
  *(void *)uint64_t v12 = 0;
  _OWORD v12[8] = 1;
  objc_super v13 = &v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_lastSeenBounds];
  *objc_super v13 = 0u;
  v13[1] = 0u;
  *(void *)&v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView____lazy_storage___panRecognizer] = 0;
  uint64_t v14 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackLayoutGuide;
  *(void *)&v1[v14] = [objc_allocWithZone((Class)UILayoutGuide) init];
  uint64_t v15 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrackColor;
  uint64_t v16 = self;
  *(void *)&v1[v15] = [v16 whiteColor];
  uint64_t v17 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrackColor;
  *(void *)&v1[v17] = [v16 systemFillColor];
  uint64_t v18 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackingColor;
  if (one-time initialization token for normal != -1) {
    swift_once();
  }
  uint64_t v19 = (void *)static UIColor.MusicTint.normal;
  *(void *)&v1[v18] = static UIColor.MusicTint.normal;
  uint64_t v20 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_value;
  *(double *)&v1[v20] = Int.seconds.getter(0);
  v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_isEnabled] = 1;
  v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking] = 0;
  double v21 = &v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_valueChangedHandler];
  *double v21 = 0;
  v21[1] = 0;
  uint64_t v22 = &v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_cancelledHandler];
  *uint64_t v22 = 0;
  v22[1] = 0;
  id v23 = v19;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

long long *SymbolButton.Configuration.platterMinimumSize.unsafeMutableAddressor()
{
  if (one-time initialization token for platterMinimumSize != -1) {
    swift_once();
  }
  return &static SymbolButton.Configuration.platterMinimumSize;
}

unint64_t SymbolButton.CustomView.init(view:)@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>, int64x2_t a3@<Q0>, int64x2_t a4@<Q1>)
{
  a3.i64[0] = 0;
  *(void *)a2 = result;
  a4.i64[0] = result;
  int8x16_t v4 = (int8x16_t)vdupq_lane_s64(vmvnq_s8((int8x16_t)vceqq_s64(a4, a3)).i64[0], 0);
  int8x16_t v5 = vandq_s8(*(int8x16_t *)&UIEdgeInsetsZero.bottom, v4);
  uint64_t v6 = 0x3FF0000000000000;
  *(int8x16_t *)(a2 + 8) = vandq_s8(*(int8x16_t *)&UIEdgeInsetsZero.top, v4);
  if (!result) {
    uint64_t v6 = 0;
  }
  *(int8x16_t *)(a2 + 24) = v5;
  *(void *)(a2 + 40) = v6;
  *(void *)(a2 + 48) = 0;
  return result;
}

uint64_t SymbolButton.updateConfigurationIfNeeded(_:animation:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v6 = v5;
  int v73 = a5;
  uint64_t v74 = a2;
  uint64_t v72 = type metadata accessor for UIViewConfigurationState();
  uint64_t v71 = *(void *)(v72 - 8);
  __chkstk_darwin();
  id v70 = (char *)&v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SymbolButton.Configuration?);
  __chkstk_darwin();
  uint64_t v12 = (char *)&v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for SymbolButton.Configuration(0);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin();
  uint64_t v16 = (char *)&v64 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of (String, Any)(a1, (uint64_t)v12, &demangling cache variable for type metadata for SymbolButton.Configuration?);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    uint64_t v17 = (uint64_t)&v6[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration];
    swift_beginAccess();
    outlined init with copy of SymbolButton.Configuration(v17, (uint64_t)v16, type metadata accessor for SymbolButton.Configuration);
    outlined destroy of TaskPriority?((uint64_t)v12, &demangling cache variable for type metadata for SymbolButton.Configuration?);
  }
  else
  {
    outlined init with take of SymbolButton.Configuration((uint64_t)v12, (uint64_t)v16, type metadata accessor for SymbolButton.Configuration);
  }
  uint64_t v18 = &v6[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenHidden];
  swift_beginAccess();
  if ((*v18 & 1) != 0 || *(double *)&v16[*(int *)(v13 + 68)] != 0.0)
  {
    [v6 state];
    uint64_t v19 = &v6[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenDisabled];
    swift_beginAccess();
    id v66 = v19;
    char v20 = *v19;
    uint64_t v68 = a4;
    uint64_t v67 = a3;
    uint64_t v69 = v13;
    if ((v20 & 1) != 0
      || (double v21 = &v6[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenHighlighted],
          swift_beginAccess(),
          (*v21 & 1) != 0)
      || (uint64_t v22 = &v6[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenSelected],
          swift_beginAccess(),
          *v22 == 1))
    {
      if (one-time initialization token for normal != -1) {
        swift_once();
      }
      uint64_t v24 = static SymbolButton.Background.normal;
      id v23 = (void *)qword_1005AECF8;
      uint64_t v26 = qword_1005AED00;
      uint64_t v25 = qword_1005AED08;
      uint64_t v27 = *((void *)v16 + 24);
      uint64_t v28 = (void *)*((void *)v16 + 25);
      swift_bridgeObjectRetain();
      id v29 = v23;
      outlined consume of SymbolButton.Background?(v27, v28);
      *((void *)v16 + 24) = v24;
      *((void *)v16 + 25) = v23;
      *((void *)v16 + 26) = v26;
      *((void *)v16 + 27) = v25;
      id v30 = [v6 traitCollection];
      id v31 = [v30 userInterfaceIdiom];

      if (v31 == (id)6)
      {
        uint64_t v32 = self;
        id v33 = [v32 labelColor];

        *((void *)v16 + 14) = v33;
        id v34 = [v32 labelColor];

        *((void *)v16 + 22) = v34;
      }
      uint64_t v13 = v69;
      *(void *)&v16[*(int *)(v69 + 68)] = 0x3FF0000000000000;
      a4 = v68;
      a3 = v67;
    }
    if (([v6 state] & 2) != 0 && *v66 == 1) {
      *(void *)&v16[*(int *)(v13 + 68)] = 0x3FD0000000000000;
    }
    if ([v6 state])
    {
      long long v35 = &v6[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenHighlighted];
      swift_beginAccess();
      if (*v35 == 1)
      {
        if (one-time initialization token for highlighted != -1) {
          swift_once();
        }
        double v36 = (void *)qword_1005AED18;
        id v66 = (unsigned char *)static SymbolButton.Background.highlighted;
        uint64_t v38 = qword_1005AED20;
        uint64_t v37 = qword_1005AED28;
        uint64_t v39 = *((void *)v16 + 24);
        id v40 = (void *)*((void *)v16 + 25);
        swift_bridgeObjectRetain();
        id v64 = v36;
        outlined consume of SymbolButton.Background?(v39, v40);
        *((void *)v16 + 24) = v66;
        id v65 = v16 + 200;
        *((void *)v16 + 25) = v36;
        *((void *)v16 + 26) = v38;
        *((void *)v16 + 27) = v37;
        id v66 = (unsigned char *)v37;
        uint64_t v13 = v69;
        uint64_t v41 = *(int *)(v69 + 68);
        *(void *)&v16[v41] = 0x3FE0000000000000;
        id v42 = [v6 traitCollection];
        id v43 = [v42 userInterfaceIdiom];

        a4 = v68;
        a3 = v67;
        if (v43 == (id)6)
        {
          id v44 = self;
          id v45 = [v44 labelColor];

          *((void *)v16 + 14) = v45;
          uint64_t v13 = v69;
          id v46 = [v44 labelColor];

          *((void *)v16 + 22) = v46;
          *(void *)&v16[v41] = 0x3FF0000000000000;
          if ([v6 showsMenuAsPrimaryAction])
          {
            if ([v6 isContextMenuInteractionEnabled])
            {

              swift_bridgeObjectRelease();
              *((void *)v16 + 24) = 0x3FF0000000000000;
              uint64_t v47 = v65;
              *((void *)v65 + 1) = 0;
              *((void *)v47 + 2) = 0;
              *(void *)uint64_t v47 = 0;
              CGRect v48 = v46;
              id v49 = [v44 blackColor];

              *((void *)v16 + 14) = v49;
              uint64_t v13 = v69;
              id v50 = [v44 blackColor];

              *((void *)v16 + 22) = v50;
            }
          }
        }
      }
    }
    if (([v6 state] & 4) != 0)
    {
      id v51 = &v6[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenSelected];
      swift_beginAccess();
      if (*v51 == 1)
      {
        outlined consume of SymbolButton.Background?(*((void *)v16 + 24), *((void **)v16 + 25));
        *((void *)v16 + 24) = 0x3FF0000000000000;
        *((void *)v16 + 25) = 0;
        *((void *)v16 + 26) = 0;
        *((void *)v16 + 27) = 0;
        uint64_t v52 = *(int *)(v13 + 68);
        *(void *)&v16[v52] = 0x3FF0000000000000;
        id v53 = [v6 traitCollection];
        id v54 = [v53 userInterfaceIdiom];

        if (v54 == (id)6)
        {
          id v55 = self;
          id v56 = [v55 blackColor];

          *((void *)v16 + 14) = v56;
          id v57 = [v55 blackColor];

          *((void *)v16 + 22) = v57;
        }
        else if ([v6 state])
        {
          *(void *)&v16[v52] = 0x3FE0000000000000;
        }
      }
    }
  }
  uint64_t v58 = (uint64_t *)&v6[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_configurationProvider];
  swift_beginAccess();
  uint64_t v59 = (void (*)(char *, char *))*v58;
  if (*v58)
  {
    outlined copy of (@escaping @callee_guaranteed () -> ())?(*v58);
    uint64_t v60 = v6;
    id v61 = [v60 traitCollection];
    char v62 = v70;
    UIViewConfigurationState.init(traitCollection:)();
    [v60 isEnabled];
    UIViewConfigurationState.isDisabled.setter();
    [v60 isSelected];
    UIViewConfigurationState.isSelected.setter();
    [v60 isHighlighted];
    UIViewConfigurationState.isHighlighted.setter();

    v59(v62, v16);
    outlined consume of (@escaping @callee_guaranteed () -> ())?((uint64_t)v59);
    (*(void (**)(char *, uint64_t))(v71 + 8))(v62, v72);
  }
  SymbolButton.setConfiguration(_:animation:updates:)((uint64_t)v16, v74, a3, a4, v73 & 1, (uint64_t)_swiftEmptyArrayStorage);
  return outlined destroy of SymbolButton.Configuration((uint64_t)v16, type metadata accessor for SymbolButton.Configuration);
}

double static SymbolButton.Material.with(_:)@<D0>(void (*a1)(long long *)@<X0>, uint64_t a2@<X8>)
{
  long long v7 = 0uLL;
  uint64_t v8 = 0;
  char v9 = 2;
  long long v10 = 0uLL;
  a1(&v7);
  uint64_t v3 = v8;
  char v4 = v9;
  double result = *(double *)&v7;
  long long v6 = v10;
  *(_OWORD *)a2 = v7;
  *(void *)(a2 + 16) = v3;
  *(unsigned char *)(a2 + 24) = v4;
  *(_OWORD *)(a2 + 32) = v6;
  return result;
}

double static SymbolButton.Symbol.with(_:)@<D0>(void (*a1)(long long *)@<X0>, uint64_t a2@<X8>)
{
  long long v14 = 0uLL;
  *(void *)&long long v15 = 0;
  *((void *)&v15 + 1) = UIFontTextStyleSubheadline;
  uint64_t v16 = 0;
  char v17 = 1;
  long long v18 = xmmword_1004A3B50;
  long long v19 = 0uLL;
  char v20 = -1;
  long long v21 = 0uLL;
  double v22 = 1.0;
  uint64_t v23 = 0;
  char v4 = UIFontTextStyleSubheadline;
  a1(&v14);
  uint64_t v5 = v16;
  char v6 = v17;
  char v7 = v20;
  double result = v22;
  uint64_t v9 = v23;
  long long v10 = v15;
  long long v11 = v18;
  long long v12 = v19;
  long long v13 = v21;
  *(_OWORD *)a2 = v14;
  *(_OWORD *)(a2 + 16) = v10;
  *(void *)(a2 + 32) = v5;
  *(unsigned char *)(a2 + 40) = v6;
  *(_OWORD *)(a2 + 48) = v11;
  *(_OWORD *)(a2 + 64) = v12;
  *(unsigned char *)(a2 + 80) = v7;
  *(_OWORD *)(a2 + 88) = v13;
  *(double *)(a2 + 104) = result;
  *(void *)(a2 + 112) = v9;
  return result;
}

double static SymbolButton.Title.with(_:)@<D0>(void (*a1)(long long *)@<X0>, uint64_t a2@<X8>)
{
  long long v11 = 0uLL;
  UIFontTextStyle v12 = UIFontTextStyleSubheadline;
  double v13 = UIFontWeightSemibold;
  long long v14 = 0uLL;
  uint64_t v15 = 0x3FF0000000000000;
  uint64_t v16 = 0;
  char v17 = 0;
  char v4 = UIFontTextStyleSubheadline;
  a1(&v11);
  UIFontTextStyle v5 = v12;
  double result = v13;
  uint64_t v7 = v15;
  uint64_t v8 = v16;
  char v9 = v17;
  long long v10 = v14;
  *(_OWORD *)a2 = v11;
  *(void *)(a2 + 16) = v5;
  *(double *)(a2 + 24) = result;
  *(_OWORD *)(a2 + 32) = v10;
  *(void *)(a2 + 48) = v7;
  *(void *)(a2 + 56) = v8;
  *(unsigned char *)(a2 + 64) = v9;
  return result;
}

uint64_t UIView.Corner.roundedRect.unsafeMutableAddressor()
{
  return UIView.Corner.roundedRect.unsafeMutableAddressor(&one-time initialization token for roundedRect, (uint64_t (*)(void))&type metadata accessor for UIView.Corner, (uint64_t)static UIView.Corner.roundedRect);
}

uint64_t static SymbolButton.Configuration.with(_:)@<X0>(uint64_t (*a1)(uint64_t)@<X0>, uint64_t a2@<X8>)
{
  return a1(a2);
}

uint64_t static SymbolButton.Background.with(_:)(void (*a1)(uint64_t *))
{
  uint64_t v2 = 0x3FF0000000000000;
  uint64_t v3 = 0;
  uint64_t v4 = 0;
  uint64_t v5 = 0;
  a1(&v2);
  return v3;
}

char *SymbolButton.__allocating_init(configuration:handler:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v7 = objc_allocWithZone(v3);
  return SymbolButton.init(configuration:handler:)(a1, a2, a3);
}

char *SymbolButton.init(configuration:handler:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v64 = a3;
  uint64_t v63 = a2;
  uint64_t ObjectType = swift_getObjectType();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIView.Corner?);
  __chkstk_darwin();
  uint64_t v60 = (uint64_t)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for SymbolButton.Metrics(0);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  id v61 = (uint64_t *)((char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  char v9 = &v3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_debugLabel];
  *char v9 = 0;
  v9[1] = 0;
  long long v10 = &v3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_configurationProvider];
  *long long v10 = 0;
  v10[1] = 0;
  long long v11 = (uint64_t *)&v3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_handler];
  *long long v11 = 0;
  v11[1] = 0;
  v3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenHighlighted] = 1;
  v3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenSelected] = 1;
  v3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenDisabled] = 1;
  v3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenHidden] = 1;
  *(void *)&v3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_pendingAnimatedChangesCount] = 0;
  uint64_t v12 = OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_hitRectMinimumSize;
  uint64_t v13 = one-time initialization token for hitRectMinimumSize;
  long long v14 = v3;
  if (v13 != -1) {
    swift_once();
  }
  *(_OWORD *)&v3[v12] = static SymbolButton.Configuration.hitRectMinimumSize;
  uint64_t v15 = &v14[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_buildMenu];
  *uint64_t v15 = 0;
  v15[1] = 0;
  uint64_t v16 = OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_containerView;
  *(void *)&v14[v16] = [objc_allocWithZone((Class)UIView) init];
  uint64_t v17 = OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_materialView;
  uint64_t v67 = 1;
  long long v18 = (objc_class *)type metadata accessor for SymbolButton.MaterialView();
  long long v68 = 0u;
  long long v69 = 0u;
  uint64_t v70 = 0;
  v66.receiver = objc_allocWithZone(v18);
  v66.super_class = v18;
  id v19 = objc_msgSendSuper2(&v66, "initWithEffect:", 0);
  SymbolButton.MaterialView.apply(_:)((uint64_t)&v67);

  *(void *)&v14[v17] = v19;
  uint64_t v20 = OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_backgroundView;
  if (one-time initialization token for clear != -1) {
    swift_once();
  }
  swift_beginAccess();
  double v21 = *(double *)&static SymbolButton.Background.clear;
  double v22 = (void *)qword_1005AEC48;
  uint64_t v23 = qword_1005AEC50;
  uint64_t v24 = qword_1005AEC58;
  id v25 = objc_allocWithZone((Class)type metadata accessor for SymbolButton.BackgroundView());
  swift_bridgeObjectRetain();
  id v26 = v22;
  *(void *)&v14[v20] = SymbolButton.BackgroundView.init(configuration:)(v22, v21, v23, v24);
  *(void *)&v14[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton____lazy_storage___imageView] = 0;
  *(void *)&v14[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton____lazy_storage___titleLabel] = 0;
  *(void *)&v14[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_customView] = 0;
  *(void *)&v14[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_badgeView] = 0;
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(&v14[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton____lazy_storage___metrics], 1, 1, v6);
  v14[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_isClippingInvalidated] = 1;
  uint64_t v27 = a1;
  outlined init with copy of SymbolButton.Configuration(a1, (uint64_t)&v14[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration], type metadata accessor for SymbolButton.Configuration);
  swift_beginAccess();
  uint64_t v28 = *v11;
  uint64_t v29 = v63;
  uint64_t v30 = v64;
  *long long v11 = v63;
  v11[1] = v30;
  outlined copy of (@escaping @callee_guaranteed () -> ())?(v29);
  outlined consume of (@escaping @callee_guaranteed () -> ())?(v28);

  id v31 = (objc_class *)type metadata accessor for SymbolButton(0);
  v65.receiver = v14;
  v65.super_class = v31;
  uint64_t v32 = (char *)objc_msgSendSuper2(&v65, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  uint64_t v33 = OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_containerView;
  id v34 = *(void **)&v32[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_containerView];
  long long v35 = v32;
  [v34 setAutoresizingMask:18];
  id v36 = v34;
  [v35 bounds];
  objc_msgSend(v36, "setFrame:");

  uint64_t v37 = *(void **)&v32[v33];
  [v35 addSubview:v37];
  uint64_t v38 = *(void **)&v35[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_materialView];
  [v37 addSubview:v38];
  id v39 = [v38 contentView];
  uint64_t v40 = OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_backgroundView;
  [v39 addSubview:*(void *)&v35[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_backgroundView]];

  uint64_t v41 = *(void **)&v35[v40];
  type metadata accessor for SymbolButton.Label();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v43 = v41;
  if (([v43 isKindOfClass:ObjCClassFromMetadata] & 1) == 0)
  {
    id v44 = &v35[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration];
    swift_beginAccess();
    uint64_t v45 = type metadata accessor for SymbolButton.Configuration(0);
    int v46 = v44[*(int *)(v45 + 76)];
    if (v46 == 2)
    {
      uint64_t v47 = v60;
      outlined init with copy of (String, Any)((uint64_t)&v44[*(int *)(v45 + 36)], v60, &demangling cache variable for type metadata for UIView.Corner?);
      uint64_t v48 = type metadata accessor for UIView.Corner();
      uint64_t v49 = (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 48))(v47, 1, v48) != 1;
      outlined destroy of TaskPriority?(v47, &demangling cache variable for type metadata for UIView.Corner?);
    }
    else
    {
      uint64_t v49 = v46 & 1;
    }
    [v43 setClipsToBounds:v49];
  }

  SymbolButton.apply(_:)(a1);
  id v50 = v61;
  SymbolButton.metrics.getter(v61);
  SymbolButton.apply(_:)((uint64_t)v50);
  outlined destroy of SymbolButton.Configuration((uint64_t)v50, type metadata accessor for SymbolButton.Metrics);
  type metadata accessor for UIMenu(0, &_sSo8UIActionCML_1);
  *(void *)(swift_allocObject() + 16) = ObjectType;
  id v51 = v35;
  uint64_t v52 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  [v51 addAction:v52 forControlEvents:64];

  UIAccessibilityTraits v53 = UIAccessibilityTraitButton;
  id v54 = v51;
  unint64_t v55 = (unint64_t)[v54 accessibilityTraits];
  if ((v53 & ~v55) != 0) {
    UIAccessibilityTraits v56 = v53;
  }
  else {
    UIAccessibilityTraits v56 = 0;
  }
  [v54 setAccessibilityTraits:v56 | v55];

  id v57 = [objc_allocWithZone((Class)UIPointerInteraction) initWithDelegate:v54];
  [v54 addInteraction:v57];

  outlined consume of (@escaping @callee_guaranteed () -> ())?(v63);
  outlined destroy of SymbolButton.Configuration(v27, type metadata accessor for SymbolButton.Configuration);
  return v54;
}

void closure #1 in SymbolButton.init(configuration:handler:)(void *a1)
{
  if ([a1 sender])
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v4, 0, sizeof(v4));
  }
  outlined init with take of PresentationSource?((uint64_t)v4, (uint64_t)v5, &_sypSgMD_2);
  if (v6)
  {
    if (swift_dynamicCast())
    {
      uint64_t v1 = (void (**)())&v3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_handler];
      swift_beginAccess();
      uint64_t v2 = *v1;
      if (*v1)
      {
        swift_retain();
        v2();

        outlined consume of (@escaping @callee_guaranteed () -> ())?((uint64_t)v2);
      }
      else
      {
      }
    }
  }
  else
  {
    outlined destroy of TaskPriority?((uint64_t)v5, &_sypSgMD_2);
  }
}

uint64_t SymbolButton.debugLabel.getter()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_debugLabel);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t SymbolButton.debugLabel.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_debugLabel);
  swift_beginAccess();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*SymbolButton.debugLabel.modify())()
{
  return ArtworkVideoReportingController.isEnabled.modify;
}

uint64_t SymbolButton.configurationProvider.getter()
{
  return SymbolButton.configurationProvider.getter(&OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_configurationProvider, (void (*)(void, void))outlined copy of (@escaping @callee_guaranteed (@unowned Double) -> ())?);
}

uint64_t SymbolButton.configurationProvider.setter(uint64_t a1, uint64_t a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SymbolButton.Configuration?);
  __chkstk_darwin();
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (uint64_t *)(v2 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_configurationProvider);
  swift_beginAccess();
  uint64_t v8 = *v7;
  *uint64_t v7 = a1;
  v7[1] = a2;
  outlined copy of (@escaping @callee_guaranteed () -> ())?(a1);
  outlined consume of (@escaping @callee_guaranteed () -> ())?(v8);
  uint64_t v9 = type metadata accessor for SymbolButton.Configuration(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v6, 1, 1, v9);
  SymbolButton.updateConfigurationIfNeeded(_:animation:)((uint64_t)v6, 0, 0, 0, 1);
  outlined destroy of TaskPriority?((uint64_t)v6, &demangling cache variable for type metadata for SymbolButton.Configuration?);
  return outlined consume of (@escaping @callee_guaranteed () -> ())?(a1);
}

void (*SymbolButton.configurationProvider.modify(void *a1))(void **a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SymbolButton.Configuration?);
  v3[4] = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  swift_beginAccess();
  return SymbolButton.configurationProvider.modify;
}

void SymbolButton.configurationProvider.modify(void **a1, char a2)
{
  uint64_t v3 = *a1;
  swift_endAccess();
  uint64_t v4 = (void *)v3[4];
  if ((a2 & 1) == 0)
  {
    uint64_t v5 = type metadata accessor for SymbolButton.Configuration(0);
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
    SymbolButton.updateConfigurationIfNeeded(_:animation:)((uint64_t)v4, 0, 0, 0, 1);
    outlined destroy of TaskPriority?((uint64_t)v4, &demangling cache variable for type metadata for SymbolButton.Configuration?);
  }
  free(v4);

  free(v3);
}

void SymbolButton.configurationState.getter()
{
  id v2 = v0;
  id v1 = [v2 traitCollection];
  UIViewConfigurationState.init(traitCollection:)();
  [v2 isEnabled];
  UIViewConfigurationState.isDisabled.setter();
  [v2 isSelected];
  UIViewConfigurationState.isSelected.setter();
  [v2 isHighlighted];
  UIViewConfigurationState.isHighlighted.setter();
}

uint64_t SymbolButton.handler.getter()
{
  return SymbolButton.configurationProvider.getter(&OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_handler, (void (*)(void, void))outlined copy of (@escaping @callee_guaranteed () -> ())?);
}

uint64_t SymbolButton.handler.setter(uint64_t a1, uint64_t a2)
{
  return SymbolButton.handler.setter(a1, a2, &OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_handler, (uint64_t (*)(uint64_t, uint64_t))outlined consume of (@escaping @callee_guaranteed () -> ())?);
}

uint64_t (*SymbolButton.handler.modify())()
{
  return ArtworkVideoReportingController.isEnabled.modify;
}

uint64_t SymbolButton.automaticallyAdjustsAlphaWhenHighlighted.getter()
{
  id v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenHighlighted);
  swift_beginAccess();
  return *v1;
}

uint64_t SymbolButton.automaticallyAdjustsAlphaWhenHighlighted.setter(char a1)
{
  return SymbolButton.automaticallyAdjustsAlphaWhenHighlighted.setter(a1, &OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenHighlighted);
}

uint64_t (*SymbolButton.automaticallyAdjustsAlphaWhenHighlighted.modify(void *a1))()
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SymbolButton.Configuration?);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  uint64_t v6 = OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenHighlighted;
  v3[4] = v5;
  v3[5] = v6;
  uint64_t v7 = (unsigned char *)(v1 + v6);
  swift_beginAccess();
  *((unsigned char *)v3 + 48) = *v7;
  return SymbolButton.automaticallyAdjustsAlphaWhenHighlighted.modify;
}

uint64_t SymbolButton.automaticallyAdjustsAlphaWhenSelected.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenSelected);
  swift_beginAccess();
  return *v1;
}

uint64_t SymbolButton.automaticallyAdjustsAlphaWhenSelected.setter(char a1)
{
  return SymbolButton.automaticallyAdjustsAlphaWhenHighlighted.setter(a1, &OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenSelected);
}

uint64_t SymbolButton.automaticallyAdjustsAlphaWhenHighlighted.setter(char a1, void *a2)
{
  int v5 = a1 & 1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SymbolButton.Configuration?);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (unsigned char *)(v2 + *a2);
  uint64_t result = swift_beginAccess();
  int v10 = *v8;
  *uint64_t v8 = a1;
  if (v10 != v5)
  {
    uint64_t v11 = type metadata accessor for SymbolButton.Configuration(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v7, 1, 1, v11);
    SymbolButton.updateConfigurationIfNeeded(_:animation:)((uint64_t)v7, 0, 0, 0, 1);
    return outlined destroy of TaskPriority?((uint64_t)v7, &demangling cache variable for type metadata for SymbolButton.Configuration?);
  }
  return result;
}

uint64_t (*SymbolButton.automaticallyAdjustsAlphaWhenSelected.modify(void *a1))()
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SymbolButton.Configuration?);
  int v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  uint64_t v6 = OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenSelected;
  v3[4] = v5;
  v3[5] = v6;
  uint64_t v7 = (unsigned char *)(v1 + v6);
  swift_beginAccess();
  *((unsigned char *)v3 + 48) = *v7;
  return SymbolButton.automaticallyAdjustsAlphaWhenHighlighted.modify;
}

void SymbolButton.automaticallyAdjustsAlphaWhenHighlighted.modify(void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = (*a1)[5];
  uint64_t v3 = (*a1)[3];
  int v4 = *((unsigned __int8 *)*a1 + 48);
  int v5 = v2[(void)v3];
  v2[(void)v3] = v4;
  if ((v4 ^ v5))
  {
    uint64_t v6 = (uint64_t)v1[4];
    uint64_t v7 = type metadata accessor for SymbolButton.Configuration(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
    SymbolButton.updateConfigurationIfNeeded(_:animation:)(v6, 0, 0, 0, 1);
    outlined destroy of TaskPriority?(v6, &demangling cache variable for type metadata for SymbolButton.Configuration?);
  }
  free(v1[4]);

  free(v1);
}

uint64_t SymbolButton.automaticallyAdjustsAlphaWhenDisabled.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenDisabled);
  swift_beginAccess();
  return *v1;
}

uint64_t SymbolButton.automaticallyAdjustsAlphaWhenDisabled.setter(char a1)
{
  return SymbolButton.automaticallyAdjustsAlphaWhenHighlighted.setter(a1, &OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenDisabled);
}

uint64_t (*SymbolButton.automaticallyAdjustsAlphaWhenDisabled.modify(void *a1))()
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SymbolButton.Configuration?);
  int v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  uint64_t v6 = OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenDisabled;
  v3[4] = v5;
  v3[5] = v6;
  uint64_t v7 = (unsigned char *)(v1 + v6);
  swift_beginAccess();
  *((unsigned char *)v3 + 48) = *v7;
  return SymbolButton.automaticallyAdjustsAlphaWhenHighlighted.modify;
}

uint64_t SymbolButton.automaticallyAdjustsAlphaWhenHidden.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenHidden);
  swift_beginAccess();
  return *v1;
}

uint64_t SymbolButton.automaticallyAdjustsAlphaWhenHidden.setter(char a1)
{
  return SymbolButton.automaticallyAdjustsAlphaWhenHighlighted.setter(a1, &OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenHidden);
}

uint64_t (*SymbolButton.automaticallyAdjustsAlphaWhenHidden.modify(void *a1))()
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SymbolButton.Configuration?);
  int v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  uint64_t v6 = OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenHidden;
  v3[4] = v5;
  v3[5] = v6;
  uint64_t v7 = (unsigned char *)(v1 + v6);
  swift_beginAccess();
  *((unsigned char *)v3 + 48) = *v7;
  return SymbolButton.automaticallyAdjustsAlphaWhenHighlighted.modify;
}

uint64_t SymbolButton.configuration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration;
  swift_beginAccess();
  return outlined init with copy of SymbolButton.Configuration(v3, a1, type metadata accessor for SymbolButton.Configuration);
}

uint64_t SymbolButton.configuration.setter(uint64_t a1)
{
  return outlined destroy of SymbolButton.Configuration(a1, type metadata accessor for SymbolButton.Configuration);
}

void (*SymbolButton.configuration.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[3] = v1;
  size_t v4 = *(void *)(*(void *)(type metadata accessor for SymbolButton.Configuration(0) - 8) + 64);
  v3[4] = malloc(v4);
  int v5 = malloc(v4);
  v3[5] = v5;
  uint64_t v6 = v1 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration;
  swift_beginAccess();
  outlined init with copy of SymbolButton.Configuration(v6, (uint64_t)v5, type metadata accessor for SymbolButton.Configuration);
  return SymbolButton.configuration.modify;
}

void SymbolButton.configuration.modify(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void **)(*(void *)a1 + 32);
  size_t v4 = *(void **)(*(void *)a1 + 40);
  if (a2)
  {
    outlined init with copy of SymbolButton.Configuration(*(void *)(*(void *)a1 + 40), (uint64_t)v3, type metadata accessor for SymbolButton.Configuration);
    SymbolButton.setConfiguration(_:animation:updates:)((uint64_t)v3, 0, 0, 0, 1, (uint64_t)_swiftEmptyArrayStorage);
    outlined destroy of SymbolButton.Configuration((uint64_t)v3, type metadata accessor for SymbolButton.Configuration);
  }
  else
  {
    SymbolButton.setConfiguration(_:animation:updates:)(*(void *)(*(void *)a1 + 40), 0, 0, 0, 1, (uint64_t)_swiftEmptyArrayStorage);
  }
  outlined destroy of SymbolButton.Configuration((uint64_t)v4, type metadata accessor for SymbolButton.Configuration);
  free(v4);
  free(v3);

  free(v2);
}

uint64_t *SymbolButton.Background.normal.unsafeMutableAddressor()
{
  if (one-time initialization token for normal != -1) {
    swift_once();
  }
  return &static SymbolButton.Background.normal;
}

uint64_t *SymbolButton.Background.highlighted.unsafeMutableAddressor()
{
  if (one-time initialization token for highlighted != -1) {
    swift_once();
  }
  return &static SymbolButton.Background.highlighted;
}

void *SymbolButton.Background.selected.unsafeMutableAddressor()
{
  return &static SymbolButton.Background.selected;
}

void *SymbolButton.Animation.default.unsafeMutableAddressor()
{
  return &static SymbolButton.Animation.default;
}

uint64_t static SymbolButton.Animation.default.getter()
{
  return 3075;
}

void *SymbolButton.Animation.eased.unsafeMutableAddressor()
{
  return &static SymbolButton.Animation.eased;
}

uint64_t static SymbolButton.Animation.eased.getter()
{
  return 3075;
}

uint64_t SymbolButton.Update.alongside.getter()
{
  uint64_t v1 = *v0;
  outlined copy of (@escaping @callee_guaranteed () -> ())?(*v0);
  return v1;
}

uint64_t SymbolButton.Update.alongside.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = outlined consume of (@escaping @callee_guaranteed () -> ())?(*v2);
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

double SymbolButton.Update.animationOptions.getter()
{
  return *(double *)(v0 + 16);
}

void SymbolButton.Update.animationOptions.setter(double a1, double a2)
{
  *(double *)(v2 + 16) = a1;
  *(double *)(v2 + 24) = a2;
}

uint64_t SymbolButton.Update.completion.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  outlined copy of (@escaping @callee_guaranteed () -> ())?(v1);
  return v1;
}

uint64_t SymbolButton.Update.completion.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = outlined consume of (@escaping @callee_guaranteed () -> ())?(*(void *)(v2 + 32));
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return result;
}

uint64_t SymbolButton.Update.init(alongside:animationOptions:completion:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, double a6@<D0>, double a7@<D1>)
{
  *(void *)a5 = result;
  *(void *)(a5 + 8) = a2;
  *(double *)(a5 + 16) = a6;
  *(double *)(a5 + 24) = a7;
  *(void *)(a5 + 32) = a3;
  *(void *)(a5 + 40) = a4;
  return result;
}

void SymbolButton.setConfiguration(_:animation:updates:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v203 = a6;
  LODWORD(v192) = a5;
  uint64_t v185 = a4;
  double v183 = *(double *)&a3;
  double v189 = *(double *)&a2;
  uint64_t ObjectType = swift_getObjectType();
  CGRect v200 = (char *)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (UIView.Corner?, UIView.Corner?));
  __chkstk_darwin();
  int v10 = (char *)&v179 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v204 = type metadata accessor for UUID();
  uint64_t v11 = *(void *)(v204 - 8);
  __chkstk_darwin();
  uint64_t v13 = (char *)&v179 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for SymbolButton.Configuration(0);
  uint64_t v186 = *(void *)(v14 - 8);
  uint64_t v15 = *(void *)(v186 + 64);
  __chkstk_darwin();
  uint64_t v190 = (uint64_t)&v179 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v191 = (uint64_t)&v179 - v16;
  __chkstk_darwin();
  CGRect v198 = (char *)&v179 - v17;
  __chkstk_darwin();
  uint64_t v197 = (uint64_t)&v179 - v18;
  __chkstk_darwin();
  uint64_t v196 = (uint64_t)&v179 - v19;
  __chkstk_darwin();
  uint64_t v195 = (uint64_t)&v179 - v20;
  __chkstk_darwin();
  uint64_t v194 = (uint64_t)&v179 - v21;
  __chkstk_darwin();
  uint64_t v193 = (uint64_t)&v179 - v22;
  __chkstk_darwin();
  CGRect v202 = (char *)&v179 - v23;
  __chkstk_darwin();
  uint64_t v188 = (uint64_t)&v179 - v24;
  __chkstk_darwin();
  uint64_t v187 = (uint64_t)&v179 - v25;
  __chkstk_darwin();
  uint64_t v27 = (char *)&v179 - v26;
  __chkstk_darwin();
  uint64_t v29 = (long long *)((char *)&v179 - v28);
  CGRect v201 = v7;
  uint64_t v30 = (uint64_t)v7 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration;
  swift_beginAccess();
  outlined init with copy of SymbolButton.Configuration(v30, (uint64_t)v29, type metadata accessor for SymbolButton.Configuration);
  if (specialized static SymbolButton.Configuration.__derived_struct_equals(_:_:)(a1, v29))
  {
    uint64_t v31 = (uint64_t)v29;
LABEL_56:
    outlined destroy of SymbolButton.Configuration(v31, type metadata accessor for SymbolButton.Configuration);
    return;
  }
  outlined init with copy of SymbolButton.Configuration(a1, (uint64_t)v27, type metadata accessor for SymbolButton.Configuration);
  swift_beginAccess();
  CGPoint v181 = v27;
  outlined assign with take of SymbolButton.Configuration((uint64_t)v27, v30);
  swift_endAccess();
  UUID.init()();
  uint64_t v182 = UUID.uuidString.getter();
  unint64_t v199 = v32;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v204);
  uint64_t v180 = v14;
  uint64_t v33 = *(int *)(v14 + 36);
  uint64_t v204 = (uint64_t)v29;
  uint64_t v34 = a1 + v33;
  uint64_t v35 = (uint64_t)&v10[*((int *)v200 + 12)];
  outlined init with copy of (String, Any)((uint64_t)v29 + v33, (uint64_t)v10, &demangling cache variable for type metadata for UIView.Corner?);
  outlined init with copy of (String, Any)(v34, v35, &demangling cache variable for type metadata for UIView.Corner?);
  uint64_t v36 = type metadata accessor for UIView.Corner();
  uint64_t v37 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v36 - 8) + 48);
  int v38 = v37(v10, 1, v36);
  int v39 = v37((char *)v35, 1, v36);
  uint64_t v40 = a1;
  if (v38 != 1)
  {
    uint64_t v41 = (uint64_t)v202;
    if (v39 == 1) {
      goto LABEL_7;
    }
LABEL_8:
    outlined destroy of TaskPriority?((uint64_t)v10, &demangling cache variable for type metadata for (UIView.Corner?, UIView.Corner?));
    unint64_t v43 = v199;
    id v42 = v201;
    goto LABEL_9;
  }
  uint64_t v41 = (uint64_t)v202;
  if (v39 == 1) {
    goto LABEL_8;
  }
  outlined destroy of TaskPriority?(v35, &demangling cache variable for type metadata for UIView.Corner?);
LABEL_7:
  outlined destroy of TaskPriority?((uint64_t)v10, &demangling cache variable for type metadata for UIView.Corner?);
  id v42 = v201;
  *((unsigned char *)v201 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_isClippingInvalidated) = 1;
  unint64_t v43 = v199;
LABEL_9:
  [v42 invalidateIntrinsicContentSize];
  [v42 accessibilityUpdateSymbolButton];
  long long v44 = *(_OWORD *)(a1 + 80);
  long long v238 = *(_OWORD *)(a1 + 64);
  long long v239 = v44;
  long long v240 = *(_OWORD *)(a1 + 96);
  uint64_t v241 = *(void *)(a1 + 112);
  long long v45 = *(_OWORD *)(a1 + 16);
  long long v234 = *(_OWORD *)a1;
  long long v235 = v45;
  long long v46 = *(_OWORD *)(a1 + 48);
  long long v236 = *(_OWORD *)(a1 + 32);
  long long v237 = v46;
  id v47 = SymbolButton.Symbol.image.getter();
  [v42 setLargeContentImage:v47];

  id v48 = [v42 window];
  if (!v48 || (v192 & 1) != 0 || (double v49 = v189, v189 <= 0.0))
  {
    if (one-time initialization token for logger != -1) {
      swift_once();
    }
    uint64_t v62 = type metadata accessor for Logger();
    uint64_t v63 = __swift_project_value_buffer(v62, (uint64_t)static SymbolButton.logger);
    outlined init with copy of SymbolButton.Configuration(a1, v41, type metadata accessor for SymbolButton.Configuration);
    uint64_t v64 = v42;
    swift_bridgeObjectRetain_n();
    objc_super v65 = v64;
    CGRect v201 = (long long *)v63;
    objc_super v66 = Logger.logObject.getter();
    os_log_type_t v67 = static os_log_type_t.debug.getter();
    BOOL v68 = os_log_type_enabled(v66, v67);
    uint64_t v69 = v204;
    if (v68)
    {
      uint64_t v70 = swift_slowAlloc();
      CGRect v200 = (char *)swift_slowAlloc();
      *(void *)&long long v225 = v200;
      *(_DWORD *)uint64_t v70 = 136446722;
      uint64_t v71 = (uint64_t *)&v65[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_debugLabel];
      swift_beginAccess();
      unint64_t v72 = v71[1];
      if (v72)
      {
        uint64_t v73 = *v71;
        unint64_t v74 = v72;
      }
      else
      {
        CGPoint v192 = v65;
        id v75 = [v192 description];
        uint64_t v73 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v74 = v76;

        uint64_t v69 = v204;
      }
      swift_bridgeObjectRetain();
      *(void *)(v70 + 4) = _s2os32getNullTerminatedUTF8PointerImpl_21storingStringOwnersInSVSS_SpyypGSgztF_2(v73, v74, (uint64_t *)&v225);
      swift_bridgeObjectRelease();

      *(_WORD *)(v70 + 12) = 2082;
      swift_bridgeObjectRetain();
      *(void *)(v70 + 14) = _s2os32getNullTerminatedUTF8PointerImpl_21storingStringOwnersInSVSS_SpyypGSgztF_2(v182, v43, (uint64_t *)&v225);
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v70 + 22) = 2082;
      uint64_t v77 = (uint64_t)v202;
      unint64_t v78 = SymbolButton.Configuration.description.getter();
      *(void *)(v70 + 24) = _s2os32getNullTerminatedUTF8PointerImpl_21storingStringOwnersInSVSS_SpyypGSgztF_2(v78, v79, (uint64_t *)&v225);
      swift_bridgeObjectRelease();
      outlined destroy of SymbolButton.Configuration(v77, type metadata accessor for SymbolButton.Configuration);
      _os_log_impl((void *)&_mh_execute_header, v66, v67, "[%{public}s] UpdateID=%{public}s — Applying new configuration=%{public}s", (uint8_t *)v70, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
      outlined destroy of SymbolButton.Configuration(v41, type metadata accessor for SymbolButton.Configuration);
    }

    SymbolButton.apply(_:)(v40);
    uint64_t v80 = *(void *)(v203 + 16);
    if (v80)
    {
      uint64_t v81 = swift_bridgeObjectRetain() + 72;
      while (1)
      {
        id v83 = *(void (**)(char *))(v81 - 40);
        id v84 = *(void (**)(char *))(v81 - 8);
        if (v83)
        {
          outlined copy of (@escaping @callee_guaranteed () -> ())?((uint64_t)v84);
          outlined copy of (@escaping @callee_guaranteed () -> ())?((uint64_t)v83);
          v83(v65);
          if (v84) {
            goto LABEL_33;
          }
        }
        else
        {
          outlined copy of (@escaping @callee_guaranteed () -> ())?((uint64_t)v84);
          if (v84)
          {
LABEL_33:
            v84(v65);
            outlined consume of (@escaping @callee_guaranteed () -> ())?((uint64_t)v83);
            uint64_t v82 = (uint64_t)v84;
            goto LABEL_28;
          }
        }
        uint64_t v82 = (uint64_t)v83;
LABEL_28:
        outlined consume of (@escaping @callee_guaranteed () -> ())?(v82);
        v81 += 48;
        if (!--v80)
        {
          swift_bridgeObjectRelease();
          uint64_t v69 = v204;
          break;
        }
      }
    }
    uint64_t v85 = *(void *)(v69 + 8);
    id v87 = *(void **)(v69 + 16);
    id v86 = *(void **)(v69 + 24);
    uint64_t v88 = *(void *)(v69 + 32);
    uint64_t v89 = *(unsigned __int8 *)(v69 + 40);
    uint64_t v90 = *(unsigned __int8 *)(v69 + 80);
    uint64_t v91 = *(void *)(v69 + 88);
    uint64_t v92 = *(void **)(v69 + 112);
    v218[0] = *(void *)v69;
    v218[1] = v85;
    v218[2] = v87;
    v218[3] = v86;
    v218[4] = v88;
    v218[5] = v89;
    long long v93 = *(_OWORD *)(v69 + 64);
    long long v219 = *(_OWORD *)(v69 + 48);
    long long v220 = v93;
    uint64_t v221 = v90;
    uint64_t v222 = v91;
    long long v223 = *(_OWORD *)(v69 + 96);
    Swift::String v224 = v92;
    id v94 = *(void **)(v40 + 32);
    uint64_t v95 = (void *)*(unsigned __int8 *)(v40 + 40);
    uint64_t v96 = *(unsigned __int8 *)(v40 + 80);
    long long v97 = *(_OWORD *)(v40 + 16);
    long long v225 = *(_OWORD *)v40;
    long long v226 = v97;
    long long v227 = v94;
    uint64_t v228 = v95;
    long long v98 = *(_OWORD *)(v40 + 64);
    long long v229 = *(_OWORD *)(v40 + 48);
    long long v230 = v98;
    uint64_t v231 = v96;
    long long v232 = *(_OWORD *)(v40 + 88);
    long long v233 = *(_OWORD *)(v40 + 104);
    id v99 = v92;
    swift_bridgeObjectRetain();
    id v100 = v87;
    id v101 = v86;
    swift_bridgeObjectRetain();
    char v102 = specialized static SymbolButton.Symbol.hasSignificantChanges(from:to:)((uint64_t)v218, (uint64_t)&v225);
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    uint64_t v103 = v204;
    uint64_t v104 = v193;
    outlined init with copy of SymbolButton.Configuration(v204, v193, type metadata accessor for SymbolButton.Configuration);
    uint64_t v105 = v194;
    outlined init with copy of SymbolButton.Configuration(v40, v194, type metadata accessor for SymbolButton.Configuration);
    if (v102)
    {
      outlined destroy of SymbolButton.Configuration(v104, type metadata accessor for SymbolButton.Configuration);
      outlined destroy of SymbolButton.Configuration(v105, type metadata accessor for SymbolButton.Configuration);
      uint64_t v106 = v195;
      outlined init with copy of SymbolButton.Configuration(v103, v195, type metadata accessor for SymbolButton.Configuration);
      uint64_t v107 = v196;
      outlined init with copy of SymbolButton.Configuration(v40, v196, type metadata accessor for SymbolButton.Configuration);
      uint64_t v108 = (uint64_t)v198;
    }
    else
    {
      long long v206 = *(_OWORD *)(v104 + 120);
      long long v109 = *(_OWORD *)(v104 + 160);
      long long v208 = *(_OWORD *)(v104 + 144);
      long long v209 = v109;
      long long v212 = *(_OWORD *)(v105 + 120);
      long long v110 = *(_OWORD *)(v105 + 160);
      long long v214 = *(_OWORD *)(v105 + 144);
      uint64_t v111 = *(void *)(v104 + 176);
      char v112 = *(unsigned char *)(v104 + 184);
      uint64_t v207 = *(void *)(v104 + 136);
      uint64_t v210 = v111;
      char v211 = v112;
      uint64_t v113 = *(void *)(v105 + 136);
      uint64_t v114 = *(void *)(v105 + 176);
      char v115 = *(unsigned char *)(v105 + 184);
      long long v215 = v110;
      uint64_t v213 = v113;
      uint64_t v216 = v114;
      char v217 = v115;
      char v116 = specialized static SymbolButton.Title.hasSignificantChanges(from:to:)((uint64_t)&v206, (uint64_t)&v212);
      outlined destroy of SymbolButton.Configuration(v104, type metadata accessor for SymbolButton.Configuration);
      outlined destroy of SymbolButton.Configuration(v105, type metadata accessor for SymbolButton.Configuration);
      uint64_t v106 = v195;
      outlined init with copy of SymbolButton.Configuration(v103, v195, type metadata accessor for SymbolButton.Configuration);
      uint64_t v107 = v196;
      outlined init with copy of SymbolButton.Configuration(v40, v196, type metadata accessor for SymbolButton.Configuration);
      uint64_t v108 = (uint64_t)v198;
      if ((v116 & 1) == 0)
      {
        int v129 = (*(void *)(v106 + 128) != 0) & (*(unsigned __int8 *)(v106 + 184) ^ 1);
        int v130 = (*(void *)(v107 + 128) != 0) & (*(unsigned __int8 *)(v107 + 184) ^ 1);
        outlined destroy of SymbolButton.Configuration(v106, type metadata accessor for SymbolButton.Configuration);
        outlined destroy of SymbolButton.Configuration(v107, type metadata accessor for SymbolButton.Configuration);
        uint64_t v117 = v197;
        outlined init with copy of SymbolButton.Configuration(v103, v197, type metadata accessor for SymbolButton.Configuration);
        outlined init with copy of SymbolButton.Configuration(v40, v108, type metadata accessor for SymbolButton.Configuration);
        uint64_t v131 = v180;
        if (v129 == v130)
        {
          uint64_t v132 = *(int *)(v180 + 40);
          uint64_t v133 = *(void *)(v117 + v132);
          uint64_t v134 = *(void *)(v108 + v132);
          BOOL v135 = v134 == 0;
          if (v133)
          {
            if (!v134) {
              goto LABEL_39;
            }
            BOOL v135 = v133 == v134;
          }
          outlined destroy of SymbolButton.Configuration(v117, type metadata accessor for SymbolButton.Configuration);
          outlined destroy of SymbolButton.Configuration(v108, type metadata accessor for SymbolButton.Configuration);
          uint64_t v118 = v191;
          outlined init with copy of SymbolButton.Configuration(v103, v191, type metadata accessor for SymbolButton.Configuration);
          uint64_t v119 = v190;
          outlined init with copy of SymbolButton.Configuration(v40, v190, type metadata accessor for SymbolButton.Configuration);
          if (v135)
          {
            uint64_t v136 = *(int *)(v131 + 44);
            uint64_t v137 = *(void *)(v118 + v136 + 16);
            uint64_t v138 = *(void *)(v119 + v136 + 16);
            if (v137 == 1)
            {
              if (v138 != 1) {
                goto LABEL_40;
              }
            }
            else if (v138 == 1)
            {
              goto LABEL_40;
            }
            outlined destroy of SymbolButton.Configuration(v119, type metadata accessor for SymbolButton.Configuration);
            outlined destroy of SymbolButton.Configuration(v118, type metadata accessor for SymbolButton.Configuration);
            goto LABEL_41;
          }
LABEL_40:
          outlined destroy of SymbolButton.Configuration(v119, type metadata accessor for SymbolButton.Configuration);
          outlined destroy of SymbolButton.Configuration(v118, type metadata accessor for SymbolButton.Configuration);
          [v65 setNeedsLayout];
LABEL_41:
          __int16 v120 = v65;
          unint64_t v121 = v199;
          swift_bridgeObjectRetain();
          double v122 = Logger.logObject.getter();
          os_log_type_t v123 = static os_log_type_t.debug.getter();
          if (os_log_type_enabled(v122, v123))
          {
            uint64_t v124 = swift_slowAlloc();
            v205[0] = swift_slowAlloc();
            *(_DWORD *)uint64_t v124 = 136446466;
            __int16 v125 = (uint64_t *)&v120[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_debugLabel];
            swift_beginAccess();
            unint64_t v126 = v125[1];
            if (v126)
            {
              uint64_t v127 = *v125;
              unint64_t v128 = v126;
            }
            else
            {
              id v139 = [v120 description];
              uint64_t v127 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              unint64_t v128 = v140;
            }
            swift_bridgeObjectRetain();
            *(void *)(v124 + 4) = _s2os32getNullTerminatedUTF8PointerImpl_21storingStringOwnersInSVSS_SpyypGSgztF_2(v127, v128, v205);
            swift_bridgeObjectRelease();

            *(_WORD *)(v124 + 12) = 2082;
            swift_bridgeObjectRetain();
            *(void *)(v124 + 14) = _s2os32getNullTerminatedUTF8PointerImpl_21storingStringOwnersInSVSS_SpyypGSgztF_2(v182, v121, v205);
            swift_bridgeObjectRelease_n();
            _os_log_impl((void *)&_mh_execute_header, v122, v123, "[%{public}s] UpdateID=%{public}s — Updated ✅", (uint8_t *)v124, 0x16u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {

            swift_bridgeObjectRelease_n();
          }
          uint64_t v31 = v204;
          goto LABEL_56;
        }
LABEL_39:
        outlined destroy of SymbolButton.Configuration(v117, type metadata accessor for SymbolButton.Configuration);
        outlined destroy of SymbolButton.Configuration(v108, type metadata accessor for SymbolButton.Configuration);
        uint64_t v118 = v191;
        outlined init with copy of SymbolButton.Configuration(v103, v191, type metadata accessor for SymbolButton.Configuration);
        uint64_t v119 = v190;
        outlined init with copy of SymbolButton.Configuration(v40, v190, type metadata accessor for SymbolButton.Configuration);
        goto LABEL_40;
      }
    }
    outlined destroy of SymbolButton.Configuration(v106, type metadata accessor for SymbolButton.Configuration);
    outlined destroy of SymbolButton.Configuration(v107, type metadata accessor for SymbolButton.Configuration);
    uint64_t v117 = v197;
    outlined init with copy of SymbolButton.Configuration(v103, v197, type metadata accessor for SymbolButton.Configuration);
    outlined init with copy of SymbolButton.Configuration(v40, v108, type metadata accessor for SymbolButton.Configuration);
    goto LABEL_39;
  }
  if (one-time initialization token for logger != -1) {
    swift_once();
  }
  uint64_t v50 = type metadata accessor for Logger();
  __swift_project_value_buffer(v50, (uint64_t)static SymbolButton.logger);
  uint64_t v51 = v187;
  outlined init with copy of SymbolButton.Configuration(a1, v187, type metadata accessor for SymbolButton.Configuration);
  uint64_t v52 = v42;
  swift_bridgeObjectRetain_n();
  UIAccessibilityTraits v53 = v52;
  id v54 = Logger.logObject.getter();
  int v55 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v54, (os_log_type_t)v55))
  {
    LODWORD(v202) = v55;
    uint64_t v56 = swift_slowAlloc();
    CGRect v201 = (long long *)swift_slowAlloc();
    *(void *)&long long v225 = v201;
    *(_DWORD *)uint64_t v56 = 136446722;
    id v57 = (uint64_t *)&v53[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_debugLabel];
    swift_beginAccess();
    unint64_t v58 = v57[1];
    if (v58)
    {
      uint64_t v59 = *v57;
      uint64_t v60 = v53;
      unint64_t v61 = v58;
    }
    else
    {
      CGRect v200 = v53;
      id v141 = [v200 description];
      uint64_t v59 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v60 = v53;
      unint64_t v61 = v142;

      uint64_t v51 = v187;
    }
    swift_bridgeObjectRetain();
    *(void *)(v56 + 4) = _s2os32getNullTerminatedUTF8PointerImpl_21storingStringOwnersInSVSS_SpyypGSgztF_2(v59, v61, (uint64_t *)&v225);
    swift_bridgeObjectRelease();

    *(_WORD *)(v56 + 12) = 2082;
    swift_bridgeObjectRetain();
    *(void *)(v56 + 14) = _s2os32getNullTerminatedUTF8PointerImpl_21storingStringOwnersInSVSS_SpyypGSgztF_2(v182, v43, (uint64_t *)&v225);
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v56 + 22) = 2082;
    unint64_t v143 = SymbolButton.Configuration.description.getter();
    *(void *)(v56 + 24) = _s2os32getNullTerminatedUTF8PointerImpl_21storingStringOwnersInSVSS_SpyypGSgztF_2(v143, v144, (uint64_t *)&v225);
    swift_bridgeObjectRelease();
    outlined destroy of SymbolButton.Configuration(v51, type metadata accessor for SymbolButton.Configuration);
    _os_log_impl((void *)&_mh_execute_header, v54, (os_log_type_t)v202, "[%{public}s] UpdateID=%{public}s — Animating to new configuration=%{public}s", (uint8_t *)v56, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    UIAccessibilityTraits v53 = v60;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    outlined destroy of SymbolButton.Configuration(v51, type metadata accessor for SymbolButton.Configuration);
  }
  uint64_t v145 = (uint64_t)v181;
  uint64_t v146 = *(void *)&v53[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_pendingAnimatedChangesCount];
  uint64_t v147 = v146 + 1;
  uint64_t v148 = v188;
  if (__OFADD__(v146, 1))
  {
    __break(1u);
  }
  else
  {
    *(void *)&v53[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_pendingAnimatedChangesCount] = v147;
    if (v147 != v146) {
      SymbolButton.applyMaterialGroupNameIfNeeded()();
    }
    uint64_t v149 = swift_allocObject();
    CGRect v198 = (char *)v149;
    *(void *)(v149 + 16) = _swiftEmptyArrayStorage;
    CGRect v201 = (long long *)(v149 + 16);
    CGRect v202 = (char *)self;
    outlined init with copy of SymbolButton.Configuration(v204, v145, type metadata accessor for SymbolButton.Configuration);
    outlined init with copy of SymbolButton.Configuration(v40, v148, type metadata accessor for SymbolButton.Configuration);
    uint64_t v150 = *(unsigned __int8 *)(v186 + 80);
    uint64_t v151 = (v150 + 16) & ~v150;
    uint64_t v195 = v15 + v150;
    uint64_t v196 = v150;
    CGRect v200 = v53;
    uint64_t v152 = (v151 + v15 + v150) & ~v150;
    uint64_t v194 = v15 + 7;
    unint64_t v153 = (v152 + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v197 = v150 | 7;
    uint64_t v154 = swift_allocObject();
    outlined init with take of SymbolButton.Configuration(v145, v154 + v151, type metadata accessor for SymbolButton.Configuration);
    outlined init with take of SymbolButton.Configuration(v148, v154 + v152, type metadata accessor for SymbolButton.Configuration);
    char v156 = v200;
    CGFloat v155 = v201;
    *(void *)(v154 + v153) = v200;
    *(void *)(v154 + ((v153 + 15) & 0xFFFFFFFFFFFFFFF8)) = v155;
    uint64_t v157 = swift_allocObject();
    *(void *)(v157 + 16) = partial apply for closure #2 in SymbolButton.setConfiguration(_:animation:updates:);
    *(void *)(v157 + 24) = v154;
    uint64_t v193 = v154;
    long long v227 = partial apply for thunk for @escaping @callee_guaranteed () -> ();
    uint64_t v228 = (void *)v157;
    *(void *)&long long v225 = _NSConcreteStackBlock;
    *((void *)&v225 + 1) = 1107296256;
    CGRect v201 = &v226;
    *(void *)&long long v226 = thunk for @escaping @callee_guaranteed () -> ();
    *((void *)&v226 + 1) = &block_descriptor_71;
    uint64_t v158 = _Block_copy(&v225);
    uint64_t v159 = v156;
    swift_retain();
    swift_release();
    [v202 performWithoutAnimation:v158];
    _Block_release(v158);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0)
    {
      double v161 = v183;
      uint64_t v162 = v196;
      uint64_t v163 = ~v196;
      uint64_t v164 = (uint64_t)v181;
      outlined init with copy of SymbolButton.Configuration(v40, (uint64_t)v181, type metadata accessor for SymbolButton.Configuration);
      uint64_t v165 = v188;
      outlined init with copy of SymbolButton.Configuration(v204, v188, type metadata accessor for SymbolButton.Configuration);
      uint64_t v166 = (v162 + 24) & v163;
      uint64_t v167 = (v166 + v195) & v163;
      unint64_t v168 = (v167 + v194) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v169 = swift_allocObject();
      *(void *)(v169 + 16) = v159;
      outlined init with take of SymbolButton.Configuration(v164, v169 + v166, type metadata accessor for SymbolButton.Configuration);
      outlined init with take of SymbolButton.Configuration(v165, v169 + v167, type metadata accessor for SymbolButton.Configuration);
      unsigned __int8 v170 = v198;
      *(void *)(v169 + v168) = v198;
      uint64_t v171 = v203;
      *(void *)(v169 + ((v168 + 15) & 0xFFFFFFFFFFFFFFF8)) = v203;
      long long v227 = partial apply for closure #3 in SymbolButton.setConfiguration(_:animation:updates:);
      uint64_t v228 = (void *)v169;
      *(void *)&long long v225 = _NSConcreteStackBlock;
      *((void *)&v225 + 1) = 1107296256;
      *(void *)&long long v226 = thunk for @escaping @callee_guaranteed @Sendable () -> ();
      *((void *)&v226 + 1) = &block_descriptor_21_2;
      double v172 = _Block_copy(&v225);
      uint64_t v173 = v159;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_release();
      CGAffineTransform v174 = (void *)swift_allocObject();
      v174[2] = v170;
      v174[3] = v173;
      uint64_t v175 = v182;
      v174[4] = v171;
      v174[5] = v175;
      uint64_t v176 = ObjectType;
      v174[6] = v199;
      v174[7] = v176;
      long long v227 = partial apply for closure #4 in SymbolButton.setConfiguration(_:animation:updates:);
      uint64_t v228 = v174;
      *(void *)&long long v225 = _NSConcreteStackBlock;
      *((void *)&v225 + 1) = 1107296256;
      *(void *)&long long v226 = thunk for @escaping @callee_guaranteed (@unowned Bool) -> ();
      *((void *)&v226 + 1) = &block_descriptor_27_0;
      uint64_t v177 = _Block_copy(&v225);
      long long v178 = v173;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_release();
      [v202 animateKeyframesWithDuration:v185 delay:v172 options:v177 animations:v49 completion:v161];
      _Block_release(v177);
      _Block_release(v172);
      outlined destroy of SymbolButton.Configuration(v204, type metadata accessor for SymbolButton.Configuration);
      swift_release();
      swift_release();
      return;
    }
  }
  __break(1u);
}

id SymbolButton.Symbol.image.getter()
{
  if (!*(void *)(v0 + 8)) {
    return 0;
  }
  swift_bridgeObjectRetain();
  NSString v1 = String._bridgeToObjectiveC()();
  uint64_t v2 = self;
  id v3 = [v2 _systemImageNamed:v1];

  if (v3)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    id v4 = *(id *)(v0 + 16);
    NSString v5 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v3 = [v2 imageNamed:v5 inBundle:v4];
  }
  return v3;
}

BOOL static SymbolButton.CustomView.hasSignificantChanges(from:to:)(uint64_t a1, uint64_t a2)
{
  outlined init with take of PresentationSource?(a2, (uint64_t)v8, &demangling cache variable for type metadata for SymbolButton.CustomView?);
  uint64_t v3 = v8[0];
  outlined init with take of PresentationSource?(a1, (uint64_t)v7, &demangling cache variable for type metadata for SymbolButton.CustomView?);
  if (v7[0]) {
    BOOL v4 = v3 == 0;
  }
  else {
    BOOL v4 = 1;
  }
  if (v4) {
    BOOL v5 = (v7[0] | v3) == 0;
  }
  else {
    BOOL v5 = v7[0] == v3;
  }
  return !v5;
}

void closure #2 in SymbolButton.setConfiguration(_:animation:updates:)(uint64_t *a1, uint64_t a2, char *a3, char **a4)
{
  uint64_t v137 = a4;
  uint64_t v136 = (int *)type metadata accessor for SymbolButton.Configuration(0);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v131 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v9 = *((_OWORD *)a1 + 4);
  long long v164 = *((_OWORD *)a1 + 3);
  long long v165 = v9;
  long long v167 = *(_OWORD *)(a1 + 11);
  long long v168 = *(_OWORD *)(a1 + 13);
  long long v10 = *(_OWORD *)(a2 + 48);
  long long v11 = *(_OWORD *)(a2 + 80);
  long long v155 = *(_OWORD *)(a2 + 64);
  long long v156 = v11;
  long long v157 = *(_OWORD *)(a2 + 96);
  long long v12 = *(_OWORD *)(a2 + 16);
  v154[0] = *(_OWORD *)a2;
  v154[1] = v12;
  long long v13 = *(_OWORD *)(a2 + 48);
  v154[2] = *(_OWORD *)(a2 + 32);
  v154[3] = v13;
  uint64_t v14 = *a1;
  uint64_t v15 = a1[3];
  uint64_t v16 = a1[4];
  uint64_t v17 = *((unsigned __int8 *)a1 + 40);
  uint64_t v18 = *((unsigned __int8 *)a1 + 80);
  v169[0] = v154[0];
  v169[1] = v12;
  long long v135 = *(_OWORD *)(a1 + 1);
  long long v160 = v135;
  uint64_t v159 = v14;
  uint64_t v161 = v15;
  uint64_t v162 = v16;
  uint64_t v163 = v17;
  uint64_t v166 = v18;
  uint64_t v158 = *(void *)(a2 + 112);
  uint64_t v19 = *(unsigned __int8 *)(a2 + 40);
  uint64_t v20 = *(unsigned __int8 *)(a2 + 80);
  uint64_t v170 = *(void *)(a2 + 32);
  uint64_t v171 = v19;
  long long v172 = v10;
  long long v173 = v155;
  uint64_t v174 = v20;
  long long v21 = *(_OWORD *)(a2 + 104);
  long long v175 = *(_OWORD *)(a2 + 88);
  long long v176 = v21;
  if (specialized static SymbolButton.Symbol.hasSignificantChanges(from:to:)((uint64_t)&v159, (uint64_t)v169))
  {
    id v22 = SymbolButton.imageView.getter();
    uint64_t v23 = (objc_class *)type metadata accessor for SymbolButton.ImageView();
    id v24 = objc_allocWithZone(v23);
    outlined retain of SymbolButton.Symbol((uint64_t)v154);
    v138.receiver = v24;
    v138.super_class = v23;
    id v25 = objc_msgSendSuper2(&v138, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
    [v25 setAdjustsImageSizeForAccessibilityContentSizeCategory:0];
    [v25 setContentMode:4];
    SymbolButton.ImageView.apply(_:)((uint64_t)v154);
    outlined release of SymbolButton.Symbol((uint64_t)v154);
    id v26 = v25;
    id v27 = [v22 preferredSymbolConfiguration];
    [v26 setPreferredSymbolConfiguration:v27];

    id v28 = v26;
    [v22 frame];
    objc_msgSend(v28, "setFrame:");

    uint64_t v29 = *(void **)&a3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton____lazy_storage___imageView];
    *(void *)&a3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton____lazy_storage___imageView] = v28;

    id v30 = SymbolButton.imageView.getter();
    [v30 setAlpha:0.0];

    id v31 = SymbolButton.imageView.getter();
    unint64_t v32 = *(void **)&a3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_backgroundView];
    if (([v31 isDescendantOfView:v32] & 1) == 0) {
      [v32 addSubview:v31];
    }

    outlined init with copy of SymbolButton.Configuration(a2, (uint64_t)v8, type metadata accessor for SymbolButton.Configuration);
    if ((void)v135)
    {
      outlined destroy of SymbolButton.Configuration((uint64_t)v8, type metadata accessor for SymbolButton.Configuration);
    }
    else
    {
      uint64_t v33 = *((void *)v8 + 1);
      outlined destroy of SymbolButton.Configuration((uint64_t)v8, type metadata accessor for SymbolButton.Configuration);
      if (v33)
      {
        [a3 setNeedsLayout];
        [a3 layoutIfNeeded];
      }
    }
    id v34 = SymbolButton.imageView.getter();
    uint64_t v35 = *(void *)(a2 + 104);
    uint64_t v36 = v137;
    uint64_t v37 = *v137;
    id v38 = v22;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v36 = v37;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v37 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *((void *)v37 + 2) + 1, 1, v37);
      *uint64_t v137 = v37;
    }
    unint64_t v41 = *((void *)v37 + 2);
    unint64_t v40 = *((void *)v37 + 3);
    if (v41 >= v40 >> 1) {
      uint64_t v37 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((char *)(v40 > 1), v41 + 1, 1, v37);
    }
    *((void *)v37 + 2) = v41 + 1;
    id v42 = &v37[88 * v41];
    *((void *)v42 + 4) = v34;
    *((void *)v42 + 5) = v35;
    *((void *)v42 + 6) = 0;
    *((void *)v42 + 7) = 0;
    *((void *)v42 + 8) = 0;
    *((void *)v42 + 9) = v38;
    *((_OWORD *)v42 + 5) = xmmword_100493CF0;
    *((void *)v42 + 12) = 0;
    *((void *)v42 + 13) = 0;
    v42[112] = 0;
    *uint64_t v137 = v37;
  }
  uint64_t v43 = a1[17];
  uint64_t v44 = a1[22];
  char v45 = *((unsigned char *)a1 + 184);
  long long v139 = *(_OWORD *)(a1 + 15);
  uint64_t v140 = v43;
  long long v46 = *((_OWORD *)a1 + 10);
  long long v141 = *((_OWORD *)a1 + 9);
  long long v142 = v46;
  uint64_t v143 = v44;
  char v144 = v45;
  long long v47 = *(_OWORD *)(a2 + 136);
  long long v48 = *(_OWORD *)(a2 + 168);
  v151[2] = *(_OWORD *)(a2 + 152);
  long long v152 = v48;
  char v153 = *(unsigned char *)(a2 + 184);
  v151[0] = *(_OWORD *)(a2 + 120);
  v151[1] = v47;
  uint64_t v49 = *(void *)(a2 + 136);
  uint64_t v50 = *(void *)(a2 + 176);
  char v51 = *(unsigned char *)(a2 + 184);
  long long v145 = *(_OWORD *)(a2 + 120);
  uint64_t v146 = v49;
  long long v147 = *(_OWORD *)(a2 + 144);
  long long v148 = *(_OWORD *)(a2 + 160);
  uint64_t v149 = v50;
  char v150 = v51;
  if (specialized static SymbolButton.Title.hasSignificantChanges(from:to:)((uint64_t)&v139, (uint64_t)&v145))
  {
    id v52 = SymbolButton.titleLabel.getter();
    id v53 = objc_allocWithZone((Class)type metadata accessor for SymbolButton.Label());
    outlined retain of SymbolButton.Title((uint64_t)v151);
    id v54 = SymbolButton.Label.init(configuration:)((uint64_t)v151);
    id v55 = [v52 font];
    [v54 setFont:v55];

    id v56 = v54;
    [v52 frame];
    objc_msgSend(v56, "setFrame:");

    id v57 = *(void **)&a3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton____lazy_storage___titleLabel];
    *(void *)&a3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton____lazy_storage___titleLabel] = v56;

    id v58 = SymbolButton.titleLabel.getter();
    [v58 setAlpha:0.0];

    id v59 = SymbolButton.titleLabel.getter();
    uint64_t v60 = *(void **)&a3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_backgroundView];
    if (([v59 isDescendantOfView:v60] & 1) == 0) {
      [v60 addSubview:v59];
    }

    *(void *)&long long v135 = v152;
    id v61 = SymbolButton.titleLabel.getter();
    id v62 = v52;
    BOOL v63 = specialized static SymbolButton.Title.preferredTransitionStyle(from:to:)((uint64_t)&v139, (uint64_t)&v145);
    uint64_t v64 = v137;
    objc_super v65 = *v137;
    char v66 = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v64 = v65;
    if ((v66 & 1) == 0)
    {
      objc_super v65 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *((void *)v65 + 2) + 1, 1, v65);
      *uint64_t v137 = v65;
    }
    unint64_t v68 = *((void *)v65 + 2);
    unint64_t v67 = *((void *)v65 + 3);
    if (v68 >= v67 >> 1) {
      objc_super v65 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((char *)(v67 > 1), v68 + 1, 1, v65);
    }
    *((void *)v65 + 2) = v68 + 1;
    uint64_t v69 = &v65[88 * v68];
    uint64_t v70 = v135;
    *((void *)v69 + 4) = v61;
    *((void *)v69 + 5) = v70;
    *((void *)v69 + 6) = 0;
    *((void *)v69 + 7) = 0;
    *((void *)v69 + 8) = 0;
    *((void *)v69 + 9) = v62;
    *((_OWORD *)v69 + 5) = xmmword_100493CF0;
    *((void *)v69 + 12) = 0;
    *((void *)v69 + 13) = 0;
    v69[112] = v63;
    *uint64_t v137 = v65;
  }
  uint64_t v71 = v136[10];
  unint64_t v72 = *(void **)((char *)a1 + v71);
  uint64_t v73 = a2 + v71;
  unint64_t v74 = *(void **)v73;
  uint64_t v75 = *(void *)(v73 + 40);
  if (v72)
  {
    if (v74 && v72 == v74) {
      goto LABEL_40;
    }
    if (!v74)
    {
      unint64_t v76 = 0;
      goto LABEL_28;
    }
  }
  else if (!v74)
  {
    goto LABEL_40;
  }
  id v77 = v74;
  unint64_t v76 = v74;
LABEL_28:
  specialized SymbolButton.customView.setter(v76);

  uint64_t v78 = OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_customView;
  unint64_t v79 = *(void **)&a3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_customView];
  if (v79) {
    [v79 setAlpha:0.0];
  }
  SymbolButton.layoutCustomViewIfNeeded()();
  [*(id *)&a3[v78] layoutIfNeeded];
  if (!v74)
  {
    uint64_t v75 = 0;
    if (v72) {
      goto LABEL_32;
    }
LABEL_34:
    *(void *)&long long v135 = 0;
    goto LABEL_35;
  }
  id v80 = v74;
  if (!v72) {
    goto LABEL_34;
  }
LABEL_32:
  id v81 = v72;
  *(void *)&long long v135 = 1;
LABEL_35:
  uint64_t v82 = a3;
  id v83 = v137;
  id v84 = *v137;
  char v85 = swift_isUniquelyReferenced_nonNull_native();
  *id v83 = v84;
  uint64_t v86 = v75;
  if ((v85 & 1) == 0)
  {
    id v84 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *((void *)v84 + 2) + 1, 1, v84);
    *uint64_t v137 = v84;
  }
  unint64_t v88 = *((void *)v84 + 2);
  unint64_t v87 = *((void *)v84 + 3);
  if (v88 >= v87 >> 1) {
    id v84 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((char *)(v87 > 1), v88 + 1, 1, v84);
  }
  *((void *)v84 + 2) = v88 + 1;
  uint64_t v89 = &v84[88 * v88];
  *((void *)v89 + 4) = v74;
  *((void *)v89 + 5) = v86;
  *((void *)v89 + 6) = 0;
  *((void *)v89 + 7) = 0;
  *((void *)v89 + 8) = 0;
  *((void *)v89 + 9) = v72;
  uint64_t v90 = v135;
  *((void *)v89 + 10) = 0;
  *((void *)v89 + 11) = v90;
  *((void *)v89 + 12) = 0;
  *((void *)v89 + 13) = 0;
  v89[112] = 0;
  *uint64_t v137 = v84;
  a3 = v82;
LABEL_40:
  uint64_t v91 = v136[11];
  uint64_t v92 = *(uint64_t *)((char *)a1 + v91 + 16);
  long long v93 = (uint64_t *)(a2 + v91);
  id v94 = (void *)v93[2];
  if (v92 != 1)
  {
    if (v94 != (void *)1) {
      return;
    }
    uint64_t v95 = (id *)&a3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_badgeView];
    uint64_t v96 = *(void **)&a3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_badgeView];
    *(void *)&a3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_badgeView] = 0;
    id v97 = v96;
    if (v96)
    {
      long long v98 = v97;
      [v97 removeFromSuperview];
      if (*v95)
      {
        id v99 = *(void **)&a3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_containerView];
        uint64_t v100 = *(void *)&a3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_materialView];
        id v101 = *v95;
        [v99 insertSubview:v101 aboveSubview:v100];
        SymbolButton.layoutBadgeViewIfNeeded()();
      }
      uint64_t v102 = 0;
    }
    else
    {
      uint64_t v102 = 0;
    }
    goto LABEL_63;
  }
  if (v94 == (void *)1) {
    return;
  }
  uint64_t v103 = *v93;
  uint64_t v102 = v93[1];
  uint64_t v95 = (id *)&a3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_badgeView];
  uint64_t v96 = *(void **)&a3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_badgeView];
  uint64_t v104 = (objc_class *)type metadata accessor for SymbolButton.BadgeView();
  id v105 = objc_allocWithZone(v104);
  outlined copy of SymbolButton.Badge?(v103, v102, v94);
  uint64_t v134 = v104;
  if (v96)
  {
    id v106 = v96;
    outlined copy of SymbolButton.Badge?(v103, v102, v94);
  }
  else
  {
    id v107 = v94;
  }
  uint64_t v108 = SymbolButton.BadgeView.init(configuration:)(v94, *(double *)&v103, *(double *)&v102);
  id v109 = *v95;
  *uint64_t v95 = v108;
  long long v110 = v108;
  *(void *)&long long v135 = v103;
  uint64_t v136 = (int *)v110;
  if (v108)
  {
    if (!v109) {
      goto LABEL_57;
    }
    uint64_t v111 = (objc_class *)v109;
    uint64_t v132 = 1;
    char v112 = v111;
    uint64_t v113 = v136;
    char v114 = static NSObject.== infix(_:_:)();
    uint64_t v134 = v112;

    uint64_t v92 = v132;
    if (v114)
    {
      id v109 = v134;
LABEL_59:

      goto LABEL_60;
    }
LABEL_56:
    [v109 removeFromSuperview];
    uint64_t v108 = (char *)*v95;
    if (!*v95)
    {
LABEL_58:
      uint64_t v113 = v136;
      goto LABEL_59;
    }
LABEL_57:
    char v115 = *(void **)&a3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_containerView];
    char v116 = *(objc_class **)&a3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_materialView];
    id v133 = v109;
    uint64_t v134 = v116;
    uint64_t v117 = v108;
    [v115 insertSubview:v117 aboveSubview:v134];
    SymbolButton.layoutBadgeViewIfNeeded()();

    id v109 = v133;
    goto LABEL_58;
  }
  if (v109) {
    goto LABEL_56;
  }
LABEL_60:
  uint64_t v118 = v135;

  if (*v95) {
    [*v95 setAlpha:0.0];
  }
  SymbolButton.layoutBadgeViewIfNeeded()();
  outlined consume of SymbolButton.Badge?(v118, v102, (uint64_t)v94);
LABEL_63:
  BOOL v119 = v92 != 1;
  id v120 = *v95;
  if (*v95) {
    uint64_t v121 = v102;
  }
  else {
    uint64_t v121 = 0;
  }
  if (*v95) {
    BOOL v122 = v119;
  }
  else {
    BOOL v122 = 0;
  }
  os_log_type_t v123 = v137;
  uint64_t v124 = *v137;
  id v125 = v120;
  id v126 = v96;
  char v127 = swift_isUniquelyReferenced_nonNull_native();
  char *v123 = v124;
  if ((v127 & 1) == 0)
  {
    uint64_t v124 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *((void *)v124 + 2) + 1, 1, v124);
    *uint64_t v137 = v124;
  }
  unint64_t v129 = *((void *)v124 + 2);
  unint64_t v128 = *((void *)v124 + 3);
  if (v129 >= v128 >> 1) {
    uint64_t v124 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((char *)(v128 > 1), v129 + 1, 1, v124);
  }
  *((void *)v124 + 2) = v129 + 1;
  int v130 = &v124[88 * v129];
  *((void *)v130 + 4) = v120;
  *((void *)v130 + 5) = v121;
  *((void *)v130 + 6) = v122;
  *((void *)v130 + 7) = 0;
  *((void *)v130 + 8) = 0;
  *((void *)v130 + 9) = v96;
  *((void *)v130 + 10) = 0;
  *((void *)v130 + 11) = v96 != 0;
  *((void *)v130 + 12) = 0;
  *((void *)v130 + 13) = 0;
  v130[112] = 0;
  *uint64_t v137 = v124;
}

uint64_t closure #3 in SymbolButton.setConfiguration(_:animation:updates:)(void *a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v79 = a5;
  id v80 = a4;
  uint64_t v8 = *(void *)(type metadata accessor for SymbolButton.Configuration(0) - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin();
  long long v10 = (char *)&v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  long long v12 = (char *)&v67 - v11;
  id v74 = self;
  outlined init with copy of SymbolButton.Configuration(a2, (uint64_t)v12, type metadata accessor for SymbolButton.Configuration);
  outlined init with copy of SymbolButton.Configuration(a3, (uint64_t)v10, type metadata accessor for SymbolButton.Configuration);
  uint64_t v13 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v14 = (v13 + 24) & ~v13;
  uint64_t v15 = (v9 + v13 + v14) & ~v13;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a1;
  outlined init with take of SymbolButton.Configuration((uint64_t)v12, v16 + v14, type metadata accessor for SymbolButton.Configuration);
  outlined init with take of SymbolButton.Configuration((uint64_t)v10, v16 + v15, type metadata accessor for SymbolButton.Configuration);
  *(void *)(v16 + ((v9 + v15 + 7) & 0xFFFFFFFFFFFFFFF8)) = v80;
  uint64_t v86 = partial apply for closure #1 in closure #3 in SymbolButton.setConfiguration(_:animation:updates:);
  unint64_t v87 = (void *)v16;
  aBlock = _NSConcreteStackBlock;
  uint64_t v83 = 1107296256;
  id v81 = &v84;
  id v84 = thunk for @escaping @callee_guaranteed @Sendable () -> ();
  char v85 = &block_descriptor_216;
  uint64_t v17 = _Block_copy(&aBlock);
  id v18 = a1;
  swift_retain();
  swift_release();
  [v74 addKeyframeWithRelativeStartTime:v17 relativeDuration:0.0 animations:1.0];
  _Block_release(v17);
  uint64_t v19 = *(void *)(v79 + 16);
  if (v19)
  {
    uint64_t v20 = v79 + 72;
    swift_bridgeObjectRetain();
    uint64_t v21 = 1;
    while (1)
    {
      uint64_t v22 = *(void *)(v20 - 40);
      if (v22)
      {
        uint64_t v23 = *(void *)(v20 - 32);
        double v24 = *(double *)(v20 - 24);
        double v25 = *(double *)(v20 - 16);
        uint64_t v26 = *(void *)(v20 - 8);
        id v27 = (void *)swift_allocObject();
        v27[2] = v22;
        v27[3] = v23;
        v27[4] = v18;
        uint64_t v86 = partial apply for closure #1 in closure #2 in closure #3 in SymbolButton.setConfiguration(_:animation:updates:);
        unint64_t v87 = v27;
        aBlock = _NSConcreteStackBlock;
        uint64_t v83 = 1107296256;
        id v84 = thunk for @escaping @callee_guaranteed @Sendable () -> ();
        char v85 = &block_descriptor_234_0;
        id v28 = _Block_copy(&aBlock);
        outlined copy of (@escaping @callee_guaranteed () -> ())?(v22);
        outlined copy of (@escaping @callee_guaranteed () -> ())?(v22);
        id v29 = v18;
        outlined copy of (@escaping @callee_guaranteed () -> ())?(v22);
        outlined copy of (@escaping @callee_guaranteed () -> ())?(v26);
        swift_release();
        [v74 addKeyframeWithRelativeStartTime:v28 relativeDuration:v24 animations:v25];
        _Block_release(v28);
        outlined consume of (@escaping @callee_guaranteed () -> ())?(v22);
        outlined consume of (@escaping @callee_guaranteed () -> ())?(v22);
        outlined consume of (@escaping @callee_guaranteed () -> ())?(v26);
      }
      if (v19 == v21) {
        break;
      }
      v20 += 48;
      if (__OFADD__(v21++, 1))
      {
        __break(1u);
        break;
      }
    }
    swift_bridgeObjectRelease();
  }
  id v31 = v80 + 2;
  swift_beginAccess();
  uint64_t result = *v31;
  uint64_t v68 = *(void *)(*v31 + 16);
  if (!v68) {
    return result;
  }
  uint64_t v33 = result + 56;
  unint64_t v72 = &v84;
  uint64_t v67 = result;
  swift_bridgeObjectRetain_n();
  uint64_t v34 = 1;
  do
  {
    uint64_t v36 = *(void **)(v33 - 24);
    uint64_t v35 = *(void *)(v33 - 16);
    uint64_t v37 = *(void *)(v33 - 8);
    uint64_t v38 = *(void *)v33;
    uint64_t v39 = *(void *)(v33 + 8);
    unint64_t v40 = *(uint64_t **)(v33 + 16);
    uint64_t v42 = *(void *)(v33 + 24);
    uint64_t v41 = *(void *)(v33 + 32);
    uint64_t v44 = *(void *)(v33 + 40);
    uint64_t v43 = *(void *)(v33 + 48);
    int v45 = *(unsigned __int8 *)(v33 + 56);
    if (v37) {
      double v46 = 1.0;
    }
    else {
      double v46 = *(double *)(v33 - 16);
    }
    id v81 = *(uint64_t (***)(uint64_t))(v33 + 32);
    id v80 = v40;
    uint64_t v79 = v42;
    uint64_t v78 = v39;
    uint64_t v77 = v35;
    uint64_t v76 = v38;
    uint64_t v75 = v34;
    LODWORD(v73) = v45;
    if (v40)
    {
      char v91 = v41 & 1;
      if (v45) {
        double v47 = 1.0;
      }
      else {
        double v47 = 0.5;
      }
      uint64_t v71 = v37;
      uint64_t v48 = v35;
      uint64_t v49 = swift_allocObject();
      *(void *)(v49 + 16) = v40;
      *(void *)(v49 + 24) = v42;
      *(unsigned char *)(v49 + 32) = v91;
      *(_DWORD *)(v49 + 33) = *(_DWORD *)v90;
      *(_DWORD *)(v49 + 36) = *(_DWORD *)&v90[3];
      *(void *)(v49 + 40) = v44;
      *(void *)(v49 + 48) = v43;
      uint64_t v86 = partial apply for closure #1 in closure #3 in closure #3 in SymbolButton.setConfiguration(_:animation:updates:);
      unint64_t v87 = (void *)v49;
      aBlock = _NSConcreteStackBlock;
      uint64_t v83 = 1107296256;
      id v84 = thunk for @escaping @callee_guaranteed @Sendable () -> ();
      char v85 = &block_descriptor_228;
      uint64_t v70 = _Block_copy(&aBlock);
      uint64_t v69 = v87;
      uint64_t v50 = v48;
      uint64_t v37 = v71;
      outlined copy of View in Transition #1 in SymbolButton.setConfiguration(_:animation:updates:)?(v36, v50, v71, v38);
      outlined copy of View in Transition #1 in SymbolButton.setConfiguration(_:animation:updates:)?(v40, v42, v41, v44);
      outlined copy of View in Transition #1 in SymbolButton.setConfiguration(_:animation:updates:)?(v40, v42, v41, v44);
      char v51 = v40;
      outlined copy of (@escaping @callee_guaranteed () -> ())?(v44);
      swift_release();
      id v52 = v70;
      [v74 addKeyframeWithRelativeStartTime:v70 relativeDuration:0.0 animations:v47];
      _Block_release(v52);

      outlined consume of (@escaping @callee_guaranteed () -> ())?(v44);
      if (!v36)
      {
LABEL_28:
        outlined consume of View in Transition #1 in SymbolButton.setConfiguration(_:animation:updates:)?(0, v77, v37, v76);
        BOOL v63 = v80;
        uint64_t v64 = v79;
        uint64_t v65 = (uint64_t)v81;
        uint64_t v66 = v44;
        goto LABEL_29;
      }
    }
    else
    {
      outlined copy of View in Transition #1 in SymbolButton.setConfiguration(_:animation:updates:)?(v36, v35, v37, v38);
      outlined copy of View in Transition #1 in SymbolButton.setConfiguration(_:animation:updates:)?(0, v42, v41, v44);
      if (!v36) {
        goto LABEL_28;
      }
    }
    char v89 = v37 & 1;
    if (v73) {
      double v53 = 1.0;
    }
    else {
      double v53 = 0.5;
    }
    if (v73) {
      double v54 = 0.0;
    }
    else {
      double v54 = 0.5;
    }
    uint64_t v55 = swift_allocObject();
    uint64_t v56 = v77;
    *(void *)(v55 + 16) = v36;
    *(void *)(v55 + 24) = v56;
    *(unsigned char *)(v55 + 32) = v89;
    *(_DWORD *)(v55 + 33) = *(_DWORD *)v88;
    *(_DWORD *)(v55 + 36) = *(_DWORD *)&v88[3];
    id v57 = v36;
    uint64_t v58 = v76;
    uint64_t v59 = v78;
    *(void *)(v55 + 40) = v76;
    *(void *)(v55 + 48) = v59;
    *(double *)(v55 + 56) = v46;
    uint64_t v86 = partial apply for closure #2 in closure #3 in closure #3 in SymbolButton.setConfiguration(_:animation:updates:);
    unint64_t v87 = (void *)v55;
    aBlock = _NSConcreteStackBlock;
    uint64_t v83 = 1107296256;
    id v84 = thunk for @escaping @callee_guaranteed @Sendable () -> ();
    char v85 = &block_descriptor_222_0;
    uint64_t v60 = _Block_copy(&aBlock);
    uint64_t v73 = v43;
    id v61 = v60;
    outlined copy of View in Transition #1 in SymbolButton.setConfiguration(_:animation:updates:)?(v57, v56, v37, v58);
    id v62 = v57;
    outlined copy of (@escaping @callee_guaranteed () -> ())?(v58);
    swift_release();
    [v74 addKeyframeWithRelativeStartTime:v61 relativeDuration:v54 animations:v53];
    _Block_release(v61);

    outlined consume of (@escaping @callee_guaranteed () -> ())?(v58);
    outlined consume of View in Transition #1 in SymbolButton.setConfiguration(_:animation:updates:)?(v57, v56, v37, v58);
    BOOL v63 = v80;
    uint64_t v64 = v79;
    uint64_t v65 = (uint64_t)v81;
    uint64_t v66 = v44;
LABEL_29:
    outlined consume of View in Transition #1 in SymbolButton.setConfiguration(_:animation:updates:)?(v63, v64, v65, v66);
    if (v68 == v75) {
      return swift_bridgeObjectRelease_n();
    }
    v33 += 88;
    uint64_t v34 = v75 + 1;
  }
  while (!__OFADD__(v75, 1));
  __break(1u);
  return swift_bridgeObjectRelease_n();
}

uint64_t closure #1 in closure #3 in SymbolButton.setConfiguration(_:animation:updates:)(char *a1, uint64_t ObjCClassFromMetadata, uint64_t a3, uint64_t a4)
{
  uint64_t v126 = a4;
  unint64_t v128 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIView.Corner?);
  __chkstk_darwin();
  uint64_t v129 = (uint64_t)&v124 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v130 = (int *)type metadata accessor for SymbolButton.Configuration(0);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v124 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SymbolButton.Metrics(0);
  __chkstk_darwin();
  uint64_t v11 = (uint64_t *)((char *)&v124 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v12 = [a1 traitCollection];
  SymbolButton.metrics.getter(v11);
  outlined destroy of SymbolButton.Configuration((uint64_t)v11, type metadata accessor for SymbolButton.Metrics);
  outlined init with copy of SymbolButton.Configuration(ObjCClassFromMetadata, (uint64_t)v9, type metadata accessor for SymbolButton.Configuration);
  SymbolButton.Metrics.init(configuration:traitCollection:)((uint64_t)v9, v12, v11);
  uint64_t v132 = (uint64_t)v11;
  SymbolButton.metrics.setter((uint64_t)v11);
  uint64_t v13 = *(void **)&a1[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_materialView];
  outlined init with take of PresentationSource?(ObjCClassFromMetadata + 224, (uint64_t)v168, &demangling cache variable for type metadata for SymbolButton.Material?);
  id v127 = v13;
  SymbolButton.MaterialView.apply(_:)((uint64_t)v168);
  uint64_t v131 = *(char **)&a1[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_backgroundView];
  uint64_t v15 = *(void *)(ObjCClassFromMetadata + 192);
  uint64_t v14 = *(void **)(ObjCClassFromMetadata + 200);
  if (v14 != (void *)1)
  {
    double v16 = *(double *)(ObjCClassFromMetadata + 192);
    uint64_t v18 = *(void *)(ObjCClassFromMetadata + 216);
    uint64_t v17 = *(void **)(ObjCClassFromMetadata + 200);
    goto LABEL_5;
  }
  if (one-time initialization token for clear == -1) {
    goto LABEL_3;
  }
  while (1)
  {
    swift_once();
LABEL_3:
    swift_beginAccess();
    double v16 = *(double *)&static SymbolButton.Background.clear;
    uint64_t v17 = (void *)qword_1005AEC48;
    uint64_t v18 = qword_1005AEC58;
    swift_bridgeObjectRetain();
    id v19 = v17;
LABEL_5:
    outlined copy of SymbolButton.Background?(v15, v14);
    id v20 = [v131 layer];
    if (v18) {
      NSString v21 = String._bridgeToObjectiveC()();
    }
    else {
      NSString v21 = 0;
    }
    uint64_t v22 = v130;
    [v20 setCompositingFilter:v21];
    swift_unknownObjectRelease();

    id v23 = v17;
    SymbolButton.BackgroundView.configuration.setter(v17, v16);

    swift_bridgeObjectRelease();
    uint64_t v24 = *(void *)(a3 + 136);
    uint64_t v25 = *(void *)(a3 + 176);
    char v26 = *(unsigned char *)(a3 + 184);
    long long v156 = *(_OWORD *)(a3 + 120);
    long long v27 = *(_OWORD *)(a3 + 160);
    long long v158 = *(_OWORD *)(a3 + 144);
    long long v159 = v27;
    uint64_t v157 = v24;
    uint64_t v160 = v25;
    char v161 = v26;
    long long v28 = *(_OWORD *)(ObjCClassFromMetadata + 136);
    long long v29 = *(_OWORD *)(ObjCClassFromMetadata + 168);
    v154[2] = *(_OWORD *)(ObjCClassFromMetadata + 152);
    v154[3] = v29;
    char v155 = *(unsigned char *)(ObjCClassFromMetadata + 184);
    v154[0] = *(_OWORD *)(ObjCClassFromMetadata + 120);
    v154[1] = v28;
    uint64_t v30 = *(void *)(ObjCClassFromMetadata + 136);
    uint64_t v31 = *(void *)(ObjCClassFromMetadata + 176);
    char v32 = *(unsigned char *)(ObjCClassFromMetadata + 184);
    long long v162 = *(_OWORD *)(ObjCClassFromMetadata + 120);
    long long v164 = *(_OWORD *)(ObjCClassFromMetadata + 144);
    long long v165 = *(_OWORD *)(ObjCClassFromMetadata + 160);
    uint64_t v163 = v30;
    uint64_t v166 = v31;
    char v167 = v32;
    char v33 = specialized static SymbolButton.Title.hasSignificantChanges(from:to:)((uint64_t)&v156, (uint64_t)&v162);
    uint64_t v34 = v128;
    if ((v33 & 1) == 0)
    {
      id v35 = SymbolButton.titleLabel.getter();
      outlined init with take of PresentationSource?((uint64_t)v154, (uint64_t)v169, &_sSSSgMD_1);
      SymbolButton.Label.apply(_:)((uint64_t)v154);

      outlined init with take of PresentationSource?((uint64_t)v169, (uint64_t)&v170, &_sSSSgMD_1);
      if (v171)
      {
        uint64_t v36 = HIBYTE(v171) & 0xF;
        if ((v171 & 0x2000000000000000) == 0) {
          uint64_t v36 = v170 & 0xFFFFFFFFFFFFLL;
        }
        if (v36)
        {
          NSString v37 = String._bridgeToObjectiveC()();
          [v34 setAccessibilityLabel:v37];
        }
      }
    }
    long long v38 = *(_OWORD *)(a3 + 16);
    v138[0] = *(_OWORD *)a3;
    v138[1] = v38;
    long long v39 = *(_OWORD *)(a3 + 64);
    long long v141 = *(_OWORD *)(a3 + 48);
    long long v142 = v39;
    long long v144 = *(_OWORD *)(a3 + 88);
    long long v145 = *(_OWORD *)(a3 + 104);
    long long v40 = *(_OWORD *)(ObjCClassFromMetadata + 48);
    long long v41 = *(_OWORD *)(ObjCClassFromMetadata + 80);
    long long v134 = *(_OWORD *)(ObjCClassFromMetadata + 64);
    long long v135 = v41;
    long long v136 = *(_OWORD *)(ObjCClassFromMetadata + 96);
    long long v42 = *(_OWORD *)(ObjCClassFromMetadata + 16);
    v133[0] = *(_OWORD *)ObjCClassFromMetadata;
    v133[1] = v42;
    long long v43 = *(_OWORD *)(ObjCClassFromMetadata + 48);
    v133[2] = *(_OWORD *)(ObjCClassFromMetadata + 32);
    v133[3] = v43;
    v146[0] = v133[0];
    v146[1] = v42;
    uint64_t v44 = *(unsigned __int8 *)(a3 + 40);
    uint64_t v45 = *(unsigned __int8 *)(a3 + 80);
    uint64_t v139 = *(void *)(a3 + 32);
    uint64_t v140 = v44;
    uint64_t v143 = v45;
    uint64_t v137 = *(void *)(ObjCClassFromMetadata + 112);
    uint64_t v46 = *(unsigned __int8 *)(ObjCClassFromMetadata + 40);
    uint64_t v47 = *(unsigned __int8 *)(ObjCClassFromMetadata + 80);
    uint64_t v147 = *(void *)(ObjCClassFromMetadata + 32);
    uint64_t v148 = v46;
    long long v149 = v40;
    long long v150 = v134;
    uint64_t v151 = v47;
    long long v152 = *(_OWORD *)(ObjCClassFromMetadata + 88);
    long long v153 = *(_OWORD *)(ObjCClassFromMetadata + 104);
    if ((specialized static SymbolButton.Symbol.hasSignificantChanges(from:to:)((uint64_t)v138, (uint64_t)v146) & 1) == 0)
    {
      id v48 = SymbolButton.imageView.getter();
      SymbolButton.ImageView.apply(_:)((uint64_t)v133);
    }
    uint64_t v49 = v22[11];
    uint64_t v50 = (uint64_t *)(ObjCClassFromMetadata + v49);
    uint64_t v51 = *(void *)(ObjCClassFromMetadata + v49 + 16);
    if (v51 != 1 && *(void *)(a3 + v49 + 16) != 1)
    {
      id v52 = *(char **)&v34[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_badgeView];
      if (v52)
      {
        uint64_t v54 = *v50;
        uint64_t v53 = v50[1];
        if (v51)
        {
          uint64_t v55 = v52;
          uint64_t v56 = (void *)v51;
          id v57 = (id)v51;
        }
        else
        {
          uint64_t v58 = self;
          uint64_t v59 = v52;
          outlined copy of SymbolButton.Badge?(v54, v53, 0);
          id v57 = [v58 tintColor];
          uint64_t v56 = 0;
        }
        id v60 = v56;
        [v52 setBackgroundColor:v57];

        [v52 setAlpha:*(double *)&v53];
        [*(id *)&v52[OBJC_IVAR____TtCC11MusicCoreUI12SymbolButtonP33_0D6450BB937596549C350B7D294A2A939BadgeView_punchOutView] setAlpha:*(double *)&v53];
        SymbolButton.BadgeView.layoutPunchOutView()();
        outlined consume of SymbolButton.Badge?(v54, v53, v51);
      }
    }
    id v61 = [v127 contentView];
    uint64_t v62 = *(void *)(ObjCClassFromMetadata + 272);
    uint64_t v63 = *(void *)(ObjCClassFromMetadata + 280);
    uint64_t v64 = *(void **)(ObjCClassFromMetadata + 288);
    id v65 = v64;
    UIView.border.setter(v62, v63, v64);

    [v34 setAlpha:*(double *)(ObjCClassFromMetadata + v22[17])];
    uint64_t v66 = (void *)v132;
    SymbolButton.metrics.getter((void *)v132);
    SymbolButton.updateCorner(using:)((uint64_t)v66);
    outlined destroy of SymbolButton.Configuration((uint64_t)v66, type metadata accessor for SymbolButton.Metrics);
    id v67 = [v34 superview];
    [v67 layoutIfNeeded];

    [v34 layoutIfNeeded];
    if (v34[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_isClippingInvalidated] != 1) {
      break;
    }
    uint64_t v125 = OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_isClippingInvalidated;
    id v68 = v127;
    [v127 _setAllowsGroupFiltering:1];
    id v69 = [v68 contentView];
    id v70 = [v69 subviews];

    type metadata accessor for UIMenu(0, (unint64_t *)&_sSo6UIViewCML_0);
    unint64_t v71 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v132 = v71;
    if (v71 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v72 = _CocoaArrayWrapper.endIndex.getter();
      if (!v72)
      {
LABEL_41:
        swift_bridgeObjectRelease_n();
        v128[v125] = 0;
        break;
      }
    }
    else
    {
      uint64_t v72 = *(void *)((v132 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v72) {
        goto LABEL_41;
      }
    }
    type metadata accessor for SymbolButton.Label();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    unint64_t v73 = v132 & 0xC000000000000001;
    uint64_t v131 = &v128[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration];
    swift_beginAccess();
    uint64_t v15 = 4;
    uint64_t v74 = 0;
    if (v73)
    {
LABEL_27:
      id v75 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      goto LABEL_29;
    }
    while (1)
    {
      id v75 = *(id *)(v132 + 8 * v15);
LABEL_29:
      uint64_t v14 = v75;
      a3 = v74 + 1;
      if (__OFADD__(v74, 1)) {
        break;
      }
      if (![v75 isKindOfClass:ObjCClassFromMetadata])
      {
        int v76 = v131[v22[19]];
        if (v76 == 2)
        {
          uint64_t v77 = (unsigned __int8 *)&v131[v22[9]];
          uint64_t v78 = v129;
          outlined init with copy of (String, Any)((uint64_t)v77, v129, &demangling cache variable for type metadata for UIView.Corner?);
          uint64_t v79 = type metadata accessor for UIView.Corner();
          uint64_t v80 = (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v79 - 8) + 48))(v78, 1, v79) != 1;
          uint64_t v81 = v78;
          uint64_t v22 = v130;
          outlined destroy of TaskPriority?(v81, &demangling cache variable for type metadata for UIView.Corner?);
        }
        else
        {
          uint64_t v80 = v76 & 1;
        }
        [v14 setClipsToBounds:v80];
      }

      if (a3 == v72) {
        goto LABEL_41;
      }
      uint64_t v74 = ++v15 - 4;
      if (v73) {
        goto LABEL_27;
      }
    }
    __break(1u);
  }
  uint64_t v82 = (uint64_t *)(v126 + 16);
  swift_beginAccess();
  uint64_t result = *v82;
  uint64_t v84 = *(void *)(*v82 + 16);
  if (!v84) {
    return result;
  }
  uint64_t v85 = v84 - 1;
  uint64_t v125 = swift_bridgeObjectRetain();
  for (uint64_t i = v125 + 56; ; i += 88)
  {
    unint64_t v88 = *(void **)(i - 24);
    uint64_t v87 = *(void *)(i - 16);
    uint64_t v89 = *(void *)(i - 8);
    uint64_t v90 = *(void (**)(double, double, double, double))i;
    char v91 = *(void **)(i + 16);
    uint64_t v92 = *(void **)(i + 24);
    uint64_t v93 = *(void *)(i + 32);
    uint64_t v131 = *(char **)(i + 8);
    uint64_t v132 = (uint64_t)v92;
    uint64_t v94 = *(void *)(i + 40);
    uint64_t v95 = *(void *)(i + 48);
    uint64_t v129 = v89;
    int v130 = (int *)v90;
    unint64_t v128 = (char *)v87;
    if (v88)
    {
      if (v90)
      {
        outlined copy of View in Transition #1 in SymbolButton.setConfiguration(_:animation:updates:)?(v88, v87, v89, (uint64_t)v90);
        outlined copy of View in Transition #1 in SymbolButton.setConfiguration(_:animation:updates:)?(v91, v132, v93, v94);
        id v96 = [v127 contentView];
        uint64_t v126 = v95;
        uint64_t v97 = v93;
        uint64_t v98 = v85;
        id v99 = v96;
        [v96 bounds];
        double v101 = v100;
        double v103 = v102;
        double v105 = v104;
        double v107 = v106;

        uint64_t v108 = (void (*)(double, double, double, double))v94;
        v90(v101, v103, v105, v107);
        uint64_t v85 = v98;
        uint64_t v93 = v97;
        objc_msgSend(v88, "setFrame:");
        if (!v91) {
          goto LABEL_52;
        }
      }
      else
      {
        outlined copy of View in Transition #1 in SymbolButton.setConfiguration(_:animation:updates:)?(v88, v87, v89, 0);
        uint64_t v108 = (void (*)(double, double, double, double))v94;
        outlined copy of View in Transition #1 in SymbolButton.setConfiguration(_:animation:updates:)?(v91, v132, v93, v94);
        if (!v91)
        {
LABEL_52:
          outlined consume of View in Transition #1 in SymbolButton.setConfiguration(_:animation:updates:)?(v88, (uint64_t)v128, v129, (uint64_t)v130);
          id v120 = 0;
          uint64_t v121 = (void *)v132;
          uint64_t v122 = v93;
          uint64_t v123 = (uint64_t)v108;
          goto LABEL_54;
        }
      }
    }
    else
    {
      outlined copy of View in Transition #1 in SymbolButton.setConfiguration(_:animation:updates:)?(0, v87, v89, (uint64_t)v90);
      outlined copy of View in Transition #1 in SymbolButton.setConfiguration(_:animation:updates:)?(v91, v132, v93, v94);
      uint64_t v108 = (void (*)(double, double, double, double))v94;
      if (!v91) {
        goto LABEL_52;
      }
    }
    if (v108)
    {
      uint64_t v109 = v93;
      uint64_t v110 = v85;
      id v111 = [v127 contentView];
      [v111 bounds];
      double v113 = v112;
      double v115 = v114;
      double v117 = v116;
      double v119 = v118;

      v108(v113, v115, v117, v119);
      uint64_t v85 = v110;
      objc_msgSend(v91, "setFrame:");
      outlined consume of View in Transition #1 in SymbolButton.setConfiguration(_:animation:updates:)?(v88, (uint64_t)v128, v129, (uint64_t)v130);
      id v120 = v91;
      uint64_t v121 = (void *)v132;
      uint64_t v122 = v109;
      uint64_t v123 = (uint64_t)v108;
    }
    else
    {
      outlined consume of View in Transition #1 in SymbolButton.setConfiguration(_:animation:updates:)?(v88, (uint64_t)v128, v129, (uint64_t)v130);
      id v120 = v91;
      uint64_t v121 = (void *)v132;
      uint64_t v122 = v93;
      uint64_t v123 = 0;
    }
LABEL_54:
    outlined consume of View in Transition #1 in SymbolButton.setConfiguration(_:animation:updates:)?(v120, (uint64_t)v121, v122, v123);
    if (!v85) {
      break;
    }
    --v85;
  }
  return swift_bridgeObjectRelease();
}

uint64_t *SymbolButton.Background.clear.unsafeMutableAddressor()
{
  if (one-time initialization token for clear != -1) {
    swift_once();
  }
  return &static SymbolButton.Background.clear;
}

void closure #4 in SymbolButton.setConfiguration(_:animation:updates:)(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  swift_beginAccess();
  uint64_t v10 = *(void *)(*(void *)(a2 + 16) + 16);
  if (v10)
  {
    uint64_t v41 = a4;
    unint64_t v42 = a6;
    uint64_t v11 = swift_bridgeObjectRetain();
    uint64_t v12 = v10 - 1;
    uint64_t v13 = (uint64_t *)(v11 + 56);
    uint64_t v44 = a3;
    while (1)
    {
      uint64_t v14 = (void *)v13[2];
      if (!v14) {
        goto LABEL_4;
      }
      uint64_t v47 = v12;
      uint64_t v15 = (void *)*(v13 - 3);
      uint64_t v16 = *(v13 - 1);
      uint64_t v18 = v13[3];
      uint64_t v17 = v13[4];
      uint64_t v19 = v13[5];
      uint64_t v45 = *v13;
      uint64_t v46 = *(v13 - 2);
      outlined copy of View in Transition #1 in SymbolButton.setConfiguration(_:animation:updates:)?(v15, v46, v16, *v13);
      outlined copy of View in Transition #1 in SymbolButton.setConfiguration(_:animation:updates:)?(v14, v18, v17, v19);
      if (![v14 isDescendantOfView:a3]) {
        break;
      }
      [v14 removeFromSuperview];
      outlined consume of View in Transition #1 in SymbolButton.setConfiguration(_:animation:updates:)?(v15, v46, v16, v45);
      outlined consume of View in Transition #1 in SymbolButton.setConfiguration(_:animation:updates:)?(v14, v18, v17, v19);
      a3 = v44;
      uint64_t v12 = v47;
      if (!v47)
      {
LABEL_9:
        swift_bridgeObjectRelease();
        a4 = v41;
        a6 = v42;
        goto LABEL_10;
      }
LABEL_5:
      v13 += 11;
      --v12;
    }
    outlined consume of View in Transition #1 in SymbolButton.setConfiguration(_:animation:updates:)?(v15, v46, v16, v45);
    outlined consume of View in Transition #1 in SymbolButton.setConfiguration(_:animation:updates:)?(v14, v18, v17, v19);
    a3 = v44;
    uint64_t v12 = v47;
LABEL_4:
    if (!v12) {
      goto LABEL_9;
    }
    goto LABEL_5;
  }
LABEL_10:
  uint64_t v20 = *(void *)(a4 + 16);
  if (v20)
  {
    swift_bridgeObjectRetain();
    uint64_t v21 = a4 + 72;
    do
    {
      uint64_t v22 = *(void (**)(char *))(v21 - 8);
      if (v22)
      {
        uint64_t v23 = *(void *)(v21 - 40);
        outlined copy of (@escaping @callee_guaranteed () -> ())?(v23);
        outlined copy of (@escaping @callee_guaranteed () -> ())?((uint64_t)v22);
        v22(a3);
        outlined consume of (@escaping @callee_guaranteed () -> ())?(v23);
        outlined consume of (@escaping @callee_guaranteed () -> ())?((uint64_t)v22);
      }
      v21 += 48;
      --v20;
    }
    while (v20);
    swift_bridgeObjectRelease();
  }
  uint64_t v24 = *(void *)&a3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_pendingAnimatedChangesCount];
  uint64_t v25 = v24 - 1;
  if (__OFSUB__(v24, 1))
  {
    __break(1u);
LABEL_28:
    swift_once();
    goto LABEL_20;
  }
  *(void *)&a3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_pendingAnimatedChangesCount] = v25;
  if (v25 != v24) {
    SymbolButton.applyMaterialGroupNameIfNeeded()();
  }
  if (one-time initialization token for logger != -1) {
    goto LABEL_28;
  }
LABEL_20:
  uint64_t v26 = type metadata accessor for Logger();
  __swift_project_value_buffer(v26, (uint64_t)static SymbolButton.logger);
  long long v27 = a3;
  swift_bridgeObjectRetain_n();
  long long v28 = v27;
  unint64_t v29 = a6;
  uint64_t v30 = v28;
  uint64_t v31 = Logger.logObject.getter();
  os_log_type_t v32 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v31, v32))
  {
    unint64_t v33 = v29;
    uint64_t v34 = swift_slowAlloc();
    uint64_t v48 = swift_slowAlloc();
    *(_DWORD *)uint64_t v34 = 136446466;
    id v35 = (uint64_t *)&v30[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_debugLabel];
    swift_beginAccess();
    unint64_t v36 = v35[1];
    if (v36)
    {
      uint64_t v37 = *v35;
      unint64_t v38 = v36;
    }
    else
    {
      id v39 = [v30 description];
      uint64_t v37 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v38 = v40;
    }
    swift_bridgeObjectRetain();
    *(void *)(v34 + 4) = _s2os32getNullTerminatedUTF8PointerImpl_21storingStringOwnersInSVSS_SpyypGSgztF_2(v37, v38, &v48);
    swift_bridgeObjectRelease();

    *(_WORD *)(v34 + 12) = 2082;
    swift_bridgeObjectRetain();
    *(void *)(v34 + 14) = _s2os32getNullTerminatedUTF8PointerImpl_21storingStringOwnersInSVSS_SpyypGSgztF_2(a5, v33, &v48);
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v31, v32, "[%{public}s] UpdateID=%{public}s — Updated ✅", (uint8_t *)v34, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

uint64_t SymbolButton.Configuration.symbol.getter@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of SymbolButton.Symbol(v1, a1);
}

uint64_t SymbolButton.Configuration.symbol.setter(uint64_t a1)
{
  return outlined assign with take of SymbolButton.Symbol(a1, v1);
}

uint64_t SymbolButton.Configuration.title.getter@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of SymbolButton.Title(v1 + 120, a1);
}

uint64_t SymbolButton.Configuration.title.setter(uint64_t a1)
{
  return outlined assign with take of SymbolButton.Title(a1, v1 + 120);
}

uint64_t SymbolButton.Configuration.background.getter()
{
  uint64_t v1 = *(void *)(v0 + 192);
  outlined copy of SymbolButton.Background?(v1, *(void **)(v0 + 200));
  return v1;
}

uint64_t SymbolButton.Configuration.background.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = outlined consume of SymbolButton.Background?(*(void *)(v4 + 192), *(void **)(v4 + 200));
  *(void *)(v4 + 192) = a1;
  *(void *)(v4 + 200) = a2;
  *(void *)(v4 + 208) = a3;
  *(void *)(v4 + 216) = a4;
  return result;
}

uint64_t SymbolButton.Configuration.material.getter@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of (String, Any)(v1 + 224, a1, &demangling cache variable for type metadata for SymbolButton.Material?);
}

uint64_t SymbolButton.Configuration.material.setter(uint64_t a1)
{
  return outlined assign with take of Album?(a1, v1 + 224, &demangling cache variable for type metadata for SymbolButton.Material?);
}

uint64_t SymbolButton.Configuration.border.getter()
{
  uint64_t v1 = *(void *)(v0 + 272);
  id v2 = *(id *)(v0 + 288);
  return v1;
}

void SymbolButton.Configuration.border.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 272) = a1;
  *(void *)(v3 + 280) = a2;
  *(void *)(v3 + 288) = a3;
}

uint64_t SymbolButton.Configuration.corner.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for SymbolButton.Configuration(0);
  return outlined init with copy of (String, Any)(v1 + *(int *)(v3 + 36), a1, &demangling cache variable for type metadata for UIView.Corner?);
}

uint64_t SymbolButton.Configuration.corner.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for SymbolButton.Configuration(0);
  return outlined assign with take of Album?(a1, v1 + *(int *)(v3 + 36), &demangling cache variable for type metadata for UIView.Corner?);
}

CFRange (__swiftcall *SymbolButton.Configuration.corner.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

uint64_t SymbolButton.Configuration.customView.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for SymbolButton.Configuration(0);
  return outlined init with copy of (String, Any)(v1 + *(int *)(v3 + 40), a1, &demangling cache variable for type metadata for SymbolButton.CustomView?);
}

uint64_t SymbolButton.Configuration.customView.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for SymbolButton.Configuration(0);
  return outlined assign with take of Album?(a1, v1 + *(int *)(v3 + 40), &demangling cache variable for type metadata for SymbolButton.CustomView?);
}

CFRange (__swiftcall *SymbolButton.Configuration.customView.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

uint64_t SymbolButton.Configuration.badge.getter()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for SymbolButton.Configuration(0) + 44);
  uint64_t v2 = *(void *)v1;
  outlined copy of SymbolButton.Badge?(*(void *)v1, *(void *)(v1 + 8), *(void **)(v1 + 16));
  return v2;
}

uint64_t SymbolButton.Configuration.badge.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (uint64_t *)(v3 + *(int *)(type metadata accessor for SymbolButton.Configuration(0) + 44));
  uint64_t result = outlined consume of SymbolButton.Badge?(*v7, v7[1], v7[2]);
  *uint64_t v7 = a1;
  v7[1] = a2;
  _OWORD v7[2] = a3;
  return result;
}

CFRange (__swiftcall *SymbolButton.Configuration.badge.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

double SymbolButton.Configuration.symbolToTextSpacing.getter()
{
  return *(double *)(v0 + *(int *)(type metadata accessor for SymbolButton.Configuration(0) + 48));
}

uint64_t SymbolButton.Configuration.symbolToTextSpacing.setter(double a1)
{
  uint64_t result = type metadata accessor for SymbolButton.Configuration(0);
  *(double *)(v1 + *(int *)(result + 48)) = a1;
  return result;
}

CFRange (__swiftcall *SymbolButton.Configuration.symbolToTextSpacing.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

double SymbolButton.Configuration.minimumSize.getter()
{
  return *(double *)(v0 + *(int *)(type metadata accessor for SymbolButton.Configuration(0) + 52));
}

uint64_t SymbolButton.Configuration.minimumSize.setter(double a1, double a2)
{
  uint64_t result = type metadata accessor for SymbolButton.Configuration(0);
  uint64_t v6 = (double *)(v2 + *(int *)(result + 52));
  double *v6 = a1;
  v6[1] = a2;
  return result;
}

CFRange (__swiftcall *SymbolButton.Configuration.minimumSize.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

uint64_t SymbolButton.Configuration.maximumImageSize.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for SymbolButton.Configuration(0) + 56));
}

uint64_t SymbolButton.Configuration.maximumImageSize.setter(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result = type metadata accessor for SymbolButton.Configuration(0);
  uint64_t v8 = v3 + *(int *)(result + 56);
  *(void *)uint64_t v8 = a1;
  *(void *)(v8 + 8) = a2;
  *(unsigned char *)(v8 + 16) = a3 & 1;
  return result;
}

CFRange (__swiftcall *SymbolButton.Configuration.maximumImageSize.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

double SymbolButton.Configuration.contentInsets.getter()
{
  return *(double *)(v0 + *(int *)(type metadata accessor for SymbolButton.Configuration(0) + 60));
}

uint64_t SymbolButton.Configuration.contentInsets.setter(double a1, double a2, double a3, double a4)
{
  uint64_t result = type metadata accessor for SymbolButton.Configuration(0);
  uint64_t v10 = (double *)(v4 + *(int *)(result + 60));
  *uint64_t v10 = a1;
  v10[1] = a2;
  v10[2] = a3;
  v10[3] = a4;
  return result;
}

CFRange (__swiftcall *SymbolButton.Configuration.contentInsets.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

uint64_t SymbolButton.Configuration.Accessibility.init(automaticallyAdjustsForAccessibility:minimumContentSizeCategory:maximumContentSizeCategory:showsLargeContentViewer:)(char a1)
{
  return a1 & 1;
}

uint64_t SymbolButton.Configuration.accessibility.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + *(int *)(type metadata accessor for SymbolButton.Configuration(0) + 64));
  uint64_t v2 = *v1;
  uint64_t v3 = (void *)*((void *)v1 + 2);
  id v4 = *((id *)v1 + 1);
  id v5 = v3;
  return v2;
}

void SymbolButton.Configuration.accessibility.setter(char a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v9 = v4 + *(int *)(type metadata accessor for SymbolButton.Configuration(0) + 64);

  *(unsigned char *)uint64_t v9 = a1;
  *(void *)(v9 + 8) = a2;
  *(void *)(v9 + 16) = a3;
  *(unsigned char *)(v9 + 24) = a4;
}

CFRange (__swiftcall *SymbolButton.Configuration.accessibility.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

void *SymbolButton.Configuration.Accessibility.minimumContentSizeCategory.getter(uint64_t a1, void *a2)
{
  id v3 = a2;
  return a2;
}

UIPointerRegion_optional __swiftcall SymbolButton.pointerInteraction(_:regionFor:defaultRegion:)(UIPointerInteraction _, UIPointerRegionRequest regionFor, UIPointerRegion defaultRegion)
{
  uint64_t v4 = defaultRegion.super.isa;
  Class isa = defaultRegion.super.isa;
  result.value.super.Class isa = isa;
  result.is_nil = v5;
  return result;
}

uint64_t SymbolButton.Configuration.Accessibility.showsLargeContentViewer.getter(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return a4 & 1;
}

uint64_t SymbolButton.Material.color.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 24) = result;
  return result;
}

UIContentSizeCategory one-time initialization function for forBarButtonItem()
{
  static SymbolButton.Configuration.Accessibility.forBarButtonItem = 1;
  qword_1005AEC28 = (uint64_t)UIContentSizeCategoryLarge;
  unk_1005AEC30 = UIContentSizeCategoryExtraLarge;
  byte_1005AEC38 = 1;
  uint64_t v0 = UIContentSizeCategoryLarge;

  return UIContentSizeCategoryExtraLarge;
}

char *SymbolButton.Configuration.Accessibility.forBarButtonItem.unsafeMutableAddressor()
{
  if (one-time initialization token for forBarButtonItem != -1) {
    swift_once();
  }
  return &static SymbolButton.Configuration.Accessibility.forBarButtonItem;
}

uint64_t static SymbolButton.Configuration.Accessibility.forBarButtonItem.getter()
{
  if (one-time initialization token for forBarButtonItem != -1) {
    swift_once();
  }
  uint64_t v0 = static SymbolButton.Configuration.Accessibility.forBarButtonItem;
  uint64_t v1 = (void *)unk_1005AEC30;
  id v2 = (id)qword_1005AEC28;
  id v3 = v1;
  return v0;
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance SymbolButton.Configuration.Accessibility(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return specialized static SymbolButton.Configuration.Accessibility.__derived_struct_equals(_:_:)(*a1, *((void *)a1 + 1), *((void *)a1 + 2), a1[24], *a2, *((void *)a2 + 1), *((void *)a2 + 2), a2[24]);
}

double SymbolButton.Configuration.alpha.getter()
{
  return *(double *)(v0 + *(int *)(type metadata accessor for SymbolButton.Configuration(0) + 68));
}

uint64_t SymbolButton.Configuration.alpha.setter(double a1)
{
  uint64_t result = type metadata accessor for SymbolButton.Configuration(0);
  *(double *)(v1 + *(int *)(result + 68)) = a1;
  return result;
}

CFRange (__swiftcall *SymbolButton.Configuration.alpha.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

void *SymbolButton.Configuration.tint.getter()
{
  uint64_t v1 = *(void **)(v0 + *(int *)(type metadata accessor for SymbolButton.Configuration(0) + 72));
  id v2 = v1;
  return v1;
}

void SymbolButton.Configuration.tint.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for SymbolButton.Configuration(0) + 72);

  *(void *)(v1 + v3) = a1;
}

CFRange (__swiftcall *SymbolButton.Configuration.tint.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

uint64_t SymbolButton.Configuration.shouldClipToBounds.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for SymbolButton.Configuration(0) + 76));
}

uint64_t SymbolButton.Configuration.shouldClipToBounds.setter(char a1)
{
  uint64_t result = type metadata accessor for SymbolButton.Configuration(0);
  *(unsigned char *)(v1 + *(int *)(result + 76)) = a1;
  return result;
}

CFRange (__swiftcall *SymbolButton.Configuration.shouldClipToBounds.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

void SymbolButton.Configuration.init()(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = UIFontTextStyleSubheadline;
  *(void *)(a1 + 32) = 0;
  *(unsigned char *)(a1 + 40) = 1;
  *(_OWORD *)(a1 + 48) = xmmword_1004A3B50;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0;
  *(unsigned char *)(a1 + 80) = -1;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = 0x3FF0000000000000;
  *(void *)(a1 + 112) = 0;
  *(void *)(a1 + 120) = 0;
  *(void *)(a1 + 128) = 0;
  *(void *)(a1 + 136) = UIFontTextStyleSubheadline;
  *(UIFontWeight *)(a1 + 144) = UIFontWeightSemibold;
  *(void *)(a1 + 152) = 0;
  *(void *)(a1 + 160) = 0;
  *(void *)(a1 + 168) = 0x3FF0000000000000;
  *(void *)(a1 + 176) = 0;
  *(unsigned char *)(a1 + 184) = 0;
  *(void *)(a1 + 224) = 1;
  id v2 = (int *)type metadata accessor for SymbolButton.Configuration(0);
  *(_OWORD *)(a1 + 232) = 0u;
  *(_OWORD *)(a1 + 248) = 0u;
  *(_OWORD *)(a1 + 264) = 0u;
  *(_OWORD *)(a1 + 280) = 0u;
  uint64_t v3 = a1 + v2[9];
  uint64_t v4 = type metadata accessor for UIView.Corner();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  uint64_t v5 = a1 + v2[10];
  *(void *)(v5 + 48) = 0;
  *(_OWORD *)(v5 + 16) = 0u;
  *(_OWORD *)(v5 + 32) = 0u;
  *(_OWORD *)uint64_t v5 = 0u;
  uint64_t v6 = (void *)(a1 + v2[11]);
  void *v6 = 0;
  v6[1] = 0;
  v6[2] = 1;
  *(void *)(a1 + v2[12]) = 0x4010000000000000;
  uint64_t v7 = v2[13];
  uint64_t v8 = one-time initialization token for platterMinimumSize;
  uint64_t v9 = UIFontTextStyleSubheadline;
  if (v8 != -1) {
    swift_once();
  }
  *(_OWORD *)(a1 + v7) = static SymbolButton.Configuration.platterMinimumSize;
  uint64_t v10 = a1 + v2[14];
  *(void *)uint64_t v10 = 0;
  *(void *)(v10 + 8) = 0;
  *(unsigned char *)(v10 + 16) = 1;
  uint64_t v11 = (_OWORD *)(a1 + v2[15]);
  long long v12 = *(_OWORD *)&NSDirectionalEdgeInsetsZero.bottom;
  *uint64_t v11 = *(_OWORD *)&NSDirectionalEdgeInsetsZero.top;
  v11[1] = v12;
  uint64_t v13 = a1 + v2[16];
  *(unsigned char *)uint64_t v13 = 1;
  *(void *)(v13 + 8) = 0;
  *(void *)(v13 + 16) = 0;
  *(unsigned char *)(v13 + 24) = 0;
  *(void *)(a1 + v2[17]) = 0x3FF0000000000000;
  *(void *)(a1 + v2[18]) = 0;
  *(unsigned char *)(a1 + v2[19]) = 2;
  if (one-time initialization token for normal != -1) {
    swift_once();
  }
  uint64_t v14 = qword_1005AED08;
  *(void *)(a1 + 192) = static SymbolButton.Background.normal;
  long long v28 = (void *)qword_1005AECF8;
  *(_OWORD *)(a1 + 200) = *(_OWORD *)&qword_1005AECF8;
  *(void *)(a1 + 216) = v14;
  uint64_t v15 = self;
  swift_bridgeObjectRetain();
  id v16 = v28;
  id v17 = [v15 currentTraitCollection];
  id v18 = [v17 userInterfaceIdiom];

  if (v18 == (id)6)
  {
    if (one-time initialization token for xr != -1) {
      swift_once();
    }
    uint64_t v19 = (void *)static SymbolButton.Material.xr;
    uint64_t v20 = (void *)qword_1005AED38;
    uint64_t v21 = qword_1005AED40;
    unint64_t v29 = (void *)qword_1005AED40;
    uint64_t v22 = byte_1005AED48;
    uint64_t v24 = qword_1005AED50;
    uint64_t v23 = unk_1005AED58;
    *(void *)(a1 + 224) = static SymbolButton.Material.xr;
    *(void *)(a1 + 232) = v20;
    *(void *)(a1 + 240) = v21;
    *(void *)(a1 + 248) = v22;
    *(void *)(a1 + 256) = v24;
    *(void *)(a1 + 264) = v23;
    swift_bridgeObjectRetain();
    id v25 = v19;
    id v26 = v20;
    id v27 = v29;
  }
}

uint64_t *SymbolButton.Material.xr.unsafeMutableAddressor()
{
  if (one-time initialization token for xr != -1) {
    swift_once();
  }
  return &static SymbolButton.Material.xr;
}

uint64_t SymbolButton.Symbol.weight.setter(uint64_t result)
{
  *(void *)(v1 + 48) = result;
  return result;
}

uint64_t SymbolButton.Symbol.scale.getter()
{
  return *(void *)(v0 + 56);
}

uint64_t SymbolButton.Symbol.scale.setter(uint64_t result)
{
  *(void *)(v1 + 56) = result;
  return result;
}

uint64_t SymbolButton.Symbol.offset.getter()
{
  return *(void *)(v0 + 64);
}

uint64_t SymbolButton.Symbol.offset.setter(uint64_t result, uint64_t a2, char a3)
{
  *(void *)(v3 + 64) = result;
  *(void *)(v3 + 72) = a2;
  *(unsigned char *)(v3 + 80) = a3;
  return result;
}

double SymbolButton.Symbol.alpha.getter()
{
  return *(double *)(v0 + 104);
}

void SymbolButton.Symbol.alpha.setter(double a1)
{
  *(double *)(v1 + 104) = a1;
}

void *SymbolButton.Symbol.tint.getter()
{
  uint64_t v1 = *(void **)(v0 + 112);
  id v2 = v1;
  return v1;
}

void SymbolButton.Symbol.tint.setter(uint64_t a1)
{
  *(void *)(v1 + 112) = a1;
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance SymbolButton.Symbol(uint64_t a1, long long *a2)
{
  long long v2 = *(_OWORD *)(a1 + 80);
  v12[4] = *(_OWORD *)(a1 + 64);
  v12[5] = v2;
  v12[6] = *(_OWORD *)(a1 + 96);
  uint64_t v13 = *(void *)(a1 + 112);
  long long v3 = *(_OWORD *)(a1 + 16);
  v12[0] = *(_OWORD *)a1;
  v12[1] = v3;
  long long v4 = *(_OWORD *)(a1 + 48);
  v12[2] = *(_OWORD *)(a1 + 32);
  v12[3] = v4;
  long long v5 = *a2;
  long long v6 = a2[1];
  long long v7 = a2[3];
  _OWORD v14[2] = a2[2];
  void v14[3] = v7;
  v14[0] = v5;
  v14[1] = v6;
  long long v8 = a2[4];
  long long v9 = a2[5];
  long long v10 = a2[6];
  uint64_t v15 = *((void *)a2 + 14);
  _OWORD v14[5] = v9;
  void v14[6] = v10;
  _OWORD v14[4] = v8;
  return specialized static SymbolButton.Symbol.__derived_struct_equals(_:_:)((uint64_t)v12, (uint64_t)v14);
}

void SymbolButton.Title.alpha.setter(double a1)
{
  *(double *)(v1 + 48) = a1;
}

uint64_t SymbolButton.Title.isHidden.getter()
{
  return *(unsigned __int8 *)(v0 + 64);
}

uint64_t SymbolButton.Title.isHidden.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 64) = result;
  return result;
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance SymbolButton.Title(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 48);
  _OWORD v7[2] = *(_OWORD *)(a1 + 32);
  v7[3] = v2;
  char v8 = *(unsigned char *)(a1 + 64);
  long long v3 = *(_OWORD *)(a1 + 16);
  v7[0] = *(_OWORD *)a1;
  v7[1] = v3;
  long long v4 = *(_OWORD *)(a2 + 48);
  v9[2] = *(_OWORD *)(a2 + 32);
  v9[3] = v4;
  char v10 = *(unsigned char *)(a2 + 64);
  long long v5 = *(_OWORD *)(a2 + 16);
  v9[0] = *(_OWORD *)a2;
  v9[1] = v5;
  return specialized static SymbolButton.Title.__derived_struct_equals(_:_:)((uint64_t)v7, (uint64_t)v9) & 1;
}

uint64_t SymbolButton.Background.compositingFilter.getter(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t SymbolButton.Background.init()()
{
  return 0;
}

id one-time initialization function for clear()
{
  id result = [self clearColor];
  static SymbolButton.Background.clear = 0x3FF0000000000000;
  qword_1005AEC48 = (uint64_t)result;
  qword_1005AEC50 = 0;
  qword_1005AEC58 = 0;
  return result;
}

uint64_t static SymbolButton.Background.clear.getter()
{
  if (one-time initialization token for clear != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v0 = qword_1005AEC48;
  id v1 = (id)qword_1005AEC48;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t static SymbolButton.Background.clear.setter(void *a1, uint64_t a2, uint64_t a3, double a4)
{
  if (one-time initialization token for clear != -1) {
    swift_once();
  }
  swift_beginAccess();
  char v8 = (void *)qword_1005AEC48;
  static SymbolButton.Background.clear = *(void *)&a4;
  qword_1005AEC48 = (uint64_t)a1;
  qword_1005AEC50 = a2;
  qword_1005AEC58 = a3;

  return swift_bridgeObjectRelease();
}

uint64_t (*static SymbolButton.Background.clear.modify())()
{
  if (one-time initialization token for clear != -1) {
    swift_once();
  }
  swift_beginAccess();
  return ArtworkVideoReportingController.videoArtworkContextProviding.modify;
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance SymbolButton.Background(uint64_t a1, uint64_t a2)
{
  return specialized static SymbolButton.Background.__derived_struct_equals(_:_:)(*(void **)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void **)(a2 + 8), *(void *)(a2 + 16), *(void *)(a2 + 24), *(double *)a1, *(double *)a2);
}

void SymbolButton.Material.init()(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(unsigned char *)(a1 + 24) = 2;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0;
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance SymbolButton.Material(_OWORD *a1, long long *a2)
{
  long long v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  long long v3 = *a2;
  long long v4 = a2[1];
  _OWORD v7[2] = a1[2];
  v8[0] = v3;
  long long v5 = a2[2];
  v8[1] = v4;
  v8[2] = v5;
  return specialized static SymbolButton.Material.__derived_struct_equals(_:_:)((uint64_t)v7, (uint64_t)v8);
}

double SymbolButton.CustomView.insets.getter()
{
  return *(double *)(v0 + 8);
}

void SymbolButton.CustomView.insets.setter(double a1, double a2, double a3, double a4)
{
  v4[1] = a1;
  _OWORD v4[2] = a2;
  v4[3] = a3;
  _OWORD v4[4] = a4;
}

void SymbolButton.CustomView.alpha.setter(double a1)
{
  *(double *)(v1 + 40) = a1;
}

void *static SymbolButton.CustomView.with(_:configurator:)@<X0>(void *result@<X0>, uint64_t (*a2)(void **)@<X1>, uint64_t a3@<X8>)
{
  if (result)
  {
    uint64_t v11 = result;
    long long v5 = *(_OWORD *)&UIEdgeInsetsZero.bottom;
    long long v12 = *(_OWORD *)&UIEdgeInsetsZero.top;
    long long v13 = v5;
    long long v14 = 0x3FF0000000000000uLL;
    id v6 = result;
    id result = (void *)a2(&v11);
    long long v7 = v11;
    long long v8 = v12;
    long long v9 = v13;
    long long v10 = v14;
  }
  else
  {
    long long v7 = 0;
    long long v8 = 0uLL;
    long long v9 = 0uLL;
    long long v10 = 0uLL;
  }
  *(void *)a3 = v7;
  *(_OWORD *)(a3 + 8) = v8;
  *(_OWORD *)(a3 + 24) = v9;
  *(_OWORD *)(a3 + 40) = v10;
  return result;
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance SymbolButton.CustomView(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  v5[2] = *(_OWORD *)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 48);
  long long v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  _OWORD v7[2] = *(_OWORD *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 48);
  return specialized static SymbolButton.CustomView.__derived_struct_equals(_:_:)((uint64_t)v5, (uint64_t)v7) & 1;
}

uint64_t SymbolButton.Badge.init()()
{
  return 0;
}

uint64_t static SymbolButton.Badge.with(_:)(void (*a1)(long long *))
{
  long long v2 = xmmword_1004A3D50;
  uint64_t v3 = 0;
  a1(&v2);
  return v3;
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance SymbolButton.Badge(uint64_t a1, uint64_t a2)
{
  return specialized static SymbolButton.Badge.__derived_struct_equals(_:_:)(*(void **)(a1 + 16), *(void **)(a2 + 16), *(double *)a1, *(double *)(a1 + 8), *(double *)a2, *(double *)(a2 + 8));
}

Swift::Void __swiftcall SymbolButton.layoutSubviews()()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for SymbolButton.Configuration(0);
  __chkstk_darwin();
  long long v4 = (char *)&v137 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v140 = type metadata accessor for UIView.Corner.Radius();
  uint64_t v139 = *(void *)(v140 - 8);
  __chkstk_darwin();
  objc_super v138 = (char *)&v137 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = (int *)type metadata accessor for SymbolButton.Metrics(0);
  __chkstk_darwin();
  uint64_t v8 = (uint64_t *)((char *)&v137 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin();
  long long v10 = (uint64_t *)((char *)&v137 - v9);
  __chkstk_darwin();
  long long v12 = (uint64_t *)((char *)&v137 - v11);
  long long v13 = (objc_class *)type metadata accessor for SymbolButton(0);
  v148.receiver = v0;
  v148.super_class = v13;
  objc_msgSendSuper2(&v148, "layoutSubviews");
  long long v14 = *(void **)&v0[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_materialView];
  [*(id *)&v0[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_containerView] bounds];
  objc_msgSend(v14, "setFrame:");
  id v15 = [v14 contentView];
  [v15 bounds];
  double v17 = v16;

  SymbolButton.metrics.getter(v12);
  double v18 = *(double *)((char *)v12 + v6[12] + 16);
  [v1 effectiveUserInterfaceLayoutDirection];
  [v1 contentHorizontalAlignment];
  uint64_t v141 = v2;
  CGFloat v147 = v17;
  if ([v1 contentVerticalAlignment] == (id)2) {
    double v19 = 0.0;
  }
  else {
    double v19 = v18;
  }
  objc_msgSend(v1, "effectiveUserInterfaceLayoutDirection", v19);
  CGRect.inset(by:for:)();
  CGFloat v21 = v20;
  CGFloat v23 = v22;
  CGFloat v145 = v24;
  CGFloat v146 = v25;
  outlined destroy of SymbolButton.Configuration((uint64_t)v12, type metadata accessor for SymbolButton.Metrics);
  SymbolButton.metrics.getter(v10);
  double v26 = *(double *)((char *)v10 + v6[8]);
  outlined destroy of SymbolButton.Configuration((uint64_t)v10, type metadata accessor for SymbolButton.Metrics);
  id v27 = SymbolButton.imageView.getter();
  SymbolButton.metrics.getter(v8);
  long long v28 = (double *)((char *)v8 + v6[11]);
  double v29 = *v28;
  double v30 = v28[1];
  int v31 = *((unsigned __int8 *)v28 + 16);
  outlined destroy of SymbolButton.Configuration((uint64_t)v8, type metadata accessor for SymbolButton.Metrics);
  if (v31) {
    double v32 = 0.0;
  }
  else {
    double v32 = v30;
  }
  if (v31) {
    double v33 = 0.0;
  }
  else {
    double v33 = v29;
  }
  objc_msgSend(v27, "sizeThatFits:", v33, v32);
  CGFloat v35 = v34;
  CGFloat v37 = v36;

  uint64_t v38 = (uint64_t)&v1[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration];
  swift_beginAccess();
  if (!*(void *)(v38 + 128) || (*(unsigned char *)(v38 + 184) & 1) != 0)
  {
    id v44 = SymbolButton.titleLabel.getter();
    [v44 frame];
    double v46 = v48;
    CGFloat v143 = v49;
  }
  else
  {
    v155.origin.CGFloat x = v21;
    v155.origin.CGFloat y = v23;
    CGFloat v39 = v145;
    v155.size.CGFloat width = v145;
    CGFloat v40 = v146;
    v155.size.CGFloat height = v146;
    double Width = CGRectGetWidth(v155);
    v156.origin.CGFloat x = 0.0;
    v156.origin.CGFloat y = 0.0;
    v156.size.CGFloat width = v35;
    v156.size.CGFloat height = v37;
    double v42 = Width - (v26 + CGRectGetWidth(v156));
    v157.origin.CGFloat x = v21;
    v157.origin.CGFloat y = v23;
    v157.size.CGFloat width = v39;
    v157.size.CGFloat height = v40;
    double Height = CGRectGetHeight(v157);
    id v44 = SymbolButton.titleLabel.getter();
    objc_msgSend(v44, "sizeThatFits:", v42, Height);
    double v46 = v45;
    CGFloat v143 = v47;
  }

  uint64_t v50 = &selRef_shadowColor;
  uint64_t v51 = &selRef_shadowColor;
  double v142 = v26;
  CGFloat v144 = v46;
  if (!*(void *)(v38 + 8))
  {
    double v53 = 0.0;
    double v52 = 0.0;
    if (!*(void *)(v38 + 128)) {
      goto LABEL_23;
    }
    goto LABEL_20;
  }
  v158.origin.CGFloat x = 0.0;
  v158.origin.CGFloat y = 0.0;
  v158.size.CGFloat width = v35;
  v158.size.CGFloat height = v37;
  double v52 = CGRectGetWidth(v158) + 0.0;
  v159.origin.CGFloat x = 0.0;
  v159.origin.CGFloat y = 0.0;
  v159.size.CGFloat height = 0.0;
  v159.size.CGFloat width = v52;
  double v53 = CGRectGetHeight(v159);
  v160.origin.CGFloat x = 0.0;
  v160.origin.CGFloat y = 0.0;
  v160.size.CGFloat width = v35;
  v160.size.CGFloat height = v37;
  double v54 = CGRectGetHeight(v160);
  if (v53 <= v54) {
    double v53 = v54;
  }
  if (*(void *)(v38 + 128))
  {
LABEL_20:
    if ((*(unsigned char *)(v38 + 184) & 1) == 0)
    {
      v161.origin.CGFloat x = 0.0;
      v161.origin.CGFloat y = 0.0;
      CGFloat v55 = v144;
      v161.size.CGFloat width = v144;
      CGFloat v56 = v143;
      v161.size.CGFloat height = v143;
      double v52 = v52 + CGRectGetWidth(v161);
      v162.origin.CGFloat x = 0.0;
      v162.origin.CGFloat y = 0.0;
      v162.size.CGFloat width = v52;
      v162.size.CGFloat height = v53;
      double v53 = CGRectGetHeight(v162);
      v163.origin.CGFloat x = 0.0;
      v163.origin.CGFloat y = 0.0;
      v163.size.CGFloat width = v55;
      v163.size.CGFloat height = v56;
      double v57 = CGRectGetHeight(v163);
      if (v53 <= v57) {
        double v53 = v57;
      }
    }
  }
LABEL_23:
  uint64_t v58 = *(void *)(v38 + 8);
  CGFloat v147 = v37;
  if (v58 && *(void *)(v38 + 128))
  {
    double v59 = -0.0;
    if (!*(unsigned char *)(v38 + 184)) {
      double v59 = v142;
    }
    double v52 = v52 + v59;
  }
  unint64_t v60 = (unint64_t)[v1 contentHorizontalAlignment];
  double MinY = 0.0;
  double MinX = 0.0;
  if (v60 <= 5)
  {
    if (((1 << v60) & 9) != 0)
    {
      v164.origin.CGFloat x = v21;
      v164.origin.CGFloat y = v23;
      v164.size.CGFloat width = v145;
      v164.size.CGFloat height = v146;
      CGRectGetMidX(v164);
      v165.origin.CGFloat x = 0.0;
      v165.origin.CGFloat y = 0.0;
      v165.size.CGFloat width = v52;
      v165.size.CGFloat height = v53;
      CGRectGetWidth(v165);
      id v67 = [v1 traitCollection];
      [v67 displayScale];

      CGFloat.roundValue(scale:)();
      double MinX = v68;
    }
    else
    {
      CGFloat v63 = v21;
      CGFloat v64 = v23;
      CGFloat v65 = v145;
      CGFloat v66 = v146;
      if (((1 << v60) & 0x12) != 0)
      {
        double MinX = CGRectGetMinX(*(CGRect *)&v63);
      }
      else
      {
        double MaxX = CGRectGetMaxX(*(CGRect *)&v63);
        v166.origin.CGFloat x = 0.0;
        v166.origin.CGFloat y = 0.0;
        v166.size.CGFloat width = v52;
        v166.size.CGFloat height = v53;
        double MinX = MaxX - CGRectGetWidth(v166);
      }
    }
  }
  switch((unint64_t)[v1 contentVerticalAlignment])
  {
    case 0uLL:
      v167.origin.CGFloat x = v21;
      v167.origin.CGFloat y = v23;
      v167.size.CGFloat width = v145;
      v167.size.CGFloat height = v146;
      CGRectGetMidY(v167);
      v168.origin.CGFloat y = 0.0;
      v168.origin.CGFloat x = MinX;
      v168.size.CGFloat width = v52;
      v168.size.CGFloat height = v53;
      CGRectGetHeight(v168);
      id v70 = [v1 traitCollection];
      [v70 displayScale];

      CGFloat.roundValue(scale:)();
      double MinY = v71;
      break;
    case 1uLL:
      v169.origin.CGFloat x = v21;
      v169.origin.CGFloat y = v23;
      v169.size.CGFloat width = v145;
      v169.size.CGFloat height = v146;
      double MinY = CGRectGetMinY(v169);
      break;
    case 2uLL:
      v170.origin.CGFloat x = v21;
      v170.origin.CGFloat y = v23;
      v170.size.CGFloat width = v145;
      v170.size.CGFloat height = v146;
      double MaxY = CGRectGetMaxY(v170);
      v171.origin.CGFloat y = 0.0;
      v171.origin.CGFloat x = MinX;
      v171.size.CGFloat width = v52;
      v171.size.CGFloat height = v53;
      double MinY = MaxY - CGRectGetHeight(v171);
      break;
    case 3uLL:
      v172.origin.CGFloat x = v21;
      v172.origin.CGFloat y = v23;
      CGFloat v73 = v145;
      v172.size.CGFloat width = v145;
      CGFloat v74 = v146;
      v172.size.CGFloat height = v146;
      double MinY = CGRectGetMinY(v172);
      v173.origin.CGFloat x = v21;
      v173.origin.CGFloat y = v23;
      v173.size.CGFloat width = v73;
      v173.size.CGFloat height = v74;
      double v53 = CGRectGetHeight(v173);
      break;
    default:
      break;
  }
  double v75 = MinX;
  if (*(void *)(v38 + 8))
  {
    v174.origin.CGFloat x = MinX;
    v174.origin.CGFloat y = MinY;
    v174.size.CGFloat width = v35;
    v174.size.CGFloat height = v147;
    double v75 = v142 + CGRectGetMaxX(v174);
  }
  id v76 = [v1 contentVerticalAlignment];
  if (v76 == (id)3)
  {
    v179.origin.CGFloat x = MinX;
    v179.origin.CGFloat y = MinY;
    v179.size.CGFloat width = v52;
    v179.size.CGFloat height = v53;
    CGFloat v147 = CGRectGetHeight(v179);
    v180.origin.CGFloat x = MinX;
    v180.origin.CGFloat y = MinY;
    v180.size.CGFloat width = v52;
    v180.size.CGFloat height = v53;
    double v81 = CGRectGetHeight(v180);
    CGFloat v79 = MinY;
    uint64_t v84 = v141;
    double v80 = v144;
  }
  else if (v76)
  {
    CGFloat v79 = MinY;
    uint64_t v84 = v141;
    double v80 = v144;
    double v81 = v143;
  }
  else
  {
    v175.origin.CGFloat x = MinX;
    v175.origin.CGFloat y = MinY;
    v175.size.CGFloat width = v52;
    v175.size.CGFloat height = v53;
    CGRectGetMidY(v175);
    v176.origin.CGFloat x = MinX;
    v176.origin.CGFloat y = MinY;
    v176.size.CGFloat width = v35;
    v176.size.CGFloat height = v147;
    CGRectGetHeight(v176);
    id v77 = [v1 traitCollection];
    [v77 displayScale];

    CGFloat.roundValue(scale:)();
    CGFloat v79 = v78;
    v177.origin.CGFloat x = MinX;
    v177.origin.CGFloat y = MinY;
    v177.size.CGFloat width = v52;
    v177.size.CGFloat height = v53;
    CGRectGetMidY(v177);
    v178.origin.CGFloat x = v75;
    v178.origin.CGFloat y = MinY;
    double v80 = v144;
    v178.size.CGFloat width = v144;
    double v81 = v143;
    v178.size.CGFloat height = v143;
    CGRectGetHeight(v178);
    uint64_t v51 = &selRef_shadowColor;
    id v82 = [v1 traitCollection];
    [v82 displayScale];

    CGFloat.roundValue(scale:)();
    double MinY = v83;
    uint64_t v84 = v141;
  }
  id v85 = SymbolButton.titleLabel.getter();
  if ([v1 v51[109]] == (id)4 || objc_msgSend(v1, v51[109]) == (id)5)
  {
    long long v152 = 0u;
    long long v153 = 0u;
    char v154 = 1;
    CGRect.applyingLayoutDirection(in:bounds:)();
    double v75 = v86;
    double MinY = v87;
    double v80 = v88;
    double v81 = v89;
  }
  objc_msgSend(v85, "setFrame:", v75, MinY, v80, v81);

  if (*(void *)(v38 + 128) && (*(unsigned char *)(v38 + 184) & 1) == 0)
  {
    id v90 = SymbolButton.imageView.getter();
    id v91 = [v90 image];

    if (v91)
    {
      SymbolButton.metrics.getter(v10);
      id v92 = *(id *)((char *)v10 + v6[7]);
      outlined destroy of SymbolButton.Configuration((uint64_t)v10, type metadata accessor for SymbolButton.Metrics);
      id v93 = [v91 imageByApplyingSymbolConfiguration:v92];

      if (v93)
      {
        UIImage.baselineOffsetFromBottom.getter();
        uint64_t v50 = &selRef_shadowColor;
        if ((v94 & 1) == 0)
        {
          id v95 = SymbolButton.titleLabel.getter();
          [v95 frame];
          CGFloat v97 = v96;
          CGFloat v99 = v98;
          CGFloat v101 = v100;
          CGFloat v103 = v102;

          v181.origin.CGFloat x = v97;
          v181.origin.CGFloat y = v99;
          v181.size.CGFloat width = v101;
          v181.size.CGFloat height = v103;
          CGRectGetMinY(v181);
          id v104 = SymbolButton.titleLabel.getter();
          [v104 _firstLineBaseline];

          v182.origin.CGFloat x = MinX;
          v182.origin.CGFloat y = v79;
          v182.size.CGFloat width = v35;
          v182.size.CGFloat height = v147;
          CGRectGetHeight(v182);
        }
      }
      else
      {
        uint64_t v50 = &selRef_shadowColor;
      }
      uint64_t v51 = &selRef_shadowColor;
    }
    else
    {
      uint64_t v50 = &selRef_shadowColor;
    }
  }
  SymbolButton.metrics.getter(v10);
  outlined destroy of SymbolButton.Configuration((uint64_t)v10, type metadata accessor for SymbolButton.Metrics);
  CGRect.offset(by:)();
  double v106 = v105;
  double v108 = v107;
  double v110 = v109;
  double v112 = v111;
  id v113 = SymbolButton.imageView.getter();
  if ([v1 v51[109]] == (id)4 || objc_msgSend(v1, v51[109]) == (id)5)
  {
    long long v149 = 0u;
    long long v150 = 0u;
    char v151 = 1;
    CGRect.applyingLayoutDirection(in:bounds:)();
    double v106 = v114;
    double v108 = v115;
    double v110 = v116;
    double v112 = v117;
  }
  objc_msgSend(v113, v50[328], v106, v108, v110, v112);

  SymbolButton.layoutCustomViewIfNeeded()();
  SymbolButton.layoutBadgeViewIfNeeded()();
  double v118 = *(void **)&v1[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_backgroundView];
  id v119 = [v14 contentView];
  [v119 bounds];
  double v121 = v120;
  double v123 = v122;
  double v125 = v124;
  double v127 = v126;

  objc_msgSend(v118, v50[328], v121, v123, v125, v127);
  outlined init with copy of SymbolButton.Configuration(v38, (uint64_t)v4, type metadata accessor for SymbolButton.Configuration);
  unint64_t v128 = &v4[*(int *)(v84 + 36)];
  uint64_t v129 = type metadata accessor for UIView.Corner();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v129 - 8) + 48))(v128, 1, v129))
  {
    int v130 = type metadata accessor for SymbolButton.Configuration;
    uint64_t v131 = (uint64_t)v4;
  }
  else
  {
    uint64_t v132 = v138;
    UIView.Corner.radius.getter();
    outlined destroy of SymbolButton.Configuration((uint64_t)v4, type metadata accessor for SymbolButton.Configuration);
    uint64_t v133 = v139;
    uint64_t v134 = v140;
    int v135 = (*(uint64_t (**)(char *, uint64_t))(v139 + 88))(v132, v140);
    int v136 = enum case for UIView.Corner.Radius.rounded(_:);
    (*(void (**)(char *, uint64_t))(v133 + 8))(v132, v134);
    if (v135 != v136) {
      return;
    }
    SymbolButton.metrics.getter(v10);
    SymbolButton.updateCorner(using:)((uint64_t)v10);
    int v130 = type metadata accessor for SymbolButton.Metrics;
    uint64_t v131 = (uint64_t)v10;
  }
  outlined destroy of SymbolButton.Configuration(v131, v130);
}

Swift::Void __swiftcall SymbolButton.traitCollectionDidChange(_:)(UITraitCollection_optional a1)
{
  Class isa = a1.value.super.isa;
  type metadata accessor for SymbolButton.Metrics(0);
  __chkstk_darwin();
  long long v4 = (uint64_t *)((char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = type metadata accessor for SymbolButton.Configuration(0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  long long v10 = (char *)&v16 - v9;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SymbolButton.Configuration?);
  __chkstk_darwin();
  long long v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v13 = (objc_class *)type metadata accessor for SymbolButton(0);
  v17.receiver = v1;
  v17.super_class = v13;
  objc_msgSendSuper2(&v17, "traitCollectionDidChange:", isa);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v12, 1, 1, v5);
  SymbolButton.updateConfigurationIfNeeded(_:animation:)((uint64_t)v12, 0, 0, 0, 1);
  outlined destroy of TaskPriority?((uint64_t)v12, &demangling cache variable for type metadata for SymbolButton.Configuration?);
  uint64_t v14 = (uint64_t)v1 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration;
  swift_beginAccess();
  outlined init with copy of SymbolButton.Configuration(v14, (uint64_t)v10, type metadata accessor for SymbolButton.Configuration);
  id v15 = [v1 traitCollection];
  SymbolButton.metrics.getter(v4);
  outlined destroy of SymbolButton.Configuration((uint64_t)v4, type metadata accessor for SymbolButton.Metrics);
  outlined init with copy of SymbolButton.Configuration((uint64_t)v10, (uint64_t)v8, type metadata accessor for SymbolButton.Configuration);
  SymbolButton.Metrics.init(configuration:traitCollection:)((uint64_t)v8, v15, v4);
  outlined destroy of SymbolButton.Configuration((uint64_t)v10, type metadata accessor for SymbolButton.Configuration);
  SymbolButton.metrics.setter((uint64_t)v4);
}

double SymbolButton.intrinsicContentSize.getter()
{
  uint64_t v1 = (int *)type metadata accessor for SymbolButton.Metrics(0);
  __chkstk_darwin();
  uint64_t v3 = (uint64_t *)((char *)&v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin();
  uint64_t v5 = (uint64_t *)((char *)&v32 - v4);
  __chkstk_darwin();
  uint64_t v7 = (uint64_t *)((char *)&v32 - v6);
  __chkstk_darwin();
  uint64_t v9 = (uint64_t *)((char *)&v32 - v8);
  SymbolButton.metrics.getter((uint64_t *)((char *)&v32 - v8));
  outlined destroy of SymbolButton.Configuration((uint64_t)v9, type metadata accessor for SymbolButton.Metrics);
  NSDirectionalEdgeInsets.horizontal.getter();
  double v11 = v10;
  SymbolButton.metrics.getter(v9);
  outlined destroy of SymbolButton.Configuration((uint64_t)v9, type metadata accessor for SymbolButton.Metrics);
  NSDirectionalEdgeInsets.vertical.getter();
  uint64_t v12 = v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration;
  swift_beginAccess();
  if (!*(void *)(v12 + 8))
  {
    double v20 = 0.0;
    if (!*(void *)(v12 + 128)) {
      goto LABEL_12;
    }
    goto LABEL_10;
  }
  SymbolButton.metrics.getter(v7);
  long long v13 = (double *)((char *)v7 + v1[11]);
  double v14 = *v13;
  int v15 = *((unsigned __int8 *)v13 + 16);
  outlined destroy of SymbolButton.Configuration((uint64_t)v7, type metadata accessor for SymbolButton.Metrics);
  id v16 = SymbolButton.imageView.getter();
  [v16 intrinsicContentSize];
  double v18 = v17;

  if (v14 >= v18) {
    double v19 = v18;
  }
  else {
    double v19 = v14;
  }
  if (v15) {
    double v19 = v18;
  }
  double v20 = v19 + 0.0;
  if (*(void *)(v12 + 128))
  {
LABEL_10:
    if ((*(unsigned char *)(v12 + 184) & 1) == 0)
    {
      id v21 = SymbolButton.titleLabel.getter();
      [v21 intrinsicContentSize];
      double v23 = v22;

      double v20 = v20 + v23;
    }
  }
LABEL_12:
  if (*(void *)(v12 + 8) && *(void *)(v12 + 128) && (*(unsigned char *)(v12 + 184) & 1) == 0)
  {
    SymbolButton.metrics.getter(v9);
    double v24 = *(double *)((char *)v9 + v1[8]);
    outlined destroy of SymbolButton.Configuration((uint64_t)v9, type metadata accessor for SymbolButton.Metrics);
    double v20 = v20 + v24;
  }
  double v25 = *(void **)(v12 + *(int *)(type metadata accessor for SymbolButton.Configuration(0) + 40));
  if (v25)
  {
    [v25 intrinsicContentSize];
    if (v26 > v20) {
      double v20 = v26;
    }
  }
  double v27 = v11 + 0.0;
  SymbolButton.metrics.getter(v5);
  double v28 = *(double *)((char *)v5 + v1[10]);
  outlined destroy of SymbolButton.Configuration((uint64_t)v5, type metadata accessor for SymbolButton.Metrics);
  if (v20 > v28) {
    double v29 = v20;
  }
  else {
    double v29 = v28;
  }
  double v30 = v27 + v29;
  SymbolButton.metrics.getter(v3);
  outlined destroy of SymbolButton.Configuration((uint64_t)v3, type metadata accessor for SymbolButton.Metrics);
  return v30;
}

Swift::Void __swiftcall SymbolButton.tintColorDidChange()()
{
  type metadata accessor for SymbolButton.Configuration(0);
  __chkstk_darwin();
  uint64_t v2 = (char *)&v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = (objc_class *)type metadata accessor for SymbolButton(0);
  v6.receiver = v0;
  v6.super_class = v3;
  objc_msgSendSuper2(&v6, "tintColorDidChange");
  uint64_t v4 = (uint64_t)v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration;
  swift_beginAccess();
  outlined init with copy of SymbolButton.Configuration(v4, (uint64_t)v2, type metadata accessor for SymbolButton.Configuration);
  SymbolButton.apply(_:)((uint64_t)v2);
  outlined destroy of SymbolButton.Configuration((uint64_t)v2, type metadata accessor for SymbolButton.Configuration);
}

id SymbolButton.sizeThatFits(_:)()
{
  return [v0 intrinsicContentSize];
}

long long *SymbolButton.Configuration.hitRectMinimumSize.unsafeMutableAddressor()
{
  if (one-time initialization token for hitRectMinimumSize != -1) {
    swift_once();
  }
  return &static SymbolButton.Configuration.hitRectMinimumSize;
}

double SymbolButton.hitRectMinimumSize.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_hitRectMinimumSize;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t SymbolButton.hitRectMinimumSize.setter(double a1, double a2)
{
  uint64_t v5 = (double *)(v2 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_hitRectMinimumSize);
  uint64_t result = swift_beginAccess();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*SymbolButton.hitRectMinimumSize.modify())()
{
  return ArtworkVideoReportingController.isEnabled.modify;
}

double SymbolButton.hitRect()()
{
  v15.receiver = v0;
  v15.super_class = (Class)type metadata accessor for SymbolButton(0);
  objc_msgSendSuper2(&v15, "hitRect");
  CGFloat v2 = v1;
  CGFloat v4 = v3;
  CGFloat v6 = v5;
  CGFloat v8 = v7;
  uint64_t v9 = (double *)&v0[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_hitRectMinimumSize];
  swift_beginAccess();
  double v10 = *v9;
  v16.origin.CGFloat x = v2;
  v16.origin.CGFloat y = v4;
  v16.size.CGFloat width = v6;
  v16.size.CGFloat height = v8;
  double Width = CGRectGetWidth(v16);
  if (Width > v10) {
    double v10 = Width;
  }
  v17.origin.CGFloat x = v2;
  v17.origin.CGFloat y = v4;
  v17.size.CGFloat width = v6;
  v17.size.CGFloat height = v8;
  CGRectGetHeight(v17);
  CGRect.center.getter();
  double v13 = v12 - v10 * 0.5;
  CGRect.center.getter();
  return v13;
}

void *SymbolButton.hitTest(_:with:)(uint64_t a1, double a2, double a3)
{
  if ((UIViewIgnoresTouchEvents() & 1) != 0 || !objc_msgSend(v3, "pointInside:withEvent:", a1, a2, a3)) {
    return 0;
  }
  id v7 = v3;
  return v3;
}

BOOL SymbolButton.point(inside:with:)(CGFloat a1, CGFloat a2)
{
  [v2 hitRect];
  v6.CGFloat x = a1;
  v6.CGFloat y = a2;
  return CGRectContainsPoint(v7, v6);
}

id SymbolButton.isHighlighted.getter()
{
  return SymbolButton.isHighlighted.getter((SEL *)&selRef_isHighlighted);
}

id SymbolButton.isHighlighted.setter(char a1)
{
  double v3 = (objc_class *)type metadata accessor for SymbolButton(0);
  v7.receiver = v1;
  v7.super_class = v3;
  char v4 = objc_msgSendSuper2(&v7, "isHighlighted");
  v6.receiver = v1;
  v6.super_class = v3;
  objc_msgSendSuper2(&v6, "setHighlighted:", a1 & 1);
  return SymbolButton.isHighlighted.didset(v4);
}

id SymbolButton.isHighlighted.didset(char a1)
{
  CGFloat v2 = v1;
  int v3 = a1 & 1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SymbolButton.Configuration?);
  __chkstk_darwin();
  double v5 = (char *)&aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id result = [v2 isHighlighted];
  if (result != v3)
  {
    id v7 = [v2 traitCollection];
    id v8 = [v7 userInterfaceIdiom];

    if (v8 == (id)6)
    {
      uint64_t v9 = self;
      if ([v9 areAnimationsEnabled])
      {
        if ([v2 isHighlighted])
        {
          uint64_t v10 = swift_allocObject();
          *(void *)(v10 + 16) = v2;
          double v27 = partial apply for closure #1 in SymbolButton.isHighlighted.didset;
          uint64_t v28 = v10;
          aBlock = _NSConcreteStackBlock;
          uint64_t v24 = 1107296256;
          double v25 = thunk for @escaping @callee_guaranteed @Sendable () -> ();
          double v26 = &block_descriptor_200;
          double v11 = _Block_copy(&aBlock);
          id v12 = v2;
          swift_release();
          uint64_t v13 = swift_allocObject();
          *(void *)(v13 + 16) = v12;
          double v27 = partial apply for closure #2 in SymbolButton.isHighlighted.didset;
          uint64_t v28 = v13;
          aBlock = _NSConcreteStackBlock;
          uint64_t v24 = 1107296256;
          double v25 = thunk for @escaping @callee_guaranteed (@unowned Bool) -> ();
          double v26 = &block_descriptor_206;
          double v14 = _Block_copy(&aBlock);
          id v15 = v12;
          swift_release();
          [v9 animateWithDuration:0x20000 delay:v11 options:v14 animations:0.1 completion:0.0];
          _Block_release(v14);
          _Block_release(v11);
        }
        else
        {
          type metadata accessor for UIMenu(0, (unint64_t *)&_sSo6UIViewCML_0);
          type metadata accessor for UIMenu(0, &lazy cache variable for type metadata for UISpringTimingParameters);
          id v16 = UISpringTimingParameters.init(dampingRatio:response:)(0.7, 0.4);
          uint64_t v17 = swift_allocObject();
          *(void *)(v17 + 16) = v2;
          id v18 = v2;
          static UIView.animate(withSpringTimingParameters:delay:options:animations:completion:)(v16, 0, partial apply for closure #1 in performIdentityScale #1 () in SymbolButton.isHighlighted.didset, v17, 0, 0, 0.0);

          swift_release();
        }
      }
    }
    uint64_t v19 = type metadata accessor for SymbolButton.Configuration(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v5, 1, 1, v19);
    unsigned int v20 = [self areAnimationsEnabled];
    if (v20) {
      uint64_t v21 = 0x3FD0000000000000;
    }
    else {
      uint64_t v21 = 0;
    }
    if (v20) {
      uint64_t v22 = 3075;
    }
    else {
      uint64_t v22 = 0;
    }
    SymbolButton.updateConfigurationIfNeeded(_:animation:)((uint64_t)v5, v21, 0, v22, v20 ^ 1);
    return (id)outlined destroy of TaskPriority?((uint64_t)v5, &demangling cache variable for type metadata for SymbolButton.Configuration?);
  }
  return result;
}

id closure #1 in performIdentityScale #1 () in SymbolButton.isHighlighted.didset(uint64_t a1, CGFloat a2)
{
  CGFloat v2 = *(void **)(a1 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_containerView);
  CGAffineTransformMakeScale(&v4, a2, a2);
  return [v2 setTransform:&v4];
}

id closure #2 in SymbolButton.isHighlighted.didset(int a1, id a2)
{
  id result = [a2 showsMenuAsPrimaryAction];
  if (result)
  {
    id result = [a2 isContextMenuInteractionEnabled];
    if (result)
    {
      type metadata accessor for UIMenu(0, (unint64_t *)&_sSo6UIViewCML_0);
      type metadata accessor for UIMenu(0, &lazy cache variable for type metadata for UISpringTimingParameters);
      id v4 = UISpringTimingParameters.init(dampingRatio:response:)(0.7, 0.4);
      uint64_t v5 = swift_allocObject();
      *(void *)(v5 + 16) = a2;
      id v6 = a2;
      static UIView.animate(withSpringTimingParameters:delay:options:animations:completion:)(v4, 0, closure #1 in performIdentityScale #1 () in SymbolButton.isHighlighted.didsetpartial apply, v5, 0, 0, 0.0);

      return (id)swift_release();
    }
  }
  return result;
}

id @objc SymbolButton.isHighlighted.getter(void *a1, uint64_t a2, uint64_t (*a3)(void), SEL *a4)
{
  v6.receiver = a1;
  v6.super_class = (Class)a3(0);
  return objc_msgSendSuper2(&v6, *a4);
}

id SymbolButton.isSelected.getter()
{
  return SymbolButton.isHighlighted.getter((SEL *)&selRef_isSelected);
}

id SymbolButton.isHighlighted.getter(SEL *a1)
{
  v4.receiver = v1;
  v4.super_class = (Class)type metadata accessor for SymbolButton(0);
  return objc_msgSendSuper2(&v4, *a1);
}

id SymbolButton.isSelected.setter(char a1)
{
  return SymbolButton.isSelected.setter(a1, (SEL *)&selRef_isSelected, (SEL *)&selRef_setSelected_);
}

id SymbolButton.isEnabled.getter()
{
  return SymbolButton.isHighlighted.getter((SEL *)&selRef_isEnabled);
}

id SymbolButton.isEnabled.setter(char a1)
{
  return SymbolButton.isSelected.setter(a1, (SEL *)&selRef_isEnabled, (SEL *)&selRef_setEnabled_);
}

id SymbolButton.isSelected.setter(char a1, SEL *a2, SEL *a3)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SymbolButton.Configuration?);
  __chkstk_darwin();
  id v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (objc_class *)type metadata accessor for SymbolButton(0);
  v17.receiver = v3;
  v17.super_class = v9;
  unsigned int v10 = objc_msgSendSuper2(&v17, *a2);
  v16.receiver = v3;
  v16.super_class = v9;
  objc_msgSendSuper2(&v16, *a3, a1 & 1);
  id result = [v3 *a2];
  if (v10 != result)
  {
    uint64_t v12 = type metadata accessor for SymbolButton.Configuration(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v8, 1, 1, v12);
    unsigned int v13 = [self areAnimationsEnabled];
    if (v13) {
      uint64_t v14 = 0x3FD0000000000000;
    }
    else {
      uint64_t v14 = 0;
    }
    if (v13) {
      uint64_t v15 = 3075;
    }
    else {
      uint64_t v15 = 0;
    }
    SymbolButton.updateConfigurationIfNeeded(_:animation:)((uint64_t)v8, v14, 0, v15, v13 ^ 1);
    return (id)outlined destroy of TaskPriority?((uint64_t)v8, &demangling cache variable for type metadata for SymbolButton.Configuration?);
  }
  return result;
}

Swift::Void __swiftcall SymbolButton.setEnabled(_:animated:)(Swift::Bool _, Swift::Bool animated)
{
  if (animated)
  {
    [v2 setEnabled:_];
  }
  else
  {
    objc_super v4 = self;
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v2;
    *(unsigned char *)(v5 + 24) = _;
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = partial apply for closure #1 in SymbolButton.setEnabled(_:animated:);
    *(void *)(v6 + 24) = v5;
    v10[4] = thunk for @escaping @callee_guaranteed () -> ()partial apply;
    _OWORD v10[5] = v6;
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 1107296256;
    v10[2] = thunk for @escaping @callee_guaranteed () -> ();
    v10[3] = &block_descriptor_45_1;
    uint64_t v7 = _Block_copy(v10);
    id v8 = v2;
    swift_retain();
    swift_release();
    [v4 performWithoutAnimation:v7];
    _Block_release(v7);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    if (isEscapingClosureAtFileLocation) {
      __break(1u);
    }
  }
}

uint64_t SymbolButton.buildMenu.getter()
{
  return SymbolButton.configurationProvider.getter(&OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_buildMenu, (void (*)(void, void))outlined copy of (@escaping @callee_guaranteed (@unowned Double) -> ())?);
}

uint64_t SymbolButton.configurationProvider.getter(void *a1, void (*a2)(void, void))
{
  objc_super v4 = (void *)(v2 + *a1);
  swift_beginAccess();
  uint64_t v5 = *v4;
  a2(*v4, v4[1]);
  return v5;
}

uint64_t SymbolButton.buildMenu.setter(uint64_t a1, uint64_t a2)
{
  return SymbolButton.handler.setter(a1, a2, &OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_buildMenu, (uint64_t (*)(uint64_t, uint64_t))outlined consume of (@escaping @callee_guaranteed (@unowned Double) -> ())?);
}

uint64_t SymbolButton.handler.setter(uint64_t a1, uint64_t a2, void *a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  id v8 = (uint64_t *)(v4 + *a3);
  swift_beginAccess();
  uint64_t v9 = *v8;
  uint64_t v10 = v8[1];
  *id v8 = a1;
  v8[1] = a2;
  return a4(v9, v10);
}

uint64_t (*SymbolButton.buildMenu.modify())()
{
  return ArtworkVideoReportingController.isEnabled.modify;
}

id SymbolButton.imageView.getter()
{
  uint64_t v1 = OBJC_IVAR____TtC11MusicCoreUI12SymbolButton____lazy_storage___imageView;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton____lazy_storage___imageView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton____lazy_storage___imageView);
  }
  else
  {
    uint64_t v4 = v0;
    uint64_t v5 = v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration;
    swift_beginAccess();
    long long v6 = *(_OWORD *)(v5 + 80);
    _OWORD v17[4] = *(_OWORD *)(v5 + 64);
    v17[5] = v6;
    v17[6] = *(_OWORD *)(v5 + 96);
    uint64_t v18 = *(void *)(v5 + 112);
    long long v7 = *(_OWORD *)(v5 + 16);
    v17[0] = *(_OWORD *)v5;
    v17[1] = v7;
    long long v8 = *(_OWORD *)(v5 + 48);
    v17[2] = *(_OWORD *)(v5 + 32);
    v17[3] = v8;
    uint64_t v9 = (objc_class *)type metadata accessor for SymbolButton.ImageView();
    id v10 = objc_allocWithZone(v9);
    outlined retain of SymbolButton.Symbol((uint64_t)v17);
    v16.receiver = v10;
    v16.super_class = v9;
    id v11 = objc_msgSendSuper2(&v16, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
    [v11 setAdjustsImageSizeForAccessibilityContentSizeCategory:0];
    [v11 setContentMode:4];
    SymbolButton.ImageView.apply(_:)((uint64_t)v17);
    outlined release of SymbolButton.Symbol((uint64_t)v17);

    uint64_t v12 = *(void **)(v4 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_backgroundView);
    if (([v11 isDescendantOfView:v12] & 1) == 0) {
      [v12 addSubview:v11];
    }
    unsigned int v13 = *(void **)(v4 + v1);
    *(void *)(v4 + v1) = v11;
    id v3 = v11;

    uint64_t v2 = 0;
  }
  id v14 = v2;
  return v3;
}

id SymbolButton.titleLabel.getter()
{
  uint64_t v1 = OBJC_IVAR____TtC11MusicCoreUI12SymbolButton____lazy_storage___titleLabel;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton____lazy_storage___titleLabel);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton____lazy_storage___titleLabel);
  }
  else
  {
    uint64_t v4 = v0;
    uint64_t v5 = v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration;
    swift_beginAccess();
    long long v6 = *(_OWORD *)(v5 + 136);
    long long v7 = *(_OWORD *)(v5 + 168);
    _OWORD v14[2] = *(_OWORD *)(v5 + 152);
    void v14[3] = v7;
    char v15 = *(unsigned char *)(v5 + 184);
    v14[0] = *(_OWORD *)(v5 + 120);
    v14[1] = v6;
    id v8 = objc_allocWithZone((Class)type metadata accessor for SymbolButton.Label());
    outlined retain of SymbolButton.Title((uint64_t)v14);
    id v9 = SymbolButton.Label.init(configuration:)((uint64_t)v14);
    id v10 = *(void **)(v4 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_backgroundView);
    if (([v9 isDescendantOfView:v10] & 1) == 0) {
      [v10 addSubview:v9];
    }
    id v11 = *(void **)(v4 + v1);
    *(void *)(v4 + v1) = v9;
    id v3 = v9;

    uint64_t v2 = 0;
  }
  id v12 = v2;
  return v3;
}

void SymbolButton.layoutCustomViewIfNeeded()()
{
  uint64_t v1 = type metadata accessor for SymbolButton.Configuration(0);
  __chkstk_darwin();
  id v3 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *(void **)(v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_customView);
  if (v4)
  {
    uint64_t v5 = *(void **)(v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_materialView);
    id v6 = v4;
    id v7 = [v5 contentView];
    [v7 bounds];
    double v9 = v8;
    double v11 = v10;
    double v13 = v12;
    double v15 = v14;

    uint64_t v16 = v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration;
    swift_beginAccess();
    outlined init with copy of SymbolButton.Configuration(v16, (uint64_t)v3, type metadata accessor for SymbolButton.Configuration);
    objc_super v17 = &v3[*(int *)(v1 + 40)];
    if (*(void *)v17) {
      uint64_t v18 = (const UIEdgeInsets *)(v17 + 8);
    }
    else {
      uint64_t v18 = &UIEdgeInsetsZero;
    }
    if (*(void *)v17) {
      p_left = (CGFloat *)(v17 + 16);
    }
    else {
      p_left = &UIEdgeInsetsZero.left;
    }
    double v20 = *p_left;
    double top = v18->top;
    outlined destroy of SymbolButton.Configuration((uint64_t)v3, type metadata accessor for SymbolButton.Configuration);
    objc_msgSend(v6, "setFrame:", UIEdgeInsetsInsetRect(v9, v11, v13, v15, top, v20));
  }
}

void SymbolButton.layoutBadgeViewIfNeeded()()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_badgeView];
  if (v1)
  {
    id v7 = v1;
    id v2 = [v0 traitCollection];
    id v3 = [v2 userInterfaceIdiom];

    if (v3 == (id)6) {
      double v4 = 12.0;
    }
    else {
      double v4 = 8.0;
    }
    [v0 bounds];
    double MaxX = CGRectGetMaxX(v9);
    v10.origin.CGFloat x = 0.0;
    v10.origin.CGFloat y = 0.0;
    v10.size.CGFloat width = v4;
    v10.size.CGFloat height = v4;
    double v6 = MaxX - CGRectGetWidth(v10) + 1.0;
    [v0 bounds];
    objc_msgSend(v7, "setFrame:", v6, CGRectGetMinY(v11) + -1.0, v4, v4);
  }
}

id one-time initialization function for fontMetrics()
{
  id result = [self defaultMetrics];
  static SymbolButton.Metrics.fontMetrics = (uint64_t)result;
  return result;
}

uint64_t SymbolButton.Metrics.init(configuration:traitCollection:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIView.Corner?);
  __chkstk_darwin();
  uint64_t v102 = (uint64_t)&v96 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = (int *)type metadata accessor for SymbolButton.Metrics(0);
  uint64_t v8 = (uint64_t)a3 + v7[5];
  uint64_t v9 = type metadata accessor for UIView.Corner();
  CGRect v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56);
  uint64_t v101 = v8;
  v10(v8, 1, 1, v9);
  CGRect v11 = (char *)a3 + v7[11];
  *(void *)CGRect v11 = 0;
  *((void *)v11 + 1) = 0;
  v11[16] = 1;
  double v12 = (int *)type metadata accessor for SymbolButton.Configuration(0);
  double v13 = (unsigned __int8 *)(a1 + v12[16]);
  int v98 = *v13;
  id v103 = a2;
  CGFloat v97 = v11;
  if (v98 == 1)
  {
    double v14 = (NSString *)[a2 preferredContentSizeCategory];
    UIContentSizeCategory v15 = v14;
    uint64_t v16 = (void *)*((void *)v13 + 1);
    if (v16)
    {
      objc_super v17 = v14;
      UIContentSizeCategory v15 = v16;
      char v18 = static UIContentSizeCategory.>= infix(_:_:)();
      if (v18) {
        UIContentSizeCategory v19 = v17;
      }
      else {
        UIContentSizeCategory v19 = v15;
      }
      if ((v18 & 1) == 0) {
        UIContentSizeCategory v15 = v17;
      }
    }
    double v20 = (void *)*((void *)v13 + 2);
    if (v20)
    {
      uint64_t v21 = v20;
      UIContentSizeCategory v15 = v15;
      char v22 = static UIContentSizeCategory.< infix(_:_:)();

      if (v22)
      {

        UIContentSizeCategory v15 = v21;
      }
      else
      {
      }
    }
  }
  else
  {
    UIContentSizeCategory v15 = UIContentSizeCategoryLarge;
  }
  *((unsigned char *)a3 + v7[13]) = v13[24];
  double v23 = self;
  UIContentSizeCategory v100 = v15;
  id v24 = [v23 traitCollectionWithPreferredContentSizeCategory:v15];
  *a3 = v24;
  double v25 = self;
  uint64_t v26 = *(void *)(a1 + 136);
  uint64_t v96 = (uint64_t)v24;
  id v27 = v24;
  id v28 = [v25 preferredFontDescriptorWithTextStyle:v26 compatibleWithTraitCollection:v27];
  double v29 = self;
  id v99 = v28;
  [v28 pointSize];
  id v30 = objc_msgSend(v29, "systemFontOfSize:weight:");
  int v31 = v30;
  *(void *)((char *)a3 + v7[6]) = v30;
  if (*(unsigned char *)(a1 + 40))
  {
    uint64_t v32 = *(void *)(a1 + 24);
    id v33 = v30;
    id v34 = [v25 preferredFontDescriptorWithTextStyle:v32 compatibleWithTraitCollection:v27];
    [v34 pointSize];
    id v36 = [self configurationWithPointSize:*(void *)(a1 + 48) weight:*(void *)(a1 + 56) scale:v35];
  }
  else
  {
    double v37 = *(double *)(a1 + 32);
    uint64_t v38 = *(void *)(a1 + 48);
    uint64_t v39 = *(void *)(a1 + 56);
    CGFloat v40 = self;
    id v41 = v31;
    id v36 = [v40 configurationWithPointSize:v38 weight:v39 scale:v37];
  }
  *(void *)((char *)a3 + v7[7]) = v36;
  *(void *)((char *)a3 + v7[8]) = *(void *)(a1 + v12[12]);
  int v42 = *(unsigned __int8 *)(a1 + 80);
  id v43 = v103;
  if (v42 == 255)
  {
    *(UIOffset *)((char *)a3 + v7[9]) = UIOffsetZero;
    if (v98) {
      goto LABEL_24;
    }
LABEL_22:

    double v48 = (_OWORD *)(a1 + v12[15]);
    double v49 = (_OWORD *)((char *)a3 + v7[12]);
    long long v50 = v48[1];
    *double v49 = *v48;
    v49[1] = v50;
    *(_OWORD *)((char *)a3 + v7[10]) = *(_OWORD *)(a1 + v12[13]);
    uint64_t v51 = a1 + v12[14];
    LOBYTE(v49) = *(unsigned char *)(v51 + 16);
    long long v52 = *(_OWORD *)v51;
    double v53 = v97;
    *CGFloat v97 = v52;
    *((unsigned char *)v53 + 16) = (_BYTE)v49;
    uint64_t v54 = a1 + v12[9];
    uint64_t v55 = v102;
    outlined init with copy of (String, Any)(v54, v102, &demangling cache variable for type metadata for UIView.Corner?);
    goto LABEL_29;
  }
  uint64_t v44 = *(void *)(a1 + 72);
  if (v42)
  {
    CGFloat v56 = (void *)((char *)a3 + v7[9]);
    *CGFloat v56 = *(void *)(a1 + 64);
    v56[1] = v44;
    if (!v98) {
      goto LABEL_22;
    }
  }
  else
  {
    [v103 displayScale];
    static UIOffset./ infix(_:_:)();
    double v45 = (void *)((char *)a3 + v7[9]);
    *double v45 = v46;
    v45[1] = v47;
    if (!v98) {
      goto LABEL_22;
    }
  }
LABEL_24:
  if (one-time initialization token for fontMetrics != -1) {
    swift_once();
  }
  double v57 = (void *)static SymbolButton.Metrics.fontMetrics;
  uint64_t v58 = (double *)(a1 + v12[15]);
  double v59 = *v58;
  double v60 = v58[1];
  double v61 = v58[2];
  double v62 = v58[3];
  id v63 = v27;
  [v57 scaledValueForValue:v63 compatibleWithTraitCollection:v59];
  uint64_t v65 = v64;
  [v57 scaledValueForValue:v63 compatibleWithTraitCollection:v60];
  uint64_t v67 = v66;
  [v57 scaledValueForValue:v63 compatibleWithTraitCollection:v61];
  uint64_t v69 = v68;
  [v57 scaledValueForValue:v63 compatibleWithTraitCollection:v62];
  uint64_t v71 = v70;

  uint64_t v72 = (void *)((char *)a3 + v7[12]);
  *uint64_t v72 = v65;
  v72[1] = v67;
  v72[2] = v69;
  v72[3] = v71;
  CGFloat v73 = (void *)static SymbolButton.Metrics.fontMetrics;
  CGFloat v74 = (double *)(a1 + v12[13]);
  double v75 = *v74;
  double v76 = v74[1];
  id v77 = v63;
  [v73 scaledValueForValue:v77 compatibleWithTraitCollection:v75];
  uint64_t v79 = v78;
  [v73 scaledValueForValue:v77 compatibleWithTraitCollection:v76];
  uint64_t v81 = v80;

  id v82 = (void *)((char *)a3 + v7[10]);
  *id v82 = v79;
  v82[1] = v81;
  uint64_t v83 = a1 + v12[14];
  if ((*(unsigned char *)(v83 + 16) & 1) == 0)
  {
    double v85 = *(double *)v83;
    double v84 = *(double *)(v83 + 8);
    double v86 = (void *)static SymbolButton.Metrics.fontMetrics;
    id v87 = v77;
    [v86 scaledValueForValue:v87 compatibleWithTraitCollection:v85];
    uint64_t v89 = v88;
    [v86 scaledValueForValue:v87 compatibleWithTraitCollection:v84];
    uint64_t v91 = v90;

    id v92 = v97;
    *(void *)CGFloat v97 = v89;
    *((void *)v92 + 1) = v91;
    *((unsigned char *)v92 + 16) = 0;
  }
  uint64_t v93 = a1 + v12[9];
  id v94 = v77;
  uint64_t v55 = v102;
  UIFontMetrics.scaledValue(for:compatibleWith:)(v93, v96, v102);

LABEL_29:
  outlined destroy of SymbolButton.Configuration(a1, type metadata accessor for SymbolButton.Configuration);
  return outlined assign with take of Album?(v55, v101, &demangling cache variable for type metadata for UIView.Corner?);
}

uint64_t UIFontMetrics.scaledValue(for:compatibleWith:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v24 = a2;
  uint64_t v25 = a3;
  uint64_t v4 = type metadata accessor for UIView.Corner.Radius();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  id v7 = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v9 = (char *)v23 - v8;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIView.Corner?);
  __chkstk_darwin();
  CGRect v11 = (char *)v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for UIView.Corner();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin();
  UIContentSizeCategory v15 = (char *)v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of (String, Any)(a1, (uint64_t)v11, &demangling cache variable for type metadata for UIView.Corner?);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    outlined destroy of TaskPriority?((uint64_t)v11, &demangling cache variable for type metadata for UIView.Corner?);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
    UIView.Corner.radius.getter();
    uint64_t v16 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v9, v4);
    if (v16 == enum case for UIView.Corner.Radius.value(_:))
    {
      uint64_t v17 = v16;
      (*(void (**)(char *, uint64_t))(v5 + 96))(v9, v4);
      double v18 = *(double *)v9;
      char v19 = v9[8];
      uint64_t v20 = v25;
      (*(void (**)(uint64_t, char *, uint64_t))(v13 + 16))(v25, v15, v12);
      [v23[1] scaledValueForValue:v24 compatibleWithTraitCollection:v18];
      *(void *)id v7 = v21;
      unsigned char v7[8] = v19;
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 104))(v7, v17, v4);
      UIView.Corner.radius.setter();
      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v13 + 56))(v20, 0, 1, v12);
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v9, v4);
  }
  return outlined init with copy of (String, Any)(a1, v25, &demangling cache variable for type metadata for UIView.Corner?);
}

uint64_t SymbolButton.metrics.getter@<X0>(void *a1@<X8>)
{
  type metadata accessor for SymbolButton.Configuration(0);
  __chkstk_darwin();
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SymbolButton.Metrics?);
  __chkstk_darwin();
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v14 - v7;
  uint64_t v9 = (uint64_t)v1 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton____lazy_storage___metrics;
  swift_beginAccess();
  outlined init with copy of (String, Any)(v9, (uint64_t)v8, &demangling cache variable for type metadata for SymbolButton.Metrics?);
  uint64_t v10 = type metadata accessor for SymbolButton.Metrics(0);
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) != 1) {
    return outlined init with take of SymbolButton.Configuration((uint64_t)v8, (uint64_t)a1, type metadata accessor for SymbolButton.Metrics);
  }
  outlined destroy of TaskPriority?((uint64_t)v8, &demangling cache variable for type metadata for SymbolButton.Metrics?);
  uint64_t v12 = (uint64_t)v1 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration;
  swift_beginAccess();
  outlined init with copy of SymbolButton.Configuration(v12, (uint64_t)v4, type metadata accessor for SymbolButton.Configuration);
  SymbolButton.Metrics.init(configuration:traitCollection:)((uint64_t)v4, [v1 traitCollection], a1);
  outlined init with copy of SymbolButton.Configuration((uint64_t)a1, (uint64_t)v6, type metadata accessor for SymbolButton.Metrics);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v6, 0, 1, v10);
  swift_beginAccess();
  outlined assign with take of Album?((uint64_t)v6, v9, &demangling cache variable for type metadata for SymbolButton.Metrics?);
  return swift_endAccess();
}

uint64_t SymbolButton.metrics.setter(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SymbolButton.Metrics?);
  __chkstk_darwin();
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for SymbolButton.Metrics(0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v8 = (void **)((char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin();
  uint64_t v10 = (void **)((char *)&v14 - v9);
  SymbolButton.metrics.getter((uint64_t *)((char *)&v14 - v9));
  outlined init with copy of SymbolButton.Configuration(a1, (uint64_t)v4, type metadata accessor for SymbolButton.Metrics);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
  uint64_t v11 = (uint64_t)v1 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton____lazy_storage___metrics;
  swift_beginAccess();
  outlined assign with take of Album?((uint64_t)v4, v11, &demangling cache variable for type metadata for SymbolButton.Metrics?);
  swift_endAccess();
  SymbolButton.metrics.getter(v8);
  char v12 = specialized static SymbolButton.Metrics.__derived_struct_equals(_:_:)(v8, v10);
  outlined destroy of SymbolButton.Configuration((uint64_t)v8, type metadata accessor for SymbolButton.Metrics);
  if ((v12 & 1) == 0)
  {
    SymbolButton.metrics.getter(v8);
    SymbolButton.apply(_:)((uint64_t)v8);
    outlined destroy of SymbolButton.Configuration((uint64_t)v8, type metadata accessor for SymbolButton.Metrics);
    [v1 invalidateIntrinsicContentSize];
    [v1 setNeedsLayout];
  }
  outlined destroy of SymbolButton.Configuration(a1, type metadata accessor for SymbolButton.Metrics);
  return outlined destroy of SymbolButton.Configuration((uint64_t)v10, type metadata accessor for SymbolButton.Metrics);
}

void SymbolButton.apply(_:)(uint64_t a1)
{
  type metadata accessor for SymbolButton.Metrics(0);
  __chkstk_darwin();
  double v86 = (uint64_t *)((char *)&v83 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v87 = type metadata accessor for SymbolButton.Configuration(0);
  __chkstk_darwin();
  uint64_t v85 = (uint64_t)&v83 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v6 = (char *)&v83 - v5;
  if (one-time initialization token for logger != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  __swift_project_value_buffer(v7, (uint64_t)static SymbolButton.logger);
  outlined init with copy of SymbolButton.Configuration(a1, (uint64_t)v6, type metadata accessor for SymbolButton.Configuration);
  uint64_t v8 = v1;
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    char v12 = (char *)swift_slowAlloc();
    *(void *)&v93[0] = v12;
    *(_DWORD *)uint64_t v11 = 136446466;
    uint64_t v13 = (uint64_t *)&v8[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_debugLabel];
    swift_beginAccess();
    unint64_t v14 = v13[1];
    if (v14)
    {
      uint64_t v15 = *v13;
      unint64_t v16 = v14;
    }
    else
    {
      uint64_t v88 = v8;
      id v17 = [v88 description];
      uint64_t v89 = v12;
      id v18 = v17;
      uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v16 = v19;
    }
    swift_bridgeObjectRetain();
    *(void *)(v11 + 4) = _s2os32getNullTerminatedUTF8PointerImpl_21storingStringOwnersInSVSS_SpyypGSgztF_2(v15, v16, (uint64_t *)v93);
    swift_bridgeObjectRelease();

    *(_WORD *)(v11 + 12) = 2082;
    unint64_t v20 = SymbolButton.Configuration.description.getter();
    *(void *)(v11 + 14) = _s2os32getNullTerminatedUTF8PointerImpl_21storingStringOwnersInSVSS_SpyypGSgztF_2(v20, v21, (uint64_t *)v93);
    swift_bridgeObjectRelease();
    outlined destroy of SymbolButton.Configuration((uint64_t)v6, type metadata accessor for SymbolButton.Configuration);
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "[%{public}s] Applying configuration=%{public}s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    outlined destroy of SymbolButton.Configuration((uint64_t)v6, type metadata accessor for SymbolButton.Configuration);
  }

  char v22 = *(void **)&v8[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_materialView];
  outlined init with take of PresentationSource?(a1 + 224, (uint64_t)v95, &demangling cache variable for type metadata for SymbolButton.Material?);
  SymbolButton.MaterialView.apply(_:)((uint64_t)v95);
  double v84 = v22;
  id v23 = [v22 contentView];
  uint64_t v24 = *(void *)(a1 + 272);
  uint64_t v25 = *(void *)(a1 + 280);
  uint64_t v26 = *(void **)(a1 + 288);
  id v27 = v26;
  UIView.border.setter(v24, v25, v26);

  uint64_t v88 = *(char **)&v8[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_backgroundView];
  uint64_t v89 = v8;
  uint64_t v28 = *(void *)(a1 + 192);
  double v29 = *(void **)(a1 + 200);
  if (v29 == (void *)1)
  {
    if (one-time initialization token for clear != -1) {
      swift_once();
    }
    swift_beginAccess();
    double v30 = *(double *)&static SymbolButton.Background.clear;
    int v31 = (void *)qword_1005AEC48;
    uint64_t v32 = qword_1005AEC58;
    swift_bridgeObjectRetain();
    id v33 = v31;
  }
  else
  {
    double v30 = *(double *)(a1 + 192);
    uint64_t v32 = *(void *)(a1 + 216);
    int v31 = *(void **)(a1 + 200);
  }
  outlined copy of SymbolButton.Background?(v28, v29);
  id v34 = [v88 layer];
  if (v32) {
    NSString v35 = String._bridgeToObjectiveC()();
  }
  else {
    NSString v35 = 0;
  }
  id v36 = (int *)v87;
  [v34 setCompositingFilter:v35];
  swift_unknownObjectRelease();

  id v37 = v31;
  SymbolButton.BackgroundView.configuration.setter(v31, v30);

  swift_bridgeObjectRelease();
  id v38 = SymbolButton.imageView.getter();
  long long v39 = *(_OWORD *)(a1 + 80);
  v93[4] = *(_OWORD *)(a1 + 64);
  void v93[5] = v39;
  v93[6] = *(_OWORD *)(a1 + 96);
  uint64_t v94 = *(void *)(a1 + 112);
  long long v40 = *(_OWORD *)(a1 + 16);
  v93[0] = *(_OWORD *)a1;
  v93[1] = v40;
  long long v41 = *(_OWORD *)(a1 + 48);
  v93[2] = *(_OWORD *)(a1 + 32);
  v93[3] = v41;
  SymbolButton.ImageView.apply(_:)((uint64_t)v93);

  id v42 = SymbolButton.titleLabel.getter();
  long long v43 = *(_OWORD *)(a1 + 136);
  long long v44 = *(_OWORD *)(a1 + 168);
  v91[2] = *(_OWORD *)(a1 + 152);
  v91[3] = v44;
  char v92 = *(unsigned char *)(a1 + 184);
  v91[0] = *(_OWORD *)(a1 + 120);
  v91[1] = v43;
  outlined init with take of PresentationSource?((uint64_t)v91, (uint64_t)v96, &_sSSSgMD_1);
  SymbolButton.Label.apply(_:)((uint64_t)v91);

  outlined init with take of PresentationSource?((uint64_t)v96, (uint64_t)&v97, &_sSSSgMD_1);
  if (v98)
  {
    uint64_t v45 = HIBYTE(v98) & 0xF;
    if ((v98 & 0x2000000000000000) == 0) {
      uint64_t v45 = v97 & 0xFFFFFFFFFFFFLL;
    }
    if (v45)
    {
      NSString v46 = String._bridgeToObjectiveC()();
      [v89 setAccessibilityLabel:v46];
    }
  }
  uint64_t v47 = a1 + v36[11];
  double v48 = *(void **)(v47 + 16);
  double v49 = &selRef_shadowColor;
  if (v48 != (void *)1)
  {
    CGFloat v56 = *(char **)v47;
    uint64_t v57 = *(void *)(v47 + 8);
    double v58 = *(double *)&v57;
    uint64_t v59 = OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_badgeView;
    uint64_t v51 = v89;
    double v60 = *(void **)&v89[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_badgeView];
    uint64_t v88 = v56;
    uint64_t v83 = v57;
    if (v60)
    {
      id v61 = v60;
      id v62 = v48;
      id v63 = (char *)v61;
      uint64_t v64 = v63;
    }
    else
    {
      id v67 = objc_allocWithZone((Class)type metadata accessor for SymbolButton.BadgeView());
      outlined copy of SymbolButton.Badge?((uint64_t)v56, v57, v48);
      id v68 = v48;
      uint64_t v66 = SymbolButton.BadgeView.init(configuration:)(v48, *(double *)&v56, *(double *)&v57);
      id v63 = *(char **)&v51[v59];
      *(void *)&v51[v59] = v66;
      uint64_t v69 = v66;
      if (!v66)
      {
        if (!v63)
        {
LABEL_36:

          uint64_t v72 = *(char **)&v51[v59];
          if (v72)
          {
            double v49 = &selRef_shadowColor;
            if (v48)
            {
              CGFloat v73 = v72;
              CGFloat v74 = v48;
              id v75 = v48;
            }
            else
            {
              double v76 = self;
              id v77 = v72;
              id v75 = [v76 tintColor];
              CGFloat v74 = 0;
            }
            id v78 = v74;
            [v72 setBackgroundColor:v75];

            [v72 setAlpha:v58];
            [*(id *)&v72[OBJC_IVAR____TtCC11MusicCoreUI12SymbolButtonP33_0D6450BB937596549C350B7D294A2A939BadgeView_punchOutView] setAlpha:v58];
            SymbolButton.BadgeView.layoutPunchOutView()();
            outlined consume of SymbolButton.Badge?((uint64_t)v88, v83, (uint64_t)v48);
          }
          else
          {
            outlined consume of SymbolButton.Badge?((uint64_t)v88, v83, (uint64_t)v48);
            double v49 = &selRef_shadowColor;
          }
          goto LABEL_42;
        }
        uint64_t v64 = 0;
LABEL_30:
        objc_msgSend(v63, "removeFromSuperview", v83);
        uint64_t v66 = *(char **)&v51[v59];
        if (!v66) {
          goto LABEL_35;
        }
        goto LABEL_34;
      }
      uint64_t v64 = v69;
      if (!v63)
      {
LABEL_34:
        uint64_t v70 = *(void **)&v51[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_containerView];
        uint64_t v71 = v66;
        [v70 insertSubview:v71 aboveSubview:v84];
        SymbolButton.layoutBadgeViewIfNeeded()();

        id v36 = (int *)v87;
        goto LABEL_35;
      }
    }
    type metadata accessor for SymbolButton.BadgeView();
    id v63 = v63;
    uint64_t v64 = v64;
    char v65 = static NSObject.== infix(_:_:)();

    if (v65)
    {
LABEL_35:

      goto LABEL_36;
    }
    goto LABEL_30;
  }
  uint64_t v50 = OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_badgeView;
  uint64_t v51 = v89;
  long long v52 = *(void **)&v89[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_badgeView];
  *(void *)&v89[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_badgeView] = 0;
  if (v52)
  {
    [v52 removeFromSuperview];
    double v53 = *(void **)&v51[v50];
    if (v53)
    {
      uint64_t v54 = *(void **)&v51[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_containerView];
      id v55 = v53;
      [v54 insertSubview:v55 aboveSubview:v84];
      SymbolButton.layoutBadgeViewIfNeeded()();
    }
  }
LABEL_42:
  outlined init with take of PresentationSource?(a1 + v36[10], (uint64_t)v90, &demangling cache variable for type metadata for SymbolButton.CustomView?);
  SymbolButton.apply(_:)((uint64_t)v90);
  objc_msgSend(v51, v49[292], *(double *)(a1 + v36[17]));
  [v51 setTintColor:*(void *)(a1 + v36[18])];
  id v79 = [v51 traitCollection];
  uint64_t v80 = v86;
  SymbolButton.metrics.getter(v86);
  outlined destroy of SymbolButton.Configuration((uint64_t)v80, type metadata accessor for SymbolButton.Metrics);
  uint64_t v81 = a1;
  uint64_t v82 = v85;
  outlined init with copy of SymbolButton.Configuration(v81, v85, type metadata accessor for SymbolButton.Configuration);
  SymbolButton.Metrics.init(configuration:traitCollection:)(v82, v79, v80);
  SymbolButton.metrics.setter((uint64_t)v80);
  SymbolButton.metrics.getter(v80);
  SymbolButton.updateCorner(using:)((uint64_t)v80);
  outlined destroy of SymbolButton.Configuration((uint64_t)v80, type metadata accessor for SymbolButton.Metrics);
  SymbolButton.applyMaterialGroupNameIfNeeded()();
}

{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  char v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  double v14;
  void *v15;
  uint64_t v16;
  void v17[7];
  void v18[7];
  id v19[7];
  id v20[7];

  id v2 = v1;
  uint64_t v4 = OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_customView;
  uint64_t v5 = *(void **)(v1 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_customView);
  outlined init with take of PresentationSource?(a1, (uint64_t)v20, &demangling cache variable for type metadata for SymbolButton.CustomView?);
  if (!v20[0])
  {
    if (!v5) {
      goto LABEL_14;
    }
LABEL_4:
    os_log_type_t v10 = *(void **)(v2 + v4);
    if (!v10) {
      goto LABEL_11;
    }
LABEL_9:
    if ([v10 isDescendantOfView:v2]) {
      [*(id *)(v2 + v4) removeFromSuperview];
    }
    goto LABEL_11;
  }
  uint64_t v6 = v20[0];
  uint64_t v7 = v6;
  if (v5)
  {
    type metadata accessor for UIMenu(0, (unint64_t *)&_sSo6UIViewCML_0);
    uint64_t v8 = v5;
    uint64_t v9 = static NSObject.== infix(_:_:)();

    if (v9) {
      goto LABEL_14;
    }
    goto LABEL_4;
  }

  os_log_type_t v10 = *(void **)(v1 + v4);
  if (v10) {
    goto LABEL_9;
  }
LABEL_11:
  outlined init with take of PresentationSource?(a1, (uint64_t)v19, &demangling cache variable for type metadata for SymbolButton.CustomView?);
  uint64_t v11 = v19[0];
  if (v19[0]) {
    char v12 = v19[0];
  }
  specialized SymbolButton.customView.setter(v11);

LABEL_14:
  uint64_t v13 = *(void **)(v2 + v4);
  if (v13)
  {
    outlined init with take of PresentationSource?(a1, (uint64_t)v18, &demangling cache variable for type metadata for SymbolButton.CustomView?);
    unint64_t v14 = *(double *)&v18[5];
    if (!v18[0]) {
      unint64_t v14 = 1.0;
    }
    [v13 setAlpha:v14];
    uint64_t v15 = *(void **)(v2 + v4);
    if (v15)
    {
      outlined init with take of PresentationSource?(a1, (uint64_t)v17, &demangling cache variable for type metadata for SymbolButton.CustomView?);
      if (v17[0]) {
        unint64_t v16 = v17[6];
      }
      else {
        unint64_t v16 = 0;
      }
      [v15 setTintColor:v16];
    }
  }
}

void SymbolButton.applyMaterialGroupNameIfNeeded()()
{
  type metadata accessor for SymbolButton.Configuration(0);
  __chkstk_darwin();
  id v2 = (char *)&v8 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = *(void **)(v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_materialView);
  if (!*(void *)(v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_pendingAnimatedChangesCount))
  {
    uint64_t v5 = v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration;
    swift_beginAccess();
    outlined init with copy of SymbolButton.Configuration(v5, (uint64_t)v2, type metadata accessor for SymbolButton.Configuration);
    if (*((void *)v2 + 28) == 1)
    {
      outlined destroy of SymbolButton.Configuration((uint64_t)v2, type metadata accessor for SymbolButton.Configuration);
    }
    else
    {
      uint64_t v6 = *((void *)v2 + 33);
      swift_bridgeObjectRetain();
      outlined destroy of SymbolButton.Configuration((uint64_t)v2, type metadata accessor for SymbolButton.Configuration);
      if (v6)
      {
        NSString v7 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
LABEL_10:
        [v3 _setGroupName:v7];

        return;
      }
    }
    NSString v7 = 0;
    goto LABEL_10;
  }
  uint64_t v4 = *(void **)(v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_materialView);

  [v4 _setGroupName:0];
}

id SymbolButton.apply(_:)(uint64_t a1)
{
  uint64_t v3 = (int *)(type metadata accessor for SymbolButton.Metrics(0) - 8);
  __chkstk_darwin();
  uint64_t v5 = (uint64_t *)((char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v6 = SymbolButton.imageView.getter();
  SymbolButton.metrics.getter(v5);
  id v7 = *(id *)((char *)v5 + v3[9]);
  outlined destroy of SymbolButton.Configuration((uint64_t)v5, type metadata accessor for SymbolButton.Metrics);
  [v6 setPreferredSymbolConfiguration:v7];

  id v8 = SymbolButton.titleLabel.getter();
  SymbolButton.metrics.getter(v5);
  id v9 = *(id *)((char *)v5 + v3[8]);
  outlined destroy of SymbolButton.Configuration((uint64_t)v5, type metadata accessor for SymbolButton.Metrics);
  [v8 setFont:v9];

  SymbolButton.metrics.getter(v5);
  SymbolButton.updateCorner(using:)((uint64_t)v5);
  outlined destroy of SymbolButton.Configuration((uint64_t)v5, type metadata accessor for SymbolButton.Metrics);
  [v1 setShowsLargeContentViewer:*(unsigned __int8 *)(a1 + v3[15])];
  return [v1 setScalesLargeContentImage:1];
}

uint64_t SymbolButton.updateCorner(using:)(uint64_t a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIView.Corner?);
  __chkstk_darwin();
  uint64_t v46 = (uint64_t)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  id v6 = (char *)&v42 - v5;
  __chkstk_darwin();
  id v8 = (char *)&v42 - v7;
  id v9 = *(void **)(v2 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_materialView);
  uint64_t v10 = a1 + *(int *)(type metadata accessor for SymbolButton.Metrics(0) + 20);
  outlined init with copy of (String, Any)(v10, (uint64_t)v8, &demangling cache variable for type metadata for UIView.Corner?);
  UIView.corner.setter();
  outlined init with copy of (String, Any)(v10, (uint64_t)v8, &demangling cache variable for type metadata for UIView.Corner?);
  UIView.corner.setter();
  id v11 = [v9 contentView];
  unsigned int v12 = [v11 clipsToBounds];

  if (v12)
  {
    outlined init with copy of (String, Any)(v10, (uint64_t)v6, &demangling cache variable for type metadata for UIView.Corner?);
    uint64_t v13 = type metadata accessor for UIView.Corner();
    int v14 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v6, 1, v13);
    outlined destroy of TaskPriority?((uint64_t)v6, &demangling cache variable for type metadata for UIView.Corner?);
    if (v14 != 1)
    {
      id v15 = [v9 contentView];
      [v15 setClipsToBounds:0];
    }
  }
  if (*(unsigned char *)(v2 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_isClippingInvalidated) == 1)
  {
    uint64_t v43 = OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_isClippingInvalidated;
    [v9 _setAllowsGroupFiltering:1];
    id v16 = [v9 contentView];
    id v17 = [v16 subviews];

    type metadata accessor for UIMenu(0, (unint64_t *)&_sSo6UIViewCML_0);
    unint64_t v18 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v44 = v2;
    if (v18 >> 62) {
      goto LABEL_20;
    }
    uint64_t v19 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    for (; v19; uint64_t v19 = _CocoaArrayWrapper.endIndex.getter())
    {
      type metadata accessor for SymbolButton.Label();
      uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      uint64_t v21 = v44 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration;
      unint64_t v22 = v18 & 0xC000000000000001;
      swift_beginAccess();
      uint64_t v23 = 4;
      uint64_t v24 = &selRef_shadowColor;
      unint64_t v45 = v18 & 0xC000000000000001;
      uint64_t v25 = 0;
      if ((v18 & 0xC000000000000001) != 0)
      {
LABEL_8:
        id v26 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        goto LABEL_10;
      }
      while (1)
      {
        id v26 = *(id *)(v18 + 8 * v23);
LABEL_10:
        id v27 = v26;
        uint64_t v28 = v25 + 1;
        if (__OFADD__(v25, 1)) {
          break;
        }
        if (!objc_msgSend(v26, v24[203], ObjCClassFromMetadata))
        {
          uint64_t v29 = type metadata accessor for SymbolButton.Configuration(0);
          int v30 = *(unsigned __int8 *)(v21 + *(int *)(v29 + 76));
          if (v30 == 2)
          {
            uint64_t v31 = v21 + *(int *)(v29 + 36);
            uint64_t v32 = ObjCClassFromMetadata;
            unint64_t v33 = v18;
            uint64_t v34 = v19;
            uint64_t v35 = v21;
            id v36 = v24;
            uint64_t v37 = v46;
            outlined init with copy of (String, Any)(v31, v46, &demangling cache variable for type metadata for UIView.Corner?);
            uint64_t v38 = type metadata accessor for UIView.Corner();
            uint64_t v39 = (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 48))(v37, 1, v38) != 1;
            uint64_t v40 = v37;
            uint64_t v24 = v36;
            uint64_t v21 = v35;
            uint64_t v19 = v34;
            unint64_t v18 = v33;
            uint64_t ObjCClassFromMetadata = v32;
            unint64_t v22 = v45;
            outlined destroy of TaskPriority?(v40, &demangling cache variable for type metadata for UIView.Corner?);
          }
          else
          {
            uint64_t v39 = v30 & 1;
          }
          [v27 setClipsToBounds:v39];
        }

        if (v28 == v19) {
          goto LABEL_21;
        }
        uint64_t v25 = ++v23 - 4;
        if (v22) {
          goto LABEL_8;
        }
      }
      __break(1u);
LABEL_20:
      swift_bridgeObjectRetain();
    }
LABEL_21:
    swift_bridgeObjectRelease_n();
    *(unsigned char *)(v44 + v43) = 0;
  }
  return SymbolButton.updateHoverStyle()();
}

uint64_t SymbolButton.updateHoverStyle()()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for UIView.Corner.Radius();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for SymbolButton.Configuration(0);
  __chkstk_darwin();
  uint64_t v33 = (uint64_t)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  id v9 = (char *)&v26 - v8;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIShape?);
  __chkstk_darwin();
  id v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = 0;
  memset(v39, 0, sizeof(v39));
  id v12 = [v0 traitCollection];
  id v13 = [v12 userInterfaceIdiom];

  if (v13 == (id)6)
  {
    uint64_t v37 = type metadata accessor for UIHoverHighlightEffect();
    uint64_t v38 = &protocol witness table for UIHoverHighlightEffect;
    __swift_allocate_boxed_opaque_existential_1(v36);
    static UIHoverEffect<>.highlight.getter();
  }
  else
  {
    uint64_t v37 = type metadata accessor for UIHoverLiftEffect();
    uint64_t v38 = &protocol witness table for UIHoverLiftEffect;
    __swift_allocate_boxed_opaque_existential_1(v36);
    static UIHoverEffect<>.lift.getter();
  }
  outlined destroy of TaskPriority?((uint64_t)v39, &demangling cache variable for type metadata for UIHoverEffect?);
  outlined init with take of PresentationSource?((uint64_t)v36, (uint64_t)v39, &demangling cache variable for type metadata for UIHoverEffect?);
  outlined init with copy of (String, Any)((uint64_t)v39, (uint64_t)&v34, &demangling cache variable for type metadata for UIHoverEffect?);
  if (v35)
  {
    uint64_t v26 = v3;
    uint64_t v27 = v2;
    uint64_t v32 = v11;
    outlined init with take of AlertPresenting(&v34, (uint64_t)v36);
    id v30 = *(id *)&v1[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_containerView];
    uint64_t v29 = v38;
    __swift_project_boxed_opaque_existential_0Tm(v36, v37);
    uint64_t v28 = &v26;
    __chkstk_darwin();
    (*(void (**)(char *))(v15 + 16))((char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
    uint64_t v16 = (uint64_t)&v1[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration];
    swift_beginAccess();
    outlined init with copy of SymbolButton.Configuration(v16, (uint64_t)v9, type metadata accessor for SymbolButton.Configuration);
    uint64_t v31 = v6;
    id v17 = &v9[*(int *)(v6 + 36)];
    uint64_t v18 = type metadata accessor for UIView.Corner();
    uint64_t v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48);
    if (v19(v17, 1, v18))
    {
      outlined destroy of SymbolButton.Configuration((uint64_t)v9, type metadata accessor for SymbolButton.Configuration);
      static UIPointerShape.defaultCornerRadius.getter();
    }
    else
    {
      UIView.Corner.radius.getter();
      outlined destroy of SymbolButton.Configuration((uint64_t)v9, type metadata accessor for SymbolButton.Configuration);
      [v1 bounds];
      UIView.Corner.Radius.value(in:)();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v5, v27);
    }
    uint64_t v21 = v33;
    outlined init with copy of SymbolButton.Configuration(v16, v33, type metadata accessor for SymbolButton.Configuration);
    if (v19((char *)(v21 + *(int *)(v31 + 36)), 1, v18)) {
      CACornerMask v22 = 0;
    }
    else {
      CACornerMask v22 = UIView.Corner.mask.getter();
    }
    uint64_t v23 = v32;
    type metadata accessor for UIMenu(0, &lazy cache variable for type metadata for UIHoverStyle);
    outlined destroy of SymbolButton.Configuration(v21, type metadata accessor for SymbolButton.Configuration);
    UIRectCorner.init(_:)(v22);
    static UIShape.rect(cornerRadius:cornerCurve:maskedCorners:)();
    uint64_t v24 = type metadata accessor for UIShape();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v23, 0, 1, v24);
    uint64_t v25 = (void *)UIHoverStyle.init<A>(effect:shape:)();
    [v30 setHoverStyle:v25];

    outlined destroy of TaskPriority?((uint64_t)v39, &demangling cache variable for type metadata for UIHoverEffect?);
    return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v36);
  }
  else
  {
    outlined destroy of TaskPriority?((uint64_t)&v34, &demangling cache variable for type metadata for UIHoverEffect?);
    [v1 setHoverStyle:0];
    return outlined destroy of TaskPriority?((uint64_t)v39, &demangling cache variable for type metadata for UIHoverEffect?);
  }
}

void SymbolButton.init(frame:)()
{
}

id SymbolButton.__deallocating_deinit()
{
  return SymbolButton.__deallocating_deinit(type metadata accessor for SymbolButton);
}

void SymbolButton.MaterialView.apply(_:)(uint64_t a1)
{
  uint64_t v2 = v1;
  outlined init with take of PresentationSource?(a1, (uint64_t)v20, &demangling cache variable for type metadata for SymbolButton.Material?);
  uint64_t v5 = v21;
  uint64_t v4 = v22;
  [v1 setEffect:0];
  outlined init with take of PresentationSource?(a1, (uint64_t)v27, &demangling cache variable for type metadata for SymbolButton.Material?);
  uint64_t v6 = (void *)v27[0];
  if (v27[0] >= 2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&_ss23_ContiguousArrayStorageCyyXlGMD_1);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_100493D20;
    *(void *)(v9 + 32) = v6;
    uint64_t v25 = v9;
    specialized Array._endMutation()();
    type metadata accessor for UIMenu(0, &lazy cache variable for type metadata for UIVisualEffect);
    id v10 = v6;
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v1 setBackgroundEffects:isa];

    if (!v5) {
      goto LABEL_4;
    }
    goto LABEL_8;
  }
  type metadata accessor for UIMenu(0, &lazy cache variable for type metadata for UIVisualEffect);
  Class v7 = Array._bridgeToObjectiveC()().super.isa;
  [v2 setBackgroundEffects:v7];

  outlined init with take of PresentationSource?(a1, (uint64_t)&v25, &demangling cache variable for type metadata for SymbolButton.Material?);
  if (v25 != 1)
  {
    uint64_t v5 = v26;
    if (!v26)
    {
LABEL_4:
      outlined init with take of PresentationSource?(a1, (uint64_t)&v23, &demangling cache variable for type metadata for SymbolButton.Material?);
      if (v23 == 1) {
        goto LABEL_6;
      }
      uint64_t v4 = v24;
      if (!v24) {
        goto LABEL_6;
      }
LABEL_11:
      __swift_instantiateConcreteTypeFromMangledName(&_ss23_ContiguousArrayStorageCyyXlGMD_1);
      uint64_t v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_100493D20;
      *(void *)(v16 + 32) = v4;
      specialized Array._endMutation()();
      type metadata accessor for UIMenu(0, &lazy cache variable for type metadata for UIVisualEffect);
      id v17 = v4;
      v8.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v2 setContentEffects:v8.super.isa];

      goto LABEL_12;
    }
LABEL_8:
    id v12 = v5;
    id v13 = [v2 backgroundEffects];
    type metadata accessor for UIMenu(0, &lazy cache variable for type metadata for UIVisualEffect);
    uint64_t v14 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v23 = v14;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    Class v15 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v2 setBackgroundEffects:v15];

    if (!v4) {
      goto LABEL_6;
    }
    goto LABEL_11;
  }
LABEL_6:
  type metadata accessor for UIMenu(0, &lazy cache variable for type metadata for UIVisualEffect);
  v8.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
  [v2 setContentEffects:v8.super.isa];
LABEL_12:

  id v18 = [v2 contentView];
  id v19 = [v18 layer];

  [v19 setAllowsGroupBlending:0];
}

id SymbolButton.MaterialView.__deallocating_deinit()
{
  return SymbolButton.__deallocating_deinit((uint64_t (*)(void))type metadata accessor for SymbolButton.MaterialView);
}

id SymbolButton.__deallocating_deinit(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1(0);
  return objc_msgSendSuper2(&v3, "dealloc");
}

id SymbolButton.BackgroundView.init(configuration:)(void *a1, double a2, uint64_t a3, uint64_t a4)
{
  NSArray v8 = &v4[OBJC_IVAR____TtCC11MusicCoreUI12SymbolButtonP33_0D6450BB937596549C350B7D294A2A9314BackgroundView_configuration];
  *(void *)NSArray v8 = 0;
  *((void *)v8 + 1) = 0x3FF0000000000000;
  v14.receiver = v4;
  v14.super_class = (Class)type metadata accessor for SymbolButton.BackgroundView();
  id v9 = objc_msgSendSuper2(&v14, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  id v10 = [v9 layer];
  if (a4) {
    NSString v11 = String._bridgeToObjectiveC()();
  }
  else {
    NSString v11 = 0;
  }
  [v10 setCompositingFilter:v11];
  swift_unknownObjectRelease();

  id v12 = a1;
  SymbolButton.BackgroundView.configuration.setter(a1, a2);
  SymbolButton.BackgroundView.updateBackgroundColor()();

  swift_bridgeObjectRelease();
  return v9;
}

void SymbolButton.BackgroundView.configuration.setter(void *a1, double a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = v3
     + OBJC_IVAR____TtCC11MusicCoreUI12SymbolButtonP33_0D6450BB937596549C350B7D294A2A9314BackgroundView_configuration;
  Class v7 = *(void **)(v3
                + OBJC_IVAR____TtCC11MusicCoreUI12SymbolButtonP33_0D6450BB937596549C350B7D294A2A9314BackgroundView_configuration);
  double v8 = *(double *)(v3
                 + OBJC_IVAR____TtCC11MusicCoreUI12SymbolButtonP33_0D6450BB937596549C350B7D294A2A9314BackgroundView_configuration
                 + 8);
  *(void *)uint64_t v6 = a1;
  *(double *)(v6 + 8) = a2;
  id v13 = v7;
  if (a1)
  {
    if (!v7) {
      goto LABEL_8;
    }
    type metadata accessor for UIMenu(0, (unint64_t *)&_sSo7UIColorCML_0);
    id v9 = v13;
    id v10 = a1;
    char v11 = static NSObject.== infix(_:_:)();

    if ((v11 & 1) == 0) {
      goto LABEL_8;
    }
LABEL_7:
    if (v8 == a2) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
  if (!v7) {
    goto LABEL_7;
  }
  id v12 = v7;
LABEL_8:
  SymbolButton.BackgroundView.updateBackgroundColor()();
LABEL_9:
}

void SymbolButton.BackgroundView.updateBackgroundColor()()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtCC11MusicCoreUI12SymbolButtonP33_0D6450BB937596549C350B7D294A2A9314BackgroundView_configuration];
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtCC11MusicCoreUI12SymbolButtonP33_0D6450BB937596549C350B7D294A2A9314BackgroundView_configuration];
  if (v2) {
    id v3 = *(id *)&v0[OBJC_IVAR____TtCC11MusicCoreUI12SymbolButtonP33_0D6450BB937596549C350B7D294A2A9314BackgroundView_configuration];
  }
  else {
    id v3 = [self tintColor];
  }
  uint64_t v4 = *((void *)v1 + 1);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v3;
  *(void *)(v5 + 24) = v4;
  id v6 = objc_allocWithZone((Class)UIColor);
  v11[4] = partial apply for closure #1 in SymbolButton.BackgroundView.updateBackgroundColor();
  v11[5] = v5;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 1107296256;
  v11[2] = thunk for @escaping @callee_guaranteed (@guaranteed UITraitCollection) -> (@owned UIColor);
  v11[3] = &block_descriptor_185;
  Class v7 = _Block_copy(v11);
  id v8 = v2;
  id v9 = v3;
  id v10 = [v6 initWithDynamicProvider:v7];
  _Block_release(v7);
  swift_release();
  [v0 setBackgroundColor:v10];
}

id closure #1 in SymbolButton.BackgroundView.updateBackgroundColor()(uint64_t a1, id a2, double a3)
{
  id v4 = [a2 resolvedColorWithTraitCollection:a1];
  [v4 alphaComponent];
  id v6 = [v4 colorWithAlphaComponent:v5 * a3];

  return v6;
}

id SymbolButton.BackgroundView.__deallocating_deinit()
{
  return SymbolButton.__deallocating_deinit((uint64_t (*)(void))type metadata accessor for SymbolButton.BackgroundView);
}

id SymbolButton.ImageView.apply(_:)(uint64_t a1)
{
  uint64_t v2 = v1;
  id v4 = SymbolButton.Symbol.image.getter();
  [v2 setImage:v4];

  id v5 = [v2 layer];
  outlined init with take of PresentationSource?(a1 + 88, (uint64_t)v9, &_sSSSgMD_1);
  outlined init with take of PresentationSource?((uint64_t)v9, (uint64_t)v10, &_sSSSgMD_1);
  if (v10[1]) {
    NSString v6 = String._bridgeToObjectiveC()();
  }
  else {
    NSString v6 = 0;
  }
  [v5 setCompositingFilter:v6];

  swift_unknownObjectRelease();
  id v7 = [v2 layer];
  [v7 setAllowsGroupOpacity:0];

  [v2 setTintColor:*(void *)(a1 + 112)];
  return [v2 setAlpha:*(double *)(a1 + 104)];
}

void @objc SymbolButton.MaterialView.init(effect:)(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id SymbolButton.ImageView.__deallocating_deinit()
{
  return SymbolButton.__deallocating_deinit((uint64_t (*)(void))type metadata accessor for SymbolButton.ImageView);
}

id SymbolButton.Label.init(configuration:)(uint64_t a1)
{
  v8.receiver = v1;
  v8.super_class = (Class)type metadata accessor for SymbolButton.Label();
  id v3 = objc_msgSendSuper2(&v8, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  [v3 setLineBreakMode:5];
  [v3 setNumberOfLines:1];
  id v4 = self;
  id v5 = v3;
  id v6 = [v4 clearColor];
  [v5 setBackgroundColor:v6];

  [v5 setAdjustsFontForContentSizeCategory:0];
  [v5 setClipsToBounds:0];
  [v5 _setTextColorFollowsTintColor:1];
  SymbolButton.Label.apply(_:)(a1);
  outlined release of SymbolButton.Title(a1);

  return v5;
}

id SymbolButton.Label.apply(_:)(uint64_t a1)
{
  outlined init with take of PresentationSource?(a1, (uint64_t)v10, &_sSSSgMD_1);
  outlined init with take of PresentationSource?((uint64_t)v10, (uint64_t)v11, &_sSSSgMD_1);
  if (v11[1]) {
    NSString v3 = String._bridgeToObjectiveC()();
  }
  else {
    NSString v3 = 0;
  }
  [v1 setText:v3];

  id v4 = [v1 layer];
  outlined init with take of PresentationSource?(a1 + 32, (uint64_t)v9, &_sSSSgMD_1);
  outlined init with take of PresentationSource?((uint64_t)v9, (uint64_t)v12, &_sSSSgMD_1);
  if (v12[1]) {
    NSString v5 = String._bridgeToObjectiveC()();
  }
  else {
    NSString v5 = 0;
  }
  [v4 setCompositingFilter:v5];

  swift_unknownObjectRelease();
  id v6 = [v1 layer];
  [v6 setAllowsGroupOpacity:0];

  [v1 setTintColor:*(void *)(a1 + 56)];
  double v7 = 0.0;
  if ((*(unsigned char *)(a1 + 64) & 1) == 0) {
    double v7 = *(double *)(a1 + 48);
  }
  return [v1 setAlpha:v7];
}

id SymbolButton.Label.__deallocating_deinit()
{
  return SymbolButton.__deallocating_deinit((uint64_t (*)(void))type metadata accessor for SymbolButton.Label);
}

char *SymbolButton.BadgeView.init(configuration:)(void *a1, double a2, double a3)
{
  uint64_t v7 = OBJC_IVAR____TtCC11MusicCoreUI12SymbolButtonP33_0D6450BB937596549C350B7D294A2A939BadgeView_punchOutView;
  id v8 = objc_allocWithZone((Class)UIView);
  id v9 = v3;
  id v10 = [v8 init];
  char v11 = self;
  id v12 = [v11 blackColor];
  [v10 setBackgroundColor:v12];

  id v13 = [v10 layer];
  [v13 setCompositingFilter:kCAFilterDestOut];

  *(void *)&v3[v7] = v10;
  objc_super v14 = (double *)&v9[OBJC_IVAR____TtCC11MusicCoreUI12SymbolButtonP33_0D6450BB937596549C350B7D294A2A939BadgeView_configuration];
  double *v14 = a2;
  v14[1] = a3;
  *((void *)v14 + 2) = a1;
  id v15 = a1;

  v20.receiver = v9;
  v20.super_class = (Class)type metadata accessor for SymbolButton.BadgeView();
  uint64_t v16 = (char *)objc_msgSendSuper2(&v20, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  id v17 = v15;
  if (!a1) {
    id v17 = [v11 tintColor];
  }
  id v18 = v15;
  [v16 setBackgroundColor:v17];

  [v16 setAlpha:a3];
  [*(id *)&v16[OBJC_IVAR____TtCC11MusicCoreUI12SymbolButtonP33_0D6450BB937596549C350B7D294A2A939BadgeView_punchOutView] setAlpha:a3];
  SymbolButton.BadgeView.layoutPunchOutView()();

  return v16;
}

void SymbolButton.BadgeView.layoutPunchOutView()()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIView.Corner?);
  __chkstk_darwin();
  NSString v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  [v1 bounds];
  uint64_t v4 = OBJC_IVAR____TtCC11MusicCoreUI12SymbolButtonP33_0D6450BB937596549C350B7D294A2A939BadgeView_configuration;
  UIEdgeInsets.init(edges:inset:)();
  CGSize.inset(by:)();
  double v6 = v5;
  double v8 = v7;
  [v1 frame];
  double v10 = v9 - *(double *)&v1[v4];
  [v1 frame];
  double v12 = v11 - *(double *)&v1[v4];
  id v13 = *(void **)&v1[OBJC_IVAR____TtCC11MusicCoreUI12SymbolButtonP33_0D6450BB937596549C350B7D294A2A939BadgeView_punchOutView];
  objc_msgSend(v13, "setFrame:", v10, v12, v6, v8);
  static UIView.Corner.rounded.getter();
  uint64_t v14 = type metadata accessor for UIView.Corner();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v3, 0, 1, v14);
  UIView.corner.setter();
  id v15 = [v1 superview];
  [v15 insertSubview:v13 belowSubview:v1];
}

id SymbolButton.BadgeView.__deallocating_deinit()
{
  return SymbolButton.__deallocating_deinit((uint64_t (*)(void))type metadata accessor for SymbolButton.BadgeView);
}

double one-time initialization function for contextualAction()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIView.Corner?);
  __chkstk_darwin();
  uint64_t v1 = (char *)&v17 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = type metadata accessor for SymbolButton.Configuration(0);
  __swift_allocate_value_buffer(v2, static SymbolButton.Configuration.contextualAction);
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)static SymbolButton.Configuration.contextualAction);
  SymbolButton.Configuration.init()(v3);
  uint64_t v4 = self;
  double v5 = UIFontTextStyleSubheadline;
  id v6 = [v4 currentTraitCollection];
  id v7 = [v6 userInterfaceIdiom];

  double v8 = &UIFontTextStyleTitle3;
  if (v7 != (id)6) {
    double v8 = &UIFontTextStyleCallout;
  }
  UIFontTextStyle v9 = *v8;
  if (v7 == (id)6) {
    uint64_t v10 = 5;
  }
  else {
    uint64_t v10 = 6;
  }
  double v11 = v9;

  double v12 = *(void **)(v3 + 16);
  id v13 = *(void **)(v3 + 24);
  uint64_t v14 = *(void **)(v3 + 112);
  *(_OWORD *)uint64_t v3 = xmmword_1004A3D60;
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = v11;
  *(void *)(v3 + 32) = 0;
  *(unsigned char *)(v3 + 40) = 1;
  *(void *)(v3 + 48) = v10;
  *(void *)(v3 + 56) = 2;
  *(void *)(v3 + 64) = 0;
  *(void *)(v3 + 72) = 0;
  *(unsigned char *)(v3 + 80) = -1;
  *(void *)(v3 + 88) = 0;
  *(void *)(v3 + 96) = 0;
  *(void *)(v3 + 104) = 0x3FF0000000000000;
  *(void *)(v3 + 112) = 0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  static UIView.Corner.rounded.getter();
  uint64_t v15 = type metadata accessor for UIView.Corner();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v1, 0, 1, v15);
  outlined assign with take of Album?((uint64_t)v1, v3 + *(int *)(v2 + 36), &demangling cache variable for type metadata for UIView.Corner?);
  if (one-time initialization token for platterMinimumSize != -1) {
    swift_once();
  }
  double result = *(double *)&static SymbolButton.Configuration.platterMinimumSize;
  *(_OWORD *)(v3 + *(int *)(v2 + 52)) = static SymbolButton.Configuration.platterMinimumSize;
  return result;
}

uint64_t SymbolButton.Configuration.contextualAction.unsafeMutableAddressor()
{
  return UIView.Corner.roundedRect.unsafeMutableAddressor(&one-time initialization token for contextualAction, type metadata accessor for SymbolButton.Configuration, (uint64_t)static SymbolButton.Configuration.contextualAction);
}

uint64_t UIView.Corner.roundedRect.unsafeMutableAddressor(void *a1, uint64_t (*a2)(void), uint64_t a3)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = a2(0);

  return __swift_project_value_buffer(v5, a3);
}

uint64_t static SymbolButton.Configuration.contextualAction.getter@<X0>(uint64_t a1@<X8>)
{
  return static SymbolButton.Configuration.contextualAction.getter(&one-time initialization token for contextualAction, (uint64_t)static SymbolButton.Configuration.contextualAction, a1);
}

uint64_t one-time initialization function for barButtonContextualAction()
{
  uint64_t v0 = type metadata accessor for SymbolButton.Configuration(0);
  uint64_t v1 = __chkstk_darwin();
  uint64_t v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_allocate_value_buffer(v1, static SymbolButton.Configuration.barButtonContextualAction);
  uint64_t v4 = __swift_project_value_buffer(v0, (uint64_t)static SymbolButton.Configuration.barButtonContextualAction);
  if (one-time initialization token for contextualAction != -1) {
    swift_once();
  }
  uint64_t v5 = __swift_project_value_buffer(v0, (uint64_t)static SymbolButton.Configuration.contextualAction);
  outlined init with copy of SymbolButton.Configuration(v5, (uint64_t)v3, type metadata accessor for SymbolButton.Configuration);
  if (one-time initialization token for forBarButtonItem != -1) {
    swift_once();
  }
  char v6 = static SymbolButton.Configuration.Accessibility.forBarButtonItem;
  id v7 = (void *)qword_1005AEC28;
  double v8 = (void *)unk_1005AEC30;
  char v9 = byte_1005AEC38;
  outlined init with copy of SymbolButton.Configuration((uint64_t)v3, v4, type metadata accessor for SymbolButton.Configuration);
  uint64_t v10 = v4 + *(int *)(v0 + 64);
  double v11 = *(void **)(v10 + 8);
  double v12 = *(void **)(v10 + 16);
  id v13 = v7;
  id v14 = v8;

  *(unsigned char *)uint64_t v10 = v6;
  *(void *)(v10 + 8) = v7;
  *(void *)(v10 + 16) = v8;
  *(unsigned char *)(v10 + 24) = v9;
  return outlined destroy of SymbolButton.Configuration((uint64_t)v3, type metadata accessor for SymbolButton.Configuration);
}

void SymbolButton.Configuration.forBarButtonItem()(uint64_t a1@<X8>)
{
  if (one-time initialization token for forBarButtonItem != -1) {
    swift_once();
  }
  char v3 = static SymbolButton.Configuration.Accessibility.forBarButtonItem;
  uint64_t v4 = (void *)qword_1005AEC28;
  uint64_t v5 = (void *)unk_1005AEC30;
  char v6 = byte_1005AEC38;
  outlined init with copy of SymbolButton.Configuration(v1, a1, type metadata accessor for SymbolButton.Configuration);
  uint64_t v7 = a1 + *(int *)(type metadata accessor for SymbolButton.Configuration(0) + 64);
  double v8 = *(void **)(v7 + 8);
  char v9 = *(void **)(v7 + 16);
  id v10 = v4;
  id v11 = v5;

  *(unsigned char *)uint64_t v7 = v3;
  *(void *)(v7 + 8) = v4;
  *(void *)(v7 + 16) = v5;
  *(unsigned char *)(v7 + 24) = v6;
}

uint64_t SymbolButton.Configuration.barButtonContextualAction.unsafeMutableAddressor()
{
  return UIView.Corner.roundedRect.unsafeMutableAddressor(&one-time initialization token for barButtonContextualAction, type metadata accessor for SymbolButton.Configuration, (uint64_t)static SymbolButton.Configuration.barButtonContextualAction);
}

uint64_t static SymbolButton.Configuration.barButtonContextualAction.getter@<X0>(uint64_t a1@<X8>)
{
  return static SymbolButton.Configuration.contextualAction.getter(&one-time initialization token for barButtonContextualAction, (uint64_t)static SymbolButton.Configuration.barButtonContextualAction, a1);
}

uint64_t static SymbolButton.Configuration.contextualAction.getter@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for SymbolButton.Configuration(0);
  uint64_t v6 = __swift_project_value_buffer(v5, a2);
  return outlined init with copy of SymbolButton.Configuration(v6, a3, type metadata accessor for SymbolButton.Configuration);
}

__n128 one-time initialization function for platterMinimumSize()
{
  __asm { FMOV            V0.2D, #28.0 }
  static SymbolButton.Configuration.platterMinimumSize = (__int128)result;
  return result;
}

uint64_t type metadata accessor for SymbolButton.Configuration(uint64_t a1)
{
  return type metadata accessor for Notice.Variant(a1, (uint64_t *)&type metadata singleton initialization cache for SymbolButton.Configuration);
}

double static SymbolButton.Configuration.platterMinimumSize.getter()
{
  return variable initialization expression of SymbolButton.Configuration.minimumSize(&one-time initialization token for platterMinimumSize, (uint64_t)&static SymbolButton.Configuration.platterMinimumSize);
}

int64x2_t one-time initialization function for hitRectMinimumSize()
{
  int64x2_t result = vdupq_n_s64(0x4040000000000000uLL);
  static SymbolButton.Configuration.hitRectMinimumSize = (__int128)result;
  return result;
}

double static SymbolButton.Configuration.hitRectMinimumSize.getter()
{
  return variable initialization expression of SymbolButton.Configuration.minimumSize(&one-time initialization token for hitRectMinimumSize, (uint64_t)&static SymbolButton.Configuration.hitRectMinimumSize);
}

__n128 SymbolButton.Configuration.adding(_:)@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X8>)
{
  __n128 v16 = *(__n128 *)a1;
  uint64_t v5 = a1 + 16;
  uint64_t v6 = a1 + 8;
  unint64_t v14 = *(unsigned __int8 *)(a1 + 24);
  unint64_t v15 = *(void *)(a1 + 16);
  uint64_t v7 = a1 + 32;
  unint64_t v12 = *(void *)(a1 + 40);
  unint64_t v13 = *(void *)(a1 + 32);
  outlined init with copy of SymbolButton.Configuration(v2, (uint64_t)a2, type metadata accessor for SymbolButton.Configuration);
  double v8 = (void *)a2[14].n128_u64[1];
  char v9 = (void *)a2[15].n128_u64[0];
  id v11 = (void *)a2[14].n128_u64[0];
  outlined init with take of PresentationSource?(a1, (uint64_t)&v20, &demangling cache variable for type metadata for UIVisualEffect?);
  outlined init with take of PresentationSource?(v6, (uint64_t)&v19, &demangling cache variable for type metadata for UIVisualEffect?);
  outlined init with take of PresentationSource?(v5, (uint64_t)&v18, &demangling cache variable for type metadata for UIVisualEffect?);
  outlined init with take of PresentationSource?(v7, (uint64_t)v17, &_sSSSgMD_1);
  outlined retain of ICMusicSubscriptionStatus?(&v20);
  outlined retain of ICMusicSubscriptionStatus?(&v19);
  outlined retain of ICMusicSubscriptionStatus?(&v18);
  outlined retain of String?((uint64_t)v17);
  outlined consume of SymbolButton.Material?(v11, v8, v9);
  __n128 result = v16;
  a2[14] = v16;
  a2[15].n128_u64[0] = v15;
  a2[15].n128_u64[1] = v14;
  a2[16].n128_u64[0] = v13;
  a2[16].n128_u64[1] = v12;
  return result;
}

double SymbolButton.Configuration.removingMaterial()@<D0>(uint64_t a1@<X8>)
{
  outlined init with copy of SymbolButton.Configuration(v1, a1, type metadata accessor for SymbolButton.Configuration);
  outlined consume of SymbolButton.Material?(*(void **)(a1 + 224), *(void **)(a1 + 232), *(void **)(a1 + 240));
  *(void *)(a1 + 224) = 1;
  double result = 0.0;
  *(_OWORD *)(a1 + 232) = 0u;
  *(_OWORD *)(a1 + 248) = 0u;
  *(void *)(a1 + 264) = 0;
  return result;
}

uint64_t SymbolButton.Configuration.adding(_:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, double *a4@<X8>, double a5@<D0>)
{
  outlined init with copy of SymbolButton.Configuration(v5, (uint64_t)a4, type metadata accessor for SymbolButton.Configuration);
  uint64_t v11 = *((void *)a4 + 24);
  unint64_t v12 = (void *)*((void *)a4 + 25);
  swift_bridgeObjectRetain();
  id v13 = a1;
  uint64_t result = outlined consume of SymbolButton.Background?(v11, v12);
  a4[24] = a5;
  *((void *)a4 + 25) = a1;
  *((void *)a4 + 26) = a2;
  *((void *)a4 + 27) = a3;
  return result;
}

double SymbolButton.Configuration.removingBackground()@<D0>(uint64_t a1@<X8>)
{
  outlined init with copy of SymbolButton.Configuration(v1, a1, type metadata accessor for SymbolButton.Configuration);
  outlined consume of SymbolButton.Background?(*(void *)(a1 + 192), *(void **)(a1 + 200));
  double result = 0.0;
  *(_OWORD *)(a1 + 192) = xmmword_100493CF0;
  *(void *)(a1 + 208) = 0;
  *(void *)(a1 + 216) = 0;
  return result;
}

void SymbolButton.Configuration.withAccessibility(_:)(char a1@<W0>, void *a2@<X1>, void *a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  outlined init with copy of SymbolButton.Configuration(v5, a5, type metadata accessor for SymbolButton.Configuration);
  uint64_t v11 = a5 + *(int *)(type metadata accessor for SymbolButton.Configuration(0) + 64);
  unint64_t v12 = *(void **)(v11 + 8);
  id v13 = *(void **)(v11 + 16);
  id v14 = a2;
  id v15 = a3;

  *(unsigned char *)uint64_t v11 = a1;
  *(void *)(v11 + 8) = a2;
  *(void *)(v11 + 16) = a3;
  *(unsigned char *)(v11 + 24) = a4;
}

uint64_t *SymbolButton.Background.tertiary.unsafeMutableAddressor()
{
  if (one-time initialization token for tertiary != -1) {
    swift_once();
  }
  return &static SymbolButton.Background.tertiary;
}

uint64_t SymbolButton.Configuration.forUberNavigationBar(withMaterial:background:groupName:)@<X0>(int a1@<W0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>, double a8@<D0>)
{
  uint64_t v9 = v8;
  uint64_t v46 = a5;
  uint64_t v47 = a6;
  uint64_t v44 = a3;
  uint64_t v45 = a4;
  id v43 = a2;
  LODWORD(v50) = a1;
  uint64_t v12 = type metadata accessor for SymbolButton.Configuration(0);
  __chkstk_darwin();
  uint64_t v51 = (uint64_t)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  id v15 = (char *)&v42 - v14;
  __chkstk_darwin();
  uint64_t v17 = (char *)&v42 - v16;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIView.Corner?);
  __chkstk_darwin();
  id v19 = (char *)&v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (one-time initialization token for forBarButtonItem != -1) {
    swift_once();
  }
  int v48 = static SymbolButton.Configuration.Accessibility.forBarButtonItem;
  id v20 = (void *)qword_1005AEC28;
  uint64_t v21 = (void *)unk_1005AEC30;
  char v22 = byte_1005AEC38;
  outlined init with copy of SymbolButton.Configuration(v9, a7, type metadata accessor for SymbolButton.Configuration);
  uint64_t v23 = a7 + *(int *)(v12 + 64);
  double v49 = (int *)v12;
  uint64_t v25 = *(void **)(v23 + 8);
  uint64_t v24 = *(void **)(v23 + 16);
  id v26 = v20;
  id v27 = v21;

  *(unsigned char *)uint64_t v23 = v48;
  *(void *)(v23 + 8) = v20;
  *(void *)(v23 + 16) = v21;
  *(unsigned char *)(v23 + 24) = v22;
  static UIView.Corner.rounded.getter();
  uint64_t v28 = type metadata accessor for UIView.Corner();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v19, 0, 1, v28);
  outlined assign with take of Album?((uint64_t)v19, a7 + v49[9], &demangling cache variable for type metadata for UIView.Corner?);

  *(void *)(a7 + 272) = 0;
  *(void *)(a7 + 280) = 0;
  *(void *)(a7 + 288) = 0;
  if (v50)
  {
    uint64_t v29 = v51;
    uint64_t v50 = type metadata accessor for SymbolButton.Configuration;
    outlined init with copy of SymbolButton.Configuration(a7, v51, type metadata accessor for SymbolButton.Configuration);
    double v49 = (int *)[self effectWithStyle:16];
    outlined init with copy of SymbolButton.Configuration(v29, (uint64_t)v15, type metadata accessor for SymbolButton.Configuration);
    id v30 = (void *)*((void *)v15 + 28);
    uint64_t v31 = (void *)*((void *)v15 + 29);
    uint64_t v32 = (void *)*((void *)v15 + 30);
    uint64_t v33 = v47;
    swift_bridgeObjectRetain();
    outlined consume of SymbolButton.Material?(v30, v31, v32);
    *((void *)v15 + 28) = v49;
    *((void *)v15 + 29) = 0;
    *((void *)v15 + 30) = 0;
    *((void *)v15 + 31) = 2;
    *((void *)v15 + 32) = v46;
    *((void *)v15 + 33) = v33;
    long long v34 = v50;
    outlined destroy of SymbolButton.Configuration(v51, v50);
    outlined init with copy of SymbolButton.Configuration((uint64_t)v15, (uint64_t)v17, v34);
    outlined consume of SymbolButton.Background?(*((void *)v17 + 24), *((void **)v17 + 25));
    *((_OWORD *)v17 + 12) = xmmword_100493CF0;
    *((void *)v17 + 26) = 0;
    *((void *)v17 + 27) = 0;
  }
  else
  {
    outlined init with copy of SymbolButton.Configuration(a7, (uint64_t)v15, type metadata accessor for SymbolButton.Configuration);
    outlined consume of SymbolButton.Material?(*((void **)v15 + 28), *((void **)v15 + 29), *((void **)v15 + 30));
    *((void *)v15 + 28) = 1;
    *(_OWORD *)(v15 + 232) = 0u;
    *(_OWORD *)(v15 + 248) = 0u;
    *((void *)v15 + 33) = 0;
    outlined init with copy of SymbolButton.Configuration((uint64_t)v15, (uint64_t)v17, type metadata accessor for SymbolButton.Configuration);
    uint64_t v35 = *((void *)v17 + 24);
    id v36 = (void *)*((void *)v17 + 25);
    uint64_t v37 = v45;
    swift_bridgeObjectRetain();
    id v38 = v43;
    id v39 = v43;
    outlined consume of SymbolButton.Background?(v35, v36);
    *((double *)v17 + 24) = a8;
    uint64_t v40 = v44;
    *((void *)v17 + 25) = v38;
    *((void *)v17 + 26) = v40;
    *((void *)v17 + 27) = v37;
  }
  outlined destroy of SymbolButton.Configuration((uint64_t)v15, type metadata accessor for SymbolButton.Configuration);
  return outlined assign with take of SymbolButton.Configuration((uint64_t)v17, a7);
}

uint64_t SymbolButton.Configuration.forPromotionalParallaxNavigationBar(withMaterial:background:backgroundAlpha:groupName:)@<X0>(int a1@<W0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v40 = a7;
  uint64_t v41 = a8;
  int v48 = a6;
  uint64_t v43 = a5;
  uint64_t v44 = a3;
  uint64_t v45 = a4;
  id v42 = a2;
  LODWORD(v47) = a1;
  uint64_t v11 = type metadata accessor for SymbolButton.Configuration(0);
  __chkstk_darwin();
  uint64_t v39 = (uint64_t)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v14 = (char *)&v39 - v13;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIView.Corner?);
  __chkstk_darwin();
  uint64_t v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (one-time initialization token for forBarButtonItem != -1) {
    swift_once();
  }
  char v17 = static SymbolButton.Configuration.Accessibility.forBarButtonItem;
  uint64_t v18 = (void *)qword_1005AEC28;
  id v19 = (void *)unk_1005AEC30;
  char v20 = byte_1005AEC38;
  outlined init with copy of SymbolButton.Configuration(v9, a9, type metadata accessor for SymbolButton.Configuration);
  uint64_t v21 = a9 + *(int *)(v11 + 64);
  uint64_t v46 = (int *)v11;
  char v22 = *(void **)(v21 + 8);
  uint64_t v23 = *(void **)(v21 + 16);
  id v24 = v18;
  id v25 = v19;

  *(unsigned char *)uint64_t v21 = v17;
  *(void *)(v21 + 8) = v18;
  *(void *)(v21 + 16) = v19;
  *(unsigned char *)(v21 + 24) = v20;
  static UIView.Corner.rounded.getter();
  uint64_t v26 = type metadata accessor for UIView.Corner();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v16, 0, 1, v26);
  outlined assign with take of Album?((uint64_t)v16, a9 + v46[9], &demangling cache variable for type metadata for UIView.Corner?);

  *(void *)(a9 + 272) = 0;
  *(void *)(a9 + 280) = 0;
  *(void *)(a9 + 288) = 0;
  if (v47)
  {
    uint64_t v27 = v39;
    uint64_t v47 = type metadata accessor for SymbolButton.Configuration;
    outlined init with copy of SymbolButton.Configuration(a9, v39, type metadata accessor for SymbolButton.Configuration);
    uint64_t v46 = (int *)[self effectWithStyle:16];
    outlined init with copy of SymbolButton.Configuration(v27, (uint64_t)v14, type metadata accessor for SymbolButton.Configuration);
    uint64_t v28 = (void *)*((void *)v14 + 28);
    uint64_t v29 = (void *)*((void *)v14 + 29);
    id v30 = (void *)*((void *)v14 + 30);
    uint64_t v31 = v41;
    swift_bridgeObjectRetain();
    outlined consume of SymbolButton.Material?(v28, v29, v30);
    uint64_t v32 = v47;
    *((void *)v14 + 28) = v46;
    *((void *)v14 + 29) = 0;
    *((void *)v14 + 30) = 0;
    *((void *)v14 + 31) = 2;
    *((void *)v14 + 32) = v40;
    *((void *)v14 + 33) = v31;
    outlined destroy of SymbolButton.Configuration(v27, v32);
  }
  else
  {
    outlined init with copy of SymbolButton.Configuration(a9, (uint64_t)v14, type metadata accessor for SymbolButton.Configuration);
    outlined consume of SymbolButton.Material?(*((void **)v14 + 28), *((void **)v14 + 29), *((void **)v14 + 30));
    *((void *)v14 + 28) = 1;
    *(_OWORD *)(v14 + 232) = 0u;
    *(_OWORD *)(v14 + 248) = 0u;
    *((void *)v14 + 33) = 0;
  }
  outlined assign with take of SymbolButton.Configuration((uint64_t)v14, a9);
  outlined init with copy of SymbolButton.Configuration(a9, (uint64_t)v14, type metadata accessor for SymbolButton.Configuration);
  uint64_t v33 = *((void *)v14 + 24);
  long long v34 = (void *)*((void *)v14 + 25);
  if (v48)
  {
    outlined consume of SymbolButton.Background?(*((void *)v14 + 24), *((void **)v14 + 25));
    *((_OWORD *)v14 + 12) = xmmword_100493CF0;
    *((void *)v14 + 26) = 0;
    *((void *)v14 + 27) = 0;
  }
  else
  {
    uint64_t v35 = v45;
    swift_bridgeObjectRetain();
    id v36 = v42;
    id v37 = v42;
    outlined consume of SymbolButton.Background?(v33, v34);
    *((void *)v14 + 24) = v43;
    *((void *)v14 + 25) = v36;
    *((void *)v14 + 26) = v44;
    *((void *)v14 + 27) = v35;
  }
  return outlined assign with take of SymbolButton.Configuration((uint64_t)v14, a9);
}

void *SymbolButton.Background.withAlpha(_:)(void *a1)
{
  id v2 = a1;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t SymbolButton.Configuration.withAlpha(_:)@<X0>(uint64_t a1@<X8>, double a2@<D0>)
{
  outlined init with copy of SymbolButton.Configuration(v2, a1, type metadata accessor for SymbolButton.Configuration);
  uint64_t result = type metadata accessor for SymbolButton.Configuration(0);
  *(double *)(a1 + *(int *)(result + 68)) = a2;
  return result;
}

void *static SymbolButton.Background.tint(_:)(void *a1)
{
  id v2 = a1;
  return a1;
}

id one-time initialization function for secondary()
{
  id result = [self secondarySystemFillColor];
  static SymbolButton.Background.secondarCGFloat y = 0x3FF0000000000000;
  qword_1005AECB8 = (uint64_t)result;
  qword_1005AECC0 = 0;
  qword_1005AECC8 = 0;
  return result;
}

uint64_t *SymbolButton.Background.secondary.unsafeMutableAddressor()
{
  if (one-time initialization token for secondary != -1) {
    swift_once();
  }
  return &static SymbolButton.Background.secondary;
}

uint64_t static SymbolButton.Background.secondary.getter()
{
  if (one-time initialization token for secondary != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1005AECB8;
  id v1 = (id)qword_1005AECB8;
  swift_bridgeObjectRetain();
  return v0;
}

id one-time initialization function for tertiary()
{
  id result = [self tertiarySystemFillColor];
  static SymbolButton.Background.tertiarCGFloat y = 0x3FF0000000000000;
  qword_1005AECD8 = (uint64_t)result;
  qword_1005AECE0 = 0;
  qword_1005AECE8 = 0;
  return result;
}

uint64_t static SymbolButton.Background.tertiary.getter()
{
  if (one-time initialization token for tertiary != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1005AECD8;
  id v1 = (id)qword_1005AECD8;
  swift_bridgeObjectRetain();
  return v0;
}

id one-time initialization function for normal()
{
  if (one-time initialization token for tertiary != -1) {
    swift_once();
  }
  static SymbolButton.Background.normal = static SymbolButton.Background.tertiary;
  *(_OWORD *)&qword_1005AECF8 = *(_OWORD *)&qword_1005AECD8;
  qword_1005AED08 = qword_1005AECE8;
  id v1 = (id)qword_1005AECD8;
  swift_bridgeObjectRetain();

  return v1;
}

uint64_t static SymbolButton.Background.normal.getter()
{
  if (one-time initialization token for normal != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1005AECF8;
  id v1 = (id)qword_1005AECF8;
  swift_bridgeObjectRetain();
  return v0;
}

id one-time initialization function for highlighted()
{
  if (one-time initialization token for secondary != -1) {
    swift_once();
  }
  static SymbolButton.Background.highlighteCGFloat d = static SymbolButton.Background.secondary;
  *(_OWORD *)&qword_1005AED18 = *(_OWORD *)&qword_1005AECB8;
  qword_1005AED28 = qword_1005AECC8;
  id v1 = (id)qword_1005AECB8;
  swift_bridgeObjectRetain();

  return v1;
}

uint64_t static SymbolButton.Background.highlighted.getter()
{
  if (one-time initialization token for highlighted != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1005AED18;
  id v1 = (id)qword_1005AED18;
  swift_bridgeObjectRetain();
  return v0;
}

id one-time initialization function for xr()
{
  id result = [self effectWithStyle:7];
  qword_1005AED38 = 0;
  qword_1005AED40 = 0;
  static SymbolButton.Material.xr = (uint64_t)result;
  byte_1005AED48 = 2;
  qword_1005AED50 = 0;
  unk_1005AED58 = 0;
  return result;
}

uint64_t static SymbolButton.Material.xr.getter@<X0>(uint64_t a1@<X8>)
{
  if (one-time initialization token for xr != -1) {
    swift_once();
  }
  id v2 = (void *)static SymbolButton.Material.xr;
  char v3 = (void *)qword_1005AED38;
  uint64_t v4 = (void *)qword_1005AED40;
  char v5 = byte_1005AED48;
  uint64_t v6 = qword_1005AED50;
  uint64_t v7 = unk_1005AED58;
  *(void *)a1 = static SymbolButton.Material.xr;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  id v8 = v2;
  id v9 = v3;
  id v10 = v4;

  return swift_bridgeObjectRetain();
}

uint64_t one-time initialization function for capsule()
{
  uint64_t v0 = type metadata accessor for UIView.Corner();
  __swift_allocate_value_buffer(v0, static UIView.Corner.capsule);
  __swift_project_value_buffer(v0, (uint64_t)static UIView.Corner.capsule);
  return static UIView.Corner.rounded.getter();
}

uint64_t UIView.Corner.capsule.unsafeMutableAddressor()
{
  return UIView.Corner.roundedRect.unsafeMutableAddressor(&one-time initialization token for capsule, (uint64_t (*)(void))&type metadata accessor for UIView.Corner, (uint64_t)static UIView.Corner.capsule);
}

uint64_t static UIView.Corner.capsule.getter@<X0>(uint64_t a1@<X8>)
{
  return static UIView.Corner.extraSmall.getter(&one-time initialization token for capsule, (uint64_t)static UIView.Corner.capsule, a1);
}

uint64_t one-time initialization function for roundedRect()
{
  uint64_t v0 = type metadata accessor for UIView.Corner();
  __swift_allocate_value_buffer(v0, static UIView.Corner.roundedRect);
  __swift_project_value_buffer(v0, (uint64_t)static UIView.Corner.roundedRect);
  return static UIView.Corner.value(_:continuous:)();
}

uint64_t static UIView.Corner.roundedRect.getter@<X0>(uint64_t a1@<X8>)
{
  return static UIView.Corner.extraSmall.getter(&one-time initialization token for roundedRect, (uint64_t)static UIView.Corner.roundedRect, a1);
}

id SymbolButton.withProvider(_:)(uint64_t a1, uint64_t a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SymbolButton.Configuration?);
  __chkstk_darwin();
  char v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = (uint64_t *)&v11[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_configurationProvider];
  swift_beginAccess();
  uint64_t v7 = *v6;
  uint64_t *v6 = a1;
  v6[1] = a2;
  swift_retain_n();
  outlined consume of (@escaping @callee_guaranteed () -> ())?(v7);
  uint64_t v8 = type metadata accessor for SymbolButton.Configuration(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v5, 1, 1, v8);
  SymbolButton.updateConfigurationIfNeeded(_:animation:)((uint64_t)v5, 0, 0, 0, 1);
  outlined destroy of TaskPriority?((uint64_t)v5, &demangling cache variable for type metadata for SymbolButton.Configuration?);
  swift_release();
  id v9 = v11;

  return v9;
}

id SymbolButton.withConfiguration(_:)(uint64_t a1)
{
  type metadata accessor for SymbolButton.Configuration(0);
  __chkstk_darwin();
  char v3 = (char *)v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of SymbolButton.Configuration(a1, (uint64_t)v3, type metadata accessor for SymbolButton.Configuration);
  SymbolButton.setConfiguration(_:animation:updates:)((uint64_t)v3, 0, 0, 0, 1, (uint64_t)_swiftEmptyArrayStorage);
  outlined destroy of SymbolButton.Configuration((uint64_t)v3, type metadata accessor for SymbolButton.Configuration);
  uint64_t v4 = (void *)v6[1];

  return v4;
}

uint64_t type metadata accessor for SymbolButton.Metrics(uint64_t a1)
{
  return type metadata accessor for Notice.Variant(a1, (uint64_t *)&type metadata singleton initialization cache for SymbolButton.Metrics);
}

uint64_t type metadata accessor for SymbolButton.MaterialView()
{
  return self;
}

uint64_t type metadata accessor for SymbolButton.BackgroundView()
{
  return self;
}

uint64_t type metadata accessor for SymbolButton(uint64_t a1)
{
  return type metadata accessor for Notice.Variant(a1, (uint64_t *)&type metadata singleton initialization cache for SymbolButton);
}

uint64_t type metadata accessor for SymbolButton.Label()
{
  return self;
}

uint64_t outlined destroy of SymbolButton.Configuration(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10043B9F4()
{
  return swift_deallocObject();
}

void partial apply for closure #1 in SymbolButton.init(configuration:handler:)(void *a1)
{
}

id _sSaySo13UIMenuElementCGSo0A0CSgIeggo_So7NSArrayCAFIeyBya_TR_0(uint64_t a1)
{
  id v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  type metadata accessor for UIMenu(0, &_sSo13UIMenuElementCML_0);
  uint64_t v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  swift_retain();
  uint64_t v3 = (void *)v1(v2);
  swift_release();
  swift_bridgeObjectRelease();

  return v3;
}

BOOL specialized static SymbolButton.Symbol.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a2 + 8);
  if (!v4)
  {
    if (v5) {
      return 0;
    }
    goto LABEL_10;
  }
  if (!v5) {
    return 0;
  }
  BOOL v6 = *(void *)a1 == *(void *)a2 && v4 == v5;
  if (v6 || (char v7 = _stringCompareWithSmolCheck(_:_:expecting:)(), result = 0, (v7 & 1) != 0))
  {
LABEL_10:
    id v9 = *(void **)(a1 + 16);
    id v10 = *(void **)(a2 + 16);
    if (v9)
    {
      if (!v10) {
        return 0;
      }
      type metadata accessor for UIMenu(0, &lazy cache variable for type metadata for NSBundle);
      id v11 = v10;
      id v12 = v9;
      char v13 = static NSObject.== infix(_:_:)();

      if ((v13 & 1) == 0) {
        return 0;
      }
    }
    else if (v10)
    {
      return 0;
    }
    uint64_t v14 = *(void **)(a1 + 24);
    id v38 = *(id *)(a2 + 24);
    id v39 = v14;
    uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v17 = v16;
    if (v15 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v17 == v18)
    {
      outlined retain of ICMusicSubscriptionStatus?(&v39);
      outlined retain of ICMusicSubscriptionStatus?(&v38);
      swift_bridgeObjectRelease_n();
      outlined release of UIView.Shadow(&v38);
      outlined release of UIView.Shadow(&v39);
    }
    else
    {
      char v19 = _stringCompareWithSmolCheck(_:_:expecting:)();
      outlined retain of ICMusicSubscriptionStatus?(&v39);
      outlined retain of ICMusicSubscriptionStatus?(&v38);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      outlined release of UIView.Shadow(&v38);
      outlined release of UIView.Shadow(&v39);
      BOOL result = 0;
      if ((v19 & 1) == 0) {
        return result;
      }
    }
    char v20 = *(unsigned char *)(a2 + 40);
    if (*(unsigned char *)(a1 + 40))
    {
      if (!*(unsigned char *)(a2 + 40)) {
        return 0;
      }
    }
    else
    {
      if (*(double *)(a1 + 32) != *(double *)(a2 + 32)) {
        char v20 = 1;
      }
      if (v20) {
        return 0;
      }
    }
    if (*(void *)(a1 + 48) != *(void *)(a2 + 48) || *(void *)(a1 + 56) != *(void *)(a2 + 56)) {
      return 0;
    }
    outlined init with take of PresentationSource?(a1 + 64, (uint64_t)v37, &demangling cache variable for type metadata for DisplayUnit<UIOffset>?);
    uint64_t v21 = *(void *)(a2 + 64);
    uint64_t v22 = *(void *)(a2 + 72);
    int v23 = *(unsigned __int8 *)(a2 + 80);
    outlined init with take of PresentationSource?((uint64_t)v37, (uint64_t)v40, &demangling cache variable for type metadata for DisplayUnit<UIOffset>?);
    if (v40[16] == 255)
    {
      if (v23 != 255) {
        return 0;
      }
    }
    else
    {
      outlined init with take of PresentationSource?((uint64_t)v40, (uint64_t)v41, &demangling cache variable for type metadata for DisplayUnit<UIOffset>);
      outlined init with take of PresentationSource?((uint64_t)v37, (uint64_t)v36, &demangling cache variable for type metadata for DisplayUnit<UIOffset>?);
      if (v23 == 255) {
        return 0;
      }
      v34[0] = v21;
      v34[1] = v22;
      char v35 = v23 & 1;
      type metadata accessor for UIOffset(0);
      uint64_t v25 = v24;
      lazy protocol witness table accessor for type UIView.Corner and conformance UIView.Corner(&lazy protocol witness table cache variable for type UIOffset and conformance UIOffset, type metadata accessor for UIOffset);
      if ((static DisplayUnit.__derived_enum_equals(_:_:)((uint64_t)v36, (uint64_t)v34, v25) & 1) == 0) {
        return 0;
      }
    }
    uint64_t v26 = *(void *)(a1 + 96);
    uint64_t v27 = *(void *)(a2 + 96);
    if (v26)
    {
      if (!v27) {
        return 0;
      }
      if (*(void *)(a1 + 88) != *(void *)(a2 + 88) || v26 != v27)
      {
        char v28 = _stringCompareWithSmolCheck(_:_:expecting:)();
        BOOL result = 0;
        if ((v28 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v27)
    {
      return 0;
    }
    if (*(double *)(a1 + 104) == *(double *)(a2 + 104))
    {
      uint64_t v29 = *(void **)(a1 + 112);
      id v30 = *(void **)(a2 + 112);
      if (v29)
      {
        if (!v30) {
          return 0;
        }
        type metadata accessor for UIMenu(0, (unint64_t *)&_sSo7UIColorCML_0);
        id v31 = v30;
        id v32 = v29;
        char v33 = static NSObject.== infix(_:_:)();

        return (v33 & 1) != 0;
      }
      if (!v30) {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

BOOL specialized static SymbolButton.Background.__derived_struct_equals(_:_:)(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, double a7, double a8)
{
  if (a7 != a8) {
    return 0;
  }
  if (a1)
  {
    if (!a4) {
      return 0;
    }
    type metadata accessor for UIMenu(0, (unint64_t *)&_sSo7UIColorCML_0);
    id v14 = a4;
    id v15 = a1;
    char v16 = static NSObject.== infix(_:_:)();

    if ((v16 & 1) == 0) {
      return 0;
    }
  }
  else if (a4)
  {
    return 0;
  }
  if (a3) {
    return a6 && (a2 == a5 && a3 == a6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0);
  }
  return !a6;
}

uint64_t specialized static SymbolButton.CustomView.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  type metadata accessor for UIMenu(0, (unint64_t *)&_sSo8NSObjectCML_1);
  if ((static NSObject.== infix(_:_:)() & 1) != 0 && *(double *)(a1 + 8) == *(double *)(a2 + 8))
  {
    BOOL v4 = *(double *)(a1 + 16) == *(double *)(a2 + 16) && *(double *)(a1 + 24) == *(double *)(a2 + 24);
    BOOL v5 = v4 && *(double *)(a1 + 32) == *(double *)(a2 + 32);
    if (v5 && *(double *)(a1 + 40) == *(double *)(a2 + 40))
    {
      BOOL v6 = *(void **)(a1 + 48);
      char v7 = *(void **)(a2 + 48);
      if (v6)
      {
        if (v7)
        {
          type metadata accessor for UIMenu(0, (unint64_t *)&_sSo7UIColorCML_0);
          id v8 = v7;
          id v9 = v6;
          char v10 = static NSObject.== infix(_:_:)();

          if (v10) {
            return 1;
          }
        }
      }
      else if (!v7)
      {
        return 1;
      }
    }
  }
  return 0;
}

uint64_t specialized static SymbolButton.Configuration.Accessibility.__derived_struct_equals(_:_:)(int a1, uint64_t a2, uint64_t a3, char a4, int a5, uint64_t a6, uint64_t a7, char a8)
{
  if ((a1 ^ a5)) {
    return 0;
  }
  if (a2)
  {
    if (!a6) {
      goto LABEL_17;
    }
    uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v15 = v14;
    if (v13 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v15 == v16)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v17 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      char v18 = 0;
      if ((v17 & 1) == 0) {
        return v18 & 1;
      }
    }
  }
  else if (a6)
  {
    goto LABEL_17;
  }
  if (!a3)
  {
    if (!a7) {
      goto LABEL_19;
    }
    goto LABEL_17;
  }
  if (!a7)
  {
LABEL_17:
    char v18 = 0;
    return v18 & 1;
  }
  uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v21 = v20;
  if (v19 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v21 == v22)
  {
    swift_bridgeObjectRelease_n();
LABEL_19:
    char v18 = a4 ^ a8 ^ 1;
    return v18 & 1;
  }
  char v23 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  char v18 = 0;
  if (v23) {
    goto LABEL_19;
  }
  return v18 & 1;
}

uint64_t specialized static SymbolButton.Title.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a2 + 8);
  if (!v4)
  {
    if (v5) {
      goto LABEL_31;
    }
    goto LABEL_10;
  }
  if (!v5) {
    goto LABEL_31;
  }
  BOOL v6 = *(void *)a1 == *(void *)a2 && v4 == v5;
  if (v6 || (char v7 = _stringCompareWithSmolCheck(_:_:expecting:)(), v8 = 0, (v7 & 1) != 0))
  {
LABEL_10:
    id v9 = *(void **)(a1 + 16);
    id v25 = *(id *)(a2 + 16);
    id v26 = v9;
    uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v12 = v11;
    if (v10 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v12 == v13)
    {
      outlined retain of ICMusicSubscriptionStatus?(&v26);
      outlined retain of ICMusicSubscriptionStatus?(&v25);
      swift_bridgeObjectRelease_n();
      outlined release of UIView.Shadow(&v25);
      outlined release of UIView.Shadow(&v26);
    }
    else
    {
      char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
      outlined retain of ICMusicSubscriptionStatus?(&v26);
      outlined retain of ICMusicSubscriptionStatus?(&v25);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      outlined release of UIView.Shadow(&v25);
      outlined release of UIView.Shadow(&v26);
      char v8 = 0;
      if ((v15 & 1) == 0) {
        return v8 & 1;
      }
    }
    if (*(double *)(a1 + 24) != *(double *)(a2 + 24)) {
      goto LABEL_31;
    }
    uint64_t v16 = *(void *)(a1 + 40);
    uint64_t v17 = *(void *)(a2 + 40);
    if (v16)
    {
      if (!v17) {
        goto LABEL_31;
      }
      if (*(void *)(a1 + 32) != *(void *)(a2 + 32) || v16 != v17)
      {
        char v18 = _stringCompareWithSmolCheck(_:_:expecting:)();
        char v8 = 0;
        if ((v18 & 1) == 0) {
          return v8 & 1;
        }
      }
    }
    else if (v17)
    {
      goto LABEL_31;
    }
    if (*(double *)(a1 + 48) == *(double *)(a2 + 48))
    {
      uint64_t v19 = *(void **)(a1 + 56);
      uint64_t v20 = *(void **)(a2 + 56);
      if (v19)
      {
        if (v20)
        {
          type metadata accessor for UIMenu(0, (unint64_t *)&_sSo7UIColorCML_0);
          id v21 = v20;
          id v22 = v19;
          char v23 = static NSObject.== infix(_:_:)();

          if (v23) {
            goto LABEL_29;
          }
        }
      }
      else if (!v20)
      {
LABEL_29:
        char v8 = ((*(unsigned char *)(a1 + 64) & 1) == 0) ^ *(unsigned char *)(a2 + 64);
        return v8 & 1;
      }
    }
LABEL_31:
    char v8 = 0;
  }
  return v8 & 1;
}

BOOL specialized static SymbolButton.Material.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  uint64_t v5 = *(void **)a2;
  if (*(void *)a1)
  {
    if (!v5) {
      return 0;
    }
    type metadata accessor for UIMenu(0, &lazy cache variable for type metadata for UIVisualEffect);
    id v6 = v5;
    id v7 = v4;
    char v8 = static NSObject.== infix(_:_:)();

    if ((v8 & 1) == 0) {
      return 0;
    }
  }
  else if (v5)
  {
    return 0;
  }
  id v9 = *(void **)(a1 + 8);
  uint64_t v10 = *(void **)(a2 + 8);
  if (v9)
  {
    if (!v10) {
      return 0;
    }
    type metadata accessor for UIMenu(0, &lazy cache variable for type metadata for UIVisualEffect);
    id v11 = v10;
    id v12 = v9;
    char v13 = static NSObject.== infix(_:_:)();

    if ((v13 & 1) == 0) {
      return 0;
    }
  }
  else if (v10)
  {
    return 0;
  }
  uint64_t v14 = *(void **)(a1 + 16);
  char v15 = *(void **)(a2 + 16);
  if (v14)
  {
    if (!v15) {
      return 0;
    }
    type metadata accessor for UIMenu(0, &lazy cache variable for type metadata for UIVisualEffect);
    id v16 = v15;
    id v17 = v14;
    char v18 = static NSObject.== infix(_:_:)();

    if ((v18 & 1) == 0) {
      return 0;
    }
  }
  else if (v15)
  {
    return 0;
  }
  int v19 = *(unsigned __int8 *)(a1 + 24);
  int v20 = *(unsigned __int8 *)(a2 + 24);
  if (v19 == 2)
  {
    if (v20 != 2) {
      return 0;
    }
    goto LABEL_21;
  }
  BOOL result = 0;
  if (v20 != 2 && ((v20 ^ v19) & 1) == 0)
  {
LABEL_21:
    uint64_t v22 = *(void *)(a1 + 40);
    uint64_t v23 = *(void *)(a2 + 40);
    if (v22) {
      return v23
    }
          && (*(void *)(a1 + 32) == *(void *)(a2 + 32) && v22 == v23
           || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0);
    return !v23;
  }
  return result;
}

uint64_t specialized static SymbolButton.Badge.__derived_struct_equals(_:_:)(void *a1, void *a2, double a3, double a4, double a5, double a6)
{
  if (a3 != a5 || a4 != a6) {
    return 0;
  }
  if (a1)
  {
    if (a2)
    {
      type metadata accessor for UIMenu(0, (unint64_t *)&_sSo7UIColorCML_0);
      id v10 = a2;
      id v11 = a1;
      char v12 = static NSObject.== infix(_:_:)();

      if (v12) {
        return 1;
      }
    }
  }
  else if (!a2)
  {
    return 1;
  }
  return 0;
}

uint64_t specialized static SymbolButton.Metrics.__derived_struct_equals(_:_:)(void **a1, void **a2)
{
  uint64_t v4 = type metadata accessor for UIView.Corner();
  uint64_t v48 = *(void *)(v4 - 8);
  __chkstk_darwin();
  id v6 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (UIView.Corner?, UIView.Corner?));
  __chkstk_darwin();
  id v9 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIView.Corner?);
  __chkstk_darwin();
  id v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  char v13 = (char *)&v45 - v12;
  __chkstk_darwin();
  char v15 = (char *)&v45 - v14;
  uint64_t v46 = a1;
  uint64_t v47 = a2;
  id v16 = *a1;
  id v17 = *a2;
  if (*a1)
  {
    if (!v17) {
      goto LABEL_27;
    }
    type metadata accessor for UIMenu(0, &lazy cache variable for type metadata for UITraitCollection);
    id v18 = v17;
    id v19 = v16;
    char v20 = static NSObject.== infix(_:_:)();

    if ((v20 & 1) == 0) {
      goto LABEL_27;
    }
  }
  else if (v17)
  {
    goto LABEL_27;
  }
  uint64_t v21 = type metadata accessor for SymbolButton.Metrics(0);
  outlined init with copy of (String, Any)((uint64_t)v46 + *(int *)(v21 + 20), (uint64_t)v15, &demangling cache variable for type metadata for UIView.Corner?);
  uint64_t v45 = (int *)v21;
  outlined init with copy of (String, Any)((uint64_t)v47 + *(int *)(v21 + 20), (uint64_t)v13, &demangling cache variable for type metadata for UIView.Corner?);
  uint64_t v22 = (uint64_t)&v9[*(int *)(v7 + 48)];
  outlined init with copy of (String, Any)((uint64_t)v15, (uint64_t)v9, &demangling cache variable for type metadata for UIView.Corner?);
  outlined init with copy of (String, Any)((uint64_t)v13, v22, &demangling cache variable for type metadata for UIView.Corner?);
  uint64_t v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v48 + 48);
  if (v23((uint64_t)v9, 1, v4) == 1)
  {
    outlined destroy of TaskPriority?((uint64_t)v13, &demangling cache variable for type metadata for UIView.Corner?);
    outlined destroy of TaskPriority?((uint64_t)v15, &demangling cache variable for type metadata for UIView.Corner?);
    if (v23(v22, 1, v4) == 1)
    {
      outlined destroy of TaskPriority?((uint64_t)v9, &demangling cache variable for type metadata for UIView.Corner?);
      goto LABEL_13;
    }
LABEL_11:
    outlined destroy of TaskPriority?((uint64_t)v9, &demangling cache variable for type metadata for (UIView.Corner?, UIView.Corner?));
    goto LABEL_27;
  }
  outlined init with copy of (String, Any)((uint64_t)v9, (uint64_t)v11, &demangling cache variable for type metadata for UIView.Corner?);
  if (v23(v22, 1, v4) == 1)
  {
    outlined destroy of TaskPriority?((uint64_t)v13, &demangling cache variable for type metadata for UIView.Corner?);
    outlined destroy of TaskPriority?((uint64_t)v15, &demangling cache variable for type metadata for UIView.Corner?);
    (*(void (**)(char *, uint64_t))(v48 + 8))(v11, v4);
    goto LABEL_11;
  }
  uint64_t v24 = v48;
  (*(void (**)(char *, uint64_t, uint64_t))(v48 + 32))(v6, v22, v4);
  lazy protocol witness table accessor for type UIView.Corner and conformance UIView.Corner((unint64_t *)&lazy protocol witness table cache variable for type UIView.Corner and conformance UIView.Corner, (void (*)(uint64_t))&type metadata accessor for UIView.Corner);
  char v25 = dispatch thunk of static Equatable.== infix(_:_:)();
  id v26 = *(void (**)(char *, uint64_t))(v24 + 8);
  v26(v6, v4);
  outlined destroy of TaskPriority?((uint64_t)v13, &demangling cache variable for type metadata for UIView.Corner?);
  outlined destroy of TaskPriority?((uint64_t)v15, &demangling cache variable for type metadata for UIView.Corner?);
  v26(v11, v4);
  outlined destroy of TaskPriority?((uint64_t)v9, &demangling cache variable for type metadata for UIView.Corner?);
  if ((v25 & 1) == 0) {
    goto LABEL_27;
  }
LABEL_13:
  type metadata accessor for UIMenu(0, (unint64_t *)&_sSo8NSObjectCML_1);
  char v28 = v45;
  uint64_t v27 = v46;
  uint64_t v29 = v47;
  if ((static NSObject.== infix(_:_:)() & 1) == 0 || (static NSObject.== infix(_:_:)() & 1) == 0) {
    goto LABEL_27;
  }
  uint64_t v32 = v28[8];
  double v30 = *(double *)((char *)v27 + v32);
  double v31 = *(double *)((char *)v29 + v32);
  LOBYTE(v32) = 0;
  if (v30 != v31) {
    return v32 & 1;
  }
  uint64_t v33 = v28[9];
  uint64_t v34 = (uint64_t)v27 + v33;
  double v35 = *(double *)((char *)v27 + v33);
  id v36 = (double *)((char *)v29 + v33);
  if (v35 != *v36) {
    return v32 & 1;
  }
  if (*(double *)(v34 + 8) != v36[1]) {
    return v32 & 1;
  }
  LOBYTE(v32) = 0;
  uint64_t v37 = v28[10];
  uint64_t v38 = (uint64_t)v27 + v37;
  double v39 = *(double *)((char *)v27 + v37);
  uint64_t v40 = (double *)((char *)v29 + v37);
  if (v39 != *v40 || *(double *)(v38 + 8) != v40[1]) {
    return v32 & 1;
  }
  uint64_t v32 = v28[11];
  uint64_t v41 = (double *)((char *)v27 + v32);
  char v42 = *((unsigned char *)v27 + v32 + 16);
  uint64_t v43 = (double *)((char *)v29 + v32);
  LODWORD(v32) = *((unsigned __int8 *)v29 + v32 + 16);
  if (v42)
  {
    if (!v32) {
      return v32 & 1;
    }
LABEL_26:
    if (vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)((char *)v27 + v28[12]), *(float64x2_t *)((char *)v29 + v28[12])), (int32x4_t)vceqq_f64(*(float64x2_t *)((char *)v27 + v28[12] + 16), *(float64x2_t *)((char *)v29 + v28[12] + 16)))), 0xFuLL))))
    {
      LOBYTE(v32) = *((unsigned char *)v27 + v28[13]) ^ *((unsigned char *)v29 + v28[13]) ^ 1;
      return v32 & 1;
    }
    goto LABEL_27;
  }
  if (v32)
  {
LABEL_27:
    LOBYTE(v32) = 0;
    return v32 & 1;
  }
  LOBYTE(v32) = 0;
  if (*v41 == *v43 && v41[1] == v43[1]) {
    goto LABEL_26;
  }
  return v32 & 1;
}

uint64_t specialized static SymbolButton.Configuration.__derived_struct_equals(_:_:)(uint64_t a1, long long *a2)
{
  uint64_t v4 = (void *)type metadata accessor for UIView.Corner();
  uint64_t v5 = *(v4 - 1);
  __chkstk_darwin();
  uint64_t v7 = (char *)v139 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v155 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (UIView.Corner?, UIView.Corner?));
  __chkstk_darwin();
  id v9 = (char *)v139 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIView.Corner?);
  __chkstk_darwin();
  id v11 = (char *)v139 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  char v13 = (char *)v139 - v12;
  __chkstk_darwin();
  char v15 = (char *)v139 - v14;
  long long v16 = *(_OWORD *)(a1 + 80);
  v170[4] = *(_OWORD *)(a1 + 64);
  v170[5] = v16;
  v170[6] = *(_OWORD *)(a1 + 96);
  uint64_t v171 = *(void *)(a1 + 112);
  long long v17 = *(_OWORD *)(a1 + 16);
  v170[0] = *(_OWORD *)a1;
  v170[1] = v17;
  long long v18 = *(_OWORD *)(a1 + 48);
  v170[2] = *(_OWORD *)(a1 + 32);
  v170[3] = v18;
  long long v19 = *a2;
  long long v20 = a2[1];
  long long v21 = a2[3];
  v172[2] = a2[2];
  v172[3] = v21;
  v172[0] = v19;
  v172[1] = v20;
  long long v22 = a2[4];
  long long v23 = a2[5];
  long long v24 = a2[6];
  uint64_t v173 = *((void *)a2 + 14);
  v172[5] = v23;
  v172[6] = v24;
  v172[4] = v22;
  if (!specialized static SymbolButton.Symbol.__derived_struct_equals(_:_:)((uint64_t)v170, (uint64_t)v172)) {
    return 0;
  }
  long long v25 = *(_OWORD *)(a1 + 136);
  long long v26 = *(_OWORD *)(a1 + 168);
  v166[2] = *(_OWORD *)(a1 + 152);
  v166[3] = v26;
  char v167 = *(unsigned char *)(a1 + 184);
  v166[0] = *(_OWORD *)(a1 + 120);
  v166[1] = v25;
  long long v27 = *(long long *)((char *)a2 + 136);
  long long v28 = *(long long *)((char *)a2 + 168);
  v168[2] = *(long long *)((char *)a2 + 152);
  v168[3] = v28;
  char v169 = *((unsigned char *)a2 + 184);
  v168[0] = *(long long *)((char *)a2 + 120);
  v168[1] = v27;
  if ((specialized static SymbolButton.Title.__derived_struct_equals(_:_:)((uint64_t)v166, (uint64_t)v168) & 1) == 0) {
    return 0;
  }
  char v151 = v13;
  long long v152 = v15;
  objc_super v148 = v7;
  long long v149 = v11;
  uint64_t v153 = v5;
  char v154 = v9;
  long long v150 = v4;
  uint64_t v29 = *(void **)(a1 + 200);
  uint64_t v30 = *(void *)(a1 + 208);
  uint64_t v31 = *(void *)(a1 + 216);
  uint64_t v32 = *((void *)a2 + 24);
  uint64_t v33 = (void *)*((void *)a2 + 25);
  uint64_t v35 = *((void *)a2 + 26);
  uint64_t v34 = *((void *)a2 + 27);
  if (v29 == (void *)1)
  {
    if (v33 == (void *)1) {
      goto LABEL_9;
    }
LABEL_7:
    uint64_t v36 = *(void *)(a1 + 192);
    outlined copy of SymbolButton.Background?(v36, *(void **)(a1 + 200));
    outlined copy of SymbolButton.Background?(v32, v33);
    outlined consume of SymbolButton.Background?(v36, v29);
    outlined consume of SymbolButton.Background?(v32, v33);
    return 0;
  }
  if (v33 == (void *)1) {
    goto LABEL_7;
  }
  CGFloat v147 = *(int **)(a1 + 192);
  uint64_t v37 = v147;
  outlined copy of SymbolButton.Background?((uint64_t)v147, v29);
  outlined copy of SymbolButton.Background?(v32, v33);
  LODWORD(v146) = specialized static SymbolButton.Background.__derived_struct_equals(_:_:)(v29, v30, v31, v33, v35, v34, *(double *)&v37, *(double *)&v32);
  outlined consume of SymbolButton.Background?(v32, v33);
  outlined consume of SymbolButton.Background?((uint64_t)v147, v29);
  if ((v146 & 1) == 0) {
    return 0;
  }
LABEL_9:
  double v39 = *(void **)(a1 + 224);
  uint64_t v38 = *(void **)(a1 + 232);
  uint64_t v41 = *(void **)(a1 + 240);
  uint64_t v40 = *(void *)(a1 + 248);
  uint64_t v43 = *(void *)(a1 + 256);
  char v42 = *(void **)(a1 + 264);
  uint64_t v45 = (void *)*((void *)a2 + 28);
  uint64_t v44 = (void *)*((void *)a2 + 29);
  uint64_t v47 = (void *)*((void *)a2 + 30);
  uint64_t v46 = *((void *)a2 + 31);
  uint64_t v48 = *((void *)a2 + 32);
  CGFloat v147 = (int *)*((void *)a2 + 33);
  if (v39 == (void *)1)
  {
    if (v45 == (void *)1) {
      goto LABEL_15;
    }
LABEL_13:
    CGFloat v145 = v45;
    CGFloat v146 = v38;
    double v49 = v39;
    uint64_t v143 = v46;
    CGFloat v144 = v44;
    outlined copy of SymbolButton.Material?(v39, v38, v41);
    uint64_t v50 = v45;
    uint64_t v51 = v144;
    outlined copy of SymbolButton.Material?(v50, v144, v47);
    outlined consume of SymbolButton.Material?(v49, v146, v41);
    outlined consume of SymbolButton.Material?(v145, v51, v47);
    return 0;
  }
  if (v45 == (void *)1) {
    goto LABEL_13;
  }
  v158[0] = v39;
  v158[1] = v38;
  v158[2] = v41;
  char v159 = v40;
  uint64_t v160 = v43;
  CGRect v161 = v42;
  v162[0] = v45;
  v162[1] = v44;
  v162[2] = v47;
  char v163 = v46;
  uint64_t v164 = v48;
  CGRect v165 = v147;
  CGFloat v145 = v45;
  CGFloat v146 = v38;
  uint64_t v140 = v39;
  uint64_t v141 = v43;
  CGFloat v144 = v44;
  v139[0] = v41;
  v139[1] = v42;
  uint64_t v142 = v40;
  outlined copy of SymbolButton.Material?(v39, v38, v41);
  double v53 = v144;
  long long v52 = v145;
  outlined copy of SymbolButton.Material?(v145, v144, v47);
  BOOL v54 = specialized static SymbolButton.Material.__derived_struct_equals(_:_:)((uint64_t)v158, (uint64_t)v162);
  outlined consume of SymbolButton.Material?(v52, v53, v47);
  outlined consume of SymbolButton.Material?(v140, v146, v139[0]);
  if (!v54) {
    return 0;
  }
LABEL_15:
  id v55 = *(void **)(a1 + 288);
  CGFloat v56 = (void *)*((void *)a2 + 36);
  if (v55)
  {
    if (!v56) {
      return 0;
    }
    uint64_t v57 = *(void *)(a1 + 272);
    uint64_t v58 = *(void *)(a1 + 280);
    uint64_t v59 = *((void *)a2 + 34);
    uint64_t v60 = *((void *)a2 + 35);
    id v61 = v56;
    id v62 = v55;
    LOBYTE(v157[0]) = v60 & 1;
    LOBYTE(v57) = static UIView.Border.__derived_struct_equals(_:_:)(v57, v58 & 1, (uint64_t)v62, v59, v60 & 1);

    if ((v57 & 1) == 0) {
      return 0;
    }
  }
  else if (v56)
  {
    return 0;
  }
  id v63 = (int *)type metadata accessor for SymbolButton.Configuration(0);
  uint64_t v64 = (uint64_t)v152;
  outlined init with copy of (String, Any)(a1 + v63[9], (uint64_t)v152, &demangling cache variable for type metadata for UIView.Corner?);
  CGFloat v147 = v63;
  uint64_t v65 = (uint64_t)v151;
  outlined init with copy of (String, Any)((uint64_t)a2 + v63[9], (uint64_t)v151, &demangling cache variable for type metadata for UIView.Corner?);
  uint64_t v66 = (uint64_t)v154;
  uint64_t v67 = (uint64_t)&v154[*(int *)(v155 + 48)];
  outlined init with copy of (String, Any)(v64, (uint64_t)v154, &demangling cache variable for type metadata for UIView.Corner?);
  outlined init with copy of (String, Any)(v65, v67, &demangling cache variable for type metadata for UIView.Corner?);
  id v68 = *(unsigned int (**)(uint64_t, uint64_t, void *))(v153 + 48);
  uint64_t v69 = v150;
  if (v68(v66, 1, v150) == 1)
  {
    outlined destroy of TaskPriority?(v65, &demangling cache variable for type metadata for UIView.Corner?);
    outlined destroy of TaskPriority?(v64, &demangling cache variable for type metadata for UIView.Corner?);
    if (v68(v67, 1, v69) == 1)
    {
      outlined destroy of TaskPriority?((uint64_t)v154, &demangling cache variable for type metadata for UIView.Corner?);
      goto LABEL_27;
    }
LABEL_25:
    outlined destroy of TaskPriority?((uint64_t)v154, &demangling cache variable for type metadata for (UIView.Corner?, UIView.Corner?));
    return 0;
  }
  uint64_t v70 = (uint64_t)v149;
  outlined init with copy of (String, Any)(v66, (uint64_t)v149, &demangling cache variable for type metadata for UIView.Corner?);
  if (v68(v67, 1, v69) == 1)
  {
    outlined destroy of TaskPriority?((uint64_t)v151, &demangling cache variable for type metadata for UIView.Corner?);
    outlined destroy of TaskPriority?((uint64_t)v152, &demangling cache variable for type metadata for UIView.Corner?);
    (*(void (**)(uint64_t, void *))(v153 + 8))(v70, v69);
    goto LABEL_25;
  }
  uint64_t v71 = v153;
  uint64_t v72 = v148;
  (*(void (**)(char *, uint64_t, void *))(v153 + 32))(v148, v67, v69);
  lazy protocol witness table accessor for type UIView.Corner and conformance UIView.Corner((unint64_t *)&lazy protocol witness table cache variable for type UIView.Corner and conformance UIView.Corner, (void (*)(uint64_t))&type metadata accessor for UIView.Corner);
  char v73 = dispatch thunk of static Equatable.== infix(_:_:)();
  CGFloat v74 = *(void (**)(char *, void *))(v71 + 8);
  v74(v72, v69);
  outlined destroy of TaskPriority?((uint64_t)v151, &demangling cache variable for type metadata for UIView.Corner?);
  outlined destroy of TaskPriority?((uint64_t)v152, &demangling cache variable for type metadata for UIView.Corner?);
  v74((char *)v70, v69);
  outlined destroy of TaskPriority?(v66, &demangling cache variable for type metadata for UIView.Corner?);
  if ((v73 & 1) == 0) {
    return 0;
  }
LABEL_27:
  uint64_t v75 = v147[10];
  id v77 = *(void **)(a1 + v75);
  uint64_t v76 = *(void *)(a1 + v75 + 8);
  uint64_t v79 = *(void *)(a1 + v75 + 16);
  uint64_t v78 = *(void *)(a1 + v75 + 24);
  uint64_t v81 = *(void *)(a1 + v75 + 32);
  uint64_t v80 = *(void *)(a1 + v75 + 40);
  uint64_t v82 = *(void **)(a1 + v75 + 48);
  uint64_t v83 = (uint64_t)a2 + v75;
  double v84 = *(void **)v83;
  uint64_t v85 = *(void *)(v83 + 8);
  uint64_t v87 = *(void *)(v83 + 16);
  uint64_t v86 = *(void *)(v83 + 24);
  uint64_t v89 = *(void *)(v83 + 32);
  uint64_t v88 = *(void *)(v83 + 40);
  uint64_t v90 = *(void **)(v83 + 48);
  if (!v77)
  {
    if (!v84) {
      goto LABEL_35;
    }
LABEL_32:
    uint64_t v100 = v79;
    char v151 = (char *)v79;
    long long v152 = (char *)v78;
    uint64_t v101 = v87;
    uint64_t v102 = v78;
    uint64_t v103 = v86;
    uint64_t v104 = v81;
    uint64_t v153 = v81;
    char v154 = (char *)v80;
    uint64_t v105 = v89;
    uint64_t v106 = v88;
    long long v150 = v82;
    uint64_t v155 = v85;
    double v107 = v90;
    outlined copy of SymbolButton.CustomView?(v77, v76, v100, v102, v104, v80, v82);
    outlined copy of SymbolButton.CustomView?(v84, v85, v101, v103, v105, v106, v107);
    outlined consume of SymbolButton.CustomView?(v77, v76, (uint64_t)v151, (uint64_t)v152, v153, (uint64_t)v154, v150);
    outlined consume of SymbolButton.CustomView?(v84, v155, v101, v103, v105, v106, v107);
    return 0;
  }
  if (!v84) {
    goto LABEL_32;
  }
  v156[0] = v77;
  v156[1] = v76;
  v156[2] = v79;
  v156[3] = v78;
  v156[4] = v81;
  v156[5] = v80;
  v156[6] = v82;
  v157[0] = v84;
  char v154 = (char *)v80;
  uint64_t v155 = v85;
  v157[1] = v85;
  v157[2] = v87;
  v157[3] = v86;
  v157[4] = v89;
  v157[5] = v88;
  v157[6] = v90;
  long long v149 = (char *)v76;
  long long v150 = v82;
  uint64_t v91 = v76;
  uint64_t v92 = v79;
  char v151 = (char *)v79;
  long long v152 = (char *)v78;
  uint64_t v93 = v87;
  uint64_t v94 = v78;
  uint64_t v95 = v86;
  uint64_t v96 = v81;
  uint64_t v153 = v81;
  uint64_t v97 = v89;
  uint64_t v98 = v88;
  id v99 = v90;
  outlined copy of SymbolButton.CustomView?(v77, v91, v92, v94, v96, v80, v82);
  outlined copy of SymbolButton.CustomView?(v84, v155, v93, v95, v97, v98, v99);
  LODWORD(v148) = specialized static SymbolButton.CustomView.__derived_struct_equals(_:_:)((uint64_t)v156, (uint64_t)v157);
  outlined consume of SymbolButton.CustomView?(v84, v155, v93, v95, v97, v98, v99);
  outlined consume of SymbolButton.CustomView?(v77, (uint64_t)v149, (uint64_t)v151, (uint64_t)v152, v153, (uint64_t)v154, v150);
  if ((v148 & 1) == 0) {
    return 0;
  }
LABEL_35:
  double v109 = v147;
  uint64_t v110 = v147[11];
  double v111 = (uint64_t *)(a1 + v110);
  double v112 = *(void **)(a1 + v110 + 16);
  id v113 = (uint64_t *)((char *)a2 + v110);
  double v114 = (void *)v113[2];
  if (v112 == (void *)1)
  {
    if (v114 != (void *)1) {
      return 0;
    }
  }
  else
  {
    if (v114 == (void *)1) {
      return 0;
    }
    uint64_t result = 0;
    uint64_t v123 = *v111;
    uint64_t v124 = *v113;
    if (*(double *)v111 != *(double *)v113) {
      return result;
    }
    uint64_t v125 = v111[1];
    uint64_t v126 = v113[1];
    if (*(double *)&v125 != *(double *)&v126) {
      return result;
    }
    if (v112)
    {
      if (!v114) {
        return 0;
      }
      type metadata accessor for UIMenu(0, (unint64_t *)&_sSo7UIColorCML_0);
      outlined copy of SymbolButton.Badge?(v124, v126, v114);
      outlined copy of SymbolButton.Badge?(v123, v125, v112);
      char v127 = static NSObject.== infix(_:_:)();
      outlined consume of SymbolButton.Badge?(v124, v126, (uint64_t)v114);
      outlined consume of SymbolButton.Badge?(v123, v125, (uint64_t)v112);
      double v109 = v147;
      if ((v127 & 1) == 0) {
        return 0;
      }
    }
    else
    {
      double v109 = v147;
      if (v114) {
        return 0;
      }
    }
  }
  if (*(double *)(a1 + v109[12]) != *(double *)((char *)a2 + v109[12])) {
    return 0;
  }
  uint64_t result = 0;
  uint64_t v115 = v109[13];
  uint64_t v116 = a1 + v115;
  double v117 = *(double *)(a1 + v115);
  double v118 = (double *)((char *)a2 + v115);
  if (v117 == *v118 && *(double *)(v116 + 8) == v118[1])
  {
    uint64_t v119 = v147[14];
    double v120 = (double *)(a1 + v119);
    char v121 = *(unsigned char *)(a1 + v119 + 16);
    uint64_t v122 = (uint64_t)a2 + v119;
    if (v121)
    {
      if (!*(unsigned char *)(v122 + 16)) {
        return 0;
      }
      goto LABEL_55;
    }
    if (*(unsigned char *)(v122 + 16)) {
      return 0;
    }
    uint64_t result = 0;
    if (*v120 == *(double *)v122 && v120[1] == *(double *)(v122 + 8))
    {
LABEL_55:
      if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + v147[15]), *(float64x2_t *)((char *)a2 + v147[15])), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + v147[15] + 16), *(float64x2_t *)((char *)a2 + v147[15] + 16)))), 0xFuLL))) & 1) == 0)return 0; {
      uint64_t v128 = v147[16];
      }
      if ((specialized static SymbolButton.Configuration.Accessibility.__derived_struct_equals(_:_:)(*(unsigned __int8 *)(a1 + v128), *(void *)(a1 + v128 + 8), *(void *)(a1 + v128 + 16), *(unsigned char *)(a1 + v128 + 24), *((unsigned __int8 *)a2 + v128), *(void *)((char *)a2 + v128 + 8), *(void *)((char *)a2 + v128 + 16), *((unsigned char *)a2 + v128 + 24)) & 1) == 0|| *(double *)(a1 + v147[17]) != *(double *)((char *)a2 + v147[17]))
      {
        return 0;
      }
      uint64_t v129 = v147[18];
      int v130 = *(void **)(a1 + v129);
      uint64_t v131 = *(void **)((char *)a2 + v129);
      if (v130)
      {
        if (!v131) {
          return 0;
        }
        type metadata accessor for UIMenu(0, (unint64_t *)&_sSo7UIColorCML_0);
        id v132 = v131;
        id v133 = v130;
        char v134 = static NSObject.== infix(_:_:)();

        if ((v134 & 1) == 0) {
          return 0;
        }
      }
      else if (v131)
      {
        return 0;
      }
      uint64_t v135 = v147[19];
      int v136 = *(unsigned __int8 *)(a1 + v135);
      int v137 = *((unsigned __int8 *)a2 + v135);
      if (v136 == 2)
      {
        if (v137 == 2) {
          return 1;
        }
      }
      else
      {
        BOOL v138 = (v136 & 1) == 0;
        if (v137 != 2 && ((v138 ^ v137) & 1) != 0) {
          return 1;
        }
      }
      return 0;
    }
  }
  return result;
}

void specialized SymbolButton.customView.setter(void *a1)
{
  uint64_t v2 = OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_customView;
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_customView);
  *(void *)(v1 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_customView) = a1;
  id v4 = a1;

  uint64_t v5 = *(void **)(v1 + v2);
  if (v5)
  {
    uint64_t v6 = *(void **)(v1 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_backgroundView);
    id v8 = v5;
    id v7 = v6;
    if ([v7 isDescendantOfView:v7])
    {
      [v7 insertSubview:v8 aboveSubview:v7];
    }
    else
    {

      if (![v8 isDescendantOfView:v7]) {
        [v7 addSubview:v8];
      }
    }
    SymbolButton.layoutCustomViewIfNeeded()();
  }
}

uint64_t specialized static SymbolButton.Symbol.hasSignificantChanges(from:to:)(uint64_t a1, uint64_t a2)
{
  outlined init with take of PresentationSource?(a1, (uint64_t)v40, &demangling cache variable for type metadata for SymbolButton.Symbol?);
  if (v40[3])
  {
    uint64_t v5 = v40[0];
    uint64_t v4 = v40[1];
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v4 = 0;
  }
  outlined init with take of PresentationSource?(a2, (uint64_t)v39, &demangling cache variable for type metadata for SymbolButton.Symbol?);
  if (!v39[3])
  {
    if (!v4) {
      goto LABEL_15;
    }
    goto LABEL_13;
  }
  uint64_t v6 = v39[0];
  uint64_t v7 = v39[1];
  swift_bridgeObjectRetain();
  if (!v4)
  {
    if (!v7) {
      goto LABEL_15;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    return 1;
  }
  if (!v7) {
    goto LABEL_13;
  }
  if (v5 == v6 && v4 == v7)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v8 & 1) == 0) {
      return 1;
    }
  }
LABEL_15:
  outlined init with take of PresentationSource?(a1, (uint64_t)v37, &demangling cache variable for type metadata for SymbolButton.Symbol?);
  if (v38)
  {
    id v9 = v38;
    outlined init with take of PresentationSource?(a2, (uint64_t)v35, &demangling cache variable for type metadata for SymbolButton.Symbol?);
    if (!v36)
    {

      return 1;
    }
    id v10 = v36;
    uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v13 = v12;
    if (v11 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v13 == v14)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      if ((v15 & 1) == 0) {
        return 1;
      }
    }
  }
  else
  {
    outlined init with take of PresentationSource?(a2, (uint64_t)v35, &demangling cache variable for type metadata for SymbolButton.Symbol?);
    if (v36) {
      return 1;
    }
  }
  outlined init with take of PresentationSource?(a2, (uint64_t)v32, &demangling cache variable for type metadata for SymbolButton.Symbol?);
  uint64_t v16 = v33;
  uint64_t v17 = v34;
  outlined init with take of PresentationSource?(a1, (uint64_t)v29, &demangling cache variable for type metadata for SymbolButton.Symbol?);
  if (v30)
  {
    if (v16) {
      uint64_t v18 = v17;
    }
    else {
      uint64_t v18 = 0;
    }
    uint64_t result = 1;
    if (!v16 || v31 != v18) {
      return result;
    }
    goto LABEL_34;
  }
  if (v16) {
    return 1;
  }
LABEL_34:
  outlined init with take of PresentationSource?(a2, (uint64_t)v26, &demangling cache variable for type metadata for SymbolButton.Symbol?);
  uint64_t v20 = v27;
  uint64_t v21 = v28;
  outlined init with take of PresentationSource?(a1, (uint64_t)&v23, &demangling cache variable for type metadata for SymbolButton.Symbol?);
  BOOL v22 = (v24 | v20) == 0;
  if (v24)
  {
    if (v20) {
      BOOL v22 = v25 == v21;
    }
  }
  return !v22;
}

uint64_t specialized static SymbolButton.Title.hasSignificantChanges(from:to:)(uint64_t a1, uint64_t a2)
{
  outlined init with take of PresentationSource?(a1, (uint64_t)v28, &demangling cache variable for type metadata for SymbolButton.Title?);
  uint64_t v4 = (void *)v28[7];
  outlined init with take of PresentationSource?(a1, (uint64_t)v43, &demangling cache variable for type metadata for SymbolButton.Title?);
  if (v43[2])
  {
    uint64_t v6 = v43[0];
    uint64_t v5 = v43[1];
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  outlined init with take of PresentationSource?(a2, (uint64_t)v42, &demangling cache variable for type metadata for SymbolButton.Title?);
  if (!v42[2])
  {
    if (!v5) {
      goto LABEL_15;
    }
    goto LABEL_13;
  }
  uint64_t v8 = v42[0];
  uint64_t v7 = v42[1];
  swift_bridgeObjectRetain();
  if (!v5)
  {
    if (!v7) {
      goto LABEL_15;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    goto LABEL_40;
  }
  if (!v7) {
    goto LABEL_13;
  }
  if (v6 == v8 && v5 == v7)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v9 & 1) == 0) {
      goto LABEL_40;
    }
  }
LABEL_15:
  outlined init with take of PresentationSource?(a1, (uint64_t)v40, &demangling cache variable for type metadata for SymbolButton.Title?);
  if (v41)
  {
    id v10 = v41;
    outlined init with take of PresentationSource?(a2, (uint64_t)v38, &demangling cache variable for type metadata for SymbolButton.Title?);
    if (!v39)
    {

      goto LABEL_40;
    }
    id v11 = v39;
    uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v14 = v13;
    if (v12 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v14 == v15)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v16 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      if ((v16 & 1) == 0) {
        goto LABEL_40;
      }
    }
  }
  else
  {
    outlined init with take of PresentationSource?(a2, (uint64_t)v38, &demangling cache variable for type metadata for SymbolButton.Title?);
    if (v39) {
      goto LABEL_40;
    }
  }
  outlined init with take of PresentationSource?(a2, (uint64_t)v35, &demangling cache variable for type metadata for SymbolButton.Title?);
  uint64_t v17 = v36;
  double v18 = v37;
  outlined init with take of PresentationSource?(a1, (uint64_t)v32, &demangling cache variable for type metadata for SymbolButton.Title?);
  if (!v33)
  {
    if (!v17)
    {
      uint64_t v4 = 0;
LABEL_32:
      outlined init with take of PresentationSource?(a2, (uint64_t)v29, &demangling cache variable for type metadata for SymbolButton.Title?);
      if (v30)
      {
        id v22 = v31;
        id v23 = v31;
        uint64_t v24 = v23;
        if (v4)
        {
          if (v22)
          {
            type metadata accessor for UIMenu(0, (unint64_t *)&_sSo7UIColorCML_0);
            id v25 = v4;
            char v26 = static NSObject.== infix(_:_:)();

            char v20 = v26 ^ 1;
            return v20 & 1;
          }
          goto LABEL_37;
        }
        if (v22)
        {

          goto LABEL_40;
        }
      }
      else if (v4)
      {
LABEL_37:

        goto LABEL_40;
      }
      char v20 = 0;
      return v20 & 1;
    }
LABEL_40:
    char v20 = 1;
    return v20 & 1;
  }
  double v19 = 0.0;
  if (v17) {
    double v19 = v18;
  }
  char v20 = 1;
  if (v17 && v34 == v19)
  {
    id v21 = v4;
    goto LABEL_32;
  }
  return v20 & 1;
}

void specialized SymbolButton.init(coder:)()
{
  uint64_t v1 = v0;
  uint64_t v2 = &v0[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_debugLabel];
  *uint64_t v2 = 0;
  v2[1] = 0;
  uint64_t v3 = &v0[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_configurationProvider];
  *uint64_t v3 = 0;
  v3[1] = 0;
  uint64_t v4 = &v0[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_handler];
  void *v4 = 0;
  v4[1] = 0;
  v0[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenHighlighted] = 1;
  v0[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenSelected] = 1;
  v0[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenDisabled] = 1;
  v0[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenHidden] = 1;
  *(void *)&v0[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_pendingAnimatedChangesCount] = 0;
  uint64_t v5 = OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_hitRectMinimumSize;
  if (one-time initialization token for hitRectMinimumSize != -1) {
    swift_once();
  }
  *(_OWORD *)&v1[v5] = static SymbolButton.Configuration.hitRectMinimumSize;
  uint64_t v6 = &v1[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_buildMenu];
  void *v6 = 0;
  v6[1] = 0;
  uint64_t v7 = OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_containerView;
  *(void *)&v1[v7] = [objc_allocWithZone((Class)UIView) init];
  uint64_t v8 = OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_materialView;
  uint64_t v20 = 1;
  char v9 = (objc_class *)type metadata accessor for SymbolButton.MaterialView();
  long long v21 = 0u;
  long long v22 = 0u;
  uint64_t v23 = 0;
  v19.receiver = objc_allocWithZone(v9);
  v19.super_class = v9;
  id v10 = objc_msgSendSuper2(&v19, "initWithEffect:", 0);
  SymbolButton.MaterialView.apply(_:)((uint64_t)&v20);

  *(void *)&v1[v8] = v10;
  uint64_t v11 = OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_backgroundView;
  if (one-time initialization token for clear != -1) {
    swift_once();
  }
  swift_beginAccess();
  double v12 = *(double *)&static SymbolButton.Background.clear;
  uint64_t v13 = (void *)qword_1005AEC48;
  uint64_t v14 = qword_1005AEC50;
  uint64_t v15 = qword_1005AEC58;
  objc_allocWithZone((Class)type metadata accessor for SymbolButton.BackgroundView());
  swift_bridgeObjectRetain();
  id v16 = v13;
  *(void *)&v1[v11] = SymbolButton.BackgroundView.init(configuration:)(v13, v12, v14, v15);
  *(void *)&v1[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton____lazy_storage___imageView] = 0;
  *(void *)&v1[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton____lazy_storage___titleLabel] = 0;
  *(void *)&v1[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_customView] = 0;
  *(void *)&v1[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_badgeView] = 0;
  uint64_t v17 = &v1[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton____lazy_storage___metrics];
  uint64_t v18 = type metadata accessor for SymbolButton.Metrics(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 1, 1, v18);
  v1[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_isClippingInvalidated] = 1;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t outlined assign with take of SymbolButton.Configuration(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SymbolButton.Configuration(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10043E19C()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_10043E1D4()
{
  uint64_t v1 = (int *)type metadata accessor for SymbolButton.Configuration(0);
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v27 = v0;
  uint64_t v5 = v0 + v3;
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  uint64_t v6 = *(void **)(v0 + v3 + 200);
  if (v6 != (void *)1)
  {

    swift_bridgeObjectRelease();
  }
  uint64_t v7 = *(void **)(v5 + 224);
  if (v7 != (void *)1)
  {

    swift_bridgeObjectRelease();
  }
  uint64_t v26 = v4;
  uint64_t v8 = v4 + v2;

  uint64_t v9 = v5 + v1[9];
  uint64_t v10 = type metadata accessor for UIView.Corner();
  uint64_t v11 = *(void *)(v10 - 8);
  double v12 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  if (!v12(v9, 1, v10)) {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  uint64_t v13 = v8 + v3;
  uint64_t v14 = (id *)(v5 + v1[10]);
  if (*v14)
  {
  }
  uint64_t v15 = v13 & ~v2;
  id v16 = *(void **)(v5 + v1[11] + 16);
  if (v16 != (void *)1) {

  }
  uint64_t v17 = v5 + v1[16];
  uint64_t v18 = v27 + v15;
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  objc_super v19 = *(void **)(v27 + v15 + 200);
  if (v19 != (void *)1)
  {

    swift_bridgeObjectRelease();
  }
  uint64_t v20 = *(void **)(v18 + 224);
  if (v20 != (void *)1)
  {

    swift_bridgeObjectRelease();
  }

  uint64_t v21 = v18 + v1[9];
  if (!v12(v21, 1, v10)) {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v21, v10);
  }
  long long v22 = (id *)(v18 + v1[10]);
  if (*v22)
  {
  }
  uint64_t v23 = *(void **)(v18 + v1[11] + 16);
  if (v23 != (void *)1) {

  }
  uint64_t v24 = v18 + v1[16];

  return swift_deallocObject();
}

void partial apply for closure #2 in SymbolButton.setConfiguration(_:animation:updates:)()
{
  uint64_t v1 = *(void *)(type metadata accessor for SymbolButton.Configuration(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v5 = (v4 + v2 + v3) & ~v2;
  unint64_t v6 = (v4 + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = *(char **)(v0 + v6);
  uint64_t v8 = *(char ***)(v0 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8));

  closure #2 in SymbolButton.setConfiguration(_:animation:updates:)((uint64_t *)(v0 + v3), v0 + v5, v7, v8);
}

uint64_t sub_10043E610()
{
  return swift_deallocObject();
}

uint64_t block_copy_helper_69(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_69()
{
  return swift_release();
}

uint64_t sub_10043E638()
{
  uint64_t v1 = (int *)type metadata accessor for SymbolButton.Configuration(0);
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);

  uint64_t v5 = v0 + v3;
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  unint64_t v6 = *(void **)(v0 + v3 + 200);
  if (v6 != (void *)1)
  {

    swift_bridgeObjectRelease();
  }
  uint64_t v7 = *(void **)(v5 + 224);
  if (v7 != (void *)1)
  {

    swift_bridgeObjectRelease();
  }
  uint64_t v8 = v4 + v2;

  uint64_t v9 = v5 + v1[9];
  uint64_t v10 = type metadata accessor for UIView.Corner();
  uint64_t v11 = *(void *)(v10 - 8);
  id v25 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  if (!v25(v9, 1, v10)) {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  uint64_t v12 = v8 + v3;
  uint64_t v13 = (id *)(v5 + v1[10]);
  if (*v13)
  {
  }
  uint64_t v14 = v12 & ~v2;
  uint64_t v15 = *(void **)(v5 + v1[11] + 16);
  if (v15 != (void *)1) {

  }
  uint64_t v16 = v5 + v1[16];
  uint64_t v17 = v0 + v14;
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  uint64_t v18 = *(void **)(v0 + v14 + 200);
  if (v18 != (void *)1)
  {

    swift_bridgeObjectRelease();
  }
  objc_super v19 = *(void **)(v17 + 224);
  if (v19 != (void *)1)
  {

    swift_bridgeObjectRelease();
  }

  uint64_t v20 = v17 + v1[9];
  if (!v25(v20, 1, v10)) {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v20, v10);
  }
  uint64_t v21 = (id *)(v17 + v1[10]);
  if (*v21)
  {
  }
  long long v22 = *(void **)(v17 + v1[11] + 16);
  if (v22 != (void *)1) {

  }
  uint64_t v23 = v17 + v1[16];
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t partial apply for closure #3 in SymbolButton.setConfiguration(_:animation:updates:)()
{
  uint64_t v1 = *(void *)(type metadata accessor for SymbolButton.Configuration(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v5 = (v4 + v2 + v3) & ~v2;
  unint64_t v6 = (v4 + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = *(void **)(v0 + 16);
  uint64_t v8 = *(uint64_t **)(v0 + v6);
  uint64_t v9 = *(void *)(v0 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8));

  return closure #3 in SymbolButton.setConfiguration(_:animation:updates:)(v7, v0 + v3, v0 + v5, v8, v9);
}

uint64_t sub_10043EA84()
{
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void partial apply for closure #4 in SymbolButton.setConfiguration(_:animation:updates:)(uint64_t a1)
{
  closure #4 in SymbolButton.setConfiguration(_:animation:updates:)(a1, *(void *)(v1 + 16), *(char **)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48));
}

uint64_t outlined init with copy of SymbolButton.Symbol(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t outlined assign with take of SymbolButton.Symbol(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t outlined init with copy of SymbolButton.Title(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t outlined assign with take of SymbolButton.Title(uint64_t a1, uint64_t a2)
{
  return a2;
}

void outlined copy of SymbolButton.Background?(uint64_t a1, void *a2)
{
  if (a2 != (void *)1)
  {
    swift_bridgeObjectRetain();
    id v3 = a2;
  }
}

id outlined copy of SymbolButton.Badge?(uint64_t a1, uint64_t a2, void *a3)
{
  if (a3 != (void *)1) {
    return a3;
  }
  return result;
}

uint64_t sub_10043EC1C()
{
  return swift_deallocObject();
}

id partial apply for closure #1 in SymbolButton.setEnabled(_:animated:)()
{
  return [*(id *)(v0 + 16) setEnabled:*(unsigned __int8 *)(v0 + 24)];
}

uint64_t sub_10043EC68()
{
  return swift_deallocObject();
}

BOOL specialized static SymbolButton.Title.preferredTransitionStyle(from:to:)(uint64_t a1, uint64_t a2)
{
  outlined init with take of PresentationSource?(a1, (uint64_t)v28, &demangling cache variable for type metadata for SymbolButton.Title?);
  if (v28[2])
  {
    uint64_t v5 = v28[0];
    uint64_t v4 = v28[1];
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v4 = 0;
  }
  outlined init with take of PresentationSource?(a2, (uint64_t)v27, &demangling cache variable for type metadata for SymbolButton.Title?);
  if (!v27[2])
  {
    if (!v4) {
      goto LABEL_15;
    }
    goto LABEL_13;
  }
  uint64_t v7 = v27[0];
  uint64_t v6 = v27[1];
  swift_bridgeObjectRetain();
  if (!v4)
  {
    if (!v6) {
      goto LABEL_15;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    return 0;
  }
  if (!v6) {
    goto LABEL_13;
  }
  if (v5 == v7 && v4 == v6)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    BOOL result = 0;
    if ((v8 & 1) == 0) {
      return result;
    }
  }
LABEL_15:
  outlined init with take of PresentationSource?(a1, (uint64_t)v25, &demangling cache variable for type metadata for SymbolButton.Title?);
  if (v26)
  {
    id v10 = v26;
    outlined init with take of PresentationSource?(a2, (uint64_t)v23, &demangling cache variable for type metadata for SymbolButton.Title?);
    if (!v24)
    {

      return 0;
    }
    id v11 = v24;
    uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v14 = v13;
    if (v12 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v14 == v15)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v16 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      BOOL result = 0;
      if ((v16 & 1) == 0) {
        return result;
      }
    }
  }
  else
  {
    outlined init with take of PresentationSource?(a2, (uint64_t)v23, &demangling cache variable for type metadata for SymbolButton.Title?);
    if (v24) {
      return 0;
    }
  }
  outlined init with take of PresentationSource?(a2, (uint64_t)v20, &demangling cache variable for type metadata for SymbolButton.Title?);
  uint64_t v17 = v21;
  double v18 = v22;
  outlined init with take of PresentationSource?(a1, (uint64_t)v19, &demangling cache variable for type metadata for SymbolButton.Title?);
  if (!v19[2]) {
    return !v17;
  }
  BOOL result = 0;
  if (v17 && *(double *)&v19[3] == v18) {
    return 1;
  }
  return result;
}

id specialized SymbolButton.contextMenuInteraction(_:configurationForMenuAtLocation:)()
{
  uint64_t v1 = (uint64_t *)&v0[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_buildMenu];
  swift_beginAccess();
  uint64_t v2 = *v1;
  if (!*v1) {
    return 0;
  }
  uint64_t v3 = v1[1];
  uint64_t v4 = (void *)swift_allocObject();
  _OWORD v4[2] = v2;
  v4[3] = v3;
  _OWORD v4[4] = v0;
  uint64_t v5 = self;
  aBlock[4] = partial apply for closure #1 in SymbolButton.contextMenuInteraction(_:configurationForMenuAtLocation:);
  aBlock[5] = v4;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = _sSaySo13UIMenuElementCGSo0A0CSgIeggo_So7NSArrayCAFIeyBya_TR_0;
  aBlock[3] = &block_descriptor_191;
  uint64_t v6 = _Block_copy(aBlock);
  outlined copy of (@escaping @callee_guaranteed () -> ())?(v2);
  outlined copy of (@escaping @callee_guaranteed () -> ())?(v2);
  uint64_t v7 = v0;
  swift_retain();
  swift_release();
  id v8 = [v5 configurationWithIdentifier:0 previewProvider:0 actionProvider:v6];
  swift_release();
  _Block_release(v6);
  [v8 setPreferredMenuElementOrder:2];
  outlined consume of (@escaping @callee_guaranteed () -> ())?(v2);
  return v8;
}

uint64_t specialized SymbolButton.pointerInteraction(_:styleFor:)(void *a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIPointerShape?);
  __chkstk_darwin();
  uint64_t v4 = (char *)&v87 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for UIView.Corner.Radius();
  uint64_t v92 = *(void *)(v5 - 8);
  uint64_t v93 = v5;
  __chkstk_darwin();
  uint64_t v91 = (char *)&v87 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for UIView.Corner();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v100 = v7;
  uint64_t v101 = v8;
  __chkstk_darwin();
  uint64_t v89 = (char *)&v87 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (UIView.Corner?, UIView.Corner?));
  __chkstk_darwin();
  uint64_t v12 = (char *)&v87 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIView.Corner?);
  __chkstk_darwin();
  uint64_t v14 = (char *)&v87 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  char v16 = (char *)&v87 - v15;
  __chkstk_darwin();
  double v18 = (char *)&v87 - v17;
  uint64_t v102 = type metadata accessor for SymbolButton.Configuration(0);
  __chkstk_darwin();
  uint64_t v95 = (char *)&v87 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v21 = (char *)&v87 - v20;
  __chkstk_darwin();
  uint64_t v23 = (char *)&v87 - v22;
  uint64_t v24 = type metadata accessor for UIPointerEffect();
  uint64_t v98 = *(void *)(v24 - 8);
  uint64_t v99 = v24;
  __chkstk_darwin();
  uint64_t v96 = (char *)&v87 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v97 = (void **)((char *)&v87 - v26);
  id v27 = [a1 view];
  if (!v27) {
    return 0;
  }
  uint64_t v28 = v27;
  if (![v1 isUserInteractionEnabled])
  {

    return 0;
  }
  uint64_t v87 = v4;
  uint64_t v29 = (uint64_t)v1 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration;
  swift_beginAccess();
  uint64_t v94 = v29;
  outlined init with copy of SymbolButton.Configuration(v29, (uint64_t)v23, type metadata accessor for SymbolButton.Configuration);
  uint64_t v30 = (void *)*((void *)v23 + 28);
  id v90 = v1;
  id v88 = v28;
  if (v30 == (void *)1)
  {
    outlined destroy of SymbolButton.Configuration((uint64_t)v23, type metadata accessor for SymbolButton.Configuration);
  }
  else
  {
    id v32 = v30;
    outlined destroy of SymbolButton.Configuration((uint64_t)v23, type metadata accessor for SymbolButton.Configuration);
    if (v30)
    {

      goto LABEL_11;
    }
  }
  if (*(void *)(v94 + 200) == 1 && !*(void *)(v94 + *(int *)(v102 + 40))) {
    goto LABEL_21;
  }
LABEL_11:
  id v33 = [v90 traitCollection];
  id v34 = [v33 userInterfaceIdiom];

  if (v34 != (id)6)
  {
LABEL_19:
    id v43 = objc_allocWithZone((Class)UITargetedPreview);
    id v44 = [v43 initWithView:v88];
    id v45 = [v44 parameters];
    id v46 = v90;
    [v90 bounds];
    double v48 = v47;
    double v50 = v49;
    double v52 = v51;
    double v54 = v53;
    outlined init with copy of SymbolButton.Configuration(v94, (uint64_t)v21, type metadata accessor for SymbolButton.Configuration);
    uint64_t v55 = v100;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v101 + 48))(&v21[*(int *)(v102 + 36)], 1, v100))
    {
      outlined destroy of SymbolButton.Configuration((uint64_t)v21, type metadata accessor for SymbolButton.Configuration);
      static UIPointerShape.defaultCornerRadius.getter();
      double v57 = v56;
    }
    else
    {
      uint64_t v66 = v91;
      UIView.Corner.radius.getter();
      outlined destroy of SymbolButton.Configuration((uint64_t)v21, type metadata accessor for SymbolButton.Configuration);
      [v46 bounds];
      UIView.Corner.Radius.value(in:)();
      double v57 = v67;
      (*(void (**)(char *, uint64_t))(v92 + 8))(v66, v93);
    }
    uint64_t v64 = v99;
    uint64_t v65 = v96;
    id v61 = v97;
    id v68 = objc_msgSend(self, "bezierPathWithRoundedRect:cornerRadius:", v48, v50, v52, v54, v57);
    [v45 setShadowPath:v68];

    *id v61 = v44;
    id v62 = (unsigned int *)&enum case for UIPointerEffect.lift(_:);
    id v63 = v90;
    uint64_t v60 = v98;
    goto LABEL_24;
  }
  outlined init with copy of (String, Any)(v94 + *(int *)(v102 + 36), (uint64_t)v18, &demangling cache variable for type metadata for UIView.Corner?);
  static UIView.Corner.rounded.getter();
  uint64_t v35 = v100;
  uint64_t v36 = v101;
  (*(void (**)(char *, void, uint64_t, uint64_t))(v101 + 56))(v16, 0, 1, v100);
  uint64_t v37 = (uint64_t)&v12[*(int *)(v10 + 48)];
  outlined init with copy of (String, Any)((uint64_t)v18, (uint64_t)v12, &demangling cache variable for type metadata for UIView.Corner?);
  outlined init with copy of (String, Any)((uint64_t)v16, v37, &demangling cache variable for type metadata for UIView.Corner?);
  id v38 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v36 + 48);
  if (v38((uint64_t)v12, 1, v35) == 1)
  {
    outlined destroy of TaskPriority?((uint64_t)v16, &demangling cache variable for type metadata for UIView.Corner?);
    outlined destroy of TaskPriority?((uint64_t)v18, &demangling cache variable for type metadata for UIView.Corner?);
    if (v38(v37, 1, v35) == 1)
    {
      outlined destroy of TaskPriority?((uint64_t)v12, &demangling cache variable for type metadata for UIView.Corner?);
      goto LABEL_19;
    }
    goto LABEL_17;
  }
  outlined init with copy of (String, Any)((uint64_t)v12, (uint64_t)v14, &demangling cache variable for type metadata for UIView.Corner?);
  if (v38(v37, 1, v35) == 1)
  {
    outlined destroy of TaskPriority?((uint64_t)v16, &demangling cache variable for type metadata for UIView.Corner?);
    outlined destroy of TaskPriority?((uint64_t)v18, &demangling cache variable for type metadata for UIView.Corner?);
    (*(void (**)(char *, uint64_t))(v101 + 8))(v14, v35);
LABEL_17:
    outlined destroy of TaskPriority?((uint64_t)v12, &demangling cache variable for type metadata for (UIView.Corner?, UIView.Corner?));
    goto LABEL_21;
  }
  uint64_t v39 = v101;
  uint64_t v40 = v89;
  (*(void (**)(char *, uint64_t, uint64_t))(v101 + 32))(v89, v37, v35);
  lazy protocol witness table accessor for type UIView.Corner and conformance UIView.Corner((unint64_t *)&lazy protocol witness table cache variable for type UIView.Corner and conformance UIView.Corner, (void (*)(uint64_t))&type metadata accessor for UIView.Corner);
  char v41 = dispatch thunk of static Equatable.== infix(_:_:)();
  char v42 = *(void (**)(char *, uint64_t))(v39 + 8);
  v42(v40, v35);
  outlined destroy of TaskPriority?((uint64_t)v16, &demangling cache variable for type metadata for UIView.Corner?);
  outlined destroy of TaskPriority?((uint64_t)v18, &demangling cache variable for type metadata for UIView.Corner?);
  v42(v14, v35);
  outlined destroy of TaskPriority?((uint64_t)v12, &demangling cache variable for type metadata for UIView.Corner?);
  if (v41) {
    goto LABEL_19;
  }
LABEL_21:
  id v58 = objc_allocWithZone((Class)UITargetedPreview);
  id v59 = [v58 initWithView:v88];
  id v61 = v97;
  uint64_t v60 = v98;
  *uint64_t v97 = v59;
  id v62 = (unsigned int *)&enum case for UIPointerEffect.highlight(_:);
  id v63 = v90;
  uint64_t v64 = v99;
  uint64_t v55 = v100;
  uint64_t v65 = v96;
LABEL_24:
  uint64_t v69 = (uint64_t)v95;
  (*(void (**)(void *, void, uint64_t))(v60 + 104))(v61, *v62, v64);
  (*(void (**)(char *, void *, uint64_t))(v60 + 16))(v65, v61, v64);
  [v63 bounds];
  uint64_t v71 = v70;
  uint64_t v73 = v72;
  uint64_t v75 = v74;
  uint64_t v77 = v76;
  outlined init with copy of SymbolButton.Configuration(v94, v69, type metadata accessor for SymbolButton.Configuration);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v101 + 48))(v69 + *(int *)(v102 + 36), 1, v55))
  {
    outlined destroy of SymbolButton.Configuration(v69, type metadata accessor for SymbolButton.Configuration);
    static UIPointerShape.defaultCornerRadius.getter();
    uint64_t v79 = v78;
  }
  else
  {
    uint64_t v80 = v91;
    UIView.Corner.radius.getter();
    outlined destroy of SymbolButton.Configuration(v69, type metadata accessor for SymbolButton.Configuration);
    [v63 bounds];
    UIView.Corner.Radius.value(in:)();
    uint64_t v79 = v81;
    (*(void (**)(char *, uint64_t))(v92 + 8))(v80, v93);
  }
  uint64_t v82 = v87;
  type metadata accessor for UIMenu(0, &lazy cache variable for type metadata for UIPointerStyle);
  *uint64_t v82 = v71;
  v82[1] = v73;
  v82[2] = v75;
  v82[3] = v77;
  v82[4] = v79;
  uint64_t v83 = enum case for UIPointerShape.roundedRect(_:);
  uint64_t v84 = type metadata accessor for UIPointerShape();
  uint64_t v85 = *(void *)(v84 - 8);
  (*(void (**)(void *, uint64_t, uint64_t))(v85 + 104))(v82, v83, v84);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v85 + 56))(v82, 0, 1, v84);
  uint64_t v31 = UIPointerStyle.init(effect:shape:)();

  (*(void (**)(void *, uint64_t))(v60 + 8))(v61, v64);
  return v31;
}

unint64_t instantiation function for generic protocol witness table for SymbolButton.Symbol(uint64_t a1)
{
  unint64_t result = lazy protocol witness table accessor for type SymbolButton.Symbol and conformance SymbolButton.Symbol();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t lazy protocol witness table accessor for type SymbolButton.Symbol and conformance SymbolButton.Symbol()
{
  unint64_t result = lazy protocol witness table cache variable for type SymbolButton.Symbol and conformance SymbolButton.Symbol;
  if (!lazy protocol witness table cache variable for type SymbolButton.Symbol and conformance SymbolButton.Symbol)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SymbolButton.Symbol and conformance SymbolButton.Symbol);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type SymbolButton.Symbol and conformance SymbolButton.Symbol;
  if (!lazy protocol witness table cache variable for type SymbolButton.Symbol and conformance SymbolButton.Symbol)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SymbolButton.Symbol and conformance SymbolButton.Symbol);
  }
  return result;
}

unint64_t instantiation function for generic protocol witness table for SymbolButton.Title(uint64_t a1)
{
  unint64_t result = lazy protocol witness table accessor for type SymbolButton.Title and conformance SymbolButton.Title();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t lazy protocol witness table accessor for type SymbolButton.Title and conformance SymbolButton.Title()
{
  unint64_t result = lazy protocol witness table cache variable for type SymbolButton.Title and conformance SymbolButton.Title;
  if (!lazy protocol witness table cache variable for type SymbolButton.Title and conformance SymbolButton.Title)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SymbolButton.Title and conformance SymbolButton.Title);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type SymbolButton.Title and conformance SymbolButton.Title;
  if (!lazy protocol witness table cache variable for type SymbolButton.Title and conformance SymbolButton.Title)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SymbolButton.Title and conformance SymbolButton.Title);
  }
  return result;
}

unint64_t instantiation function for generic protocol witness table for SymbolButton.Background(uint64_t a1)
{
  unint64_t result = lazy protocol witness table accessor for type SymbolButton.Background and conformance SymbolButton.Background();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t lazy protocol witness table accessor for type SymbolButton.Background and conformance SymbolButton.Background()
{
  unint64_t result = lazy protocol witness table cache variable for type SymbolButton.Background and conformance SymbolButton.Background;
  if (!lazy protocol witness table cache variable for type SymbolButton.Background and conformance SymbolButton.Background)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SymbolButton.Background and conformance SymbolButton.Background);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type SymbolButton.Background and conformance SymbolButton.Background;
  if (!lazy protocol witness table cache variable for type SymbolButton.Background and conformance SymbolButton.Background)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SymbolButton.Background and conformance SymbolButton.Background);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type SymbolButton.Material.Color and conformance SymbolButton.Material.Color()
{
  unint64_t result = lazy protocol witness table cache variable for type SymbolButton.Material.Color and conformance SymbolButton.Material.Color;
  if (!lazy protocol witness table cache variable for type SymbolButton.Material.Color and conformance SymbolButton.Material.Color)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SymbolButton.Material.Color and conformance SymbolButton.Material.Color);
  }
  return result;
}

unint64_t instantiation function for generic protocol witness table for SymbolButton.CustomView(uint64_t a1)
{
  unint64_t result = lazy protocol witness table accessor for type SymbolButton.CustomView and conformance SymbolButton.CustomView();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t lazy protocol witness table accessor for type SymbolButton.CustomView and conformance SymbolButton.CustomView()
{
  unint64_t result = lazy protocol witness table cache variable for type SymbolButton.CustomView and conformance SymbolButton.CustomView;
  if (!lazy protocol witness table cache variable for type SymbolButton.CustomView and conformance SymbolButton.CustomView)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SymbolButton.CustomView and conformance SymbolButton.CustomView);
  }
  return result;
}

unint64_t instantiation function for generic protocol witness table for SymbolButton.Badge(uint64_t a1)
{
  unint64_t result = lazy protocol witness table accessor for type SymbolButton.Badge and conformance SymbolButton.Badge();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t lazy protocol witness table accessor for type SymbolButton.Badge and conformance SymbolButton.Badge()
{
  unint64_t result = lazy protocol witness table cache variable for type SymbolButton.Badge and conformance SymbolButton.Badge;
  if (!lazy protocol witness table cache variable for type SymbolButton.Badge and conformance SymbolButton.Badge)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SymbolButton.Badge and conformance SymbolButton.Badge);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type SymbolButton.Badge and conformance SymbolButton.Badge;
  if (!lazy protocol witness table cache variable for type SymbolButton.Badge and conformance SymbolButton.Badge)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SymbolButton.Badge and conformance SymbolButton.Badge);
  }
  return result;
}

uint64_t ObjC metadata update function for SymbolButton()
{
  return type metadata accessor for SymbolButton(0);
}

void type metadata completion function for SymbolButton()
{
  type metadata accessor for SymbolButton.Configuration(319);
  if (v0 <= 0x3F)
  {
    type metadata accessor for SymbolButton.Metrics?(319, &lazy cache variable for type metadata for SymbolButton.Metrics?, (void (*)(uint64_t))type metadata accessor for SymbolButton.Metrics);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t getEnumTagSinglePayload for SymbolButton.Animation(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for SymbolButton.Animation(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 24) = v3;
  return result;
}

ValueMetadata *type metadata accessor for SymbolButton.Animation()
{
  return &type metadata for SymbolButton.Animation;
}

void *destroy for SymbolButton.Update(void *result)
{
  unint64_t v1 = result;
  if (*result) {
    unint64_t result = (void *)swift_release();
  }
  if (v1[4])
  {
    return (void *)swift_release();
  }
  return result;
}

uint64_t initializeWithCopy for SymbolButton.Update(uint64_t a1, uint64_t a2)
{
  if (*(void *)a2)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v4;
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  uint64_t v5 = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  if (v5)
  {
    uint64_t v6 = *(void *)(a2 + 40);
    *(void *)(a1 + 32) = v5;
    *(void *)(a1 + 40) = v6;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  }
  return a1;
}

void *assignWithCopy for SymbolButton.Update(void *a1, void *a2)
{
  uint64_t v4 = *a2;
  if (*a1)
  {
    if (v4)
    {
      uint64_t v5 = a2[1];
      *a1 = v4;
      a1[1] = v5;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v4)
  {
    uint64_t v6 = a2[1];
    *a1 = v4;
    a1[1] = v6;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_8:
  uint64_t v7 = a1[4];
  a1[2] = a2[2];
  a1[3] = a2[3];
  uint64_t v8 = a2[4];
  if (!v7)
  {
    if (v8)
    {
      uint64_t v10 = a2[5];
      a1[4] = v8;
      a1[5] = v10;
      swift_retain();
      return a1;
    }
LABEL_14:
    *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
    return a1;
  }
  if (!v8)
  {
    swift_release();
    goto LABEL_14;
  }
  uint64_t v9 = a2[5];
  a1[4] = v8;
  a1[5] = v9;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for SymbolButton.Update(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  if (*(void *)a1)
  {
    if (v4)
    {
      uint64_t v5 = a2[1];
      *(void *)a1 = v4;
      *(void *)(a1 + 8) = v5;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v4)
  {
    uint64_t v6 = a2[1];
    *(void *)a1 = v4;
    *(void *)(a1 + 8) = v6;
    goto LABEL_8;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_8:
  uint64_t v7 = a2[4];
  uint64_t v8 = *(void *)(a1 + 32);
  *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
  if (!v8)
  {
    if (v7)
    {
      uint64_t v10 = a2[5];
      *(void *)(a1 + 32) = v7;
      *(void *)(a1 + 40) = v10;
      return a1;
    }
LABEL_14:
    *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
    return a1;
  }
  if (!v7)
  {
    swift_release();
    goto LABEL_14;
  }
  uint64_t v9 = a2[5];
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v9;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for SymbolButton.Update()
{
  return &type metadata for SymbolButton.Update;
}

ValueMetadata *type metadata accessor for SymbolButton.Update.AnimationOptions()
{
  return &type metadata for SymbolButton.Update.AnimationOptions;
}

uint64_t initializeBufferWithCopyOfBuffer for SymbolButton.Configuration(uint64_t a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v22 = *a2;
    *(void *)a1 = *a2;
    a1 = v22 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v6;
    uint64_t v7 = (void *)a2[2];
    uint64_t v8 = (void *)a2[3];
    *(void *)(a1 + 16) = v7;
    *(void *)(a1 + 24) = v8;
    *(void *)(a1 + 32) = a2[4];
    *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
    *(unsigned char *)(a1 + 80) = *((unsigned char *)a2 + 80);
    long long v9 = *((_OWORD *)a2 + 4);
    *(_OWORD *)(a1 + 48) = *((_OWORD *)a2 + 3);
    *(_OWORD *)(a1 + 64) = v9;
    uint64_t v10 = a2[12];
    *(void *)(a1 + 88) = a2[11];
    *(void *)(a1 + 96) = v10;
    uint64_t v11 = (void *)a2[14];
    *(void *)(a1 + 104) = a2[13];
    *(void *)(a1 + 112) = v11;
    uint64_t v12 = a2[16];
    *(void *)(a1 + 120) = a2[15];
    *(void *)(a1 + 128) = v12;
    uint64_t v13 = (void *)a2[17];
    *(void *)(a1 + 136) = v13;
    *(_OWORD *)(a1 + 144) = *((_OWORD *)a2 + 9);
    uint64_t v14 = a2[21];
    *(void *)(a1 + 160) = a2[20];
    *(void *)(a1 + 168) = v14;
    uint64_t v15 = (void *)a2[22];
    *(void *)(a1 + 176) = v15;
    *(unsigned char *)(a1 + 184) = *((unsigned char *)a2 + 184);
    uint64_t v77 = (void *)a2[25];
    swift_bridgeObjectRetain();
    id v16 = v7;
    id v17 = v8;
    swift_bridgeObjectRetain();
    id v18 = v11;
    swift_bridgeObjectRetain();
    id v19 = v13;
    swift_bridgeObjectRetain();
    id v20 = v15;
    if (v77 == (void *)1)
    {
      long long v21 = *((_OWORD *)a2 + 13);
      *(_OWORD *)(a1 + 192) = *((_OWORD *)a2 + 12);
      *(_OWORD *)(a1 + 208) = v21;
    }
    else
    {
      *(void *)(a1 + 192) = a2[24];
      *(void *)(a1 + 200) = v77;
      uint64_t v23 = a2[27];
      *(void *)(a1 + 208) = a2[26];
      *(void *)(a1 + 216) = v23;
      id v24 = v77;
      swift_bridgeObjectRetain();
    }
    uint64_t v25 = (void *)a2[28];
    if (v25 == (void *)1)
    {
      long long v26 = *((_OWORD *)a2 + 15);
      *(_OWORD *)(a1 + 224) = *((_OWORD *)a2 + 14);
      *(_OWORD *)(a1 + 240) = v26;
      *(_OWORD *)(a1 + 256) = *((_OWORD *)a2 + 16);
    }
    else
    {
      id v27 = (void *)a2[29];
      uint64_t v28 = (void *)a2[30];
      *(void *)(a1 + 224) = v25;
      *(void *)(a1 + 232) = v27;
      *(void *)(a1 + 240) = v28;
      *(unsigned char *)(a1 + 248) = *((unsigned char *)a2 + 248);
      uint64_t v29 = a2[33];
      *(void *)(a1 + 256) = a2[32];
      *(void *)(a1 + 264) = v29;
      id v30 = v25;
      id v31 = v27;
      id v32 = v28;
      swift_bridgeObjectRetain();
    }
    *(void *)(a1 + 272) = a2[34];
    *(unsigned char *)(a1 + 280) = *((unsigned char *)a2 + 280);
    id v33 = (void *)a2[36];
    *(void *)(a1 + 288) = v33;
    uint64_t v34 = a3[9];
    uint64_t v35 = (void *)(a1 + v34);
    uint64_t v36 = (char *)a2 + v34;
    uint64_t v37 = type metadata accessor for UIView.Corner();
    uint64_t v38 = *(void *)(v37 - 8);
    uint64_t v39 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v38 + 48);
    id v40 = v33;
    if (v39(v36, 1, v37))
    {
      uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIView.Corner?);
      memcpy(v35, v36, *(void *)(*(void *)(v41 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v38 + 16))(v35, v36, v37);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
    }
    uint64_t v42 = a3[10];
    uint64_t v43 = a1 + v42;
    uint64_t v44 = (uint64_t)a2 + v42;
    id v45 = *(void **)v44;
    if (*(void *)v44)
    {
      *(void *)uint64_t v43 = v45;
      *(_OWORD *)(v43 + 8) = *(_OWORD *)(v44 + 8);
      *(_OWORD *)(v43 + 24) = *(_OWORD *)(v44 + 24);
      id v46 = *(void **)(v44 + 48);
      *(void *)(v43 + 40) = *(void *)(v44 + 40);
      *(void *)(v43 + 48) = v46;
      id v47 = v45;
      id v48 = v46;
    }
    else
    {
      long long v49 = *(_OWORD *)(v44 + 16);
      *(_OWORD *)uint64_t v43 = *(_OWORD *)v44;
      *(_OWORD *)(v43 + 16) = v49;
      *(_OWORD *)(v43 + 32) = *(_OWORD *)(v44 + 32);
      *(void *)(v43 + 48) = *(void *)(v44 + 48);
    }
    uint64_t v50 = a3[11];
    uint64_t v51 = a1 + v50;
    uint64_t v52 = (uint64_t)a2 + v50;
    double v53 = *(void **)(v52 + 16);
    *(_OWORD *)uint64_t v51 = *(_OWORD *)v52;
    if (v53 == (void *)1)
    {
      *(void *)(v51 + 16) = *(void *)(v52 + 16);
    }
    else
    {
      *(void *)(v51 + 16) = v53;
      id v54 = v53;
    }
    uint64_t v55 = a3[13];
    *(void *)(a1 + a3[12]) = *(uint64_t *)((char *)a2 + a3[12]);
    *(_OWORD *)(a1 + v55) = *(_OWORD *)((char *)a2 + v55);
    uint64_t v56 = a3[14];
    uint64_t v57 = a3[15];
    uint64_t v58 = a1 + v56;
    uint64_t v59 = (uint64_t)a2 + v56;
    *(_OWORD *)uint64_t v58 = *(_OWORD *)v59;
    *(unsigned char *)(v58 + 16) = *(unsigned char *)(v59 + 16);
    uint64_t v60 = (_OWORD *)(a1 + v57);
    id v61 = (_OWORD *)((char *)a2 + v57);
    long long v62 = v61[1];
    *uint64_t v60 = *v61;
    v60[1] = v62;
    uint64_t v63 = a3[16];
    uint64_t v64 = a3[17];
    uint64_t v65 = a1 + v63;
    uint64_t v66 = (uint64_t)a2 + v63;
    *(unsigned char *)uint64_t v65 = *(unsigned char *)v66;
    *(unsigned char *)(v65 + 24) = *(unsigned char *)(v66 + 24);
    double v67 = *(void **)(v66 + 8);
    id v68 = *(void **)(v66 + 16);
    *(void *)(v65 + 8) = v67;
    *(void *)(v65 + 16) = v68;
    *(void *)(a1 + v64) = *(uint64_t *)((char *)a2 + v64);
    uint64_t v69 = a3[18];
    uint64_t v70 = a3[19];
    uint64_t v71 = *(void **)((char *)a2 + v69);
    *(void *)(a1 + v69) = v71;
    *(unsigned char *)(a1 + v70) = *((unsigned char *)a2 + v70);
    id v72 = v67;
    id v73 = v68;
    id v74 = v71;
  }
  return a1;
}

void destroy for SymbolButton.Configuration(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(a1 + 200);
  if (v4 != (void *)1)
  {

    swift_bridgeObjectRelease();
  }
  int v5 = *(void **)(a1 + 224);
  if (v5 != (void *)1)
  {

    swift_bridgeObjectRelease();
  }

  uint64_t v6 = a1 + a2[9];
  uint64_t v7 = type metadata accessor for UIView.Corner();
  uint64_t v8 = *(void *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  long long v9 = (id *)(a1 + a2[10]);
  if (*v9)
  {
  }
  uint64_t v10 = *(void **)(a1 + a2[11] + 16);
  if (v10 != (void *)1) {

  }
  uint64_t v11 = a1 + a2[16];
  uint64_t v12 = *(void **)(a1 + a2[18]);
}

uint64_t initializeWithCopy for SymbolButton.Configuration(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  uint64_t v6 = *(void **)(a2 + 16);
  uint64_t v7 = *(void **)(a2 + 24);
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  long long v8 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v8;
  uint64_t v9 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v9;
  uint64_t v10 = *(void **)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v10;
  uint64_t v11 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v11;
  uint64_t v12 = *(void **)(a2 + 136);
  *(void *)(a1 + 136) = v12;
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  uint64_t v13 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v13;
  uint64_t v14 = *(void **)(a2 + 176);
  *(void *)(a1 + 176) = v14;
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  uint64_t v75 = *(void **)(a2 + 200);
  swift_bridgeObjectRetain();
  id v15 = v6;
  id v16 = v7;
  swift_bridgeObjectRetain();
  id v17 = v10;
  swift_bridgeObjectRetain();
  id v18 = v12;
  swift_bridgeObjectRetain();
  id v19 = v14;
  if (v75 == (void *)1)
  {
    long long v20 = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 208) = v20;
  }
  else
  {
    *(void *)(a1 + 192) = *(void *)(a2 + 192);
    *(void *)(a1 + 200) = v75;
    uint64_t v21 = *(void *)(a2 + 216);
    *(void *)(a1 + 208) = *(void *)(a2 + 208);
    *(void *)(a1 + 216) = v21;
    id v22 = v75;
    swift_bridgeObjectRetain();
  }
  uint64_t v23 = *(void **)(a2 + 224);
  if (v23 == (void *)1)
  {
    long long v24 = *(_OWORD *)(a2 + 240);
    *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
    *(_OWORD *)(a1 + 240) = v24;
    *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
  }
  else
  {
    uint64_t v25 = *(void **)(a2 + 232);
    long long v26 = *(void **)(a2 + 240);
    *(void *)(a1 + 224) = v23;
    *(void *)(a1 + 232) = v25;
    *(void *)(a1 + 240) = v26;
    *(unsigned char *)(a1 + 248) = *(unsigned char *)(a2 + 248);
    uint64_t v27 = *(void *)(a2 + 264);
    *(void *)(a1 + 256) = *(void *)(a2 + 256);
    *(void *)(a1 + 264) = v27;
    id v28 = v23;
    id v29 = v25;
    id v30 = v26;
    swift_bridgeObjectRetain();
  }
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(unsigned char *)(a1 + 280) = *(unsigned char *)(a2 + 280);
  id v31 = *(void **)(a2 + 288);
  *(void *)(a1 + 288) = v31;
  uint64_t v32 = a3[9];
  id v33 = (void *)(a1 + v32);
  uint64_t v34 = (const void *)(a2 + v32);
  uint64_t v35 = type metadata accessor for UIView.Corner();
  uint64_t v36 = *(void *)(v35 - 8);
  uint64_t v37 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v36 + 48);
  id v38 = v31;
  if (v37(v34, 1, v35))
  {
    uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIView.Corner?);
    memcpy(v33, v34, *(void *)(*(void *)(v39 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v36 + 16))(v33, v34, v35);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
  }
  uint64_t v40 = a3[10];
  uint64_t v41 = a1 + v40;
  uint64_t v42 = a2 + v40;
  uint64_t v43 = *(void **)v42;
  if (*(void *)v42)
  {
    *(void *)uint64_t v41 = v43;
    *(_OWORD *)(v41 + 8) = *(_OWORD *)(v42 + 8);
    *(_OWORD *)(v41 + 24) = *(_OWORD *)(v42 + 24);
    uint64_t v44 = *(void **)(v42 + 48);
    *(void *)(v41 + 40) = *(void *)(v42 + 40);
    *(void *)(v41 + 48) = v44;
    id v45 = v43;
    id v46 = v44;
  }
  else
  {
    long long v47 = *(_OWORD *)(v42 + 16);
    *(_OWORD *)uint64_t v41 = *(_OWORD *)v42;
    *(_OWORD *)(v41 + 16) = v47;
    *(_OWORD *)(v41 + 32) = *(_OWORD *)(v42 + 32);
    *(void *)(v41 + 48) = *(void *)(v42 + 48);
  }
  uint64_t v48 = a3[11];
  uint64_t v49 = a1 + v48;
  uint64_t v50 = a2 + v48;
  uint64_t v51 = *(void **)(v50 + 16);
  *(_OWORD *)uint64_t v49 = *(_OWORD *)v50;
  if (v51 == (void *)1)
  {
    *(void *)(v49 + 16) = *(void *)(v50 + 16);
  }
  else
  {
    *(void *)(v49 + 16) = v51;
    id v52 = v51;
  }
  uint64_t v53 = a3[13];
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  *(_OWORD *)(a1 + v53) = *(_OWORD *)(a2 + v53);
  uint64_t v54 = a3[14];
  uint64_t v55 = a3[15];
  uint64_t v56 = a1 + v54;
  uint64_t v57 = a2 + v54;
  *(_OWORD *)uint64_t v56 = *(_OWORD *)v57;
  *(unsigned char *)(v56 + 16) = *(unsigned char *)(v57 + 16);
  uint64_t v58 = (_OWORD *)(a1 + v55);
  uint64_t v59 = (_OWORD *)(a2 + v55);
  long long v60 = v59[1];
  *uint64_t v58 = *v59;
  v58[1] = v60;
  uint64_t v61 = a3[16];
  uint64_t v62 = a3[17];
  uint64_t v63 = a1 + v61;
  uint64_t v64 = a2 + v61;
  *(unsigned char *)uint64_t v63 = *(unsigned char *)v64;
  *(unsigned char *)(v63 + 24) = *(unsigned char *)(v64 + 24);
  uint64_t v65 = *(void **)(v64 + 8);
  uint64_t v66 = *(void **)(v64 + 16);
  *(void *)(v63 + 8) = v65;
  *(void *)(v63 + 16) = v66;
  *(void *)(a1 + v62) = *(void *)(a2 + v62);
  uint64_t v67 = a3[18];
  uint64_t v68 = a3[19];
  uint64_t v69 = *(void **)(a2 + v67);
  *(void *)(a1 + v67) = v69;
  *(unsigned char *)(a1 + v68) = *(unsigned char *)(a2 + v68);
  id v70 = v65;
  id v71 = v66;
  id v72 = v69;
  return a1;
}

uint64_t assignWithCopy for SymbolButton.Configuration(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void **)(a1 + 16);
  uint64_t v7 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v7;
  id v8 = v7;

  uint64_t v9 = *(void **)(a2 + 24);
  uint64_t v10 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = v9;
  id v11 = v9;

  uint64_t v12 = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = v12;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  long long v13 = *(_OWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = v13;
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  uint64_t v14 = *(void **)(a1 + 112);
  id v15 = *(void **)(a2 + 112);
  *(void *)(a1 + 112) = v15;
  id v16 = v15;

  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id v17 = *(void **)(a2 + 136);
  id v18 = *(void **)(a1 + 136);
  *(void *)(a1 + 136) = v17;
  id v19 = v17;

  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  long long v20 = *(void **)(a1 + 176);
  uint64_t v21 = *(void **)(a2 + 176);
  *(void *)(a1 + 176) = v21;
  id v22 = v21;

  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  uint64_t v23 = (_OWORD *)(a1 + 192);
  long long v24 = (_OWORD *)(a2 + 192);
  uint64_t v25 = *(void **)(a1 + 200);
  uint64_t v26 = *(void *)(a2 + 200);
  if (v25 == (void *)1)
  {
    if (v26 == 1)
    {
      long long v27 = *(_OWORD *)(a2 + 208);
      *uint64_t v23 = *v24;
      *(_OWORD *)(a1 + 208) = v27;
    }
    else
    {
      *(void *)(a1 + 192) = *(void *)(a2 + 192);
      id v29 = *(void **)(a2 + 200);
      *(void *)(a1 + 200) = v29;
      *(void *)(a1 + 208) = *(void *)(a2 + 208);
      *(void *)(a1 + 216) = *(void *)(a2 + 216);
      id v30 = v29;
      swift_bridgeObjectRetain();
    }
  }
  else if (v26 == 1)
  {
    outlined destroy of SymbolButton.Background(a1 + 192);
    long long v28 = *(_OWORD *)(a2 + 208);
    *uint64_t v23 = *v24;
    *(_OWORD *)(a1 + 208) = v28;
  }
  else
  {
    *(void *)(a1 + 192) = *(void *)(a2 + 192);
    id v31 = *(void **)(a2 + 200);
    *(void *)(a1 + 200) = v31;
    id v32 = v31;

    *(void *)(a1 + 208) = *(void *)(a2 + 208);
    *(void *)(a1 + 216) = *(void *)(a2 + 216);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  id v33 = (long long *)(a1 + 224);
  uint64_t v34 = *(void **)(a1 + 224);
  uint64_t v36 = (long long *)(a2 + 224);
  uint64_t v35 = *(void **)(a2 + 224);
  if (v34 == (void *)1)
  {
    if (v35 == (void *)1)
    {
      long long v37 = *v36;
      long long v38 = *(_OWORD *)(a2 + 256);
      *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
      *(_OWORD *)(a1 + 256) = v38;
      *id v33 = v37;
    }
    else
    {
      *(void *)(a1 + 224) = v35;
      uint64_t v41 = *(void **)(a2 + 232);
      *(void *)(a1 + 232) = v41;
      uint64_t v42 = *(void **)(a2 + 240);
      *(void *)(a1 + 240) = v42;
      *(unsigned char *)(a1 + 248) = *(unsigned char *)(a2 + 248);
      *(void *)(a1 + 256) = *(void *)(a2 + 256);
      *(void *)(a1 + 264) = *(void *)(a2 + 264);
      id v43 = v35;
      id v44 = v41;
      id v45 = v42;
      swift_bridgeObjectRetain();
    }
  }
  else if (v35 == (void *)1)
  {
    outlined destroy of SymbolButton.Material((id *)(a1 + 224));
    long long v40 = *(_OWORD *)(a2 + 240);
    long long v39 = *(_OWORD *)(a2 + 256);
    *id v33 = *v36;
    *(_OWORD *)(a1 + 240) = v40;
    *(_OWORD *)(a1 + 256) = v39;
  }
  else
  {
    *(void *)(a1 + 224) = v35;
    id v46 = v35;

    long long v47 = *(void **)(a1 + 232);
    uint64_t v48 = *(void **)(a2 + 232);
    *(void *)(a1 + 232) = v48;
    id v49 = v48;

    uint64_t v50 = *(void **)(a1 + 240);
    uint64_t v51 = *(void **)(a2 + 240);
    *(void *)(a1 + 240) = v51;
    id v52 = v51;

    *(unsigned char *)(a1 + 248) = *(unsigned char *)(a2 + 248);
    *(void *)(a1 + 256) = *(void *)(a2 + 256);
    *(void *)(a1 + 264) = *(void *)(a2 + 264);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  uint64_t v53 = *(void *)(a2 + 272);
  *(unsigned char *)(a1 + 280) = *(unsigned char *)(a2 + 280);
  *(void *)(a1 + 272) = v53;
  uint64_t v54 = *(void **)(a2 + 288);
  uint64_t v55 = *(void **)(a1 + 288);
  *(void *)(a1 + 288) = v54;
  id v56 = v54;

  uint64_t v57 = a3[9];
  uint64_t v58 = (void *)(a1 + v57);
  uint64_t v59 = (void *)(a2 + v57);
  uint64_t v60 = type metadata accessor for UIView.Corner();
  uint64_t v61 = *(void *)(v60 - 8);
  uint64_t v62 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v61 + 48);
  int v63 = v62(v58, 1, v60);
  int v64 = v62(v59, 1, v60);
  if (v63)
  {
    if (!v64)
    {
      (*(void (**)(void *, void *, uint64_t))(v61 + 16))(v58, v59, v60);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v61 + 56))(v58, 0, 1, v60);
      goto LABEL_21;
    }
    goto LABEL_20;
  }
  if (v64)
  {
    (*(void (**)(void *, uint64_t))(v61 + 8))(v58, v60);
LABEL_20:
    uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIView.Corner?);
    memcpy(v58, v59, *(void *)(*(void *)(v65 - 8) + 64));
    goto LABEL_21;
  }
  (*(void (**)(void *, void *, uint64_t))(v61 + 24))(v58, v59, v60);
LABEL_21:
  uint64_t v66 = a3[10];
  uint64_t v67 = a1 + v66;
  uint64_t v68 = (long long *)(a2 + v66);
  uint64_t v69 = *(void **)(a1 + v66);
  id v70 = *(void **)(a2 + v66);
  if (v69)
  {
    if (v70)
    {
      *(void *)uint64_t v67 = v70;
      id v71 = v70;

      *(void *)(v67 + 8) = *((void *)v68 + 1);
      *(void *)(v67 + 16) = *((void *)v68 + 2);
      *(void *)(v67 + 24) = *((void *)v68 + 3);
      *(void *)(v67 + 32) = *((void *)v68 + 4);
      *(void *)(v67 + 40) = *((void *)v68 + 5);
      id v72 = *(void **)(v67 + 48);
      id v73 = (void *)*((void *)v68 + 6);
      *(void *)(v67 + 48) = v73;
      id v74 = v73;
    }
    else
    {
      outlined destroy of SymbolButton.CustomView((id *)v67);
      long long v80 = v68[1];
      long long v79 = v68[2];
      long long v81 = *v68;
      *(void *)(v67 + 48) = *((void *)v68 + 6);
      *(_OWORD *)(v67 + 16) = v80;
      *(_OWORD *)(v67 + 32) = v79;
      *(_OWORD *)uint64_t v67 = v81;
    }
  }
  else if (v70)
  {
    *(void *)uint64_t v67 = v70;
    long long v75 = *(long long *)((char *)v68 + 8);
    *(_OWORD *)(v67 + 24) = *(long long *)((char *)v68 + 24);
    *(_OWORD *)(v67 + 8) = v75;
    *(void *)(v67 + 40) = *((void *)v68 + 5);
    uint64_t v76 = (void *)*((void *)v68 + 6);
    *(void *)(v67 + 48) = v76;
    id v77 = v70;
    id v78 = v76;
  }
  else
  {
    long long v82 = *v68;
    long long v83 = v68[1];
    long long v84 = v68[2];
    *(void *)(v67 + 48) = *((void *)v68 + 6);
    *(_OWORD *)(v67 + 16) = v83;
    *(_OWORD *)(v67 + 32) = v84;
    *(_OWORD *)uint64_t v67 = v82;
  }
  uint64_t v85 = a3[11];
  uint64_t v86 = a1 + v85;
  uint64_t v87 = (long long *)(a2 + v85);
  id v88 = *(void **)(a1 + v85 + 16);
  uint64_t v89 = *(void *)(a2 + v85 + 16);
  if (v88 == (void *)1)
  {
    if (v89 == 1)
    {
      long long v90 = *v87;
      *(void *)(v86 + 16) = *((void *)v87 + 2);
      *(_OWORD *)uint64_t v86 = v90;
    }
    else
    {
      *(void *)uint64_t v86 = *(void *)v87;
      *(void *)(v86 + 8) = *((void *)v87 + 1);
      uint64_t v92 = (void *)*((void *)v87 + 2);
      *(void *)(v86 + 16) = v92;
      id v93 = v92;
    }
  }
  else if (v89 == 1)
  {
    outlined destroy of SymbolButton.Badge(v86);
    uint64_t v91 = *((void *)v87 + 2);
    *(_OWORD *)uint64_t v86 = *v87;
    *(void *)(v86 + 16) = v91;
  }
  else
  {
    *(void *)uint64_t v86 = *(void *)v87;
    *(void *)(v86 + 8) = *((void *)v87 + 1);
    uint64_t v94 = (void *)*((void *)v87 + 2);
    *(void *)(v86 + 16) = v94;
    id v95 = v94;
  }
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  uint64_t v96 = a3[13];
  uint64_t v97 = (void *)(a1 + v96);
  uint64_t v98 = (void *)(a2 + v96);
  *uint64_t v97 = *v98;
  v97[1] = v98[1];
  uint64_t v99 = a3[14];
  uint64_t v100 = a1 + v99;
  uint64_t v101 = (long long *)(a2 + v99);
  long long v102 = *v101;
  *(unsigned char *)(v100 + 16) = *((unsigned char *)v101 + 16);
  *(_OWORD *)uint64_t v100 = v102;
  uint64_t v103 = a3[15];
  uint64_t v104 = (void *)(a1 + v103);
  uint64_t v105 = (void *)(a2 + v103);
  *uint64_t v104 = *v105;
  v104[1] = v105[1];
  v104[2] = v105[2];
  v104[3] = v105[3];
  uint64_t v106 = a3[16];
  uint64_t v107 = a1 + v106;
  uint64_t v108 = a2 + v106;
  *(unsigned char *)uint64_t v107 = *(unsigned char *)(a2 + v106);
  double v109 = *(void **)(a1 + v106 + 8);
  uint64_t v110 = *(void **)(a2 + v106 + 8);
  *(void *)(v107 + 8) = v110;
  id v111 = v110;

  double v112 = *(void **)(v107 + 16);
  id v113 = *(void **)(v108 + 16);
  *(void *)(v107 + 16) = v113;
  id v114 = v113;

  *(unsigned char *)(v107 + 24) = *(unsigned char *)(v108 + 24);
  *(void *)(a1 + a3[17]) = *(void *)(a2 + a3[17]);
  uint64_t v115 = a3[18];
  uint64_t v116 = *(void **)(a1 + v115);
  double v117 = *(void **)(a2 + v115);
  *(void *)(a1 + v115) = v117;
  id v118 = v117;

  *(unsigned char *)(a1 + a3[19]) = *(unsigned char *)(a2 + a3[19]);
  return a1;
}

uint64_t outlined destroy of SymbolButton.Background(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

id *outlined destroy of SymbolButton.Material(id *a1)
{
  return a1;
}

id *outlined destroy of SymbolButton.CustomView(id *a1)
{
  return a1;
}

uint64_t outlined destroy of SymbolButton.Badge(uint64_t a1)
{
  return a1;
}

uint64_t initializeWithTake for SymbolButton.Configuration(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  long long v7 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v7;
  long long v8 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v8;
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  long long v9 = *(_OWORD *)(a2 + 136);
  long long v10 = *(_OWORD *)(a2 + 152);
  long long v11 = *(_OWORD *)(a2 + 168);
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  *(_OWORD *)(a1 + 168) = v11;
  *(_OWORD *)(a1 + 152) = v10;
  *(_OWORD *)(a1 + 136) = v9;
  long long v12 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v12;
  long long v13 = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 240) = v13;
  long long v14 = *(_OWORD *)(a2 + 256);
  long long v15 = *(_OWORD *)(a2 + 272);
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  uint64_t v16 = a3[9];
  id v17 = (void *)(a1 + v16);
  id v18 = (const void *)(a2 + v16);
  *(_OWORD *)(a1 + 256) = v14;
  *(_OWORD *)(a1 + 272) = v15;
  uint64_t v19 = type metadata accessor for UIView.Corner();
  uint64_t v20 = *(void *)(v19 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
  {
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIView.Corner?);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v20 + 32))(v17, v18, v19);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  }
  uint64_t v22 = a3[10];
  uint64_t v23 = a3[11];
  uint64_t v24 = a1 + v22;
  uint64_t v25 = a2 + v22;
  long long v26 = *(_OWORD *)(v25 + 16);
  *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
  *(_OWORD *)(v24 + 16) = v26;
  *(_OWORD *)(v24 + 32) = *(_OWORD *)(v25 + 32);
  *(void *)(v24 + 48) = *(void *)(v25 + 48);
  uint64_t v27 = a1 + v23;
  uint64_t v28 = a2 + v23;
  *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
  *(void *)(v27 + 16) = *(void *)(v28 + 16);
  uint64_t v29 = a3[13];
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  *(_OWORD *)(a1 + v29) = *(_OWORD *)(a2 + v29);
  uint64_t v30 = a3[14];
  uint64_t v31 = a3[15];
  uint64_t v32 = a1 + v30;
  uint64_t v33 = a2 + v30;
  *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
  *(unsigned char *)(v32 + 16) = *(unsigned char *)(v33 + 16);
  uint64_t v34 = (_OWORD *)(a1 + v31);
  uint64_t v35 = (_OWORD *)(a2 + v31);
  long long v36 = v35[1];
  *uint64_t v34 = *v35;
  v34[1] = v36;
  uint64_t v37 = a3[16];
  uint64_t v38 = a3[17];
  long long v39 = (_OWORD *)(a1 + v37);
  long long v40 = (_OWORD *)(a2 + v37);
  *long long v39 = *v40;
  *(_OWORD *)((char *)v39 + 9) = *(_OWORD *)((char *)v40 + 9);
  *(void *)(a1 + v38) = *(void *)(a2 + v38);
  uint64_t v41 = a3[19];
  *(void *)(a1 + a3[18]) = *(void *)(a2 + a3[18]);
  *(unsigned char *)(a1 + v41) = *(unsigned char *)(a2 + v41);
  return a1;
}

uint64_t assignWithTake for SymbolButton.Configuration(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  long long v7 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);

  long long v8 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);

  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  long long v9 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v9;
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v10 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v10;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  long long v11 = *(void **)(a1 + 112);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);

  uint64_t v12 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v12;
  swift_bridgeObjectRelease();
  long long v13 = *(void **)(a1 + 136);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);

  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  uint64_t v14 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v14;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  long long v15 = *(void **)(a1 + 176);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);

  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  uint64_t v16 = *(void **)(a1 + 200);
  if (v16 == (void *)1) {
    goto LABEL_4;
  }
  uint64_t v17 = *(void *)(a2 + 200);
  if (v17 == 1)
  {
    outlined destroy of SymbolButton.Background(a1 + 192);
LABEL_4:
    long long v18 = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 208) = v18;
    goto LABEL_6;
  }
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = v17;

  uint64_t v19 = *(void *)(a2 + 216);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(void *)(a1 + 216) = v19;
  swift_bridgeObjectRelease();
LABEL_6:
  uint64_t v20 = *(void **)(a1 + 224);
  uint64_t v21 = *(void *)(a2 + 224);
  if (v20 == (void *)1)
  {
LABEL_9:
    long long v22 = *(_OWORD *)(a2 + 240);
    *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
    *(_OWORD *)(a1 + 240) = v22;
    *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
    goto LABEL_11;
  }
  if (v21 == 1)
  {
    outlined destroy of SymbolButton.Material((id *)(a1 + 224));
    goto LABEL_9;
  }
  *(void *)(a1 + 224) = v21;

  uint64_t v23 = *(void **)(a1 + 232);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);

  uint64_t v24 = *(void **)(a1 + 240);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);

  *(unsigned char *)(a1 + 248) = *(unsigned char *)(a2 + 248);
  uint64_t v25 = *(void *)(a2 + 264);
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  *(void *)(a1 + 264) = v25;
  swift_bridgeObjectRelease();
LABEL_11:
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(unsigned char *)(a1 + 280) = *(unsigned char *)(a2 + 280);
  long long v26 = *(void **)(a1 + 288);
  *(void *)(a1 + 288) = *(void *)(a2 + 288);

  uint64_t v27 = a3[9];
  uint64_t v28 = (void *)(a1 + v27);
  uint64_t v29 = (void *)(a2 + v27);
  uint64_t v30 = type metadata accessor for UIView.Corner();
  uint64_t v31 = *(void *)(v30 - 8);
  uint64_t v32 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v31 + 48);
  int v33 = v32(v28, 1, v30);
  int v34 = v32(v29, 1, v30);
  if (v33)
  {
    if (!v34)
    {
      (*(void (**)(void *, void *, uint64_t))(v31 + 32))(v28, v29, v30);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
      goto LABEL_17;
    }
    goto LABEL_16;
  }
  if (v34)
  {
    (*(void (**)(void *, uint64_t))(v31 + 8))(v28, v30);
LABEL_16:
    uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIView.Corner?);
    memcpy(v28, v29, *(void *)(*(void *)(v35 - 8) + 64));
    goto LABEL_17;
  }
  (*(void (**)(void *, void *, uint64_t))(v31 + 40))(v28, v29, v30);
LABEL_17:
  uint64_t v36 = a3[10];
  uint64_t v37 = a1 + v36;
  uint64_t v38 = a2 + v36;
  long long v39 = *(void **)(a1 + v36);
  if (v39)
  {
    if (*(void *)v38)
    {
      *(void *)uint64_t v37 = *(void *)v38;

      *(_OWORD *)(v37 + 8) = *(_OWORD *)(v38 + 8);
      *(_OWORD *)(v37 + 24) = *(_OWORD *)(v38 + 24);
      *(void *)(v37 + 40) = *(void *)(v38 + 40);
      long long v40 = *(void **)(v37 + 48);
      *(void *)(v37 + 48) = *(void *)(v38 + 48);

      goto LABEL_22;
    }
    outlined destroy of SymbolButton.CustomView((id *)v37);
  }
  long long v41 = *(_OWORD *)(v38 + 16);
  *(_OWORD *)uint64_t v37 = *(_OWORD *)v38;
  *(_OWORD *)(v37 + 16) = v41;
  *(_OWORD *)(v37 + 32) = *(_OWORD *)(v38 + 32);
  *(void *)(v37 + 48) = *(void *)(v38 + 48);
LABEL_22:
  uint64_t v42 = a3[11];
  uint64_t v43 = a1 + v42;
  uint64_t v44 = a2 + v42;
  id v45 = *(void **)(a1 + v42 + 16);
  if (v45 != (void *)1)
  {
    uint64_t v46 = *(void *)(v44 + 16);
    if (v46 != 1)
    {
      *(_OWORD *)uint64_t v43 = *(_OWORD *)v44;
      *(void *)(v43 + 16) = v46;

      goto LABEL_27;
    }
    outlined destroy of SymbolButton.Badge(v43);
  }
  *(_OWORD *)uint64_t v43 = *(_OWORD *)v44;
  *(void *)(v43 + 16) = *(void *)(v44 + 16);
LABEL_27:
  uint64_t v47 = a3[13];
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  *(_OWORD *)(a1 + v47) = *(_OWORD *)(a2 + v47);
  uint64_t v48 = a3[14];
  uint64_t v49 = a3[15];
  uint64_t v50 = a1 + v48;
  uint64_t v51 = a2 + v48;
  *(_OWORD *)uint64_t v50 = *(_OWORD *)v51;
  *(unsigned char *)(v50 + 16) = *(unsigned char *)(v51 + 16);
  id v52 = (_OWORD *)(a1 + v49);
  uint64_t v53 = (_OWORD *)(a2 + v49);
  long long v54 = v53[1];
  *id v52 = *v53;
  v52[1] = v54;
  uint64_t v55 = a3[16];
  uint64_t v56 = a1 + v55;
  uint64_t v57 = a2 + v55;
  *(unsigned char *)uint64_t v56 = *(unsigned char *)(a2 + v55);
  uint64_t v58 = *(void **)(a1 + v55 + 8);
  *(void *)(v56 + 8) = *(void *)(v57 + 8);

  uint64_t v59 = *(void **)(v56 + 16);
  *(void *)(v56 + 16) = *(void *)(v57 + 16);

  *(unsigned char *)(v56 + 24) = *(unsigned char *)(v57 + 24);
  uint64_t v60 = a3[18];
  *(void *)(a1 + a3[17]) = *(void *)(a2 + a3[17]);
  uint64_t v61 = *(void **)(a1 + v60);
  *(void *)(a1 + v60) = *(void *)(a2 + v60);

  *(unsigned char *)(a1 + a3[19]) = *(unsigned char *)(a2 + a3[19]);
  return a1;
}

uint64_t getEnumTagSinglePayload for SymbolButton.Configuration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100441AD0);
}

uint64_t sub_100441AD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIView.Corner?);
    long long v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 36);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for SymbolButton.Configuration(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100441B98);
}

uint64_t sub_100441B98(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIView.Corner?);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 36);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void type metadata completion function for SymbolButton.Configuration()
{
  type metadata accessor for SymbolButton.Metrics?(319, (unint64_t *)&lazy cache variable for type metadata for UIView.Corner?, (void (*)(uint64_t))&type metadata accessor for UIView.Corner);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void type metadata accessor for SymbolButton.Metrics?(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void destroy for SymbolButton.Configuration.Accessibility(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 16);
}

uint64_t initializeWithCopy for SymbolButton.Configuration.Accessibility(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  char v3 = *(void **)(a2 + 8);
  unint64_t v4 = *(void **)(a2 + 16);
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  id v5 = v3;
  id v6 = v4;
  return a1;
}

uint64_t assignWithCopy for SymbolButton.Configuration.Accessibility(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  unint64_t v4 = *(void **)(a1 + 8);
  id v5 = *(void **)(a2 + 8);
  *(void *)(a1 + 8) = v5;
  id v6 = v5;

  uint64_t v7 = *(void **)(a1 + 16);
  uint64_t v8 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v8;
  id v9 = v8;

  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t assignWithTake for SymbolButton.Configuration.Accessibility(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;

  unint64_t v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for SymbolButton.Configuration.Accessibility(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 25)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SymbolButton.Configuration.Accessibility(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SymbolButton.Configuration.Accessibility()
{
  return &type metadata for SymbolButton.Configuration.Accessibility;
}

void destroy for SymbolButton.Symbol(uint64_t a1)
{
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  uint64_t v2 = *(void **)(a1 + 112);
}

uint64_t initializeWithCopy for SymbolButton.Symbol(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  int v4 = *(void **)(a2 + 16);
  id v5 = *(void **)(a2 + 24);
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v6;
  uint64_t v7 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v7;
  uint64_t v8 = *(void **)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v8;
  swift_bridgeObjectRetain();
  id v9 = v4;
  id v10 = v5;
  swift_bridgeObjectRetain();
  id v11 = v8;
  return a1;
}

uint64_t assignWithCopy for SymbolButton.Symbol(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v4 = *(void **)(a1 + 16);
  id v5 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v5;
  id v6 = v5;

  uint64_t v7 = *(void **)(a2 + 24);
  uint64_t v8 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = v7;
  id v9 = v7;

  uint64_t v10 = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = v10;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  long long v11 = *(_OWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = v11;
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  uint64_t v12 = *(void **)(a1 + 112);
  long long v13 = *(void **)(a2 + 112);
  *(void *)(a1 + 112) = v13;
  id v14 = v13;

  return a1;
}

uint64_t assignWithTake for SymbolButton.Symbol(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  int v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  id v5 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);

  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  long long v6 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v6;
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v7 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v7;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  uint64_t v8 = *(void **)(a1 + 112);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);

  return a1;
}

ValueMetadata *type metadata accessor for SymbolButton.Symbol()
{
  return &type metadata for SymbolButton.Symbol;
}

void destroy for SymbolButton.Title(uint64_t a1)
{
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  uint64_t v2 = *(void **)(a1 + 56);
}

uint64_t initializeWithCopy for SymbolButton.Title(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  int v4 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  long long v6 = *(void **)(a2 + 56);
  *(void *)(a1 + 56) = v6;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  swift_bridgeObjectRetain();
  id v7 = v4;
  swift_bridgeObjectRetain();
  id v8 = v6;
  return a1;
}

uint64_t assignWithCopy for SymbolButton.Title(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v4 = *(void **)(a2 + 16);
  uint64_t v5 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v4;
  id v6 = v4;

  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  id v7 = *(void **)(a1 + 56);
  id v8 = *(void **)(a2 + 56);
  *(void *)(a1 + 56) = v8;
  id v9 = v8;

  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  return a1;
}

uint64_t assignWithTake for SymbolButton.Title(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  int v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  id v6 = *(void **)(a1 + 56);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);

  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  return a1;
}

uint64_t getEnumTagSinglePayload for SymbolButton.Title(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 65)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SymbolButton.Title(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 64) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 65) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 65) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SymbolButton.Title()
{
  return &type metadata for SymbolButton.Title;
}

uint64_t destroy for SymbolButton.Background(uint64_t a1)
{
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for SymbolButton.Background(void *a1, void *a2)
{
  uint64_t v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  id v5 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for SymbolButton.Background(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v4 = (void *)a1[1];
  id v5 = (void *)a2[1];
  a1[1] = v5;
  id v6 = v5;

  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for SymbolButton.Background(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v4 = (void *)a1[1];
  a1[1] = a2[1];

  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for SymbolButton.Background()
{
  return &type metadata for SymbolButton.Background;
}

uint64_t destroy for SymbolButton.Material(id *a1)
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SymbolButton.Material(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  id v7 = v3;
  id v8 = v4;
  id v9 = v5;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SymbolButton.Material(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  uint64_t v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v6 = v5;

  id v7 = *(void **)(a1 + 8);
  id v8 = *(void **)(a2 + 8);
  *(void *)(a1 + 8) = v8;
  id v9 = v8;

  uint64_t v10 = *(void **)(a1 + 16);
  long long v11 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v11;
  id v12 = v11;

  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SymbolButton.Material(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  uint64_t v5 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);

  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SymbolButton.Update(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 48)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SymbolButton.Update(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 48) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SymbolButton.Material()
{
  return &type metadata for SymbolButton.Material;
}

ValueMetadata *type metadata accessor for SymbolButton.Material.Color()
{
  return &type metadata for SymbolButton.Material.Color;
}

void destroy for SymbolButton.CustomView(uint64_t a1)
{
  unint64_t v2 = *(void **)(a1 + 48);
}

uint64_t initializeWithCopy for SymbolButton.CustomView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  int v4 = *(void **)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v4;
  id v5 = v3;
  id v6 = v4;
  return a1;
}

uint64_t assignWithCopy for SymbolButton.CustomView(uint64_t a1, uint64_t a2)
{
  int v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  id v7 = *(void **)(a1 + 48);
  id v8 = *(void **)(a2 + 48);
  *(void *)(a1 + 48) = v8;
  id v9 = v8;

  return a1;
}

uint64_t assignWithTake for SymbolButton.CustomView(uint64_t a1, uint64_t a2)
{
  int v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  id v5 = *(void **)(a1 + 48);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);

  return a1;
}

uint64_t getEnumTagSinglePayload for SymbolButton.CustomView(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SymbolButton.CustomView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SymbolButton.CustomView()
{
  return &type metadata for SymbolButton.CustomView;
}

uint64_t initializeBufferWithCopyOfBuffer for SymbolButton.Badge(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v3;
  id v4 = v3;
  return a1;
}

void *assignWithCopy for SymbolButton.Badge(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v3 = (void *)a1[2];
  id v4 = (void *)a2[2];
  a1[2] = v4;
  id v5 = v4;

  return a1;
}

uint64_t assignWithTake for SymbolButton.Badge(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);

  return a1;
}

ValueMetadata *type metadata accessor for SymbolButton.Badge()
{
  return &type metadata for SymbolButton.Badge;
}

uint64_t type metadata accessor for SymbolButton.ImageView()
{
  return self;
}

uint64_t type metadata accessor for SymbolButton.BadgeView()
{
  return self;
}

void **initializeBufferWithCopyOfBuffer for SymbolButton.Metrics(void **a1, void **a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  id v4 = (char *)*a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    id v7 = (void **)&v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    id v7 = a1;
    uint64_t v8 = a3[5];
    id v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for UIView.Corner();
    uint64_t v12 = *(void *)(v11 - 8);
    long long v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    id v14 = v4;
    if (v13(v10, 1, v11))
    {
      uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIView.Corner?);
      memcpy(v9, v10, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v16 = a3[6];
    uint64_t v17 = a3[7];
    long long v18 = *(void **)((char *)a2 + v16);
    *(void **)((char *)v7 + v16) = v18;
    uint64_t v19 = *(void **)((char *)a2 + v17);
    *(void **)((char *)v7 + v17) = v19;
    uint64_t v20 = a3[9];
    *(void **)((char *)v7 + a3[8]) = *(void **)((char *)a2 + a3[8]);
    *(_OWORD *)((char *)v7 + v20) = *(_OWORD *)((char *)a2 + v20);
    uint64_t v21 = a3[11];
    *(_OWORD *)((char *)v7 + a3[10]) = *(_OWORD *)((char *)a2 + a3[10]);
    long long v22 = (char *)v7 + v21;
    uint64_t v23 = (char *)a2 + v21;
    *(_OWORD *)long long v22 = *(_OWORD *)v23;
    v22[16] = v23[16];
    uint64_t v24 = a3[12];
    uint64_t v25 = a3[13];
    long long v26 = (_OWORD *)((char *)v7 + v24);
    uint64_t v27 = (_OWORD *)((char *)a2 + v24);
    long long v28 = v27[1];
    _OWORD *v26 = *v27;
    v26[1] = v28;
    *((unsigned char *)v7 + v25) = *((unsigned char *)a2 + v25);
    id v29 = v18;
    id v30 = v19;
  }
  return v7;
}

void destroy for SymbolButton.Metrics(id *a1, int *a2)
{
  id v4 = (char *)a1 + a2[5];
  uint64_t v5 = type metadata accessor for UIView.Corner();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  }

  id v7 = *(id *)((char *)a1 + a2[7]);
}

void **initializeWithCopy for SymbolButton.Metrics(void **a1, void **a2, int *a3)
{
  uint64_t v6 = *a2;
  *a1 = *a2;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  id v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for UIView.Corner();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  id v13 = v6;
  if (v12(v9, 1, v10))
  {
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIView.Corner?);
    memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v15 = a3[6];
  uint64_t v16 = a3[7];
  uint64_t v17 = *(void **)((char *)a2 + v15);
  *(void **)((char *)a1 + v15) = v17;
  long long v18 = *(void **)((char *)a2 + v16);
  *(void **)((char *)a1 + v16) = v18;
  uint64_t v19 = a3[9];
  *(void **)((char *)a1 + a3[8]) = *(void **)((char *)a2 + a3[8]);
  *(_OWORD *)((char *)a1 + v19) = *(_OWORD *)((char *)a2 + v19);
  uint64_t v20 = a3[11];
  *(_OWORD *)((char *)a1 + a3[10]) = *(_OWORD *)((char *)a2 + a3[10]);
  uint64_t v21 = (char *)a1 + v20;
  long long v22 = (char *)a2 + v20;
  *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
  unsigned char v21[16] = v22[16];
  uint64_t v23 = a3[12];
  uint64_t v24 = a3[13];
  uint64_t v25 = (_OWORD *)((char *)a1 + v23);
  long long v26 = (_OWORD *)((char *)a2 + v23);
  long long v27 = v26[1];
  *uint64_t v25 = *v26;
  v25[1] = v27;
  *((unsigned char *)a1 + v24) = *((unsigned char *)a2 + v24);
  id v28 = v17;
  id v29 = v18;
  return a1;
}

void **assignWithCopy for SymbolButton.Metrics(void **a1, void **a2, int *a3)
{
  uint64_t v6 = *a1;
  uint64_t v7 = *a2;
  *a1 = *a2;
  id v8 = v7;

  uint64_t v9 = a3[5];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = type metadata accessor for UIView.Corner();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v10, v11, v12);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIView.Corner?);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
LABEL_7:
  uint64_t v18 = a3[6];
  uint64_t v19 = *(void **)((char *)a2 + v18);
  uint64_t v20 = *(void **)((char *)a1 + v18);
  *(void **)((char *)a1 + v18) = v19;
  id v21 = v19;

  uint64_t v22 = a3[7];
  uint64_t v23 = *(void **)((char *)a2 + v22);
  uint64_t v24 = *(void **)((char *)a1 + v22);
  *(void **)((char *)a1 + v22) = v23;
  id v25 = v23;

  *(void **)((char *)a1 + a3[8]) = *(void **)((char *)a2 + a3[8]);
  uint64_t v26 = a3[9];
  long long v27 = (void **)((char *)a1 + v26);
  id v28 = (void **)((char *)a2 + v26);
  *long long v27 = *v28;
  v27[1] = v28[1];
  uint64_t v29 = a3[10];
  id v30 = (void **)((char *)a1 + v29);
  uint64_t v31 = (void **)((char *)a2 + v29);
  *id v30 = *v31;
  v30[1] = v31[1];
  uint64_t v32 = a3[11];
  int v33 = (char *)a1 + v32;
  int v34 = (char *)a2 + v32;
  long long v35 = *(_OWORD *)v34;
  v33[16] = v34[16];
  *(_OWORD *)int v33 = v35;
  uint64_t v36 = a3[12];
  uint64_t v37 = (void **)((char *)a1 + v36);
  uint64_t v38 = (void **)((char *)a2 + v36);
  *uint64_t v37 = *v38;
  v37[1] = v38[1];
  void v37[2] = v38[2];
  v37[3] = v38[3];
  *((unsigned char *)a1 + a3[13]) = *((unsigned char *)a2 + a3[13]);
  return a1;
}

void *initializeWithTake for SymbolButton.Metrics(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  id v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UIView.Corner();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIView.Corner?);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *(void *)((char *)a1 + v12) = *(void *)((char *)a2 + v12);
  uint64_t v13 = a3[9];
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  *(_OWORD *)((char *)a1 + v13) = *(_OWORD *)((char *)a2 + v13);
  uint64_t v14 = a3[11];
  *(_OWORD *)((char *)a1 + a3[10]) = *(_OWORD *)((char *)a2 + a3[10]);
  int v15 = (char *)a1 + v14;
  int v16 = (char *)a2 + v14;
  *(_OWORD *)int v15 = *(_OWORD *)v16;
  v15[16] = v16[16];
  uint64_t v17 = a3[12];
  uint64_t v18 = a3[13];
  uint64_t v19 = (_OWORD *)((char *)a1 + v17);
  uint64_t v20 = (_OWORD *)((char *)a2 + v17);
  long long v21 = v20[1];
  *uint64_t v19 = *v20;
  v19[1] = v21;
  *((unsigned char *)a1 + v18) = *((unsigned char *)a2 + v18);
  return a1;
}

void **assignWithTake for SymbolButton.Metrics(void **a1, void **a2, int *a3)
{
  uint64_t v6 = *a1;
  *a1 = *a2;

  uint64_t v7 = a3[5];
  id v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for UIView.Corner();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIView.Corner?);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  uint64_t v16 = a3[6];
  uint64_t v17 = *(void **)((char *)a1 + v16);
  *(void **)((char *)a1 + v16) = *(void **)((char *)a2 + v16);

  uint64_t v18 = a3[7];
  uint64_t v19 = *(void **)((char *)a1 + v18);
  *(void **)((char *)a1 + v18) = *(void **)((char *)a2 + v18);

  uint64_t v20 = a3[9];
  *(void **)((char *)a1 + a3[8]) = *(void **)((char *)a2 + a3[8]);
  *(_OWORD *)((char *)a1 + v20) = *(_OWORD *)((char *)a2 + v20);
  uint64_t v21 = a3[11];
  *(_OWORD *)((char *)a1 + a3[10]) = *(_OWORD *)((char *)a2 + a3[10]);
  uint64_t v22 = (char *)a1 + v21;
  uint64_t v23 = (char *)a2 + v21;
  *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
  v22[16] = v23[16];
  uint64_t v24 = a3[12];
  uint64_t v25 = a3[13];
  uint64_t v26 = (_OWORD *)((char *)a1 + v24);
  long long v27 = (_OWORD *)((char *)a2 + v24);
  long long v28 = v27[1];
  _OWORD *v26 = *v27;
  v26[1] = v28;
  *((unsigned char *)a1 + v25) = *((unsigned char *)a2 + v25);
  return a1;
}

uint64_t getEnumTagSinglePayload for SymbolButton.Metrics(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100443650);
}

uint64_t sub_100443650(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIView.Corner?);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for SymbolButton.Metrics(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10044372C);
}

uint64_t sub_10044372C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIView.Corner?);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  }
  return result;
}

void type metadata completion function for SymbolButton.Metrics()
{
  type metadata accessor for SymbolButton.Metrics?(319, (unint64_t *)&lazy cache variable for type metadata for UIView.Corner?, (void (*)(uint64_t))&type metadata accessor for UIView.Corner);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void specialized SymbolButton.BadgeView.init(coder:)()
{
  uint64_t v1 = OBJC_IVAR____TtCC11MusicCoreUI12SymbolButtonP33_0D6450BB937596549C350B7D294A2A939BadgeView_punchOutView;
  id v2 = [objc_allocWithZone((Class)UIView) init];
  id v3 = [self blackColor];
  [v2 setBackgroundColor:v3];

  id v4 = [v2 layer];
  [v4 setCompositingFilter:kCAFilterDestOut];

  *(void *)&v0[v1] = v2;
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_100443B50()
{
  return swift_deallocObject();
}

id partial apply for closure #1 in SymbolButton.BackgroundView.updateBackgroundColor()(uint64_t a1)
{
  return closure #1 in SymbolButton.BackgroundView.updateBackgroundColor()(a1, *(id *)(v1 + 16), *(double *)(v1 + 24));
}

uint64_t partial apply for closure #1 in SymbolButton.contextMenuInteraction(_:configurationForMenuAtLocation:)()
{
  return (*(uint64_t (**)(void))(v0 + 16))(*(void *)(v0 + 32));
}

uint64_t sub_100443BC8()
{
  return swift_deallocObject();
}

id partial apply for closure #1 in performIdentityScale #1 () in SymbolButton.isHighlighted.didset()
{
  return closure #1 in performIdentityScale #1 () in SymbolButton.isHighlighted.didset(*(void *)(v0 + 16), 1.0);
}

id partial apply for closure #1 in SymbolButton.isHighlighted.didset()
{
  return closure #1 in performIdentityScale #1 () in SymbolButton.isHighlighted.didset(*(void *)(v0 + 16), 0.95);
}

id partial apply for closure #2 in SymbolButton.isHighlighted.didset(int a1)
{
  return closure #2 in SymbolButton.isHighlighted.didset(a1, *(id *)(v1 + 16));
}

uint64_t outlined init with copy of SymbolButton.Configuration(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t outlined retain of SymbolButton.Title(uint64_t a1)
{
  id v2 = *(void **)(a1 + 16);
  id v3 = *(id *)(a1 + 56);
  swift_bridgeObjectRetain();
  id v4 = v2;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t outlined release of SymbolButton.Title(uint64_t a1)
{
  id v2 = *(void **)(a1 + 56);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return a1;
}

uint64_t outlined retain of SymbolButton.Symbol(uint64_t a1)
{
  id v2 = *(void **)(a1 + 16);
  id v3 = *(void **)(a1 + 24);
  id v4 = *(id *)(a1 + 112);
  swift_bridgeObjectRetain();
  id v5 = v2;
  id v6 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t outlined release of SymbolButton.Symbol(uint64_t a1)
{
  id v2 = *(void **)(a1 + 16);
  id v3 = *(void **)(a1 + 112);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return a1;
}

uint64_t lazy protocol witness table accessor for type UIView.Corner and conformance UIView.Corner(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *outlined copy of View in Transition #1 in SymbolButton.setConfiguration(_:animation:updates:)?(void *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (result)
  {
    id v5 = result;
    return (void *)outlined copy of (@escaping @callee_guaranteed () -> ())?(a4);
  }
  return result;
}

void *outlined consume of View in Transition #1 in SymbolButton.setConfiguration(_:animation:updates:)?(void *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (result)
  {

    return (void *)outlined consume of (@escaping @callee_guaranteed () -> ())?(a4);
  }
  return result;
}

uint64_t sub_100443EF0()
{
  uint64_t v1 = (int *)type metadata accessor for SymbolButton.Configuration(0);
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);

  uint64_t v26 = v0;
  uint64_t v5 = v0 + v3;
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  id v6 = *(void **)(v0 + v3 + 200);
  if (v6 != (void *)1)
  {

    swift_bridgeObjectRelease();
  }
  uint64_t v7 = *(void **)(v5 + 224);
  if (v7 != (void *)1)
  {

    swift_bridgeObjectRelease();
  }
  uint64_t v8 = v4 + v2;

  uint64_t v9 = v5 + v1[9];
  uint64_t v10 = type metadata accessor for UIView.Corner();
  uint64_t v11 = *(void *)(v10 - 8);
  unint64_t v12 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  if (!v12(v9, 1, v10)) {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  uint64_t v13 = v8 + v3;
  int v14 = (id *)(v5 + v1[10]);
  if (*v14)
  {
  }
  uint64_t v15 = v13 & ~v2;
  uint64_t v16 = *(void **)(v5 + v1[11] + 16);
  if (v16 != (void *)1) {

  }
  uint64_t v17 = v5 + v1[16];
  uint64_t v18 = v26 + v15;
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  uint64_t v19 = *(void **)(v26 + v15 + 200);
  if (v19 != (void *)1)
  {

    swift_bridgeObjectRelease();
  }
  uint64_t v20 = *(void **)(v18 + 224);
  if (v20 != (void *)1)
  {

    swift_bridgeObjectRelease();
  }

  uint64_t v21 = v18 + v1[9];
  if (!v12(v21, 1, v10)) {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v21, v10);
  }
  uint64_t v22 = (id *)(v18 + v1[10]);
  if (*v22)
  {
  }
  uint64_t v23 = *(void **)(v18 + v1[11] + 16);
  if (v23 != (void *)1) {

  }
  uint64_t v24 = v18 + v1[16];
  swift_release();

  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #3 in SymbolButton.setConfiguration(_:animation:updates:)()
{
  uint64_t v1 = *(void *)(type metadata accessor for SymbolButton.Configuration(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v5 = (v4 + v2 + v3) & ~v2;
  id v6 = *(char **)(v0 + 16);
  uint64_t v7 = *(void *)(v0 + ((v4 + v5 + 7) & 0xFFFFFFFFFFFFFFF8));

  return closure #1 in closure #3 in SymbolButton.setConfiguration(_:animation:updates:)(v6, v0 + v3, v0 + v5, v7);
}

uint64_t sub_100444324()
{
  return objectdestroy_218Tm();
}

id partial apply for closure #2 in closure #3 in closure #3 in SymbolButton.setConfiguration(_:animation:updates:)()
{
  return [*(id *)(v0 + 16) setAlpha:*(double *)(v0 + 56)];
}

uint64_t sub_100444340()
{
  return objectdestroy_218Tm();
}

uint64_t objectdestroy_218Tm()
{
  if (*(void *)(v0 + 40)) {
    swift_release();
  }

  return swift_deallocObject();
}

id partial apply for closure #1 in closure #3 in closure #3 in SymbolButton.setConfiguration(_:animation:updates:)()
{
  double v1 = *(double *)(v0 + 24);
  if (*(unsigned char *)(v0 + 32)) {
    double v1 = 0.0;
  }
  return [*(id *)(v0 + 16) setAlpha:v1];
}

uint64_t objectdestroy_187Tm()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #2 in closure #3 in SymbolButton.setConfiguration(_:animation:updates:)()
{
  return (*(uint64_t (**)(void))(v0 + 16))(*(void *)(v0 + 32));
}

id outlined copy of SymbolButton.Material?(id result, void *a2, void *a3)
{
  if (result != (id)1)
  {
    uint64_t v5 = result;
    swift_bridgeObjectRetain();
    id v6 = v5;
    id v7 = a2;
    return a3;
  }
  return result;
}

uint64_t outlined init with take of SymbolButton.Configuration(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unsigned char *storeEnumTagSinglePayload for SymbolButton.Material.Color(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1004445C8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

void *type metadata accessor for SymbolButton.Animation.TransitionStyle()
{
  return &unk_10054A610;
}

void destroy for Transition #1 in SymbolButton.setConfiguration(_:animation:updates:)(uint64_t a1)
{
  if (*(void *)a1)
  {

    if (*(void *)(a1 + 24)) {
      swift_release();
    }
  }
  uint64_t v2 = *(void **)(a1 + 40);
  if (v2)
  {

    if (*(void *)(a1 + 64))
    {
      swift_release();
    }
  }
}

uint64_t initializeWithCopy for Transition #1 in SymbolButton.setConfiguration(_:animation:updates:)(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(void **)a2;
  if (*(void *)a2)
  {
    uint64_t v5 = (_OWORD *)(a2 + 24);
    uint64_t v6 = *(void *)(a2 + 24);
    uint64_t v7 = *(void *)(a2 + 8);
    *(void *)a1 = v4;
    *(void *)(a1 + 8) = v7;
    *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
    id v8 = v4;
    if (v6)
    {
      uint64_t v9 = *(void *)(a2 + 32);
      *(void *)(a1 + 24) = v6;
      *(void *)(a1 + 32) = v9;
      swift_retain();
    }
    else
    {
      *(_OWORD *)(a1 + 24) = *v5;
    }
  }
  else
  {
    long long v10 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v10;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
  }
  uint64_t v11 = *(void **)(a2 + 40);
  if (v11)
  {
    uint64_t v12 = *(void *)(a2 + 64);
    uint64_t v13 = *(void *)(a2 + 48);
    *(void *)(a1 + 40) = v11;
    *(void *)(a1 + 48) = v13;
    *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
    id v14 = v11;
    if (v12)
    {
      uint64_t v15 = *(void *)(a2 + 72);
      *(void *)(a1 + 64) = v12;
      *(void *)(a1 + 72) = v15;
      swift_retain();
    }
    else
    {
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    }
  }
  else
  {
    long long v16 = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = v16;
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
  }
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  return a1;
}

uint64_t assignWithCopy for Transition #1 in SymbolButton.setConfiguration(_:animation:updates:)(uint64_t a1, long long *a2)
{
  unsigned int v4 = *(void **)a1;
  uint64_t v5 = *(void **)a2;
  if (*(void *)a1)
  {
    if (!v5)
    {
      outlined destroy of View in Transition #1 in SymbolButton.setConfiguration(_:animation:updates:)(a1);
      uint64_t v16 = *((void *)a2 + 4);
      long long v17 = a2[1];
      *(_OWORD *)a1 = *a2;
      *(_OWORD *)(a1 + 16) = v17;
      *(void *)(a1 + 32) = v16;
      goto LABEL_17;
    }
    *(void *)a1 = v5;
    id v6 = v5;

    uint64_t v7 = *((void *)a2 + 1);
    uint64_t v8 = *(void *)(a1 + 24);
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    *(void *)(a1 + 8) = v7;
    uint64_t v9 = *((void *)a2 + 3);
    if (v8)
    {
      if (v9)
      {
        uint64_t v10 = *((void *)a2 + 4);
        *(void *)(a1 + 24) = v9;
        *(void *)(a1 + 32) = v10;
        swift_retain();
        swift_release();
        goto LABEL_17;
      }
      swift_release();
      goto LABEL_15;
    }
    if (!v9)
    {
LABEL_15:
      *(_OWORD *)(a1 + 24) = *(long long *)((char *)a2 + 24);
      goto LABEL_17;
    }
    uint64_t v15 = *((void *)a2 + 4);
    *(void *)(a1 + 24) = v9;
LABEL_12:
    *(void *)(a1 + 32) = v15;
    swift_retain();
    goto LABEL_17;
  }
  if (!v5)
  {
    long long v18 = *a2;
    long long v19 = a2[1];
    *(void *)(a1 + 32) = *((void *)a2 + 4);
    *(_OWORD *)a1 = v18;
    *(_OWORD *)(a1 + 16) = v19;
    goto LABEL_17;
  }
  *(void *)a1 = v5;
  uint64_t v11 = *((void *)a2 + 1);
  *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
  *(void *)(a1 + 8) = v11;
  uint64_t v13 = (long long *)((char *)a2 + 24);
  uint64_t v12 = *((void *)a2 + 3);
  id v14 = v5;
  if (v12)
  {
    uint64_t v15 = *((void *)a2 + 4);
    *(void *)(a1 + 24) = v12;
    goto LABEL_12;
  }
  *(_OWORD *)(a1 + 24) = *v13;
LABEL_17:
  uint64_t v20 = (long long *)(a1 + 40);
  uint64_t v21 = *(void **)(a1 + 40);
  uint64_t v23 = (long long *)((char *)a2 + 40);
  uint64_t v22 = (void *)*((void *)a2 + 5);
  if (!v21)
  {
    if (!v22)
    {
      long long v35 = *v23;
      long long v36 = *(long long *)((char *)a2 + 56);
      *(void *)(a1 + 72) = *((void *)a2 + 9);
      *(_OWORD *)(a1 + 56) = v36;
LABEL_32:
      *uint64_t v20 = v35;
      goto LABEL_34;
    }
    *(void *)(a1 + 40) = v22;
    uint64_t v29 = *((void *)a2 + 6);
    *(unsigned char *)(a1 + 56) = *((unsigned char *)a2 + 56);
    *(void *)(a1 + 48) = v29;
    uint64_t v30 = *((void *)a2 + 8);
    id v31 = v22;
    if (!v30)
    {
      *(_OWORD *)(a1 + 64) = a2[4];
      goto LABEL_34;
    }
    uint64_t v32 = *((void *)a2 + 9);
    *(void *)(a1 + 64) = v30;
    goto LABEL_28;
  }
  if (!v22)
  {
    outlined destroy of View in Transition #1 in SymbolButton.setConfiguration(_:animation:updates:)(a1 + 40);
    uint64_t v33 = *((void *)a2 + 9);
    long long v34 = *(long long *)((char *)a2 + 56);
    *uint64_t v20 = *v23;
    *(_OWORD *)(a1 + 56) = v34;
    *(void *)(a1 + 72) = v33;
    goto LABEL_34;
  }
  *(void *)(a1 + 40) = v22;
  id v24 = v22;

  uint64_t v25 = *((void *)a2 + 6);
  uint64_t v20 = (long long *)(a1 + 64);
  uint64_t v26 = *(void *)(a1 + 64);
  *(unsigned char *)(a1 + 56) = *((unsigned char *)a2 + 56);
  *(void *)(a1 + 48) = v25;
  uint64_t v27 = *((void *)a2 + 8);
  if (!v26)
  {
    if (!v27)
    {
LABEL_31:
      long long v35 = a2[4];
      goto LABEL_32;
    }
    uint64_t v32 = *((void *)a2 + 9);
    *(void *)(a1 + 64) = v27;
LABEL_28:
    *(void *)(a1 + 72) = v32;
    swift_retain();
    goto LABEL_34;
  }
  if (!v27)
  {
    swift_release();
    goto LABEL_31;
  }
  uint64_t v28 = *((void *)a2 + 9);
  *(void *)(a1 + 64) = v27;
  *(void *)(a1 + 72) = v28;
  swift_retain();
  swift_release();
LABEL_34:
  *(unsigned char *)(a1 + 80) = *((unsigned char *)a2 + 80);
  return a1;
}

uint64_t outlined destroy of View in Transition #1 in SymbolButton.setConfiguration(_:animation:updates:)(uint64_t a1)
{
  return a1;
}

__n128 __swift_memcpy81_8_0(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for Transition #1 in SymbolButton.setConfiguration(_:animation:updates:)(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)a1;
  if (!*(void *)a1) {
    goto LABEL_7;
  }
  if (!*(void *)a2)
  {
    outlined destroy of View in Transition #1 in SymbolButton.setConfiguration(_:animation:updates:)(a1);
LABEL_7:
    long long v8 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v8;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    goto LABEL_8;
  }
  *(void *)a1 = *(void *)a2;

  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t v6 = *(void *)(a1 + 24);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  if (v6)
  {
    if (v5)
    {
      uint64_t v7 = *(void *)(a2 + 32);
      *(void *)(a1 + 24) = v5;
      *(void *)(a1 + 32) = v7;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v5)
  {
    uint64_t v16 = *(void *)(a2 + 32);
    *(void *)(a1 + 24) = v5;
    *(void *)(a1 + 32) = v16;
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
LABEL_8:
  uint64_t v9 = *(void **)(a1 + 40);
  uint64_t v10 = *(void *)(a2 + 40);
  if (!v9)
  {
LABEL_14:
    long long v14 = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = v14;
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    goto LABEL_15;
  }
  if (!v10)
  {
    outlined destroy of View in Transition #1 in SymbolButton.setConfiguration(_:animation:updates:)(a1 + 40);
    goto LABEL_14;
  }
  *(void *)(a1 + 40) = v10;

  uint64_t v11 = *(void *)(a2 + 64);
  uint64_t v12 = *(void *)(a1 + 64);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  if (!v12)
  {
    if (v11)
    {
      uint64_t v17 = *(void *)(a2 + 72);
      *(void *)(a1 + 64) = v11;
      *(void *)(a1 + 72) = v17;
      goto LABEL_15;
    }
LABEL_23:
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    goto LABEL_15;
  }
  if (!v11)
  {
    swift_release();
    goto LABEL_23;
  }
  uint64_t v13 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = v11;
  *(void *)(a1 + 72) = v13;
  swift_release();
LABEL_15:
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  return a1;
}

uint64_t getEnumTagSinglePayload for Transition #1 in SymbolButton.setConfiguration(_:animation:updates:)(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 81)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for Transition #1 in SymbolButton.setConfiguration(_:animation:updates:)(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 80) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 81) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 81) = 0;
    }
    if (a2) {
      *(void *)__n128 result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Transition #1 in SymbolButton.setConfiguration(_:animation:updates:)()
{
  return &type metadata for Transition #1 in SymbolButton.setConfiguration(_:animation:updates:);
}

void destroy for View in Transition #1 in SymbolButton.setConfiguration(_:animation:updates:)(uint64_t a1)
{
  if (*(void *)(a1 + 24))
  {
    swift_release();
  }
}

uint64_t initializeWithCopy for View in Transition #1 in SymbolButton.setConfiguration(_:animation:updates:)(uint64_t a1, uint64_t a2)
{
  int v4 = *(void **)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = (_OWORD *)(a2 + 24);
  uint64_t v6 = *(void *)(a2 + 24);
  id v8 = v4;
  if (v6)
  {
    uint64_t v9 = *(void *)(a2 + 32);
    *(void *)(a1 + 24) = v6;
    *(void *)(a1 + 32) = v9;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 24) = *v7;
  }
  return a1;
}

uint64_t assignWithCopy for View in Transition #1 in SymbolButton.setConfiguration(_:animation:updates:)(uint64_t a1, uint64_t a2)
{
  int v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  uint64_t v7 = *(void *)(a2 + 8);
  uint64_t v8 = *(void *)(a1 + 24);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = v7;
  uint64_t v9 = *(void *)(a2 + 24);
  if (!v8)
  {
    if (v9)
    {
      uint64_t v11 = *(void *)(a2 + 32);
      *(void *)(a1 + 24) = v9;
      *(void *)(a1 + 32) = v11;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    return a1;
  }
  if (!v9)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v10 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = v9;
  *(void *)(a1 + 32) = v10;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for View in Transition #1 in SymbolButton.setConfiguration(_:animation:updates:)(uint64_t a1, uint64_t a2)
{
  int v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t v6 = *(void *)(a1 + 24);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  if (!v6)
  {
    if (v5)
    {
      uint64_t v8 = *(void *)(a2 + 32);
      *(void *)(a1 + 24) = v5;
      *(void *)(a1 + 32) = v8;
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    return a1;
  }
  if (!v5)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v7;
  swift_release();
  return a1;
}

void *type metadata accessor for View in Transition #1 in SymbolButton.setConfiguration(_:animation:updates:)()
{
  return &unk_10054A710;
}

unint64_t lazy protocol witness table accessor for type SymbolButton.Animation.TransitionStyle and conformance SymbolButton.Animation.TransitionStyle()
{
  unint64_t result = lazy protocol witness table cache variable for type SymbolButton.Animation.TransitionStyle and conformance SymbolButton.Animation.TransitionStyle;
  if (!lazy protocol witness table cache variable for type SymbolButton.Animation.TransitionStyle and conformance SymbolButton.Animation.TransitionStyle)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SymbolButton.Animation.TransitionStyle and conformance SymbolButton.Animation.TransitionStyle);
  }
  return result;
}

void *_sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSay11MusicCoreUI9TextArrayVACVG_05SwiftF00G0Vs5NeverOTg504_s11de3UI9gh12V4bodyQrvg05i9C00D0VAC7B52Vcfu_32c12bf11313e796ba677a382121249a98AiGTf3nnnpk_nTf1cn_n(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, v1, 0);
    uint64_t v3 = (void *)(a1 + 56);
    do
    {
      uint64_t v4 = *(v3 - 3);
      uint64_t v5 = *(v3 - 2);
      char v6 = *((unsigned char *)v3 - 8);
      uint64_t v7 = *v3;
      outlined copy of Text.Storage(v4, v5, v6);
      unint64_t v8 = _swiftEmptyArrayStorage[2];
      unint64_t v9 = _swiftEmptyArrayStorage[3];
      swift_bridgeObjectRetain();
      if (v8 >= v9 >> 1) {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)((char *)(v9 > 1), v8 + 1, 1);
      }
      v3 += 6;
      _swiftEmptyArrayStorage[2] = v8 + 1;
      uint64_t v10 = &_swiftEmptyArrayStorage[4 * v8];
      v10[4] = v4;
      _OWORD v10[5] = v5;
      *((unsigned char *)v10 + 48) = v6;
      v10[7] = v7;
      --v1;
    }
    while (v1);
  }
  return _swiftEmptyArrayStorage;
}

char *specialized Sequence.compactMap<A>(_:)(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (char *)_swiftEmptyArrayStorage;
  }
  long long v2 = (uint64_t *)(swift_bridgeObjectRetain() + 72);
  New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFSS_Tg5_1 = (char *)_swiftEmptyArrayStorage;
  do
  {
    uint64_t v5 = *v2;
    if (*v2)
    {
      uint64_t v6 = *(v2 - 1);
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFSS_Tg5_1 = _ss12_ArrayBufferV20_consumeAndCreateNew14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFSS_Tg5_1(0, *((void *)New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFSS_Tg5_1+ 2)+ 1, 1, New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFSS_Tg5_1);
      }
      unint64_t v8 = *((void *)New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFSS_Tg5_1 + 2);
      unint64_t v7 = *((void *)New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFSS_Tg5_1 + 3);
      if (v8 >= v7 >> 1) {
        New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFSS_Tg5_1 = _ss12_ArrayBufferV20_consumeAndCreateNew14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFSS_Tg5_1((char *)(v7 > 1), v8 + 1, 1, New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFSS_Tg5_1);
      }
      *((void *)New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFSS_Tg5_1 + 2) = v8 + 1;
      uint64_t v4 = &New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFSS_Tg5_1[16 * v8];
      *((void *)v4 + 4) = v6;
      *((void *)v4 + 5) = v5;
    }
    v2 += 6;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  return New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFSS_Tg5_1;
}

uint64_t TextArray.Element.init(text:accessibilityLabel:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  *(void *)a7 = result;
  *(void *)(a7 + 8) = a2;
  *(unsigned char *)(a7 + 16) = a3 & 1;
  *(void *)(a7 + 24) = a4;
  *(void *)(a7 + 32) = a5;
  *(void *)(a7 + 40) = a6;
  return result;
}

uint64_t TextArray.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v6 = a1;
  uint64_t v56 = a4;
  unint64_t v7 = _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSay11MusicCoreUI9TextArrayVACVG_05SwiftF00G0Vs5NeverOTg504_s11de3UI9gh12V4bodyQrvg05i9C00D0VAC7B52Vcfu_32c12bf11313e796ba677a382121249a98AiGTf3nnnpk_nTf1cn_n(a1);
  unint64_t v8 = _sS2SSysWl_1();
  swift_bridgeObjectRetain();
  uint64_t v10 = Text.init<A>(_:)();
  uint64_t v11 = v9;
  uint64_t v57 = (char *)v10;
  uint64_t v58 = v9;
  LODWORD(v54) = v12;
  char v59 = v12 & 1;
  uint64_t v60 = v13;
  uint64_t v14 = v7[2];
  if (v14)
  {
    v46[1] = v46;
    unint64_t v49 = v8;
    uint64_t v50 = a2;
    uint64_t v15 = v7[4];
    uint64_t v16 = v7[5];
    uint64_t v48 = v6;
    char v17 = *((unsigned char *)v7 + 48);
    uint64_t v51 = a3;
    uint64_t v18 = v7[7];
    uint64_t v55 = 0;
    uint64_t v19 = v9;
    unint64_t v20 = (2 * v14) | 1;
    __chkstk_darwin();
    uint64_t v47 = v10;
    v45[2] = v21;
    outlined copy of Text.Storage(v15, v16, v17);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v11 = v19;
    uint64_t v22 = specialized Sequence.reduce<A>(_:_:)(v15, v16, v17, v18, (void (*)(uint64_t *__return_ptr, uint64_t *, void *))partial apply for specialized closure #1 in Array<A>.joined(separator:), (uint64_t)v45, (uint64_t)v7, (uint64_t)(v7 + 4), 1, v20);
    unint64_t v53 = v23;
    char v25 = v24;
    uint64_t v55 = v26;
    swift_bridgeObjectRelease();
    int v52 = v25 & 1;
    char v27 = v17;
    uint64_t v10 = v47;
    uint64_t v6 = v48;
    outlined consume of Text.Storage(v15, v16, v27);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v22 = 0;
    int v52 = 0;
    uint64_t v55 = _swiftEmptyArrayStorage;
    unint64_t v53 = 0xE000000000000000;
  }
  outlined consume of Text.Storage(v10, v11, v54 & 1);
  swift_bridgeObjectRelease();
  uint64_t v57 = specialized Sequence.compactMap<A>(_:)(v6);
  __swift_instantiateConcreteTypeFromMangledName(&_sSaySSGMD_1);
  _sSaySSGSayxGSKsWl_1();
  uint64_t v28 = BidirectionalCollection<>.joined(separator:)();
  uint64_t v30 = v29;
  swift_bridgeObjectRelease();
  uint64_t v57 = (char *)v28;
  uint64_t v58 = v30;
  uint64_t v31 = Text.init<A>(_:)();
  uint64_t v33 = v32;
  char v35 = v34 & 1;
  uint64_t v36 = v53;
  char v37 = v52;
  uint64_t v51 = Text.accessibilityLabel(_:)();
  uint64_t v39 = v38;
  char v41 = v40;
  uint64_t v54 = v42;
  outlined consume of Text.Storage(v22, v36, v37);
  swift_bridgeObjectRelease();
  outlined consume of Text.Storage(v31, v33, v35);
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v44 = v56;
  *uint64_t v56 = v51;
  v44[1] = v39;
  *((unsigned char *)v44 + 16) = v41 & 1;
  v44[3] = v54;
  return result;
}

uint64_t protocol witness for View.body.getter in conformance TextArray@<X0>(uint64_t *a1@<X8>)
{
  return TextArray.body.getter(*v1, v1[1], v1[2], a1);
}

uint64_t TextArray.Element.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  _sS2SSysWl_1();
  swift_bridgeObjectRetain();
  uint64_t result = Text.init<A>(_:)();
  *(void *)a3 = result;
  *(void *)(a3 + 8) = v7;
  *(unsigned char *)(a3 + 16) = v8 & 1;
  *(void *)(a3 + 24) = v9;
  *(void *)(a3 + 32) = a1;
  *(void *)(a3 + 40) = a2;
  return result;
}

uint64_t specialized Sequence.reduce<A>(_:_:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, void (*a5)(uint64_t *__return_ptr, uint64_t *, void *), uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10)
{
  char v11 = a3;
  uint64_t v12 = a2;
  uint64_t v13 = a1;
  uint64_t v14 = a9;
  uint64_t v33 = a1;
  uint64_t v34 = a2;
  char v35 = a3 & 1;
  uint64_t v36 = a4;
  int64_t v15 = a10 >> 1;
  outlined copy of Text.Storage(a1, a2, a3 & 1);
  if (a10 >> 1 == a9)
  {
    swift_bridgeObjectRetain();
    return v13;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t result = swift_unknownObjectRetain();
    uint64_t v17 = a8 + 32 * a9 + 16;
    while (v14 < v15)
    {
      char v18 = v11;
      uint64_t v24 = v12;
      uint64_t v19 = *(void *)(v17 - 16);
      uint64_t v20 = *(void *)(v17 - 8);
      char v21 = *(unsigned char *)v17;
      uint64_t v22 = *(void *)(v17 + 8);
      v30[0] = v19;
      v30[1] = v20;
      char v31 = v21;
      uint64_t v32 = v22;
      outlined copy of Text.Storage(v19, v20, v21);
      swift_bridgeObjectRetain();
      a5(&v26, &v33, v30);
      if (v10)
      {
        outlined consume of Text.Storage(v19, v20, v21);
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        outlined consume of Text.Storage(v13, v24, v18 & 1);
        swift_bridgeObjectRelease();
        return v13;
      }
      ++v14;
      outlined consume of Text.Storage(v19, v20, v21);
      swift_bridgeObjectRelease();
      outlined consume of Text.Storage(v13, v24, v18 & 1);
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v13 = v26;
      uint64_t v12 = v27;
      char v11 = v28;
      uint64_t v33 = v26;
      uint64_t v34 = v27;
      char v35 = v28;
      uint64_t v36 = v29;
      v17 += 32;
      int64_t v15 = a10 >> 1;
      if (a10 >> 1 == v14)
      {
        swift_unknownObjectRelease();
        return v13;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t specialized closure #1 in Array<A>.joined(separator:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = static Text.+ infix(_:_:)();
  uint64_t v4 = v3;
  char v6 = v5 & 1;
  uint64_t v7 = static Text.+ infix(_:_:)();
  uint64_t v9 = v8;
  char v11 = v10;
  uint64_t v13 = v12;
  outlined consume of Text.Storage(v2, v4, v6);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a1 = v7;
  *(void *)(a1 + 8) = v9;
  *(unsigned char *)(a1 + 16) = v11 & 1;
  *(void *)(a1 + 24) = v13;
  return result;
}

uint64_t partial apply for specialized closure #1 in Array<A>.joined(separator:)@<X0>(uint64_t a1@<X8>)
{
  return specialized closure #1 in Array<A>.joined(separator:)(a1);
}

uint64_t associated type witness table accessor for View.Body : View in TextArray()
{
  return swift_getOpaqueTypeConformance2();
}

void *initializeBufferWithCopyOfBuffer for TextArray(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for TextArray(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for TextArray(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for TextArray()
{
  return &type metadata for TextArray;
}

uint64_t destroy for TextArray.Element(uint64_t a1)
{
  outlined consume of Text.Storage(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TextArray.Element(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  char v6 = *(unsigned char *)(a2 + 16);
  outlined copy of Text.Storage(*(void *)a2, v5, v6);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TextArray.Element(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  char v6 = *(unsigned char *)(a2 + 16);
  outlined copy of Text.Storage(*(void *)a2, v5, v6);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  char v9 = *(unsigned char *)(a1 + 16);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  outlined consume of Text.Storage(v7, v8, v9);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for TextArray.Element(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  char v7 = *(unsigned char *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v4;
  outlined consume of Text.Storage(v5, v6, v7);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v8;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for TextArray.Element()
{
  return &type metadata for TextArray.Element;
}

void *sub_100445A9C()
{
  return &protocol witness table for Text;
}

uint64_t _s7SwiftUI11ViewBuilderV11buildEither5firstAA19_ConditionalContentVyxq_Gx_tAA0C0RzAaIR_r0_lFZ_1(uint64_t a1, uint64_t a2)
{
  type metadata accessor for _ConditionalContent.Storage();
  __chkstk_darwin();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))((char *)&v6 - v4, a1, a2);
  swift_storeEnumTagMultiPayload();
  return _ConditionalContent<>.init(storage:)();
}

uint64_t _s7SwiftUI11ViewBuilderV11buildEither6secondAA19_ConditionalContentVyxq_Gq__tAA0C0RzAaIR_r0_lFZ_1(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for _ConditionalContent.Storage();
  __chkstk_darwin();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))((char *)&v7 - v5, a1, a3);
  swift_storeEnumTagMultiPayload();
  return _ConditionalContent<>.init(storage:)();
}

uint64_t Text.with<A>(style:configurator:)@<X0>(int a1@<W0>, void (*a2)(uint64_t)@<X1>, uint64_t a3@<X7>, uint64_t a4@<X8>, uint64_t a5)
{
  uint64_t v20 = a2;
  uint64_t v21 = a4;
  uint64_t v7 = *(void *)(a3 - 8);
  __chkstk_darwin();
  char v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = specialized static Text.PreConfigured(_:style:)(v11, v12, v10 & 1, v13, a1);
  uint64_t v16 = v15;
  char v18 = v17 & 1;
  v20(v14);
  static Text.PostConfigured<A>(_:style:)((uint64_t)v9, a1, a5, v21);
  outlined consume of Text.Storage(v14, v16, v18);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, a3);
}

uint64_t specialized static Text.PostConfigured<A>(_:style:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X8>)
{
  uint64_t v98 = a4;
  uint64_t v97 = a2;
  uint64_t v95 = a1;
  uint64_t v101 = a3 & 1;
  uint64_t v96 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<_ConditionalContent<_ConditionalContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>>, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Text.Case?>>, _EnvironmentKeyWritingModifier<Int?>>, ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>>>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>>.Storage);
  __chkstk_darwin();
  uint64_t v100 = (uint64_t *)((char *)&v83 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v92 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<_ConditionalContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>>, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Text.Case?>>, _EnvironmentKeyWritingModifier<Int?>>, ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>>>.Storage);
  __chkstk_darwin();
  char v10 = (char *)&v83 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Text.Case?>>, _EnvironmentKeyWritingModifier<Int?>>, ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>>.Storage);
  __chkstk_darwin();
  uint64_t v12 = (char *)&v83 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Text.Case?>>, _EnvironmentKeyWritingModifier<Int?>>, ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>>);
  __chkstk_darwin();
  long long v90 = (char *)&v83 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<_ConditionalContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>>, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Text.Case?>>, _EnvironmentKeyWritingModifier<Int?>>, ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>>>);
  __chkstk_darwin();
  uint64_t v94 = (char *)&v83 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Text.Case?>);
  __chkstk_darwin();
  char v17 = (uint64_t *)((char *)&v83 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Text.Case?);
  __chkstk_darwin();
  uint64_t v19 = (char *)&v83 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Text.Case?>>);
  __chkstk_darwin();
  uint64_t v22 = (char *)&v83 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Text.Case?>>, _EnvironmentKeyWritingModifier<Int?>>);
  __chkstk_darwin();
  uint64_t v24 = (char *)&v83 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __chkstk_darwin();
  switch(a5)
  {
    case 4:
    case 6:
      uint64_t v27 = static Color.secondary.getter();
      uint64_t v89 = v27;
      uint64_t KeyPath = swift_getKeyPath();
      long long v90 = (char *)KeyPath;
      uint64_t v29 = swift_getKeyPath();
      uint64_t v91 = a6;
      uint64_t v30 = v29;
      uint64_t v31 = swift_getKeyPath();
      uint64_t v88 = v31;
      uint64_t v32 = v95;
      uint64_t v33 = v97;
      uint64_t v34 = v101;
      outlined copy of Text.Storage(v95, v97, v101);
      uint64_t v35 = v98;
      swift_bridgeObjectRetain();
      outlined copy of Text.Storage(v32, v33, v34);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      swift_retain();
      outlined consume of Text.Storage(v32, v33, v34);
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v102 = v32;
      uint64_t v103 = v33;
      uint64_t v104 = v34;
      uint64_t v105 = v35;
      uint64_t v106 = KeyPath;
      uint64_t v107 = v27;
      uint64_t v108 = v30;
      long long v109 = xmmword_100493D50;
      uint64_t v110 = v31;
      __int16 v111 = 257;
      outlined copy of Text.Storage(v32, v33, v34);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v87 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>);
      lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Text.Case?>> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, (unint64_t *)&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Int?>);
      lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>> and conformance <> ModifiedContent<A, B>();
      _ConditionalContent<>.init(storage:)();
      char v36 = v117;
      char v37 = v118;
      long long v38 = v113;
      *(_OWORD *)char v10 = v112;
      *((_OWORD *)v10 + 1) = v38;
      long long v39 = v115;
      long long v40 = v116;
      *((_OWORD *)v10 + 2) = v114;
      *((_OWORD *)v10 + 3) = v39;
      *((_OWORD *)v10 + 4) = v40;
      v10[80] = v36;
      v10[81] = v37;
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>>);
      lazy protocol witness table accessor for type _ConditionalContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>> and conformance <> _ConditionalContent<A, B>();
      lazy protocol witness table accessor for type _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Text.Case?>>, _EnvironmentKeyWritingModifier<Int?>>, ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>> and conformance <> _ConditionalContent<A, B>();
      uint64_t v41 = (uint64_t)v94;
      _ConditionalContent<>.init(storage:)();
      outlined init with copy of (String, Any)(v41, (uint64_t)v100, &demangling cache variable for type metadata for _ConditionalContent<_ConditionalContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>>, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Text.Case?>>, _EnvironmentKeyWritingModifier<Int?>>, ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>>>);
      swift_storeEnumTagMultiPayload();
      lazy protocol witness table accessor for type _ConditionalContent<_ConditionalContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>>, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Text.Case?>>, _EnvironmentKeyWritingModifier<Int?>>, ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>>> and conformance <> _ConditionalContent<A, B>(&lazy protocol witness table cache variable for type _ConditionalContent<_ConditionalContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>>, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Text.Case?>>, _EnvironmentKeyWritingModifier<Int?>>, ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>>> and conformance <> _ConditionalContent<A, B>, &demangling cache variable for type metadata for _ConditionalContent<_ConditionalContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>>, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Text.Case?>>, _EnvironmentKeyWritingModifier<Int?>>, ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>>>, (void (*)(void))lazy protocol witness table accessor for type _ConditionalContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>> and conformance <> _ConditionalContent<A, B>, (void (*)(void))lazy protocol witness table accessor for type _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Text.Case?>>, _EnvironmentKeyWritingModifier<Int?>>, ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>> and conformance <> _ConditionalContent<A, B>);
      _ConditionalContent<>.init(storage:)();
      outlined destroy of TaskPriority?(v41, &demangling cache variable for type metadata for _ConditionalContent<_ConditionalContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>>, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Text.Case?>>, _EnvironmentKeyWritingModifier<Int?>>, ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>>>);
      outlined consume of Text.Storage(v32, v33, v34);
      swift_release();
      goto LABEL_4;
    case 5:
      LODWORD(v86) = v101 != 0;
      uint64_t v88 = (uint64_t)&v83 - v26;
      uint64_t v87 = v25;
      uint64_t v84 = static Color.secondary.getter();
      uint64_t v83 = swift_getKeyPath();
      LODWORD(v85) = enum case for Text.Case.uppercase(_:);
      uint64_t v54 = type metadata accessor for Text.Case();
      uint64_t v91 = a6;
      uint64_t v55 = v54;
      uint64_t v56 = *(void *)(v54 - 8);
      (*(void (**)(char *, void, uint64_t))(v56 + 104))(v19, v85, v54);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v56 + 56))(v19, 0, 1, v55);
      uint64_t v57 = swift_getKeyPath();
      outlined init with copy of (String, Any)((uint64_t)v19, (uint64_t)v17 + *(int *)(v15 + 28), &demangling cache variable for type metadata for Text.Case?);
      *char v17 = v57;
      outlined init with copy of (String, Any)((uint64_t)v17, (uint64_t)&v22[*(int *)(v20 + 36)], &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Text.Case?>);
      uint64_t v58 = v95;
      uint64_t v59 = v97;
      *(void *)uint64_t v22 = v95;
      *((void *)v22 + 1) = v59;
      v22[16] = (char)v86;
      uint64_t v86 = v10;
      uint64_t v60 = v83;
      *((void *)v22 + 3) = v98;
      *((void *)v22 + 4) = v60;
      uint64_t v85 = v12;
      *((void *)v22 + 5) = v84;
      LOBYTE(v57) = v101;
      outlined copy of Text.Storage(v58, v59, v101);
      swift_bridgeObjectRetain();
      outlined copy of Text.Storage(v58, v59, v57);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      outlined destroy of TaskPriority?((uint64_t)v17, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Text.Case?>);
      outlined destroy of TaskPriority?((uint64_t)v19, &demangling cache variable for type metadata for Text.Case?);
      outlined consume of Text.Storage(v58, v59, v101);
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v61 = swift_getKeyPath();
      outlined init with copy of (String, Any)((uint64_t)v22, (uint64_t)v24, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Text.Case?>>);
      uint64_t v62 = &v24[*(int *)(v87 + 36)];
      *(void *)uint64_t v62 = v61;
      *((void *)v62 + 1) = 1;
      v62[16] = 0;
      outlined destroy of TaskPriority?((uint64_t)v22, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Text.Case?>>);
      uint64_t v63 = v88;
      outlined init with take of ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Text.Case?>>, _EnvironmentKeyWritingModifier<Int?>>((uint64_t)v24, v88);
      outlined init with copy of (String, Any)(v63, (uint64_t)v85, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Text.Case?>>, _EnvironmentKeyWritingModifier<Int?>>);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>);
      lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Text.Case?>>, _EnvironmentKeyWritingModifier<Int?>> and conformance <> ModifiedContent<A, B>();
      lazy protocol witness table accessor for type ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>();
      uint64_t v64 = (uint64_t)v90;
      _ConditionalContent<>.init(storage:)();
      outlined init with copy of (String, Any)(v64, (uint64_t)v86, &demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Text.Case?>>, _EnvironmentKeyWritingModifier<Int?>>, ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>>);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>>);
      lazy protocol witness table accessor for type _ConditionalContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>> and conformance <> _ConditionalContent<A, B>();
      lazy protocol witness table accessor for type _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Text.Case?>>, _EnvironmentKeyWritingModifier<Int?>>, ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>> and conformance <> _ConditionalContent<A, B>();
      uint64_t v65 = (uint64_t)v94;
      _ConditionalContent<>.init(storage:)();
      outlined destroy of TaskPriority?(v64, &demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Text.Case?>>, _EnvironmentKeyWritingModifier<Int?>>, ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>>);
      outlined init with copy of (String, Any)(v65, (uint64_t)v100, &demangling cache variable for type metadata for _ConditionalContent<_ConditionalContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>>, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Text.Case?>>, _EnvironmentKeyWritingModifier<Int?>>, ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>>>);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>);
      lazy protocol witness table accessor for type _ConditionalContent<_ConditionalContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>>, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Text.Case?>>, _EnvironmentKeyWritingModifier<Int?>>, ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>>> and conformance <> _ConditionalContent<A, B>(&lazy protocol witness table cache variable for type _ConditionalContent<_ConditionalContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>>, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Text.Case?>>, _EnvironmentKeyWritingModifier<Int?>>, ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>>> and conformance <> _ConditionalContent<A, B>, &demangling cache variable for type metadata for _ConditionalContent<_ConditionalContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>>, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Text.Case?>>, _EnvironmentKeyWritingModifier<Int?>>, ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>>>, (void (*)(void))lazy protocol witness table accessor for type _ConditionalContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>> and conformance <> _ConditionalContent<A, B>, (void (*)(void))lazy protocol witness table accessor for type _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Text.Case?>>, _EnvironmentKeyWritingModifier<Int?>>, ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>> and conformance <> _ConditionalContent<A, B>);
      lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Text.Case?>> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, (unint64_t *)&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Int?>);
      _ConditionalContent<>.init(storage:)();
      outlined destroy of TaskPriority?(v65, &demangling cache variable for type metadata for _ConditionalContent<_ConditionalContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>>, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Text.Case?>>, _EnvironmentKeyWritingModifier<Int?>>, ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>>>);
      return outlined destroy of TaskPriority?(v63, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Text.Case?>>, _EnvironmentKeyWritingModifier<Int?>>);
    case 7:
      char v67 = v101;
      BOOL v68 = v101 != 0;
      uint64_t v69 = static Color.white.getter();
      uint64_t v70 = swift_getKeyPath();
      uint64_t v71 = v95;
      uint64_t v72 = v97;
      *(void *)uint64_t v12 = v95;
      *((void *)v12 + 1) = v72;
      v12[16] = v68;
      *((void *)v12 + 3) = v98;
      *((void *)v12 + 4) = v70;
      uint64_t v88 = v70;
      *((void *)v12 + 5) = v69;
      uint64_t v87 = v69;
      swift_storeEnumTagMultiPayload();
      outlined copy of Text.Storage(v71, v72, v67);
      swift_bridgeObjectRetain();
      outlined copy of Text.Storage(v71, v72, v67);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>);
      lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Text.Case?>>, _EnvironmentKeyWritingModifier<Int?>> and conformance <> ModifiedContent<A, B>();
      uint64_t v91 = a6;
      lazy protocol witness table accessor for type ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>();
      uint64_t v73 = (uint64_t)v90;
      _ConditionalContent<>.init(storage:)();
      outlined init with copy of (String, Any)(v73, (uint64_t)v10, &demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Text.Case?>>, _EnvironmentKeyWritingModifier<Int?>>, ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>>);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>>);
      lazy protocol witness table accessor for type _ConditionalContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>> and conformance <> _ConditionalContent<A, B>();
      lazy protocol witness table accessor for type _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Text.Case?>>, _EnvironmentKeyWritingModifier<Int?>>, ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>> and conformance <> _ConditionalContent<A, B>();
      uint64_t v74 = (uint64_t)v94;
      _ConditionalContent<>.init(storage:)();
      outlined destroy of TaskPriority?(v73, &demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Text.Case?>>, _EnvironmentKeyWritingModifier<Int?>>, ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>>);
      outlined init with copy of (String, Any)(v74, (uint64_t)v100, &demangling cache variable for type metadata for _ConditionalContent<_ConditionalContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>>, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Text.Case?>>, _EnvironmentKeyWritingModifier<Int?>>, ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>>>);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>);
      lazy protocol witness table accessor for type _ConditionalContent<_ConditionalContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>>, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Text.Case?>>, _EnvironmentKeyWritingModifier<Int?>>, ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>>> and conformance <> _ConditionalContent<A, B>(&lazy protocol witness table cache variable for type _ConditionalContent<_ConditionalContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>>, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Text.Case?>>, _EnvironmentKeyWritingModifier<Int?>>, ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>>> and conformance <> _ConditionalContent<A, B>, &demangling cache variable for type metadata for _ConditionalContent<_ConditionalContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>>, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Text.Case?>>, _EnvironmentKeyWritingModifier<Int?>>, ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>>>, (void (*)(void))lazy protocol witness table accessor for type _ConditionalContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>> and conformance <> _ConditionalContent<A, B>, (void (*)(void))lazy protocol witness table accessor for type _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Text.Case?>>, _EnvironmentKeyWritingModifier<Int?>>, ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>> and conformance <> _ConditionalContent<A, B>);
      lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Text.Case?>> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, (unint64_t *)&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Int?>);
      _ConditionalContent<>.init(storage:)();
      outlined destroy of TaskPriority?(v74, &demangling cache variable for type metadata for _ConditionalContent<_ConditionalContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>>, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Text.Case?>>, _EnvironmentKeyWritingModifier<Int?>>, ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>>>);
      outlined consume of Text.Storage(v71, v72, v101);
      swift_release();
      goto LABEL_7;
    case 8:
      char v75 = v101;
      BOOL v76 = v101 != 0;
      uint64_t v77 = static Color.white.getter();
      uint64_t v78 = swift_getKeyPath();
      uint64_t v79 = swift_getKeyPath();
      long long v80 = v100;
      uint64_t v81 = v95;
      uint64_t v82 = v97;
      *uint64_t v100 = v95;
      v80[1] = v82;
      *((unsigned char *)v80 + 16) = v76;
      v80[3] = v98;
      v80[4] = v78;
      v80[5] = v77;
      v80[6] = v79;
      v80[7] = 1;
      *((unsigned char *)v80 + 64) = 0;
      swift_storeEnumTagMultiPayload();
      outlined copy of Text.Storage(v81, v82, v75);
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>);
      lazy protocol witness table accessor for type _ConditionalContent<_ConditionalContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>>, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Text.Case?>>, _EnvironmentKeyWritingModifier<Int?>>, ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>>> and conformance <> _ConditionalContent<A, B>(&lazy protocol witness table cache variable for type _ConditionalContent<_ConditionalContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>>, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Text.Case?>>, _EnvironmentKeyWritingModifier<Int?>>, ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>>> and conformance <> _ConditionalContent<A, B>, &demangling cache variable for type metadata for _ConditionalContent<_ConditionalContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>>, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Text.Case?>>, _EnvironmentKeyWritingModifier<Int?>>, ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>>>, (void (*)(void))lazy protocol witness table accessor for type _ConditionalContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>> and conformance <> _ConditionalContent<A, B>, (void (*)(void))lazy protocol witness table accessor for type _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Text.Case?>>, _EnvironmentKeyWritingModifier<Int?>>, ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>> and conformance <> _ConditionalContent<A, B>);
      lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Text.Case?>> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, (unint64_t *)&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Int?>);
      return _ConditionalContent<>.init(storage:)();
    default:
      uint64_t v42 = static Color.primary.getter();
      uint64_t v43 = swift_getKeyPath();
      uint64_t v44 = swift_getKeyPath();
      uint64_t v45 = v95;
      uint64_t v102 = v95;
      uint64_t v46 = v97;
      uint64_t v103 = v97;
      char v47 = v101;
      uint64_t v104 = v101;
      uint64_t v105 = v98;
      uint64_t v106 = v43;
      long long v90 = (char *)v43;
      uint64_t v107 = v42;
      uint64_t v108 = v44;
      uint64_t v89 = v42;
      uint64_t v88 = v44;
      long long v109 = 1uLL;
      uint64_t v110 = 0;
      __int16 v111 = 0;
      outlined copy of Text.Storage(v95, v97, v101);
      swift_bridgeObjectRetain();
      outlined copy of Text.Storage(v45, v46, v47);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      swift_retain();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>);
      uint64_t v91 = a6;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>);
      lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Text.Case?>> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, (unint64_t *)&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Int?>);
      lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>> and conformance <> ModifiedContent<A, B>();
      _ConditionalContent<>.init(storage:)();
      char v48 = v117;
      char v49 = v118;
      long long v50 = v113;
      *(_OWORD *)char v10 = v112;
      *((_OWORD *)v10 + 1) = v50;
      long long v51 = v115;
      long long v52 = v116;
      *((_OWORD *)v10 + 2) = v114;
      *((_OWORD *)v10 + 3) = v51;
      *((_OWORD *)v10 + 4) = v52;
      v10[80] = v48;
      v10[81] = v49;
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>>);
      lazy protocol witness table accessor for type _ConditionalContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>> and conformance <> _ConditionalContent<A, B>();
      lazy protocol witness table accessor for type _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Text.Case?>>, _EnvironmentKeyWritingModifier<Int?>>, ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>> and conformance <> _ConditionalContent<A, B>();
      uint64_t v53 = (uint64_t)v94;
      _ConditionalContent<>.init(storage:)();
      outlined init with copy of (String, Any)(v53, (uint64_t)v100, &demangling cache variable for type metadata for _ConditionalContent<_ConditionalContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>>, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Text.Case?>>, _EnvironmentKeyWritingModifier<Int?>>, ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>>>);
      swift_storeEnumTagMultiPayload();
      lazy protocol witness table accessor for type _ConditionalContent<_ConditionalContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>>, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Text.Case?>>, _EnvironmentKeyWritingModifier<Int?>>, ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>>> and conformance <> _ConditionalContent<A, B>(&lazy protocol witness table cache variable for type _ConditionalContent<_ConditionalContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>>, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Text.Case?>>, _EnvironmentKeyWritingModifier<Int?>>, ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>>> and conformance <> _ConditionalContent<A, B>, &demangling cache variable for type metadata for _ConditionalContent<_ConditionalContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>>, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Text.Case?>>, _EnvironmentKeyWritingModifier<Int?>>, ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>>>, (void (*)(void))lazy protocol witness table accessor for type _ConditionalContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>> and conformance <> _ConditionalContent<A, B>, (void (*)(void))lazy protocol witness table accessor for type _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Text.Case?>>, _EnvironmentKeyWritingModifier<Int?>>, ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>> and conformance <> _ConditionalContent<A, B>);
      _ConditionalContent<>.init(storage:)();
      outlined destroy of TaskPriority?(v53, &demangling cache variable for type metadata for _ConditionalContent<_ConditionalContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>>, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Text.Case?>>, _EnvironmentKeyWritingModifier<Int?>>, ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>>>);
      outlined consume of Text.Storage(v45, v46, v47);
LABEL_4:
      swift_release();
      swift_release();
LABEL_7:
      swift_release();
      return swift_bridgeObjectRelease();
  }
}

uint64_t static Text.PostConfigured<A>(_:style:)@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v178 = a3;
  LODWORD(v166) = a2;
  uint64_t v164 = a1;
  uint64_t v170 = a4;
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Color?>);
  uint64_t v4 = type metadata accessor for ModifiedContent();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Text.Case?>);
  uint64_t v5 = type metadata accessor for ModifiedContent();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Int?>);
  uint64_t v6 = type metadata accessor for ModifiedContent();
  uint64_t v7 = type metadata accessor for _ConditionalContent();
  uint64_t v156 = *(void *)(v7 - 8);
  __chkstk_darwin();
  uint64_t v159 = (uint64_t)&v151 - v8;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Text.Case?);
  __chkstk_darwin();
  char v10 = (char *)&v151 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v172 = v5;
  uint64_t v154 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v153 = (char *)&v151 - v11;
  uint64_t v179 = v6;
  uint64_t v157 = *(void *)(v6 - 8);
  __chkstk_darwin();
  uint64_t v13 = (char *)&v151 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v155 = (char *)&v151 - v14;
  uint64_t v15 = type metadata accessor for ModifiedContent();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<TextAlignment>);
  uint64_t v167 = *(void *)(type metadata accessor for ModifiedContent() - 8);
  __chkstk_darwin();
  char v17 = (char *)&v151 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  CGRect v161 = (char *)&v151 - v18;
  uint64_t v174 = v19;
  uint64_t v158 = *(void *)(type metadata accessor for _ConditionalContent() - 8);
  __chkstk_darwin();
  uint64_t v160 = (uint64_t)&v151 - v20;
  uint64_t v177 = v21;
  uint64_t v180 = v7;
  uint64_t v163 = *(void *)(type metadata accessor for _ConditionalContent() - 8);
  __chkstk_darwin();
  CGRect v162 = (char *)&v151 - v22;
  uint64_t v181 = v4;
  uint64_t v173 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v24 = (char *)&v151 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v26 = (char *)&v151 - v25;
  uint64_t v171 = *(void (***)(char *, uint64_t))(v15 - 8);
  __chkstk_darwin();
  char v28 = (char *)&v151 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v30 = (char *)&v151 - v29;
  uint64_t v165 = v31;
  uint64_t v175 = v15;
  uint64_t v32 = type metadata accessor for _ConditionalContent();
  uint64_t v168 = *(void *)(v32 - 8);
  uint64_t v169 = v32;
  __chkstk_darwin();
  CGRect v176 = (char *)&v151 - v33;
  switch((char)v166)
  {
    case 4:
    case 6:
      static Color.secondary.getter();
      uint64_t v34 = v178;
      View.foregroundColor(_:)();
      swift_release();
      uint64_t v35 = lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Color?> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Color?> and conformance _EnvironmentKeyWritingModifier<A>, (uint64_t *)&demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Color?>);
      uint64_t v212 = v34;
      uint64_t v213 = v35;
      uint64_t v36 = v181;
      uint64_t WitnessTable = swift_getWitnessTable();
      uint64_t v166 = WitnessTable;
      View.lineLimit(_:)();
      (*(void (**)(char *, uint64_t))(v173 + 8))(v26, v36);
      uint64_t v173 = lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Color?> and conformance _EnvironmentKeyWritingModifier<A>((unint64_t *)&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Int?>);
      uint64_t v210 = WitnessTable;
      uint64_t v211 = v173;
      long long v38 = v171;
      uint64_t v39 = v175;
      uint64_t v40 = swift_getWitnessTable();
      View.multilineTextAlignment(_:)();
      uint64_t v41 = v30;
      uint64_t v42 = v39;
      v38[1](v41, v39);
      uint64_t v43 = lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Color?> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<TextAlignment>);
      uint64_t v44 = v40;
      uint64_t v164 = v40;
      uint64_t v208 = v40;
      uint64_t v209 = v43;
      uint64_t v45 = v174;
      uint64_t v46 = swift_getWitnessTable();
      char v47 = v161;
      static ViewBuilder.buildExpression<A>(_:)(v17, v45, v46);
      uint64_t v48 = v167 + 8;
      char v49 = *(void (**)(char *, uint64_t))(v167 + 8);
      v49(v17, v45);
      uint64_t v171 = (void (**)(char *, uint64_t))v49;
      uint64_t v167 = v48;
      static ViewBuilder.buildExpression<A>(_:)(v47, v45, v46);
      uint64_t v50 = (uint64_t)v17;
      uint64_t v51 = v160;
      _s7SwiftUI11ViewBuilderV11buildEither6secondAA19_ConditionalContentVyxq_Gq__tAA0C0RzAaIR_r0_lFZ_1(v50, v42, v45);
      v49((char *)v50, v45);
      uint64_t v206 = v44;
      uint64_t v207 = v46;
      uint64_t v52 = v177;
      uint64_t v53 = swift_getWitnessTable();
      uint64_t v54 = lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Color?> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Text.Case?> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Text.Case?>);
      uint64_t v55 = v166;
      uint64_t v204 = v166;
      uint64_t v205 = v54;
      uint64_t v202 = swift_getWitnessTable();
      uint64_t v203 = v173;
      uint64_t v200 = swift_getWitnessTable();
      uint64_t v201 = v55;
      uint64_t v56 = swift_getWitnessTable();
      uint64_t v57 = (uint64_t)v162;
      _s7SwiftUI11ViewBuilderV11buildEither5firstAA19_ConditionalContentVyxq_Gx_tAA0C0RzAaIR_r0_lFZ_1(v51, v52);
      (*(void (**)(uint64_t, uint64_t))(v158 + 8))(v51, v52);
      uint64_t v198 = v53;
      uint64_t v199 = v56;
      uint64_t v58 = v165;
      swift_getWitnessTable();
      _s7SwiftUI11ViewBuilderV11buildEither5firstAA19_ConditionalContentVyxq_Gx_tAA0C0RzAaIR_r0_lFZ_1(v57, v58);
      (*(void (**)(uint64_t, uint64_t))(v163 + 8))(v57, v58);
      ((void (*)(char *, uint64_t))v171)(v161, v45);
      break;
    case 5:
      static Color.secondary.getter();
      uint64_t v76 = v178;
      View.foregroundColor(_:)();
      swift_release();
      uint64_t v77 = enum case for Text.Case.uppercase(_:);
      uint64_t v78 = type metadata accessor for Text.Case();
      uint64_t v79 = *(void *)(v78 - 8);
      (*(void (**)(char *, uint64_t, uint64_t))(v79 + 104))(v10, v77, v78);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v79 + 56))(v10, 0, 1, v78);
      uint64_t v80 = lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Color?> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Color?> and conformance _EnvironmentKeyWritingModifier<A>, (uint64_t *)&demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Color?>);
      uint64_t v228 = v76;
      uint64_t v229 = v80;
      uint64_t v81 = v181;
      uint64_t v82 = swift_getWitnessTable();
      uint64_t v83 = v153;
      View.textCase(_:)();
      outlined destroy of TaskPriority?((uint64_t)v10, &demangling cache variable for type metadata for Text.Case?);
      (*(void (**)(char *, uint64_t))(v173 + 8))(v26, v81);
      uint64_t v84 = lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Color?> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Text.Case?> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Text.Case?>);
      uint64_t v226 = v82;
      uint64_t v227 = v84;
      uint64_t v85 = v172;
      uint64_t v86 = swift_getWitnessTable();
      View.lineLimit(_:)();
      (*(void (**)(char *, uint64_t))(v154 + 8))(v83, v85);
      uint64_t v87 = lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Color?> and conformance _EnvironmentKeyWritingModifier<A>((unint64_t *)&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Int?>);
      uint64_t v224 = v86;
      uint64_t v225 = v87;
      uint64_t v88 = v179;
      uint64_t v89 = swift_getWitnessTable();
      long long v90 = v155;
      static ViewBuilder.buildExpression<A>(_:)(v13, v88, v89);
      uint64_t v92 = v157 + 8;
      uint64_t v91 = *(void (**)(char *, uint64_t))(v157 + 8);
      v91(v13, v88);
      uint64_t v173 = (uint64_t)v91;
      uint64_t v157 = v92;
      static ViewBuilder.buildExpression<A>(_:)(v90, v88, v89);
      _s7SwiftUI11ViewBuilderV11buildEither5firstAA19_ConditionalContentVyxq_Gx_tAA0C0RzAaIR_r0_lFZ_1((uint64_t)v13, v88);
      v91(v13, v88);
      uint64_t v222 = v82;
      uint64_t v223 = v87;
      uint64_t v93 = swift_getWitnessTable();
      uint64_t v171 = (void (**)(char *, uint64_t))v93;
      uint64_t v94 = lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Color?> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<TextAlignment>);
      uint64_t v220 = v93;
      uint64_t v221 = v94;
      uint64_t v95 = swift_getWitnessTable();
      uint64_t v218 = v93;
      uint64_t v219 = v95;
      uint64_t v96 = v177;
      uint64_t v97 = swift_getWitnessTable();
      uint64_t v216 = v89;
      uint64_t v217 = v82;
      uint64_t v98 = v180;
      uint64_t v99 = swift_getWitnessTable();
      uint64_t v100 = (uint64_t)v162;
      uint64_t v101 = v159;
      _s7SwiftUI11ViewBuilderV11buildEither6secondAA19_ConditionalContentVyxq_Gq__tAA0C0RzAaIR_r0_lFZ_1(v159, v96, v98);
      (*(void (**)(uint64_t, uint64_t))(v156 + 8))(v101, v98);
      uint64_t v214 = v97;
      uint64_t v215 = v99;
      uint64_t v102 = v165;
      swift_getWitnessTable();
      _s7SwiftUI11ViewBuilderV11buildEither5firstAA19_ConditionalContentVyxq_Gx_tAA0C0RzAaIR_r0_lFZ_1(v100, v102);
      (*(void (**)(uint64_t, uint64_t))(v163 + 8))(v100, v102);
      ((void (*)(char *, uint64_t))v173)(v155, v88);
      break;
    case 7:
      static Color.white.getter();
      uint64_t v103 = v178;
      View.foregroundColor(_:)();
      swift_release();
      uint64_t v104 = lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Color?> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Color?> and conformance _EnvironmentKeyWritingModifier<A>, (uint64_t *)&demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Color?>);
      uint64_t v244 = v103;
      uint64_t v245 = v104;
      uint64_t v105 = v181;
      uint64_t v106 = swift_getWitnessTable();
      static ViewBuilder.buildExpression<A>(_:)(v24, v105, v106);
      uint64_t v107 = *(void (**)(char *, uint64_t))(v173 + 8);
      v173 += 8;
      v107(v24, v105);
      uint64_t v108 = v107;
      uint64_t v171 = (void (**)(char *, uint64_t))v107;
      static ViewBuilder.buildExpression<A>(_:)(v26, v105, v106);
      uint64_t v109 = lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Color?> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Text.Case?> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Text.Case?>);
      uint64_t v242 = v106;
      uint64_t v243 = v109;
      uint64_t v110 = swift_getWitnessTable();
      uint64_t v111 = lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Color?> and conformance _EnvironmentKeyWritingModifier<A>((unint64_t *)&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Int?>);
      uint64_t v240 = v110;
      uint64_t v241 = v111;
      uint64_t v112 = v179;
      uint64_t v113 = swift_getWitnessTable();
      _s7SwiftUI11ViewBuilderV11buildEither6secondAA19_ConditionalContentVyxq_Gq__tAA0C0RzAaIR_r0_lFZ_1((uint64_t)v24, v112, v105);
      v108(v24, v105);
      uint64_t v238 = v106;
      uint64_t v239 = v111;
      uint64_t v114 = swift_getWitnessTable();
      uint64_t v167 = v114;
      uint64_t v115 = lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Color?> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<TextAlignment>);
      uint64_t v236 = v114;
      uint64_t v237 = v115;
      uint64_t v116 = swift_getWitnessTable();
      uint64_t v234 = v114;
      uint64_t v235 = v116;
      uint64_t v117 = v177;
      uint64_t v118 = swift_getWitnessTable();
      uint64_t v232 = v113;
      uint64_t v233 = v106;
      uint64_t v119 = v180;
      uint64_t v120 = swift_getWitnessTable();
      uint64_t v121 = (uint64_t)v162;
      uint64_t v122 = v159;
      _s7SwiftUI11ViewBuilderV11buildEither6secondAA19_ConditionalContentVyxq_Gq__tAA0C0RzAaIR_r0_lFZ_1(v159, v117, v119);
      (*(void (**)(uint64_t, uint64_t))(v156 + 8))(v122, v119);
      uint64_t v230 = v118;
      uint64_t v231 = v120;
      uint64_t v123 = v165;
      swift_getWitnessTable();
      _s7SwiftUI11ViewBuilderV11buildEither5firstAA19_ConditionalContentVyxq_Gx_tAA0C0RzAaIR_r0_lFZ_1(v121, v123);
      (*(void (**)(uint64_t, uint64_t))(v163 + 8))(v121, v123);
      ((void (*)(char *, uint64_t))v171)(v26, v105);
      break;
    case 8:
      static Color.white.getter();
      uint64_t v124 = v178;
      View.foregroundColor(_:)();
      swift_release();
      uint64_t v125 = lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Color?> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Color?> and conformance _EnvironmentKeyWritingModifier<A>, (uint64_t *)&demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Color?>);
      uint64_t v278 = v124;
      uint64_t v279 = v125;
      uint64_t v126 = v181;
      uint64_t v127 = swift_getWitnessTable();
      View.lineLimit(_:)();
      (*(void (**)(char *, uint64_t))(v173 + 8))(v26, v126);
      uint64_t v167 = lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Color?> and conformance _EnvironmentKeyWritingModifier<A>((unint64_t *)&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Int?>);
      uint64_t v276 = v127;
      uint64_t v277 = v167;
      uint64_t v128 = v175;
      uint64_t v129 = swift_getWitnessTable();
      long long v152 = v30;
      static ViewBuilder.buildExpression<A>(_:)(v28, v128, v129);
      int v130 = v171[1];
      ++v171;
      uint64_t v173 = (uint64_t)v130;
      v130(v28, v128);
      static ViewBuilder.buildExpression<A>(_:)(v30, v128, v129);
      uint64_t v131 = lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Color?> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<TextAlignment>);
      uint64_t v274 = v129;
      uint64_t v275 = v131;
      uint64_t v132 = swift_getWitnessTable();
      uint64_t v272 = v129;
      uint64_t v273 = v132;
      uint64_t v133 = swift_getWitnessTable();
      uint64_t v134 = lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Color?> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Text.Case?> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Text.Case?>);
      uint64_t v270 = v127;
      uint64_t v271 = v134;
      uint64_t v268 = swift_getWitnessTable();
      uint64_t v269 = v167;
      uint64_t v266 = swift_getWitnessTable();
      uint64_t v267 = v127;
      uint64_t v135 = swift_getWitnessTable();
      uint64_t v264 = v133;
      uint64_t v265 = v135;
      uint64_t v136 = v165;
      swift_getWitnessTable();
      _s7SwiftUI11ViewBuilderV11buildEither6secondAA19_ConditionalContentVyxq_Gq__tAA0C0RzAaIR_r0_lFZ_1((uint64_t)v28, v136, v128);
      int v137 = (void (*)(char *, uint64_t))v173;
      ((void (*)(char *, uint64_t))v173)(v28, v128);
      v137(v152, v128);
      break;
    default:
      static Color.primary.getter();
      uint64_t v59 = v178;
      View.foregroundColor(_:)();
      swift_release();
      uint64_t v60 = lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Color?> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Color?> and conformance _EnvironmentKeyWritingModifier<A>, (uint64_t *)&demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Color?>);
      uint64_t v196 = v59;
      uint64_t v197 = v60;
      uint64_t v61 = v181;
      uint64_t v62 = swift_getWitnessTable();
      View.lineLimit(_:)();
      (*(void (**)(char *, uint64_t))(v173 + 8))(v26, v61);
      uint64_t v167 = lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Color?> and conformance _EnvironmentKeyWritingModifier<A>((unint64_t *)&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Int?>);
      uint64_t v194 = v62;
      uint64_t v195 = v167;
      uint64_t v63 = v175;
      uint64_t v64 = swift_getWitnessTable();
      long long v152 = v30;
      static ViewBuilder.buildExpression<A>(_:)(v28, v63, v64);
      uint64_t v65 = v171 + 1;
      uint64_t v66 = v171[1];
      v66(v28, v63);
      uint64_t v171 = v65;
      uint64_t v173 = (uint64_t)v66;
      static ViewBuilder.buildExpression<A>(_:)(v30, v63, v64);
      uint64_t v67 = lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Color?> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<TextAlignment>);
      uint64_t v192 = v64;
      uint64_t v193 = v67;
      uint64_t v68 = swift_getWitnessTable();
      _s7SwiftUI11ViewBuilderV11buildEither5firstAA19_ConditionalContentVyxq_Gx_tAA0C0RzAaIR_r0_lFZ_1((uint64_t)v28, v63);
      v66(v28, v63);
      uint64_t v190 = v64;
      uint64_t v191 = v68;
      uint64_t v69 = v177;
      uint64_t v166 = swift_getWitnessTable();
      uint64_t v70 = lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Color?> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Text.Case?> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Text.Case?>);
      uint64_t v188 = v62;
      uint64_t v189 = v70;
      uint64_t v186 = swift_getWitnessTable();
      uint64_t v187 = v167;
      uint64_t v184 = swift_getWitnessTable();
      uint64_t v185 = v62;
      uint64_t v71 = swift_getWitnessTable();
      uint64_t v72 = (uint64_t)v162;
      uint64_t v73 = v160;
      uint64_t v74 = v166;
      _s7SwiftUI11ViewBuilderV11buildEither5firstAA19_ConditionalContentVyxq_Gx_tAA0C0RzAaIR_r0_lFZ_1(v160, v69);
      (*(void (**)(uint64_t, uint64_t))(v158 + 8))(v73, v69);
      uint64_t v182 = v74;
      uint64_t v183 = v71;
      uint64_t v75 = v165;
      swift_getWitnessTable();
      _s7SwiftUI11ViewBuilderV11buildEither5firstAA19_ConditionalContentVyxq_Gx_tAA0C0RzAaIR_r0_lFZ_1(v72, v75);
      (*(void (**)(uint64_t, uint64_t))(v163 + 8))(v72, v75);
      ((void (*)(char *, uint64_t))v173)(v152, v63);
      break;
  }
  uint64_t v138 = lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Color?> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Color?> and conformance _EnvironmentKeyWritingModifier<A>, (uint64_t *)&demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Color?>);
  uint64_t v262 = v178;
  uint64_t v263 = v138;
  uint64_t v139 = swift_getWitnessTable();
  uint64_t v140 = lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Color?> and conformance _EnvironmentKeyWritingModifier<A>((unint64_t *)&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Int?>);
  uint64_t v260 = v139;
  uint64_t v261 = v140;
  uint64_t v141 = swift_getWitnessTable();
  uint64_t v142 = lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Color?> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<TextAlignment>);
  uint64_t v258 = v141;
  uint64_t v259 = v142;
  uint64_t v143 = swift_getWitnessTable();
  uint64_t v256 = v141;
  uint64_t v257 = v143;
  uint64_t v144 = swift_getWitnessTable();
  uint64_t v145 = lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Color?> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Text.Case?> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Text.Case?>);
  uint64_t v254 = v139;
  uint64_t v255 = v145;
  uint64_t v252 = swift_getWitnessTable();
  uint64_t v253 = v140;
  uint64_t v250 = swift_getWitnessTable();
  uint64_t v251 = v139;
  uint64_t v146 = swift_getWitnessTable();
  uint64_t v248 = v144;
  uint64_t v249 = v146;
  uint64_t v246 = swift_getWitnessTable();
  uint64_t v247 = v141;
  uint64_t v147 = v169;
  uint64_t v148 = swift_getWitnessTable();
  long long v149 = v176;
  static ViewBuilder.buildExpression<A>(_:)(v176, v147, v148);
  return (*(uint64_t (**)(char *, uint64_t))(v168 + 8))(v149, v147);
}

uint64_t Text.with(style:)@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v8 = specialized static Text.PreConfigured(_:style:)(a2, a3, a4 & 1, a5, a1);
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  char v14 = v13 & 1;
  outlined copy of Text.Storage(v8, v9, v13 & 1);
  swift_bridgeObjectRetain();
  specialized static Text.PostConfigured<A>(_:style:)(v8, v10, v14, v12, a1, a6);
  outlined consume of Text.Storage(v8, v10, v14);
  swift_bridgeObjectRelease();
  outlined consume of Text.Storage(v8, v10, v14);

  return swift_bridgeObjectRelease();
}

uint64_t specialized static Text.PreConfigured(_:style:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  switch(a5)
  {
    case 2:
    case 4:
    case 6:
    case 7:
      static Font.body.getter();
      goto LABEL_6;
    case 5:
      static Font.Weight.semibold.getter();
      uint64_t v5 = Text.fontWeight(_:)();
      uint64_t v7 = v6;
      char v9 = v8 & 1;
      static Font.caption.getter();
      uint64_t v10 = Text.font(_:)();
      swift_release();
      outlined consume of Text.Storage(v5, v7, v9);
      swift_bridgeObjectRelease();
      return v10;
    case 8:
      static Font.title3.getter();
      goto LABEL_6;
    default:
      static Font.title2.getter();
LABEL_6:
      uint64_t v10 = Text.font(_:)();
      swift_release();
      return v10;
  }
}

unint64_t lazy protocol witness table accessor for type Text.TitleKind and conformance Text.TitleKind()
{
  unint64_t result = lazy protocol witness table cache variable for type Text.TitleKind and conformance Text.TitleKind;
  if (!lazy protocol witness table cache variable for type Text.TitleKind and conformance Text.TitleKind)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Text.TitleKind and conformance Text.TitleKind);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for Text.Style(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xF8)
  {
    unsigned int v2 = a2 + 8;
    if (a2 + 8 >= 0xFFFF00) {
      unsigned int v3 = 4;
    }
    else {
      unsigned int v3 = 2;
    }
    if (v2 >> 8 < 0xFF) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x100) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = a1[1];
        if (!a1[1]) {
          break;
        }
        return (*a1 | (v5 << 8)) - 8;
      case 2:
        int v5 = *(unsigned __int16 *)(a1 + 1);
        if (*(_WORD *)(a1 + 1)) {
          return (*a1 | (v5 << 8)) - 8;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x100448928);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 8)) - 8;
      default:
        break;
    }
  }
  unsigned int v7 = *a1;
  if (v7 >= 3) {
    unsigned int v8 = v7 - 2;
  }
  else {
    unsigned int v8 = 0;
  }
  if (v8 >= 7) {
    return v8 - 6;
  }
  else {
    return 0;
  }
}

unsigned char *storeEnumTagSinglePayload for Text.Style(unsigned char *result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 8;
  if (a3 + 8 >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xF8) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v7 = ((a2 - 248) >> 8) + 1;
    *unint64_t result = a2 + 8;
    switch(v6)
    {
      case 1:
        result[1] = v7;
        break;
      case 2:
        *(_WORD *)(result + 1) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0x100448A10);
      case 4:
        *(_DWORD *)(result + 1) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *unint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

uint64_t getEnumTag for Text.Style(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  if (v1 >= 3) {
    return v1 - 2;
  }
  else {
    return 0;
  }
}

unsigned char *destructiveInjectEnumTag for Text.Style(unsigned char *result, int a2)
{
  if (a2) {
    *unint64_t result = a2 + 2;
  }
  return result;
}

ValueMetadata *type metadata accessor for Text.Style()
{
  return &type metadata for Text.Style;
}

unsigned char *storeEnumTagSinglePayload for Text.TitleKind(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100448B38);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Text.TitleKind()
{
  return &type metadata for Text.TitleKind;
}

uint64_t sub_100448B70()
{
  return swift_getWitnessTable();
}

uint64_t lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Color?> and conformance _EnvironmentKeyWritingModifier<A>(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type _ConditionalContent<_ConditionalContent<_ConditionalContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>>, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Text.Case?>>, _EnvironmentKeyWritingModifier<Int?>>, ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>>>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>> and conformance <> _ConditionalContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type _ConditionalContent<_ConditionalContent<_ConditionalContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>>, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Text.Case?>>, _EnvironmentKeyWritingModifier<Int?>>, ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>>>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>> and conformance <> _ConditionalContent<A, B>;
  if (!lazy protocol witness table cache variable for type _ConditionalContent<_ConditionalContent<_ConditionalContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>>, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Text.Case?>>, _EnvironmentKeyWritingModifier<Int?>>, ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>>>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>> and conformance <> _ConditionalContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _ConditionalContent<_ConditionalContent<_ConditionalContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>>, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Text.Case?>>, _EnvironmentKeyWritingModifier<Int?>>, ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>>>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>>);
    lazy protocol witness table accessor for type _ConditionalContent<_ConditionalContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>>, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Text.Case?>>, _EnvironmentKeyWritingModifier<Int?>>, ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>>> and conformance <> _ConditionalContent<A, B>(&lazy protocol witness table cache variable for type _ConditionalContent<_ConditionalContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>>, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Text.Case?>>, _EnvironmentKeyWritingModifier<Int?>>, ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>>> and conformance <> _ConditionalContent<A, B>, &demangling cache variable for type metadata for _ConditionalContent<_ConditionalContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>>, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Text.Case?>>, _EnvironmentKeyWritingModifier<Int?>>, ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>>>, (void (*)(void))lazy protocol witness table accessor for type _ConditionalContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>> and conformance <> _ConditionalContent<A, B>, (void (*)(void))lazy protocol witness table accessor for type _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Text.Case?>>, _EnvironmentKeyWritingModifier<Int?>>, ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>> and conformance <> _ConditionalContent<A, B>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Text.Case?>> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, (unint64_t *)&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Int?>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type _ConditionalContent<_ConditionalContent<_ConditionalContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>>, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Text.Case?>>, _EnvironmentKeyWritingModifier<Int?>>, ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>>>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>> and conformance <> _ConditionalContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type _ConditionalContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>> and conformance <> _ConditionalContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type _ConditionalContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>> and conformance <> _ConditionalContent<A, B>;
  if (!lazy protocol witness table cache variable for type _ConditionalContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>> and conformance <> _ConditionalContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Text.Case?>> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, (unint64_t *)&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Int?>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>> and conformance <> ModifiedContent<A, B>();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type _ConditionalContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>> and conformance <> _ConditionalContent<A, B>);
  }
  return result;
}

uint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Text.Case?>> and conformance <> ModifiedContent<A, B>(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    lazy protocol witness table accessor for type ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Color?> and conformance _EnvironmentKeyWritingModifier<A>(a3, a4);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Text.Case?>> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, (unint64_t *)&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Int?>);
    lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Color?> and conformance _EnvironmentKeyWritingModifier<A>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<TextAlignment>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t lazy protocol witness table accessor for type _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Text.Case?>>, _EnvironmentKeyWritingModifier<Int?>>, ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>> and conformance <> _ConditionalContent<A, B>()
{
  return lazy protocol witness table accessor for type _ConditionalContent<_ConditionalContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>>, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Text.Case?>>, _EnvironmentKeyWritingModifier<Int?>>, ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>>> and conformance <> _ConditionalContent<A, B>(&lazy protocol witness table cache variable for type _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Text.Case?>>, _EnvironmentKeyWritingModifier<Int?>>, ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>> and conformance <> _ConditionalContent<A, B>, &demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Text.Case?>>, _EnvironmentKeyWritingModifier<Int?>>, ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>>, (void (*)(void))lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Text.Case?>>, _EnvironmentKeyWritingModifier<Int?>> and conformance <> ModifiedContent<A, B>, (void (*)(void))lazy protocol witness table accessor for type ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>);
}

uint64_t lazy protocol witness table accessor for type _ConditionalContent<_ConditionalContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<TextAlignment>>>, _ConditionalContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Text.Case?>>, _EnvironmentKeyWritingModifier<Int?>>, ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>>> and conformance <> _ConditionalContent<A, B>(unint64_t *a1, uint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Text.Case?>>, _EnvironmentKeyWritingModifier<Int?>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Text.Case?>>, _EnvironmentKeyWritingModifier<Int?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Text.Case?>>, _EnvironmentKeyWritingModifier<Int?>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Text.Case?>>, _EnvironmentKeyWritingModifier<Int?>>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Text.Case?>> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Text.Case?>> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Text.Case?>>, &lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Text.Case?> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Text.Case?>);
    lazy protocol witness table accessor for type _EnvironmentKeyWritingModifier<Color?> and conformance _EnvironmentKeyWritingModifier<A>((unint64_t *)&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Int?>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Text.Case?>>, _EnvironmentKeyWritingModifier<Int?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t outlined init with take of ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Text.Case?>>, _EnvironmentKeyWritingModifier<Int?>>(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Text.Case?>>, _EnvironmentKeyWritingModifier<Int?>>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t VerticalToggleSlider.packageDefinition.getter@<X0>(uint64_t *a1@<X8>)
{
  int v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_packageDefinition);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  unsigned int v6 = (void *)v3[2];
  uint64_t v7 = v3[3];
  uint64_t v8 = v3[4];
  uint64_t v9 = v3[5];
  uint64_t v10 = v3[6];
  uint64_t v11 = v3[7];
  uint64_t v14 = v3[9];
  uint64_t v13 = v3[8];
  uint64_t result = outlined copy of CAPackageDefinition?(*v3, v5, v6);
  *a1 = v4;
  a1[1] = v5;
  a1[2] = (uint64_t)v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  a1[6] = v10;
  a1[7] = v11;
  a1[8] = v13;
  a1[9] = v14;
  return result;
}

void *VerticalToggleSlider.packageDefinition.setter(void *a1)
{
  int v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_packageDefinition);
  swift_beginAccess();
  outlined init with take of CAPackageDefinition?((uint64_t)v3, (uint64_t)v8);
  uint64_t v4 = v3[1];
  uint64_t v5 = (void *)v3[2];
  uint64_t v7 = *v3;
  outlined init with take of CAPackageDefinition?((uint64_t)a1, (uint64_t)v3);
  outlined retain of CAPackageDefinition?(v8, (void (*)(void, void, void, void, void, void, void, void, void, void))outlined copy of CAPackageDefinition?);
  outlined retain of CAPackageDefinition?(a1, (void (*)(void, void, void, void, void, void, void, void, void, void))outlined copy of CAPackageDefinition?);
  outlined consume of CAPackageDefinition?(v7, v4, v5);
  VerticalToggleSlider.packageDefinition.didset((uint64_t)v8);
  outlined retain of CAPackageDefinition?(a1, (void (*)(void, void, void, void, void, void, void, void, void, void))outlined consume of CAPackageDefinition?);
  return outlined retain of CAPackageDefinition?(v8, (void (*)(void, void, void, void, void, void, void, void, void, void))outlined consume of CAPackageDefinition?);
}

void (*VerticalToggleSlider.packageDefinition.modify(void *a1))(uint64_t *a1, char a2)
{
  int v3 = malloc(0x118uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_packageDefinition;
  v3[33] = v1;
  v3[34] = v4;
  uint64_t v5 = (uint64_t *)(v1 + v4);
  swift_beginAccess();
  uint64_t v6 = *v5;
  uint64_t v7 = v5[1];
  uint64_t v8 = (void *)v5[2];
  uint64_t v9 = v5[3];
  uint64_t v10 = v5[4];
  uint64_t v11 = v5[5];
  uint64_t v12 = v5[6];
  uint64_t v13 = v5[7];
  uint64_t v14 = v5[8];
  uint64_t v15 = v5[9];
  v3[20] = *v5;
  v3[21] = v7;
  v3 += 20;
  v3[2] = v8;
  v3[3] = v9;
  v3[4] = v10;
  v3[5] = v11;
  v3[6] = v12;
  v3[7] = v13;
  v3[8] = v14;
  v3[9] = v15;
  outlined copy of CAPackageDefinition?(v6, v7, v8);
  return VerticalToggleSlider.packageDefinition.modify;
}

void VerticalToggleSlider.packageDefinition.modify(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *(void *)(*a1 + 160);
  uint64_t v5 = *(void *)(*a1 + 168);
  uint64_t v4 = *(void **)(*a1 + 176);
  uint64_t v7 = *(void *)(*a1 + 184);
  uint64_t v6 = *(void *)(*a1 + 192);
  uint64_t v9 = *(void *)(*a1 + 200);
  uint64_t v8 = *(void *)(*a1 + 208);
  uint64_t v10 = *(void *)(*a1 + 216);
  uint64_t v20 = *(void *)(*a1 + 224);
  uint64_t v21 = *(void *)(*a1 + 232);
  uint64_t v12 = *(void *)(*a1 + 264);
  uint64_t v11 = *(void *)(*a1 + 272);
  uint64_t v13 = (uint64_t *)(v12 + v11);
  if (a2)
  {
    outlined init with take of CAPackageDefinition?(v12 + v11, v2);
    uint64_t v18 = *v13;
    uint64_t v14 = (void *)v13[2];
    uint64_t v16 = v13[1];
    *uint64_t v13 = v3;
    v13[1] = v5;
    _OWORD v13[2] = (uint64_t)v4;
    v13[3] = v7;
    v13[4] = v6;
    _OWORD v13[5] = v9;
    v13[6] = v8;
    v13[7] = v10;
    _OWORD v13[8] = v20;
    v13[9] = v21;
    outlined copy of CAPackageDefinition?(v3, v5, v4);
    outlined copy of CAPackageDefinition?(v3, v5, v4);
    outlined retain of CAPackageDefinition?((void *)v2, (void (*)(void, void, void, void, void, void, void, void, void, void))outlined copy of CAPackageDefinition?);
    outlined consume of CAPackageDefinition?(v18, v16, v14);
    VerticalToggleSlider.packageDefinition.didset(v2);
    outlined consume of CAPackageDefinition?(v3, v5, v4);
    outlined retain of CAPackageDefinition?((void *)v2, (void (*)(void, void, void, void, void, void, void, void, void, void))outlined consume of CAPackageDefinition?);
    outlined consume of CAPackageDefinition?(*(void *)(v2 + 160), *(void *)(v2 + 168), *(void **)(v2 + 176));
  }
  else
  {
    outlined init with take of CAPackageDefinition?(v12 + v11, v2 + 80);
    uint64_t v19 = *v13;
    uint64_t v15 = (void *)v13[2];
    uint64_t v17 = v13[1];
    *uint64_t v13 = v3;
    v13[1] = v5;
    _OWORD v13[2] = (uint64_t)v4;
    v13[3] = v7;
    v13[4] = v6;
    _OWORD v13[5] = v9;
    v13[6] = v8;
    v13[7] = v10;
    _OWORD v13[8] = v20;
    v13[9] = v21;
    outlined retain of CAPackageDefinition?((void *)(v2 + 80), (void (*)(void, void, void, void, void, void, void, void, void, void))outlined copy of CAPackageDefinition?);
    outlined copy of CAPackageDefinition?(v3, v5, v4);
    outlined consume of CAPackageDefinition?(v19, v17, v15);
    VerticalToggleSlider.packageDefinition.didset(v2 + 80);
    outlined consume of CAPackageDefinition?(v3, v5, v4);
    outlined retain of CAPackageDefinition?((void *)(v2 + 80), (void (*)(void, void, void, void, void, void, void, void, void, void))outlined consume of CAPackageDefinition?);
  }

  free((void *)v2);
}

BOOL VerticalToggleSlider.isOn.getter()
{
  return *(unsigned char *)(v0 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode) != 2;
}

void VerticalToggleSlider.isOn.setter(char a1)
{
  if (a1) {
    char v2 = 0;
  }
  else {
    char v2 = 2;
  }
  unsigned __int8 v3 = *(unsigned char *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode);
  *(unsigned char *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode) = v2;
  VerticalToggleSlider.mode.didset(v3);
}

void (*VerticalToggleSlider.isOn.modify(uint64_t a1))(uint64_t *a1)
{
  uint64_t v2 = OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode;
  *(void *)a1 = v1;
  *(void *)(a1 + 8) = v2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(v1 + v2) != 2;
  return VerticalToggleSlider.isOn.modify;
}

void VerticalToggleSlider.isOn.modify(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v1 = a1[1];
  if (*((unsigned char *)a1 + 16)) {
    char v3 = 0;
  }
  else {
    char v3 = 2;
  }
  unsigned __int8 v4 = *(unsigned char *)(v2 + v1);
  *(unsigned char *)(v2 + v1) = v3;
  VerticalToggleSlider.mode.didset(v4);
}

void VerticalToggleSlider.value.getter()
{
  if (*(float *)(v0 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__minValue) > *(float *)(v0
                                                                                                 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__maxValue))
    __break(1u);
}

void VerticalToggleSlider.value.setter(float a1)
{
  float v2 = *(float *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__minValue);
  float v3 = *(float *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__maxValue);
  if (v2 > v3)
  {
    __break(1u);
  }
  else
  {
    if (v2 > a1) {
      a1 = *(float *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__minValue);
    }
    if (v3 < a1) {
      a1 = *(float *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__maxValue);
    }
    VerticalToggleSlider.internalValue.setter(*(float *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_internalValueRange)+ (float)((float)((float)(a1 - v2) / (float)(v3 - v2))* (float)(*(float *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_internalValueRange + 4)- *(float *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_internalValueRange))));
  }
}

void (*VerticalToggleSlider.value.modify(void (**a1)(float **a1, char a2)))(float **a1, char a2)
{
  uint64_t result = (void (*)(float **, char))malloc(0x28uLL);
  *a1 = result;
  uint64_t v4 = OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__minValue;
  *(void *)uint64_t result = v1;
  *((void *)result + 1) = v4;
  float v5 = *(float *)(v1 + v4);
  uint64_t v6 = OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__maxValue;
  *((void *)result + 2) = OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__maxValue;
  float v7 = *(float *)(v1 + v6);
  if (v5 > v7)
  {
    __break(1u);
  }
  else
  {
    uint64_t v8 = OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_internalValueRange;
    *((void *)result + 3) = OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_internalValueRange;
    uint64_t v9 = (float *)(v1 + v8);
    float v10 = v9[1];
    float v11 = *(float *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_internalValue);
    if (*v9 > v11) {
      float v11 = *v9;
    }
    if (v10 < v11) {
      float v11 = v9[1];
    }
    *((float *)result + 8) = v5 + (float)((float)(v7 - v5) * (float)((float)(v11 - *v9) / (float)(v10 - *v9)));
    return VerticalToggleSlider.value.modify;
  }
  return result;
}

void VerticalToggleSlider.value.modify(float **a1, char a2)
{
  float v2 = *a1;
  uint64_t v3 = *(void *)*a1;
  float v4 = *(float *)(v3 + *((void *)*a1 + 1));
  float v5 = *(float *)(v3 + *((void *)*a1 + 2));
  if (a2)
  {
    if (v4 <= v5) {
      goto LABEL_5;
    }
    __break(1u);
  }
  if (v4 > v5)
  {
    __break(1u);
    return;
  }
LABEL_5:
  float v6 = v2[8];
  if (v4 > v6) {
    float v6 = v4;
  }
  if (v5 < v6) {
    float v6 = v5;
  }
  VerticalToggleSlider.internalValue.setter(*(float *)(v3 + *((void *)v2 + 3))+ (float)((float)(*(float *)(v3 + *((void *)v2 + 3) + 4) - *(float *)(v3 + *((void *)v2 + 3)))* (float)((float)(v6 - v4) / (float)(v5 - v4))));

  free(v2);
}

float VerticalToggleSlider.minValue.getter()
{
  return *(float *)(v0 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__minValue);
}

void VerticalToggleSlider.minValue.setter(float a1)
{
  if (*(float *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__maxValue) <= a1)
  {
    v9[1] = 0xE000000000000000;
    _StringGuts.grow(_:)(145);
    v2._object = (void *)0x8000000100476B30;
    v2._uint64_t countAndFlagsBits = 0xD000000000000042;
    String.append(_:)(v2);
    Float.write<A>(to:)();
    v3._uint64_t countAndFlagsBits = 3026478;
    v3._object = (void *)0xE300000000000000;
    String.append(_:)(v3);
    Float.write<A>(to:)();
    v4._uint64_t countAndFlagsBits = 0xD000000000000048;
    v4._object = (void *)0x8000000100476B80;
    String.append(_:)(v4);
    if (one-time initialization token for musicCoreUI != -1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    __swift_project_value_buffer(v5, (uint64_t)static Logger.musicCoreUI);
    swift_bridgeObjectRetain();
    float v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = swift_slowAlloc();
      v9[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v8 = 136446210;
      swift_bridgeObjectRetain();
      *(void *)(v8 + 4) = _s2os32getNullTerminatedUTF8PointerImpl_21storingStringOwnersInSVSS_SpyypGSgztF_2(0, 0xE000000000000000, v9);
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "%{public}s", (uint8_t *)v8, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
  else
  {
    *(float *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__minValue) = a1;
  }
}

void (*VerticalToggleSlider.minValue.modify(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__minValue);
  return VerticalToggleSlider.minValue.modify;
}

void VerticalToggleSlider.minValue.modify(uint64_t a1)
{
}

float VerticalToggleSlider.maxValue.getter()
{
  return *(float *)(v0 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__maxValue);
}

void VerticalToggleSlider.maxValue.setter(float a1)
{
  if (*(float *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__minValue) >= a1)
  {
    v9[1] = 0xE000000000000000;
    _StringGuts.grow(_:)(145);
    v2._object = (void *)0x8000000100476B30;
    v2._uint64_t countAndFlagsBits = 0xD000000000000042;
    String.append(_:)(v2);
    Float.write<A>(to:)();
    v3._uint64_t countAndFlagsBits = 3026478;
    v3._object = (void *)0xE300000000000000;
    String.append(_:)(v3);
    Float.write<A>(to:)();
    v4._uint64_t countAndFlagsBits = 0xD000000000000048;
    v4._object = (void *)0x8000000100476B80;
    String.append(_:)(v4);
    if (one-time initialization token for musicCoreUI != -1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    __swift_project_value_buffer(v5, (uint64_t)static Logger.musicCoreUI);
    swift_bridgeObjectRetain();
    float v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = swift_slowAlloc();
      v9[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v8 = 136446210;
      swift_bridgeObjectRetain();
      *(void *)(v8 + 4) = _s2os32getNullTerminatedUTF8PointerImpl_21storingStringOwnersInSVSS_SpyypGSgztF_2(0, 0xE000000000000000, v9);
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "%{public}s", (uint8_t *)v8, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
  else
  {
    *(float *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__maxValue) = a1;
  }
}

void (*VerticalToggleSlider.maxValue.modify(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__maxValue);
  return VerticalToggleSlider.maxValue.modify;
}

void VerticalToggleSlider.maxValue.modify(uint64_t a1)
{
}

void VerticalToggleSlider.valueRange.getter()
{
  if (*(float *)(v0 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__minValue) > *(float *)(v0
                                                                                                 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__maxValue))
    __break(1u);
}

void VerticalToggleSlider.valueRange.setter(float a1, float a2)
{
  if (a1 >= a2)
  {
    v10[1] = 0xE000000000000000;
    _StringGuts.grow(_:)(164);
    v3._object = (void *)0x8000000100476B30;
    v3._uint64_t countAndFlagsBits = 0xD000000000000042;
    String.append(_:)(v3);
    Float.write<A>(to:)();
    v4._uint64_t countAndFlagsBits = 3026478;
    v4._object = (void *)0xE300000000000000;
    String.append(_:)(v4);
    Float.write<A>(to:)();
    v5._uint64_t countAndFlagsBits = 0xD00000000000005BLL;
    v5._object = (void *)0x8000000100476BD0;
    String.append(_:)(v5);
    if (one-time initialization token for musicCoreUI != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    __swift_project_value_buffer(v6, (uint64_t)static Logger.musicCoreUI);
    swift_bridgeObjectRetain();
    os_log_type_t v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = swift_slowAlloc();
      v10[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 136446210;
      swift_bridgeObjectRetain();
      *(void *)(v9 + 4) = _s2os32getNullTerminatedUTF8PointerImpl_21storingStringOwnersInSVSS_SpyypGSgztF_2(0, 0xE000000000000000, v10);
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "%{public}s", (uint8_t *)v9, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
  else
  {
    *(float *)(v2 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__minValue) = a1;
    *(float *)(v2 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__maxValue) = a2;
  }
}

void (*VerticalToggleSlider.valueRange.modify(void (*result)(uint64_t a1)))(uint64_t a1)
{
  *(void *)uint64_t result = v1;
  float v2 = *(float *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__minValue);
  float v3 = *(float *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__maxValue);
  if (v2 > v3)
  {
    __break(1u);
  }
  else
  {
    *((float *)result + 2) = v2;
    *((float *)result + 3) = v3;
    return VerticalToggleSlider.valueRange.modify;
  }
  return result;
}

void VerticalToggleSlider.valueRange.modify(uint64_t a1)
{
}

float VerticalToggleSlider.minLevelOffsetRatio.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_minLevelOffsetRatio;
  swift_beginAccess();
  return *(float *)v1;
}

void VerticalToggleSlider.minLevelOffsetRatio.setter(float a1)
{
  float v3 = (float *)&v1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_minLevelOffsetRatio];
  swift_beginAccess();
  float v4 = *v3;
  *float v3 = a1;
  if (v4 != a1)
  {
    VerticalToggleSlider.updateLevelViewPosition(forcedValue:)(0x100000000);
    id v5 = VerticalToggleSlider.levelView.getter();
    int v6 = v1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode];
    id v7 = [v1 traitCollection];
    os_log_type_t v8 = v7;
    if (v6 == 2)
    {

      double v9 = 0.0;
    }
    else if (v6)
    {

      double v9 = 1.0;
    }
    else
    {
      id v10 = [v7 accessibilityContrast];

      double v9 = 0.5;
      if (v10 == (id)1) {
        double v9 = 1.0;
      }
    }
    [v5 setAlpha:v9];
  }
}

void (*VerticalToggleSlider.minLevelOffsetRatio.modify(void *a1))(uint64_t a1, char a2)
{
  float v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_minLevelOffsetRatio;
  v3[3] = v1;
  v3[4] = v4;
  id v5 = (_DWORD *)(v1 + v4);
  swift_beginAccess();
  *((_DWORD *)v3 + 10) = *v5;
  return VerticalToggleSlider.minLevelOffsetRatio.modify;
}

void VerticalToggleSlider.minLevelOffsetRatio.modify(uint64_t a1, char a2)
{
  float v2 = *(void **)a1;
  float v3 = *(float *)(*(void *)a1 + 40);
  if (a2)
  {
    VerticalToggleSlider.minLevelOffsetRatio.setter(v3);
  }
  else
  {
    uint64_t v5 = v2[3];
    uint64_t v4 = v2[4];
    float v6 = *(float *)(v5 + v4);
    *(float *)(v5 + v4) = v3;
    if (v3 != v6)
    {
      id v7 = (unsigned __int8 *)v2[3];
      VerticalToggleSlider.updateLevelViewPosition(forcedValue:)(0x100000000);
      id v8 = VerticalToggleSlider.levelView.getter();
      int v9 = v7[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode];
      id v10 = [v7 traitCollection];
      float v11 = v10;
      if (v9 == 2)
      {

        double v12 = 0.0;
      }
      else if (v9)
      {

        double v12 = 1.0;
      }
      else
      {
        id v13 = [v10 accessibilityContrast];

        double v12 = 0.5;
        if (v13 == (id)1) {
          double v12 = 1.0;
        }
      }
      [v8 setAlpha:v12];
    }
  }

  free(v2);
}

uint64_t VerticalToggleSlider.interactionScaleFactor.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_interactionScaleFactor;
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t VerticalToggleSlider.interactionScaleFactor.setter(uint64_t a1, char a2)
{
  uint64_t v5 = v2 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_interactionScaleFactor;
  uint64_t result = swift_beginAccess();
  *(void *)uint64_t v5 = a1;
  *(unsigned char *)(v5 + 8) = a2 & 1;
  return result;
}

uint64_t (*VerticalToggleSlider.interactionScaleFactor.modify())()
{
  return ArtworkVideoReportingController.isEnabled.modify;
}

uint64_t VerticalToggleSlider.isTapToToggleEnabled.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_isTapToToggleEnabled);
  swift_beginAccess();
  return *v1;
}

uint64_t VerticalToggleSlider.isTapToToggleEnabled.setter(char a1)
{
  float v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_isTapToToggleEnabled);
  uint64_t result = swift_beginAccess();
  *float v3 = a1;
  return result;
}

uint64_t (*VerticalToggleSlider.isTapToToggleEnabled.modify())()
{
  return ArtworkVideoReportingController.videoArtworkContextProviding.modify;
}

uint64_t VerticalToggleSlider.isVisuallyDisabled.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_isVisuallyDisabled);
  swift_beginAccess();
  return *v1;
}

void VerticalToggleSlider.isVisuallyDisabled.setter(char a1)
{
  int v3 = a1 & 1;
  uint64_t v4 = &v1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_isVisuallyDisabled];
  swift_beginAccess();
  int v5 = *v4;
  char *v4 = a1;
  if (v5 != v3)
  {
    if (a1) {
      unsigned int v6 = 1;
    }
    else {
      unsigned int v6 = [v1 isEnabled] ^ 1;
    }
    id v7 = *(void **)&v1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_packageView];
    if (v7)
    {
      double v8 = 0.4;
      if (!v6) {
        double v8 = 1.0;
      }
      [v7 setAlpha:v8];
    }
    id v9 = VerticalToggleSlider.visualEffectView.getter();
    id v10 = v9;
    double v11 = 1.0;
    if (v6) {
      double v11 = 0.5;
    }
    [v9 setAlpha:v11];
  }
}

void (*VerticalToggleSlider.isVisuallyDisabled.modify(void *a1))(uint64_t *a1, char a2)
{
  int v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_isVisuallyDisabled;
  v3[3] = v1;
  v3[4] = v4;
  int v5 = (unsigned char *)(v1 + v4);
  swift_beginAccess();
  *((unsigned char *)v3 + 40) = *v5;
  return VerticalToggleSlider.isVisuallyDisabled.modify;
}

void VerticalToggleSlider.isVisuallyDisabled.modify(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  int v3 = *(unsigned __int8 *)(*a1 + 40);
  if (a2)
  {
    VerticalToggleSlider.isVisuallyDisabled.setter(v3);
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 24);
    uint64_t v4 = *(void *)(v2 + 32);
    int v6 = *(unsigned __int8 *)(v5 + v4);
    *(unsigned char *)(v5 + v4) = v3;
    if (v3 != v6)
    {
      if (v3) {
        unsigned int v7 = 1;
      }
      else {
        unsigned int v7 = [*(id *)(v2 + 24) isEnabled] ^ 1;
      }
      double v8 = *(void **)(*(void *)(v2 + 24) + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_packageView);
      if (v8)
      {
        double v9 = 0.4;
        if (!v7) {
          double v9 = 1.0;
        }
        [v8 setAlpha:v9];
      }
      id v10 = VerticalToggleSlider.visualEffectView.getter();
      double v11 = v10;
      double v12 = 1.0;
      if (v7) {
        double v12 = 0.5;
      }
      [v10 setAlpha:v12];
    }
  }

  free((void *)v2);
}

uint64_t VerticalToggleSlider.isContinuous.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_isContinuous);
  swift_beginAccess();
  return *v1;
}

uint64_t VerticalToggleSlider.isContinuous.setter(char a1)
{
  int v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_isContinuous);
  uint64_t result = swift_beginAccess();
  *int v3 = a1;
  return result;
}

uint64_t (*VerticalToggleSlider.isContinuous.modify())()
{
  return ArtworkVideoReportingController.isEnabled.modify;
}

uint64_t VerticalToggleSlider.accessibilityAutomaticallyDisablesOnMaxValue.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_automaticallyDisablesOnMaxValue);
  swift_beginAccess();
  return *v1;
}

uint64_t VerticalToggleSlider.automaticallyDisablesOnMaxValue.setter(char a1)
{
  int v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_automaticallyDisablesOnMaxValue);
  uint64_t result = swift_beginAccess();
  *int v3 = a1;
  return result;
}

uint64_t (*VerticalToggleSlider.automaticallyDisablesOnMaxValue.modify())()
{
  return ArtworkVideoReportingController.isEnabled.modify;
}

uint64_t VerticalToggleSlider.longPressMode.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_longPressMode);
  swift_beginAccess();
  return *v1;
}

void VerticalToggleSlider.longPressMode.setter(unsigned __int8 a1)
{
  int v3 = (unsigned __int8 *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_longPressMode);
  swift_beginAccess();
  int v4 = *v3;
  *int v3 = a1;
  if (v4 != a1) {
    VerticalToggleSlider.setupLongPressGestureRecognizer()();
  }
}

void (*VerticalToggleSlider.longPressMode.modify(void *a1))(uint64_t a1)
{
  int v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_longPressMode;
  v3[3] = v1;
  v3[4] = v4;
  uint64_t v5 = (unsigned char *)(v1 + v4);
  swift_beginAccess();
  *((unsigned char *)v3 + 40) = *v5;
  return VerticalToggleSlider.longPressMode.modify;
}

void VerticalToggleSlider.longPressMode.modify(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  int v2 = *(unsigned __int8 *)(*(void *)a1 + 40);
  uint64_t v4 = *(void *)(*(void *)a1 + 24);
  uint64_t v3 = *(void *)(*(void *)a1 + 32);
  int v5 = *(unsigned __int8 *)(v4 + v3);
  *(unsigned char *)(v4 + v3) = v2;
  if (v2 != v5) {
    VerticalToggleSlider.setupLongPressGestureRecognizer()();
  }

  free(v1);
}

uint64_t VerticalToggleSlider.isBeingInteractedWith.getter()
{
  return *(unsigned char *)(v0 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode) & 1;
}

uint64_t VerticalToggleSlider.growAnchorPoint.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_growAnchorPoint);
  swift_beginAccess();
  return *v1;
}

void VerticalToggleSlider.growAnchorPoint.setter(char a1)
{
  uint64_t v3 = &v1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_growAnchorPoint];
  swift_beginAccess();
  *uint64_t v3 = a1;
  id v4 = VerticalToggleSlider.growView.getter();
  uint64_t v5 = *v3;
  id v6 = [v1 traitCollection];
  *(void *)&double v7 = VerticalToggleSlider.AnchorPoint.location(for:)(v6, v5).n128_u64[0];
  double v9 = v8;

  objc_msgSend(v4, "setAnchorPoint:", v7, v9);
  id v10 = VerticalToggleSlider.growView.getter();
  [v1 bounds];
  objc_msgSend(v10, "setFrame:");
}

void (*VerticalToggleSlider.growAnchorPoint.modify(void *a1))(void **a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_growAnchorPoint;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess();
  return VerticalToggleSlider.growAnchorPoint.modify;
}

void VerticalToggleSlider.growAnchorPoint.modify(void **a1, char a2)
{
  uint64_t v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    uint64_t v4 = (unsigned __int8 *)v3[3];
    uint64_t v5 = v3[4];
    id v6 = VerticalToggleSlider.growView.getter();
    uint64_t v7 = v4[v5];
    id v8 = [v4 traitCollection];
    *(void *)&double v9 = VerticalToggleSlider.AnchorPoint.location(for:)(v8, v7).n128_u64[0];
    double v11 = v10;

    objc_msgSend(v6, "setAnchorPoint:", v9, v11);
    id v12 = VerticalToggleSlider.growView.getter();
    [v4 bounds];
    objc_msgSend(v12, "setFrame:");
  }

  free(v3);
}

id VerticalToggleSlider.stretchView.getter()
{
  uint64_t v1 = OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider____lazy_storage___stretchView;
  int v2 = *(void **)&v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider____lazy_storage___stretchView];
  if (v2)
  {
    id v3 = *(id *)&v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider____lazy_storage___stretchView];
  }
  else
  {
    [v0 bounds];
    id v8 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", v4, v5, v6, v7);
    double v9 = *(void **)&v0[v1];
    *(void *)&v0[v1] = v8;
    id v3 = v8;

    int v2 = 0;
  }
  id v10 = v2;
  return v3;
}

id VerticalToggleSlider.growView.getter()
{
  uint64_t v1 = OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider____lazy_storage___growView;
  int v2 = *(void **)(v0 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider____lazy_storage___growView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider____lazy_storage___growView);
  }
  else
  {
    id v4 = VerticalToggleSlider.stretchView.getter();
    [v4 bounds];
    double v6 = v5;
    double v8 = v7;
    double v10 = v9;
    double v12 = v11;

    id v13 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", v6, v8, v10, v12);
    uint64_t v14 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v13;
    id v3 = v13;

    int v2 = 0;
  }
  id v15 = v2;
  return v3;
}

void VerticalToggleSlider.internalValue.setter(float a1)
{
  float v2 = *(float *)&v1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_internalValue];
  *(float *)&v1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_internalValue] = a1;
  if (v2 != a1)
  {
    uint64_t v3 = OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode;
    if ((v1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode] & 1) == 0)
    {
      VerticalToggleSlider.updateLevelViewPosition(forcedValue:)(0x100000000);
      id v9 = VerticalToggleSlider.levelView.getter();
      int v4 = v1[v3];
      id v5 = [v1 traitCollection];
      double v6 = v5;
      if (v4 == 2)
      {

        double v7 = 0.0;
      }
      else if (v4)
      {

        double v7 = 1.0;
      }
      else
      {
        id v8 = [v5 accessibilityContrast];

        double v7 = 0.5;
        if (v8 == (id)1) {
          double v7 = 1.0;
        }
      }
      [v9 setAlpha:v7];
    }
  }
}

id VerticalToggleSlider.feedbackGenerator.getter()
{
  uint64_t v1 = OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider____lazy_storage___feedbackGenerator;
  float v2 = *(void **)(v0 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider____lazy_storage___feedbackGenerator);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider____lazy_storage___feedbackGenerator);
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)_UIButtonFeedbackGenerator) initWithStyle:1];
    id v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    float v2 = 0;
  }
  id v6 = v2;
  return v3;
}

void VerticalToggleSlider.updateColors()()
{
  id v1 = [v0 traitCollection];
  id v2 = [v1 accessibilityContrast];

  id v3 = VerticalToggleSlider.visualEffectView.getter();
  id v4 = [v3 contentView];

  id v5 = [v4 layer];
  if (v2 != (id)1)
  {
    [v5 setCompositingFilter:kCAFilterPlusL];

    id v12 = VerticalToggleSlider.visualEffectView.getter();
    id v13 = [v12 contentView];

    uint64_t v14 = self;
    id v15 = [v14 whiteColor];
    id v16 = [v15 colorWithAlphaComponent:0.18];

    [v13 setBackgroundColor:v16];
    id v17 = VerticalToggleSlider.levelView.getter();
    id v18 = [v14 whiteColor];
    [v17 setBackgroundColor:v18];
LABEL_8:

    VerticalToggleSlider.updatePackageColors()();
    return;
  }
  [v5 setCompositingFilter:0];

  int v6 = v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode];
  id v7 = VerticalToggleSlider.visualEffectView.getter();
  id v8 = [v7 contentView];

  if (v6 != 2)
  {
    id v19 = objc_allocWithZone((Class)UIColor);
    void v22[4] = closure #1 in VerticalToggleSlider.updateColors();
    v22[5] = 0;
    v22[0] = _NSConcreteStackBlock;
    v22[1] = 1107296256;
    v22[2] = thunk for @escaping @callee_guaranteed (@guaranteed UITraitCollection) -> (@owned UIColor);
    v22[3] = &block_descriptor_104_0;
    uint64_t v20 = _Block_copy(v22);
    id v21 = [v19 initWithDynamicProvider:v20];
    _Block_release(v20);
    swift_release();
    [v8 setBackgroundColor:v21];

    goto LABEL_7;
  }
  id v9 = [v0 tintColor];
  if (v9)
  {
    double v10 = v9;
    id v11 = [v9 colorWithAlphaComponent:0.2];

    [v8 setBackgroundColor:v11];
LABEL_7:
    id v18 = VerticalToggleSlider.levelView.getter();
    id v17 = [v0 tintColor];
    [v18 setBackgroundColor:v17];
    goto LABEL_8;
  }
  __break(1u);
}

id VerticalToggleSlider.visualEffectView.getter()
{
  uint64_t v1 = OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider____lazy_storage___visualEffectView;
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider____lazy_storage___visualEffectView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider____lazy_storage___visualEffectView);
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)UIVisualEffectView) initWithEffect:*(void *)(v0 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_blurEffect)];
    id v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    id v2 = 0;
  }
  id v6 = v2;
  return v3;
}

void VerticalToggleSlider.packageView.setter(void *a1)
{
  id v3 = *(void **)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_packageView);
  *(void *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_packageView) = a1;
  id v7 = a1;
  if (a1)
  {
    if (!v3) {
      goto LABEL_8;
    }
    type metadata accessor for CoreAnimationPackageView();
    id v4 = v3;
    id v5 = v7;
    char v6 = static NSObject.== infix(_:_:)();

    if (v6) {
      goto LABEL_7;
    }
  }
  else if (!v3)
  {
    goto LABEL_8;
  }
  [v3 removeFromSuperview];
  id v4 = v3;
LABEL_7:

LABEL_8:
}

id VerticalToggleSlider.levelView.getter()
{
  uint64_t v1 = OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider____lazy_storage___levelView;
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider____lazy_storage___levelView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider____lazy_storage___levelView);
  }
  else
  {
    id v4 = VerticalToggleSlider.visualEffectView.getter();
    [v4 bounds];
    double v6 = v5;
    double v8 = v7;
    double v10 = v9;
    double v12 = v11;

    id v13 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", v6, v8, v10, v12);
    uint64_t v14 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v13;
    id v3 = v13;

    id v2 = 0;
  }
  id v15 = v2;
  return v3;
}

void VerticalToggleSlider.setupView()()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIView.Corner?);
  __chkstk_darwin();
  id v2 = &v62[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  [v0 setClipsToBounds:0];
  id v3 = VerticalToggleSlider.growView.getter();
  [v3 setUserInteractionEnabled:0];

  id v4 = VerticalToggleSlider.growView.getter();
  [v4 setAutoresizingMask:18];

  id v5 = VerticalToggleSlider.growView.getter();
  double v6 = &v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_growAnchorPoint];
  swift_beginAccess();
  uint64_t v7 = *v6;
  id v8 = [v0 traitCollection];
  *(void *)&double v9 = VerticalToggleSlider.AnchorPoint.location(for:)(v8, v7).n128_u64[0];
  double v11 = v10;

  objc_msgSend(v5, "setAnchorPoint:", v9, v11);
  id v12 = VerticalToggleSlider.growView.getter();
  [v0 bounds];
  objc_msgSend(v12, "setFrame:");

  id v13 = VerticalToggleSlider.growView.getter();
  [v0 addSubview:v13];

  id v14 = VerticalToggleSlider.stretchView.getter();
  [v14 setClipsToBounds:1];

  id v15 = VerticalToggleSlider.stretchView.getter();
  [v15 setUserInteractionEnabled:0];

  id v16 = VerticalToggleSlider.stretchView.getter();
  [v16 setAutoresizingMask:18];

  id v17 = VerticalToggleSlider.stretchView.getter();
  id v18 = VerticalToggleSlider.growView.getter();
  [v18 bounds];
  double v20 = v19;
  double v22 = v21;
  double v24 = v23;
  double v26 = v25;

  objc_msgSend(v17, "setFrame:", v20, v22, v24, v26);
  id v27 = VerticalToggleSlider.growView.getter();
  id v28 = VerticalToggleSlider.stretchView.getter();
  [v27 addSubview:v28];

  id v29 = VerticalToggleSlider.visualEffectView.getter();
  [v29 setUserInteractionEnabled:0];

  id v30 = VerticalToggleSlider.visualEffectView.getter();
  [v30 setClipsToBounds:0];

  id v31 = VerticalToggleSlider.visualEffectView.getter();
  [v31 setAutoresizingMask:18];

  id v32 = VerticalToggleSlider.visualEffectView.getter();
  id v33 = VerticalToggleSlider.stretchView.getter();
  [v33 bounds];
  double v35 = v34;
  double v37 = v36;
  double v39 = v38;
  double v41 = v40;

  objc_msgSend(v32, "setFrame:", v35, v37, v39, v41);
  id v42 = VerticalToggleSlider.visualEffectView.getter();
  id v43 = [v42 contentView];

  id v44 = [v43 layer];
  [v44 setCompositingFilter:kCAFilterPlusL];

  id v45 = VerticalToggleSlider.stretchView.getter();
  id v46 = VerticalToggleSlider.visualEffectView.getter();
  [v45 addSubview:v46];

  id v47 = VerticalToggleSlider.levelView.getter();
  [v47 setUserInteractionEnabled:0];

  id v48 = VerticalToggleSlider.levelView.getter();
  NSString v49 = String._bridgeToObjectiveC()();
  [v48 setAccessibilityIdentifier:v49];

  id v50 = VerticalToggleSlider.levelView.getter();
  [v50 setAutoresizingMask:26];

  id v51 = VerticalToggleSlider.visualEffectView.getter();
  id v52 = [v51 contentView];

  id v53 = VerticalToggleSlider.levelView.getter();
  [v52 addSubview:v53];

  v62[4] = 1;
  VerticalToggleSlider.updateLevelViewPosition(forcedValue:)(0x100000000);
  id v54 = VerticalToggleSlider.levelView.getter();
  int v55 = v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode];
  id v56 = [v0 traitCollection];
  uint64_t v57 = v56;
  if (v55 == 2)
  {

    double v58 = 0.0;
  }
  else if (v55)
  {

    double v58 = 1.0;
  }
  else
  {
    id v59 = [v56 accessibilityContrast];

    double v58 = 0.5;
    if (v59 == (id)1) {
      double v58 = 1.0;
    }
  }
  [v54 setAlpha:v58];

  VerticalToggleSlider.updateColors()();
  VerticalToggleSlider.updatePackage()();
  id v60 = VerticalToggleSlider.stretchView.getter();
  if (one-time initialization token for minimumCornerRadius != -1) {
    swift_once();
  }
  static UIView.Corner.value(_:continuous:)();
  uint64_t v61 = type metadata accessor for UIView.Corner();
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v61 - 8) + 56))(v2, 0, 1, v61);
  UIView.corner.setter();
}

void VerticalToggleSlider.updateLevelViewPosition(forcedValue:)(uint64_t a1)
{
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode) == 2)
  {
    id v57 = VerticalToggleSlider.levelView.getter();
    id v2 = VerticalToggleSlider.visualEffectView.getter();
    [v2 bounds];
    double v4 = v3;
    double v6 = v5;
    double v8 = v7;
    double v10 = v9;

    objc_msgSend(v57, "setFrame:", v4, v6, v8, v10);
  }
  else
  {
    id v12 = VerticalToggleSlider.visualEffectView.getter();
    [v12 bounds];
    CGFloat v14 = v13;
    CGFloat v16 = v15;
    CGFloat v18 = v17;
    CGFloat v20 = v19;

    v59.origin.CGFloat x = v14;
    v59.origin.CGFloat y = v16;
    v59.size.CGFloat width = v18;
    v59.size.CGFloat height = v20;
    double Height = CGRectGetHeight(v59);
    double v22 = (float *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_minLevelOffsetRatio);
    swift_beginAccess();
    double v23 = Height * *v22;
    id v24 = VerticalToggleSlider.visualEffectView.getter();
    [v24 bounds];
    CGFloat v26 = v25;
    CGFloat v28 = v27;
    CGFloat v30 = v29;
    CGFloat v32 = v31;

    v60.origin.CGFloat x = v26;
    v60.origin.CGFloat y = v28;
    v60.size.CGFloat width = v30;
    v60.size.CGFloat height = v32;
    double v33 = CGRectGetHeight(v60);
    if ((a1 & 0x100000000) != 0) {
      float v34 = *(float *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_internalValue);
    }
    else {
      float v34 = *(float *)&a1;
    }
    double v35 = v23 + (v33 - v23) * v34;
    id v36 = VerticalToggleSlider.visualEffectView.getter();
    [v36 bounds];
    CGFloat v38 = v37;
    CGFloat v40 = v39;
    CGFloat v42 = v41;
    CGFloat v44 = v43;

    v61.origin.CGFloat x = v38;
    v61.origin.CGFloat y = v40;
    v61.size.CGFloat width = v42;
    v61.size.CGFloat height = v44;
    double v45 = CGRectGetHeight(v61) - v35;
    if (v45 < 0.0) {
      double v46 = 0.0;
    }
    else {
      double v46 = v45;
    }
    id v47 = VerticalToggleSlider.levelView.getter();
    id v48 = VerticalToggleSlider.visualEffectView.getter();
    [v48 bounds];
    CGFloat v50 = v49;
    CGFloat v52 = v51;
    CGFloat v54 = v53;
    CGFloat v56 = v55;

    v62.origin.CGFloat x = v50;
    v62.origin.CGFloat y = v52;
    v62.size.CGFloat width = v54;
    v62.size.CGFloat height = v56;
    objc_msgSend(v47, "setFrame:", 0.0, v46, CGRectGetWidth(v62), v35);
  }
}

void VerticalToggleSlider.updatePackage()()
{
  uint64_t v1 = v0;
  id v2 = (uint64_t *)&v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_packageDefinition];
  swift_beginAccess();
  uint64_t v3 = v2[1];
  if (v3)
  {
    double v4 = (void *)v2[2];
    uint64_t v5 = v2[4];
    uint64_t v6 = v2[5];
    uint64_t v8 = v2[6];
    uint64_t v7 = v2[7];
    uint64_t v10 = v2[8];
    uint64_t v9 = v2[9];
    uint64_t v51 = v2[3];
    uint64_t v52 = *v2;
    *(void *)&long long v53 = *v2;
    *((void *)&v53 + 1) = v3;
    CGFloat v54 = v4;
    uint64_t v55 = v51;
    uint64_t v56 = v5;
    uint64_t v57 = v6;
    uint64_t v58 = v8;
    uint64_t v59 = v7;
    uint64_t v60 = v10;
    uint64_t v61 = v9;
    double v11 = *(void **)&v1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_packageView];
    if (v11)
    {
      id v12 = v11;
      outlined copy of CAPackageDefinition?(v52, v3, v4);
      CoreAnimationPackageView.reset()();
    }
    else
    {
      id v13 = objc_allocWithZone((Class)type metadata accessor for CoreAnimationPackageView());
      swift_bridgeObjectRetain_n();
      id v14 = v4;
      swift_bridgeObjectRetain_n();
      id v15 = v14;
      id v16 = CoreAnimationPackageView.init(definition:)(&v53);
      id v17 = UIView.forAutolayout.getter();

      id v12 = (char *)v17;
      [v12 setTranslatesAutoresizingMaskIntoConstraints:0];
      VerticalToggleSlider.packageView.setter(v12);
      id v18 = VerticalToggleSlider.visualEffectView.getter();
      id v19 = [v18 contentView];

      [v19 addSubview:v12];
      __swift_instantiateConcreteTypeFromMangledName(&_ss23_ContiguousArrayStorageCyyXlGMD_1);
      uint64_t v20 = swift_allocObject();
      *(_OWORD *)(v20 + 16) = xmmword_100493E30;
      CGFloat v50 = v4;
      id v21 = [v12 topAnchor];
      id v22 = VerticalToggleSlider.visualEffectView.getter();
      id v23 = [v22 topAnchor];

      id v24 = [v21 constraintGreaterThanOrEqualToAnchor:v23];
      *(void *)(v20 + 32) = v24;
      id v25 = [v12 leadingAnchor];
      id v26 = VerticalToggleSlider.visualEffectView.getter();
      id v27 = [v26 leadingAnchor];

      id v28 = [v25 constraintEqualToAnchor:v27];
      *(void *)(v20 + 40) = v28;
      id v29 = [v12 trailingAnchor];
      id v30 = VerticalToggleSlider.visualEffectView.getter();
      id v31 = [v30 trailingAnchor];

      id v32 = [v29 constraintEqualToAnchor:v31];
      *(void *)(v20 + 48) = v32;
      id v33 = [v12 bottomAnchor];
      id v34 = VerticalToggleSlider.visualEffectView.getter();
      id v35 = [v34 bottomAnchor];

      id v36 = [v33 constraintEqualToAnchor:v35];
      *(void *)(v20 + 56) = v36;
      id v37 = [v12 heightAnchor];
      id v38 = [v12 widthAnchor];

      id v39 = [v37 constraintEqualToAnchor:v38];
      *(void *)(v20 + 64) = v39;
      double v4 = v50;
      specialized Array._endMutation()();
      Array<A>.activate()(v20);
      swift_bridgeObjectRelease();
    }
    CGFloat v40 = (uint64_t *)&v12[OBJC_IVAR____TtC11MusicCoreUI24CoreAnimationPackageView_stateName];
    if (v1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode] == 2)
    {
      swift_beginAccess();
      uint64_t v41 = *v40;
      uint64_t v42 = v40[1];
      *(_OWORD *)CGFloat v40 = xmmword_1004A3D80;
      double v43 = v12;
      CoreAnimationPackageView.stateName.didset(v41, v42);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_beginAccess();
      uint64_t v44 = *v40;
      uint64_t v45 = v40[1];
      *(_OWORD *)CGFloat v40 = xmmword_1004A3D70;
      CoreAnimationPackageView.stateName.didset(v44, v45);
      swift_bridgeObjectRelease();
      type metadata accessor for UIMenu(0, (unint64_t *)&_sSo17OS_dispatch_queueCML_1);
      double v46 = (void *)static OS_dispatch_queue.main.getter();
      uint64_t v47 = swift_allocObject();
      *(void *)(v47 + 16) = v1;
      *(void *)(v47 + 24) = v12;
      id v48 = v1;
      double v43 = v12;
      double v49 = v12;
      OS_dispatch_queue.asyncAfter(_:block:)((uint64_t)partial apply for closure #1 in VerticalToggleSlider.updatePackage(), v47);

      swift_release();
    }
    VerticalToggleSlider.updatePackageColors()();

    outlined consume of CAPackageDefinition?(v52, v3, v4);
  }
  else
  {
    VerticalToggleSlider.packageView.setter(0);
  }
}

void VerticalToggleSlider.updatePackageColors()()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_packageView];
  if (v1)
  {
    int v2 = v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode];
    uint64_t v3 = v1;
    Class v4 = v3;
    if (v2 != 2)
    {
      id v12 = [v0 traitCollection];
      id v13 = [v12 accessibilityContrast];

      if (v13 == (id)1)
      {
        id v14 = [self whiteColor];
        id v15 = (void **)((char *)v4 + OBJC_IVAR____TtC11MusicCoreUI24CoreAnimationPackageView_foregroundColor);
        swift_beginAccess();
        id v16 = *v15;
        *id v15 = v14;
        Class v17 = (Class)v14;

        if (*v15)
        {
          CoreAnimationPackageView.updateColorFilter()();
        }
        else
        {
          id v25 = *(void **)((char *)v4 + OBJC_IVAR____TtC11MusicCoreUI24CoreAnimationPackageView_packageLayer);
          if (v25)
          {
            id v26 = v25;
            Class isa = Array._bridgeToObjectiveC()().super.isa;
            [v26 setFilters:isa];

            Class v17 = isa;
          }
        }

        id v28 = [(objc_class *)v4 layer];
        [v28 setCompositingFilter:0];
      }
      else
      {
        uint64_t v20 = (void **)((char *)v4 + OBJC_IVAR____TtC11MusicCoreUI24CoreAnimationPackageView_foregroundColor);
        swift_beginAccess();
        id v21 = *v20;
        *uint64_t v20 = 0;

        if (*v20)
        {
          CoreAnimationPackageView.updateColorFilter()();
        }
        else
        {
          id v32 = *(void **)((char *)v4 + OBJC_IVAR____TtC11MusicCoreUI24CoreAnimationPackageView_packageLayer);
          if (v32)
          {
            id v33 = v32;
            Class v34 = Array._bridgeToObjectiveC()().super.isa;
            [v33 setFilters:v34];
          }
        }
        id v35 = [(objc_class *)v4 layer];
        id v36 = kCAFilterDestOut;
        [v35 setCompositingFilter:v36];
      }
      goto LABEL_24;
    }
    id v5 = [(objc_class *)v3 layer];
    [v5 setCompositingFilter:0];

    id v6 = [v0 traitCollection];
    id v7 = [v6 accessibilityContrast];

    if (v7 != (id)1)
    {
      id v18 = (void **)((char *)v4 + OBJC_IVAR____TtC11MusicCoreUI24CoreAnimationPackageView_foregroundColor);
      swift_beginAccess();
      id v19 = *v18;
      *id v18 = 0;

      if (*v18)
      {
        CoreAnimationPackageView.updateColorFilter()();
      }
      else
      {
        id v29 = *(void **)((char *)v4 + OBJC_IVAR____TtC11MusicCoreUI24CoreAnimationPackageView_packageLayer);
        if (v29)
        {
          id v30 = v29;
          Class v31 = Array._bridgeToObjectiveC()().super.isa;
          [v30 setFilters:v31];

          Class v4 = v31;
        }
      }
      goto LABEL_24;
    }
    id v8 = [v0 tintColor];
    uint64_t v9 = (void **)((char *)v4 + OBJC_IVAR____TtC11MusicCoreUI24CoreAnimationPackageView_foregroundColor);
    swift_beginAccess();
    uint64_t v10 = *v9;
    *uint64_t v9 = v8;
    id v11 = v8;

    if (*v9)
    {
      CoreAnimationPackageView.updateColorFilter()();
    }
    else
    {
      id v22 = *(void **)((char *)v4 + OBJC_IVAR____TtC11MusicCoreUI24CoreAnimationPackageView_packageLayer);
      if (v22)
      {
        id v23 = v22;
        Class v24 = Array._bridgeToObjectiveC()().super.isa;
        [v23 setFilters:v24];

        Class v4 = v24;
        goto LABEL_24;
      }
    }

    Class v4 = (Class)v11;
LABEL_24:
  }
}

void VerticalToggleSlider.setupLongPressGestureRecognizer()()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_longPressMode];
  swift_beginAccess();
  uint64_t v2 = OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_longPressGestureRecognizer;
  uint64_t v3 = *(void **)&v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_longPressGestureRecognizer];
  if (*v1 - 1 > 1)
  {
    if (!v3) {
      return;
    }
    id v6 = v3;
    [v0 removeGestureRecognizer:v6];
    id v5 = *(void **)&v0[v2];
    *(void *)&v0[v2] = 0;
  }
  else
  {
    if (v3) {
      return;
    }
    id v4 = [objc_allocWithZone((Class)UILongPressGestureRecognizer) initWithTarget:v0 action:"longPressed:"];
    [v4 setMinimumPressDuration:0.25];
    [v0 addGestureRecognizer:v4];
    id v5 = *(void **)&v0[v2];
    *(void *)&v0[v2] = v4;
  }
}

void VerticalToggleSlider.longPressed(_:)(void *a1)
{
  uint64_t v3 = &v1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_longPressMode];
  swift_beginAccess();
  int v4 = *v3;
  if (v4 == 2 || v4 == 1 && v1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode] != 2)
  {
    id v5 = (char *)[a1 state];
    if ((unint64_t)(v5 - 3) >= 3)
    {
      if (v5 == (char *)2)
      {
        id v7 = VerticalToggleSlider.growView.getter();
        [a1 locationInView:v7];
        double v9 = v8;
        double v11 = v10;

        VerticalToggleSlider.dragUpdate(touchLocation:)(v9, v11);
      }
      else if (v5 == (char *)1)
      {
        unsigned __int8 v6 = v1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode];
        v1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode] = 1;
        VerticalToggleSlider.mode.didset(v6);
        [v1 sendActionsForControlEvents:0x10000];
        [v1 sendActionsForControlEvents:4096];
        *(_DWORD *)&v1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_initialValue] = *(_DWORD *)&v1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_internalValue];
      }
    }
    else
    {
      VerticalToggleSlider.dragEnded()();
    }
  }
}

void VerticalToggleSlider.dragged(_:)(void *a1)
{
  uint64_t v2 = OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode;
  if (v1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode] != 2)
  {
    int v4 = (char *)[a1 state];
    if ((unint64_t)(v4 - 3) >= 3)
    {
      if (v4 == (char *)2)
      {
        id v12 = VerticalToggleSlider.growView.getter();
        [a1 locationInView:v12];
        double v14 = v13;
        double v16 = v15;

        VerticalToggleSlider.dragUpdate(touchLocation:)(v14, v16);
      }
      else if (v4 == (char *)1)
      {
        [v1 sendActionsForControlEvents:0x10000];
        unsigned __int8 v5 = v1[v2];
        v1[v2] = 1;
        VerticalToggleSlider.mode.didset(v5);
        id v6 = VerticalToggleSlider.growView.getter();
        [a1 locationInView:v6];
        uint64_t v8 = v7;
        uint64_t v10 = v9;

        double v11 = &v1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_initialDraggingLocation];
        *(void *)double v11 = v8;
        *((void *)v11 + 1) = v10;
        v11[16] = 0;
        *(_DWORD *)&v1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_initialValue] = *(_DWORD *)&v1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_internalValue];
      }
    }
    else
    {
      VerticalToggleSlider.dragEnded()();
    }
  }
}

void VerticalToggleSlider.dragEnded()()
{
  float v1 = *(float *)&v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__minValue];
  float v2 = *(float *)&v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__maxValue];
  if (v1 > v2)
  {
    __break(1u);
  }
  else
  {
    float v3 = *(float *)&v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_internalValue];
    float v4 = *(float *)&v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_internalValueRange];
    float v5 = *(float *)&v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_internalValueRange + 4];
    if (v4 > v3) {
      float v3 = *(float *)&v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_internalValueRange];
    }
    if (v5 < v3) {
      float v3 = *(float *)&v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_internalValueRange + 4];
    }
    if ((float)(v1 + (float)((float)(v2 - v1) * (float)((float)(v3 - v4) / (float)(v5 - v4)))) == v2
      && (id v6 = &v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_automaticallyDisablesOnMaxValue],
          swift_beginAccess(),
          *v6 == 1))
    {
      unsigned __int8 v7 = v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode];
      v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode] = 2;
    }
    else
    {
      unsigned __int8 v7 = v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode];
      v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode] = 0;
    }
    VerticalToggleSlider.mode.didset(v7);
    uint64_t v8 = &v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_initialDraggingLocation];
    *(void *)uint64_t v8 = 0;
    *((void *)v8 + 1) = 0;
    v8[16] = 1;
    [v0 sendActionsForControlEvents:0x40000];
  }
}

id VerticalToggleSlider.dragUpdate(touchLocation:)(double a1, double a2)
{
  float v4 = (double *)&v2[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_initialDraggingLocation];
  if (v2[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_initialDraggingLocation + 16])
  {
    double *v4 = a1;
    v4[1] = a2;
    double v5 = a2;
    *((unsigned char *)v4 + 16) = 0;
  }
  else
  {
    double v5 = v4[1];
  }
  id v6 = VerticalToggleSlider.growView.getter();
  [v6 bounds];
  CGFloat v8 = v7;
  CGFloat v10 = v9;
  CGFloat v12 = v11;
  CGFloat v14 = v13;

  v42.origin.CGFloat x = v8;
  v42.origin.CGFloat y = v10;
  v42.size.CGFloat width = v12;
  v42.size.CGFloat height = v14;
  double Height = CGRectGetHeight(v42);
  double v16 = (float *)&v2[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_minLevelOffsetRatio];
  swift_beginAccess();
  double v17 = Height * (1.0 - *v16);
  double v18 = (v5 - a2) * (1.0 / v17) + *(float *)&v2[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_initialValue];
  float v19 = *(float *)&v2[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_internalValueRange];
  float v20 = v18;
  if (v19 <= v20) {
    float v19 = v18;
  }
  if (*(float *)&v2[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_internalValueRange + 4] < v19) {
    float v19 = *(float *)&v2[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_internalValueRange + 4];
  }
  VerticalToggleSlider.internalValue.setter(v19);
  if (v17 < 0.0)
  {
    __break(1u);
    goto LABEL_30;
  }
  double v21 = 0.0;
  double v22 = v17 * v18 + 0.0;
  if (v22 >= 0.0 && v22 <= v17)
  {
    if (one-time initialization token for zero == -1)
    {
LABEL_18:
      Class v31 = &v2[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_shapeChange];
      double v27 = *(double *)&v2[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_shapeChange];
      double v28 = *(double *)&v2[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_shapeChange + 8];
      double v29 = *(double *)&v2[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_shapeChange + 16];
      double v30 = *(double *)&v2[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_shapeChange + 24];
      long long v32 = *(_OWORD *)&qword_100584EE8;
      *Class v31 = static VerticalToggleSlider.ShapeChange.zero;
      v31[1] = v32;
      goto LABEL_19;
    }
LABEL_30:
    swift_once();
    goto LABEL_18;
  }
  if (v22 >= 0.0) {
    double v21 = v17;
  }
  double v24 = vabdd_f64(v22, v21);
  double v25 = (v22 - v21) * 0.01;
  id v26 = (float64x2_t *)&v2[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_shapeChange];
  double v27 = *(double *)&v2[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_shapeChange];
  double v28 = *(double *)&v2[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_shapeChange + 8];
  double v29 = *(double *)&v2[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_shapeChange + 16];
  double v30 = *(double *)&v2[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_shapeChange + 24];
  float64x2_t *v26 = vmulq_n_f64((float64x2_t)xmmword_1004A3D90, v24);
  v26[1].f64[0] = v24 * 0.01;
  v26[1].f64[1] = v25;
LABEL_19:
  VerticalToggleSlider.shapeChange.didset(v27, v28, v29, v30);
  LOBYTE(v41) = 1;
  VerticalToggleSlider.updateLevelViewPosition(forcedValue:)(0x100000000);
  id v33 = VerticalToggleSlider.levelView.getter();
  int v34 = v2[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode];
  id v35 = objc_msgSend(v2, "traitCollection", v41);
  id v36 = v35;
  if (v34 == 2)
  {

    double v37 = 0.0;
  }
  else if (v34)
  {

    double v37 = 1.0;
  }
  else
  {
    id v38 = [v35 accessibilityContrast];

    double v37 = 0.5;
    if (v38 == (id)1) {
      double v37 = 1.0;
    }
  }
  [v33 setAlpha:v37];

  id v39 = &v2[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_isContinuous];
  id result = (id)swift_beginAccess();
  if (*v39) {
    return [v2 sendActionsForControlEvents:4096];
  }
  return result;
}

void VerticalToggleSlider.packageDefinition.didset(uint64_t a1)
{
  outlined init with take of CAPackageDefinition?(a1, (uint64_t)v51);
  uint64_t v4 = v51[0];
  uint64_t v3 = v51[1];
  uint64_t v19 = v51[3];
  uint64_t v20 = v51[4];
  double v21 = (void *)v51[5];
  uint64_t v22 = v51[6];
  uint64_t v23 = v51[7];
  uint64_t v24 = v51[8];
  uint64_t v25 = v51[2];
  double v18 = (void *)v51[9];
  double v5 = (uint64_t *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_packageDefinition);
  swift_beginAccess();
  uint64_t v6 = v5[1];
  double v7 = (void *)v5[2];
  uint64_t v8 = v5[3];
  uint64_t v9 = v5[4];
  uint64_t v10 = v5[7];
  uint64_t v27 = v5[5];
  uint64_t v28 = v5[6];
  uint64_t v11 = v5[8];
  double v29 = (void *)v5[9];
  uint64_t v30 = *v5;
  CGFloat v12 = (void *)a1;
  if (!v6)
  {
    outlined init with take of CAPackageDefinition?(a1, (uint64_t)v52);
    uint64_t v13 = v30;
    if (!v53) {
      return;
    }
    goto LABEL_13;
  }
  outlined init with take of CAPackageDefinition?(a1, (uint64_t)v52);
  uint64_t v13 = v30;
  if (!v53)
  {
LABEL_13:
    uint64_t v31 = v13;
    uint64_t v32 = v6;
    id v33 = v7;
    uint64_t v34 = v8;
    uint64_t v35 = v9;
    uint64_t v36 = v27;
    uint64_t v37 = v28;
    uint64_t v38 = v10;
    uint64_t v39 = v11;
    CGFloat v40 = v29;
    uint64_t v41 = v4;
    uint64_t v42 = v3;
    uint64_t v43 = v25;
    uint64_t v44 = v19;
    uint64_t v45 = v20;
    double v46 = v21;
    uint64_t v47 = v22;
    uint64_t v48 = v23;
    uint64_t v49 = v24;
    CGFloat v50 = v18;
    outlined copy of CAPackageDefinition?(v13, v6, v7);
    outlined retain of CAPackageDefinition?(v12, (void (*)(void, void, void, void, void, void, void, void, void, void))outlined copy of CAPackageDefinition?);
    outlined release of (CAPackageDefinition?, CAPackageDefinition?)((uint64_t)&v31);
    goto LABEL_15;
  }
  BOOL v14 = v30 == v4 && v6 == v3;
  if (!v14 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
    goto LABEL_15;
  }
  type metadata accessor for UIMenu(0, (unint64_t *)&_sSo8NSObjectCML_1);
  double v15 = v7;
  uint64_t v16 = v8;
  double v17 = v15;
  outlined copy of CAPackageDefinition?(v30, v6, v15);
  outlined retain of CAPackageDefinition?(v12, (void (*)(void, void, void, void, void, void, void, void, void, void))outlined copy of CAPackageDefinition?);
  if ((static NSObject.== infix(_:_:)() & 1) == 0) {
    goto LABEL_14;
  }
  uint64_t v54 = v16;
  uint64_t v55 = v9;
  uint64_t v56 = v27;
  uint64_t v57 = v28;
  uint64_t v58 = v10;
  uint64_t v59 = v11;
  uint64_t v31 = v19;
  uint64_t v32 = v20;
  id v33 = v21;
  uint64_t v34 = v22;
  uint64_t v35 = v23;
  uint64_t v36 = v24;
  if ((static CGAffineTransform.== infix(_:_:)() & 1) == 0)
  {
LABEL_14:
    outlined retain of CAPackageDefinition?(v12, (void (*)(void, void, void, void, void, void, void, void, void, void))outlined consume of CAPackageDefinition?);
    outlined consume of CAPackageDefinition?(v30, v6, v17);
    goto LABEL_15;
  }
  char v26 = specialized static Array<A>.== infix(_:_:)(v29, v18);
  outlined retain of CAPackageDefinition?(v12, (void (*)(void, void, void, void, void, void, void, void, void, void))outlined consume of CAPackageDefinition?);
  outlined consume of CAPackageDefinition?(v30, v6, v17);
  if ((v26 & 1) == 0)
  {
LABEL_15:
    VerticalToggleSlider.packageView.setter(0);
    VerticalToggleSlider.updatePackage()();
  }
}

long long *VerticalToggleSlider.DesignSpecs.expandedSize.unsafeMutableAddressor()
{
  if (one-time initialization token for expandedSize != -1) {
    swift_once();
  }
  return &static VerticalToggleSlider.DesignSpecs.expandedSize;
}

__n128 VerticalToggleSlider.AnchorPoint.location(for:)(id a1, uint64_t a2)
{
  id v3 = a1;
  if (a1) {
    a1 = [a1 layoutDirection];
  }
  switch((char)a2)
  {
    case 1:
      uint64_t v4 = CGPoint.topCenter.unsafeMutableAddressor();
      goto LABEL_34;
    case 2:
      if (!v3 || (unint64_t)a1 + 1 < 2) {
        goto LABEL_11;
      }
      if (a1 != (id)1) {
        goto LABEL_35;
      }
LABEL_29:
      uint64_t v4 = CGPoint.topLeft.unsafeMutableAddressor();
      goto LABEL_34;
    case 3:
      if (!v3 || (unint64_t)a1 + 1 < 2) {
        goto LABEL_31;
      }
      if (a1 != (id)1) {
        goto LABEL_35;
      }
LABEL_19:
      uint64_t v4 = CGPoint.centerRight.unsafeMutableAddressor();
      goto LABEL_34;
    case 4:
      uint64_t v4 = CGPoint.center.unsafeMutableAddressor();
      goto LABEL_34;
    case 5:
      if (!v3 || (unint64_t)a1 + 1 < 2) {
        goto LABEL_19;
      }
      if (a1 != (id)1) {
        goto LABEL_35;
      }
LABEL_31:
      uint64_t v4 = CGPoint.centerLeft.unsafeMutableAddressor();
      goto LABEL_34;
    case 6:
      if (!v3 || (unint64_t)a1 + 1 < 2) {
        goto LABEL_33;
      }
      if (a1 != (id)1) {
        goto LABEL_35;
      }
LABEL_27:
      uint64_t v4 = CGPoint.bottomRight.unsafeMutableAddressor();
      goto LABEL_34;
    case 7:
      uint64_t v4 = CGPoint.bottomCenter.unsafeMutableAddressor();
      goto LABEL_34;
    case 8:
      if (!v3 || (unint64_t)a1 + 1 < 2) {
        goto LABEL_27;
      }
      if (a1 != (id)1) {
        goto LABEL_35;
      }
LABEL_33:
      uint64_t v4 = CGPoint.bottomLeft.unsafeMutableAddressor();
      goto LABEL_34;
    default:
      if (!v3 || (unint64_t)a1 + 1 < 2) {
        goto LABEL_29;
      }
      if (a1 == (id)1)
      {
LABEL_11:
        uint64_t v4 = CGPoint.topRight.unsafeMutableAddressor();
LABEL_34:
        double v5 = v4;
        swift_beginAccess();
        return *(__n128 *)v5;
      }
      else
      {
LABEL_35:
        VerticalToggleSlider.AnchorPoint.location(for:)(0, a2);
        result.n128_u64[1] = v7;
      }
      return result;
  }
}

id VerticalToggleSlider.init(frame:)(double a1, double a2, double a3, double a4)
{
  double v5 = v4;
  swift_getObjectType();
  uint64_t v10 = &v4[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_packageDefinition];
  *(_OWORD *)uint64_t v10 = 0u;
  *((_OWORD *)v10 + 1) = 0u;
  *((_OWORD *)v10 + 2) = 0u;
  *((_OWORD *)v10 + 3) = 0u;
  *((_OWORD *)v10 + 4) = 0u;
  uint64_t v11 = OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_minLevelOffsetRatio;
  uint64_t v12 = one-time initialization token for expandedSize;
  uint64_t v13 = v4;
  if (v12 != -1) {
    swift_once();
  }
  double v14 = 1.0 / *((double *)&static VerticalToggleSlider.DesignSpecs.expandedSize + 1);
  if (one-time initialization token for minLevelOffsetInPoint != -1) {
    swift_once();
  }
  float v15 = v14 * *(double *)&static VerticalToggleSlider.DesignSpecs.minLevelOffsetInPoint;
  *(float *)&v5[v11] = v15;
  uint64_t v16 = &v13[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_interactionScaleFactor];
  *(void *)uint64_t v16 = 0;
  v16[8] = 1;
  v13[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_isTapToToggleEnabled] = 1;
  v13[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_isVisuallyDisabled] = 0;
  v13[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_isContinuous] = 1;
  v13[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_automaticallyDisablesOnMaxValue] = 1;
  v13[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_longPressMode] = 1;
  v13[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_growAnchorPoint] = 8;
  *(void *)&v13[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider____lazy_storage___stretchView] = 0;
  *(void *)&v13[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider____lazy_storage___growView] = 0;
  *(void *)&v13[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_internalValueRange] = 0x3F80000000000000;
  *(_DWORD *)&v13[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_internalValue] = 1065353216;
  *(_DWORD *)&v13[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__minValue] = 0;
  *(_DWORD *)&v13[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__maxValue] = 1065353216;
  *(void *)&v13[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider____lazy_storage___feedbackGenerator] = 0;
  v13[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode] = 2;
  uint64_t v17 = OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_blurEffect;
  if (one-time initialization token for blurRadius != -1) {
    swift_once();
  }
  *(void *)&v13[v17] = [self effectWithBlurRadius:*(double *)&static VerticalToggleSlider.blurRadius];
  *(void *)&v13[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider____lazy_storage___visualEffectView] = 0;
  *(void *)&v13[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_packageView] = 0;
  *(void *)&v13[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider____lazy_storage___levelView] = 0;
  *(void *)&v13[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_sceneActivationObserver] = 0;
  *(void *)&v13[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_longPressGestureRecognizer] = 0;
  double v18 = &v13[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_initialDraggingLocation];
  *(void *)double v18 = 0;
  *((void *)v18 + 1) = 0;
  v18[16] = 1;
  *(_DWORD *)&v13[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_initialValue] = 0;
  uint64_t v19 = OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_shapeChange;
  if (one-time initialization token for zero != -1) {
    swift_once();
  }
  uint64_t v20 = &v13[v19];
  long long v21 = *(_OWORD *)&qword_100584EE8;
  *(_OWORD *)uint64_t v20 = static VerticalToggleSlider.ShapeChange.zero;
  *((_OWORD *)v20 + 1) = v21;
  uint64_t v22 = &v13[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_stretchTransform];
  *(void *)uint64_t v22 = 0x3FF0000000000000;
  *((void *)v22 + 1) = 0;
  *((void *)v22 + 2) = 0;
  *((void *)v22 + 3) = 0x3FF0000000000000;
  *((void *)v22 + 4) = 0;
  *((void *)v22 + 5) = 0;
  uint64_t v23 = &v13[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_growTransform];
  *(void *)uint64_t v23 = 0x3FF0000000000000;
  *((void *)v23 + 1) = 0;
  *((void *)v23 + 2) = 0;
  *((void *)v23 + 3) = 0x3FF0000000000000;
  *((void *)v23 + 4) = 0;
  *((void *)v23 + 5) = 0;

  v33.receiver = v13;
  v33.super_class = (Class)type metadata accessor for VerticalToggleSlider();
  id v24 = objc_msgSendSuper2(&v33, "initWithFrame:", a1, a2, a3, a4);
  [v24 setDeliversTouchesForGesturesToSuperview:0];
  type metadata accessor for UIMenu(0, &_sSo8UIActionCML_1);
  uint64_t v25 = swift_allocObject();
  swift_unknownObjectWeakInit();
  char v26 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  objc_msgSend(v24, "addAction:forControlEvents:", v26, 64, 0, 0, 0, partial apply for closure #1 in VerticalToggleSlider.setupInteractions(), v25);

  id v27 = [objc_allocWithZone((Class)UIPanGestureRecognizer) initWithTarget:v24 action:"dragged:"];
  [v24 addGestureRecognizer:v27];

  VerticalToggleSlider.setupLongPressGestureRecognizer()();
  VerticalToggleSlider.setupView()();
  __swift_instantiateConcreteTypeFromMangledName(&_ss23_ContiguousArrayStorageCy5UIKit17UITraitDefinition_pXpGMD_0);
  uint64_t v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_100493400;
  *(void *)(v28 + 32) = type metadata accessor for UITraitAccessibilityContrast();
  *(void *)(v28 + 40) = &protocol witness table for UITraitAccessibilityContrast;
  id v29 = v24;
  UIView.registerForTraitChanges<A>(_:handler:)();
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  uint64_t v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = xmmword_100493400;
  *(void *)(v30 + 32) = type metadata accessor for UITraitLayoutDirection();
  *(void *)(v30 + 40) = &protocol witness table for UITraitLayoutDirection;
  id v31 = v29;
  UIView.registerForTraitChanges<A>(_:handler:)();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  return v31;
}

double VerticalToggleSlider.intrinsicContentSize.getter()
{
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode) == 2)
  {
    if (one-time initialization token for size != -1) {
      swift_once();
    }
    uint64_t v1 = &static VerticalToggleSlider.DesignSpecs.size;
  }
  else
  {
    if (one-time initialization token for expandedSize != -1) {
      swift_once();
    }
    uint64_t v1 = &static VerticalToggleSlider.DesignSpecs.expandedSize;
  }
  return *(double *)v1;
}

long long *VerticalToggleSlider.DesignSpecs.size.unsafeMutableAddressor()
{
  if (one-time initialization token for size != -1) {
    swift_once();
  }
  return &static VerticalToggleSlider.DesignSpecs.size;
}

id VerticalToggleSlider.isEnabled.getter()
{
  return VerticalToggleSlider.isEnabled.getter((SEL *)&selRef_isEnabled);
}

uint64_t VerticalToggleSlider.isEnabled.setter(char a1)
{
  return VerticalToggleSlider.isEnabled.setter(a1, (SEL *)&selRef_isEnabled, (SEL *)&selRef_setEnabled_, (uint64_t (*)(id))VerticalToggleSlider.isEnabled.didset);
}

void VerticalToggleSlider.isEnabled.didset(char a1)
{
  if ([v1 isEnabled] != (a1 & 1))
  {
    float v2 = &v1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_isVisuallyDisabled];
    swift_beginAccess();
    if (*v2) {
      unsigned int v3 = 1;
    }
    else {
      unsigned int v3 = [v1 isEnabled] ^ 1;
    }
    uint64_t v4 = *(void **)&v1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_packageView];
    if (v4)
    {
      double v5 = 0.4;
      if (!v3) {
        double v5 = 1.0;
      }
      [v4 setAlpha:v5];
    }
    id v6 = VerticalToggleSlider.visualEffectView.getter();
    unint64_t v7 = v6;
    double v8 = 1.0;
    if (v3) {
      double v8 = 0.5;
    }
    [v6 setAlpha:v8];
  }
}

Swift::Void __swiftcall VerticalToggleSlider.tintColorDidChange()()
{
  v1.receiver = v0;
  v1.super_class = (Class)type metadata accessor for VerticalToggleSlider();
  objc_msgSendSuper2(&v1, "tintColorDidChange");
  VerticalToggleSlider.updateColors()();
}

long long *VerticalToggleSlider.DesignSpecs.minimumTapArea.unsafeMutableAddressor()
{
  if (one-time initialization token for minimumTapArea != -1) {
    swift_once();
  }
  return &static VerticalToggleSlider.DesignSpecs.minimumTapArea;
}

id closure #1 in VerticalToggleSlider.updateColors()(void *a1)
{
  id v1 = [a1 userInterfaceStyle];
  if (one-time initialization token for normal != -1) {
    swift_once();
  }
  id v2 = [(id)static UIColor.MusicTint.normal colorWithAlphaComponent:dbl_1004A3DA0[v1 == (id)2]];

  return v2;
}

void VerticalToggleSlider.mode.didset(unsigned __int8 a1)
{
  id v2 = v1;
  int v3 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIView.Corner?);
  __chkstk_darwin();
  double v5 = &v153[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode;
  int v7 = v1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode];
  if (v7 == 2)
  {
    if (v3 == 2) {
      return;
    }
  }
  else if (v3 == 2)
  {
    if (v7) {
      VerticalToggleSlider.internalValue.setter(1.0);
    }
  }
  else if ((((v3 & 1) == 0) ^ v7))
  {
    return;
  }
  id v8 = VerticalToggleSlider.feedbackGenerator.getter();
  [v8 userInteractionStarted];

  uint64_t v9 = self;
  if ([v9 areAnimationsEnabled])
  {
    int v10 = v1[v6];
    if (v3 == 2)
    {
      if (v10 == 2) {
        return;
      }
      uint64_t v11 = swift_allocObject();
      *(void *)(v11 + 16) = v2;
      *(unsigned char *)(v11 + 24) = v10 & 1;
      if (v10)
      {
        uint64_t v108 = one-time initialization token for timingParameters;
        id v109 = v2;
        if (v108 != -1) {
          swift_once();
        }
        uint64_t v110 = (void *)static VerticalToggleSlider.AnimationSpecs.Expand.SizeAndPosition.timingParameters;
        [(id)static VerticalToggleSlider.AnimationSpecs.Expand.SizeAndPosition.timingParameters settlingDuration];
        double v112 = v111;
        [v110 mass];
        double v114 = v113;
        [v110 stiffness];
        double v116 = v115;
        [v110 damping];
        double v118 = v117;
        *(void *)&aBlock.tCGFloat x = partial apply for closure #9 in VerticalToggleSlider.mode.didset;
        *(void *)&aBlock.tCGFloat y = v11;
        *(void *)&aBlock.CGFloat a = _NSConcreteStackBlock;
        *(void *)&aBlock.CGFloat b = 1107296256;
        *(void *)&aBlock.CGFloat c = thunk for @escaping @callee_guaranteed @Sendable () -> ();
        *(void *)&aBlock.CGFloat d = &block_descriptor_167_0;
        uint64_t v119 = _Block_copy(&aBlock);
        swift_retain();
        swift_release();
        [v9 _animateUsingSpringWithDuration:6 delay:v119 options:0 mass:v112 stiffness:0.0 damping:v114 initialVelocity:v116 animations:v118 completion:0.0];
        _Block_release(v119);
        if (one-time initialization token for timingParameters != -1) {
          swift_once();
        }
        uint64_t v120 = (void *)static VerticalToggleSlider.AnimationSpecs.Expand.ColorAndShadow.timingParameters;
        uint64_t v121 = swift_allocObject();
        *(void *)(v121 + 16) = v109;
        id v122 = v109;
        [v120 settlingDuration];
        double v124 = v123;
        [v120 mass];
        double v126 = v125;
        [v120 stiffness];
        double v128 = v127;
        [v120 damping];
        double v130 = v129;
        *(void *)&aBlock.tCGFloat x = partial apply for closure #10 in VerticalToggleSlider.mode.didset;
        *(void *)&aBlock.tCGFloat y = v121;
        *(void *)&aBlock.CGFloat a = _NSConcreteStackBlock;
        *(void *)&aBlock.CGFloat b = 1107296256;
        *(void *)&aBlock.CGFloat c = thunk for @escaping @callee_guaranteed @Sendable () -> ();
        *(void *)&aBlock.CGFloat d = &block_descriptor_173_0;
        uint64_t v131 = _Block_copy(&aBlock);
        swift_retain();
        swift_release();
        [v9 _animateUsingSpringWithDuration:6 delay:v131 options:0 mass:v124 stiffness:0.0 damping:v126 initialVelocity:v128 animations:v130 completion:0.0];
        _Block_release(v131);
      }
      else
      {
        uint64_t v12 = one-time initialization token for timingParameters;
        id v13 = v2;
        if (v12 != -1) {
          swift_once();
        }
        double v14 = (void *)static VerticalToggleSlider.AnimationSpecs.TurnOn.Size.timingParameters;
        [(id)static VerticalToggleSlider.AnimationSpecs.TurnOn.Size.timingParameters settlingDuration];
        double v16 = v15;
        [v14 mass];
        double v18 = v17;
        [v14 stiffness];
        double v20 = v19;
        [v14 damping];
        double v22 = v21;
        *(void *)&aBlock.tCGFloat x = partial apply for closure #9 in VerticalToggleSlider.mode.didset;
        *(void *)&aBlock.tCGFloat y = v11;
        *(void *)&aBlock.CGFloat a = _NSConcreteStackBlock;
        *(void *)&aBlock.CGFloat b = 1107296256;
        *(void *)&aBlock.CGFloat c = thunk for @escaping @callee_guaranteed @Sendable () -> ();
        *(void *)&aBlock.CGFloat d = &block_descriptor_155;
        uint64_t v23 = _Block_copy(&aBlock);
        swift_retain();
        swift_release();
        [v9 _animateUsingSpringWithDuration:6 delay:v23 options:0 mass:v16 stiffness:0.2 damping:v18 initialVelocity:v20 animations:v22 completion:0.0];
        _Block_release(v23);
        if (one-time initialization token for timingParameters != -1) {
          swift_once();
        }
        id v24 = (void *)static VerticalToggleSlider.AnimationSpecs.TurnOn.SymbolAndPlatterColor.timingParameters;
        uint64_t v25 = swift_allocObject();
        *(void *)(v25 + 16) = v13;
        id v26 = v13;
        [v24 settlingDuration];
        double v28 = v27;
        [v24 mass];
        double v30 = v29;
        [v24 stiffness];
        double v32 = v31;
        [v24 damping];
        double v34 = v33;
        *(void *)&aBlock.tCGFloat x = partial apply for closure #11 in VerticalToggleSlider.mode.didset;
        *(void *)&aBlock.tCGFloat y = v25;
        *(void *)&aBlock.CGFloat a = _NSConcreteStackBlock;
        *(void *)&aBlock.CGFloat b = 1107296256;
        *(void *)&aBlock.CGFloat c = thunk for @escaping @callee_guaranteed @Sendable () -> ();
        *(void *)&aBlock.CGFloat d = &block_descriptor_161;
        uint64_t v35 = _Block_copy(&aBlock);
        swift_retain();
        swift_release();
        [v9 _animateUsingSpringWithDuration:6 delay:v35 options:0 mass:v28 stiffness:0.0 damping:v30 initialVelocity:v32 animations:v34 completion:0.0];
        _Block_release(v35);
        swift_release();
        type metadata accessor for UIMenu(0, (unint64_t *)&_sSo17OS_dispatch_queueCML_1);
        uint64_t v36 = (void *)static OS_dispatch_queue.main.getter();
        uint64_t v37 = swift_allocObject();
        *(void *)(v37 + 16) = v26;
        id v38 = v26;
        OS_dispatch_queue.asyncAfter(_:block:)((uint64_t)partial apply for closure #12 in VerticalToggleSlider.mode.didset, v37);
      }
LABEL_68:
      swift_release();
      swift_release();
      return;
    }
    int v55 = v3 & 1;
    if (v10 != 2)
    {
      if ((((v55 != 0) ^ v10) & 1) == 0) {
        return;
      }
      int v80 = v10 & 1;
      uint64_t v81 = swift_allocObject();
      *(void *)(v81 + 16) = v2;
      *(unsigned char *)(v81 + 24) = v80;
      uint64_t v82 = swift_allocObject();
      *(void *)(v82 + 16) = v2;
      *(unsigned char *)(v82 + 24) = v80;
      if (v80)
      {
        uint64_t v83 = one-time initialization token for timingParameters;
        id v84 = v2;
        if (v83 != -1) {
          swift_once();
        }
        uint64_t v85 = (void *)static VerticalToggleSlider.AnimationSpecs.Expand.SizeAndPosition.timingParameters;
        [(id)static VerticalToggleSlider.AnimationSpecs.Expand.SizeAndPosition.timingParameters settlingDuration];
        double v87 = v86;
        [v85 mass];
        double v89 = v88;
        [v85 stiffness];
        double v91 = v90;
        [v85 damping];
        double v93 = v92;
        *(void *)&aBlock.tCGFloat x = partial apply for closure #6 in VerticalToggleSlider.mode.didset;
        *(void *)&aBlock.tCGFloat y = v81;
        *(void *)&aBlock.CGFloat a = _NSConcreteStackBlock;
        *(void *)&aBlock.CGFloat b = 1107296256;
        *(void *)&aBlock.CGFloat c = thunk for @escaping @callee_guaranteed @Sendable () -> ();
        *(void *)&aBlock.CGFloat d = &block_descriptor_125;
        uint64_t v94 = _Block_copy(&aBlock);
        swift_retain();
        swift_release();
        [v9 _animateUsingSpringWithDuration:6 delay:v94 options:0 mass:v87 stiffness:0.0 damping:v89 initialVelocity:v91 animations:v93 completion:0.0];
        _Block_release(v94);
        if (one-time initialization token for timingParameters != -1) {
          swift_once();
        }
        uint64_t v95 = (void *)static VerticalToggleSlider.AnimationSpecs.Expand.ColorAndShadow.timingParameters;
        [(id)static VerticalToggleSlider.AnimationSpecs.Expand.ColorAndShadow.timingParameters settlingDuration];
        double v97 = v96;
        [v95 mass];
        double v99 = v98;
        [v95 stiffness];
        double v101 = v100;
        [v95 damping];
        double v103 = v102;
        *(void *)&aBlock.tCGFloat x = partial apply for closure #7 in VerticalToggleSlider.mode.didset;
        *(void *)&aBlock.tCGFloat y = v82;
        *(void *)&aBlock.CGFloat a = _NSConcreteStackBlock;
        *(void *)&aBlock.CGFloat b = 1107296256;
        uint64_t v104 = &block_descriptor_128;
      }
      else
      {
        uint64_t v132 = one-time initialization token for timingParameters;
        id v133 = v2;
        if (v132 != -1) {
          swift_once();
        }
        uint64_t v134 = (void *)static VerticalToggleSlider.AnimationSpecs.Collapse.SizeAndPosition.timingParameters;
        uint64_t v135 = swift_allocObject();
        *(void *)(v135 + 16) = v133;
        id v136 = v133;
        [v134 settlingDuration];
        double v138 = v137;
        [v134 mass];
        double v140 = v139;
        [v134 stiffness];
        double v142 = v141;
        [v134 damping];
        double v144 = v143;
        *(void *)&aBlock.tCGFloat x = partial apply for closure #6 in VerticalToggleSlider.mode.didset;
        *(void *)&aBlock.tCGFloat y = v81;
        *(void *)&aBlock.CGFloat a = _NSConcreteStackBlock;
        *(void *)&aBlock.CGFloat b = 1107296256;
        *(void *)&aBlock.CGFloat c = thunk for @escaping @callee_guaranteed @Sendable () -> ();
        *(void *)&aBlock.CGFloat d = &block_descriptor_116_0;
        uint64_t v145 = _Block_copy(&aBlock);
        swift_retain();
        swift_release();
        *(void *)&aBlock.tCGFloat x = CFRange.init(_:);
        *(void *)&aBlock.tCGFloat y = v135;
        *(void *)&aBlock.CGFloat a = _NSConcreteStackBlock;
        *(void *)&aBlock.CGFloat b = 1107296256;
        *(void *)&aBlock.CGFloat c = thunk for @escaping @callee_guaranteed (@unowned Bool) -> ();
        *(void *)&aBlock.CGFloat d = &block_descriptor_119;
        uint64_t v146 = _Block_copy(&aBlock);
        swift_retain();
        swift_release();
        [v9 _animateUsingSpringWithDuration:6 delay:v145 options:v146 mass:v138 stiffness:0.0 damping:v140 initialVelocity:v142 animations:v144 completion:0.0];
        _Block_release(v146);
        _Block_release(v145);
        swift_release();
        if (one-time initialization token for timingParameters != -1) {
          swift_once();
        }
        uint64_t v147 = (void *)static VerticalToggleSlider.AnimationSpecs.Collapse.ColorAndShadow.timingParameters;
        [(id)static VerticalToggleSlider.AnimationSpecs.Collapse.ColorAndShadow.timingParameters settlingDuration];
        double v97 = v148;
        [v147 mass];
        double v99 = v149;
        [v147 stiffness];
        double v101 = v150;
        [v147 damping];
        double v103 = v151;
        *(void *)&aBlock.tCGFloat x = partial apply for closure #7 in VerticalToggleSlider.mode.didset;
        *(void *)&aBlock.tCGFloat y = v82;
        *(void *)&aBlock.CGFloat a = _NSConcreteStackBlock;
        *(void *)&aBlock.CGFloat b = 1107296256;
        uint64_t v104 = &block_descriptor_122_0;
      }
      *(void *)&aBlock.CGFloat c = thunk for @escaping @callee_guaranteed @Sendable () -> ();
      *(void *)&aBlock.CGFloat d = v104;
      long long v152 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      [v9 _animateUsingSpringWithDuration:6 delay:v152 options:0 mass:v97 stiffness:0.0 damping:v99 initialVelocity:v101 animations:v103 completion:0.0];
      _Block_release(v152);
      goto LABEL_68;
    }
    if ((v3 & 1) == 0)
    {
      if (one-time initialization token for timingParameters != -1) {
        swift_once();
      }
      uint64_t v56 = (void *)static VerticalToggleSlider.AnimationSpecs.TurnOff.SliderPosition.timingParameters;
      uint64_t v57 = swift_allocObject();
      *(void *)(v57 + 16) = v2;
      id v58 = v2;
      [v56 settlingDuration];
      double v60 = v59;
      [v56 mass];
      double v62 = v61;
      [v56 stiffness];
      double v64 = v63;
      [v56 damping];
      double v66 = v65;
      *(void *)&aBlock.tCGFloat x = partial apply for closure #1 in VerticalToggleSlider.mode.didset;
      *(void *)&aBlock.tCGFloat y = v57;
      *(void *)&aBlock.CGFloat a = _NSConcreteStackBlock;
      *(void *)&aBlock.CGFloat b = 1107296256;
      *(void *)&aBlock.CGFloat c = thunk for @escaping @callee_guaranteed @Sendable () -> ();
      *(void *)&aBlock.CGFloat d = &block_descriptor_134_1;
      uint64_t v67 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      [v9 _animateUsingSpringWithDuration:6 delay:v67 options:0 mass:v60 stiffness:0.0 damping:v62 initialVelocity:v64 animations:v66 completion:0.0];
      _Block_release(v67);
      swift_release();
    }
    if (one-time initialization token for timingFunction != -1) {
      swift_once();
    }
    uint64_t v68 = static VerticalToggleSlider.AnimationSpecs.TurnOff.Size.timingFunction;
    uint64_t v69 = swift_allocObject();
    *(unsigned char *)(v69 + 16) = v55;
    *(void *)(v69 + 24) = v2;
    uint64_t v70 = swift_allocObject();
    *(void *)(v70 + 16) = v2;
    id v71 = v2;
    double v72 = 0.0;
    if (!v55) {
      double v72 = 0.1;
    }
    specialized static UIView.animate(withTimingFunction:duration:delay:options:animations:completion:)(v68, 2, partial apply for closure #2 in VerticalToggleSlider.mode.didset, v69, CFRange.init(_:), v70, 0.75, v72);
    swift_release();
    swift_release();
    type metadata accessor for UIMenu(0, (unint64_t *)&_sSo17OS_dispatch_queueCML_1);
    uint64_t v73 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v74 = swift_allocObject();
    *(void *)(v74 + 16) = v71;
    id v75 = v71;
    OS_dispatch_queue.asyncAfter(_:block:)((uint64_t)partial apply for closure #4 in VerticalToggleSlider.mode.didset, v74);

    swift_release();
    if (!v55)
    {
      uint64_t v76 = swift_allocObject();
      *(void *)(v76 + 16) = v75;
      *(void *)&aBlock.tCGFloat x = partial apply for closure #5 in VerticalToggleSlider.mode.didset;
      *(void *)&aBlock.tCGFloat y = v76;
      *(void *)&aBlock.CGFloat a = _NSConcreteStackBlock;
      *(void *)&aBlock.CGFloat b = 1107296256;
      *(void *)&aBlock.CGFloat c = thunk for @escaping @callee_guaranteed @Sendable () -> ();
      *(void *)&aBlock.CGFloat d = &block_descriptor_149_0;
      uint64_t v77 = _Block_copy(&aBlock);
      id v78 = v75;
      swift_release();
      [v9 animateWithDuration:0 delay:v77 options:0 animations:0.25 completion:0.7];
      _Block_release(v77);
    }
  }
  else
  {
    [v1 invalidateIntrinsicContentSize];
    [v1 setNeedsUpdateConstraints];
    id v39 = [v1 superview];
    [v39 setNeedsLayout];

    id v40 = [v1 superview];
    [v40 layoutIfNeeded];

    [v1 updateConstraintsIfNeeded];
    CGFloat v41 = 1.0;
    CGFloat v42 = 1.0;
    if (v1[v6])
    {
      uint64_t v43 = (uint64_t *)&v1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_interactionScaleFactor];
      swift_beginAccess();
      if (*((unsigned char *)v43 + 8) == 1)
      {
        if (one-time initialization token for interactionScaleFactor != -1) {
          swift_once();
        }
        uint64_t v43 = &static VerticalToggleSlider.DesignSpecs.interactionScaleFactor;
      }
      CGFloat v42 = *(double *)v43;
    }
    if (v1[v6])
    {
      uint64_t v44 = (uint64_t *)&v1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_interactionScaleFactor];
      swift_beginAccess();
      if (*((unsigned char *)v44 + 8) == 1)
      {
        if (one-time initialization token for interactionScaleFactor != -1) {
          swift_once();
        }
        uint64_t v44 = &static VerticalToggleSlider.DesignSpecs.interactionScaleFactor;
      }
      CGFloat v41 = *(double *)v44;
    }
    CGAffineTransformMakeScale(&aBlock, v42, v41);
    long long v45 = *(_OWORD *)&aBlock.c;
    long long v46 = *(_OWORD *)&aBlock.tx;
    uint64_t v47 = &v1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_growTransform];
    *(_OWORD *)uint64_t v47 = *(_OWORD *)&aBlock.a;
    *((_OWORD *)v47 + 1) = v45;
    *((_OWORD *)v47 + 2) = v46;
    id v48 = VerticalToggleSlider.growView.getter();
    long long v49 = *((_OWORD *)v47 + 1);
    *(_OWORD *)&aBlock.CGFloat a = *(_OWORD *)v47;
    *(_OWORD *)&aBlock.CGFloat c = v49;
    *(_OWORD *)&aBlock.tCGFloat x = *((_OWORD *)v47 + 2);
    [v48 setTransform:&aBlock];

    VerticalToggleSlider.updatePackage()();
    LOBYTE(aBlock.a) = 1;
    VerticalToggleSlider.updateLevelViewPosition(forcedValue:)(0x100000000);
    id v50 = VerticalToggleSlider.levelView.getter();
    int v51 = v1[v6];
    id v52 = [v1 traitCollection];
    uint64_t v53 = v52;
    if (v51 == 2)
    {

      double v54 = 0.0;
    }
    else if (v51)
    {

      double v54 = 1.0;
    }
    else
    {
      id v79 = [v52 accessibilityContrast];

      double v54 = 0.5;
      if (v79 == (id)1) {
        double v54 = 1.0;
      }
    }
    [v50 setAlpha:v54];

    id v105 = VerticalToggleSlider.stretchView.getter();
    if (one-time initialization token for minimumCornerRadius != -1) {
      swift_once();
    }
    static UIView.Corner.value(_:continuous:)();
    uint64_t v106 = type metadata accessor for UIView.Corner();
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v106 - 8) + 56))(v5, 0, 1, v106);
    UIView.corner.setter();

    id v107 = [self clearColor];
    UIView.Shadow.init(color:opacity:radius:offset:)((uint64_t)v107, (uint64_t)&aBlock, 0.0, 0.0, 0.0, 0.0);
    UIView.shadow.setter((uint64_t)&aBlock);
  }
}

void closure #9 in VerticalToggleSlider.mode.didset(char *a1, char a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIView.Corner?);
  __chkstk_darwin();
  double v5 = &v26[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  [a1 invalidateIntrinsicContentSize];
  [a1 setNeedsUpdateConstraints];
  id v6 = [a1 superview];
  [v6 setNeedsLayout];

  id v7 = [a1 superview];
  [v7 layoutIfNeeded];

  [a1 updateConstraintsIfNeeded];
  uint64_t v8 = OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode;
  CGFloat v9 = 1.0;
  CGFloat v10 = 1.0;
  if (a1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode])
  {
    uint64_t v11 = (uint64_t *)&a1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_interactionScaleFactor];
    swift_beginAccess();
    if (*((unsigned char *)v11 + 8) == 1)
    {
      if (one-time initialization token for interactionScaleFactor != -1) {
        swift_once();
      }
      uint64_t v11 = &static VerticalToggleSlider.DesignSpecs.interactionScaleFactor;
    }
    CGFloat v10 = *(double *)v11;
  }
  if (a1[v8])
  {
    uint64_t v12 = (uint64_t *)&a1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_interactionScaleFactor];
    swift_beginAccess();
    if (*((unsigned char *)v12 + 8) == 1)
    {
      if (one-time initialization token for interactionScaleFactor != -1) {
        swift_once();
      }
      uint64_t v12 = &static VerticalToggleSlider.DesignSpecs.interactionScaleFactor;
    }
    CGFloat v9 = *(double *)v12;
  }
  CGAffineTransformMakeScale(&v27, v10, v9);
  long long v13 = *(_OWORD *)&v27.c;
  long long v14 = *(_OWORD *)&v27.tx;
  double v15 = &a1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_growTransform];
  *(_OWORD *)double v15 = *(_OWORD *)&v27.a;
  *((_OWORD *)v15 + 1) = v13;
  *((_OWORD *)v15 + 2) = v14;
  id v16 = VerticalToggleSlider.growView.getter();
  long long v17 = *((_OWORD *)v15 + 1);
  *(_OWORD *)&v27.CGFloat a = *(_OWORD *)v15;
  *(_OWORD *)&v27.CGFloat c = v17;
  *(_OWORD *)&v27.tCGFloat x = *((_OWORD *)v15 + 2);
  [v16 setTransform:&v27];

  id v18 = VerticalToggleSlider.stretchView.getter();
  if (one-time initialization token for minimumCornerRadius != -1) {
    swift_once();
  }
  static UIView.Corner.value(_:continuous:)();
  uint64_t v19 = type metadata accessor for UIView.Corner();
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v5, 0, 1, v19);
  UIView.corner.setter();

  if (a2)
  {
    LOBYTE(v27.a) = 1;
    VerticalToggleSlider.updateLevelViewPosition(forcedValue:)(0x100000000);
    id v20 = VerticalToggleSlider.levelView.getter();
    int v21 = a1[v8];
    id v22 = [a1 traitCollection];
    uint64_t v23 = v22;
    if (v21 == 2)
    {

      double v24 = 0.0;
    }
    else if (v21)
    {

      double v24 = 1.0;
    }
    else
    {
      id v25 = [v22 accessibilityContrast];

      double v24 = 0.5;
      if (v25 == (id)1) {
        double v24 = 1.0;
      }
    }
    [v20 setAlpha:v24];

    VerticalToggleSlider.updatePackage()();
  }
  else
  {
    LOBYTE(v27.a) = 0;
    VerticalToggleSlider.updateLevelViewPosition(forcedValue:)(1065353216);
  }
  VerticalToggleSlider.updateColors()();
}

void closure #10 in VerticalToggleSlider.mode.didset()
{
  id v0 = [self blackColor];
  UIView.Shadow.init(color:opacity:radius:offset:)((uint64_t)v0, (uint64_t)v1, 0.3, 9.0, 0.0, 5.0);
  UIView.shadow.setter((uint64_t)v1);
}

void closure #11 in VerticalToggleSlider.mode.didset(unsigned __int8 *a1)
{
  id v2 = VerticalToggleSlider.levelView.getter();
  int v3 = a1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode];
  id v4 = [a1 traitCollection];
  double v5 = v4;
  if (v3 == 2)
  {

    double v6 = 0.0;
  }
  else if (v3)
  {

    double v6 = 1.0;
  }
  else
  {
    id v7 = [v4 accessibilityContrast];

    double v6 = 0.5;
    if (v7 == (id)1) {
      double v6 = 1.0;
    }
  }
  [v2 setAlpha:v6];

  VerticalToggleSlider.updatePackage()();
  id v8 = [self clearColor];
  UIView.Shadow.init(color:opacity:radius:offset:)((uint64_t)v8, (uint64_t)v9, 0.0, 0.0, 0.0, 0.0);
  UIView.shadow.setter((uint64_t)v9);
}

uint64_t closure #12 in VerticalToggleSlider.mode.didset(void *a1)
{
  if (one-time initialization token for timingFunction != -1) {
    swift_once();
  }
  uint64_t v2 = static VerticalToggleSlider.AnimationSpecs.TurnOn.SliderPosition.timingFunction;
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = a1;
  id v4 = self;
  id v5 = a1;
  [v4 begin];
  [v4 setAnimationTimingFunction:v2];
  double v6 = self;
  _OWORD v9[4] = partial apply for closure #1 in closure #12 in VerticalToggleSlider.mode.didset;
  _OWORD v9[5] = v3;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  uint64_t v9[2] = thunk for @escaping @callee_guaranteed @Sendable () -> ();
  v9[3] = &block_descriptor_179;
  id v7 = _Block_copy(v9);
  swift_retain();
  swift_release();
  [v6 animateWithDuration:2 delay:v7 options:0 animations:0.85 completion:0.0];
  _Block_release(v7);
  [v4 commit];
  return swift_release();
}

void closure #1 in VerticalToggleSlider.mode.didset(uint64_t a1)
{
  id v2 = VerticalToggleSlider.levelView.getter();
  id v3 = VerticalToggleSlider.visualEffectView.getter();
  [v3 bounds];
  double v5 = v4;
  double v7 = v6;
  double v9 = v8;
  double v11 = v10;

  objc_msgSend(v2, "setFrame:", v5, v7, v9, v11);
  if (one-time initialization token for zero != -1) {
    swift_once();
  }
  uint64_t v12 = (_OWORD *)(a1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_shapeChange);
  double v13 = *(double *)(a1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_shapeChange);
  double v14 = *(double *)(a1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_shapeChange + 8);
  double v15 = *(double *)(a1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_shapeChange + 16);
  double v16 = *(double *)(a1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_shapeChange + 24);
  long long v17 = *(_OWORD *)&qword_100584EE8;
  *uint64_t v12 = static VerticalToggleSlider.ShapeChange.zero;
  v12[1] = v17;
  VerticalToggleSlider.shapeChange.didset(v13, v14, v15, v16);
}

void closure #2 in VerticalToggleSlider.mode.didset(char a1, char *a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIView.Corner?);
  __chkstk_darwin();
  double v5 = (char *)v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    if (one-time initialization token for zero != -1) {
      swift_once();
    }
    double v6 = &a2[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_shapeChange];
    double v7 = *(double *)&a2[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_shapeChange];
    double v8 = *(double *)&a2[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_shapeChange + 8];
    double v9 = *(double *)&a2[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_shapeChange + 16];
    double v10 = *(double *)&a2[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_shapeChange + 24];
    long long v11 = *(_OWORD *)&qword_100584EE8;
    *(_OWORD *)double v6 = static VerticalToggleSlider.ShapeChange.zero;
    *((_OWORD *)v6 + 1) = v11;
    VerticalToggleSlider.shapeChange.didset(v7, v8, v9, v10);
    LOBYTE(v26[0]) = 1;
    VerticalToggleSlider.updateLevelViewPosition(forcedValue:)(0x100000000);
    id v12 = VerticalToggleSlider.levelView.getter();
    int v13 = a2[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode];
    id v14 = [a2 traitCollection];
    double v15 = v14;
    if (v13 == 2)
    {

      double v16 = 0.0;
    }
    else if (v13)
    {

      double v16 = 1.0;
    }
    else
    {
      id v17 = [v14 accessibilityContrast];

      double v16 = 0.5;
      if (v17 == (id)1) {
        double v16 = 1.0;
      }
    }
    [v12 setAlpha:v16];
  }
  id v18 = &a2[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_growTransform];
  *(void *)id v18 = 0x3FF0000000000000;
  *((void *)v18 + 1) = 0;
  *((void *)v18 + 2) = 0;
  *((void *)v18 + 3) = 0x3FF0000000000000;
  *((void *)v18 + 4) = 0;
  *((void *)v18 + 5) = 0;
  id v19 = VerticalToggleSlider.growView.getter();
  long long v20 = *((_OWORD *)v18 + 1);
  v26[0] = *(_OWORD *)v18;
  v26[1] = v20;
  _OWORD v26[2] = *((_OWORD *)v18 + 2);
  [v19 setTransform:v26];

  [a2 invalidateIntrinsicContentSize];
  [a2 setNeedsUpdateConstraints];
  id v21 = [a2 superview];
  [v21 setNeedsLayout];

  id v22 = [a2 superview];
  [v22 layoutIfNeeded];

  [a2 updateConstraintsIfNeeded];
  id v23 = VerticalToggleSlider.stretchView.getter();
  if (one-time initialization token for minimumCornerRadius != -1) {
    swift_once();
  }
  static UIView.Corner.value(_:continuous:)();
  uint64_t v24 = type metadata accessor for UIView.Corner();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v5, 0, 1, v24);
  UIView.corner.setter();

  id v25 = [self clearColor];
  UIView.Shadow.init(color:opacity:radius:offset:)((uint64_t)v25, (uint64_t)v26, 0.0, 0.0, 0.0, 0.0);
  UIView.shadow.setter((uint64_t)v26);
}

void closure #5 in VerticalToggleSlider.mode.didset(unsigned __int8 *a1)
{
  id v7 = VerticalToggleSlider.levelView.getter();
  int v2 = a1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode];
  id v3 = [a1 traitCollection];
  uint64_t v4 = v3;
  if (v2 == 2)
  {

    double v5 = 0.0;
  }
  else if (v2)
  {

    double v5 = 1.0;
  }
  else
  {
    id v6 = [v3 accessibilityContrast];

    double v5 = 0.5;
    if (v6 == (id)1) {
      double v5 = 1.0;
    }
  }
  [v7 setAlpha:v5];
}

void closure #6 in VerticalToggleSlider.mode.didset(uint64_t a1, char a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIView.Corner?);
  __chkstk_darwin();
  double v5 = &v24[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode;
  CGFloat v7 = 1.0;
  CGFloat v8 = 1.0;
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode))
  {
    double v9 = (uint64_t *)(a1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_interactionScaleFactor);
    swift_beginAccess();
    if (*((unsigned char *)v9 + 8) == 1)
    {
      if (one-time initialization token for interactionScaleFactor != -1) {
        swift_once();
      }
      double v9 = &static VerticalToggleSlider.DesignSpecs.interactionScaleFactor;
    }
    CGFloat v8 = *(double *)v9;
  }
  if (*(unsigned char *)(a1 + v6))
  {
    double v10 = (uint64_t *)(a1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_interactionScaleFactor);
    swift_beginAccess();
    if (*((unsigned char *)v10 + 8) == 1)
    {
      if (one-time initialization token for interactionScaleFactor != -1) {
        swift_once();
      }
      double v10 = &static VerticalToggleSlider.DesignSpecs.interactionScaleFactor;
    }
    CGFloat v7 = *(double *)v10;
  }
  CGAffineTransformMakeScale(&v25, v8, v7);
  long long v11 = *(_OWORD *)&v25.c;
  long long v12 = *(_OWORD *)&v25.tx;
  int v13 = (_OWORD *)(a1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_growTransform);
  *int v13 = *(_OWORD *)&v25.a;
  v13[1] = v11;
  _OWORD v13[2] = v12;
  id v14 = VerticalToggleSlider.growView.getter();
  long long v15 = v13[1];
  *(_OWORD *)&v25.CGFloat a = *v13;
  *(_OWORD *)&v25.CGFloat c = v15;
  *(_OWORD *)&v25.tCGFloat x = v13[2];
  [v14 setTransform:&v25];

  id v16 = VerticalToggleSlider.stretchView.getter();
  if (one-time initialization token for minimumCornerRadius != -1) {
    swift_once();
  }
  static UIView.Corner.value(_:continuous:)();
  uint64_t v17 = type metadata accessor for UIView.Corner();
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v5, 0, 1, v17);
  UIView.corner.setter();

  if ((a2 & 1) == 0)
  {
    if (one-time initialization token for zero != -1) {
      swift_once();
    }
    id v18 = (_OWORD *)(a1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_shapeChange);
    double v19 = *(double *)(a1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_shapeChange);
    double v20 = *(double *)(a1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_shapeChange + 8);
    double v21 = *(double *)(a1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_shapeChange + 16);
    double v22 = *(double *)(a1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_shapeChange + 24);
    long long v23 = *(_OWORD *)&qword_100584EE8;
    *id v18 = static VerticalToggleSlider.ShapeChange.zero;
    v18[1] = v23;
    VerticalToggleSlider.shapeChange.didset(v19, v20, v21, v22);
  }
}

void closure #7 in VerticalToggleSlider.mode.didset(unsigned __int8 *a1, char a2)
{
  LOBYTE(v18) = 1;
  VerticalToggleSlider.updateLevelViewPosition(forcedValue:)(0x100000000);
  id v4 = VerticalToggleSlider.levelView.getter();
  int v5 = a1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode];
  id v6 = [a1 traitCollection];
  CGFloat v7 = v6;
  if (v5 == 2)
  {

    double v8 = 0.0;
  }
  else if (v5)
  {

    double v8 = 1.0;
  }
  else
  {
    id v9 = [v6 accessibilityContrast];

    double v8 = 0.5;
    if (v9 == (id)1) {
      double v8 = 1.0;
    }
  }
  [v4 setAlpha:v8];

  double v10 = self;
  if (a2)
  {
    id v11 = [v10 blackColor];
    double v12 = 0.3;
    double v13 = 9.0;
    double v14 = 5.0;
  }
  else
  {
    id v11 = [v10 clearColor];
    double v12 = 0.0;
    double v13 = 0.0;
    double v14 = 0.0;
  }
  UIView.Shadow.init(color:opacity:radius:offset:)((uint64_t)v11, (uint64_t)&v15, v12, v13, 0.0, v14);
  uint64_t v18 = v15;
  long long v19 = v16;
  long long v20 = v17;
  UIView.shadow.setter((uint64_t)&v18);
}

void one-time initialization function for blurRadius()
{
  static VerticalToggleSlider.blurRadius = 0x4024000000000000;
}

uint64_t closure #1 in VerticalToggleSlider.updatePackage()(uint64_t result, uint64_t a2)
{
  if (*(unsigned char *)(result + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode) != 2)
  {
    int v2 = (uint64_t *)(a2 + OBJC_IVAR____TtC11MusicCoreUI24CoreAnimationPackageView_stateName);
    swift_beginAccess();
    uint64_t v3 = *v2;
    uint64_t v4 = v2[1];
    *(_OWORD *)int v2 = xmmword_1004A3DB0;
    CoreAnimationPackageView.stateName.didset(v3, v4);
    return swift_bridgeObjectRelease();
  }
  return result;
}

Swift::Void __swiftcall VerticalToggleSlider.didMoveToWindow()()
{
  id v1 = v0;
  v8.receiver = v0;
  v8.super_class = (Class)type metadata accessor for VerticalToggleSlider();
  objc_msgSendSuper2(&v8, "didMoveToWindow");
  id v2 = [v0 window];
  if (v2 && (uint64_t v3 = v2, v4 = [v2 windowScene], v3, v4))
  {
    uint64_t v5 = swift_allocObject();
    swift_unknownObjectWeakInit();
    type metadata accessor for NotificationObserver();
    swift_allocObject();
    id v6 = UISceneDidActivateNotification;
    id v7 = v4;
    *(void *)&v1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_sceneActivationObserver] = NotificationObserver.init(name:object:dispatchOnMainThread:usesLocalNotificationCenter:handler:)(v6, (uint64_t)v4, 1, 1, (uint64_t)partial apply for closure #1 in VerticalToggleSlider.didMoveToWindow(), v5);
  }
  else
  {
    *(void *)&v1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_sceneActivationObserver] = 0;
  }
  swift_release();
}

void closure #1 in VerticalToggleSlider.didMoveToWindow()()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v1 = (void *)Strong;
    VerticalToggleSlider.updatePackage()();
  }
}

id @objc VerticalToggleSlider.isEnabled.getter(void *a1, uint64_t a2, SEL *a3)
{
  v5.receiver = a1;
  v5.super_class = (Class)type metadata accessor for VerticalToggleSlider();
  return objc_msgSendSuper2(&v5, *a3);
}

id VerticalToggleSlider.isHighlighted.getter()
{
  return VerticalToggleSlider.isEnabled.getter((SEL *)&selRef_isHighlighted);
}

id VerticalToggleSlider.isEnabled.getter(SEL *a1)
{
  v4.receiver = v1;
  v4.super_class = (Class)type metadata accessor for VerticalToggleSlider();
  return objc_msgSendSuper2(&v4, *a1);
}

void @objc VerticalToggleSlider.isEnabled.setter(void *a1, uint64_t a2, uint64_t a3, const char **a4, SEL *a5, void (*a6)(id))
{
  id v11 = (objc_class *)type metadata accessor for VerticalToggleSlider();
  v16.receiver = a1;
  v16.super_class = v11;
  double v12 = *a4;
  id v13 = a1;
  id v14 = objc_msgSendSuper2(&v16, v12);
  v15.receiver = v13;
  v15.super_class = v11;
  objc_msgSendSuper2(&v15, *a5, a3);
  a6(v14);
}

uint64_t VerticalToggleSlider.isHighlighted.setter(char a1)
{
  return VerticalToggleSlider.isEnabled.setter(a1, (SEL *)&selRef_isHighlighted, (SEL *)&selRef_setHighlighted_, (uint64_t (*)(id))VerticalToggleSlider.isHighlighted.didset);
}

uint64_t VerticalToggleSlider.isEnabled.setter(char a1, SEL *a2, SEL *a3, uint64_t (*a4)(id))
{
  id v9 = (objc_class *)type metadata accessor for VerticalToggleSlider();
  v13.receiver = v4;
  v13.super_class = v9;
  id v10 = objc_msgSendSuper2(&v13, *a2);
  v12.receiver = v4;
  v12.super_class = v9;
  objc_msgSendSuper2(&v12, *a3, a1 & 1);
  return a4(v10);
}

void VerticalToggleSlider.isHighlighted.didset(char a1)
{
  id v2 = v1;
  if ([v1 isHighlighted] != (a1 & 1))
  {
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = v1;
    objc_super v4 = self;
    objc_super v5 = v2;
    if ([v4 areAnimationsEnabled])
    {
      if (one-time initialization token for timingParameters != -1) {
        swift_once();
      }
      id v6 = (void *)static VerticalToggleSlider.AnimationSpecs.TouchDown.timingParameters;
      [(id)static VerticalToggleSlider.AnimationSpecs.TouchDown.timingParameters settlingDuration];
      double v8 = v7;
      [v6 mass];
      double v10 = v9;
      [v6 stiffness];
      double v12 = v11;
      [v6 damping];
      double v14 = v13;
      *(void *)&v24.tCGFloat x = partial apply for closure #1 in VerticalToggleSlider.isHighlighted.didset;
      *(void *)&v24.tCGFloat y = v3;
      *(void *)&v24.CGFloat a = _NSConcreteStackBlock;
      *(void *)&v24.CGFloat b = 1107296256;
      *(void *)&v24.CGFloat c = thunk for @escaping @callee_guaranteed @Sendable () -> ();
      *(void *)&v24.CGFloat d = &block_descriptor_101;
      objc_super v15 = _Block_copy(&v24);
      swift_retain();
      swift_release();
      [v4 _animateUsingSpringWithDuration:6 delay:v15 options:0 mass:v8 stiffness:0.0 damping:v10 initialVelocity:v12 animations:v14 completion:0.0];
      _Block_release(v15);
LABEL_12:
      swift_release();
      return;
    }
    if ([v5 isHighlighted])
    {
      CGAffineTransformMakeScale(&v24, 0.95, 0.95);
      long long v17 = *(_OWORD *)&v24.a;
      long long v16 = *(_OWORD *)&v24.c;
      long long v18 = *(_OWORD *)&v24.tx;
    }
    else
    {
      long long v16 = xmmword_100493E70;
      long long v17 = xmmword_1004A3B00;
      long long v18 = 0uLL;
    }
    *(_OWORD *)&v24.CGFloat a = v17;
    *(_OWORD *)&v24.CGFloat c = v16;
    *(_OWORD *)&v24.tCGFloat x = v18;
    [v5 setTransform:&v24];
    long long v19 = *(void **)&v5[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_packageView];
    if (!v19) {
      goto LABEL_12;
    }
    id v20 = v19;
    if ([v5 isHighlighted])
    {
      CGAffineTransformMakeScale(&v24, 0.9, 0.9);
      long long v22 = *(_OWORD *)&v24.a;
      long long v21 = *(_OWORD *)&v24.c;
      long long v23 = *(_OWORD *)&v24.tx;
    }
    else
    {
      long long v21 = xmmword_100493E70;
      long long v22 = xmmword_1004A3B00;
      long long v23 = 0uLL;
    }
    *(_OWORD *)&v24.CGFloat a = v22;
    *(_OWORD *)&v24.CGFloat c = v21;
    *(_OWORD *)&v24.tCGFloat x = v23;
    [v20 setTransform:&v24];
    swift_release();
  }
}

void closure #1 in VerticalToggleSlider.isHighlighted.didset(char *a1)
{
  if ([a1 isHighlighted])
  {
    CGAffineTransformMakeScale(&v10, 0.95, 0.95);
    long long v3 = *(_OWORD *)&v10.a;
    long long v2 = *(_OWORD *)&v10.c;
    long long v4 = *(_OWORD *)&v10.tx;
  }
  else
  {
    long long v2 = xmmword_100493E70;
    long long v3 = xmmword_1004A3B00;
    long long v4 = 0uLL;
  }
  *(_OWORD *)&v10.CGFloat a = v3;
  *(_OWORD *)&v10.CGFloat c = v2;
  *(_OWORD *)&v10.tCGFloat x = v4;
  [a1 setTransform:&v10];
  objc_super v5 = *(void **)&a1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_packageView];
  if (v5)
  {
    id v6 = v5;
    if ([a1 isHighlighted])
    {
      CGAffineTransformMakeScale(&v10, 0.9, 0.9);
      long long v8 = *(_OWORD *)&v10.a;
      long long v7 = *(_OWORD *)&v10.c;
      long long v9 = *(_OWORD *)&v10.tx;
    }
    else
    {
      long long v7 = xmmword_100493E70;
      long long v8 = xmmword_1004A3B00;
      long long v9 = 0uLL;
    }
    *(_OWORD *)&v10.CGFloat a = v8;
    *(_OWORD *)&v10.CGFloat c = v7;
    *(_OWORD *)&v10.tCGFloat x = v9;
    [v6 setTransform:&v10];
  }
}

void closure #1 in VerticalToggleSlider.setupInteractions()()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v1 = (unsigned __int8 *)Strong;
    long long v2 = (unsigned char *)(Strong + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_isTapToToggleEnabled);
    swift_beginAccess();
    if (*v2 == 1)
    {
      [v1 sendActionsForControlEvents:0x10000];
      int v3 = v1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode];
      v1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode] = 2 * (v3 != 2);
      VerticalToggleSlider.mode.didset(v3);
      [v1 sendActionsForControlEvents:4096];
      [v1 sendActionsForControlEvents:0x40000];
    }
  }
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance VerticalToggleSlider.ShapeChange(double *a1, double *a2)
{
  return *a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2] && a1[3] == a2[3];
}

void VerticalToggleSlider.shapeChange.didset(double a1, double a2, double a3, double a4)
{
  objc_super v5 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIView.Corner?);
  __chkstk_darwin();
  double v11 = (char *)&v89 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v12 = (float64x2_t *)&v4[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_shapeChange];
  if (*(double *)&v4[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_shapeChange] != a1
    || *(double *)&v4[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_shapeChange + 8] != a2
    || *(double *)&v4[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_shapeChange + 16] != a3
    || *(double *)&v4[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_shapeChange + 24] != a4)
  {
    id v16 = VerticalToggleSlider.stretchView.getter();
    if (one-time initialization token for minimumCornerRadius != -1) {
      swift_once();
    }
    static UIView.Corner.value(_:continuous:)();
    uint64_t v17 = type metadata accessor for UIView.Corner();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v11, 0, 1, v17);
    UIView.corner.setter();

    float64x2_t v18 = *v12;
    float64x2_t v19 = v12[1];
    if (one-time initialization token for zero != -1)
    {
      float64x2_t v90 = *v12;
      float64x2_t v89 = v19;
      swift_once();
      float64x2_t v19 = v89;
      float64x2_t v18 = v90;
    }
    if (vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(v18, (float64x2_t)static VerticalToggleSlider.ShapeChange.zero), (int32x4_t)vceqq_f64(v19, *(float64x2_t *)&qword_100584EE8))), 0xFuLL))))
    {
      id v75 = VerticalToggleSlider.stretchView.getter();
      [v75 anchorPoint];
      double v77 = v76;
      double v79 = v78;

      int v80 = (double *)CGPoint.center.unsafeMutableAddressor();
      swift_beginAccess();
      if (v77 != *v80 || v79 != v80[1])
      {
        id v81 = VerticalToggleSlider.stretchView.getter();
        swift_beginAccess();
        objc_msgSend(v81, "setAnchorPoint:", *v80, v80[1]);

        id v82 = VerticalToggleSlider.stretchView.getter();
        [v5 bounds];
        objc_msgSend(v82, "setFrame:");
      }
      uint64_t v83 = &v5[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_stretchTransform];
      *(void *)uint64_t v83 = 0x3FF0000000000000;
      *((void *)v83 + 1) = 0;
      *((void *)v83 + 2) = 0;
      *((void *)v83 + 3) = 0x3FF0000000000000;
      *((void *)v83 + 4) = 0;
      *((void *)v83 + 5) = 0;
      id v84 = VerticalToggleSlider.stretchView.getter();
      long long v85 = *((_OWORD *)v83 + 1);
      *(_OWORD *)&aBlock.CGFloat a = *(_OWORD *)v83;
      *(_OWORD *)&aBlock.CGFloat c = v85;
      *(_OWORD *)&aBlock.tCGFloat x = *((_OWORD *)v83 + 2);
      [v84 setTransform:&aBlock];

      double v86 = *(void **)&v5[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_packageView];
      if (v86)
      {
        long long v87 = *((_OWORD *)v83 + 1);
        *(_OWORD *)&aBlock.CGFloat a = *(_OWORD *)v83;
        *(_OWORD *)&aBlock.CGFloat c = v87;
        *(_OWORD *)&aBlock.tCGFloat x = *((_OWORD *)v83 + 2);
        CGAffineTransformInvert(&v94, &aBlock);
        CGAffineTransform aBlock = v94;
        [v86 setTransform:&aBlock];
      }
      id v88 = VerticalToggleSlider.stretchView.getter();
      [v5 bounds];
      objc_msgSend(v88, "setFrame:");
    }
    else
    {
      id v20 = self;
      uint64_t v21 = swift_allocObject();
      *(void *)(v21 + 16) = v5;
      uint64_t v22 = swift_allocObject();
      *(void *)(v22 + 16) = partial apply for closure #1 in VerticalToggleSlider.shapeChange.didset;
      *(void *)(v22 + 24) = v21;
      *(void *)&aBlock.tCGFloat x = partial apply for thunk for @escaping @callee_guaranteed () -> ();
      *(void *)&aBlock.tCGFloat y = v22;
      *(void *)&aBlock.CGFloat a = _NSConcreteStackBlock;
      *(void *)&aBlock.CGFloat b = 1107296256;
      *(void *)&aBlock.CGFloat c = thunk for @escaping @callee_guaranteed () -> ();
      *(void *)&aBlock.CGFloat d = &block_descriptor_72;
      long long v23 = _Block_copy(&aBlock);
      CGAffineTransform v24 = v5;
      swift_retain();
      swift_release();
      [v20 performWithoutAnimation:v23];
      _Block_release(v23);
      char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
      swift_release();
      if (isEscapingClosureAtFileLocation)
      {
        __break(1u);
      }
      else
      {
        id v26 = VerticalToggleSlider.growView.getter();
        [v26 frame];
        CGFloat v28 = v27;
        CGFloat v30 = v29;
        CGFloat v32 = v31;
        CGFloat v34 = v33;

        v96.origin.CGFloat x = v28;
        v96.origin.CGFloat y = v30;
        v96.size.CGFloat width = v32;
        v96.size.CGFloat height = v34;
        CGFloat v35 = CGRectGetWidth(v96) + v12->f64[1];
        id v36 = VerticalToggleSlider.growView.getter();
        [v36 frame];
        CGFloat v38 = v37;
        CGFloat v40 = v39;
        CGFloat v42 = v41;
        CGFloat v44 = v43;

        v97.origin.CGFloat x = v38;
        v97.origin.CGFloat y = v40;
        v97.size.CGFloat width = v42;
        v97.size.CGFloat height = v44;
        CGFloat v45 = v35 / CGRectGetWidth(v97);
        id v46 = VerticalToggleSlider.growView.getter();
        [v46 frame];
        CGFloat v48 = v47;
        CGFloat v50 = v49;
        CGFloat v52 = v51;
        CGFloat v54 = v53;

        v98.origin.CGFloat x = v48;
        v98.origin.CGFloat y = v50;
        v98.size.CGFloat width = v52;
        v98.size.CGFloat height = v54;
        CGFloat v55 = CGRectGetHeight(v98) + v12->f64[0];
        id v56 = VerticalToggleSlider.growView.getter();
        [v56 frame];
        CGFloat v58 = v57;
        CGFloat v60 = v59;
        CGFloat v62 = v61;
        CGFloat v64 = v63;

        v99.origin.CGFloat x = v58;
        v99.origin.CGFloat y = v60;
        v99.size.CGFloat width = v62;
        v99.size.CGFloat height = v64;
        CGFloat Height = CGRectGetHeight(v99);
        CGAffineTransformMakeScale(&aBlock, v45, v55 / Height);
        long long v66 = *(_OWORD *)&aBlock.a;
        long long v67 = *(_OWORD *)&aBlock.c;
        long long v68 = *(_OWORD *)&aBlock.tx;
        *(_OWORD *)&v94.CGFloat a = *(_OWORD *)&aBlock.a;
        *(_OWORD *)&v94.CGFloat c = *(_OWORD *)&aBlock.c;
        CGFloat v69 = -v12[1].f64[1];
        *(_OWORD *)&v94.tCGFloat x = *(_OWORD *)&aBlock.tx;
        CGAffineTransformMakeTranslation(&aBlock, 0.0, v69);
        static CGAffineTransform.+ infix(_:_:)(&v94, &aBlock, v93);
        uint64_t v70 = &v24[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_stretchTransform];
        *(_OWORD *)uint64_t v70 = v93[0];
        *((_OWORD *)v70 + 1) = v93[1];
        *((_OWORD *)v70 + 2) = v93[2];
        id v71 = VerticalToggleSlider.stretchView.getter();
        CGAffineTransform v92 = *(CGAffineTransform *)v70;
        [v71 setTransform:&v92];

        uint64_t v72 = OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_packageView;
        uint64_t v73 = *(void **)&v24[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_packageView];
        if (v73)
        {
          CGAffineTransform v92 = *(CGAffineTransform *)v70;
          CGAffineTransformInvert(&v91, &v92);
          CGAffineTransform v92 = v91;
          [v73 setTransform:&v92];
          uint64_t v74 = *(void **)&v24[v72];
          if (v74)
          {
            *(_OWORD *)&v92.CGFloat a = v66;
            *(_OWORD *)&v92.CGFloat c = v67;
            *(_OWORD *)&v92.tCGFloat x = v68;
            CGAffineTransformInvert(&v91, &v92);
            CGAffineTransform v92 = v91;
            [v74 setTransform:&v92];
          }
        }
        swift_release();
      }
    }
  }
}

void closure #1 in VerticalToggleSlider.shapeChange.didset(char *a1)
{
  if (*(double *)&a1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_shapeChange + 24] <= 0.0) {
    long long v2 = CGPoint.topCenter.unsafeMutableAddressor();
  }
  else {
    long long v2 = CGPoint.bottomCenter.unsafeMutableAddressor();
  }
  int v3 = (double *)v2;
  swift_beginAccess();
  double v5 = *v3;
  double v4 = v3[1];
  id v6 = VerticalToggleSlider.stretchView.getter();
  [v6 anchorPoint];
  double v8 = v7;
  double v10 = v9;

  if (v8 != v5 || v10 != v4)
  {
    id v12 = VerticalToggleSlider.stretchView.getter();
    objc_msgSend(v12, "setAnchorPoint:", v5, v4);

    id v13 = VerticalToggleSlider.stretchView.getter();
    [a1 bounds];
    objc_msgSend(v13, "setFrame:");
  }
}

void one-time initialization function for interactionScaleFactor()
{
  static VerticalToggleSlider.DesignSpecs.interactionScaleFactor = 0x4000000000000000;
}

void one-time initialization function for minLevelOffsetInPoint()
{
  static VerticalToggleSlider.DesignSpecs.minLevelOffsetInPoint = 0x4024000000000000;
}

int64x2_t one-time initialization function for size()
{
  int64x2_t result = vdupq_n_s64(0x4042000000000000uLL);
  static VerticalToggleSlider.DesignSpecs.CGSize size = (__int128)result;
  return result;
}

double static VerticalToggleSlider.DesignSpecs.size.getter()
{
  return variable initialization expression of SymbolButton.Configuration.minimumSize(&one-time initialization token for size, (uint64_t)&static VerticalToggleSlider.DesignSpecs.size);
}

double one-time initialization function for expandedSize()
{
  double result = 36.0;
  static VerticalToggleSlider.DesignSpecs.expandedSize = xmmword_1004A3DC0;
  return result;
}

double static VerticalToggleSlider.DesignSpecs.expandedSize.getter()
{
  return variable initialization expression of SymbolButton.Configuration.minimumSize(&one-time initialization token for expandedSize, (uint64_t)&static VerticalToggleSlider.DesignSpecs.expandedSize);
}

int64x2_t one-time initialization function for minimumTapArea()
{
  int64x2_t result = vdupq_n_s64(0x404A000000000000uLL);
  static VerticalToggleSlider.DesignSpecs.minimumTapAreCGFloat a = (__int128)result;
  return result;
}

double static VerticalToggleSlider.DesignSpecs.minimumTapArea.getter()
{
  return variable initialization expression of SymbolButton.Configuration.minimumSize(&one-time initialization token for minimumTapArea, (uint64_t)&static VerticalToggleSlider.DesignSpecs.minimumTapArea);
}

void one-time initialization function for minimumCornerRadius()
{
  static VerticalToggleSlider.DesignSpecs.minimumCornerRadius = 0x4024000000000000;
}

id one-time initialization function for timingParameters()
{
  id result = objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 465.0, 21.0, 0.0, 0.0);
  static VerticalToggleSlider.AnimationSpecs.TouchDown.timingParameters = (uint64_t)result;
  return result;
}

{
  id result;

  id result = objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 300.0, 40.0, 0.0, 0.0);
  static VerticalToggleSlider.AnimationSpecs.TurnOn.SymbolAndPlatterColor.timingParameters = (uint64_t)result;
  return result;
}

{
  id result;

  id result = objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 194.0, 24.0, 0.0, 0.0);
  static VerticalToggleSlider.AnimationSpecs.TurnOn.Size.timingParameters = (uint64_t)result;
  return result;
}

{
  id result;

  id result = objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 158.0, 25.0, 0.0, 0.0);
  static VerticalToggleSlider.AnimationSpecs.TurnOff.SliderPosition.timingParameters = (uint64_t)result;
  return result;
}

{
  id result;

  id result = objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 288.0, 26.5, 0.0, 0.0);
  static VerticalToggleSlider.AnimationSpecs.Expand.SizeAndPosition.timingParameters = (uint64_t)result;
  return result;
}

{
  id result;

  id result = objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 300.0, 40.0, 0.0, 0.0);
  static VerticalToggleSlider.AnimationSpecs.Expand.ColorAndShadow.timingParameters = (uint64_t)result;
  return result;
}

{
  id result;

  id result = objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 2.0, 500.0, 40.0, 0.0, 0.0);
  static VerticalToggleSlider.AnimationSpecs.Collapse.SizeAndPosition.timingParameters = (uint64_t)result;
  return result;
}

{
  id result;

  id result = objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 300.0, 40.0, 0.0, 0.0);
  static VerticalToggleSlider.AnimationSpecs.Collapse.ColorAndShadow.timingParameters = (uint64_t)result;
  return result;
}

id one-time initialization function for timingFunction()
{
  id v0 = objc_allocWithZone((Class)CAMediaTimingFunction);
  LODWORD(v1) = 1051931443;
  LODWORD(v2) = 0.25;
  LODWORD(v3) = 1.0;
  id result = [v0 initWithControlPoints:v1 :0.0 :v2 :v3];
  static VerticalToggleSlider.AnimationSpecs.TurnOn.SliderPosition.timingFunction = (uint64_t)result;
  return result;
}

{
  id v0;
  double v1;
  double v2;
  double v3;
  id result;

  id v0 = objc_allocWithZone((Class)CAMediaTimingFunction);
  LODWORD(v1) = 1051931443;
  LODWORD(v2) = 1.0;
  LODWORD(v3) = 1.0;
  id result = [v0 initWithControlPoints:v2 :0.0 :v1 :v3];
  static VerticalToggleSlider.AnimationSpecs.TurnOff.Size.timingFunction = (uint64_t)result;
  return result;
}

id VerticalToggleSlider.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VerticalToggleSlider();
  return objc_msgSendSuper2(&v2, "dealloc");
}

void VerticalToggleSlider.accessibilitySetSliderValue(_:)(double a1)
{
  float v2 = *(float *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__minValue);
  float v3 = *(float *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__maxValue);
  if (v2 > v3)
  {
    __break(1u);
  }
  else
  {
    float v4 = a1;
    if (v2 > v4) {
      float v4 = *(float *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__minValue);
    }
    if (v3 < v4) {
      float v4 = *(float *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__maxValue);
    }
    VerticalToggleSlider.internalValue.setter(*(float *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_internalValueRange)+ (float)((float)((float)(v4 - v2) / (float)(v3 - v2))* (float)(*(float *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_internalValueRange + 4)- *(float *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_internalValueRange))));
    VerticalToggleSlider.dragEnded()();
  }
}

uint64_t type metadata accessor for VerticalToggleSlider()
{
  return self;
}

uint64_t sub_10045206C()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

void partial apply for closure #1 in VerticalToggleSlider.setupInteractions()()
{
}

void specialized closure #1 in VerticalToggleSlider.init(frame:)()
{
}

void specialized closure #2 in VerticalToggleSlider.init(frame:)(char *a1)
{
  id v2 = VerticalToggleSlider.growView.getter();
  float v3 = &a1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_growAnchorPoint];
  swift_beginAccess();
  uint64_t v4 = *v3;
  id v5 = [a1 traitCollection];
  *(void *)&double v6 = VerticalToggleSlider.AnchorPoint.location(for:)(v5, v4).n128_u64[0];
  double v8 = v7;

  objc_msgSend(v2, "setAnchorPoint:", v6, v8);
}

id specialized static UIView.animate(withTimingFunction:duration:delay:options:animations:completion:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, double a7, double a8)
{
  id v16 = self;
  [v16 begin];
  [v16 setAnimationTimingFunction:a1];
  long long v23 = a3;
  uint64_t v24 = a4;
  float64x2_t v19 = _NSConcreteStackBlock;
  uint64_t v20 = 1107296256;
  uint64_t v21 = thunk for @escaping @callee_guaranteed @Sendable () -> ();
  uint64_t v22 = &block_descriptor_182_0;
  uint64_t v17 = _Block_copy(&v19);
  swift_retain();
  swift_release();
  if (a5)
  {
    long long v23 = a5;
    uint64_t v24 = a6;
    float64x2_t v19 = _NSConcreteStackBlock;
    uint64_t v20 = 1107296256;
    uint64_t v21 = thunk for @escaping @callee_guaranteed (@unowned Bool) -> ();
    uint64_t v22 = &block_descriptor_185_0;
    a5 = _Block_copy(&v19);
    swift_retain();
    swift_release();
  }
  [self animateWithDuration:a2 delay:v17 options:a5 animations:a7 completion:a8];
  _Block_release(a5);
  _Block_release(v17);
  return [v16 commit];
}

void specialized VerticalToggleSlider.init(coder:)()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_packageDefinition];
  _OWORD *v1 = 0u;
  v1[1] = 0u;
  v1[2] = 0u;
  v1[3] = 0u;
  v1[4] = 0u;
  uint64_t v2 = OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_minLevelOffsetRatio;
  if (one-time initialization token for expandedSize != -1) {
    swift_once();
  }
  double v3 = 1.0 / *((double *)&static VerticalToggleSlider.DesignSpecs.expandedSize + 1);
  if (one-time initialization token for minLevelOffsetInPoint != -1) {
    swift_once();
  }
  float v4 = v3 * *(double *)&static VerticalToggleSlider.DesignSpecs.minLevelOffsetInPoint;
  *(float *)&v0[v2] = v4;
  id v5 = &v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_interactionScaleFactor];
  *(void *)id v5 = 0;
  v5[8] = 1;
  v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_isTapToToggleEnabled] = 1;
  v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_isVisuallyDisabled] = 0;
  v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_isContinuous] = 1;
  v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_automaticallyDisablesOnMaxValue] = 1;
  v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_longPressMode] = 1;
  v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_growAnchorPoint] = 8;
  *(void *)&v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider____lazy_storage___stretchView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider____lazy_storage___growView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_internalValueRange] = 0x3F80000000000000;
  *(_DWORD *)&v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_internalValue] = 1065353216;
  *(_DWORD *)&v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__minValue] = 0;
  *(_DWORD *)&v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__maxValue] = 1065353216;
  *(void *)&v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider____lazy_storage___feedbackGenerator] = 0;
  v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode] = 2;
  uint64_t v6 = OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_blurEffect;
  if (one-time initialization token for blurRadius != -1) {
    swift_once();
  }
  *(void *)&v0[v6] = [self effectWithBlurRadius:*(double *)&static VerticalToggleSlider.blurRadius];
  *(void *)&v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider____lazy_storage___visualEffectView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_packageView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider____lazy_storage___levelView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_sceneActivationObserver] = 0;
  *(void *)&v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_longPressGestureRecognizer] = 0;
  double v7 = &v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_initialDraggingLocation];
  *(void *)double v7 = 0;
  *((void *)v7 + 1) = 0;
  unsigned char v7[16] = 1;
  *(_DWORD *)&v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_initialValue] = 0;
  uint64_t v8 = OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_shapeChange;
  if (one-time initialization token for zero != -1) {
    swift_once();
  }
  double v9 = &v0[v8];
  long long v10 = *(_OWORD *)&qword_100584EE8;
  *double v9 = static VerticalToggleSlider.ShapeChange.zero;
  v9[1] = v10;
  double v11 = &v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_stretchTransform];
  *double v11 = 0x3FF0000000000000;
  v11[1] = 0;
  void v11[2] = 0;
  v11[3] = 0x3FF0000000000000;
  v11[4] = 0;
  v11[5] = 0;
  id v12 = &v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_growTransform];
  *id v12 = 0x3FF0000000000000;
  v12[1] = 0;
  void v12[2] = 0;
  v12[3] = 0x3FF0000000000000;
  v12[4] = 0;
  v12[5] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

BOOL specialized VerticalToggleSlider.point(inside:with:)(CGFloat a1, CGFloat a2)
{
  [v2 bounds];
  CGFloat v6 = v5;
  CGFloat v8 = v7;
  CGFloat v10 = v9;
  CGFloat v12 = v11;
  if (one-time initialization token for minimumTapArea != -1) {
    swift_once();
  }
  double v13 = *(double *)&static VerticalToggleSlider.DesignSpecs.minimumTapArea;
  if (one-time initialization token for size != -1) {
    swift_once();
  }
  double v14 = v13 - *(double *)&static VerticalToggleSlider.DesignSpecs.size;
  if (v13 - *(double *)&static VerticalToggleSlider.DesignSpecs.size < 0.0) {
    double v14 = 0.0;
  }
  double v15 = *((double *)&static VerticalToggleSlider.DesignSpecs.minimumTapArea + 1)
      - *((double *)&static VerticalToggleSlider.DesignSpecs.size + 1);
  if (*((double *)&static VerticalToggleSlider.DesignSpecs.minimumTapArea + 1)
     - *((double *)&static VerticalToggleSlider.DesignSpecs.size + 1) < 0.0)
    double v15 = 0.0;
  CGFloat v16 = -v14;
  CGFloat v17 = -v15;
  v20.origin.CGFloat x = v6;
  v20.origin.CGFloat y = v8;
  v20.size.CGFloat width = v10;
  v20.size.CGFloat height = v12;
  CGRect v21 = CGRectInset(v20, v16, v17);
  v19.CGFloat x = a1;
  v19.CGFloat y = a2;
  return CGRectContainsPoint(v21, v19);
}

void partial apply for closure #1 in VerticalToggleSlider.didMoveToWindow()()
{
}

unint64_t lazy protocol witness table accessor for type VerticalToggleSlider.LongPressMode and conformance VerticalToggleSlider.LongPressMode()
{
  unint64_t result = lazy protocol witness table cache variable for type VerticalToggleSlider.LongPressMode and conformance VerticalToggleSlider.LongPressMode;
  if (!lazy protocol witness table cache variable for type VerticalToggleSlider.LongPressMode and conformance VerticalToggleSlider.LongPressMode)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type VerticalToggleSlider.LongPressMode and conformance VerticalToggleSlider.LongPressMode);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type VerticalToggleSlider.AnchorPoint and conformance VerticalToggleSlider.AnchorPoint()
{
  unint64_t result = lazy protocol witness table cache variable for type VerticalToggleSlider.AnchorPoint and conformance VerticalToggleSlider.AnchorPoint;
  if (!lazy protocol witness table cache variable for type VerticalToggleSlider.AnchorPoint and conformance VerticalToggleSlider.AnchorPoint)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type VerticalToggleSlider.AnchorPoint and conformance VerticalToggleSlider.AnchorPoint);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for VerticalToggleSlider.LongPressMode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1004528F0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VerticalToggleSlider.LongPressMode()
{
  return &type metadata for VerticalToggleSlider.LongPressMode;
}

unsigned char *storeEnumTagSinglePayload for VerticalToggleSlider.AnchorPoint(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *unint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1004529F4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VerticalToggleSlider.AnchorPoint()
{
  return &type metadata for VerticalToggleSlider.AnchorPoint;
}

ValueMetadata *type metadata accessor for VerticalToggleSlider.DesignSpecs()
{
  return &type metadata for VerticalToggleSlider.DesignSpecs;
}

void *type metadata accessor for VerticalToggleSlider.ShapeChange()
{
  return &unk_10054AB40;
}

uint64_t getEnumTagSinglePayload for VerticalToggleSlider.Mode(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE)
  {
    unsigned int v2 = a2 + 2;
    if (a2 + 2 >= 0xFFFF00) {
      unsigned int v3 = 4;
    }
    else {
      unsigned int v3 = 2;
    }
    if (v2 >> 8 < 0xFF) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x100) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = a1[1];
        if (!a1[1]) {
          break;
        }
        return (*a1 | (v5 << 8)) - 2;
      case 2:
        int v5 = *(unsigned __int16 *)(a1 + 1);
        if (*(_WORD *)(a1 + 1)) {
          return (*a1 | (v5 << 8)) - 2;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x100452B08);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 8)) - 2;
      default:
        break;
    }
  }
  unsigned int v7 = *a1;
  BOOL v8 = v7 >= 2;
  unsigned int v9 = (v7 + 2147483646) & 0x7FFFFFFF;
  if (!v8) {
    unsigned int v9 = -1;
  }
  if (v9 + 1 >= 2) {
    return v9;
  }
  else {
    return 0;
  }
}

unsigned char *storeEnumTagSinglePayload for VerticalToggleSlider.Mode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 2;
  if (a3 + 2 >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xFE) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v7 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v6)
    {
      case 1:
        result[1] = v7;
        break;
      case 2:
        *(_WORD *)(result + 1) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0x100452BF0);
      case 4:
        *(_DWORD *)(result + 1) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

void *type metadata accessor for VerticalToggleSlider.Mode()
{
  return &unk_10054ABE0;
}

void partial apply for closure #1 in VerticalToggleSlider.shapeChange.didset()
{
  closure #1 in VerticalToggleSlider.shapeChange.didset(*(char **)(v0 + 16));
}

uint64_t sub_100452C30()
{
  return swift_deallocObject();
}

uint64_t block_copy_helper_70(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_70()
{
  return swift_release();
}

uint64_t sub_100452C58()
{
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in VerticalToggleSlider.updatePackage()()
{
  return closure #1 in VerticalToggleSlider.updatePackage()(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void partial apply for closure #1 in VerticalToggleSlider.isHighlighted.didset()
{
  closure #1 in VerticalToggleSlider.isHighlighted.didset(*(char **)(v0 + 16));
}

uint64_t sub_100452CA8()
{
  return swift_deallocObject();
}

void partial apply for closure #6 in VerticalToggleSlider.mode.didset()
{
  closure #6 in VerticalToggleSlider.mode.didset(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

void partial apply for closure #7 in VerticalToggleSlider.mode.didset()
{
  closure #7 in VerticalToggleSlider.mode.didset(*(unsigned __int8 **)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_100452CF8()
{
  return swift_deallocObject();
}

void partial apply for closure #1 in VerticalToggleSlider.mode.didset()
{
  closure #1 in VerticalToggleSlider.mode.didset(*(void *)(v0 + 16));
}

uint64_t sub_100452D38()
{
  return swift_deallocObject();
}

void partial apply for closure #2 in VerticalToggleSlider.mode.didset()
{
  closure #2 in VerticalToggleSlider.mode.didset(*(unsigned char *)(v0 + 16), *(char **)(v0 + 24));
}

void partial apply for closure #4 in VerticalToggleSlider.mode.didset()
{
}

void partial apply for closure #5 in VerticalToggleSlider.mode.didset()
{
  closure #5 in VerticalToggleSlider.mode.didset(*(unsigned __int8 **)(v0 + 16));
}

void partial apply for closure #9 in VerticalToggleSlider.mode.didset()
{
  closure #9 in VerticalToggleSlider.mode.didset(*(char **)(v0 + 16), *(unsigned char *)(v0 + 24));
}

void partial apply for closure #11 in VerticalToggleSlider.mode.didset()
{
  closure #11 in VerticalToggleSlider.mode.didset(*(unsigned __int8 **)(v0 + 16));
}

uint64_t partial apply for closure #12 in VerticalToggleSlider.mode.didset()
{
  return closure #12 in VerticalToggleSlider.mode.didset(*(void **)(v0 + 16));
}

void partial apply for closure #10 in VerticalToggleSlider.mode.didset()
{
}

void partial apply for closure #1 in closure #12 in VerticalToggleSlider.mode.didset()
{
}

uint64_t outlined release of (CAPackageDefinition?, CAPackageDefinition?)(uint64_t a1)
{
  uint64_t v5 = *(void *)(a1 + 80);
  uint64_t v2 = *(void *)(a1 + 88);
  unsigned int v3 = *(void **)(a1 + 96);
  outlined consume of CAPackageDefinition?(*(void *)a1, *(void *)(a1 + 8), *(void **)(a1 + 16));
  outlined consume of CAPackageDefinition?(v5, v2, v3);
  return a1;
}

void *_sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSaySo6UIViewCG_So7CALayerCs5NeverOTg50106_s11MusicCoreUI21WaveformPlayIndicatorC22removeCannedAnimations33_1239B5B087AAB7692D5EF8FD4F2B07D1LLyyFSo7e4CSo6D53Ccfu_33_383742fe4995b307a9b4a036918133abAiGTf3nnnpk_nTf1cn_nTm(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_14;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    unint64_t result = _swiftEmptyArrayStorage;
    if (!v2) {
      break;
    }
    unint64_t result = (void *)specialized ContiguousArray.reserveCapacity(_:)();
    if (v2 < 0)
    {
      __break(1u);
      return result;
    }
    uint64_t v4 = 0;
    while (v2 != v4)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v5 = *(id *)(a1 + 8 * v4 + 32);
      }
      uint64_t v6 = v5;
      ++v4;
      id v7 = [v5 layer];

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      if (v2 == v4) {
        return _swiftEmptyArrayStorage;
      }
    }
    __break(1u);
LABEL_14:
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t thunk for @escaping @callee_guaranteed (@unowned UIViewAnimatingPosition) -> ()(uint64_t a1, uint64_t a2)
{
  unsigned int v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);

  return swift_release();
}

unint64_t WaveformPlayIndicator.__allocating_init(settings:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return WaveformPlayIndicator.init(settings:)(a1);
}

unint64_t WaveformPlayIndicator.init(settings:)(void *a1)
{
  double v33 = a1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&_s7Combine9PublishedVySbGMD_0);
  uint64_t v2 = *(void *)(v32 - 8);
  __chkstk_darwin();
  uint64_t v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v1[OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_mode] = 0;
  id v5 = &v1[OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_colorPalette];
  uint64_t v6 = self;
  unint64_t v7 = v1;
  id v31 = [v6 tintColor];
  id v8 = [v6 labelColor];
  id v9 = [v8 colorWithAlphaComponent:0.35];

  id v10 = [v6 labelColor];
  id v11 = [v10 colorWithAlphaComponent:0.2];

  id v12 = [v6 labelColor];
  id v13 = [v12 colorWithAlphaComponent:0.6];

  *id v5 = v31;
  v5[1] = v9;
  v5[2] = v11;
  _OWORD v5[3] = v13;
  uint64_t v14 = OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_waveform;
  *(void *)(v7 + v14) = [self zero];
  *(void *)(v7 + OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_exclusiveAnimation) = 0;
  *(void *)(v7 + OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_pulseTask) = 0;
  *(void *)(v7 + OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_barRatio) = 0x3FE0000000000000;
  double v15 = (char *)(v7 + OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator__isVisible);
  char v36 = 0;
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v15, v4, v32);
  *(void *)(v7 + OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator____lazy_storage___bars) = 0;
  uint64_t v16 = OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_cannedAnimationAsset;
  type metadata accessor for BouncyBarsAsset();
  swift_allocObject();
  *(void *)(v7 + v16) = BouncyBarsAsset.init()();
  CGFloat v17 = v33;
  *(void *)(v7 + OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_settings) = v33;
  id v18 = v17;
  id v19 = [v18 stops];
  type metadata accessor for UIMenu(0, &_sSo8NSNumberCML_1);
  unint64_t v20 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v20 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v21 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v21 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  uint64_t v22 = (objc_class *)ObjectType;
  if (__OFSUB__(v21, 1))
  {
    __break(1u);
  }
  else
  {
    *(void *)(v7 + OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_numberOfBars) = v21 - 1;

    v35.receiver = (id)v7;
    v35.super_class = v22;
    unint64_t v20 = (unint64_t)objc_msgSendSuper2(&v35, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
    unint64_t result = WaveformPlayIndicator.bars.getter();
    unint64_t v7 = result;
    if (!(result >> 62))
    {
      uint64_t v24 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v24) {
        goto LABEL_6;
      }
LABEL_15:
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&_ss23_ContiguousArrayStorageCy5UIKit17UITraitDefinition_pXpGMD_0);
      uint64_t v28 = swift_allocObject();
      *(_OWORD *)(v28 + 16) = xmmword_100493400;
      *(void *)(v28 + 32) = type metadata accessor for UITraitActiveAppearance();
      *(void *)(v28 + 40) = &protocol witness table for UITraitActiveAppearance;
      id v29 = (id)v20;
      UIView.registerForTraitChanges<A>(_:handler:)();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();

      return (unint64_t)v29;
    }
  }
  unint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v24 = result;
  if (!result) {
    goto LABEL_15;
  }
LABEL_6:
  if (v24 >= 1)
  {
    uint64_t v25 = 0;
    do
    {
      if ((v7 & 0xC000000000000001) != 0) {
        id v26 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v26 = *(id *)(v7 + 8 * v25 + 32);
      }
      double v27 = v26;
      ++v25;
      [(id)v20 addSubview:v26];
      [v27 setAlpha:0.0];
    }
    while (v24 != v25);
    goto LABEL_15;
  }
  __break(1u);
  return result;
}

uint64_t WaveformPlayIndicator.bars.getter()
{
  uint64_t v1 = OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator____lazy_storage___bars;
  if (*(void *)(v0 + OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator____lazy_storage___bars))
  {
    uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator____lazy_storage___bars);
  }
  else
  {
    WaveformPlayIndicator.createBars()();
    uint64_t v2 = v3;
    *(void *)(v0 + v1) = v3;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v2;
}

Swift::Void __swiftcall WaveformPlayIndicator.fillBarsForMode()()
{
  uint64_t v1 = (unsigned char *)(v0 + OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_mode);
  swift_beginAccess();
  switch(*v1)
  {
    case 1:
      uint64_t v2 = v0 + OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_colorPalette;
      swift_beginAccess();
      id v3 = *(id *)(v2 + 8);
      unint64_t v4 = WaveformPlayIndicator.bars.getter();
      unint64_t v5 = v4;
      if (v4 >> 62)
      {
        uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
        if (v6) {
          goto LABEL_4;
        }
      }
      else
      {
        uint64_t v6 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v6)
        {
LABEL_4:
          if (v6 >= 1)
          {
            for (uint64_t i = 0; i != v6; ++i)
            {
              if ((v5 & 0xC000000000000001) != 0) {
                id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
              }
              else {
                id v8 = *(id *)(v5 + 8 * i + 32);
              }
              id v9 = v8;
              [v8 setBackgroundColor:v3];
            }
            goto LABEL_31;
          }
          __break(1u);
          goto LABEL_33;
        }
      }
      goto LABEL_31;
    case 2:
      id v10 = (id *)(v0 + OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_colorPalette);
      swift_beginAccess();
      id v3 = *v10;
      unint64_t v11 = WaveformPlayIndicator.bars.getter();
      unint64_t v12 = v11;
      if (v11 >> 62)
      {
        uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
        if (v13)
        {
LABEL_12:
          if (v13 >= 1)
          {
            for (uint64_t j = 0; j != v13; ++j)
            {
              if ((v12 & 0xC000000000000001) != 0) {
                id v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
              }
              else {
                id v15 = *(id *)(v12 + 8 * j + 32);
              }
              uint64_t v16 = v15;
              [v15 setBackgroundColor:v3];
            }
            goto LABEL_31;
          }
LABEL_33:
          __break(1u);
          goto LABEL_34;
        }
      }
      else
      {
        uint64_t v13 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v13) {
          goto LABEL_12;
        }
      }
      goto LABEL_31;
    case 3:
      CGFloat v17 = (id *)(v0 + OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_colorPalette);
      swift_beginAccess();
      id v3 = *v17;
      unint64_t v18 = WaveformPlayIndicator.bars.getter();
      unint64_t v19 = v18;
      if (v18 >> 62)
      {
        uint64_t v20 = _CocoaArrayWrapper.endIndex.getter();
        if (v20)
        {
LABEL_20:
          if (v20 >= 1)
          {
            for (uint64_t k = 0; k != v20; ++k)
            {
              if ((v19 & 0xC000000000000001) != 0) {
                id v22 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
              }
              else {
                id v22 = *(id *)(v19 + 8 * k + 32);
              }
              long long v23 = v22;
              [v22 setBackgroundColor:v3];
            }
            goto LABEL_31;
          }
LABEL_34:
          __break(1u);
          JUMPOUT(0x1004539D4);
        }
      }
      else
      {
        uint64_t v20 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v20) {
          goto LABEL_20;
        }
      }
LABEL_31:

      swift_bridgeObjectRelease();
      return;
    default:
      return;
  }
}

void WaveformPlayIndicator.reflectChange(from:to:)(unsigned __int8 a1, unsigned __int8 a2)
{
  unsigned __int8 v4 = a1;
  if (a1 == a2 && (a1 != 3 || (WaveformPlayIndicator.hasCannedAnimations.getter() & 1) != 0)) {
    return;
  }
  unint64_t v5 = WaveformPlayIndicator.bars.getter();
  type metadata accessor for AnimationGroup();
  uint64_t v6 = swift_allocObject();
  unint64_t v7 = (char *)_swiftEmptyArrayStorage;
  *(void *)(v6 + 16) = _swiftEmptyArrayStorage;
  *(void *)(v6 + 24) = _swiftEmptyArrayStorage;
  uint64_t v8 = OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_pulseTask;
  if (*(void *)&v2[OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_pulseTask])
  {
    swift_retain();
    Task.cancel()();
    swift_release();
  }
  *(void *)&v2[v8] = 0;
  swift_release();
  if (v4 == 3) {
    WaveformPlayIndicator.removeCannedAnimations()();
  }
  unsigned __int8 v93 = a2;
  if (a2 == 1)
  {
    id v22 = objc_msgSend(objc_allocWithZone((Class)UICubicTimingParameters), "initWithControlPoint1:controlPoint2:", 0.33, 1.0, 0.67, 1.0);
    id v23 = [objc_allocWithZone((Class)UIViewPropertyAnimator) initWithDuration:v22 timingParameters:0.9];

    uint64_t v24 = swift_allocObject();
    *(void *)(v24 + 16) = v2;
    double v100 = partial apply for closure #3 in WaveformPlayIndicator.reflectChange(from:to:);
    uint64_t v101 = v24;
    CGAffineTransform aBlock = _NSConcreteStackBlock;
    uint64_t v97 = 1107296256;
    CGRect v98 = thunk for @escaping @callee_guaranteed @Sendable () -> ();
    CGRect v99 = &block_descriptor_81_0;
    uint64_t v25 = _Block_copy(&aBlock);
    swift_retain_n();
    id v26 = v2;
    swift_release();
    [v23 addAnimations:v25];
    _Block_release(v25);
    swift_release();
    id v27 = v23;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v6 + 16) = _swiftEmptyArrayStorage;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      unint64_t v7 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, _swiftEmptyArrayStorage[2] + 1, 1, (char *)_swiftEmptyArrayStorage);
      *(void *)(v6 + 16) = v7;
    }
    unint64_t v30 = *((void *)v7 + 2);
    unint64_t v29 = *((void *)v7 + 3);
    if (v30 >= v29 >> 1)
    {
      unint64_t v7 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((char *)(v29 > 1), v30 + 1, 1, v7);
      *(void *)(v6 + 16) = v7;
    }
    *((void *)v7 + 2) = v30 + 1;
    id v31 = &v7[16 * v30];
    *((void *)v31 + 4) = v27;
    *((void *)v31 + 5) = 0;

    swift_release();
  }
  else if (a2 == 4)
  {
    id v9 = objc_msgSend(objc_allocWithZone((Class)UICubicTimingParameters), "initWithControlPoint1:controlPoint2:", 0.5, 1.0, 0.89, 1.0);
    id v10 = [objc_allocWithZone((Class)UIViewPropertyAnimator) initWithDuration:v9 timingParameters:0.25];

    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = v2;
    double v100 = partial apply for closure #1 in WaveformPlayIndicator.reflectChange(from:to:);
    uint64_t v101 = v11;
    CGAffineTransform aBlock = _NSConcreteStackBlock;
    uint64_t v97 = 1107296256;
    CGRect v98 = thunk for @escaping @callee_guaranteed @Sendable () -> ();
    CGRect v99 = &block_descriptor_87_0;
    unint64_t v12 = _Block_copy(&aBlock);
    uint64_t v13 = v2;
    swift_release();
    [v10 addAnimations:v12];
    _Block_release(v12);
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = v13;
    *(unsigned char *)(v14 + 24) = 4;
    double v100 = partial apply for closure #2 in WaveformPlayIndicator.reflectChange(from:to:);
    uint64_t v101 = v14;
    CGAffineTransform aBlock = _NSConcreteStackBlock;
    uint64_t v97 = 1107296256;
    CGRect v98 = thunk for @escaping @callee_guaranteed (@unowned UIViewAnimatingPosition) -> ();
    CGRect v99 = &block_descriptor_93_1;
    id v15 = _Block_copy(&aBlock);
    uint64_t v16 = v13;
    swift_release();
    [v10 addCompletion:v15];
    _Block_release(v15);
    id v17 = v10;
    char v18 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v6 + 16) = _swiftEmptyArrayStorage;
    if ((v18 & 1) == 0)
    {
      unint64_t v7 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, _swiftEmptyArrayStorage[2] + 1, 1, (char *)_swiftEmptyArrayStorage);
      *(void *)(v6 + 16) = v7;
    }
    unint64_t v20 = *((void *)v7 + 2);
    unint64_t v19 = *((void *)v7 + 3);
    if (v20 >= v19 >> 1)
    {
      unint64_t v7 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((char *)(v19 > 1), v20 + 1, 1, v7);
      *(void *)(v6 + 16) = v7;
    }
    *((void *)v7 + 2) = v20 + 1;
    uint64_t v21 = &v7[16 * v20];
    *((void *)v21 + 4) = v17;
    *((void *)v21 + 5) = 0;
  }
  if (v4)
  {
    int v32 = a2;
    if (a2)
    {
LABEL_22:
      if (v32 == 2)
      {
        swift_bridgeObjectRelease();
        unsigned __int8 v70 = v4;
        id v71 = objc_msgSend(objc_allocWithZone((Class)UICubicTimingParameters), "initWithControlPoint1:controlPoint2:", 0.5, 1.0, 0.89, 1.0);
        id v72 = [objc_allocWithZone((Class)UIViewPropertyAnimator) initWithDuration:v71 timingParameters:0.15];

        uint64_t v73 = swift_allocObject();
        *(void *)(v73 + 16) = v2;
        *(unsigned char *)(v73 + 24) = v70;
        double v100 = partial apply for closure #6 in WaveformPlayIndicator.reflectChange(from:to:);
        uint64_t v101 = v73;
        CGAffineTransform aBlock = _NSConcreteStackBlock;
        uint64_t v97 = 1107296256;
        CGRect v98 = thunk for @escaping @callee_guaranteed @Sendable () -> ();
        CGRect v99 = &block_descriptor_63_2;
        uint64_t v74 = _Block_copy(&aBlock);
        swift_retain_n();
        id v75 = v2;
        swift_release();
        [v72 addAnimations:v74];
        _Block_release(v74);
        swift_release();
        double v76 = *(char **)(v6 + 16);
        id v77 = v72;
        char v78 = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(v6 + 16) = v76;
        if ((v78 & 1) == 0)
        {
          double v76 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *((void *)v76 + 2) + 1, 1, v76);
          *(void *)(v6 + 16) = v76;
        }
        unint64_t v80 = *((void *)v76 + 2);
        unint64_t v79 = *((void *)v76 + 3);
        if (v80 >= v79 >> 1)
        {
          double v76 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((char *)(v79 > 1), v80 + 1, 1, v76);
          *(void *)(v6 + 16) = v76;
        }
        *((void *)v76 + 2) = v80 + 1;
        id v81 = &v76[16 * v80];
        *((void *)v81 + 4) = v77;
        *((void *)v81 + 5) = 0;

        swift_release();
      }
      else
      {
        if (v32 == 3)
        {
          id v33 = objc_msgSend(objc_allocWithZone((Class)UICubicTimingParameters), "initWithControlPoint1:controlPoint2:", 0.5, 1.0, 0.89, 1.0);
          id v34 = [objc_allocWithZone((Class)UIViewPropertyAnimator) initWithDuration:v33 timingParameters:0.15];

          uint64_t v35 = swift_allocObject();
          *(void *)(v35 + 16) = v2;
          double v100 = partial apply for closure #5 in WaveformPlayIndicator.reflectChange(from:to:);
          uint64_t v101 = v35;
          CGAffineTransform aBlock = _NSConcreteStackBlock;
          uint64_t v97 = 1107296256;
          CGRect v98 = thunk for @escaping @callee_guaranteed @Sendable () -> ();
          CGRect v99 = &block_descriptor_69_1;
          char v36 = _Block_copy(&aBlock);
          swift_retain_n();
          double v37 = v2;
          swift_release();
          [v34 addAnimations:v36];
          _Block_release(v36);
          swift_release();
          CGFloat v38 = *(char **)(v6 + 16);
          id v39 = v34;
          char v40 = swift_isUniquelyReferenced_nonNull_native();
          *(void *)(v6 + 16) = v38;
          if ((v40 & 1) == 0)
          {
            CGFloat v38 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *((void *)v38 + 2) + 1, 1, v38);
            *(void *)(v6 + 16) = v38;
          }
          unint64_t v42 = *((void *)v38 + 2);
          unint64_t v41 = *((void *)v38 + 3);
          if (v42 >= v41 >> 1)
          {
            CGFloat v38 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((char *)(v41 > 1), v42 + 1, 1, v38);
            *(void *)(v6 + 16) = v38;
          }
          *((void *)v38 + 2) = v42 + 1;
          double v43 = &v38[16 * v42];
          *((void *)v43 + 4) = v39;
          *((void *)v43 + 5) = 0;

          swift_release();
        }
        swift_bridgeObjectRelease();
      }
      goto LABEL_53;
    }
  }
  else
  {
    unsigned __int8 v92 = v4;
    uint64_t v95 = v6;
    unint64_t v44 = swift_bridgeObjectRetain();
    unint64_t v91 = v5;
    specialized Sequence.reversed()(v44);
    uint64_t v46 = v45;
    WaveformPlayIndicator.layoutBarsToWaveform()();
    uint64_t v94 = *(void *)(v46 + 16);
    if (v94)
    {
      uint64_t v47 = 0;
      CGFloat v48 = (void **)(v46 + 40);
      do
      {
        CGFloat v50 = *(v48 - 1);
        double v49 = *v48;
        id v51 = objc_allocWithZone((Class)UICubicTimingParameters);
        id v52 = v49;
        id v53 = v50;
        id v54 = objc_msgSend(v51, "initWithControlPoint1:controlPoint2:", 0.32, 0.0, 0.67, 0.0);
        id v55 = [objc_allocWithZone((Class)UIViewPropertyAnimator) initWithDuration:v54 timingParameters:0.5];

        uint64_t v56 = swift_allocObject();
        *(void *)(v56 + 16) = v53;
        *(void *)(v56 + 24) = v49;
        double v100 = partial apply for closure #4 in WaveformPlayIndicator.reflectChange(from:to:);
        uint64_t v101 = v56;
        CGAffineTransform aBlock = _NSConcreteStackBlock;
        uint64_t v97 = 1107296256;
        CGRect v98 = thunk for @escaping @callee_guaranteed @Sendable () -> ();
        CGRect v99 = &block_descriptor_75_1;
        double v57 = _Block_copy(&aBlock);
        swift_retain_n();
        id v58 = v53;
        id v59 = v52;
        swift_release();
        [v55 addAnimations:v57];
        _Block_release(v57);
        swift_release();
        CGFloat v60 = *(char **)(v95 + 16);
        id v61 = v55;
        char v62 = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(v95 + 16) = v60;
        if ((v62 & 1) == 0)
        {
          CGFloat v60 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *((void *)v60 + 2) + 1, 1, v60);
          *(void *)(v95 + 16) = v60;
        }
        unint64_t v64 = *((void *)v60 + 2);
        unint64_t v63 = *((void *)v60 + 3);
        if (v64 >= v63 >> 1)
        {
          CGFloat v60 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((char *)(v63 > 1), v64 + 1, 1, v60);
          *(void *)(v95 + 16) = v60;
        }
        v48 += 2;
        *((void *)v60 + 2) = v64 + 1;
        double v65 = &v60[16 * v64];
        *((void *)v65 + 4) = v61;
        *((double *)v65 + 5) = (double)v47 * 0.03;

        swift_release();
        ++v47;
      }
      while (v94 != v47);
    }
    swift_bridgeObjectRelease();
    uint64_t v6 = v95;
    unint64_t v5 = v91;
    unsigned __int8 v4 = v92;
    int v32 = v93;
    if (v93) {
      goto LABEL_22;
    }
  }
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v66 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v66) {
      goto LABEL_40;
    }
  }
  else
  {
    uint64_t v66 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v66)
    {
LABEL_40:
      if (v66 < 1)
      {
        __break(1u);
        return;
      }
      for (uint64_t i = 0; i != v66; ++i)
      {
        if ((v5 & 0xC000000000000001) != 0) {
          id v68 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v68 = *(id *)(v5 + 8 * i + 32);
        }
        CGFloat v69 = v68;
        [v68 setAlpha:0.0];
      }
    }
  }
  swift_bridgeObjectRelease();
  WaveformPlayIndicator.layoutBarsToWaveform()();
LABEL_53:
  uint64_t v82 = *(void *)&v2[OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_exclusiveAnimation];
  if (v82)
  {
    uint64_t v83 = swift_allocObject();
    *(void *)(v83 + 16) = v2;
    *(void *)(v83 + 24) = v6;
    uint64_t v84 = swift_allocObject();
    *(void *)(v84 + 16) = partial apply for closure #7 in WaveformPlayIndicator.reflectChange(from:to:);
    *(void *)(v84 + 24) = v83;
    New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFyyc_Tg5_0 = *(void **)(v82 + 24);
    double v86 = v2;
    swift_retain();
    swift_retain();
    swift_retain();
    char v87 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v82 + 24) = New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFyyc_Tg5_0;
    if ((v87 & 1) == 0)
    {
      New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFyyc_Tg5_0 = _ss12_ArrayBufferV20_consumeAndCreateNew14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFyyc_Tg5_0(0, New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFyyc_Tg5_0[2]+ 1, 1, New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFyyc_Tg5_0);
      *(void *)(v82 + 24) = New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFyyc_Tg5_0;
    }
    unint64_t v89 = New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFyyc_Tg5_0[2];
    unint64_t v88 = New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFyyc_Tg5_0[3];
    if (v89 >= v88 >> 1)
    {
      New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFyyc_Tg5_0 = _ss12_ArrayBufferV20_consumeAndCreateNew14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFyyc_Tg5_0((void *)(v88 > 1), v89 + 1, 1, New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFyyc_Tg5_0);
      *(void *)(v82 + 24) = New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFyyc_Tg5_0;
    }
    New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFyyc_Tg5_0[2] = v89 + 1;
    float64x2_t v90 = &New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFyyc_Tg5_0[2 * v89];
    v90[4] = partial apply for thunk for @escaping @callee_guaranteed () -> ();
    v90[5] = v84;
    swift_release();
    swift_release();
  }
  else
  {
    AnimationGroup.startAnimation()();
  }
  swift_release();
}

uint64_t WaveformPlayIndicator.mode.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_mode);
  swift_beginAccess();
  return *v1;
}

void WaveformPlayIndicator.mode.setter(unsigned __int8 a1)
{
  id v3 = (unsigned __int8 *)(v1 + OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_mode);
  swift_beginAccess();
  unsigned __int8 v4 = *v3;
  *id v3 = a1;
  WaveformPlayIndicator.reflectChange(from:to:)(v4, a1);
}

void (*WaveformPlayIndicator.mode.modify(void *a1))(uint64_t a1)
{
  id v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_mode;
  v3[3] = v1;
  v3[4] = v4;
  unint64_t v5 = (unsigned char *)(v1 + v4);
  swift_beginAccess();
  *((unsigned char *)v3 + 40) = *v5;
  return WaveformPlayIndicator.mode.modify;
}

void WaveformPlayIndicator.mode.modify(uint64_t a1)
{
  uint64_t v1 = *(unsigned char **)a1;
  uint64_t v3 = *(void *)(*(void *)a1 + 24);
  uint64_t v2 = *(void *)(*(void *)a1 + 32);
  unsigned __int8 v4 = *(unsigned char *)(v3 + v2);
  unsigned __int8 v5 = v1[40];
  *(unsigned char *)(v3 + v2) = v5;
  WaveformPlayIndicator.reflectChange(from:to:)(v4, v5);

  free(v1);
}

uint64_t type metadata accessor for BouncyBarsAsset()
{
  return self;
}

void one-time initialization function for overlay()
{
  uint64_t v0 = self;
  id v1 = [v0 whiteColor];
  id v2 = [v0 whiteColor];
  id v3 = [v0 whiteColor];
  id v4 = [v3 colorWithAlphaComponent:0.2];

  id v5 = [v0 whiteColor];
  id v6 = [v5 colorWithAlphaComponent:0.6];

  static WaveformPlayIndicator.ColorPalette.overlaCGFloat y = (uint64_t)v1;
  unk_1005AEDF0 = v2;
  qword_1005AEDF8 = (uint64_t)v4;
  unk_1005AEE00 = v6;
}

uint64_t *WaveformPlayIndicator.ColorPalette.overlay.unsafeMutableAddressor()
{
  if (one-time initialization token for overlay != -1) {
    swift_once();
  }
  return &static WaveformPlayIndicator.ColorPalette.overlay;
}

uint64_t static WaveformPlayIndicator.ColorPalette.overlay.getter()
{
  if (one-time initialization token for overlay != -1) {
    swift_once();
  }
  uint64_t v0 = static WaveformPlayIndicator.ColorPalette.overlay;
  id v1 = (void *)unk_1005AEDF0;
  id v2 = (void *)qword_1005AEDF8;
  id v3 = (void *)unk_1005AEE00;
  id v4 = (id)static WaveformPlayIndicator.ColorPalette.overlay;
  id v5 = v1;
  id v6 = v2;
  id v7 = v3;
  return v0;
}

uint64_t static WaveformPlayIndicator.ColorPalette.__derived_struct_equals(_:_:)()
{
  if ((static NSObject.== infix(_:_:)() & 1) != 0
    && (static NSObject.== infix(_:_:)() & 1) != 0
    && (static NSObject.== infix(_:_:)() & 1) != 0)
  {
    return static NSObject.== infix(_:_:)() & 1;
  }
  else
  {
    return 0;
  }
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance WaveformPlayIndicator.ColorPalette()
{
  if ((static NSObject.== infix(_:_:)() & 1) != 0
    && (static NSObject.== infix(_:_:)() & 1) != 0
    && (static NSObject.== infix(_:_:)() & 1) != 0)
  {
    return static NSObject.== infix(_:_:)() & 1;
  }
  else
  {
    return 0;
  }
}

void WaveformPlayIndicator.colorPalette.didset()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_colorPalette;
  swift_beginAccess();
  id v2 = *(void **)v1;
  id v3 = *(void **)(v1 + 8);
  id v4 = *(void **)(v1 + 16);
  id v5 = *(void **)(v1 + 24);
  type metadata accessor for UIMenu(0, (unint64_t *)&_sSo8NSObjectCML_1);
  id v6 = v2;
  id v7 = v3;
  id v8 = v4;
  id v9 = v5;
  if ((static NSObject.== infix(_:_:)() & 1) == 0
    || (static NSObject.== infix(_:_:)() & 1) == 0
    || (static NSObject.== infix(_:_:)() & 1) == 0)
  {

    goto LABEL_7;
  }
  char v10 = static NSObject.== infix(_:_:)();

  if ((v10 & 1) == 0) {
LABEL_7:
  }
    WaveformPlayIndicator.fillBarsForMode()();
}

void *WaveformPlayIndicator.colorPalette.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_colorPalette;
  swift_beginAccess();
  id v2 = *(void **)v1;
  id v3 = *(void **)(v1 + 8);
  id v5 = *(void **)(v1 + 16);
  id v4 = *(void **)(v1 + 24);
  id v6 = v2;
  id v7 = v3;
  id v8 = v5;
  id v9 = v4;
  return v2;
}

void WaveformPlayIndicator.colorPalette.setter(void *a1, void *a2, void *a3, void *a4)
{
  uint64_t v9 = v4 + OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_colorPalette;
  swift_beginAccess();
  char v10 = *(void **)v9;
  uint64_t v11 = *(void **)(v9 + 8);
  unint64_t v12 = *(void **)(v9 + 16);
  uint64_t v13 = *(void **)(v9 + 24);
  *(void *)uint64_t v9 = a1;
  *(void *)(v9 + 8) = a2;
  *(void *)(v9 + 16) = a3;
  *(void *)(v9 + 24) = a4;
  id v14 = a1;
  id v15 = a2;
  id v16 = a3;
  id v17 = a4;
  WaveformPlayIndicator.colorPalette.didset();
}

void (*WaveformPlayIndicator.colorPalette.modify(void *a1))(void ***a1, char a2)
{
  id v3 = malloc(0x40uLL);
  *a1 = v3;
  v3[7] = v1;
  uint64_t v4 = v1 + OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_colorPalette;
  swift_beginAccess();
  id v5 = *(void **)v4;
  id v6 = *(void **)(v4 + 8);
  id v8 = *(void **)(v4 + 16);
  id v7 = *(void **)(v4 + 24);
  *id v3 = v5;
  v3[1] = v6;
  v3[2] = v8;
  v3[3] = v7;
  id v9 = v5;
  id v10 = v6;
  id v11 = v8;
  id v12 = v7;
  return WaveformPlayIndicator.colorPalette.modify;
}

void WaveformPlayIndicator.colorPalette.modify(void ***a1, char a2)
{
  id v2 = *a1;
  id v3 = **a1;
  if (a2)
  {
    WaveformPlayIndicator.colorPalette.setter(v3, v2[1], v2[2], v2[3]);
    uint64_t v4 = v2[1];
    id v5 = v2[2];
    id v6 = v2[3];
  }
  else
  {
    WaveformPlayIndicator.colorPalette.setter(v3, v2[1], v2[2], v2[3]);
  }

  free(v2);
}

id WaveformPlayIndicator.waveform.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_waveform);
  swift_beginAccess();
  id v2 = *v1;

  return v2;
}

void WaveformPlayIndicator.waveform.setter(void *a1)
{
  id v3 = (void **)&v1[OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_waveform];
  swift_beginAccess();
  uint64_t v4 = *v3;
  *id v3 = a1;
  id v5 = a1;

  id v6 = &v1[OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_mode];
  swift_beginAccess();
  if (*v6 == 2)
  {
    id v7 = self;
    id v8 = *(void **)&v1[OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_settings];
    [v8 animationDuration];
    double v10 = v9;
    [v8 springDamping];
    double v12 = v11;
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = v1;
    void v16[4] = partial apply for closure #1 in WaveformPlayIndicator.animateWaveform();
    v16[5] = v13;
    v16[0] = _NSConcreteStackBlock;
    v16[1] = 1107296256;
    void v16[2] = thunk for @escaping @callee_guaranteed @Sendable () -> ();
    v16[3] = &block_descriptor_73;
    id v14 = _Block_copy(v16);
    id v15 = v1;
    swift_release();
    [v7 animateWithDuration:0 delay:v14 usingSpringWithDamping:0 initialSpringVelocity:v10 options:0.0 animations:v12 completion:0.0];
    _Block_release(v14);
  }
}

void (*WaveformPlayIndicator.waveform.modify(void *a1))(void ****a1, char a2)
{
  id v3 = malloc(0x50uLL);
  *a1 = v3;
  v3[9] = v1;
  swift_beginAccess();
  return WaveformPlayIndicator.waveform.modify;
}

void WaveformPlayIndicator.waveform.modify(void ****a1, char a2)
{
  id v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    uint64_t v4 = (char *)v3[9] + OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_mode;
    swift_beginAccess();
    if (*v4 == 2)
    {
      id v5 = v3[9];
      id v6 = self;
      id v7 = *(void **)((char *)v5 + OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_settings);
      [v7 animationDuration];
      double v9 = v8;
      [v7 springDamping];
      double v11 = v10;
      uint64_t v12 = swift_allocObject();
      *(void *)(v12 + 16) = v5;
      v3[4] = (void **)closure #1 in WaveformPlayIndicator.animateWaveform()partial apply;
      v3[5] = (void **)v12;
      *id v3 = _NSConcreteStackBlock;
      v3[1] = (void **)1107296256;
      v3[2] = (void **)thunk for @escaping @callee_guaranteed @Sendable () -> ();
      v3[3] = (void **)&block_descriptor_10_2;
      uint64_t v13 = _Block_copy(v3);
      id v14 = v5;
      swift_release();
      [v6 animateWithDuration:0 delay:v13 usingSpringWithDamping:0 initialSpringVelocity:v9 options:0.0 animations:v11 completion:0.0];
      _Block_release(v13);
    }
  }

  free(v3);
}

uint64_t WaveformPlayIndicator.hasCannedAnimations.getter()
{
  unint64_t v0 = WaveformPlayIndicator.bars.getter();
  unint64_t v1 = v0;
  if (v0 >> 62) {
    goto LABEL_15;
  }
  uint64_t v2 = *(void *)((v0 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; uint64_t v2 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v3 = 4;
    while (1)
    {
      id v4 = (v1 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
         : *(id *)(v1 + 8 * v3);
      id v5 = v4;
      uint64_t v6 = v3 - 3;
      if (__OFADD__(v3 - 4, 1)) {
        break;
      }
      id v7 = [v4 layer];
      NSString v8 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v9 = [v7 animationForKey:v8];

      if (!v9) {
        goto LABEL_13;
      }
      id v10 = [v5 layer];
      NSString v11 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v12 = [v10 animationForKey:v11];

      if (!v12
        || (id v13 = [v5 layer],
            NSString v14 = String._bridgeToObjectiveC()(),
            swift_bridgeObjectRelease(),
            id v15 = [v13 animationForKey:v14],
            v15,
            v13,
            v14,
            !v15))
      {
LABEL_13:
        swift_bridgeObjectRelease_n();

        return 0;
      }

      ++v3;
      if (v6 == v2) {
        goto LABEL_12;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
  }
LABEL_12:
  swift_bridgeObjectRelease_n();
  return 1;
}

uint64_t WaveformPlayIndicator.removeCannedAnimations()()
{
  unint64_t v0 = WaveformPlayIndicator.bars.getter();
  unint64_t v1 = (unint64_t)_sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSaySo6UIViewCG_So7CALayerCs5NeverOTg50106_s11MusicCoreUI21WaveformPlayIndicatorC22removeCannedAnimations33_1239B5B087AAB7692D5EF8FD4F2B07D1LLyyFSo7e4CSo6D53Ccfu_33_383742fe4995b307a9b4a036918133abAiGTf3nnnpk_nTf1cn_nTm(v0);
  swift_bridgeObjectRelease();
  if (v1 >> 62) {
    goto LABEL_14;
  }
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v2)
  {
    unint64_t v3 = 0;
    unint64_t v14 = v1 & 0xC000000000000001;
    id v13 = (void *)v1;
    uint64_t v12 = v1 & 0xFFFFFFFFFFFFFF8;
    while (1)
    {
      if (v14)
      {
        id v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (v3 >= *(void *)(v12 + 16)) {
          goto LABEL_13;
        }
        id v4 = *(id *)(v1 + 8 * v3 + 32);
      }
      id v5 = v4;
      if (__OFADD__(v3, 1)) {
        break;
      }
      unint64_t v15 = v3 + 1;
      NSString v6 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v5 removeAnimationForKey:v6];

      NSString v7 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v5 removeAnimationForKey:v7];

      NSString v8 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v5 removeAnimationForKey:v8];

      id v9 = [v5 presentationLayer];
      if (v9)
      {
        id v10 = v9;
        [v9 frame];
        objc_msgSend(v5, "setFrame:");
        [v10 cornerRadius];
        objc_msgSend(v5, "setCornerRadius:");
      }
      ++v3;
      unint64_t v1 = (unint64_t)v13;
      if (v15 == v2) {
        return swift_bridgeObjectRelease();
      }
    }
    __break(1u);
LABEL_13:
    __break(1u);
LABEL_14:
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

unint64_t closure #1 in WaveformPlayIndicator.reflectChange(from:to:)(uint64_t a1)
{
  WaveformPlayIndicator.layoutBarsToWaveform()();
  uint64_t v2 = a1 + OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_colorPalette;
  swift_beginAccess();
  id v3 = *(id *)(v2 + 16);
  unint64_t result = WaveformPlayIndicator.bars.getter();
  unint64_t v5 = result;
  if (!(result >> 62))
  {
    uint64_t v6 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v6) {
      goto LABEL_3;
    }
LABEL_10:

    return swift_bridgeObjectRelease();
  }
  unint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v6 = result;
  if (!result) {
    goto LABEL_10;
  }
LABEL_3:
  if (v6 >= 1)
  {
    for (uint64_t i = 0; i != v6; ++i)
    {
      if ((v5 & 0xC000000000000001) != 0) {
        id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v8 = *(id *)(v5 + 8 * i + 32);
      }
      id v9 = v8;
      [v8 setBackgroundColor:v3];
    }
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

unint64_t WaveformPlayIndicator.layoutBarsToWaveform()()
{
  [v0 bounds];
  double Width = CGRectGetWidth(v22);
  double v2 = *(double *)&v0[OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_numberOfBars];
  [v0 bounds];
  double v3 = CGRectGetWidth(v23);
  id v4 = &v0[OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_mode];
  swift_beginAccess();
  if (*v4 == 2)
  {
    unint64_t v5 = (id *)&v0[OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_waveform];
    swift_beginAccess();
    id v6 = *v5;
  }
  else
  {
    id v6 = [self zero];
  }
  id v21 = v6;
  unint64_t result = WaveformPlayIndicator.bars.getter();
  unint64_t v8 = result;
  if (result >> 62)
  {
LABEL_18:
    unint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v9 = result;
    if (result) {
      goto LABEL_6;
    }
LABEL_19:

    return swift_bridgeObjectRelease();
  }
  uint64_t v9 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v9) {
    goto LABEL_19;
  }
LABEL_6:
  if (v9 >= 1)
  {
    uint64_t v10 = 0;
    double v11 = Width / (double)*(uint64_t *)&v2;
    double Width = v11 * 0.5;
    double v12 = v3 / (double)*(uint64_t *)&v2 - v11 * 0.5;
    double v3 = v11 * 0.5 * 0.5;
    double v13 = v12 * 0.5;
    while (1)
    {
      if ((v8 & 0xC000000000000001) != 0) {
        id v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v14 = *(id *)(v8 + 8 * v10 + 32);
      }
      unint64_t v15 = v14;
      double v2 = v13 + v3 + v11 * (double)v10;
      [v0 bounds];
      objc_msgSend(v15, "setCenter:", v2, CGRectGetMidY(v24));
      id v16 = [v15 layer];
      [v16 setCornerRadius:v11 * 0.5 * 0.5];

      id v17 = [v21 amplitudes];
      type metadata accessor for UIMenu(0, &_sSo8NSNumberCML_1);
      uint64_t v18 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      if ((v18 & 0xC000000000000001) != 0)
      {
        id v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if ((unint64_t)v10 >= *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          goto LABEL_18;
        }
        id v19 = *(id *)(v18 + 8 * v10 + 32);
      }
      unint64_t v20 = v19;
      ++v10;
      swift_bridgeObjectRelease();
      [v20 doubleValue];

      [v0 bounds];
      CGRectGetHeight(v25);
      [v15 bounds];
      objc_msgSend(v15, "setBounds:");
      [v15 bounds];
      objc_msgSend(v15, "setBounds:");

      if (v9 == v10) {
        goto LABEL_19;
      }
    }
  }
  __break(1u);
  return result;
}

uint64_t closure #2 in WaveformPlayIndicator.reflectChange(from:to:)(uint64_t a1, char *a2, char a3)
{
  __swift_instantiateConcreteTypeFromMangledName(&_sScPSgMD_2);
  __chkstk_darwin();
  id v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSString v7 = &a2[OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_mode];
  uint64_t result = swift_beginAccess();
  if (*v7 == a3)
  {
    uint64_t v9 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v6, 1, 1, v9);
    type metadata accessor for MainActor();
    uint64_t v10 = a2;
    uint64_t v11 = static MainActor.shared.getter();
    double v12 = (void *)swift_allocObject();
    void v12[2] = v11;
    v12[3] = &protocol witness table for MainActor;
    v12[4] = v10;
    *(void *)&v10[OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_pulseTask] = _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5_1((uint64_t)v6, (uint64_t)&async function pointer to partial apply for closure #1 in WaveformPlayIndicator.makeRepeatingPulseTask(), (uint64_t)v12);
    return swift_release();
  }
  return result;
}

unint64_t closure #3 in WaveformPlayIndicator.reflectChange(from:to:)(uint64_t a1)
{
  WaveformPlayIndicator.layoutBarsToWaveform()();
  uint64_t v2 = a1 + OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_colorPalette;
  swift_beginAccess();
  id v3 = *(id *)(v2 + 8);
  unint64_t result = WaveformPlayIndicator.bars.getter();
  unint64_t v5 = result;
  if (!(result >> 62))
  {
    uint64_t v6 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v6) {
      goto LABEL_3;
    }
LABEL_10:

    return swift_bridgeObjectRelease();
  }
  unint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v6 = result;
  if (!result) {
    goto LABEL_10;
  }
LABEL_3:
  if (v6 >= 1)
  {
    for (uint64_t i = 0; i != v6; ++i)
    {
      if ((v5 & 0xC000000000000001) != 0) {
        id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v8 = *(id *)(v5 + 8 * i + 32);
      }
      uint64_t v9 = v8;
      [v8 setBackgroundColor:v3];
    }
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

void specialized Sequence.reversed()(unint64_t a1)
{
  unint64_t v1 = (void *)specialized _copySequenceToContiguousArray<A>(_:)(a1);
  unint64_t v2 = v1[2];
  swift_bridgeObjectRelease();
  if (v2 < 2) {
    return;
  }
  unint64_t v3 = 0;
  unint64_t v4 = v2 >> 1;
  unint64_t v5 = v2 - 1;
  uint64_t v6 = 2 * v2;
  uint64_t v7 = 5;
  unint64_t v21 = v2 >> 1;
  while (1)
  {
    if (v3 == v5) {
      goto LABEL_4;
    }
    unint64_t v8 = v1[2];
    if (v3 >= v8) {
      break;
    }
    if (v5 >= v8) {
      goto LABEL_13;
    }
    uint64_t v9 = (void *)v1[v7 - 1];
    uint64_t v10 = (void *)v1[v7];
    uint64_t v11 = (void *)v1[v6 + 2];
    double v12 = (void *)v1[v6 + 3];
    id v13 = v12;
    id v14 = v9;
    id v15 = v10;
    id v16 = v11;
    id v22 = v14;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v1 = specialized _ArrayBuffer._consumeAndCreateNew()(v1);
    }
    id v17 = &v1[v7];
    uint64_t v18 = (void *)v1[v7];

    *(v17 - 1) = v16;
    *id v17 = v12;
    if (v5 >= v1[2]) {
      goto LABEL_14;
    }
    id v19 = &v1[v6];
    unint64_t v20 = (void *)v1[v6 + 3];

    v19[2] = v22;
    v19[3] = v10;
    unint64_t v4 = v21;
LABEL_4:
    ++v3;
    v7 += 2;
    --v5;
    v6 -= 2;
    if (v4 == v3) {
      return;
    }
  }
  __break(1u);
LABEL_13:
  __break(1u);
LABEL_14:
  __break(1u);
}

void closure #5 in WaveformPlayIndicator.reflectChange(from:to:)(uint64_t a1)
{
  WaveformPlayIndicator.layoutBarsToWaveform()();
  unint64_t v2 = (id *)(a1 + OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_colorPalette);
  swift_beginAccess();
  id v3 = *v2;
  unint64_t v4 = WaveformPlayIndicator.bars.getter();
  unint64_t v5 = v4;
  if (!(v4 >> 62))
  {
    uint64_t v6 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v6) {
      goto LABEL_3;
    }
LABEL_10:

    swift_bridgeObjectRelease();
    WaveformPlayIndicator.attachCannedAnimations()();
    return;
  }
  uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
  if (!v6) {
    goto LABEL_10;
  }
LABEL_3:
  if (v6 >= 1)
  {
    for (uint64_t i = 0; i != v6; ++i)
    {
      if ((v5 & 0xC000000000000001) != 0) {
        id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v8 = *(id *)(v5 + 8 * i + 32);
      }
      uint64_t v9 = v8;
      [v8 setBackgroundColor:v3];
    }
    goto LABEL_10;
  }
  __break(1u);
}

void WaveformPlayIndicator.attachCannedAnimations()()
{
  if (!*(void *)(v0 + OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_cannedAnimationAsset)) {
    return;
  }
  swift_retain();
  unint64_t v3 = specialized RandomNumberGenerator.next<A>(upperBound:)(3uLL);
  if (v3 > 2)
  {
    __break(1u);
LABEL_45:
    swift_bridgeObjectRetain();
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v5) {
      goto LABEL_5;
    }
LABEL_46:
    swift_release();
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v2 = *((unsigned __int8 *)&outlined read-only object #0 of WaveformPlayIndicator.attachCannedAnimations() + v3 + 32);
  unint64_t v4 = WaveformPlayIndicator.bars.getter();
  unint64_t v1 = (unint64_t)_sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSaySo6UIViewCG_So7CALayerCs5NeverOTg50106_s11MusicCoreUI21WaveformPlayIndicatorC22removeCannedAnimations33_1239B5B087AAB7692D5EF8FD4F2B07D1LLyyFSo7e4CSo6D53Ccfu_33_383742fe4995b307a9b4a036918133abAiGTf3nnnpk_nTf1cn_nTm(v4);
  swift_bridgeObjectRelease();
  if (v1 >> 62) {
    goto LABEL_45;
  }
  uint64_t v5 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v5) {
    goto LABEL_46;
  }
LABEL_5:
  if (v5 >= 1)
  {
    unint64_t v6 = 0;
    unsigned int v27 = v2;
    while (1)
    {
      if ((v1 & 0xC000000000000001) != 0) {
        id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v7 = *(id *)(v1 + 8 * v6 + 32);
      }
      id v8 = v7;
      uint64_t v9 = BouncyBarsAsset.createAnimations(variant:barIndex:)(v2, v6);
      if (v9)
      {
        uint64_t v10 = v9;
        uint64_t v11 = __chkstk_darwin();
        specialized Sequence.forEach(_:)(v11, (void (*)(uint64_t, id))partial apply for closure #1 in WaveformPlayIndicator.attachCannedAnimations());
        if (!v10[2]
          || (unint64_t v12 = specialized __RawDictionaryStorage.find<A>(_:)(1), (v13 & 1) == 0)
          || (id v14 = [*(id *)(v10[7] + 8 * v12) values]) == 0)
        {
LABEL_27:
          long long v29 = 0u;
          long long v30 = 0u;
LABEL_28:
          swift_bridgeObjectRelease();
LABEL_29:

          _sypSgWOh_1((uint64_t)&v29);
          goto LABEL_9;
        }
        id v15 = v14;
        uint64_t v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        if (*(void *)(v16 + 16))
        {
          outlined init with copy of Any(v16 + 32, (uint64_t)&v29);
        }
        else
        {
          long long v29 = 0u;
          long long v30 = 0u;
        }
        swift_bridgeObjectRelease();
        uint64_t v2 = v27;
        if (!*((void *)&v30 + 1)) {
          goto LABEL_28;
        }
        if ((swift_dynamicCast() & 1) == 0) {
          goto LABEL_7;
        }
        if (!v10[2]) {
          goto LABEL_27;
        }
        unint64_t v17 = specialized __RawDictionaryStorage.find<A>(_:)(0);
        if ((v18 & 1) == 0) {
          goto LABEL_27;
        }
        id v19 = [*(id *)(v10[7] + 8 * v17) values];
        if (!v19) {
          goto LABEL_27;
        }
        unint64_t v20 = v19;
        uint64_t v21 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        if (*(void *)(v21 + 16))
        {
          outlined init with copy of Any(v21 + 32, (uint64_t)&v29);
        }
        else
        {
          long long v29 = 0u;
          long long v30 = 0u;
        }
        swift_bridgeObjectRelease();
        uint64_t v2 = v27;
        if (!*((void *)&v30 + 1)) {
          goto LABEL_28;
        }
        if (swift_dynamicCast())
        {
          if (!v10[2] || (unint64_t v22 = specialized __RawDictionaryStorage.find<A>(_:)(2), (v23 & 1) == 0))
          {
            swift_bridgeObjectRelease();
LABEL_39:
            long long v29 = 0u;
            long long v30 = 0u;
            uint64_t v2 = v27;
            goto LABEL_29;
          }
          id v24 = *(id *)(v10[7] + 8 * v22);
          swift_bridgeObjectRelease();
          id v25 = [v24 values];

          if (!v25) {
            goto LABEL_39;
          }
          uint64_t v26 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

          if (*(void *)(v26 + 16))
          {
            outlined init with copy of Any(v26 + 32, (uint64_t)&v29);
          }
          else
          {
            long long v29 = 0u;
            long long v30 = 0u;
          }
          uint64_t v2 = v27;
          swift_bridgeObjectRelease();
          if (!*((void *)&v30 + 1)) {
            goto LABEL_29;
          }
          if (swift_dynamicCast())
          {
            [v8 frame];
            objc_msgSend(v8, "setFrame:");
            [v8 setCornerRadius:v28];
          }
        }
        else
        {
LABEL_7:
          swift_bridgeObjectRelease();
        }
      }

LABEL_9:
      if (v5 == ++v6) {
        goto LABEL_46;
      }
    }
  }
  __break(1u);
}

void closure #6 in WaveformPlayIndicator.reflectChange(from:to:)(char *a1, char a2)
{
  unint64_t v4 = (id *)&a1[OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_colorPalette];
  swift_beginAccess();
  id v5 = *v4;
  unint64_t v6 = WaveformPlayIndicator.bars.getter();
  unint64_t v7 = v6;
  if (v6 >> 62)
  {
    uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
    if (!v8) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v8 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v8) {
      goto LABEL_10;
    }
  }
  if (v8 < 1)
  {
    __break(1u);
    return;
  }
  for (uint64_t i = 0; i != v8; ++i)
  {
    if ((v7 & 0xC000000000000001) != 0) {
      id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v10 = *(id *)(v7 + 8 * i + 32);
    }
    uint64_t v11 = v10;
    [v10 setBackgroundColor:v5];
  }
LABEL_10:

  swift_bridgeObjectRelease();
  if (a2 == 3)
  {
    unint64_t v12 = self;
    char v13 = *(void **)&a1[OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_settings];
    [v13 animationDuration];
    double v15 = v14;
    [v13 springDamping];
    double v17 = v16;
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = a1;
    aBlock[4] = closure #1 in WaveformPlayIndicator.animateWaveform()partial apply;
    aBlock[5] = v18;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = thunk for @escaping @callee_guaranteed @Sendable () -> ();
    aBlock[3] = &block_descriptor_132_0;
    id v19 = _Block_copy(aBlock);
    unint64_t v20 = a1;
    swift_release();
    [v12 animateWithDuration:0 delay:v19 usingSpringWithDamping:0 initialSpringVelocity:v15 options:0.0 animations:v17 completion:0.0];
    _Block_release(v19);
  }
}

uint64_t closure #7 in WaveformPlayIndicator.reflectChange(from:to:)(char *a1, uint64_t a2)
{
  *(void *)&a1[OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_exclusiveAnimation] = a2;
  swift_release();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = partial apply for closure #1 in closure #7 in WaveformPlayIndicator.reflectChange(from:to:);
  *(void *)(v5 + 24) = v4;
  New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFyyc_Tg5_0 = *(void **)(a2 + 24);
  swift_retain();
  unint64_t v7 = a1;
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(a2 + 24) = New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFyyc_Tg5_0;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFyyc_Tg5_0 = _ss12_ArrayBufferV20_consumeAndCreateNew14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFyyc_Tg5_0(0, New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFyyc_Tg5_0[2]+ 1, 1, New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFyyc_Tg5_0);
    *(void *)(a2 + 24) = New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFyyc_Tg5_0;
  }
  unint64_t v10 = New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFyyc_Tg5_0[2];
  unint64_t v9 = New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFyyc_Tg5_0[3];
  if (v10 >= v9 >> 1)
  {
    New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFyyc_Tg5_0 = _ss12_ArrayBufferV20_consumeAndCreateNew14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFyyc_Tg5_0((void *)(v9 > 1), v10 + 1, 1, New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFyyc_Tg5_0);
    *(void *)(a2 + 24) = New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFyyc_Tg5_0;
  }
  New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFyyc_Tg5_0[2] = v10 + 1;
  uint64_t v11 = &New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFyyc_Tg5_0[2 * v10];
  v11[4] = thunk for @escaping @callee_guaranteed () -> ()partial apply;
  v11[5] = v5;
  swift_release();
  return AnimationGroup.startAnimation()();
}

id closure #1 in WaveformPlayIndicator.animateWaveform()(char *a1)
{
  v3.receiver = a1;
  v3.super_class = (Class)swift_getObjectType();
  id result = objc_msgSendSuper2(&v3, "layoutSubviews");
  if (!*(void *)&a1[OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_exclusiveAnimation]) {
    return (id)WaveformPlayIndicator.layoutBarsToWaveform()();
  }
  return result;
}

Swift::Void __swiftcall WaveformPlayIndicator.layoutSubviews()()
{
  v1.receiver = v0;
  v1.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v1, "layoutSubviews");
  if (!*(void *)&v0[OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_exclusiveAnimation]) {
    WaveformPlayIndicator.layoutBarsToWaveform()();
  }
}

Swift::Void __swiftcall WaveformPlayIndicator.pulse()()
{
  objc_super v1 = v0;
  [v0 bounds];
  double Width = CGRectGetWidth(v59);
  uint64_t v3 = *(void *)&v0[OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_numberOfBars];
  [v0 bounds];
  double Height = CGRectGetHeight(v60);
  uint64_t v5 = &v0[OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_colorPalette];
  swift_beginAccess();
  unint64_t v6 = (void *)*((void *)v5 + 2);
  unint64_t v7 = (void *)*((void *)v5 + 3);
  type metadata accessor for AnimationGroup();
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = _swiftEmptyArrayStorage;
  *(void *)(v8 + 24) = _swiftEmptyArrayStorage;
  uint64_t v52 = v8;
  id v51 = v6;
  id v50 = v7;
  uint64_t v46 = v1;
  unint64_t v9 = WaveformPlayIndicator.bars.getter();
  unint64_t v10 = v9;
  if (v9 >> 62)
  {
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
    if (!v11) {
      goto LABEL_15;
    }
  }
  else
  {
    uint64_t v11 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v11) {
      goto LABEL_15;
    }
  }
  if (v11 < 1)
  {
    __break(1u);
    return;
  }
  uint64_t v12 = 0;
  unint64_t v47 = v10 & 0xC000000000000001;
  double v13 = Width / (double)v3 * 0.5;
  double v14 = Height * 0.7;
  uint64_t v48 = v11;
  unint64_t v49 = v10;
  do
  {
    if (v47) {
      id v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v15 = *(id *)(v10 + 8 * v12 + 32);
    }
    float v16 = v15;
    id v17 = objc_msgSend(objc_allocWithZone((Class)UICubicTimingParameters), "initWithControlPoint1:controlPoint2:", 0.11, 0.0, 0.5, 0.0);
    id v18 = [objc_allocWithZone((Class)UIViewPropertyAnimator) initWithDuration:v17 timingParameters:0.25];

    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = v16;
    *(void *)(v19 + 24) = v50;
    *(double *)(v19 + 32) = v14;
    double v57 = (id (*)(id))partial apply for closure #1 in WaveformPlayIndicator.pulse();
    uint64_t v58 = v19;
    CGAffineTransform aBlock = _NSConcreteStackBlock;
    uint64_t v54 = 1107296256;
    id v55 = thunk for @escaping @callee_guaranteed @Sendable () -> ();
    uint64_t v56 = &block_descriptor_105_0;
    unint64_t v20 = _Block_copy(&aBlock);
    id v21 = v50;
    id v22 = v16;
    swift_release();
    [v18 addAnimations:v20];
    _Block_release(v20);
    id v23 = objc_msgSend(objc_allocWithZone((Class)UICubicTimingParameters), "initWithControlPoint1:controlPoint2:", 0.11, 0.0, 0.5, 0.0);
    id v24 = [objc_allocWithZone((Class)UIViewPropertyAnimator) initWithDuration:v23 timingParameters:0.25];

    uint64_t v25 = swift_allocObject();
    *(void *)(v25 + 16) = v22;
    *(void *)(v25 + 24) = v51;
    *(double *)(v25 + 32) = v13;
    double v57 = (id (*)(id))partial apply for closure #1 in WaveformPlayIndicator.pulse();
    uint64_t v58 = v25;
    CGAffineTransform aBlock = _NSConcreteStackBlock;
    uint64_t v54 = 1107296256;
    id v55 = thunk for @escaping @callee_guaranteed @Sendable () -> ();
    uint64_t v56 = &block_descriptor_111;
    uint64_t v26 = _Block_copy(&aBlock);
    id v27 = v51;
    id v28 = v22;
    swift_release();
    [v24 addAnimations:v26];
    _Block_release(v26);
    uint64_t v29 = swift_allocObject();
    *(void *)(v29 + 16) = v24;
    double v57 = partial apply for closure #3 in WaveformPlayIndicator.pulse();
    uint64_t v58 = v29;
    CGAffineTransform aBlock = _NSConcreteStackBlock;
    uint64_t v54 = 1107296256;
    id v55 = thunk for @escaping @callee_guaranteed (@unowned UIViewAnimatingPosition) -> ();
    uint64_t v56 = &block_descriptor_117;
    long long v30 = _Block_copy(&aBlock);
    id v31 = v24;
    swift_release();
    [v18 addCompletion:v30];
    _Block_release(v30);
    int v32 = *(char **)(v52 + 16);
    id v33 = v18;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v52 + 16) = v32;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      int v32 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *((void *)v32 + 2) + 1, 1, v32);
      *(void *)(v52 + 16) = v32;
    }
    unint64_t v36 = *((void *)v32 + 2);
    unint64_t v35 = *((void *)v32 + 3);
    if (v36 >= v35 >> 1)
    {
      int v32 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((char *)(v35 > 1), v36 + 1, 1, v32);
      *(void *)(v52 + 16) = v32;
    }
    *((void *)v32 + 2) = v36 + 1;
    double v37 = &v32[16 * v36];
    *((void *)v37 + 4) = v33;
    *((double *)v37 + 5) = (double)v12 * 0.1;

    ++v12;
    unint64_t v10 = v49;
  }
  while (v48 != v12);
LABEL_15:
  swift_bridgeObjectRelease();
  uint64_t v38 = swift_allocObject();
  *(void *)(v38 + 16) = v46;
  uint64_t v39 = swift_allocObject();
  *(void *)(v39 + 16) = partial apply for closure #4 in WaveformPlayIndicator.pulse();
  *(void *)(v39 + 24) = v38;
  New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFyyc_Tg5_0 = *(void **)(v52 + 24);
  unint64_t v41 = v46;
  swift_retain();
  char v42 = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v52 + 24) = New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFyyc_Tg5_0;
  if ((v42 & 1) == 0)
  {
    New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFyyc_Tg5_0 = _ss12_ArrayBufferV20_consumeAndCreateNew14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFyyc_Tg5_0(0, New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFyyc_Tg5_0[2]+ 1, 1, New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFyyc_Tg5_0);
    *(void *)(v52 + 24) = New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFyyc_Tg5_0;
  }
  unint64_t v44 = New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFyyc_Tg5_0[2];
  unint64_t v43 = New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFyyc_Tg5_0[3];
  if (v44 >= v43 >> 1)
  {
    New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFyyc_Tg5_0 = _ss12_ArrayBufferV20_consumeAndCreateNew14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFyyc_Tg5_0((void *)(v43 > 1), v44 + 1, 1, New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFyyc_Tg5_0);
    *(void *)(v52 + 24) = New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFyyc_Tg5_0;
  }
  New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFyyc_Tg5_0[2] = v44 + 1;
  uint64_t v45 = &New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFyyc_Tg5_0[2 * v44];
  void v45[4] = thunk for @escaping @callee_guaranteed () -> ()partial apply;
  v45[5] = v39;
  swift_release();
  *(void *)&v41[OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_exclusiveAnimation] = v52;
  swift_retain();
  swift_release();
  AnimationGroup.startAnimation()();

  swift_release();
}

uint64_t closure #1 in WaveformPlayIndicator.makeRepeatingPulseTask()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[7] = a4;
  uint64_t v5 = type metadata accessor for ContinuousClock.Instant();
  v4[8] = v5;
  v4[9] = *(void *)(v5 - 8);
  v4[10] = swift_task_alloc();
  v4[11] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for ContinuousClock();
  v4[12] = v6;
  v4[13] = *(void *)(v6 - 8);
  v4[14] = swift_task_alloc();
  type metadata accessor for MainActor();
  v4[15] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[16] = v8;
  v4[17] = v7;
  return _swift_task_switch(closure #1 in WaveformPlayIndicator.makeRepeatingPulseTask(), v8, v7);
}

uint64_t closure #1 in WaveformPlayIndicator.makeRepeatingPulseTask()()
{
  uint64_t v1 = static Task<>.isCancelled.getter();
  if ((v1 & 1) == 0)
  {
    uint64_t v6 = *(void *)(*(void *)(v0 + 56) + OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_numberOfBars);
    uint64_t v7 = 100 * v6;
    if ((unsigned __int128)(v6 * (__int128)100) >> 64 == (100 * v6) >> 63)
    {
      BOOL v8 = __OFADD__(v7, 500);
      uint64_t v9 = v7 + 500;
      if (!v8)
      {
        BOOL v8 = __OFADD__(v9, 600);
        uint64_t v10 = v9 + 600;
        *(void *)(v0 + 144) = v10;
        if (!v8)
        {
          if ((v10 & 0x8000000000000000) == 0)
          {
            uint64_t v11 = 1000000000000000 * v10;
            uint64_t v12 = ((unint64_t)v10 * (unsigned __int128)0x38D7EA4C68000uLL) >> 64;
            WaveformPlayIndicator.pulse()();
            ContinuousClock.init()();
            *(void *)(v0 + 40) = v11;
            *(void *)(v0 + 48) = v12;
            *(void *)(v0 + 16) = 0;
            *(void *)(v0 + 24) = 0;
            *(unsigned char *)(v0 + 32) = 1;
            uint64_t v1 = (uint64_t)closure #1 in WaveformPlayIndicator.makeRepeatingPulseTask();
            uint64_t v2 = 0;
            uint64_t v3 = 0;
            return _swift_task_switch(v1, v2, v3);
          }
LABEL_15:
          __break(1u);
          return _swift_task_switch(v1, v2, v3);
        }
LABEL_14:
        __break(1u);
        goto LABEL_15;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_14;
  }
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  uint64_t v2 = v0[9];
  uint64_t v1 = v0[10];
  uint64_t v3 = v0[8];
  uint64_t v4 = _s8Dispatch0A13WorkItemFlagsVACs10SetAlgebraAAWlTm_4(&lazy protocol witness table cache variable for type ContinuousClock and conformance ContinuousClock, (void (*)(uint64_t))&type metadata accessor for ContinuousClock);
  dispatch thunk of Clock.now.getter();
  _s8Dispatch0A13WorkItemFlagsVACs10SetAlgebraAAWlTm_4(&lazy protocol witness table cache variable for type ContinuousClock.Instant and conformance ContinuousClock.Instant, (void (*)(uint64_t))&type metadata accessor for ContinuousClock.Instant);
  dispatch thunk of InstantProtocol.advanced(by:)();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v0[19] = v5;
  v0[20] = (v2 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v5(v1, v3);
  uint64_t v6 = (void *)swift_task_alloc();
  v0[21] = v6;
  void *v6 = v0;
  v6[1] = closure #1 in WaveformPlayIndicator.makeRepeatingPulseTask();
  BOOL v8 = v0[11];
  uint64_t v7 = v0[12];
  return dispatch thunk of Clock.sleep(until:tolerance:)(v8, v0 + 2, v7, v4);
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  uint64_t v2 = *(void **)v1;
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)v1 + 152);
  uint64_t v4 = *(void *)(*(void *)v1 + 88);
  uint64_t v5 = *(void *)(*(void *)v1 + 64);
  *(void *)(*(void *)v1 + 176) = v0;
  swift_task_dealloc();
  v3(v4, v5);
  if (v0)
  {
    uint64_t v6 = closure #1 in WaveformPlayIndicator.makeRepeatingPulseTask();
    uint64_t v7 = 0;
    BOOL v8 = 0;
  }
  else
  {
    (*(void (**)(void, void))(v2[13] + 8))(v2[14], v2[12]);
    uint64_t v7 = v2[16];
    BOOL v8 = v2[17];
    uint64_t v6 = closure #1 in WaveformPlayIndicator.makeRepeatingPulseTask();
  }
  return _swift_task_switch(v6, v7, v8);
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (static Task<>.isCancelled.getter())
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
    return v1();
  }
  else
  {
    uint64_t v3 = *(void *)(v0 + 144);
    uint64_t v4 = (v3 * (unsigned __int128)0x38D7EA4C68000uLL) >> 64;
    uint64_t v5 = 1000000000000000 * v3;
    WaveformPlayIndicator.pulse()();
    ContinuousClock.init()();
    *(void *)(v0 + 40) = v5;
    *(void *)(v0 + 48) = v4;
    *(void *)(v0 + 16) = 0;
    *(void *)(v0 + 24) = 0;
    *(unsigned char *)(v0 + 32) = 1;
    return _swift_task_switch(closure #1 in WaveformPlayIndicator.makeRepeatingPulseTask(), 0, 0);
  }
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  uint64_t v2 = v0[13];
  uint64_t v1 = v0[14];
  uint64_t v3 = v0[12];
  swift_errorRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v4 = v0[16];
  uint64_t v5 = v0[17];
  return _swift_task_switch(closure #1 in WaveformPlayIndicator.makeRepeatingPulseTask(), v4, v5);
}

Swift::Void __swiftcall WaveformPlayIndicator.tintColorDidChange()()
{
  v10.receiver = v0;
  v10.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v10, "tintColorDidChange");
  uint64_t v1 = &v0[OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_mode];
  swift_beginAccess();
  if (*v1 == 2)
  {
    id v2 = [v0 tintColor];
    if (!v2) {
      goto LABEL_15;
    }
    uint64_t v3 = v2;
    unint64_t v4 = WaveformPlayIndicator.bars.getter();
    unint64_t v5 = v4;
    if (v4 >> 62)
    {
      uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
      if (v6) {
        goto LABEL_5;
      }
    }
    else
    {
      uint64_t v6 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v6)
      {
LABEL_5:
        if (v6 >= 1)
        {
          for (uint64_t i = 0; i != v6; ++i)
          {
            if ((v5 & 0xC000000000000001) != 0) {
              id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              id v8 = *(id *)(v5 + 8 * i + 32);
            }
            uint64_t v9 = v8;
            [v8 setBackgroundColor:v3];
          }
          goto LABEL_12;
        }
        __break(1u);
LABEL_15:
        __break(1u);
        return;
      }
    }
LABEL_12:

    swift_bridgeObjectRelease();
  }
}

Swift::Void __swiftcall WaveformPlayIndicator.didMoveToWindow()()
{
  v4.receiver = v0;
  v4.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v4, "didMoveToWindow");
  id v1 = [v0 window];
  if (v1) {

  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  id v2 = v0;
  static Published.subscript.setter();
  WaveformPlayIndicator.isVisible.didset(v3);
}

unint64_t WaveformPlayIndicator.isVisible.setter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  id v1 = v0;
  static Published.subscript.setter();
  return WaveformPlayIndicator.isVisible.didset(v3);
}

unint64_t WaveformPlayIndicator.isVisible.didset(char a1)
{
  int v1 = a1 & 1;
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  unint64_t result = swift_release();
  if (v4 != v1)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    unint64_t result = swift_release();
    if (v3 == 1) {
      return WaveformPlayIndicator.layoutBarsToWaveform()();
    }
  }
  return result;
}

uint64_t WaveformPlayIndicator.isVisible.getter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t key path getter for WaveformPlayIndicator.isVisible : WaveformPlayIndicator@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

unint64_t key path setter for WaveformPlayIndicator.isVisible : WaveformPlayIndicator(uint64_t a1, void **a2)
{
  id v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  v2;
  static Published.subscript.setter();
  return WaveformPlayIndicator.isVisible.didset(v4);
}

unint64_t (*WaveformPlayIndicator.isVisible.modify(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a1 + 9);
  return WaveformPlayIndicator.isVisible.modify;
}

unint64_t WaveformPlayIndicator.isVisible.modify(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  swift_getKeyPath();
  swift_getKeyPath();
  char v3 = *(void **)a1;
  static Published.subscript.getter();
  swift_release();
  swift_release();
  char v4 = *(unsigned char *)(a1 + 9);
  swift_getKeyPath();
  swift_getKeyPath();
  *(unsigned char *)(a1 + 9) = v2;
  id v5 = v3;
  static Published.subscript.setter();
  return WaveformPlayIndicator.isVisible.didset(v4);
}

uint64_t WaveformPlayIndicator.$isVisible.getter()
{
  return swift_endAccess();
}

uint64_t WaveformPlayIndicator.$isVisible.setter(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&_s7Combine9PublishedV9PublisherVySb_GMD_0);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v6 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&_s7Combine9PublishedVySbGMD_0);
  Published.projectedValue.setter();
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

void (*WaveformPlayIndicator.$isVisible.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&_s7Combine9PublishedV9PublisherVySb_GMD_0);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  uint64_t v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator__isVisible;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName(&_s7Combine9PublishedVySbGMD_0);
  Published.projectedValue.getter();
  swift_endAccess();
  return MPCPlayerResponse.VideoContext.$isReadyForDisplay.modify;
}

void WaveformPlayIndicator.createBars()()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_numberOfBars);
  if (v1 < 0)
  {
    __break(1u);
  }
  else if (v1)
  {
    specialized ContiguousArray.reserveCapacity(_:)();
    do
    {
      id v2 = [objc_allocWithZone((Class)UIView) init];
      id v3 = [v2 layer];
      [v3 setCornerCurve:kCACornerCurveContinuous];

      id v4 = [v2 layer];
      [v4 setAllowsEdgeAntialiasing:1];

      id v5 = [v2 tintColor];
      [v2 setBackgroundColor:v5];

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      --v1;
    }
    while (v1);
  }
}

void closure #1 in WaveformPlayIndicator.attachCannedAnimations()(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [a3 addAnimation:a2 forKey:v5];
}

unint64_t BouncyBarsAsset.BarAnimationKey.rawValue.getter(char a1)
{
  unint64_t result = 0xD000000000000015;
  if (a1 == 1) {
    return 0xD000000000000014;
  }
  return result;
}

void WaveformPlayIndicator.init(frame:)()
{
}

uint64_t AnimationGroup.startAnimation()()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  id v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v29 = *(void *)(v6 - 8);
  uint64_t v30 = v6;
  __chkstk_darwin();
  id v28 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = dispatch_group_create();
  uint64_t v9 = *(void *)(*(void *)(v0 + 16) + 16);
  if (v9)
  {
    uint64_t v24 = v0;
    uint64_t v25 = v5;
    uint64_t v26 = v3;
    uint64_t v27 = v2;
    uint64_t v23 = swift_bridgeObjectRetain();
    objc_super v10 = (double *)(v23 + 40);
    do
    {
      uint64_t v11 = (void *)*((void *)v10 - 1);
      double v12 = *v10;
      v10 += 2;
      id v13 = v11;
      dispatch_group_enter(v8);
      [v13 startAnimationAfterDelay:v12];
      uint64_t v14 = swift_allocObject();
      *(void *)(v14 + 16) = v8;
      unint64_t v36 = partial apply for closure #1 in AnimationGroup.startAnimation();
      uint64_t v37 = v14;
      CGAffineTransform aBlock = _NSConcreteStackBlock;
      uint64_t v33 = 1107296256;
      id v34 = thunk for @escaping @callee_guaranteed (@unowned UIViewAnimatingPosition) -> ();
      unint64_t v35 = &block_descriptor_48_1;
      id v15 = _Block_copy(&aBlock);
      id v16 = v13;
      id v17 = v8;
      swift_release();
      [v16 addCompletion:v15];
      _Block_release(v15);

      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease();
    uint64_t v3 = v26;
    uint64_t v2 = v27;
    uint64_t v1 = v24;
    id v5 = v25;
  }
  type metadata accessor for UIMenu(0, (unint64_t *)&_sSo17OS_dispatch_queueCML_1);
  id v18 = (void *)static OS_dispatch_queue.main.getter();
  unint64_t v36 = partial apply for closure #2 in AnimationGroup.startAnimation();
  uint64_t v37 = v1;
  CGAffineTransform aBlock = _NSConcreteStackBlock;
  uint64_t v33 = 1107296256;
  id v34 = thunk for @escaping @callee_guaranteed @Sendable () -> ();
  unint64_t v35 = &block_descriptor_51_1;
  uint64_t v19 = _Block_copy(&aBlock);
  swift_retain();
  unint64_t v20 = v28;
  static DispatchQoS.unspecified.getter();
  id v31 = _swiftEmptyArrayStorage;
  _s8Dispatch0A13WorkItemFlagsVACs10SetAlgebraAAWlTm_4((unint64_t *)&_s8Dispatch0A13WorkItemFlagsVACs10SetAlgebraAAWL_1, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  __swift_instantiateConcreteTypeFromMangledName(&_sSay8Dispatch0A13WorkItemFlagsVGMD_1);
  lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>((unint64_t *)&_sSay8Dispatch0A13WorkItemFlagsVGSayxGSTsWL_1, &_sSay8Dispatch0A13WorkItemFlagsVGMD_1);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_group.notify(qos:flags:queue:execute:)();
  _Block_release(v19);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v20, v30);
  return swift_release();
}

uint64_t closure #2 in AnimationGroup.startAnimation()(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 24);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = v1 + 40;
    do
    {
      uint64_t v4 = *(void (**)(uint64_t))(v3 - 8);
      uint64_t v5 = swift_retain();
      v4(v5);
      swift_release();
      v3 += 16;
      --v2;
    }
    while (v2);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t AnimationGroup.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t one-time initialization function for assetURL()
{
  uint64_t v0 = type metadata accessor for URL();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin();
  uint64_t v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&_s10Foundation3URLVSgMD_1);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_allocate_value_buffer(v0, static BouncyBarsAsset.assetURL);
  uint64_t v6 = __swift_project_value_buffer(v0, (uint64_t)static BouncyBarsAsset.assetURL);
  if (one-time initialization token for module != -1) {
    swift_once();
  }
  uint64_t v7 = (void *)static NSBundle.module;
  NSString v8 = String._bridgeToObjectiveC()();
  NSString v9 = String._bridgeToObjectiveC()();
  id v10 = [v7 URLForResource:v8 withExtension:v9];

  if (v10)
  {
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(v1 + 32);
    v11(v5, v3, v0);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v1 + 56))(v5, 0, 1, v0);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v1 + 48))(v5, 1, v0);
    if (result != 1) {
      return ((uint64_t (*)(uint64_t, char *, uint64_t))v11)(v6, v5, v0);
    }
  }
  else
  {
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v1 + 56))(v5, 1, 1, v0);
  }
  __break(1u);
  return result;
}

void one-time initialization function for assetMaxHeight()
{
  static BouncyBarsAsset.assetMaxdouble Height = 0x4059000000000000;
}

uint64_t BouncyBarsAsset.init()()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for URL();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_OWORD *)(v1 + 16) = xmmword_1004A3DD0;
  *(void *)(v1 + 32) = 0x4030000000000000;
  if (one-time initialization token for assetURL != -1) {
    swift_once();
  }
  uint64_t v6 = __swift_project_value_buffer(v2, (uint64_t)static BouncyBarsAsset.assetURL);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  *(void *)(v1 + 40) = specialized BouncyBarsAsset.MicaBundle.init(path:)((uint64_t)v5);
  *(void *)(v1 + 48) = v7;
  return v1;
}

id BouncyBarsAsset.createAnimations(variant:barIndex:)(uint64_t a1, unint64_t a2)
{
  BouncyBarsAsset.getBaseAnimation(variant:barIndex:)(a1, a2);
  if (!v3)
  {
LABEL_29:
    if (one-time initialization token for logger != -1) {
LABEL_47:
    }
      swift_once();
    uint64_t v31 = type metadata accessor for Logger();
    __swift_project_value_buffer(v31, (uint64_t)static BouncyBarsAsset.logger);
    int v32 = Logger.logObject.getter();
    os_log_type_t v33 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v32, v33))
    {
      id v34 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v34 = 0;
      _os_log_impl((void *)&_mh_execute_header, v32, v33, "BouncyBars asset does not have expected layers / animations", v34, 2u);
      swift_slowDealloc();
    }
LABEL_39:

    return 0;
  }
  uint64_t v4 = v3;
  id v5 = [v3 values];
  if (!v5)
  {

    goto LABEL_29;
  }
  uint64_t v6 = v5;
  uint64_t v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  [v4 copy];
  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  type metadata accessor for UIMenu(0, &lazy cache variable for type metadata for CAKeyframeAnimation);
  swift_dynamicCast();
  uint64_t v46 = v49;
  [v4 copy];
  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  swift_dynamicCast();
  uint64_t v45 = v49;
  unint64_t v43 = v4;
  [v4 copy];
  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  swift_dynamicCast();
  unint64_t v8 = 0;
  unint64_t v44 = v49;
  while (1)
  {
    uint64_t v9 = v46;
    unint64_t v10 = *(void *)(v7 + 16);
    if (v8 == v10)
    {
      uint64_t v51 = 0;
      long long v49 = 0u;
      long long v50 = 0u;
    }
    else
    {
      if (v8 >= v10) {
        goto LABEL_46;
      }
      outlined init with copy of Any(v7 + 32 + 32 * v8, (uint64_t)v48);
      *(void *)&long long v49 = v8;
      outlined init with take of Any(v48, (long long *)((char *)&v49 + 8));
      ++v8;
    }
    outlined init with take of PresentationSource?((uint64_t)&v49, (uint64_t)&v52, &demangling cache variable for type metadata for (offset: Int, element: Any)?);
    if (!v54)
    {
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(BouncyBarsAsset.BarAnimationKey, CAKeyframeAnimation)>);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_100493CE0;
      *(unsigned char *)(inited + 32) = 0;
      *(void *)(inited + 40) = v46;
      *(unsigned char *)(inited + 48) = 1;
      *(void *)(inited + 56) = v45;
      *(unsigned char *)(inited + 64) = 2;
      *(void *)(inited + 72) = v44;
      unint64_t v36 = specialized Dictionary.init(dictionaryLiteral:)(inited);

      return (id)v36;
    }
    unint64_t v11 = v52;
    outlined init with take of Any(&v53, &v49);
    if (!swift_dynamicCast())
    {
      swift_bridgeObjectRelease();
      if (one-time initialization token for logger != -1) {
        swift_once();
      }
      uint64_t v37 = type metadata accessor for Logger();
      __swift_project_value_buffer(v37, (uint64_t)static BouncyBarsAsset.logger);
      int v32 = Logger.logObject.getter();
      os_log_type_t v38 = static os_log_type_t.default.getter();
      uint64_t v39 = v43;
      if (os_log_type_enabled(v32, v38))
      {
        char v40 = v43;
        unint64_t v41 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unint64_t v41 = 0;
        _os_log_impl((void *)&_mh_execute_header, v32, v38, "BouncyBars asset does not have expected layers / animations", v41, 2u);
        swift_slowDealloc();
        char v42 = v46;
        uint64_t v9 = v44;
        uint64_t v39 = v45;
      }
      else
      {
        char v42 = v32;
        char v40 = v44;
        int v32 = v45;
      }

      goto LABEL_39;
    }
    if (one-time initialization token for assetMaxHeight != -1) {
      swift_once();
    }
    double v12 = v47 / *(double *)&static BouncyBarsAsset.assetMaxHeight;
    double v13 = v47 / *(double *)&static BouncyBarsAsset.assetMaxHeight * v2[4];
    *((void *)&v50 + 1) = &type metadata for CGFloat;
    *(double *)&long long v49 = v13;
    id result = [v46 values];
    if (!result) {
      break;
    }
    id v15 = result;
    uint64_t v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (swift_isUniquelyReferenced_nonNull_native())
    {
      if ((v11 & 0x8000000000000000) != 0) {
        goto LABEL_41;
      }
    }
    else
    {
      uint64_t v16 = (uint64_t)specialized _ArrayBuffer._consumeAndCreateNew()(v16);
      if ((v11 & 0x8000000000000000) != 0)
      {
LABEL_41:
        __break(1u);
LABEL_42:
        __break(1u);
LABEL_43:
        __break(1u);
LABEL_44:
        __break(1u);
LABEL_45:
        __break(1u);
LABEL_46:
        __break(1u);
        goto LABEL_47;
      }
    }
    if (v11 >= *(void *)(v16 + 16)) {
      goto LABEL_42;
    }
    __swift_destroy_boxed_opaque_existential_0Tm(v16 + 32 * v11 + 32);
    outlined init with take of Any(&v49, (_OWORD *)(v16 + 32 * v11 + 32));
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v46 setValues:isa];

    id v18 = v45;
    NSString v19 = String._bridgeToObjectiveC()();
    [v18 setKeyPath:v19];

    double v20 = v2[3];
    double v21 = v20 + v2[2];
    if (v20 > v21) {
      goto LABEL_43;
    }
    double v22 = v20 + v12 * (v21 - v20);
    *((void *)&v50 + 1) = &type metadata for CGFloat;
    *(double *)&long long v49 = v22;
    id result = [v18 values];
    if (!result) {
      goto LABEL_49;
    }
    uint64_t v23 = result;
    uint64_t v24 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v24 = (uint64_t)specialized _ArrayBuffer._consumeAndCreateNew()(v24);
    }
    if (v11 >= *(void *)(v24 + 16)) {
      goto LABEL_44;
    }
    __swift_destroy_boxed_opaque_existential_0Tm(v24 + 32 * v11 + 32);
    outlined init with take of Any(&v49, (_OWORD *)(v24 + 32 * v11 + 32));
    Class v25 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v18 setValues:v25];

    uint64_t v26 = v44;
    NSString v27 = String._bridgeToObjectiveC()();
    [v26 setKeyPath:v27];

    *((void *)&v50 + 1) = &type metadata for CGFloat;
    *(double *)&long long v49 = v22 * 0.5;
    id result = [v26 values];
    if (!result) {
      goto LABEL_50;
    }
    id v28 = result;
    uint64_t v29 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v29 = (uint64_t)specialized _ArrayBuffer._consumeAndCreateNew()(v29);
    }
    if (v11 >= *(void *)(v29 + 16)) {
      goto LABEL_45;
    }
    __swift_destroy_boxed_opaque_existential_0Tm(v29 + 32 * v11 + 32);
    outlined init with take of Any(&v49, (_OWORD *)(v29 + 32 * v11 + 32));
    Class v30 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v26 setValues:v30];
  }
  __break(1u);
LABEL_49:
  __break(1u);
LABEL_50:
  __break(1u);
  return result;
}

void BouncyBarsAsset.getBaseAnimation(variant:barIndex:)(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = *(void *)(v2 + 40);
  if (*(void *)(v4 + 16))
  {
    uint64_t v5 = (a1 << 56) + 0x41746E6169726156;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v6 = specialized __RawDictionaryStorage.find<A>(_:)(v5, 0xE800000000000000);
    if (v7)
    {
      outlined init with copy of Any(*(void *)(v4 + 56) + 32 * v6, (uint64_t)&v18);
    }
    else
    {
      long long v18 = 0u;
      long long v19 = 0u;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    long long v18 = 0u;
    long long v19 = 0u;
    swift_bridgeObjectRetain();
  }
  __swift_instantiateConcreteTypeFromMangledName(&_sypSgMD_2);
  type metadata accessor for UIMenu(0, &lazy cache variable for type metadata for CALayer);
  if (swift_dynamicCast())
  {
    unint64_t v8 = v20;
  }
  else
  {
    unint64_t v8 = 0;
    double v20 = 0;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v8)
  {
    id v9 = [v8 sublayers];

    if (v9)
    {
      uint64_t v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      if ((v10 & 0xC000000000000001) == 0)
      {
        if ((a2 & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else if (*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
        {
          id v11 = *(id *)(v10 + 8 * a2 + 32);
          goto LABEL_16;
        }
        __break(1u);
        return;
      }
      id v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_16:
      double v12 = v11;
      swift_bridgeObjectRelease();
      id v13 = [v12 animationKeys];
      if (v13)
      {
        uint64_t v14 = v13;
        uint64_t v15 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        if (*(void *)(v15 + 16))
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          NSString v16 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          id v17 = [v12 animationForKey:v16];

          if (v17)
          {
            self;
            if (!swift_dynamicCastObjCClass()) {
          }
            }
        }
        else
        {

          swift_bridgeObjectRelease();
        }
      }
      else
      {
      }
    }
  }
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance BouncyBarsAsset.BarAnimationKey(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance BouncyBarsAsset.BarAnimationKey()
{
  return specialized RawRepresentable<>.hashValue.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance BouncyBarsAsset.BarAnimationKey()
{
  return specialized RawRepresentable<>.hash(into:)();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance BouncyBarsAsset.BarAnimationKey()
{
  return specialized RawRepresentable<>._rawHashValue(seed:)();
}

unint64_t protocol witness for RawRepresentable.init(rawValue:) in conformance BouncyBarsAsset.BarAnimationKey@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = specialized BouncyBarsAsset.BarAnimationKey.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

unint64_t protocol witness for RawRepresentable.rawValue.getter in conformance BouncyBarsAsset.BarAnimationKey@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = BouncyBarsAsset.BarAnimationKey.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void protocol witness for static CaseIterable.allCases.getter in conformance BouncyBarsAsset.BarAnimationKey(void *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of protocol witness for static CaseIterable.allCases.getter in conformance BouncyBarsAsset.BarAnimationKey;
}

uint64_t BouncyBarsAsset.__deallocating_deinit()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

size_t specialized _copySequenceToContiguousArray<A>(_:)(uint64_t a1)
{
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (offset: Int, element: PlaylistCurators.Curator));
  __chkstk_darwin();
  char v40 = (char *)v39 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  unint64_t v44 = (void *)((char *)v39 - v3);
  __chkstk_darwin();
  uint64_t v5 = (char *)v39 - v4;
  uint64_t v45 = v6;
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  id v9 = _swiftEmptyArrayStorage;
  uint64_t v43 = v8;
  v39[1] = a1;
  if (v8)
  {
    uint64_t v41 = (v7 + 32) & ~v7;
    uint64_t v10 = (char *)_swiftEmptyArrayStorage + v41;
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    uint64_t v13 = *(void *)(type metadata accessor for PlaylistCurators.Curator(0) - 8);
    uint64_t v14 = a1 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
    uint64_t v42 = *(void *)(v13 + 72);
    _OWORD v39[2] = v7 | 7;
    uint64_t v15 = _swiftEmptyArrayStorage;
    NSString v16 = v40;
    while (1)
    {
      uint64_t v18 = v46;
      uint64_t v19 = (uint64_t)&v16[*(int *)(v46 + 48)];
      outlined init with copy of PlaylistCurators.Curator(v14, v19);
      uint64_t v20 = (uint64_t)v44;
      uint64_t v21 = (uint64_t)v44 + *(int *)(v18 + 48);
      *unint64_t v44 = v11;
      outlined init with take of PlaylistCurators.Curator(v19, v21);
      size_t result = outlined init with take of PresentationSource?(v20, (uint64_t)v5, (uint64_t *)&demangling cache variable for type metadata for (offset: Int, element: PlaylistCurators.Curator));
      if (v12)
      {
        id v9 = v15;
        BOOL v17 = __OFSUB__(v12--, 1);
        if (v17) {
          goto LABEL_27;
        }
      }
      else
      {
        unint64_t v23 = v15[3];
        if ((uint64_t)((v23 >> 1) + 0x4000000000000000) < 0)
        {
          __break(1u);
LABEL_34:
          __break(1u);
LABEL_35:
          __break(1u);
LABEL_36:
          __break(1u);
          return result;
        }
        int64_t v24 = v23 & 0xFFFFFFFFFFFFFFFELL;
        if (v24 <= 1) {
          uint64_t v25 = 1;
        }
        else {
          uint64_t v25 = v24;
        }
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(offset: Int, element: PlaylistCurators.Curator)>);
        uint64_t v26 = *(void *)(v45 + 72);
        uint64_t v27 = v41;
        id v9 = (void *)swift_allocObject();
        size_t result = _swift_stdlib_malloc_size(v9);
        if (!v26) {
          goto LABEL_34;
        }
        int64_t v28 = result - v27;
        if (result - v27 == 0x8000000000000000 && v26 == -1) {
          goto LABEL_35;
        }
        uint64_t v30 = v28 / v26;
        uint64_t v9[2] = v25;
        v9[3] = 2 * (v28 / v26);
        uint64_t v31 = (char *)v9 + v27;
        uint64_t v32 = v15[3] >> 1;
        uint64_t v33 = v32 * v26;
        if (v15[2])
        {
          if (v9 < v15 || v31 >= (char *)v15 + v41 + v33)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v9 != v15)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          v15[2] = 0;
        }
        uint64_t v10 = &v31[v33];
        uint64_t v35 = (v30 & 0x7FFFFFFFFFFFFFFFLL) - v32;
        swift_release();
        NSString v16 = v40;
        BOOL v17 = __OFSUB__(v35, 1);
        uint64_t v12 = v35 - 1;
        if (v17)
        {
LABEL_27:
          __break(1u);
          break;
        }
      }
      ++v11;
      outlined init with take of PresentationSource?((uint64_t)v5, (uint64_t)v10, (uint64_t *)&demangling cache variable for type metadata for (offset: Int, element: PlaylistCurators.Curator));
      v10 += *(void *)(v45 + 72);
      v14 += v42;
      uint64_t v15 = v9;
      if (v43 == v11) {
        goto LABEL_29;
      }
    }
  }
  uint64_t v12 = 0;
LABEL_29:
  size_t result = swift_bridgeObjectRelease();
  unint64_t v36 = v9[3];
  if (v36 >= 2)
  {
    unint64_t v37 = v36 >> 1;
    BOOL v17 = __OFSUB__(v37, v12);
    uint64_t v38 = v37 - v12;
    if (v17) {
      goto LABEL_36;
    }
    uint64_t v9[2] = v38;
  }
  return (size_t)v9;
}

uint64_t specialized _copySequenceToContiguousArray<A>(_:)(unint64_t a1)
{
  unint64_t v1 = a1;
  unint64_t v31 = a1;
  if (a1 >> 62) {
    goto LABEL_57;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
LABEL_3:
  uint64_t v3 = _swiftEmptyArrayStorage;
  uint64_t v4 = 0;
  if (v2)
  {
    uint64_t v5 = &_swiftEmptyArrayStorage[4];
    while (1)
    {
      unint64_t v6 = v1 >> 62;
      if (v1 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v12 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (!v12) {
          goto LABEL_51;
        }
        swift_bridgeObjectRetain();
        uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (!v13) {
          goto LABEL_52;
        }
      }
      else if (!*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_51;
      }
      if ((v1 & 0xC000000000000001) != 0)
      {
        id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        if (!v6) {
          goto LABEL_10;
        }
      }
      else
      {
        if (!*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
LABEL_51:
          __break(1u);
LABEL_52:
          __break(1u);
LABEL_53:
          __break(1u);
LABEL_54:
          __break(1u);
LABEL_55:
          __break(1u);
LABEL_56:
          __break(1u);
LABEL_57:
          swift_bridgeObjectRetain();
          uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
          goto LABEL_3;
        }
        id v7 = *(id *)(v1 + 32);
        if (!v6)
        {
LABEL_10:
          if (!*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_55;
          }
          goto LABEL_11;
        }
      }
      swift_bridgeObjectRetain();
      uint64_t v14 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v14) {
        goto LABEL_55;
      }
LABEL_11:
      specialized Array.replaceSubrange<A>(_:with:)(0, 1);
      unint64_t v1 = v31;
      if (v31 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (!v15)
        {
LABEL_29:
          uint64_t v10 = 0;
          if (v4) {
            goto LABEL_19;
          }
          goto LABEL_30;
        }
      }
      else if (!*(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_29;
      }
      if (!swift_isUniquelyReferenced_nonNull_bridgeObject()
        || (v1 & 0x8000000000000000) != 0
        || (v1 & 0x4000000000000000) != 0)
      {
        unint64_t v1 = specialized _ArrayBuffer._consumeAndCreateNew()(v1);
        unint64_t v31 = v1;
      }
      uint64_t v8 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v8) {
        goto LABEL_54;
      }
      uint64_t v9 = v8 - 1;
      uint64_t v10 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 8 * v9 + 0x20);
      *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v9;
      unint64_t v1 = (unint64_t)&v31;
      specialized Array._endMutation()();
      if (v4)
      {
LABEL_19:
        BOOL v11 = __OFSUB__(v4--, 1);
        if (v11) {
          goto LABEL_53;
        }
        goto LABEL_42;
      }
LABEL_30:
      unint64_t v16 = v3[3];
      if ((uint64_t)((v16 >> 1) + 0x4000000000000000) < 0) {
        goto LABEL_56;
      }
      int64_t v17 = v16 & 0xFFFFFFFFFFFFFFFELL;
      if (v17 <= 1) {
        uint64_t v18 = 1;
      }
      else {
        uint64_t v18 = v17;
      }
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(UIView, UIView?)>);
      unint64_t v1 = swift_allocObject();
      int64_t v19 = _swift_stdlib_malloc_size((const void *)v1);
      uint64_t v20 = v19 - 32;
      if (v19 < 32) {
        uint64_t v20 = v19 - 17;
      }
      uint64_t v21 = v20 >> 4;
      *(void *)(v1 + 16) = v18;
      *(void *)(v1 + 24) = 2 * (v20 >> 4);
      unint64_t v22 = v1 + 32;
      uint64_t v23 = v3[3] >> 1;
      if (v3[2])
      {
        int64_t v24 = v3 + 4;
        if ((void *)v1 != v3 || v22 >= (unint64_t)v24 + 16 * v23) {
          memmove((void *)(v1 + 32), v24, 16 * v23);
        }
        v3[2] = 0;
      }
      uint64_t v5 = (void *)(v22 + 16 * v23);
      uint64_t v25 = (v21 & 0x7FFFFFFFFFFFFFFFLL) - v23;
      swift_release();
      uint64_t v3 = (void *)v1;
      BOOL v11 = __OFSUB__(v25, 1);
      uint64_t v4 = v25 - 1;
      if (v11) {
        goto LABEL_53;
      }
LABEL_42:
      *uint64_t v5 = v7;
      v5[1] = v10;
      unint64_t v1 = v31;
      if (v31 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v26 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        v5 += 2;
        if (!v26) {
          break;
        }
      }
      else
      {
        v5 += 2;
        if (!*(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          break;
        }
      }
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v28 = v3[3];
  if (v28 < 2) {
    return (uint64_t)v3;
  }
  unint64_t v29 = v28 >> 1;
  BOOL v11 = __OFSUB__(v29, v4);
  uint64_t v30 = v29 - v4;
  if (!v11)
  {
    v3[2] = v30;
    return (uint64_t)v3;
  }
  __break(1u);
  return result;
}

void specialized closure #1 in WaveformPlayIndicator.init(settings:)()
{
}

void specialized Sequence.forEach(_:)(uint64_t a1, void (*a2)(uint64_t, id))
{
  uint64_t v4 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v9 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v10 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v11 = v10 | (v9 << 6);
      goto LABEL_5;
    }
    int64_t v14 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v14 >= v8) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v14);
    ++v9;
    if (!v15)
    {
      int64_t v9 = v14 + 1;
      if (v14 + 1 >= v8) {
        goto LABEL_23;
      }
      unint64_t v15 = *(void *)(v4 + 8 * v9);
      if (!v15)
      {
        int64_t v9 = v14 + 2;
        if (v14 + 2 >= v8) {
          goto LABEL_23;
        }
        unint64_t v15 = *(void *)(v4 + 8 * v9);
        if (!v15)
        {
          int64_t v9 = v14 + 3;
          if (v14 + 3 >= v8) {
            goto LABEL_23;
          }
          unint64_t v15 = *(void *)(v4 + 8 * v9);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v11 = __clz(__rbit64(v15)) + (v9 << 6);
LABEL_5:
    uint64_t v12 = *(unsigned __int8 *)(*(void *)(a1 + 48) + v11);
    id v13 = *(id *)(*(void *)(a1 + 56) + 8 * v11);
    a2(v12, v13);
  }
  int64_t v16 = v14 + 4;
  if (v16 >= v8)
  {
LABEL_23:
    swift_release();
    return;
  }
  unint64_t v15 = *(void *)(v4 + 8 * v16);
  if (v15)
  {
    int64_t v9 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v9 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v9 >= v8) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v9);
    ++v16;
    if (v15) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
}

uint64_t specialized BouncyBarsAsset.MicaBundle.init(path:)(uint64_t a1)
{
  uint64_t v4 = Data.init(contentsOf:options:)();
  if (v2) {
    goto LABEL_2;
  }
  uint64_t v7 = v4;
  unint64_t v8 = v5;
  uint64_t v1 = type metadata accessor for UIMenu(0, &_sSo17NSKeyedUnarchiverCML_0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject.Type>);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_100493D90;
  *(void *)(v9 + 32) = type metadata accessor for UIMenu(0, &lazy cache variable for type metadata for CALayer);
  *(void *)(v9 + 40) = type metadata accessor for UIMenu(0, &lazy cache variable for type metadata for NSMutableDictionary);
  *(void *)(v9 + 48) = type metadata accessor for UIMenu(0, &lazy cache variable for type metadata for NSArray);
  *(void *)(v9 + 56) = type metadata accessor for UIMenu(0, &lazy cache variable for type metadata for NSString);
  *(void *)(v9 + 64) = type metadata accessor for UIMenu(0, &_sSo8NSNumberCML_1);
  static NSKeyedUnarchiver.unarchivedObject(ofClasses:from:)();
  swift_bridgeObjectRelease();
  if (!*((void *)&v18 + 1))
  {
LABEL_19:
    _sypSgWOh_1((uint64_t)&v17);
    goto LABEL_20;
  }
  __swift_instantiateConcreteTypeFromMangledName(&_sSDySSypGMD_1);
  if (swift_dynamicCast())
  {
    uint64_t v1 = (uint64_t)v16;
    if (v16[2])
    {
      unint64_t v11 = specialized __RawDictionaryStorage.find<A>(_:)(0x6579614C746F6F72, 0xE900000000000072);
      if (v12)
      {
        outlined init with copy of Any(v16[7] + 32 * v11, (uint64_t)&v17);
        if (swift_dynamicCast())
        {
          if (v16[2]
            && (unint64_t v13 = specialized __RawDictionaryStorage.find<A>(_:)(0xD000000000000010, 0x8000000100477250),
                (v14 & 1) != 0))
          {
            outlined init with copy of Any(v16[7] + 32 * v13, (uint64_t)&v17);
          }
          else
          {
            long long v17 = 0u;
            long long v18 = 0u;
          }
          swift_bridgeObjectRelease();
          if (*((void *)&v18 + 1))
          {
            if (swift_dynamicCast())
            {
              outlined consume of Data._Representation(v7, v8);
              uint64_t v1 = (uint64_t)v16;
              uint64_t v15 = type metadata accessor for URL();
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(a1, v15);
              return v1;
            }

            goto LABEL_20;
          }

          goto LABEL_19;
        }
      }
    }
    swift_bridgeObjectRelease();
  }
LABEL_20:
  lazy protocol witness table accessor for type BouncyBarsAsset.MicaBundle.Error and conformance BouncyBarsAsset.MicaBundle.Error();
  swift_allocError();
  swift_willThrow();
  outlined consume of Data._Representation(v7, v8);
LABEL_2:
  uint64_t v6 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  return v1;
}

void specialized WaveformPlayIndicator.init(coder:)()
{
  uint64_t v1 = v0;
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&_s7Combine9PublishedVySbGMD_0);
  uint64_t v2 = *(void *)(v18 - 8);
  __chkstk_darwin();
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v0[OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_mode] = 0;
  unint64_t v5 = &v0[OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_colorPalette];
  uint64_t v6 = self;
  id v17 = [v6 tintColor];
  id v7 = [v6 labelColor];
  id v8 = [v7 colorWithAlphaComponent:0.35];

  id v9 = [v6 labelColor];
  id v10 = [v9 colorWithAlphaComponent:0.2];

  id v11 = [v6 labelColor];
  id v12 = [v11 colorWithAlphaComponent:0.6];

  *(void *)unint64_t v5 = v17;
  *((void *)v5 + 1) = v8;
  *((void *)v5 + 2) = v10;
  *((void *)v5 + 3) = v12;
  uint64_t v13 = OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_waveform;
  *(void *)&v1[v13] = [self zero];
  *(void *)&v1[OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_exclusiveAnimation] = 0;
  *(void *)&v1[OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_pulseTask] = 0;
  *(void *)&v1[OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_barRatio] = 0x3FE0000000000000;
  char v14 = &v1[OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator__isVisible];
  char v19 = 0;
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v14, v4, v18);
  *(void *)&v1[OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator____lazy_storage___bars] = 0;
  uint64_t v15 = OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_cannedAnimationAsset;
  type metadata accessor for BouncyBarsAsset();
  swift_allocObject();
  *(void *)&v1[v15] = BouncyBarsAsset.init()();

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_10045AC20()
{
  return swift_deallocObject();
}

id partial apply for closure #1 in WaveformPlayIndicator.animateWaveform()()
{
  return closure #1 in WaveformPlayIndicator.animateWaveform()(*(char **)(v0 + 16));
}

uint64_t block_copy_helper_71(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_71()
{
  return swift_release();
}

unint64_t lazy protocol witness table accessor for type WaveformPlayIndicator.Mode and conformance WaveformPlayIndicator.Mode()
{
  unint64_t result = lazy protocol witness table cache variable for type WaveformPlayIndicator.Mode and conformance WaveformPlayIndicator.Mode;
  if (!lazy protocol witness table cache variable for type WaveformPlayIndicator.Mode and conformance WaveformPlayIndicator.Mode)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type WaveformPlayIndicator.Mode and conformance WaveformPlayIndicator.Mode);
  }
  return result;
}

uint64_t ObjC metadata update function for WaveformPlayIndicator()
{
  return type metadata accessor for WaveformPlayIndicator();
}

uint64_t type metadata accessor for WaveformPlayIndicator()
{
  uint64_t result = type metadata singleton initialization cache for WaveformPlayIndicator;
  if (!type metadata singleton initialization cache for WaveformPlayIndicator) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void type metadata completion function for WaveformPlayIndicator()
{
  _s7Combine9PublishedVySbGMa_0();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

unsigned char *storeEnumTagSinglePayload for WaveformPlayIndicator.Mode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10045AED0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WaveformPlayIndicator.Mode()
{
  return &type metadata for WaveformPlayIndicator.Mode;
}

ValueMetadata *type metadata accessor for WaveformPlayIndicator.ColorPalette()
{
  return &type metadata for WaveformPlayIndicator.ColorPalette;
}

uint64_t type metadata accessor for AnimationGroup()
{
  return self;
}

void *initializeBufferWithCopyOfBuffer for BouncyBarsAsset.MicaBundle(void *a1, void *a2)
{
  int v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  id v4 = v3;
  return a1;
}

void destroy for BouncyBarsAsset.MicaBundle(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void **)(a1 + 8);
}

void *assignWithCopy for BouncyBarsAsset.MicaBundle(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id v4 = (void *)a2[1];
  uint64_t v5 = (void *)a1[1];
  a1[1] = v4;
  id v6 = v4;

  return a1;
}

uint64_t assignWithTake for BouncyBarsAsset.MicaBundle(uint64_t a1, _OWORD *a2)
{
  swift_bridgeObjectRelease();
  id v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  return a1;
}

void *type metadata accessor for BouncyBarsAsset.MicaBundle()
{
  return &unk_10054B360;
}

uint64_t assignWithCopy for AnimationGroup.Animator(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  return a1;
}

uint64_t assignWithTake for AnimationGroup.Animator(uint64_t a1, void *a2)
{
  id v4 = *(void **)a1;
  *(void *)a1 = *a2;

  *(void *)(a1 + 8) = a2[1];
  return a1;
}

ValueMetadata *type metadata accessor for AnimationGroup.Animator()
{
  return &type metadata for AnimationGroup.Animator;
}

void partial apply for closure #1 in AnimationGroup.startAnimation()()
{
  dispatch_group_leave(*(dispatch_group_t *)(v0 + 16));
}

uint64_t partial apply for closure #2 in AnimationGroup.startAnimation()()
{
  return closure #2 in AnimationGroup.startAnimation()(v0);
}

uint64_t sub_10045B104()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t partial apply for closure #7 in WaveformPlayIndicator.reflectChange(from:to:)()
{
  return closure #7 in WaveformPlayIndicator.reflectChange(from:to:)(*(char **)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_10045B14C()
{
  return swift_deallocObject();
}

void partial apply for closure #6 in WaveformPlayIndicator.reflectChange(from:to:)()
{
  closure #6 in WaveformPlayIndicator.reflectChange(from:to:)(*(char **)(v0 + 16), *(unsigned char *)(v0 + 24));
}

void partial apply for closure #5 in WaveformPlayIndicator.reflectChange(from:to:)()
{
  closure #5 in WaveformPlayIndicator.reflectChange(from:to:)(*(void *)(v0 + 16));
}

uint64_t sub_10045B198()
{
  return swift_deallocObject();
}

id partial apply for closure #4 in WaveformPlayIndicator.reflectChange(from:to:)()
{
  uint64_t v1 = *(void **)(v0 + 24);
  [*(id *)(v0 + 16) setAlpha:1.0];

  return [v1 setAlpha:1.0];
}

unint64_t partial apply for closure #3 in WaveformPlayIndicator.reflectChange(from:to:)()
{
  return closure #3 in WaveformPlayIndicator.reflectChange(from:to:)(*(void *)(v0 + 16));
}

unint64_t partial apply for closure #1 in WaveformPlayIndicator.reflectChange(from:to:)()
{
  return closure #1 in WaveformPlayIndicator.reflectChange(from:to:)(*(void *)(v0 + 16));
}

uint64_t partial apply for closure #2 in WaveformPlayIndicator.reflectChange(from:to:)(uint64_t a1)
{
  return closure #2 in WaveformPlayIndicator.reflectChange(from:to:)(a1, *(char **)(v1 + 16), *(unsigned char *)(v1 + 24));
}

uint64_t sub_10045B240()
{
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in WaveformPlayIndicator.makeRepeatingPulseTask()(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  id v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *id v7 = v2;
  v7[1] = partial apply for closure #1 in static MusicEngagementExtension.performRequest(with:completion:);
  return closure #1 in WaveformPlayIndicator.makeRepeatingPulseTask()(a1, v4, v5, v6);
}

uint64_t _s8Dispatch0A13WorkItemFlagsVACs10SetAlgebraAAWlTm_4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10045B37C()
{
  return swift_deallocObject();
}

id partial apply for closure #1 in WaveformPlayIndicator.pulse()()
{
  uint64_t v1 = *(void **)(v0 + 16);
  [v1 setBackgroundColor:*(void *)(v0 + 24)];
  [v1 bounds];

  return objc_msgSend(v1, "setBounds:");
}

id partial apply for closure #3 in WaveformPlayIndicator.pulse()(id result)
{
  if (!result) {
    return [*(id *)(v1 + 16) startAnimation];
  }
  return result;
}

uint64_t sub_10045B444()
{
  swift_release();

  return swift_deallocObject();
}

void partial apply for closure #1 in WaveformPlayIndicator.attachCannedAnimations()(uint64_t a1, uint64_t a2)
{
  closure #1 in WaveformPlayIndicator.attachCannedAnimations()(a1, a2, *(void **)(v2 + 16));
}

uint64_t partial apply for closure #1 in closure #7 in WaveformPlayIndicator.reflectChange(from:to:)()
{
  *(void *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_exclusiveAnimation) = 0;
  return swift_release();
}

unint64_t lazy protocol witness table accessor for type BouncyBarsAsset.MicaBundle.Error and conformance BouncyBarsAsset.MicaBundle.Error()
{
  unint64_t result = lazy protocol witness table cache variable for type BouncyBarsAsset.MicaBundle.Error and conformance BouncyBarsAsset.MicaBundle.Error;
  if (!lazy protocol witness table cache variable for type BouncyBarsAsset.MicaBundle.Error and conformance BouncyBarsAsset.MicaBundle.Error)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type BouncyBarsAsset.MicaBundle.Error and conformance BouncyBarsAsset.MicaBundle.Error);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type BouncyBarsAsset.MicaBundle.Error and conformance BouncyBarsAsset.MicaBundle.Error;
  if (!lazy protocol witness table cache variable for type BouncyBarsAsset.MicaBundle.Error and conformance BouncyBarsAsset.MicaBundle.Error)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type BouncyBarsAsset.MicaBundle.Error and conformance BouncyBarsAsset.MicaBundle.Error);
  }
  return result;
}

uint64_t outlined init with take of PlaylistCurators.Curator(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PlaylistCurators.Curator(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unsigned char *storeEnumTagSinglePayload for BouncyBarsAsset.MicaBundle.Error(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x10045B5F0);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

void *type metadata accessor for BouncyBarsAsset.MicaBundle.Error()
{
  return &unk_10054B928;
}

unsigned char *storeEnumTagSinglePayload for BouncyBarsAsset.BarAnimationKey(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10045B6F4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

void *type metadata accessor for BouncyBarsAsset.BarAnimationKey()
{
  return &unk_10054B9B8;
}

uint64_t associated type witness table accessor for CaseIterable.AllCases : Collection in BouncyBarsAsset.BarAnimationKey()
{
  return lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type [BouncyBarsAsset.BarAnimationKey] and conformance [A], &demangling cache variable for type metadata for [BouncyBarsAsset.BarAnimationKey]);
}

unint64_t lazy protocol witness table accessor for type BouncyBarsAsset.BarAnimationKey and conformance BouncyBarsAsset.BarAnimationKey()
{
  unint64_t result = lazy protocol witness table cache variable for type BouncyBarsAsset.BarAnimationKey and conformance BouncyBarsAsset.BarAnimationKey;
  if (!lazy protocol witness table cache variable for type BouncyBarsAsset.BarAnimationKey and conformance BouncyBarsAsset.BarAnimationKey)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type BouncyBarsAsset.BarAnimationKey and conformance BouncyBarsAsset.BarAnimationKey);
  }
  return result;
}

unint64_t specialized BouncyBarsAsset.BarAnimationKey.init(rawValue:)(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of BouncyBarsAsset.BarAnimationKey.init(rawValue:), v2);
  swift_bridgeObjectRelease();
  if (v3 >= 3) {
    return 3;
  }
  else {
    return v3;
  }
}

uint64_t static vDSP.formWindow<A>(usingSequence:result:isHalfWindow:)()
{
  return static vDSP.formWindow<A>(usingSequence:result:isHalfWindow:)();
}

uint64_t type metadata accessor for vDSP.WindowSequence()
{
  return type metadata accessor for vDSP.WindowSequence();
}

uint64_t vDSP.FFT.init(log2n:radix:ofType:)()
{
  return vDSP.FFT.init(log2n:radix:ofType:)();
}

uint64_t dispatch thunk of vDSP.FFT.forward(input:output:)()
{
  return dispatch thunk of vDSP.FFT.forward(input:output:)();
}

uint64_t type metadata accessor for vDSP.Radix()
{
  return type metadata accessor for vDSP.Radix();
}

uint64_t static CocoaError.userCancelled.getter()
{
  return static CocoaError.userCancelled.getter();
}

uint64_t type metadata accessor for CocoaError.Code()
{
  return type metadata accessor for CocoaError.Code();
}

uint64_t NSNotFound.getter()
{
  return NSNotFound.getter();
}

NSURLRequest __swiftcall URLRequest._bridgeToObjectiveC()()
{
  uint64_t v0 = (objc_class *)URLRequest._bridgeToObjectiveC()();
  result._internal = v1;
  result.super.Class isa = v0;
  return result;
}

uint64_t URLRequest.init(url:cachePolicy:timeoutInterval:)()
{
  return URLRequest.init(url:cachePolicy:timeoutInterval:)();
}

Swift::Void __swiftcall URLRequest.addValue(_:forHTTPHeaderField:)(Swift::String _, Swift::String forHTTPHeaderField)
{
}

uint64_t type metadata accessor for URLRequest()
{
  return type metadata accessor for URLRequest();
}

uint64_t static FormatStyle<>.iso8601.getter()
{
  return static FormatStyle<>.iso8601.getter();
}

uint64_t dispatch thunk of JSONDecoder.decode<A>(_:from:)()
{
  return dispatch thunk of JSONDecoder.decode<A>(_:from:)();
}

uint64_t JSONDecoder.init()()
{
  return JSONDecoder.init()();
}

uint64_t type metadata accessor for JSONDecoder()
{
  return type metadata accessor for JSONDecoder();
}

uint64_t dispatch thunk of JSONEncoder.encode<A>(_:)()
{
  return dispatch thunk of JSONEncoder.encode<A>(_:)();
}

uint64_t JSONEncoder.init()()
{
  return JSONEncoder.init()();
}

uint64_t type metadata accessor for JSONEncoder()
{
  return type metadata accessor for JSONEncoder();
}

uint64_t static CharacterSet.whitespaces.getter()
{
  return static CharacterSet.whitespaces.getter();
}

uint64_t static CharacterSet._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static CharacterSet._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t CharacterSet.contains(_:)()
{
  return CharacterSet.contains(_:)();
}

uint64_t static CharacterSet.newlines.getter()
{
  return static CharacterSet.newlines.getter();
}

uint64_t type metadata accessor for CharacterSet()
{
  return type metadata accessor for CharacterSet();
}

uint64_t static Notification._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Notification._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t Notification.object.getter()
{
  return Notification.object.getter();
}

uint64_t Notification.userInfo.getter()
{
  return Notification.userInfo.getter();
}

uint64_t type metadata accessor for Notification()
{
  return type metadata accessor for Notification();
}

uint64_t URLQueryItem.init(name:value:)()
{
  return URLQueryItem.init(name:value:)();
}

uint64_t URLQueryItem.name.getter()
{
  return URLQueryItem.name.getter();
}

uint64_t URLQueryItem.value.getter()
{
  return URLQueryItem.value.getter();
}

uint64_t type metadata accessor for URLQueryItem()
{
  return type metadata accessor for URLQueryItem();
}

uint64_t URLComponents.queryItems.getter()
{
  return URLComponents.queryItems.getter();
}

uint64_t URLComponents.queryItems.setter()
{
  return URLComponents.queryItems.setter();
}

uint64_t URLComponents.init(url:resolvingAgainstBaseURL:)()
{
  return URLComponents.init(url:resolvingAgainstBaseURL:)();
}

uint64_t URLComponents.url.getter()
{
  return URLComponents.url.getter();
}

uint64_t URLComponents.host.setter()
{
  return URLComponents.host.setter();
}

uint64_t URLComponents.path.modify()
{
  return URLComponents.path.modify();
}

uint64_t URLComponents.path.getter()
{
  return URLComponents.path.getter();
}

uint64_t URLComponents.scheme.getter()
{
  return URLComponents.scheme.getter();
}

uint64_t URLComponents.scheme.setter()
{
  return URLComponents.scheme.setter();
}

uint64_t URLComponents.init(string:)()
{
  return URLComponents.init(string:)();
}

uint64_t URLComponents.init()()
{
  return URLComponents.init()();
}

uint64_t type metadata accessor for URLComponents()
{
  return type metadata accessor for URLComponents();
}

uint64_t __DataStorage.init(bytes:length:copy:deallocator:offset:)()
{
  return __DataStorage.init(bytes:length:copy:deallocator:offset:)();
}

uint64_t __DataStorage.init(bytes:length:)()
{
  return __DataStorage.init(bytes:length:)();
}

uint64_t __DataStorage._bytes.getter()
{
  return __DataStorage._bytes.getter();
}

uint64_t __DataStorage.init(length:)()
{
  return __DataStorage.init(length:)();
}

uint64_t __DataStorage._length.getter()
{
  return __DataStorage._length.getter();
}

uint64_t __DataStorage._offset.getter()
{
  return __DataStorage._offset.getter();
}

uint64_t type metadata accessor for __DataStorage()
{
  return type metadata accessor for __DataStorage();
}

uint64_t static DateComponents._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static DateComponents._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t DateComponents.day.getter()
{
  return DateComponents.day.getter();
}

uint64_t DateComponents.date.getter()
{
  return DateComponents.date.getter();
}

uint64_t type metadata accessor for DateComponents()
{
  return type metadata accessor for DateComponents();
}

uint64_t dispatch thunk of ContiguousBytes.withUnsafeBytes<A>(_:)()
{
  return dispatch thunk of ContiguousBytes.withUnsafeBytes<A>(_:)();
}

uint64_t type metadata accessor for AttributedString()
{
  return type metadata accessor for AttributedString();
}

uint64_t static _ErrorCodeProtocol.~= infix(_:_:)()
{
  return static _ErrorCodeProtocol.~= infix(_:_:)();
}

uint64_t static ParseableFormatStyle<>.dateTime.getter()
{
  return static ParseableFormatStyle<>.dateTime.getter();
}

uint64_t _BridgedStoredNSError.code.getter()
{
  return _BridgedStoredNSError.code.getter();
}

uint64_t _BridgedStoredNSError.userInfo.getter()
{
  return _BridgedStoredNSError.userInfo.getter();
}

uint64_t _convertErrorToNSError(_:)()
{
  return _convertErrorToNSError(_:)();
}

uint64_t _convertNSErrorToError(_:)()
{
  return _convertNSErrorToError(_:)();
}

uint64_t FloatingPointFormatStyle.Percent.init(locale:)()
{
  return FloatingPointFormatStyle.Percent.init(locale:)();
}

uint64_t _KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)()
{
  return _KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)();
}

uint64_t static FormatStyleCapitalizationContext.unknown.getter()
{
  return static FormatStyleCapitalizationContext.unknown.getter();
}

uint64_t type metadata accessor for FormatStyleCapitalizationContext()
{
  return type metadata accessor for FormatStyleCapitalizationContext();
}

uint64_t type metadata accessor for URL.DirectoryHint()
{
  return type metadata accessor for URL.DirectoryHint();
}

uint64_t URL.absoluteString.getter()
{
  return URL.absoluteString.getter();
}

uint64_t URL.init(fileURLWithPath:)()
{
  return URL.init(fileURLWithPath:)();
}

uint64_t URL.lastPathComponent.getter()
{
  return URL.lastPathComponent.getter();
}

uint64_t URL.dataRepresentation.getter()
{
  return URL.dataRepresentation.getter();
}

void __swiftcall URL._bridgeToObjectiveC()(NSURL *__return_ptr retstr)
{
}

uint64_t URL.appendingPathComponent(_:isDirectory:)()
{
  return URL.appendingPathComponent(_:isDirectory:)();
}

uint64_t URL.appendingPathComponent(_:)()
{
  return URL.appendingPathComponent(_:)();
}

uint64_t URL.deletingLastPathComponent()()
{
  return URL.deletingLastPathComponent()();
}

uint64_t static URL.== infix(_:_:)()
{
  return static URL.== infix(_:_:)();
}

uint64_t static URL._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static URL._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t URL.path.getter()
{
  return URL.path.getter();
}

Swift::Void __swiftcall URL.append(queryItems:)(Swift::OpaquePointer queryItems)
{
}

uint64_t URL.init(string:)()
{
  return URL.init(string:)();
}

uint64_t URL.init(filePath:directoryHint:relativeTo:)()
{
  return URL.init(filePath:directoryHint:relativeTo:)();
}

uint64_t URL.appending<A>(path:directoryHint:)()
{
  return URL.appending<A>(path:directoryHint:)();
}

uint64_t type metadata accessor for URL()
{
  return type metadata accessor for URL();
}

Swift::Void __swiftcall Data.LargeSlice.ensureUniqueReference()()
{
}

uint64_t Data.init(contentsOf:options:)()
{
  return Data.init(contentsOf:options:)();
}

uint64_t type metadata accessor for Data.RangeReference()
{
  return type metadata accessor for Data.RangeReference();
}

uint64_t Data._Representation.replaceSubrange(_:with:count:)()
{
  return Data._Representation.replaceSubrange(_:with:count:)();
}

uint64_t Data._Representation.append(contentsOf:)()
{
  return Data._Representation.append(contentsOf:)();
}

NSData __swiftcall Data._bridgeToObjectiveC()()
{
  return (NSData)Data._bridgeToObjectiveC()();
}

uint64_t static Data._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Data._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t Data.write(to:options:)()
{
  return Data.write(to:options:)();
}

uint64_t static Date.FormatStyle.TimeStyle.omitted.getter()
{
  return static Date.FormatStyle.TimeStyle.omitted.getter();
}

uint64_t type metadata accessor for Date.FormatStyle.TimeStyle()
{
  return type metadata accessor for Date.FormatStyle.TimeStyle();
}

uint64_t static Date.FormatStyle.DateStyle.abbreviated.getter()
{
  return static Date.FormatStyle.DateStyle.abbreviated.getter();
}

uint64_t type metadata accessor for Date.FormatStyle.DateStyle()
{
  return type metadata accessor for Date.FormatStyle.DateStyle();
}

uint64_t Date.FormatStyle.day(_:)()
{
  return Date.FormatStyle.day(_:)();
}

uint64_t Date.FormatStyle.init(date:time:locale:calendar:timeZone:capitalizationContext:)()
{
  return Date.FormatStyle.init(date:time:locale:calendar:timeZone:capitalizationContext:)();
}

uint64_t Date.FormatStyle.hour(_:)()
{
  return Date.FormatStyle.hour(_:)();
}

uint64_t Date.FormatStyle.year(_:)()
{
  return Date.FormatStyle.year(_:)();
}

uint64_t Date.FormatStyle.month(_:)()
{
  return Date.FormatStyle.month(_:)();
}

uint64_t static Date.FormatStyle.Symbol.Day.defaultDigits.getter()
{
  return static Date.FormatStyle.Symbol.Day.defaultDigits.getter();
}

uint64_t type metadata accessor for Date.FormatStyle.Symbol.Day()
{
  return type metadata accessor for Date.FormatStyle.Symbol.Day();
}

uint64_t static Date.FormatStyle.Symbol.Hour.defaultDigits(amPM:)()
{
  return static Date.FormatStyle.Symbol.Hour.defaultDigits(amPM:)();
}

uint64_t static Date.FormatStyle.Symbol.Hour.AMPMStyle.abbreviated.getter()
{
  return static Date.FormatStyle.Symbol.Hour.AMPMStyle.abbreviated.getter();
}

uint64_t type metadata accessor for Date.FormatStyle.Symbol.Hour.AMPMStyle()
{
  return type metadata accessor for Date.FormatStyle.Symbol.Hour.AMPMStyle();
}

uint64_t type metadata accessor for Date.FormatStyle.Symbol.Hour()
{
  return type metadata accessor for Date.FormatStyle.Symbol.Hour();
}

uint64_t static Date.FormatStyle.Symbol.Year.defaultDigits.getter()
{
  return static Date.FormatStyle.Symbol.Year.defaultDigits.getter();
}

uint64_t type metadata accessor for Date.FormatStyle.Symbol.Year()
{
  return type metadata accessor for Date.FormatStyle.Symbol.Year();
}

uint64_t static Date.FormatStyle.Symbol.Month.abbreviated.getter()
{
  return static Date.FormatStyle.Symbol.Month.abbreviated.getter();
}

uint64_t static Date.FormatStyle.Symbol.Month.wide.getter()
{
  return static Date.FormatStyle.Symbol.Month.wide.getter();
}

uint64_t type metadata accessor for Date.FormatStyle.Symbol.Month()
{
  return type metadata accessor for Date.FormatStyle.Symbol.Month();
}

uint64_t static Date.FormatStyle.Symbol.Minute.defaultDigits.getter()
{
  return static Date.FormatStyle.Symbol.Minute.defaultDigits.getter();
}

uint64_t type metadata accessor for Date.FormatStyle.Symbol.Minute()
{
  return type metadata accessor for Date.FormatStyle.Symbol.Minute();
}

uint64_t static Date.FormatStyle.Symbol.Weekday.wide.getter()
{
  return static Date.FormatStyle.Symbol.Weekday.wide.getter();
}

uint64_t type metadata accessor for Date.FormatStyle.Symbol.Weekday()
{
  return type metadata accessor for Date.FormatStyle.Symbol.Weekday();
}

uint64_t Date.FormatStyle.minute(_:)()
{
  return Date.FormatStyle.minute(_:)();
}

uint64_t Date.FormatStyle.weekday(_:)()
{
  return Date.FormatStyle.weekday(_:)();
}

uint64_t Date.FormatStyle.timeZone.setter()
{
  return Date.FormatStyle.timeZone.setter();
}

uint64_t type metadata accessor for Date.FormatStyle()
{
  return type metadata accessor for Date.FormatStyle();
}

uint64_t static Date.distantFuture.getter()
{
  return static Date.distantFuture.getter();
}

uint64_t Date.timeIntervalSince(_:)()
{
  return Date.timeIntervalSince(_:)();
}

uint64_t type metadata accessor for Date.ISO8601FormatStyle.DateTimeSeparator()
{
  return type metadata accessor for Date.ISO8601FormatStyle.DateTimeSeparator();
}

uint64_t type metadata accessor for Date.ISO8601FormatStyle.DateSeparator()
{
  return type metadata accessor for Date.ISO8601FormatStyle.DateSeparator();
}

uint64_t type metadata accessor for Date.ISO8601FormatStyle.TimeSeparator()
{
  return type metadata accessor for Date.ISO8601FormatStyle.TimeSeparator();
}

uint64_t Date.ISO8601FormatStyle.init(dateSeparator:dateTimeSeparator:timeSeparator:timeZoneSeparator:includingFractionalSeconds:timeZone:)()
{
  return Date.ISO8601FormatStyle.init(dateSeparator:dateTimeSeparator:timeSeparator:timeZoneSeparator:includingFractionalSeconds:timeZone:)();
}

uint64_t type metadata accessor for Date.ISO8601FormatStyle.TimeZoneSeparator()
{
  return type metadata accessor for Date.ISO8601FormatStyle.TimeZoneSeparator();
}

uint64_t Date.ISO8601FormatStyle.day()()
{
  return Date.ISO8601FormatStyle.day()();
}

uint64_t Date.ISO8601FormatStyle.year()()
{
  return Date.ISO8601FormatStyle.year()();
}

uint64_t Date.ISO8601FormatStyle.month()()
{
  return Date.ISO8601FormatStyle.month()();
}

uint64_t type metadata accessor for Date.ISO8601FormatStyle()
{
  return type metadata accessor for Date.ISO8601FormatStyle();
}

uint64_t Date.addingTimeInterval(_:)()
{
  return Date.addingTimeInterval(_:)();
}

NSDate __swiftcall Date._bridgeToObjectiveC()()
{
  return (NSDate)Date._bridgeToObjectiveC()();
}

uint64_t static Date.> infix(_:_:)()
{
  return static Date.> infix(_:_:)();
}

uint64_t static Date.< infix(_:_:)()
{
  return static Date.< infix(_:_:)();
}

uint64_t static Date.+ infix(_:_:)()
{
  return static Date.+ infix(_:_:)();
}

uint64_t Date.timeIntervalSince1970.getter()
{
  return Date.timeIntervalSince1970.getter();
}

uint64_t static Date.== infix(_:_:)()
{
  return static Date.== infix(_:_:)();
}

uint64_t static Date._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Date._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t static Date.now.getter()
{
  return static Date.now.getter();
}

uint64_t Date.formatted<A>(_:)()
{
  return Date.formatted<A>(_:)();
}

uint64_t Date.init()()
{
  return Date.init()();
}

uint64_t type metadata accessor for Date()
{
  return type metadata accessor for Date();
}

uint64_t Date.init<A>(_:strategy:)()
{
  return Date.init<A>(_:strategy:)();
}

uint64_t UUID.uuidString.getter()
{
  return UUID.uuidString.getter();
}

uint64_t static UUID.== infix(_:_:)()
{
  return static UUID.== infix(_:_:)();
}

uint64_t UUID.init()()
{
  return UUID.init()();
}

uint64_t type metadata accessor for UUID()
{
  return type metadata accessor for UUID();
}

uint64_t Locale.init(identifier:)()
{
  return Locale.init(identifier:)();
}

uint64_t Locale.identifier.getter()
{
  return Locale.identifier.getter();
}

uint64_t Locale.LanguageCode.init(stringLiteral:)()
{
  return Locale.LanguageCode.init(stringLiteral:)();
}

uint64_t type metadata accessor for Locale.LanguageCode()
{
  return type metadata accessor for Locale.LanguageCode();
}

NSLocale __swiftcall Locale._bridgeToObjectiveC()()
{
  return (NSLocale)Locale._bridgeToObjectiveC()();
}

uint64_t static Locale.autoupdatingCurrent.getter()
{
  return static Locale.autoupdatingCurrent.getter();
}

uint64_t static Locale.current.getter()
{
  return static Locale.current.getter();
}

uint64_t Locale.Language.init(identifier:)()
{
  return Locale.Language.init(identifier:)();
}

uint64_t Locale.Language.languageCode.getter()
{
  return Locale.Language.languageCode.getter();
}

uint64_t Locale.Language.characterDirection.getter()
{
  return Locale.Language.characterDirection.getter();
}

uint64_t type metadata accessor for Locale.Language()
{
  return type metadata accessor for Locale.Language();
}

uint64_t type metadata accessor for Locale()
{
  return type metadata accessor for Locale();
}

uint64_t type metadata accessor for Calendar.Identifier()
{
  return type metadata accessor for Calendar.Identifier();
}

uint64_t Calendar.init(identifier:)()
{
  return Calendar.init(identifier:)();
}

uint64_t Calendar.startOfDay(for:)()
{
  return Calendar.startOfDay(for:)();
}

uint64_t Calendar.maximumRange(of:)()
{
  return Calendar.maximumRange(of:)();
}

uint64_t Calendar.dateComponents(_:from:to:)()
{
  return Calendar.dateComponents(_:from:to:)();
}

uint64_t static Calendar.autoupdatingCurrent.getter()
{
  return static Calendar.autoupdatingCurrent.getter();
}

uint64_t static Calendar._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Calendar._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t Calendar.date(from:)()
{
  return Calendar.date(from:)();
}

uint64_t static Calendar.current.getter()
{
  return static Calendar.current.getter();
}

uint64_t Calendar.timeZone.getter()
{
  return Calendar.timeZone.getter();
}

uint64_t Calendar.timeZone.setter()
{
  return Calendar.timeZone.setter();
}

uint64_t type metadata accessor for Calendar.Component()
{
  return type metadata accessor for Calendar.Component();
}

uint64_t type metadata accessor for Calendar()
{
  return type metadata accessor for Calendar();
}

void __swiftcall IndexSet._bridgeToObjectiveC()(NSIndexSet *__return_ptr retstr)
{
}

Swift::tuple_inserted_Bool_memberAfterInsert_Int __swiftcall IndexSet.insert(_:)(Swift::Int a1)
{
  char v1 = IndexSet.insert(_:)(a1);
  result.memberAfterInsert = v2;
  result.inserteCGFloat d = v1;
  return result;
}

Swift::Bool __swiftcall IndexSet.contains(_:)(Swift::Int a1)
{
  return IndexSet.contains(_:)(a1);
}

uint64_t IndexSet.formUnion(_:)()
{
  return IndexSet.formUnion(_:)();
}

uint64_t IndexSet.init()()
{
  return IndexSet.init()();
}

uint64_t type metadata accessor for IndexSet()
{
  return type metadata accessor for IndexSet();
}

uint64_t TimeZone.init(identifier:)()
{
  return TimeZone.init(identifier:)();
}

uint64_t TimeZone.init(secondsFromGMT:)()
{
  return TimeZone.init(secondsFromGMT:)();
}

NSTimeZone __swiftcall TimeZone._bridgeToObjectiveC()()
{
  return (NSTimeZone)TimeZone._bridgeToObjectiveC()();
}

uint64_t type metadata accessor for TimeZone()
{
  return type metadata accessor for TimeZone();
}

NSIndexPath __swiftcall IndexPath._bridgeToObjectiveC()()
{
  return (NSIndexPath)IndexPath._bridgeToObjectiveC()();
}

uint64_t static IndexPath._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t IndexPath.init(item:section:)()
{
  return IndexPath.init(item:section:)();
}

uint64_t IndexPath.item.getter()
{
  return IndexPath.item.getter();
}

uint64_t IndexPath.section.getter()
{
  return IndexPath.section.getter();
}

uint64_t IndexPath.count.getter()
{
  return IndexPath.count.getter();
}

uint64_t type metadata accessor for IndexPath()
{
  return type metadata accessor for IndexPath();
}

uint64_t IndexPath.subscript.getter()
{
  return IndexPath.subscript.getter();
}

uint64_t IndexPath.subscript.setter()
{
  return IndexPath.subscript.setter();
}

uint64_t type metadata accessor for MotionMode()
{
  return type metadata accessor for MotionMode();
}

uint64_t dispatch thunk of MarkupRenderer.attributedString.getter()
{
  return dispatch thunk of MarkupRenderer.attributedString.getter();
}

uint64_t MarkupRenderer.init(_:)()
{
  return MarkupRenderer.init(_:)();
}

uint64_t CircularProgressView.init(value:trackColor:lineWidth:lineStyle:)()
{
  return CircularProgressView.init(value:trackColor:lineWidth:lineStyle:)();
}

uint64_t type metadata accessor for CircularProgressView.LineStyle()
{
  return type metadata accessor for CircularProgressView.LineStyle();
}

uint64_t dispatch thunk of static ApproximatelyEquatable.==~ infix(_:_:)()
{
  return dispatch thunk of static ApproximatelyEquatable.==~ infix(_:_:)();
}

uint64_t static ApproximatelyEquatable.!=~ infix(_:_:)()
{
  return static ApproximatelyEquatable.!=~ infix(_:_:)();
}

uint64_t static ApproximatelyEquatable<>.==~ infix(_:_:)()
{
  return static ApproximatelyEquatable<>.==~ infix(_:_:)();
}

uint64_t ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)()
{
  return ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
}

uint64_t ObservationRegistrar.access<A, B>(_:keyPath:)()
{
  return ObservationRegistrar.access<A, B>(_:keyPath:)();
}

uint64_t ObservationRegistrar.didSet<A, B>(_:keyPath:)()
{
  return ObservationRegistrar.didSet<A, B>(_:keyPath:)();
}

uint64_t ObservationRegistrar.willSet<A, B>(_:keyPath:)()
{
  return ObservationRegistrar.willSet<A, B>(_:keyPath:)();
}

uint64_t ObservationRegistrar.init()()
{
  return ObservationRegistrar.init()();
}

uint64_t type metadata accessor for ObservationRegistrar()
{
  return type metadata accessor for ObservationRegistrar();
}

uint64_t type metadata accessor for CGPathFillRule()
{
  return type metadata accessor for CGPathFillRule();
}

uint64_t CGFloat.floorValue(scale:)()
{
  return CGFloat.floorValue(scale:)();
}

uint64_t CGFloat.roundValue(scale:)()
{
  return CGFloat.roundValue(scale:)();
}

uint64_t CGFloat.ceilingValue(scale:)()
{
  return CGFloat.ceilingValue(scale:)();
}

NSNumber __swiftcall CGFloat._bridgeToObjectiveC()()
{
  return (NSNumber)CGFloat._bridgeToObjectiveC()();
}

uint64_t static CGFloat._forceBridgeFromObjectiveC(_:result:)()
{
  return static CGFloat._forceBridgeFromObjectiveC(_:result:)();
}

uint64_t static CGFloat._conditionallyBridgeFromObjectiveC(_:result:)()
{
  return static CGFloat._conditionallyBridgeFromObjectiveC(_:result:)();
}

uint64_t static CGFloat._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static CGFloat._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t isFeatureEnabled(_:)()
{
  return isFeatureEnabled(_:)();
}

uint64_t static _CFObject.== infix(_:_:)()
{
  return static _CFObject.== infix(_:_:)();
}

uint64_t _CFObject.hash(into:)()
{
  return _CFObject.hash(into:)();
}

uint64_t _CFObject.hashValue.getter()
{
  return _CFObject.hashValue.getter();
}

uint64_t GroupSessionEvent.init(originator:action:url:)()
{
  return GroupSessionEvent.init(originator:action:url:)();
}

uint64_t static GroupSessionEvent.Action.QueueChange.Item.song(_:)()
{
  return static GroupSessionEvent.Action.QueueChange.Item.song(_:)();
}

uint64_t static GroupSessionEvent.Action.QueueChange.Item.container(_:)()
{
  return static GroupSessionEvent.Action.QueueChange.Item.container(_:)();
}

uint64_t type metadata accessor for GroupSessionEvent.Action.QueueChange.Item()
{
  return type metadata accessor for GroupSessionEvent.Action.QueueChange.Item();
}

uint64_t static GroupSessionEvent.Action.QueueChange.added(_:)()
{
  return static GroupSessionEvent.Action.QueueChange.added(_:)();
}

uint64_t type metadata accessor for GroupSessionEvent.Action.QueueChange()
{
  return type metadata accessor for GroupSessionEvent.Action.QueueChange();
}

uint64_t static GroupSessionEvent.Action.updatedQueue.getter()
{
  return static GroupSessionEvent.Action.updatedQueue.getter();
}

uint64_t static GroupSessionEvent.Action.updatedQueue(_:)()
{
  return static GroupSessionEvent.Action.updatedQueue(_:)();
}

uint64_t static GroupSessionEvent.Action.play.getter()
{
  return static GroupSessionEvent.Action.play.getter();
}

uint64_t static GroupSessionEvent.Action.seek.getter()
{
  return static GroupSessionEvent.Action.seek.getter();
}

uint64_t static GroupSessionEvent.Action.skip(item:)()
{
  return static GroupSessionEvent.Action.skip(item:)();
}

uint64_t static GroupSessionEvent.Action.pause.getter()
{
  return static GroupSessionEvent.Action.pause.getter();
}

uint64_t static GroupSessionEvent.Action.react(with:)()
{
  return static GroupSessionEvent.Action.react(with:)();
}

uint64_t static GroupSessionEvent.Action.start.getter()
{
  return static GroupSessionEvent.Action.start.getter();
}

uint64_t type metadata accessor for GroupSessionEvent.Action()
{
  return type metadata accessor for GroupSessionEvent.Action();
}

uint64_t type metadata accessor for GroupSessionEvent()
{
  return type metadata accessor for GroupSessionEvent();
}

uint64_t GroupStateObserver.isEligibleForGroupSession.getter()
{
  return GroupStateObserver.isEligibleForGroupSession.getter();
}

uint64_t GroupStateObserver.__allocating_init()()
{
  return GroupStateObserver.__allocating_init()();
}

uint64_t type metadata accessor for GroupStateObserver()
{
  return type metadata accessor for GroupStateObserver();
}

uint64_t static GroupActivityMetadata.ActivityType.listenTogether.getter()
{
  return static GroupActivityMetadata.ActivityType.listenTogether.getter();
}

uint64_t type metadata accessor for GroupActivityMetadata.ActivityType()
{
  return type metadata accessor for GroupActivityMetadata.ActivityType();
}

uint64_t GroupActivityMetadata.fallbackURL.setter()
{
  return GroupActivityMetadata.fallbackURL.setter();
}

uint64_t GroupActivityMetadata.previewImage.setter()
{
  return GroupActivityMetadata.previewImage.setter();
}

uint64_t GroupActivityMetadata.supportsContinuationOnTV.setter()
{
  return GroupActivityMetadata.supportsContinuationOnTV.setter();
}

uint64_t GroupActivityMetadata.type.setter()
{
  return GroupActivityMetadata.type.setter();
}

uint64_t GroupActivityMetadata.title.setter()
{
  return GroupActivityMetadata.title.setter();
}

uint64_t GroupActivityMetadata.subtitle.setter()
{
  return GroupActivityMetadata.subtitle.setter();
}

uint64_t GroupActivityMetadata.init()()
{
  return GroupActivityMetadata.init()();
}

uint64_t type metadata accessor for GroupActivityMetadata()
{
  return type metadata accessor for GroupActivityMetadata();
}

uint64_t static GroupActivityActivationResult.== infix(_:_:)()
{
  return static GroupActivityActivationResult.== infix(_:_:)();
}

uint64_t type metadata accessor for GroupActivityActivationResult()
{
  return type metadata accessor for GroupActivityActivationResult();
}

uint64_t GroupSession.showNotice(_:)()
{
  return GroupSession.showNotice(_:)();
}

uint64_t GroupSession.isFirstJoin.getter()
{
  return GroupSession.isFirstJoin.getter();
}

uint64_t GroupSession.localParticipant.getter()
{
  return GroupSession.localParticipant.getter();
}

uint64_t GroupSession.activeParticipants.getter()
{
  return GroupSession.activeParticipants.getter();
}

uint64_t GroupSession.isLocallyInitiated.getter()
{
  return GroupSession.isLocallyInitiated.getter();
}

uint64_t GroupSession.$activeParticipants.getter()
{
  return GroupSession.$activeParticipants.getter();
}

Swift::Void __swiftcall GroupSession.join()()
{
}

uint64_t static GroupSession.State.== infix(_:_:)()
{
  return static GroupSession.State.== infix(_:_:)();
}

Swift::Void __swiftcall GroupSession.leave()()
{
}

uint64_t GroupSession.state.getter()
{
  return GroupSession.state.getter();
}

uint64_t GroupSession.$state.getter()
{
  return GroupSession.$state.getter();
}

uint64_t GroupSession.Sessions.makeAsyncIterator()()
{
  return GroupSession.Sessions.makeAsyncIterator()();
}

uint64_t GroupSession.activity.getter()
{
  return GroupSession.activity.getter();
}

uint64_t GroupSession.activity.setter()
{
  return GroupSession.activity.setter();
}

uint64_t static GroupActivity.sessions()()
{
  return static GroupActivity.sessions()();
}

uint64_t Participant.id.getter()
{
  return Participant.id.getter();
}

uint64_t type metadata accessor for Participant()
{
  return type metadata accessor for Participant();
}

uint64_t dispatch thunk of LibraryArtistInternalFilter.favoriteStatus.getter()
{
  return dispatch thunk of LibraryArtistInternalFilter.favoriteStatus.getter();
}

uint64_t type metadata accessor for RecentlyAddedMusicItem()
{
  return type metadata accessor for RecentlyAddedMusicItem();
}

uint64_t dispatch thunk of LibraryPlaylistEntryInternalFilter.playlist.getter()
{
  return dispatch thunk of LibraryPlaylistEntryInternalFilter.playlist.getter();
}

uint64_t GenericMusicItem.init(_:)()
{
  return GenericMusicItem.init(_:)();
}

uint64_t type metadata accessor for GenericMusicItem()
{
  return type metadata accessor for GenericMusicItem();
}

uint64_t static MusicLibraryAction<>.undoDislike.getter()
{
  return static MusicLibraryAction<>.undoDislike.getter();
}

uint64_t static MusicLibraryAction<>.undoFavorite.getter()
{
  return static MusicLibraryAction<>.undoFavorite.getter();
}

uint64_t static MusicLibraryAction<>.removeDownload.getter()
{
  return static MusicLibraryAction<>.removeDownload.getter();
}

uint64_t static MusicLibraryAction<>.add.getter()
{
  return static MusicLibraryAction<>.add.getter();
}

uint64_t static MusicLibraryAction<>.remove.getter()
{
  return static MusicLibraryAction<>.remove.getter();
}

uint64_t static MusicLibraryAction<>.dislike.getter()
{
  return static MusicLibraryAction<>.dislike.getter();
}

uint64_t static MusicLibraryAction<>.download.getter()
{
  return static MusicLibraryAction<>.download.getter();
}

uint64_t static MusicLibraryAction<>.favorite.getter()
{
  return static MusicLibraryAction<>.favorite.getter();
}

uint64_t static MusicFavoriteStatus.== infix(_:_:)()
{
  return static MusicFavoriteStatus.== infix(_:_:)();
}

uint64_t type metadata accessor for MusicFavoriteStatus()
{
  return type metadata accessor for MusicFavoriteStatus();
}

uint64_t MusicAutoupdatableRequest.autoupdatingResponse.getter()
{
  return MusicAutoupdatableRequest.autoupdatingResponse.getter();
}

uint64_t dispatch thunk of MusicAutoupdatingResponse.isLoaded.getter()
{
  return dispatch thunk of MusicAutoupdatingResponse.isLoaded.getter();
}

uint64_t dispatch thunk of MusicAutoupdatingResponse.$response.getter()
{
  return dispatch thunk of MusicAutoupdatingResponse.$response.getter();
}

uint64_t MusicCollaborativePlaylist.JoinRequest.init(playlist:invitationURL:)()
{
  return MusicCollaborativePlaylist.JoinRequest.init(playlist:invitationURL:)();
}

uint64_t type metadata accessor for MusicCollaborativePlaylist.JoinRequest()
{
  return type metadata accessor for MusicCollaborativePlaylist.JoinRequest();
}

uint64_t MusicCollaborativePlaylist.EndCollaborationRequest.init(playlist:)()
{
  return MusicCollaborativePlaylist.EndCollaborationRequest.init(playlist:)();
}

uint64_t type metadata accessor for MusicCollaborativePlaylist.EndCollaborationRequest()
{
  return type metadata accessor for MusicCollaborativePlaylist.EndCollaborationRequest();
}

uint64_t MusicCollaborativePlaylist.RemoveCollaboratorRequest.init(collaborator:playlist:)()
{
  return MusicCollaborativePlaylist.RemoveCollaboratorRequest.init(collaborator:playlist:)();
}

uint64_t type metadata accessor for MusicCollaborativePlaylist.RemoveCollaboratorRequest()
{
  return type metadata accessor for MusicCollaborativePlaylist.RemoveCollaboratorRequest();
}

uint64_t MusicCollaborativePlaylist.StartCollaborationRequest.init(playlist:invitationMode:)()
{
  return MusicCollaborativePlaylist.StartCollaborationRequest.init(playlist:invitationMode:)();
}

uint64_t type metadata accessor for MusicCollaborativePlaylist.StartCollaborationRequest()
{
  return type metadata accessor for MusicCollaborativePlaylist.StartCollaborationRequest();
}

uint64_t MusicCollaborativePlaylist.ResetInvitationLinkRequest.init(playlist:)()
{
  return MusicCollaborativePlaylist.ResetInvitationLinkRequest.init(playlist:)();
}

uint64_t type metadata accessor for MusicCollaborativePlaylist.ResetInvitationLinkRequest()
{
  return type metadata accessor for MusicCollaborativePlaylist.ResetInvitationLinkRequest();
}

uint64_t MusicCollaborativePlaylist.UpdateInvitationModeRequest.init(collaboration:updatedInvitationMode:)()
{
  return MusicCollaborativePlaylist.UpdateInvitationModeRequest.init(collaboration:updatedInvitationMode:)();
}

uint64_t type metadata accessor for MusicCollaborativePlaylist.UpdateInvitationModeRequest()
{
  return type metadata accessor for MusicCollaborativePlaylist.UpdateInvitationModeRequest();
}

uint64_t MusicCollaborativePlaylist.PendingCollaboratorDecisionRequest.init(collaborator:playlist:)()
{
  return MusicCollaborativePlaylist.PendingCollaboratorDecisionRequest.init(collaborator:playlist:)();
}

uint64_t type metadata accessor for MusicCollaborativePlaylist.PendingCollaboratorDecisionRequest()
{
  return type metadata accessor for MusicCollaborativePlaylist.PendingCollaboratorDecisionRequest();
}

uint64_t static MusicLibraryPlaylistRequest.duplicatingPlaylist(_:)()
{
  return static MusicLibraryPlaylistRequest.duplicatingPlaylist(_:)();
}

uint64_t type metadata accessor for MusicLibraryPlaylistRequest.CompletionPolicy()
{
  return type metadata accessor for MusicLibraryPlaylistRequest.CompletionPolicy();
}

uint64_t MusicLibraryPlaylistRequest.completionPolicy.setter()
{
  return MusicLibraryPlaylistRequest.completionPolicy.setter();
}

uint64_t static MusicLibraryPlaylistRequest.editing(_:name:description:userImage:isPublic:isVisible:curator:)()
{
  return static MusicLibraryPlaylistRequest.editing(_:name:description:userImage:isPublic:isVisible:curator:)();
}

uint64_t type metadata accessor for MusicLibraryPlaylistRequest()
{
  return type metadata accessor for MusicLibraryPlaylistRequest();
}

uint64_t MusicLibraryPlaylistResponse.playlist.getter()
{
  return MusicLibraryPlaylistResponse.playlist.getter();
}

uint64_t type metadata accessor for MusicLibraryPlaylistResponse()
{
  return type metadata accessor for MusicLibraryPlaylistResponse();
}

uint64_t MusicMovie.contentRating.getter()
{
  return MusicMovie.contentRating.getter();
}

uint64_t MusicMovie.url.getter()
{
  return MusicMovie.url.getter();
}

uint64_t MusicMovie.catalogID.getter()
{
  return MusicMovie.catalogID.getter();
}

uint64_t type metadata accessor for MusicMovie()
{
  return type metadata accessor for MusicMovie();
}

uint64_t MusicOffer.Kind.rawValue.getter()
{
  return MusicOffer.Kind.rawValue.getter();
}

uint64_t type metadata accessor for MusicOffer.Kind()
{
  return type metadata accessor for MusicOffer.Kind();
}

uint64_t MusicOffer.kind.getter()
{
  return MusicOffer.kind.getter();
}

uint64_t type metadata accessor for MusicOffer()
{
  return type metadata accessor for MusicOffer();
}

uint64_t type metadata accessor for CreditArtist()
{
  return type metadata accessor for CreditArtist();
}

uint64_t EditorialItem.url.getter()
{
  return EditorialItem.url.getter();
}

uint64_t type metadata accessor for EditorialItem()
{
  return type metadata accessor for EditorialItem();
}

uint64_t SocialProfile.id.getter()
{
  return SocialProfile.id.getter();
}

uint64_t SocialProfile.url.getter()
{
  return SocialProfile.url.getter();
}

uint64_t type metadata accessor for SocialProfile()
{
  return type metadata accessor for SocialProfile();
}

uint64_t UploadedAudio.contentRating.getter()
{
  return UploadedAudio.contentRating.getter();
}

uint64_t UploadedAudio.postURL.getter()
{
  return UploadedAudio.postURL.getter();
}

uint64_t UploadedAudio.catalogID.getter()
{
  return UploadedAudio.catalogID.getter();
}

uint64_t type metadata accessor for UploadedAudio()
{
  return type metadata accessor for UploadedAudio();
}

uint64_t UploadedVideo.contentRating.getter()
{
  return UploadedVideo.contentRating.getter();
}

uint64_t UploadedVideo.postURL.getter()
{
  return UploadedVideo.postURL.getter();
}

uint64_t UploadedVideo.catalogID.getter()
{
  return UploadedVideo.catalogID.getter();
}

uint64_t type metadata accessor for UploadedVideo()
{
  return type metadata accessor for UploadedVideo();
}

uint64_t VideoContentRating.isExplicit.getter()
{
  return VideoContentRating.isExplicit.getter();
}

uint64_t type metadata accessor for VideoContentRating()
{
  return type metadata accessor for VideoContentRating();
}

uint64_t dispatch thunk of SocialProfileFilter.id.getter()
{
  return dispatch thunk of SocialProfileFilter.id.getter();
}

uint64_t TVShow.contentRating.getter()
{
  return TVShow.contentRating.getter();
}

uint64_t TVShow.url.getter()
{
  return TVShow.url.getter();
}

uint64_t TVShow.catalogID.getter()
{
  return TVShow.catalogID.getter();
}

uint64_t type metadata accessor for TVShow()
{
  return type metadata accessor for TVShow();
}

uint64_t type metadata accessor for Composer()
{
  return type metadata accessor for Composer();
}

uint64_t TVSeason.contentRating.getter()
{
  return TVSeason.contentRating.getter();
}

uint64_t TVSeason.url.getter()
{
  return TVSeason.url.getter();
}

uint64_t TVSeason.catalogID.getter()
{
  return TVSeason.catalogID.getter();
}

uint64_t type metadata accessor for TVSeason()
{
  return type metadata accessor for TVSeason();
}

uint64_t TVEpisode.contentRating.getter()
{
  return TVEpisode.contentRating.getter();
}

uint64_t TVEpisode.previewArtwork.getter()
{
  return TVEpisode.previewArtwork.getter();
}

uint64_t TVEpisode.url.getter()
{
  return TVEpisode.url.getter();
}

uint64_t TVEpisode.artwork.getter()
{
  return TVEpisode.artwork.getter();
}

uint64_t TVEpisode.catalogID.getter()
{
  return TVEpisode.catalogID.getter();
}

uint64_t type metadata accessor for TVEpisode()
{
  return type metadata accessor for TVEpisode();
}

uint64_t type metadata accessor for ArtworkImage.ReusePolicy()
{
  return type metadata accessor for ArtworkImage.ReusePolicy();
}

uint64_t ArtworkImage.artworkCropStyle(_:)()
{
  return ArtworkImage.artworkCropStyle(_:)();
}

uint64_t ArtworkImage.artworkPlaceholder<A>(_:)()
{
  return ArtworkImage.artworkPlaceholder<A>(_:)();
}

uint64_t ArtworkImage.artworkReusablePolicy(_:)()
{
  return ArtworkImage.artworkReusablePolicy(_:)();
}

uint64_t ArtworkImage.artworkIdealAspectRatio(_:contentMode:)()
{
  return ArtworkImage.artworkIdealAspectRatio(_:contentMode:)();
}

uint64_t ArtworkImage.init(_:width:height:)()
{
  return ArtworkImage.init(_:width:height:)();
}

uint64_t ArtworkImage.init(_:width:)()
{
  return ArtworkImage.init(_:width:)();
}

uint64_t ArtworkImage.init(_:height:)()
{
  return ArtworkImage.init(_:height:)();
}

{
  return ArtworkImage.init(_:height:)();
}

uint64_t ArtworkImage.init(_:)()
{
  return ArtworkImage.init(_:)();
}

uint64_t type metadata accessor for ArtworkImage()
{
  return type metadata accessor for ArtworkImage();
}

uint64_t StoreReviewGatingController.init(bag:)()
{
  return StoreReviewGatingController.init(bag:)();
}

uint64_t type metadata accessor for StoreReviewGatingController()
{
  return type metadata accessor for StoreReviewGatingController();
}

uint64_t OrderedSet.init(arrayLiteral:)()
{
  return OrderedSet.init(arrayLiteral:)();
}

uint64_t OrderedSet._find(_:)()
{
  return OrderedSet._find(_:)();
}

uint64_t OrderedSet._append(_:)()
{
  return OrderedSet._append(_:)();
}

uint64_t type metadata accessor for OrderedSet()
{
  return type metadata accessor for OrderedSet();
}

uint64_t _HashTable.UnsafeHandle._startIterator(bucket:)()
{
  return _HashTable.UnsafeHandle._startIterator(bucket:)();
}

uint64_t _HashTable.UnsafeHandle.subscript.setter()
{
  return _HashTable.UnsafeHandle.subscript.setter();
}

uint64_t _HashTable.BucketIterator.currentValue.getter()
{
  return _HashTable.BucketIterator.currentValue.getter();
}

uint64_t _HashTable.BucketIterator.currentValue.setter()
{
  return _HashTable.BucketIterator.currentValue.setter();
}

Swift::Void __swiftcall _HashTable.BucketIterator.advance()()
{
}

uint64_t static _HashTable.maximumCapacity(forScale:)()
{
  return static _HashTable.maximumCapacity(forScale:)();
}

uint64_t _HashTable.copy()()
{
  return _HashTable.copy()();
}

uint64_t static _HashTable.scale(forCapacity:)()
{
  return static _HashTable.scale(forCapacity:)();
}

uint64_t _HashTable.init(scale:reservedScale:)()
{
  return _HashTable.init(scale:reservedScale:)();
}

uint64_t UTType.identifier.getter()
{
  return UTType.identifier.getter();
}

uint64_t static UTType.png.getter()
{
  return static UTType.png.getter();
}

uint64_t static UTType.image.getter()
{
  return static UTType.image.getter();
}

uint64_t type metadata accessor for UTType()
{
  return type metadata accessor for UTType();
}

uint64_t dispatch thunk of LegacyModelObjectConvertible.init(_:)()
{
  return dispatch thunk of LegacyModelObjectConvertible.init(_:)();
}

uint64_t os_log(_:dso:log:_:_:)()
{
  return os_log(_:dso:log:_:_:)();
}

uint64_t os_signpost(_:dso:log:name:signpostID:_:_:)()
{
  return os_signpost(_:dso:log:name:signpostID:_:_:)();
}

uint64_t os_signpost(_:dso:log:name:signpostID:)()
{
  return os_signpost(_:dso:log:name:signpostID:)();
}

uint64_t OSSignpostID.init(log:object:)()
{
  return OSSignpostID.init(log:object:)();
}

uint64_t OSSignpostID.init(log:)()
{
  return OSSignpostID.init(log:)();
}

uint64_t OSSignpostID.rawValue.getter()
{
  return OSSignpostID.rawValue.getter();
}

uint64_t static OSSignpostID.exclusive.getter()
{
  return static OSSignpostID.exclusive.getter();
}

uint64_t type metadata accessor for OSSignpostID()
{
  return type metadata accessor for OSSignpostID();
}

uint64_t OSSignposter.init(logger:)()
{
  return OSSignposter.init(logger:)();
}

uint64_t OSSignposter.logHandle.getter()
{
  return OSSignposter.logHandle.getter();
}

uint64_t OSSignposter.init(subsystem:category:)()
{
  return OSSignposter.init(subsystem:category:)();
}

uint64_t type metadata accessor for OSSignposter()
{
  return type metadata accessor for OSSignposter();
}

uint64_t type metadata accessor for OSSignpostError()
{
  return type metadata accessor for OSSignpostError();
}

uint64_t OSSignpostIntervalState.signpostID.getter()
{
  return OSSignpostIntervalState.signpostID.getter();
}

uint64_t OSSignpostIntervalState.init(id:isOpen:)()
{
  return OSSignpostIntervalState.init(id:isOpen:)();
}

uint64_t type metadata accessor for OSSignpostIntervalState()
{
  return type metadata accessor for OSSignpostIntervalState();
}

uint64_t checkForErrorAndConsumeState(state:)()
{
  return checkForErrorAndConsumeState(state:)();
}

uint64_t Logger.logObject.getter()
{
  return Logger.logObject.getter();
}

uint64_t Logger.init(subsystem:category:)()
{
  return Logger.init(subsystem:category:)();
}

uint64_t type metadata accessor for Logger()
{
  return type metadata accessor for Logger();
}

uint64_t Logger.init(_:)()
{
  return Logger.init(_:)();
}

uint64_t MusicPlaybackIntentDescriptor.playbackIntent.getter()
{
  return MusicPlaybackIntentDescriptor.playbackIntent.getter();
}

uint64_t MusicPlaybackIntentDescriptor.init(stationSeed:)()
{
  return MusicPlaybackIntentDescriptor.init(stationSeed:)();
}

uint64_t type metadata accessor for MusicPlaybackIntentDescriptor()
{
  return type metadata accessor for MusicPlaybackIntentDescriptor();
}

uint64_t dispatch thunk of LanguageAwareString.attributedString.getter()
{
  return dispatch thunk of LanguageAwareString.attributedString.getter();
}

uint64_t static LanguageAwareString.keepStatisticsOnLanguageComponents.getter()
{
  return static LanguageAwareString.keepStatisticsOnLanguageComponents.getter();
}

uint64_t type metadata accessor for LanguageAwareString()
{
  return type metadata accessor for LanguageAwareString();
}

uint64_t LanguageAwareString.init(_:attributes:baseParagraphStyle:keepStatisticsOnLanguageComponents:)()
{
  return LanguageAwareString.init(_:attributes:baseParagraphStyle:keepStatisticsOnLanguageComponents:)();
}

uint64_t dispatch thunk of UIContentView.configuration.setter()
{
  return dispatch thunk of UIContentView.configuration.setter();
}

uint64_t static UIHoverEffect<>.lift.getter()
{
  return static UIHoverEffect<>.lift.getter();
}

uint64_t static UIHoverEffect<>.highlight.getter()
{
  return static UIHoverEffect<>.highlight.getter();
}

uint64_t static UIPointerShape.defaultCornerRadius.getter()
{
  return static UIPointerShape.defaultCornerRadius.getter();
}

uint64_t type metadata accessor for UIPointerShape()
{
  return type metadata accessor for UIPointerShape();
}

uint64_t type metadata accessor for UIPointerEffect()
{
  return type metadata accessor for UIPointerEffect();
}

uint64_t type metadata accessor for UIHoverLiftEffect()
{
  return type metadata accessor for UIHoverLiftEffect();
}

uint64_t type metadata accessor for UIHoverHighlightEffect()
{
  return type metadata accessor for UIHoverHighlightEffect();
}

uint64_t type metadata accessor for UITraitLayoutDirection()
{
  return type metadata accessor for UITraitLayoutDirection();
}

uint64_t type metadata accessor for UITraitActiveAppearance()
{
  return type metadata accessor for UITraitActiveAppearance();
}

uint64_t static UICellConfigurationState.DragState.== infix(_:_:)()
{
  return static UICellConfigurationState.DragState.== infix(_:_:)();
}

uint64_t type metadata accessor for UICellConfigurationState.DragState()
{
  return type metadata accessor for UICellConfigurationState.DragState();
}

uint64_t UICellConfigurationState.cellDragState.getter()
{
  return UICellConfigurationState.cellDragState.getter();
}

uint64_t static UICellConfigurationState._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static UICellConfigurationState._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t type metadata accessor for UICellConfigurationState()
{
  return type metadata accessor for UICellConfigurationState();
}

uint64_t UIViewConfigurationState.isDisabled.setter()
{
  return UIViewConfigurationState.isDisabled.setter();
}

uint64_t UIViewConfigurationState.isSelected.getter()
{
  return UIViewConfigurationState.isSelected.getter();
}

uint64_t UIViewConfigurationState.isSelected.setter()
{
  return UIViewConfigurationState.isSelected.setter();
}

uint64_t UIViewConfigurationState.isHighlighted.getter()
{
  return UIViewConfigurationState.isHighlighted.getter();
}

uint64_t UIViewConfigurationState.isHighlighted.setter()
{
  return UIViewConfigurationState.isHighlighted.setter();
}

uint64_t UIViewConfigurationState.init(traitCollection:)()
{
  return UIViewConfigurationState.init(traitCollection:)();
}

uint64_t UIViewConfigurationState.traitCollection.getter()
{
  return UIViewConfigurationState.traitCollection.getter();
}

uint64_t type metadata accessor for UIViewConfigurationState()
{
  return type metadata accessor for UIViewConfigurationState();
}

uint64_t type metadata accessor for UITraitUserInterfaceStyle()
{
  return type metadata accessor for UITraitUserInterfaceStyle();
}

uint64_t type metadata accessor for UITraitHorizontalSizeClass()
{
  return type metadata accessor for UITraitHorizontalSizeClass();
}

uint64_t NSDiffableDataSourceSnapshot.appendItems(_:toSection:)()
{
  return NSDiffableDataSourceSnapshot.appendItems(_:toSection:)();
}

Swift::Void __swiftcall NSDiffableDataSourceSnapshot.appendSections(_:)(Swift::OpaquePointer a1)
{
}

uint64_t NSDiffableDataSourceSnapshot.init()()
{
  return NSDiffableDataSourceSnapshot.init()();
}

uint64_t type metadata accessor for NSDiffableDataSourceSnapshot()
{
  return type metadata accessor for NSDiffableDataSourceSnapshot();
}

uint64_t type metadata accessor for UITraitAccessibilityContrast()
{
  return type metadata accessor for UITraitAccessibilityContrast();
}

uint64_t type metadata accessor for UITraitPreferredContentSizeCategory()
{
  return type metadata accessor for UITraitPreferredContentSizeCategory();
}

uint64_t static UIShape.rect(cornerRadius:cornerCurve:maskedCorners:)()
{
  return static UIShape.rect(cornerRadius:cornerCurve:maskedCorners:)();
}

uint64_t type metadata accessor for UIShape()
{
  return type metadata accessor for UIShape();
}

uint64_t errno.getter()
{
  return errno.getter();
}

uint64_t noErr.getter()
{
  return noErr.getter();
}

uint64_t S_IRUSR.getter()
{
  return S_IRUSR.getter();
}

uint64_t S_IWUSR.getter()
{
  return S_IWUSR.getter();
}

uint64_t S_IXUSR.getter()
{
  return S_IXUSR.getter();
}

uint64_t type metadata accessor for Publishers.Drop()
{
  return type metadata accessor for Publishers.Drop();
}

uint64_t Publishers.MergeMany.init(_:)()
{
  return Publishers.MergeMany.init(_:)();
}

uint64_t type metadata accessor for Publishers.ReceiveOn()
{
  return type metadata accessor for Publishers.ReceiveOn();
}

uint64_t AnyCancellable.store(in:)()
{
  return AnyCancellable.store(in:)();
}

Swift::Void __swiftcall AnyCancellable.cancel()()
{
}

uint64_t type metadata accessor for AnyCancellable()
{
  return type metadata accessor for AnyCancellable();
}

uint64_t AsyncPublisher.makeAsyncIterator()()
{
  return AsyncPublisher.makeAsyncIterator()();
}

uint64_t AsyncPublisher.init(_:)()
{
  return AsyncPublisher.init(_:)();
}

uint64_t ObservableObject<>.objectWillChange.getter()
{
  return ObservableObject<>.objectWillChange.getter();
}

uint64_t ConnectablePublisher.autoconnect()()
{
  return ConnectablePublisher.autoconnect()();
}

Swift::Void __swiftcall ObservableObjectPublisher.send()()
{
}

uint64_t Published.init(initialValue:)()
{
  return Published.init(initialValue:)();
}

uint64_t Published.projectedValue.getter()
{
  return Published.projectedValue.getter();
}

uint64_t Published.projectedValue.setter()
{
  return Published.projectedValue.setter();
}

uint64_t static Published.subscript.modify()
{
  return static Published.subscript.modify();
}

uint64_t static Published.subscript.getter()
{
  return static Published.subscript.getter();
}

uint64_t static Published.subscript.setter()
{
  return static Published.subscript.setter();
}

uint64_t type metadata accessor for Published.Publisher()
{
  return type metadata accessor for Published.Publisher();
}

uint64_t type metadata accessor for Published()
{
  return type metadata accessor for Published();
}

uint64_t Publisher.eraseToAnyPublisher()()
{
  return Publisher.eraseToAnyPublisher()();
}

uint64_t Publisher.map<A>(_:)()
{
  return Publisher.map<A>(_:)();
}

uint64_t Publisher.sink(receiveCompletion:receiveValue:)()
{
  return Publisher.sink(receiveCompletion:receiveValue:)();
}

uint64_t Publisher.receive<A>(on:options:)()
{
  return Publisher.receive<A>(on:options:)();
}

uint64_t Publisher.dropFirst(_:)()
{
  return Publisher.dropFirst(_:)();
}

uint64_t Publisher<>.removeDuplicates()()
{
  return Publisher<>.removeDuplicates()();
}

uint64_t Publisher<>.sink(receiveValue:)()
{
  return Publisher<>.sink(receiveValue:)();
}

uint64_t Animatable<>.animatableData.modify()
{
  return Animatable<>.animatableData.modify();
}

uint64_t AppStorage.init<A>(wrappedValue:_:store:)()
{
  return AppStorage.init<A>(wrappedValue:_:store:)();
}

uint64_t AppStorage.wrappedValue.getter()
{
  return AppStorage.wrappedValue.getter();
}

uint64_t AppStorage.projectedValue.getter()
{
  return AppStorage.projectedValue.getter();
}

uint64_t static ButtonRole.destructive.getter()
{
  return static ButtonRole.destructive.getter();
}

uint64_t static ButtonRole.cancel.getter()
{
  return static ButtonRole.cancel.getter();
}

uint64_t type metadata accessor for ButtonRole()
{
  return type metadata accessor for ButtonRole();
}

uint64_t EdgeInsets.init(_all:)()
{
  return EdgeInsets.init(_all:)();
}

uint64_t LabelGroup.init(content:)()
{
  return LabelGroup.init(content:)();
}

uint64_t LazyHStack.init(alignment:spacing:pinnedViews:content:)()
{
  return LazyHStack.init(alignment:spacing:pinnedViews:content:)();
}

uint64_t type metadata accessor for LazyHStack()
{
  return type metadata accessor for LazyHStack();
}

uint64_t type metadata accessor for Prominence()
{
  return type metadata accessor for Prominence();
}

uint64_t type metadata accessor for ScrollView()
{
  return type metadata accessor for ScrollView();
}

uint64_t ScrollView.init(_:showsIndicators:content:)()
{
  return ScrollView.init(_:showsIndicators:content:)();
}

uint64_t TapGesture.init(count:)()
{
  return TapGesture.init(count:)();
}

uint64_t type metadata accessor for TapGesture()
{
  return type metadata accessor for TapGesture();
}

uint64_t Transition.animation(_:)()
{
  return Transition.animation(_:)();
}

uint64_t static ColorScheme.== infix(_:_:)()
{
  return static ColorScheme.== infix(_:_:)();
}

uint64_t type metadata accessor for ColorScheme()
{
  return type metadata accessor for ColorScheme();
}

uint64_t static ContentMode.== infix(_:_:)()
{
  return static ContentMode.== infix(_:_:)();
}

uint64_t type metadata accessor for ControlSize()
{
  return type metadata accessor for ControlSize();
}

uint64_t DragGesture.init<A>(minimumDistance:coordinateSpace:)()
{
  return DragGesture.init<A>(minimumDistance:coordinateSpace:)();
}

uint64_t type metadata accessor for DragGesture()
{
  return type metadata accessor for DragGesture();
}

uint64_t type metadata accessor for Environment.Content()
{
  return type metadata accessor for Environment.Content();
}

uint64_t static GestureMask.all.getter()
{
  return static GestureMask.all.getter();
}

uint64_t StateObject.wrappedValue.getter()
{
  return StateObject.wrappedValue.getter();
}

uint64_t StateObject.projectedValue.getter()
{
  return StateObject.projectedValue.getter();
}

uint64_t StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)()
{
  return StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)();
}

uint64_t ToolbarItem<>.init(placement:content:)()
{
  return ToolbarItem<>.init(placement:content:)();
}

uint64_t type metadata accessor for ToolbarItem()
{
  return type metadata accessor for ToolbarItem();
}

uint64_t Transaction.disablesAnimations.setter()
{
  return Transaction.disablesAnimations.setter();
}

uint64_t type metadata accessor for _LayoutRoot()
{
  return type metadata accessor for _LayoutRoot();
}

uint64_t _LayoutRoot.init(_:)()
{
  return _LayoutRoot.init(_:)();
}

uint64_t GestureState.init(wrappedValue:)()
{
  return GestureState.init(wrappedValue:)();
}

uint64_t GestureState.wrappedValue.getter()
{
  return GestureState.wrappedValue.getter();
}

uint64_t GestureState.projectedValue.getter()
{
  return GestureState.projectedValue.getter();
}

uint64_t ProgressView<>.init<>()()
{
  return ProgressView<>.init<>()();
}

uint64_t ScaledMetric.init(wrappedValue:)()
{
  return ScaledMetric.init(wrappedValue:)();
}

uint64_t ScaledMetric.wrappedValue.getter()
{
  return ScaledMetric.wrappedValue.getter();
}

uint64_t type metadata accessor for ScaledMetric()
{
  return type metadata accessor for ScaledMetric();
}

uint64_t static ViewModifier._viewListCount(inputs:body:)()
{
  return static ViewModifier._viewListCount(inputs:body:)();
}

uint64_t ViewThatFits.init(in:content:)()
{
  return ViewThatFits.init(in:content:)();
}

uint64_t type metadata accessor for ViewThatFits()
{
  return type metadata accessor for ViewThatFits();
}

uint64_t _FrameLayout.init(width:height:alignment:)()
{
  return _FrameLayout.init(width:height:alignment:)();
}

uint64_t AnyShapeStyle.init<A>(_:)()
{
  return AnyShapeStyle.init<A>(_:)();
}

uint64_t static AnyTransition.asymmetric(insertion:removal:)()
{
  return static AnyTransition.asymmetric(insertion:removal:)();
}

uint64_t static AnyTransition.scale(scale:anchor:)()
{
  return static AnyTransition.scale(scale:anchor:)();
}

uint64_t static AnyTransition.opacity.getter()
{
  return static AnyTransition.opacity.getter();
}

uint64_t AnyTransition.combined(with:)()
{
  return AnyTransition.combined(with:)();
}

uint64_t AnyTransition.animation(_:)()
{
  return AnyTransition.animation(_:)();
}

uint64_t AnyTransition.init<A>(_:)()
{
  return AnyTransition.init<A>(_:)();
}

Swift::Void __swiftcall DismissAction.callAsFunction()()
{
}

uint64_t type metadata accessor for DismissAction()
{
  return type metadata accessor for DismissAction();
}

uint64_t GeometryProxy.size.getter()
{
  return GeometryProxy.size.getter();
}

uint64_t type metadata accessor for GeometryProxy()
{
  return type metadata accessor for GeometryProxy();
}

uint64_t LayoutSubview.dimensions(in:)()
{
  return LayoutSubview.dimensions(in:)();
}

uint64_t LayoutSubview.sizeThatFits(_:)()
{
  return LayoutSubview.sizeThatFits(_:)();
}

uint64_t LayoutSubview.place(at:anchor:proposal:)()
{
  return LayoutSubview.place(at:anchor:proposal:)();
}

uint64_t type metadata accessor for LayoutSubview()
{
  return type metadata accessor for LayoutSubview();
}

uint64_t static OpenURLAction.Result.handled.getter()
{
  return static OpenURLAction.Result.handled.getter();
}

uint64_t OpenURLAction.init(handler:)()
{
  return OpenURLAction.init(handler:)();
}

uint64_t type metadata accessor for OpenURLAction()
{
  return type metadata accessor for OpenURLAction();
}

uint64_t type metadata accessor for _TaskModifier()
{
  return type metadata accessor for _TaskModifier();
}

uint64_t type metadata accessor for _VariadicView.Tree()
{
  return type metadata accessor for _VariadicView.Tree();
}

uint64_t _VariadicView.Tree.init(_:content:)()
{
  return _VariadicView.Tree.init(_:content:)();
}

uint64_t withAnimation<A>(_:_:)()
{
  return withAnimation<A>(_:_:)();
}

uint64_t GeometryReader.init(content:)()
{
  return GeometryReader.init(content:)();
}

uint64_t type metadata accessor for GeometryReader()
{
  return type metadata accessor for GeometryReader();
}

uint64_t type metadata accessor for LayoutSubviews()
{
  return type metadata accessor for LayoutSubviews();
}

uint64_t LinearGradient.init(gradient:startPoint:endPoint:)()
{
  return LinearGradient.init(gradient:startPoint:endPoint:)();
}

uint64_t type metadata accessor for NavigationPath()
{
  return type metadata accessor for NavigationPath();
}

uint64_t ObservedObject.init(wrappedValue:)()
{
  return ObservedObject.init(wrappedValue:)();
}

uint64_t ObservedObject.projectedValue.getter()
{
  return ObservedObject.projectedValue.getter();
}

uint64_t ObservedObject.Wrapper.subscript.getter()
{
  return ObservedObject.Wrapper.subscript.getter();
}

uint64_t ScrollGeometry.contentSize.getter()
{
  return ScrollGeometry.contentSize.getter();
}

uint64_t ScrollGeometry.visibleRect.getter()
{
  return ScrollGeometry.visibleRect.getter();
}

uint64_t ScrollGeometry.contentInsets.getter()
{
  return ScrollGeometry.contentInsets.getter();
}

uint64_t ScrollGeometry.contentOffset.getter()
{
  return ScrollGeometry.contentOffset.getter();
}

uint64_t type metadata accessor for ScrollGeometry()
{
  return type metadata accessor for ScrollGeometry();
}

uint64_t TintShapeStyle.init()()
{
  return TintShapeStyle.init()();
}

uint64_t type metadata accessor for TintShapeStyle()
{
  return type metadata accessor for TintShapeStyle();
}

uint64_t ViewDimensions.width.getter()
{
  return ViewDimensions.width.getter();
}

uint64_t type metadata accessor for ViewDimensions()
{
  return type metadata accessor for ViewDimensions();
}

uint64_t ViewDimensions.subscript.getter()
{
  return ViewDimensions.subscript.getter();
}

uint64_t _UIHostingView.__allocating_init(rootView:)()
{
  return _UIHostingView.__allocating_init(rootView:)();
}

uint64_t dispatch thunk of _UIHostingView.__allocating_init(rootView:)()
{
  return dispatch thunk of _UIHostingView.__allocating_init(rootView:)();
}

uint64_t dispatch thunk of _UIHostingView.rootView.setter()
{
  return dispatch thunk of _UIHostingView.rootView.setter();
}

uint64_t type metadata accessor for _UIHostingView()
{
  return type metadata accessor for _UIHostingView();
}

uint64_t ButtonMenuStyle.init()()
{
  return ButtonMenuStyle.init()();
}

uint64_t type metadata accessor for ButtonMenuStyle()
{
  return type metadata accessor for ButtonMenuStyle();
}

uint64_t DynamicTypeSize.isAccessibilitySize.getter()
{
  return DynamicTypeSize.isAccessibilitySize.getter();
}

uint64_t type metadata accessor for DynamicTypeSize()
{
  return type metadata accessor for DynamicTypeSize();
}

uint64_t static LayoutDirection.== infix(_:_:)()
{
  return static LayoutDirection.== infix(_:_:)();
}

uint64_t type metadata accessor for LayoutDirection()
{
  return type metadata accessor for LayoutDirection();
}

uint64_t ModifiedContent.init(content:modifier:)()
{
  return ModifiedContent.init(content:modifier:)();
}

uint64_t type metadata accessor for ModifiedContent()
{
  return type metadata accessor for ModifiedContent();
}

uint64_t NavigationStack.init<>(root:)()
{
  return NavigationStack.init<>(root:)();
}

uint64_t type metadata accessor for NavigationStack()
{
  return type metadata accessor for NavigationStack();
}

uint64_t static SafeAreaRegions.all.getter()
{
  return static SafeAreaRegions.all.getter();
}

uint64_t type metadata accessor for ScaleTransition()
{
  return type metadata accessor for ScaleTransition();
}

uint64_t ScaleTransition.init(_:anchor:)()
{
  return ScaleTransition.init(_:anchor:)();
}

uint64_t ScrollViewProxy.scrollTo(rect:anchor:)()
{
  return ScrollViewProxy.scrollTo(rect:anchor:)();
}

uint64_t type metadata accessor for ScrollViewProxy()
{
  return type metadata accessor for ScrollViewProxy();
}

uint64_t PlainButtonStyle.init()()
{
  return PlainButtonStyle.init()();
}

uint64_t type metadata accessor for PlainButtonStyle()
{
  return type metadata accessor for PlainButtonStyle();
}

uint64_t static ProposedViewSize.zero.getter()
{
  return static ProposedViewSize.zero.getter();
}

uint64_t RoundedRectangle._Inset.path(in:)()
{
  return RoundedRectangle._Inset.path(in:)();
}

uint64_t type metadata accessor for RoundedRectangle._Inset()
{
  return type metadata accessor for RoundedRectangle._Inset();
}

uint64_t type metadata accessor for RoundedRectangle()
{
  return type metadata accessor for RoundedRectangle();
}

uint64_t ScrollViewReader.init(content:)()
{
  return ScrollViewReader.init(content:)();
}

uint64_t type metadata accessor for ScrollViewReader()
{
  return type metadata accessor for ScrollViewReader();
}

uint64_t type metadata accessor for _BlendModeEffect()
{
  return type metadata accessor for _BlendModeEffect();
}

uint64_t _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)()
{
  return _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
}

uint64_t type metadata accessor for _OverlayModifier()
{
  return type metadata accessor for _OverlayModifier();
}

uint64_t static ButtonBorderShape.circle.getter()
{
  return static ButtonBorderShape.circle.getter();
}

uint64_t type metadata accessor for ButtonBorderShape()
{
  return type metadata accessor for ButtonBorderShape();
}

uint64_t static ContentShapeKinds.hoverEffect.getter()
{
  return static ContentShapeKinds.hoverEffect.getter();
}

uint64_t static ContentShapeKinds.interaction.getter()
{
  return static ContentShapeKinds.interaction.getter();
}

uint64_t type metadata accessor for ContentShapeKinds()
{
  return type metadata accessor for ContentShapeKinds();
}

uint64_t static ContentTransition.opacity.getter()
{
  return static ContentTransition.opacity.getter();
}

uint64_t type metadata accessor for ContentTransition()
{
  return type metadata accessor for ContentTransition();
}

uint64_t static CustomHoverEffect<>.automatic.getter()
{
  return static CustomHoverEffect<>.automatic.getter();
}

uint64_t static CustomHoverEffect<>.highlight.getter()
{
  return static CustomHoverEffect<>.highlight.getter();
}

uint64_t EnvironmentObject.error()()
{
  return EnvironmentObject.error()();
}

uint64_t EnvironmentObject.init()()
{
  return EnvironmentObject.init()();
}

uint64_t EnvironmentValues.imageScale.getter()
{
  return EnvironmentValues.imageScale.getter();
}

uint64_t EnvironmentValues.imageScale.setter()
{
  return EnvironmentValues.imageScale.setter();
}

uint64_t EnvironmentValues.colorScheme.getter()
{
  return EnvironmentValues.colorScheme.getter();
}

uint64_t EnvironmentValues.colorScheme.setter()
{
  return EnvironmentValues.colorScheme.setter();
}

uint64_t EnvironmentValues.controlSize.getter()
{
  return EnvironmentValues.controlSize.getter();
}

uint64_t EnvironmentValues.controlSize.setter()
{
  return EnvironmentValues.controlSize.setter();
}

uint64_t EnvironmentValues.dynamicTypeSize.getter()
{
  return EnvironmentValues.dynamicTypeSize.getter();
}

uint64_t EnvironmentValues.foregroundColor.getter()
{
  return EnvironmentValues.foregroundColor.getter();
}

uint64_t EnvironmentValues.foregroundColor.setter()
{
  return EnvironmentValues.foregroundColor.setter();
}

uint64_t EnvironmentValues.layoutDirection.getter()
{
  return EnvironmentValues.layoutDirection.getter();
}

uint64_t EnvironmentValues.layoutDirection.setter()
{
  return EnvironmentValues.layoutDirection.setter();
}

uint64_t EnvironmentValues.contentTransition.getter()
{
  return EnvironmentValues.contentTransition.getter();
}

uint64_t EnvironmentValues.contentTransition.setter()
{
  return EnvironmentValues.contentTransition.setter();
}

uint64_t EnvironmentValues._buttonBorderShape.getter()
{
  return EnvironmentValues._buttonBorderShape.getter();
}

uint64_t EnvironmentValues.colorSchemeContrast.getter()
{
  return EnvironmentValues.colorSchemeContrast.getter();
}

uint64_t EnvironmentValues.displayCornerRadius.getter()
{
  return EnvironmentValues.displayCornerRadius.getter();
}

uint64_t EnvironmentValues.displayCornerRadius.setter()
{
  return EnvironmentValues.displayCornerRadius.setter();
}

uint64_t EnvironmentValues.horizontalSizeClass.getter()
{
  return EnvironmentValues.horizontalSizeClass.getter();
}

uint64_t EnvironmentValues.horizontalSizeClass.setter()
{
  return EnvironmentValues.horizontalSizeClass.setter();
}

uint64_t EnvironmentValues.symbolRenderingMode.getter()
{
  return EnvironmentValues.symbolRenderingMode.getter();
}

uint64_t EnvironmentValues.symbolRenderingMode.setter()
{
  return EnvironmentValues.symbolRenderingMode.setter();
}

uint64_t EnvironmentValues.multilineTextAlignment.getter()
{
  return EnvironmentValues.multilineTextAlignment.getter();
}

uint64_t EnvironmentValues.multilineTextAlignment.setter()
{
  return EnvironmentValues.multilineTextAlignment.setter();
}

uint64_t EnvironmentValues.defaultMinListRowHeight.getter()
{
  return EnvironmentValues.defaultMinListRowHeight.getter();
}

uint64_t EnvironmentValues.defaultMinListRowHeight.setter()
{
  return EnvironmentValues.defaultMinListRowHeight.setter();
}

uint64_t EnvironmentValues.effectiveForegroundColor.getter()
{
  return EnvironmentValues.effectiveForegroundColor.getter();
}

uint64_t EnvironmentValues.accessibilityShowButtonShapes.getter()
{
  return EnvironmentValues.accessibilityShowButtonShapes.getter();
}

uint64_t EnvironmentValues.accessibilityReduceTransparency.getter()
{
  return EnvironmentValues.accessibilityReduceTransparency.getter();
}

uint64_t EnvironmentValues.font.getter()
{
  return EnvironmentValues.font.getter();
}

uint64_t EnvironmentValues.font.setter()
{
  return EnvironmentValues.font.setter();
}

uint64_t EnvironmentValues.tint.getter()
{
  return EnvironmentValues.tint.getter();
}

uint64_t EnvironmentValues.tint.setter()
{
  return EnvironmentValues.tint.setter();
}

uint64_t EnvironmentValues.dismiss.getter()
{
  return EnvironmentValues.dismiss.getter();
}

uint64_t EnvironmentValues.openURL.getter()
{
  return EnvironmentValues.openURL.getter();
}

uint64_t EnvironmentValues.textCase.getter()
{
  return EnvironmentValues.textCase.getter();
}

uint64_t EnvironmentValues.textCase.setter()
{
  return EnvironmentValues.textCase.setter();
}

uint64_t EnvironmentValues.isEnabled.getter()
{
  return EnvironmentValues.isEnabled.getter();
}

uint64_t EnvironmentValues.isEnabled.setter()
{
  return EnvironmentValues.isEnabled.setter();
}

uint64_t EnvironmentValues.lineLimit.getter()
{
  return EnvironmentValues.lineLimit.getter();
}

uint64_t EnvironmentValues.lineLimit.setter()
{
  return EnvironmentValues.lineLimit.setter();
}

uint64_t EnvironmentValues.tintColor.getter()
{
  return EnvironmentValues.tintColor.getter();
}

uint64_t EnvironmentValues.tintColor.setter()
{
  return EnvironmentValues.tintColor.setter();
}

uint64_t EnvironmentValues.init()()
{
  return EnvironmentValues.init()();
}

uint64_t type metadata accessor for EnvironmentValues()
{
  return type metadata accessor for EnvironmentValues();
}

uint64_t EnvironmentValues.subscript.getter()
{
  return EnvironmentValues.subscript.getter();
}

uint64_t EnvironmentValues.subscript.setter()
{
  return EnvironmentValues.subscript.setter();
}

uint64_t type metadata accessor for NavigationBarItem.TitleDisplayMode()
{
  return type metadata accessor for NavigationBarItem.TitleDisplayMode();
}

uint64_t OpacityTransition.init()()
{
  return OpacityTransition.init()();
}

uint64_t type metadata accessor for OpacityTransition()
{
  return type metadata accessor for OpacityTransition();
}

uint64_t static VerticalAlignment.lastTextBaseline.getter()
{
  return static VerticalAlignment.lastTextBaseline.getter();
}

uint64_t static VerticalAlignment.top.getter()
{
  return static VerticalAlignment.top.getter();
}

uint64_t static VerticalAlignment.bottom.getter()
{
  return static VerticalAlignment.bottom.getter();
}

uint64_t static VerticalAlignment.center.getter()
{
  return static VerticalAlignment.center.getter();
}

uint64_t LocalizedStringKey.StringInterpolation.appendInterpolation(_:)()
{
  return LocalizedStringKey.StringInterpolation.appendInterpolation(_:)();
}

Swift::Void __swiftcall LocalizedStringKey.StringInterpolation.appendInterpolation(_:)(Swift::String a1)
{
}

Swift::Void __swiftcall LocalizedStringKey.StringInterpolation.appendLiteral(_:)(Swift::String a1)
{
}

uint64_t LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)()
{
  return LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)();
}

uint64_t type metadata accessor for LocalizedStringKey.StringInterpolation()
{
  return type metadata accessor for LocalizedStringKey.StringInterpolation();
}

uint64_t LocalizedStringKey.init(stringLiteral:)()
{
  return LocalizedStringKey.init(stringLiteral:)();
}

uint64_t LocalizedStringKey.init(stringInterpolation:)()
{
  return LocalizedStringKey.init(stringInterpolation:)();
}

uint64_t LocalizedStringKey.init(_:)()
{
  return LocalizedStringKey.init(_:)();
}

uint64_t PresentationSizing.proposedSize(for:context:)()
{
  return PresentationSizing.proposedSize(for:context:)();
}

uint64_t static RoundedCornerStyle.== infix(_:_:)()
{
  return static RoundedCornerStyle.== infix(_:_:)();
}

uint64_t type metadata accessor for RoundedCornerStyle()
{
  return type metadata accessor for RoundedCornerStyle();
}

uint64_t static AccessibilityTraits.isButton.getter()
{
  return static AccessibilityTraits.isButton.getter();
}

uint64_t static AccessibilityTraits.isHeader.getter()
{
  return static AccessibilityTraits.isHeader.getter();
}

uint64_t type metadata accessor for AccessibilityTraits()
{
  return type metadata accessor for AccessibilityTraits();
}

uint64_t type metadata accessor for ColorSchemeContrast()
{
  return type metadata accessor for ColorSchemeContrast();
}

uint64_t static HorizontalAlignment.listRowSeparatorLeading.getter()
{
  return static HorizontalAlignment.listRowSeparatorLeading.getter();
}

uint64_t static HorizontalAlignment.center.getter()
{
  return static HorizontalAlignment.center.getter();
}

uint64_t static HorizontalAlignment.leading.getter()
{
  return static HorizontalAlignment.leading.getter();
}

uint64_t static HorizontalAlignment.trailing.getter()
{
  return static HorizontalAlignment.trailing.getter();
}

uint64_t static SymbolRenderingMode.hierarchical.getter()
{
  return static SymbolRenderingMode.hierarchical.getter();
}

uint64_t static SymbolRenderingMode.palette.getter()
{
  return static SymbolRenderingMode.palette.getter();
}

uint64_t type metadata accessor for SymbolRenderingMode()
{
  return type metadata accessor for SymbolRenderingMode();
}

uint64_t type metadata accessor for TupleToolbarContent()
{
  return type metadata accessor for TupleToolbarContent();
}

uint64_t TupleToolbarContent.init(_:)()
{
  return TupleToolbarContent.init(_:)();
}

uint64_t dispatch thunk of UIHostingController.sizeThatFits(in:)()
{
  return dispatch thunk of UIHostingController.sizeThatFits(in:)();
}

uint64_t dispatch thunk of UIHostingController.sizingOptions.setter()
{
  return dispatch thunk of UIHostingController.sizingOptions.setter();
}

uint64_t UIHostingController.safeAreaRegions.setter()
{
  return UIHostingController.safeAreaRegions.setter();
}

uint64_t UIHostingController.__allocating_init(rootView:)()
{
  return UIHostingController.__allocating_init(rootView:)();
}

uint64_t UIHostingController.init(rootView:)()
{
  return UIHostingController.init(rootView:)();
}

uint64_t dispatch thunk of UIHostingController.rootView.modify()
{
  return dispatch thunk of UIHostingController.rootView.modify();
}

uint64_t type metadata accessor for UIHostingController()
{
  return type metadata accessor for UIHostingController();
}

uint64_t UIViewRepresentable.sizeThatFits(_:uiView:context:)()
{
  return UIViewRepresentable.sizeThatFits(_:uiView:context:)();
}

uint64_t UIViewRepresentable.body.getter()
{
  return UIViewRepresentable.body.getter();
}

uint64_t type metadata accessor for _ConditionalContent.Storage()
{
  return type metadata accessor for _ConditionalContent.Storage();
}

uint64_t _ConditionalContent<>.init(storage:)()
{
  return _ConditionalContent<>.init(storage:)();
}

uint64_t type metadata accessor for _ConditionalContent()
{
  return type metadata accessor for _ConditionalContent();
}

uint64_t type metadata accessor for AutomaticHoverEffect()
{
  return type metadata accessor for AutomaticHoverEffect();
}

uint64_t type metadata accessor for HighlightHoverEffect()
{
  return type metadata accessor for HighlightHoverEffect();
}

uint64_t type metadata accessor for LocalCoordinateSpace()
{
  return type metadata accessor for LocalCoordinateSpace();
}

uint64_t static ScrollBounceBehavior.basedOnSize.getter()
{
  return static ScrollBounceBehavior.basedOnSize.getter();
}

uint64_t type metadata accessor for ScrollBounceBehavior()
{
  return type metadata accessor for ScrollBounceBehavior();
}

uint64_t static SearchFieldPlacement.navigationBarDrawer.getter()
{
  return static SearchFieldPlacement.navigationBarDrawer.getter();
}

uint64_t type metadata accessor for SearchFieldPlacement()
{
  return type metadata accessor for SearchFieldPlacement();
}

uint64_t static ToolbarItemPlacement.topBarTrailing.getter()
{
  return static ToolbarItemPlacement.topBarTrailing.getter();
}

uint64_t static ToolbarItemPlacement.automatic.getter()
{
  return static ToolbarItemPlacement.automatic.getter();
}

uint64_t static ToolbarItemPlacement.principal.getter()
{
  return static ToolbarItemPlacement.principal.getter();
}

uint64_t type metadata accessor for ToolbarItemPlacement()
{
  return type metadata accessor for ToolbarItemPlacement();
}

uint64_t BorderlessButtonStyle.init()()
{
  return BorderlessButtonStyle.init()();
}

uint64_t type metadata accessor for BorderlessButtonStyle()
{
  return type metadata accessor for BorderlessButtonStyle();
}

uint64_t InsetGroupedListStyle.init()()
{
  return InsetGroupedListStyle.init()();
}

uint64_t type metadata accessor for InsetGroupedListStyle()
{
  return type metadata accessor for InsetGroupedListStyle();
}

uint64_t type metadata accessor for PinnedScrollableViews()
{
  return type metadata accessor for PinnedScrollableViews();
}

uint64_t static ToolbarContentBuilder.buildBlock<A>(_:)()
{
  return static ToolbarContentBuilder.buildBlock<A>(_:)();
}

uint64_t type metadata accessor for _ViewModifier_Content()
{
  return type metadata accessor for _ViewModifier_Content();
}

uint64_t static ContentUnavailableView<>.search.getter()
{
  return static ContentUnavailableView<>.search.getter();
}

uint64_t static HierarchicalShapeStyle.quaternary.getter()
{
  return static HierarchicalShapeStyle.quaternary.getter();
}

uint64_t static HierarchicalShapeStyle.primary.getter()
{
  return static HierarchicalShapeStyle.primary.getter();
}

uint64_t static HierarchicalShapeStyle.quinary.getter()
{
  return static HierarchicalShapeStyle.quinary.getter();
}

uint64_t static HierarchicalShapeStyle.tertiary.getter()
{
  return static HierarchicalShapeStyle.tertiary.getter();
}

uint64_t static HierarchicalShapeStyle.secondary.getter()
{
  return static HierarchicalShapeStyle.secondary.getter();
}

uint64_t TitleAndIconLabelStyle.init()()
{
  return TitleAndIconLabelStyle.init()();
}

uint64_t type metadata accessor for TitleAndIconLabelStyle()
{
  return type metadata accessor for TitleAndIconLabelStyle();
}

uint64_t type metadata accessor for UserInterfaceSizeClass()
{
  return type metadata accessor for UserInterfaceSizeClass();
}

uint64_t static CoordinateSpaceProtocol<>.local.getter()
{
  return static CoordinateSpaceProtocol<>.local.getter();
}

uint64_t SafeAreaPaddingModifier.init(edges:insets:)()
{
  return SafeAreaPaddingModifier.init(edges:insets:)();
}

uint64_t type metadata accessor for SafeAreaPaddingModifier()
{
  return type metadata accessor for SafeAreaPaddingModifier();
}

uint64_t type metadata accessor for _ForegroundStyleModifier()
{
  return type metadata accessor for _ForegroundStyleModifier();
}

uint64_t CircularProgressViewStyle.init()()
{
  return CircularProgressViewStyle.init()();
}

uint64_t type metadata accessor for CircularProgressViewStyle()
{
  return type metadata accessor for CircularProgressViewStyle();
}

uint64_t static ScrollIndicatorVisibility.never.getter()
{
  return static ScrollIndicatorVisibility.never.getter();
}

uint64_t static ScrollIndicatorVisibility.hidden.getter()
{
  return static ScrollIndicatorVisibility.hidden.getter();
}

uint64_t type metadata accessor for ScrollIndicatorVisibility()
{
  return type metadata accessor for ScrollIndicatorVisibility();
}

uint64_t static AccessibilityChildBehavior.combine.getter()
{
  return static AccessibilityChildBehavior.combine.getter();
}

uint64_t type metadata accessor for AccessibilityChildBehavior()
{
  return type metadata accessor for AccessibilityChildBehavior();
}

uint64_t BorderedProminentButtonStyle.init()()
{
  return BorderedProminentButtonStyle.init()();
}

uint64_t type metadata accessor for BorderedProminentButtonStyle()
{
  return type metadata accessor for BorderedProminentButtonStyle();
}

uint64_t UIViewControllerRepresentable.sizeThatFits(_:uiViewController:context:)()
{
  return UIViewControllerRepresentable.sizeThatFits(_:uiViewController:context:)();
}

uint64_t UIViewControllerRepresentable.body.getter()
{
  return UIViewControllerRepresentable.body.getter();
}

uint64_t type metadata accessor for _EnvironmentKeyWritingModifier()
{
  return type metadata accessor for _EnvironmentKeyWritingModifier();
}

uint64_t type metadata accessor for AccessibilityAttachmentModifier()
{
  return type metadata accessor for AccessibilityAttachmentModifier();
}

uint64_t static ViewAlignedScrollTargetBehavior.LimitBehavior.automatic.getter()
{
  return static ViewAlignedScrollTargetBehavior.LimitBehavior.automatic.getter();
}

uint64_t type metadata accessor for ViewAlignedScrollTargetBehavior.LimitBehavior()
{
  return type metadata accessor for ViewAlignedScrollTargetBehavior.LimitBehavior();
}

uint64_t ViewAlignedScrollTargetBehavior.init(limitBehavior:)()
{
  return ViewAlignedScrollTargetBehavior.init(limitBehavior:)();
}

uint64_t type metadata accessor for ViewAlignedScrollTargetBehavior()
{
  return type metadata accessor for ViewAlignedScrollTargetBehavior();
}

uint64_t static UIHostingControllerSizingOptions.intrinsicContentSize.getter()
{
  return static UIHostingControllerSizingOptions.intrinsicContentSize.getter();
}

uint64_t type metadata accessor for UIHostingControllerSizingOptions()
{
  return type metadata accessor for UIHostingControllerSizingOptions();
}

uint64_t UIViewControllerRepresentableContext.coordinator.getter()
{
  return UIViewControllerRepresentableContext.coordinator.getter();
}

uint64_t static Log.runtimeIssuesLog.getter()
{
  return static Log.runtimeIssuesLog.getter();
}

uint64_t static Axis.Set.horizontal.getter()
{
  return static Axis.Set.horizontal.getter();
}

uint64_t Axis.Set.init(rawValue:)()
{
  return Axis.Set.init(rawValue:)();
}

uint64_t static Axis.Set.vertical.getter()
{
  return static Axis.Set.vertical.getter();
}

uint64_t Axis.rawValue.getter()
{
  return Axis.rawValue.getter();
}

uint64_t static Edge.Set.horizontal.getter()
{
  return static Edge.Set.horizontal.getter();
}

uint64_t static Edge.Set.all.getter()
{
  return static Edge.Set.all.getter();
}

uint64_t static Edge.Set.top.getter()
{
  return static Edge.Set.top.getter();
}

uint64_t static Edge.Set.bottom.getter()
{
  return static Edge.Set.bottom.getter();
}

uint64_t static Edge.Set.leading.getter()
{
  return static Edge.Set.leading.getter();
}

uint64_t Edge.Set.init(rawValue:)()
{
  return Edge.Set.init(rawValue:)();
}

uint64_t static Edge.Set.trailing.getter()
{
  return static Edge.Set.trailing.getter();
}

uint64_t static Edge.Set.vertical.getter()
{
  return static Edge.Set.vertical.getter();
}

uint64_t Edge.Set.init(_:)()
{
  return Edge.Set.init(_:)();
}

uint64_t Edge.rawValue.getter()
{
  return Edge.rawValue.getter();
}

uint64_t static Font.largeTitle.getter()
{
  return static Font.largeTitle.getter();
}

uint64_t static Font.subheadline.getter()
{
  return static Font.subheadline.getter();
}

uint64_t static Font.body.getter()
{
  return static Font.body.getter();
}

uint64_t Font.bold()()
{
  return Font.bold()();
}

uint64_t type metadata accessor for Font.Design()
{
  return type metadata accessor for Font.Design();
}

uint64_t static Font.Weight.bold.getter()
{
  return static Font.Weight.bold.getter();
}

uint64_t static Font.Weight.light.getter()
{
  return static Font.Weight.light.getter();
}

uint64_t static Font.Weight.regular.getter()
{
  return static Font.Weight.regular.getter();
}

uint64_t static Font.Weight.semibold.getter()
{
  return static Font.Weight.semibold.getter();
}

uint64_t static Font.system(size:weight:design:)()
{
  return static Font.system(size:weight:design:)();
}

uint64_t static Font.system(_:design:weight:)()
{
  return static Font.system(_:design:weight:)();
}

uint64_t static Font.title2.getter()
{
  return static Font.title2.getter();
}

uint64_t static Font.title3.getter()
{
  return static Font.title3.getter();
}

uint64_t Font.weight(_:)()
{
  return Font.weight(_:)();
}

uint64_t type metadata accessor for Font.Leading()
{
  return type metadata accessor for Font.Leading();
}

uint64_t static Font.callout.getter()
{
  return static Font.callout.getter();
}

uint64_t static Font.caption.getter()
{
  return static Font.caption.getter();
}

uint64_t Font.leading(_:)()
{
  return Font.leading(_:)();
}

uint64_t static Font.caption2.getter()
{
  return static Font.caption2.getter();
}

uint64_t static Font.footnote.getter()
{
  return static Font.footnote.getter();
}

uint64_t static Font.headline.getter()
{
  return static Font.headline.getter();
}

uint64_t type metadata accessor for Font.TextStyle()
{
  return type metadata accessor for Font.TextStyle();
}

uint64_t List<>.init(content:)()
{
  return List<>.init(content:)();
}

uint64_t Menu.init(onPresentationChanged:content:label:)()
{
  return Menu.init(onPresentationChanged:content:label:)();
}

uint64_t Menu.init(content:label:)()
{
  return Menu.init(content:label:)();
}

uint64_t type metadata accessor for Menu()
{
  return type metadata accessor for Menu();
}

uint64_t Path.init(roundedRect:cornerSize:style:)()
{
  return Path.init(roundedRect:cornerSize:style:)();
}

uint64_t Path.init(_:)()
{
  return Path.init(_:)();
}

uint64_t Text.fontWeight(_:)()
{
  return Text.fontWeight(_:)();
}

uint64_t Text.foregroundStyle<A>(_:)()
{
  return Text.foregroundStyle<A>(_:)();
}

uint64_t Text.accessibilityLabel<A>(_:)()
{
  return Text.accessibilityLabel<A>(_:)();
}

uint64_t static Text.+ infix(_:_:)()
{
  return static Text.+ infix(_:_:)();
}

uint64_t type metadata accessor for Text.Case()
{
  return type metadata accessor for Text.Case();
}

uint64_t Text.bold()()
{
  return Text.bold()();
}

uint64_t Text.font(_:)()
{
  return Text.font(_:)();
}

uint64_t static Text.Suffix.alwaysVisible(_:)()
{
  return static Text.Suffix.alwaysVisible(_:)();
}

uint64_t type metadata accessor for Text.Suffix()
{
  return type metadata accessor for Text.Suffix();
}

uint64_t static Text.LineStyle.Pattern.solid.getter()
{
  return static Text.LineStyle.Pattern.solid.getter();
}

uint64_t type metadata accessor for Text.LineStyle.Pattern()
{
  return type metadata accessor for Text.LineStyle.Pattern();
}

uint64_t Text.init(_:tableName:bundle:comment:)()
{
  return Text.init(_:tableName:bundle:comment:)();
}

uint64_t Text.init(_:)()
{
  return Text.init(_:)();
}

{
  return Text.init(_:)();
}

uint64_t Text.init<A>(_:)()
{
  return Text.init<A>(_:)();
}

uint64_t View.artworkCaching(id:limit:)()
{
  return View.artworkCaching(id:limit:)();
}

uint64_t View.progressViewStyle<A>(_:)()
{
  return View.progressViewStyle<A>(_:)();
}

uint64_t View.fontWeight(_:)()
{
  return View.fontWeight(_:)();
}

uint64_t View.labelStyle<A>(_:)()
{
  return View.labelStyle<A>(_:)();
}

uint64_t View.searchable(text:placement:prompt:)()
{
  return View.searchable(text:placement:prompt:)();
}

uint64_t View.textSuffix(_:)()
{
  return View.textSuffix(_:)();
}

uint64_t View.buttonStyle<A>(_:)()
{
  return View.buttonStyle<A>(_:)();
}

uint64_t View.contextMenu<A, B>(menuItems:preview:previewAction:)()
{
  return View.contextMenu<A, B>(menuItems:preview:previewAction:)();
}

uint64_t View.contextMenu<A, B>(menuItems:preview:)()
{
  return View.contextMenu<A, B>(menuItems:preview:)();
}

uint64_t View.contextMenu<A>(menuItems:)()
{
  return View.contextMenu<A>(menuItems:)();
}

uint64_t View.environment<A>(_:_:)()
{
  return View.environment<A>(_:_:)();
}

uint64_t View.hoverEffect<A>(_:isEnabled:)()
{
  return View.hoverEffect<A>(_:isEnabled:)();
}

uint64_t View.onTapGesture(count:perform:)()
{
  return View.onTapGesture(count:perform:)();
}

uint64_t View.swipeActions<A>(edge:allowsFullSwipe:content:)()
{
  return View.swipeActions<A>(edge:allowsFullSwipe:content:)();
}

uint64_t View.accessibility(hidden:)()
{
  return View.accessibility(hidden:)();
}

uint64_t View.sharingPicker(isPresented:item:subject:message:)()
{
  return View.sharingPicker(isPresented:item:subject:message:)();
}

uint64_t static View._viewListCount(inputs:)()
{
  return static View._viewListCount(inputs:)();
}

uint64_t View.scrollDisabled(_:)()
{
  return View.scrollDisabled(_:)();
}

uint64_t View.bodyHeadOutdent(_:)()
{
  return View.bodyHeadOutdent(_:)();
}

uint64_t View.dynamicTypeSize(_:)()
{
  return View.dynamicTypeSize(_:)();
}

uint64_t View.dynamicTypeSize<A>(_:)()
{
  return View.dynamicTypeSize<A>(_:)();
}

uint64_t View.foregroundColor(_:)()
{
  return View.foregroundColor(_:)();
}

uint64_t View.foregroundStyle<A>(_:)()
{
  return View.foregroundStyle<A>(_:)();
}

uint64_t View.fullScreenCover<A>(isPresented:onDismiss:content:)()
{
  return View.fullScreenCover<A>(isPresented:onDismiss:content:)();
}

uint64_t View.navigationTitle<A>(_:)()
{
  return View.navigationTitle<A>(_:)();
}

uint64_t View.compositingGroup()()
{
  return View.compositingGroup()();
}

uint64_t View.headerProminence(_:)()
{
  return View.headerProminence(_:)();
}

uint64_t View.scrollIndicators(_:axes:)()
{
  return View.scrollIndicators(_:axes:)();
}

uint64_t View.environmentObject<A>(_:)()
{
  return View.environmentObject<A>(_:)();
}

uint64_t View.confirmationDialog<A, B, C>(_:isPresented:titleVisibility:actions:message:)()
{
  return View.confirmationDialog<A, B, C>(_:isPresented:titleVisibility:actions:message:)();
}

uint64_t View.confirmationDialog<A, B>(_:isPresented:titleVisibility:actions:)()
{
  return View.confirmationDialog<A, B>(_:isPresented:titleVisibility:actions:)();
}

uint64_t View.navigationBarItems<A>(trailing:)()
{
  return View.navigationBarItems<A>(trailing:)();
}

uint64_t View.presentationSizing<A>(_:)()
{
  return View.presentationSizing<A>(_:)();
}

uint64_t View.scrollClipDisabled(_:)()
{
  return View.scrollClipDisabled(_:)();
}

uint64_t View.scrollTargetLayout(isEnabled:)()
{
  return View.scrollTargetLayout(isEnabled:)();
}

uint64_t View.accessibilityHidden(_:)()
{
  return View.accessibilityHidden(_:)();
}

uint64_t View.accessibilityElement(children:)()
{
  return View.accessibilityElement(children:)();
}

uint64_t View.scrollBounceBehavior(_:axes:)()
{
  return View.scrollBounceBehavior(_:axes:)();
}

uint64_t View.scrollTargetBehavior<A>(_:)()
{
  return View.scrollTargetBehavior<A>(_:)();
}

uint64_t View.accessibilityAddTraits(_:)()
{
  return View.accessibilityAddTraits(_:)();
}

uint64_t View.multilineTextAlignment(_:)()
{
  return View.multilineTextAlignment(_:)();
}

uint64_t View.onScrollGeometryChange<A>(for:of:action:)()
{
  return View.onScrollGeometryChange<A>(for:of:action:)();
}

uint64_t View.accessibilityRepresentation<A>(representation:)()
{
  return View.accessibilityRepresentation<A>(representation:)();
}

uint64_t View.navigationBarTitleDisplayMode(_:)()
{
  return View.navigationBarTitleDisplayMode(_:)();
}

uint64_t View.id<A>(_:)()
{
  return View.id<A>(_:)();
}

uint64_t View.bold(_:)()
{
  return View.bold(_:)();
}

uint64_t View.alert(isPresented:content:)()
{
  return View.alert(isPresented:content:)();
}

uint64_t View.alert<A, B, C>(_:isPresented:actions:message:)()
{
  return View.alert<A, B, C>(_:isPresented:actions:message:)();
}

uint64_t View.alert<A, B>(_:isPresented:actions:)()
{
  return View.alert<A, B>(_:isPresented:actions:)();
}

uint64_t View.frame(width:height:alignment:)()
{
  return View.frame(width:height:alignment:)();
}

uint64_t View.sheet<A>(isPresented:onDismiss:content:)()
{
  return View.sheet<A>(isPresented:onDismiss:content:)();
}

uint64_t View.hidden()()
{
  return View.hidden()();
}

uint64_t View.gesture<A>(_:including:)()
{
  return View.gesture<A>(_:including:)();
}

uint64_t View.overlay<A>(_:alignment:)()
{
  return View.overlay<A>(_:alignment:)();
}

uint64_t View.padding(_:_:)()
{
  return View.padding(_:_:)();
}

uint64_t View.toolbar<A>(content:)()
{
  return View.toolbar<A>(content:)();
}

uint64_t View.modifier<A>(_:)()
{
  return View.modifier<A>(_:)();
}

uint64_t View.onAppear(perform:)()
{
  return View.onAppear(perform:)();
}

uint64_t View.onChange<A>(of:initial:_:)()
{
  return View.onChange<A>(of:initial:_:)();
}

uint64_t View.textCase(_:)()
{
  return View.textCase(_:)();
}

uint64_t View.fixedSize(horizontal:vertical:)()
{
  return View.fixedSize(horizontal:vertical:)();
}

uint64_t View.lineLimit(_:)()
{
  return View.lineLimit(_:)();
}

uint64_t View.listStyle<A>(_:)()
{
  return View.listStyle<A>(_:)();
}

uint64_t View.menuOrder(_:)()
{
  return View.menuOrder(_:)();
}

uint64_t View.menuStyle<A>(_:)()
{
  return View.menuStyle<A>(_:)();
}

uint64_t View.underline(_:pattern:color:)()
{
  return View.underline(_:pattern:color:)();
}

uint64_t Alert.init(title:message:primaryButton:secondaryButton:)()
{
  return Alert.init(title:message:primaryButton:secondaryButton:)();
}

uint64_t static Alert.Button.destructive(_:action:)()
{
  return static Alert.Button.destructive(_:action:)();
}

uint64_t static Alert.Button.cancel(_:)()
{
  return static Alert.Button.cancel(_:)();
}

uint64_t static Alert.Button.default(_:action:)()
{
  return static Alert.Button.default(_:action:)();
}

uint64_t type metadata accessor for Alert.Button()
{
  return type metadata accessor for Alert.Button();
}

uint64_t Color.init(uiColor:)()
{
  return Color.init(uiColor:)();
}

uint64_t static Color.accentColor.getter()
{
  return static Color.accentColor.getter();
}

uint64_t type metadata accessor for Color.RGBColorSpace()
{
  return type metadata accessor for Color.RGBColorSpace();
}

uint64_t static Color.== infix(_:_:)()
{
  return static Color.== infix(_:_:)();
}

uint64_t static Color.red.getter()
{
  return static Color.red.getter();
}

uint64_t Color.hash(into:)()
{
  return Color.hash(into:)();
}

uint64_t static Color.black.getter()
{
  return static Color.black.getter();
}

uint64_t static Color.clear.getter()
{
  return static Color.clear.getter();
}

uint64_t static Color.green.getter()
{
  return static Color.green.getter();
}

uint64_t static Color.white.getter()
{
  return static Color.white.getter();
}

uint64_t Color.opacity(_:)()
{
  return Color.opacity(_:)();
}

uint64_t static Color.primary.getter()
{
  return static Color.primary.getter();
}

uint64_t static Color.secondary.getter()
{
  return static Color.secondary.getter();
}

uint64_t Color.init(_:red:green:blue:opacity:)()
{
  return Color.init(_:red:green:blue:opacity:)();
}

uint64_t Color.init(_:)()
{
  return Color.init(_:)();
}

uint64_t Image.init(uiImage:)()
{
  return Image.init(uiImage:)();
}

uint64_t Image.init(systemName:)()
{
  return Image.init(systemName:)();
}

uint64_t type metadata accessor for Image.ResizingMode()
{
  return type metadata accessor for Image.ResizingMode();
}

uint64_t Image.init(_internalSystemName:)()
{
  return Image.init(_internalSystemName:)();
}

uint64_t Image.symbolRenderingMode(_:)()
{
  return Image.symbolRenderingMode(_:)();
}

uint64_t static Image.== infix(_:_:)()
{
  return static Image.== infix(_:_:)();
}

uint64_t type metadata accessor for Image.Scale()
{
  return type metadata accessor for Image.Scale();
}

uint64_t Image.resizable(capInsets:resizingMode:)()
{
  return Image.resizable(capInsets:resizingMode:)();
}

uint64_t Image.init(_:bundle:)()
{
  return Image.init(_:bundle:)();
}

uint64_t Label.init(title:icon:)()
{
  return Label.init(title:icon:)();
}

uint64_t Label<>.init(_:systemImage:)()
{
  return Label<>.init(_:systemImage:)();
}

uint64_t Label<>.init<A>(_:systemImage:)()
{
  return Label<>.init<A>(_:systemImage:)();
}

uint64_t State.init(wrappedValue:)()
{
  return State.init(wrappedValue:)();
}

uint64_t State.wrappedValue.getter()
{
  return State.wrappedValue.getter();
}

uint64_t State.wrappedValue.setter()
{
  return State.wrappedValue.setter();
}

uint64_t State.projectedValue.getter()
{
  return State.projectedValue.getter();
}

uint64_t type metadata accessor for State()
{
  return type metadata accessor for State();
}

uint64_t Button.init(role:action:label:)()
{
  return Button.init(role:action:label:)();
}

uint64_t Button.init(action:label:)()
{
  return Button.init(action:label:)();
}

uint64_t Button<>.init<A>(_:role:action:)()
{
  return Button<>.init<A>(_:role:action:)();
}

uint64_t Button<>.init<A>(_:action:)()
{
  return Button<>.init<A>(_:action:)();
}

uint64_t type metadata accessor for Button()
{
  return type metadata accessor for Button();
}

uint64_t HStack.init(alignment:spacing:content:)()
{
  return HStack.init(alignment:spacing:content:)();
}

uint64_t type metadata accessor for HStack()
{
  return type metadata accessor for HStack();
}

uint64_t type metadata accessor for IDView()
{
  return type metadata accessor for IDView();
}

uint64_t Picker<>.init<A>(_:selection:content:)()
{
  return Picker<>.init<A>(_:selection:content:)();
}

uint64_t Toggle.init(isOn:label:)()
{
  return Toggle.init(isOn:label:)();
}

uint64_t VStack.init(alignment:spacing:content:)()
{
  return VStack.init(alignment:spacing:content:)();
}

uint64_t type metadata accessor for VStack()
{
  return type metadata accessor for VStack();
}

uint64_t ZStack.init(alignment:content:)()
{
  return ZStack.init(alignment:content:)();
}

uint64_t type metadata accessor for ZStack()
{
  return type metadata accessor for ZStack();
}

uint64_t Binding.wrappedValue.getter()
{
  return Binding.wrappedValue.getter();
}

uint64_t Binding.wrappedValue.setter()
{
  return Binding.wrappedValue.setter();
}

uint64_t Binding.projectedValue.getter()
{
  return Binding.projectedValue.getter();
}

uint64_t Binding.init(get:set:)()
{
  return Binding.init(get:set:)();
}

uint64_t type metadata accessor for Binding()
{
  return type metadata accessor for Binding();
}

uint64_t Capsule._Inset.path(in:)()
{
  return Capsule._Inset.path(in:)();
}

uint64_t type metadata accessor for Capsule()
{
  return type metadata accessor for Capsule();
}

uint64_t Divider.init()()
{
  return Divider.init()();
}

uint64_t type metadata accessor for Divider()
{
  return type metadata accessor for Divider();
}

uint64_t ForEach<>.init(_:id:content:)()
{
  return ForEach<>.init(_:id:content:)();
}

uint64_t ForEach<>.init(_:content:)()
{
  return ForEach<>.init(_:content:)();
}

uint64_t type metadata accessor for ForEach()
{
  return type metadata accessor for ForEach();
}

uint64_t Gesture.onEnded(_:)()
{
  return Gesture.onEnded(_:)();
}

uint64_t Section<>.init(_:content:)()
{
  return Section<>.init(_:content:)();
}

uint64_t Section<>.init<A>(_:content:)()
{
  return Section<>.init<A>(_:content:)();
}

uint64_t Section<>.init(header:content:)()
{
  return Section<>.init(header:content:)();
}

uint64_t Section<>.init(header:footer:content:)()
{
  return Section<>.init(header:footer:content:)();
}

uint64_t Section<>.init(content:)()
{
  return Section<>.init(content:)();
}

uint64_t type metadata accessor for Section()
{
  return type metadata accessor for Section();
}

uint64_t Gradient.init(colors:)()
{
  return Gradient.init(colors:)();
}

uint64_t type metadata accessor for GridItem.Size()
{
  return type metadata accessor for GridItem.Size();
}

uint64_t type metadata accessor for GridItem()
{
  return type metadata accessor for GridItem();
}

uint64_t GridItem.init(_:spacing:alignment:)()
{
  return GridItem.init(_:spacing:alignment:)();
}

uint64_t static Material.thin.getter()
{
  return static Material.thin.getter();
}

uint64_t static Material.thick.getter()
{
  return static Material.thick.getter();
}

uint64_t static Material.regular.getter()
{
  return static Material.regular.getter();
}

uint64_t type metadata accessor for Material()
{
  return type metadata accessor for Material();
}

uint64_t static Alignment.topLeading.getter()
{
  return static Alignment.topLeading.getter();
}

uint64_t static Alignment.topTrailing.getter()
{
  return static Alignment.topTrailing.getter();
}

uint64_t static Alignment.top.getter()
{
  return static Alignment.top.getter();
}

uint64_t static Alignment.bottom.getter()
{
  return static Alignment.bottom.getter();
}

uint64_t static Alignment.center.getter()
{
  return static Alignment.center.getter();
}

uint64_t static Alignment.leading.getter()
{
  return static Alignment.leading.getter();
}

uint64_t static Alignment.trailing.getter()
{
  return static Alignment.trailing.getter();
}

uint64_t static Animation.interpolatingSpring(mass:stiffness:damping:initialVelocity:)()
{
  return static Animation.interpolatingSpring(mass:stiffness:damping:initialVelocity:)();
}

uint64_t Animation.delay(_:)()
{
  return Animation.delay(_:)();
}

uint64_t static Animation.easeIn(duration:)()
{
  return static Animation.easeIn(duration:)();
}

uint64_t static Animation.spring(response:dampingFraction:blendDuration:)()
{
  return static Animation.spring(response:dampingFraction:blendDuration:)();
}

uint64_t static Animation.default.getter()
{
  return static Animation.default.getter();
}

uint64_t static Animation.easeInOut(duration:)()
{
  return static Animation.easeInOut(duration:)();
}

uint64_t AnyLayout.init<A>(_:)()
{
  return AnyLayout.init<A>(_:)();
}

uint64_t type metadata accessor for BlendMode()
{
  return type metadata accessor for BlendMode();
}

uint64_t LazyHGrid.init(rows:alignment:spacing:pinnedViews:content:)()
{
  return LazyHGrid.init(rows:alignment:spacing:pinnedViews:content:)();
}

uint64_t static MenuOrder.fixed.getter()
{
  return static MenuOrder.fixed.getter();
}

uint64_t type metadata accessor for MenuOrder()
{
  return type metadata accessor for MenuOrder();
}

uint64_t TextField<>.init<A>(_:text:onEditingChanged:onCommit:)()
{
  return TextField<>.init<A>(_:text:onEditingChanged:onCommit:)();
}

uint64_t type metadata accessor for TupleView()
{
  return type metadata accessor for TupleView();
}

uint64_t TupleView.init(_:)()
{
  return TupleView.init(_:)();
}

uint64_t static UnitPoint.topLeading.getter()
{
  return static UnitPoint.topLeading.getter();
}

uint64_t static UnitPoint.top.getter()
{
  return static UnitPoint.top.getter();
}

uint64_t static UnitPoint.bottom.getter()
{
  return static UnitPoint.bottom.getter();
}

uint64_t static UnitPoint.center.getter()
{
  return static UnitPoint.center.getter();
}

uint64_t static UnitPoint.leading.getter()
{
  return static UnitPoint.leading.getter();
}

uint64_t static UnitPoint.trailing.getter()
{
  return static UnitPoint.trailing.getter();
}

uint64_t type metadata accessor for DispatchTimeInterval()
{
  return type metadata accessor for DispatchTimeInterval();
}

uint64_t type metadata accessor for DispatchWorkItemFlags()
{
  return type metadata accessor for DispatchWorkItemFlags();
}

uint64_t type metadata accessor for DispatchQoS.QoSClass()
{
  return type metadata accessor for DispatchQoS.QoSClass();
}

uint64_t static DispatchQoS.unspecified.getter()
{
  return static DispatchQoS.unspecified.getter();
}

uint64_t type metadata accessor for DispatchQoS()
{
  return type metadata accessor for DispatchQoS();
}

uint64_t static DispatchTime.distantFuture.getter()
{
  return static DispatchTime.distantFuture.getter();
}

uint64_t static DispatchTime.now()()
{
  return static DispatchTime.now()();
}

uint64_t type metadata accessor for DispatchTime()
{
  return type metadata accessor for DispatchTime();
}

uint64_t DispatchWorkItem.init(flags:block:)()
{
  return DispatchWorkItem.init(flags:block:)();
}

uint64_t dispatch thunk of DispatchWorkItem.cancel()()
{
  return dispatch thunk of DispatchWorkItem.cancel()();
}

uint64_t type metadata accessor for DispatchWorkItem()
{
  return type metadata accessor for DispatchWorkItem();
}

uint64_t type metadata accessor for DispatchPredicate()
{
  return type metadata accessor for DispatchPredicate();
}

uint64_t + infix(_:_:)()
{
  return + infix(_:_:)();
}

{
  return + infix(_:_:)();
}

uint64_t _dispatchPreconditionTest(_:)()
{
  return _dispatchPreconditionTest(_:)();
}

uint64_t static PartialMusicProperty<A>.customLyrics.getter()
{
  return static PartialMusicProperty<A>.customLyrics.getter();
}

uint64_t static PartialMusicProperty<A>.offers.getter()
{
  return static PartialMusicProperty<A>.offers.getter();
}

{
  return static PartialMusicProperty<A>.offers.getter();
}

uint64_t static PartialMusicProperty<A>.tracks.getter()
{
  return static PartialMusicProperty<A>.tracks.getter();
}

{
  return static PartialMusicProperty<A>.tracks.getter();
}

uint64_t MusicItemCollection.init(arrayLiteral:)()
{
  return MusicItemCollection.init(arrayLiteral:)();
}

uint64_t MusicItemCollection.hasNextBatch.getter()
{
  return MusicItemCollection.hasNextBatch.getter();
}

uint64_t static MusicItemCollection.+= infix(_:_:)()
{
  return static MusicItemCollection.+= infix(_:_:)();
}

uint64_t static MusicItemCollection<>.== infix(_:_:)()
{
  return static MusicItemCollection<>.== infix(_:_:)();
}

uint64_t type metadata accessor for MusicItemCollection()
{
  return type metadata accessor for MusicItemCollection();
}

uint64_t MusicLibraryRequest<>.filter<A>(matching:equalTo:)()
{
  return MusicLibraryRequest<>.filter<A>(matching:equalTo:)();
}

{
  return MusicLibraryRequest<>.filter<A>(matching:equalTo:)();
}

uint64_t MusicLibraryRequest.library.setter()
{
  return MusicLibraryRequest.library.setter();
}

uint64_t MusicLibraryRequest.init()()
{
  return MusicLibraryRequest.init()();
}

uint64_t MusicLibrarySection.item.getter()
{
  return MusicLibrarySection.item.getter();
}

uint64_t MusicLibrarySection.subscript.getter()
{
  return MusicLibrarySection.subscript.getter();
}

uint64_t MusicLibrarySection.items.getter()
{
  return MusicLibrarySection.items.getter();
}

uint64_t type metadata accessor for MusicPropertySource()
{
  return type metadata accessor for MusicPropertySource();
}

uint64_t MusicLibraryResponse.items.getter()
{
  return MusicLibraryResponse.items.getter();
}

uint64_t MusicAttributeProperty.init(_:)()
{
  return MusicAttributeProperty.init(_:)();
}

uint64_t MusicRelationshipProperty.limit(_:)()
{
  return MusicRelationshipProperty.limit(_:)();
}

uint64_t MusicCatalogResourceRequest.properties.setter()
{
  return MusicCatalogResourceRequest.properties.setter();
}

uint64_t MusicCatalogResourceRequest.init<A>(matching:equalTo:)()
{
  return MusicCatalogResourceRequest.init<A>(matching:equalTo:)();
}

uint64_t MusicCatalogResourceRequest.init<A>(matching:memberOf:)()
{
  return MusicCatalogResourceRequest.init<A>(matching:memberOf:)();
}

uint64_t MusicCatalogResourceResponse.items.getter()
{
  return MusicCatalogResourceResponse.items.getter();
}

uint64_t MusicLibrarySectionedRequest.filterSections<A>(matching:equalTo:)()
{
  return MusicLibrarySectionedRequest.filterSections<A>(matching:equalTo:)();
}

uint64_t MusicLibrarySectionedRequest.init()()
{
  return MusicLibrarySectionedRequest.init()();
}

uint64_t MusicLibrarySectionedResponse.totalItemCount.getter()
{
  return MusicLibrarySectionedResponse.totalItemCount.getter();
}

uint64_t MusicLibrarySectionedResponse.sections.getter()
{
  return MusicLibrarySectionedResponse.sections.getter();
}

uint64_t dispatch thunk of MusicItem.id.getter()
{
  return dispatch thunk of MusicItem.id.getter();
}

uint64_t MusicVideo.favoriteStatus.getter()
{
  return MusicVideo.favoriteStatus.getter();
}

uint64_t MusicVideo.catalogID.getter()
{
  return MusicVideo.catalogID.getter();
}

uint64_t MusicVideo.albumTitle.getter()
{
  return MusicVideo.albumTitle.getter();
}

uint64_t MusicVideo.contentRating.getter()
{
  return MusicVideo.contentRating.getter();
}

uint64_t MusicVideo.previewAssets.getter()
{
  return MusicVideo.previewAssets.getter();
}

uint64_t MusicVideo.url.getter()
{
  return MusicVideo.url.getter();
}

uint64_t MusicVideo.albums.getter()
{
  return MusicVideo.albums.getter();
}

uint64_t MusicVideo.artwork.getter()
{
  return MusicVideo.artwork.getter();
}

uint64_t type metadata accessor for MusicVideo()
{
  return type metadata accessor for MusicVideo();
}

uint64_t MusicItemID.description.getter()
{
  return MusicItemID.description.getter();
}

uint64_t MusicItemID.init(rawValue:)()
{
  return MusicItemID.init(rawValue:)();
}

uint64_t MusicItemID.init(_:)()
{
  return MusicItemID.init(_:)();
}

uint64_t static MusicPlayer.PlayabilityStatus.UnplayableReason.== infix(_:_:)()
{
  return static MusicPlayer.PlayabilityStatus.UnplayableReason.== infix(_:_:)();
}

uint64_t type metadata accessor for MusicPlayer.PlayabilityStatus.UnplayableReason()
{
  return type metadata accessor for MusicPlayer.PlayabilityStatus.UnplayableReason();
}

uint64_t type metadata accessor for MusicPlayer.PlayabilityStatus()
{
  return type metadata accessor for MusicPlayer.PlayabilityStatus();
}

uint64_t type metadata accessor for MusicPlayer.PreviewCapabilityStatus.UnpreviewableReason()
{
  return type metadata accessor for MusicPlayer.PreviewCapabilityStatus.UnpreviewableReason();
}

uint64_t type metadata accessor for MusicPlayer.PreviewCapabilityStatus()
{
  return type metadata accessor for MusicPlayer.PreviewCapabilityStatus();
}

uint64_t dispatch thunk of MusicPlayer.ItemState.playabilityStatus.getter()
{
  return dispatch thunk of MusicPlayer.ItemState.playabilityStatus.getter();
}

uint64_t dispatch thunk of MusicPlayer.ItemState.$playabilityStatus.getter()
{
  return dispatch thunk of MusicPlayer.ItemState.$playabilityStatus.getter();
}

uint64_t dispatch thunk of MusicPlayer.ItemState.previewCapabilityStatus.getter()
{
  return dispatch thunk of MusicPlayer.ItemState.previewCapabilityStatus.getter();
}

uint64_t dispatch thunk of MusicPlayer.ItemState.$previewCapabilityStatus.getter()
{
  return dispatch thunk of MusicPlayer.ItemState.$previewCapabilityStatus.getter();
}

uint64_t dispatch thunk of MusicPlayer.ItemState.item.setter()
{
  return dispatch thunk of MusicPlayer.ItemState.item.setter();
}

uint64_t MusicLibrary.mediaLibrary.getter()
{
  return MusicLibrary.mediaLibrary.getter();
}

uint64_t type metadata accessor for MusicLibrary.RemoveAction.UnsupportedReason()
{
  return type metadata accessor for MusicLibrary.RemoveAction.UnsupportedReason();
}

uint64_t type metadata accessor for MusicLibrary.RemoveAction()
{
  return type metadata accessor for MusicLibrary.RemoveAction();
}

uint64_t type metadata accessor for MusicLibrary.DislikeAction.UnsupportedReason()
{
  return type metadata accessor for MusicLibrary.DislikeAction.UnsupportedReason();
}

uint64_t type metadata accessor for MusicLibrary.DislikeAction()
{
  return type metadata accessor for MusicLibrary.DislikeAction();
}

uint64_t type metadata accessor for MusicLibrary.DownloadAction.UnsupportedReason()
{
  return type metadata accessor for MusicLibrary.DownloadAction.UnsupportedReason();
}

uint64_t type metadata accessor for MusicLibrary.DownloadAction()
{
  return type metadata accessor for MusicLibrary.DownloadAction();
}

uint64_t static MusicLibrary.DownloadStatus.DownloadPauseReasons.thermalPressure.getter()
{
  return static MusicLibrary.DownloadStatus.DownloadPauseReasons.thermalPressure.getter();
}

uint64_t static MusicLibrary.DownloadStatus.DownloadPauseReasons.constrainedNetwork.getter()
{
  return static MusicLibrary.DownloadStatus.DownloadPauseReasons.constrainedNetwork.getter();
}

uint64_t static MusicLibrary.DownloadStatus.DownloadPauseReasons.cellularDataDisallowed.getter()
{
  return static MusicLibrary.DownloadStatus.DownloadPauseReasons.cellularDataDisallowed.getter();
}

uint64_t type metadata accessor for MusicLibrary.DownloadStatus.DownloadPauseReasons()
{
  return type metadata accessor for MusicLibrary.DownloadStatus.DownloadPauseReasons();
}

uint64_t type metadata accessor for MusicLibrary.DownloadStatus()
{
  return type metadata accessor for MusicLibrary.DownloadStatus();
}

uint64_t type metadata accessor for MusicLibrary.FavoriteAction.UnsupportedReason()
{
  return type metadata accessor for MusicLibrary.FavoriteAction.UnsupportedReason();
}

uint64_t type metadata accessor for MusicLibrary.FavoriteAction()
{
  return type metadata accessor for MusicLibrary.FavoriteAction();
}

uint64_t MusicLibrary.supportedStatus<A, B>(for:action:)()
{
  return MusicLibrary.supportedStatus<A, B>(for:action:)();
}

uint64_t type metadata accessor for MusicLibrary.UndoDislikeAction.UnsupportedReason()
{
  return type metadata accessor for MusicLibrary.UndoDislikeAction.UnsupportedReason();
}

uint64_t type metadata accessor for MusicLibrary.UndoDislikeAction()
{
  return type metadata accessor for MusicLibrary.UndoDislikeAction();
}

uint64_t type metadata accessor for MusicLibrary.UndoFavoriteAction.UnsupportedReason()
{
  return type metadata accessor for MusicLibrary.UndoFavoriteAction.UnsupportedReason();
}

uint64_t type metadata accessor for MusicLibrary.UndoFavoriteAction()
{
  return type metadata accessor for MusicLibrary.UndoFavoriteAction();
}

uint64_t type metadata accessor for MusicLibrary.RemoveDownloadAction.UnsupportedReason()
{
  return type metadata accessor for MusicLibrary.RemoveDownloadAction.UnsupportedReason();
}

uint64_t type metadata accessor for MusicLibrary.RemoveDownloadAction()
{
  return type metadata accessor for MusicLibrary.RemoveDownloadAction();
}

uint64_t static MusicLibrary.== infix(_:_:)()
{
  return static MusicLibrary.== infix(_:_:)();
}

uint64_t MusicLibrary.id.getter()
{
  return MusicLibrary.id.getter();
}

uint64_t MusicLibrary.name.getter()
{
  return MusicLibrary.name.getter();
}

uint64_t MusicLibrary.state<A>(for:)()
{
  return MusicLibrary.state<A>(for:)();
}

uint64_t type metadata accessor for MusicLibrary.AddAction.UnsupportedReason()
{
  return type metadata accessor for MusicLibrary.AddAction.UnsupportedReason();
}

uint64_t type metadata accessor for MusicLibrary.AddAction()
{
  return type metadata accessor for MusicLibrary.AddAction();
}

uint64_t type metadata accessor for MusicLibrary.AddStatus.UnaddableReason()
{
  return type metadata accessor for MusicLibrary.AddStatus.UnaddableReason();
}

uint64_t type metadata accessor for MusicLibrary.AddStatus()
{
  return type metadata accessor for MusicLibrary.AddStatus();
}

uint64_t dispatch thunk of MusicLibrary.ItemState.$addStatus.getter()
{
  return dispatch thunk of MusicLibrary.ItemState.$addStatus.getter();
}

uint64_t dispatch thunk of MusicLibrary.ItemState.downloadStatus.getter()
{
  return dispatch thunk of MusicLibrary.ItemState.downloadStatus.getter();
}

uint64_t dispatch thunk of MusicLibrary.ItemState.$downloadStatus.getter()
{
  return dispatch thunk of MusicLibrary.ItemState.$downloadStatus.getter();
}

uint64_t dispatch thunk of MusicLibrary.ItemState.item.getter()
{
  return dispatch thunk of MusicLibrary.ItemState.item.getter();
}

uint64_t dispatch thunk of MusicLibrary.ItemState.item.setter()
{
  return dispatch thunk of MusicLibrary.ItemState.item.setter();
}

uint64_t dispatch thunk of MusicLibrary.ItemState.isAdded.getter()
{
  return dispatch thunk of MusicLibrary.ItemState.isAdded.getter();
}

uint64_t dispatch thunk of MusicLibrary.ItemState.addStatus.getter()
{
  return dispatch thunk of MusicLibrary.ItemState.addStatus.getter();
}

uint64_t type metadata accessor for MusicLibrary.ItemState()
{
  return type metadata accessor for MusicLibrary.ItemState();
}

uint64_t static MusicLibrary.shared.getter()
{
  return static MusicLibrary.shared.getter();
}

uint64_t type metadata accessor for MusicLibrary()
{
  return type metadata accessor for MusicLibrary();
}

uint64_t RecordLabel.url.getter()
{
  return RecordLabel.url.getter();
}

uint64_t type metadata accessor for RecordLabel()
{
  return type metadata accessor for RecordLabel();
}

uint64_t type metadata accessor for AudioVariant()
{
  return type metadata accessor for AudioVariant();
}

uint64_t PreviewAsset.url.getter()
{
  return PreviewAsset.url.getter();
}

uint64_t PreviewAsset.artwork.getter()
{
  return PreviewAsset.artwork.getter();
}

uint64_t type metadata accessor for PreviewAsset()
{
  return type metadata accessor for PreviewAsset();
}

uint64_t type metadata accessor for ContentRating()
{
  return type metadata accessor for ContentRating();
}

uint64_t dispatch thunk of LibraryPlaylistFilter.id.getter()
{
  return dispatch thunk of LibraryPlaylistFilter.id.getter();
}

uint64_t Song.customLyrics.getter()
{
  return Song.customLyrics.getter();
}

uint64_t Song.favoriteStatus.getter()
{
  return Song.favoriteStatus.getter();
}

uint64_t Song.hasCustomLyrics.getter()
{
  return Song.hasCustomLyrics.getter();
}

uint64_t Song.hasTimeSyncedLyrics.getter()
{
  return Song.hasTimeSyncedLyrics.getter();
}

uint64_t Song.offers.getter()
{
  return Song.offers.getter();
}

uint64_t Song.catalogID.getter()
{
  return Song.catalogID.getter();
}

uint64_t Song.albumTitle.getter()
{
  return Song.albumTitle.getter();
}

uint64_t Song.contentRating.getter()
{
  return Song.contentRating.getter();
}

uint64_t Song.previewAssets.getter()
{
  return Song.previewAssets.getter();
}

uint64_t static Song.== infix(_:_:)()
{
  return static Song.== infix(_:_:)();
}

uint64_t Song.id.getter()
{
  return Song.id.getter();
}

uint64_t Song.url.getter()
{
  return Song.url.getter();
}

uint64_t Song.title.getter()
{
  return Song.title.getter();
}

uint64_t Song.artwork.getter()
{
  return Song.artwork.getter();
}

uint64_t Song.hasLyrics.getter()
{
  return Song.hasLyrics.getter();
}

uint64_t type metadata accessor for Song()
{
  return type metadata accessor for Song();
}

uint64_t Album.isSingleMusicVideo.getter()
{
  return Album.isSingleMusicVideo.getter();
}

uint64_t Album.favoriteStatus.getter()
{
  return Album.favoriteStatus.getter();
}

uint64_t Album.isClassicalExperienceAvailable.getter()
{
  return Album.isClassicalExperienceAvailable.getter();
}

uint64_t Album.offers.getter()
{
  return Album.offers.getter();
}

uint64_t Album.catalogID.getter()
{
  return Album.catalogID.getter();
}

uint64_t Album.contentRating.getter()
{
  return Album.contentRating.getter();
}

uint64_t Album.url.getter()
{
  return Album.url.getter();
}

uint64_t Album.tracks.getter()
{
  return Album.tracks.getter();
}

uint64_t type metadata accessor for Album()
{
  return type metadata accessor for Album();
}

uint64_t Genre.url.getter()
{
  return Genre.url.getter();
}

uint64_t type metadata accessor for Genre()
{
  return type metadata accessor for Genre();
}

uint64_t Track.catalogID.getter()
{
  return Track.catalogID.getter();
}

uint64_t Track.albumTitle.getter()
{
  return Track.albumTitle.getter();
}

uint64_t Track.description.getter()
{
  return Track.description.getter();
}

uint64_t type metadata accessor for Track()
{
  return type metadata accessor for Track();
}

uint64_t Artist.favoriteStatus.getter()
{
  return Artist.favoriteStatus.getter();
}

uint64_t Artist.catalogID.getter()
{
  return Artist.catalogID.getter();
}

uint64_t static Artist.== infix(_:_:)()
{
  return static Artist.== infix(_:_:)();
}

uint64_t Artist.url.getter()
{
  return Artist.url.getter();
}

uint64_t Artist.name.getter()
{
  return Artist.name.getter();
}

uint64_t Artist.subscript.getter()
{
  return Artist.subscript.getter();
}

uint64_t type metadata accessor for Artist()
{
  return type metadata accessor for Artist();
}

uint64_t Artwork.init(_:)()
{
  return Artwork.init(_:)();
}

{
  return Artwork.init(_:)();
}

uint64_t type metadata accessor for Artwork.ImageFormat()
{
  return type metadata accessor for Artwork.ImageFormat();
}

uint64_t static Artwork.CropStyle.squareCenterCrop.getter()
{
  return static Artwork.CropStyle.squareCenterCrop.getter();
}

uint64_t static Artwork.CropStyle.boundedBox.getter()
{
  return static Artwork.CropStyle.boundedBox.getter();
}

uint64_t static Artwork.CropStyle.sourceSize.getter()
{
  return static Artwork.CropStyle.sourceSize.getter();
}

uint64_t static Artwork.CropStyle.constrainedWidth.getter()
{
  return static Artwork.CropStyle.constrainedWidth.getter();
}

uint64_t static Artwork.CropStyle.constrainedHeight.getter()
{
  return static Artwork.CropStyle.constrainedHeight.getter();
}

uint64_t static Artwork.CropStyle.specificRectangle.getter()
{
  return static Artwork.CropStyle.specificRectangle.getter();
}

uint64_t static Artwork.CropStyle.featuredContentCrop44.getter()
{
  return static Artwork.CropStyle.featuredContentCrop44.getter();
}

uint64_t static Artwork.CropStyle.featuredContentCrop270.getter()
{
  return static Artwork.CropStyle.featuredContentCrop270.getter();
}

uint64_t static Artwork.CropStyle.featuredContentCrop170T100B.getter()
{
  return static Artwork.CropStyle.featuredContentCrop170T100B.getter();
}

uint64_t type metadata accessor for Artwork.CropStyle()
{
  return type metadata accessor for Artwork.CropStyle();
}

uint64_t Artwork.maximumWidth.getter()
{
  return Artwork.maximumWidth.getter();
}

uint64_t Artwork.maximumHeight.getter()
{
  return Artwork.maximumHeight.getter();
}

uint64_t Artwork.backgroundColor.getter()
{
  return Artwork.backgroundColor.getter();
}

uint64_t Artwork.primaryTextColor.getter()
{
  return Artwork.primaryTextColor.getter();
}

uint64_t Artwork.tertiaryTextColor.getter()
{
  return Artwork.tertiaryTextColor.getter();
}

uint64_t Artwork.secondaryTextColor.getter()
{
  return Artwork.secondaryTextColor.getter();
}

uint64_t static Artwork.== infix(_:_:)()
{
  return static Artwork.== infix(_:_:)();
}

uint64_t type metadata accessor for Artwork()
{
  return type metadata accessor for Artwork();
}

uint64_t Curator.url.getter()
{
  return Curator.url.getter();
}

uint64_t type metadata accessor for Curator()
{
  return type metadata accessor for Curator();
}

uint64_t Station.contentRating.getter()
{
  return Station.contentRating.getter();
}

uint64_t Station.id.getter()
{
  return Station.id.getter();
}

uint64_t Station.url.getter()
{
  return Station.url.getter();
}

uint64_t type metadata accessor for Station()
{
  return type metadata accessor for Station();
}

uint64_t static Playlist.Collaborator.== infix(_:_:)()
{
  return static Playlist.Collaborator.== infix(_:_:)();
}

uint64_t type metadata accessor for Playlist.Collaborator.Role()
{
  return type metadata accessor for Playlist.Collaborator.Role();
}

uint64_t Playlist.Collaborator.name.getter()
{
  return Playlist.Collaborator.name.getter();
}

uint64_t Playlist.Collaborator.role.getter()
{
  return Playlist.Collaborator.role.getter();
}

uint64_t type metadata accessor for Playlist.Collaborator.Status()
{
  return type metadata accessor for Playlist.Collaborator.Status();
}

uint64_t Playlist.Collaborator.handle.getter()
{
  return Playlist.Collaborator.handle.getter();
}

uint64_t Playlist.Collaborator.artwork.getter()
{
  return Playlist.Collaborator.artwork.getter();
}

uint64_t Playlist.Collaborator.isPending.getter()
{
  return Playlist.Collaborator.isPending.getter();
}

uint64_t type metadata accessor for Playlist.Collaborator()
{
  return type metadata accessor for Playlist.Collaborator();
}

uint64_t Playlist.Collaboration.invitationURL.getter()
{
  return Playlist.Collaboration.invitationURL.getter();
}

uint64_t type metadata accessor for Playlist.Collaboration.InvitationMode()
{
  return type metadata accessor for Playlist.Collaboration.InvitationMode();
}

uint64_t Playlist.Collaboration.invitationMode.getter()
{
  return Playlist.Collaboration.invitationMode.getter();
}

uint64_t Playlist.Collaboration.collaboratorStatus.getter()
{
  return Playlist.Collaboration.collaboratorStatus.getter();
}

uint64_t Playlist.Collaboration.invitationExpirationDate.getter()
{
  return Playlist.Collaboration.invitationExpirationDate.getter();
}

uint64_t type metadata accessor for Playlist.Collaboration()
{
  return type metadata accessor for Playlist.Collaboration();
}

uint64_t Playlist.collaboration.getter()
{
  return Playlist.collaboration.getter();
}

uint64_t Playlist.contentRating.getter()
{
  return Playlist.contentRating.getter();
}

uint64_t Playlist.favoriteStatus.getter()
{
  return Playlist.favoriteStatus.getter();
}

uint64_t Playlist.editorialArtwork.getter()
{
  return Playlist.editorialArtwork.getter();
}

uint64_t static Playlist.EditableComponents.tracklist.getter()
{
  return static Playlist.EditableComponents.tracklist.getter();
}

uint64_t type metadata accessor for Playlist.EditableComponents()
{
  return type metadata accessor for Playlist.EditableComponents();
}

uint64_t Playlist.editableComponents.getter()
{
  return Playlist.editableComponents.getter();
}

uint64_t Playlist.tracksTiledArtwork.getter()
{
  return Playlist.tracksTiledArtwork.getter();
}

uint64_t type metadata accessor for Playlist.Folder()
{
  return type metadata accessor for Playlist.Folder();
}

uint64_t type metadata accessor for Playlist.Variant()
{
  return type metadata accessor for Playlist.Variant();
}

uint64_t Playlist.isOwner.getter()
{
  return Playlist.isOwner.getter();
}

uint64_t Playlist.variant.getter()
{
  return Playlist.variant.getter();
}

uint64_t Playlist.isPublic.getter()
{
  return Playlist.isPublic.getter();
}

uint64_t Playlist.catalogID.getter()
{
  return Playlist.catalogID.getter();
}

uint64_t Playlist.curatorName.getter()
{
  return Playlist.curatorName.getter();
}

uint64_t Playlist.description.getter()
{
  return Playlist.description.getter();
}

uint64_t Playlist.id.getter()
{
  return Playlist.id.getter();
}

uint64_t Playlist.url.getter()
{
  return Playlist.url.getter();
}

uint64_t Playlist.name.getter()
{
  return Playlist.name.getter();
}

uint64_t type metadata accessor for Playlist.Entry.InternalItem()
{
  return type metadata accessor for Playlist.Entry.InternalItem();
}

uint64_t Playlist.Entry.internalItem.getter()
{
  return Playlist.Entry.internalItem.getter();
}

uint64_t Playlist.Entry.catalogID.getter()
{
  return Playlist.Entry.catalogID.getter();
}

uint64_t Playlist.Entry.description.getter()
{
  return Playlist.Entry.description.getter();
}

uint64_t type metadata accessor for Playlist.Entry.Item()
{
  return type metadata accessor for Playlist.Entry.Item();
}

uint64_t Playlist.Entry.item.getter()
{
  return Playlist.Entry.item.getter();
}

uint64_t type metadata accessor for Playlist.Entry()
{
  return type metadata accessor for Playlist.Entry();
}

uint64_t Playlist.tracks.getter()
{
  return Playlist.tracks.getter();
}

uint64_t Playlist.artwork.getter()
{
  return Playlist.artwork.getter();
}

uint64_t Playlist.entries.getter()
{
  return Playlist.entries.getter();
}

uint64_t type metadata accessor for Playlist()
{
  return type metadata accessor for Playlist();
}

uint64_t RadioShow.url.getter()
{
  return RadioShow.url.getter();
}

uint64_t type metadata accessor for RadioShow()
{
  return type metadata accessor for RadioShow();
}

uint64_t static PHPickerFilter.images.getter()
{
  return static PHPickerFilter.images.getter();
}

uint64_t type metadata accessor for PHPickerFilter()
{
  return type metadata accessor for PHPickerFilter();
}

uint64_t PHPickerResult.itemProvider.getter()
{
  return PHPickerResult.itemProvider.getter();
}

uint64_t PHPickerResult.assetIdentifier.getter()
{
  return PHPickerResult.assetIdentifier.getter();
}

uint64_t type metadata accessor for PHPickerResult()
{
  return type metadata accessor for PHPickerResult();
}

uint64_t PHPickerConfiguration.init(photoLibrary:)()
{
  return PHPickerConfiguration.init(photoLibrary:)();
}

uint64_t type metadata accessor for PHPickerConfiguration.AssetRepresentationMode()
{
  return type metadata accessor for PHPickerConfiguration.AssetRepresentationMode();
}

uint64_t PHPickerConfiguration.preferredAssetRepresentationMode.setter()
{
  return PHPickerConfiguration.preferredAssetRepresentationMode.setter();
}

uint64_t PHPickerConfiguration.filter.setter()
{
  return PHPickerConfiguration.filter.setter();
}

uint64_t type metadata accessor for PHPickerConfiguration()
{
  return type metadata accessor for PHPickerConfiguration();
}

uint64_t static AppStore.requestReview(in:)()
{
  return static AppStore.requestReview(in:)();
}

uint64_t dispatch thunk of HashFunction.update(bufferPointer:)()
{
  return dispatch thunk of HashFunction.update(bufferPointer:)();
}

uint64_t dispatch thunk of HashFunction.finalize()()
{
  return dispatch thunk of HashFunction.finalize()();
}

uint64_t dispatch thunk of HashFunction.init()()
{
  return dispatch thunk of HashFunction.init()();
}

uint64_t type metadata accessor for SHA256Digest()
{
  return type metadata accessor for SHA256Digest();
}

uint64_t type metadata accessor for SHA256()
{
  return type metadata accessor for SHA256();
}

uint64_t type metadata accessor for SHA512()
{
  return type metadata accessor for SHA512();
}

uint64_t type metadata accessor for Insecure.MD5()
{
  return type metadata accessor for Insecure.MD5();
}

uint64_t Set.init()()
{
  return Set.init()();
}

uint64_t BinaryFloatingPoint.formatted<A>(_:)()
{
  return BinaryFloatingPoint.formatted<A>(_:)();
}

NSDictionary __swiftcall Dictionary._bridgeToObjectiveC()()
{
  return (NSDictionary)Dictionary._bridgeToObjectiveC()();
}

uint64_t static Dictionary._conditionallyBridgeFromObjectiveC(_:result:)()
{
  return static Dictionary._conditionallyBridgeFromObjectiveC(_:result:)();
}

uint64_t static Dictionary._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t Dictionary.description.getter()
{
  return Dictionary.description.getter();
}

uint64_t Dictionary.removeValue(forKey:)()
{
  return Dictionary.removeValue(forKey:)();
}

uint64_t Dictionary.init(dictionaryLiteral:)()
{
  return Dictionary.init(dictionaryLiteral:)();
}

uint64_t type metadata accessor for Dictionary()
{
  return type metadata accessor for Dictionary();
}

uint64_t Dictionary.subscript.modify()
{
  return Dictionary.subscript.modify();
}

uint64_t Dictionary.subscript.getter()
{
  return Dictionary.subscript.getter();
}

uint64_t Dictionary.subscript.setter()
{
  return Dictionary.subscript.setter();
}

uint64_t dispatch thunk of static FloatingPoint./ infix(_:_:)()
{
  return dispatch thunk of static FloatingPoint./ infix(_:_:)();
}

uint64_t dispatch thunk of Hashable._rawHashValue(seed:)()
{
  return dispatch thunk of Hashable._rawHashValue(seed:)();
}

uint64_t dispatch thunk of Hashable.hash(into:)()
{
  return dispatch thunk of Hashable.hash(into:)();
}

uint64_t Character.isWhitespace.getter()
{
  return Character.isWhitespace.getter();
}

uint64_t Character.isPunctuation.getter()
{
  return Character.isPunctuation.getter();
}

uint64_t BidirectionalCollection.difference<A>(from:by:)()
{
  return BidirectionalCollection.difference<A>(from:by:)();
}

uint64_t BidirectionalCollection<>.difference<A>(from:)()
{
  return BidirectionalCollection<>.difference<A>(from:)();
}

uint64_t BidirectionalCollection<>.joined(separator:)()
{
  return BidirectionalCollection<>.joined(separator:)();
}

uint64_t dispatch thunk of static Comparable.> infix(_:_:)()
{
  return dispatch thunk of static Comparable.> infix(_:_:)();
}

uint64_t dispatch thunk of static Comparable.< infix(_:_:)()
{
  return dispatch thunk of static Comparable.< infix(_:_:)();
}

uint64_t dispatch thunk of static Comparable.<= infix(_:_:)()
{
  return dispatch thunk of static Comparable.<= infix(_:_:)();
}

uint64_t type metadata accessor for ClosedRange()
{
  return type metadata accessor for ClosedRange();
}

uint64_t dispatch thunk of static Equatable.== infix(_:_:)()
{
  return dispatch thunk of static Equatable.== infix(_:_:)();
}

uint64_t String.init(bytesNoCopy:length:encoding:freeWhenDone:)()
{
  return String.init(bytesNoCopy:length:encoding:freeWhenDone:)();
}

uint64_t String.LocalizationValue.init(stringLiteral:)()
{
  return String.LocalizationValue.init(stringLiteral:)();
}

uint64_t String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)()
{
  return String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)();
}

Swift::Void __swiftcall String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(Swift::String a1)
{
}

Swift::Void __swiftcall String.LocalizationValue.StringInterpolation.appendLiteral(_:)(Swift::String a1)
{
}

uint64_t String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)()
{
  return String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
}

uint64_t type metadata accessor for String.LocalizationValue.StringInterpolation()
{
  return type metadata accessor for String.LocalizationValue.StringInterpolation();
}

uint64_t String.LocalizationValue.init(stringInterpolation:)()
{
  return String.LocalizationValue.init(stringInterpolation:)();
}

uint64_t type metadata accessor for String.LocalizationValue()
{
  return type metadata accessor for String.LocalizationValue();
}

NSString __swiftcall String._bridgeToObjectiveC()()
{
  return (NSString)String._bridgeToObjectiveC()();
}

uint64_t static String.localizedStringWithFormat(_:_:)()
{
  return static String.localizedStringWithFormat(_:_:)();
}

uint64_t static String._forceBridgeFromObjectiveC(_:result:)()
{
  return static String._forceBridgeFromObjectiveC(_:result:)();
}

uint64_t static String._conditionallyBridgeFromObjectiveC(_:result:)()
{
  return static String._conditionallyBridgeFromObjectiveC(_:result:)();
}

uint64_t static String._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t String.data(using:allowLossyConversion:)()
{
  return String.data(using:allowLossyConversion:)();
}

uint64_t String.init(data:encoding:)()
{
  return String.init(data:encoding:)();
}

uint64_t static String.Encoding.utf8.getter()
{
  return static String.Encoding.utf8.getter();
}

uint64_t type metadata accessor for String.Encoding()
{
  return type metadata accessor for String.Encoding();
}

uint64_t String.init(localized:defaultValue:table:bundle:locale:comment:)()
{
  return String.init(localized:defaultValue:table:bundle:locale:comment:)();
}

uint64_t String.init(localized:table:bundle:locale:comment:)()
{
  return String.init(localized:table:bundle:locale:comment:)();
}

Swift::String __swiftcall String.init(_:)(NSString a1)
{
  uint64_t v1 = String.init(_:)(a1);
  result._object = v2;
  result._uint64_t countAndFlagsBits = v1;
  return result;
}

uint64_t String.init<A>(describing:)()
{
  return String.init<A>(describing:)();
}

Swift::String __swiftcall String.lowercased()()
{
  uint64_t v0 = String.lowercased()();
  result._object = v1;
  result._uint64_t countAndFlagsBits = v0;
  return result;
}

uint64_t String.init<A>(reflecting:)()
{
  return String.init<A>(reflecting:)();
}

uint64_t String.utf8CString.getter()
{
  return String.utf8CString.getter();
}

uint64_t static String._fromSubstring(_:)()
{
  return static String._fromSubstring(_:)();
}

uint64_t static String._uncheckedFromUTF8(_:)()
{
  return static String._uncheckedFromUTF8(_:)();
}

uint64_t String.hash(into:)()
{
  return String.hash(into:)();
}

uint64_t String.Index.init<A>(utf16Offset:in:)()
{
  return String.Index.init<A>(utf16Offset:in:)();
}

uint64_t String.Index.samePosition(in:)()
{
  return String.Index.samePosition(in:)();
}

uint64_t String.count.getter()
{
  return String.count.getter();
}

uint64_t String.index(after:)()
{
  return String.index(after:)();
}

uint64_t String.index(before:)()
{
  return String.index(before:)();
}

uint64_t String.index(_:offsetBy:limitedBy:)()
{
  return String.index(_:offsetBy:limitedBy:)();
}

Swift::Void __swiftcall String.append(contentsOf:)(Swift::String contentsOf)
{
}

uint64_t String.append(contentsOf:)()
{
  return String.append(contentsOf:)();
}

uint64_t String.append<A>(contentsOf:)()
{
  return String.append<A>(contentsOf:)();
}

Swift::Void __swiftcall String.append(_:)(Swift::String a1)
{
}

{
  String.append(_:)(a1._countAndFlagsBits, a1._object);
}

Swift::String_optional __swiftcall String.Iterator.next()()
{
  uint64_t v0 = String.Iterator.next()();
  result.value._object = v1;
  result.value._uint64_t countAndFlagsBits = v0;
  return result;
}

Swift::Int __swiftcall String.UTF8View._foreignCount()()
{
  return String.UTF8View._foreignCount()();
}

uint64_t String.UTF8View._foreignIndex(after:)()
{
  return String.UTF8View._foreignIndex(after:)();
}

uint64_t String.UTF8View._foreignIndex(_:offsetBy:)()
{
  return String.UTF8View._foreignIndex(_:offsetBy:)();
}

uint64_t String.UTF8View._foreignDistance(from:to:)()
{
  return String.UTF8View._foreignDistance(from:to:)();
}

uint64_t String.UTF8View._foreignSubscript(position:)()
{
  return String.UTF8View._foreignSubscript(position:)();
}

uint64_t String.UTF16View.count.getter()
{
  return String.UTF16View.count.getter();
}

uint64_t String.UTF16View.index(_:offsetBy:)()
{
  return String.UTF16View.index(_:offsetBy:)();
}

uint64_t String.UTF16View.distance(from:to:)()
{
  return String.UTF16View.distance(from:to:)();
}

Swift::Bool __swiftcall String.hasPrefix(_:)(Swift::String a1)
{
  return String.hasPrefix(_:)(a1._countAndFlagsBits, a1._object);
}

Swift::String __swiftcall String.init(repeating:count:)(Swift::String repeating, Swift::Int count)
{
  uint64_t v2 = String.init(repeating:count:)(repeating._countAndFlagsBits, repeating._object, count);
  result._object = v3;
  result._uint64_t countAndFlagsBits = v2;
  return result;
}

uint64_t String.subscript.getter()
{
  return String.subscript.getter();
}

{
  return String.subscript.getter();
}

uint64_t String.init<A>(_:)()
{
  return String.init<A>(_:)();
}

uint64_t dispatch thunk of Sequence.makeIterator()()
{
  return dispatch thunk of Sequence.makeIterator()();
}

uint64_t dispatch thunk of Sequence.underestimatedCount.getter()
{
  return dispatch thunk of Sequence.underestimatedCount.getter();
}

uint64_t Sequence.compactMap<A>(_:)()
{
  return Sequence.compactMap<A>(_:)();
}

uint64_t Sequence.enumerated()()
{
  return Sequence.enumerated()();
}

uint64_t Sequence.withContiguousStorageIfAvailable<A>(_:)()
{
  return Sequence.withContiguousStorageIfAvailable<A>(_:)();
}

uint64_t Sequence.first(where:)()
{
  return Sequence.first(where:)();
}

uint64_t Sequence.filter(_:)()
{
  return Sequence.filter(_:)();
}

uint64_t Sequence.reduce<A>(_:_:)()
{
  return Sequence.reduce<A>(_:_:)();
}

uint64_t Sequence.sorted(by:)()
{
  return Sequence.sorted(by:)();
}

uint64_t Sequence.flatMap<A>(_:)()
{
  return Sequence.flatMap<A>(_:)();
}

uint64_t Sequence.forEach(_:)()
{
  return Sequence.forEach(_:)();
}

uint64_t Sequence.dropLast(_:)()
{
  return Sequence.dropLast(_:)();
}

uint64_t Sequence<>.contains(_:)()
{
  return Sequence<>.contains(_:)();
}

uint64_t Sequence<>.joined(separator:)()
{
  return Sequence<>.joined(separator:)();
}

uint64_t dispatch thunk of RawRepresentable.rawValue.getter()
{
  return dispatch thunk of RawRepresentable.rawValue.getter();
}

uint64_t RawRepresentable<>.encode(to:)()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t RawRepresentable<>.init(from:)()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t specialized Array._makeUniqueAndReserveCapacityIfNotUnique()()
{
  return specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
}

NSArray __swiftcall Array._bridgeToObjectiveC()()
{
  return (NSArray)Array._bridgeToObjectiveC()();
}

uint64_t static Array._conditionallyBridgeFromObjectiveC(_:result:)()
{
  return static Array._conditionallyBridgeFromObjectiveC(_:result:)();
}

uint64_t static Array._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Array._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t Array.description.getter()
{
  return Array.description.getter();
}

uint64_t specialized Array._endMutation()()
{
  return specialized Array._endMutation()();
}

uint64_t static Array._adoptStorage(_:count:)()
{
  return static Array._adoptStorage(_:count:)();
}

uint64_t Array._checkSubscript(_:wasNativeTypeChecked:)()
{
  return Array._checkSubscript(_:wasNativeTypeChecked:)();
}

uint64_t specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)()
{
  return specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t static Array.+ infix(_:_:)()
{
  return static Array.+ infix(_:_:)();
}

Swift::Void __swiftcall Array._makeMutableAndUnique()()
{
}

uint64_t static Array._allocateUninitialized(_:)()
{
  return static Array._allocateUninitialized(_:)();
}

uint64_t static Array._allocateBufferUninitialized(minimumCapacity:)()
{
  return static Array._allocateBufferUninitialized(minimumCapacity:)();
}

Swift::Bool __swiftcall Array._hoistableIsNativeTypeChecked()()
{
  return Array._hoistableIsNativeTypeChecked()();
}

uint64_t specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)()
{
  return specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

uint64_t Array.count.getter()
{
  return Array.count.getter();
}

uint64_t Array.append<A>(contentsOf:)()
{
  return Array.append<A>(contentsOf:)();
}

uint64_t Array.append(_:)()
{
  return Array.append(_:)();
}

uint64_t Array.insert(_:at:)()
{
  return Array.insert(_:at:)();
}

uint64_t Array.remove(at:)()
{
  return Array.remove(at:)();
}

uint64_t Array.endIndex.getter()
{
  return Array.endIndex.getter();
}

uint64_t type metadata accessor for Array()
{
  return type metadata accessor for Array();
}

uint64_t Array.init<A>(_:)()
{
  return Array.init<A>(_:)();
}

uint64_t Array.subscript.getter()
{
  return Array.subscript.getter();
}

NSNumber __swiftcall Bool._bridgeToObjectiveC()()
{
  return (NSNumber)Bool._bridgeToObjectiveC()();
}

uint64_t dispatch thunk of Actor.unownedExecutor.getter()
{
  return dispatch thunk of Actor.unownedExecutor.getter();
}

uint64_t CheckedContinuation.resume(throwing:)()
{
  return CheckedContinuation.resume(throwing:)();
}

uint64_t CheckedContinuation.resume(returning:)()
{
  return CheckedContinuation.resume(returning:)();
}

uint64_t type metadata accessor for CheckedContinuation()
{
  return type metadata accessor for CheckedContinuation();
}

uint64_t TaskGroup.makeAsyncIterator()()
{
  return TaskGroup.makeAsyncIterator()();
}

uint64_t static MainActor.shared.getter()
{
  return static MainActor.shared.getter();
}

uint64_t type metadata accessor for MainActor()
{
  return type metadata accessor for MainActor();
}

uint64_t static TaskPriority.userInitiated.getter()
{
  return static TaskPriority.userInitiated.getter();
}

uint64_t static TaskPriority.low.getter()
{
  return static TaskPriority.low.getter();
}

uint64_t TaskPriority.rawValue.getter()
{
  return TaskPriority.rawValue.getter();
}

uint64_t type metadata accessor for TaskPriority()
{
  return type metadata accessor for TaskPriority();
}

uint64_t AsyncStream.Continuation.onTermination.setter()
{
  return AsyncStream.Continuation.onTermination.setter();
}

uint64_t AsyncStream.Continuation.yield(_:)()
{
  return AsyncStream.Continuation.yield(_:)();
}

Swift::Void __swiftcall AsyncStream.Continuation.finish()()
{
}

uint64_t AsyncStream.init(_:bufferingPolicy:_:)()
{
  return AsyncStream.init(_:bufferingPolicy:_:)();
}

Swift::Void __swiftcall Task.cancel()()
{
}

uint64_t static Task<>.isCancelled.getter()
{
  return static Task<>.isCancelled.getter();
}

uint64_t ThrowingTaskGroup.makeAsyncIterator()()
{
  return ThrowingTaskGroup.makeAsyncIterator()();
}

uint64_t type metadata accessor for ThrowingTaskGroup.Iterator()
{
  return type metadata accessor for ThrowingTaskGroup.Iterator();
}

uint64_t type metadata accessor for ThrowingTaskGroup()
{
  return type metadata accessor for ThrowingTaskGroup();
}

uint64_t dispatch thunk of AsyncSequence.makeAsyncIterator()()
{
  return dispatch thunk of AsyncSequence.makeAsyncIterator()();
}

NSNumber __swiftcall Double._bridgeToObjectiveC()()
{
  return (NSNumber)Double._bridgeToObjectiveC()();
}

uint64_t static Double._conditionallyBridgeFromObjectiveC(_:result:)()
{
  return static Double._conditionallyBridgeFromObjectiveC(_:result:)();
}

uint64_t Double.description.getter()
{
  return Double.description.getter();
}

uint64_t Double.write<A>(to:)()
{
  return Double.write<A>(to:)();
}

NSNumber __swiftcall Float._bridgeToObjectiveC()()
{
  return (NSNumber)Float._bridgeToObjectiveC()();
}

uint64_t static Float._forceBridgeFromObjectiveC(_:result:)()
{
  return static Float._forceBridgeFromObjectiveC(_:result:)();
}

uint64_t static Float._conditionallyBridgeFromObjectiveC(_:result:)()
{
  return static Float._conditionallyBridgeFromObjectiveC(_:result:)();
}

uint64_t static Float._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Float._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t Float.write<A>(to:)()
{
  return Float.write<A>(to:)();
}

NSSet __swiftcall Set._bridgeToObjectiveC()()
{
  return (NSSet)Set._bridgeToObjectiveC()();
}

uint64_t static Set._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Set._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t Set.description.getter()
{
  return Set.description.getter();
}

uint64_t Set.init(minimumCapacity:)()
{
  return Set.init(minimumCapacity:)();
}

uint64_t Set.insert(_:)()
{
  return Set.insert(_:)();
}

uint64_t Set.Iterator.init(_cocoa:)()
{
  return Set.Iterator.init(_cocoa:)();
}

uint64_t type metadata accessor for Set()
{
  return type metadata accessor for Set();
}

uint64_t Set.init<A>(_:)()
{
  return Set.init<A>(_:)();
}

NSNumber __swiftcall Int._bridgeToObjectiveC()()
{
  return (NSNumber)Int._bridgeToObjectiveC()();
}

uint64_t static Int._conditionallyBridgeFromObjectiveC(_:result:)()
{
  return static Int._conditionallyBridgeFromObjectiveC(_:result:)();
}

uint64_t dispatch thunk of static Numeric.* infix(_:_:)()
{
  return dispatch thunk of static Numeric.* infix(_:_:)();
}

uint64_t RandomAccessCollection<>.indices.getter()
{
  return RandomAccessCollection<>.indices.getter();
}

uint64_t dispatch thunk of Collection.startIndex.getter()
{
  return dispatch thunk of Collection.startIndex.getter();
}

uint64_t dispatch thunk of Collection.count.getter()
{
  return dispatch thunk of Collection.count.getter();
}

uint64_t dispatch thunk of Collection.distance(from:to:)()
{
  return dispatch thunk of Collection.distance(from:to:)();
}

uint64_t dispatch thunk of Collection.endIndex.getter()
{
  return dispatch thunk of Collection.endIndex.getter();
}

uint64_t dispatch thunk of Collection.formIndex(after:)()
{
  return dispatch thunk of Collection.formIndex(after:)();
}

uint64_t Collection.firstIndex(where:)()
{
  return Collection.firstIndex(where:)();
}

uint64_t Collection.isEmpty.getter()
{
  return Collection.isEmpty.getter();
}

uint64_t Collection<>.firstIndex(of:)()
{
  return Collection<>.firstIndex(of:)();
}

uint64_t dispatch thunk of Collection.subscript.read()
{
  return dispatch thunk of Collection.subscript.read();
}

uint64_t RangeReplaceableCollection.removeFirst()()
{
  return RangeReplaceableCollection.removeFirst()();
}

uint64_t RangeReplaceableCollection<>.popLast()()
{
  return RangeReplaceableCollection<>.popLast()();
}

uint64_t RangeReplaceableCollection<>.removeAll(where:)()
{
  return RangeReplaceableCollection<>.removeAll(where:)();
}

uint64_t Range<>.init(_:in:)()
{
  return Range<>.init(_:in:)();
}

uint64_t Range.contains(_:)()
{
  return Range.contains(_:)();
}

uint64_t type metadata accessor for Range()
{
  return type metadata accessor for Range();
}

uint64_t static CACornerMask.all.getter()
{
  return static CACornerMask.all.getter();
}

Swift::Void __swiftcall CGContextRef.showGlyphs(_:at:)(Swift::OpaquePointer _, Swift::OpaquePointer at)
{
}

uint64_t CGContextRef.textPosition.getter()
{
  return CGContextRef.textPosition.getter();
}

uint64_t CGContextRef.textPosition.setter()
{
  return CGContextRef.textPosition.setter();
}

uint64_t CGContextRef.clip(using:)()
{
  return CGContextRef.clip(using:)();
}

uint64_t CGContextRef.fillPath(using:)()
{
  return CGContextRef.fillPath(using:)();
}

uint64_t UIEdgeInsets.horizontal.getter()
{
  return UIEdgeInsets.horizontal.getter();
}

uint64_t UIEdgeInsets.init(edges:inset:)()
{
  return UIEdgeInsets.init(edges:inset:)();
}

uint64_t UIHoverStyle.init<A>(effect:shape:)()
{
  return UIHoverStyle.init<A>(effect:shape:)();
}

__C::UIRectCorner __swiftcall UIRectCorner.init(_:)(CACornerMask a1)
{
  return (__C::UIRectCorner)UIRectCorner.init(_:)(a1);
}

uint64_t static os_log_type_t.info.getter()
{
  return static os_log_type_t.info.getter();
}

uint64_t static os_log_type_t.debug.getter()
{
  return static os_log_type_t.debug.getter();
}

uint64_t static os_log_type_t.error.getter()
{
  return static os_log_type_t.error.getter();
}

uint64_t static os_log_type_t.fault.getter()
{
  return static os_log_type_t.fault.getter();
}

uint64_t static os_log_type_t.default.getter()
{
  return static os_log_type_t.default.getter();
}

uint64_t NSItemProvider.registerGroupActivity<A>(preparationHandler:)()
{
  return NSItemProvider.registerGroupActivity<A>(preparationHandler:)();
}

uint64_t NSItemProvider.loadDataRepresentation(for:completionHandler:)()
{
  return NSItemProvider.loadDataRepresentation(for:completionHandler:)();
}

uint64_t UIPointerStyle.init(effect:shape:)()
{
  return UIPointerStyle.init(effect:shape:)();
}

UIBarButtonItem __swiftcall UIBarButtonItem.init(systemItem:primaryAction:menu:)(UIBarButtonSystemItem systemItem, UIAction_optional primaryAction, UIMenu_optional menu)
{
  return (UIBarButtonItem)UIBarButtonItem.init(systemItem:primaryAction:menu:)(systemItem, primaryAction.value.super.super.isa, *(void *)&primaryAction.is_nil, menu.value.super.super.isa, *(void *)&menu.is_nil);
}

uint64_t CGMutablePathRef.addPath(_:transform:)()
{
  return CGMutablePathRef.addPath(_:transform:)();
}

uint64_t CGMutablePathRef.addEllipse(in:transform:)()
{
  return CGMutablePathRef.addEllipse(in:transform:)();
}

uint64_t CGMutablePathRef.addRoundedRect(in:cornerWidth:cornerHeight:transform:)()
{
  return CGMutablePathRef.addRoundedRect(in:cornerWidth:cornerHeight:transform:)();
}

uint64_t CGMutablePathRef.move(to:transform:)()
{
  return CGMutablePathRef.move(to:transform:)();
}

uint64_t CGMutablePathRef.addLine(to:transform:)()
{
  return CGMutablePathRef.addLine(to:transform:)();
}

uint64_t UIViewController.registerForTraitChanges(_:action:)()
{
  return UIViewController.registerForTraitChanges(_:action:)();
}

uint64_t UIViewController.registerForTraitChanges<A>(_:handler:)()
{
  return UIViewController.registerForTraitChanges<A>(_:handler:)();
}

uint64_t static CGAffineTransform.== infix(_:_:)()
{
  return static CGAffineTransform.== infix(_:_:)();
}

uint64_t MPCPlaybackEngine.state<A>(for:)()
{
  return MPCPlaybackEngine.state<A>(for:)();
}

uint64_t MPCPlaybackIntent.isInGroupSession.setter()
{
  return MPCPlaybackIntent.isInGroupSession.setter();
}

uint64_t MPCPlayerResponse.playState(for:)()
{
  return MPCPlayerResponse.playState(for:)();
}

uint64_t static NSKeyedUnarchiver.unarchivedObject<A>(ofClass:from:)()
{
  return static NSKeyedUnarchiver.unarchivedObject<A>(ofClass:from:)();
}

uint64_t static NSKeyedUnarchiver.unarchivedObject(ofClasses:from:)()
{
  return static NSKeyedUnarchiver.unarchivedObject(ofClasses:from:)();
}

uint64_t OS_dispatch_group.notify(qos:flags:queue:execute:)()
{
  return OS_dispatch_group.notify(qos:flags:queue:execute:)();
}

uint64_t type metadata accessor for OS_dispatch_queue.Attributes()
{
  return type metadata accessor for OS_dispatch_queue.Attributes();
}

uint64_t OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)()
{
  return OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
}

uint64_t OS_dispatch_queue.asyncAfter(deadline:execute:)()
{
  return OS_dispatch_queue.asyncAfter(deadline:execute:)();
}

uint64_t type metadata accessor for OS_dispatch_queue.SchedulerOptions()
{
  return type metadata accessor for OS_dispatch_queue.SchedulerOptions();
}

uint64_t type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency()
{
  return type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
}

uint64_t static OS_dispatch_queue.main.getter()
{
  return static OS_dispatch_queue.main.getter();
}

uint64_t OS_dispatch_queue.async(group:qos:flags:execute:)()
{
  return OS_dispatch_queue.async(group:qos:flags:execute:)();
}

uint64_t OS_dispatch_queue.async(execute:)()
{
  return OS_dispatch_queue.async(execute:)();
}

uint64_t OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)()
{
  return OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
}

uint64_t static OS_dispatch_queue.global(qos:)()
{
  return static OS_dispatch_queue.global(qos:)();
}

uint64_t static UITraitCollection.systemTraitsAffectingColorAppearance.getter()
{
  return static UITraitCollection.systemTraitsAffectingColorAppearance.getter();
}

uint64_t type metadata accessor for OS_dispatch_source.TimerFlags()
{
  return type metadata accessor for OS_dispatch_source.TimerFlags();
}

uint64_t static OS_dispatch_source.makeTimerSource(flags:queue:)()
{
  return static OS_dispatch_source.makeTimerSource(flags:queue:)();
}

uint64_t OS_dispatch_source.setEventHandler(qos:flags:handler:)()
{
  return OS_dispatch_source.setEventHandler(qos:flags:handler:)();
}

Swift::Void __swiftcall OS_dispatch_source.cancel()()
{
}

Swift::Void __swiftcall OS_dispatch_source.resume()()
{
}

uint64_t static os_signpost_type_t.end.getter()
{
  return static os_signpost_type_t.end.getter();
}

uint64_t static os_signpost_type_t.begin.getter()
{
  return static os_signpost_type_t.begin.getter();
}

uint64_t MPStoreLyricsRequest.init(song:)()
{
  return MPStoreLyricsRequest.init(song:)();
}

uint64_t type metadata accessor for NSNotificationCenter.Notifications.Iterator()
{
  return type metadata accessor for NSNotificationCenter.Notifications.Iterator();
}

uint64_t type metadata accessor for NSNotificationCenter.Notifications()
{
  return type metadata accessor for NSNotificationCenter.Notifications();
}

uint64_t NSNotificationCenter.notifications(named:object:)()
{
  return NSNotificationCenter.notifications(named:object:)();
}

uint64_t type metadata accessor for NSNotificationCenter.Publisher()
{
  return type metadata accessor for NSNotificationCenter.Publisher();
}

uint64_t NSNotificationCenter.publisher(for:object:)()
{
  return NSNotificationCenter.publisher(for:object:)();
}

uint64_t OS_dispatch_semaphore.wait(timeout:)()
{
  return OS_dispatch_semaphore.wait(timeout:)();
}

Swift::Int __swiftcall OS_dispatch_semaphore.signal()()
{
  return OS_dispatch_semaphore.signal()();
}

uint64_t UIContentSizeCategory.isAccessibilityCategory.getter()
{
  return UIContentSizeCategory.isAccessibilityCategory.getter();
}

uint64_t static UIContentSizeCategory.< infix(_:_:)()
{
  return static UIContentSizeCategory.< infix(_:_:)();
}

uint64_t static UIContentSizeCategory.>= infix(_:_:)()
{
  return static UIContentSizeCategory.>= infix(_:_:)();
}

uint64_t UIContentSizeCategory.init(_:)()
{
  return UIContentSizeCategory.init(_:)();
}

uint64_t PHPickerViewController.init(configuration:)()
{
  return PHPickerViewController.init(configuration:)();
}

uint64_t PHPickerViewController.delegate.setter()
{
  return PHPickerViewController.delegate.setter();
}

uint64_t NSDirectionalEdgeInsets.horizontal.getter()
{
  return NSDirectionalEdgeInsets.horizontal.getter();
}

uint64_t NSDirectionalEdgeInsets.vertical.getter()
{
  return NSDirectionalEdgeInsets.vertical.getter();
}

uint64_t OS_dispatch_source_timer.schedule(deadline:repeating:leeway:)()
{
  return OS_dispatch_source_timer.schedule(deadline:repeating:leeway:)();
}

uint64_t UIPresentationController.registerForTraitChanges(_:action:)()
{
  return UIPresentationController.registerForTraitChanges(_:action:)();
}

uint64_t UISheetPresentationControllerDetent.resolvedValue(in:)()
{
  return UISheetPresentationControllerDetent.resolvedValue(in:)();
}

uint64_t static UISheetPresentationControllerDetent.custom(identifier:resolver:)()
{
  return static UISheetPresentationControllerDetent.custom(identifier:resolver:)();
}

uint64_t CGRect.centeringAlong(axes:in:)()
{
  return CGRect.centeringAlong(axes:in:)();
}

uint64_t CGRect.centeringAlong(axes:bounds:scale:)()
{
  return CGRect.centeringAlong(axes:bounds:scale:)();
}

uint64_t CGRect.applyingLayoutDirection(in:bounds:)()
{
  return CGRect.applyingLayoutDirection(in:bounds:)();
}

uint64_t CGRect.applyingLayoutDirection(_:inBounds:)()
{
  return CGRect.applyingLayoutDirection(_:inBounds:)();
}

uint64_t CGRect.inset(by:for:)()
{
  return CGRect.inset(by:for:)();
}

uint64_t CGRect.center.getter()
{
  return CGRect.center.getter();
}

uint64_t CGRect.offset(by:)()
{
  return CGRect.offset(by:)();
}

uint64_t CGSize.aspectRatio.getter()
{
  return CGSize.aspectRatio.getter();
}

uint64_t CGSize.description.getter()
{
  return CGSize.description.getter();
}

uint64_t CGSize.inset(by:)()
{
  return CGSize.inset(by:)();
}

uint64_t CGSize.scaled(_:)()
{
  return CGSize.scaled(_:)();
}

uint64_t static UIFont.preferredFont(forTextStyle:weight:)()
{
  return static UIFont.preferredFont(forTextStyle:weight:)();
}

uint64_t static UIFont.shortEmphasizedPreferredFont(forTextStyle:)()
{
  return static UIFont.shortEmphasizedPreferredFont(forTextStyle:)();
}

UIMenu __swiftcall UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(Swift::String title, Swift::String_optional subtitle, UIImage_optional image, UIMenuIdentifier_optional identifier, UIMenuOptions options, UIMenuElementSize preferredElementSize, Swift::OpaquePointer children)
{
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(title, subtitle, image, identifier, options, preferredElementSize, children);
}

uint64_t UIView.Corner.mask.getter()
{
  return UIView.Corner.mask.getter();
}

uint64_t static UIView.Corner.value(_:continuous:)()
{
  return static UIView.Corner.value(_:continuous:)();
}

uint64_t UIView.Corner.Radius.value(in:)()
{
  return UIView.Corner.Radius.value(in:)();
}

uint64_t type metadata accessor for UIView.Corner.Radius()
{
  return type metadata accessor for UIView.Corner.Radius();
}

uint64_t UIView.Corner.init(radius:mask:)()
{
  return UIView.Corner.init(radius:mask:)();
}

uint64_t UIView.Corner.radius.getter()
{
  return UIView.Corner.radius.getter();
}

uint64_t UIView.Corner.radius.setter()
{
  return UIView.Corner.radius.setter();
}

uint64_t static UIView.Corner.rounded.getter()
{
  return static UIView.Corner.rounded.getter();
}

uint64_t type metadata accessor for UIView.Corner()
{
  return type metadata accessor for UIView.Corner();
}

uint64_t UIView.corner.setter()
{
  return UIView.corner.setter();
}

uint64_t UIView.registerForTraitChanges(_:target:action:)()
{
  return UIView.registerForTraitChanges(_:target:action:)();
}

uint64_t UIView.registerForTraitChanges<A>(_:handler:)()
{
  return UIView.registerForTraitChanges<A>(_:handler:)();
}

uint64_t type metadata accessor for NSTimer.TimerPublisher()
{
  return type metadata accessor for NSTimer.TimerPublisher();
}

uint64_t static NSTimer.publish(every:tolerance:on:in:options:)()
{
  return static NSTimer.publish(every:tolerance:on:in:options:)();
}

uint64_t UIColor.init(_:)()
{
  return UIColor.init(_:)();
}

uint64_t UIImage.baselineOffsetFromBottom.getter()
{
  return UIImage.baselineOffsetFromBottom.getter();
}

NSNumber __swiftcall NSNumber.init(floatLiteral:)(Swift::Double floatLiteral)
{
  return (NSNumber)NSNumber.init(floatLiteral:)(floatLiteral);
}

NSNumber __swiftcall NSNumber.init(integerLiteral:)(Swift::Int integerLiteral)
{
  return (NSNumber)NSNumber.init(integerLiteral:)(integerLiteral);
}

Swift::Int __swiftcall NSObject._rawHashValue(seed:)(Swift::Int seed)
{
  return NSObject._rawHashValue(seed:)(seed);
}

uint64_t static NSObject.== infix(_:_:)()
{
  return static NSObject.== infix(_:_:)();
}

uint64_t NSObject.hash(into:)()
{
  return NSObject.hash(into:)();
}

uint64_t NSObject.hashValue.getter()
{
  return NSObject.hashValue.getter();
}

uint64_t UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)()
{
  return UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
}

uint64_t UIButton.Configuration.buttonSize.setter()
{
  return UIButton.Configuration.buttonSize.setter();
}

uint64_t type metadata accessor for UIButton.Configuration.CornerStyle()
{
  return type metadata accessor for UIButton.Configuration.CornerStyle();
}

uint64_t UIButton.Configuration.cornerStyle.setter()
{
  return UIButton.Configuration.cornerStyle.setter();
}

uint64_t UIButton.Configuration.baseBackgroundColor.setter()
{
  return UIButton.Configuration.baseBackgroundColor.setter();
}

uint64_t UIButton.Configuration.baseForegroundColor.setter()
{
  return UIButton.Configuration.baseForegroundColor.setter();
}

uint64_t type metadata accessor for UIButton.Configuration.Size()
{
  return type metadata accessor for UIButton.Configuration.Size();
}

uint64_t static UIButton.Configuration.gray()()
{
  return static UIButton.Configuration.gray()();
}

uint64_t UIButton.Configuration.image.setter()
{
  return UIButton.Configuration.image.setter();
}

uint64_t type metadata accessor for UIButton.Configuration()
{
  return type metadata accessor for UIButton.Configuration();
}

uint64_t UIButton.init(configuration:primaryAction:)()
{
  return UIButton.init(configuration:primaryAction:)();
}

uint64_t static UIOffset./ infix(_:_:)()
{
  return static UIOffset./ infix(_:_:)();
}

uint64_t _NSRange.description.getter()
{
  return _NSRange.description.getter();
}

__C::_NSRange_optional __swiftcall _NSRange.intersection(_:)(__C::_NSRange a1)
{
  Swift::Int v1 = _NSRange.intersection(_:)(a1.location, a1.length);
  result.value.length = v2;
  result.value.location = v1;
  result.is_nil = v3;
  return result;
}

uint64_t type metadata accessor for NSRunLoop.SchedulerOptions()
{
  return type metadata accessor for NSRunLoop.SchedulerOptions();
}

uint64_t NSScanner.scanUInt64(representation:)()
{
  return NSScanner.scanUInt64(representation:)();
}

uint64_t NSScanner.scanUpToCharacters(from:)()
{
  return NSScanner.scanUpToCharacters(from:)();
}

uint64_t type metadata accessor for NSScanner.NumberRepresentation()
{
  return type metadata accessor for NSScanner.NumberRepresentation();
}

uint64_t OS_os_log.signpostsEnabled.getter()
{
  return OS_os_log.signpostsEnabled.getter();
}

uint64_t static OS_os_log.default.getter()
{
  return static OS_os_log.default.getter();
}

uint64_t static OS_os_log.disabled.getter()
{
  return static OS_os_log.disabled.getter();
}

uint64_t OS_os_log.init(subsystem:category:)()
{
  return OS_os_log.init(subsystem:category:)();
}

uint64_t type metadata accessor for Optional()
{
  return type metadata accessor for Optional();
}

Swift::String __swiftcall Substring.lowercased()()
{
  uint64_t v0 = Substring.lowercased()();
  result._object = v1;
  result._uint64_t countAndFlagsBits = v0;
  return result;
}

uint64_t Substring.index(after:)()
{
  return Substring.index(after:)();
}

uint64_t Substring.index(_:offsetBy:)()
{
  return Substring.index(_:offsetBy:)();
}

uint64_t Substring.subscript.getter()
{
  return Substring.subscript.getter();
}

{
  return Substring.subscript.getter();
}

uint64_t Substring.init(_:)()
{
  return Substring.init(_:)();
}

uint64_t dispatch thunk of IteratorProtocol.next()()
{
  return dispatch thunk of IteratorProtocol.next()();
}

uint64_t UnsafeMutableRawBufferPointer.copyMemory(from:)()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t UnsafeMutableRawBufferPointer.subscript.setter()
{
  return UnsafeMutableRawBufferPointer.subscript.setter();
}

uint64_t StringProtocol.components(separatedBy:)()
{
  return StringProtocol.components(separatedBy:)();
}

uint64_t StringProtocol.components<A>(separatedBy:)()
{
  return StringProtocol.components<A>(separatedBy:)();
}

uint64_t StringProtocol.capitalized.getter()
{
  return StringProtocol.capitalized.getter();
}

uint64_t StringProtocol.rangeOfCharacter(from:options:range:)()
{
  return StringProtocol.rangeOfCharacter(from:options:range:)();
}

uint64_t StringProtocol.localizedLowercase.getter()
{
  return StringProtocol.localizedLowercase.getter();
}

uint64_t StringProtocol.trimmingCharacters(in:)()
{
  return StringProtocol.trimmingCharacters(in:)();
}

uint64_t StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)()
{
  return StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
}

uint64_t StringProtocol.range<A>(of:options:range:locale:)()
{
  return StringProtocol.range<A>(of:options:range:locale:)();
}

uint64_t StringProtocol.folding(options:locale:)()
{
  return StringProtocol.folding(options:locale:)();
}

uint64_t StringProtocol.padding<A>(toLength:withPad:startingAt:)()
{
  return StringProtocol.padding<A>(toLength:withPad:startingAt:)();
}

uint64_t StringProtocol.contains<A>(_:)()
{
  return StringProtocol.contains<A>(_:)();
}

uint64_t _bridgeAnyObjectToAny(_:)()
{
  return _bridgeAnyObjectToAny(_:)();
}

uint64_t dispatch thunk of SetAlgebra.isSuperset(of:)()
{
  return dispatch thunk of SetAlgebra.isSuperset(of:)();
}

uint64_t dispatch thunk of SetAlgebra.init<A>(_:)()
{
  return dispatch thunk of SetAlgebra.init<A>(_:)();
}

uint64_t _HashTable.previousHole(before:)()
{
  return _HashTable.previousHole(before:)();
}

uint64_t _HashTable.nextHole(atOrAfter:)()
{
  return _HashTable.nextHole(atOrAfter:)();
}

uint64_t __CocoaSet.makeIterator()()
{
  return __CocoaSet.makeIterator()();
}

uint64_t __CocoaSet.count.getter()
{
  return __CocoaSet.count.getter();
}

uint64_t __CocoaSet.member(for:)()
{
  return __CocoaSet.member(for:)();
}

uint64_t __CocoaSet.Iterator.next()()
{
  return __CocoaSet.Iterator.next()();
}

uint64_t __CocoaSet.contains(_:)()
{
  return __CocoaSet.contains(_:)();
}

Swift::Int __swiftcall AnyHashable._rawHashValue(seed:)(Swift::Int seed)
{
  return AnyHashable._rawHashValue(seed:)(seed);
}

uint64_t static AnyHashable.== infix(_:_:)()
{
  return static AnyHashable.== infix(_:_:)();
}

uint64_t AnyHashable.init<A>(_:)()
{
  return AnyHashable.init<A>(_:)();
}

uint64_t static _SetStorage.copy(original:)()
{
  return static _SetStorage.copy(original:)();
}

uint64_t static _SetStorage.resize(original:capacity:move:)()
{
  return static _SetStorage.resize(original:capacity:move:)();
}

uint64_t static _SetStorage.convert(_:capacity:)()
{
  return static _SetStorage.convert(_:capacity:)();
}

uint64_t static _SetStorage.allocate(capacity:)()
{
  return static _SetStorage.allocate(capacity:)();
}

uint64_t _StringGuts.foreignErrorCorrectedScalar(startingAt:)()
{
  return _StringGuts.foreignErrorCorrectedScalar(startingAt:)();
}

Swift::Void __swiftcall _StringGuts.grow(_:)(Swift::Int a1)
{
}

uint64_t _StringGuts.copyUTF8(into:)()
{
  return _StringGuts.copyUTF8(into:)();
}

uint64_t type metadata accessor for Zip2Sequence()
{
  return type metadata accessor for Zip2Sequence();
}

Swift::Void __swiftcall _ArrayBuffer._typeCheckSlowPath(_:)(Swift::Int a1)
{
}

uint64_t _ArrayBuffer._getElementSlowPath(_:)()
{
  return _ArrayBuffer._getElementSlowPath(_:)();
}

uint64_t specialized _ArrayBuffer._getElementSlowPath(_:)()
{
  return specialized _ArrayBuffer._getElementSlowPath(_:)();
}

uint64_t specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)()
{
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t DecodingError.Context.init(codingPath:debugDescription:underlyingError:)()
{
  return DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
}

uint64_t type metadata accessor for DecodingError()
{
  return type metadata accessor for DecodingError();
}

uint64_t _StringObject.sharedUTF8.getter()
{
  return _StringObject.sharedUTF8.getter();
}

uint64_t _decodeScalar(_:startingAt:)()
{
  return _decodeScalar(_:startingAt:)();
}

uint64_t _ArrayProtocol.filter(_:)()
{
  return _ArrayProtocol.filter(_:)();
}

uint64_t specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()()
{
  return specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
}

uint64_t specialized ContiguousArray._endMutation()()
{
  return specialized ContiguousArray._endMutation()();
}

Swift::Void __swiftcall ContiguousArray.reserveCapacity(_:)(Swift::Int a1)
{
}

uint64_t specialized ContiguousArray.reserveCapacity(_:)()
{
  return specialized ContiguousArray.reserveCapacity(_:)();
}

uint64_t specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)()
{
  return specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
}

uint64_t specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)()
{
  return specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

uint64_t ContiguousArray.count.getter()
{
  return ContiguousArray.count.getter();
}

uint64_t ContiguousArray.append(_:)()
{
  return ContiguousArray.append(_:)();
}

uint64_t ContiguousArray.init()()
{
  return ContiguousArray.init()();
}

uint64_t type metadata accessor for ContiguousArray()
{
  return type metadata accessor for ContiguousArray();
}

uint64_t type metadata accessor for ContinuousClock.Instant()
{
  return type metadata accessor for ContinuousClock.Instant();
}

uint64_t ContinuousClock.init()()
{
  return ContinuousClock.init()();
}

uint64_t type metadata accessor for ContinuousClock()
{
  return type metadata accessor for ContinuousClock();
}

uint64_t dispatch thunk of InstantProtocol.advanced(by:)()
{
  return dispatch thunk of InstantProtocol.advanced(by:)();
}

uint64_t _print_unlocked<A, B>(_:_:)()
{
  return _print_unlocked<A, B>(_:_:)();
}

uint64_t type metadata accessor for IndexingIterator()
{
  return type metadata accessor for IndexingIterator();
}

uint64_t _NativeDictionary.makeIterator()()
{
  return _NativeDictionary.makeIterator()();
}

uint64_t __CocoaDictionary.makeIterator()()
{
  return __CocoaDictionary.makeIterator()();
}

uint64_t __CocoaDictionary.count.getter()
{
  return __CocoaDictionary.count.getter();
}

uint64_t __CocoaDictionary.lookup(_:)()
{
  return __CocoaDictionary.lookup(_:)();
}

uint64_t __CocoaDictionary.Iterator.next()()
{
  return __CocoaDictionary.Iterator.next()();
}

uint64_t _assertionFailure(_:_:file:line:flags:)()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t _bridgeCocoaArray<A>(_:)()
{
  return _bridgeCocoaArray<A>(_:)();
}

uint64_t dispatch thunk of static AdditiveArithmetic.+ infix(_:_:)()
{
  return dispatch thunk of static AdditiveArithmetic.+ infix(_:_:)();
}

uint64_t dispatch thunk of static AdditiveArithmetic.- infix(_:_:)()
{
  return dispatch thunk of static AdditiveArithmetic.- infix(_:_:)();
}

uint64_t EnumeratedSequence.makeIterator()()
{
  return EnumeratedSequence.makeIterator()();
}

uint64_t EnumeratedSequence.Iterator.next()()
{
  return EnumeratedSequence.Iterator.next()();
}

uint64_t type metadata accessor for EnumeratedSequence.Iterator()
{
  return type metadata accessor for EnumeratedSequence.Iterator();
}

uint64_t type metadata accessor for EnumeratedSequence()
{
  return type metadata accessor for EnumeratedSequence();
}

uint64_t _CocoaArrayWrapper.endIndex.getter()
{
  return _CocoaArrayWrapper.endIndex.getter();
}

uint64_t _CocoaArrayWrapper.subscript.getter()
{
  return _CocoaArrayWrapper.subscript.getter();
}

uint64_t static _DictionaryStorage.copy(original:)()
{
  return static _DictionaryStorage.copy(original:)();
}

uint64_t static _DictionaryStorage.resize(original:capacity:move:)()
{
  return static _DictionaryStorage.resize(original:capacity:move:)();
}

uint64_t static _DictionaryStorage.convert(_:capacity:)()
{
  return static _DictionaryStorage.convert(_:capacity:)();
}

uint64_t static _DictionaryStorage.allocate(capacity:)()
{
  return static _DictionaryStorage.allocate(capacity:)();
}

uint64_t _fatalErrorMessage(_:_:file:line:flags:)()
{
  return _fatalErrorMessage(_:_:file:line:flags:)();
}

uint64_t static CollectionDifference.Index.== infix(_:_:)()
{
  return static CollectionDifference.Index.== infix(_:_:)();
}

uint64_t type metadata accessor for CollectionDifference.Change()
{
  return type metadata accessor for CollectionDifference.Change();
}

uint64_t type metadata accessor for CollectionDifference()
{
  return type metadata accessor for CollectionDifference();
}

uint64_t _SwiftNewtypeWrapper<>._toCustomAnyHashable()()
{
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t dispatch thunk of static _ObjectiveCBridgeable._conditionallyBridgeFromObjectiveC(_:result:)()
{
  return dispatch thunk of static _ObjectiveCBridgeable._conditionallyBridgeFromObjectiveC(_:result:)();
}

Swift::Int __swiftcall _findStringSwitchCase(cases:string:)(Swift::OpaquePointer cases, Swift::String string)
{
  return _findStringSwitchCase(cases:string:)(cases._rawValue, string._countAndFlagsBits, string._object);
}

uint64_t KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)()
{
  return KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
}

uint64_t KeyedDecodingContainer.codingPath.getter()
{
  return KeyedDecodingContainer.codingPath.getter();
}

uint64_t KeyedDecodingContainer.decodeIfPresent(_:forKey:)()
{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

uint64_t KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)()
{
  return KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
}

uint64_t KeyedDecodingContainer.decode(_:forKey:)()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t KeyedDecodingContainer.decode<A>(_:forKey:)()
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)();
}

uint64_t KeyedDecodingContainer.allKeys.getter()
{
  return KeyedDecodingContainer.allKeys.getter();
}

uint64_t KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)()
{
  return KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
}

uint64_t KeyedEncodingContainer.encodeIfPresent(_:forKey:)()
{
  return KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
}

{
  return KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
}

uint64_t KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)()
{
  return KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
}

uint64_t KeyedEncodingContainer.encode(_:forKey:)()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t KeyedEncodingContainer.encode<A>(_:forKey:)()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:)();
}

Swift::Int __swiftcall _minimumMergeRunLength(_:)(Swift::Int a1)
{
  return _minimumMergeRunLength(_:)(a1);
}

uint64_t _stringCompareInternal(_:_:_:_:expecting:)()
{
  return _stringCompareInternal(_:_:_:_:expecting:)();
}

uint64_t AsyncCompactMapSequence.base.getter()
{
  return AsyncCompactMapSequence.base.getter();
}

uint64_t AsyncCompactMapSequence.Iterator.baseIterator.modify()
{
  return AsyncCompactMapSequence.Iterator.baseIterator.modify();
}

uint64_t AsyncCompactMapSequence.Iterator.transform.getter()
{
  return AsyncCompactMapSequence.Iterator.transform.getter();
}

uint64_t AsyncCompactMapSequence.Iterator.init(_:transform:)()
{
  return AsyncCompactMapSequence.Iterator.init(_:transform:)();
}

uint64_t AsyncCompactMapSequence.transform.getter()
{
  return AsyncCompactMapSequence.transform.getter();
}

uint64_t AsyncCompactMapSequence.init(_:transform:)()
{
  return AsyncCompactMapSequence.init(_:transform:)();
}

uint64_t dispatch thunk of CustomStringConvertible.description.getter()
{
  return dispatch thunk of CustomStringConvertible.description.getter();
}

uint64_t type metadata accessor for _ContiguousArrayStorage()
{
  return type metadata accessor for _ContiguousArrayStorage();
}

uint64_t DefaultStringInterpolation.appendInterpolation<A>(_:)()
{
  return DefaultStringInterpolation.appendInterpolation<A>(_:)();
}

{
  return DefaultStringInterpolation.appendInterpolation<A>(_:)();
}

uint64_t _forceBridgeFromObjectiveC<A>(_:_:)()
{
  return _forceBridgeFromObjectiveC<A>(_:_:)();
}

uint64_t dispatch thunk of ExpressibleByIntegerLiteral.init(integerLiteral:)()
{
  return dispatch thunk of ExpressibleByIntegerLiteral.init(integerLiteral:)();
}

uint64_t _bridgeAnythingToObjectiveC<A>(_:)()
{
  return _bridgeAnythingToObjectiveC<A>(_:)();
}

uint64_t _stringCompareWithSmolCheck(_:_:expecting:)()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t dispatch thunk of CustomDebugStringConvertible.debugDescription.getter()
{
  return dispatch thunk of CustomDebugStringConvertible.debugDescription.getter();
}

uint64_t dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter()
{
  return dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
}

uint64_t type metadata accessor for __ContiguousArrayStorageBase()
{
  return type metadata accessor for __ContiguousArrayStorageBase();
}

uint64_t _findStringSwitchCaseWithCache(cases:string:cache:)()
{
  return _findStringSwitchCaseWithCache(cases:string:cache:)();
}

uint64_t dispatch thunk of _ExpressibleByBuiltinIntegerLiteral.init(_builtinIntegerLiteral:)()
{
  return dispatch thunk of _ExpressibleByBuiltinIntegerLiteral.init(_builtinIntegerLiteral:)();
}

uint64_t _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)()
{
  return _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)();
}

uint64_t max<A>(_:_:)()
{
  return max<A>(_:_:)();
}

uint64_t min<A>(_:_:)()
{
  return min<A>(_:_:)();
}

uint64_t zip<A, B>(_:_:)()
{
  return zip<A, B>(_:_:)();
}

uint64_t ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)()
{
  return ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)()
{
  return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t dispatch thunk of Clock.now.getter()
{
  return dispatch thunk of Clock.now.getter();
}

uint64_t Error.localizedDescription.getter()
{
  return Error.localizedDescription.getter();
}

uint64_t dispatch thunk of Error._code.getter()
{
  return dispatch thunk of Error._code.getter();
}

NSNumber __swiftcall Int64._bridgeToObjectiveC()()
{
  return (NSNumber)Int64._bridgeToObjectiveC()();
}

uint64_t print<A>(_:separator:terminator:to:)()
{
  return print<A>(_:separator:terminator:to:)();
}

uint64_t static Hasher._hash(seed:_:)()
{
  return static Hasher._hash(seed:_:)();
}

uint64_t Hasher.init(_seed:)()
{
  return Hasher.init(_seed:)();
}

Swift::Void __swiftcall Hasher._combine(_:)(Swift::UInt a1)
{
}

Swift::Void __swiftcall Hasher._combine(_:)(Swift::UInt8 a1)
{
}

Swift::Void __swiftcall Hasher._combine(_:)(Swift::UInt32 a1)
{
}

Swift::Void __swiftcall Hasher._combine(_:)(Swift::UInt64 a1)
{
}

Swift::Int __swiftcall Hasher._finalize()()
{
  return Hasher._finalize()();
}

uint64_t type metadata accessor for Result()
{
  return type metadata accessor for Result();
}

NSNumber __swiftcall UInt64._bridgeToObjectiveC()()
{
  return (NSNumber)UInt64._bridgeToObjectiveC()();
}

uint64_t static UInt64._conditionallyBridgeFromObjectiveC(_:result:)()
{
  return static UInt64._conditionallyBridgeFromObjectiveC(_:result:)();
}

uint64_t dispatch thunk of Decoder.container<A>(keyedBy:)()
{
  return dispatch thunk of Decoder.container<A>(keyedBy:)();
}

uint64_t dispatch thunk of Encoder.container<A>(keyedBy:)()
{
  return dispatch thunk of Encoder.container<A>(keyedBy:)();
}

uint64_t dispatch thunk of OptionSet.init(rawValue:)()
{
  return dispatch thunk of OptionSet.init(rawValue:)();
}

uint64_t _typeName(_:qualified:)()
{
  return _typeName(_:qualified:)();
}

uint64_t AnalyticsSendEventLazy()
{
  return _AnalyticsSendEventLazy();
}

OSStatus AudioFormatGetProperty(AudioFormatPropertyID inPropertyID, UInt32 inSpecifierSize, const void *inSpecifier, UInt32 *ioPropertyDataSize, void *outPropertyData)
{
  return _AudioFormatGetProperty(inPropertyID, inSpecifierSize, inSpecifier, ioPropertyDataSize, outPropertyData);
}

CFTimeInterval CACurrentMediaTime(void)
{
  return _CACurrentMediaTime();
}

CATransform3D *__cdecl CATransform3DMakeAffineTransform(CATransform3D *__return_ptr retstr, CGAffineTransform *m)
{
  return _CATransform3DMakeAffineTransform(retstr, m);
}

const UInt8 *__cdecl CFDataGetBytePtr(CFDataRef theData)
{
  return _CFDataGetBytePtr(theData);
}

void CFNotificationCenterAddObserver(CFNotificationCenterRef center, const void *observer, CFNotificationCallback callBack, CFStringRef name, const void *object, CFNotificationSuspensionBehavior suspensionBehavior)
{
}

CFNotificationCenterRef CFNotificationCenterGetDarwinNotifyCenter(void)
{
  return _CFNotificationCenterGetDarwinNotifyCenter();
}

void CFNotificationCenterPostNotification(CFNotificationCenterRef center, CFNotificationName name, const void *object, CFDictionaryRef userInfo, Boolean deliverImmediately)
{
}

void CFNotificationCenterRemoveObserver(CFNotificationCenterRef center, const void *observer, CFNotificationName name, const void *object)
{
}

CGAffineTransform *__cdecl CGAffineTransformConcat(CGAffineTransform *__return_ptr retstr, CGAffineTransform *t1, CGAffineTransform *t2)
{
  return _CGAffineTransformConcat(retstr, t1, t2);
}

CGAffineTransform *__cdecl CGAffineTransformInvert(CGAffineTransform *__return_ptr retstr, CGAffineTransform *t)
{
  return _CGAffineTransformInvert(retstr, t);
}

CGAffineTransform *__cdecl CGAffineTransformMakeRotation(CGAffineTransform *__return_ptr retstr, CGFloat angle)
{
  return _CGAffineTransformMakeRotation(retstr, angle);
}

CGAffineTransform *__cdecl CGAffineTransformMakeScale(CGAffineTransform *__return_ptr retstr, CGFloat sx, CGFloat sy)
{
  return _CGAffineTransformMakeScale(retstr, sx, sy);
}

CGAffineTransform *__cdecl CGAffineTransformMakeTranslation(CGAffineTransform *__return_ptr retstr, CGFloat tx, CGFloat ty)
{
  return _CGAffineTransformMakeTranslation(retstr, tx, ty);
}

CGAffineTransform *__cdecl CGAffineTransformScale(CGAffineTransform *__return_ptr retstr, CGAffineTransform *t, CGFloat sx, CGFloat sy)
{
  return _CGAffineTransformScale(retstr, t, sx, sy);
}

CGColorSpaceRef CGColorSpaceCreateDeviceRGB(void)
{
  return _CGColorSpaceCreateDeviceRGB();
}

void CGContextAddPath(CGContextRef c, CGPathRef path)
{
}

void CGContextClipToMask(CGContextRef c, CGRect rect, CGImageRef mask)
{
}

void CGContextDrawConicGradient(CGContextRef c, CGGradientRef gradient, CGPoint center, CGFloat angle)
{
}

void CGContextDrawLinearGradient(CGContextRef c, CGGradientRef gradient, CGPoint startPoint, CGPoint endPoint, CGGradientDrawingOptions options)
{
}

void CGContextDrawRadialGradient(CGContextRef c, CGGradientRef gradient, CGPoint startCenter, CGFloat startRadius, CGPoint endCenter, CGFloat endRadius, CGGradientDrawingOptions options)
{
}

void CGContextFillEllipseInRect(CGContextRef c, CGRect rect)
{
}

void CGContextFillRect(CGContextRef c, CGRect rect)
{
}

void CGContextRestoreGState(CGContextRef c)
{
}

void CGContextSaveGState(CGContextRef c)
{
}

void CGContextScaleCTM(CGContextRef c, CGFloat sx, CGFloat sy)
{
}

void CGContextSetBlendMode(CGContextRef c, CGBlendMode mode)
{
}

void CGContextSetFillColorWithColor(CGContextRef c, CGColorRef color)
{
}

void CGContextSetLineWidth(CGContextRef c, CGFloat width)
{
}

void CGContextTranslateCTM(CGContextRef c, CGFloat tx, CGFloat ty)
{
}

CFDataRef CGDataProviderCopyData(CGDataProviderRef provider)
{
  return _CGDataProviderCopyData(provider);
}

CGDataProviderRef CGDataProviderCreateWithCFData(CFDataRef data)
{
  return _CGDataProviderCreateWithCFData(data);
}

CGGradientRef CGGradientCreateWithColors(CGColorSpaceRef space, CFArrayRef colors, const CGFloat *locations)
{
  return _CGGradientCreateWithColors(space, colors, locations);
}

CGImageRef CGImageCreateWithImageInRect(CGImageRef image, CGRect rect)
{
  return _CGImageCreateWithImageInRect(image, rect);
}

size_t CGImageGetBitsPerPixel(CGImageRef image)
{
  return _CGImageGetBitsPerPixel(image);
}

size_t CGImageGetBytesPerRow(CGImageRef image)
{
  return _CGImageGetBytesPerRow(image);
}

CGDataProviderRef CGImageGetDataProvider(CGImageRef image)
{
  return _CGImageGetDataProvider(image);
}

CGPDFDocumentRef CGPDFDocumentCreateWithProvider(CGDataProviderRef provider)
{
  return _CGPDFDocumentCreateWithProvider(provider);
}

CGPDFPageRef CGPDFDocumentGetPage(CGPDFDocumentRef document, size_t pageNumber)
{
  return _CGPDFDocumentGetPage(document, pageNumber);
}

CGMutablePathRef CGPathCreateMutable(void)
{
  return _CGPathCreateMutable();
}

CGPathRef CGPathCreateWithRect(CGRect rect, const CGAffineTransform *transform)
{
  return _CGPathCreateWithRect(rect, transform);
}

CGPoint CGPointApplyAffineTransform(CGPoint point, CGAffineTransform *t)
{
  CGPoint v4 = _CGPointApplyAffineTransform(point, t);
  double y = v4.y;
  double x = v4.x;
  result.double y = y;
  result.double x = x;
  return result;
}

CGRect CGRectApplyAffineTransform(CGRect rect, CGAffineTransform *t)
{
  return _CGRectApplyAffineTransform(rect, t);
}

BOOL CGRectContainsPoint(CGRect rect, CGPoint point)
{
  return _CGRectContainsPoint(rect, point);
}

BOOL CGRectEqualToRect(CGRect rect1, CGRect rect2)
{
  return _CGRectEqualToRect(rect1, rect2);
}

CGFloat CGRectGetHeight(CGRect rect)
{
  return _CGRectGetHeight(rect);
}

CGFloat CGRectGetMaxX(CGRect rect)
{
  return _CGRectGetMaxX(rect);
}

CGFloat CGRectGetMaxY(CGRect rect)
{
  return _CGRectGetMaxY(rect);
}

CGFloat CGRectGetMidX(CGRect rect)
{
  return _CGRectGetMidX(rect);
}

CGFloat CGRectGetMidY(CGRect rect)
{
  return _CGRectGetMidY(rect);
}

CGFloat CGRectGetMinX(CGRect rect)
{
  return _CGRectGetMinX(rect);
}

CGFloat CGRectGetMinY(CGRect rect)
{
  return _CGRectGetMinY(rect);
}

CGFloat CGRectGetWidth(CGRect rect)
{
  return _CGRectGetWidth(rect);
}

CGRect CGRectInset(CGRect rect, CGFloat dx, CGFloat dy)
{
  return _CGRectInset(rect, dx, dy);
}

CGRect CGRectIntegral(CGRect rect)
{
  return _CGRectIntegral(rect);
}

BOOL CGRectIntersectsRect(CGRect rect1, CGRect rect2)
{
  return _CGRectIntersectsRect(rect1, rect2);
}

BOOL CGRectIsEmpty(CGRect rect)
{
  return _CGRectIsEmpty(rect);
}

CGRect CGRectOffset(CGRect rect, CGFloat dx, CGFloat dy)
{
  return _CGRectOffset(rect, dx, dy);
}

CGRect CGRectUnion(CGRect r1, CGRect r2)
{
  return _CGRectUnion(r1, r2);
}

BOOL CGSizeEqualToSize(CGSize size1, CGSize size2)
{
  return _CGSizeEqualToSize(size1, size2);
}

uint64_t CTFontCopySystemUIFontExcessiveLineHeightCharacterSet()
{
  return _CTFontCopySystemUIFontExcessiveLineHeightCharacterSet();
}

void CTFrameDraw(CTFrameRef frame, CGContextRef context)
{
}

void CTFrameGetLineOrigins(CTFrameRef frame, CFRange range, CGPoint *origins)
{
}

CFArrayRef CTFrameGetLines(CTFrameRef frame)
{
  return _CTFrameGetLines(frame);
}

CTFrameRef CTFramesetterCreateFrame(CTFramesetterRef framesetter, CFRange stringRange, CGPathRef path, CFDictionaryRef frameAttributes)
{
  return _CTFramesetterCreateFrame(framesetter, stringRange, path, frameAttributes);
}

CTFramesetterRef CTFramesetterCreateWithAttributedString(CFAttributedStringRef attrString)
{
  return _CTFramesetterCreateWithAttributedString(attrString);
}

CGSize CTFramesetterSuggestFrameSizeWithConstraints(CTFramesetterRef framesetter, CFRange stringRange, CFDictionaryRef frameAttributes, CGSize constraints, CFRange *fitRange)
{
  CGSize v7 = _CTFramesetterSuggestFrameSizeWithConstraints(framesetter, stringRange, frameAttributes, constraints, fitRange);
  double height = v7.height;
  double width = v7.width;
  result.double height = height;
  result.double width = width;
  return result;
}

void CTLineDraw(CTLineRef line, CGContextRef context)
{
}

CGRect CTLineGetBoundsWithOptions(CTLineRef line, CTLineBoundsOptions options)
{
  return _CTLineGetBoundsWithOptions(line, options);
}

CFIndex CTLineGetGlyphCount(CTLineRef line)
{
  return _CTLineGetGlyphCount(line);
}

CGFloat CTLineGetOffsetForStringIndex(CTLineRef line, CFIndex charIndex, CGFloat *secondaryOffset)
{
  return _CTLineGetOffsetForStringIndex(line, charIndex, secondaryOffset);
}

CFRange CTLineGetStringRange(CTLineRef line)
{
  CFRange StringRange = _CTLineGetStringRange(line);
  CFIndex length = StringRange.length;
  CFIndex location = StringRange.location;
  result.CFIndex length = length;
  result.CFIndex location = location;
  return result;
}

CTParagraphStyleRef CTParagraphStyleCreate(const CTParagraphStyleSetting *settings, size_t settingCount)
{
  return _CTParagraphStyleCreate(settings, settingCount);
}

void CTRunDraw(CTRunRef run, CGContextRef context, CFRange range)
{
}

CFIndex CTRunGetGlyphCount(CTRunRef run)
{
  return _CTRunGetGlyphCount(run);
}

void CTRunGetPositions(CTRunRef run, CFRange range, CGPoint *buffer)
{
}

CTRunStatus CTRunGetStatus(CTRunRef run)
{
  return _CTRunGetStatus(run);
}

void CTRunGetStringIndices(CTRunRef run, CFRange range, CFIndex *buffer)
{
}

CFRange CTRunGetStringRange(CTRunRef run)
{
  CFRange StringRange = _CTRunGetStringRange(run);
  CFIndex length = StringRange.length;
  CFIndex location = StringRange.location;
  result.CFIndex length = length;
  result.CFIndex location = location;
  return result;
}

double CTRunGetTypographicBounds(CTRunRef run, CFRange range, CGFloat *ascent, CGFloat *descent, CGFloat *leading)
{
  return _CTRunGetTypographicBounds(run, range, ascent, descent, leading);
}

uint64_t FigOutputMonitorIsScreenProbablyBeingRecorded()
{
  return _FigOutputMonitorIsScreenProbablyBeingRecorded();
}

uint64_t ICEnvironmentNetworkTypeIsWiFi()
{
  return _ICEnvironmentNetworkTypeIsWiFi();
}

uint64_t MGCopyAnswer()
{
  return _MGCopyAnswer();
}

uint64_t MGGetProductType()
{
  return _MGGetProductType();
}

uint64_t MPCRadioPlaybackErrorGetCategory()
{
  return _MPCRadioPlaybackErrorGetCategory();
}

uint64_t MPNSStringFromQueueLoadAction()
{
  return _MPNSStringFromQueueLoadAction();
}

uint64_t MPStoreItemMetadataStringNormalizeStoreIDValue()
{
  return _MPStoreItemMetadataStringNormalizeStoreIDValue();
}

uint64_t MRGroupSessionJoinSessionWithToken()
{
  return _MRGroupSessionJoinSessionWithToken();
}

uint64_t MRGroupSessionLeaveSessionWithIdentifier()
{
  return _MRGroupSessionLeaveSessionWithIdentifier();
}

uint64_t MSVDeviceSupportsVocalAttenuation()
{
  return _MSVDeviceSupportsVocalAttenuation();
}

uint64_t MSVLogAddStateHandler()
{
  return _MSVLogAddStateHandler();
}

uint64_t MobileGestalt_get_cellularDataCapability()
{
  return _MobileGestalt_get_cellularDataCapability();
}

uint64_t MobileGestalt_get_current_device()
{
  return _MobileGestalt_get_current_device();
}

uint64_t MobileGestalt_get_deviceClassNumber()
{
  return _MobileGestalt_get_deviceClassNumber();
}

uint64_t MobileGestalt_get_hasExtendedColorDisplay()
{
  return _MobileGestalt_get_hasExtendedColorDisplay();
}

uint64_t MobileGestalt_get_hevcDecoder8BitSupported()
{
  return _MobileGestalt_get_hevcDecoder8BitSupported();
}

uint64_t MobileGestalt_get_wapiCapability()
{
  return _MobileGestalt_get_wapiCapability();
}

Class NSClassFromString(NSString *aClassName)
{
  return _NSClassFromString(aClassName);
}

uint64_t NSExtensionMain()
{
  return _NSExtensionMain();
}

NSString *__cdecl NSStringFromClass(Class aClass)
{
  return _NSStringFromClass(aClass);
}

void UIGraphicsBeginImageContextWithOptions(CGSize size, BOOL opaque, CGFloat scale)
{
}

void UIGraphicsEndImageContext(void)
{
}

CGContextRef UIGraphicsGetCurrentContext(void)
{
  return _UIGraphicsGetCurrentContext();
}

UIImage *UIGraphicsGetImageFromCurrentImageContext(void)
{
  return _UIGraphicsGetImageFromCurrentImageContext();
}

NSData *__cdecl UIImageJPEGRepresentation(UIImage *image, CGFloat compressionQuality)
{
  return _UIImageJPEGRepresentation(image, compressionQuality);
}

NSData *__cdecl UIImagePNGRepresentation(UIImage *image)
{
  return _UIImagePNGRepresentation(image);
}

uint64_t UIRoundToScale()
{
  return _UIRoundToScale();
}

uint64_t UIViewIgnoresTouchEvents()
{
  return _UIViewIgnoresTouchEvents();
}

Boolean UTTypeConformsTo(CFStringRef inUTI, CFStringRef inConformsToUTI)
{
  return _UTTypeConformsTo(inUTI, inConformsToUTI);
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return __Block_copy(aBlock);
}

void _Block_object_dispose(const void *a1, const int a2)
{
}

void _Block_release(const void *aBlock)
{
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_signpost_emit_with_name_impl(void *dso, os_log_t log, os_signpost_type_t type, os_signpost_id_t spid, const char *name, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _sl_dlopen()
{
  return __sl_dlopen();
}

uint64_t _swift_isClassOrObjCExistentialType()
{
  return __swift_isClassOrObjCExistentialType();
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return __swift_stdlib_bridgeErrorToNSError();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return __swift_stdlib_reportUnimplementedInitializer();
}

void bzero(void *a1, size_t a2)
{
}

Ivar class_getInstanceVariable(Class cls, const char *name)
{
  return _class_getInstanceVariable(cls, name);
}

void dispatch_async(dispatch_queue_t queue, dispatch_block_t block)
{
}

dispatch_group_t dispatch_group_create(void)
{
  return _dispatch_group_create();
}

void dispatch_group_enter(dispatch_group_t group)
{
}

void dispatch_group_leave(dispatch_group_t group)
{
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
}

dispatch_queue_attr_t dispatch_queue_attr_make_with_qos_class(dispatch_queue_attr_t attr, dispatch_qos_class_t qos_class, int relative_priority)
{
  return _dispatch_queue_attr_make_with_qos_class(attr, qos_class, relative_priority);
}

dispatch_queue_t dispatch_queue_create(const char *label, dispatch_queue_attr_t attr)
{
  return _dispatch_queue_create(label, attr);
}

dispatch_semaphore_t dispatch_semaphore_create(intptr_t value)
{
  return _dispatch_semaphore_create(value);
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
}

long double fmod(long double __x, long double __y)
{
  return _fmod(__x, __y);
}

void free(void *a1)
{
}

float log2f(float a1)
{
  return _log2f(a1);
}

uint64_t lround(long double __x)
{
  return _lround(__x);
}

void *__cdecl malloc(size_t __size)
{
  return _malloc(__size);
}

size_t malloc_size(const void *ptr)
{
  return _malloc_size(ptr);
}

int memcmp(const void *__s1, const void *__s2, size_t __n)
{
  return _memcmp(__s1, __s2, __n);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return _memcpy(__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return _memmove(__dst, __src, __len);
}

id objc_alloc(Class a1)
{
  return _[a1 alloc];
}

id objc_allocWithZone(Class a1)
{
  return _objc_allocWithZone(a1);
}

uint64_t objc_alloc_init()
{
  return _objc_alloc_init();
}

id objc_autoreleaseReturnValue(id a1)
{
  return _objc_autoreleaseReturnValue(a1);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return _objc_claimAutoreleasedReturnValue();
}

void objc_enumerationMutation(id obj)
{
}

id objc_getAssociatedObject(id object, const void *key)
{
  return _objc_getAssociatedObject(object, key);
}

Class objc_getClass(const char *name)
{
  return _objc_getClass(name);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return _[a1 a2];
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return _objc_msgSendSuper2(a1, a2);
}

uint64_t objc_opt_class()
{
  return _objc_opt_class();
}

uint64_t objc_opt_isKindOfClass()
{
  return _objc_opt_isKindOfClass();
}

uint64_t self
{
  return _self;
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return _objc_retain(a1);
}

id objc_retainAutorelease(id a1)
{
  return _a1;
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return _a1;
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return _a1;
}

id objc_retainBlock(id a1)
{
  return _objc_retainBlock(a1);
}

void objc_setAssociatedObject(id object, const void *key, id value, void *policy)
{
}

void objc_setProperty_nonatomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_storeStrong(id *location, id obj)
{
}

id object_getIvar(id a1, Ivar a2)
{
  return _object_getIvar(a1, a2);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return _os_log_type_enabled(oslog, type);
}

void os_unfair_lock_assert_not_owner(const os_unfair_lock *lock)
{
}

void os_unfair_lock_assert_owner(const os_unfair_lock *lock)
{
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
}

uint64_t os_variant_has_internal_content()
{
  return _os_variant_has_internal_content();
}

uint64_t rootless_check_datavault_flag()
{
  return _rootless_check_datavault_flag();
}

uint64_t rootless_convert_to_datavault()
{
  return _rootless_convert_to_datavault();
}

uint64_t rootless_mkdir_datavault()
{
  return _rootless_mkdir_datavault();
}

uint64_t swift_allocBox()
{
  return _swift_allocBox();
}

uint64_t swift_allocError()
{
  return _swift_allocError();
}

uint64_t swift_allocObject()
{
  return _swift_allocObject();
}

uint64_t swift_arrayDestroy()
{
  return _swift_arrayDestroy();
}

uint64_t swift_arrayInitWithCopy()
{
  return _swift_arrayInitWithCopy();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return _swift_arrayInitWithTakeBackToFront();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return _swift_arrayInitWithTakeFrontToBack();
}

uint64_t swift_beginAccess()
{
  return _swift_beginAccess();
}

uint64_t swift_bridgeObjectRelease()
{
  return _swift_bridgeObjectRelease();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return _swift_bridgeObjectRelease_n();
}

uint64_t swift_bridgeObjectRetain()
{
  return _swift_bridgeObjectRetain();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return _swift_bridgeObjectRetain_n();
}

uint64_t swift_checkMetadataState()
{
  return _swift_checkMetadataState();
}

uint64_t swift_conformsToProtocol2()
{
  return _swift_conformsToProtocol2();
}

uint64_t swift_continuation_init()
{
  return _swift_continuation_init();
}

uint64_t swift_continuation_resume()
{
  return _swift_continuation_resume();
}

uint64_t swift_continuation_throwingResume()
{
  return _swift_continuation_throwingResume();
}

uint64_t swift_continuation_throwingResumeWithError()
{
  return _swift_continuation_throwingResumeWithError();
}

uint64_t swift_deallocClassInstance()
{
  return _swift_deallocClassInstance();
}

uint64_t swift_deallocObject()
{
  return _swift_deallocObject();
}

uint64_t swift_deallocPartialClassInstance()
{
  return _swift_deallocPartialClassInstance();
}

uint64_t swift_deallocUninitializedObject()
{
  return _swift_deallocUninitializedObject();
}

uint64_t swift_defaultActor_destroy()
{
  return _swift_defaultActor_destroy();
}

uint64_t swift_defaultActor_initialize()
{
  return _swift_defaultActor_initialize();
}

uint64_t swift_deletedMethodError()
{
  return _swift_deletedMethodError();
}

uint64_t swift_dynamicCast()
{
  return _swift_dynamicCast();
}

uint64_t swift_dynamicCastClass()
{
  return _swift_dynamicCastClass();
}

uint64_t swift_dynamicCastMetatype()
{
  return _swift_dynamicCastMetatype();
}

uint64_t swift_dynamicCastObjCClass()
{
  return _swift_dynamicCastObjCClass();
}

uint64_t swift_dynamicCastObjCClassUnconditional()
{
  return _swift_dynamicCastObjCClassUnconditional();
}

uint64_t swift_dynamicCastObjCProtocolConditional()
{
  return _swift_dynamicCastObjCProtocolConditional();
}

uint64_t swift_dynamicCastUnknownClass()
{
  return _swift_dynamicCastUnknownClass();
}

uint64_t swift_endAccess()
{
  return _swift_endAccess();
}

uint64_t swift_errorRelease()
{
  return _swift_errorRelease();
}

uint64_t swift_errorRetain()
{
  return _swift_errorRetain();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return _swift_getAssociatedConformanceWitness();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return _swift_getAssociatedTypeWitness();
}

uint64_t swift_getAtKeyPath()
{
  return _swift_getAtKeyPath();
}

uint64_t swift_getDynamicType()
{
  return _swift_getDynamicType();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return _swift_getEnumCaseMultiPayload();
}

uint64_t swift_getErrorValue()
{
  return _swift_getErrorValue();
}

uint64_t swift_getForeignTypeMetadata()
{
  return _swift_getForeignTypeMetadata();
}

uint64_t swift_getFunctionTypeMetadata2()
{
  return _swift_getFunctionTypeMetadata2();
}

uint64_t swift_getGenericMetadata()
{
  return _swift_getGenericMetadata();
}

uint64_t swift_getKeyPath()
{
  return _swift_getKeyPath();
}

uint64_t swift_getMetatypeMetadata()
{
  return _swift_getMetatypeMetadata();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return _swift_getObjCClassFromMetadata();
}

uint64_t swift_getObjCClassMetadata()
{
  return _swift_getObjCClassMetadata();
}

uint64_t swift_getObjectType()
{
  return _swift_getObjectType();
}

uint64_t swift_getOpaqueTypeConformance2()
{
  return _swift_getOpaqueTypeConformance2();
}

uint64_t swift_getOpaqueTypeMetadata2()
{
  return _swift_getOpaqueTypeMetadata2();
}

uint64_t swift_getSingletonMetadata()
{
  return _swift_getSingletonMetadata();
}

uint64_t swift_getTupleTypeLayout2()
{
  return _swift_getTupleTypeLayout2();
}

uint64_t swift_getTupleTypeLayout3()
{
  return _swift_getTupleTypeLayout3();
}

uint64_t swift_getTupleTypeMetadata()
{
  return _swift_getTupleTypeMetadata();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return _swift_getTupleTypeMetadata2();
}

uint64_t swift_getTupleTypeMetadata3()
{
  return _swift_getTupleTypeMetadata3();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return _swift_getTypeByMangledNameInContext2();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return _swift_getTypeByMangledNameInContextInMetadataState2();
}

uint64_t swift_getWitnessTable()
{
  return _swift_getWitnessTable();
}

uint64_t swift_initClassMetadata2()
{
  return _swift_initClassMetadata2();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return _swift_initEnumMetadataMultiPayload();
}

uint64_t swift_initEnumMetadataSingleCase()
{
  return _swift_initEnumMetadataSingleCase();
}

uint64_t swift_initEnumMetadataSinglePayload()
{
  return _swift_initEnumMetadataSinglePayload();
}

uint64_t swift_initStackObject()
{
  return _swift_initStackObject();
}

uint64_t swift_initStaticObject()
{
  return _swift_initStaticObject();
}

uint64_t swift_initStructMetadata()
{
  return _swift_initStructMetadata();
}

uint64_t swift_isClassType()
{
  return _swift_isClassType();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return _swift_isEscapingClosureAtFileLocation();
}

uint64_t swift_isUniquelyReferenced_native()
{
  return _swift_isUniquelyReferenced_native();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return _swift_isUniquelyReferenced_nonNull_bridgeObject();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return _swift_isUniquelyReferenced_nonNull_native();
}

uint64_t swift_makeBoxUnique()
{
  return _swift_makeBoxUnique();
}

uint64_t swift_once()
{
  return _swift_once();
}

uint64_t swift_projectBox()
{
  return _swift_projectBox();
}

uint64_t swift_release()
{
  return _swift_release();
}

uint64_t swift_release_n()
{
  return _swift_release_n();
}

uint64_t swift_retain()
{
  return _swift_retain();
}

uint64_t swift_retain_n()
{
  return _swift_retain_n();
}

uint64_t swift_setDeallocating()
{
  return _swift_setDeallocating();
}

uint64_t swift_slowAlloc()
{
  return _swift_slowAlloc();
}

uint64_t swift_slowDealloc()
{
  return _swift_slowDealloc();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return _swift_stdlib_isStackAllocationSafe();
}

uint64_t swift_stdlib_random()
{
  return _swift_stdlib_random();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return _swift_storeEnumTagMultiPayload();
}

uint64_t swift_taskGroup_addPending()
{
  return _swift_taskGroup_addPending();
}

uint64_t swift_task_alloc()
{
  return _swift_task_alloc();
}

uint64_t swift_task_create()
{
  return _swift_task_create();
}

uint64_t swift_task_dealloc()
{
  return _swift_task_dealloc();
}

uint64_t swift_unknownObjectRelease()
{
  return _swift_unknownObjectRelease();
}

uint64_t swift_unknownObjectRelease_n()
{
  return _swift_unknownObjectRelease_n();
}

uint64_t swift_unknownObjectRetain()
{
  return _swift_unknownObjectRetain();
}

uint64_t swift_unknownObjectRetain_n()
{
  return _swift_unknownObjectRetain_n();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return _swift_unknownObjectWeakAssign();
}

uint64_t swift_unknownObjectWeakCopyAssign()
{
  return _swift_unknownObjectWeakCopyAssign();
}

uint64_t swift_unknownObjectWeakCopyInit()
{
  return _swift_unknownObjectWeakCopyInit();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return _swift_unknownObjectWeakDestroy();
}

uint64_t swift_unknownObjectWeakInit()
{
  return _swift_unknownObjectWeakInit();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return _swift_unknownObjectWeakLoadStrong();
}

uint64_t swift_unknownObjectWeakTakeAssign()
{
  return _swift_unknownObjectWeakTakeAssign();
}

uint64_t swift_unknownObjectWeakTakeInit()
{
  return _swift_unknownObjectWeakTakeInit();
}

uint64_t swift_updateClassMetadata2()
{
  return _swift_updateClassMetadata2();
}

uint64_t swift_weakAssign()
{
  return _swift_weakAssign();
}

uint64_t swift_weakCopyAssign()
{
  return _swift_weakCopyAssign();
}

uint64_t swift_weakCopyInit()
{
  return _swift_weakCopyInit();
}

uint64_t swift_weakDestroy()
{
  return _swift_weakDestroy();
}

uint64_t swift_weakInit()
{
  return _swift_weakInit();
}

uint64_t swift_weakLoadStrong()
{
  return _swift_weakLoadStrong();
}

uint64_t swift_weakTakeAssign()
{
  return _swift_weakTakeAssign();
}

uint64_t swift_weakTakeInit()
{
  return _swift_weakTakeInit();
}

uint64_t swift_willThrow()
{
  return _swift_willThrow();
}

uint64_t swift_willThrowTypedImpl()
{
  return _swift_willThrowTypedImpl();
}

void vDSP_ctoz(const DSPComplex *__C, vDSP_Stride __IC, const DSPSplitComplex *__Z, vDSP_Stride __IZ, vDSP_Length __N)
{
}

void vDSP_vmul(const float *__A, vDSP_Stride __IA, const float *__B, vDSP_Stride __IB, float *__C, vDSP_Stride __IC, vDSP_Length __N)
{
}

void vDSP_vsmul(const float *__A, vDSP_Stride __IA, const float *__B, float *__C, vDSP_Stride __IC, vDSP_Length __N)
{
}

void vDSP_zvmags(const DSPSplitComplex *__A, vDSP_Stride __IA, float *__C, vDSP_Stride __IC, vDSP_Length __N)
{
}

void vvsqrtf(float *a1, const float *a2, const int *a3)
{
}

id objc_msgSend__monogramImageForToken_fittingSize_scale_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_monogramImageForToken:fittingSize:scale:completionHandler:");
}

id objc_msgSend_addObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObject:");
}

id objc_msgSend_arrayWithCapacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithCapacity:");
}

id objc_msgSend_arrayWithObjects_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithObjects:count:");
}

id objc_msgSend_avatarImageForContacts_scope_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "avatarImageForContacts:scope:");
}

id objc_msgSend_camera(void *a1, const char *a2, ...)
{
  return _[a1 camera];
}

id objc_msgSend_cancel(void *a1, const char *a2, ...)
{
  return _[a1 cancel];
}

id objc_msgSend_contactWithDisplayName_emailOrPhoneNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contactWithDisplayName:emailOrPhoneNumber:");
}

id objc_msgSend_coordinate(void *a1, const char *a2, ...)
{
  return _[a1 coordinate];
}

id objc_msgSend_copy(void *a1, const char *a2, ...)
{
  return _[a1 copy];
}

id objc_msgSend_count(void *a1, const char *a2, ...)
{
  return _[a1 count];
}

id objc_msgSend_countByEnumeratingWithState_objects_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countByEnumeratingWithState:objects:count:");
}

id objc_msgSend_currentHandler(void *a1, const char *a2, ...)
{
  return _[a1 currentHandler];
}

id objc_msgSend_darwinNotificationReceived(void *a1, const char *a2, ...)
{
  return _[a1 darwinNotificationReceived];
}

id objc_msgSend_defaultCenter(void *a1, const char *a2, ...)
{
  return _[a1 defaultCenter];
}

id objc_msgSend_defaultSettings(void *a1, const char *a2, ...)
{
  return _[a1 defaultSettings];
}

id objc_msgSend_destinationScale(void *a1, const char *a2, ...)
{
  return _[a1 destinationScale];
}

id objc_msgSend_didUpdateResults(void *a1, const char *a2, ...)
{
  return _[a1 didUpdateResults];
}

id objc_msgSend_fittingSize(void *a1, const char *a2, ...)
{
  return _[a1 fittingSize];
}

id objc_msgSend_fullName(void *a1, const char *a2, ...)
{
  return _[a1 fullName];
}

id objc_msgSend_handleFailureInFunction_file_lineNumber_description_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleFailureInFunction:file:lineNumber:description:");
}

id objc_msgSend_hash(void *a1, const char *a2, ...)
{
  return _[a1 hash];
}

id objc_msgSend_initWithFullName_rightToLeft_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFullName:rightToLeft:");
}

id objc_msgSend_initWithMapItems_mapSize_useSnapshotService_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithMapItems:mapSize:useSnapshotService:");
}

id objc_msgSend_initWithSettings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSettings:");
}

id objc_msgSend_isEqualToString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToString:");
}

id objc_msgSend_languageCode(void *a1, const char *a2, ...)
{
  return _[a1 languageCode];
}

id objc_msgSend_length(void *a1, const char *a2, ...)
{
  return _[a1 length];
}

id objc_msgSend_loadingQueue(void *a1, const char *a2, ...)
{
  return _[a1 loadingQueue];
}

id objc_msgSend_localizedTriggerPhraseForLanguageCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedTriggerPhraseForLanguageCode:");
}

id objc_msgSend_location(void *a1, const char *a2, ...)
{
  return _[a1 location];
}

id objc_msgSend_mainScreen(void *a1, const char *a2, ...)
{
  return _[a1 mainScreen];
}

id objc_msgSend_mapItem(void *a1, const char *a2, ...)
{
  return _[a1 mapItem];
}

id objc_msgSend_mapShapshotter(void *a1, const char *a2, ...)
{
  return _[a1 mapShapshotter];
}

id objc_msgSend_placemark(void *a1, const char *a2, ...)
{
  return _[a1 placemark];
}

id objc_msgSend_representationForVisualIdentity_withSize_image_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "representationForVisualIdentity:withSize:image:");
}

id objc_msgSend_results(void *a1, const char *a2, ...)
{
  return _[a1 results];
}

id objc_msgSend_rightToLeft(void *a1, const char *a2, ...)
{
  return _[a1 rightToLeft];
}

id objc_msgSend_scale(void *a1, const char *a2, ...)
{
  return _[a1 scale];
}

id objc_msgSend_scopeWithPointSize_scale_rightToLeft_style_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scopeWithPointSize:scale:rightToLeft:style:");
}

id objc_msgSend_searchCompleter(void *a1, const char *a2, ...)
{
  return _[a1 searchCompleter];
}

id objc_msgSend_setCenterCoordinateDistance_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCenterCoordinateDistance:");
}

id objc_msgSend_setCoordinate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCoordinate:");
}

id objc_msgSend_setDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDelegate:");
}

id objc_msgSend_setMapShapshotter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMapShapshotter:");
}

id objc_msgSend_setQueryFragment_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setQueryFragment:");
}

id objc_msgSend_setResultTypes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setResultTypes:");
}

id objc_msgSend_setSearchCompleter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSearchCompleter:");
}

id objc_msgSend_setSubtitle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSubtitle:");
}

id objc_msgSend_setTitle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTitle:");
}

id objc_msgSend_sharedPreferences(void *a1, const char *a2, ...)
{
  return _[a1 sharedPreferences];
}

id objc_msgSend_startWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startWithCompletionHandler:");
}

id objc_msgSend_stringWithFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringWithFormat:");
}

id objc_msgSend_stringWithUTF8String_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringWithUTF8String:");
}

id objc_msgSend_subtitle(void *a1, const char *a2, ...)
{
  return _[a1 subtitle];
}

id objc_msgSend_title(void *a1, const char *a2, ...)
{
  return _[a1 title];
}

id objc_msgSend_token(void *a1, const char *a2, ...)
{
  return _[a1 token];
}

id objc_msgSend_visualIdenticalityIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 visualIdenticalityIdentifier];
}