id SyncedLyricsLineView.InstrumentalContentView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SyncedLyricsLineView.InstrumentalContentView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for SyncedLyricsLineView.InstrumentalContentView()
{
  return self;
}

uint64_t protocol witness for SyncedLyricsLineContentView.specs.setter in conformance SyncedLyricsLineView.InstrumentalContentView(const void *a1)
{
  v3 = (void *)(*v1 + OBJC_IVAR___MusicInstrumentalContentView_specs);
  memcpy(v5, v3, 0x219uLL);
  memcpy(v3, a1, 0x219uLL);
  return outlined release of SyncedLyricsViewController.Specs((uint64_t)v5);
}

uint64_t protocol witness for SyncedLyricsLineContentView.isScrolling.setter in conformance SyncedLyricsLineView.InstrumentalContentView(uint64_t result)
{
  *(unsigned char *)(*v1 + OBJC_IVAR___MusicInstrumentalContentView_isScrolling) = result;
  return result;
}

void protocol witness for SyncedLyricsLineContentView.reset() in conformance SyncedLyricsLineView.InstrumentalContentView()
{
}

void protocol witness for SyncedLyricsLineContentView.setSelected(_:animated:) in conformance SyncedLyricsLineView.InstrumentalContentView(Swift::Bool a1, Swift::Bool a2)
{
}

id protocol witness for SyncedLyricsLineContentView.sizeThatFits(_:selected:) in conformance SyncedLyricsLineView.InstrumentalContentView()
{
  return objc_msgSend(*v0, "sizeThatFits:");
}

uint64_t sub_100328FBC()
{
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in SyncedLyricsLineView.InstrumentalContentView.fadeOut()()
{
  return closure #1 in SyncedLyricsLineView.InstrumentalContentView.fadeOut()(*(void *)(v0 + 16));
}

uint64_t block_copy_helper_56(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_56()
{
  return swift_release();
}

uint64_t partial apply for closure #2 in SyncedLyricsLineView.InstrumentalContentView.fadeOut()()
{
  return closure #2 in SyncedLyricsLineView.InstrumentalContentView.fadeOut()(*(void *)(v0 + 16));
}

uint64_t partial apply for closure #3 in SyncedLyricsLineView.InstrumentalContentView.fadeOut()()
{
  return closure #3 in SyncedLyricsLineView.InstrumentalContentView.fadeOut()(*(void *)(v0 + 16));
}

uint64_t sub_100329024()
{
  return swift_deallocObject();
}

uint64_t partial apply for closure #2 in SyncedLyricsLineView.InstrumentalContentView.update(elapsedTime:)()
{
  return closure #2 in SyncedLyricsLineView.InstrumentalContentView.update(elapsedTime:)(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

id partial apply for closure #1 in SyncedLyricsLineView.InstrumentalContentView.update(elapsedTime:)()
{
  return [*(id *)(v0 + 16) setAlpha:1.0];
}

uint64_t sub_100329078()
{
  return swift_deallocObject();
}

void partial apply for closure #1 in SyncedLyricsLineView.InstrumentalContentView.fadeIn(elapsedTime:)()
{
  closure #1 in SyncedLyricsLineView.InstrumentalContentView.fadeIn(elapsedTime:)(v0[2], v0[3], v0[4]);
}

void partial apply for closure #2 in SyncedLyricsLineView.InstrumentalContentView.fadeIn(elapsedTime:)()
{
  uint64_t v1 = *(void *)(v0 + 16) + OBJC_IVAR___MusicInstrumentalContentView_totalDotsFadedIn;
  if ((*(unsigned char *)(v1 + 8) & 1) == 0)
  {
    uint64_t v2 = *(void *)(v0 + 24);
    if (*(void *)v1 <= v2)
    {
      BOOL v3 = __OFADD__(v2, 1);
      uint64_t v4 = v2 + 1;
      if (v3)
      {
        __break(1u);
      }
      else
      {
        *(void *)uint64_t v1 = v4;
        *(unsigned char *)(v1 + 8) = 0;
      }
    }
  }
}

uint64_t partial apply for closure #3 in SyncedLyricsLineView.InstrumentalContentView.fadeIn(elapsedTime:)()
{
  return closure #3 in SyncedLyricsLineView.InstrumentalContentView.fadeIn(elapsedTime:)(*(void *)(v0 + 16));
}

void partial apply for closure #1 in SyncedLyricsLineView.InstrumentalContentView.setSelected(_:animated:)()
{
}

void specialized SyncedLyricsLineView.InstrumentalContentView.init(coder:)()
{
  v0[OBJC_IVAR___MusicInstrumentalContentView_isScrolling] = 0;
  *(void *)&v0[OBJC_IVAR___MusicInstrumentalContentView_alignment] = 0;
  uint64_t v1 = &v0[OBJC_IVAR___MusicInstrumentalContentView_lastSeenBounds];
  _OWORD *v1 = 0u;
  v1[1] = 0u;
  v0[OBJC_IVAR___MusicInstrumentalContentView_isSelected] = 0;
  *(void *)&v0[OBJC_IVAR___MusicInstrumentalContentView_dots] = _swiftEmptyArrayStorage;
  v0[OBJC_IVAR___MusicInstrumentalContentView_fadeOutCued] = 0;
  *(void *)&v0[OBJC_IVAR___MusicInstrumentalContentView_dotFadeInDuration] = 0;
  uint64_t v2 = &v0[OBJC_IVAR___MusicInstrumentalContentView_totalDotsFadedIn];
  *(void *)uint64_t v2 = 0;
  v2[8] = 1;
  *(void *)&v0[OBJC_IVAR___MusicInstrumentalContentView_totalDotsCompleted] = 0;
  *(void *)&v0[OBJC_IVAR___MusicInstrumentalContentView_breathDuration] = 0;
  *(void *)&v0[OBJC_IVAR___MusicInstrumentalContentView_totalBreathsCompleted] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

Swift::Void __swiftcall SyncedLyricsLineView.TextContentView.setSelected(_:animated:)(Swift::Bool _, Swift::Bool animated)
{
  v2[OBJC_IVAR___MusicTextContentView_isSelected] = _;
  if (_)
  {
    double v5 = Int.seconds.getter(1);
    uint64_t v6 = OBJC_IVAR___MusicTextContentView_selectedLabel;
    v7 = *(void **)&v2[OBJC_IVAR___MusicTextContentView_selectedLabel];
    if (v7) {
      goto LABEL_22;
    }
    id v8 = [objc_allocWithZone((Class)UILabel) init];
    [v8 setLineBreakStrategy:3];
    [v8 setNumberOfLines:0];
    [v8 setTextAlignment:4];
    [v8 setAutoresizingMask:18];
    [v8 setTextAlignment:*(void *)&v2[OBJC_IVAR___MusicTextContentView_alignment]];
    v9 = *(void **)&v2[OBJC_IVAR___MusicTextContentView_content];
    if (v2[OBJC_IVAR___MusicTextContentView_content + 16])
    {
      v10 = &selRef_setAttributedText_;
    }
    else
    {
      uint64_t v11 = *(void *)&v2[OBJC_IVAR___MusicTextContentView_content + 8];
      swift_bridgeObjectRetain();
      NSString v12 = String._bridgeToObjectiveC()();
      outlined consume of SyncedLyricsLineView.TextContentView.Content(v9, v11, 0);
      [v8 setText:v12];

      v9 = *(void **)&v2[OBJC_IVAR___MusicTextContentView_specs + 168];
      v10 = &selRef_setFont_;
    }
    objc_msgSend(v8, *v10, v9);
    [v8 setTextColor:*(void *)&v2[OBJC_IVAR___MusicTextContentView_specs + 232]];
    [v2 addSubview:v8];
    v13 = *(void **)&v2[v6];
    *(void *)&v2[v6] = v8;

    v7 = *(void **)&v2[v6];
    if (v7)
    {
LABEL_22:
      v14 = *(void **)&v2[OBJC_IVAR___MusicTextContentView_label];
      id v15 = v7;
      [v14 frame];
      objc_msgSend(v15, "setFrame:");

      v16 = *(void **)&v2[v6];
      if (v16) {
        [v16 setAlpha:0.0];
      }
    }
  }
  else
  {
    double v5 = Int.seconds.getter(0);
  }
  if (animated)
  {
    id v17 = objc_msgSend(objc_allocWithZone((Class)UIViewPropertyAnimator), "initWithDuration:controlPoint1:controlPoint2:animations:", 0, 0.12, 0.33, 0.0, 0.2, 0.1);
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = v2;
    *(double *)(v18 + 24) = v5;
    v31 = partial apply for closure #1 in SyncedLyricsLineView.TextContentView.setSelected(_:animated:);
    uint64_t v32 = v18;
    v27 = _NSConcreteStackBlock;
    uint64_t v28 = 1107296256;
    v29 = thunk for @escaping @callee_guaranteed @Sendable () -> ();
    v30 = &block_descriptor_59;
    v19 = _Block_copy(&v27);
    v20 = v2;
    swift_release();
    [v17 addAnimations:v19];
    _Block_release(v19);
    uint64_t v21 = swift_allocObject();
    *(void *)(v21 + 16) = v20;
    v31 = partial apply for closure #2 in SyncedLyricsLineView.TextContentView.setSelected(_:animated:);
    uint64_t v32 = v21;
    v27 = _NSConcreteStackBlock;
    uint64_t v28 = 1107296256;
    v29 = thunk for @escaping @callee_guaranteed (@unowned UIViewAnimatingPosition) -> ();
    v30 = &block_descriptor_38_0;
    v22 = _Block_copy(&v27);
    v23 = v20;
    swift_release();
    [v17 addCompletion:v22];
    _Block_release(v22);
    [v17 startAnimation];
  }
  else
  {
    [*(id *)&v2[OBJC_IVAR___MusicTextContentView_label] setAlpha:1.0 - v5];
    uint64_t v24 = OBJC_IVAR___MusicTextContentView_selectedLabel;
    v25 = *(void **)&v2[OBJC_IVAR___MusicTextContentView_selectedLabel];
    if (v25) {
      [v25 setAlpha:v5];
    }
    if (!_)
    {
      v26 = *(void **)&v2[v24];
      if (v26)
      {
        [v26 removeFromSuperview];
        v26 = *(void **)&v2[v24];
      }
      *(void *)&v2[v24] = 0;
    }
  }
}

void closure #2 in SyncedLyricsLineView.TextContentView.setSelected(_:animated:)(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(a2 + OBJC_IVAR___MusicTextContentView_isSelected) & 1) == 0)
  {
    uint64_t v3 = OBJC_IVAR___MusicTextContentView_selectedLabel;
    uint64_t v4 = *(void **)(a2 + OBJC_IVAR___MusicTextContentView_selectedLabel);
    if (v4)
    {
      [v4 removeFromSuperview];
      uint64_t v4 = *(void **)(a2 + v3);
    }
    *(void *)(a2 + v3) = 0;
  }
}

char *SyncedLyricsLineView.TextContentView.init(content:specs:)(void *a1, uint64_t a2, char a3, uint64_t a4)
{
  v4[OBJC_IVAR___MusicTextContentView_isSelected] = 0;
  *(void *)&v4[OBJC_IVAR___MusicTextContentView_alignment] = 0;
  v4[OBJC_IVAR___MusicTextContentView_isScrolling] = 1;
  uint64_t v9 = OBJC_IVAR___MusicTextContentView_label;
  id v10 = objc_allocWithZone((Class)UILabel);
  uint64_t v11 = v4;
  id v12 = [v10 init];
  [v12 setLineBreakStrategy:3];
  [v12 setNumberOfLines:0];
  [v12 setTextAlignment:4];
  [v12 setAutoresizingMask:18];
  *(void *)&v4[v9] = v12;
  *(void *)&v11[OBJC_IVAR___MusicTextContentView_selectedLabel] = 0;
  v13 = &v11[OBJC_IVAR___MusicTextContentView_content];
  *(void *)v13 = a1;
  *((void *)v13 + 1) = a2;
  char v14 = a3 & 1;
  v13[16] = a3 & 1;
  memcpy(&v11[OBJC_IVAR___MusicTextContentView_specs], (const void *)a4, 0x219uLL);
  outlined retain of SyncedLyricsViewController.Specs(a4);
  outlined copy of SyncedLyricsLineView.TextContentView.Content(a1, a2, a3 & 1);

  v25.receiver = v11;
  v25.super_class = (Class)type metadata accessor for SyncedLyricsLineView.TextContentView();
  id v15 = objc_msgSendSuper2(&v25, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  Swift::Int v16 = specialized Set.init(_nonEmptyArrayLiteral:)((uint64_t)&outlined read-only object #0 of SyncedLyricsLineView.TextContentView.init(content:specs:));
  id v17 = (char *)v15;
  SyncedLyricsLineView.TextContentView.updateLabel(changes:oldContent:)(v16, v18, v19, 255);
  swift_bridgeObjectRelease();
  if ((a3 & 1) == 0)
  {
    if (*(unsigned char *)(a4 + 56)) {
      uint64_t v20 = 4;
    }
    else {
      uint64_t v20 = *(void *)(a4 + 48);
    }
    [*(id *)&v17[OBJC_IVAR___MusicTextContentView_label] setTextAlignment:v20];
  }
  uint64_t v21 = *(void **)&v17[OBJC_IVAR___MusicTextContentView_label];
  v22 = v17;
  id v23 = v21;
  [v22 addSubview:v23];
  outlined release of SyncedLyricsViewController.Specs(a4);
  outlined consume of SyncedLyricsLineView.TextContentView.Content(a1, a2, v14);

  return v22;
}

uint64_t SyncedLyricsLineView.TextContentView.copy()@<X0>(char **a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = &v1[OBJC_IVAR___MusicTextContentView_content];
  double v5 = *(void **)&v1[OBJC_IVAR___MusicTextContentView_content];
  uint64_t v6 = *((void *)v4 + 1);
  v7 = &v2[OBJC_IVAR___MusicTextContentView_specs];
  if (v4[16])
  {
    memcpy(v18, v7, 0x219uLL);
    id v8 = (objc_class *)type metadata accessor for SyncedLyricsLineView.TextContentView();
    objc_allocWithZone(v8);
    outlined copy of SyncedLyricsLineView.TextContentView.Content(v5, v6, 1);
    outlined retain of SyncedLyricsViewController.Specs((uint64_t)v18);
    uint64_t v9 = v5;
    uint64_t v10 = v6;
    char v11 = 1;
  }
  else
  {
    memcpy(v18, v7, 0x219uLL);
    id v8 = (objc_class *)type metadata accessor for SyncedLyricsLineView.TextContentView();
    objc_allocWithZone(v8);
    outlined copy of SyncedLyricsLineView.TextContentView.Content(v5, v6, 0);
    outlined retain of SyncedLyricsViewController.Specs((uint64_t)v18);
    uint64_t v9 = v5;
    uint64_t v10 = v6;
    char v11 = 0;
  }
  id v12 = SyncedLyricsLineView.TextContentView.init(content:specs:)(v9, v10, v11, (uint64_t)v18);
  SyncedLyricsLineView.TextContentView.setSelected(_:animated:)(v2[OBJC_IVAR___MusicTextContentView_isSelected], 0);
  *(void *)&v12[OBJC_IVAR___MusicTextContentView_alignment] = *(void *)&v2[OBJC_IVAR___MusicTextContentView_alignment];
  Swift::Int v13 = specialized Set.init(_nonEmptyArrayLiteral:)((uint64_t)&outlined read-only object #0 of SyncedLyricsLineView.TextContentView.copy());
  SyncedLyricsLineView.TextContentView.updateLabel(changes:oldContent:)(v13, v14, v15, 255);
  swift_bridgeObjectRelease();
  Swift::Int v16 = v12;
  [v2 bounds];
  objc_msgSend(v16, "setFrame:");

  uint64_t result = type metadata accessor for SyncedLyricsLineView.TextContentView();
  a1[3] = (char *)v8;
  *a1 = v16;
  return result;
}

uint64_t SyncedLyricsLineView.TextContentView.updateLabel(changes:oldContent:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v39 = a1 + 56;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 56);
  uint64_t v37 = OBJC_IVAR___MusicTextContentView_isScrolling;
  uint64_t v35 = OBJC_IVAR___MusicTextContentView_alignment;
  uint64_t v36 = v4 + OBJC_IVAR___MusicTextContentView_specs;
  uint64_t v38 = OBJC_IVAR___MusicTextContentView_selectedLabel;
  uint64_t v8 = v4 + OBJC_IVAR___MusicTextContentView_content;
  int64_t v40 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v41 = OBJC_IVAR___MusicTextContentView_label;
  uint64_t v9 = v4 + OBJC_IVAR___MusicTextContentView_specs + 248;
  uint64_t v10 = v4 + OBJC_IVAR___MusicTextContentView_specs + 272;
  BOOL v11 = a4 == -1;
  if ((a4 & 1) == 0) {
    BOOL v11 = 1;
  }
  BOOL v33 = v11;
  uint64_t v12 = a1;
  int64_t v13 = 0;
  uint64_t v14 = &selRef_shadowColor;
  uint64_t v34 = swift_bridgeObjectRetain();
  while (v7)
  {
    unint64_t v18 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v19 = v18 | (v13 << 6);
LABEL_27:
    switch(*(unsigned char *)(*(void *)(v12 + 48) + v19))
    {
      case 1:
        if ((*(unsigned char *)(v8 + 16) & 1) == 0)
        {
          [*(id *)(v4 + v41) setFont:*(void *)(v36 + 168)];
          v26 = *(void **)(v4 + v38);
          if (v26) {
            [v26 setFont:*(void *)(v36 + 168)];
          }
        }
        if (*(unsigned char *)(v4 + v37)) {
          v27 = (void *)v10;
        }
        else {
          v27 = (void *)v9;
        }
        objc_msgSend(*(id *)(v4 + v41), v14[406], *v27);
        uint64_t v15 = *(void **)(v4 + v38);
        if (v15)
        {
          uint64_t v17 = *(void *)(v36 + 232);
          goto LABEL_10;
        }
        break;
      case 2:
        [*(id *)(v4 + v41) setTextAlignment:*(void *)(v4 + v35)];
        uint64_t v28 = *(void **)(v4 + v38);
        if (v28) {
          [v28 setTextAlignment:*(void *)(v4 + v35)];
        }
        break;
      case 3:
        uint64_t v15 = *(void **)(v4 + v41);
        if (*(unsigned char *)(v4 + v37)) {
          Swift::Int v16 = (uint64_t *)v10;
        }
        else {
          Swift::Int v16 = (uint64_t *)v9;
        }
        uint64_t v17 = *v16;
LABEL_10:
        objc_msgSend(v15, v14[406], v17);
        break;
      default:
        uint64_t v23 = v10;
        uint64_t v24 = v9;
        objc_super v25 = *(void **)v8;
        if (*(unsigned char *)(v8 + 16))
        {
          [*(id *)(v4 + v41) setAttributedText:*(void *)v8];
          uint64_t v9 = v24;
          uint64_t v10 = v23;
          uint64_t v14 = &selRef_shadowColor;
        }
        else
        {
          uint64_t v29 = *(void *)(v8 + 8);
          v30 = *(void **)(v4 + v41);
          swift_bridgeObjectRetain();
          NSString v31 = String._bridgeToObjectiveC()();
          outlined consume of SyncedLyricsLineView.TextContentView.Content(v25, v29, 0);
          [v30 setText:v31];

          uint64_t v12 = v34;
          uint64_t v9 = v24;
          uint64_t v10 = v23;
          uint64_t v14 = &selRef_shadowColor;
          if (!v33) {
            [v30 setFont:*(void *)(v36 + 168)];
          }
        }
        break;
    }
  }
  int64_t v20 = v13 + 1;
  if (__OFADD__(v13, 1))
  {
    __break(1u);
    goto LABEL_46;
  }
  if (v20 >= v40) {
    goto LABEL_42;
  }
  unint64_t v21 = *(void *)(v39 + 8 * v20);
  ++v13;
  if (v21) {
    goto LABEL_26;
  }
  int64_t v13 = v20 + 1;
  if (v20 + 1 >= v40) {
    goto LABEL_42;
  }
  unint64_t v21 = *(void *)(v39 + 8 * v13);
  if (v21) {
    goto LABEL_26;
  }
  int64_t v13 = v20 + 2;
  if (v20 + 2 >= v40) {
    goto LABEL_42;
  }
  unint64_t v21 = *(void *)(v39 + 8 * v13);
  if (v21)
  {
LABEL_26:
    unint64_t v7 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v13 << 6);
    goto LABEL_27;
  }
  int64_t v22 = v20 + 3;
  if (v22 < v40)
  {
    unint64_t v21 = *(void *)(v39 + 8 * v22);
    if (!v21)
    {
      while (1)
      {
        int64_t v13 = v22 + 1;
        if (__OFADD__(v22, 1)) {
          break;
        }
        if (v13 >= v40) {
          goto LABEL_42;
        }
        unint64_t v21 = *(void *)(v39 + 8 * v13);
        ++v22;
        if (v21) {
          goto LABEL_26;
        }
      }
LABEL_46:
      __break(1u);
      JUMPOUT(0x100329F50);
    }
    int64_t v13 = v22;
    goto LABEL_26;
  }
LABEL_42:

  return swift_release();
}

id SyncedLyricsLineView.TextContentView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SyncedLyricsLineView.TextContentView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for SyncedLyricsLineView.TextContentView()
{
  return self;
}

id outlined copy of SyncedLyricsLineView.TextContentView.Content(void *a1, uint64_t a2, char a3)
{
  if (a3) {
    return a1;
  }
  else {
    return (id)swift_bridgeObjectRetain();
  }
}

void destroy for SyncedLyricsLineView.TextContentView.Content(uint64_t a1)
{
}

void outlined consume of SyncedLyricsLineView.TextContentView.Content(void *a1, uint64_t a2, char a3)
{
  if (a3) {

  }
  else {
    swift_bridgeObjectRelease();
  }
}

uint64_t initializeBufferWithCopyOfBuffer for SyncedLyricsLineView.TextContentView.Content(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  outlined copy of SyncedLyricsLineView.TextContentView.Content(*(void **)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for SyncedLyricsLineView.TextContentView.Content(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  outlined copy of SyncedLyricsLineView.TextContentView.Content(*(void **)a2, v4, v5);
  uint64_t v6 = *(void **)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  char v8 = *(unsigned char *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  outlined consume of SyncedLyricsLineView.TextContentView.Content(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for SyncedLyricsLineView.TextContentView.Content(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void **)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  char v6 = *(unsigned char *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v3;
  outlined consume of SyncedLyricsLineView.TextContentView.Content(v4, v5, v6);
  return a1;
}

void *type metadata accessor for SyncedLyricsLineView.TextContentView.Content()
{
  return &unk_100543480;
}

uint64_t protocol witness for SyncedLyricsLineContentView.specs.setter in conformance SyncedLyricsLineView.TextContentView(const void *a1)
{
  char v3 = (void *)(*v1 + OBJC_IVAR___MusicTextContentView_specs);
  memcpy(v8, v3, 0x219uLL);
  memcpy(v3, a1, 0x219uLL);
  outlined retain of SyncedLyricsViewController.Specs((uint64_t)a1);
  outlined release of SyncedLyricsViewController.Specs((uint64_t)v8);
  Swift::Int v4 = specialized Set.init(_nonEmptyArrayLiteral:)((uint64_t)&outlined read-only object #0 of SyncedLyricsLineView.TextContentView.specs.setter);
  SyncedLyricsLineView.TextContentView.updateLabel(changes:oldContent:)(v4, v5, v6, 255);
  swift_bridgeObjectRelease();
  return outlined release of SyncedLyricsViewController.Specs((uint64_t)a1);
}

uint64_t protocol witness for SyncedLyricsLineContentView.isScrolling.setter in conformance SyncedLyricsLineView.TextContentView(char a1)
{
  *(unsigned char *)(*v1 + OBJC_IVAR___MusicTextContentView_isScrolling) = a1;
  Swift::Int v2 = specialized Set.init(_nonEmptyArrayLiteral:)((uint64_t)&outlined read-only object #0 of protocol witness for SyncedLyricsLineContentView.isScrolling.setter in conformance SyncedLyricsLineView.TextContentView);
  SyncedLyricsLineView.TextContentView.updateLabel(changes:oldContent:)(v2, v3, v4, 255);

  return swift_bridgeObjectRelease();
}

id protocol witness for SyncedLyricsLineContentView.reset() in conformance SyncedLyricsLineView.TextContentView()
{
  return [*(id *)(*v0 + OBJC_IVAR___MusicTextContentView_label) setAlpha:1.0];
}

void protocol witness for SyncedLyricsLineContentView.setSelected(_:animated:) in conformance SyncedLyricsLineView.TextContentView(Swift::Bool a1, Swift::Bool a2)
{
}

uint64_t sub_10032A2CC()
{
  return swift_deallocObject();
}

id partial apply for closure #1 in SyncedLyricsLineView.TextContentView.setSelected(_:animated:)()
{
  uint64_t v1 = *(void *)(v0 + 16);
  double v2 = *(double *)(v0 + 24);
  [*(id *)(v1 + OBJC_IVAR___MusicTextContentView_label) setAlpha:1.0 - v2];
  id result = *(id *)(v1 + OBJC_IVAR___MusicTextContentView_selectedLabel);
  if (result)
  {
    return [result setAlpha:v2];
  }
  return result;
}

uint64_t block_copy_helper_57(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_57()
{
  return swift_release();
}

uint64_t sub_10032A3AC()
{
  return swift_deallocObject();
}

void partial apply for closure #2 in SyncedLyricsLineView.TextContentView.setSelected(_:animated:)(uint64_t a1)
{
  closure #2 in SyncedLyricsLineView.TextContentView.setSelected(_:animated:)(a1, *(void *)(v1 + 16));
}

void specialized SyncedLyricsLineView.TextContentView.init(coder:)()
{
  v0[OBJC_IVAR___MusicTextContentView_isSelected] = 0;
  *(void *)&v0[OBJC_IVAR___MusicTextContentView_alignment] = 0;
  v0[OBJC_IVAR___MusicTextContentView_isScrolling] = 1;
  uint64_t v1 = OBJC_IVAR___MusicTextContentView_label;
  id v2 = [objc_allocWithZone((Class)UILabel) init];
  [v2 setLineBreakStrategy:3];
  [v2 setNumberOfLines:0];
  [v2 setTextAlignment:4];
  [v2 setAutoresizingMask:18];
  *(void *)&v0[v1] = v2;
  *(void *)&v0[OBJC_IVAR___MusicTextContentView_selectedLabel] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

unsigned char *storeEnumTagSinglePayload for SyncedLyricsLineView.TextContentView.Change(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *id result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10032A5C8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *id result = a2 + 3;
        break;
    }
  }
  return result;
}

void *type metadata accessor for SyncedLyricsLineView.TextContentView.Change()
{
  return &unk_100543618;
}

unint64_t lazy protocol witness table accessor for type SyncedLyricsLineView.TextContentView.Change and conformance SyncedLyricsLineView.TextContentView.Change()
{
  unint64_t result = lazy protocol witness table cache variable for type SyncedLyricsLineView.TextContentView.Change and conformance SyncedLyricsLineView.TextContentView.Change;
  if (!lazy protocol witness table cache variable for type SyncedLyricsLineView.TextContentView.Change and conformance SyncedLyricsLineView.TextContentView.Change)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SyncedLyricsLineView.TextContentView.Change and conformance SyncedLyricsLineView.TextContentView.Change);
  }
  return result;
}

uint64_t SyncedLyricsLineView.line.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line;
  swift_beginAccess();
  return outlined init with copy of AlertPresenting(v3, a1);
}

Swift::Void __swiftcall SyncedLyricsLineView.updateAnchorPoint()()
{
  double v1 = UIView.untransformedFrame.getter();
  CGFloat v3 = v2;
  CGFloat v5 = v4;
  CGFloat v7 = v6;
  uint64_t v8 = *(void *)&v0[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_alignment];
  if (v8 == 2)
  {
    uint64_t v9 = CGPoint.centerRight.unsafeMutableAddressor();
  }
  else if (v8)
  {
    uint64_t v9 = CGPoint.center.unsafeMutableAddressor();
  }
  else
  {
    uint64_t v9 = CGPoint.centerLeft.unsafeMutableAddressor();
  }
  uint64_t v10 = (double *)v9;
  swift_beginAccess();
  objc_msgSend(v0, "setAnchorPoint:", *v10, v10[1]);
  UIView.untransformedFrame.setter(v1, v3, v5, v7);
}

void SyncedLyricsLineView.contentView.didset(void *a1)
{
  if (a1) {
    [a1 removeFromSuperview];
  }
  double v2 = *(void **)&v1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView];
  if (v2)
  {
    id v3 = v2;
    [v3 setTranslatesAutoresizingMaskIntoConstraints:0];
    [*(id *)&v1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_containerView] addSubview:v3];
    double v4 = self;
    __swift_instantiateConcreteTypeFromMangledName(&_ss23_ContiguousArrayStorageCyyXlGMD_1);
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_100493EA0;
    id v6 = [v3 leadingAnchor];
    id v7 = [v1 leadingAnchor];
    id v8 = [v6 constraintEqualToAnchor:v7];

    *(void *)(v5 + 32) = v8;
    id v9 = [v3 trailingAnchor];
    id v10 = [v1 trailingAnchor];
    id v11 = [v9 constraintEqualToAnchor:v10];

    *(void *)(v5 + 40) = v11;
    id v12 = [v3 topAnchor];
    id v13 = [v1 topAnchor];
    id v14 = [v12 constraintEqualToAnchor:v13];

    *(void *)(v5 + 48) = v14;
    id v15 = [v3 bottomAnchor];
    id v16 = [v1 bottomAnchor];
    id v17 = [v15 constraintEqualToAnchor:v16];

    *(void *)(v5 + 56) = v17;
    specialized Array._endMutation()();
    type metadata accessor for UIMenu(0, &_sSo18NSLayoutConstraintCML_0);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v4 activateConstraints:isa];
  }
}

void (*SyncedLyricsLineView.contentView.modify(uint64_t a1))(long long *a1, char a2)
{
  uint64_t v2 = OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView;
  *(void *)(a1 + 16) = v1;
  *(void *)(a1 + 24) = v2;
  long long v3 = *(_OWORD *)(v1 + v2);
  *(_OWORD *)a1 = v3;
  id v4 = (id)v3;
  return SyncedLyricsLineView.contentView.modify;
}

void SyncedLyricsLineView.contentView.modify(long long *a1, char a2)
{
  long long v3 = (id *)(*((void *)a1 + 2) + *((void *)a1 + 3));
  id v8 = *v3;
  long long v4 = *a1;
  *(_OWORD *)long long v3 = *a1;
  id v5 = (id)v4;
  id v6 = v5;
  if (a2)
  {
    id v7 = v5;
    SyncedLyricsLineView.contentView.didset(v8);
  }
  else
  {
    SyncedLyricsLineView.contentView.didset(v8);
  }
}

id SyncedLyricsLineView.backgroundView.getter()
{
  uint64_t v1 = OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView____lazy_storage___backgroundView;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView____lazy_storage___backgroundView];
  if (v2)
  {
    id v3 = *(id *)&v0[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView____lazy_storage___backgroundView];
  }
  else
  {
    id v4 = closure #1 in SyncedLyricsLineView.backgroundView.getter(v0);
    id v5 = *(void **)&v0[v1];
    *(void *)&v0[v1] = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id closure #1 in SyncedLyricsLineView.backgroundView.getter(char *a1)
{
  id v2 = [objc_allocWithZone((Class)UIView) init];
  [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v3 = (double *)&a1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs];
  [v2 setBackgroundColor:*(void *)&a1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs + 456]];
  [v2 setAlpha:0.0];
  id v4 = [v2 layer];
  [v4 setCornerCurve:kCACornerCurveContinuous];

  id v5 = [v2 layer];
  [v5 setCornerRadius:v3[58]];

  [a1 insertSubview:v2 atIndex:0];
  id v6 = self;
  __swift_instantiateConcreteTypeFromMangledName(&_ss23_ContiguousArrayStorageCyyXlGMD_1);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_100493EA0;
  id v8 = [v2 leadingAnchor];
  id v9 = [a1 leadingAnchor];
  id v10 = [v8 constraintEqualToAnchor:v9 constant:-v3[59]];

  *(void *)(v7 + 32) = v10;
  id v11 = [v2 trailingAnchor];
  id v12 = [a1 trailingAnchor];
  id v13 = [v11 constraintEqualToAnchor:v12 constant:v3[59]];

  *(void *)(v7 + 40) = v13;
  id v14 = [v2 topAnchor];
  id v15 = [a1 topAnchor];
  id v16 = [v14 constraintEqualToAnchor:v15 constant:-v3[59]];

  *(void *)(v7 + 48) = v16;
  id v17 = [v2 bottomAnchor];
  id v18 = [a1 bottomAnchor];
  id v19 = [v17 constraintEqualToAnchor:v18 constant:v3[59]];

  *(void *)(v7 + 56) = v19;
  specialized Array._endMutation()();
  type metadata accessor for UIMenu(0, &_sSo18NSLayoutConstraintCML_0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v6 activateConstraints:isa];

  return v2;
}

id SyncedLyricsLineView.isHighlighted.didset(char a1)
{
  int v2 = a1 & 1;
  id result = [v1 isHighlighted];
  if (result == v2) {
    return result;
  }
  id v4 = SyncedLyricsLineView.backgroundView.getter();
  if ([v1 isHighlighted])
  {
    id v5 = &v1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_previousBlurRadius];
    *(void *)id v5 = *(void *)&v1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_blurRadius];
    v5[8] = 0;
    double v6 = 0.0;
LABEL_7:
    SyncedLyricsLineView.setBlurRadius(_:animated:)(1, v6);
    goto LABEL_8;
  }
  if ((v1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_previousBlurRadius + 8] & 1) == 0)
  {
    double v6 = *(double *)&v1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_previousBlurRadius];
    goto LABEL_7;
  }
LABEL_8:
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v4;
  *(void *)(v7 + 24) = v1;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v1;
  *(void *)(v8 + 24) = v4;
  id v9 = v4;
  id v10 = v1;
  id v11 = v9;
  specialized static SyncedLyricsViewController.Specs.animateWithHighlightAnimationCurves(highlighted:fadeAnimations:transformAnimations:)((char)[v10 isHighlighted], (uint64_t)partial apply for closure #1 in SyncedLyricsLineView.isHighlighted.didset, v7, (uint64_t)partial apply for closure #2 in SyncedLyricsLineView.isHighlighted.didset, v8);

  swift_release();

  return (id)swift_release();
}

void closure #1 in SyncedLyricsLineView.isHighlighted.didset(void *a1, char *a2)
{
  unsigned int v4 = [a2 isHighlighted];
  double v5 = 0.0;
  double v6 = 1.0;
  if (v4) {
    double v5 = 1.0;
  }
  [a1 setAlpha:v5];
  id v7 = *(id *)&a2[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_containerView];
  if ([a2 isHighlighted]) {
    double v6 = *(double *)&a2[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs + 448];
  }
  [v7 setAlpha:v6];
}

id closure #2 in SyncedLyricsLineView.isHighlighted.didset(char *a1, void *a2)
{
  if ([a1 isHighlighted])
  {
    double v5 = *(double *)&a1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs + 400];
    uint64_t v4 = *(void *)&a1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs + 408];
    uint64_t v6 = *(void *)&a1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs + 416];
    double v7 = *(double *)&a1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs + 424];
    uint64_t v8 = *(void *)&a1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs + 432];
    uint64_t v9 = *(void *)&a1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs + 440];
  }
  else
  {
    uint64_t v4 = 0;
    double v5 = 1.0;
    uint64_t v6 = 0;
    double v7 = 1.0;
    uint64_t v8 = 0;
    uint64_t v9 = 0;
  }
  id v10 = *(void **)&a1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_containerView];
  double v12 = v5;
  uint64_t v13 = v4;
  uint64_t v14 = v6;
  double v15 = v7;
  uint64_t v16 = v8;
  uint64_t v17 = v9;
  [v10 setTransform:&v12];
  double v12 = v5;
  uint64_t v13 = v4;
  uint64_t v14 = v6;
  double v15 = v7;
  uint64_t v16 = v8;
  uint64_t v17 = v9;
  return [a2 setTransform:&v12];
}

double SyncedLyricsLineView.sizeThatFits(_:)(double a1, double a2)
{
  id v3 = *(void **)&v2[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView];
  if (!v3) {
    return 0.0;
  }
  uint64_t v6 = *(void *)&v2[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView + 8];
  uint64_t ObjectType = swift_getObjectType();
  id v8 = v3;
  double v9 = (*(double (**)(id, uint64_t, uint64_t, double, double))(v6 + 96))([v2 isSelected], ObjectType, v6, a1, a2);

  return v9;
}

Swift::Void __swiftcall SyncedLyricsLineView.reset()()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView;
  uint64_t v3 = *(void *)(v0 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView);
  if (v3)
  {
    uint64_t v4 = *(void *)(v2 + 8);
    uint64_t ObjectType = swift_getObjectType();
    v17[0] = v3;
    (*(void (**)(uint64_t, uint64_t))(v4 + 80))(ObjectType, v4);
  }
  uint64_t v6 = OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_isScrolling;
  *(unsigned char *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_isScrolling) = 1;
  id v8 = SyncedLyricsLineView.contentView.modify((uint64_t)v17);
  double v9 = *(void **)v7;
  if (*(void *)v7)
  {
    uint64_t v10 = v7;
    uint64_t v11 = *(unsigned __int8 *)(v1 + v6);
    uint64_t v12 = *(void *)(v7 + 8);
    uint64_t v13 = swift_getObjectType();
    uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 40);
    id v15 = v9;
    v14(v11, v13, v12);
    uint64_t v16 = *(void **)v10;
    *(void *)uint64_t v10 = v9;
    *(void *)(v10 + 8) = v12;
  }
  v8((long long *)v17, 0);
  v18.value.super.Class isa = 0;
  SyncedLyricsLineView.setSelected(_:animator:)(0, v18);
}

Swift::Void __swiftcall SyncedLyricsLineView.setSelected(_:animator:)(Swift::Bool _, UIViewPropertyAnimator_optional animator)
{
  Class isa = animator.value.super.isa;
  BOOL v5 = _;
  if (objc_msgSend(v2, "isSelected", *(void *)&animator.is_nil) != v5)
  {
    [v2 setSelected:v5];
    if ([v2 isHighlighted])
    {
      [v2 setHighlighted:0];
      [v2 cancelTrackingWithEvent:0];
      uint64_t v6 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v7 = swift_allocObject();
      *(void *)(v7 + 16) = v6;
      *(unsigned char *)(v7 + 24) = _;
      id v8 = (void (*)())closure #1 in SyncedLyricsLineView.setSelected(_:animator:)partial apply;
      if (!isa)
      {
LABEL_4:
        swift_beginAccess();
        uint64_t Strong = swift_unknownObjectWeakLoadStrong();
        if (Strong)
        {
          uint64_t v10 = (void *)Strong;
          if (_)
          {
            uint64_t v11 = 0;
            double v12 = 1.0;
            uint64_t v13 = 0;
            double v14 = 1.0;
            id v15 = 0;
            uint64_t v16 = 0;
          }
          else
          {
            double v12 = *(double *)(Strong + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs + 280);
            uint64_t v11 = *(void *)(Strong + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs + 288);
            uint64_t v13 = *(uint64_t (**)(uint64_t))(Strong
                                                    + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs
                                                    + 296);
            double v14 = *(double *)(Strong + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs + 304);
            id v15 = *(void (**)())(Strong + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs + 312);
            uint64_t v16 = *(void *)(Strong + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs + 320);
          }
          swift_retain();
          aBlock = *(void ***)&v12;
          uint64_t v33 = v11;
          uint64_t v34 = v13;
          double v35 = v14;
          uint64_t v36 = v15;
          uint64_t v37 = v16;
          [v10 setTransform:&aBlock];
          swift_release();
        }
        v26 = &v2[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView];
        v27 = *(void ***)&v2[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView];
        if (v27)
        {
          uint64_t v28 = *((void *)v26 + 1);
          uint64_t ObjectType = swift_getObjectType();
          aBlock = v27;
          v30 = *(void (**)(Swift::Bool, void, uint64_t, uint64_t))(v28 + 88);
          NSString v31 = v27;
          v30(_, 0, ObjectType, v28);
        }
LABEL_15:
        swift_release();
        return;
      }
    }
    else
    {
      uint64_t v17 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v7 = swift_allocObject();
      *(void *)(v7 + 16) = v17;
      *(unsigned char *)(v7 + 24) = _;
      id v8 = partial apply for closure #1 in SyncedLyricsLineView.setSelected(_:animator:);
      if (!isa) {
        goto LABEL_4;
      }
    }
    uint64_t v36 = v8;
    uint64_t v37 = v7;
    aBlock = _NSConcreteStackBlock;
    uint64_t v33 = 1107296256;
    uint64_t v34 = thunk for @escaping @callee_guaranteed @Sendable () -> ();
    double v35 = COERCE_DOUBLE(&block_descriptor_42_0);
    UIViewPropertyAnimator_optional v18 = _Block_copy(&aBlock);
    swift_retain();
    id v19 = isa;
    swift_release();
    [(objc_class *)v19 addAnimations:v18];
    _Block_release(v18);
    int64_t v20 = &v2[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView];
    unint64_t v21 = *(void ***)&v2[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView];
    if (v21)
    {
      uint64_t v22 = *((void *)v20 + 1);
      uint64_t v23 = swift_getObjectType();
      aBlock = v21;
      uint64_t v24 = *(void (**)(Swift::Bool, uint64_t, uint64_t, uint64_t))(v22 + 88);
      objc_super v25 = v21;
      v24(_, 1, v23, v22);

      swift_release();
      return;
    }

    goto LABEL_15;
  }
}

void closure #1 in SyncedLyricsLineView.setSelected(_:animator:)(uint64_t a1, char a2)
{
  swift_beginAccess();
  uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = Strong;
    if (a2)
    {
      long long v5 = xmmword_100493E70;
      long long v6 = xmmword_1004A3B00;
      long long v7 = 0uLL;
    }
    else
    {
      long long v6 = *(_OWORD *)&Strong[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs + 280];
      long long v5 = *(_OWORD *)&Strong[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs + 296];
      long long v7 = *(_OWORD *)&Strong[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs + 312];
    }
    v8[0] = v6;
    v8[1] = v5;
    v8[2] = v7;
    [Strong setTransform:v8];
  }
}

void SyncedLyricsLineView.setBlurRadius(_:animated:)(char a1, double a2)
{
  id v5 = objc_msgSend(objc_allocWithZone((Class)UIViewPropertyAnimator), "initWithDuration:controlPoint1:controlPoint2:animations:", 0, 0.12, 0.33, 0.0, 0.2, 0.1);
  uint64_t v6 = OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_blurRadius;
  if (*(double *)&v2[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_blurRadius] != a2)
  {
    id v37 = v5;
    id v7 = [v5 timingParameters];
    if (v7)
    {
      id v8 = [v7 cubicTimingParameters];
      swift_unknownObjectRelease();
      if (v8)
      {
        NSString v9 = String._bridgeToObjectiveC()();
        id v10 = [self animationWithKeyPath:v9];

        id v11 = v10;
        double v12 = 0.0;
        if (a1) {
          objc_msgSend(v37, "duration", 0.0);
        }
        [v11 setDuration:v12];

        [v11 setFillMode:kCAFillModeBoth];
        Class isa = CGFloat._bridgeToObjectiveC()().super.super.isa;
        [v11 setFromValue:isa];

        Class v14 = CGFloat._bridgeToObjectiveC()().super.super.isa;
        [v11 setToValue:v14];

        [v11 setRemovedOnCompletion:0];
        id v15 = v11;
        [v8 controlPoint1];
        float v17 = v16;
        [v8 controlPoint1];
        float v19 = v18;
        [v8 controlPoint2];
        float v21 = v20;
        [v8 controlPoint2];
        float v23 = v22;
        id v24 = objc_allocWithZone((Class)CAMediaTimingFunction);
        *(float *)&double v25 = v17;
        *(float *)&double v26 = v19;
        *(float *)&double v27 = v21;
        *(float *)&double v28 = v23;
        id v29 = [v24 initWithControlPoints:v25 :v26 :v27 :v28];
        [v15 setTimingFunction:v29];

        id v30 = [v2 layer];
        [v30 setShouldRasterize:0];

        NSString v31 = self;
        [v31 begin];
        uint64_t v32 = swift_allocObject();
        *(void *)(v32 + 16) = v2;
        aBlock[4] = partial apply for closure #1 in SyncedLyricsLineView.setBlurRadius(_:animated:);
        aBlock[5] = v32;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = thunk for @escaping @callee_guaranteed @Sendable () -> ();
        aBlock[3] = &block_descriptor_60;
        uint64_t v33 = _Block_copy(aBlock);
        uint64_t v34 = v2;
        swift_release();
        [v31 setCompletionBlock:v33];
        _Block_release(v33);
        id v35 = [v34 layer];
        NSString v36 = String._bridgeToObjectiveC()();
        [v35 addAnimation:v15 forKey:v36];

        [v31 commit];
        *(double *)&v2[v6] = a2;
        return;
      }
    }
    id v5 = v37;
  }
}

void closure #1 in SyncedLyricsLineView.setBlurRadius(_:animated:)(void *a1)
{
  id v1 = [a1 layer];
  [v1 setShouldRasterize:1];
}

uint64_t SyncedLyricsLineView.updateContentView()()
{
  void (*v12)(uint64_t *__return_ptr);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  void *v28;
  id v29;
  id v30;
  id v31;
  id v32;
  NSString v33;
  uint64_t v34;
  Class isa;
  id v36;
  id v37;
  uint64_t v38;
  NSString *v39;
  NSString *v40;
  id v41;
  id v42;
  id v43;
  id v44;
  NSString v45;
  Class v46;
  id v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  char v57;
  id v58;
  id v59;
  Swift::Int v60;
  uint64_t v61;
  Swift::Int v62;
  uint64_t v63;
  double v64;
  double v65;
  char v66;
  uint64_t v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void *v85;
  char v86;
  uint64_t v87;
  Swift::Int v88;
  Swift::Int v89;
  uint64_t v90;
  id v91;
  void *v92;
  id v93;
  char *v94;
  char *v95;
  uint64_t v96;
  Swift::Int v97;
  void *v98;
  char *v99;
  void *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  Swift::Int v104;
  void *v105;
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  void *v110;
  uint64_t v111;
  void *v112;
  char v113;
  char v114;
  id v115;
  char *v116;
  void *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  void *v121;
  char v122;
  char v123;
  uint64_t v125;
  id v126;
  uint64_t v127;
  unint64_t v128;
  uint64_t v129;
  uint64_t v130;
  id v131;
  void (*v132)(char *, uint64_t);
  NSString *v133;
  id v134;
  long long v135;
  uint64_t v136;
  id v137;
  id v138;
  uint64_t v139;
  uint64_t v140;
  id v141;
  uint64_t v142;
  double v143;
  double v144;
  char v145;
  unsigned __int8 v146;
  uint64_t v147;
  uint64_t (*v148)(void);
  void *v149;
  uint64_t (*v150)(void);
  uint64_t v151;
  void (*v152)(uint64_t *__return_ptr);
  uint64_t v153;
  unsigned char v154[40];
  uint64_t v155[8];
  uint64_t v156[8];
  uint64_t v157[8];
  uint64_t v158[6];
  char v159;
  unsigned char v160[24];
  uint64_t v161;
  char v162;
  void *v163;
  void v164[3];
  uint64_t v165;
  void *v166;
  _OWORD v167[34];

  uint64_t v1 = v0;
  type metadata accessor for Locale();
  __chkstk_darwin();
  uint64_t v2 = type metadata accessor for String.LocalizationValue();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  id v5 = (char *)&v125 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  id v7 = (char *)&v125 - v6;
  SyncedLyricsLineView.updateAnchorPoint()();
  uint64_t v8 = v0 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line;
  swift_beginAccess();
  outlined init with copy of AlertPresenting(v8, (uint64_t)v154);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for LyricsLine);
  if (swift_dynamicCast())
  {
    LODWORD(v138) = v146;
    uint64_t v9 = v147;
    id v10 = v148;
    id v11 = v150;
    double v12 = v152;
    uint64_t v13 = v153;
    v140 = v151;
    v141 = v149;
    Class v14 = *(void *)(v150() + 16);
    id v15 = swift_bridgeObjectRelease();
    double v16 = v1 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView;
    float v17 = *(void **)(v1 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView);
    if (v14)
    {
      v139 = v9;
      double v18 = v1;
      if (v17)
      {
        type metadata accessor for SyncedLyricsLineView.SBS_TextContentView();
        id v15 = swift_dynamicCastClass();
        if (v15)
        {
          v137 = v17;
          *(void *)&v135 = v10();
          v136 = v19;
          double v20 = v11();
          v134 = *(id *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_alignment);
          v12(v156);
          float v21 = outlined init with take of Lyrics.TextLine.BackgroundVocals?((uint64_t)v156, (uint64_t)v167);
          double v22 = *((void *)&v167[1] + 1);
          if (*((void *)&v167[1] + 1))
          {
            v133 = *(NSString **)&v167[1];
            swift_bridgeObjectRetain();
            float v21 = (uint64_t)outlined release of Lyrics.TextLine.BackgroundVocals?(v156);
          }
          else
          {
            v133 = 0;
          }
          v119 = v139;
          ((void (*)(uint64_t *__return_ptr, uint64_t))v12)(v157, v21);
          v120 = outlined init with take of Lyrics.TextLine.BackgroundVocals?((uint64_t)v157, (uint64_t)v164);
          if (v165)
          {
            v121 = v166;
            swift_bridgeObjectRetain();
            v120 = (uint64_t)outlined release of Lyrics.TextLine.BackgroundVocals?(v157);
          }
          else
          {
            v121 = _swiftEmptyArrayStorage;
          }
          ((void (*)(uint64_t *__return_ptr, uint64_t))v12)(v158, v120);
          outlined init with take of Lyrics.TextLine.BackgroundVocals?((uint64_t)v158, (uint64_t)v160);
          v122 = v161;
          if (v161)
          {
            v123 = v162;
            outlined release of Lyrics.TextLine.BackgroundVocals?(v158);
            v122 = v123 & 1;
          }
          SyncedLyricsLineView.SBS_TextContentView.update(text:words:alignment:direction:capabilities:backgroundText:backgroundWords:backgroundDirection:)((id)v135, v136, v20, (uint64_t)v134, (char)v138, v119, (uint64_t)v133, v22, (uint64_t)v121, v122);
          swift_release();
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_48;
        }
      }
      v75 = (void *)((uint64_t (*)(uint64_t))v10)(v15);
      v136 = v76;
      v137 = v75;
      v77 = v11();
      v134 = *(id *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_alignment);
      v78 = swift_bridgeObjectRetain();
      ((void (*)(uint64_t *__return_ptr, uint64_t))v12)(v155, v78);
      v79 = outlined init with take of Lyrics.TextLine.BackgroundVocals?((uint64_t)v155, (uint64_t)v164);
      v80 = v165;
      if (v165)
      {
        v133 = (NSString *)v164[2];
        swift_bridgeObjectRetain();
        v79 = (uint64_t)outlined release of Lyrics.TextLine.BackgroundVocals?(v155);
      }
      else
      {
        v133 = 0;
      }
      ((void (*)(uint64_t *__return_ptr, uint64_t))v12)(v156, v79);
      v111 = outlined init with take of Lyrics.TextLine.BackgroundVocals?((uint64_t)v156, (uint64_t)v160);
      if (v161)
      {
        v112 = v163;
        swift_bridgeObjectRetain();
        v111 = (uint64_t)outlined release of Lyrics.TextLine.BackgroundVocals?(v156);
      }
      else
      {
        v112 = _swiftEmptyArrayStorage;
      }
      *(void *)&v135 = v13;
      ((void (*)(uint64_t *__return_ptr, uint64_t))v12)(v157, v111);
      outlined init with take of Lyrics.TextLine.BackgroundVocals?((uint64_t)v157, (uint64_t)v158);
      if (v158[3])
      {
        v113 = v159;
        outlined release of Lyrics.TextLine.BackgroundVocals?(v157);
        v114 = v113 & 1;
      }
      else
      {
        v114 = 0;
      }
      memcpy(v167, (const void *)(v18 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs), 0x219uLL);
      v115 = objc_allocWithZone((Class)type metadata accessor for SyncedLyricsLineView.SBS_TextContentView());
      outlined retain of SyncedLyricsViewController.Specs((uint64_t)v167);
      v116 = SyncedLyricsLineView.SBS_TextContentView.init(text:words:alignment:direction:capabilities:backgroundText:backgroundWords:backgroundDirection:specs:)((uint64_t)v137, v136, v77, (uint64_t)v134, (char)v138, v139, (uint64_t)v133, v80, (uint64_t)v112, v114, v167);
      v117 = *(void **)v16;
      *(void *)double v16 = v116;
      *(void *)(v16 + 8) = &protocol witness table for SyncedLyricsLineView.SBS_TextContentView;
      v118 = v116;
      SyncedLyricsLineView.contentView.didset(v117);
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
    }
    else
    {
      if (v17)
      {
        type metadata accessor for SyncedLyricsLineView.TextContentView();
        id v15 = swift_dynamicCastClass();
        if (v15)
        {
          v81 = v15;
          v138 = v17;
          v82 = v10();
          v83 = v81 + OBJC_IVAR___MusicTextContentView_content;
          v139 = v9;
          v85 = *(void **)(v81 + OBJC_IVAR___MusicTextContentView_content);
          v84 = *(void *)(v81 + OBJC_IVAR___MusicTextContentView_content + 8);
          v86 = *(unsigned char *)(v81 + OBJC_IVAR___MusicTextContentView_content + 16);
          *(void *)v83 = v82;
          *(void *)(v83 + 8) = v87;
          *(unsigned char *)(v83 + 16) = 0;
          swift_bridgeObjectRetain_n();
          outlined copy of SyncedLyricsLineView.TextContentView.Content(v85, v84, v86);
          outlined consume of SyncedLyricsLineView.TextContentView.Content(v85, v84, v86);
          v88 = specialized Set.init(_nonEmptyArrayLiteral:)((uint64_t)&outlined read-only object #0 of SyncedLyricsLineView.updateContentView());
          SyncedLyricsLineView.TextContentView.updateLabel(changes:oldContent:)(v88, (uint64_t)v85, v84, v86);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          outlined consume of SyncedLyricsLineView.TextContentView.Content(v85, v84, v86);
          swift_bridgeObjectRelease();
          *(void *)(v81 + OBJC_IVAR___MusicTextContentView_alignment) = *(void *)(v1
                                                                                    + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_alignment);
          v89 = specialized Set.init(_nonEmptyArrayLiteral:)((uint64_t)&outlined read-only object #1 of SyncedLyricsLineView.updateContentView());
          SyncedLyricsLineView.TextContentView.updateLabel(changes:oldContent:)(v89, 0, 0, 255);

          swift_release();
          swift_release();
          swift_release();
LABEL_48:
          swift_bridgeObjectRelease();
LABEL_49:
          swift_bridgeObjectRelease();
          return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v154);
        }
      }
      v100 = (void *)((uint64_t (*)(uint64_t))v10)(v15);
      v102 = v101;
      memcpy(v167, (const void *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs), 0x219uLL);
      objc_allocWithZone((Class)type metadata accessor for SyncedLyricsLineView.TextContentView());
      outlined retain of SyncedLyricsViewController.Specs((uint64_t)v167);
      v103 = SyncedLyricsLineView.TextContentView.init(content:specs:)(v100, v102, 0, (uint64_t)v167);
      *(void *)&v103[OBJC_IVAR___MusicTextContentView_alignment] = *(void *)(v1
                                                                               + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_alignment);
      v104 = specialized Set.init(_nonEmptyArrayLiteral:)((uint64_t)&outlined read-only object #2 of SyncedLyricsLineView.updateContentView());
      SyncedLyricsLineView.TextContentView.updateLabel(changes:oldContent:)(v104, 0, 0, 255);
      swift_bridgeObjectRelease();
      v105 = *(void **)v16;
      *(void *)double v16 = v103;
      *(void *)(v16 + 8) = &protocol witness table for SyncedLyricsLineView.TextContentView;
      v106 = v103;
      SyncedLyricsLineView.contentView.didset(v105);
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
    }
  }
  else if (swift_dynamicCast())
  {
    v139 = v147;
    v140 = v1;
    v141 = [objc_allocWithZone((Class)NSMutableAttributedString) init];
    String.LocalizationValue.init(stringLiteral:)();
    v137 = *(id *)(v3 + 16);
    v138 = (id)(v3 + 16);
    ((void (*)(char *, char *, uint64_t))v137)(v5, v7, v2);
    if (one-time initialization token for module != -1) {
      swift_once();
    }
    float v23 = (id)static NSBundle.module;
    static Locale.current.getter();
    id v24 = String.init(localized:table:bundle:locale:comment:)();
    v128 = v25;
    v129 = v24;
    double v26 = *(void (**)(char *, uint64_t))(v3 + 8);
    v127 = v3 + 8;
    v132 = v26;
    v26(v7, v2);
    v136 = __swift_instantiateConcreteTypeFromMangledName(&_ss23_ContiguousArrayStorageCySo21NSAttributedStringKeya_yptGMD_0);
    double v27 = swift_allocObject();
    v135 = xmmword_100493400;
    *(_OWORD *)(v27 + 16) = xmmword_100493400;
    *(void *)(v27 + 32) = NSFontAttributeName;
    double v28 = self;
    v134 = v28;
    v133 = NSFontAttributeName;
    id v29 = [v28 defaultMetrics];
    v131 = self;
    id v30 = [v131 systemFontOfSize:22.0 weight:UIFontWeightBold];
    NSString v31 = [v29 scaledFontForFont:v30];

    v130 = type metadata accessor for UIMenu(0, (unint64_t *)&_sSo6UIFontCML_0);
    *(void *)(v27 + 64) = v130;
    *(void *)(v27 + 40) = v31;
    _sSD17dictionaryLiteralSDyxq_Gx_q_td_tcfCSo21NSAttributedStringKeya_ypTgm5_0(v27);
    uint64_t v32 = objc_allocWithZone((Class)NSAttributedString);
    uint64_t v33 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    _sSo21NSAttributedStringKeyaMa_1(0);
    v129 = v34;
    v128 = lazy protocol witness table accessor for type NSAttributedStringKey and conformance NSAttributedStringKey();
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    NSString v36 = [v32 initWithString:v33 attributes:isa];

    v126 = v36;
    [v141 appendAttributedString:v36];
    *(void *)&v167[0] = v139;
    String.LocalizationValue.init(stringLiteral:)();
    ((void (*)(char *, char *, uint64_t))v137)(v5, v7, v2);
    id v37 = (id)static NSBundle.module;
    static Locale.current.getter();
    String.init(localized:table:bundle:locale:comment:)();
    v132(v7, v2);
    __swift_instantiateConcreteTypeFromMangledName(&_sSaySSGMD_1);
    _sSaySSGSayxGSKsWl_1();
    BidirectionalCollection<>.joined(separator:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v38 = swift_allocObject();
    *(_OWORD *)(v38 + 16) = v135;
    uint64_t v39 = v133;
    *(void *)(v38 + 32) = v133;
    int64_t v40 = v39;
    uint64_t v41 = [v134 defaultMetrics];
    v42 = [v131 systemFontOfSize:22.0 weight:UIFontWeightMedium];
    v43 = [v41 scaledFontForFont:v42];

    *(void *)(v38 + 64) = v130;
    *(void *)(v38 + 40) = v43;
    _sSD17dictionaryLiteralSDyxq_Gx_q_td_tcfCSo21NSAttributedStringKeya_ypTgm5_0(v38);
    v44 = objc_allocWithZone((Class)NSAttributedString);
    v45 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    v46 = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    v47 = [v44 initWithString:v45 attributes:v46];

    v48 = v141;
    [v141 appendAttributedString:v47];
    v49 = v140;
    v50 = v140 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView;
    v51 = *(void **)(v140 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView);
    if (v51)
    {
      type metadata accessor for SyncedLyricsLineView.TextContentView();
      v52 = swift_dynamicCastClass();
      if (v52)
      {
        v53 = v52;
        v54 = v52 + OBJC_IVAR___MusicTextContentView_content;
        v55 = *(void **)(v52 + OBJC_IVAR___MusicTextContentView_content);
        v56 = *(void *)(v52 + OBJC_IVAR___MusicTextContentView_content + 8);
        v57 = *(unsigned char *)(v52 + OBJC_IVAR___MusicTextContentView_content + 16);
        *(void *)v54 = v48;
        *(void *)(v54 + 8) = 0;
        *(unsigned char *)(v54 + 16) = 1;
        v58 = v48;
        v59 = v51;
        outlined copy of SyncedLyricsLineView.TextContentView.Content(v55, v56, v57);
        outlined consume of SyncedLyricsLineView.TextContentView.Content(v55, v56, v57);
        v60 = specialized Set.init(_nonEmptyArrayLiteral:)((uint64_t)&outlined read-only object #3 of SyncedLyricsLineView.updateContentView());
        SyncedLyricsLineView.TextContentView.updateLabel(changes:oldContent:)(v60, (uint64_t)v55, v56, v57);

        swift_bridgeObjectRelease();
        outlined consume of SyncedLyricsLineView.TextContentView.Content(v55, v56, v57);
        v61 = 4;
        if (!*(unsigned char *)(v49 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs + 72)) {
          v61 = *(void *)(v49 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs + 64);
        }
        *(void *)(v53 + OBJC_IVAR___MusicTextContentView_alignment) = v61;
        v62 = specialized Set.init(_nonEmptyArrayLiteral:)((uint64_t)&outlined read-only object #4 of SyncedLyricsLineView.updateContentView());
        SyncedLyricsLineView.TextContentView.updateLabel(changes:oldContent:)(v62, 0, 0, 255);

        goto LABEL_49;
      }
    }
    v90 = v49 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs;
    memcpy(v167, (const void *)(v49 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs), 0x219uLL);
    v91 = objc_allocWithZone((Class)type metadata accessor for SyncedLyricsLineView.TextContentView());
    v92 = v48;
    v93 = v48;
    outlined retain of SyncedLyricsViewController.Specs((uint64_t)v167);
    v94 = SyncedLyricsLineView.TextContentView.init(content:specs:)(v92, 0, 1, (uint64_t)v167);
    v95 = v94;
    v96 = *(void *)(v90 + 64);
    if (*(unsigned char *)(v90 + 72)) {
      v96 = 4;
    }
    *(void *)&v94[OBJC_IVAR___MusicTextContentView_alignment] = v96;
    v97 = specialized Set.init(_nonEmptyArrayLiteral:)((uint64_t)&outlined read-only object #5 of SyncedLyricsLineView.updateContentView());
    SyncedLyricsLineView.TextContentView.updateLabel(changes:oldContent:)(v97, 0, 0, 255);
    swift_bridgeObjectRelease();
    v98 = *(void **)v50;
    *(void *)v50 = v95;
    *(void *)(v50 + 8) = &protocol witness table for SyncedLyricsLineView.TextContentView;
    v99 = v95;
    SyncedLyricsLineView.contentView.didset(v98);
  }
  else if (swift_dynamicCast())
  {
    v63 = v142;
    v65 = v143;
    v64 = v144;
    v66 = v145;
    v67 = v1 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView;
    v68 = *(void **)(v1 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView);
    if (v68
      && (type metadata accessor for SyncedLyricsLineView.InstrumentalContentView(),
          (v69 = swift_dynamicCastClass()) != 0))
    {
      v70 = v69;
      v71 = v69 + OBJC_IVAR___MusicInstrumentalContentView_line;
      *(void *)v71 = v63;
      *(double *)(v71 + 8) = v65;
      *(double *)(v71 + 16) = v64;
      *(unsigned char *)(v71 + 24) = v66;
      *(unsigned char *)(v69 + OBJC_IVAR___MusicInstrumentalContentView_isSelected) = 0;
      v72 = v68;
      SyncedLyricsLineView.InstrumentalContentView.reset()();
      v73 = *(void *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_alignment);
      v74 = *(void *)(v70 + OBJC_IVAR___MusicInstrumentalContentView_alignment);
      *(void *)(v70 + OBJC_IVAR___MusicInstrumentalContentView_alignment) = v73;
      if (v73 != v74) {
        SyncedLyricsLineView.InstrumentalContentView.layoutDots()();
      }
    }
    else
    {
      memcpy(v167, (const void *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs), 0x219uLL);
      objc_allocWithZone((Class)type metadata accessor for SyncedLyricsLineView.InstrumentalContentView());
      outlined retain of SyncedLyricsViewController.Specs((uint64_t)v167);
      v107 = (char *)SyncedLyricsLineView.InstrumentalContentView.init(line:specs:)(v63, v66, v167, v65, v64);
      v108 = *(void *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_alignment);
      v109 = *(void *)&v107[OBJC_IVAR___MusicInstrumentalContentView_alignment];
      *(void *)&v107[OBJC_IVAR___MusicInstrumentalContentView_alignment] = v108;
      if (v108 != v109) {
        SyncedLyricsLineView.InstrumentalContentView.layoutDots()();
      }
      v110 = *(void **)v67;
      *(void *)v67 = v107;
      *(void *)(v67 + 8) = &protocol witness table for SyncedLyricsLineView.InstrumentalContentView;
      v72 = v107;
      SyncedLyricsLineView.contentView.didset(v110);
    }
  }
  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v154);
}

id SyncedLyricsLineView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SyncedLyricsLineView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for SyncedLyricsLineView()
{
  return self;
}

char *specialized SyncedLyricsLineView.init(line:alignment:specs:)(uint64_t a1, uint64_t a2, const void *a3)
{
  v3[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_isScrolling] = 1;
  uint64_t v7 = OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_alignment;
  *(void *)&v3[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_alignment] = 0;
  uint64_t v8 = OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_containerView;
  id v9 = objc_allocWithZone((Class)UIView);
  id v10 = v3;
  *(void *)&v3[v8] = [v9 init];
  id v11 = &v10[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView];
  *(void *)id v11 = 0;
  *((void *)v11 + 1) = 0;
  *(void *)&v10[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView____lazy_storage___backgroundView] = 0;
  *(void *)&v10[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_blurRadius] = 0;
  double v12 = &v10[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_previousBlurRadius];
  *(void *)double v12 = 0;
  v12[8] = 1;
  outlined init with copy of AlertPresenting(a1, (uint64_t)&v10[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line]);
  *(void *)&v3[v7] = a2;
  memcpy(&v10[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs], a3, 0x219uLL);
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v13 = objc_allocWithZone((Class)CAFilter);
  outlined retain of SyncedLyricsViewController.Specs((uint64_t)a3);
  NSString v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v15 = [v13 initWithType:v14];

  *(void *)&v10[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_blurFilter] = v15;
  v37.receiver = v10;
  v37.super_class = (Class)type metadata accessor for SyncedLyricsLineView();
  double v16 = (char *)objc_msgSendSuper2(&v37, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  uint64_t v17 = OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_containerView;
  double v18 = *(void **)&v16[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_containerView];
  float v19 = v16;
  [v18 setUserInteractionEnabled:0];
  [*(id *)&v16[v17] setAutoresizingMask:18];
  [v19 addSubview:*(void *)&v16[v17]];
  [v19 setExclusiveTouch:1];
  long long v20 = *(_OWORD *)&v19[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs + 296];
  long long v21 = *(_OWORD *)&v19[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs + 312];
  v36[0] = *(_OWORD *)&v19[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs + 280];
  v36[1] = v20;
  v36[2] = v21;
  [v19 setTransform:v36];
  id v22 = [v19 layer];
  [v22 setShouldRasterize:1];

  id v23 = [v19 layer];
  id v24 = [self mainScreen];
  [v24 scale];
  double v26 = v25;

  [v23 setRasterizationScale:v26];
  uint64_t v27 = OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_blurFilter;
  id v28 = *(id *)&v19[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_blurFilter];
  Class isa = Int._bridgeToObjectiveC()().super.super.isa;
  [v28 setValue:isa forKey:kCAFilterInputRadius];

  id v30 = [v19 layer];
  __swift_instantiateConcreteTypeFromMangledName(&_ss23_ContiguousArrayStorageCyypGMD_1);
  uint64_t v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = xmmword_100493400;
  uint64_t v32 = *(void **)&v19[v27];
  *(void *)(v31 + 56) = type metadata accessor for UIMenu(0, (unint64_t *)&lazy cache variable for type metadata for CAFilter);
  *(void *)(v31 + 32) = v32;
  id v33 = v32;
  Class v34 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v30 setFilters:v34];

  SyncedLyricsLineView.updateContentView()();
  SyncedLyricsLineView.reset()();

  __swift_destroy_boxed_opaque_existential_0Tm(a1);
  return v19;
}

unint64_t _sSaySSGSayxGSKsWl_1()
{
  unint64_t result = _sSaySSGSayxGSKsWL_1;
  if (!_sSaySSGSayxGSKsWL_1)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&_sSaySSGMD_1);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&_sSaySSGSayxGSKsWL_1);
  }
  return result;
}

uint64_t outlined init with take of Lyrics.TextLine.BackgroundVocals?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Lyrics.TextLine.BackgroundVocals?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10032D3DC()
{
  return swift_deallocObject();
}

void partial apply for closure #1 in SyncedLyricsLineView.setBlurRadius(_:animated:)()
{
  closure #1 in SyncedLyricsLineView.setBlurRadius(_:animated:)(*(void **)(v0 + 16));
}

uint64_t block_copy_helper_58(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_58()
{
  return swift_release();
}

uint64_t sub_10032D434()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_10032D46C()
{
  swift_release();

  return swift_deallocObject();
}

void partial apply for closure #1 in SyncedLyricsLineView.setSelected(_:animator:)()
{
  closure #1 in SyncedLyricsLineView.setSelected(_:animator:)(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

void specialized SyncedLyricsLineView.init(coder:)()
{
  v0[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_isScrolling] = 1;
  *(void *)&v0[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_alignment] = 0;
  uint64_t v1 = OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_containerView;
  *(void *)&v0[v1] = [objc_allocWithZone((Class)UIView) init];
  uint64_t v2 = &v0[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView];
  *uint64_t v2 = 0;
  v2[1] = 0;
  *(void *)&v0[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView____lazy_storage___backgroundView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_blurRadius] = 0;
  uint64_t v3 = &v0[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_previousBlurRadius];
  *(void *)uint64_t v3 = 0;
  v3[8] = 1;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_10032D594()
{
  return swift_deallocObject();
}

void partial apply for closure #1 in SyncedLyricsLineView.isHighlighted.didset()
{
  closure #1 in SyncedLyricsLineView.isHighlighted.didset(*(void **)(v0 + 16), *(char **)(v0 + 24));
}

id partial apply for closure #2 in SyncedLyricsLineView.isHighlighted.didset()
{
  return closure #2 in SyncedLyricsLineView.isHighlighted.didset(*(char **)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t Radiosity.Specs.Radiosity.opacity.getter()
{
  uint64_t v1 = *v0;
  swift_retain();
  return v1;
}

double SyncedLyricsManager.Configuration.maxEndTimeOffset.getter()
{
  return *(double *)(v0 + 24);
}

uint64_t SyncedLyricsManager.Configuration.init(animationDuration:finishLineAnimationDuration:maxEndTimeOffset:maxSelectedLines:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, double a5@<D0>, double a6@<D1>)
{
  *(void *)a4 = result;
  *(void *)(a4 + 8) = a2;
  *(double *)(a4 + 16) = a5;
  *(double *)(a4 + 24) = a6;
  *(void *)(a4 + 32) = a3;
  return result;
}

uint64_t SyncedLyricsManager.configuration.getter@<X0>(uint64_t a1@<X8>)
{
  swift_beginAccess();
  uint64_t v3 = *(void *)(v1 + 32);
  uint64_t v4 = *(void *)(v1 + 56);
  *(void *)a1 = *(void *)(v1 + 24);
  *(void *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(v1 + 40);
  *(void *)(a1 + 32) = v4;
  return swift_retain();
}

uint64_t SyncedLyricsManager.configuration.setter(uint64_t a1)
{
  swift_beginAccess();
  long long v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 40) = v3;
  *(void *)(v1 + 56) = *(void *)(a1 + 32);
  return swift_release();
}

uint64_t SyncedLyricsManager.delegate.getter()
{
  return swift_unknownObjectWeakLoadStrong();
}

uint64_t SyncedLyricsManager.delegate.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 72) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*SyncedLyricsManager.delegate.modify(void *a1))(uint64_t a1, char a2)
{
  long long v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  uint64_t v5 = *(void *)(v1 + 72);
  v3[3] = Strong;
  v3[4] = v5;
  return SyncedLyricsManager.delegate.modify;
}

void SyncedLyricsManager.delegate.modify(uint64_t a1, char a2)
{
  long long v3 = *(void **)a1;
  *(void *)(*(void *)(*(void *)a1 + 40) + 72) = *(void *)(*(void *)a1 + 32);
  swift_unknownObjectWeakAssign();
  if (a2)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }

  free(v3);
}

uint64_t key path setter for SyncedLyricsManager.selectedLines : SyncedLyricsManager(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  *(void *)(v3 + 80) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t SyncedLyricsManager.selectedLines.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SyncedLyricsManager.isPlayingSpatial.getter()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 88);
}

uint64_t SyncedLyricsManager.isPlayingSpatial.setter(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 88) = a1;
  return result;
}

uint64_t (*SyncedLyricsManager.isPlayingSpatial.modify())()
{
  return ArtworkVideoReportingController.isEnabled.modify;
}

void SyncedLyricsManager.spatialOffset.getter()
{
  swift_beginAccess();
  if (*(unsigned char *)(v0 + 88) == 1) {
    Lyrics.spatialOffset.getter();
  }
}

uint64_t SyncedLyricsManager.adjustedElapsedTime.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(double (**)(uint64_t))(v0 + 96);
  if (v1)
  {
    uint64_t v2 = swift_retain();
    double v3 = v1(v2);
    swift_beginAccess();
    double v4 = 0.0;
    if (*(unsigned char *)(v0 + 88) == 1)
    {
      Lyrics.spatialOffset.getter();
      double v4 = v5;
    }
    outlined consume of (@escaping @callee_guaranteed () -> ())?((uint64_t)v1);
    *(double *)&uint64_t result = v3 - v4;
  }
  else
  {
    *(double *)&uint64_t result = 0.0;
  }
  return result;
}

void SyncedLyricsManager.elapsedTimeProvider.didset()
{
  uint64_t v1 = v0;
  swift_beginAccess();
  uint64_t v2 = *(double (**)(uint64_t))(v0 + 96);
  if (!v2) {
    goto LABEL_27;
  }
  uint64_t v3 = swift_retain();
  double v4 = v2(v3);
  swift_beginAccess();
  double v5 = 0.0;
  if (*(unsigned char *)(v0 + 88) == 1)
  {
    Lyrics.spatialOffset.getter();
    double v5 = v6;
  }
  outlined consume of (@escaping @callee_guaranteed () -> ())?((uint64_t)v2);
  double v7 = v4 - v5;
  uint64_t v8 = *(void *)(v0 + 16);
  Lyrics.line(before:useOriginalLines:)(0, (uint64_t)&v28, v7 + 0.1);
  if (!*((void *)&v29 + 1))
  {
    uint64_t v12 = *(void *)(v8 + 40);
    if (*(void *)(v12 + 16))
    {
      outlined init with copy of AlertPresenting(v12 + 32, (uint64_t)&v31);
    }
    else
    {
      uint64_t v33 = 0;
      long long v31 = 0u;
      long long v32 = 0u;
    }
    outlined destroy of LyricsLine?((uint64_t)&v28);
    if (*((void *)&v32 + 1)) {
      goto LABEL_6;
    }
    goto LABEL_26;
  }
  outlined init with take of AlertPresenting(&v28, (uint64_t)&v31);
  if (!*((void *)&v32 + 1))
  {
LABEL_26:
    outlined destroy of LyricsLine?((uint64_t)&v31);
LABEL_27:
    SyncedLyricsManager.update()();
    return;
  }
LABEL_6:
  outlined init with take of AlertPresenting(&v31, (uint64_t)v34);
  uint64_t v10 = v35;
  uint64_t v9 = v36;
  __swift_project_boxed_opaque_existential_0Tm(v34, v35);
  double v11 = (*(double (**)(uint64_t))(*(void *)(v9 + 8) + 8))(v10);
  outlined init with copy of AlertPresenting((uint64_t)v34, (uint64_t)&v31);
  if (v11 >= v7)
  {
    uint64_t v14 = *((void *)&v32 + 1);
    uint64_t v13 = v33;
    __swift_project_boxed_opaque_existential_0Tm(&v31, *((uint64_t *)&v32 + 1));
    double v15 = vabdd_f64(v7, (*(double (**)(uint64_t))(*(void *)(v13 + 8) + 8))(v14));
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v31);
    if (v15 > 0.1)
    {
      outlined init with copy of AlertPresenting((uint64_t)v34, (uint64_t)&v28);
      swift_beginAccess();
      outlined assign with copy of LyricsLine?((uint64_t)&v28, v1 + 112);
      swift_endAccess();
      outlined destroy of LyricsLine?((uint64_t)&v28);
      swift_beginAccess();
      *(void *)(v1 + 80) = _swiftEmptyArrayStorage;
      swift_bridgeObjectRelease();
      swift_beginAccess();
      if (swift_unknownObjectWeakLoadStrong())
      {
        uint64_t v16 = *(void *)(v1 + 72);
        uint64_t ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v1, ObjectType, v16);
        swift_unknownObjectRelease();
      }
      if (!swift_unknownObjectWeakLoadStrong()) {
        goto LABEL_23;
      }
      uint64_t v18 = *(void *)(v1 + 72);
      uint64_t v19 = swift_getObjectType();
      (*(void (**)(uint64_t, void *, void, uint64_t, uint64_t, double))(v18 + 16))(v1, v34, 0, v19, v18, v7);
      goto LABEL_22;
    }
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v31);
  }
  uint64_t v20 = v35;
  uint64_t v21 = v36;
  __swift_project_boxed_opaque_existential_0Tm(v34, v35);
  uint64_t v22 = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 16))(v20, v21);
  uint64_t v23 = v22 + 1;
  if (__OFADD__(v22, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v24 = *(void *)(v8 + 40);
    if (v23 >= *(void *)(v24 + 16))
    {
      uint64_t v30 = 0;
      long long v28 = 0u;
      long long v29 = 0u;
      goto LABEL_20;
    }
    if ((v23 & 0x8000000000000000) == 0)
    {
      outlined init with copy of AlertPresenting(v24 + 40 * v23 + 32, (uint64_t)&v28);
LABEL_20:
      swift_beginAccess();
      outlined assign with copy of LyricsLine?((uint64_t)&v28, v1 + 112);
      swift_endAccess();
      outlined destroy of LyricsLine?((uint64_t)&v28);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<LyricsLine>);
      uint64_t v25 = swift_allocObject();
      *(_OWORD *)(v25 + 16) = xmmword_100493400;
      outlined init with copy of AlertPresenting((uint64_t)v34, v25 + 32);
      swift_beginAccess();
      *(void *)(v1 + 80) = v25;
      swift_bridgeObjectRelease();
      swift_beginAccess();
      if (!swift_unknownObjectWeakLoadStrong())
      {
LABEL_23:
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v34);
        return;
      }
      uint64_t v26 = *(void *)(v1 + 72);
      uint64_t v27 = swift_getObjectType();
      (*(void (**)(uint64_t, void *, uint64_t, uint64_t, uint64_t, double))(v26 + 16))(v1, v34, 1, v27, v26, v7);
LABEL_22:
      swift_unknownObjectRelease();
      goto LABEL_23;
    }
  }
  __break(1u);
}

uint64_t SyncedLyricsManager.elapsedTimeProvider.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 96);
  outlined copy of (@escaping @callee_guaranteed () -> ())?(v1);
  return v1;
}

uint64_t SyncedLyricsManager.elapsedTimeProvider.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t v5 = *(void *)(v2 + 96);
  *(void *)(v2 + 96) = a1;
  *(void *)(v2 + 104) = a2;
  outlined copy of (@escaping @callee_guaranteed () -> ())?(a1);
  outlined consume of (@escaping @callee_guaranteed () -> ())?(v5);
  SyncedLyricsManager.elapsedTimeProvider.didset();
  return outlined consume of (@escaping @callee_guaranteed () -> ())?(a1);
}

void (*SyncedLyricsManager.elapsedTimeProvider.modify(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return SyncedLyricsManager.elapsedTimeProvider.modify;
}

void SyncedLyricsManager.elapsedTimeProvider.modify(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    SyncedLyricsManager.elapsedTimeProvider.didset();
  }
}

uint64_t SyncedLyricsManager.__allocating_init(lyrics:configuration:delegate:isPlayingSpatial:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v10 = swift_allocObject();
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v12 = specialized SyncedLyricsManager.init(lyrics:configuration:delegate:isPlayingSpatial:)(a1, a2, a3, a5, v10, ObjectType, a4);
  swift_unknownObjectRelease();
  return v12;
}

uint64_t SyncedLyricsManager.init(lyrics:configuration:delegate:isPlayingSpatial:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v12 = specialized SyncedLyricsManager.init(lyrics:configuration:delegate:isPlayingSpatial:)(a1, a2, a3, a5, v5, ObjectType, a4);
  swift_unknownObjectRelease();
  return v12;
}

Swift::Void __swiftcall SyncedLyricsManager.update()()
{
  uint64_t v1 = v0;
  SyncedLyricsManager.updateNextLineIfNeeded()();
  swift_beginAccess();
  outlined init with copy of LyricsLine?(v0 + 112, (uint64_t)&v54);
  if (v55)
  {
    outlined init with take of AlertPresenting(&v54, (uint64_t)v62);
    swift_beginAccess();
    uint64_t v2 = *(double (**)(uint64_t))(v0 + 96);
    if (v2)
    {
      uint64_t v3 = swift_retain();
      double v4 = v2(v3);
      swift_beginAccess();
      double v5 = 0.0;
      if (*(unsigned char *)(v0 + 88) == 1)
      {
        Lyrics.spatialOffset.getter();
        double v5 = v6;
      }
      outlined consume of (@escaping @callee_guaranteed () -> ())?((uint64_t)v2);
      uint64_t v7 = v0 + 80;
      swift_beginAccess();
      uint64_t v8 = *(void *)(v0 + 80);
      uint64_t v9 = *(void *)(v8 + 16);
      if (v9)
      {
        outlined init with copy of AlertPresenting(v8 + 40 * v9 - 8, (uint64_t)&v54);
        uint64_t v11 = v63;
        uint64_t v10 = v64;
        __swift_project_boxed_opaque_existential_0Tm(v62, v63);
        double v12 = (*(double (**)(uint64_t))(*(void *)(v10 + 8) + 8))(v11);
        uint64_t v14 = v55;
        uint64_t v13 = v56;
        __swift_project_boxed_opaque_existential_0Tm(&v54, (uint64_t)v55);
        double v15 = v12 - (*((double (**)(ValueMetadata *))v13[1] + 2))(v14);
        swift_beginAccess();
        uint64_t v16 = *(double (**)(uint64_t, double))(v1 + 24);
        uint64_t v17 = swift_retain();
        double v18 = v16(v17, v15);
        swift_release();
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v54);
      }
      else
      {
        swift_beginAccess();
        uint64_t v19 = *(double (**)(uint64_t, double))(v0 + 24);
        uint64_t v20 = swift_retain();
        double v18 = v19(v20, 0.0);
        swift_release();
      }
      double v21 = v4 - v5;
      uint64_t v22 = *(void *)(*(void *)v7 + 16);
      if (v22)
      {
        outlined init with copy of AlertPresenting(*(void *)v7 + 40 * v22 - 8, (uint64_t)&v54);
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for LyricsLine);
        if (swift_dynamicCast())
        {
          uint64_t v23 = v59[0];
          uint64_t v24 = v59[1];
          uint64_t v25 = v59[2];
          char v26 = v60;
          swift_beginAccess();
          if (swift_unknownObjectWeakLoadStrong())
          {
            uint64_t v27 = *(void *)(v1 + 72);
            uint64_t ObjectType = swift_getObjectType();
            v55 = &type metadata for Lyrics.InstrumentalLine;
            v56 = &protocol witness table for Lyrics.InstrumentalLine;
            uint64_t v29 = swift_allocObject();
            *(void *)&long long v54 = v29;
            *(void *)(v29 + 16) = v23;
            *(void *)(v29 + 24) = v24;
            *(void *)(v29 + 32) = v25;
            *(unsigned char *)(v29 + 40) = v26;
            (*(void (**)(uint64_t, long long *, uint64_t, uint64_t, double))(v27 + 24))(v1, &v54, ObjectType, v27, v21);
            swift_unknownObjectRelease();
            __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v54);
          }
        }
      }
      swift_beginAccess();
      if (calculateNextLineAction #1 (elapsedTime:) in SyncedLyricsManager.update()(v62, v1, v21 + *(double *)(v1 + 40), v18) == 1)
      {
        uint64_t v30 = *(void *)(*(void *)v7 + 16);
        if (v30)
        {
          uint64_t v31 = *(void *)v7 + 32;
          swift_bridgeObjectRetain();
          swift_beginAccess();
          do
          {
            outlined init with copy of AlertPresenting(v31, (uint64_t)&v54);
            if (swift_unknownObjectWeakLoadStrong())
            {
              uint64_t v32 = *(void *)(v1 + 72);
              uint64_t v33 = swift_getObjectType();
              (*(void (**)(uint64_t, long long *, uint64_t, uint64_t))(v32 + 40))(v1, &v54, v33, v32);
              swift_unknownObjectRelease();
            }
            __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v54);
            v31 += 40;
            --v30;
          }
          while (v30);
          swift_bridgeObjectRelease();
        }
      }
      uint64_t v35 = v63;
      uint64_t v34 = v64;
      __swift_project_boxed_opaque_existential_0Tm(v62, v63);
      if ((*(double (**)(uint64_t))(*(void *)(v34 + 8) + 8))(v35) <= v21 + v18)
      {
        uint64_t v36 = *(void *)(*(void *)v7 + 16);
        if (v36)
        {
          outlined init with copy of AlertPresenting(*(void *)v7 + 40 * v36 - 8, (uint64_t)v59);
          uint64_t v38 = v63;
          uint64_t v37 = v64;
          __swift_project_boxed_opaque_existential_0Tm(v62, v63);
          double v39 = (*(double (**)(uint64_t))(*(void *)(v37 + 8) + 8))(v38);
          uint64_t v41 = v60;
          uint64_t v40 = v61;
          __swift_project_boxed_opaque_existential_0Tm(v59, v60);
          double v42 = (*(double (**)(uint64_t))(*(void *)(v40 + 8) + 16))(v41);
          uint64_t v44 = v60;
          uint64_t v43 = v61;
          __swift_project_boxed_opaque_existential_0Tm(v59, v60);
          double v45 = (*(double (**)(uint64_t))(*(void *)(v43 + 8) + 16))(v44) - *(double *)(v1 + 48);
          outlined init with copy of AlertPresenting((uint64_t)v62, (uint64_t)&v54);
          __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for LyricsLine);
          if (swift_dynamicCast()) {
            goto LABEL_37;
          }
          outlined init with copy of AlertPresenting((uint64_t)v59, (uint64_t)&v54);
          if (swift_dynamicCast()) {
            goto LABEL_37;
          }
          if (*(void *)(*(void *)(v1 + 80) + 16) >= *(void *)(v1 + 56)) {
            goto LABEL_37;
          }
          uint64_t v46 = v63;
          uint64_t v47 = v64;
          __swift_project_boxed_opaque_existential_0Tm(v62, v63);
          uint64_t v48 = (*(uint64_t (**)(uint64_t, uint64_t))(v47 + 16))(v46, v47);
          uint64_t v49 = v60;
          uint64_t v50 = v61;
          __swift_project_boxed_opaque_existential_0Tm(v59, v60);
          if ((*(uint64_t (**)(uint64_t, uint64_t))(v50 + 16))(v49, v50) >= v48
            || (uint64_t v52 = v63,
                uint64_t v51 = v64,
                __swift_project_boxed_opaque_existential_0Tm(v62, v63),
                (*(double (**)(uint64_t))(*(void *)(v51 + 8) + 8))(v52) >= v21))
          {
LABEL_37:
            if (v45 < v21
              || (outlined init with copy of AlertPresenting((uint64_t)v59, (uint64_t)v58), (swift_dynamicCast() & 1) != 0)
              && (double v53 = v57,
                  swift_release(),
                  swift_release(),
                  swift_release(),
                  swift_bridgeObjectRelease(),
                  v53 - *(double *)(v1 + 48) < v21))
            {
              SyncedLyricsManager.moveToLine(line:elapsedTime:gap:)(v62, COERCE__INT64(v39 - v42), 0, v21);
            }
          }
          else
          {
            SyncedLyricsManager.selectLine(line:)(v62);
          }
          __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v59);
        }
        else
        {
          SyncedLyricsManager.moveToLine(line:elapsedTime:gap:)(v62, 0, 1, v21);
        }
      }
    }
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v62);
  }
  else
  {
    outlined destroy of LyricsLine?((uint64_t)&v54);
  }
}

uint64_t calculateNextLineAction #1 (elapsedTime:) in SyncedLyricsManager.update()(void *a1, uint64_t a2, double a3, double a4)
{
  double v7 = a3 + a4;
  uint64_t v9 = a1[3];
  uint64_t v8 = a1[4];
  __swift_project_boxed_opaque_existential_0Tm(a1, v9);
  if ((*(double (**)(uint64_t))(*(void *)(v8 + 8) + 8))(v9) <= v7)
  {
    swift_beginAccess();
    uint64_t v10 = *(void *)(a2 + 80);
    uint64_t v11 = *(void *)(v10 + 16);
    if (v11)
    {
      outlined init with copy of AlertPresenting(v10 + 40 * v11 - 8, (uint64_t)v28);
      uint64_t v13 = v29;
      uint64_t v12 = v30;
      __swift_project_boxed_opaque_existential_0Tm(v28, v29);
      double v14 = (*(double (**)(uint64_t))(*(void *)(v12 + 8) + 16))(v13);
      swift_beginAccess();
      double v15 = v14 - *(double *)(a2 + 48);
      outlined init with copy of AlertPresenting((uint64_t)a1, (uint64_t)v25);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for LyricsLine);
      if ((swift_dynamicCast() & 1) == 0)
      {
        outlined init with copy of AlertPresenting((uint64_t)v28, (uint64_t)v25);
        if (!swift_dynamicCast() && *(void *)(*(void *)(a2 + 80) + 16) < *(void *)(a2 + 56))
        {
          uint64_t v16 = a1[3];
          uint64_t v17 = a1[4];
          __swift_project_boxed_opaque_existential_0Tm(a1, v16);
          uint64_t v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 16))(v16, v17);
          uint64_t v19 = v29;
          uint64_t v20 = v30;
          __swift_project_boxed_opaque_existential_0Tm(v28, v29);
          if ((*(uint64_t (**)(uint64_t, uint64_t))(v20 + 16))(v19, v20) < v18)
          {
            uint64_t v22 = a1[3];
            uint64_t v21 = a1[4];
            __swift_project_boxed_opaque_existential_0Tm(a1, v22);
            if ((*(double (**)(uint64_t))(*(void *)(v21 + 8) + 8))(v22) < a3)
            {
              __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v28);
              return 2;
            }
          }
        }
      }
      if (v15 < a3
        || (outlined init with copy of AlertPresenting((uint64_t)v28, (uint64_t)v27), (swift_dynamicCast() & 1) != 0)
        && (double v24 = v26,
            swift_release(),
            swift_release(),
            swift_release(),
            swift_bridgeObjectRelease(),
            v24 - *(double *)(a2 + 48) < a3))
      {
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v28);
        return 1;
      }
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v28);
    }
  }
  return 0;
}

uint64_t SyncedLyricsManager.moveToLine(line:elapsedTime:gap:)(void *a1, uint64_t a2, char a3, double a4)
{
  double v5 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<LyricsLine>);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_100493400;
  outlined init with copy of AlertPresenting((uint64_t)a1, v10 + 32);
  swift_beginAccess();
  v5[10] = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = v5[2];
  uint64_t v12 = a1[3];
  uint64_t v13 = a1[4];
  __swift_project_boxed_opaque_existential_0Tm(a1, v12);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 16))(v12, v13);
  uint64_t v15 = result + 1;
  if (__OFADD__(result, 1))
  {
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v16 = *(void *)(v11 + 40);
  if (v15 < *(void *)(v16 + 16))
  {
    if ((v15 & 0x8000000000000000) == 0)
    {
      outlined init with copy of AlertPresenting(v16 + 40 * v15 + 32, (uint64_t)v19);
      goto LABEL_6;
    }
LABEL_10:
    __break(1u);
    return result;
  }
  uint64_t v20 = 0;
  memset(v19, 0, sizeof(v19));
LABEL_6:
  swift_beginAccess();
  outlined assign with copy of LyricsLine?((uint64_t)v19, (uint64_t)(v5 + 14));
  swift_endAccess();
  outlined destroy of LyricsLine?((uint64_t)v19);
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v17 = v5[9];
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(void *, void *, uint64_t, void, uint64_t, uint64_t, double))(v17 + 8))(v5, a1, a2, a3 & 1, ObjectType, v17, a4);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t SyncedLyricsManager.selectLine(line:)(void *a1)
{
  uint64_t v2 = v1;
  outlined init with copy of AlertPresenting((uint64_t)a1, (uint64_t)&v23);
  double v4 = v1 + 10;
  swift_beginAccess();
  double v5 = (void *)v2[10];
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v2[10] = v5;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    double v5 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, v5[2] + 1, 1, v5);
    *double v4 = (uint64_t)v5;
  }
  unint64_t v8 = v5[2];
  unint64_t v7 = v5[3];
  if (v8 >= v7 >> 1) {
    *double v4 = (uint64_t)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((void *)(v7 > 1), v8 + 1, 1, v5);
  }
  uint64_t v9 = *((void *)&v24 + 1);
  uint64_t v10 = v25;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v23, *((uint64_t *)&v24 + 1));
  __chkstk_darwin();
  uint64_t v12 = &v22[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(unsigned char *))(v13 + 16))(v12);
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v8, (uint64_t)v12, v4, v9, v10);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v23);
  uint64_t v14 = v2[2];
  uint64_t v15 = a1[3];
  uint64_t v16 = a1[4];
  __swift_project_boxed_opaque_existential_0Tm(a1, v15);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 16))(v15, v16);
  uint64_t v18 = result + 1;
  if (__OFADD__(result, 1))
  {
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v19 = *(void *)(v14 + 40);
  if (v18 < *(void *)(v19 + 16))
  {
    if ((v18 & 0x8000000000000000) == 0)
    {
      outlined init with copy of AlertPresenting(v19 + 40 * v18 + 32, (uint64_t)&v23);
      goto LABEL_10;
    }
LABEL_14:
    __break(1u);
    return result;
  }
  uint64_t v25 = 0;
  long long v23 = 0u;
  long long v24 = 0u;
LABEL_10:
  swift_beginAccess();
  outlined assign with copy of LyricsLine?((uint64_t)&v23, (uint64_t)(v2 + 14));
  swift_endAccess();
  outlined destroy of LyricsLine?((uint64_t)&v23);
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v20 = v2[9];
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(void *, void *, uint64_t, uint64_t))(v20 + 32))(v2, a1, ObjectType, v20);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t SyncedLyricsManager.updateNextLineIfNeeded()()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0 + 112;
  swift_beginAccess();
  outlined init with copy of LyricsLine?(v0 + 112, (uint64_t)&v27);
  uint64_t v3 = *((void *)&v28 + 1);
  uint64_t result = outlined destroy of LyricsLine?((uint64_t)&v27);
  if (!v3)
  {
    uint64_t result = swift_beginAccess();
    double v5 = *(double (**)(uint64_t))(v1 + 96);
    if (v5)
    {
      uint64_t v6 = swift_retain();
      double v7 = v5(v6);
      swift_beginAccess();
      double v8 = 0.0;
      if (*(unsigned char *)(v1 + 88) == 1)
      {
        Lyrics.spatialOffset.getter();
        double v8 = v9;
      }
      uint64_t result = outlined consume of (@escaping @callee_guaranteed () -> ())?((uint64_t)v5);
      uint64_t v10 = *(void *)(v1 + 16);
      uint64_t v11 = *(void *)(v10 + 40);
      if (!*(void *)(v11 + 16))
      {
        __break(1u);
        goto LABEL_24;
      }
      double v12 = v7 - v8;
      outlined init with copy of AlertPresenting(v11 + 32, (uint64_t)&v27);
      uint64_t v14 = *((void *)&v28 + 1);
      uint64_t v13 = v29;
      __swift_project_boxed_opaque_existential_0Tm(&v27, *((uint64_t *)&v28 + 1));
      double v15 = (*(double (**)(uint64_t))(*(void *)(v13 + 8) + 8))(v14);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v27);
      if (v12 > v15)
      {
        Lyrics.line(before:useOriginalLines:)(0, (uint64_t)&v24, v12);
        if (!*((void *)&v25 + 1)) {
          return outlined destroy of LyricsLine?((uint64_t)&v24);
        }
        outlined init with take of AlertPresenting(&v24, (uint64_t)&v27);
        uint64_t v17 = *((void *)&v28 + 1);
        uint64_t v16 = v29;
        __swift_project_boxed_opaque_existential_0Tm(&v27, *((uint64_t *)&v28 + 1));
        if (v12 < (*(double (**)(uint64_t))(*(void *)(v16 + 8) + 16))(v17))
        {
          uint64_t v18 = &v27;
LABEL_20:
          outlined init with copy of AlertPresenting((uint64_t)v18, (uint64_t)&v24);
LABEL_22:
          swift_beginAccess();
          outlined assign with copy of LyricsLine?((uint64_t)&v24, v2);
          swift_endAccess();
          outlined destroy of LyricsLine?((uint64_t)&v24);
          return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v27);
        }
        uint64_t v20 = *((void *)&v28 + 1);
        uint64_t v21 = v29;
        __swift_project_boxed_opaque_existential_0Tm(&v27, *((uint64_t *)&v28 + 1));
        uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 16))(v20, v21);
        uint64_t v22 = result + 1;
        if (!__OFADD__(result, 1))
        {
          uint64_t v23 = *(void *)(v10 + 40);
          if (v22 >= *(void *)(v23 + 16))
          {
            uint64_t v26 = 0;
            long long v24 = 0u;
            long long v25 = 0u;
            goto LABEL_22;
          }
          if ((v22 & 0x8000000000000000) == 0)
          {
            uint64_t v18 = (long long *)(v23 + 40 * v22 + 32);
            goto LABEL_20;
          }
          goto LABEL_25;
        }
LABEL_24:
        __break(1u);
LABEL_25:
        __break(1u);
        return result;
      }
      uint64_t v19 = *(void *)(v10 + 40);
      if (*(void *)(v19 + 16))
      {
        outlined init with copy of AlertPresenting(v19 + 32, (uint64_t)&v27);
      }
      else
      {
        uint64_t v29 = 0;
        long long v27 = 0u;
        long long v28 = 0u;
      }
      swift_beginAccess();
      outlined assign with copy of LyricsLine?((uint64_t)&v27, v2);
      swift_endAccess();
      return outlined destroy of LyricsLine?((uint64_t)&v27);
    }
  }
  return result;
}

uint64_t SyncedLyricsManager.deinit()
{
  swift_release();
  swift_release();
  outlined destroy of CloudLibrary.StatusObserver.InternalObserver(v0 + 64);
  swift_bridgeObjectRelease();
  outlined consume of (@escaping @callee_guaranteed () -> ())?(*(void *)(v0 + 96));
  outlined destroy of LyricsLine?(v0 + 112);
  return v0;
}

uint64_t SyncedLyricsManager.__deallocating_deinit()
{
  swift_release();
  swift_release();
  outlined destroy of CloudLibrary.StatusObserver.InternalObserver(v0 + 64);
  swift_bridgeObjectRelease();
  outlined consume of (@escaping @callee_guaranteed () -> ())?(*(void *)(v0 + 96));
  outlined destroy of LyricsLine?(v0 + 112);

  return swift_deallocClassInstance();
}

uint64_t specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v13 = a4;
  uint64_t v14 = a5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(boxed_opaque_existential_1, a2, a4);
  uint64_t v10 = *a3;
  *(void *)(v10 + 16) = a1 + 1;
  return outlined init with take of AlertPresenting(&v12, v10 + 40 * a1 + 32);
}

uint64_t specialized SyncedLyricsManager.init(lyrics:configuration:delegate:isPlayingSpatial:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(void *)(a5 + 72) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(a5 + 80) = _swiftEmptyArrayStorage;
  *(_OWORD *)(a5 + 96) = 0u;
  *(_OWORD *)(a5 + 112) = 0u;
  *(_OWORD *)(a5 + 128) = 0u;
  *(void *)(a5 + 144) = 0;
  *(void *)(a5 + 16) = a1;
  long long v12 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a5 + 24) = *(_OWORD *)a2;
  *(_OWORD *)(a5 + 40) = v12;
  *(void *)(a5 + 56) = *(void *)(a2 + 32);
  swift_beginAccess();
  *(void *)(a5 + 72) = a7;
  swift_unknownObjectWeakAssign();
  *(unsigned char *)(a5 + 88) = a4;
  return a5;
}

uint64_t outlined init with copy of LyricsLine?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for LyricsLine?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of LyricsLine?(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for LyricsLine?);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10032F57C()
{
  return swift_deallocObject();
}

uint64_t sub_10032F58C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 80);
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for SyncedLyricsManager()
{
  return self;
}

uint64_t initializeWithCopy for SyncedLyricsManager.Configuration(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  return a1;
}

void *assignWithCopy for SyncedLyricsManager.Configuration(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  return a1;
}

uint64_t assignWithTake for SyncedLyricsManager.Configuration(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

ValueMetadata *type metadata accessor for SyncedLyricsManager.Configuration()
{
  return &type metadata for SyncedLyricsManager.Configuration;
}

uint64_t outlined assign with copy of LyricsLine?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for LyricsLine?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

id static SyncedLyricsViewController.Specs.lineChangeSpringTimingParameters()()
{
  id v0 = objc_allocWithZone((Class)UISpringTimingParameters);

  return objc_msgSend(v0, "initWithMass:stiffness:damping:initialVelocity:", 1.0, 100.0, 18.0, 0.0, 0.0);
}

void *SyncedLyricsViewController.Specs.init(_:)@<X0>(void (*a1)(unsigned char *)@<X0>, void *a2@<X8>)
{
  specialized SyncedLyricsViewController.Specs.init(_:)(a1, v4);
  return memcpy(a2, v4, 0x219uLL);
}

id static SyncedLyricsViewController.Specs.liftSpringTimingParameters()()
{
  id v0 = objc_allocWithZone((Class)UISpringTimingParameters);

  return objc_msgSend(v0, "initWithMass:stiffness:damping:initialVelocity:", 1.0, 14.0, 7.0, 0.0, 0.0);
}

id static SyncedLyricsViewController.Specs.growSyllableTimingParameters(response:)(double a1)
{
  return UISpringTimingParameters.init(dampingRatio:response:)(1.0, a1);
}

id static SyncedLyricsViewController.Specs.backgroundVocalsSpringTimingParameters(showing:)(char a1)
{
  if (a1)
  {
    id v1 = objc_allocWithZone((Class)UISpringTimingParameters);
    return objc_msgSend(v1, "initWithMass:stiffness:damping:initialVelocity:", 1.0, 30.0, 9.0, 0.0, 0.0);
  }
  else
  {
    type metadata accessor for UIMenu(0, &lazy cache variable for type metadata for UISpringTimingParameters);
    return UISpringTimingParameters.init(dampingRatio:response:)(1.0, 0.2);
  }
}

id static SyncedLyricsViewController.Specs.opacityAnimator()()
{
  id v0 = objc_allocWithZone((Class)UIViewPropertyAnimator);

  return objc_msgSend(v0, "initWithDuration:controlPoint1:controlPoint2:animations:", 0, 0.12, 0.33, 0.0, 0.2, 0.1);
}

BOOL static SyncedLyricsViewController.Specs.SelectedLinePosition.__derived_enum_equals(_:_:)(long long *a1, long long *a2)
{
  outlined init with take of SyncedLyricsViewController.Specs.SelectedLinePosition(a1, (uint64_t)v13);
  char v3 = v14;
  if ((v14 & 0x80) == 0)
  {
    double v4 = *(double *)v13;
    outlined init with take of SyncedLyricsViewController.Specs.SelectedLinePosition(a2, (uint64_t)&v11);
    if ((v12 & 0x80000000) == 0) {
      return v4 == v11.origin.x;
    }
    return 0;
  }
  v14 &= ~0x80u;
  CGFloat v6 = *(double *)v13;
  CGFloat v7 = *(double *)&v13[1];
  CGFloat v8 = *(double *)&v13[2];
  CGFloat v9 = *(double *)&v13[3];
  outlined init with take of SyncedLyricsViewController.Specs.SelectedLinePosition(a2, (uint64_t)&v11);
  char v10 = v12;
  if ((v12 & 0x80) == 0) {
    return 0;
  }
  v12 &= ~0x80u;
  if (v3)
  {
    if ((v10 & 1) == 0) {
      return 0;
    }
  }
  else
  {
    if (v10) {
      return 0;
    }
    v15.origin.x = v6;
    v15.origin.y = v7;
    v15.size.width = v8;
    v15.size.height = v9;
    if (!CGRectEqualToRect(v15, v11)) {
      return 0;
    }
  }
  return 1;
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance SyncedLyricsViewController.Specs.SelectedLinePosition(uint64_t a1, uint64_t a2)
{
  int v2 = *(char *)(a1 + 32);
  if (v2 < 0)
  {
    if ((*(unsigned char *)(a2 + 32) & 0x80) != 0)
    {
      if (v2)
      {
        if (*(unsigned char *)(a2 + 32)) {
          return 1;
        }
      }
      else if ((*(unsigned char *)(a2 + 32) & 1) == 0 && CGRectEqualToRect(*(CGRect *)a1, *(CGRect *)a2))
      {
        return 1;
      }
    }
  }
  else if ((*(unsigned char *)(a2 + 32) & 0x80) == 0 && *(double *)a1 == *(double *)a2)
  {
    return 1;
  }
  return 0;
}

__n128 SyncedLyricsViewController.Specs.selectedLinePosition.getter@<Q0>(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 40);
  __n128 result = *(__n128 *)(v1 + 8);
  long long v4 = *(_OWORD *)(v1 + 24);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 32) = v2;
  return result;
}

uint64_t SyncedLyricsViewController.Specs.selectedLinePosition.setter(long long *a1)
{
  return outlined init with take of SyncedLyricsViewController.Specs.SelectedLinePosition(a1, v1 + 8);
}

uint64_t SyncedLyricsViewController.Specs.lineTextAlignment.getter()
{
  return *(void *)(v0 + 48);
}

uint64_t SyncedLyricsViewController.Specs.lineTextAlignment.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 48) = result;
  *(unsigned char *)(v2 + 56) = a2 & 1;
  return result;
}

uint64_t SyncedLyricsViewController.Specs.songwritersTextAlignment.getter()
{
  return *(void *)(v0 + 64);
}

uint64_t SyncedLyricsViewController.Specs.songwritersTextAlignment.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 64) = result;
  *(unsigned char *)(v2 + 72) = a2 & 1;
  return result;
}

double SyncedLyricsViewController.Specs.lineSpacing.getter()
{
  return *(double *)(v0 + 80);
}

void SyncedLyricsViewController.Specs.lineSpacing.setter(double a1)
{
  *(double *)(v1 + 80) = a1;
}

void SyncedLyricsViewController.Specs.backgroundVocalsTopSpacing.setter(double a1)
{
  *(double *)(v1 + 88) = a1;
}

__n128 SyncedLyricsViewController.Specs.backgroundVocalsDeselectedTransform.getter@<Q0>(uint64_t a1@<X8>)
{
  long long v2 = *(_OWORD *)(v1 + 112);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 96);
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(v1 + 128);
  *(__n128 *)(a1 + 32) = result;
  return result;
}

__n128 SyncedLyricsViewController.Specs.backgroundVocalsDeselectedTransform.setter(uint64_t a1)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 96) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 112) = v2;
  __n128 result = *(__n128 *)(a1 + 32);
  *(__n128 *)(v1 + 128) = result;
  return result;
}

CFRange (__swiftcall *SyncedLyricsViewController.Specs.backgroundVocalsDeselectedTransform.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

double SyncedLyricsViewController.Specs.lineDelay.getter()
{
  return *(double *)(v0 + 144);
}

void SyncedLyricsViewController.Specs.lineDelay.setter(double a1)
{
  *(double *)(v1 + 144) = a1;
}

CFRange (__swiftcall *SyncedLyricsViewController.Specs.lineDelay.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

double SyncedLyricsViewController.Specs.maxEndTimeOffset.getter()
{
  return *(double *)(v0 + 152);
}

void SyncedLyricsViewController.Specs.maxEndTimeOffset.setter(double a1)
{
  *(double *)(v1 + 152) = a1;
}

CFRange (__swiftcall *SyncedLyricsSharingTransitionInfo.isSelected.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

uint64_t SyncedLyricsViewController.Specs.maxSelectedLines.getter()
{
  return *(void *)(v0 + 160);
}

uint64_t SyncedLyricsViewController.Specs.maxSelectedLines.setter(uint64_t result)
{
  *(void *)(v1 + 160) = result;
  return result;
}

CFRange (__swiftcall *SyncedLyricsSharingTransitionInfo.transform.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

id SyncedLyricsViewController.Specs.font.getter()
{
  return *(id *)(v0 + 168);
}

void SyncedLyricsViewController.Specs.font.setter(uint64_t a1)
{
  *(void *)(v1 + 168) = a1;
}

CFRange (__swiftcall *SyncedLyricsViewController.Specs.font.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

uint64_t SyncedLyricsViewController.Specs.fontLeading.getter()
{
  return *(void *)(v0 + 176);
}

uint64_t SyncedLyricsViewController.Specs.fontLeading.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 176) = result;
  *(unsigned char *)(v2 + 184) = a2 & 1;
  return result;
}

CFRange (__swiftcall *SyncedLyricsViewController.Specs.fontLeading.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

id SyncedLyricsViewController.Specs.backgroundVocalsFont.getter()
{
  return *(id *)(v0 + 192);
}

void SyncedLyricsViewController.Specs.backgroundVocalsFont.setter(uint64_t a1)
{
  *(void *)(v1 + 192) = a1;
}

CFRange (__swiftcall *SyncedLyricsViewController.Specs.backgroundVocalsFont.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

id SyncedLyricsViewController.Specs.writtenByFont.getter()
{
  return *(id *)(v0 + 200);
}

void SyncedLyricsViewController.Specs.writtenByFont.setter(uint64_t a1)
{
  *(void *)(v1 + 200) = a1;
}

CFRange (__swiftcall *SyncedLyricsViewController.Specs.writtenByFont.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

id SyncedLyricsViewController.Specs.songwritersNamesFont.getter()
{
  return *(id *)(v0 + 208);
}

void SyncedLyricsViewController.Specs.songwritersNamesFont.setter(uint64_t a1)
{
  *(void *)(v1 + 208) = a1;
}

CFRange (__swiftcall *SyncedLyricsSharingTransitionInfo.transitionWillBeginHandler.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

double SyncedLyricsViewController.Specs.emphasizingScaleRange.getter()
{
  return *(double *)(v0 + 216);
}

void SyncedLyricsViewController.Specs.emphasizingScaleRange.setter(double a1, double a2)
{
  *(double *)(v2 + 216) = a1;
  *(double *)(v2 + 224) = a2;
}

CFRange (__swiftcall *SyncedLyricsViewController.Specs.emphasizingScaleRange.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

id SyncedLyricsViewController.Specs.selectedTextColor.getter()
{
  return *(id *)(v0 + 232);
}

void SyncedLyricsViewController.Specs.selectedTextColor.setter(uint64_t a1)
{
  *(void *)(v1 + 232) = a1;
}

CFRange (__swiftcall *SyncedLyricsViewController.Specs.selectedTextColor.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

id SyncedLyricsViewController.Specs.selectedUpcomingTextColor.getter()
{
  return *(id *)(v0 + 240);
}

void SyncedLyricsViewController.Specs.selectedUpcomingTextColor.setter(uint64_t a1)
{
  *(void *)(v1 + 240) = a1;
}

CFRange (__swiftcall *SyncedLyricsViewController.Specs.selectedUpcomingTextColor.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

id SyncedLyricsViewController.Specs.deselectedTextColor.getter()
{
  return *(id *)(v0 + 248);
}

void SyncedLyricsViewController.Specs.deselectedTextColor.setter(uint64_t a1)
{
  *(void *)(v1 + 248) = a1;
}

CFRange (__swiftcall *SyncedLyricsViewController.Specs.deselectedTextColor.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

id SyncedLyricsViewController.Specs.selectedBackgroundVocalsTextColor.getter()
{
  return *(id *)(v0 + 256);
}

void SyncedLyricsViewController.Specs.selectedBackgroundVocalsTextColor.setter(uint64_t a1)
{
  *(void *)(v1 + 256) = a1;
}

CFRange (__swiftcall *SyncedLyricsViewController.Specs.selectedBackgroundVocalsTextColor.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

id SyncedLyricsViewController.Specs.selectedUpcomingBackgroundVocalsTextColor.getter()
{
  return *(id *)(v0 + 264);
}

void SyncedLyricsViewController.Specs.selectedUpcomingBackgroundVocalsTextColor.setter(uint64_t a1)
{
  *(void *)(v1 + 264) = a1;
}

CFRange (__swiftcall *SyncedLyricsViewController.Specs.selectedUpcomingBackgroundVocalsTextColor.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

id SyncedLyricsViewController.Specs.deselectedScrollTextColor.getter()
{
  return *(id *)(v0 + 272);
}

void SyncedLyricsViewController.Specs.deselectedScrollTextColor.setter(uint64_t a1)
{
  *(void *)(v1 + 272) = a1;
}

CFRange (__swiftcall *SyncedLyricsViewController.Specs.deselectedScrollTextColor.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

__n128 SyncedLyricsViewController.Specs.deselectedTransform.getter@<Q0>(uint64_t a1@<X8>)
{
  long long v2 = *(_OWORD *)(v1 + 296);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 280);
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(v1 + 312);
  *(__n128 *)(a1 + 32) = result;
  return result;
}

__n128 SyncedLyricsViewController.Specs.deselectedTransform.setter(uint64_t a1)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 280) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 296) = v2;
  __n128 result = *(__n128 *)(a1 + 32);
  *(__n128 *)(v1 + 312) = result;
  return result;
}

CFRange (__swiftcall *SyncedLyricsViewController.Specs.deselectedTransform.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

id SyncedLyricsViewController.Specs.hiddenTextColor.getter()
{
  return *(id *)(v0 + 328);
}

void SyncedLyricsViewController.Specs.hiddenTextColor.setter(uint64_t a1)
{
  *(void *)(v1 + 328) = a1;
}

CFRange (__swiftcall *SyncedLyricsViewController.Specs.hiddenTextColor.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

double SyncedLyricsViewController.Specs.animationHeadstart.getter()
{
  return *(double *)(v0 + 336);
}

void SyncedLyricsViewController.Specs.animationHeadstart.setter(double a1)
{
  *(double *)(v1 + 336) = a1;
}

CFRange (__swiftcall *SyncedLyricsViewController.Specs.animationHeadstart.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

id SyncedLyricsViewController.Specs.glowColor.getter()
{
  return *(id *)(v0 + 344);
}

void SyncedLyricsViewController.Specs.glowColor.setter(uint64_t a1)
{
  *(void *)(v1 + 344) = a1;
}

CFRange (__swiftcall *SyncedLyricsViewController.Specs.glowColor.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

double SyncedLyricsViewController.Specs.glowRadius.getter()
{
  return *(double *)(v0 + 352);
}

void SyncedLyricsViewController.Specs.glowRadius.setter(double a1)
{
  *(double *)(v1 + 352) = a1;
}

CFRange (__swiftcall *SyncedLyricsViewController.Specs.glowRadius.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

double SyncedLyricsViewController.Specs.glowRange.getter()
{
  return *(double *)(v0 + 360);
}

void SyncedLyricsViewController.Specs.glowRange.setter(double a1, double a2)
{
  *(double *)(v2 + 360) = a1;
  *(double *)(v2 + 368) = a2;
}

CFRange (__swiftcall *SyncedLyricsViewController.Specs.glowRange.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

id SyncedLyricsViewController.Specs.lineProgressionGradientColor.getter()
{
  return *(id *)(v0 + 376);
}

void SyncedLyricsViewController.Specs.lineProgressionGradientColor.setter(uint64_t a1)
{
  *(void *)(v1 + 376) = a1;
}

CFRange (__swiftcall *SyncedLyricsViewController.Specs.lineProgressionGradientColor.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

id SyncedLyricsViewController.Specs.lineProgressionBackgroundVocalsGradientColor.getter()
{
  return *(id *)(v0 + 384);
}

void SyncedLyricsViewController.Specs.lineProgressionBackgroundVocalsGradientColor.setter(uint64_t a1)
{
  *(void *)(v1 + 384) = a1;
}

CFRange (__swiftcall *SyncedLyricsViewController.Specs.lineProgressionBackgroundVocalsGradientColor.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

double SyncedLyricsViewController.Specs.lineProgressionGradientFeather.getter()
{
  return *(double *)(v0 + 392);
}

void SyncedLyricsViewController.Specs.lineProgressionGradientFeather.setter(double a1)
{
  *(double *)(v1 + 392) = a1;
}

CFRange (__swiftcall *SyncedLyricsViewController.Specs.lineProgressionGradientFeather.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

__n128 SyncedLyricsViewController.Specs.touchDownTransform.getter@<Q0>(uint64_t a1@<X8>)
{
  long long v2 = *(_OWORD *)(v1 + 416);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 400);
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(v1 + 432);
  *(__n128 *)(a1 + 32) = result;
  return result;
}

__n128 SyncedLyricsViewController.Specs.touchDownTransform.setter(uint64_t a1)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 400) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 416) = v2;
  __n128 result = *(__n128 *)(a1 + 32);
  *(__n128 *)(v1 + 432) = result;
  return result;
}

CFRange (__swiftcall *SyncedLyricsViewController.Specs.touchDownTransform.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

double SyncedLyricsViewController.Specs.highlightLabelAlpha.getter()
{
  return *(double *)(v0 + 448);
}

void SyncedLyricsViewController.Specs.highlightLabelAlpha.setter(double a1)
{
  *(double *)(v1 + 448) = a1;
}

CFRange (__swiftcall *SyncedLyricsViewController.Specs.highlightLabelAlpha.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

id SyncedLyricsViewController.Specs.highlightViewBackgroundColor.getter()
{
  return *(id *)(v0 + 456);
}

void SyncedLyricsViewController.Specs.highlightViewBackgroundColor.setter(uint64_t a1)
{
  *(void *)(v1 + 456) = a1;
}

CFRange (__swiftcall *SyncedLyricsViewController.Specs.highlightViewBackgroundColor.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

double SyncedLyricsViewController.Specs.highlightViewCornerRadius.getter()
{
  return *(double *)(v0 + 464);
}

void SyncedLyricsViewController.Specs.highlightViewCornerRadius.setter(double a1)
{
  *(double *)(v1 + 464) = a1;
}

CFRange (__swiftcall *SyncedLyricsViewController.Specs.highlightViewCornerRadius.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

double SyncedLyricsViewController.Specs.highlightViewMargin.getter()
{
  return *(double *)(v0 + 472);
}

void SyncedLyricsViewController.Specs.highlightViewMargin.setter(double a1)
{
  *(double *)(v1 + 472) = a1;
}

CFRange (__swiftcall *SyncedLyricsViewController.Specs.highlightViewMargin.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

double SyncedLyricsViewController.Specs.instrumentalBreakVisualizationMinSeconds.getter()
{
  return *(double *)(v0 + 480);
}

void SyncedLyricsViewController.Specs.instrumentalBreakVisualizationMinSeconds.setter(double a1)
{
  *(double *)(v1 + 480) = a1;
}

CFRange (__swiftcall *SyncedLyricsViewController.Specs.instrumentalBreakVisualizationMinSeconds.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

uint64_t SyncedLyricsViewController.Specs.instrumentalBreakCountdownDotCount.getter()
{
  return *(void *)(v0 + 488);
}

uint64_t SyncedLyricsViewController.Specs.instrumentalBreakCountdownDotCount.setter(uint64_t result)
{
  *(void *)(v1 + 488) = result;
  return result;
}

CFRange (__swiftcall *SyncedLyricsViewController.Specs.instrumentalBreakCountdownDotCount.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

double SyncedLyricsViewController.Specs.instrumentalBreakViewHeight.getter()
{
  return *(double *)(v0 + 496);
}

void SyncedLyricsViewController.Specs.instrumentalBreakViewHeight.setter(double a1)
{
  *(double *)(v1 + 496) = a1;
}

CFRange (__swiftcall *SyncedLyricsViewController.Specs.instrumentalBreakViewHeight.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

double SyncedLyricsViewController.Specs.syllableLift.getter()
{
  return *(double *)(v0 + 504);
}

void SyncedLyricsViewController.Specs.syllableLift.setter(double a1)
{
  *(double *)(v1 + 504) = a1;
}

CFRange (__swiftcall *SyncedLyricsViewController.Specs.syllableLift.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

double SyncedLyricsViewController.Specs.vocalGroupWidthCoefficient.getter()
{
  return *(double *)(v0 + 512);
}

void SyncedLyricsViewController.Specs.vocalGroupWidthCoefficient.setter(double a1)
{
  *(double *)(v1 + 512) = a1;
}

CFRange (__swiftcall *SyncedLyricsViewController.Specs.vocalGroupWidthCoefficient.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

double SyncedLyricsViewController.Specs.lineTapProgressFreezeDuration.getter()
{
  return *(double *)(v0 + 520);
}

void SyncedLyricsViewController.Specs.lineTapProgressFreezeDuration.setter(double a1)
{
  *(double *)(v1 + 520) = a1;
}

CFRange (__swiftcall *SyncedLyricsViewController.Specs.lineTapProgressFreezeDuration.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

double SyncedLyricsViewController.Specs.lineFinishProgressAnimationDuration.getter()
{
  return *(double *)(v0 + 528);
}

void SyncedLyricsViewController.Specs.lineFinishProgressAnimationDuration.setter(double a1)
{
  *(double *)(v1 + 528) = a1;
}

CFRange (__swiftcall *SyncedLyricsViewController.Specs.lineFinishProgressAnimationDuration.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

uint64_t SyncedLyricsViewController.Specs.showsVerticalScrollIndicator.getter()
{
  return *(unsigned __int8 *)(v0 + 536);
}

uint64_t SyncedLyricsViewController.Specs.showsVerticalScrollIndicator.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 536) = result;
  return result;
}

CFRange (__swiftcall *SyncedLyricsViewController.Specs.showsVerticalScrollIndicator.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

void *SyncedLyricsViewController.Specs.with(_:)@<X0>(void (*a1)(unsigned char *)@<X0>, void *a2@<X8>)
{
  memcpy(v6, v2, 0x219uLL);
  outlined retain of SyncedLyricsViewController.Specs((uint64_t)v2);
  a1(v6);
  return memcpy(a2, v6, 0x219uLL);
}

void *one-time initialization function for default()
{
  specialized SyncedLyricsViewController.Specs.init(_:)(0, v1);
  return memcpy(&static SyncedLyricsViewController.Specs.default, v1, 0x219uLL);
}

void *SyncedLyricsViewController.Specs.default.unsafeMutableAddressor()
{
  if (one-time initialization token for default != -1) {
    swift_once();
  }
  return &static SyncedLyricsViewController.Specs.default;
}

uint64_t static SyncedLyricsViewController.Specs.default.getter@<X0>(uint64_t a1@<X8>)
{
  return static SyncedLyricsViewController.Specs.default.getter(&one-time initialization token for default, (uint64_t)&static SyncedLyricsViewController.Specs.default, a1);
}

void *one-time initialization function for iPad()
{
  specialized SyncedLyricsViewController.Specs.init(_:)((void (*)(unsigned char *))closure #1 in variable initialization expression of static SyncedLyricsViewController.Specs.iPad, v1);
  return memcpy(&static SyncedLyricsViewController.Specs.iPad, v1, 0x219uLL);
}

void closure #1 in variable initialization expression of static SyncedLyricsViewController.Specs.iPad(uint64_t a1)
{
  *(void *)(a1 + 8) = 0x4034000000000000;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(unsigned char *)(a1 + 40) = 0;
  *(_OWORD *)(a1 + 80) = xmmword_1004A3C20;
  *(void *)(a1 + 152) = 0x3FE0000000000000;
  long long v2 = self;
  id v3 = [v2 systemFontOfSize:48.0 weight:UIFontWeightBold];

  *(void *)(a1 + 168) = v3;
  id v4 = [v2 systemFontOfSize:32.0 weight:UIFontWeightBold];

  *(void *)(a1 + 192) = v4;
  *(void *)(a1 + 176) = 0x404A000000000000;
  *(unsigned char *)(a1 + 184) = 0;
}

void *SyncedLyricsViewController.Specs.iPad.unsafeMutableAddressor()
{
  if (one-time initialization token for iPad != -1) {
    swift_once();
  }
  return &static SyncedLyricsViewController.Specs.iPad;
}

uint64_t static SyncedLyricsViewController.Specs.iPad.getter@<X0>(uint64_t a1@<X8>)
{
  return static SyncedLyricsViewController.Specs.default.getter(&one-time initialization token for iPad, (uint64_t)&static SyncedLyricsViewController.Specs.iPad, a1);
}

void *one-time initialization function for vision()
{
  specialized SyncedLyricsViewController.Specs.init(_:)((void (*)(unsigned char *))closure #1 in variable initialization expression of static SyncedLyricsViewController.Specs.vision, v1);
  return memcpy(&static SyncedLyricsViewController.Specs.vision, v1, 0x219uLL);
}

void closure #1 in variable initialization expression of static SyncedLyricsViewController.Specs.vision(uint64_t a1)
{
  *(void *)(a1 + 8) = 0x4042000000000000;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(unsigned char *)(a1 + 40) = 0;
  *(_OWORD *)(a1 + 80) = xmmword_1004A3C20;
  *(void *)(a1 + 152) = 0x3FE0000000000000;
  long long v2 = self;
  id v3 = [v2 systemFontOfSize:56.0 weight:UIFontWeightBold];

  *(void *)(a1 + 168) = v3;
  id v4 = [v2 systemFontOfSize:34.0 weight:UIFontWeightBold];

  *(void *)(a1 + 192) = v4;
  *(unsigned char *)(a1 + 536) = 0;
  *(void *)(a1 + 176) = 0x404C000000000000;
  *(unsigned char *)(a1 + 184) = 0;
  double v5 = self;
  id v6 = [v5 whiteColor];
  id v7 = [v6 colorWithAlphaComponent:0.175];

  *(void *)(a1 + 384) = v7;
  id v8 = [v5 whiteColor];

  *(void *)(a1 + 376) = v8;
  id v9 = [v5 whiteColor];
  id v10 = [v9 colorWithAlphaComponent:0.35];

  id v11 = [v5 labelColor];
  id v12 = [v11 colorWithAlphaComponent:0.55];

  id v13 = objc_allocWithZone((Class)UIColor);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v12;
  *(void *)(v14 + 24) = v10;
  v19[4] = _sSo7UIColorC11MusicCoreUIE6normal12highContrastA2B_ABtc33_24E29E585AB6D5A617C4CD1FBB85399DLlfcABSo17UITraitCollectionCcfU_TA_0;
  v19[5] = v14;
  v19[0] = _NSConcreteStackBlock;
  v19[1] = 1107296256;
  _OWORD v19[2] = thunk for @escaping @callee_guaranteed (@guaranteed UITraitCollection) -> (@owned UIColor);
  v19[3] = &block_descriptor_61;
  CGRect v15 = _Block_copy(v19);
  id v16 = v12;
  id v17 = v10;
  swift_release();
  id v18 = [v13 initWithDynamicProvider:v15];

  _Block_release(v15);
  *(void *)(a1 + 240) = v18;
}

void *SyncedLyricsViewController.Specs.vision.unsafeMutableAddressor()
{
  if (one-time initialization token for vision != -1) {
    swift_once();
  }
  return &static SyncedLyricsViewController.Specs.vision;
}

uint64_t static SyncedLyricsViewController.Specs.vision.getter@<X0>(uint64_t a1@<X8>)
{
  return static SyncedLyricsViewController.Specs.default.getter(&one-time initialization token for vision, (uint64_t)&static SyncedLyricsViewController.Specs.vision, a1);
}

void *one-time initialization function for alternative()
{
  specialized SyncedLyricsViewController.Specs.init(_:)((void (*)(unsigned char *))closure #1 in variable initialization expression of static SyncedLyricsViewController.Specs.alternative, v1);
  return memcpy(&static SyncedLyricsViewController.Specs.alternative, v1, 0x219uLL);
}

void closure #1 in variable initialization expression of static SyncedLyricsViewController.Specs.alternative(uint64_t a1)
{
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 8) = 0u;
  *(unsigned char *)(a1 + 40) = -127;
  *(void *)(a1 + 160) = 1;
  long long v2 = self;
  id v3 = [v2 systemFontOfSize:28.0 weight:UIFontWeightBold];

  *(void *)(a1 + 168) = v3;
  id v4 = [v2 systemFontOfSize:24.0 weight:UIFontWeightBold];

  *(void *)(a1 + 192) = v4;
}

void *SyncedLyricsViewController.Specs.alternative.unsafeMutableAddressor()
{
  if (one-time initialization token for alternative != -1) {
    swift_once();
  }
  return &static SyncedLyricsViewController.Specs.alternative;
}

uint64_t static SyncedLyricsViewController.Specs.alternative.getter@<X0>(uint64_t a1@<X8>)
{
  return static SyncedLyricsViewController.Specs.default.getter(&one-time initialization token for alternative, (uint64_t)&static SyncedLyricsViewController.Specs.alternative, a1);
}

uint64_t static SyncedLyricsViewController.Specs.default.getter@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }

  return outlined init with copy of SyncedLyricsViewController.Specs(a2, a3);
}

id static SyncedLyricsViewController.Specs.syllableBySyllableLineChangeSpringTimingParameters(gap:)(uint64_t a1, char a2)
{
  return specialized static SyncedLyricsViewController.Specs.syllableBySyllableLineChangeSpringTimingParameters(gap:)(a1, a2 & 1);
}

id static SyncedLyricsViewController.Specs.tapSpringTimingParameters()()
{
  id v0 = objc_allocWithZone((Class)UISpringTimingParameters);

  return objc_msgSend(v0, "initWithMass:stiffness:damping:initialVelocity:", 2.0, 260.0, 50.0, 0.0, 0.0);
}

id SyncedLyricsViewController.Specs.CustomCurveAnimationFactory.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SyncedLyricsViewController.Specs.CustomCurveAnimationFactory();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance SyncedLyricsViewController.Specs(void *__src, const void *a2)
{
  memcpy(v4, __src, 0x219uLL);
  memcpy(__dst, a2, 0x219uLL);
  return specialized static SyncedLyricsViewController.Specs.__derived_struct_equals(_:_:)((uint64_t)v4, (uint64_t)__dst) & 1;
}

id closure #1 in UIColor.init(normal:highContrast:)(void *a1, void *a2, void *a3)
{
  id v4 = [a1 accessibilityContrast];
  if (v4 == (id)-1)
  {
    id v6 = a3;
  }
  else
  {
    BOOL v5 = v4 == (id)1;
    id v6 = a3;
    if (v5) {
      id v6 = a2;
    }
  }

  return v6;
}

uint64_t specialized static SyncedLyricsViewController.Specs.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  if (*(double *)a1 != *(double *)a2) {
    goto LABEL_33;
  }
  outlined init with take of SyncedLyricsViewController.Specs.SelectedLinePosition((long long *)(a1 + 8), (uint64_t)v14);
  outlined init with take of SyncedLyricsViewController.Specs.SelectedLinePosition((long long *)(a2 + 8), (uint64_t)v13);
  outlined init with take of SyncedLyricsViewController.Specs.SelectedLinePosition(v14, (uint64_t)v15);
  char v4 = v16;
  if (v16 < 0)
  {
    v16 &= ~0x80u;
    CGFloat v7 = *(double *)v15;
    CGFloat v8 = *(double *)&v15[1];
    CGFloat v9 = *(double *)&v15[2];
    CGFloat v10 = *(double *)&v15[3];
    outlined init with take of SyncedLyricsViewController.Specs.SelectedLinePosition(v13, (uint64_t)&v17);
    char v11 = v18;
    if ((v18 & 0x80) == 0) {
      goto LABEL_33;
    }
    v18 &= ~0x80u;
    if (v4)
    {
      if ((v11 & 1) == 0) {
        goto LABEL_33;
      }
    }
    else
    {
      if (v11) {
        goto LABEL_33;
      }
      v19.origin.x = v7;
      v19.origin.y = v8;
      v19.size.width = v9;
      v19.size.height = v10;
      if (!CGRectEqualToRect(v19, v17)) {
        goto LABEL_33;
      }
    }
  }
  else
  {
    double v5 = *(double *)v15;
    outlined init with take of SyncedLyricsViewController.Specs.SelectedLinePosition(v13, (uint64_t)&v17);
    char v6 = 0;
    if (v18 < 0 || v5 != v17.origin.x) {
      return v6 & 1;
    }
  }
  char v6 = *(unsigned char *)(a2 + 56);
  if (*(unsigned char *)(a1 + 56))
  {
    if (!*(unsigned char *)(a2 + 56)) {
      return v6 & 1;
    }
  }
  else
  {
    if (*(void *)(a1 + 48) != *(void *)(a2 + 48)) {
      char v6 = 1;
    }
    if (v6) {
      goto LABEL_33;
    }
  }
  char v6 = *(unsigned char *)(a2 + 72);
  if (*(unsigned char *)(a1 + 72))
  {
    if (!*(unsigned char *)(a2 + 72)) {
      return v6 & 1;
    }
  }
  else
  {
    if (*(void *)(a1 + 64) != *(void *)(a2 + 64)) {
      char v6 = 1;
    }
    if (v6) {
      goto LABEL_33;
    }
  }
  if (*(double *)(a1 + 80) != *(double *)(a2 + 80)
    || *(double *)(a1 + 88) != *(double *)(a2 + 88)
    || (static CGAffineTransform.== infix(_:_:)() & 1) == 0
    || *(double *)(a1 + 144) != *(double *)(a2 + 144)
    || *(double *)(a1 + 152) != *(double *)(a2 + 152)
    || *(void *)(a1 + 160) != *(void *)(a2 + 160)
    || (type metadata accessor for UIMenu(0, (unint64_t *)&_sSo8NSObjectCML_1),
        (static NSObject.== infix(_:_:)() & 1) == 0))
  {
LABEL_33:
    char v6 = 0;
    return v6 & 1;
  }
  char v6 = *(unsigned char *)(a2 + 184);
  if ((*(unsigned char *)(a1 + 184) & 1) == 0)
  {
    if (*(double *)(a1 + 176) != *(double *)(a2 + 176)) {
      char v6 = 1;
    }
    if ((v6 & 1) == 0)
    {
LABEL_38:
      if ((static NSObject.== infix(_:_:)() & 1) != 0
        && (static NSObject.== infix(_:_:)() & 1) != 0
        && (static NSObject.== infix(_:_:)() & 1) != 0
        && *(double *)(a1 + 216) == *(double *)(a2 + 216)
        && *(double *)(a1 + 224) == *(double *)(a2 + 224)
        && (static NSObject.== infix(_:_:)() & 1) != 0
        && (static NSObject.== infix(_:_:)() & 1) != 0
        && (static NSObject.== infix(_:_:)() & 1) != 0
        && (static NSObject.== infix(_:_:)() & 1) != 0
        && (static NSObject.== infix(_:_:)() & 1) != 0
        && (static NSObject.== infix(_:_:)() & 1) != 0
        && (static CGAffineTransform.== infix(_:_:)() & 1) != 0
        && (static NSObject.== infix(_:_:)() & 1) != 0
        && *(double *)(a1 + 336) == *(double *)(a2 + 336)
        && (static NSObject.== infix(_:_:)() & 1) != 0
        && *(double *)(a1 + 352) == *(double *)(a2 + 352)
        && *(double *)(a1 + 360) == *(double *)(a2 + 360)
        && *(double *)(a1 + 368) == *(double *)(a2 + 368)
        && (static NSObject.== infix(_:_:)() & 1) != 0
        && (static NSObject.== infix(_:_:)() & 1) != 0
        && *(double *)(a1 + 392) == *(double *)(a2 + 392)
        && (static CGAffineTransform.== infix(_:_:)() & 1) != 0
        && *(double *)(a1 + 448) == *(double *)(a2 + 448)
        && (static NSObject.== infix(_:_:)() & 1) != 0
        && *(double *)(a1 + 464) == *(double *)(a2 + 464)
        && *(double *)(a1 + 472) == *(double *)(a2 + 472)
        && *(double *)(a1 + 480) == *(double *)(a2 + 480)
        && *(void *)(a1 + 488) == *(void *)(a2 + 488)
        && *(double *)(a1 + 496) == *(double *)(a2 + 496)
        && *(double *)(a1 + 504) == *(double *)(a2 + 504)
        && *(double *)(a1 + 512) == *(double *)(a2 + 512)
        && *(double *)(a1 + 520) == *(double *)(a2 + 520)
        && *(double *)(a1 + 528) == *(double *)(a2 + 528))
      {
        char v6 = ((*(unsigned char *)(a1 + 536) & 1) == 0) ^ *(unsigned char *)(a2 + 536);
        return v6 & 1;
      }
      goto LABEL_33;
    }
    goto LABEL_33;
  }
  if (*(unsigned char *)(a2 + 184)) {
    goto LABEL_38;
  }
  return v6 & 1;
}

void *specialized SyncedLyricsViewController.Specs.init(_:)@<X0>(void (*a1)(unsigned char *)@<X0>, void *a2@<X8>)
{
  *(void *)__src = 0x404E000000000000;
  *(void *)&__src[8] = 0x4028000000000000;
  *(void *)&__src[48] = 0;
  memset(&__src[16], 0, 25);
  __src[56] = 1;
  *(void *)&__src[64] = 0;
  __src[72] = 1;
  *(_OWORD *)&__src[80] = xmmword_1004A3C30;
  CGAffineTransformMakeScale(&aBlock, 0.9, 0.9);
  *(CGAffineTransform *)&__src[96] = aBlock;
  *(_OWORD *)&__src[144] = xmmword_1004A3C40;
  *(void *)&__src[160] = 2;
  type metadata accessor for UIMenu(0, (unint64_t *)&_sSo6UIFontCML_0);
  *(void *)&__src[168] = static UIFont.preferredFont(forTextStyle:weight:)();
  *(void *)&__src[176] = 0;
  __src[184] = 1;
  *(void *)&__src[192] = static UIFont.shortEmphasizedPreferredFont(forTextStyle:)();
  objc_super v2 = self;
  *(void *)&__src[200] = [v2 systemFontOfSize:22.0 weight:UIFontWeightBold];
  *(void *)&__src[208] = [v2 systemFontOfSize:22.0 weight:UIFontWeightMedium];
  *(_OWORD *)&__src[216] = xmmword_1004A3C50;
  id v3 = self;
  id v4 = [v3 whiteColor];
  id v5 = [v3 labelColor];
  id v6 = objc_allocWithZone((Class)UIColor);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v5;
  *(void *)(v7 + 24) = v4;
  *(void *)&aBlock.tx = _sSo7UIColorC11MusicCoreUIE6normal12highContrastA2B_ABtc33_24E29E585AB6D5A617C4CD1FBB85399DLlfcABSo17UITraitCollectionCcfU_TA_0;
  *(void *)&aBlock.ty = v7;
  *(void *)&aBlock.a = _NSConcreteStackBlock;
  *(void *)&aBlock.b = 1107296256;
  *(void *)&aBlock.c = thunk for @escaping @callee_guaranteed (@guaranteed UITraitCollection) -> (@owned UIColor);
  *(void *)&aBlock.d = &block_descriptor_54_1;
  CGFloat v8 = _Block_copy(&aBlock);
  id v9 = v5;
  id v10 = v4;
  swift_release();
  id v11 = [v6 initWithDynamicProvider:v8];

  _Block_release(v8);
  *(void *)&__src[232] = v11;
  id v12 = [v3 whiteColor];
  id v13 = [v12 colorWithAlphaComponent:0.35];

  id v14 = [v3 labelColor];
  id v15 = [v14 colorWithAlphaComponent:0.85];

  id v16 = objc_allocWithZone((Class)UIColor);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = v15;
  *(void *)(v17 + 24) = v13;
  *(void *)&aBlock.tx = _sSo7UIColorC11MusicCoreUIE6normal12highContrastA2B_ABtc33_24E29E585AB6D5A617C4CD1FBB85399DLlfcABSo17UITraitCollectionCcfU_TA_0;
  *(void *)&aBlock.ty = v17;
  *(void *)&aBlock.a = _NSConcreteStackBlock;
  *(void *)&aBlock.b = 1107296256;
  *(void *)&aBlock.c = thunk for @escaping @callee_guaranteed (@guaranteed UITraitCollection) -> (@owned UIColor);
  *(void *)&aBlock.d = &block_descriptor_61_1;
  char v18 = _Block_copy(&aBlock);
  id v19 = v15;
  id v20 = v13;
  swift_release();
  id v21 = [v16 initWithDynamicProvider:v18];

  _Block_release(v18);
  *(void *)&__src[240] = v21;
  id v22 = [v3 whiteColor];
  id v23 = [v22 colorWithAlphaComponent:0.175];

  id v24 = [v3 labelColor];
  id v25 = [v24 colorWithAlphaComponent:0.4];

  id v26 = objc_allocWithZone((Class)UIColor);
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = v25;
  *(void *)(v27 + 24) = v23;
  *(void *)&aBlock.tx = _sSo7UIColorC11MusicCoreUIE6normal12highContrastA2B_ABtc33_24E29E585AB6D5A617C4CD1FBB85399DLlfcABSo17UITraitCollectionCcfU_TA_0;
  *(void *)&aBlock.ty = v27;
  *(void *)&aBlock.a = _NSConcreteStackBlock;
  *(void *)&aBlock.b = 1107296256;
  *(void *)&aBlock.c = thunk for @escaping @callee_guaranteed (@guaranteed UITraitCollection) -> (@owned UIColor);
  *(void *)&aBlock.d = &block_descriptor_68_0;
  long long v28 = _Block_copy(&aBlock);
  id v29 = v25;
  id v30 = v23;
  swift_release();
  id v31 = [v26 initWithDynamicProvider:v28];

  _Block_release(v28);
  *(void *)&__src[248] = v31;
  id v32 = [v3 whiteColor];
  id v33 = [v32 colorWithAlphaComponent:0.35];

  id v34 = [v3 labelColor];
  id v35 = [v34 colorWithAlphaComponent:0.85];

  id v36 = objc_allocWithZone((Class)UIColor);
  uint64_t v37 = swift_allocObject();
  *(void *)(v37 + 16) = v35;
  *(void *)(v37 + 24) = v33;
  *(void *)&aBlock.tx = _sSo7UIColorC11MusicCoreUIE6normal12highContrastA2B_ABtc33_24E29E585AB6D5A617C4CD1FBB85399DLlfcABSo17UITraitCollectionCcfU_TA_0;
  *(void *)&aBlock.ty = v37;
  *(void *)&aBlock.a = _NSConcreteStackBlock;
  *(void *)&aBlock.b = 1107296256;
  *(void *)&aBlock.c = thunk for @escaping @callee_guaranteed (@guaranteed UITraitCollection) -> (@owned UIColor);
  *(void *)&aBlock.d = &block_descriptor_75_0;
  uint64_t v38 = _Block_copy(&aBlock);
  id v39 = v35;
  id v40 = v33;
  swift_release();
  id v41 = [v36 initWithDynamicProvider:v38];

  _Block_release(v38);
  *(void *)&__src[256] = v41;
  id v42 = [v3 whiteColor];
  id v43 = [v42 colorWithAlphaComponent:0.175];

  id v44 = [v3 labelColor];
  id v45 = [v44 colorWithAlphaComponent:0.65];

  id v46 = objc_allocWithZone((Class)UIColor);
  uint64_t v47 = swift_allocObject();
  *(void *)(v47 + 16) = v45;
  *(void *)(v47 + 24) = v43;
  *(void *)&aBlock.tx = _sSo7UIColorC11MusicCoreUIE6normal12highContrastA2B_ABtc33_24E29E585AB6D5A617C4CD1FBB85399DLlfcABSo17UITraitCollectionCcfU_TA_0;
  *(void *)&aBlock.ty = v47;
  *(void *)&aBlock.a = _NSConcreteStackBlock;
  *(void *)&aBlock.b = 1107296256;
  *(void *)&aBlock.c = thunk for @escaping @callee_guaranteed (@guaranteed UITraitCollection) -> (@owned UIColor);
  *(void *)&aBlock.d = &block_descriptor_82_2;
  uint64_t v48 = _Block_copy(&aBlock);
  id v49 = v45;
  id v50 = v43;
  swift_release();
  id v51 = [v46 initWithDynamicProvider:v48];

  _Block_release(v48);
  *(void *)&__src[264] = v51;
  id v52 = [v3 whiteColor];
  id v53 = [v52 colorWithAlphaComponent:0.4];

  id v54 = [v3 labelColor];
  id v55 = [v54 colorWithAlphaComponent:0.4];

  id v56 = objc_allocWithZone((Class)UIColor);
  uint64_t v57 = swift_allocObject();
  *(void *)(v57 + 16) = v55;
  *(void *)(v57 + 24) = v53;
  *(void *)&aBlock.tx = _sSo7UIColorC11MusicCoreUIE6normal12highContrastA2B_ABtc33_24E29E585AB6D5A617C4CD1FBB85399DLlfcABSo17UITraitCollectionCcfU_TA_0;
  *(void *)&aBlock.ty = v57;
  *(void *)&aBlock.a = _NSConcreteStackBlock;
  *(void *)&aBlock.b = 1107296256;
  *(void *)&aBlock.c = thunk for @escaping @callee_guaranteed (@guaranteed UITraitCollection) -> (@owned UIColor);
  *(void *)&aBlock.d = &block_descriptor_89_2;
  v58 = _Block_copy(&aBlock);
  id v59 = v55;
  id v60 = v53;
  swift_release();
  id v61 = [v56 initWithDynamicProvider:v58];

  _Block_release(v58);
  *(void *)&__src[272] = v61;
  CGAffineTransformMakeScale(&aBlock, 0.98, 0.98);
  *(CGAffineTransform *)&__src[280] = aBlock;
  *(void *)&__src[328] = [v3 clearColor];
  *(void *)&__src[336] = 0x3FB999999999999ALL;
  *(void *)&__src[344] = [v3 whiteColor];
  *(_OWORD *)&__src[352] = xmmword_1004A3C60;
  *(void *)&__src[368] = 0x3FD999999999999ALL;
  id v62 = [v3 whiteColor];
  id v63 = [v3 tintColor];
  id v64 = objc_allocWithZone((Class)UIColor);
  uint64_t v65 = swift_allocObject();
  *(void *)(v65 + 16) = v63;
  *(void *)(v65 + 24) = v62;
  *(void *)&aBlock.tx = _sSo7UIColorC11MusicCoreUIE6normal12highContrastA2B_ABtc33_24E29E585AB6D5A617C4CD1FBB85399DLlfcABSo17UITraitCollectionCcfU_TA_0;
  *(void *)&aBlock.ty = v65;
  *(void *)&aBlock.a = _NSConcreteStackBlock;
  *(void *)&aBlock.b = 1107296256;
  *(void *)&aBlock.c = thunk for @escaping @callee_guaranteed (@guaranteed UITraitCollection) -> (@owned UIColor);
  *(void *)&aBlock.d = &block_descriptor_96_0;
  v66 = _Block_copy(&aBlock);
  id v67 = v63;
  id v68 = v62;
  swift_release();
  id v69 = [v64 initWithDynamicProvider:v66];

  _Block_release(v66);
  *(void *)&__src[376] = v69;
  id v70 = [v3 whiteColor];
  id v71 = [v70 colorWithAlphaComponent:0.175];

  id v72 = [v3 tintColor];
  id v73 = [v72 colorWithAlphaComponent:0.175];

  id v74 = objc_allocWithZone((Class)UIColor);
  uint64_t v75 = swift_allocObject();
  *(void *)(v75 + 16) = v73;
  *(void *)(v75 + 24) = v71;
  *(void *)&aBlock.tx = _sSo7UIColorC11MusicCoreUIE6normal12highContrastA2B_ABtc33_24E29E585AB6D5A617C4CD1FBB85399DLlfcABSo17UITraitCollectionCcfU_TA_0;
  *(void *)&aBlock.ty = v75;
  *(void *)&aBlock.a = _NSConcreteStackBlock;
  *(void *)&aBlock.b = 1107296256;
  *(void *)&aBlock.c = thunk for @escaping @callee_guaranteed (@guaranteed UITraitCollection) -> (@owned UIColor);
  *(void *)&aBlock.d = &block_descriptor_103_0;
  v76 = _Block_copy(&aBlock);
  id v77 = v73;
  id v78 = v71;
  swift_release();
  id v79 = [v74 initWithDynamicProvider:v76];

  _Block_release(v76);
  *(void *)&__src[384] = v79;
  *(void *)&__src[392] = 0x403E000000000000;
  CGAffineTransformMakeScale(&aBlock, 0.95, 0.95);
  *(CGAffineTransform *)&__src[400] = aBlock;
  *(void *)&__src[448] = 0x3FEB333333333333;
  *(void *)&__src[456] = [objc_allocWithZone((Class)UIColor) initWithWhite:1.0 alpha:0.08];
  __asm { FMOV            V0.2D, #16.0 }
  *(_OWORD *)&__src[464] = _Q0;
  *(void *)&__src[480] = 0x401C000000000000;
  *(void *)&__src[488] = 3;
  *(_OWORD *)&__src[496] = xmmword_1004A3C70;
  *(_OWORD *)&__src[512] = xmmword_1004A3C80;
  *(void *)&__src[528] = 0x3FD0000000000000;
  __src[536] = 1;
  if (a1)
  {
    swift_retain();
    a1(__src);
    outlined consume of (@escaping @callee_guaranteed () -> ())?((uint64_t)a1);
    outlined consume of (@escaping @callee_guaranteed () -> ())?((uint64_t)a1);
  }
  return memcpy(a2, __src, 0x219uLL);
}

void specialized static SyncedLyricsViewController.Specs.animateWithHighlightAnimationCurves(highlighted:fadeAnimations:transformAnimations:)(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v8 = a1 & 1;
  if (a1) {
    double v9 = 24.0;
  }
  else {
    double v9 = 50.0;
  }
  if (a1) {
    double v10 = 322.0;
  }
  else {
    double v10 = 300.0;
  }
  double v11 = 1.0;
  if (a1) {
    double v12 = 1.0;
  }
  else {
    double v12 = 2.0;
  }
  double v13 = 0.0;
  id v14 = objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", v12, v10, v9, 0.0, 0.0);
  if (v8)
  {
    double v15 = 0.55;
    double v16 = 0.2;
    double v17 = 0.0;
  }
  else
  {
    double v15 = 0.25;
    double v13 = 0.1;
    double v16 = 0.3;
    double v11 = 0.1;
    double v17 = 0.25;
  }
  char v18 = (objc_class *)type metadata accessor for SyncedLyricsViewController.Specs.CustomCurveAnimationFactory();
  id v19 = (char *)objc_allocWithZone(v18);
  id v20 = (double *)&v19[OBJC_IVAR____TtCVC11MusicCoreUI26SyncedLyricsViewController5SpecsP33_24E29E585AB6D5A617C4CD1FBB85399D27CustomCurveAnimationFactory_controlPoint1];
  double *v20 = v17;
  v20[1] = v13;
  id v21 = (double *)&v19[OBJC_IVAR____TtCVC11MusicCoreUI26SyncedLyricsViewController5SpecsP33_24E29E585AB6D5A617C4CD1FBB85399D27CustomCurveAnimationFactory_controlPoint2];
  *id v21 = v15;
  v21[1] = v11;
  v42.receiver = v19;
  v42.super_class = v18;
  id v22 = objc_msgSendSuper2(&v42, "init");
  id v23 = self;
  uint64_t v40 = a2;
  uint64_t v41 = a3;
  CGAffineTransform aBlock = _NSConcreteStackBlock;
  uint64_t v37 = 1107296256;
  uint64_t v38 = thunk for @escaping @callee_guaranteed @Sendable () -> ();
  id v39 = &block_descriptor_44;
  id v24 = _Block_copy(&aBlock);
  id v25 = v22;
  swift_retain();
  swift_release();
  [v23 _animateWithDuration:0 delay:v25 options:v24 factory:0 animations:v16 completion:v13];
  _Block_release(v24);

  [v14 settlingDuration];
  double v27 = v26;
  [v14 mass];
  double v29 = v28;
  [v14 stiffness];
  double v31 = v30;
  [v14 damping];
  double v33 = v32;
  uint64_t v40 = a4;
  uint64_t v41 = a5;
  CGAffineTransform aBlock = _NSConcreteStackBlock;
  uint64_t v37 = 1107296256;
  uint64_t v38 = thunk for @escaping @callee_guaranteed @Sendable () -> ();
  id v39 = &block_descriptor_47_1;
  id v34 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  [v23 _animateUsingSpringWithDuration:0 delay:v34 options:0 mass:v27 stiffness:v13 damping:v29 initialVelocity:v31 animations:v33 completion:0.0];

  _Block_release(v34);
}

uint64_t outlined init with take of SyncedLyricsViewController.Specs.SelectedLinePosition(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(unsigned char *)(a2 + 32) = *((unsigned char *)a1 + 32);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t outlined init with copy of SyncedLyricsViewController.Specs(uint64_t a1, uint64_t a2)
{
  return a2;
}

id specialized static SyncedLyricsViewController.Specs.syllableBySyllableLineChangeSpringTimingParameters(gap:)(uint64_t a1, char a2)
{
  if (a2)
  {
    id v7 = objc_allocWithZone((Class)UISpringTimingParameters);
    return objc_msgSend(v7, "initWithMass:stiffness:damping:initialVelocity:", 1.0, 100.0, 18.0, 0.0, 0.0);
  }
  else
  {
    double v2 = (*(double *)&a1 + -0.2) / 0.55;
    if (*(double *)&a1 > 0.75) {
      double v2 = 1.0;
    }
    double v3 = 0.0;
    if (*(double *)&a1 >= 0.2) {
      double v3 = v2;
    }
    double v4 = (1.0 - v3) * 0.12 + 0.78;
    double v5 = v3 * 0.27 + 0.48;
    type metadata accessor for UIMenu(0, &lazy cache variable for type metadata for UISpringTimingParameters);
    return UISpringTimingParameters.init(dampingRatio:response:)(v4, v5);
  }
}

void destroy for SyncedLyricsViewController.Specs(uint64_t a1)
{
  double v2 = *(void **)(a1 + 456);
}

uint64_t initializeWithCopy for SyncedLyricsViewController.Specs(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  long long v3 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v3;
  long long v4 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v4;
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  double v5 = *(void **)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v5;
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  id v7 = *(void **)(a2 + 192);
  id v6 = *(void **)(a2 + 200);
  *(void *)(a1 + 192) = v7;
  *(void *)(a1 + 200) = v6;
  int v8 = *(void **)(a2 + 208);
  *(void *)(a1 + 208) = v8;
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  double v9 = *(void **)(a2 + 232);
  double v10 = *(void **)(a2 + 240);
  *(void *)(a1 + 232) = v9;
  *(void *)(a1 + 240) = v10;
  uint64_t v40 = *(void **)(a2 + 248);
  uint64_t v41 = *(void **)(a2 + 256);
  *(void *)(a1 + 248) = v40;
  *(void *)(a1 + 256) = v41;
  objc_super v42 = *(void **)(a2 + 264);
  id v43 = *(void **)(a2 + 272);
  *(void *)(a1 + 264) = v42;
  *(void *)(a1 + 272) = v43;
  long long v11 = *(_OWORD *)(a2 + 280);
  long long v12 = *(_OWORD *)(a2 + 312);
  *(_OWORD *)(a1 + 296) = *(_OWORD *)(a2 + 296);
  *(_OWORD *)(a1 + 312) = v12;
  *(_OWORD *)(a1 + 280) = v11;
  uint64_t v13 = *(void *)(a2 + 336);
  id v39 = *(void **)(a2 + 328);
  *(void *)(a1 + 328) = v39;
  *(void *)(a1 + 336) = v13;
  double v15 = *(void **)(a2 + 344);
  uint64_t v14 = *(void *)(a2 + 352);
  *(void *)(a1 + 344) = v15;
  *(void *)(a1 + 352) = v14;
  *(_OWORD *)(a1 + 360) = *(_OWORD *)(a2 + 360);
  double v16 = *(void **)(a2 + 376);
  double v17 = *(void **)(a2 + 384);
  *(void *)(a1 + 376) = v16;
  *(void *)(a1 + 384) = v17;
  *(void *)(a1 + 392) = *(void *)(a2 + 392);
  long long v18 = *(_OWORD *)(a2 + 400);
  long long v19 = *(_OWORD *)(a2 + 432);
  *(_OWORD *)(a1 + 416) = *(_OWORD *)(a2 + 416);
  *(_OWORD *)(a1 + 432) = v19;
  *(_OWORD *)(a1 + 400) = v18;
  id v20 = *(void **)(a2 + 456);
  *(void *)(a1 + 448) = *(void *)(a2 + 448);
  *(void *)(a1 + 456) = v20;
  long long v21 = *(_OWORD *)(a2 + 480);
  *(_OWORD *)(a1 + 464) = *(_OWORD *)(a2 + 464);
  *(_OWORD *)(a1 + 480) = v21;
  long long v22 = *(_OWORD *)(a2 + 512);
  *(_OWORD *)(a1 + 496) = *(_OWORD *)(a2 + 496);
  *(_OWORD *)(a1 + 512) = v22;
  *(void *)(a1 + 528) = *(void *)(a2 + 528);
  *(unsigned char *)(a1 + 536) = *(unsigned char *)(a2 + 536);
  id v23 = v5;
  id v24 = v7;
  id v25 = v6;
  id v26 = v8;
  id v27 = v9;
  id v28 = v10;
  id v29 = v40;
  id v30 = v41;
  id v31 = v42;
  id v32 = v43;
  id v33 = v39;
  id v34 = v15;
  id v35 = v16;
  id v36 = v17;
  id v37 = v20;
  return a1;
}

uint64_t assignWithCopy for SyncedLyricsViewController.Specs(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  long long v4 = *(_OWORD *)(a2 + 8);
  long long v5 = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = v5;
  *(_OWORD *)(a1 + 8) = v4;
  uint64_t v6 = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 48) = v6;
  uint64_t v7 = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 64) = v7;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  int v8 = *(void **)(a2 + 168);
  double v9 = *(void **)(a1 + 168);
  *(void *)(a1 + 168) = v8;
  id v10 = v8;

  uint64_t v11 = *(void *)(a2 + 176);
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  *(void *)(a1 + 176) = v11;
  long long v12 = *(void **)(a2 + 192);
  uint64_t v13 = *(void **)(a1 + 192);
  *(void *)(a1 + 192) = v12;
  id v14 = v12;

  double v15 = *(void **)(a2 + 200);
  double v16 = *(void **)(a1 + 200);
  *(void *)(a1 + 200) = v15;
  id v17 = v15;

  long long v18 = *(void **)(a2 + 208);
  long long v19 = *(void **)(a1 + 208);
  *(void *)(a1 + 208) = v18;
  id v20 = v18;

  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  long long v21 = *(void **)(a2 + 232);
  long long v22 = *(void **)(a1 + 232);
  *(void *)(a1 + 232) = v21;
  id v23 = v21;

  id v24 = *(void **)(a2 + 240);
  id v25 = *(void **)(a1 + 240);
  *(void *)(a1 + 240) = v24;
  id v26 = v24;

  id v27 = *(void **)(a2 + 248);
  id v28 = *(void **)(a1 + 248);
  *(void *)(a1 + 248) = v27;
  id v29 = v27;

  id v30 = *(void **)(a2 + 256);
  id v31 = *(void **)(a1 + 256);
  *(void *)(a1 + 256) = v30;
  id v32 = v30;

  id v33 = *(void **)(a2 + 264);
  id v34 = *(void **)(a1 + 264);
  *(void *)(a1 + 264) = v33;
  id v35 = v33;

  id v36 = *(void **)(a2 + 272);
  id v37 = *(void **)(a1 + 272);
  *(void *)(a1 + 272) = v36;
  id v38 = v36;

  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  *(void *)(a1 + 296) = *(void *)(a2 + 296);
  *(void *)(a1 + 304) = *(void *)(a2 + 304);
  *(void *)(a1 + 312) = *(void *)(a2 + 312);
  *(void *)(a1 + 320) = *(void *)(a2 + 320);
  id v39 = *(void **)(a2 + 328);
  uint64_t v40 = *(void **)(a1 + 328);
  *(void *)(a1 + 328) = v39;
  id v41 = v39;

  *(void *)(a1 + 336) = *(void *)(a2 + 336);
  objc_super v42 = *(void **)(a2 + 344);
  id v43 = *(void **)(a1 + 344);
  *(void *)(a1 + 344) = v42;
  id v44 = v42;

  *(void *)(a1 + 352) = *(void *)(a2 + 352);
  *(void *)(a1 + 360) = *(void *)(a2 + 360);
  *(void *)(a1 + 368) = *(void *)(a2 + 368);
  id v45 = *(void **)(a2 + 376);
  id v46 = *(void **)(a1 + 376);
  *(void *)(a1 + 376) = v45;
  id v47 = v45;

  uint64_t v48 = *(void **)(a2 + 384);
  id v49 = *(void **)(a1 + 384);
  *(void *)(a1 + 384) = v48;
  id v50 = v48;

  *(void *)(a1 + 392) = *(void *)(a2 + 392);
  *(void *)(a1 + 400) = *(void *)(a2 + 400);
  *(void *)(a1 + 408) = *(void *)(a2 + 408);
  *(void *)(a1 + 416) = *(void *)(a2 + 416);
  *(void *)(a1 + 424) = *(void *)(a2 + 424);
  *(void *)(a1 + 432) = *(void *)(a2 + 432);
  *(void *)(a1 + 440) = *(void *)(a2 + 440);
  *(void *)(a1 + 448) = *(void *)(a2 + 448);
  id v51 = *(void **)(a2 + 456);
  id v52 = *(void **)(a1 + 456);
  *(void *)(a1 + 456) = v51;
  id v53 = v51;

  *(void *)(a1 + 464) = *(void *)(a2 + 464);
  *(void *)(a1 + 472) = *(void *)(a2 + 472);
  *(void *)(a1 + 480) = *(void *)(a2 + 480);
  *(void *)(a1 + 488) = *(void *)(a2 + 488);
  *(void *)(a1 + 496) = *(void *)(a2 + 496);
  *(void *)(a1 + 504) = *(void *)(a2 + 504);
  *(void *)(a1 + 512) = *(void *)(a2 + 512);
  *(void *)(a1 + 520) = *(void *)(a2 + 520);
  *(void *)(a1 + 528) = *(void *)(a2 + 528);
  *(unsigned char *)(a1 + 536) = *(unsigned char *)(a2 + 536);
  return a1;
}

void *__swift_memcpy537_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x219uLL);
}

uint64_t assignWithTake for SyncedLyricsViewController.Specs(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  long long v4 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v4;
  long long v5 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v5;
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  uint64_t v6 = *(void *)(a2 + 168);
  uint64_t v7 = *(void **)(a1 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v6;

  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  int v8 = *(void **)(a1 + 192);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);

  double v9 = *(void **)(a1 + 200);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);

  id v10 = *(void **)(a1 + 208);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);

  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  uint64_t v11 = *(void **)(a1 + 232);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);

  long long v12 = *(void **)(a1 + 240);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);

  uint64_t v13 = *(void **)(a1 + 248);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);

  id v14 = *(void **)(a1 + 256);
  *(void *)(a1 + 256) = *(void *)(a2 + 256);

  double v15 = *(void **)(a1 + 264);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);

  double v16 = *(void **)(a1 + 272);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);

  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  long long v17 = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 304) = v17;
  *(void *)(a1 + 320) = *(void *)(a2 + 320);
  long long v18 = *(void **)(a1 + 328);
  *(void *)(a1 + 328) = *(void *)(a2 + 328);

  *(void *)(a1 + 336) = *(void *)(a2 + 336);
  long long v19 = *(void **)(a1 + 344);
  *(void *)(a1 + 344) = *(void *)(a2 + 344);

  *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
  *(void *)(a1 + 368) = *(void *)(a2 + 368);
  id v20 = *(void **)(a1 + 376);
  *(void *)(a1 + 376) = *(void *)(a2 + 376);

  long long v21 = *(void **)(a1 + 384);
  *(void *)(a1 + 384) = *(void *)(a2 + 384);

  *(void *)(a1 + 392) = *(void *)(a2 + 392);
  long long v22 = *(_OWORD *)(a2 + 416);
  *(_OWORD *)(a1 + 400) = *(_OWORD *)(a2 + 400);
  *(_OWORD *)(a1 + 416) = v22;
  *(_OWORD *)(a1 + 432) = *(_OWORD *)(a2 + 432);
  *(void *)(a1 + 448) = *(void *)(a2 + 448);
  id v23 = *(void **)(a1 + 456);
  *(void *)(a1 + 456) = *(void *)(a2 + 456);

  *(_OWORD *)(a1 + 464) = *(_OWORD *)(a2 + 464);
  *(void *)(a1 + 480) = *(void *)(a2 + 480);
  *(void *)(a1 + 488) = *(void *)(a2 + 488);
  long long v24 = *(_OWORD *)(a2 + 512);
  *(_OWORD *)(a1 + 496) = *(_OWORD *)(a2 + 496);
  *(_OWORD *)(a1 + 512) = v24;
  *(void *)(a1 + 528) = *(void *)(a2 + 528);
  *(unsigned char *)(a1 + 536) = *(unsigned char *)(a2 + 536);
  return a1;
}

uint64_t getEnumTagSinglePayload for SyncedLyricsViewController.Specs(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 537)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 168);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SyncedLyricsViewController.Specs(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 536) = 0;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 537) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 168) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 537) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SyncedLyricsViewController.Specs()
{
  return &type metadata for SyncedLyricsViewController.Specs;
}

uint64_t getEnumTagSinglePayload for SyncedLyricsViewController.Specs.SelectedLinePosition(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7F && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 127);
  }
  unsigned int v3 = (*(unsigned char *)(a1 + 32) & 0x7E | (*(unsigned __int8 *)(a1 + 32) >> 7)) ^ 0x7F;
  if (v3 >= 0x7E) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for SyncedLyricsViewController.Specs.SelectedLinePosition(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7E)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)__n128 result = a2 - 127;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2)
    {
      *(_OWORD *)__n128 result = 0u;
      *(_OWORD *)(result + 16) = 0u;
      *(unsigned char *)(result + 32) = 2 * (((-a2 >> 1) & 0x3F) - ((_BYTE)a2 << 6));
    }
  }
  return result;
}

uint64_t getEnumTag for SyncedLyricsViewController.Specs.SelectedLinePosition(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 32) >> 7;
}

uint64_t destructiveProjectEnumData for SyncedLyricsViewController.Specs.SelectedLinePosition(uint64_t result)
{
  *(unsigned char *)(result + 32) &= ~0x80u;
  return result;
}

uint64_t destructiveInjectEnumTag for SyncedLyricsViewController.Specs.SelectedLinePosition(uint64_t result, char a2)
{
  *(unsigned char *)(result + 32) = *(unsigned char *)(result + 32) & 1 | (a2 << 7);
  return result;
}

ValueMetadata *type metadata accessor for SyncedLyricsViewController.Specs.SelectedLinePosition()
{
  return &type metadata for SyncedLyricsViewController.Specs.SelectedLinePosition;
}

uint64_t type metadata accessor for SyncedLyricsViewController.Specs.CustomCurveAnimationFactory()
{
  return self;
}

uint64_t sub_100332E98()
{
  return swift_deallocObject();
}

uint64_t block_copy_helper_59(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_59()
{
  return swift_release();
}

void *_sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSay11MusicCoreUI20SyncedLyricsLineViewC04lineJ0_Sb7visibletG_AHs5NeverOTg504_s11de4UI26ghj20ControllerC16visiblei51Views33_A841AA9F341C08F0B5A14F1EE881C0E2LLSayAA0deiw13CGvgA2G04lineW70_Sb0H0t_tcfu0_33_7226b86683bdb161da88e3d7cca0a50dAgI_SbAJtAGTf3nnnpk_nTf1cn_n(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  __n128 result = _swiftEmptyArrayStorage;
  if (v2)
  {
    specialized ContiguousArray.reserveCapacity(_:)();
    long long v4 = (void **)(a1 + 32);
    do
    {
      long long v5 = *v4;
      v4 += 2;
      id v6 = v5;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      --v2;
    }
    while (v2);
    return _swiftEmptyArrayStorage;
  }
  return result;
}

BOOL specialized Sequence<>.contains(_:)(BOOL result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  int v3 = result;
  if (*(unsigned char *)(a2 + 32) == result) {
    return 1;
  }
  if (v2 == 1) {
    return 0;
  }
  for (uint64_t i = 33; ; ++i)
  {
    uint64_t v5 = i - 31;
    if (__OFADD__(i - 32, 1)) {
      break;
    }
    int v6 = *(unsigned __int8 *)(a2 + i);
    __n128 result = v6 == v3;
    if (v6 == v3 || v5 == v2) {
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t specialized Collection<>.firstIndex(of:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  if (*(void *)(a2 + 32) == a1) {
    return 0;
  }
  uint64_t result = 0;
  uint64_t v5 = v2 - 1;
  while (v5 != result)
  {
    uint64_t v6 = *(void *)(a2 + 40 + 8 * result++);
    if (v6 == a1) {
      return result;
    }
  }
  return 0;
}

uint64_t _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5_1(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TaskPriority();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  outlined destroy of TaskPriority?(a1, &_sScPSgMD_2);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    dispatch thunk of Actor.unownedExecutor.getter();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCytSg_Tgm5_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCytSg_Tgm5Tm_0(a1, a2, a3, (uint64_t)&unk_100544308, &_sytSgMD_0);
}

uint64_t _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfC8MusicKit8PlaylistV0dE8InternalE12CollaboratorVSg_Tgm5(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCytSg_Tgm5Tm_0(a1, a2, a3, (uint64_t)&unk_100543F20, &demangling cache variable for type metadata for Playlist.Collaborator?);
}

uint64_t _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCytSg_Tgm5Tm_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v9 = type metadata accessor for TaskPriority();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1, 1, v9) != 1)
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(a1, v9);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  outlined destroy of TaskPriority?(a1, &_sScPSgMD_2);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    dispatch thunk of Actor.unownedExecutor.getter();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a2;
  *(void *)(v11 + 24) = a3;
  __swift_instantiateConcreteTypeFromMangledName(a5);
  return swift_task_create();
}

uint64_t SyncedLyricsSharingTransitionInfo.line.getter@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of Lyrics.TextLine(v1, a1);
}

uint64_t outlined init with copy of Lyrics.TextLine(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t SyncedLyricsSharingTransitionInfo.line.setter(uint64_t a1)
{
  return outlined assign with take of Lyrics.TextLine(a1, v1);
}

uint64_t outlined assign with take of Lyrics.TextLine(uint64_t a1, uint64_t a2)
{
  return a2;
}

id SyncedLyricsSharingTransitionInfo.initialView.getter()
{
  return *(id *)(v0 + 104);
}

void SyncedLyricsSharingTransitionInfo.initialView.setter(uint64_t a1)
{
  *(void *)(v1 + 104) = a1;
}

CFRange (__swiftcall *SyncedLyricsSharingTransitionInfo.initialView.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

uint64_t SyncedLyricsSharingTransitionInfo.alignment.getter()
{
  return *(void *)(v0 + 112);
}

uint64_t SyncedLyricsSharingTransitionInfo.alignment.setter(uint64_t result)
{
  *(void *)(v1 + 112) = result;
  return result;
}

double SyncedLyricsSharingTransitionInfo.frame.getter()
{
  return *(double *)(v0 + 120);
}

void SyncedLyricsSharingTransitionInfo.frame.setter(double a1, double a2, double a3, double a4)
{
  v4[15] = a1;
  v4[16] = a2;
  v4[17] = a3;
  v4[18] = a4;
}

CFRange (__swiftcall *SyncedLyricsSharingTransitionInfo.frame.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

uint64_t SyncedLyricsSharingTransitionInfo.isSelected.getter()
{
  return *(unsigned __int8 *)(v0 + 152);
}

uint64_t SyncedLyricsSharingTransitionInfo.isSelected.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 152) = result;
  return result;
}

__n128 SyncedLyricsSharingTransitionInfo.transform.getter@<Q0>(uint64_t a1@<X8>)
{
  long long v2 = *(_OWORD *)(v1 + 176);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 160);
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(v1 + 192);
  *(__n128 *)(a1 + 32) = result;
  return result;
}

__n128 SyncedLyricsSharingTransitionInfo.transform.setter(uint64_t a1)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 160) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 176) = v2;
  __n128 result = *(__n128 *)(a1 + 32);
  *(__n128 *)(v1 + 192) = result;
  return result;
}

uint64_t SyncedLyricsSharingTransitionInfo.transitionWillBeginHandler.getter()
{
  uint64_t v1 = *(void *)(v0 + 208);
  swift_retain();
  return v1;
}

uint64_t SyncedLyricsSharingTransitionInfo.transitionWillBeginHandler.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_release();
  *(void *)(v2 + 208) = a1;
  *(void *)(v2 + 216) = a2;
  return result;
}

uint64_t SyncedLyricsSharingTransitionInfo.transitionCompletionHandler.getter()
{
  uint64_t v1 = *(void *)(v0 + 224);
  swift_retain();
  return v1;
}

uint64_t SyncedLyricsSharingTransitionInfo.transitionCompletionHandler.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_release();
  *(void *)(v2 + 224) = a1;
  *(void *)(v2 + 232) = a2;
  return result;
}

CFRange (__swiftcall *SyncedLyricsSharingTransitionInfo.transitionCompletionHandler.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

uint64_t SyncedLyricsViewController.isPlayingSpatial.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isPlayingSpatial);
  swift_beginAccess();
  return *v1;
}

uint64_t SyncedLyricsViewController.isPlayingSpatial.setter(char a1)
{
  int v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isPlayingSpatial);
  uint64_t result = swift_beginAccess();
  unsigned char *v3 = a1;
  uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager);
  if (v5)
  {
    uint64_t result = swift_beginAccess();
    *(unsigned char *)(v5 + 88) = a1 & 1;
  }
  return result;
}

void (*SyncedLyricsViewController.isPlayingSpatial.modify(void *a1))(void **a1, char a2)
{
  int v3 = malloc(0x28uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isPlayingSpatial;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess();
  return SyncedLyricsViewController.isPlayingSpatial.modify;
}

void SyncedLyricsViewController.isPlayingSpatial.modify(void **a1, char a2)
{
  int v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    uint64_t v4 = v3[3];
    uint64_t v5 = *(void *)(v4 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager);
    if (v5)
    {
      char v6 = *(unsigned char *)(v4 + v3[4]);
      swift_beginAccess();
      *(unsigned char *)(v5 + 88) = v6;
    }
  }

  free(v3);
}

uint64_t SyncedLyricsViewController.isFullScreen.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isFullScreen);
  swift_beginAccess();
  return *v1;
}

uint64_t SyncedLyricsViewController.isFullScreen.setter(char a1)
{
  int v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isFullScreen);
  uint64_t result = swift_beginAccess();
  unsigned char *v3 = a1;
  return result;
}

uint64_t (*SyncedLyricsViewController.isFullScreen.modify())()
{
  return ArtworkVideoReportingController.videoArtworkContextProviding.modify;
}

double SyncedLyricsViewController.bottomTapAreaHeight.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_bottomTapAreaHeight;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t SyncedLyricsViewController.bottomTapAreaHeight.setter(double a1)
{
  int v3 = (double *)(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_bottomTapAreaHeight);
  uint64_t result = swift_beginAccess();
  double *v3 = a1;
  return result;
}

uint64_t (*SyncedLyricsViewController.bottomTapAreaHeight.modify())()
{
  return ArtworkVideoReportingController.isEnabled.modify;
}

double SyncedLyricsViewController.containerHeight.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight;
  swift_beginAccess();
  return *(double *)v1;
}

void SyncedLyricsViewController.containerHeight.setter(double a1)
{
  int v3 = (double *)(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight);
  swift_beginAccess();
  double v4 = *v3;
  double *v3 = a1;
  if (v4 != a1) {
    SyncedLyricsViewController.updateInsets()();
  }
}

void (*SyncedLyricsViewController.containerHeight.modify(void *a1))(uint64_t a1)
{
  int v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight;
  v3[4] = v1;
  v3[5] = v4;
  uint64_t v5 = (void *)(v1 + v4);
  swift_beginAccess();
  v3[3] = *v5;
  return SyncedLyricsViewController.containerHeight.modify;
}

void SyncedLyricsViewController.containerHeight.modify(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  double v2 = *(double *)(*(void *)a1 + 24);
  uint64_t v4 = *(void *)(*(void *)a1 + 32);
  uint64_t v3 = *(void *)(*(void *)a1 + 40);
  double v5 = *(double *)(v4 + v3);
  *(double *)(v4 + v3) = v2;
  if (v2 != v5) {
    SyncedLyricsViewController.updateInsets()();
  }

  free(v1);
}

id SyncedLyricsViewController.specs.didset(uint64_t a1)
{
  double v2 = v1;
  id result = [v2 isViewLoaded];
  if (result)
  {
    double v5 = (unsigned __int8 *)&v2[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs];
    swift_beginAccess();
    memcpy(__dst, v5, 0x219uLL);
    outlined retain of SyncedLyricsViewController.Specs((uint64_t)__dst);
    char v6 = specialized static SyncedLyricsViewController.Specs.__derived_struct_equals(_:_:)((uint64_t)__dst, a1);
    id result = (id)outlined release of SyncedLyricsViewController.Specs((uint64_t)__dst);
    if ((v6 & 1) == 0)
    {
      SyncedLyricsViewController.updateInsets()();
      [*(id *)&v2[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView] setShowsVerticalScrollIndicator:v5[536]];
      uint64_t v7 = &v2[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews];
      swift_beginAccess();
      uint64_t v8 = *(void *)v7;
      if (*(void *)v7 >> 62)
      {
        swift_bridgeObjectRetain();
        id result = (id)_CocoaArrayWrapper.endIndex.getter();
        uint64_t v9 = (uint64_t)result;
        if (result) {
          goto LABEL_5;
        }
      }
      else
      {
        uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
        id result = (id)swift_bridgeObjectRetain();
        if (v9)
        {
LABEL_5:
          uint64_t v27 = v9 - 1;
          if (v9 < 1)
          {
            __break(1u);
            return result;
          }
          uint64_t v10 = 0;
          id v25 = v5;
          unint64_t v26 = v8 & 0xC000000000000001;
          if ((v8 & 0xC000000000000001) == 0) {
            goto LABEL_8;
          }
LABEL_7:
          for (uint64_t i = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
                ;
                uint64_t i = (char *)*(id *)(v8 + 8 * v10 + 32))
          {
            long long v12 = i;
            memcpy(v29, v5, 0x219uLL);
            uint64_t v13 = &v12[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs];
            memcpy(v30, &v12[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs], 0x219uLL);
            memmove(&v12[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs], v5, 0x219uLL);
            outlined retain of SyncedLyricsViewController.Specs((uint64_t)v29);
            outlined retain of SyncedLyricsViewController.Specs((uint64_t)v29);
            outlined release of SyncedLyricsViewController.Specs((uint64_t)v30);
            double v15 = SyncedLyricsLineView.contentView.modify((uint64_t)v28);
            if (*v14)
            {
              double v16 = v14;
              memcpy(v31, v13, 0x219uLL);
              long long v18 = *v16;
              long long v17 = v16[1];
              uint64_t ObjectType = swift_getObjectType();
              uint64_t v20 = v10;
              uint64_t v21 = v8;
              long long v22 = (void (*)(unsigned char *, uint64_t, void *))v17[2];
              outlined retain of SyncedLyricsViewController.Specs((uint64_t)v31);
              id v23 = v18;
              v22(v31, ObjectType, v17);
              uint64_t v8 = v21;
              uint64_t v10 = v20;
              long long v24 = *v16;
              void *v16 = v18;
              v16[1] = v17;
            }
            v15((long long *)v28, 0);
            outlined release of SyncedLyricsViewController.Specs((uint64_t)v29);
            SyncedLyricsViewController.layout(lineView:)(v12);

            if (v27 == v10) {
              break;
            }
            ++v10;
            double v5 = v25;
            if (v26) {
              goto LABEL_7;
            }
LABEL_8:
            ;
          }
        }
      }
      return (id)swift_bridgeObjectRelease();
    }
  }
  return result;
}

void *SyncedLyricsViewController.specs.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (const void *)(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs);
  swift_beginAccess();
  memcpy(__dst, v3, 0x219uLL);
  outlined retain of SyncedLyricsViewController.Specs((uint64_t)__dst);
  return memcpy(a1, __dst, 0x219uLL);
}

uint64_t SyncedLyricsViewController.specs.setter(const void *a1)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs);
  swift_beginAccess();
  memcpy(__dst, v3, 0x219uLL);
  memcpy(v6, v3, 0x219uLL);
  memcpy(v3, a1, 0x219uLL);
  outlined retain of SyncedLyricsViewController.Specs((uint64_t)__dst);
  outlined retain of SyncedLyricsViewController.Specs((uint64_t)a1);
  outlined release of SyncedLyricsViewController.Specs((uint64_t)v6);
  SyncedLyricsViewController.specs.didset((uint64_t)__dst);
  outlined release of SyncedLyricsViewController.Specs((uint64_t)a1);
  return outlined release of SyncedLyricsViewController.Specs((uint64_t)__dst);
}

void (*SyncedLyricsViewController.specs.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0xF08uLL);
  *a1 = v3;
  v3[479] = v1;
  uint64_t v4 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs;
  v3[480] = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs;
  double v5 = (const void *)(v1 + v4);
  swift_beginAccess();
  memcpy(v3, v5, 0x219uLL);
  memcpy(v3 + 204, v5, 0x219uLL);
  outlined retain of SyncedLyricsViewController.Specs((uint64_t)v3);
  return SyncedLyricsViewController.specs.modify;
}

void SyncedLyricsViewController.specs.modify(uint64_t a1, char a2)
{
  double v2 = *(void **)a1;
  uint64_t v3 = (const void *)(*(void *)a1 + 1632);
  uint64_t v4 = (void *)(*(void *)a1 + 2176);
  double v5 = (void *)(*(void *)a1 + 2720);
  if (a2)
  {
    char v6 = (void *)(v2[479] + v2[480]);
    memcpy(v2 + 408, v3, 0x219uLL);
    memcpy(v2 + 68, v6, 0x219uLL);
    memcpy(v5, v6, 0x219uLL);
    memcpy(v6, v3, 0x219uLL);
    outlined retain of SyncedLyricsViewController.Specs((uint64_t)(v2 + 408));
    outlined retain of SyncedLyricsViewController.Specs((uint64_t)(v2 + 408));
    outlined retain of SyncedLyricsViewController.Specs((uint64_t)(v2 + 68));
    outlined release of SyncedLyricsViewController.Specs((uint64_t)v5);
    SyncedLyricsViewController.specs.didset((uint64_t)(v2 + 68));
    outlined release of SyncedLyricsViewController.Specs((uint64_t)(v2 + 408));
    outlined release of SyncedLyricsViewController.Specs((uint64_t)(v2 + 68));
    memcpy(v4, v3, 0x219uLL);
    uint64_t v7 = (uint64_t)v4;
  }
  else
  {
    uint64_t v8 = (void *)(v2[479] + v2[480]);
    memcpy((void *)(*(void *)a1 + 2176), v3, 0x219uLL);
    memcpy(v2 + 136, v8, 0x219uLL);
    memcpy(v5, v8, 0x219uLL);
    memcpy(v8, v3, 0x219uLL);
    outlined retain of SyncedLyricsViewController.Specs((uint64_t)(v2 + 136));
    outlined retain of SyncedLyricsViewController.Specs((uint64_t)v4);
    outlined release of SyncedLyricsViewController.Specs((uint64_t)v5);
    SyncedLyricsViewController.specs.didset((uint64_t)(v2 + 136));
    outlined release of SyncedLyricsViewController.Specs((uint64_t)v4);
    uint64_t v7 = (uint64_t)(v2 + 136);
  }
  outlined release of SyncedLyricsViewController.Specs(v7);

  free(v2);
}

uint64_t SyncedLyricsViewController.delegate.getter()
{
  return swift_unknownObjectWeakLoadStrong();
}

uint64_t SyncedLyricsViewController.delegate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_delegate;
  swift_beginAccess();
  *(void *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*SyncedLyricsViewController.delegate.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_delegate;
  v3[5] = v1;
  v3[6] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  uint64_t v7 = *(void *)(v5 + 8);
  v3[3] = Strong;
  v3[4] = v7;
  return SyncedLyricsViewController.delegate.modify;
}

void SyncedLyricsViewController.delegate.modify(uint64_t a1, char a2)
{
  uint64_t v3 = *(void **)a1;
  *(void *)(*(void *)(*(void *)a1 + 40) + *(void *)(*(void *)a1 + 48) + 8) = *(void *)(*(void *)a1 + 32);
  swift_unknownObjectWeakAssign();
  if (a2)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }

  free(v3);
}

uint64_t SyncedLyricsViewController.mode.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode);
  swift_beginAccess();
  return *v1;
}

uint64_t SyncedLyricsViewController.lyrics.didset(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = (uint64_t *)(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics);
  uint64_t result = swift_beginAccess();
  if (*v4)
  {
    if (a1 && *v4 == a1) {
      return result;
    }
  }
  else if (!a1)
  {
    return result;
  }
  char v6 = (void *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_selectedLineViews);
  swift_beginAccess();
  *char v6 = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0 && _CocoaArrayWrapper.endIndex.getter())
  {
    specialized Set.init(_nonEmptyArrayLiteral:)((unint64_t)_swiftEmptyArrayStorage);
    uint64_t v7 = v25;
  }
  else
  {
    uint64_t v7 = &_swiftEmptySetSingleton;
  }
  uint64_t v8 = (void *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_blurredLineViews);
  swift_beginAccess();
  *uint64_t v8 = v7;
  swift_bridgeObjectRelease();
  uint64_t v9 = *v4;
  if (*v4)
  {
    uint64_t v10 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v11 = (void *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs);
    swift_beginAccess();
    uint64_t v12 = v11[66];
    uint64_t v13 = v11[19];
    uint64_t v14 = v11[20];
    double v15 = (char *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isPlayingSpatial);
    swift_beginAccess();
    char v16 = *v15;
    type metadata accessor for SyncedLyricsManager();
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 72) = 0;
    swift_unknownObjectWeakInit();
    *(void *)(v17 + 80) = _swiftEmptyArrayStorage;
    *(_OWORD *)(v17 + 96) = 0u;
    *(_OWORD *)(v17 + 112) = 0u;
    *(_OWORD *)(v17 + 128) = 0u;
    *(void *)(v17 + 144) = 0;
    *(void *)(v17 + 16) = v9;
    *(void *)(v17 + 24) = partial apply for closure #1 in SyncedLyricsViewController.lyrics.didset;
    *(void *)(v17 + 32) = v10;
    *(void *)(v17 + 40) = v12;
    *(void *)(v17 + 48) = v13;
    *(void *)(v17 + 56) = v14;
    swift_beginAccess();
    *(void *)(v17 + 72) = &protocol witness table for SyncedLyricsViewController;
    swift_unknownObjectWeakAssign();
    *(unsigned char *)(v17 + 88) = v16;
    uint64_t v18 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager;
    *(void *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager) = v17;
    swift_retain_n();
    swift_retain();
    swift_release();
    SyncedLyricsViewController.cancelAnimations()();
    SyncedLyricsViewController.setupUI(with:)(v9);
    uint64_t v19 = *(void *)(v2 + v18);
    if (v19)
    {
      uint64_t v20 = swift_allocObject();
      swift_unknownObjectWeakInit();
      swift_beginAccess();
      uint64_t v21 = *(void *)(v19 + 96);
      *(void *)(v19 + 96) = partial apply for closure #1 in closure #2 in closure #3 in SyncedLyricsViewController.viewDidLoad();
      *(void *)(v19 + 104) = v20;
      swift_retain();
      swift_retain_n();
      outlined consume of (@escaping @callee_guaranteed () -> ())?(v21);
      SyncedLyricsManager.elapsedTimeProvider.didset();
      swift_release_n();
      swift_release();
    }
    long long v22 = *(void **)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_displayLink);
    if (v22)
    {
      id v23 = v22;
      [v23 setPaused:SyncedLyricsViewController.displayLinkShouldPause()() & 1];
      swift_release();
    }
    else
    {
      swift_release();
    }
  }
  else
  {
    long long v24 = *(void **)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_displayLink);
    if (v24) {
      [v24 setPaused:1];
    }
    *(void *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager) = 0;
  }
  return swift_release();
}

double closure #1 in SyncedLyricsViewController.lyrics.didset(double a1)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return 0.0;
  }
  uint64_t v3 = (void *)Strong;
  uint64_t v4 = Strong + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics;
  swift_beginAccess();
  if (*(void *)v4 && *(unsigned char *)(*(void *)v4 + 56) == 2)
  {
    double v5 = (a1 + -0.2) / 0.55;
    if (a1 > 0.75) {
      double v5 = 1.0;
    }
    if (a1 < 0.2) {
      double v5 = 0.0;
    }
    double v6 = (1.0 - v5) * 0.12 + 0.78;
    double v7 = v5 * 0.27 + 0.48;
    type metadata accessor for UIMenu(0, &lazy cache variable for type metadata for UISpringTimingParameters);
    id v8 = UISpringTimingParameters.init(dampingRatio:response:)(v6, v7);
  }
  else
  {
    id v8 = objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 100.0, 18.0, 0.0, 0.0);
  }
  uint64_t v9 = v8;

  [v9 settlingDuration];
  double v11 = v10;

  return v11;
}

uint64_t SyncedLyricsViewController.lyrics.getter()
{
  return swift_retain();
}

uint64_t SyncedLyricsViewController.lyrics.setter(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t *v3 = a1;
  swift_retain();
  SyncedLyricsViewController.lyrics.didset(v4);
  swift_release();
  return swift_release();
}

void (*SyncedLyricsViewController.lyrics.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics;
  v3[4] = v1;
  v3[5] = v4;
  double v5 = (void *)(v1 + v4);
  swift_beginAccess();
  v3[3] = *v5;
  swift_retain();
  return SyncedLyricsViewController.lyrics.modify;
}

void SyncedLyricsViewController.lyrics.modify(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v4 = *(void *)(*(void *)a1 + 32);
  uint64_t v3 = *(void *)(*(void *)a1 + 40);
  uint64_t v5 = *(void *)(v4 + v3);
  *(void *)(v4 + v3) = *(void *)(*(void *)a1 + 24);
  if (a2)
  {
    swift_retain_n();
    SyncedLyricsViewController.lyrics.didset(v5);
    swift_release();
  }
  else
  {
    swift_retain();
    SyncedLyricsViewController.lyrics.didset(v5);
  }
  swift_release();
  swift_release();

  free(v2);
}

void SyncedLyricsViewController.timingProvider.didset(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_timingProvider;
  swift_beginAccess();
  outlined init with copy of SyncedLyricsTimingProvider?(v4, (uint64_t)&v23);
  if (v24)
  {
    outlined init with take of AlertPresenting(&v23, (uint64_t)v26);
    outlined init with copy of SyncedLyricsTimingProvider?(a1, (uint64_t)&v23);
    uint64_t v5 = v24;
    if (v24)
    {
      uint64_t v6 = v25;
      __swift_project_boxed_opaque_existential_0Tm(&v23, v24);
      double v7 = (double (*)(void))(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v5, v6);
      double v8 = v7();
      swift_release();
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v23);
      uint64_t v9 = v27;
      uint64_t v10 = v28;
      __swift_project_boxed_opaque_existential_0Tm(v26, v27);
      double v11 = (double (*)(void))(*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(v9, v10);
      double v12 = v11();
      swift_release();
      if (vabdd_f64(v8, v12) <= 0.5)
      {
        uint64_t v13 = (unsigned char *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode);
        swift_beginAccess();
        if (*v13 != 2)
        {
          uint64_t v14 = *(void **)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_displayLink);
          if (v14)
          {
            id v15 = v14;
            [v15 setPaused:SyncedLyricsViewController.displayLinkShouldPause()() & 1];
          }
          __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v26);
          return;
        }
      }
    }
    else
    {
      outlined destroy of TaskPriority?((uint64_t)&v23, &demangling cache variable for type metadata for SyncedLyricsTimingProvider?);
    }
    uint64_t v18 = *(void *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager);
    if (v18)
    {
      uint64_t v19 = swift_allocObject();
      swift_unknownObjectWeakInit();
      swift_beginAccess();
      uint64_t v20 = *(void *)(v18 + 96);
      *(void *)(v18 + 96) = partial apply for closure #1 in closure #2 in closure #3 in SyncedLyricsViewController.viewDidLoad();
      *(void *)(v18 + 104) = v19;
      swift_retain();
      swift_retain_n();
      outlined consume of (@escaping @callee_guaranteed () -> ())?(v20);
      SyncedLyricsManager.elapsedTimeProvider.didset();
      swift_release_n();
      swift_release();
    }
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v26);
  }
  else
  {
    outlined destroy of TaskPriority?((uint64_t)&v23, &demangling cache variable for type metadata for SyncedLyricsTimingProvider?);
    uint64_t v16 = *(void *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager);
    if (v16)
    {
      swift_beginAccess();
      uint64_t v17 = *(void *)(v16 + 96);
      *(void *)(v16 + 96) = 0;
      *(void *)(v16 + 104) = 0;
      swift_retain();
      outlined consume of (@escaping @callee_guaranteed () -> ())?(v17);
      SyncedLyricsManager.elapsedTimeProvider.didset();
      swift_release();
    }
  }
  uint64_t v21 = *(void **)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_displayLink);
  if (v21)
  {
    id v22 = v21;
    [v22 setPaused:SyncedLyricsViewController.displayLinkShouldPause()() & 1];
  }
}

double closure #2 in SyncedLyricsViewController.lyrics.didset()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  double v1 = 0.0;
  if (Strong)
  {
    uint64_t v2 = (void *)Strong;
    uint64_t v3 = Strong + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_timingProvider;
    swift_beginAccess();
    outlined init with copy of SyncedLyricsTimingProvider?(v3, (uint64_t)v13);

    uint64_t v4 = v14;
    if (v14)
    {
      uint64_t v5 = v15;
      __swift_project_boxed_opaque_existential_0Tm(v13, v14);
      uint64_t v6 = *(void *)(v4 - 8);
      __chkstk_darwin();
      double v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
      (*(void (**)(char *))(v6 + 16))(v8);
      outlined destroy of TaskPriority?((uint64_t)v13, &demangling cache variable for type metadata for SyncedLyricsTimingProvider?);
      uint64_t v9 = (double (*)(uint64_t))(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
      uint64_t v10 = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v4);
      double v1 = v9(v10);
      swift_release();
    }
    else
    {
      outlined destroy of TaskPriority?((uint64_t)v13, &demangling cache variable for type metadata for SyncedLyricsTimingProvider?);
    }
  }
  return v1;
}

uint64_t SyncedLyricsViewController.timingProvider.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_timingProvider;
  swift_beginAccess();
  return outlined init with copy of SyncedLyricsTimingProvider?(v3, a1);
}

uint64_t SyncedLyricsViewController.timingProvider.setter(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_timingProvider;
  swift_beginAccess();
  outlined init with copy of SyncedLyricsTimingProvider?(v3, (uint64_t)v5);
  swift_beginAccess();
  outlined assign with copy of SyncedLyricsTimingProvider?(a1, v3);
  swift_endAccess();
  SyncedLyricsViewController.timingProvider.didset((uint64_t)v5);
  outlined destroy of TaskPriority?(a1, &demangling cache variable for type metadata for SyncedLyricsTimingProvider?);
  return outlined destroy of TaskPriority?((uint64_t)v5, &demangling cache variable for type metadata for SyncedLyricsTimingProvider?);
}

void (*SyncedLyricsViewController.timingProvider.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0xB8uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_timingProvider;
  v3[21] = v1;
  v3[22] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  outlined init with copy of SyncedLyricsTimingProvider?(v5, (uint64_t)v3);
  return SyncedLyricsViewController.timingProvider.modify;
}

void SyncedLyricsViewController.timingProvider.modify(uint64_t *a1, char a2)
{
  uint64_t v2 = (void *)*a1;
  uint64_t v3 = *a1 + 40;
  uint64_t v4 = *a1 + 80;
  if (a2)
  {
    uint64_t v5 = v2[21] + v2[22];
    outlined init with copy of SyncedLyricsTimingProvider?(*a1, v3);
    outlined init with copy of SyncedLyricsTimingProvider?(v5, v4);
    swift_beginAccess();
    outlined assign with copy of SyncedLyricsTimingProvider?(v3, v5);
    swift_endAccess();
    SyncedLyricsViewController.timingProvider.didset(v4);
    outlined destroy of TaskPriority?(v3, &demangling cache variable for type metadata for SyncedLyricsTimingProvider?);
    outlined destroy of TaskPriority?(v4, &demangling cache variable for type metadata for SyncedLyricsTimingProvider?);
    uint64_t v6 = (uint64_t)v2;
  }
  else
  {
    uint64_t v7 = v2[21] + v2[22];
    outlined init with copy of SyncedLyricsTimingProvider?(v7, v3);
    swift_beginAccess();
    outlined assign with copy of SyncedLyricsTimingProvider?((uint64_t)v2, v7);
    swift_endAccess();
    SyncedLyricsViewController.timingProvider.didset(v3);
    outlined destroy of TaskPriority?((uint64_t)v2, &demangling cache variable for type metadata for SyncedLyricsTimingProvider?);
    uint64_t v6 = v3;
  }
  outlined destroy of TaskPriority?(v6, &demangling cache variable for type metadata for SyncedLyricsTimingProvider?);

  free(v2);
}

uint64_t SyncedLyricsViewController.shareHandler.getter()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_shareHandler);
  swift_beginAccess();
  uint64_t v2 = *v1;
  outlined copy of (@escaping @callee_guaranteed () -> ())?(*v1);
  return v2;
}

uint64_t SyncedLyricsViewController.shareHandler.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_shareHandler);
  swift_beginAccess();
  uint64_t v6 = *v5;
  *uint64_t v5 = a1;
  v5[1] = a2;
  return outlined consume of (@escaping @callee_guaranteed () -> ())?(v6);
}

uint64_t (*SyncedLyricsViewController.shareHandler.modify())()
{
  return ArtworkVideoReportingController.isEnabled.modify;
}

Swift::Void __swiftcall SyncedLyricsViewController.viewDidLoad()()
{
  uint64_t v1 = v0;
  swift_getObjectType();
  __swift_instantiateConcreteTypeFromMangledName(&_sScPSgMD_2);
  __chkstk_darwin();
  uint64_t v3 = (char *)&v42 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = (objc_class *)type metadata accessor for SyncedLyricsViewController();
  v43.receiver = v0;
  v43.super_class = v4;
  objc_msgSendSuper2(&v43, "viewDidLoad");
  id v5 = [v0 view];
  if (!v5)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v6 = v5;
  [v5 setPreservesSuperviewLayoutMargins:1];

  [v1 setViewRespectsSystemMinimumLayoutMargins:0];
  id v7 = [v1 view];
  if (!v7)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  double v8 = v7;
  [v7 bounds];
  double v10 = v9;
  double v12 = v11;
  double v14 = v13;
  double v16 = v15;

  id v17 = objc_msgSend(objc_allocWithZone((Class)UIScrollView), "initWithFrame:", v10, v12, v14, v16);
  uint64_t v18 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView;
  uint64_t v19 = *(void **)&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView];
  *(void *)&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView] = v17;

  [*(id *)&v1[v18] setClipsToBounds:0];
  [*(id *)&v1[v18] setIndicatorStyle:2];
  [*(id *)&v1[v18] setShowsHorizontalScrollIndicator:0];
  [*(id *)&v1[v18] setAutoresizingMask:18];
  [*(id *)&v1[v18] setDelegate:v1];
  [*(id *)&v1[v18] setMultipleTouchEnabled:0];
  uint64_t v20 = *(void **)&v1[v18];
  uint64_t v21 = &v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs];
  swift_beginAccess();
  [v20 setShowsVerticalScrollIndicator:v21[536]];
  id v22 = [v1 view];
  if (!v22)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  long long v23 = v22;
  [v22 addSubview:*(void *)&v1[v18]];

  uint64_t v24 = self;
  id v25 = [v24 defaultCenter];
  uint64_t v26 = NSNotificationCenter.notifications(named:object:)();

  id v27 = [v24 defaultCenter];
  uint64_t v42 = NSNotificationCenter.notifications(named:object:)();

  __swift_instantiateConcreteTypeFromMangledName(&_ss23_ContiguousArrayStorageCy5UIKit17UITraitDefinition_pXpGMD_0);
  uint64_t v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_100493400;
  *(void *)(v28 + 32) = type metadata accessor for UITraitAccessibilityContrast();
  *(void *)(v28 + 40) = &protocol witness table for UITraitAccessibilityContrast;
  UIViewController.registerForTraitChanges<A>(_:handler:)();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  uint64_t v29 = type metadata accessor for TaskPriority();
  id v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56);
  v30(v3, 1, 1, v29);
  uint64_t v31 = (uint64_t)v3;
  uint64_t v32 = swift_allocObject();
  swift_unknownObjectWeakInit();
  type metadata accessor for MainActor();
  swift_retain();
  swift_retain();
  uint64_t v33 = static MainActor.shared.getter();
  id v34 = (void *)swift_allocObject();
  v34[2] = v33;
  void v34[3] = &protocol witness table for MainActor;
  v34[4] = v26;
  v34[5] = v32;
  swift_release();
  _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5_1(v31, (uint64_t)&async function pointer to partial apply for closure #2 in SyncedLyricsViewController.viewDidLoad(), (uint64_t)v34);
  swift_release();
  v30((char *)v31, 1, 1, v29);
  uint64_t v35 = v42;
  uint64_t v36 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  swift_retain();
  uint64_t v37 = static MainActor.shared.getter();
  id v38 = (void *)swift_allocObject();
  v38[2] = v37;
  v38[3] = &protocol witness table for MainActor;
  v38[4] = v35;
  v38[5] = v36;
  swift_release();
  _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5_1(v31, (uint64_t)&async function pointer to partial apply for closure #3 in SyncedLyricsViewController.viewDidLoad(), (uint64_t)v38);
  swift_release();
  id v39 = [objc_allocWithZone((Class)UITapGestureRecognizer) init];
  [v39 setDelegate:v1];
  [v39 addTarget:v1 action:"bottomTapHandler"];
  id v40 = [v1 view];
  if (v40)
  {
    id v41 = v40;
    [v40 addGestureRecognizer:v39];

    swift_release();
    swift_release();
    return;
  }
LABEL_9:
  __break(1u);
}

uint64_t closure #2 in SyncedLyricsViewController.viewDidLoad()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[15] = a4;
  v5[16] = a5;
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  v5[17] = v6;
  v5[18] = *(void *)(v6 - 8);
  v5[19] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for DispatchQoS();
  v5[20] = v7;
  v5[21] = *(void *)(v7 - 8);
  v5[22] = swift_task_alloc();
  type metadata accessor for NSNotificationCenter.Notifications.Iterator();
  v5[23] = swift_task_alloc();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncCompactMapSequence<NSNotificationCenter.Notifications, UIWindowScene>);
  v5[24] = v8;
  v5[25] = *(void *)(v8 - 8);
  v5[26] = swift_task_alloc();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncCompactMapSequence<NSNotificationCenter.Notifications, UIWindowScene>.Iterator);
  v5[27] = v9;
  v5[28] = *(void *)(v9 - 8);
  v5[29] = swift_task_alloc();
  v5[30] = type metadata accessor for MainActor();
  v5[31] = static MainActor.shared.getter();
  uint64_t v11 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[32] = v11;
  v5[33] = v10;
  return _swift_task_switch(closure #2 in SyncedLyricsViewController.viewDidLoad(), v11, v10);
}

uint64_t closure #2 in SyncedLyricsViewController.viewDidLoad()()
{
  uint64_t v1 = v0[25];
  uint64_t v2 = v0[26];
  uint64_t v3 = v0[24];
  v0[11] = v0[15];
  type metadata accessor for NSNotificationCenter.Notifications();
  v0[34] = type metadata accessor for UIMenu(0, &lazy cache variable for type metadata for UIWindowScene);
  lazy protocol witness table accessor for type SyncedLyricsLineView and conformance NSObject(&lazy protocol witness table cache variable for type NSNotificationCenter.Notifications and conformance NSNotificationCenter.Notifications, (void (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Notifications);
  swift_retain();
  AsyncCompactMapSequence.init(_:transform:)();
  AsyncCompactMapSequence.base.getter();
  dispatch thunk of AsyncSequence.makeAsyncIterator()();
  AsyncCompactMapSequence.transform.getter();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v2, v3);
  AsyncCompactMapSequence.Iterator.init(_:transform:)();
  swift_beginAccess();
  uint64_t v4 = static MainActor.shared.getter();
  v0[35] = v4;
  uint64_t v7 = (char *)&_ss23AsyncCompactMapSequenceV8IteratorV4next9isolationq_SgScA_pSgYi_tYa7FailureQzYKFSo20NSNotificationCenterC10FoundationE13NotificationsC_So13UIWindowSceneCTg5Tu
     + _ss23AsyncCompactMapSequenceV8IteratorV4next9isolationq_SgScA_pSgYi_tYa7FailureQzYKFSo20NSNotificationCenterC10FoundationE13NotificationsC_So13UIWindowSceneCTg5Tu;
  id v5 = (void *)swift_task_alloc();
  v0[36] = v5;
  *id v5 = v0;
  v5[1] = closure #2 in SyncedLyricsViewController.viewDidLoad();
  return ((uint64_t (*)(uint64_t, void *, void *))v7)(v4, &protocol witness table for MainActor, v0 + 13);
}

uint64_t closure #2 in SyncedLyricsViewController.viewDidLoad()(uint64_t a1)
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 296) = a1;
  swift_task_dealloc();
  swift_release();
  uint64_t v3 = *(void *)(v2 + 264);
  uint64_t v4 = *(void *)(v2 + 256);
  return _swift_task_switch(closure #2 in SyncedLyricsViewController.viewDidLoad(), v4, v3);
}

void closure #2 in SyncedLyricsViewController.viewDidLoad()()
{
  uint64_t v1 = (void *)v0[37];
  if (v1)
  {
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (!Strong) {
      goto LABEL_11;
    }
    uint64_t v3 = Strong;
    id v4 = [Strong view];

    if (!v4)
    {

      __break(1u);
      return;
    }
    id v5 = [v4 window];

    id v6 = [v5 windowScene];
    if (v6)
    {
      id v7 = v1;
      char v8 = static NSObject.== infix(_:_:)();

      if (v8)
      {
        if (one-time initialization token for lyrics != -1) {
          swift_once();
        }
        uint64_t v9 = type metadata accessor for Logger();
        __swift_project_value_buffer(v9, (uint64_t)static Logger.lyrics);
        uint64_t v10 = Logger.logObject.getter();
        os_log_type_t v11 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v10, v11))
        {
          double v12 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)double v12 = 0;
          swift_slowDealloc();
        }
        uint64_t v13 = v0[22];
        uint64_t v14 = v0[19];
        uint64_t v23 = v0[21];
        uint64_t v24 = v0[20];
        uint64_t v16 = v0[17];
        uint64_t v15 = v0[18];
        uint64_t v17 = v0[16];

        type metadata accessor for UIMenu(0, (unint64_t *)&_sSo17OS_dispatch_queueCML_1);
        id v22 = (void *)static OS_dispatch_queue.main.getter();
        v0[6] = partial apply for closure #2 in closure #2 in SyncedLyricsViewController.viewDidLoad();
        v0[7] = v17;
        v0[2] = _NSConcreteStackBlock;
        v0[3] = 1107296256;
        v0[4] = thunk for @escaping @callee_guaranteed @Sendable () -> ();
        v0[5] = &block_descriptor_234;
        uint64_t v18 = _Block_copy(v0 + 2);
        swift_retain();
        static DispatchQoS.unspecified.getter();
        v0[14] = _swiftEmptyArrayStorage;
        lazy protocol witness table accessor for type SyncedLyricsLineView and conformance NSObject((unint64_t *)&_s8Dispatch0A13WorkItemFlagsVACs10SetAlgebraAAWL_1, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        __swift_instantiateConcreteTypeFromMangledName(&_sSay8Dispatch0A13WorkItemFlagsVGMD_1);
        lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A]((unint64_t *)&_sSay8Dispatch0A13WorkItemFlagsVGSayxGSTsWL_1, &_sSay8Dispatch0A13WorkItemFlagsVGMD_1);
        dispatch thunk of SetAlgebra.init<A>(_:)();
        OS_dispatch_queue.async(group:qos:flags:execute:)();
        _Block_release(v18);

        (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
        (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v13, v24);
        swift_release();
      }
      else
      {
      }
    }
    else
    {
LABEL_11:
    }
    uint64_t v20 = static MainActor.shared.getter();
    v0[35] = v20;
    id v25 = (void (*)(uint64_t, uint64_t))((char *)&_ss23AsyncCompactMapSequenceV8IteratorV4next9isolationq_SgScA_pSgYi_tYa7FailureQzYKFSo20NSNotificationCenterC10FoundationE13NotificationsC_So13UIWindowSceneCTg5Tu
                                                + _ss23AsyncCompactMapSequenceV8IteratorV4next9isolationq_SgScA_pSgYi_tYa7FailureQzYKFSo20NSNotificationCenterC10FoundationE13NotificationsC_So13UIWindowSceneCTg5Tu);
    uint64_t v21 = (void *)swift_task_alloc();
    v0[36] = v21;
    *uint64_t v21 = v0;
    v21[1] = closure #2 in SyncedLyricsViewController.viewDidLoad();
    v25(v20, (uint64_t)&protocol witness table for MainActor);
  }
  else
  {
    (*(void (**)(void, void))(v0[28] + 8))(v0[29], v0[27]);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v19 = (void (*)(void))v0[1];
    v19();
  }
}

uint64_t closure #1 in closure #2 in SyncedLyricsViewController.viewDidLoad()(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = a2;
  return _swift_task_switch(closure #1 in closure #2 in SyncedLyricsViewController.viewDidLoad(), 0, 0);
}

uint64_t closure #1 in closure #2 in SyncedLyricsViewController.viewDidLoad()()
{
  Notification.object.getter();
  uint64_t v1 = (void *)v0[6];
  if (v0[5])
  {
    type metadata accessor for UIMenu(0, &lazy cache variable for type metadata for UIWindowScene);
    if ((swift_dynamicCast() & 1) == 0) {
      *(void *)v0[6] = 0;
    }
  }
  else
  {
    outlined destroy of TaskPriority?((uint64_t)(v0 + 2), &_sypSgMD_2);
    void *v1 = 0;
  }
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t _ss23AsyncCompactMapSequenceV8IteratorV4next9isolationq_SgScA_pSgYi_tYa7FailureQzYKFSo20NSNotificationCenterC10FoundationE13NotificationsC_So13UIWindowSceneCTg5(uint64_t a1, uint64_t a2)
{
  v3[8] = a2;
  v3[9] = v2;
  v3[7] = a1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncCompactMapSequence<NSNotificationCenter.Notifications, UIWindowScene>.Iterator);
  v3[10] = v5;
  v3[11] = *(void *)(v5 - 8);
  v3[12] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Notification?);
  v3[13] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for Notification();
  v3[14] = v6;
  v3[15] = *(void *)(v6 - 8);
  v3[16] = swift_task_alloc();
  if (a1)
  {
    swift_getObjectType();
    uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v9 = v8;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v9 = 0;
  }
  v3[17] = v7;
  v3[18] = v9;
  return _swift_task_switch(_ss23AsyncCompactMapSequenceV8IteratorV4next9isolationq_SgScA_pSgYi_tYa7FailureQzYKFSo20NSNotificationCenterC10FoundationE13NotificationsC_So13UIWindowSceneCTg5TY0_, v7, v9);
}

uint64_t _ss23AsyncCompactMapSequenceV8IteratorV4next9isolationq_SgScA_pSgYi_tYa7FailureQzYKFSo20NSNotificationCenterC10FoundationE13NotificationsC_So13UIWindowSceneCTg5TY0_()
{
  v0[19] = AsyncCompactMapSequence.Iterator.baseIterator.modify();
  type metadata accessor for NSNotificationCenter.Notifications.Iterator();
  lazy protocol witness table accessor for type SyncedLyricsLineView and conformance NSObject(&lazy protocol witness table cache variable for type NSNotificationCenter.Notifications.Iterator and conformance NSNotificationCenter.Notifications.Iterator, (void (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Notifications.Iterator);
  uint64_t v1 = (void *)swift_task_alloc();
  v0[20] = v1;
  void *v1 = v0;
  v1[1] = _ss23AsyncCompactMapSequenceV8IteratorV4next9isolationq_SgScA_pSgYi_tYa7FailureQzYKFSo20NSNotificationCenterC10FoundationE13NotificationsC_So13UIWindowSceneCTg5TQ1_;
  uint64_t v2 = v0[13];
  uint64_t v3 = v0[7];
  uint64_t v4 = v0[8];
  return __sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(v2, v3, v4);
}

uint64_t _ss23AsyncCompactMapSequenceV8IteratorV4next9isolationq_SgScA_pSgYi_tYa7FailureQzYKFSo20NSNotificationCenterC10FoundationE13NotificationsC_So13UIWindowSceneCTg5TQ1_()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 136);
    uint64_t v4 = *(void *)(v2 + 144);
    uint64_t v5 = _ss23AsyncCompactMapSequenceV8IteratorV4next9isolationq_SgScA_pSgYi_tYa7FailureQzYKFSo20NSNotificationCenterC10FoundationE13NotificationsC_So13UIWindowSceneCTg5TY3_;
  }
  else
  {
    (*(void (**)(void))(v2 + 152))();
    uint64_t v3 = *(void *)(v2 + 136);
    uint64_t v4 = *(void *)(v2 + 144);
    uint64_t v5 = _ss23AsyncCompactMapSequenceV8IteratorV4next9isolationq_SgScA_pSgYi_tYa7FailureQzYKFSo20NSNotificationCenterC10FoundationE13NotificationsC_So13UIWindowSceneCTg5TY2_;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t _ss23AsyncCompactMapSequenceV8IteratorV4next9isolationq_SgScA_pSgYi_tYa7FailureQzYKFSo20NSNotificationCenterC10FoundationE13NotificationsC_So13UIWindowSceneCTg5TY2_()
{
  uint64_t v1 = v0[14];
  uint64_t v2 = v0[15];
  uint64_t v3 = v0[13];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    outlined destroy of TaskPriority?(v3, &demangling cache variable for type metadata for Notification?);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4(0);
  }
  else
  {
    uint64_t v7 = v0[11];
    uint64_t v6 = v0[12];
    uint64_t v9 = v0[9];
    uint64_t v8 = v0[10];
    (*(void (**)(void, uint64_t, uint64_t))(v2 + 32))(v0[16], v3, v1);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v6, v9, v8);
    uint64_t v10 = (int *)AsyncCompactMapSequence.Iterator.transform.getter();
    v0[21] = v11;
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    uint64_t v14 = (int *)((char *)v10 + *v10);
    double v12 = (void *)swift_task_alloc();
    v0[22] = v12;
    *double v12 = v0;
    v12[1] = _ss23AsyncCompactMapSequenceV8IteratorV4next9isolationq_SgScA_pSgYi_tYa7FailureQzYKFSo20NSNotificationCenterC10FoundationE13NotificationsC_So13UIWindowSceneCTg5TQ4_;
    uint64_t v13 = v0[16];
    return ((uint64_t (*)(void *, uint64_t))v14)(v0 + 6, v13);
  }
}

uint64_t _ss23AsyncCompactMapSequenceV8IteratorV4next9isolationq_SgScA_pSgYi_tYa7FailureQzYKFSo20NSNotificationCenterC10FoundationE13NotificationsC_So13UIWindowSceneCTg5TY3_()
{
  (*(void (**)(void))(v0 + 152))();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t _ss23AsyncCompactMapSequenceV8IteratorV4next9isolationq_SgScA_pSgYi_tYa7FailureQzYKFSo20NSNotificationCenterC10FoundationE13NotificationsC_So13UIWindowSceneCTg5TQ4_()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 128);
  uint64_t v3 = *(void *)(*v0 + 120);
  uint64_t v4 = *(void *)(*v0 + 112);
  swift_task_dealloc();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  uint64_t v5 = *(void *)(v1 + 144);
  uint64_t v6 = *(void *)(v1 + 136);
  return _swift_task_switch(_ss23AsyncCompactMapSequenceV8IteratorV4next9isolationq_SgScA_pSgYi_tYa7FailureQzYKFSo20NSNotificationCenterC10FoundationE13NotificationsC_So13UIWindowSceneCTg5TY5_, v6, v5);
}

uint64_t _ss23AsyncCompactMapSequenceV8IteratorV4next9isolationq_SgScA_pSgYi_tYa7FailureQzYKFSo20NSNotificationCenterC10FoundationE13NotificationsC_So13UIWindowSceneCTg5TY5_()
{
  uint64_t v1 = v0[6];
  if (v1)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v2 = (uint64_t (*)(uint64_t))v0[1];
    return v2(v1);
  }
  else
  {
    v0[19] = AsyncCompactMapSequence.Iterator.baseIterator.modify();
    type metadata accessor for NSNotificationCenter.Notifications.Iterator();
    lazy protocol witness table accessor for type SyncedLyricsLineView and conformance NSObject(&lazy protocol witness table cache variable for type NSNotificationCenter.Notifications.Iterator and conformance NSNotificationCenter.Notifications.Iterator, (void (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Notifications.Iterator);
    uint64_t v4 = (void *)swift_task_alloc();
    v0[20] = v4;
    *uint64_t v4 = v0;
    v4[1] = _ss23AsyncCompactMapSequenceV8IteratorV4next9isolationq_SgScA_pSgYi_tYa7FailureQzYKFSo20NSNotificationCenterC10FoundationE13NotificationsC_So13UIWindowSceneCTg5TQ1_;
    uint64_t v5 = v0[13];
    uint64_t v6 = v0[7];
    uint64_t v7 = v0[8];
    return __sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(v5, v6, v7);
  }
}

void closure #2 in closure #2 in SyncedLyricsViewController.viewDidLoad()()
{
  swift_beginAccess();
  uint64_t Strong = (unsigned char *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    Strong[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isBackgrounded] = 1;
  }
  swift_beginAccess();
  uint64_t v1 = swift_unknownObjectWeakLoadStrong();
  if (v1)
  {
    uint64_t v2 = (void *)v1;
    uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_displayLink);
    id v4 = v3;

    if (v3)
    {
      [v4 setPaused:1];
    }
  }
}

uint64_t closure #3 in SyncedLyricsViewController.viewDidLoad()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[15] = a4;
  v5[16] = a5;
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  v5[17] = v6;
  v5[18] = *(void *)(v6 - 8);
  v5[19] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for DispatchQoS();
  v5[20] = v7;
  v5[21] = *(void *)(v7 - 8);
  v5[22] = swift_task_alloc();
  type metadata accessor for NSNotificationCenter.Notifications.Iterator();
  v5[23] = swift_task_alloc();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncCompactMapSequence<NSNotificationCenter.Notifications, UIWindowScene>);
  v5[24] = v8;
  v5[25] = *(void *)(v8 - 8);
  v5[26] = swift_task_alloc();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AsyncCompactMapSequence<NSNotificationCenter.Notifications, UIWindowScene>.Iterator);
  v5[27] = v9;
  v5[28] = *(void *)(v9 - 8);
  v5[29] = swift_task_alloc();
  v5[30] = type metadata accessor for MainActor();
  v5[31] = static MainActor.shared.getter();
  uint64_t v11 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[32] = v11;
  v5[33] = v10;
  return _swift_task_switch(closure #3 in SyncedLyricsViewController.viewDidLoad(), v11, v10);
}

uint64_t closure #3 in SyncedLyricsViewController.viewDidLoad()()
{
  uint64_t v1 = v0[25];
  uint64_t v2 = v0[26];
  uint64_t v3 = v0[24];
  v0[11] = v0[15];
  type metadata accessor for NSNotificationCenter.Notifications();
  v0[34] = type metadata accessor for UIMenu(0, &lazy cache variable for type metadata for UIWindowScene);
  lazy protocol witness table accessor for type SyncedLyricsLineView and conformance NSObject(&lazy protocol witness table cache variable for type NSNotificationCenter.Notifications and conformance NSNotificationCenter.Notifications, (void (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Notifications);
  swift_retain();
  AsyncCompactMapSequence.init(_:transform:)();
  AsyncCompactMapSequence.base.getter();
  dispatch thunk of AsyncSequence.makeAsyncIterator()();
  AsyncCompactMapSequence.transform.getter();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v2, v3);
  AsyncCompactMapSequence.Iterator.init(_:transform:)();
  swift_beginAccess();
  uint64_t v4 = static MainActor.shared.getter();
  v0[35] = v4;
  uint64_t v7 = (char *)&_ss23AsyncCompactMapSequenceV8IteratorV4next9isolationq_SgScA_pSgYi_tYa7FailureQzYKFSo20NSNotificationCenterC10FoundationE13NotificationsC_So13UIWindowSceneCTg5Tu
     + _ss23AsyncCompactMapSequenceV8IteratorV4next9isolationq_SgScA_pSgYi_tYa7FailureQzYKFSo20NSNotificationCenterC10FoundationE13NotificationsC_So13UIWindowSceneCTg5Tu;
  uint64_t v5 = (void *)swift_task_alloc();
  v0[36] = v5;
  *uint64_t v5 = v0;
  v5[1] = closure #3 in SyncedLyricsViewController.viewDidLoad();
  return ((uint64_t (*)(uint64_t, void *, void *))v7)(v4, &protocol witness table for MainActor, v0 + 13);
}

uint64_t closure #3 in SyncedLyricsViewController.viewDidLoad()(uint64_t a1)
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 296) = a1;
  swift_task_dealloc();
  swift_release();
  uint64_t v3 = *(void *)(v2 + 264);
  uint64_t v4 = *(void *)(v2 + 256);
  return _swift_task_switch(closure #3 in SyncedLyricsViewController.viewDidLoad(), v4, v3);
}

void closure #3 in SyncedLyricsViewController.viewDidLoad()()
{
  uint64_t v1 = (void *)v0[37];
  if (v1)
  {
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (!Strong) {
      goto LABEL_7;
    }
    uint64_t v3 = Strong;
    id v4 = [Strong view];

    if (!v4)
    {

      __break(1u);
      return;
    }
    id v5 = [v4 window];

    id v6 = [v5 windowScene];
    if (v6)
    {
      id v7 = v1;
      char v8 = static NSObject.== infix(_:_:)();

      if (v8)
      {
        uint64_t v9 = v0[22];
        uint64_t v19 = v0[21];
        uint64_t v10 = v0[19];
        uint64_t v20 = v0[20];
        uint64_t v11 = v0[17];
        uint64_t v12 = v0[18];
        uint64_t v13 = v0[16];
        type metadata accessor for UIMenu(0, (unint64_t *)&_sSo17OS_dispatch_queueCML_1);
        uint64_t v18 = (void *)static OS_dispatch_queue.main.getter();
        v0[6] = partial apply for closure #2 in closure #3 in SyncedLyricsViewController.viewDidLoad();
        v0[7] = v13;
        v0[2] = _NSConcreteStackBlock;
        v0[3] = 1107296256;
        v0[4] = thunk for @escaping @callee_guaranteed @Sendable () -> ();
        v0[5] = &block_descriptor_222;
        uint64_t v14 = _Block_copy(v0 + 2);
        swift_retain();
        static DispatchQoS.unspecified.getter();
        v0[14] = _swiftEmptyArrayStorage;
        lazy protocol witness table accessor for type SyncedLyricsLineView and conformance NSObject((unint64_t *)&_s8Dispatch0A13WorkItemFlagsVACs10SetAlgebraAAWL_1, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        __swift_instantiateConcreteTypeFromMangledName(&_sSay8Dispatch0A13WorkItemFlagsVGMD_1);
        lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A]((unint64_t *)&_sSay8Dispatch0A13WorkItemFlagsVGSayxGSTsWL_1, &_sSay8Dispatch0A13WorkItemFlagsVGMD_1);
        dispatch thunk of SetAlgebra.init<A>(_:)();
        OS_dispatch_queue.async(group:qos:flags:execute:)();
        _Block_release(v14);

        (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
        (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v9, v20);
        swift_release();
      }
      else
      {
      }
    }
    else
    {
LABEL_7:
    }
    uint64_t v16 = static MainActor.shared.getter();
    v0[35] = v16;
    uint64_t v21 = (void (*)(uint64_t, uint64_t))((char *)&_ss23AsyncCompactMapSequenceV8IteratorV4next9isolationq_SgScA_pSgYi_tYa7FailureQzYKFSo20NSNotificationCenterC10FoundationE13NotificationsC_So13UIWindowSceneCTg5Tu
                                                + _ss23AsyncCompactMapSequenceV8IteratorV4next9isolationq_SgScA_pSgYi_tYa7FailureQzYKFSo20NSNotificationCenterC10FoundationE13NotificationsC_So13UIWindowSceneCTg5Tu);
    uint64_t v17 = (void *)swift_task_alloc();
    v0[36] = v17;
    *uint64_t v17 = v0;
    v17[1] = closure #3 in SyncedLyricsViewController.viewDidLoad();
    v21(v16, (uint64_t)&protocol witness table for MainActor);
  }
  else
  {
    (*(void (**)(void, void))(v0[28] + 8))(v0[29], v0[27]);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v15 = (void (*)(void))v0[1];
    v15();
  }
}

uint64_t closure #1 in closure #3 in SyncedLyricsViewController.viewDidLoad()(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = a2;
  return _swift_task_switch(closure #1 in closure #3 in SyncedLyricsViewController.viewDidLoad(), 0, 0);
}

void closure #2 in closure #3 in SyncedLyricsViewController.viewDidLoad()()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    uint64_t v2 = *(void *)(Strong + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager);
    swift_retain();

    if (v2)
    {
      uint64_t v3 = swift_allocObject();
      swift_beginAccess();
      id v4 = (void *)swift_unknownObjectWeakLoadStrong();
      swift_unknownObjectWeakInit();

      swift_beginAccess();
      uint64_t v5 = *(void *)(v2 + 96);
      *(void *)(v2 + 96) = partial apply for closure #1 in closure #2 in closure #3 in SyncedLyricsViewController.viewDidLoad();
      *(void *)(v2 + 104) = v3;
      swift_retain_n();
      outlined consume of (@escaping @callee_guaranteed () -> ())?(v5);
      SyncedLyricsManager.elapsedTimeProvider.didset();
      swift_release_n();
      swift_release();
    }
  }
  swift_beginAccess();
  id v6 = (unsigned char *)swift_unknownObjectWeakLoadStrong();
  if (v6)
  {
    v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isBackgrounded] = 0;
  }
  if (one-time initialization token for lyrics != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  __swift_project_value_buffer(v7, (uint64_t)static Logger.lyrics);
  swift_retain_n();
  char v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    v22[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136315138;
    swift_beginAccess();
    uint64_t v11 = swift_unknownObjectWeakLoadStrong();
    if (v11)
    {
      uint64_t v12 = (void *)v11;
      SyncedLyricsViewController.displayLinkShouldPause()();
    }
    __swift_instantiateConcreteTypeFromMangledName(&_sSbSgMD_0);
    uint64_t v13 = String.init<A>(describing:)();
    *(void *)(v10 + 4) = _s2os32getNullTerminatedUTF8PointerImpl_21storingStringOwnersInSVSS_SpyypGSgztF_2(v13, v14, v22);
    swift_bridgeObjectRelease();
    swift_release_n();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_release_n();
  }

  swift_beginAccess();
  uint64_t v15 = swift_unknownObjectWeakLoadStrong();
  if (v15)
  {
    uint64_t v16 = (void *)v15;
    uint64_t v17 = *(void **)(v15 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_displayLink);
    id v18 = v17;

    if (v17)
    {
      swift_beginAccess();
      uint64_t v19 = swift_unknownObjectWeakLoadStrong();
      if (v19)
      {
        uint64_t v20 = (void *)v19;
        char v21 = SyncedLyricsViewController.displayLinkShouldPause()();
      }
      else
      {
        char v21 = 1;
      }
      [v18 setPaused:v21 & 1];
    }
  }
}

Swift::Void __swiftcall SyncedLyricsViewController.viewDidAppear(_:)(Swift::Bool a1)
{
  v16.receiver = v1;
  v16.super_class = (Class)type metadata accessor for SyncedLyricsViewController();
  objc_msgSendSuper2(&v16, "viewDidAppear:", a1);
  id v3 = [v1 view];
  if (v3)
  {
    id v4 = v3;
    id v5 = [v3 window];

    if (v5)
    {
      id v6 = [v5 screen];

      id v5 = [v6 displayLinkWithTarget:v1 selector:"displayLinkFired:"];
    }
    uint64_t v7 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_displayLink;
    char v8 = *(void **)&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_displayLink];
    *(void *)&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_displayLink] = v5;

    os_log_type_t v9 = *(void **)&v1[v7];
    if (v9)
    {
      id v10 = v9;
      [v10 setPaused:SyncedLyricsViewController.displayLinkShouldPause()() & 1];

      uint64_t v11 = *(void **)&v1[v7];
      if (v11)
      {
        uint64_t v12 = self;
        id v13 = v11;
        id v14 = [v12 mainRunLoop];
        [v13 addToRunLoop:v14 forMode:NSRunLoopCommonModes];

        uint64_t v15 = *(void **)&v1[v7];
        if (v15) {
          [v15 setPreferredFramesPerSecond:30];
        }
      }
    }
  }
  else
  {
    __break(1u);
  }
}

Swift::Void __swiftcall SyncedLyricsViewController.viewDidDisappear(_:)(Swift::Bool a1)
{
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for SyncedLyricsViewController();
  objc_msgSendSuper2(&v5, "viewDidDisappear:", a1);
  uint64_t v3 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_displayLink;
  [*(id *)&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_displayLink] invalidate];
  id v4 = *(void **)&v1[v3];
  *(void *)&v1[v3] = 0;
}

Swift::Void __swiftcall SyncedLyricsViewController.viewDidLayoutSubviews()()
{
  uint64_t v1 = v0;
  v35.receiver = v0;
  v35.super_class = (Class)type metadata accessor for SyncedLyricsViewController();
  objc_msgSendSuper2(&v35, "viewDidLayoutSubviews");
  id v2 = [v0 view];
  if (!v2)
  {
    __break(1u);
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    return;
  }
  uint64_t v3 = v2;
  _sSo6CGRectVMa_1(0);
  [v3 bounds];

  id v4 = &v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_previousBounds];
  if ((static ApproximatelyEquatable.!=~ infix(_:_:)() & 1) == 0) {
    return;
  }
  id v5 = [v1 view];
  if (!v5) {
    goto LABEL_14;
  }
  id v6 = v5;
  [v5 bounds];
  CGFloat v8 = v7;
  CGFloat v10 = v9;
  CGFloat v12 = v11;
  CGFloat v14 = v13;

  v36.origin.x = v8;
  v36.origin.y = v10;
  v36.size.width = v12;
  v36.size.height = v14;
  CGRectGetWidth(v36);
  CGRectGetWidth(*(CGRect *)v4);
  if (static ApproximatelyEquatable.!=~ infix(_:_:)()) {
    SyncedLyricsViewController.layoutLines()();
  }
  id v15 = [v1 view];
  if (!v15) {
    goto LABEL_15;
  }
  objc_super v16 = v15;
  [v15 bounds];
  CGFloat v18 = v17;
  CGFloat v20 = v19;
  CGFloat v22 = v21;
  CGFloat v24 = v23;

  v37.origin.x = v18;
  v37.origin.y = v20;
  v37.size.width = v22;
  v37.size.height = v24;
  CGRectGetHeight(v37);
  CGRectGetHeight(*(CGRect *)v4);
  if (static ApproximatelyEquatable.!=~ infix(_:_:)())
  {
    SyncedLyricsViewController.updateBlur(views:)(0);
    swift_beginAccess();
    lazy protocol witness table accessor for type CGFloat and conformance CGFloat();
    if (static ApproximatelyEquatable<>.==~ infix(_:_:)()) {
      SyncedLyricsViewController.updateInsets()();
    }
  }
  id v25 = [v1 view];
  if (!v25) {
    goto LABEL_16;
  }
  uint64_t v26 = v25;
  [v25 bounds];
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  uint64_t v34 = v33;

  *(void *)id v4 = v28;
  *((void *)v4 + 1) = v30;
  *((void *)v4 + 2) = v32;
  *((void *)v4 + 3) = v34;
}

Swift::Void __swiftcall SyncedLyricsViewController.viewLayoutMarginsDidChange()()
{
  v1.receiver = v0;
  v1.super_class = (Class)type metadata accessor for SyncedLyricsViewController();
  objc_msgSendSuper2(&v1, "viewLayoutMarginsDidChange");
  SyncedLyricsViewController.layoutLines()();
}

void SyncedLyricsViewController.updateProgress(for:animated:)(uint64_t a1, char a2)
{
  uint64_t v3 = *(void **)(a1 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView);
  if (v3)
  {
    type metadata accessor for SyncedLyricsLineView.SBS_TextContentView();
    uint64_t v5 = swift_dynamicCastClass();
    if (v5)
    {
      uint64_t v6 = *(void *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager);
      if (v6)
      {
        uint64_t v7 = v5;
        swift_beginAccess();
        CGFloat v8 = *(double (**)(uint64_t))(v6 + 96);
        if (v8)
        {
          id v9 = v3;
          swift_retain();
          uint64_t v10 = outlined copy of (@escaping @callee_guaranteed () -> ())?((uint64_t)v8);
          double v11 = v8(v10);
          swift_beginAccess();
          double v12 = 0.0;
          if (*(unsigned char *)(v6 + 88) == 1)
          {
            Lyrics.spatialOffset.getter();
            double v12 = v13;
          }
          outlined consume of (@escaping @callee_guaranteed () -> ())?((uint64_t)v8);
          swift_release();
          double v14 = v11 - v12;
          if (v14 != *(double *)(v7 + OBJC_IVAR___MusicSBS_TextContentView_progress))
          {
            *(double *)(v7 + OBJC_IVAR___MusicSBS_TextContentView_progress) = v14;
            id v15 = *(void **)(v7 + OBJC_IVAR___MusicSBS_TextContentView_textView);
            if (!v15)
            {
              __break(1u);
              return;
            }
            id v16 = v15;
            Swift::Bool v17 = a2 & 1;
            SyncedLyricsLineView.SBS_TextContentView.TextView.setProgress(_:animated:)(v14, v17);

            CGFloat v18 = *(void **)(v7 + OBJC_IVAR___MusicSBS_TextContentView_backgroundTextView);
            if (v18)
            {
              id v19 = v18;
              SyncedLyricsLineView.SBS_TextContentView.TextView.setProgress(_:animated:)(v14, v17);

              id v9 = v19;
            }
          }
        }
      }
    }
  }
}

Swift::Void __swiftcall SyncedLyricsViewController.presentSharing()()
{
  id v4 = v0;
  uint64_t v5 = (unint64_t *)&v0[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_selectedLineViews];
  swift_beginAccess();
  unint64_t v6 = *v5;
  if (v6 >> 62) {
    goto LABEL_18;
  }
  uint64_t v7 = *(char **)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v7) {
    goto LABEL_19;
  }
LABEL_3:
  CGFloat v8 = v7 - 1;
  if (__OFSUB__(v7, 1))
  {
    __break(1u);
    goto LABEL_33;
  }
  if ((v6 & 0xC000000000000001) != 0)
  {
LABEL_33:
    id v9 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_8;
  }
  if (((unint64_t)v8 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if ((unint64_t)v8 < *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v9 = (char *)*(id *)(v6 + 8 * (void)v8 + 32);
LABEL_8:
    uint64_t v7 = v9;
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  swift_bridgeObjectRetain();
  uint64_t v27 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v3 >= v27)
  {
LABEL_38:
    outlined init with copy of AlertPresenting(v1, (uint64_t)v43);
    if ((swift_dynamicCast() & 1) == 0) {
      goto LABEL_46;
    }
    swift_bridgeObjectRelease();
    outlined init with copy of AlertPresenting(v1, (uint64_t)v43);
    uint64_t v28 = (uint64_t)v44;
    uint64_t v29 = v45;
    __swift_project_boxed_opaque_existential_0Tm(v43, (uint64_t)v44);
    uint64_t v30 = (*(uint64_t (**)(uint64_t, uint64_t))(v29 + 16))(v28, v29);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v43);
    if (v30 < 1) {
      goto LABEL_46;
    }
    outlined init with copy of AlertPresenting(v1, (uint64_t)v43);
    uint64_t v31 = (uint64_t)v44;
    uint64_t v32 = v45;
    __swift_project_boxed_opaque_existential_0Tm(v43, (uint64_t)v44);
    uint64_t v33 = (*(uint64_t (**)(uint64_t, uint64_t))(v32 + 16))(v31, v32);
    unint64_t v6 = v33 - 1;
    if (!__OFSUB__(v33, 1))
    {
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v43);
      uint64_t v34 = (uint64_t *)&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews];
      swift_beginAccess();
      uint64_t v1 = *v34;
      if ((v1 & 0xC000000000000001) != 0)
      {
LABEL_48:
        swift_bridgeObjectRetain();
        objc_super v35 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();

        swift_bridgeObjectRelease();
        goto LABEL_45;
      }
      if ((v6 & 0x8000000000000000) == 0)
      {
        if (v6 < *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
LABEL_44:
          objc_super v35 = (char *)*(id *)(v1 + 8 * v6 + 32);

LABEL_45:
          uint64_t v7 = v35;
LABEL_46:
          [v7 setHighlighted:1];
          type metadata accessor for UIMenu(0, (unint64_t *)&_sSo17OS_dispatch_queueCML_1);
          CGRect v36 = (void *)static OS_dispatch_queue.main.getter();
          uint64_t v37 = swift_allocObject();
          *(void *)(v37 + 16) = v4;
          *(void *)(v37 + 24) = v7;
          id v38 = v4;
          id v39 = v7;
          OS_dispatch_queue.asyncAfter(_:block:)((uint64_t)partial apply for specialized closure #1 in SyncedLyricsViewController.presentSharing(), v37);

          swift_release();
          return;
        }
LABEL_53:
        __break(1u);
LABEL_54:
        swift_bridgeObjectRetain();
        uint64_t v7 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        swift_bridgeObjectRelease();
        goto LABEL_29;
      }
LABEL_52:
      __break(1u);
      goto LABEL_53;
    }
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
  while (1)
  {
    outlined init with copy of AlertPresenting(v1, (uint64_t)v43);
    uint64_t v12 = (uint64_t)v44;
    uint64_t v13 = v45;
    __swift_project_boxed_opaque_existential_0Tm(v43, (uint64_t)v44);
    uint64_t v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 16))(v12, v13);
    unint64_t v6 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
LABEL_50:
      __break(1u);
      goto LABEL_51;
    }
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v43);
    uint64_t v1 = *v2;
    if ((*v2 & 0xC000000000000001) != 0) {
      goto LABEL_48;
    }
    if ((v6 & 0x8000000000000000) != 0) {
      goto LABEL_50;
    }
    if (v6 < *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_44;
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    uint64_t v7 = (char *)_CocoaArrayWrapper.endIndex.getter();
    if (v7) {
      goto LABEL_3;
    }
LABEL_19:
    swift_bridgeObjectRelease();
    uint64_t v15 = *(void *)&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager];
    if (!v15) {
      return;
    }
    swift_beginAccess();
    id v16 = *(double (**)(uint64_t))(v15 + 96);
    if (!v16) {
      return;
    }
    swift_retain();
    uint64_t v17 = outlined copy of (@escaping @callee_guaranteed () -> ())?((uint64_t)v16);
    double v18 = v16(v17);
    swift_beginAccess();
    double v19 = 0.0;
    if (*(unsigned char *)(v15 + 88) == 1)
    {
      Lyrics.spatialOffset.getter();
      double v19 = v20;
    }
    outlined consume of (@escaping @callee_guaranteed () -> ())?((uint64_t)v16);
    swift_release();
    double v21 = &v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics];
    swift_beginAccess();
    if (!*(void *)v21)
    {
      uint64_t v42 = 0;
      long long v40 = 0u;
      long long v41 = 0u;
LABEL_31:
      outlined destroy of TaskPriority?((uint64_t)&v40, &demangling cache variable for type metadata for LyricsLine?);
      return;
    }
    swift_retain();
    Lyrics.line(before:useOriginalLines:)(0, (uint64_t)&v40, v18 - v19);
    swift_release();
    if (!*((void *)&v41 + 1)) {
      goto LABEL_31;
    }
    outlined init with take of AlertPresenting(&v40, (uint64_t)v43);
    uint64_t v22 = (uint64_t)v44;
    uint64_t v23 = v45;
    __swift_project_boxed_opaque_existential_0Tm(v43, (uint64_t)v44);
    unint64_t v24 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 16))(v22, v23);
    id v25 = &v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews];
    swift_beginAccess();
    uint64_t v26 = *(void *)v25;
    if ((*(void *)v25 & 0xC000000000000001) != 0) {
      goto LABEL_54;
    }
    if ((v24 & 0x8000000000000000) != 0) {
      break;
    }
    if (v24 >= *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_56;
    }
    uint64_t v7 = (char *)*(id *)(v26 + 8 * v24 + 32);
LABEL_29:
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v43);
LABEL_9:
    uint64_t v1 = (uint64_t)&v7[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line];
    swift_beginAccess();
    outlined init with copy of AlertPresenting(v1, (uint64_t)v43);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for LyricsLine);
    if (!swift_dynamicCast()) {
      goto LABEL_38;
    }
    outlined init with copy of AlertPresenting(v1, (uint64_t)v43);
    uint64_t v2 = v44;
    uint64_t v10 = v45;
    __swift_project_boxed_opaque_existential_0Tm(v43, (uint64_t)v44);
    uint64_t v11 = (*(uint64_t (**)(uint64_t *, uint64_t))(v10 + 16))(v2, v10);
    uint64_t v3 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_36;
    }
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v43);
    uint64_t v2 = (uint64_t *)&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews];
    swift_beginAccess();
    if ((unint64_t)*v2 >> 62) {
      goto LABEL_37;
    }
    if (v3 >= *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_38;
    }
  }
  __break(1u);
LABEL_56:
  __break(1u);
}

uint64_t SyncedLyricsViewController.startSharing(from:)(char *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = (uint64_t)&a1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line];
  swift_beginAccess();
  outlined init with copy of AlertPresenting(v4, (uint64_t)&v41);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for LyricsLine);
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    uint64_t v6 = v58;
    uint64_t v7 = v62;
    CGFloat v8 = *(void **)&a1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView];
    long long v39 = v61;
    long long v40 = v60;
    if (!v8) {
      goto LABEL_10;
    }
    long long v9 = v56;
    uint64_t v10 = v57;
    char v11 = BYTE8(v57);
    int v12 = BYTE9(v57);
    char v13 = BYTE10(v57);
    uint64_t v14 = *((void *)&v58 + 1);
    long long v15 = v59;
    [v8 copy];
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
    type metadata accessor for UIMenu(0, (unint64_t *)&_sSo6UIViewCML_0);
    if (swift_dynamicCast())
    {
      char v37 = v13;
      id v38 = (void *)v41;
      [a1 cancelTrackingWithEvent:0];
      uint64_t result = (uint64_t)[v2 view];
      if (!result)
      {
        __break(1u);
        return result;
      }
      id v16 = (void *)result;
      if (v12) {
        uint64_t v17 = 2;
      }
      else {
        uint64_t v17 = 0;
      }
      [(id)result convertRect:*(void *)&v2[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView] fromCoordinateSpace:UIView.untransformedFrame.getter()];
      uint64_t v35 = v19;
      uint64_t v36 = v18;
      uint64_t v21 = v20;
      uint64_t v23 = v22;

      unsigned __int8 v24 = [a1 isSelected];
      [a1 transform];
      long long v25 = v56;
      long long v26 = v57;
      long long v27 = v58;
      uint64_t v28 = swift_allocObject();
      *(void *)(v28 + 16) = a1;
      uint64_t v29 = swift_allocObject();
      *(void *)(v29 + 16) = a1;
      long long v41 = v9;
      *(void *)&long long v42 = v10;
      BYTE8(v42) = v11;
      BYTE9(v42) = v12;
      BYTE10(v42) = v37;
      *(void *)&long long v43 = v6;
      *((void *)&v43 + 1) = v14;
      long long v44 = v15;
      long long v45 = v40;
      long long v46 = v39;
      *(void *)&long long v47 = v7;
      *((void *)&v47 + 1) = v38;
      *(void *)&long long v48 = v17;
      *((void *)&v48 + 1) = v36;
      *(void *)&long long v49 = v35;
      *((void *)&v49 + 1) = v21;
      *(void *)&long long v50 = v23;
      BYTE8(v50) = v24;
      long long v51 = v25;
      long long v52 = v26;
      long long v53 = v27;
      *(void *)&long long v54 = partial apply for closure #1 in SyncedLyricsViewController.startSharing(from:);
      *((void *)&v54 + 1) = v28;
      *(void *)&long long v55 = partial apply for closure #2 in SyncedLyricsViewController.startSharing(from:);
      *((void *)&v55 + 1) = v29;
      long long v64 = v49;
      long long v65 = v50;
      long long v56 = v9;
      long long v57 = v42;
      long long v62 = v47;
      long long v63 = v48;
      long long v60 = v40;
      long long v61 = v39;
      long long v58 = v43;
      long long v59 = v15;
      long long v69 = v54;
      long long v70 = v55;
      long long v67 = v26;
      long long v68 = v27;
      uint64_t v30 = &v2[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_shareHandler];
      long long v66 = v25;
      swift_beginAccess();
      uint64_t v31 = *(void (**)(long long *))v30;
      if (!*(void *)v30)
      {
        uint64_t v34 = a1;
        return outlined release of SyncedLyricsSharingTransitionInfo((uint64_t)&v41);
      }
      uint64_t v32 = a1;
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      swift_retain();
      id v33 = v38;
      outlined copy of (@escaping @callee_guaranteed () -> ())?((uint64_t)v31);
      v31(&v56);

      outlined consume of (@escaping @callee_guaranteed () -> ())?((uint64_t)v31);
      outlined release of SyncedLyricsSharingTransitionInfo((uint64_t)&v41);
      swift_release();
      swift_release();
    }
    else
    {
LABEL_10:
      swift_release();
      swift_release();
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

Swift::Void __swiftcall SyncedLyricsViewController.displayLinkResumeIfNeeded()()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_displayLink);
  if (v1)
  {
    id v2 = v1;
    [v2 setPaused:SyncedLyricsViewController.displayLinkShouldPause()() & 1];
  }
}

void SyncedLyricsViewController.updateInsets()()
{
  uint64_t v1 = v0;
  id v2 = &v0[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs];
  swift_beginAccess();
  if (v2[40] < 0)
  {
    uint64_t v20 = &v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews];
    swift_beginAccess();
    uint64_t v21 = *(void *)v20;
    if (*(void *)v20 >> 62)
    {
      swift_bridgeObjectRetain();
      if (_CocoaArrayWrapper.endIndex.getter())
      {
LABEL_9:
        if ((v21 & 0xC000000000000001) != 0)
        {
          id v23 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if (!*(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_22;
          }
          id v23 = *(id *)(v21 + 32);
        }
        unsigned __int8 v24 = v23;
        swift_bridgeObjectRelease();
        uint64_t v25 = (uint64_t)v24 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line;
        swift_beginAccess();
        outlined init with copy of AlertPresenting(v25, (uint64_t)v45);

        outlined init with take of AlertPresenting(v45, (uint64_t)v46);
        uint64_t v26 = v47;
        uint64_t v27 = v48;
        __swift_project_boxed_opaque_existential_0Tm(v46, v47);
        unint64_t v28 = (*(uint64_t (**)(uint64_t, uint64_t))(v27 + 16))(v26, v27);
        uint64_t v29 = *(void *)v20;
        if ((*(void *)v20 & 0xC000000000000001) == 0)
        {
          if ((v28 & 0x8000000000000000) != 0)
          {
            __break(1u);
          }
          else if (v28 < *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            id v30 = *(id *)(v29 + 8 * v28 + 32);
LABEL_16:
            id v31 = v30;
            double v32 = UIView.untransformedFrame.getter();
            CGFloat v34 = v33;
            CGFloat v36 = v35;
            CGFloat v38 = v37;

            SyncedLyricsViewController.contentOffset(for:)(v32, v34, v36, v38);
            double v40 = v39;

            double v19 = fabs(v40);
            __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v46);
            goto LABEL_19;
          }
          __break(1u);
          goto LABEL_25;
        }
LABEL_22:
        swift_bridgeObjectRetain();
        id v30 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        swift_bridgeObjectRelease();
        goto LABEL_16;
      }
    }
    else
    {
      uint64_t v22 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v22) {
        goto LABEL_9;
      }
    }
    swift_bridgeObjectRelease();
    [*((id *)v2 + 21) _bodyLeading];
    double v19 = v41;
    goto LABEL_19;
  }
  double v3 = *((double *)v2 + 1);
  [*(id *)&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView] contentOffset];
  CGFloat v5 = v4;
  CGFloat v7 = v6;
  id v8 = [v1 view];
  if (!v8)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  long long v9 = v8;
  [v8 frame];
  CGFloat v11 = v10;

  int v12 = (CGFloat *)&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight];
  swift_beginAccess();
  CGFloat v13 = *v12;
  if (*v12 > 0.0)
  {
LABEL_6:
    v49.origin.x = v5;
    v49.origin.y = v7;
    v49.size.width = v11;
    v49.size.height = v13;
    double v17 = v3 * (CGRectGetHeight(v49) / 100.0);
    [*((id *)v2 + 21) ascender];
    double v19 = v17 - v18;
LABEL_19:
    SyncedLyricsViewController.cancelAnimations()();
    uint64_t v42 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView;
    id v43 = *(id *)&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView];
    [v43 contentInset];
    [v43 setContentInset:v19];

    id v44 = *(id *)&v1[v42];
    [v44 contentOffset];
    objc_msgSend(v44, "setContentOffset:");

    return;
  }
  id v14 = [v1 view];
  if (v14)
  {
    long long v15 = v14;
    [v14 frame];
    CGFloat v13 = v16;

    goto LABEL_6;
  }
LABEL_26:
  __break(1u);
}

uint64_t outlined init with copy of SyncedLyricsTimingProvider?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SyncedLyricsTimingProvider?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined assign with copy of SyncedLyricsTimingProvider?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SyncedLyricsTimingProvider?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for SyncedLyricsViewController()
{
  return self;
}

void SyncedLyricsViewController.layoutLines()()
{
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = isEscapingClosureAtFileLocation;
  if ((*(unsigned char *)(isEscapingClosureAtFileLocation
                 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isAnimating) & 1) != 0)
  {
    id v2 = (unint64_t *)(isEscapingClosureAtFileLocation
                            + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_currentAnimators);
    swift_beginAccess();
    unint64_t v3 = *v2;
    if (!(v3 >> 62))
    {
      uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
      id v5 = (id)isEscapingClosureAtFileLocation;
      swift_bridgeObjectRetain();
      if (v4) {
        goto LABEL_4;
      }
LABEL_13:
      swift_bridgeObjectRelease();
      swift_release();
      return;
    }
  }
  else
  {
    CGFloat v11 = self;
    unint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = isEscapingClosureAtFileLocation;
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = partial apply for closure #1 in closure #1 in SyncedLyricsViewController.layoutLines();
    *(void *)(v12 + 24) = v3;
    uint64_t v20 = partial apply for thunk for @escaping @callee_guaranteed () -> ();
    uint64_t v21 = v12;
    CGAffineTransform aBlock = _NSConcreteStackBlock;
    uint64_t v17 = 1107296256;
    double v18 = thunk for @escaping @callee_guaranteed () -> ();
    double v19 = &block_descriptor_201;
    CGFloat v13 = _Block_copy(&aBlock);
    id v14 = (id)isEscapingClosureAtFileLocation;
    swift_retain();
    swift_release();
    [v11 performWithoutAnimation:v13];
    _Block_release(v13);
    uint64_t isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0) {
      return;
    }
    __break(1u);
  }
  id v15 = (id)isEscapingClosureAtFileLocation;
  swift_bridgeObjectRetain();
  uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
  if (!v4) {
    goto LABEL_13;
  }
LABEL_4:
  unint64_t v6 = v4 - 1;
  if (__OFSUB__(v4, 1))
  {
    __break(1u);
    goto LABEL_16;
  }
  if ((v3 & 0xC000000000000001) != 0)
  {
LABEL_16:
    id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_9;
  }
  if ((v6 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v6 < *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v7 = *(id *)(v3 + 8 * v6 + 32);
LABEL_9:
    id v8 = v7;
    swift_bridgeObjectRelease();
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = partial apply for closure #1 in SyncedLyricsViewController.layoutLines();
    *(void *)(v9 + 24) = v1;
    uint64_t v20 = partial apply for closure #3 in View.actionContextMenu<A, B>(title:menu:excluding:preview:previewAction:);
    uint64_t v21 = v9;
    CGAffineTransform aBlock = _NSConcreteStackBlock;
    uint64_t v17 = 1107296256;
    double v18 = thunk for @escaping @callee_guaranteed (@unowned UIViewAnimatingPosition) -> ();
    double v19 = &block_descriptor_207;
    double v10 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    [v8 addCompletion:v10];
    swift_release();
    _Block_release(v10);

    return;
  }
  __break(1u);
}

uint64_t closure #1 in SyncedLyricsViewController.layoutLines()(void *a1)
{
  uint64_t v2 = self;
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = a1;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = closure #1 in closure #1 in SyncedLyricsViewController.layoutLines()partial apply;
  *(void *)(v4 + 24) = v3;
  v8[4] = thunk for @escaping @callee_guaranteed () -> ()partial apply;
  v8[5] = v4;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  v8[2] = thunk for @escaping @callee_guaranteed () -> ();
  _OWORD v8[3] = &block_descriptor_218;
  id v5 = _Block_copy(v8);
  id v6 = a1;
  swift_retain();
  swift_release();
  [(id)v2 performWithoutAnimation:v5];
  _Block_release(v5);
  LOBYTE(v2) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v2) {
    __break(1u);
  }
  return result;
}

void closure #1 in closure #1 in SyncedLyricsViewController.layoutLines()(uint64_t a1)
{
  id v7 = (uint64_t *)(a1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_selectedLineViews);
  swift_beginAccess();
  uint64_t v8 = *v7;
  if ((unint64_t)*v7 >> 62)
  {
    if (v8 < 0) {
      uint64_t v1 = (uint64_t *)*v7;
    }
    else {
      uint64_t v1 = (uint64_t *)(v8 & 0xFFFFFFFFFFFFFF8);
    }
    swift_bridgeObjectRetain();
    uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
    if (v9) {
      goto LABEL_3;
    }
LABEL_11:
    swift_bridgeObjectRelease();
    double v2 = 0.0;
    CGFloat v3 = 0.0;
    CGFloat v4 = 0.0;
    CGFloat v5 = 0.0;
    goto LABEL_12;
  }
  uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v9) {
    goto LABEL_11;
  }
LABEL_3:
  if ((v8 & 0xC000000000000001) != 0)
  {
    id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_39;
    }
    id v10 = *(id *)(v8 + 32);
  }
  CGFloat v11 = v10;
  swift_bridgeObjectRelease();
  uint64_t v8 = (uint64_t)v11;
  double v2 = UIView.untransformedFrame.getter();
  CGFloat v3 = v12;
  CGFloat v4 = v13;
  CGFloat v5 = v14;

LABEL_12:
  uint64_t v1 = (uint64_t *)(a1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews);
  swift_beginAccess();
  uint64_t v15 = *v1;
  if ((unint64_t)*v1 >> 62)
  {
    if (v15 < 0) {
      uint64_t v8 = *v1;
    }
    else {
      uint64_t v8 = v15 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
    if (!v16) {
      goto LABEL_24;
    }
  }
  else
  {
    uint64_t v16 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v16) {
      goto LABEL_24;
    }
  }
  if (v16 < 1)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  for (uint64_t i = 0; i != v16; ++i)
  {
    if ((v15 & 0xC000000000000001) != 0) {
      double v18 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      double v18 = (char *)*(id *)(v15 + 8 * i + 32);
    }
    double v19 = v18;
    SyncedLyricsViewController.layout(lineView:)(v18);
  }
LABEL_24:
  swift_bridgeObjectRelease();
  if (!v9) {
    return;
  }
  uint64_t v8 = *v7;
  if (!((unint64_t)*v7 >> 62))
  {
    uint64_t v20 = *(void **)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v20) {
      goto LABEL_27;
    }
LABEL_41:
    swift_bridgeObjectRelease();
    return;
  }
LABEL_40:
  swift_bridgeObjectRetain();
  uint64_t v20 = (void *)_CocoaArrayWrapper.endIndex.getter();
  if (!v20) {
    goto LABEL_41;
  }
LABEL_27:
  if ((v8 & 0xC000000000000001) != 0)
  {
    id v21 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
LABEL_45:
      swift_bridgeObjectRetain();
      id v27 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      swift_bridgeObjectRelease();
      goto LABEL_35;
    }
    id v21 = *(id *)(v8 + 32);
  }
  uint64_t v20 = v21;
  swift_bridgeObjectRelease();
  [v20 frame];
  v42.origin.x = v2;
  v42.origin.y = v3;
  v42.size.width = v4;
  v42.size.height = v5;
  if (CGRectEqualToRect(v41, v42))
  {
LABEL_36:

    return;
  }
  uint64_t v22 = (uint64_t)v20 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line;
  swift_beginAccess();
  outlined init with copy of AlertPresenting(v22, (uint64_t)v38);
  uint64_t v23 = v39;
  uint64_t v24 = v40;
  __swift_project_boxed_opaque_existential_0Tm(v38, v39);
  unint64_t v25 = (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 16))(v23, v24);
  uint64_t v26 = *v1;
  if ((*v1 & 0xC000000000000001) != 0) {
    goto LABEL_45;
  }
  if ((v25 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v25 < *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v27 = *(id *)(v26 + 8 * v25 + 32);
LABEL_35:
    id v28 = v27;
    double v29 = UIView.untransformedFrame.getter();
    CGFloat v31 = v30;
    CGFloat v33 = v32;
    CGFloat v35 = v34;

    SyncedLyricsViewController.contentOffset(for:)(v29, v31, v33, v35);
    double v37 = v36;

    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v38);
    objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView), "setContentOffset:", 0.0, v37);
    goto LABEL_36;
  }
  __break(1u);
}

void SyncedLyricsViewController.frame(for:selected:previousViewFrame:)(char *a1, unsigned __int8 a2, uint64_t a3)
{
  CGFloat v4 = v3;
  [*(id *)&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView] frame];
  double Width = CGRectGetWidth(v62);
  id v9 = [v4 view];
  if (!v9) {
    goto LABEL_41;
  }
  id v10 = v9;
  int v11 = a2;
  [v9 layoutMargins];

  UIEdgeInsets.horizontal.getter();
  double v13 = Width - v12;
  uint64_t v14 = (uint64_t)&a1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line];
  swift_beginAccess();
  outlined init with copy of AlertPresenting(v14, (uint64_t)&v60);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for LyricsLine);
  if (swift_dynamicCast())
  {
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v15 = &v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics];
    swift_beginAccess();
    if (*(void *)v15 && !*(unsigned char *)(*(void *)v15 + 96))
    {
      double v17 = 1.0;
    }
    else
    {
      uint64_t v16 = (double *)&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs];
      swift_beginAccess();
      double v17 = v16[64];
    }
  }
  else
  {
    double v17 = 1.0;
    if ((swift_dynamicCast() & 1) == 0 && swift_dynamicCast()) {
      swift_bridgeObjectRelease();
    }
  }
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v60);
  if (v11 == 2)
  {
    objc_msgSend(a1, "sizeThatFits:", v13 * v17, INFINITY);
  }
  else
  {
    uint64_t v18 = *(void *)&a1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView];
    if (v18)
    {
      uint64_t v19 = *(void *)&a1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView + 8];
      uint64_t ObjectType = swift_getObjectType();
      v57[0] = v18;
      (*(void (**)(void, uint64_t, uint64_t, double, double))(v19 + 96))(v11 & 1, ObjectType, v19, v13 * v17, INFINITY);
    }
  }
  outlined init with copy of AlertPresenting(v14, (uint64_t)v57);
  if (swift_dynamicCast())
  {
    uint64_t v21 = *(void *)&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_instrumentalBreakVisibleView];
    if (v21)
    {
      uint64_t v22 = v21 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line;
      swift_beginAccess();
      outlined init with copy of AlertPresenting(v22, (uint64_t)&v60);
      CGFloat height = v60.size.height;
      uint64_t v24 = v61;
      __swift_project_boxed_opaque_existential_0Tm(&v60, *(uint64_t *)&v60.size.height);
      uint64_t v25 = (*(uint64_t (**)(CGFloat, uint64_t))(v24 + 16))(COERCE_CGFLOAT(*(void *)&height), v24);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v60);
    }
    else
    {
      uint64_t v25 = 0;
    }
    outlined init with copy of AlertPresenting(v14, (uint64_t)&v60);
    CGFloat v26 = v60.size.height;
    uint64_t v27 = v61;
    __swift_project_boxed_opaque_existential_0Tm(&v60, *(uint64_t *)&v60.size.height);
    uint64_t v28 = (*(uint64_t (**)(CGFloat, uint64_t))(v27 + 16))(COERCE_CGFLOAT(*(void *)&v26), v27);
    if (v21)
    {
      uint64_t v29 = v28;
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v60);
      if (v25 == v29) {
        swift_beginAccess();
      }
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v60);
    }
  }
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v57);
  outlined init with copy of AlertPresenting(v14, (uint64_t)v57);
  uint64_t v30 = v58;
  uint64_t v31 = v59;
  __swift_project_boxed_opaque_existential_0Tm(v57, v58);
  uint64_t v32 = (*(uint64_t (**)(uint64_t, uint64_t))(v31 + 16))(v30, v31);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v57);
  if (!v32)
  {
    swift_beginAccess();
    CGRect v49 = &selRef_radio;
    goto LABEL_35;
  }
  outlined init with take of CGRect?(a3, (uint64_t)&v60);
  if ((v61 & 1) == 0)
  {
    CGFloat x = v60.origin.x;
    CGFloat y = v60.origin.y;
    CGFloat v52 = v60.size.width;
    CGFloat v53 = v60.size.height;
    double v54 = CGRectGetHeight(v60);
    v65.origin.CGFloat x = x;
    v65.origin.CGFloat y = y;
    v65.size.width = v52;
    v65.size.CGFloat height = v53;
    CGRectGetMaxY(v65);
    CGRect v49 = &selRef_radio;
    if (v54 <= 0.0) {
      goto LABEL_35;
    }
    goto LABEL_34;
  }
  outlined init with copy of AlertPresenting(v14, (uint64_t)v57);
  uint64_t v33 = v58;
  uint64_t v34 = v59;
  __swift_project_boxed_opaque_existential_0Tm(v57, v58);
  uint64_t v35 = (*(uint64_t (**)(uint64_t, uint64_t))(v34 + 16))(v33, v34);
  unint64_t v36 = v35 - 1;
  if (__OFSUB__(v35, 1))
  {
    __break(1u);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v57);
    double v37 = &v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews];
    swift_beginAccess();
    uint64_t v38 = *(void *)v37;
    if ((v38 & 0xC000000000000001) == 0)
    {
      if ((v36 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (v36 < *(void *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        id v39 = *(id *)(v38 + 8 * v36 + 32);
        goto LABEL_30;
      }
      __break(1u);
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
  }
  swift_bridgeObjectRetain();
  id v39 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  swift_bridgeObjectRelease();
LABEL_30:
  [v39 frame];
  double v40 = CGRectGetHeight(v63);
  id v41 = v39;
  double v42 = UIView.untransformedFrame.getter();
  CGFloat v44 = v43;
  CGFloat v46 = v45;
  CGFloat v48 = v47;

  v64.origin.CGFloat x = v42;
  v64.origin.CGFloat y = v44;
  v64.size.width = v46;
  v64.size.CGFloat height = v48;
  CGRectGetMaxY(v64);

  CGRect v49 = &selRef_radio;
  if (v40 <= 0.0) {
    goto LABEL_35;
  }
LABEL_34:
  swift_beginAccess();
LABEL_35:
  id v55 = [v4 v49[325]];
  if (v55)
  {
    long long v56 = v55;
    [v55 layoutMargins];

    return;
  }
LABEL_42:
  __break(1u);
}

void SyncedLyricsViewController.layout(lineView:)(char *a1)
{
  uint64_t v2 = v1;
  memset(v29, 0, sizeof(v29));
  char v30 = 1;
  SyncedLyricsViewController.frame(for:selected:previousViewFrame:)(a1, 2u, (uint64_t)v29);
  UIView.untransformedFrame.setter(v4, v5, v6, v7);
  uint64_t v8 = (uint64_t)&a1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line];
  swift_beginAccess();
  outlined init with copy of AlertPresenting(v8, (uint64_t)v26);
  uint64_t v9 = v27;
  uint64_t v10 = v28;
  __swift_project_boxed_opaque_existential_0Tm(v26, v27);
  uint64_t v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 16))(v9, v10);
  double v12 = (unint64_t *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews);
  swift_beginAccess();
  unint64_t v13 = *v12;
  if (!(v13 >> 62))
  {
    uint64_t v14 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v15 = v14 - 1;
    if (!__OFSUB__(v14, 1)) {
      goto LABEL_3;
    }
LABEL_10:
    __break(1u);
    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v25 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  uint64_t v15 = v25 - 1;
  if (__OFSUB__(v25, 1)) {
    goto LABEL_10;
  }
LABEL_3:
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v26);
  if (v11 == v15)
  {
    uint64_t v16 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView;
    id v17 = *(id *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView);
    [v17 frame];
    double Width = CGRectGetWidth(v31);
    v32.origin.CGFloat x = UIView.untransformedFrame.getter();
    objc_msgSend(v17, "setContentSize:", Width, CGRectGetMaxY(v32));

    [*(id *)(v2 + v16) frame];
    double Height = CGRectGetHeight(v33);
    [*(id *)(v2 + v16) contentInset];
    double v21 = v20;
    v34.origin.CGFloat x = UIView.untransformedFrame.getter();
    double v22 = Height - (v21 + CGRectGetHeight(v34));
    id v23 = *(id *)(v2 + v16);
    uint64_t v24 = v23;
    if (v22 <= 0.0) {
      [v23 contentInset];
    }
    [v24 contentInset];
    objc_msgSend(v24, "setContentInset:");
  }
}

void SyncedLyricsViewController.setupUI(with:)(uint64_t a1)
{
  CGFloat v3 = (char **)(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews);
  swift_beginAccess();
  if ((unint64_t)*v3 >> 62)
  {
LABEL_59:
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = *(void *)(((unint64_t)*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v5 = *(void *)(a1 + 40);
  uint64_t v6 = *(void *)(v5 + 16);
  long long v68 = v3;
  if (v6 >= v4) {
    goto LABEL_8;
  }
  if (!((unint64_t)*v3 >> 62))
  {
    uint64_t v7 = *(void *)(((unint64_t)*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v7 >= v6) {
      goto LABEL_6;
    }
LABEL_61:
    __break(1u);
LABEL_62:
    __break(1u);
    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v7 < v6) {
    goto LABEL_61;
  }
LABEL_6:
  if (v6 != v7)
  {
    if (v6 < (unint64_t)v7)
    {
      CGFloat v3 = &selRef_radio;
      unint64_t v62 = v6;
      while (1)
      {
        CGRect v63 = (char *)*v68;
        if ((*v68 & 0xC000000000000001) != 0)
        {
          swift_bridgeObjectRetain();
          id v64 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          swift_bridgeObjectRelease();
        }
        else
        {
          if ((v62 & 0x8000000000000000) != 0) {
            goto LABEL_57;
          }
          if (v62 >= *(void *)(((unint64_t)v63 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
LABEL_58:
            __break(1u);
            goto LABEL_59;
          }
          id v64 = *(id *)&v63[8 * v62 + 32];
        }
        ++v62;
        [v64 removeFromSuperview];

        if (v7 == v62) {
          goto LABEL_7;
        }
      }
    }
    goto LABEL_62;
  }
LABEL_7:
  CGFloat v3 = (char **)v68;
  swift_beginAccess();
  specialized Array.replaceSubrange<A>(_:with:)(v6, v7);
  swift_endAccess();
LABEL_8:
  uint64_t v8 = *(void **)(v70 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_instrumentalBreakVisibleView);
  *(void *)(v70 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_instrumentalBreakVisibleView) = 0;

  uint64_t v9 = *(void *)(v5 + 16);
  if (v9)
  {
    uint64_t v10 = v70 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics;
    uint64_t v11 = (void *)(v70 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs);
    uint64_t v65 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView;
    uint64_t v12 = v5 + 32;
    swift_bridgeObjectRetain();
    uint64_t v69 = v10;
    swift_beginAccess();
    __src = v11;
    swift_beginAccess();
    while (1)
    {
      outlined init with copy of AlertPresenting(v12, (uint64_t)v77);
      uint64_t v15 = v78;
      uint64_t v16 = v79;
      __swift_project_boxed_opaque_existential_0Tm(v77, v78);
      uint64_t v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 16))(v15, v16);
      uint64_t v18 = v17;
      if ((unint64_t)*v3 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v47 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v18 >= v47)
        {
LABEL_32:
          outlined init with copy of AlertPresenting((uint64_t)v77, (uint64_t)&v74);
          if (*(void *)v69)
          {
            if (*(unsigned char *)(*(void *)v69 + 96))
            {
              a1 = v9;
              uint64_t v48 = v78;
              uint64_t v49 = v79;
              __swift_project_boxed_opaque_existential_0Tm(v77, v78);
              uint64_t v50 = (*(uint64_t (**)(uint64_t, uint64_t))(v49 + 24))(v48, v49);
            }
            else
            {
              uint64_t v50 = __src[6];
              char v51 = *((unsigned char *)__src + 56);
              outlined init with copy of AlertPresenting((uint64_t)v77, (uint64_t)v71);
              if (v51)
              {
                uint64_t v52 = v72;
                uint64_t v53 = v73;
                __swift_project_boxed_opaque_existential_0Tm(v71, v72);
                double v54 = *(uint64_t (**)(uint64_t, uint64_t))(v53 + 24);
                swift_retain();
                uint64_t v50 = v54(v52, v53);
              }
              else
              {
                swift_retain();
              }
              CGFloat v3 = (char **)v68;
              a1 = v9;
              __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v71);
              swift_release();
            }
          }
          else
          {
            a1 = v9;
            uint64_t v50 = 4;
          }
          memcpy(__dst, __src, 0x219uLL);
          id v55 = objc_allocWithZone((Class)type metadata accessor for SyncedLyricsLineView());
          outlined retain of SyncedLyricsViewController.Specs((uint64_t)__dst);
          long long v56 = specialized SyncedLyricsLineView.init(line:alignment:specs:)((uint64_t)&v74, v50, __dst);
          outlined release of SyncedLyricsViewController.Specs((uint64_t)__dst);
          type metadata accessor for UIMenu(0, &_sSo8UIActionCML_1);
          uint64_t v57 = swift_allocObject();
          swift_unknownObjectWeakInit();
          uint64_t v58 = swift_allocObject();
          swift_unknownObjectWeakInit();
          uint64_t v59 = swift_allocObject();
          *(void *)(v59 + 16) = v57;
          *(void *)(v59 + 24) = v58;
          CGRect v60 = v56;
          uint64_t v61 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
          objc_msgSend(v60, "addAction:forControlEvents:", v61, 64, 0, 0, 0, partial apply for closure #1 in SyncedLyricsViewController.setupUI(with:), v59);

          [*(id *)(v70 + v65) addSubview:v60];
          swift_beginAccess();
          uint64_t v25 = v60;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)(((unint64_t)*v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)*v3 & 0xFFFFFFFFFFFFFF8)
                                                                                              + 0x18) >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
          swift_endAccess();
          uint64_t v14 = (char *)[objc_allocWithZone((Class)UILongPressGestureRecognizer) init];
          [v14 setCancelsTouchesInView:0];
          [v14 addTarget:v70 action:"shareGestureHandler:"];
          [v25 addGestureRecognizer:v14];
          SyncedLyricsViewController.layout(lineView:)(v25);

          uint64_t v9 = a1;
          goto LABEL_12;
        }
      }
      else if (v17 >= *(void *)(((unint64_t)*v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_32;
      }
      uint64_t v19 = v78;
      uint64_t v20 = v79;
      __swift_project_boxed_opaque_existential_0Tm(v77, v78);
      unint64_t v21 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 16))(v19, v20);
      double v22 = *v3;
      if (((unint64_t)*v3 & 0xC000000000000001) != 0)
      {
        swift_bridgeObjectRetain();
        id v23 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        swift_bridgeObjectRelease();
      }
      else
      {
        if ((v21 & 0x8000000000000000) != 0)
        {
          __break(1u);
LABEL_56:
          __break(1u);
LABEL_57:
          __break(1u);
          goto LABEL_58;
        }
        if (v21 >= *(void *)(((unint64_t)v22 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_56;
        }
        id v23 = (char *)*(id *)&v22[8 * v21 + 32];
      }
      outlined init with copy of AlertPresenting((uint64_t)v77, (uint64_t)&v74);
      uint64_t v24 = (uint64_t *)&v23[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line];
      swift_beginAccess();
      uint64_t v25 = v23;
      __swift_assign_boxed_opaque_existential_1(v24, (uint64_t *)&v74);
      swift_endAccess();
      SyncedLyricsLineView.updateContentView()();
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v74);
      if (*(void *)v69)
      {
        if (*(unsigned char *)(*(void *)v69 + 96))
        {
          uint64_t v26 = v78;
          uint64_t v27 = v79;
          __swift_project_boxed_opaque_existential_0Tm(v77, v78);
          uint64_t v28 = (*(uint64_t (**)(uint64_t, uint64_t))(v27 + 24))(v26, v27);
        }
        else
        {
          uint64_t v28 = __src[6];
          char v29 = *((unsigned char *)__src + 56);
          outlined init with copy of AlertPresenting((uint64_t)v77, (uint64_t)&v74);
          if (v29)
          {
            uint64_t v30 = v75;
            uint64_t v31 = v76;
            __swift_project_boxed_opaque_existential_0Tm(&v74, v75);
            a1 = v9;
            CGRect v32 = *(uint64_t (**)(uint64_t, uint64_t))(v31 + 24);
            swift_retain();
            uint64_t v33 = v32(v30, v31);
            uint64_t v9 = a1;
            uint64_t v28 = v33;
          }
          else
          {
            swift_retain();
          }
          __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v74);
          swift_release();
        }
      }
      else
      {
        uint64_t v28 = 4;
      }
      *(void *)&v25[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_alignment] = v28;
      SyncedLyricsLineView.updateContentView()();
      uint64_t v34 = *(void *)&v25[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView];
      if (v34)
      {
        uint64_t v35 = *(void *)&v25[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView + 8];
        uint64_t ObjectType = swift_getObjectType();
        *(void *)&long long v74 = v34;
        (*(void (**)(uint64_t, uint64_t))(v35 + 80))(ObjectType, v35);
      }
      uint64_t v37 = OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_isScrolling;
      v25[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_isScrolling] = 1;
      id v39 = SyncedLyricsLineView.contentView.modify((uint64_t)&v74);
      double v40 = *(void **)v38;
      if (*(void *)v38)
      {
        uint64_t v41 = v38;
        uint64_t v42 = v25[v37];
        a1 = *(void *)(v38 + 8);
        long long v66 = v39;
        uint64_t v43 = swift_getObjectType();
        v71[0] = v40;
        CGFloat v44 = *(void (**)(uint64_t, uint64_t, uint64_t))(a1 + 40);
        id v45 = v40;
        v44(v42, v43, a1);
        CGFloat v3 = (char **)v68;
        CGFloat v46 = *(void **)v41;
        *(void *)uint64_t v41 = v71[0];
        *(void *)(v41 + 8) = a1;

        v66(&v74, 0);
      }
      else
      {
        v39(&v74, 0);
      }
      v13.value.super.Class isa = 0;
      SyncedLyricsLineView.setSelected(_:animator:)(0, v13);
      SyncedLyricsViewController.layout(lineView:)(v25);
      uint64_t v14 = v25;
LABEL_12:

      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v77);
      v12 += 40;
      if (!--v9)
      {
        swift_bridgeObjectRelease();
        break;
      }
    }
  }
  SyncedLyricsViewController.updateBlur(views:)(0);
  SyncedLyricsViewController.updateInsets()();
}

void closure #1 in SyncedLyricsViewController.setupUI(with:)()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (char *)Strong;
    swift_beginAccess();
    uint64_t v2 = swift_unknownObjectWeakLoadStrong();
    if (!v2)
    {
      uint64_t v33 = v1;
LABEL_34:

      return;
    }
    CGFloat v3 = (char *)v2;
    [*(id *)&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_tapFeedbackGenerator] selectionChanged];
    uint64_t v4 = *(void **)&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_displayLink];
    if (v4) {
      [v4 setPaused:1];
    }
    v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_needsTapHandling] = 1;
    uint64_t v5 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_allowAnimateToNextLineAfterScrollTimer;
    [*(id *)&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_allowAnimateToNextLineAfterScrollTimer] invalidate];
    uint64_t v6 = *(void **)&v1[v5];
    *(void *)&v1[v5] = 0;

    v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_allowAnimateToNextLineAfterScroll] = 1;
    uint64_t v7 = (uint64_t)&v3[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line];
    swift_beginAccess();
    outlined init with copy of AlertPresenting(v7, (uint64_t)v55);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for LyricsLine);
    if ((swift_dynamicCast() & 1) == 0)
    {
LABEL_28:
      id v35 = [objc_allocWithZone((Class)MSVLyricsLine) init];
      outlined init with copy of AlertPresenting(v7, (uint64_t)__dst);
      uint64_t v37 = __dst[3];
      uint64_t v36 = __dst[4];
      __swift_project_boxed_opaque_existential_0Tm(__dst, __dst[3]);
      uint64_t v38 = *(void *)(v36 + 8);
      id v39 = *(double (**)(uint64_t, uint64_t))(v38 + 8);
      id v40 = v35;
      double v41 = v39(v37, v38);
      uint64_t v42 = *(void *)&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager];
      double v43 = 0.0;
      if (v42)
      {
        swift_beginAccess();
        if (*(unsigned char *)(v42 + 88) == 1)
        {
          swift_retain();
          Lyrics.spatialOffset.getter();
          double v43 = v44;
          swift_release();
        }
      }
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)__dst);
      [v40 setStartTime:v41 + v43];

      outlined init with copy of AlertPresenting(v7, (uint64_t)__dst);
      uint64_t v46 = __dst[3];
      uint64_t v45 = __dst[4];
      __swift_project_boxed_opaque_existential_0Tm(__dst, __dst[3]);
      uint64_t v47 = *(void *)(v45 + 8);
      uint64_t v48 = *(void (**)(uint64_t, uint64_t))(v47 + 16);
      uint64_t v33 = (char *)v40;
      v48(v46, v47);
      objc_msgSend(v33, "setEndTime:");

      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)__dst);
      uint64_t v49 = &v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_delegate];
      swift_beginAccess();
      if (swift_unknownObjectWeakLoadStrong())
      {
        uint64_t v50 = *((void *)v49 + 1);
        uint64_t ObjectType = swift_getObjectType();
        (*(void (**)(char *, char *, uint64_t, uint64_t))(v50 + 8))(v1, v33, ObjectType, v50);

        swift_unknownObjectRelease();
      }
      else
      {
      }
      goto LABEL_34;
    }
    uint64_t v8 = *(void **)&v3[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView];
    if (!v8) {
      goto LABEL_23;
    }
    type metadata accessor for SyncedLyricsLineView.SBS_TextContentView();
    uint64_t v9 = swift_dynamicCastClass();
    if (!v9) {
      goto LABEL_23;
    }
    uint64_t v10 = *(void *)(v9 + OBJC_IVAR___MusicSBS_TextContentView_textView);
    if (!v10) {
      goto LABEL_37;
    }
    uint64_t v11 = *(void *)(v10
                    + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_frameVisualRepresentation);
    if (!v11)
    {
LABEL_23:
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      goto LABEL_28;
    }
    uint64_t v52 = v7;
    uint64_t v53 = v3;
    unint64_t v12 = *(void *)(v11 + 24);
    if (v12 >> 62)
    {
      id v34 = v8;
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
      if (v13) {
        goto LABEL_12;
      }
    }
    else
    {
      uint64_t v13 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
      id v14 = v8;
      swift_retain();
      swift_bridgeObjectRetain();
      if (v13)
      {
LABEL_12:
        type metadata accessor for UIMenu(0, (unint64_t *)&_sSo17OS_dispatch_queueCML_1);
        uint64_t v15 = v13 - 1;
        if (v13 >= 1)
        {
          uint64_t v16 = &v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs];
          swift_beginAccess();
          uint64_t v17 = 0;
          if ((v12 & 0xC000000000000001) == 0) {
            goto LABEL_15;
          }
LABEL_14:
          uint64_t v18 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          while (1)
          {
            memcpy(__dst, v16, 0x219uLL);
            *(unsigned char *)(v18 + 80) = 1;
            outlined retain of SyncedLyricsViewController.Specs((uint64_t)__dst);
            uint64_t v19 = (void *)static OS_dispatch_queue.main.getter();
            uint64_t v20 = swift_allocObject();
            swift_weakInit();
            swift_retain();
            OS_dispatch_queue.asyncAfter(_:block:)((uint64_t)partial apply for closure #1 in SyncedLyricsLineView.Line.resetGradient(specs:direction:), v20);

            swift_release_n();
            uint64_t v21 = *(void *)(v18 + 72);
            if (v21)
            {
              double v22 = *(void **)(v21 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView4Line8LineView_gradientView);
              if (v22)
              {
                id v23 = (void *)__dst[21];
                id v24 = v22;
                [v23 lineHeight];
                double v26 = v25 * *(double *)&__dst[28] + *(double *)&__dst[44] + *(double *)&__dst[44];
                CGFloat v27 = *(double *)(v18 + 40);
                CGFloat v28 = *(double *)(v18 + 48);
                CGFloat v29 = *(double *)(v18 + 56);
                CGFloat v30 = *(double *)(v18 + 64);
                v56.origin.CGFloat x = v27;
                v56.origin.CGFloat y = v28;
                v56.size.width = v29;
                v56.size.CGFloat height = v30;
                double v31 = (v26 - CGRectGetHeight(v56)) * 0.5;
                id v32 = v24;
                v57.origin.CGFloat x = v27;
                v57.origin.CGFloat y = v28;
                v57.size.width = v29;
                v57.size.CGFloat height = v30;
                objc_msgSend(v32, "setFrame:", -v31, -v31, v31, CGRectGetHeight(v57) + v31 + v31);
              }
            }
            outlined release of SyncedLyricsViewController.Specs((uint64_t)__dst);
            swift_release();
            if (v15 == v17) {
              break;
            }
            ++v17;
            if ((v12 & 0xC000000000000001) != 0) {
              goto LABEL_14;
            }
LABEL_15:
            uint64_t v18 = *(void *)(v12 + 8 * v17 + 32);
            swift_retain();
          }
          swift_release();
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_27;
        }
        __break(1u);
LABEL_37:
        __break(1u);
        return;
      }
    }
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_27:

    swift_release();
    uint64_t v7 = v52;
    CGFloat v3 = v53;
    goto LABEL_28;
  }
}

Swift::Void __swiftcall SyncedLyricsViewController.enterTrackingMode()()
{
  uint64_t v1 = (unsigned char *)(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode);
  swift_beginAccess();
  if (*v1 != 2)
  {
    SyncedLyricsViewController.removeAllBlurs()();
    unsigned char *v1 = 2;
  }
}

Swift::Void __swiftcall SyncedLyricsViewController.leaveTrackingMode()()
{
  uint64_t v1 = (unsigned char *)(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode);
  swift_beginAccess();
  if (*v1 == 2)
  {
    SyncedLyricsViewController.updateBlur(views:)(0);
    unsigned char *v1 = 0;
  }
}

uint64_t SyncedLyricsViewController.displayLinkShouldPause()()
{
  uint64_t v1 = v0;
  uint64_t v2 = (void *)(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics);
  swift_beginAccess();
  if (!*v2 || (*(unsigned char *)(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isBackgrounded) & 1) != 0) {
    return 1;
  }
  uint64_t v4 = v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_timingProvider;
  swift_beginAccess();
  outlined init with copy of SyncedLyricsTimingProvider?(v4, (uint64_t)&v9);
  if (v10)
  {
    outlined init with take of AlertPresenting(&v9, (uint64_t)v11);
    uint64_t v5 = v12;
    uint64_t v6 = v13;
    __swift_project_boxed_opaque_existential_0Tm(v11, v12);
    if ((*(uint64_t (**)(uint64_t, uint64_t))(v6 + 16))(v5, v6))
    {
      BOOL v3 = 1;
    }
    else
    {
      uint64_t v7 = (unsigned __int8 *)(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode);
      swift_beginAccess();
      BOOL v3 = *v7 == 2;
    }
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v11);
  }
  else
  {
    outlined destroy of TaskPriority?((uint64_t)&v9, &demangling cache variable for type metadata for SyncedLyricsTimingProvider?);
    return 1;
  }
  return v3;
}

void *SyncedLyricsViewController.visibleLineViews.getter()
{
  [*(id *)&v0[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView] contentOffset];
  uint64_t result = [v0 view];
  if (result)
  {
    uint64_t v2 = result;
    [result frame];

    BOOL v3 = (double *)&v0[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight];
    swift_beginAccess();
    if (*v3 > 0.0)
    {
LABEL_5:
      __chkstk_darwin();
      swift_beginAccess();
      __chkstk_darwin();
      unint64_t v5 = swift_bridgeObjectRetain();
      uint64_t v6 = _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSay11MusicCoreUI20SyncedLyricsLineViewCG_AH04lineJ0_Sb7visiblets5NeverOTg504_s11de4UI20ghij36CACSbIggod_A2C04lineG0_Sb7visiblets5M11OIegnrzr_TRA2HSbIggod_Tf1cn_nTf4ng_n(v5, (uint64_t (*)(void))partial apply for closure #1 in SyncedLyricsViewController.lineViews(visibilityBlock:));
      swift_bridgeObjectRelease();
      uint64_t v7 = specialized _ArrayProtocol.filter(_:)((uint64_t)v6);
      swift_bridgeObjectRelease();
      uint64_t v8 = _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSay11MusicCoreUI20SyncedLyricsLineViewC04lineJ0_Sb7visibletG_AHs5NeverOTg504_s11de4UI26ghj20ControllerC16visiblei51Views33_A841AA9F341C08F0B5A14F1EE881C0E2LLSayAA0deiw13CGvgA2G04lineW70_Sb0H0t_tcfu0_33_7226b86683bdb161da88e3d7cca0a50dAgI_SbAJtAGTf3nnnpk_nTf1cn_n(v7);
      swift_bridgeObjectRelease();
      return v8;
    }
    uint64_t result = [v0 view];
    if (result)
    {
      uint64_t v4 = result;
      [result frame];

      goto LABEL_5;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t SyncedLyricsViewController.lineViews(in:startingAt:)(void *a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  uint64_t v6 = v5;
  uint64_t v11 = a1[3];
  uint64_t v12 = a1[4];
  __swift_project_boxed_opaque_existential_0Tm(a1, v11);
  id v34 = *(uint64_t (**)(uint64_t, uint64_t))(v12 + 16);
  uint64_t v13 = v34(v11, v12);
  id v14 = (uint64_t *)(v6 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews);
  swift_beginAccess();
  int v15 = 0;
  BOOL v16 = v13 == 0;
  if (v13 <= 0) {
    goto LABEL_3;
  }
LABEL_2:
  for (uint64_t i = v13 - 1; ; uint64_t i = 0)
  {
    uint64_t v19 = *v14;
    if ((*v14 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      id v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      if ((unint64_t)v13 >= *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        goto LABEL_41;
      }
      id v20 = *(id *)(v19 + 8 * v13 + 32);
    }
    [v20 frame];
    v37.origin.CGFloat x = a2;
    v37.origin.CGFloat y = a3;
    v37.size.width = a4;
    v37.size.CGFloat height = a5;
    if (!CGRectIntersectsRect(v35, v37)) {
      break;
    }
    id v21 = v20;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();

    uint64_t v13 = i;
    BOOL v16 = i == 0;
    if (i > 0) {
      goto LABEL_2;
    }
LABEL_3:
    int v18 = !v16;
    if ((v18 | v15)) {
      goto LABEL_18;
    }
    int v15 = 1;
  }

LABEL_18:
  uint64_t result = v34(v11, v12);
  uint64_t v13 = result + 1;
  if (__OFADD__(result, 1)) {
    goto LABEL_43;
  }
  if ((unint64_t)*v14 >> 62) {
    goto LABEL_44;
  }
  uint64_t v23 = *(void *)((*v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v24 = v23 - 1;
  if (__OFSUB__(v23, 1)) {
    goto LABEL_46;
  }
  while (2)
  {
    int v25 = 0;
    BOOL v26 = v13 == v24;
    if (v13 < v24)
    {
LABEL_22:
      uint64_t v27 = v13 + 1;
      goto LABEL_28;
    }
    while (1)
    {
      int v28 = !v26;
      if ((v28 | v25)) {
        goto LABEL_39;
      }
      int v25 = 1;
      uint64_t v27 = v24;
LABEL_28:
      uint64_t v29 = *v14;
      if ((*v14 & 0xC000000000000001) != 0)
      {
        swift_bridgeObjectRetain();
        id v30 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        swift_bridgeObjectRelease();
        goto LABEL_32;
      }
      if (v13 < 0) {
        break;
      }
      if ((unint64_t)v13 >= *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_42;
      }
      id v30 = *(id *)(v29 + 8 * v13 + 32);
LABEL_32:
      [v30 frame];
      v38.origin.CGFloat x = a2;
      v38.origin.CGFloat y = a3;
      v38.size.width = a4;
      v38.size.CGFloat height = a5;
      if (!CGRectIntersectsRect(v36, v38))
      {

LABEL_39:
        swift_getKeyPath();
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [SyncedLyricsLineView]);
        lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A](&lazy protocol witness table cache variable for type [SyncedLyricsLineView] and conformance [A], &demangling cache variable for type metadata for [SyncedLyricsLineView]);
        uint64_t v32 = Sequence.sorted<A>(by:comparator:)();
        swift_release();
        swift_bridgeObjectRelease();
        return v32;
      }
      id v31 = v30;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();

      uint64_t v13 = v27;
      BOOL v26 = v27 == v24;
      if (v27 < v24) {
        goto LABEL_22;
      }
    }
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
LABEL_44:
    swift_bridgeObjectRetain();
    uint64_t v33 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v24 = v33 - 1;
    if (!__OFSUB__(v33, 1)) {
      continue;
    }
    break;
  }
LABEL_46:
  __break(1u);
  return result;
}

uint64_t key path setter for SyncedLyricsLineView.line : SyncedLyricsLineView(uint64_t a1, void *a2)
{
  outlined init with copy of AlertPresenting(a1, (uint64_t)v5);
  BOOL v3 = (uint64_t *)(*a2 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line);
  swift_beginAccess();
  __swift_assign_boxed_opaque_existential_1(v3, v5);
  swift_endAccess();
  SyncedLyricsLineView.updateContentView()();
  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v5);
}

double SyncedLyricsViewController.contentOffset(for:)(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  uint64_t v9 = v4 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs;
  swift_beginAccess();
  int v10 = *(char *)(v9 + 40);
  if (v10 < 0)
  {
    CGFloat v11 = *(double *)(v9 + 8);
    CGFloat v12 = *(double *)(v9 + 16);
    char v13 = *(unsigned char *)(v9 + 40);
    CGFloat v15 = *(double *)(v9 + 24);
    CGFloat v14 = *(double *)(v9 + 32);
    if (v10)
    {
      [*(id *)(v4 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView) frame];
    }
    else
    {
      CGFloat v16 = v11;
      CGFloat v17 = v12;
      CGFloat v18 = v15;
      CGFloat v19 = v14;
    }
    CGRectGetHeight(*(CGRect *)&v16);
    v22.origin.CGFloat x = a1;
    v22.origin.CGFloat y = a2;
    v22.size.width = a3;
    v22.size.CGFloat height = a4;
    CGRectGetHeight(v22);
    v23.origin.CGFloat x = a1;
    v23.origin.CGFloat y = a2;
    v23.size.width = a3;
    v23.size.CGFloat height = a4;
    CGRectGetMinY(v23);
    if ((v13 & 1) == 0)
    {
      v24.origin.CGFloat x = v11;
      v24.origin.CGFloat y = v12;
      v24.size.width = v15;
      v24.size.CGFloat height = v14;
      CGRectGetMinY(v24);
    }
  }
  else
  {
    v21.origin.CGFloat x = a1;
    v21.origin.CGFloat y = a2;
    v21.size.width = a3;
    v21.size.CGFloat height = a4;
    CGRectGetMinY(v21);
    [*(id *)(v4 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView) contentInset];
  }
  return 0.0;
}

void SyncedLyricsViewController.select(line:animator:deselectAll:fadeInInstrumentalView:)(void *a1, objc_class *a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v9 = a1[3];
  uint64_t v10 = a1[4];
  __swift_project_boxed_opaque_existential_0Tm(a1, v9);
  unint64_t v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 16))(v9, v10);
  CGFloat v12 = (uint64_t *)(v5 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews);
  swift_beginAccess();
  uint64_t v13 = *v12;
  if ((*v12 & 0xC000000000000001) == 0)
  {
    if ((v11 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v11 < *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      CGFloat v12 = (uint64_t *)*(id *)(v13 + 8 * v11 + 32);
      if ((a3 & 1) == 0) {
        goto LABEL_21;
      }
LABEL_5:
      char v33 = a4;
      a3 = (uint64_t *)(v5 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_selectedLineViews);
      swift_beginAccess();
      a4 = *a3;
      uint64_t v34 = v5;
      if (!((unint64_t)*a3 >> 62))
      {
        uint64_t v15 = *(void *)((a4 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v15)
        {
LABEL_7:
          type metadata accessor for SyncedLyricsLineView();
          if (v15 < 1)
          {
            __break(1u);
            return;
          }
          for (uint64_t i = 0; i != v15; ++i)
          {
            if ((a4 & 0xC000000000000001) != 0) {
              id v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              id v17 = *(id *)(a4 + 8 * i + 32);
            }
            CGFloat v18 = v17;
            if ((static NSObject.== infix(_:_:)() & 1) == 0)
            {
              v19.value.super.Class isa = a2;
              SyncedLyricsLineView.setSelected(_:animator:)(0, v19);
            }
          }
        }
LABEL_20:
        swift_bridgeObjectRelease();
        *a3 = (uint64_t)_swiftEmptyArrayStorage;
        swift_bridgeObjectRelease();
        uint64_t v5 = v34;
        LOBYTE(a4) = v33;
        goto LABEL_21;
      }
LABEL_19:
      swift_bridgeObjectRetain();
      uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
      if (v15) {
        goto LABEL_7;
      }
      goto LABEL_20;
    }
    __break(1u);
    goto LABEL_19;
  }
  swift_bridgeObjectRetain();
  CGFloat v12 = (uint64_t *)specialized _ArrayBuffer._getElementSlowPath(_:)();
  swift_bridgeObjectRelease();
  if (a3) {
    goto LABEL_5;
  }
LABEL_21:
  v14.value.super.Class isa = a2;
  SyncedLyricsLineView.setSelected(_:animator:)(1, v14);
  SyncedLyricsViewController.updateProgress(for:animated:)((uint64_t)v12, a2 != 0);
  id v20 = *(void **)((char *)v12 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView);
  if (v20)
  {
    type metadata accessor for SyncedLyricsLineView.InstrumentalContentView();
    if (swift_dynamicCastClass())
    {
      CGRect v21 = *(void **)(v5 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_instrumentalBreakVisibleView);
      *(void *)(v5 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_instrumentalBreakVisibleView) = v12;
      id v22 = v20;
      CGRect v23 = v12;

      if (a4)
      {
        uint64_t v24 = *(void *)(v5 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager);
        double v25 = 0.0;
        if (v24)
        {
          swift_beginAccess();
          BOOL v26 = *(double (**)(uint64_t))(v24 + 96);
          if (v26)
          {
            swift_retain();
            uint64_t v27 = outlined copy of (@escaping @callee_guaranteed () -> ())?((uint64_t)v26);
            double v28 = v26(v27);
            swift_beginAccess();
            double v29 = 0.0;
            if (*(unsigned char *)(v24 + 88) == 1)
            {
              Lyrics.spatialOffset.getter();
              double v29 = v30;
            }
            outlined consume of (@escaping @callee_guaranteed () -> ())?((uint64_t)v26);
            swift_release();
            double v25 = v28 - v29;
          }
        }
        SyncedLyricsLineView.InstrumentalContentView.fadeIn(elapsedTime:)(v25);
      }
    }
  }
  SyncedLyricsViewController.applyBlurRadius(_:to:animated:)(v12, 1, 0.0);
  id v31 = (void *)(v5 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_selectedLineViews);
  swift_beginAccess();
  uint64_t v32 = v12;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*v31 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v31 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_endAccess();
}

id SyncedLyricsViewController.updateBlur(views:)(uint64_t a1)
{
  uint64_t v4 = v1;
  id v6 = [v1 traitCollection];
  id v7 = [v6 accessibilityContrast];

  v139 = v4;
  if (v7 != (id)1)
  {
    UIViewPropertyAnimator_optional v14 = &v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode];
    id result = (id)swift_beginAccess();
    if (*v14 == 1) {
      return result;
    }
    if (a1)
    {
      uint64_t v149 = a1;
      uint64_t v3 = a1;
      goto LABEL_7;
    }
    uint64_t v72 = *(void *)&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager];
    if (!v72 || (swift_beginAccess(), uint64_t v73 = *(void *)(v72 + 80), !*(void *)(v73 + 16)))
    {
      v85 = &v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews];
      id result = (id)swift_beginAccess();
      if (*(void *)v85 >> 62) {
        goto LABEL_153;
      }
      if (*(uint64_t *)((*(void *)v85 & 0xFFFFFFFFFFFFFF8) + 0x10) < 1) {
        return result;
      }
      goto LABEL_84;
    }
    outlined init with copy of AlertPresenting(v73 + 32, (uint64_t)&v151);
    [*(id *)&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView] contentOffset];
    CGFloat v75 = v74;
    CGFloat v77 = v76;
    id result = [v4 view];
    if (!result) {
      goto LABEL_168;
    }
    uint64_t v78 = result;
    [result frame];
    CGFloat v80 = v79;

    v81 = (double *)&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight];
    swift_beginAccess();
    CGFloat v82 = *v81;
    if (*v81 <= 0.0)
    {
      id result = [v4 view];
      if (!result) {
        goto LABEL_170;
      }
      v83 = result;
      [result frame];
      CGFloat v82 = v84;
    }
    uint64_t v3 = SyncedLyricsViewController.lineViews(in:startingAt:)(&v151, v75, v77, v80, v82);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v151);
    uint64_t v149 = v3;
LABEL_7:
    uint64_t v8 = (uint64_t *)&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_blurredLineViews];
    swift_beginAccess();
    uint64_t v12 = *v8;
    uint64_t v148 = *v8;
    if ((unint64_t)v3 >> 62)
    {
LABEL_100:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v2)
      {
LABEL_9:
        if (v2 >= 1)
        {
          a1 = 0;
          uint64_t v16 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager;
          uint64_t v136 = v2;
          unint64_t v138 = v3 & 0xC000000000000001;
          uint64_t v135 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager;
          while (1)
          {
            if (v138) {
              id v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              id v19 = *(id *)(v3 + 8 * a1 + 32);
            }
            uint64_t v12 = (uint64_t)v19;
            uint64_t v20 = *(void *)&v4[v16];
            if (!v20) {
              goto LABEL_30;
            }
            swift_beginAccess();
            uint64_t v21 = *(void *)(v20 + 80);
            if (!*(void *)(v21 + 16)) {
              goto LABEL_30;
            }
            outlined init with copy of AlertPresenting(v21 + 32, (uint64_t)&v151);
            uint64_t v22 = *(void *)(v21 + 16);
            if (!v22)
            {
              __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v151);
LABEL_30:
              uint64_t v42 = a1 + 3;
              if (__OFADD__(a1, 3))
              {
                __break(1u);
                goto LABEL_98;
              }
              id v43 = [v4 traitCollection];
              id v44 = [v43 accessibilityContrast];

              if (v44 != (id)1 || v42 <= 0)
              {
                double v46 = (double)v42;
                if ((double)v42 > 4.0) {
                  double v46 = 4.0;
                }
                SyncedLyricsLineView.setBlurRadius(_:animated:)(1, v46);
                swift_beginAccess();
                if (a1 == -3)
                {
                  uint64_t v48 = (void *)specialized Set._Variant.remove(_:)((void *)v12);
                  swift_endAccess();
                }
                else
                {
                  specialized Set._Variant.insert(_:)(&v145, (id)v12);
                  uint64_t v47 = (void *)v145;
                  swift_endAccess();
                }
              }
              goto LABEL_13;
            }
            uint64_t v23 = v3;
            outlined init with copy of AlertPresenting(v21 + 32 + 40 * v22 - 40, (uint64_t)&v145);
            uint64_t v24 = v12 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line;
            swift_beginAccess();
            outlined init with copy of AlertPresenting(v24, (uint64_t)v142);
            uint64_t v25 = v143;
            uint64_t v26 = v144;
            __swift_project_boxed_opaque_existential_0Tm(v142, v143);
            uint64_t v27 = (*(uint64_t (**)(uint64_t, uint64_t))(v26 + 16))(v25, v26);
            uint64_t v29 = v146;
            uint64_t v28 = v147;
            __swift_project_boxed_opaque_existential_0Tm(&v145, v146);
            uint64_t v30 = (*(uint64_t (**)(uint64_t, uint64_t))(v28 + 16))(v29, v28);
            __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v142);
            if (v30 >= v27)
            {
              outlined init with copy of AlertPresenting(v24, (uint64_t)v142);
              uint64_t v49 = v143;
              uint64_t v50 = v144;
              __swift_project_boxed_opaque_existential_0Tm(v142, v143);
              uint64_t v51 = (*(uint64_t (**)(uint64_t, uint64_t))(v50 + 16))(v49, v50);
              uint64_t v52 = v154;
              unint64_t v53 = v155;
              __swift_project_boxed_opaque_existential_0Tm(&v151, v154);
              uint64_t v54 = (*(uint64_t (**)(uint64_t, unint64_t))(v53 + 16))(v52, v53);
              __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v142);
              uint64_t v4 = v139;
              id v55 = [v139 traitCollection];
              id v56 = [v55 accessibilityContrast];

              if (v51 >= v54)
              {
                SyncedLyricsLineView.setBlurRadius(_:animated:)(1, 0.0);
                swift_beginAccess();
                id v17 = (void *)specialized Set._Variant.remove(_:)((void *)v12);
                swift_endAccess();

                uint64_t v3 = v23;
                uint64_t v16 = v135;
                uint64_t v2 = v136;
              }
              else
              {
                uint64_t v3 = v23;
                uint64_t v16 = v135;
                uint64_t v2 = v136;
                if (v56 != (id)1)
                {
                  SyncedLyricsLineView.setBlurRadius(_:animated:)(1, 3.0);
LABEL_44:
                  swift_beginAccess();
                  specialized Set._Variant.insert(_:)(&v141, (id)v12);
                  CGRect v57 = v141;
                  swift_endAccess();
                }
              }
            }
            else
            {
              outlined init with copy of AlertPresenting(v24, (uint64_t)v142);
              uint64_t v31 = v143;
              uint64_t v32 = v144;
              __swift_project_boxed_opaque_existential_0Tm(v142, v143);
              uint64_t v33 = (*(uint64_t (**)(uint64_t, uint64_t))(v32 + 16))(v31, v32);
              uint64_t v3 = v146;
              uint64_t v34 = v147;
              __swift_project_boxed_opaque_existential_0Tm(&v145, v146);
              uint64_t v35 = (*(uint64_t (**)(uint64_t, uint64_t))(v34 + 16))(v3, v34);
              uint64_t v36 = v33 - v35;
              uint64_t v4 = v139;
              if (__OFSUB__(v33, v35)) {
                goto LABEL_99;
              }
              __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v142);
              double v37 = (double)v36 + 1.0;
              id v38 = [v139 traitCollection];
              id v39 = [v38 accessibilityContrast];

              uint64_t v3 = v23;
              uint64_t v16 = v135;
              uint64_t v2 = v136;
              if (v39 == (id)1 && v37 > 0.0) {
                goto LABEL_12;
              }
              if (v37 <= 4.0) {
                double v40 = (double)v36 + 1.0;
              }
              else {
                double v40 = 4.0;
              }
              SyncedLyricsLineView.setBlurRadius(_:animated:)(1, v40);
              if (v37 != 0.0) {
                goto LABEL_44;
              }
              swift_beginAccess();
              double v41 = (void *)specialized Set._Variant.remove(_:)((void *)v12);
              swift_endAccess();
            }
LABEL_12:
            __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v145);
            __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v151);
LABEL_13:
            ++a1;
            CGFloat v18 = (void *)specialized Set._Variant.remove(_:)((void *)v12);

            if (v2 == a1)
            {
              swift_bridgeObjectRelease();
              uint64_t v12 = v148;
              if ((v148 & 0xC000000000000001) == 0) {
                goto LABEL_102;
              }
LABEL_73:
              __CocoaSet.makeIterator()();
              type metadata accessor for SyncedLyricsLineView();
              lazy protocol witness table accessor for type SyncedLyricsLineView and conformance NSObject(&lazy protocol witness table cache variable for type SyncedLyricsLineView and conformance NSObject, (void (*)(uint64_t))type metadata accessor for SyncedLyricsLineView);
              Set.Iterator.init(_cocoa:)();
              uint64_t v12 = v151;
              uint64_t v69 = v152;
              uint64_t v70 = v153;
              a1 = v154;
              unint64_t v71 = v155;
              goto LABEL_106;
            }
          }
        }
        goto LABEL_145;
      }
    }
    else
    {
      uint64_t v2 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v2) {
        goto LABEL_9;
      }
    }
    swift_bridgeObjectRelease();
    if ((v12 & 0xC000000000000001) != 0) {
      goto LABEL_73;
    }
LABEL_102:
    a1 = 0;
    uint64_t v103 = -1 << *(unsigned char *)(v12 + 32);
    uint64_t v69 = v12 + 56;
    uint64_t v70 = ~v103;
    uint64_t v104 = -v103;
    if (v104 < 64) {
      uint64_t v105 = ~(-1 << v104);
    }
    else {
      uint64_t v105 = -1;
    }
    unint64_t v71 = v105 & *(void *)(v12 + 56);
LABEL_106:
    uint64_t v3 = (unint64_t)(v70 + 64) >> 6;
    if (v12 < 0) {
      goto LABEL_109;
    }
    while (1)
    {
      if (v71)
      {
        uint64_t v4 = (char *)((v71 - 1) & v71);
        unint64_t v106 = __clz(__rbit64(v71)) | (a1 << 6);
        uint64_t v107 = a1;
      }
      else
      {
        uint64_t v109 = a1 + 1;
        if (__OFADD__(a1, 1))
        {
          __break(1u);
LABEL_145:
          __break(1u);
          goto LABEL_146;
        }
        if (v109 >= v3)
        {
LABEL_129:
          id result = (id)outlined consume of Set<MusicItemID>.Iterator._Variant();
          v85 = (char *)*v8;
          if ((*v8 & 0xC000000000000001) != 0)
          {
            swift_bridgeObjectRetain();
            uint64_t v114 = __CocoaSet.count.getter();
            id result = (id)swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v114 = *((void *)v85 + 2);
          }
          if (v114 < 1) {
            return result;
          }
          v115 = (uint64_t *)&v139[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews];
          swift_beginAccess();
          a1 = *v115;
          if (!((unint64_t)*v115 >> 62))
          {
            uint64_t v116 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
            swift_bridgeObjectRetain();
            if (!v116) {
              return (id)swift_bridgeObjectRelease();
            }
            goto LABEL_135;
          }
LABEL_146:
          if (a1 < 0) {
            v85 = (char *)a1;
          }
          else {
            v85 = (char *)(a1 & 0xFFFFFFFFFFFFFF8);
          }
          swift_bridgeObjectRetain();
          uint64_t v116 = _CocoaArrayWrapper.endIndex.getter();
          if (!v116) {
            return (id)swift_bridgeObjectRelease();
          }
LABEL_135:
          if (v116 >= 1)
          {
            uint64_t v117 = 0;
            uint64_t v137 = v116;
            do
            {
              if ((a1 & 0xC000000000000001) != 0) {
                v126 = (unsigned __int8 *)specialized _ArrayBuffer._getElementSlowPath(_:)();
              }
              else {
                v126 = (unsigned __int8 *)*(id *)(a1 + 8 * v117 + 32);
              }
              v127 = v126;
              uint64_t v128 = OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_isScrolling;
              v126[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_isScrolling] = 0;
              v125 = SyncedLyricsLineView.contentView.modify((uint64_t)&v145);
              v130 = *(void **)v129;
              if (*(void *)v129)
              {
                uint64_t v118 = v129;
                uint64_t v119 = v127[v128];
                uint64_t v120 = *(void *)(v129 + 8);
                v140 = v125;
                uint64_t ObjectType = swift_getObjectType();
                v141 = v130;
                v122 = *(void (**)(uint64_t, uint64_t, uint64_t))(v120 + 40);
                id v123 = v130;
                v122(v119, ObjectType, v120);
                v124 = *(void **)v118;
                *(void *)uint64_t v118 = v141;
                *(void *)(v118 + 8) = v120;
                uint64_t v116 = v137;

                v125 = v140;
              }
              v125(&v145, 0);
              ++v117;
            }
            while (v116 != v117);
            return (id)swift_bridgeObjectRelease();
          }
          __break(1u);
LABEL_153:
          swift_bridgeObjectRetain();
          uint64_t v131 = _CocoaArrayWrapper.endIndex.getter();
          id result = (id)swift_bridgeObjectRelease();
          if (v131 < 1) {
            return result;
          }
LABEL_84:
          [*(id *)&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView] contentOffset];
          CGFloat v87 = v86;
          CGFloat v89 = v88;
          v90 = &selRef_radio;
          id result = [v4 view];
          if (!result) {
            goto LABEL_169;
          }
          v91 = result;
          [result frame];
          CGFloat v93 = v92;

          v94 = (double *)&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight];
          swift_beginAccess();
          CGFloat v95 = *v94;
          if (*v94 <= 0.0)
          {
            id result = [v4 view];
            if (!result) {
              goto LABEL_171;
            }
            v96 = result;
            [result frame];
            CGFloat v95 = v97;
          }
          uint64_t v98 = *(void *)v85;
          if ((*(void *)v85 & 0xC000000000000001) != 0)
          {
            swift_bridgeObjectRetain();
            id v99 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            swift_bridgeObjectRelease();
          }
          else
          {
            if (!*(void *)((v98 & 0xFFFFFFFFFFFFFF8) + 0x10))
            {
              __break(1u);
              goto LABEL_157;
            }
            id v99 = *(id *)(v98 + 32);
          }
          uint64_t v100 = (uint64_t)v99 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line;
          swift_beginAccess();
          outlined init with copy of AlertPresenting(v100, (uint64_t)&v151);

          uint64_t v3 = SyncedLyricsViewController.lineViews(in:startingAt:)(&v151, v87, v89, v93, v95);
          __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v151);
          uint64_t v149 = v3;
          v90 = (char **)((unint64_t)v3 >> 62);
          if ((unint64_t)v3 >> 62)
          {
LABEL_157:
            swift_bridgeObjectRetain();
            uint64_t v132 = _CocoaArrayWrapper.endIndex.getter();
            uint64_t v2 = v3;
            swift_bridgeObjectRelease();
            if (v132 < 1) {
              goto LABEL_166;
            }
            swift_bridgeObjectRetain();
            uint64_t v133 = _CocoaArrayWrapper.endIndex.getter();
            id result = (id)swift_bridgeObjectRelease();
            if (!v133) {
              goto LABEL_172;
            }
            swift_bridgeObjectRetain();
            uint64_t v134 = _CocoaArrayWrapper.endIndex.getter();
            swift_bridgeObjectRelease();
            uint64_t v4 = v139;
            if (v134)
            {
LABEL_93:
              if ((v3 & 0xC000000000000001) != 0) {
                goto LABEL_161;
              }
              if (*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
              {
                id result = *(id *)(v3 + 32);
                v101 = result;
                if (!v90) {
                  goto LABEL_96;
                }
                goto LABEL_162;
              }
              __break(1u);
LABEL_166:
              uint64_t v4 = v139;
              uint64_t v3 = v2;
            }
            else
            {
              __break(1u);
LABEL_161:
              id result = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
              v101 = result;
              if (!v90)
              {
LABEL_96:
                uint64_t v102 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
                goto LABEL_163;
              }
LABEL_162:
              swift_bridgeObjectRetain();
              uint64_t v102 = _CocoaArrayWrapper.endIndex.getter();
              id result = (id)swift_bridgeObjectRelease();
LABEL_163:
              if (!v102)
              {
                __break(1u);
LABEL_168:
                __break(1u);
LABEL_169:
                __break(1u);
LABEL_170:
                __break(1u);
LABEL_171:
                __break(1u);
LABEL_172:
                __break(1u);
                return result;
              }
              specialized Array.replaceSubrange<A>(_:with:)(0, 1);

              uint64_t v3 = v149;
            }
          }
          else if (*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            goto LABEL_93;
          }
          goto LABEL_7;
        }
        unint64_t v110 = *(void *)(v69 + 8 * v109);
        uint64_t v107 = a1 + 1;
        if (!v110)
        {
          uint64_t v107 = a1 + 2;
          if (a1 + 2 >= v3) {
            goto LABEL_129;
          }
          unint64_t v110 = *(void *)(v69 + 8 * v107);
          if (!v110)
          {
            uint64_t v107 = a1 + 3;
            if (a1 + 3 >= v3) {
              goto LABEL_129;
            }
            unint64_t v110 = *(void *)(v69 + 8 * v107);
            if (!v110)
            {
              uint64_t v107 = a1 + 4;
              if (a1 + 4 >= v3) {
                goto LABEL_129;
              }
              unint64_t v110 = *(void *)(v69 + 8 * v107);
              if (!v110)
              {
                uint64_t v111 = a1 + 5;
                do
                {
                  if (v3 == v111) {
                    goto LABEL_129;
                  }
                  unint64_t v110 = *(void *)(v69 + 8 * v111++);
                }
                while (!v110);
                uint64_t v107 = v111 - 1;
              }
            }
          }
        }
        uint64_t v4 = (char *)((v110 - 1) & v110);
        unint64_t v106 = __clz(__rbit64(v110)) + (v107 << 6);
      }
      uint64_t v2 = (uint64_t)*(id *)(*(void *)(v12 + 48) + 8 * v106);
      if (!v2) {
        goto LABEL_129;
      }
      while (1)
      {
        id v112 = [v139 traitCollection];
        [v112 accessibilityContrast];

        SyncedLyricsLineView.setBlurRadius(_:animated:)(0, 0.0);
        swift_beginAccess();
        v113 = (void *)specialized Set._Variant.remove(_:)((void *)v2);
        swift_endAccess();

        a1 = v107;
        unint64_t v71 = (unint64_t)v4;
        if ((v12 & 0x8000000000000000) == 0) {
          break;
        }
LABEL_109:
        uint64_t v108 = __CocoaSet.Iterator.next()();
        if (v108)
        {
          v142[0] = v108;
          type metadata accessor for SyncedLyricsLineView();
          swift_unknownObjectRetain();
          swift_dynamicCast();
          uint64_t v2 = v145;
          swift_unknownObjectRelease();
          uint64_t v107 = a1;
          uint64_t v4 = (char *)v71;
          if (v2) {
            continue;
          }
        }
        goto LABEL_129;
      }
    }
  }
  uint64_t v8 = (uint64_t *)&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_blurredLineViews];
  swift_beginAccess();
  uint64_t v9 = *v8;
  if ((*v8 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    type metadata accessor for SyncedLyricsLineView();
    lazy protocol witness table accessor for type SyncedLyricsLineView and conformance NSObject(&lazy protocol witness table cache variable for type SyncedLyricsLineView and conformance NSObject, (void (*)(uint64_t))type metadata accessor for SyncedLyricsLineView);
    Set.Iterator.init(_cocoa:)();
    uint64_t v9 = v151;
    uint64_t v10 = v152;
    uint64_t v11 = v153;
    uint64_t v12 = v154;
    unint64_t v13 = v155;
  }
  else
  {
    uint64_t v58 = -1 << *(unsigned char *)(v9 + 32);
    uint64_t v10 = v9 + 56;
    uint64_t v11 = ~v58;
    uint64_t v59 = -v58;
    if (v59 < 64) {
      uint64_t v60 = ~(-1 << v59);
    }
    else {
      uint64_t v60 = -1;
    }
    unint64_t v13 = v60 & *(void *)(v9 + 56);
    swift_bridgeObjectRetain();
    uint64_t v12 = 0;
  }
  int64_t v61 = (unint64_t)(v11 + 64) >> 6;
  if (v9 < 0) {
    goto LABEL_52;
  }
  while (1)
  {
    if (v13)
    {
      uint64_t v4 = (char *)((v13 - 1) & v13);
      unint64_t v62 = __clz(__rbit64(v13)) | (v12 << 6);
      uint64_t v3 = v12;
      goto LABEL_69;
    }
    int64_t v64 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_98:
      __break(1u);
LABEL_99:
      __break(1u);
      goto LABEL_100;
    }
    if (v64 >= v61) {
      return (id)outlined consume of Set<MusicItemID>.Iterator._Variant();
    }
    unint64_t v65 = *(void *)(v10 + 8 * v64);
    uint64_t v3 = v12 + 1;
    if (!v65)
    {
      uint64_t v3 = v12 + 2;
      if (v12 + 2 >= v61) {
        return (id)outlined consume of Set<MusicItemID>.Iterator._Variant();
      }
      unint64_t v65 = *(void *)(v10 + 8 * v3);
      if (!v65)
      {
        uint64_t v3 = v12 + 3;
        if (v12 + 3 >= v61) {
          return (id)outlined consume of Set<MusicItemID>.Iterator._Variant();
        }
        unint64_t v65 = *(void *)(v10 + 8 * v3);
        if (!v65)
        {
          uint64_t v3 = v12 + 4;
          if (v12 + 4 >= v61) {
            return (id)outlined consume of Set<MusicItemID>.Iterator._Variant();
          }
          unint64_t v65 = *(void *)(v10 + 8 * v3);
          if (!v65) {
            break;
          }
        }
      }
    }
LABEL_68:
    uint64_t v4 = (char *)((v65 - 1) & v65);
    unint64_t v62 = __clz(__rbit64(v65)) + (v3 << 6);
LABEL_69:
    a1 = (uint64_t)*(id *)(*(void *)(v9 + 48) + 8 * v62);
    if (!a1) {
      return (id)outlined consume of Set<MusicItemID>.Iterator._Variant();
    }
    while (1)
    {
      id v67 = [v139 traitCollection];
      [v67 accessibilityContrast];

      SyncedLyricsLineView.setBlurRadius(_:animated:)(0, 0.0);
      swift_beginAccess();
      long long v68 = (void *)specialized Set._Variant.remove(_:)((void *)a1);
      swift_endAccess();

      uint64_t v12 = v3;
      unint64_t v13 = (unint64_t)v4;
      if ((v9 & 0x8000000000000000) == 0) {
        break;
      }
LABEL_52:
      uint64_t v63 = __CocoaSet.Iterator.next()();
      if (v63)
      {
        uint64_t v150 = v63;
        type metadata accessor for SyncedLyricsLineView();
        swift_unknownObjectRetain();
        swift_dynamicCast();
        a1 = v142[0];
        swift_unknownObjectRelease();
        uint64_t v3 = v12;
        uint64_t v4 = (char *)v13;
        if (v142[0]) {
          continue;
        }
      }
      return (id)outlined consume of Set<MusicItemID>.Iterator._Variant();
    }
  }
  uint64_t v66 = v12 + 5;
  while (v61 != v66)
  {
    unint64_t v65 = *(void *)(v10 + 8 * v66++);
    if (v65)
    {
      uint64_t v3 = v66 - 1;
      goto LABEL_68;
    }
  }
  return (id)outlined consume of Set<MusicItemID>.Iterator._Variant();
}

void SyncedLyricsViewController.applyBlurRadius(_:to:animated:)(void *a1, char a2, double a3)
{
  uint64_t v4 = v3;
  id v8 = [v4 traitCollection];
  id v9 = [v8 accessibilityContrast];

  if (v9 != (id)1 || a3 <= 0.0)
  {
    double v10 = 4.0;
    if (a3 <= 4.0) {
      double v10 = a3;
    }
    SyncedLyricsLineView.setBlurRadius(_:animated:)(a2 & 1, v10);
    swift_beginAccess();
    if (a3 == 0.0)
    {
      uint64_t v11 = (void *)specialized Set._Variant.remove(_:)(a1);
    }
    else
    {
      specialized Set._Variant.insert(_:)(&v12, a1);
      uint64_t v11 = v12;
    }
    swift_endAccess();
  }
}

uint64_t SyncedLyricsViewController.removeAllBlurs()()
{
  uint64_t v2 = v0;
  uint64_t v3 = &v0[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_blurredLineViews];
  swift_beginAccess();
  uint64_t v4 = *(void *)v3;
  if ((*(void *)v3 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    type metadata accessor for SyncedLyricsLineView();
    lazy protocol witness table accessor for type SyncedLyricsLineView and conformance NSObject(&lazy protocol witness table cache variable for type SyncedLyricsLineView and conformance NSObject, (void (*)(uint64_t))type metadata accessor for SyncedLyricsLineView);
    Set.Iterator.init(_cocoa:)();
    uint64_t v4 = v42[10];
    uint64_t v40 = v42[11];
    uint64_t v5 = v42[12];
    uint64_t v6 = v42[13];
    unint64_t v7 = v42[14];
  }
  else
  {
    uint64_t v8 = -1 << *(unsigned char *)(v4 + 32);
    uint64_t v40 = v4 + 56;
    uint64_t v5 = ~v8;
    uint64_t v9 = -v8;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v7 = v10 & *(void *)(v4 + 56);
    swift_bridgeObjectRetain();
    uint64_t v6 = 0;
  }
  uint64_t v37 = v5;
  int64_t v39 = (unint64_t)(v5 + 64) >> 6;
  if (v4 < 0) {
    goto LABEL_10;
  }
  while (1)
  {
    if (v7)
    {
      uint64_t v11 = (v7 - 1) & v7;
      unint64_t v12 = __clz(__rbit64(v7)) | (v6 << 6);
      uint64_t v13 = v6;
      goto LABEL_27;
    }
    int64_t v15 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_42;
    }
    if (v15 >= v39) {
      goto LABEL_30;
    }
    unint64_t v16 = *(void *)(v40 + 8 * v15);
    uint64_t v13 = v6 + 1;
    if (!v16)
    {
      uint64_t v13 = v6 + 2;
      if (v6 + 2 >= v39) {
        goto LABEL_30;
      }
      unint64_t v16 = *(void *)(v40 + 8 * v13);
      if (!v16)
      {
        uint64_t v13 = v6 + 3;
        if (v6 + 3 >= v39) {
          goto LABEL_30;
        }
        unint64_t v16 = *(void *)(v40 + 8 * v13);
        if (!v16)
        {
          uint64_t v13 = v6 + 4;
          if (v6 + 4 >= v39) {
            goto LABEL_30;
          }
          unint64_t v16 = *(void *)(v40 + 8 * v13);
          if (!v16) {
            break;
          }
        }
      }
    }
LABEL_26:
    uint64_t v11 = (v16 - 1) & v16;
    unint64_t v12 = __clz(__rbit64(v16)) + (v13 << 6);
LABEL_27:
    unint64_t v1 = (unint64_t)*(id *)(*(void *)(v4 + 48) + 8 * v12);
    if (!v1) {
      goto LABEL_30;
    }
    while (1)
    {
      id v18 = objc_msgSend(v2, "traitCollection", v37);
      [v18 accessibilityContrast];

      SyncedLyricsLineView.setBlurRadius(_:animated:)(1, 0.0);
      swift_beginAccess();
      id v19 = (void *)specialized Set._Variant.remove(_:)((void *)v1);
      swift_endAccess();

      uint64_t v6 = v13;
      unint64_t v7 = v11;
      if ((v4 & 0x8000000000000000) == 0) {
        break;
      }
LABEL_10:
      uint64_t v14 = __CocoaSet.Iterator.next()();
      if (v14)
      {
        v42[4] = v14;
        type metadata accessor for SyncedLyricsLineView();
        swift_unknownObjectRetain();
        swift_dynamicCast();
        unint64_t v1 = v42[0];
        swift_unknownObjectRelease();
        uint64_t v13 = v6;
        uint64_t v11 = v7;
        if (v42[0]) {
          continue;
        }
      }
      goto LABEL_30;
    }
  }
  uint64_t v17 = v6 + 5;
  while (v39 != v17)
  {
    unint64_t v16 = *(void *)(v40 + 8 * v17++);
    if (v16)
    {
      uint64_t v13 = v17 - 1;
      goto LABEL_26;
    }
  }
LABEL_30:
  outlined consume of Set<MusicItemID>.Iterator._Variant();
  uint64_t v20 = (id *)&v2[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews];
  swift_beginAccess();
  unint64_t v1 = (unint64_t)*v20;
  if (!((unint64_t)*v20 >> 62))
  {
    uint64_t v21 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v21) {
      goto LABEL_32;
    }
    return swift_bridgeObjectRelease();
  }
LABEL_42:
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v21 = result;
  if (!result) {
    return swift_bridgeObjectRelease();
  }
LABEL_32:
  if (v21 >= 1)
  {
    uint64_t v23 = 0;
    uint64_t v38 = v21;
    do
    {
      if ((v1 & 0xC000000000000001) != 0) {
        uint64_t v24 = (unsigned __int8 *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        uint64_t v24 = (unsigned __int8 *)*(id *)(v1 + 8 * v23 + 32);
      }
      uint64_t v25 = v24;
      uint64_t v26 = OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_isScrolling;
      v24[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_isScrolling] = 1;
      uint64_t v28 = SyncedLyricsLineView.contentView.modify((uint64_t)v42);
      uint64_t v29 = *(void **)v27;
      if (*(void *)v27)
      {
        uint64_t v30 = v27;
        uint64_t v31 = v25[v26];
        uint64_t v32 = *(void *)(v27 + 8);
        double v41 = v28;
        uint64_t ObjectType = swift_getObjectType();
        uint64_t v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 40);
        id v35 = v29;
        v34(v31, ObjectType, v32);
        uint64_t v36 = *(void **)v30;
        *(void *)uint64_t v30 = v29;
        *(void *)(v30 + 8) = v32;
        uint64_t v21 = v38;

        v41((long long *)v42, 0);
      }
      else
      {
        v28((long long *)v42, 0);
      }
      ++v23;
    }
    while (v21 != v23);
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

void SyncedLyricsViewController.animate(line:to:elapsedTime:tapMode:gap:adjustedContentOffset:)(unint64_t a1, char a2, uint64_t a3, char a4, char a5, double a6, double a7, double a8)
{
  uint64_t v9 = v8;
  uint64_t v17 = swift_allocObject();
  *(double *)(v17 + 16) = a6;
  *(double *)(v17 + 24) = a7;
  uint64_t v18 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView;
  [*(id *)&v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView] contentOffset];
  double v20 = v19;
  [*(id *)&v9[v18] contentOffset];
  double v22 = v21;
  CGFloat v24 = v23;
  uint64_t v25 = &selRef_radio;
  id v26 = [v9 view];
  if (!v26) {
    goto LABEL_122;
  }
  uint64_t v27 = v26;
  [v26 frame];
  CGFloat v29 = v28;

  uint64_t v30 = (CGFloat *)&v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight];
  swift_beginAccess();
  CGFloat v31 = *v30;
  if (*v30 <= 0.0)
  {
    id v32 = [v9 view];
    if (!v32) {
      goto LABEL_123;
    }
    uint64_t v33 = v32;
    [v32 frame];
    CGFloat v31 = v34;
  }
  uint64_t v35 = a4 & 1;
  double v36 = a7 - v20;
  v176.origin.CGFloat x = v22;
  v176.origin.CGFloat y = v24;
  v176.size.width = v29;
  v176.size.CGFloat height = v31;
  CGRect v180 = CGRectOffset(v176, 0.0, v36);
  v177.origin.CGFloat x = v22;
  v177.origin.CGFloat y = v24;
  v177.size.width = v29;
  v177.size.CGFloat height = v31;
  CGRect v178 = CGRectUnion(v177, v180);
  unint64_t v156 = SyncedLyricsViewController.lineViews(in:startingAt:)((void *)a1, v178.origin.x, v178.origin.y, v178.size.width, v178.size.height);
  uint64_t v37 = *(void *)(a1 + 24);
  uint64_t v38 = *(void *)(a1 + 32);
  __swift_project_boxed_opaque_existential_0Tm((void *)a1, v37);
  unint64_t v39 = (*(uint64_t (**)(uint64_t, uint64_t))(v38 + 16))(v37, v38);
  uint64_t v40 = &v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews];
  swift_beginAccess();
  uint64_t v41 = *(void *)v40;
  if ((v41 & 0xC000000000000001) == 0)
  {
    if ((v39 & 0x8000000000000000) != 0)
    {
LABEL_105:
      __break(1u);
    }
    else if (v39 < *(void *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v161 = *(id *)(v41 + 8 * v39 + 32);
      if (v35) {
        goto LABEL_17;
      }
      goto LABEL_9;
    }
    __break(1u);
    goto LABEL_107;
  }
  swift_bridgeObjectRetain();
  id v161 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  swift_bridgeObjectRelease();
  if (v35) {
    goto LABEL_17;
  }
LABEL_9:
  uint64_t v42 = &v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics];
  swift_beginAccess();
  if (!*(void *)v42 || *(unsigned char *)(*(void *)v42 + 56) != 2)
  {
LABEL_17:
    if (a2)
    {
      id v47 = objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 2.0, 260.0, 50.0, 0.0, 0.0);
    }
    else
    {
      uint64_t v48 = &v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics];
      swift_beginAccess();
      if (*(void *)v48 && *(unsigned char *)(*(void *)v48 + 56) == 2) {
        id v47 = specialized static SyncedLyricsViewController.Specs.syllableBySyllableLineChangeSpringTimingParameters(gap:)(a3, v35);
      }
      else {
        id v47 = objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 100.0, 18.0, 0.0, 0.0);
      }
    }
    goto LABEL_23;
  }
  double v43 = (*(double *)&a3 + -0.2) / 0.55;
  if (*(double *)&a3 > 0.75) {
    double v43 = 1.0;
  }
  double v44 = 0.0;
  if (*(double *)&a3 >= 0.2) {
    double v44 = v43;
  }
  double v45 = (1.0 - v44) * 0.12 + 0.78;
  double v46 = v44 * 0.27 + 0.48;
  type metadata accessor for UIMenu(0, &lazy cache variable for type metadata for UISpringTimingParameters);
  id v47 = UISpringTimingParameters.init(dampingRatio:response:)(v45, v46);
LABEL_23:
  id v168 = v47;
  uint64_t v49 = *(void *)(a1 + 24);
  uint64_t v50 = *(void *)(a1 + 32);
  __swift_project_boxed_opaque_existential_0Tm((void *)a1, v49);
  double v51 = (*(double (**)(uint64_t))(*(void *)(v50 + 8) + 16))(v49);
  v159 = (double *)&v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs];
  swift_beginAccess();
  uint64_t v146 = a3;
  if ((a2 & 1) != 0 || (double v52 = v51 - v159[19], [v168 settlingDuration], v52 >= v53 + a8))
  {
    [v168 settlingDuration];
    double v22 = v54;
  }
  else
  {
    double v22 = v52 - a8;
    [v168 setImplicitDuration:0];
  }
  v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isAnimating] = 1;
  uint64_t v25 = (char **)OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_instrumentalBreakVisibleView;
  id v55 = *(char **)&v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_instrumentalBreakVisibleView];
  v162 = v9;
  v160 = (char **)a1;
  char v145 = a2;
  if (v55
    && (id v56 = *(void **)&v55[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView]) != 0
    && (type metadata accessor for SyncedLyricsLineView.InstrumentalContentView(), (uint64_t v57 = swift_dynamicCastClass()) != 0))
  {
    uint64_t v58 = v57;
    int v144 = v35;
    uint64_t v149 = v17;
    uint64_t v59 = (uint64_t)&v55[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line];
    swift_beginAccess();
    outlined init with copy of AlertPresenting(v59, (uint64_t)aBlock);
    uint64_t v60 = v170;
    int64_t v61 = v171;
    unint64_t v62 = (char *)__swift_project_boxed_opaque_existential_0Tm(aBlock, (uint64_t)v170);
    uint64_t v9 = (char *)v61 + 16;
    uint64_t v63 = (uint64_t (*)(void *, void (*)(uint64_t)))*((void *)v61 + 2);
    int64_t v64 = v55;
    id v65 = v56;
    uint64_t v66 = v62;
    uint64_t v67 = v63(v60, v61);
    a1 = v67 + 1;
    if (__OFADD__(v67, 1))
    {
      __break(1u);
      goto LABEL_109;
    }
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)aBlock);
    uint64_t v68 = (uint64_t)v160[3];
    uint64_t v69 = v160[4];
    __swift_project_boxed_opaque_existential_0Tm(v160, v68);
    uint64_t v70 = (*((uint64_t (**)(uint64_t, char *))v69 + 2))(v68, v69);
    BOOL v71 = a1 == v70;
    uint64_t v17 = v149;
    uint64_t v9 = v162;
    LODWORD(v35) = v144;
    if (a1 == v70)
    {
      uint64_t v72 = *(char **)((char *)v25 + (void)v162);
      *(char **)((char *)v25 + (void)v162) = 0;

      [v64 frame];
      *(double *)(v149 + 24) = *(double *)(v149 + 24) - (CGRectGetHeight(v179) + v159[10]);
      SyncedLyricsLineView.InstrumentalContentView.reset()();
    }

    a1 = (unint64_t)v160;
  }
  else
  {
    BOOL v71 = 0;
  }
  outlined init with copy of AlertPresenting(a1, (uint64_t)aBlock);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for LyricsLine);
  if (swift_dynamicCast())
  {
    uint64_t v73 = (void *)a1;
    a1 = v156;
    SyncedLyricsViewController.animateInstrumentalStart(line:contentOffset:visibleViews:timingParameters:duration:deltaY:elapsed:)(v73, v156, (uint64_t)v168, *(double *)(v17 + 16), *(double *)(v17 + 24), v22, v36, a8);
    goto LABEL_112;
  }
  if (v71)
  {
    double v74 = (void *)a1;
    a1 = v156;
    SyncedLyricsViewController.animateInstrumentalEnd(line:contentOffset:visibleViews:timingParameters:duration:deltaY:)(v74, v156, (uint64_t)v168, *(double *)(v17 + 16), *(double *)(v17 + 24), v22, v36);
    goto LABEL_112;
  }
  unsigned int v143 = v35;
  a1 = v156;
  uint64_t v35 = v156 >> 62;
  if (!(v156 >> 62))
  {
    uint64_t v58 = *(void *)((v156 & 0xFFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_41;
  }
LABEL_107:
  swift_bridgeObjectRetain();
  uint64_t v58 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
LABEL_41:
  CGFloat v75 = _swiftEmptyArrayStorage;
  if (v58)
  {
    aBlock[0] = _swiftEmptyArrayStorage;
    uint64_t v66 = (char *)aBlock;
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, v58 & ~(v58 >> 63), 0);
    if ((v58 & 0x8000000000000000) == 0)
    {
      uint64_t v76 = 0;
      CGFloat v75 = (void *)aBlock[0];
      do
      {
        CGFloat v77 = v75;
        if ((a1 & 0xC000000000000001) != 0) {
          id v78 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v78 = *(id *)(a1 + 8 * v76 + 32);
        }
        double v79 = v78;
        double v80 = UIView.untransformedFrame.getter();
        uint64_t v82 = v81;
        uint64_t v84 = v83;
        uint64_t v86 = v85;

        CGFloat v75 = v77;
        aBlock[0] = v77;
        unint64_t v88 = v77[2];
        unint64_t v87 = v77[3];
        if (v88 >= v87 >> 1)
        {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)((char *)(v87 > 1), v88 + 1, 1);
          CGFloat v75 = (void *)aBlock[0];
        }
        ++v76;
        v75[2] = v88 + 1;
        CGFloat v89 = (double *)&v75[4 * v88];
        v89[4] = v80;
        *((void *)v89 + 5) = v82;
        *((void *)v89 + 6) = v84;
        *((void *)v89 + 7) = v86;
      }
      while (v58 != v76);
      goto LABEL_50;
    }
LABEL_109:
    __break(1u);
    goto LABEL_110;
  }
LABEL_50:
  uint64_t v148 = v75;
  uint64_t v150 = v17;
  if (v35)
  {
    swift_bridgeObjectRetain();
    uint64_t v25 = (char **)_CocoaArrayWrapper.endIndex.getter();
    if (!v25) {
      goto LABEL_83;
    }
  }
  else
  {
    uint64_t v25 = *(char ***)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v25)
    {
LABEL_83:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      specialized Collection<>.firstIndex(of:)((uint64_t)v161, a1);
      uint64_t v25 = v160;
      if (v125) {
        goto LABEL_111;
      }
      uint64_t v58 = v124;
      uint64_t v66 = &v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_currentAnimators];
      swift_beginAccess();
      if (!(*(void *)v66 >> 62))
      {
        if (v58 < *(void *)((*(void *)v66 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_86;
        }
        goto LABEL_111;
      }
LABEL_110:
      swift_bridgeObjectRetain();
      uint64_t v138 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v58 < v138)
      {
LABEL_86:
        uint64_t v126 = *(void *)v66;
        if ((v126 & 0xC000000000000001) == 0)
        {
          if (v58 < 0)
          {
            __break(1u);
          }
          else if ((unint64_t)v58 < *(void *)((v126 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            v127 = (objc_class *)*(id *)(v126 + 8 * v58 + 32);
LABEL_90:
            SyncedLyricsViewController.select(line:animator:deselectAll:fadeInInstrumentalView:)(v25, v127, (uint64_t *)1, 1);

            goto LABEL_112;
          }
          __break(1u);
          goto LABEL_120;
        }
        swift_bridgeObjectRetain();
        v127 = (objc_class *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        swift_bridgeObjectRelease();
        goto LABEL_90;
      }
LABEL_111:
      SyncedLyricsViewController.select(line:animator:deselectAll:fadeInInstrumentalView:)(v25, 0, (uint64_t *)1, 1);
LABEL_112:
      v139 = &v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode];
      swift_beginAccess();
      if (*v139 == 1)
      {
        char *v139 = 0;
        v140 = &v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_delegate];
        swift_beginAccess();
        if (swift_unknownObjectWeakLoadStrong())
        {
          uint64_t v141 = *((void *)v140 + 1);
          uint64_t ObjectType = swift_getObjectType();
          (*(void (**)(char *, uint64_t, uint64_t))(v141 + 24))(v9, ObjectType, v141);
          swift_unknownObjectRelease();
        }
      }
      SyncedLyricsViewController.updateBlur(views:)(a1);
      swift_bridgeObjectRelease();

LABEL_116:
      swift_release();

      return;
    }
  }
  type metadata accessor for UIMenu(0, (unint64_t *)&_sSo8NSObjectCML_1);
  uint64_t v90 = 0;
  unsigned int v155 = 0;
  uint64_t v152 = &v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_currentAnimators];
  unint64_t v158 = a1 & 0xC000000000000001;
  uint64_t v151 = v58 - 1;
  BOOL v91 = __OFSUB__(v58, 1);
  BOOL v153 = v91;
  unint64_t v147 = a1 + 32;
  long long v92 = 0uLL;
  char v93 = 1;
  uint64_t v35 = 56;
  long long v94 = 0uLL;
  uint64_t v154 = v25;
  while (1)
  {
    v174[0] = v92;
    v174[1] = v94;
    char v175 = v93 & 1;
    if (v158) {
      CGFloat v95 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      CGFloat v95 = (char *)*(id *)(v147 + 8 * v90);
    }
    v96 = v95;
    if (__OFADD__(v90, 1))
    {
      __break(1u);
LABEL_103:
      __break(1u);
LABEL_104:
      __break(1u);
      goto LABEL_105;
    }
    v165 = (char **)(v90 + 1);
    uint64_t v17 = (uint64_t)[objc_allocWithZone((Class)UIViewPropertyAnimator) initWithDuration:v168 timingParameters:v22];
    uint64_t v97 = swift_allocObject();
    char v98 = static NSObject.== infix(_:_:)();
    SyncedLyricsViewController.frame(for:selected:previousViewFrame:)(v96, v98 & 1, (uint64_t)v174);
    *(void *)(v97 + 16) = v99;
    *(void *)(v97 + 24) = v100;
    *(void *)(v97 + 32) = v101;
    *(void *)(v97 + 40) = v102;
    uint64_t v166 = v35;
    v167 = (void *)v17;
    if (v90)
    {
      if (a5) {
        goto LABEL_74;
      }
    }
    else
    {
      swift_beginAccess();
      *(double *)(v97 + 24) = *(double *)(v97 + 24) - v36;
      if (a5) {
        goto LABEL_74;
      }
    }
    if ((unint64_t)v90 >= v148[2]) {
      goto LABEL_104;
    }
    double v103 = *(double *)((char *)v148 + v35);
    swift_beginAccess();
    if (v103 == *(double *)(v97 + 40))
    {
      uint64_t v17 = v155;
      uint64_t v104 = v160;
    }
    else
    {
      uint64_t v104 = v160;
      uint64_t v106 = (uint64_t)v160[3];
      uint64_t v105 = v160[4];
      __swift_project_boxed_opaque_existential_0Tm(v160, v106);
      uint64_t v107 = (*((uint64_t (**)(uint64_t, char *))v105 + 2))(v106, v105);
      uint64_t v108 = (uint64_t)&v96[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line];
      swift_beginAccess();
      outlined init with copy of AlertPresenting(v108, (uint64_t)aBlock);
      unint64_t v110 = v170;
      uint64_t v109 = v171;
      __swift_project_boxed_opaque_existential_0Tm(aBlock, (uint64_t)v170);
      LODWORD(v108) = (*((uint64_t (**)(void *, void (*)(uint64_t)))v109 + 2))(v110, v109) < v107;
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)aBlock);
      uint64_t v17 = v108 | v155;
    }
    uint64_t v111 = (uint64_t)&v96[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line];
    swift_beginAccess();
    outlined init with copy of AlertPresenting(v111, (uint64_t)aBlock);
    id v112 = v170;
    v113 = v171;
    __swift_project_boxed_opaque_existential_0Tm(aBlock, (uint64_t)v170);
    uint64_t v114 = (*((uint64_t (**)(void *, void (*)(uint64_t)))v113 + 2))(v112, v113);
    uint64_t v115 = (uint64_t)v104[3];
    uint64_t v116 = v104[4];
    __swift_project_boxed_opaque_existential_0Tm(v104, v115);
    uint64_t v117 = (*((uint64_t (**)(uint64_t, char *))v116 + 2))(v115, v116);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)aBlock);
    unsigned int v155 = (v114 != v117) & v17;
    if (v114 != v117)
    {
      uint64_t v9 = v162;
      a1 = v156;
      uint64_t v25 = v154;
      goto LABEL_74;
    }
    uint64_t v9 = v162;
    a1 = v156;
    uint64_t v25 = v154;
    if (v17) {
      break;
    }
LABEL_74:
    swift_beginAccess();
    long long v163 = *(_OWORD *)(v97 + 32);
    long long v164 = *(_OWORD *)(v97 + 16);
    uint64_t v35 = swift_allocObject();
    *(void *)(v35 + 16) = v96;
    *(void *)(v35 + 24) = v97;
    uint64_t v118 = v96;
    swift_retain();
    UIViewPropertyAnimator.addModifiedAnimations(with:animations:)(2, (uint64_t)partial apply for closure #2 in SyncedLyricsViewController.animate(line:to:elapsedTime:tapMode:gap:adjustedContentOffset:), v35);
    swift_release();
    if (v153) {
      goto LABEL_103;
    }
    if (v151 == v90)
    {
      outlined init with copy of AlertPresenting((uint64_t)v160, (uint64_t)v173);
      uint64_t v119 = swift_allocObject();
      *(void *)(v119 + 16) = a1;
      *(double *)(v119 + 24) = v36;
      *(void *)(v119 + 32) = v9;
      *(void *)(v119 + 40) = v150;
      outlined init with take of AlertPresenting(v173, v119 + 48);
      v171 = partial apply for closure #3 in SyncedLyricsViewController.animate(line:to:elapsedTime:tapMode:gap:adjustedContentOffset:);
      uint64_t v172 = v119;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = thunk for @escaping @callee_guaranteed (@unowned UIViewAnimatingPosition) -> ();
      v170 = &block_descriptor_131_0;
      uint64_t v120 = _Block_copy(aBlock);
      swift_bridgeObjectRetain();
      v121 = v9;
      uint64_t v25 = v154;
      swift_retain();
      swift_release();
      [v167 addCompletion:v120];
      _Block_release(v120);
    }
    swift_beginAccess();
    id v122 = v167;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((*(void *)v152 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v152 & 0xFFFFFFFFFFFFFF8)
                                                                                  + 0x18) >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    swift_endAccess();
    if (v90 <= 1) {
      uint64_t v123 = 1;
    }
    else {
      uint64_t v123 = v90;
    }
    [v122 startAnimationAfterDelay:v159[18] * (double)(v123 - 1)];
    swift_release();

    char v93 = 0;
    ++v90;
    uint64_t v35 = v166 + 32;
    uint64_t v9 = v162;
    long long v94 = v163;
    long long v92 = v164;
    if (v165 == v25) {
      goto LABEL_83;
    }
  }
  swift_bridgeObjectRelease();
  SyncedLyricsViewController.cancelAnimations()();
  CGFloat v128 = *(double *)(v97 + 16);
  CGFloat v129 = v36 + *(double *)(v97 + 24);
  *(CGFloat *)(v97 + 24) = v129;
  SyncedLyricsViewController.contentOffset(for:)(v128, v129, *(CGFloat *)(v97 + 32), *(CGFloat *)(v97 + 40));
  double v131 = v130;
  if (!v90)
  {
LABEL_101:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    SyncedLyricsViewController.animate(line:to:elapsedTime:tapMode:gap:adjustedContentOffset:)(v160, v145 & 1, v146, v143, 1, 0.0, v131, a8);

    swift_release();
    goto LABEL_116;
  }
  if (v158)
  {
    unint64_t v132 = v90 - 1;
    uint64_t v133 = v148;
  }
  else
  {
    unint64_t v132 = v90 - 1;
    uint64_t v133 = v148;
    if ((unint64_t)(v90 - 1) >= *(void *)((v156 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_121;
    }
  }
  if (v132 < v133[2])
  {
    uint64_t v134 = 0;
    uint64_t v135 = (CGFloat *)(v133 + 7);
    do
    {
      if (v158) {
        id v136 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v136 = *(id *)(v156 + 8 * v134 + 32);
      }
      uint64_t v137 = v136;
      ++v134;
      UIView.untransformedFrame.setter(*(v135 - 3), *(v135 - 2), *(v135 - 1), *v135);

      v135 += 4;
    }
    while (v90 != v134);
    goto LABEL_101;
  }
LABEL_120:
  __break(1u);
LABEL_121:
  __break(1u);
LABEL_122:
  __break(1u);
LABEL_123:
  __break(1u);
}

id closure #2 in SyncedLyricsViewController.animate(line:to:elapsedTime:tapMode:gap:adjustedContentOffset:)(uint64_t a1, CGFloat *a2)
{
  return UIView.untransformedFrame.setter(a2[2], a2[3], a2[4], a2[5]);
}

void closure #3 in SyncedLyricsViewController.animate(line:to:elapsedTime:tapMode:gap:adjustedContentOffset:)(double a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
    if (!v11) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v11 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v11) {
      goto LABEL_10;
    }
  }
  if (v11 < 1)
  {
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
    id v33 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  if ((a3 & 0xC000000000000001) != 0)
  {
    uint64_t v12 = 0;
    do
    {
      specialized _ArrayBuffer._getElementSlowPath(_:)();
      ++v12;
      double v13 = UIView.untransformedFrame.getter();
      UIView.untransformedFrame.setter(v13, v14 + a1, v15, v16);
      swift_unknownObjectRelease();
    }
    while (v11 != v12);
  }
  else
  {
    uint64_t v17 = 0;
    do
    {
      uint64_t v18 = *(void **)(a3 + 8 * v17++ + 32);
      id v19 = v18;
      double v20 = UIView.untransformedFrame.getter();
      UIView.untransformedFrame.setter(v20, v21 + a1, v22, v23);
    }
    while (v11 != v17);
  }
LABEL_10:
  swift_bridgeObjectRelease();
  CGFloat v24 = *(void **)(a4 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView);
  swift_beginAccess();
  objc_msgSend(v24, "setContentOffset:", *(double *)(a5 + 16), *(double *)(a5 + 24));
  *(unsigned char *)(a4 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isAnimating) = 0;
  uint64_t v25 = (void *)(a4 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_currentAnimators);
  swift_beginAccess();
  void *v25 = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  id v26 = *(void **)(a4 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_instrumentalBreakVisibleView);
  if (!v26) {
    return;
  }
  uint64_t v27 = a6[3];
  uint64_t v28 = a6[4];
  __swift_project_boxed_opaque_existential_0Tm(a6, v27);
  CGFloat v29 = *(uint64_t (**)(uint64_t, uint64_t))(v28 + 16);
  a6 = v26;
  unint64_t v30 = v29(v27, v28);
  CGFloat v31 = (uint64_t *)(a4 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews);
  swift_beginAccess();
  uint64_t v32 = *v31;
  if ((v32 & 0xC000000000000001) != 0) {
    goto LABEL_20;
  }
  if ((v30 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  if (v30 >= *(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_22:
    __break(1u);
    return;
  }
  id v33 = *(id *)(v32 + 8 * v30 + 32);
LABEL_15:
  SyncedLyricsViewController.dismissInstrumentalView(_:currentView:)((uint64_t)a6, (uint64_t)v33);
}

uint64_t SyncedLyricsViewController.animateInstrumentalStart(line:contentOffset:visibleViews:timingParameters:duration:deltaY:elapsed:)(void *a1, unint64_t a2, uint64_t a3, double a4, double a5, double a6, double a7, double a8)
{
  unint64_t v11 = a2;
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v57 = _CocoaArrayWrapper.endIndex.getter();
    if (v57)
    {
      swift_bridgeObjectRetain();
      uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
      uint64_t result = swift_bridgeObjectRelease();
LABEL_3:
      uint64_t v54 = v16 - 1;
      if (__OFSUB__(v16, 1))
      {
        __break(1u);
      }
      else if (v57 >= 1)
      {
        uint64_t v17 = &v56[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_currentAnimators];
        unint64_t v51 = v11 & 0xC000000000000001;
        double v52 = (double *)&v56[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs];
        swift_beginAccess();
        uint64_t v18 = 0;
        unint64_t v53 = v11;
        do
        {
          if (v51) {
            id v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v19 = *(id *)(v11 + 8 * v18 + 32);
          }
          double v20 = v19;
          id v21 = [objc_allocWithZone((Class)UIViewPropertyAnimator) initWithDuration:a3 timingParameters:a6];
          outlined init with copy of AlertPresenting((uint64_t)a1, (uint64_t)v65);
          uint64_t v22 = swift_allocObject();
          *(void *)(v22 + 16) = v20;
          outlined init with take of AlertPresenting(v65, v22 + 24);
          *(void *)(v22 + 64) = v56;
          *(double *)(v22 + 72) = a7;
          uint64_t v63 = (uint64_t (**)(void *, void *))partial apply for closure #1 in SyncedLyricsViewController.animateInstrumentalStart(line:contentOffset:visibleViews:timingParameters:duration:deltaY:elapsed:);
          uint64_t v64 = v22;
          CGAffineTransform aBlock = _NSConcreteStackBlock;
          uint64_t v60 = 1107296256;
          int64_t v61 = thunk for @escaping @callee_guaranteed @Sendable () -> ();
          unint64_t v62 = &block_descriptor_98_1;
          CGFloat v23 = _Block_copy(&aBlock);
          CGFloat v24 = v20;
          uint64_t v25 = v56;
          swift_release();
          [v21 addAnimations:v23];
          _Block_release(v23);
          uint64_t v26 = (uint64_t)&v24[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line];
          swift_beginAccess();
          outlined init with copy of AlertPresenting(v26, (uint64_t)&aBlock);
          uint64_t v27 = v62;
          uint64_t v28 = v63;
          __swift_project_boxed_opaque_existential_0Tm(&aBlock, (uint64_t)v62);
          uint64_t v29 = v28[2](v27, v28);
          uint64_t v31 = a1[3];
          uint64_t v30 = a1[4];
          __swift_project_boxed_opaque_existential_0Tm(a1, v31);
          uint64_t v32 = (*(uint64_t (**)(uint64_t, uint64_t))(v30 + 16))(v31, v30);
          __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&aBlock);
          if (v29 == v32)
          {
            id v33 = v21;
            SyncedLyricsViewController.select(line:animator:deselectAll:fadeInInstrumentalView:)(a1, (objc_class *)v21, (uint64_t *)1, 0);

            double v34 = *(void **)&v24[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView];
            if (v34)
            {
              type metadata accessor for SyncedLyricsLineView.InstrumentalContentView();
              uint64_t v35 = swift_dynamicCastClass();
              if (v35)
              {
                uint64_t v50 = v35;
                uint64_t v36 = swift_allocObject();
                *(void *)(v36 + 16) = v25;
                *(void *)(v36 + 24) = v24;
                *(double *)(v36 + 32) = a7;
                uint64_t v63 = (uint64_t (**)(void *, void *))partial apply for closure #2 in SyncedLyricsViewController.animateInstrumentalStart(line:contentOffset:visibleViews:timingParameters:duration:deltaY:elapsed:);
                uint64_t v64 = v36;
                CGAffineTransform aBlock = _NSConcreteStackBlock;
                uint64_t v60 = 1107296256;
                int64_t v61 = thunk for @escaping @callee_guaranteed @Sendable () -> ();
                unint64_t v62 = &block_descriptor_110;
                uint64_t v37 = _Block_copy(&aBlock);
                uint64_t v38 = v24;
                unint64_t v39 = v25;
                id v40 = v34;
                swift_release();
                [v33 addAnimations:v37];
                _Block_release(v37);
                uint64_t v41 = swift_allocObject();
                *(void *)(v41 + 16) = v50;
                *(double *)(v41 + 24) = a8;
                uint64_t v63 = (uint64_t (**)(void *, void *))partial apply for closure #3 in SyncedLyricsViewController.animateInstrumentalStart(line:contentOffset:visibleViews:timingParameters:duration:deltaY:elapsed:);
                uint64_t v64 = v41;
                CGAffineTransform aBlock = _NSConcreteStackBlock;
                uint64_t v60 = 1107296256;
                int64_t v61 = thunk for @escaping @callee_guaranteed (@unowned UIViewAnimatingPosition) -> ();
                unint64_t v62 = &block_descriptor_116;
                uint64_t v42 = _Block_copy(&aBlock);
                id v43 = v40;
                swift_release();
                [v33 addCompletion:v42];
                _Block_release(v42);
              }
            }
          }
          unint64_t v11 = v53;
          if (v54 == v18)
          {
            outlined init with copy of AlertPresenting((uint64_t)a1, (uint64_t)v65);
            uint64_t v44 = swift_allocObject();
            *(void *)(v44 + 16) = v53;
            *(double *)(v44 + 24) = a7;
            *(void *)(v44 + 32) = v24;
            *(void *)(v44 + 40) = v25;
            *(double *)(v44 + 48) = a4;
            *(double *)(v44 + 56) = a5;
            outlined init with take of AlertPresenting(v65, v44 + 64);
            uint64_t v63 = (uint64_t (**)(void *, void *))partial apply for closure #4 in SyncedLyricsViewController.animateInstrumentalStart(line:contentOffset:visibleViews:timingParameters:duration:deltaY:elapsed:);
            uint64_t v64 = v44;
            CGAffineTransform aBlock = _NSConcreteStackBlock;
            uint64_t v60 = 1107296256;
            int64_t v61 = thunk for @escaping @callee_guaranteed (@unowned UIViewAnimatingPosition) -> ();
            unint64_t v62 = &block_descriptor_104;
            double v45 = _Block_copy(&aBlock);
            swift_bridgeObjectRetain();
            double v46 = v24;
            id v47 = v25;
            swift_release();
            [v21 addCompletion:v45];
            _Block_release(v45);
          }
          swift_beginAccess();
          id v48 = v21;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((*(void *)v17 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v17 & 0xFFFFFFFFFFFFFF8)
                                                                                       + 0x18) >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
          swift_endAccess();
          if (v18 <= 1) {
            uint64_t v49 = 1;
          }
          else {
            uint64_t v49 = v18;
          }
          ++v18;
          objc_msgSend(v48, "startAnimationAfterDelay:", v52[18] * (double)(v49 - 1), v50);
        }
        while (v57 != v18);
        return swift_bridgeObjectRelease();
      }
      __break(1u);
      return result;
    }
  }
  else
  {
    uint64_t v14 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v16 = v14;
    uint64_t v57 = v14;
    if (v14) {
      goto LABEL_3;
    }
  }

  return swift_bridgeObjectRelease();
}

id closure #1 in SyncedLyricsViewController.animateInstrumentalStart(line:contentOffset:visibleViews:timingParameters:duration:deltaY:elapsed:)(void *a1, void *a2)
{
  uint64_t v4 = (uint64_t)a1 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line;
  swift_beginAccess();
  outlined init with copy of AlertPresenting(v4, (uint64_t)v12);
  uint64_t v5 = v13;
  uint64_t v6 = v14;
  __swift_project_boxed_opaque_existential_0Tm(v12, v13);
  uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 16))(v5, v6);
  uint64_t v8 = a2[3];
  uint64_t v9 = a2[4];
  __swift_project_boxed_opaque_existential_0Tm(a2, v8);
  uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 16))(v8, v9);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v12);
  if (v10 < v7) {
    swift_beginAccess();
  }
  [a1 frame];
  return objc_msgSend(a1, "setFrame:");
}

id closure #2 in SyncedLyricsViewController.animateInstrumentalStart(line:contentOffset:visibleViews:timingParameters:duration:deltaY:elapsed:)(uint64_t a1, char *a2)
{
  SyncedLyricsViewController.layout(lineView:)(a2);
  uint64_t v3 = (uint64_t)&a2[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line];
  swift_beginAccess();
  outlined init with copy of AlertPresenting(v3, (uint64_t)v8);
  uint64_t v4 = v9;
  uint64_t v5 = v10;
  __swift_project_boxed_opaque_existential_0Tm(v8, v9);
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 16))(v4, v5);
  id result = (id)__swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v8);
  if (!v6)
  {
    [a2 frame];
    return objc_msgSend(a2, "setFrame:");
  }
  return result;
}

uint64_t closure #4 in SyncedLyricsViewController.animateInstrumentalStart(line:contentOffset:visibleViews:timingParameters:duration:deltaY:elapsed:)(double a1, double a2, double a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7)
{
  if (a5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v12 = result;
    if (!result) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v12 = *(void *)((a5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (!v12) {
      goto LABEL_10;
    }
  }
  if (v12 < 1) {
    goto LABEL_26;
  }
  uint64_t v14 = 0;
  do
  {
    if ((a5 & 0xC000000000000001) != 0) {
      id v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v15 = *(id *)(a5 + 8 * v14 + 32);
    }
    uint64_t v16 = v15;
    ++v14;
    [v15 frame];
    objc_msgSend(v16, "setFrame:");
  }
  while (v12 != v14);
LABEL_10:
  swift_bridgeObjectRelease();
  uint64_t v17 = a6 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line;
  swift_beginAccess();
  outlined init with copy of AlertPresenting(v17, (uint64_t)v26);
  uint64_t v18 = v27;
  uint64_t v19 = v28;
  __swift_project_boxed_opaque_existential_0Tm(v26, v27);
  uint64_t v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 16))(v18, v19);
  id v21 = (uint64_t *)(a7 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews);
  uint64_t result = swift_beginAccess();
  if ((unint64_t)*v21 >> 62) {
    goto LABEL_24;
  }
  for (i = *(void *)((*v21 & 0xFFFFFFFFFFFFFF8) + 0x10); i >= v20; uint64_t result = swift_bridgeObjectRelease())
  {
    uint64_t result = __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v26);
    if (v20 == i)
    {
LABEL_13:
      objc_msgSend(*(id *)(a7 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView), "setContentOffset:", a2, a3);
      *(unsigned char *)(a7 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isAnimating) = 0;
      CGFloat v23 = (void *)(a7 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_currentAnimators);
      swift_beginAccess();
      void *v23 = _swiftEmptyArrayStorage;
      return swift_bridgeObjectRelease();
    }
    if (v20 >= i) {
      goto LABEL_27;
    }
    while (1)
    {
      uint64_t v24 = *v21;
      if ((*v21 & 0xC000000000000001) != 0)
      {
        swift_bridgeObjectRetain();
        uint64_t v25 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        swift_bridgeObjectRelease();
        goto LABEL_19;
      }
      if (v20 < 0) {
        break;
      }
      if ((unint64_t)v20 >= *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_23;
      }
      uint64_t v25 = (char *)*(id *)(v24 + 8 * v20 + 32);
LABEL_19:
      ++v20;
      SyncedLyricsViewController.layout(lineView:)(v25);

      if (i == v20) {
        goto LABEL_13;
      }
    }
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    swift_bridgeObjectRetain();
    uint64_t i = _CocoaArrayWrapper.endIndex.getter();
  }
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t SyncedLyricsViewController.animateInstrumentalEnd(line:contentOffset:visibleViews:timingParameters:duration:deltaY:)(void *a1, unint64_t a2, uint64_t a3, double a4, double a5, double a6, double a7)
{
  unint64_t v9 = a2;
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v44 = _CocoaArrayWrapper.endIndex.getter();
    if (v44)
    {
      swift_bridgeObjectRetain();
      uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
      uint64_t result = swift_bridgeObjectRelease();
LABEL_3:
      uint64_t v41 = v15 - 1;
      if (__OFSUB__(v15, 1))
      {
        __break(1u);
      }
      else if (v44 >= 1)
      {
        uint64_t v16 = &v43[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_currentAnimators];
        unint64_t v38 = v9 & 0xC000000000000001;
        unint64_t v39 = (double *)&v43[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs];
        swift_beginAccess();
        uint64_t v17 = 0;
        unint64_t v40 = v9;
        do
        {
          if (v38) {
            id v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v18 = *(id *)(v9 + 8 * v17 + 32);
          }
          uint64_t v19 = v18;
          id v20 = [objc_allocWithZone((Class)UIViewPropertyAnimator) initWithDuration:a3 timingParameters:a6];
          outlined init with copy of AlertPresenting((uint64_t)a1, (uint64_t)v51);
          uint64_t v21 = swift_allocObject();
          *(void *)(v21 + 16) = v19;
          outlined init with take of AlertPresenting(v51, v21 + 24);
          *(double *)(v21 + 64) = a7;
          *(void *)(v21 + 72) = v43;
          uint64_t v49 = (uint64_t (**)(void *, void *))partial apply for closure #1 in SyncedLyricsViewController.animateInstrumentalEnd(line:contentOffset:visibleViews:timingParameters:duration:deltaY:);
          uint64_t v50 = v21;
          CGAffineTransform aBlock = _NSConcreteStackBlock;
          uint64_t v46 = 1107296256;
          id v47 = thunk for @escaping @callee_guaranteed @Sendable () -> ();
          id v48 = &block_descriptor_86;
          uint64_t v22 = _Block_copy(&aBlock);
          id v23 = v19;
          uint64_t v24 = v43;
          swift_release();
          [v20 addAnimations:v22];
          _Block_release(v22);
          uint64_t v25 = (uint64_t)v23 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line;
          swift_beginAccess();
          outlined init with copy of AlertPresenting(v25, (uint64_t)&aBlock);
          uint64_t v26 = v48;
          uint64_t v27 = v49;
          __swift_project_boxed_opaque_existential_0Tm(&aBlock, (uint64_t)v48);
          uint64_t v28 = v27[2](v26, v27);
          uint64_t v30 = a1[3];
          uint64_t v29 = a1[4];
          __swift_project_boxed_opaque_existential_0Tm(a1, v30);
          uint64_t v31 = (*(uint64_t (**)(uint64_t, uint64_t))(v29 + 16))(v30, v29);
          __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&aBlock);
          if (v28 == v31)
          {
            id v32 = v20;
            SyncedLyricsViewController.select(line:animator:deselectAll:fadeInInstrumentalView:)(a1, (objc_class *)v20, (uint64_t *)1, 1);
          }
          unint64_t v9 = v40;
          if (v41 == v17)
          {
            outlined init with copy of AlertPresenting((uint64_t)a1, (uint64_t)v51);
            uint64_t v33 = swift_allocObject();
            *(void *)(v33 + 16) = v40;
            *(void *)(v33 + 24) = v24;
            *(double *)(v33 + 32) = a4;
            *(double *)(v33 + 40) = a5;
            outlined init with take of AlertPresenting(v51, v33 + 48);
            uint64_t v49 = (uint64_t (**)(void *, void *))partial apply for closure #2 in SyncedLyricsViewController.animateInstrumentalEnd(line:contentOffset:visibleViews:timingParameters:duration:deltaY:);
            uint64_t v50 = v33;
            CGAffineTransform aBlock = _NSConcreteStackBlock;
            uint64_t v46 = 1107296256;
            id v47 = thunk for @escaping @callee_guaranteed (@unowned UIViewAnimatingPosition) -> ();
            id v48 = &block_descriptor_92_0;
            double v34 = _Block_copy(&aBlock);
            swift_bridgeObjectRetain();
            uint64_t v35 = v24;
            swift_release();
            [v20 addCompletion:v34];
            _Block_release(v34);
          }
          swift_beginAccess();
          id v36 = v20;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((*(void *)v16 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v16 & 0xFFFFFFFFFFFFFF8)
                                                                                       + 0x18) >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
          swift_endAccess();
          if (v17 <= 1) {
            uint64_t v37 = 1;
          }
          else {
            uint64_t v37 = v17;
          }
          ++v17;
          objc_msgSend(v36, "startAnimationAfterDelay:", v39[18] * (double)(v37 - 1), v38);
        }
        while (v44 != v17);
        return swift_bridgeObjectRelease();
      }
      __break(1u);
      return result;
    }
  }
  else
  {
    uint64_t v13 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v15 = v13;
    uint64_t v44 = v13;
    if (v13) {
      goto LABEL_3;
    }
  }

  return swift_bridgeObjectRelease();
}

id closure #1 in SyncedLyricsViewController.animateInstrumentalEnd(line:contentOffset:visibleViews:timingParameters:duration:deltaY:)(void *a1, void *a2)
{
  uint64_t v4 = (uint64_t)a1 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line;
  swift_beginAccess();
  outlined init with copy of AlertPresenting(v4, (uint64_t)v12);
  uint64_t v5 = v13;
  uint64_t v6 = v14;
  __swift_project_boxed_opaque_existential_0Tm(v12, v13);
  uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 16))(v5, v6);
  uint64_t v8 = a2[3];
  uint64_t v9 = a2[4];
  __swift_project_boxed_opaque_existential_0Tm(a2, v8);
  uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 16))(v8, v9);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v12);
  if (v7 < v10) {
    swift_beginAccess();
  }
  [a1 frame];
  return objc_msgSend(a1, "setFrame:");
}

uint64_t closure #2 in SyncedLyricsViewController.animateInstrumentalEnd(line:contentOffset:visibleViews:timingParameters:duration:deltaY:)(double a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if ((a4 & 0xC000000000000001) != 0) {
    goto LABEL_18;
  }
  if (*(void *)((a4 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v10 = *(id *)(a4 + 32);
    goto LABEL_4;
  }
  __break(1u);
  do
  {
    swift_bridgeObjectRetain();
    uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    if (v16 < v5) {
      goto LABEL_21;
    }
LABEL_6:
    uint64_t result = __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v20);
    if (v5 == v16)
    {
LABEL_7:
      objc_msgSend(*(id *)(a5 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView), "setContentOffset:", a1, a2);
      *(unsigned char *)(a5 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isAnimating) = 0;
      uint64_t v17 = (void *)(a5 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_currentAnimators);
      swift_beginAccess();
      *uint64_t v17 = _swiftEmptyArrayStorage;
      return swift_bridgeObjectRelease();
    }
    if (v5 >= v16) {
      goto LABEL_22;
    }
    while (1)
    {
      uint64_t v18 = *v6;
      if ((*v6 & 0xC000000000000001) != 0)
      {
        swift_bridgeObjectRetain();
        uint64_t v19 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        swift_bridgeObjectRelease();
        goto LABEL_13;
      }
      if (v5 < 0) {
        break;
      }
      if ((unint64_t)v5 >= *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_17;
      }
      uint64_t v19 = (char *)*(id *)(v18 + 8 * v5 + 32);
LABEL_13:
      ++v5;
      SyncedLyricsViewController.layout(lineView:)(v19);

      if (v16 == v5) {
        goto LABEL_7;
      }
    }
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_4:
    unint64_t v11 = v10;
    uint64_t v12 = (uint64_t)v10 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line;
    swift_beginAccess();
    outlined init with copy of AlertPresenting(v12, (uint64_t)v20);

    uint64_t v13 = v21;
    uint64_t v14 = v22;
    __swift_project_boxed_opaque_existential_0Tm(v20, v21);
    uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 16))(v13, v14);
    uint64_t v6 = (uint64_t *)(a5 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews);
    uint64_t result = swift_beginAccess();
  }
  while ((unint64_t)*v6 >> 62);
  uint64_t v16 = *(void *)((*v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v16 >= v5) {
    goto LABEL_6;
  }
LABEL_21:
  __break(1u);
LABEL_22:
  __break(1u);
  return result;
}

void SyncedLyricsViewController.dismissInstrumentalView(_:currentView:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView;
  [*(id *)(v3 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView) contentOffset];
  CGFloat v8 = v7;
  CGFloat v10 = v9;
  id v11 = [(id)v3 view];
  if (!v11)
  {
    __break(1u);
    goto LABEL_67;
  }
  uint64_t v12 = v11;
  [v11 frame];
  CGFloat v14 = v13;

  uint64_t v15 = (double *)(v3 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight);
  swift_beginAccess();
  CGFloat v16 = *v15;
  if (*v15 > 0.0) {
    goto LABEL_5;
  }
  id v17 = [(id)v3 view];
  if (!v17)
  {
LABEL_67:
    __break(1u);
    return;
  }
  uint64_t v18 = v17;
  [v17 frame];
  CGFloat v16 = v19;

LABEL_5:
  uint64_t v20 = a2 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line;
  swift_beginAccess();
  outlined init with copy of AlertPresenting(v20, (uint64_t)aBlock);
  unint64_t v21 = SyncedLyricsViewController.lineViews(in:startingAt:)(aBlock, v8, v10, v14, v16);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)aBlock);
  uint64_t v22 = a1 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line;
  swift_beginAccess();
  outlined init with copy of AlertPresenting(v22, (uint64_t)aBlock);
  id v23 = v72;
  uint64_t v24 = v73;
  __swift_project_boxed_opaque_existential_0Tm(aBlock, (uint64_t)v72);
  uint64_t v67 = (*((uint64_t (**)(void *, void (*)()))v24 + 2))(v23, v24);
  outlined init with copy of AlertPresenting(v20, (uint64_t)v75);
  uint64_t v25 = v76;
  uint64_t v26 = v77;
  __swift_project_boxed_opaque_existential_0Tm(v75, v76);
  uint64_t v66 = (*(uint64_t (**)(uint64_t, uint64_t))(v26 + 16))(v25, v26);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v75);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)aBlock);
  outlined init with copy of AlertPresenting(v22, (uint64_t)aBlock);
  uint64_t v27 = v72;
  uint64_t v28 = v73;
  __swift_project_boxed_opaque_existential_0Tm(aBlock, (uint64_t)v72);
  uint64_t v29 = (*((uint64_t (**)(void *, void (*)()))v28 + 2))(v27, v28);
  uint64_t v30 = (uint64_t *)(v3 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews);
  swift_beginAccess();
  uint64_t v70 = v30;
  uint64_t v61 = v6;
  if ((unint64_t)*v30 >> 62) {
    goto LABEL_63;
  }
  uint64_t v31 = *(void *)((*v30 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v31 >= v29) {
    goto LABEL_7;
  }
LABEL_64:
  __break(1u);
LABEL_65:
  swift_bridgeObjectRetain();
  uint64_t v34 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  while (1)
  {
    uint64_t v63 = (void *)(v3 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_currentAnimators);
    uint64_t v35 = v3 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs;
    swift_beginAccess();
    uint64_t v62 = v35;
    swift_beginAccess();
    uint64_t v65 = 0;
    if (v29 <= v31) {
      uint64_t v36 = v31;
    }
    else {
      uint64_t v36 = v29;
    }
    unint64_t v68 = v21 & 0xC000000000000001;
    uint64_t v69 = v36;
    uint64_t v64 = v3;
    while (1)
    {
      if (v29 == v69)
      {
        __break(1u);
LABEL_58:
        __break(1u);
LABEL_59:
        __break(1u);
        goto LABEL_60;
      }
      uint64_t v37 = *v70;
      if ((*v70 & 0xC000000000000001) != 0)
      {
        swift_bridgeObjectRetain();
        id v38 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        swift_bridgeObjectRelease();
        if (!v34) {
          goto LABEL_18;
        }
      }
      else
      {
        if (v29 < 0) {
          goto LABEL_58;
        }
        if ((unint64_t)v29 >= *(void *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_59;
        }
        id v38 = *(id *)(v37 + 8 * v29 + 32);
        if (!v34) {
          goto LABEL_18;
        }
      }
      uint64_t v39 = v31;
      if (v68)
      {
        swift_bridgeObjectRetain();
        id v41 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        unint64_t v40 = *(void **)(v21 + 32);
        swift_bridgeObjectRetain();
        id v41 = v40;
      }
      uint64_t v42 = v41;
      type metadata accessor for SyncedLyricsLineView();
      char v43 = static NSObject.== infix(_:_:)();

      if ((v43 & 1) == 0) {
        break;
      }
      swift_bridgeObjectRelease();
LABEL_29:
      uint64_t v31 = v39;
LABEL_30:
      if (v66 >= v67) {
        goto LABEL_18;
      }
      id v44 = objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 100.0, 18.0, 0.0, 0.0);
      type metadata accessor for UIMenu(0, (unint64_t *)&lazy cache variable for type metadata for UIViewPropertyAnimator);
      Class isa = UIViewPropertyAnimator.init(springTimingParameters:)((UISpringTimingParameters)v44).super.isa;
      uint64_t v46 = swift_allocObject();
      *(void *)(v46 + 16) = v3;
      *(void *)(v46 + 24) = v38;
      uint64_t v73 = partial apply for closure #1 in SyncedLyricsViewController.dismissInstrumentalView(_:currentView:);
      uint64_t v74 = v46;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = thunk for @escaping @callee_guaranteed @Sendable () -> ();
      uint64_t v72 = &block_descriptor_62;
      id v47 = _Block_copy(aBlock);
      id v48 = (id)v3;
      id v49 = v38;
      swift_release();
      [(objc_class *)isa addAnimations:v47];
      _Block_release(v47);
      swift_beginAccess();
      uint64_t v50 = isa;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((*v63 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v63 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      swift_endAccess();
      uint64_t v51 = v65;
      [(objc_class *)v50 startAnimationAfterDelay:*(double *)(v62 + 144) * (double)v65];

      ++v65;
      if (__OFADD__(v51, 1)) {
        goto LABEL_62;
      }
LABEL_19:
      if (++v29 == v31) {
        goto LABEL_8;
      }
    }
    uint64_t v31 = v39;
    if (v34 == 1) {
      goto LABEL_17;
    }
    if (v68)
    {
      specialized _ArrayBuffer._getElementSlowPath(_:)();
      char v52 = static NSObject.== infix(_:_:)();
      swift_unknownObjectRelease();
      if ((v52 & 1) == 0)
      {
        if (v34 == 2)
        {
LABEL_17:
          swift_bridgeObjectRelease();
LABEL_18:
          SyncedLyricsViewController.layout(lineView:)((char *)v38);

          goto LABEL_19;
        }
        uint64_t v53 = 2;
        while (1)
        {
          specialized _ArrayBuffer._getElementSlowPath(_:)();
          uint64_t v54 = v53 + 1;
          if (__OFADD__(v53, 1)) {
            break;
          }
          char v55 = static NSObject.== infix(_:_:)();
          swift_unknownObjectRelease();
          if (v55) {
            goto LABEL_53;
          }
          ++v53;
          uint64_t v3 = v64;
          if (v54 == v34)
          {
            swift_bridgeObjectRelease();
            uint64_t v31 = v39;
            goto LABEL_18;
          }
        }
LABEL_60:
        __break(1u);
        goto LABEL_61;
      }
LABEL_46:
      swift_bridgeObjectRelease();
      goto LABEL_30;
    }
    id v56 = *(id *)(v21 + 40);
    char v57 = static NSObject.== infix(_:_:)();

    if (v57) {
      goto LABEL_46;
    }
    if (v34 == 2) {
      goto LABEL_17;
    }
    uint64_t v3 = 6;
    while (1)
    {
      uint64_t v58 = v3 - 3;
      if (__OFADD__(v3 - 4, 1)) {
        break;
      }
      id v59 = *(id *)(v21 + 8 * v3);
      char v60 = static NSObject.== infix(_:_:)();

      if (v60)
      {
LABEL_53:
        swift_bridgeObjectRelease();
        uint64_t v3 = v64;
        goto LABEL_29;
      }
      ++v3;
      if (v58 == v34)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v64;
        uint64_t v31 = v39;
        goto LABEL_18;
      }
    }
LABEL_61:
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    swift_bridgeObjectRetain();
    uint64_t v31 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v31 < v29) {
      goto LABEL_64;
    }
LABEL_7:
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)aBlock);
    if (v29 == v31) {
      break;
    }
    if (v21 >> 62) {
      goto LABEL_65;
    }
    uint64_t v34 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
LABEL_8:
  swift_bridgeObjectRelease();
  if (v66 >= v67)
  {
    id v32 = *(void **)(v3 + v61);
    swift_beginAccess();
    id v33 = v32;
    [v33 contentOffset];
    objc_msgSend(v33, "setContentOffset:");
  }
}

uint64_t SyncedLyricsViewController.cancelAnimations()()
{
  unint64_t v1 = (unint64_t *)(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_currentAnimators);
  swift_beginAccess();
  unint64_t v2 = *v1;
  if (!(v2 >> 62))
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v3) {
      goto LABEL_3;
    }
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v3 = result;
  if (!result) {
    return swift_bridgeObjectRelease();
  }
LABEL_3:
  if (v3 >= 1)
  {
    for (uint64_t i = 0; i != v3; ++i)
    {
      if ((v2 & 0xC000000000000001) != 0) {
        id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v6 = *(id *)(v2 + 8 * i + 32);
      }
      double v7 = v6;
      if ([v6 state] == (id)1)
      {
        [v7 stopAnimation:0];
        [v7 finishAnimationAtPosition:0];
      }
    }
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

id Card.ViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  if (a2)
  {
    NSString v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v6 = 0;
  }
  id v7 = [objc_allocWithZone(v4) initWithNibName:v6 bundle:a3];

  return v7;
}

id SyncedLyricsViewController.init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  v3[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isPlayingSpatial] = 0;
  v3[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isFullScreen] = 0;
  uint64_t v6 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_bottomTapAreaHeight;
  double v7 = Int.seconds.getter(0);
  *(double *)&v3[v6] = v7;
  *(double *)&v3[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight] = v7;
  CGFloat v8 = &v3[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs];
  double v9 = v3;
  specialized SyncedLyricsViewController.Specs.init(_:)(0, __src);
  memcpy(v8, __src, 0x219uLL);
  *(void *)&v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode] = 0;
  *(void *)&v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics] = 0;
  CGFloat v10 = &v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_timingProvider];
  *(_OWORD *)CGFloat v10 = 0u;
  *((_OWORD *)v10 + 1) = 0u;
  *((void *)v10 + 4) = 0;
  id v11 = &v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_shareHandler];
  *id v11 = 0;
  v11[1] = 0;
  uint64_t v12 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView;
  *(void *)&v9[v12] = [objc_allocWithZone((Class)UIScrollView) init];
  *(void *)&v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager] = 0;
  *(void *)&v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_displayLink] = 0;
  *(void *)&v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews] = _swiftEmptyArrayStorage;
  *(void *)&v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_selectedLineViews] = _swiftEmptyArrayStorage;
  *(void *)&v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_blurredLineViews] = &_swiftEmptySetSingleton;
  *(void *)&v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_instrumentalBreakVisibleView] = 0;
  uint64_t v13 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_tapFeedbackGenerator;
  *(void *)&v9[v13] = [objc_allocWithZone((Class)UISelectionFeedbackGenerator) init];
  *(void *)&v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_currentAnimators] = _swiftEmptyArrayStorage;
  v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isAnimating] = 0;
  v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_needsTapHandling] = 0;
  v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isBackgrounded] = 0;
  CGFloat v14 = &v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_previousBounds];
  _OWORD *v14 = 0u;
  v14[1] = 0u;
  *(void *)&v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_allowAnimateToNextLineAfterScrollTimer] = 0;
  v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_allowAnimateToNextLineAfterScroll] = 1;

  if (a2)
  {
    NSString v15 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v15 = 0;
  }
  v18.receiver = v9;
  v18.super_class = (Class)type metadata accessor for SyncedLyricsViewController();
  id v16 = objc_msgSendSuper2(&v18, "initWithNibName:bundle:", v15, a3);

  return v16;
}

id SyncedLyricsViewController.init(coder:)(void *a1)
{
  v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isPlayingSpatial] = 0;
  v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isFullScreen] = 0;
  uint64_t v3 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_bottomTapAreaHeight;
  double v4 = Int.seconds.getter(0);
  *(double *)&v1[v3] = v4;
  *(double *)&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight] = v4;
  uint64_t v5 = &v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs];
  uint64_t v6 = v1;
  specialized SyncedLyricsViewController.Specs.init(_:)(0, __src);
  memcpy(v5, __src, 0x219uLL);
  *(void *)&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode] = 0;
  *(void *)&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics] = 0;
  double v7 = &v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_timingProvider];
  *(_OWORD *)double v7 = 0u;
  *((_OWORD *)v7 + 1) = 0u;
  *((void *)v7 + 4) = 0;
  CGFloat v8 = &v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_shareHandler];
  *CGFloat v8 = 0;
  v8[1] = 0;
  uint64_t v9 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView;
  *(void *)&v6[v9] = [objc_allocWithZone((Class)UIScrollView) init];
  *(void *)&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager] = 0;
  *(void *)&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_displayLink] = 0;
  *(void *)&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews] = _swiftEmptyArrayStorage;
  *(void *)&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_selectedLineViews] = _swiftEmptyArrayStorage;
  *(void *)&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_blurredLineViews] = &_swiftEmptySetSingleton;
  *(void *)&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_instrumentalBreakVisibleView] = 0;
  uint64_t v10 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_tapFeedbackGenerator;
  *(void *)&v6[v10] = [objc_allocWithZone((Class)UISelectionFeedbackGenerator) init];
  *(void *)&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_currentAnimators] = _swiftEmptyArrayStorage;
  v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isAnimating] = 0;
  v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_needsTapHandling] = 0;
  v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isBackgrounded] = 0;
  id v11 = &v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_previousBounds];
  *id v11 = 0u;
  v11[1] = 0u;
  *(void *)&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_allowAnimateToNextLineAfterScrollTimer] = 0;
  v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_allowAnimateToNextLineAfterScroll] = 1;

  v14.receiver = v6;
  v14.super_class = (Class)type metadata accessor for SyncedLyricsViewController();
  id v12 = objc_msgSendSuper2(&v14, "initWithCoder:", a1);

  return v12;
}

id SyncedLyricsViewController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SyncedLyricsViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

void SyncedLyricsViewController.syncedLyrics(_:animateTo:elapsedTime:gap:)(double a1, uint64_t a2, void *a3, uint64_t a4, char a5)
{
}

void SyncedLyricsViewController.syncedLyrics(_:jumpTo:select:elapsedTime:)(double a1, uint64_t a2, void *a3, int a4)
{
}

void SyncedLyricsViewController.syncedLyrics(_:update:elapsedTime:)(Swift::Double a1, uint64_t a2, void *a3)
{
}

void SyncedLyricsViewController.syncedLyrics(_:select:)(uint64_t a1, void *a2)
{
}

unint64_t closure #2 in SyncedLyricsViewController.syncedLyrics(_:animateTo:elapsedTime:gap:)()
{
  unint64_t result = (unint64_t)SyncedLyricsViewController.visibleLineViews.getter();
  unint64_t v1 = result;
  if (result >> 62)
  {
    unint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v2 = result;
    if (!result) {
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v2) {
      goto LABEL_8;
    }
  }
  if (v2 < 1)
  {
    __break(1u);
    return result;
  }
  long long v23 = 0u;
  long long v24 = 0u;
  char v25 = 1;
  if ((v1 & 0xC000000000000001) != 0) {
    uint64_t v3 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else {
    uint64_t v3 = (char *)*(id *)(v1 + 32);
  }
  double v4 = v3;
  SyncedLyricsViewController.frame(for:selected:previousViewFrame:)(v3, 2u, (uint64_t)&v23);
  CGFloat v6 = v5;
  CGFloat v8 = v7;
  CGFloat v10 = v9;
  CGFloat v12 = v11;
  uint64_t v13 = v4;
  UIView.untransformedFrame.setter(v6, v8, v10, v12);

  uint64_t v14 = v2 - 1;
  if (v2 != 1)
  {
    uint64_t v15 = 0;
    do
    {
      *(CGFloat *)&long long v23 = v6;
      *((CGFloat *)&v23 + 1) = v8;
      *(CGFloat *)&long long v24 = v10;
      *((CGFloat *)&v24 + 1) = v12;
      char v25 = 0;
      if ((v1 & 0xC000000000000001) != 0) {
        id v16 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v16 = (char *)*(id *)(v1 + 8 * v15 + 40);
      }
      id v17 = v16;
      SyncedLyricsViewController.frame(for:selected:previousViewFrame:)(v16, 2u, (uint64_t)&v23);
      CGFloat v6 = v18;
      CGFloat v8 = v19;
      CGFloat v10 = v20;
      CGFloat v12 = v21;
      uint64_t v22 = v17;
      UIView.untransformedFrame.setter(v6, v8, v10, v12);

      ++v15;
    }
    while (v14 != v15);
  }
LABEL_8:

  return swift_bridgeObjectRelease();
}

uint64_t closure #3 in SyncedLyricsViewController.syncedLyrics(_:animateTo:elapsedTime:gap:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (unint64_t *)(a2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_currentAnimators);
  uint64_t result = swift_beginAccess();
  unint64_t v5 = *v3;
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  *(unsigned char *)(a2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isAnimating) = v6 > 0;
  return result;
}

void SyncedLyricsViewController.syncedLyrics(_:finish:)(uint64_t a1, uint64_t a2)
{
}

Swift::Bool __swiftcall SyncedLyricsViewController.gestureRecognizer(_:shouldReceive:)(UIGestureRecognizer _, UITouch shouldReceive)
{
  return specialized SyncedLyricsViewController.gestureRecognizer(_:shouldReceive:)(shouldReceive.super.isa);
}

Swift::Void __swiftcall SyncedLyricsViewController.scrollViewWillBeginDragging(_:)(UIScrollView a1)
{
  SyncedLyricsViewController.removeAllBlurs()();
  SyncedLyricsViewController.cancelAnimations()();
  *(unsigned char *)(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_allowAnimateToNextLineAfterScroll) = 0;
  uint64_t v2 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_allowAnimateToNextLineAfterScrollTimer;
  [*(id *)(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_allowAnimateToNextLineAfterScrollTimer) invalidate];
  uint64_t v3 = *(void **)(v1 + v2);
  *(void *)(v1 + v2) = 0;
}

void closure #1 in SyncedLyricsViewController.scrollViewDidEndDragging(_:willDecelerate:)()
{
  swift_beginAccess();
  uint64_t Strong = (unsigned char *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    Strong[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_allowAnimateToNextLineAfterScroll] = 1;
  }
}

uint64_t _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTRyt_Tg5_0(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  double v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *double v4 = v2;
  v4[1] = _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTRyt_Tg5TQ0__0;
  return v6(a1);
}

id specialized closure #1 in SyncedLyricsViewController.viewDidLoad()()
{
  return SyncedLyricsViewController.updateBlur(views:)(0);
}

uint64_t sub_100341D2C()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t partial apply for closure #2 in SyncedLyricsViewController.viewDidLoad()(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  CGFloat v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *CGFloat v8 = v2;
  v8[1] = partial apply for closure #1 in static MusicEngagementExtension.performRequest(with:completion:);
  return closure #2 in SyncedLyricsViewController.viewDidLoad()(a1, v4, v5, v7, v6);
}

uint64_t objectdestroy_5Tm_1()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t partial apply for closure #3 in SyncedLyricsViewController.viewDidLoad()(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  CGFloat v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *CGFloat v8 = v2;
  v8[1] = closure #3 in static Actions.ReportConcern.action(context:);
  return closure #3 in SyncedLyricsViewController.viewDidLoad()(a1, v4, v5, v7, v6);
}

uint64_t sub_100341F88()
{
  return swift_deallocObject();
}

uint64_t partial apply for specialized closure #1 in SyncedLyricsViewController.presentSharing()()
{
  return SyncedLyricsViewController.startSharing(from:)(*(char **)(v0 + 24));
}

void *_sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSay11MusicCoreUI20SyncedLyricsLineViewCG_AH04lineJ0_Sb7visiblets5NeverOTg504_s11de4UI20ghij36CACSbIggod_A2C04lineG0_Sb7visiblets5M11OIegnrzr_TRA2HSbIggod_Tf1cn_nTf4ng_n(unint64_t a1, uint64_t (*a2)(void))
{
  unint64_t v2 = a1;
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (!v3) {
      return _swiftEmptyArrayStorage;
    }
    uint64_t result = specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, v3 & ~(v3 >> 63), 0);
    if (v3 < 0) {
      break;
    }
    uint64_t v5 = 0;
    unint64_t v15 = v2 & 0xC000000000000001;
    unint64_t v6 = v2;
    while (v3 != v5)
    {
      if (v15) {
        id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v7 = *(id *)(v2 + 8 * v5 + 32);
      }
      CGFloat v8 = v7;
      uint64_t v9 = a2();
      char v11 = v10;

      unint64_t v13 = _swiftEmptyArrayStorage[2];
      unint64_t v12 = _swiftEmptyArrayStorage[3];
      if (v13 >= v12 >> 1) {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)((void *)(v12 > 1), v13 + 1, 1);
      }
      ++v5;
      _swiftEmptyArrayStorage[2] = v13 + 1;
      uint64_t v14 = &_swiftEmptyArrayStorage[2 * v13];
      v14[4] = v9;
      *((unsigned char *)v14 + 40) = v11 & 1;
      unint64_t v2 = v6;
      if (v3 == v5) {
        return _swiftEmptyArrayStorage;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t specialized Sequence.contains(where:)(unint64_t a1, char *a2)
{
  if (!(a1 >> 62))
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4) {
      goto LABEL_3;
    }
LABEL_14:
    swift_bridgeObjectRelease();
    return 0;
  }
LABEL_17:
  swift_bridgeObjectRetain();
  uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
  if (!v4) {
    goto LABEL_14;
  }
LABEL_3:
  uint64_t v30 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView;
  uint64_t v5 = (CGFloat *)&a2[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight];
  swift_beginAccess();
  uint64_t v6 = 4;
  while (1)
  {
    if ((a1 & 0xC000000000000001) != 0) {
      id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v7 = *(id *)(a1 + 8 * v6);
    }
    CGFloat v8 = v7;
    uint64_t v9 = v6 - 3;
    if (__OFADD__(v6 - 4, 1))
    {
      __break(1u);
      goto LABEL_17;
    }
    [v7 frame];
    CGFloat v11 = v10;
    CGFloat v13 = v12;
    CGFloat v15 = v14;
    CGFloat v17 = v16;
    [*(id *)&a2[v30] contentOffset];
    CGFloat v19 = v18;
    CGFloat v21 = v20;
    uint64_t result = (uint64_t)[a2 view];
    if (!result) {
      break;
    }
    long long v23 = (void *)result;
    [(id)result frame];
    CGFloat v25 = v24;

    CGFloat v26 = *v5;
    if (*v5 <= 0.0)
    {
      uint64_t result = (uint64_t)[a2 view];
      if (!result) {
        goto LABEL_20;
      }
      uint64_t v27 = (void *)result;
      [(id)result frame];
      CGFloat v26 = v28;
    }
    v31.origin.CGFloat x = v11;
    v31.origin.CGFloat y = v13;
    v31.size.width = v15;
    v31.size.CGFloat height = v17;
    v32.origin.CGFloat x = v19;
    v32.origin.CGFloat y = v21;
    v32.size.width = v25;
    v32.size.CGFloat height = v26;
    BOOL v29 = CGRectIntersectsRect(v31, v32);

    if (v29)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    ++v6;
    if (v9 == v4) {
      goto LABEL_14;
    }
  }
  __break(1u);
LABEL_20:
  __break(1u);
  return result;
}

void specialized SyncedLyricsViewController.syncedLyrics(_:animateTo:elapsedTime:gap:)(void *a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v6 = v4;
  uint64_t v11 = a1[3];
  uint64_t v12 = a1[4];
  __swift_project_boxed_opaque_existential_0Tm(a1, v11);
  unint64_t v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 16))(v11, v12);
  double v14 = &v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews];
  swift_beginAccess();
  uint64_t v15 = *(void *)v14;
  double v70 = a4;
  if ((*(void *)v14 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    unint64_t v13 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  if ((v13 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_27;
  }
  if (v13 >= *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  unint64_t v13 = (unint64_t)*(id *)(v15 + 8 * v13 + 32);
LABEL_6:
  objc_msgSend((id)v13, "frame", *(void *)&a4);
  CGFloat v17 = v16;
  CGFloat v19 = v18;
  CGFloat v21 = v20;
  CGFloat v23 = v22;
  uint64_t v24 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView;
  [*(id *)&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView] contentOffset];
  CGFloat v26 = v25;
  CGFloat v28 = v27;
  id v29 = [v6 view];
  if (!v29)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  uint64_t v30 = v29;
  [v29 frame];
  CGFloat v32 = v31;

  id v33 = (CGFloat *)&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight];
  swift_beginAccess();
  CGFloat v34 = *v33;
  if (*v33 <= 0.0)
  {
    id v35 = [v6 view];
    if (!v35)
    {
LABEL_32:
      __break(1u);
      return;
    }
    uint64_t v36 = v35;
    [v35 frame];
    CGFloat v34 = v37;
  }
  char v5 = a3 & 1;
  v77.origin.CGFloat x = v17;
  v77.origin.CGFloat y = v19;
  v77.size.width = v21;
  v77.size.CGFloat height = v23;
  v78.origin.CGFloat x = v26;
  v78.origin.CGFloat y = v28;
  v78.size.width = v32;
  v78.size.CGFloat height = v34;
  if (CGRectIntersectsRect(v77, v78))
  {
    int v38 = 0;
  }
  else
  {
    swift_beginAccess();
    uint64_t v39 = v6;
    unint64_t v40 = swift_bridgeObjectRetain();
    int v41 = specialized Sequence.contains(where:)(v40, v39);

    swift_bridgeObjectRelease();
    int v38 = v41 ^ 1;
  }
  uint64_t v42 = &v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode];
  swift_beginAccess();
  if (*v42 != 2
    && (([*(id *)&v6[v24] isDragging] | v38) & 1) == 0
    && v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_allowAnimateToNextLineAfterScroll] == 1)
  {
    a3 = v13 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line;
    swift_beginAccess();
    outlined init with copy of AlertPresenting(a3, (uint64_t)&aBlock);
    char v43 = v74;
    id v44 = v75;
    __swift_project_boxed_opaque_existential_0Tm(&aBlock, (uint64_t)v74);
    unint64_t v45 = (*((uint64_t (**)(void *, uint64_t (*)()))v44 + 2))(v43, v44);
    uint64_t v46 = *(void *)v14;
    if ((*(void *)v14 & 0xC000000000000001) == 0)
    {
      if ((v45 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (v45 < *(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        id v47 = *(id *)(v46 + 8 * v45 + 32);
LABEL_20:
        id v48 = v47;
        double v49 = UIView.untransformedFrame.getter();
        CGFloat v51 = v50;
        CGFloat v53 = v52;
        CGFloat v55 = v54;

        SyncedLyricsViewController.contentOffset(for:)(v49, v51, v53, v55);
        double v57 = v56;

        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&aBlock);
        outlined init with copy of AlertPresenting(a3, (uint64_t)&aBlock);
        uint64_t v58 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_needsTapHandling;
        SyncedLyricsViewController.animate(line:to:elapsedTime:tapMode:gap:adjustedContentOffset:)((unint64_t)&aBlock, v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_needsTapHandling], a2, v5, 0, 0.0, v57, v70);

        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&aBlock);
        v6[v58] = 0;
        return;
      }
      __break(1u);
      goto LABEL_31;
    }
LABEL_28:
    swift_bridgeObjectRetain();
    id v47 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  id v59 = &v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics];
  swift_beginAccess();
  if (*(void *)v59 && *(unsigned char *)(*(void *)v59 + 56) == 2) {
    char v60 = (objc_class *)specialized static SyncedLyricsViewController.Specs.syllableBySyllableLineChangeSpringTimingParameters(gap:)(a2, v5);
  }
  else {
    char v60 = (objc_class *)objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 100.0, 18.0, 0.0, 0.0);
  }
  v61.super.Class isa = v60;
  type metadata accessor for UIMenu(0, (unint64_t *)&lazy cache variable for type metadata for UIViewPropertyAnimator);
  Class isa = UIViewPropertyAnimator.init(springTimingParameters:)(v61).super.isa;
  SyncedLyricsViewController.select(line:animator:deselectAll:fadeInInstrumentalView:)(a1, isa, (uint64_t *)1, 1);
  uint64_t v63 = swift_allocObject();
  *(void *)(v63 + 16) = v6;
  CGFloat v75 = partial apply for closure #2 in SyncedLyricsViewController.syncedLyrics(_:animateTo:elapsedTime:gap:);
  uint64_t v76 = v63;
  CGAffineTransform aBlock = _NSConcreteStackBlock;
  uint64_t v72 = 1107296256;
  uint64_t v73 = thunk for @escaping @callee_guaranteed @Sendable () -> ();
  uint64_t v74 = &block_descriptor_183_0;
  uint64_t v64 = _Block_copy(&aBlock);
  uint64_t v65 = v6;
  swift_release();
  [(objc_class *)isa addAnimations:v64];
  _Block_release(v64);
  BOOL v66 = [(objc_class *)isa state] == (id)3;
  v65[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isAnimating] = v66;
  uint64_t v67 = swift_allocObject();
  *(void *)(v67 + 16) = v65;
  CGFloat v75 = partial apply for closure #3 in SyncedLyricsViewController.syncedLyrics(_:animateTo:elapsedTime:gap:);
  uint64_t v76 = v67;
  CGAffineTransform aBlock = _NSConcreteStackBlock;
  uint64_t v72 = 1107296256;
  uint64_t v73 = thunk for @escaping @callee_guaranteed (@unowned UIViewAnimatingPosition) -> ();
  uint64_t v74 = &block_descriptor_189;
  unint64_t v68 = _Block_copy(&aBlock);
  uint64_t v69 = v65;
  swift_release();
  [(objc_class *)isa addCompletion:v68];
  _Block_release(v68);
  [(objc_class *)isa startAnimation];
}

void specialized SyncedLyricsViewController.syncedLyrics(_:jumpTo:select:elapsedTime:)(void *a1, int a2, double a3)
{
  uint64_t v6 = v3;
  LODWORD(v8) = a2;
  uint64_t v9 = a1;
  uint64_t v10 = a1[3];
  uint64_t v11 = a1[4];
  __swift_project_boxed_opaque_existential_0Tm(a1, v10);
  unint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 16))(v10, v11);
  unint64_t v13 = &v3[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews];
  swift_beginAccess();
  uint64_t v14 = *(void *)v13;
  if ((*(void *)v13 & 0xC000000000000001) != 0) {
    goto LABEL_56;
  }
  if ((v12 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v12 < *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    unint64_t v12 = (unint64_t)*(id *)(v14 + 8 * v12 + 32);
    goto LABEL_5;
  }
  __break(1u);
LABEL_59:
  swift_bridgeObjectRetain();
  id v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  swift_bridgeObjectRelease();
LABEL_9:
  id v21 = v20;
  double v22 = UIView.untransformedFrame.getter();
  CGFloat v24 = v23;
  CGFloat v26 = v25;
  CGFloat v28 = v27;

  SyncedLyricsViewController.contentOffset(for:)(v22, v24, v26, v28);
  double v5 = v29;

  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)aBlock);
  uint64_t v30 = (unint64_t *)&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_selectedLineViews];
  swift_beginAccess();
  unint64_t v31 = *v30;
  swift_bridgeObjectRetain();
  char v4 = specialized Sequence<>.contains(_:)(v12, v31);
  swift_bridgeObjectRelease();
  double v18 = &v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode];
  swift_beginAccess();
  if (*v18 == 2 && (v4 & 1) == 0)
  {
    SyncedLyricsViewController.cancelAnimations()();
    CGFloat v32 = (double *)swift_allocObject();
    *((void *)v32 + 2) = v6;
    v32[3] = 0.0;
    v32[4] = v5;
    *((void *)v32 + 5) = v12;
    id v33 = objc_allocWithZone((Class)UIViewPropertyAnimator);
    unint64_t v88 = partial apply for closure #1 in SyncedLyricsViewController.syncedLyrics(_:jumpTo:select:elapsedTime:);
    CGFloat v89 = v32;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = thunk for @escaping @callee_guaranteed @Sendable () -> ();
    unint64_t v87 = &block_descriptor_177_0;
    CGFloat v34 = _Block_copy(aBlock);
    id v35 = v6;
    id v36 = (id)v12;
    swift_release();
    unint64_t v12 = (unint64_t)[v33 initWithDuration:3 curve:v34 animations:0.25];
    _Block_release(v34);
    if (v8)
    {
      outlined init with copy of AlertPresenting(v11, (uint64_t)aBlock);
      id v37 = (id)v12;
      SyncedLyricsViewController.select(line:animator:deselectAll:fadeInInstrumentalView:)(aBlock, (objc_class *)v12, (uint64_t *)1, 1);

      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)aBlock);
    }
    [(id)v12 startAnimation];

    goto LABEL_45;
  }
  uint64_t v85 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView;
  [*(id *)&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView] contentOffset];
  CGFloat v39 = v38;
  CGFloat v41 = v40;
  id v42 = [v6 view];
  if (!v42) {
    goto LABEL_68;
  }
  char v43 = v42;
  [v42 frame];
  CGFloat v45 = v44;

  uint64_t v46 = (CGFloat *)&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight];
  swift_beginAccess();
  uint64_t v84 = v46;
  CGFloat v47 = *v46;
  if (*v46 <= 0.0)
  {
    id v48 = [v6 view];
    if (!v48)
    {
LABEL_69:
      __break(1u);
LABEL_70:
      __break(1u);
      goto LABEL_71;
    }
    double v49 = v48;
    [v48 frame];
    CGFloat v47 = v50;
  }
  [(id)v12 frame];
  v92.origin.CGFloat x = v51;
  v92.origin.CGFloat y = v52;
  v92.size.width = v53;
  v92.size.CGFloat height = v54;
  v91.origin.CGFloat x = v39;
  v91.origin.CGFloat y = v41;
  v91.size.width = v45;
  v91.size.CGFloat height = v47;
  if (CGRectIntersectsRect(v91, v92))
  {
    outlined init with copy of AlertPresenting((uint64_t)v9, (uint64_t)aBlock);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for LyricsLine);
    if (swift_dynamicCast() & 1) == 0 && (v8)
    {
      SyncedLyricsViewController.cancelAnimations()();
      specialized SyncedLyricsViewController.syncedLyrics(_:animateTo:elapsedTime:gap:)(v9, 0, 1, a3);
LABEL_45:

      return;
    }
  }
  outlined init with copy of AlertPresenting((uint64_t)v9, (uint64_t)aBlock);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for LyricsLine);
  if (swift_dynamicCast())
  {
    unsigned int v83 = v8;
    uint64_t v55 = v9[3];
    uint64_t v8 = v9[4];
    __swift_project_boxed_opaque_existential_0Tm(v9, v55);
    unint64_t v56 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 16))(v55, v8);
    uint64_t v57 = *(void *)v13;
    if ((*(void *)v13 & 0xC000000000000001) != 0) {
      goto LABEL_62;
    }
    if ((v56 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      uint64_t v8 = v83;
      if (v56 < *(void *)((v57 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        uint64_t v58 = (char *)*(id *)(v57 + 8 * v56 + 32);
        goto LABEL_27;
      }
    }
    __break(1u);
LABEL_65:
    swift_bridgeObjectRetain();
    uint64_t v9 = (void *)_CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if ((uint64_t)v9 >= v8) {
      goto LABEL_38;
    }
LABEL_66:
    __break(1u);
LABEL_67:
    __break(1u);
LABEL_68:
    __break(1u);
    goto LABEL_69;
  }
LABEL_33:
  if (!(v4 & 1 | ((v8 & 1) == 0)))
  {
    outlined init with copy of AlertPresenting(v11, (uint64_t)aBlock);
    SyncedLyricsViewController.select(line:animator:deselectAll:fadeInInstrumentalView:)(aBlock, 0, (uint64_t *)1, 0);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)aBlock);
  }
LABEL_35:
  unint64_t v12 = (unint64_t)(id)v12;
  UIView.untransformedFrame.getter();
  a3 = v63;

  memset(v90, 0, 32);
  v90[32] = 1;
  SyncedLyricsViewController.frame(for:selected:previousViewFrame:)((char *)v12, 2u, (uint64_t)v90);
  if (v64 != a3)
  {
    outlined init with copy of AlertPresenting(v11, (uint64_t)aBlock);
    uint64_t v65 = v87;
    BOOL v66 = v88;
    __swift_project_boxed_opaque_existential_0Tm(aBlock, (uint64_t)v87);
    uint64_t v67 = (*((uint64_t (**)(void *, id (*)()))v66 + 2))(v65, v66);
    uint64_t v8 = v67;
    if (*(void *)v13 >> 62) {
      goto LABEL_65;
    }
    uint64_t v9 = *(void **)((*(void *)v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if ((uint64_t)v9 < v67) {
      goto LABEL_66;
    }
LABEL_38:
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)aBlock);
    if ((void *)v8 != v9)
    {
      if (v8 >= (uint64_t)v9) {
        goto LABEL_67;
      }
      do
      {
        uint64_t v81 = *(void *)v13;
        if ((*(void *)v13 & 0xC000000000000001) != 0)
        {
          swift_bridgeObjectRetain();
          uint64_t v82 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
          swift_bridgeObjectRelease();
        }
        else
        {
          if (v8 < 0)
          {
            __break(1u);
LABEL_55:
            __break(1u);
LABEL_56:
            swift_bridgeObjectRetain();
            unint64_t v12 = specialized _ArrayBuffer._getElementSlowPath(_:)();
            swift_bridgeObjectRelease();
LABEL_5:
            uint64_t v11 = v12 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line;
            swift_beginAccess();
            outlined init with copy of AlertPresenting(v11, (uint64_t)aBlock);
            uint64_t v15 = v87;
            double v16 = v88;
            __swift_project_boxed_opaque_existential_0Tm(aBlock, (uint64_t)v87);
            unint64_t v17 = (*((uint64_t (**)(void *, id (*)()))v16 + 2))(v15, v16);
            double v18 = (char *)v17;
            uint64_t v19 = *(void *)v13;
            if ((*(void *)v13 & 0xC000000000000001) != 0) {
              goto LABEL_59;
            }
            if ((v17 & 0x8000000000000000) != 0)
            {
              __break(1u);
            }
            else if (v17 < *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10))
            {
              id v20 = *(id *)(v19 + 8 * v17 + 32);
              goto LABEL_9;
            }
            __break(1u);
LABEL_62:
            swift_bridgeObjectRetain();
            uint64_t v58 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
            swift_bridgeObjectRelease();
            LOBYTE(v8) = v83;
LABEL_27:
            id v59 = *(void **)&v58[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView];
            id v60 = v59;

            if (v59)
            {
              type metadata accessor for SyncedLyricsLineView.InstrumentalContentView();
              if (swift_dynamicCastClass())
              {
                UISpringTimingParameters v61 = *(void **)&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_instrumentalBreakVisibleView];
                *(void *)&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_instrumentalBreakVisibleView] = v12;
                id v62 = (id)v12;

                if (v4)
                {
                  SyncedLyricsLineView.InstrumentalContentView.update(elapsedTime:)(a3);

                  goto LABEL_35;
                }
                SyncedLyricsLineView.InstrumentalContentView.fadeIn(elapsedTime:)(a3);
                LOBYTE(v8) = v83;
              }
            }
            goto LABEL_33;
          }
          if ((unint64_t)v8 >= *(void *)((v81 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_55;
          }
          uint64_t v82 = (char *)*(id *)(v81 + 8 * v8 + 32);
        }
        ++v8;
        SyncedLyricsViewController.layout(lineView:)(v82);
      }
      while (v9 != (void *)v8);
    }
  }
  SyncedLyricsViewController.cancelAnimations()();
  objc_msgSend(*(id *)&v6[v85], "setContentOffset:", 0.0, v5);
  if (*v18) {
    goto LABEL_45;
  }
  [*(id *)&v6[v85] contentOffset];
  CGFloat v69 = v68;
  CGFloat v71 = v70;
  id v72 = [v6 view];
  if (!v72) {
    goto LABEL_70;
  }
  uint64_t v73 = v72;
  [v72 frame];
  CGFloat v75 = v74;

  CGFloat v76 = *v84;
  if (*v84 > 0.0)
  {
LABEL_44:
    outlined init with copy of AlertPresenting(v11, (uint64_t)aBlock);
    uint64_t v80 = SyncedLyricsViewController.lineViews(in:startingAt:)(aBlock, v69, v71, v75, v76);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)aBlock);
    SyncedLyricsViewController.updateBlur(views:)(v80);
    swift_bridgeObjectRelease();
    goto LABEL_45;
  }
  id v77 = [v6 view];
  if (v77)
  {
    CGRect v78 = v77;
    [v77 frame];
    CGFloat v76 = v79;

    goto LABEL_44;
  }
LABEL_71:
  __break(1u);
}

uint64_t specialized SyncedLyricsViewController.syncedLyricsDesectAllLines(_:)()
{
  uint64_t v1 = v0;
  unint64_t v2 = &v0[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode];
  uint64_t result = swift_beginAccess();
  if (!*v2)
  {
    uint64_t result = (uint64_t)[*(id *)&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView] isDragging];
    if ((result & 1) == 0)
    {
      swift_beginAccess();
      id v4 = objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 100.0, 18.0, 0.0, 0.0);
      type metadata accessor for UIMenu(0, (unint64_t *)&lazy cache variable for type metadata for UIViewPropertyAnimator);
      v5.super.Class isa = UIViewPropertyAnimator.init(springTimingParameters:)((UISpringTimingParameters)v4).super.isa;
      uint64_t v6 = &v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_selectedLineViews];
      swift_beginAccess();
      double v16 = v6;
      uint64_t v7 = *(void *)v6;
      if (*(void *)v6 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t result = _CocoaArrayWrapper.endIndex.getter();
        uint64_t v8 = result;
        if (result) {
          goto LABEL_5;
        }
      }
      else
      {
        uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
        uint64_t result = swift_bridgeObjectRetain();
        if (v8)
        {
LABEL_5:
          if (v8 < 1)
          {
            __break(1u);
            return result;
          }
          for (uint64_t i = 0; i != v8; ++i)
          {
            if ((v7 & 0xC000000000000001) != 0) {
              id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              id v10 = *(id *)(v7 + 8 * i + 32);
            }
            uint64_t v11 = v10;
            unint64_t v12 = v5.super.isa;
            v18.value = v5;
            SyncedLyricsLineView.setSelected(_:animator:)(0, v18);

            id v13 = [v1 traitCollection];
            id v14 = [v13 accessibilityContrast];

            if (v14 != (id)1)
            {
              SyncedLyricsLineView.setBlurRadius(_:animated:)(1, 3.0);
              swift_beginAccess();
              id v15 = v11;
              specialized Set._Variant.insert(_:)(&v17, v15);
              uint64_t v11 = v17;
              swift_endAccess();
            }
          }
        }
      }
      swift_bridgeObjectRelease();
      *(void *)double v16 = _swiftEmptyArrayStorage;

      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

void specialized SyncedLyricsViewController.syncedLyrics(_:update:elapsedTime:)(void *a1, Swift::Double a2)
{
  uint64_t v4 = a1[3];
  uint64_t v5 = a1[4];
  __swift_project_boxed_opaque_existential_0Tm(a1, v4);
  unint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 16))(v4, v5);
  uint64_t v7 = (uint64_t *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews);
  swift_beginAccess();
  uint64_t v8 = *v7;
  if ((v8 & 0xC000000000000001) == 0)
  {
    if ((v6 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v6 < *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      uint64_t v9 = (char *)*(id *)(v8 + 8 * v6 + 32);
      goto LABEL_5;
    }
    __break(1u);
    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v9 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
  swift_bridgeObjectRelease();
LABEL_5:
  id v10 = *(void **)&v9[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView];
  id v11 = v10;

  if (v10)
  {
    type metadata accessor for SyncedLyricsLineView.InstrumentalContentView();
    if (swift_dynamicCastClass())
    {
      id v12 = v11;
      SyncedLyricsLineView.InstrumentalContentView.update(elapsedTime:)(a2);
    }
  }
}

void specialized SyncedLyricsViewController.syncedLyrics(_:finish:)(uint64_t a1)
{
  outlined init with copy of AlertPresenting(a1, (uint64_t)v15);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for LyricsLine);
  if (swift_dynamicCast())
  {
    char v2 = BYTE1(__dst[3]);
    swift_beginAccess();
    uint64_t v3 = type metadata accessor for SyncedLyricsLineView();
    swift_bridgeObjectRetain();
    Array.subscript.getter(v3, (uint64_t)__dst);
    swift_bridgeObjectRelease();
    uint64_t v4 = (void *)__dst[0];
    if (!__dst[0])
    {
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      return;
    }
    uint64_t v5 = *(void **)(__dst[0] + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView);
    if (!v5) {
      goto LABEL_15;
    }
    type metadata accessor for SyncedLyricsLineView.SBS_TextContentView();
    uint64_t v6 = swift_dynamicCastClass();
    if (!v6) {
      goto LABEL_15;
    }
    uint64_t v7 = *(void *)(v6 + OBJC_IVAR___MusicSBS_TextContentView_textView);
    if (!v7) {
      goto LABEL_21;
    }
    uint64_t v8 = *(void *)(v7
                   + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_frameVisualRepresentation);
    if (!v8)
    {
LABEL_15:
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();

      return;
    }
    unint64_t v9 = *(void *)(v8 + 24);
    if (v9 >> 62)
    {
      id v14 = v5;
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
      if (v10) {
        goto LABEL_9;
      }
    }
    else
    {
      uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
      id v11 = v5;
      swift_retain();
      swift_bridgeObjectRetain();
      if (v10)
      {
LABEL_9:
        if (v10 >= 1)
        {
          id v12 = (const void *)(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs);
          swift_beginAccess();
          uint64_t v13 = 0;
          do
          {
            if ((v9 & 0xC000000000000001) != 0) {
              specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              swift_retain();
            }
            ++v13;
            memcpy(__dst, v12, 0x219uLL);
            outlined retain of SyncedLyricsViewController.Specs((uint64_t)__dst);
            SyncedLyricsLineView.Line.finishGradient(specs:direction:)((unint64_t)__dst, v2);
            outlined release of SyncedLyricsViewController.Specs((uint64_t)__dst);
            swift_release();
          }
          while (v10 != v13);
          goto LABEL_18;
        }
        __break(1u);
LABEL_21:
        __break(1u);
        return;
      }
    }
LABEL_18:
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
  }
}

void specialized SyncedLyricsViewController.syncedLyrics(_:select:)(void *a1)
{
  swift_beginAccess();
  id v3 = objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 100.0, 18.0, 0.0, 0.0);
  type metadata accessor for UIMenu(0, (unint64_t *)&lazy cache variable for type metadata for UIViewPropertyAnimator);
  Class isa = UIViewPropertyAnimator.init(springTimingParameters:)((UISpringTimingParameters)v3).super.isa;
  SyncedLyricsViewController.select(line:animator:deselectAll:fadeInInstrumentalView:)(a1, isa, 0, 1);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v1;
  double v16 = partial apply for closure #1 in SyncedLyricsViewController.syncedLyrics(_:select:);
  uint64_t v17 = v5;
  CGAffineTransform aBlock = _NSConcreteStackBlock;
  uint64_t v13 = 1107296256;
  id v14 = thunk for @escaping @callee_guaranteed @Sendable () -> ();
  id v15 = &block_descriptor_165;
  uint64_t v6 = _Block_copy(&aBlock);
  uint64_t v7 = v1;
  swift_release();
  [(objc_class *)isa addAnimations:v6];
  _Block_release(v6);
  BOOL v8 = [(objc_class *)isa state] == (id)3;
  v7[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isAnimating] = v8;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v7;
  double v16 = partial apply for closure #2 in SyncedLyricsViewController.syncedLyrics(_:select:);
  uint64_t v17 = v9;
  CGAffineTransform aBlock = _NSConcreteStackBlock;
  uint64_t v13 = 1107296256;
  id v14 = thunk for @escaping @callee_guaranteed (@unowned UIViewAnimatingPosition) -> ();
  id v15 = &block_descriptor_171_0;
  uint64_t v10 = _Block_copy(&aBlock);
  id v11 = v7;
  swift_release();
  [(objc_class *)isa addCompletion:v10];
  _Block_release(v10);
  [(objc_class *)isa startAnimation];
}

void specialized SyncedLyricsViewController.displayLinkFired(_:)()
{
  uint64_t v1 = v0;
  unint64_t v2 = (unint64_t)SyncedLyricsViewController.visibleLineViews.getter();
  unint64_t v3 = v2;
  if (v2 >> 62)
  {
LABEL_26:
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    p_vtable = &OBJC_METACLASS____TtCC11MusicCoreUI20SyncedLyricsLineView4Line.vtable;
    if (v4) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    p_vtable = &OBJC_METACLASS____TtCC11MusicCoreUI20SyncedLyricsLineView4Line.vtable;
    if (v4)
    {
LABEL_3:
      uint64_t v45 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager;
      unint64_t v6 = v3 & 0xC000000000000001;
      uint64_t v7 = &OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView;
      uint64_t v8 = 4;
      uint64_t v41 = v1;
      uint64_t v42 = v4;
      unint64_t v44 = v3;
      while (1)
      {
        if (v6) {
          uint64_t v9 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          uint64_t v9 = (char *)*(id *)(v3 + 8 * v8);
        }
        uint64_t v10 = v9;
        uint64_t v11 = v8 - 3;
        if (__OFADD__(v8 - 4, 1))
        {
          __break(1u);
          goto LABEL_26;
        }
        id v12 = *(void **)&v9[*v7];
        if (v12)
        {
          type metadata accessor for SyncedLyricsLineView.SBS_TextContentView();
          uint64_t v13 = swift_dynamicCastClass();
          if (v13)
          {
            id v14 = v7;
            uint64_t v15 = *(void *)(v1 + v45);
            if (v15)
            {
              uint64_t v16 = v13;
              unint64_t v17 = v6;
              swift_beginAccess();
              UIViewPropertyAnimator_optional v18 = *(double (**)(uint64_t))(v15 + 96);
              if (v18)
              {
                id v43 = v12;
                swift_retain();
                uint64_t v19 = outlined copy of (@escaping @callee_guaranteed () -> ())?((uint64_t)v18);
                double v20 = v18(v19);
                swift_beginAccess();
                double v21 = 0.0;
                if (*(unsigned char *)(v15 + 88) == 1)
                {
                  Lyrics.spatialOffset.getter();
                  double v21 = v22;
                }
                outlined consume of (@escaping @callee_guaranteed () -> ())?((uint64_t)v18);
                swift_release();
                double v23 = v20 - v21;
                if (v23 == *(double *)(v16 + OBJC_IVAR___MusicSBS_TextContentView_progress))
                {
                  unint64_t v6 = v17;
                  uint64_t v1 = v41;
                  uint64_t v4 = v42;
                  uint64_t v7 = v14;
                  id v24 = v43;
                  unint64_t v3 = v44;
                }
                else
                {
                  *(double *)(v16 + OBJC_IVAR___MusicSBS_TextContentView_progress) = v23;
                  double v25 = *(void **)(v16 + OBJC_IVAR___MusicSBS_TextContentView_textView);
                  uint64_t v1 = v41;
                  if (!v25) {
                    goto LABEL_50;
                  }
                  unint64_t v6 = v17;
                  uint64_t v7 = v14;
                  id v26 = v25;
                  SyncedLyricsLineView.SBS_TextContentView.TextView.setProgress(_:animated:)(v23, 1);

                  double v27 = *(void **)(v16 + OBJC_IVAR___MusicSBS_TextContentView_backgroundTextView);
                  uint64_t v4 = v42;
                  unint64_t v3 = v44;
                  if (v27)
                  {
                    id v24 = v27;
                    SyncedLyricsLineView.SBS_TextContentView.TextView.setProgress(_:animated:)(v23, 1);

                    uint64_t v10 = v43;
                  }
                  else
                  {
                    id v24 = v43;
                  }
                }

                uint64_t v10 = v24;
                goto LABEL_6;
              }
              unint64_t v6 = v17;
              uint64_t v4 = v42;
            }
            uint64_t v7 = v14;
            unint64_t v3 = v44;
          }
        }
LABEL_6:

        ++v8;
        if (v11 == v4)
        {
          swift_bridgeObjectRelease();
          p_vtable = (void **)(&OBJC_METACLASS____TtCC11MusicCoreUI20SyncedLyricsLineView4Line + 24);
          goto LABEL_28;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
LABEL_28:
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isAnimating)) {
    return;
  }
  uint64_t v28 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_instrumentalBreakVisibleView;
  double v29 = *(void **)(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_instrumentalBreakVisibleView);
  if (!v29) {
    goto LABEL_43;
  }
  uint64_t v30 = (unint64_t *)(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_selectedLineViews);
  swift_beginAccess();
  unint64_t v31 = *v30;
  if (!(*v30 >> 62))
  {
    uint64_t v32 = *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id v33 = v29;
    swift_bridgeObjectRetain();
    if (v32) {
      goto LABEL_32;
    }
LABEL_41:
    swift_bridgeObjectRelease();
LABEL_42:

LABEL_43:
    if (*(void *)((char *)p_vtable[271] + v1))
    {
      swift_retain();
      SyncedLyricsManager.update()();
      swift_release();
    }
    return;
  }
  id v40 = v29;
  swift_bridgeObjectRetain();
  uint64_t v32 = _CocoaArrayWrapper.endIndex.getter();
  if (!v32) {
    goto LABEL_41;
  }
LABEL_32:
  unint64_t v34 = v32 - 1;
  if (__OFSUB__(v32, 1))
  {
    __break(1u);
    goto LABEL_47;
  }
  if ((v31 & 0xC000000000000001) != 0)
  {
LABEL_47:
    id v35 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_37;
  }
  if ((v34 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v34 < *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v35 = *(id *)(v31 + 8 * v34 + 32);
LABEL_37:
    id v36 = v35;
    swift_bridgeObjectRelease();
    unint64_t v37 = *v30;
    swift_bridgeObjectRetain();
    char v38 = specialized Sequence<>.contains(_:)((uint64_t)v29, v37);
    swift_bridgeObjectRelease();
    if ((v38 & 1) == 0)
    {
      CGFloat v39 = *(void **)(v1 + v28);
      *(void *)(v1 + v28) = 0;

      SyncedLyricsViewController.dismissInstrumentalView(_:currentView:)((uint64_t)v29, (uint64_t)v36);
      SyncedLyricsLineView.reset()();
    }

    goto LABEL_42;
  }
  __break(1u);
LABEL_50:
  __break(1u);
}

id specialized SyncedLyricsViewController.gestureRecognizer(_:shouldReceive:)(void *a1)
{
  unint64_t v3 = &v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isFullScreen];
  swift_beginAccess();
  if (*v3 != 1) {
    return 0;
  }
  uint64_t v4 = &v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode];
  swift_beginAccess();
  if (*v4) {
    return 0;
  }
  uint64_t v5 = (double *)&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_bottomTapAreaHeight];
  swift_beginAccess();
  if (*v5 <= 0.0) {
    return 0;
  }
  id v6 = objc_msgSend(v1, "view", *v5);
  [a1 locationInView:v6];
  double v8 = v7;

  id result = [v1 view];
  if (result)
  {
    uint64_t v10 = result;
    [result frame];
    CGFloat v12 = v11;
    CGFloat v14 = v13;
    CGFloat v16 = v15;
    CGFloat v18 = v17;

    v19.origin.CGFloat x = v12;
    v19.origin.CGFloat y = v14;
    v19.size.width = v16;
    v19.size.CGFloat height = v18;
    return (id)(CGRectGetHeight(v19) - *v5 < v8);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void specialized SyncedLyricsViewController.scrollViewDidEndDragging(_:willDecelerate:)()
{
  uint64_t v1 = self;
  uint64_t v2 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v6[4] = partial apply for closure #1 in SyncedLyricsViewController.scrollViewDidEndDragging(_:willDecelerate:);
  v6[5] = v2;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 1107296256;
  v6[2] = thunk for @escaping @callee_guaranteed (@guaranteed UIAlertAction) -> ();
  v6[3] = &block_descriptor_159;
  unint64_t v3 = _Block_copy(v6);
  swift_release();
  id v4 = [v1 scheduledTimerWithTimeInterval:0 repeats:v3 block:3.0];
  _Block_release(v3);
  uint64_t v5 = *(void **)(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_allowAnimateToNextLineAfterScrollTimer);
  *(void *)(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_allowAnimateToNextLineAfterScrollTimer) = v4;
}

void specialized SyncedLyricsViewController.scrollViewWillEndDragging(_:withVelocity:targetContentOffset:)(double a1, double a2)
{
  uint64_t v3 = v2;
  if (a2 <= 0.0)
  {
    if (a2 < 0.0)
    {
      double v8 = (unsigned char *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode);
      swift_beginAccess();
      if (*v8 == 1)
      {
        *double v8 = 0;
        uint64_t v9 = v3 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_delegate;
        swift_beginAccess();
        if (swift_unknownObjectWeakLoadStrong())
        {
          uint64_t v10 = *(void *)(v9 + 8);
          uint64_t ObjectType = swift_getObjectType();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 24))(v3, ObjectType, v10);
          swift_unknownObjectRelease();
        }
      }
      uint64_t v12 = v3 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_delegate;
      swift_beginAccess();
      if (swift_unknownObjectWeakLoadStrong())
      {
        uint64_t v13 = *(void *)(v12 + 8);
        uint64_t v14 = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 32))(v3, v14, v13);
        goto LABEL_11;
      }
    }
  }
  else
  {
    id v4 = (unsigned char *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode);
    swift_beginAccess();
    if (*v4 != 1)
    {
      *id v4 = 1;
      uint64_t v5 = v3 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_delegate;
      swift_beginAccess();
      if (swift_unknownObjectWeakLoadStrong())
      {
        uint64_t v6 = *(void *)(v5 + 8);
        uint64_t v7 = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v3, v7, v6);
LABEL_11:
        swift_unknownObjectRelease();
      }
    }
  }
}

unint64_t lazy protocol witness table accessor for type SyncedLyricsViewController.Mode and conformance SyncedLyricsViewController.Mode()
{
  unint64_t result = lazy protocol witness table cache variable for type SyncedLyricsViewController.Mode and conformance SyncedLyricsViewController.Mode;
  if (!lazy protocol witness table cache variable for type SyncedLyricsViewController.Mode and conformance SyncedLyricsViewController.Mode)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type SyncedLyricsViewController.Mode and conformance SyncedLyricsViewController.Mode);
  }
  return result;
}

uint64_t sub_1003445C8@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = (unsigned char *)(*a1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t sub_10034461C(char *a1, void *a2)
{
  char v2 = *a1;
  uint64_t v3 = (unsigned char *)(*a2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode);
  uint64_t result = swift_beginAccess();
  unsigned char *v3 = v2;
  return result;
}

uint64_t destroy for SyncedLyricsSharingTransitionInfo(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();

  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for SyncedLyricsSharingTransitionInfo(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  *(unsigned char *)(a1 + 26) = *(unsigned char *)(a2 + 26);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  long long v8 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v8;
  uint64_t v3 = *(void **)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v3;
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  long long v4 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v4;
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  uint64_t v5 = *(void *)(a2 + 232);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(void *)(a1 + 232) = v5;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  id v6 = v3;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for SyncedLyricsSharingTransitionInfo(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  *(unsigned char *)(a1 + 26) = *(unsigned char *)(a2 + 26);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v4 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v4;
  swift_retain();
  swift_release();
  uint64_t v5 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v5;
  swift_retain();
  swift_release();
  uint64_t v6 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v6;
  swift_retain();
  swift_release();
  uint64_t v7 = *(void **)(a2 + 104);
  long long v8 = *(void **)(a1 + 104);
  *(void *)(a1 + 104) = v7;
  id v9 = v7;

  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  uint64_t v10 = *(void *)(a2 + 216);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(void *)(a1 + 216) = v10;
  swift_retain();
  swift_release();
  uint64_t v11 = *(void *)(a2 + 232);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  *(void *)(a1 + 232) = v11;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy240_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  long long v4 = a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  long long v7 = a2[7];
  long long v8 = a2[8];
  long long v9 = a2[10];
  *(_OWORD *)(a1 + 144) = a2[9];
  *(_OWORD *)(a1 + 160) = v9;
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  __n128 result = (__n128)a2[11];
  long long v11 = a2[12];
  long long v12 = a2[14];
  *(_OWORD *)(a1 + 208) = a2[13];
  *(_OWORD *)(a1 + 224) = v12;
  *(__n128 *)(a1 + 176) = result;
  *(_OWORD *)(a1 + 192) = v11;
  return result;
}

uint64_t assignWithTake for SyncedLyricsSharingTransitionInfo(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  *(unsigned char *)(a1 + 26) = *(unsigned char *)(a2 + 26);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_release();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_release();
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  swift_release();
  long long v4 = *(void **)(a1 + 104);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);

  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  long long v5 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v5;
  long long v6 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v6;
  swift_release();
  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for SyncedLyricsSharingTransitionInfo(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 240)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SyncedLyricsSharingTransitionInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 232) = 0;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 240) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 240) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SyncedLyricsSharingTransitionInfo()
{
  return &type metadata for SyncedLyricsSharingTransitionInfo;
}

unsigned char *storeEnumTagSinglePayload for SyncedLyricsViewController.Mode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100344C28);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SyncedLyricsViewController.Mode()
{
  return &type metadata for SyncedLyricsViewController.Mode;
}

uint64_t _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTR8MusicKit8PlaylistV0dE8InternalE12CollaboratorVSg_Tg5TA(uint64_t a1)
{
  unsigned int v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = partial apply for closure #1 in static MusicEngagementExtension.performRequest(with:completion:);
  unsigned int v6 = (uint64_t (*)(uint64_t, int *))((char *)&_sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTR8MusicKit8PlaylistV0dE8InternalE12CollaboratorVSg_Tg5Tu
                                              + _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTR8MusicKit8PlaylistV0dE8InternalE12CollaboratorVSg_Tg5Tu);
  return v6(a1, v4);
}

void partial apply for closure #1 in SyncedLyricsViewController.dismissInstrumentalView(_:currentView:)()
{
  SyncedLyricsViewController.layout(lineView:)(*(char **)(v0 + 24));
}

uint64_t block_copy_helper_60(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_60()
{
  return swift_release();
}

uint64_t sub_100344D58()
{
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 24);

  return swift_deallocObject();
}

id partial apply for closure #1 in SyncedLyricsViewController.animateInstrumentalEnd(line:contentOffset:visibleViews:timingParameters:duration:deltaY:)()
{
  return closure #1 in SyncedLyricsViewController.animateInstrumentalEnd(line:contentOffset:visibleViews:timingParameters:duration:deltaY:)(*(void **)(v0 + 16), (void *)(v0 + 24));
}

uint64_t sub_100344DB4()
{
  swift_bridgeObjectRelease();

  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 48);

  return swift_deallocObject();
}

uint64_t partial apply for closure #2 in SyncedLyricsViewController.animateInstrumentalEnd(line:contentOffset:visibleViews:timingParameters:duration:deltaY:)(uint64_t a1)
{
  return closure #2 in SyncedLyricsViewController.animateInstrumentalEnd(line:contentOffset:visibleViews:timingParameters:duration:deltaY:)(*(double *)(v1 + 32), *(double *)(v1 + 40), a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_100344E0C()
{
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 24);

  return swift_deallocObject();
}

id partial apply for closure #1 in SyncedLyricsViewController.animateInstrumentalStart(line:contentOffset:visibleViews:timingParameters:duration:deltaY:elapsed:)()
{
  return closure #1 in SyncedLyricsViewController.animateInstrumentalStart(line:contentOffset:visibleViews:timingParameters:duration:deltaY:elapsed:)(*(void **)(v0 + 16), (void *)(v0 + 24));
}

uint64_t sub_100344E68()
{
  swift_bridgeObjectRelease();

  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 64);

  return swift_deallocObject();
}

uint64_t partial apply for closure #4 in SyncedLyricsViewController.animateInstrumentalStart(line:contentOffset:visibleViews:timingParameters:duration:deltaY:elapsed:)(uint64_t a1)
{
  return closure #4 in SyncedLyricsViewController.animateInstrumentalStart(line:contentOffset:visibleViews:timingParameters:duration:deltaY:elapsed:)(*(double *)(v1 + 24), *(double *)(v1 + 48), *(double *)(v1 + 56), a1, *(void *)(v1 + 16), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_100344ED0()
{
  return swift_deallocObject();
}

id partial apply for closure #2 in SyncedLyricsViewController.animateInstrumentalStart(line:contentOffset:visibleViews:timingParameters:duration:deltaY:elapsed:)()
{
  return closure #2 in SyncedLyricsViewController.animateInstrumentalStart(line:contentOffset:visibleViews:timingParameters:duration:deltaY:elapsed:)(*(void *)(v0 + 16), *(char **)(v0 + 24));
}

uint64_t sub_100344F1C()
{
  return swift_deallocObject();
}

void partial apply for closure #3 in SyncedLyricsViewController.animateInstrumentalStart(line:contentOffset:visibleViews:timingParameters:duration:deltaY:elapsed:)()
{
  SyncedLyricsLineView.InstrumentalContentView.fadeIn(elapsedTime:)(*(Swift::Double *)(v0 + 24));
}

uint64_t sub_100344F80()
{
  return swift_deallocObject();
}

uint64_t sub_100344F90()
{
  return swift_deallocObject();
}

uint64_t sub_100344FA0()
{
  swift_release();

  return swift_deallocObject();
}

id partial apply for closure #2 in SyncedLyricsViewController.animate(line:to:elapsedTime:tapMode:gap:adjustedContentOffset:)()
{
  return closure #2 in SyncedLyricsViewController.animate(line:to:elapsedTime:tapMode:gap:adjustedContentOffset:)(*(void *)(v0 + 16), *(CGFloat **)(v0 + 24));
}

uint64_t sub_100344FE8()
{
  swift_bridgeObjectRelease();

  swift_release();
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 48);

  return swift_deallocObject();
}

void partial apply for closure #3 in SyncedLyricsViewController.animate(line:to:elapsedTime:tapMode:gap:adjustedContentOffset:)(uint64_t a1)
{
  closure #3 in SyncedLyricsViewController.animate(line:to:elapsedTime:tapMode:gap:adjustedContentOffset:)(*(double *)(v1 + 24), a1, *(void *)(v1 + 16), *(void *)(v1 + 32), *(void *)(v1 + 40), (void *)(v1 + 48));
}

uint64_t sub_10034504C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line;
  swift_beginAccess();
  return outlined init with copy of AlertPresenting(v3, a2);
}

uint64_t sub_1003450AC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  __swift_project_boxed_opaque_existential_0Tm(a1, v3);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 16))(v3, v4);
  *a2 = result;
  return result;
}

BOOL partial apply for closure #1 in SyncedLyricsViewController.visibleLineViews.getter(void *a1)
{
  CGFloat v2 = v1[2];
  CGFloat v3 = v1[3];
  CGFloat v4 = v1[4];
  CGFloat v5 = v1[5];
  [a1 frame];
  v8.origin.CGFloat x = v2;
  v8.origin.CGFloat y = v3;
  v8.size.width = v4;
  v8.size.CGFloat height = v5;
  return CGRectIntersectsRect(v7, v8);
}

id partial apply for closure #1 in SyncedLyricsViewController.lineViews(visibilityBlock:)(void *a1)
{
  CGFloat v2 = *(void (**)(void))(v1 + 16);
  id v3 = a1;
  v2();
  return v3;
}

uint64_t sub_100345190()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void partial apply for closure #1 in SyncedLyricsViewController.setupUI(with:)()
{
}

uint64_t sub_1003451D8()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in SyncedLyricsLineView.Line.resetGradient(specs:direction:)()
{
  return closure #1 in SyncedLyricsLineView.Line.resetGradient(specs:direction:)(v0);
}

uint64_t outlined init with take of CGRect?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&_sSo6CGRectVSgMD_0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100345280()
{
  return swift_deallocObject();
}

id partial apply for closure #1 in SyncedLyricsViewController.startSharing(from:)()
{
  return [*(id *)(v0 + 16) setHidden:1];
}

id partial apply for closure #2 in SyncedLyricsViewController.startSharing(from:)()
{
  uint64_t v1 = *(void **)(v0 + 16);
  [v1 setHidden:0];

  return [v1 setHighlighted:0];
}

uint64_t outlined release of SyncedLyricsSharingTransitionInfo(uint64_t a1)
{
  CGFloat v2 = *(void **)(a1 + 104);
  swift_release();
  swift_release();

  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1003453A4()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTRytSg_TG5TA_0(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  CGFloat v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *CGFloat v5 = v2;
  v5[1] = closure #3 in static Actions.ReportConcern.action(context:);
  unsigned int v6 = (uint64_t (*)(uint64_t, int *))((char *)&_sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTRytSg_TG5Tu_0
                                              + _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTRytSg_TG5Tu_0);
  return v6(a1, v4);
}

void partial apply for closure #1 in SyncedLyricsViewController.scrollViewDidEndDragging(_:willDecelerate:)()
{
}

unint64_t partial apply for closure #1 in SyncedLyricsViewController.syncedLyrics(_:select:)()
{
  return closure #2 in SyncedLyricsViewController.syncedLyrics(_:animateTo:elapsedTime:gap:)();
}

uint64_t partial apply for closure #2 in SyncedLyricsViewController.syncedLyrics(_:select:)(uint64_t a1)
{
  return closure #3 in SyncedLyricsViewController.syncedLyrics(_:animateTo:elapsedTime:gap:)(a1, *(void *)(v1 + 16));
}

uint64_t sub_1003454D4()
{
  return swift_deallocObject();
}

id partial apply for closure #1 in SyncedLyricsViewController.syncedLyrics(_:jumpTo:select:elapsedTime:)()
{
  return objc_msgSend(*(id *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView), "setContentOffset:", *(double *)(v0 + 24), *(double *)(v0 + 32));
}

uint64_t partial apply for closure #1 in SyncedLyricsViewController.layoutLines()()
{
  return closure #1 in SyncedLyricsViewController.layoutLines()(*(void **)(v0 + 16));
}

void partial apply for closure #1 in closure #1 in SyncedLyricsViewController.layoutLines()()
{
  closure #1 in closure #1 in SyncedLyricsViewController.layoutLines()(*(void *)(v0 + 16));
}

uint64_t sub_100345544()
{
  return swift_deallocObject();
}

uint64_t sub_100345554()
{
  return swift_deallocObject();
}

void partial apply for closure #2 in closure #3 in SyncedLyricsViewController.viewDidLoad()()
{
}

double partial apply for closure #1 in closure #2 in closure #3 in SyncedLyricsViewController.viewDidLoad()()
{
  return closure #2 in SyncedLyricsViewController.lyrics.didset();
}

uint64_t lazy protocol witness table accessor for type SyncedLyricsLineView and conformance NSObject(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTRyt_Tg5TA_2(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  CGFloat v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *CGFloat v5 = v2;
  v5[1] = closure #3 in static Actions.ReportConcern.action(context:);
  unsigned int v6 = (uint64_t (*)(uint64_t, int *))((char *)&_sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTRyt_Tg5Tu_1
                                              + _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTRyt_Tg5Tu_1);
  return v6(a1, v4);
}

void partial apply for closure #2 in closure #2 in SyncedLyricsViewController.viewDidLoad()()
{
}

double partial apply for closure #1 in SyncedLyricsViewController.lyrics.didset(double a1)
{
  return closure #1 in SyncedLyricsViewController.lyrics.didset(a1);
}

char *LineProgressGradientView.__allocating_init(color:featherWidth:direction:frame:)(void *a1, char a2, double a3, double a4, double a5, double a6, double a7)
{
  char v14 = a2 & 1;
  id v15 = objc_allocWithZone(v7);
  return LineProgressGradientView.init(color:featherWidth:direction:frame:)(a1, v14, a3, a4, a5, a6, a7);
}

char *LineProgressGradientView.init(color:featherWidth:direction:frame:)(void *a1, char a2, double a3, double a4, double a5, double a6, double a7)
{
  uint64_t v14 = OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_gradientView;
  char v15 = a2 & 1;
  type metadata accessor for LineProgressGradientView.GradientView();
  id v16 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  double v17 = v7;
  *(void *)&v7[v14] = [v16 init];
  uint64_t v18 = OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_fillView;
  *(void *)&v17[v18] = [objc_allocWithZone((Class)UIView) init];
  *(void *)&v17[OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_color] = a1;
  *(double *)&v17[OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_featherWidth] = a3;
  v17[OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_direction] = v15;
  id v19 = a1;

  v22.receiver = v17;
  v22.super_class = (Class)type metadata accessor for LineProgressGradientView();
  double v20 = (char *)objc_msgSendSuper2(&v22, "initWithFrame:", a4, a5, a6, a7);
  [v20 setClipsToBounds:1];
  [v20 addSubview:*(void *)&v20[OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_fillView]];
  [v20 addSubview:*(void *)&v20[OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_gradientView]];
  LineProgressGradientView.updateDirection()();
  LineProgressGradientView.updateColors()();

  return v20;
}

uint64_t type metadata accessor for LineProgressGradientView.GradientView()
{
  return self;
}

uint64_t type metadata accessor for LineProgressGradientView()
{
  return self;
}

Swift::Void __swiftcall LineProgressGradientView.layoutSubviews()()
{
  v1.receiver = v0;
  v1.super_class = (Class)type metadata accessor for LineProgressGradientView();
  objc_msgSendSuper2(&v1, "layoutSubviews");
  LineProgressGradientView.updateSubviewsFrames()();
}

void LineProgressGradientView.updateDirection()()
{
  int v1 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_direction);
  uint64_t v2 = OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_gradientView;
  id v3 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_gradientView), "layer"));
  self;
  uint64_t v4 = (void *)swift_dynamicCastObjCClassUnconditional();
  if (v1) {
    double v5 = 1.0;
  }
  else {
    double v5 = 0.0;
  }
  if (v1) {
    double v6 = 0.0;
  }
  else {
    double v6 = 1.0;
  }
  [v4 setStartPoint:v5];

  id v7 = [*(id *)(v0 + v2) layer];
  self;
  objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(), "setEndPoint:", v6, 0.0);

  LineProgressGradientView.updateSubviewsFrames()();
}

void LineProgressGradientView.updateSubviewsFrames()()
{
  if (v0[OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_direction])
  {
    uint64_t v1 = OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_featherWidth;
    double v2 = *(double *)&v0[OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_featherWidth];
    double v3 = 0.0;
    double v4 = v2;
  }
  else
  {
    [v0 bounds];
    double Width = CGRectGetWidth(v11);
    uint64_t v1 = OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_featherWidth;
    double v4 = *(double *)&v0[OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_featherWidth];
    double v3 = Width - v4;
    if (Width - v4 <= 0.0) {
      double v2 = Width - v4;
    }
    else {
      double v2 = 0.0;
    }
  }
  id v6 = *(id *)&v0[OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_gradientView];
  [v0 bounds];
  objc_msgSend(v6, "setFrame:", v3, 0.0, v4, CGRectGetHeight(v12));

  id v9 = *(id *)&v0[OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_fillView];
  [v0 bounds];
  double v7 = CGRectGetWidth(v13) - *(double *)&v0[v1];
  if (v7 < 0.0) {
    double v8 = 0.0;
  }
  else {
    double v8 = v7;
  }
  [v0 bounds];
  objc_msgSend(v9, "setFrame:", v2, 0.0, v8, CGRectGetHeight(v14));
}

id LineProgressGradientView.updateColors()()
{
  id v1 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_gradientView), "layer"));
  self;
  double v2 = (void *)swift_dynamicCastObjCClassUnconditional();
  __swift_instantiateConcreteTypeFromMangledName(&_ss23_ContiguousArrayStorageCyypGMD_1);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_100493D00;
  uint64_t v4 = OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_color;
  id v5 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_color), "CGColor"));
  _sSo10CGColorRefaMa_0(0);
  uint64_t v7 = v6;
  *(void *)(v3 + 56) = v6;
  *(void *)(v3 + 32) = v5;
  id v8 = [*(id *)(v0 + v4) colorWithAlphaComponent:0.0];
  id v9 = [v8 CGColor];

  *(void *)(v3 + 88) = v7;
  *(void *)(v3 + 64) = v9;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v2 setColors:isa];

  CGRect v11 = *(void **)(v0 + OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_fillView);
  uint64_t v12 = *(void *)(v0 + v4);

  return [v11 setBackgroundColor:v12];
}

id LineProgressGradientView.GradientView.__deallocating_deinit()
{
  return LineProgressGradientView.GradientView.__deallocating_deinit(0, type metadata accessor for LineProgressGradientView.GradientView);
}

void LineProgressGradientView.init(frame:)()
{
}

id LineProgressGradientView.__deallocating_deinit(uint64_t a1)
{
  return LineProgressGradientView.GradientView.__deallocating_deinit(a1, type metadata accessor for LineProgressGradientView);
}

id LineProgressGradientView.GradientView.__deallocating_deinit(uint64_t a1, uint64_t (*a2)(void))
{
  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return objc_msgSendSuper2(&v4, "dealloc");
}

id MPCPlayerResponseItem.hasStoreLyrics.getter()
{
  id v1 = [v0 metadataObject];
  id v2 = v1;
  if (v1)
  {
    id v3 = [v1 innermostModelObject];

    self;
    objc_super v4 = (void *)swift_dynamicCastObjCClass();
    if (v4 && (id v5 = [v4 lyrics]) != 0)
    {
      uint64_t v6 = v5;
      id v2 = [v5 hasStoreLyrics];
    }
    else
    {
      id v2 = 0;
    }
  }
  return v2;
}

uint64_t MPCPlayerResponseItem.supportsLyrics.getter()
{
  uint64_t result = (uint64_t)[v0 metadataObject];
  if (result)
  {
    id v2 = (void *)result;
    id v3 = [(id)result innermostModelObject];

    self;
    objc_super v4 = (void *)swift_dynamicCastObjCClass();
    if (!v4) {
      goto LABEL_11;
    }
    id v5 = v4;
    if ((specialized static LyricsLoader.supportsLyrics(for:)(v4) & 1) == 0) {
      goto LABEL_11;
    }
    id v6 = [self sharedMonitor];
    unsigned int v7 = [v6 isRemoteServerLikelyReachable];

    if (v7)
    {

      return 1;
    }
    id v8 = [v5 lyrics];
    if (v8 && (id v9 = v8, v10 = [v8 text], v9, v10))
    {
      uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v13 = v12;

      swift_bridgeObjectRelease();
      uint64_t v14 = HIBYTE(v13) & 0xF;
      if ((v13 & 0x2000000000000000) == 0) {
        uint64_t v14 = v11 & 0xFFFFFFFFFFFFLL;
      }
      return v14 != 0;
    }
    else
    {
LABEL_11:

      return 0;
    }
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type LineProgressGradientView.Direction and conformance LineProgressGradientView.Direction()
{
  unint64_t result = lazy protocol witness table cache variable for type LineProgressGradientView.Direction and conformance LineProgressGradientView.Direction;
  if (!lazy protocol witness table cache variable for type LineProgressGradientView.Direction and conformance LineProgressGradientView.Direction)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type LineProgressGradientView.Direction and conformance LineProgressGradientView.Direction);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for LineProgressGradientView.Direction(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10034644CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LineProgressGradientView.Direction()
{
  return &type metadata for LineProgressGradientView.Direction;
}

unint64_t type metadata accessor for CAGradientLayer()
{
  unint64_t result = lazy cache variable for type metadata for CAGradientLayer;
  if (!lazy cache variable for type metadata for CAGradientLayer)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for CAGradientLayer);
  }
  return result;
}

char *VocalsAttenuationSlider.init(frame:)(double a1, double a2, double a3, double a4)
{
  v22.receiver = v4;
  v22.super_class = (Class)swift_getObjectType();
  id v9 = objc_msgSendSuper2(&v22, "initWithFrame:", a1, a2, a3, a4);
  uint64_t v10 = static AccessibilityIdentifier.named(_:)(0xD000000000000017, (void *)0x80000001004741C0);
  UIAccessibilityIdentification.musicAccessibilityIdentifier.setter(v10, v11);
  uint64_t v12 = one-time initialization token for module;
  unint64_t v13 = (char *)v9;
  if (v12 != -1) {
    swift_once();
  }
  uint64_t v14 = (void *)static NSBundle.module;
  char v15 = (uint64_t *)&v13[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_packageDefinition];
  swift_beginAccess();
  outlined init with take of CAPackageDefinition?((uint64_t)v15, (uint64_t)v23);
  uint64_t v20 = v15[1];
  uint64_t v21 = *v15;
  id v19 = (void *)v15[2];
  *(_OWORD *)char v15 = xmmword_1004A3C90;
  v15[2] = (uint64_t)v14;
  v15[3] = 0x3FF0000000000000;
  void v15[4] = 0;
  v15[5] = 0;
  v15[6] = 0x3FF0000000000000;
  v15[7] = 0;
  v15[8] = 0;
  v15[9] = (uint64_t)_swiftEmptyArrayStorage;
  id v16 = v14;
  outlined retain of CAPackageDefinition?(v23, (void (*)(void, void, void, void, void, void, void, void, void, void))outlined copy of CAPackageDefinition?);
  swift_bridgeObjectRetain();
  id v17 = v16;
  swift_bridgeObjectRetain();
  outlined consume of CAPackageDefinition?(v21, v20, v19);
  VerticalToggleSlider.packageDefinition.didset((uint64_t)v23);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  outlined retain of CAPackageDefinition?(v23, (void (*)(void, void, void, void, void, void, void, void, void, void))outlined consume of CAPackageDefinition?);

  return v13;
}

void VocalsAttenuationSlider.accessibilitySliderCurrentPercentageValue.getter()
{
  if (*(float *)(v0 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__minValue) > *(float *)(v0
                                                                                                 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__maxValue))
    __break(1u);
}

uint64_t outlined init with take of CAPackageDefinition?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for CAPackageDefinition?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t outlined copy of CAPackageDefinition?(uint64_t a1, uint64_t a2, void *a3)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    id v4 = a3;
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t outlined consume of CAPackageDefinition?(uint64_t a1, uint64_t a2, void *a3)
{
  if (a2)
  {
    swift_bridgeObjectRelease();

    return swift_bridgeObjectRelease();
  }
  return result;
}

void *outlined retain of CAPackageDefinition?(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void, void))
{
  return a1;
}

uint64_t type metadata accessor for VocalsAttenuationSlider()
{
  return self;
}

double Corner.radius(in:)(uint64_t a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5, uint64_t a6, char a7)
{
  if ((a7 & 1) == 0) {
    return *(double *)&a1;
  }
  double Width = CGRectGetWidth(*(CGRect *)&a2);
  v14.origin.CGFloat x = a2;
  v14.origin.CGFloat y = a3;
  v14.size.width = a4;
  v14.size.CGFloat height = a5;
  double Height = CGRectGetHeight(v14);
  if (Height >= Width) {
    double Height = Width;
  }
  return Height * 0.5;
}

void Corner.hash(into:)(uint64_t a1, Swift::UInt64 a2, Swift::UInt a3, char a4)
{
  if (a4)
  {
    String.hash(into:)();
  }
  else
  {
    String.hash(into:)();
    if ((a2 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
      Swift::UInt64 v6 = a2;
    }
    else {
      Swift::UInt64 v6 = 0;
    }
    Hasher._combine(_:)(v6);
    Hasher._combine(_:)(a3);
  }
}

BOOL static Corner.__derived_enum_equals(_:_:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  BOOL v6 = (a6 & 1) == 0;
  if (*(double *)&a1 != *(double *)&a4) {
    BOOL v6 = 0;
  }
  if (a2 != a5) {
    BOOL v6 = 0;
  }
  if (a3) {
    return a6 & 1;
  }
  else {
    return v6;
  }
}

Swift::Int Corner.hashValue.getter(Swift::UInt64 a1, Swift::UInt a2, char a3)
{
  Hasher.init(_seed:)();
  if (a3)
  {
    String.hash(into:)();
  }
  else
  {
    String.hash(into:)();
    if ((a1 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
      Swift::UInt64 v6 = a1;
    }
    else {
      Swift::UInt64 v6 = 0;
    }
    Hasher._combine(_:)(v6);
    Hasher._combine(_:)(a2);
  }
  return Hasher._finalize()();
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance Corner()
{
  Swift::UInt64 v1 = *(void *)v0;
  Swift::UInt v2 = *(void *)(v0 + 8);
  char v3 = *(unsigned char *)(v0 + 16);
  Hasher.init(_seed:)();
  Corner.hash(into:)((uint64_t)v5, v1, v2, v3);
  return Hasher._finalize()();
}

void protocol witness for Hashable.hash(into:) in conformance Corner(uint64_t a1)
{
  Corner.hash(into:)(a1, *(void *)v1, *(void *)(v1 + 8), *(unsigned char *)(v1 + 16));
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance Corner()
{
  Swift::UInt64 v1 = *(void *)v0;
  Swift::UInt v2 = *(void *)(v0 + 8);
  char v3 = *(unsigned char *)(v0 + 16);
  Hasher.init(_seed:)();
  Corner.hash(into:)((uint64_t)v5, v1, v2, v3);
  return Hasher._finalize()();
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance Corner(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a1 + 16);
  uint64_t result = *(unsigned __int8 *)(a2 + 16);
  if ((v3 & 1) == 0)
  {
    uint64_t v5 = *(void *)(a1 + 8);
    unsigned int v6 = (*(double *)a1 == *(double *)a2) & ~result;
    if (v5 == *(void *)(a2 + 8)) {
      return v6;
    }
    else {
      return 0;
    }
  }
  return result;
}

void Border.hash(into:)(double a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  swift_retain();
  Color.hash(into:)();
  swift_release();
  if ((*(void *)&a1 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v6 = *(void *)&a1;
  }
  else {
    Swift::UInt64 v6 = 0;
  }
  Hasher._combine(_:)(v6);
  Hasher._combine(_:)(a4);
}

uint64_t static Border.__derived_struct_equals(_:_:)(double a1, double a2, uint64_t a3, unsigned __int8 a4, uint64_t a5, unsigned __int8 a6)
{
  int v7 = a4;
  unsigned int v8 = static Color.== infix(_:_:)() & (a1 == a2);
  if (v7 == a6) {
    return v8;
  }
  else {
    return 0;
  }
}

Swift::Int Border.hashValue.getter(double a1, uint64_t a2, unsigned __int8 a3)
{
  Hasher.init(_seed:)();
  swift_retain();
  Color.hash(into:)();
  swift_release();
  if ((*(void *)&a1 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v5 = *(void *)&a1;
  }
  else {
    Swift::UInt64 v5 = 0;
  }
  Hasher._combine(_:)(v5);
  Hasher._combine(_:)(a3);
  return Hasher._finalize()();
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance Border()
{
  return Border.hashValue.getter(*(double *)(v0 + 8), *(void *)v0, *(unsigned char *)(v0 + 16));
}

void protocol witness for Hashable.hash(into:) in conformance Border()
{
  Swift::UInt64 v1 = *(void *)(v0 + 8);
  Swift::UInt v2 = *(unsigned __int8 *)(v0 + 16);
  swift_retain();
  Color.hash(into:)();
  swift_release();
  if ((v1 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v3 = v1;
  }
  else {
    Swift::UInt64 v3 = 0;
  }
  Hasher._combine(_:)(v3);
  Hasher._combine(_:)(v2);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance Border()
{
  Swift::UInt64 v1 = *(void *)(v0 + 8);
  Swift::UInt v2 = *(unsigned __int8 *)(v0 + 16);
  Hasher.init(_seed:)();
  swift_retain();
  Color.hash(into:)();
  swift_release();
  if ((v1 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v3 = v1;
  }
  else {
    Swift::UInt64 v3 = 0;
  }
  Hasher._combine(_:)(v3);
  Hasher._combine(_:)(v2);
  return Hasher._finalize()();
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance Border(uint64_t a1, uint64_t a2)
{
  double v2 = *(double *)(a1 + 8);
  int v3 = *(unsigned __int8 *)(a1 + 16);
  double v4 = *(double *)(a2 + 8);
  int v5 = *(unsigned __int8 *)(a2 + 16);
  char v6 = static Color.== infix(_:_:)();
  BOOL result = 0;
  if ((v6 & 1) != 0 && v2 == v4) {
    return v3 == v5;
  }
  return result;
}

uint64_t View.corner(_:)()
{
  return View.modifier<A>(_:)();
}

uint64_t protocol witness for ViewModifier.body(content:) in conformance CornerRadiusModifier@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<_ViewModifier_Content<CornerRadiusModifier>, _CompositingGroupEffect>);
  __chkstk_darwin();
  char v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v2;
  uint64_t v8 = v2[1];
  char v9 = *((unsigned char *)v2 + 16);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ViewModifier_Content<CornerRadiusModifier>);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v6, a1, v10);
  outlined init with copy of ModifiedContent<_ViewModifier_Content<CornerRadiusModifier>, _CompositingGroupEffect>((uint64_t)v6, a2);
  uint64_t v11 = a2
      + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<_ViewModifier_Content<CornerRadiusModifier>, _CompositingGroupEffect>, _ClipEffect<CornerShape>>)
               + 36);
  *(void *)uint64_t v11 = v7;
  *(void *)(v11 + 8) = v8;
  *(unsigned char *)(v11 + 16) = v9;
  *(void *)(v11 + 24) = 0;
  *(_WORD *)(v11 + 32) = 256;
  return outlined destroy of TaskPriority?((uint64_t)v6, &demangling cache variable for type metadata for ModifiedContent<_ViewModifier_Content<CornerRadiusModifier>, _CompositingGroupEffect>);
}

uint64_t View.border(_:corner:)()
{
  return View.modifier<A>(_:)();
}

uint64_t BorderViewModifier.body(content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v26 = a1;
  uint64_t v27 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<_ViewModifier_Content<BorderViewModifier>, _OverlayModifier<StrokeShapeView<CornerShape, Color, EmptyView>>>);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v2;
  if (!*((unsigned char *)v2 + 16))
  {
    double v8 = 0.5;
    goto LABEL_5;
  }
  double v7 = 0.0;
  if (*((unsigned char *)v2 + 16) == 1)
  {
    double v8 = -0.5;
LABEL_5:
    double v7 = *((double *)v2 + 1) * v8;
  }
  uint64_t v9 = v2[3];
  uint64_t v25 = v2[4];
  char v10 = *((unsigned char *)v2 + 40);
  swift_retain();
  StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)();
  uint64_t v11 = v28;
  uint64_t v12 = v30;
  uint64_t v13 = v31;
  uint64_t v14 = v32;
  uint64_t v15 = static Alignment.center.getter();
  uint64_t v17 = v16;
  uint64_t v18 = static Alignment.center.getter();
  uint64_t v20 = v19;
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ViewModifier_Content<BorderViewModifier>);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16))(v5, v26, v21);
  objc_super v22 = &v5[*(int *)(v3 + 36)];
  uint64_t v23 = v25;
  *(void *)objc_super v22 = v9;
  *((void *)v22 + 1) = v23;
  v22[16] = v10;
  *((double *)v22 + 3) = v7;
  *((void *)v22 + 4) = v11;
  *((void *)v22 + 5) = v29;
  *((void *)v22 + 6) = v12;
  *((void *)v22 + 7) = v13;
  *((void *)v22 + 8) = v14;
  *((void *)v22 + 9) = v6;
  *((_WORD *)v22 + 40) = 256;
  *((void *)v22 + 11) = v15;
  *((void *)v22 + 12) = v17;
  *((void *)v22 + 13) = v18;
  *((void *)v22 + 14) = v20;
  return outlined init with take of ModifiedContent<_ViewModifier_Content<BorderViewModifier>, _OverlayModifier<StrokeShapeView<CornerShape, Color, EmptyView>>>((uint64_t)v5, v27);
}

uint64_t protocol witness for ViewModifier.body(content:) in conformance BorderViewModifier@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return BorderViewModifier.body(content:)(a1, a2);
}

uint64_t View.hover(corner:outset:isRelative:namespace:isEnabled:)()
{
  return View.modifier<A>(_:)();
}

uint64_t protocol witness for ViewModifier.body(content:) in conformance HoverViewModifier@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v24 = a1;
  uint64_t v27 = a2;
  uint64_t v3 = type metadata accessor for HighlightHoverEffect();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v25 = v3;
  uint64_t v26 = v4;
  __chkstk_darwin();
  uint64_t v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ContentShapeKinds();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin();
  char v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<_ViewModifier_Content<HoverViewModifier>, _ContentShapeKindModifier<CornerShape>>);
  __chkstk_darwin();
  uint64_t v13 = (char *)v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *v2;
  uint64_t v14 = v2[1];
  char v16 = *((unsigned char *)v2 + 16);
  double v17 = *((double *)v2 + 3);
  v23[3] = *((unsigned __int8 *)v2 + 41);
  static ContentShapeKinds.hoverEffect.getter();
  uint64_t v18 = &v13[*(int *)(v11 + 36)];
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContentShapeKindModifier<CornerShape>);
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(&v18[*(int *)(v19 + 40)], v10, v7);
  *(void *)uint64_t v18 = v15;
  *((void *)v18 + 1) = v14;
  v18[16] = v16;
  *((double *)v18 + 3) = -v17;
  v18[32] = 0;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ViewModifier_Content<HoverViewModifier>);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v13, v24, v20);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  static CustomHoverEffect<>.highlight.getter();
  lazy protocol witness table accessor for type ModifiedContent<_ViewModifier_Content<HoverViewModifier>, _ContentShapeKindModifier<CornerShape>> and conformance <> ModifiedContent<A, B>();
  lazy protocol witness table accessor for type HighlightHoverEffect and conformance HighlightHoverEffect();
  uint64_t v21 = v25;
  View.hoverEffect<A>(_:isEnabled:)();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v6, v21);
  return outlined destroy of TaskPriority?((uint64_t)v13, &demangling cache variable for type metadata for ModifiedContent<_ViewModifier_Content<HoverViewModifier>, _ContentShapeKindModifier<CornerShape>>);
}

void CornerShape.path(in:)(double a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>, CGFloat a5@<D0>, CGFloat a6@<D1>, CGFloat a7@<D2>, CGFloat a8@<D3>, CGFloat a9@<D4>)
{
  double v40 = a1;
  uint64_t v41 = a2;
  uint64_t v16 = type metadata accessor for RoundedCornerStyle();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin();
  uint64_t v19 = (char *)&v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Capsule();
  __chkstk_darwin();
  uint64_t v21 = (char *)&v39 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for RoundedRectangle();
  __chkstk_darwin();
  uint64_t v24 = (char *)&v39 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for RoundedRectangle._Inset();
  __chkstk_darwin();
  uint64_t v27 = (char *)&v39 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
  {
    unint64_t v37 = *(void (**)(char *, void, uint64_t))(v17 + 104);
    v37(v21, enum case for RoundedCornerStyle.continuous(_:), v16);
    v37(v19, enum case for RoundedCornerStyle.circular(_:), v16);
    static RoundedCornerStyle.== infix(_:_:)();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
    outlined destroy of Capsule((uint64_t)v21, (uint64_t (*)(void))&type metadata accessor for Capsule);
    Capsule._Inset.path(in:)();
    uint64_t v32 = v42;
    uint64_t v33 = v43;
    uint64_t v34 = v44;
    uint64_t v35 = v45;
    char v36 = v46;
  }
  else
  {
    uint64_t v28 = v41;
    if (v41 == -1)
    {
      (*(void (**)(char *, void, uint64_t))(v17 + 104))(&v24[*(int *)(v22 + 20)], enum case for RoundedCornerStyle.continuous(_:), v16);
      double v38 = v40;
      *(double *)uint64_t v24 = v40;
      *((double *)v24 + 1) = v38;
      outlined init with copy of RoundedRectangle((uint64_t)v24, (uint64_t)v27);
      *(CGFloat *)&v27[*(int *)(v25 + 20)] = a9;
      outlined destroy of Capsule((uint64_t)v24, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
      RoundedRectangle._Inset.path(in:)();
      uint64_t v32 = v42;
      uint64_t v33 = v43;
      uint64_t v34 = v44;
      uint64_t v35 = v45;
      char v36 = v46;
      outlined destroy of Capsule((uint64_t)v27, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle._Inset);
    }
    else
    {
      double v29 = v40;
      v47.origin.CGFloat x = a5;
      v47.origin.CGFloat y = a6;
      v47.size.width = a7;
      v47.size.CGFloat height = a8;
      CGRect v48 = CGRectInset(v47, a9, a9);
      id v30 = objc_msgSend(self, "bezierPathWithRoundedRect:byRoundingCorners:cornerRadii:", v28, v48.origin.x, v48.origin.y, v48.size.width, v48.size.height, v29, v29);
      id v31 = [v30 CGPath];
      Path.init(_:)();
      uint64_t v32 = v42;
      uint64_t v33 = v43;
      uint64_t v34 = v44;
      uint64_t v35 = v45;
      char v36 = v46;
    }
  }
  *(void *)a4 = v32;
  *(void *)(a4 + 8) = v33;
  *(void *)(a4 + 16) = v34;
  *(void *)(a4 + 24) = v35;
  *(unsigned char *)(a4 + 32) = v36;
}

double protocol witness for InsettableShape.inset(by:) in conformance CornerShape@<D0>(uint64_t a1@<X8>, double a2@<D0>)
{
  char v3 = *(unsigned char *)(v2 + 16);
  double result = *(double *)(v2 + 24) + a2;
  *(_OWORD *)a1 = *(_OWORD *)v2;
  *(unsigned char *)(a1 + 16) = v3;
  *(double *)(a1 + 24) = result;
  return result;
}

double protocol witness for Shape.path(in:) in conformance CornerShape@<D0>(uint64_t a1@<X8>, CGFloat a2@<D0>, CGFloat a3@<D1>, CGFloat a4@<D2>, CGFloat a5@<D3>)
{
  CornerShape.path(in:)(*(double *)v5, *(void *)(v5 + 8), *(unsigned char *)(v5 + 16), (uint64_t)v9, a2, a3, a4, a5, *(CGFloat *)(v5 + 24));
  double result = *(double *)v9;
  long long v8 = v9[1];
  *(_OWORD *)a1 = v9[0];
  *(_OWORD *)(a1 + 16) = v8;
  *(unsigned char *)(a1 + 32) = v10;
  return result;
}

uint64_t protocol witness for static View._makeView(view:inputs:) in conformance CornerShape(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = lazy protocol witness table accessor for type CornerShape and conformance CornerShape();

  return static Shape._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t protocol witness for static View._makeViewList(view:inputs:) in conformance CornerShape(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = lazy protocol witness table accessor for type CornerShape and conformance CornerShape();

  return static Shape._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

uint64_t protocol witness for View.body.getter in conformance CornerShape(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type CornerShape and conformance CornerShape();

  return Shape.body.getter(a1, v2);
}

uint64_t *Corner.extraSmall.unsafeMutableAddressor()
{
  if (one-time initialization token for extraSmall != -1) {
    swift_once();
  }
  return &static Corner.extraSmall;
}

uint64_t static Corner.extraSmall.getter()
{
  if (one-time initialization token for extraSmall != -1) {
    swift_once();
  }
  return static Corner.extraSmall;
}

uint64_t *Corner.small.unsafeMutableAddressor()
{
  if (one-time initialization token for small != -1) {
    swift_once();
  }
  return &static Corner.small;
}

uint64_t static Corner.small.getter()
{
  if (one-time initialization token for small != -1) {
    swift_once();
  }
  return static Corner.small;
}

uint64_t *Corner.medium.unsafeMutableAddressor()
{
  if (one-time initialization token for medium != -1) {
    swift_once();
  }
  return &static Corner.medium;
}

uint64_t static Corner.medium.getter()
{
  if (one-time initialization token for medium != -1) {
    swift_once();
  }
  return static Corner.medium;
}

uint64_t *Corner.large.unsafeMutableAddressor()
{
  if (one-time initialization token for large != -1) {
    swift_once();
  }
  return &static Corner.large;
}

uint64_t static Corner.large.getter()
{
  if (one-time initialization token for large != -1) {
    swift_once();
  }
  return static Corner.large;
}

uint64_t *Corner.extraLarge.unsafeMutableAddressor()
{
  if (one-time initialization token for extraLarge != -1) {
    swift_once();
  }
  return &static Corner.extraLarge;
}

uint64_t static Corner.extraLarge.getter()
{
  if (one-time initialization token for extraLarge != -1) {
    swift_once();
  }
  return static Corner.extraLarge;
}

id closure #1 in variable initialization expression of static Border.artwork(void *a1)
{
  id v1 = [a1 userInterfaceStyle];
  unint64_t v2 = self;
  if (v1 == (id)1)
  {
    id v3 = [v2 blackColor];
    id v4 = [v3 colorWithAlphaComponent:0.08];
  }
  else
  {
    id v3 = [v2 whiteColor];
    id v4 = [v3 colorWithAlphaComponent:0.1];
  }
  id v5 = v4;

  return v5;
}

uint64_t *Border.artwork.unsafeMutableAddressor()
{
  if (one-time initialization token for artwork != -1) {
    swift_once();
  }
  return &static Border.artwork;
}

double static Border.artwork.getter()
{
  if (one-time initialization token for artwork != -1) {
    swift_once();
  }
  double v0 = *(double *)&qword_1005AE930;
  swift_retain();
  return v0;
}

unint64_t lazy protocol witness table accessor for type Corner and conformance Corner()
{
  unint64_t result = lazy protocol witness table cache variable for type Corner and conformance Corner;
  if (!lazy protocol witness table cache variable for type Corner and conformance Corner)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Corner and conformance Corner);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type Border.StrokeStyle and conformance Border.StrokeStyle()
{
  unint64_t result = lazy protocol witness table cache variable for type Border.StrokeStyle and conformance Border.StrokeStyle;
  if (!lazy protocol witness table cache variable for type Border.StrokeStyle and conformance Border.StrokeStyle)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Border.StrokeStyle and conformance Border.StrokeStyle);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type Border and conformance Border()
{
  unint64_t result = lazy protocol witness table cache variable for type Border and conformance Border;
  if (!lazy protocol witness table cache variable for type Border and conformance Border)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Border and conformance Border);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for Corner(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for Corner(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(unsigned char *)(result + 16) = 0;
    *(_DWORD *)unint64_t result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 17) = v3;
  return result;
}

uint64_t getEnumTag for Corner(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t destructiveInjectEnumTag for Corner(uint64_t result, int a2)
{
  if (a2)
  {
    *(void *)unint64_t result = (a2 - 1);
    *(void *)(result + 8) = 0;
    *(unsigned char *)(result + 16) = 1;
  }
  else
  {
    *(unsigned char *)(result + 16) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for Corner()
{
  return &type metadata for Corner;
}

uint64_t initializeBufferWithCopyOfBuffer for Border(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for Border(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for Border(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

ValueMetadata *type metadata accessor for Border()
{
  return &type metadata for Border;
}

unsigned char *storeEnumTagSinglePayload for Border.StrokeStyle(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100348690);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Border.StrokeStyle()
{
  return &type metadata for Border.StrokeStyle;
}

uint64_t sub_1003486C8(uint64_t a1)
{
  return get_witness_table_7SwiftUI4ViewRzlAA15ModifiedContentVyx09MusicCoreB020CornerRadiusModifier33_0FA4743D1401B6C1F29D2373CEDF9367LLVGAaBHPxAaBHD1__AhA0cJ0HPyHCHCTm(a1, (uint64_t)&type metadata for CornerRadiusModifier, (void (*)(void))lazy protocol witness table accessor for type CornerRadiusModifier and conformance CornerRadiusModifier);
}

unint64_t lazy protocol witness table accessor for type CornerRadiusModifier and conformance CornerRadiusModifier()
{
  unint64_t result = lazy protocol witness table cache variable for type CornerRadiusModifier and conformance CornerRadiusModifier;
  if (!lazy protocol witness table cache variable for type CornerRadiusModifier and conformance CornerRadiusModifier)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type CornerRadiusModifier and conformance CornerRadiusModifier);
  }
  return result;
}

uint64_t sub_10034873C(uint64_t a1)
{
  return get_witness_table_7SwiftUI4ViewRzlAA15ModifiedContentVyx09MusicCoreB020CornerRadiusModifier33_0FA4743D1401B6C1F29D2373CEDF9367LLVGAaBHPxAaBHD1__AhA0cJ0HPyHCHCTm(a1, (uint64_t)&type metadata for BorderViewModifier, (void (*)(void))lazy protocol witness table accessor for type BorderViewModifier and conformance BorderViewModifier);
}

unint64_t lazy protocol witness table accessor for type BorderViewModifier and conformance BorderViewModifier()
{
  unint64_t result = lazy protocol witness table cache variable for type BorderViewModifier and conformance BorderViewModifier;
  if (!lazy protocol witness table cache variable for type BorderViewModifier and conformance BorderViewModifier)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type BorderViewModifier and conformance BorderViewModifier);
  }
  return result;
}

uint64_t sub_1003487B0(uint64_t a1)
{
  return get_witness_table_7SwiftUI4ViewRzlAA15ModifiedContentVyx09MusicCoreB020CornerRadiusModifier33_0FA4743D1401B6C1F29D2373CEDF9367LLVGAaBHPxAaBHD1__AhA0cJ0HPyHCHCTm(a1, (uint64_t)&unk_100544958, (void (*)(void))lazy protocol witness table accessor for type HoverViewModifier and conformance HoverViewModifier);
}

uint64_t get_witness_table_7SwiftUI4ViewRzlAA15ModifiedContentVyx09MusicCoreB020CornerRadiusModifier33_0FA4743D1401B6C1F29D2373CEDF9367LLVGAaBHPxAaBHD1__AhA0cJ0HPyHCHCTm(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  return swift_getWitnessTable();
}

unint64_t lazy protocol witness table accessor for type HoverViewModifier and conformance HoverViewModifier()
{
  unint64_t result = lazy protocol witness table cache variable for type HoverViewModifier and conformance HoverViewModifier;
  if (!lazy protocol witness table cache variable for type HoverViewModifier and conformance HoverViewModifier)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type HoverViewModifier and conformance HoverViewModifier);
  }
  return result;
}

__n128 __swift_memcpy42_8_0(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 26) = *(_OWORD *)(a2 + 26);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for HoverViewModifier(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 42)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 41);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for HoverViewModifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 40) = 0;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 42) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 42) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 41) = a2 + 1;
    }
  }
  return result;
}

void *type metadata accessor for HoverViewModifier()
{
  return &unk_100544958;
}

uint64_t initializeWithCopy for BorderViewModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for BorderViewModifier(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = v4;
  return a1;
}

__n128 __swift_memcpy41_8_0(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for BorderViewModifier(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for BorderViewModifier(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 41)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BorderViewModifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 41) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BorderViewModifier()
{
  return &type metadata for BorderViewModifier;
}

uint64_t storeEnumTagSinglePayload for CornerRadiusModifier(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 17) = v3;
  return result;
}

ValueMetadata *type metadata accessor for CornerRadiusModifier()
{
  return &type metadata for CornerRadiusModifier;
}

uint64_t associated type witness table accessor for ViewModifier.Body : View in HoverViewModifier()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t associated type witness table accessor for ViewModifier.Body : View in BorderViewModifier()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t associated type witness table accessor for ViewModifier.Body : View in CornerRadiusModifier()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t outlined init with copy of ModifiedContent<_ViewModifier_Content<CornerRadiusModifier>, _CompositingGroupEffect>(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<_ViewModifier_Content<CornerRadiusModifier>, _CompositingGroupEffect>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined init with take of ModifiedContent<_ViewModifier_Content<BorderViewModifier>, _OverlayModifier<StrokeShapeView<CornerShape, Color, EmptyView>>>(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<_ViewModifier_Content<BorderViewModifier>, _OverlayModifier<StrokeShapeView<CornerShape, Color, EmptyView>>>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<_ViewModifier_Content<HoverViewModifier>, _ContentShapeKindModifier<CornerShape>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<_ViewModifier_Content<HoverViewModifier>, _ContentShapeKindModifier<CornerShape>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<_ViewModifier_Content<HoverViewModifier>, _ContentShapeKindModifier<CornerShape>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<_ViewModifier_Content<HoverViewModifier>, _ContentShapeKindModifier<CornerShape>>);
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type _ViewModifier_Content<HoverViewModifier> and conformance _ViewModifier_Content<A>, &demangling cache variable for type metadata for _ViewModifier_Content<HoverViewModifier>);
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type _ContentShapeKindModifier<CornerShape> and conformance _ContentShapeKindModifier<A>, &demangling cache variable for type metadata for _ContentShapeKindModifier<CornerShape>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<_ViewModifier_Content<HoverViewModifier>, _ContentShapeKindModifier<CornerShape>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type HighlightHoverEffect and conformance HighlightHoverEffect()
{
  unint64_t result = lazy protocol witness table cache variable for type HighlightHoverEffect and conformance HighlightHoverEffect;
  if (!lazy protocol witness table cache variable for type HighlightHoverEffect and conformance HighlightHoverEffect)
  {
    type metadata accessor for HighlightHoverEffect();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type HighlightHoverEffect and conformance HighlightHoverEffect);
  }
  return result;
}

uint64_t block_copy_helper_61(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_61()
{
  return swift_release();
}

void *type metadata accessor for CornerShape()
{
  return &unk_100544B08;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<_ViewModifier_Content<CornerRadiusModifier>, _CompositingGroupEffect>, _ClipEffect<CornerShape>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<_ViewModifier_Content<CornerRadiusModifier>, _CompositingGroupEffect>, _ClipEffect<CornerShape>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<_ViewModifier_Content<CornerRadiusModifier>, _CompositingGroupEffect>, _ClipEffect<CornerShape>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<_ViewModifier_Content<CornerRadiusModifier>, _CompositingGroupEffect>, _ClipEffect<CornerShape>>);
    lazy protocol witness table accessor for type ModifiedContent<_ViewModifier_Content<CornerRadiusModifier>, _CompositingGroupEffect> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type _ClipEffect<CornerShape> and conformance _ClipEffect<A>, &demangling cache variable for type metadata for _ClipEffect<CornerShape>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<_ViewModifier_Content<CornerRadiusModifier>, _CompositingGroupEffect>, _ClipEffect<CornerShape>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<_ViewModifier_Content<CornerRadiusModifier>, _CompositingGroupEffect> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<_ViewModifier_Content<CornerRadiusModifier>, _CompositingGroupEffect> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<_ViewModifier_Content<CornerRadiusModifier>, _CompositingGroupEffect> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<_ViewModifier_Content<CornerRadiusModifier>, _CompositingGroupEffect>);
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type _ViewModifier_Content<CornerRadiusModifier> and conformance _ViewModifier_Content<A>, &demangling cache variable for type metadata for _ViewModifier_Content<CornerRadiusModifier>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<_ViewModifier_Content<CornerRadiusModifier>, _CompositingGroupEffect> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<_ViewModifier_Content<BorderViewModifier>, _OverlayModifier<StrokeShapeView<CornerShape, Color, EmptyView>>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<_ViewModifier_Content<BorderViewModifier>, _OverlayModifier<StrokeShapeView<CornerShape, Color, EmptyView>>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<_ViewModifier_Content<BorderViewModifier>, _OverlayModifier<StrokeShapeView<CornerShape, Color, EmptyView>>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<_ViewModifier_Content<BorderViewModifier>, _OverlayModifier<StrokeShapeView<CornerShape, Color, EmptyView>>>);
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type _ViewModifier_Content<BorderViewModifier> and conformance _ViewModifier_Content<A>, &demangling cache variable for type metadata for _ViewModifier_Content<BorderViewModifier>);
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type _OverlayModifier<StrokeShapeView<CornerShape, Color, EmptyView>> and conformance _OverlayModifier<A>, &demangling cache variable for type metadata for _OverlayModifier<StrokeShapeView<CornerShape, Color, EmptyView>>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<_ViewModifier_Content<BorderViewModifier>, _OverlayModifier<StrokeShapeView<CornerShape, Color, EmptyView>>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t sub_100348FCC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t associated type witness table accessor for View.Body : View in CornerShape()
{
  return lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type _ShapeView<CornerShape, ForegroundStyle> and conformance _ShapeView<A, B>, &demangling cache variable for type metadata for _ShapeView<CornerShape, ForegroundStyle>);
}

unint64_t lazy protocol witness table accessor for type CornerShape and conformance CornerShape()
{
  unint64_t result = lazy protocol witness table cache variable for type CornerShape and conformance CornerShape;
  if (!lazy protocol witness table cache variable for type CornerShape and conformance CornerShape)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type CornerShape and conformance CornerShape);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type CornerShape and conformance CornerShape;
  if (!lazy protocol witness table cache variable for type CornerShape and conformance CornerShape)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type CornerShape and conformance CornerShape);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type CornerShape and conformance CornerShape;
  if (!lazy protocol witness table cache variable for type CornerShape and conformance CornerShape)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type CornerShape and conformance CornerShape);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type CornerShape and conformance CornerShape;
  if (!lazy protocol witness table cache variable for type CornerShape and conformance CornerShape)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type CornerShape and conformance CornerShape);
  }
  return result;
}

uint64_t outlined init with copy of RoundedRectangle(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RoundedRectangle();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of Capsule(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t NoticePresenter.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  NoticePresenter.init()();
  return v0;
}

uint64_t NoticePresenter.init()()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Notice?>);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin();
  uint64_t v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Notice?);
  __chkstk_darwin();
  unsigned int v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  long long v8 = (char *)&v18 - v7;
  uint64_t v9 = v0 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter__notice;
  uint64_t v10 = type metadata accessor for Notice(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v8, 1, 1, v10);
  outlined init with copy of (String, Any)((uint64_t)v8, (uint64_t)v6, &demangling cache variable for type metadata for Notice?);
  Published.init(initialValue:)();
  outlined destroy of TaskPriority?((uint64_t)v8, &demangling cache variable for type metadata for Notice?);
  (*(void (**)(uint64_t, char *, uint64_t))(v2 + 32))(v9, v4, v1);
  *(void *)(v0 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_dismissalWorkItem) = 0;
  uint64_t v11 = OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_uiKitConfiguration;
  if (one-time initialization token for defaultEdgePadding != -1) {
    swift_once();
  }
  uint64_t v12 = static NoticePresenter.defaultEdgePadding;
  long long v18 = *(_OWORD *)&NSDirectionalEdgeInsetsZero.top;
  CGFloat bottom = NSDirectionalEdgeInsetsZero.bottom;
  CGFloat trailing = NSDirectionalEdgeInsetsZero.trailing;
  uint64_t v15 = swift_unknownObjectWeakInit();
  char v19 = 2;
  uint64_t v20 = v12;
  long long v21 = v18;
  CGFloat v22 = bottom;
  CGFloat v23 = trailing;
  outlined init with take of NoticePresenter.UIKitConfiguration(v15, v0 + v11, (void (*)(uint64_t, uint64_t))&_swift_unknownObjectWeakTakeInit);
  uint64_t v16 = (void *)(v0 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_willPresentHandler);
  void *v16 = 0;
  v16[1] = 0;
  *(void *)(v0 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_passthroughWindow) = 0;
  return v0;
}

uint64_t property wrapper backing initializer of NoticePresenter.notice(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Notice?);
  __chkstk_darwin();
  outlined init with copy of (String, Any)(a1, (uint64_t)&v4 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), &demangling cache variable for type metadata for Notice?);
  Published.init(initialValue:)();
  return outlined destroy of TaskPriority?(a1, &demangling cache variable for type metadata for Notice?);
}

uint64_t key path getter for NoticePresenter.notice : NoticePresenter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();

  return swift_release();
}

uint64_t key path setter for NoticePresenter.notice : NoticePresenter(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Notice?);
  __chkstk_darwin();
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v7 - v4;
  outlined init with copy of (String, Any)(a1, (uint64_t)&v7 - v4, &demangling cache variable for type metadata for Notice?);
  swift_getKeyPath();
  swift_getKeyPath();
  outlined init with copy of (String, Any)((uint64_t)v5, (uint64_t)v3, &demangling cache variable for type metadata for Notice?);
  swift_retain();
  static Published.subscript.setter();
  return outlined destroy of TaskPriority?((uint64_t)v5, &demangling cache variable for type metadata for Notice?);
}

uint64_t NoticePresenter.notice.getter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();

  return swift_release();
}

uint64_t key path getter for NoticePresenter.$notice : NoticePresenter()
{
  return swift_endAccess();
}

uint64_t key path setter for NoticePresenter.$notice : NoticePresenter(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Notice?>.Publisher);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v10 - v6;
  long long v8 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v8((char *)&v10 - v6, a1, v2);
  v8(v5, (uint64_t)v7, v2);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Notice?>);
  Published.projectedValue.setter();
  swift_endAccess();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v7, v2);
}

uint64_t NoticePresenter.$notice.getter()
{
  return swift_endAccess();
}

Swift::Void __swiftcall NoticePresenter.dismiss(_:)(Swift::Bool a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Notice?);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v6 = type metadata accessor for Notice(0);
  int v7 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6);
  outlined destroy of TaskPriority?((uint64_t)v5, &demangling cache variable for type metadata for Notice?);
  if (v7 != 1)
  {
    uint64_t v8 = *(void *)(v1 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_dismissalWorkItem);
    *(void *)(v2 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_dismissalWorkItem) = 0;
    if (v8)
    {
      dispatch thunk of DispatchWorkItem.cancel()();
      swift_release();
    }
    if (a1) {
      static Animation.default.getter();
    }
    withAnimation<A>(_:_:)();
    swift_release();
    uint64_t v9 = *(void *)(v2 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_passthroughWindow);
    if (v9)
    {
      *(unsigned char *)(v9
               + OBJC_IVAR____TtCC11MusicCoreUI15NoticePresenterP33_D8FBFBA4851A241D976DAD2E389878C117PassthroughWindow_canReceiveTouches) = 0;
      type metadata accessor for UIMenu(0, (unint64_t *)&_sSo17OS_dispatch_queueCML_1);
      uint64_t v10 = (void *)static OS_dispatch_queue.main.getter();
      swift_retain();
      OS_dispatch_queue.asyncAfter(_:block:)((uint64_t)partial apply for closure #2 in NoticePresenter.dismiss(_:), v2);

      swift_release();
    }
  }
}

uint64_t closure #1 in NoticePresenter.dismiss(_:)()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Notice?);
  __chkstk_darwin();
  uint64_t v1 = (char *)v6 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v3 = (char *)v6 - v2;
  uint64_t v4 = type metadata accessor for Notice(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  swift_getKeyPath();
  swift_getKeyPath();
  outlined init with copy of (String, Any)((uint64_t)v3, (uint64_t)v1, &demangling cache variable for type metadata for Notice?);
  swift_retain();
  static Published.subscript.setter();
  return outlined destroy of TaskPriority?((uint64_t)v3, &demangling cache variable for type metadata for Notice?);
}

void closure #2 in NoticePresenter.dismiss(_:)()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Notice?);
  __chkstk_darwin();
  uint64_t v1 = (char *)&v4 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v2 = type metadata accessor for Notice(0);
  int v3 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(v1, 1, v2);
  outlined destroy of TaskPriority?((uint64_t)v1, &demangling cache variable for type metadata for Notice?);
  if (v3 == 1) {
    NoticePresenter.passthroughWindow.setter(0);
  }
}

uint64_t NoticePresenter.present(_:internalOnly:)(uint64_t a1, char a2)
{
  type metadata accessor for Notice(0);
  __chkstk_darwin();
  uint64_t v5 = (unint64_t *)((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  static Notice.variant(_:)(a1, v5);
  specialized NoticePresenter.present(_:internalOnly:animated:)((uint64_t)v5, a2);
  return outlined destroy of Notice((uint64_t)v5, type metadata accessor for Notice);
}

void closure #1 in NoticePresenter.present(_:internalOnly:animated:)(uint64_t a1, uint64_t a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Notice?);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v20 - v6;
  outlined init with copy of Notice(a2, (uint64_t)&v20 - v6, type metadata accessor for Notice);
  uint64_t v8 = type metadata accessor for Notice(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 0, 1, v8);
  swift_getKeyPath();
  swift_getKeyPath();
  outlined init with copy of (String, Any)((uint64_t)v7, (uint64_t)v5, &demangling cache variable for type metadata for Notice?);
  swift_retain();
  static Published.subscript.setter();
  outlined destroy of TaskPriority?((uint64_t)v7, &demangling cache variable for type metadata for Notice?);
  uint64_t v9 = OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_passthroughWindow;
  uint64_t v10 = *(void **)(a1 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_passthroughWindow);
  if (v10)
  {
    id v11 = [v10 rootViewController];
    if (v11)
    {
      uint64_t v12 = v11;
      type metadata accessor for NoticePresenter.UIRootViewController();
      uint64_t v13 = (void *)swift_dynamicCastClass();
      if (v13)
      {
        id v14 = [v13 view];

        if (!v14)
        {
          __break(1u);
          goto LABEL_15;
        }
        [v14 setNeedsLayout];
        uint64_t v12 = v14;
      }
    }
    uint64_t v15 = *(void **)(a1 + v9);
    if (v15)
    {
      id v16 = [v15 rootViewController];
      if (v16)
      {
        uint64_t v17 = v16;
        type metadata accessor for NoticePresenter.UIRootViewController();
        long long v18 = (void *)swift_dynamicCastClass();
        if (!v18)
        {
LABEL_12:

          return;
        }
        id v19 = [v18 view];

        if (v19)
        {
          [v19 layoutIfNeeded];
          uint64_t v17 = v19;
          goto LABEL_12;
        }
LABEL_15:
        __break(1u);
      }
    }
  }
}

void one-time initialization function for defaultEdgePadding()
{
  static NoticePresenter.defaultEdgePadding = 0x4024000000000000;
}

uint64_t *NoticePresenter.defaultEdgePadding.unsafeMutableAddressor()
{
  if (one-time initialization token for defaultEdgePadding != -1) {
    swift_once();
  }
  return &static NoticePresenter.defaultEdgePadding;
}

double static NoticePresenter.defaultEdgePadding.getter()
{
  if (one-time initialization token for defaultEdgePadding != -1) {
    swift_once();
  }
  return *(double *)&static NoticePresenter.defaultEdgePadding;
}

void *NoticePresenter.defaultEdge.unsafeMutableAddressor()
{
  return &static NoticePresenter.defaultEdge;
}

uint64_t NoticePresenter.UIKitConfiguration.init(edge:padding:insets:)(char a1, double a2, double a3, double a4, double a5, double a6)
{
  uint64_t result = swift_unknownObjectWeakInit();
  *(unsigned char *)(result + 8) = a1;
  *(double *)(result + 16) = a2;
  *(double *)(result + 24) = a3;
  *(double *)(result + 32) = a4;
  *(double *)(result + 40) = a5;
  *(double *)(result + 48) = a6;
  return result;
}

uint64_t partial apply for closure #1 in NoticePresenter.dismiss(_:)()
{
  return closure #1 in NoticePresenter.dismiss(_:)();
}

void partial apply for closure #2 in NoticePresenter.dismiss(_:)()
{
}

uint64_t NoticePresenter.uiKitConfiguration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_uiKitConfiguration;
  swift_beginAccess();
  return outlined init with take of NoticePresenter.UIKitConfiguration(v3, a1, (void (*)(uint64_t, uint64_t))&_swift_unknownObjectWeakCopyInit);
}

uint64_t NoticePresenter.uiKitConfiguration.setter(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_uiKitConfiguration;
  swift_beginAccess();
  outlined init with take of NoticePresenter.UIKitConfiguration(v3, (uint64_t)v10, (void (*)(uint64_t, uint64_t))&_swift_unknownObjectWeakCopyInit);
  swift_beginAccess();
  outlined assign with copy of NoticePresenter.UIKitConfiguration(a1, v3);
  swift_endAccess();
  outlined init with take of NoticePresenter.UIKitConfiguration(v3, (uint64_t)v9, (void (*)(uint64_t, uint64_t))&_swift_unknownObjectWeakCopyInit);
  char v4 = specialized static NoticePresenter.UIKitConfiguration.__derived_struct_equals(_:_:)((uint64_t)v10, (uint64_t)v9);
  outlined destroy of CloudLibrary.StatusObserver.InternalObserver((uint64_t)v9);
  if ((v4 & 1) == 0)
  {
    uint64_t v5 = *(void **)(v1 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_passthroughWindow);
    if (v5)
    {
      id v6 = [v5 rootViewController];
      if (v6)
      {
        uint64_t v7 = v6;
        type metadata accessor for NoticePresenter.UIRootViewController();
        if (swift_dynamicCastClass())
        {
          outlined init with take of NoticePresenter.UIKitConfiguration(v3, (uint64_t)v9, (void (*)(uint64_t, uint64_t))&_swift_unknownObjectWeakCopyInit);
          NoticePresenter.UIRootViewController.configuration.setter((uint64_t)v9);
        }
      }
    }
  }
  outlined destroy of CloudLibrary.StatusObserver.InternalObserver(a1);
  return outlined destroy of CloudLibrary.StatusObserver.InternalObserver((uint64_t)v10);
}

void (*NoticePresenter.uiKitConfiguration.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x90uLL);
  *a1 = v3;
  v3[17] = v1;
  uint64_t v4 = v1 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_uiKitConfiguration;
  swift_beginAccess();
  outlined init with take of NoticePresenter.UIKitConfiguration(v4, (uint64_t)v3, (void (*)(uint64_t, uint64_t))&_swift_unknownObjectWeakCopyInit);
  return NoticePresenter.uiKitConfiguration.modify;
}

void NoticePresenter.uiKitConfiguration.modify(uint64_t *a1, char a2)
{
  uint64_t v2 = (void *)*a1;
  if (a2)
  {
    outlined init with take of NoticePresenter.UIKitConfiguration(*a1, (uint64_t)v2 + 56, (void (*)(uint64_t, uint64_t))&_swift_unknownObjectWeakCopyInit);
    NoticePresenter.uiKitConfiguration.setter((uint64_t)v2 + 56);
    outlined destroy of CloudLibrary.StatusObserver.InternalObserver((uint64_t)v2);
  }
  else
  {
    NoticePresenter.uiKitConfiguration.setter(*a1);
  }

  free(v2);
}

uint64_t NoticePresenter.willPresentHandler.getter()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_willPresentHandler);
  swift_beginAccess();
  uint64_t v2 = *v1;
  outlined copy of (@escaping @callee_guaranteed () -> ())?(*v1);
  return v2;
}

uint64_t NoticePresenter.willPresentHandler.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_willPresentHandler);
  swift_beginAccess();
  uint64_t v6 = *v5;
  *uint64_t v5 = a1;
  v5[1] = a2;
  return outlined consume of (@escaping @callee_guaranteed () -> ())?(v6);
}

uint64_t (*NoticePresenter.willPresentHandler.modify())()
{
  return ArtworkVideoReportingController.videoArtworkContextProviding.modify;
}

void NoticePresenter.passthroughWindow.setter(void *a1)
{
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_passthroughWindow);
  *(void *)(v1 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_passthroughWindow) = a1;
  id v4 = a1;
  if (v3)
  {
    id v8 = v4;
    if (!a1
      || (type metadata accessor for NoticePresenter.PassthroughWindow(),
          id v5 = v3,
          id v6 = v8,
          char v7 = static NSObject.== infix(_:_:)(),
          v5,
          v6,
          (v7 & 1) == 0))
    {
      [v3 resignKeyWindow];
    }

    id v4 = v8;
  }
}

uint64_t NoticePresenter.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter__notice;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Notice?>);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  outlined destroy of CloudLibrary.StatusObserver.InternalObserver(v0 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_uiKitConfiguration);
  outlined consume of (@escaping @callee_guaranteed () -> ())?(*(void *)(v0
                                                                         + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_willPresentHandler));

  return v0;
}

uint64_t NoticePresenter.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter__notice;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Notice?>);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  outlined destroy of CloudLibrary.StatusObserver.InternalObserver(v0 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_uiKitConfiguration);
  outlined consume of (@escaping @callee_guaranteed () -> ())?(*(void *)(v0
                                                                         + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_willPresentHandler));

  return swift_deallocClassInstance();
}

uint64_t protocol witness for ObservableObject.objectWillChange.getter in conformance NoticePresenter@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for NoticePresenter();
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

unsigned char *protocol witness for NoticePresenting.present(_:internalOnly:) in conformance NoticePresenter(uint64_t a1, char a2)
{
  return specialized NoticePresenter.present(_:internalOnly:animated:)(a1, a2);
}

uint64_t View.noticePresenting(_:edge:padding:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X3>, uint64_t a4@<X8>, double a5@<D0>)
{
  v15[0] = a4;
  v15[1] = a1;
  uint64_t v8 = type metadata accessor for ModifiedContent();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin();
  id v11 = (char *)v15 - v10;
  type metadata accessor for NoticePresenter();
  lazy protocol witness table accessor for type NoticePresenter and conformance NoticePresenter(&lazy protocol witness table cache variable for type NoticePresenter and conformance NoticePresenter, (void (*)(uint64_t))type metadata accessor for NoticePresenter);
  void v15[4] = EnvironmentObject.init()();
  v15[5] = v12;
  char v16 = a2;
  double v17 = a5;
  View.modifier<A>(_:)();
  swift_release();
  unint64_t v13 = lazy protocol witness table accessor for type NoticePresentingModifier and conformance NoticePresentingModifier();
  v15[2] = a3;
  v15[3] = v13;
  swift_getWitnessTable();
  View.environmentObject<A>(_:)();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

double NoticePresentingModifier.init(edge:padding:)(double a1)
{
  return a1;
}

uint64_t NoticePresentingModifier.controller.getter(uint64_t a1)
{
  if (a1)
  {
    return swift_retain();
  }
  else
  {
    type metadata accessor for NoticePresenter();
    lazy protocol witness table accessor for type NoticePresenter and conformance NoticePresenter(&lazy protocol witness table cache variable for type NoticePresenter and conformance NoticePresenter, (void (*)(uint64_t))type metadata accessor for NoticePresenter);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t NoticePresentingModifier.$controller.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NoticePresenter();
  uint64_t v5 = lazy protocol witness table accessor for type NoticePresenter and conformance NoticePresenter(&lazy protocol witness table cache variable for type NoticePresenter and conformance NoticePresenter, (void (*)(uint64_t))type metadata accessor for NoticePresenter);

  return EnvironmentObject.projectedValue.getter(a1, a2, v4, v5);
}

uint64_t NoticePresentingModifier.edge.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a3;
}

void NoticePresentingModifier.padding.setter(double a1)
{
  *(double *)(v1 + 24) = a1;
}

uint64_t NoticePresentingModifier.body(content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W3>, uint64_t a4@<X8>, double a5@<D0>)
{
  switch(a3)
  {
    case 1:
      uint64_t v9 = static Alignment.leading.getter();
      break;
    case 2:
      uint64_t v9 = static Alignment.bottom.getter();
      break;
    case 3:
      uint64_t v9 = static Alignment.trailing.getter();
      break;
    default:
      uint64_t v9 = static Alignment.top.getter();
      break;
  }
  uint64_t v11 = v9;
  uint64_t v12 = v10;
  if (!a2)
  {
    type metadata accessor for NoticePresenter();
    lazy protocol witness table accessor for type NoticePresenter and conformance NoticePresenter(&lazy protocol witness table cache variable for type NoticePresenter and conformance NoticePresenter, (void (*)(uint64_t))type metadata accessor for NoticePresenter);
    EnvironmentObject.error()();
    __break(1u);
    JUMPOUT(0x10034AF14);
  }
  swift_retain();
  Edge.Set.init(_:)();
  double v13 = specialized EdgeInsets.init(_:length:)(a5);
  uint64_t v15 = v14;
  uint64_t v17 = v16;
  uint64_t v19 = v18;
  type metadata accessor for NoticePresenter();
  lazy protocol witness table accessor for type NoticePresenter and conformance NoticePresenter(&lazy protocol witness table cache variable for type NoticePresenter and conformance NoticePresenter, (void (*)(uint64_t))type metadata accessor for NoticePresenter);
  uint64_t v20 = ObservedObject.init(wrappedValue:)();
  uint64_t v22 = v21;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ViewModifier_Content<NoticePresentingModifier>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16))(a4, a1, v23);
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<_ViewModifier_Content<NoticePresentingModifier>, _OverlayModifier<NoticePresentationView>>);
  uint64_t v25 = (uint64_t *)(a4 + *(int *)(result + 36));
  uint64_t *v25 = v20;
  v25[1] = v22;
  *((double *)v25 + 2) = v13;
  v25[3] = v15;
  v25[4] = v17;
  v25[5] = v19;
  v25[6] = v11;
  v25[7] = v12;
  return result;
}

uint64_t protocol witness for ViewModifier.body(content:) in conformance NoticePresentingModifier@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  double v3 = *v2;
  double v4 = v2[3];
  switch(*((unsigned char *)v2 + 16))
  {
    case 1:
      uint64_t v7 = static Alignment.leading.getter();
      break;
    case 2:
      uint64_t v7 = static Alignment.bottom.getter();
      break;
    case 3:
      uint64_t v7 = static Alignment.trailing.getter();
      break;
    default:
      uint64_t v7 = static Alignment.top.getter();
      break;
  }
  uint64_t v9 = v7;
  uint64_t v10 = v8;
  if (v3 == 0.0)
  {
    type metadata accessor for NoticePresenter();
    lazy protocol witness table accessor for type NoticePresenter and conformance NoticePresenter(&lazy protocol witness table cache variable for type NoticePresenter and conformance NoticePresenter, (void (*)(uint64_t))type metadata accessor for NoticePresenter);
    EnvironmentObject.error()();
    __break(1u);
    JUMPOUT(0x10034B104);
  }
  swift_retain();
  Edge.Set.init(_:)();
  double v11 = specialized EdgeInsets.init(_:length:)(v4);
  uint64_t v13 = v12;
  uint64_t v15 = v14;
  uint64_t v17 = v16;
  type metadata accessor for NoticePresenter();
  lazy protocol witness table accessor for type NoticePresenter and conformance NoticePresenter(&lazy protocol witness table cache variable for type NoticePresenter and conformance NoticePresenter, (void (*)(uint64_t))type metadata accessor for NoticePresenter);
  uint64_t v18 = ObservedObject.init(wrappedValue:)();
  uint64_t v20 = v19;
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ViewModifier_Content<NoticePresentingModifier>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16))(a2, a1, v21);
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<_ViewModifier_Content<NoticePresentingModifier>, _OverlayModifier<NoticePresentationView>>);
  uint64_t v23 = (uint64_t *)(a2 + *(int *)(result + 36));
  uint64_t *v23 = v18;
  v23[1] = v20;
  *((double *)v23 + 2) = v11;
  v23[3] = v13;
  _DWORD v23[4] = v15;
  v23[5] = v17;
  v23[6] = v9;
  v23[7] = v10;
  return result;
}

uint64_t closure #1 in NoticePresentationView.body.getter@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v115 = a2;
  double v3 = (int *)type metadata accessor for NoticeView(0);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v94 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<NoticeView, _PaddingLayout>);
  __chkstk_darwin();
  uint64_t v98 = (uint64_t)&v94 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<NoticeView, _PaddingLayout>, _PaddingLayout>);
  __chkstk_darwin();
  uint64_t v99 = (uint64_t)&v94 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<NoticeView, _PaddingLayout>, _PaddingLayout>, _PaddingLayout>);
  __chkstk_darwin();
  uint64_t v102 = (uint64_t)&v94 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<NoticeView, _PaddingLayout>, _PaddingLayout>, _PaddingLayout>, _TraitWritingModifier<TransitionTraitKey>>);
  __chkstk_darwin();
  uint64_t v104 = (uint64_t)&v94 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<NoticeView, _PaddingLayout>, _PaddingLayout>, _PaddingLayout>, _TraitWritingModifier<TransitionTraitKey>>, _EnvironmentKeyWritingModifier<NoticeDismissal?>>);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v116 = v10;
  uint64_t v117 = v11;
  __chkstk_darwin();
  uint64_t v103 = (uint64_t)&v94 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Notice?);
  __chkstk_darwin();
  uint64_t v14 = (char *)&v94 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for Notice(0);
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin();
  uint64_t v18 = (char *)&v94 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v105 = (uint64_t)&v94 - v19;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<NoticeView, _PaddingLayout>, _PaddingLayout>, _PaddingLayout>, _TraitWritingModifier<TransitionTraitKey>>, _EnvironmentKeyWritingModifier<NoticeDismissal?>>?);
  __chkstk_darwin();
  uint64_t v114 = (uint64_t)&v94 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v106 = (uint64_t)&v94 - v21;
  uint64_t v113 = *(void *)(a1 + 32);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v112 = v119;
  int v111 = v120;
  uint64_t v110 = v121;
  int v109 = v122;
  uint64_t v108 = v123;
  uint64_t v107 = v124;
  uint64_t v22 = *(void *)(a1 + 8);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  uint64_t v100 = v22;
  static Published.subscript.getter();
  swift_release();
  swift_release();
  outlined release of NoticePresentationView(a1);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    outlined destroy of TaskPriority?((uint64_t)v14, &demangling cache variable for type metadata for Notice?);
    uint64_t v23 = 1;
    uint64_t v24 = v116;
    uint64_t v25 = v106;
  }
  else
  {
    uint64_t v26 = v105;
    outlined init with take of Notice((uint64_t)v14, v105);
    long long v94 = type metadata accessor for Notice;
    outlined init with copy of Notice(v26, (uint64_t)v18, type metadata accessor for Notice);
    uint64_t v27 = &v5[v3[5]];
    *(void *)uint64_t v27 = swift_getKeyPath();
    *((void *)v27 + 1) = 0;
    *((_WORD *)v27 + 8) = 0;
    uint64_t v28 = &v5[v3[6]];
    uint64_t v118 = 0x3FF0000000000000;
    State.init(wrappedValue:)();
    uint64_t v29 = v126;
    *(void *)uint64_t v28 = v125;
    *((void *)v28 + 1) = v29;
    id v30 = &v5[v3[7]];
    LOBYTE(v118) = 0;
    GestureState.init(wrappedValue:)();
    uint64_t v31 = v126;
    long long v32 = v127;
    char *v30 = v125;
    *((void *)v30 + 1) = v31;
    *((_OWORD *)v30 + 1) = v32;
    uint64_t v33 = &v5[v3[8]];
    LOBYTE(v118) = 0;
    State.init(wrappedValue:)();
    uint64_t v34 = v126;
    *uint64_t v33 = v125;
    *((void *)v33 + 1) = v34;
    outlined init with take of Notice((uint64_t)v18, (uint64_t)v5);
    char v35 = static Edge.Set.leading.getter();
    EdgeInsets.init(_all:)();
    uint64_t v37 = v36;
    uint64_t v39 = v38;
    uint64_t v41 = v40;
    uint64_t v43 = v42;
    uint64_t v44 = v98;
    outlined init with copy of Notice((uint64_t)v5, v98, type metadata accessor for NoticeView);
    uint64_t v45 = v44 + *(int *)(v95 + 36);
    *(unsigned char *)uint64_t v45 = v35;
    *(void *)(v45 + 8) = v37;
    *(void *)(v45 + 16) = v39;
    *(void *)(v45 + 24) = v41;
    *(void *)(v45 + 32) = v43;
    *(unsigned char *)(v45 + 40) = 0;
    outlined destroy of Notice((uint64_t)v5, type metadata accessor for NoticeView);
    char v46 = static Edge.Set.trailing.getter();
    EdgeInsets.init(_all:)();
    uint64_t v48 = v47;
    uint64_t v50 = v49;
    uint64_t v52 = v51;
    uint64_t v54 = v53;
    uint64_t v55 = v99;
    outlined init with copy of (String, Any)(v44, v99, &demangling cache variable for type metadata for ModifiedContent<NoticeView, _PaddingLayout>);
    uint64_t v56 = v55 + *(int *)(v96 + 36);
    *(unsigned char *)uint64_t v56 = v46;
    *(void *)(v56 + 8) = v48;
    *(void *)(v56 + 16) = v50;
    *(void *)(v56 + 24) = v52;
    *(void *)(v56 + 32) = v54;
    *(unsigned char *)(v56 + 40) = 0;
    outlined destroy of TaskPriority?(v44, &demangling cache variable for type metadata for ModifiedContent<NoticeView, _PaddingLayout>);
    char v57 = static Edge.Set.vertical.getter();
    EdgeInsets.init(_all:)();
    uint64_t v59 = v58;
    uint64_t v61 = v60;
    uint64_t v63 = v62;
    uint64_t v65 = v64;
    uint64_t v66 = v102;
    outlined init with copy of (String, Any)(v55, v102, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<NoticeView, _PaddingLayout>, _PaddingLayout>);
    uint64_t v67 = v66 + *(int *)(v97 + 36);
    *(unsigned char *)uint64_t v67 = v57;
    *(void *)(v67 + 8) = v59;
    *(void *)(v67 + 16) = v61;
    *(void *)(v67 + 24) = v63;
    *(void *)(v67 + 32) = v65;
    *(unsigned char *)(v67 + 40) = 0;
    outlined destroy of TaskPriority?(v55, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<NoticeView, _PaddingLayout>, _PaddingLayout>);
    static AnyTransition.opacity.getter();
    static Animation.interpolatingSpring(mass:stiffness:damping:initialVelocity:)();
    AnyTransition.animation(_:)();
    swift_release();
    swift_release();
    static UnitPoint.center.getter();
    static AnyTransition.scale(scale:anchor:)();
    static Animation.interpolatingSpring(mass:stiffness:damping:initialVelocity:)();
    AnyTransition.animation(_:)();
    swift_release();
    swift_release();
    static UnitPoint.center.getter();
    static AnyTransition.scale(scale:anchor:)();
    static Animation.interpolatingSpring(mass:stiffness:damping:initialVelocity:)();
    AnyTransition.animation(_:)();
    swift_release();
    swift_release();
    static AnyTransition.asymmetric(insertion:removal:)();
    swift_release();
    swift_release();
    uint64_t v68 = AnyTransition.combined(with:)();
    swift_release();
    swift_release();
    uint64_t v69 = v104;
    outlined init with copy of (String, Any)(v66, v104, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<NoticeView, _PaddingLayout>, _PaddingLayout>, _PaddingLayout>);
    *(void *)(v69 + *(int *)(v101 + 36)) = v68;
    outlined destroy of TaskPriority?(v66, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<NoticeView, _PaddingLayout>, _PaddingLayout>, _PaddingLayout>);
    uint64_t KeyPath = swift_getKeyPath();
    type metadata accessor for MainActor();
    swift_retain();
    uint64_t v71 = static MainActor.shared.getter();
    uint64_t v72 = swift_allocObject();
    *(void *)(v72 + 16) = v71;
    *(void *)(v72 + 24) = &protocol witness table for MainActor;
    long long v73 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)(v72 + 32) = *(_OWORD *)a1;
    *(_OWORD *)(v72 + 48) = v73;
    *(_OWORD *)(v72 + 64) = *(_OWORD *)(a1 + 32);
    swift_retain();
    uint64_t v74 = static MainActor.shared.getter();
    uint64_t v75 = swift_allocObject();
    *(void *)(v75 + 16) = v74;
    *(void *)(v75 + 24) = &protocol witness table for MainActor;
    long long v76 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)(v75 + 32) = *(_OWORD *)a1;
    *(_OWORD *)(v75 + 48) = v76;
    *(_OWORD *)(v75 + 64) = *(_OWORD *)(a1 + 32);
    Binding.init(get:set:)();
    uint64_t v77 = v125;
    uint64_t v78 = v126;
    char v79 = v127;
    uint64_t v80 = v103;
    outlined init with copy of (String, Any)(v69, v103, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<NoticeView, _PaddingLayout>, _PaddingLayout>, _PaddingLayout>, _TraitWritingModifier<TransitionTraitKey>>);
    uint64_t v81 = v116;
    uint64_t v82 = v80 + *(int *)(v116 + 36);
    *(void *)uint64_t v82 = KeyPath;
    *(void *)(v82 + 8) = v77;
    *(void *)(v82 + 16) = v78;
    *(unsigned char *)(v82 + 24) = v79;
    outlined destroy of TaskPriority?(v69, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<NoticeView, _PaddingLayout>, _PaddingLayout>, _PaddingLayout>, _TraitWritingModifier<TransitionTraitKey>>);
    outlined destroy of Notice(v105, v94);
    uint64_t v25 = v106;
    outlined init with take of PresentationSource?(v80, v106, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<NoticeView, _PaddingLayout>, _PaddingLayout>, _PaddingLayout>, _TraitWritingModifier<TransitionTraitKey>>, _EnvironmentKeyWritingModifier<NoticeDismissal?>>);
    uint64_t v23 = 0;
    uint64_t v24 = v81;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v117 + 56))(v25, v23, 1, v24);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v117 = v125;
  char v83 = v126;
  uint64_t v84 = v127;
  char v85 = BYTE8(v127);
  uint64_t v86 = v128;
  uint64_t v87 = v129;
  uint64_t v88 = v114;
  outlined init with copy of (String, Any)(v25, v114, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<NoticeView, _PaddingLayout>, _PaddingLayout>, _PaddingLayout>, _TraitWritingModifier<TransitionTraitKey>>, _EnvironmentKeyWritingModifier<NoticeDismissal?>>?);
  CGFloat v89 = v115;
  void *v115 = 0;
  *((unsigned char *)v89 + 8) = 1;
  v89[2] = v112;
  *((unsigned char *)v89 + 24) = v111;
  v89[4] = v110;
  *((unsigned char *)v89 + 40) = v109;
  uint64_t v90 = v107;
  v89[6] = v108;
  v89[7] = v90;
  uint64_t v91 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<NoticeView, _PaddingLayout>, _PaddingLayout>, _PaddingLayout>, _TraitWritingModifier<TransitionTraitKey>>, _EnvironmentKeyWritingModifier<NoticeDismissal?>>?, ModifiedContent<Spacer, _FrameLayout>));
  outlined init with copy of (String, Any)(v88, (uint64_t)v89 + *(int *)(v91 + 48), &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<NoticeView, _PaddingLayout>, _PaddingLayout>, _PaddingLayout>, _TraitWritingModifier<TransitionTraitKey>>, _EnvironmentKeyWritingModifier<NoticeDismissal?>>?);
  CGRect v92 = (char *)v89 + *(int *)(v91 + 64);
  *(void *)CGRect v92 = 0;
  v92[8] = 1;
  *((void *)v92 + 2) = v117;
  v92[24] = v83;
  *((void *)v92 + 4) = v84;
  v92[40] = v85;
  *((void *)v92 + 6) = v86;
  *((void *)v92 + 7) = v87;
  outlined destroy of TaskPriority?(v25, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<NoticeView, _PaddingLayout>, _PaddingLayout>, _PaddingLayout>, _TraitWritingModifier<TransitionTraitKey>>, _EnvironmentKeyWritingModifier<NoticeDismissal?>>?);
  return outlined destroy of TaskPriority?(v88, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<NoticeView, _PaddingLayout>, _PaddingLayout>, _PaddingLayout>, _TraitWritingModifier<TransitionTraitKey>>, _EnvironmentKeyWritingModifier<NoticeDismissal?>>?);
}

uint64_t closure #1 in closure #1 in NoticePresentationView.body.getter@<X0>(uint64_t a1@<X2>, unsigned char *a2@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Notice?);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  outlined release of NoticePresentationView(a1);
  uint64_t v6 = type metadata accessor for Notice(0);
  LOBYTE(a1) = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6) != 1;
  uint64_t result = outlined destroy of TaskPriority?((uint64_t)v5, &demangling cache variable for type metadata for Notice?);
  *a2 = a1;
  return result;
}

unsigned char *closure #2 in closure #1 in NoticePresentationView.body.getter(unsigned char *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((*result & 1) == 0)
  {
    swift_retain();
    NoticePresenter.dismiss(_:)(1);
    return (unsigned char *)outlined release of NoticePresentationView(a4);
  }
  return result;
}

uint64_t protocol witness for View.body.getter in conformance NoticePresentationView@<X0>(uint64_t a1@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<NoticeView, _PaddingLayout>, _PaddingLayout>, _PaddingLayout>, _TraitWritingModifier<TransitionTraitKey>>, _EnvironmentKeyWritingModifier<NoticeDismissal?>>?, ModifiedContent<Spacer, _FrameLayout>)>>);
  __chkstk_darwin();
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v5 = v1[1];
  v10[0] = *v1;
  v10[1] = v5;
  v10[2] = v1[2];
  *(void *)uint64_t v4 = static HorizontalAlignment.center.getter();
  *((void *)v4 + 1) = 0;
  v4[16] = 1;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_VStackLayout, TupleView<(ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<NoticeView, _PaddingLayout>, _PaddingLayout>, _PaddingLayout>, _TraitWritingModifier<TransitionTraitKey>>, _EnvironmentKeyWritingModifier<NoticeDismissal?>>?, ModifiedContent<Spacer, _FrameLayout>)>>);
  closure #1 in NoticePresentationView.body.getter((uint64_t)v10, &v4[*(int *)(v6 + 44)]);
  uint64_t v7 = static Alignment.center.getter();
  specialized View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, a1, 0.0, 1, 0.0, 1, v7, v8);
  return outlined destroy of TaskPriority?((uint64_t)v4, (uint64_t *)&demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<NoticeView, _PaddingLayout>, _PaddingLayout>, _PaddingLayout>, _TraitWritingModifier<TransitionTraitKey>>, _EnvironmentKeyWritingModifier<NoticeDismissal?>>?, ModifiedContent<Spacer, _FrameLayout>)>>);
}

uint64_t NoticePresenter.UIKitConfiguration.edge.getter()
{
  return *(unsigned __int8 *)(v0 + 8);
}

uint64_t NoticePresenter.UIKitConfiguration.edge.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 8) = result;
  return result;
}

double NoticePresenter.UIKitConfiguration.insets.getter()
{
  return *(double *)(v0 + 24);
}

void NoticePresenter.UIKitConfiguration.insets.setter(double a1, double a2, double a3, double a4)
{
  v4[3] = a1;
  v4[4] = a2;
  v4[5] = a3;
  v4[6] = a4;
}

id NoticePresenter.PassthroughWindow.hitTest(_:with:)(uint64_t a1, double a2, double a3)
{
  v15.receiver = v3;
  v15.super_class = (Class)type metadata accessor for NoticePresenter.PassthroughWindow();
  id v7 = objc_msgSendSuper2(&v15, "hitTest:withEvent:", a1, a2, a3);
  id v8 = v7;
  if (*((unsigned char *)v3
       + OBJC_IVAR____TtCC11MusicCoreUI15NoticePresenterP33_D8FBFBA4851A241D976DAD2E389878C117PassthroughWindow_canReceiveTouches) != 1)
  {
    id v9 = v7;
LABEL_8:

    return 0;
  }
  if (!v7) {
    return v8;
  }
  id v9 = v7;
  id v10 = [v3 rootViewController];
  if (!v10)
  {

    goto LABEL_8;
  }
  uint64_t v11 = v10;
  id result = [v10 view];
  if (result)
  {
    uint64_t v13 = result;
    unsigned __int8 v14 = [v9 isDescendantOfView:result];

    if (v14) {
      return v8;
    }
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

id NoticePresenter.PassthroughWindow.__deallocating_deinit()
{
  return NoticePresenter.PassthroughWindow.__deallocating_deinit((uint64_t (*)(void))type metadata accessor for NoticePresenter.PassthroughWindow);
}

id NoticePresenter.UIRootViewController.configuration.setter(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = (uint64_t)v1
     + OBJC_IVAR____TtCC11MusicCoreUI15NoticePresenterP33_D8FBFBA4851A241D976DAD2E389878C120UIRootViewController_configuration;
  swift_beginAccess();
  outlined assign with copy of NoticePresenter.UIKitConfiguration(a1, v4);
  swift_endAccess();
  if (![v1 isViewLoaded]) {
    return (id)outlined destroy of CloudLibrary.StatusObserver.InternalObserver(a1);
  }
  Edge.Set.init(_:)();
  double v5 = specialized EdgeInsets.init(_:length:)(*(double *)(v4 + 16));
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  uint64_t v12 = (void (*)(uint64_t *, void))dispatch thunk of UIHostingController.rootView.modify();
  long long v13[2] = v5;
  *((void *)v13 + 3) = v7;
  *((void *)v13 + 4) = v9;
  *((void *)v13 + 5) = v11;
  v12(&v17, 0);
  id result = [v1 view];
  if (result)
  {
    objc_super v15 = result;
    [result setNeedsLayout];

    id result = [v2 view];
    if (result)
    {
      uint64_t v16 = result;
      [result layoutIfNeeded];

      return (id)outlined destroy of CloudLibrary.StatusObserver.InternalObserver(a1);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void NoticePresenter.UIRootViewController.viewDidLoad()()
{
  uint64_t v1 = v0;
  v23.receiver = v0;
  v23.super_class = (Class)type metadata accessor for NoticePresenter.UIRootViewController();
  objc_msgSendSuper2(&v23, "viewDidLoad");
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtCC11MusicCoreUI15NoticePresenterP33_D8FBFBA4851A241D976DAD2E389878C120UIRootViewController_hostingController];
  id v3 = [v2 view];
  if (!v3)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v4 = v3;
  id v5 = [self clearColor];
  [v4 setBackgroundColor:v5];

  uint64_t v6 = (double *)&v1[OBJC_IVAR____TtCC11MusicCoreUI15NoticePresenterP33_D8FBFBA4851A241D976DAD2E389878C120UIRootViewController_configuration];
  swift_beginAccess();
  Edge.Set.init(_:)();
  double v7 = specialized EdgeInsets.init(_:length:)(v6[2]);
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  unsigned __int8 v14 = (void (*)(char *, void))dispatch thunk of UIHostingController.rootView.modify();
  v15[2] = v7;
  *((void *)v15 + 3) = v9;
  *((void *)v15 + 4) = v11;
  *((void *)v15 + 5) = v13;
  v14(v22, 0);
  id v16 = [v1 view];
  if (!v16)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v17 = v16;
  id v18 = [v2 view];
  if (!v18)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v19 = v18;
  [v17 addSubview:v18];

  id v20 = [v2 view];
  if (v20)
  {
    uint64_t v21 = v20;
    [v20 layoutIfNeeded];

    return;
  }
LABEL_9:
  __break(1u);
}

void NoticePresenter.UIRootViewController.viewDidLayoutSubviews()()
{
  v38.receiver = v0;
  v38.super_class = (Class)type metadata accessor for NoticePresenter.UIRootViewController();
  objc_msgSendSuper2(&v38, "viewDidLayoutSubviews");
  id v1 = [v0 view];
  if (!v1) {
    goto LABEL_12;
  }
  uint64_t v2 = v1;
  [v1 bounds];

  uint64_t v3 = (uint64_t)v0
     + OBJC_IVAR____TtCC11MusicCoreUI15NoticePresenterP33_D8FBFBA4851A241D976DAD2E389878C120UIRootViewController_configuration;
  swift_beginAccess();
  outlined init with take of NoticePresenter.UIKitConfiguration(v3, (uint64_t)aBlock, (void (*)(uint64_t, uint64_t))&_swift_unknownObjectWeakCopyInit);
  id v4 = [v0 view];
  if (!v4)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  id v5 = v4;
  outlined destroy of CloudLibrary.StatusObserver.InternalObserver((uint64_t)aBlock);
  [v5 effectiveUserInterfaceLayoutDirection];

  CGRect.inset(by:for:)();
  CGFloat v7 = v6;
  CGFloat v9 = v8;
  CGFloat v11 = v10;
  CGFloat v13 = v12;
  unsigned __int8 v14 = self;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v0;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = partial apply for closure #1 in NoticePresenter.UIRootViewController.viewDidLayoutSubviews();
  *(void *)(v16 + 24) = v15;
  aBlock[4] = partial apply for thunk for @escaping @callee_guaranteed () -> ();
  aBlock[5] = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
  void aBlock[3] = &block_descriptor_64;
  uint64_t v17 = _Block_copy(aBlock);
  id v18 = v0;
  swift_retain();
  swift_release();
  [v14 performWithoutAnimation:v17];
  _Block_release(v17);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  id v20 = *(void **)&v18[OBJC_IVAR____TtCC11MusicCoreUI15NoticePresenterP33_D8FBFBA4851A241D976DAD2E389878C120UIRootViewController_hostingController];
  dispatch thunk of UIHostingController.sizeThatFits(in:)();
  uint64_t v22 = v21;
  id v23 = [v18 traitCollection];
  [v23 displayScale];

  uint64_t v36 = v22;
  CGRect.centeringAlong(axes:bounds:scale:)();
  double MinX = v24;
  double MinY = v26;
  double v29 = v28;
  double v31 = v30;
  switch(*(unsigned char *)(v3 + 8))
  {
    case 1:
      v42.origin.CGFloat x = v7;
      v42.origin.CGFloat y = v9;
      v42.size.width = v11;
      v42.size.CGFloat height = v13;
      double MinX = CGRectGetMinX(v42);
      break;
    case 2:
      v40.origin.CGFloat x = v7;
      v40.origin.CGFloat y = v9;
      v40.size.width = v11;
      v40.size.CGFloat height = v13;
      double MaxY = CGRectGetMaxY(v40);
      v41.origin.CGFloat x = MinX;
      v41.origin.CGFloat y = MinY;
      v41.size.width = v29;
      v41.size.CGFloat height = v31;
      double MinY = MaxY - CGRectGetHeight(v41);
      break;
    case 3:
      v43.origin.CGFloat x = v7;
      v43.origin.CGFloat y = v9;
      v43.size.width = v11;
      v43.size.CGFloat height = v13;
      double MaxX = CGRectGetMaxX(v43);
      v44.origin.CGFloat x = MinX;
      v44.origin.CGFloat y = MinY;
      v44.size.width = v29;
      v44.size.CGFloat height = v31;
      double MinX = MaxX - CGRectGetWidth(v44);
      break;
    default:
      v39.origin.CGFloat x = v7;
      v39.origin.CGFloat y = v9;
      v39.size.width = v11;
      v39.size.CGFloat height = v13;
      double MinY = CGRectGetMinY(v39);
      break;
  }
  id v34 = objc_msgSend(v20, "view", v36);
  if (!v34)
  {
LABEL_14:
    __break(1u);
    JUMPOUT(0x10034CC08);
  }
  char v35 = v34;
  objc_msgSend(v34, "setFrame:", MinX, MinY, v29, v31);
  swift_release();
}

void closure #1 in NoticePresenter.UIRootViewController.viewDidLayoutSubviews()(uint64_t a1)
{
  id v1 = *(void **)(a1
                + OBJC_IVAR____TtCC11MusicCoreUI15NoticePresenterP33_D8FBFBA4851A241D976DAD2E389878C120UIRootViewController_hostingController);
  id v2 = [v1 view];
  if (!v2)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v3 = v2;
  [v2 setNeedsLayout];

  id v4 = [v1 view];
  if (!v4)
  {
LABEL_7:
    __break(1u);
    return;
  }
  id v5 = v4;
  [v4 layoutIfNeeded];
}

id NoticePresenter.UIRootViewController.__deallocating_deinit()
{
  return NoticePresenter.PassthroughWindow.__deallocating_deinit((uint64_t (*)(void))type metadata accessor for NoticePresenter.UIRootViewController);
}

id NoticePresenter.PassthroughWindow.__deallocating_deinit(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1(0);
  return objc_msgSendSuper2(&v3, "dealloc");
}

uint64_t one-time initialization function for noticePresenter()
{
  uint64_t result = swift_slowAlloc();
  static UIWindowScene.AssociatedObjectKeys.noticePresenter = result;
  return result;
}

void *UIWindowScene.noticePresenter.getter()
{
  id v1 = v0;
  if (one-time initialization token for noticePresenter != -1) {
    swift_once();
  }
  if (objc_getAssociatedObject(v0, (const void *)static UIWindowScene.AssociatedObjectKeys.noticePresenter))
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v8, 0, sizeof(v8));
  }
  outlined init with take of PresentationSource?((uint64_t)v8, (uint64_t)v6, &_sypSgMD_2);
  if (!v7)
  {
    outlined destroy of TaskPriority?((uint64_t)v6, &_sypSgMD_2);
    goto LABEL_10;
  }
  type metadata accessor for NoticePresenter();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_10:
    type metadata accessor for NoticePresenter();
    id v2 = (void *)swift_allocObject();
    NoticePresenter.init()();
    objc_setAssociatedObject(v1, (const void *)static UIWindowScene.AssociatedObjectKeys.noticePresenter, v2, (void *)1);
    uint64_t v3 = (uint64_t)v2 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_uiKitConfiguration;
    swift_beginAccess();
    outlined init with take of NoticePresenter.UIKitConfiguration(v3, (uint64_t)v6, (void (*)(uint64_t, uint64_t))&_swift_unknownObjectWeakCopyInit);
    swift_unknownObjectWeakAssign();
    NoticePresenter.uiKitConfiguration.setter((uint64_t)v6);
    return v2;
  }
  return (void *)v5;
}

void *UIView.noticePresenter.getter()
{
  id v1 = [v0 window];
  id v2 = v1;
  if (v1)
  {
    id v3 = [v1 windowScene];

    if (v3)
    {
      id v2 = UIWindowScene.noticePresenter.getter();
    }
    else
    {
      return 0;
    }
  }
  return v2;
}

id UIViewController.noticePresenter.getter()
{
  if (![v0 isViewLoaded])
  {
    id v4 = [v0 parentViewController];
    if (v4)
    {
      uint64_t v6 = UIViewController.noticePresenter.getter();

      return (id)v6;
    }
    return v4;
  }
  id result = [v0 view];
  if (result)
  {
    id v2 = result;
    id v3 = [result window];
    id v4 = v3;
    if (v3)
    {
      id v5 = [v3 windowScene];

      if (v5)
      {
        id v4 = UIWindowScene.noticePresenter.getter();
      }
      else
      {

        return 0;
      }
    }
    else
    {
    }
    return v4;
  }
  __break(1u);
  return result;
}

uint64_t specialized static NoticePresenter.UIKitConfiguration.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  id v5 = (void *)swift_unknownObjectWeakLoadStrong();
  uint64_t v6 = v5;
  if (Strong)
  {
    if (v5)
    {
      type metadata accessor for UIMenu(0, &lazy cache variable for type metadata for UIWindowScene);
      id v7 = Strong;
      char v8 = static NSObject.== infix(_:_:)();

      if (v8) {
        goto LABEL_7;
      }
    }
    else
    {
    }
LABEL_11:
    char v10 = 0;
    return v10 & 1;
  }
  if (v5)
  {

    goto LABEL_11;
  }
LABEL_7:
  int v9 = Edge.rawValue.getter();
  if (v9 != Edge.rawValue.getter() || *(double *)(a1 + 16) != *(double *)(a2 + 16)) {
    goto LABEL_11;
  }
  char v10 = vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 24), *(float64x2_t *)(a2 + 24)), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 40), *(float64x2_t *)(a2 + 40)))), 0xFuLL)));
  return v10 & 1;
}

char *specialized NoticePresenter.UIRootViewController.init(noticePresenter:configuration:)(uint64_t a1, uint64_t a2)
{
  type metadata accessor for UIHostingControllerSizingOptions();
  __chkstk_darwin();
  *(void *)&v2[OBJC_IVAR____TtCC11MusicCoreUI15NoticePresenterP33_D8FBFBA4851A241D976DAD2E389878C120UIRootViewController__noticePresenter] = a1;
  id v5 = (double *)&v2[OBJC_IVAR____TtCC11MusicCoreUI15NoticePresenterP33_D8FBFBA4851A241D976DAD2E389878C120UIRootViewController_configuration];
  outlined init with take of NoticePresenter.UIKitConfiguration(a2, (uint64_t)&v2[OBJC_IVAR____TtCC11MusicCoreUI15NoticePresenterP33_D8FBFBA4851A241D976DAD2E389878C120UIRootViewController_configuration], (void (*)(uint64_t, uint64_t))&_swift_unknownObjectWeakCopyInit);
  swift_beginAccess();
  swift_retain_n();
  uint64_t v6 = v2;
  Edge.Set.init(_:)();
  double v7 = specialized EdgeInsets.init(_:length:)(v5[2]);
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  type metadata accessor for NoticePresenter();
  lazy protocol witness table accessor for type NoticePresenter and conformance NoticePresenter(&lazy protocol witness table cache variable for type NoticePresenter and conformance NoticePresenter, (void (*)(uint64_t))type metadata accessor for NoticePresenter);
  uint64_t v21 = ObservedObject.init(wrappedValue:)();
  uint64_t v22 = v14;
  double v23 = v7;
  uint64_t v24 = v9;
  uint64_t v25 = v11;
  uint64_t v26 = v13;
  id v15 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIHostingController<NoticePresentationView>));
  *(void *)&v6[OBJC_IVAR____TtCC11MusicCoreUI15NoticePresenterP33_D8FBFBA4851A241D976DAD2E389878C120UIRootViewController_hostingController] = UIHostingController.init(rootView:)();

  v20.receiver = v6;
  v20.super_class = (Class)type metadata accessor for NoticePresenter.UIRootViewController();
  uint64_t v16 = (char *)objc_msgSendSuper2(&v20, "initWithNibName:bundle:", 0, 0);
  uint64_t v17 = *(void **)&v16[OBJC_IVAR____TtCC11MusicCoreUI15NoticePresenterP33_D8FBFBA4851A241D976DAD2E389878C120UIRootViewController_hostingController];
  id v18 = v16;
  static UIHostingControllerSizingOptions.intrinsicContentSize.getter();
  dispatch thunk of UIHostingController.sizingOptions.setter();
  [v18 addChildViewController:v17];
  [v17 didMoveToParentViewController:v18];

  outlined destroy of CloudLibrary.StatusObserver.InternalObserver(a2);
  return v18;
}

unsigned char *specialized NoticePresenter.present(_:internalOnly:animated:)(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for DispatchTime();
  uint64_t v47 = *(void *)(v6 - 8);
  __chkstk_darwin();
  uint64_t v48 = (char *)v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v9 = (char *)v45 - v8;
  uint64_t v10 = type metadata accessor for DispatchWorkItemFlags();
  __chkstk_darwin();
  uint64_t v12 = (char *)v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for Notice(0);
  uint64_t v50 = *(void *)(v13 - 8);
  uint64_t v14 = *(void *)(v50 + 64);
  __chkstk_darwin();
  id v15 = (char *)v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) == 0 || (id result = DeviceCapabilities.isInternalInstall.unsafeMutableAddressor(), *result == 1))
  {
    v45[1] = v10;
    long long v45[2] = v12;
    uint64_t v49 = a1;
    char v46 = v9;
    uint64_t v17 = (void (**)(void ***))(v3 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_willPresentHandler);
    swift_beginAccess();
    id v18 = *v17;
    if (*v17)
    {
      uint64_t v19 = v3 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_uiKitConfiguration;
      swift_beginAccess();
      outlined init with take of NoticePresenter.UIKitConfiguration(v19, (uint64_t)&aBlock, (void (*)(uint64_t, uint64_t))&_swift_unknownObjectWeakCopyInit);
      swift_retain();
      v18(&aBlock);
      outlined consume of (@escaping @callee_guaranteed () -> ())?((uint64_t)v18);
      NoticePresenter.uiKitConfiguration.setter((uint64_t)&aBlock);
    }
    uint64_t v20 = v3 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_uiKitConfiguration;
    swift_beginAccess();
    outlined init with take of NoticePresenter.UIKitConfiguration(v20, (uint64_t)&aBlock, (void (*)(uint64_t, uint64_t))&_swift_unknownObjectWeakCopyInit);
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    outlined destroy of CloudLibrary.StatusObserver.InternalObserver((uint64_t)&aBlock);
    if (Strong)
    {
      if (!*(void *)(v3 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_passthroughWindow))
      {
        id v22 = [objc_allocWithZone((Class)type metadata accessor for NoticePresenter.PassthroughWindow()) initWithWindowScene:Strong];
        [v22 setWindowLevel:UIWindowLevelStatusBar];
        outlined init with take of NoticePresenter.UIKitConfiguration(v20, (uint64_t)&aBlock, (void (*)(uint64_t, uint64_t))&_swift_unknownObjectWeakCopyInit);
        id v23 = objc_allocWithZone((Class)type metadata accessor for NoticePresenter.UIRootViewController());
        id v24 = v22;
        uint64_t v25 = swift_retain();
        uint64_t v26 = specialized NoticePresenter.UIRootViewController.init(noticePresenter:configuration:)(v25, (uint64_t)&aBlock);
        swift_release();
        [v24 setRootViewController:v26];

        [v24 makeKeyAndVisible];
        [v24 resignKeyWindow];
        uint64_t v27 = v6;
        id v28 = v24;
        NoticePresenter.passthroughWindow.setter(v24);

        uint64_t Strong = v28;
        uint64_t v6 = v27;
      }
    }
    double v29 = *(unsigned char **)(v3 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_passthroughWindow);
    if (v29)
    {
      v29[OBJC_IVAR____TtCC11MusicCoreUI15NoticePresenterP33_D8FBFBA4851A241D976DAD2E389878C117PassthroughWindow_canReceiveTouches] = 1;
      [v29 makeKeyAndVisible];
    }
    uint64_t v30 = self;
    uint64_t v31 = v49;
    outlined init with copy of Notice(v49, (uint64_t)v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for Notice);
    unint64_t v32 = (*(unsigned __int8 *)(v50 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80);
    uint64_t v33 = swift_allocObject();
    *(void *)(v33 + 16) = v3;
    outlined init with take of Notice((uint64_t)v15, v33 + v32);
    uint64_t v34 = swift_allocObject();
    *(void *)(v34 + 16) = partial apply for closure #1 in NoticePresenter.present(_:internalOnly:animated:);
    *(void *)(v34 + 24) = v33;
    uint64_t v56 = (void (*)())thunk for @escaping @callee_guaranteed () -> ()partial apply;
    uint64_t v57 = v34;
    CGAffineTransform aBlock = _NSConcreteStackBlock;
    uint64_t v53 = 1107296256;
    uint64_t v54 = thunk for @escaping @callee_guaranteed () -> ();
    uint64_t v55 = &block_descriptor_48;
    char v35 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    [(id)v30 performWithoutAnimation:v35];
    _Block_release(v35);
    LOBYTE(v30) = swift_isEscapingClosureAtFileLocation();
    id result = (unsigned char *)swift_release();
    if (v30)
    {
      __break(1u);
    }
    else
    {
      uint64_t v36 = v31 + *(int *)(v13 + 36);
      if ((*(unsigned char *)(v36 + 8) & 1) == 0)
      {
        uint64_t v37 = *(void *)v36;
        id v38 = [objc_allocWithZone((Class)UINotificationFeedbackGenerator) init];
        [v38 notificationOccurred:v37];
      }
      if (*(unsigned char *)(v31 + *(int *)(v13 + 40)) == 1)
      {
        uint64_t v56 = partial apply for closure #2 in NoticePresenter.present(_:internalOnly:animated:);
        uint64_t v57 = v3;
        CGAffineTransform aBlock = _NSConcreteStackBlock;
        uint64_t v53 = 1107296256;
        uint64_t v54 = thunk for @escaping @callee_guaranteed @Sendable () -> ();
        uint64_t v55 = &block_descriptor_51_0;
        _Block_copy(&aBlock);
        uint64_t v51 = _swiftEmptyArrayStorage;
        lazy protocol witness table accessor for type NoticePresenter and conformance NoticePresenter((unint64_t *)&_s8Dispatch0A13WorkItemFlagsVACs10SetAlgebraAAWL_1, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        swift_retain();
        __swift_instantiateConcreteTypeFromMangledName(&_sSay8Dispatch0A13WorkItemFlagsVGMD_1);
        lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>((unint64_t *)&_sSay8Dispatch0A13WorkItemFlagsVGSayxGSTsWL_1, &_sSay8Dispatch0A13WorkItemFlagsVGMD_1);
        dispatch thunk of SetAlgebra.init<A>(_:)();
        type metadata accessor for DispatchWorkItem();
        swift_allocObject();
        uint64_t v39 = DispatchWorkItem.init(flags:block:)();
        swift_release();
        type metadata accessor for UIMenu(0, (unint64_t *)&_sSo17OS_dispatch_queueCML_1);
        CGRect v40 = (void *)static OS_dispatch_queue.main.getter();
        CGRect v41 = v48;
        static DispatchTime.now()();
        CGRect v42 = v46;
        + infix(_:_:)();
        CGRect v43 = *(void (**)(char *, uint64_t))(v47 + 8);
        v43(v41, v6);
        OS_dispatch_queue.asyncAfter(deadline:execute:)();

        v43(v42, v6);
        uint64_t v44 = *(void *)(v3 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_dismissalWorkItem);
        *(void *)(v3 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_dismissalWorkItem) = v39;
        swift_retain_n();
        if (v44)
        {
          dispatch thunk of DispatchWorkItem.cancel()();
          swift_release();
        }
        swift_release();
        return (unsigned char *)swift_release_n();
      }
      else
      {
        return (unsigned char *)swift_release();
      }
    }
  }
  return result;
}

uint64_t outlined init with take of NoticePresenter.UIKitConfiguration(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t))
{
  a3(a2, a1);
  *(unsigned char *)(a2 + 8) = *(unsigned char *)(a1 + 8);
  *(void *)(a2 + 16) = *(void *)(a1 + 16);
  long long v5 = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a2 + 40) = *(_OWORD *)(a1 + 40);
  *(_OWORD *)(a2 + 24) = v5;
  return a2;
}

uint64_t outlined assign with copy of NoticePresenter.UIKitConfiguration(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)(a2 + 8) = *(unsigned char *)(a1 + 8);
  *(void *)(a2 + 16) = *(void *)(a1 + 16);
  *(void *)(a2 + 24) = *(void *)(a1 + 24);
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  *(void *)(a2 + 40) = *(void *)(a1 + 40);
  *(void *)(a2 + 48) = *(void *)(a1 + 48);
  return a2;
}

uint64_t type metadata accessor for NoticePresenter.UIRootViewController()
{
  return self;
}

uint64_t type metadata accessor for NoticePresenter()
{
  uint64_t result = type metadata singleton initialization cache for NoticePresenter;
  if (!type metadata singleton initialization cache for NoticePresenter) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type NoticePresentingModifier and conformance NoticePresentingModifier()
{
  unint64_t result = lazy protocol witness table cache variable for type NoticePresentingModifier and conformance NoticePresentingModifier;
  if (!lazy protocol witness table cache variable for type NoticePresentingModifier and conformance NoticePresentingModifier)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type NoticePresentingModifier and conformance NoticePresentingModifier);
  }
  return result;
}

uint64_t associated type witness table accessor for ViewModifier.Body : View in NoticePresentingModifier()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t ObjC metadata update function for NoticePresenter()
{
  return type metadata accessor for NoticePresenter();
}

void type metadata completion function for NoticePresenter()
{
  type metadata accessor for Published<Notice?>();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void type metadata accessor for Published<Notice?>()
{
  if (!lazy cache variable for type metadata for Published<Notice?>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Notice?);
    unint64_t v0 = type metadata accessor for Published();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for Published<Notice?>);
    }
  }
}

uint64_t initializeWithCopy for NoticePresentingModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for NoticePresentingModifier(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  return a1;
}

uint64_t assignWithTake for NoticePresentingModifier(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for NoticePresentingModifier(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 32)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for NoticePresentingModifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NoticePresentingModifier()
{
  return &type metadata for NoticePresentingModifier;
}

double initializeWithCopy for NoticePresenter.UIKitConfiguration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)&double result = initializeWithCopy for NoticePresenter.UIKitConfiguration(a1, a2, a3, (uint64_t (*)(void))&_swift_unknownObjectWeakCopyInit).n128_u64[0];
  return result;
}

double assignWithCopy for NoticePresenter.UIKitConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = swift_unknownObjectWeakCopyAssign();
  *(unsigned char *)(v3 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(v3 + 16) = *(void *)(a2 + 16);
  *(void *)(v3 + 24) = *(void *)(a2 + 24);
  *(void *)(v3 + 32) = *(void *)(a2 + 32);
  *(void *)(v3 + 40) = *(void *)(a2 + 40);
  double result = *(double *)(a2 + 48);
  *(double *)(v3 + 48) = result;
  return result;
}

double initializeWithTake for NoticePresenter.UIKitConfiguration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)&double result = initializeWithCopy for NoticePresenter.UIKitConfiguration(a1, a2, a3, (uint64_t (*)(void))&_swift_unknownObjectWeakTakeInit).n128_u64[0];
  return result;
}

__n128 initializeWithCopy for NoticePresenter.UIKitConfiguration(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v5 = a4();
  *(unsigned char *)(v5 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(v5 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(v5 + 24) = *(_OWORD *)(a2 + 24);
  __n128 result = *(__n128 *)(a2 + 40);
  *(__n128 *)(v5 + 40) = result;
  return result;
}

double assignWithTake for NoticePresenter.UIKitConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = swift_unknownObjectWeakTakeAssign();
  *(unsigned char *)(v3 + 8) = *(unsigned char *)(a2 + 8);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v3 + 32) = v4;
  double result = *(double *)(a2 + 48);
  *(double *)(v3 + 48) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for NoticePresenter.UIKitConfiguration(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 56)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  BOOL v4 = v3 >= 4;
  int v5 = v3 - 4;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for NoticePresenter.UIKitConfiguration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)double result = a2 - 253;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 56) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = a2 + 3;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NoticePresenter.UIKitConfiguration()
{
  return &type metadata for NoticePresenter.UIKitConfiguration;
}

uint64_t type metadata accessor for NoticePresenter.PassthroughWindow()
{
  return self;
}

uint64_t sub_10034E278()
{
  return swift_getWitnessTable();
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<_ViewModifier_Content<NoticePresentingModifier>, _OverlayModifier<NoticePresentationView>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<_ViewModifier_Content<NoticePresentingModifier>, _OverlayModifier<NoticePresentationView>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<_ViewModifier_Content<NoticePresentingModifier>, _OverlayModifier<NoticePresentationView>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<_ViewModifier_Content<NoticePresentingModifier>, _OverlayModifier<NoticePresentationView>>);
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type _ViewModifier_Content<NoticePresentingModifier> and conformance _ViewModifier_Content<A>, &demangling cache variable for type metadata for _ViewModifier_Content<NoticePresentingModifier>);
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type _OverlayModifier<NoticePresentationView> and conformance _OverlayModifier<A>, &demangling cache variable for type metadata for _OverlayModifier<NoticePresentationView>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<_ViewModifier_Content<NoticePresentingModifier>, _OverlayModifier<NoticePresentationView>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t initializeWithCopy for NoticePresentationView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  swift_retain();
  return a1;
}

void *assignWithCopy for NoticePresentationView(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  return a1;
}

uint64_t assignWithTake for NoticePresentationView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_release();
  long long v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  return a1;
}

void *type metadata accessor for NoticePresentationView()
{
  return &unk_100544CC8;
}

uint64_t associated type witness table accessor for View.Body : View in NoticePresentationView()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t outlined release of NoticePresentationView(uint64_t a1)
{
  return a1;
}

uint64_t outlined init with take of Notice(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Notice(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t outlined init with copy of Notice(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t outlined destroy of Notice(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t partial apply for closure #1 in closure #1 in NoticePresentationView.body.getter@<X0>(unsigned char *a1@<X8>)
{
  return closure #1 in closure #1 in NoticePresentationView.body.getter(v1 + 32, a1);
}

uint64_t objectdestroyTm_9()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

unsigned char *partial apply for closure #2 in closure #1 in NoticePresentationView.body.getter(unsigned char *a1)
{
  return closure #2 in closure #1 in NoticePresentationView.body.getter(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), v1 + 32);
}

uint64_t sub_10034E6E4()
{
  return swift_deallocObject();
}

void partial apply for closure #1 in NoticePresenter.UIRootViewController.viewDidLayoutSubviews()()
{
  closure #1 in NoticePresenter.UIRootViewController.viewDidLayoutSubviews()(*(void *)(v0 + 16));
}

uint64_t sub_10034E724()
{
  return swift_deallocObject();
}

uint64_t block_copy_helper_62(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_62()
{
  return swift_release();
}

uint64_t sub_10034E74C()
{
  uint64_t v1 = type metadata accessor for Notice(0);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  swift_release();
  swift_bridgeObjectRelease();
  unint64_t v3 = v0 + v2 + *(int *)(v1 + 20);
  uint64_t v4 = type metadata accessor for Notice.Thumbnail(0);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(v3, 1, v4))
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v7 = type metadata accessor for Artwork();
      (*(void (**)(unint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v3, v7);
    }
    else if (!EnumCaseMultiPayload)
    {
      swift_release();
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + v2 + *(int *)(v1 + 32))) {
    swift_release();
  }

  return swift_deallocObject();
}

void partial apply for closure #1 in NoticePresenter.present(_:internalOnly:animated:)()
{
  uint64_t v1 = *(void *)(type metadata accessor for Notice(0) - 8);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  closure #1 in NoticePresenter.present(_:internalOnly:animated:)(v2, v3);
}

uint64_t sub_10034E954()
{
  return swift_deallocObject();
}

void partial apply for closure #2 in NoticePresenter.present(_:internalOnly:animated:)()
{
}

uint64_t lazy protocol witness table accessor for type NoticePresenter and conformance NoticePresenter(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<VStack<TupleView<(ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<NoticeView, _PaddingLayout>, _PaddingLayout>, _PaddingLayout>, _TraitWritingModifier<TransitionTraitKey>>, _EnvironmentKeyWritingModifier<NoticeDismissal?>>?, ModifiedContent<Spacer, _FrameLayout>)>>, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<VStack<TupleView<(ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<NoticeView, _PaddingLayout>, _PaddingLayout>, _PaddingLayout>, _TraitWritingModifier<TransitionTraitKey>>, _EnvironmentKeyWritingModifier<NoticeDismissal?>>?, ModifiedContent<Spacer, _FrameLayout>)>>, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<VStack<TupleView<(ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<NoticeView, _PaddingLayout>, _PaddingLayout>, _PaddingLayout>, _TraitWritingModifier<TransitionTraitKey>>, _EnvironmentKeyWritingModifier<NoticeDismissal?>>?, ModifiedContent<Spacer, _FrameLayout>)>>, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<NoticeView, _PaddingLayout>, _PaddingLayout>, _PaddingLayout>, _TraitWritingModifier<TransitionTraitKey>>, _EnvironmentKeyWritingModifier<NoticeDismissal?>>?, ModifiedContent<Spacer, _FrameLayout>)>>, _FlexFrameLayout>);
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type VStack<TupleView<(ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<NoticeView, _PaddingLayout>, _PaddingLayout>, _PaddingLayout>, _TraitWritingModifier<TransitionTraitKey>>, _EnvironmentKeyWritingModifier<NoticeDismissal?>>?, ModifiedContent<Spacer, _FrameLayout>)>> and conformance VStack<A>, (uint64_t *)&demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<NoticeView, _PaddingLayout>, _PaddingLayout>, _PaddingLayout>, _TraitWritingModifier<TransitionTraitKey>>, _EnvironmentKeyWritingModifier<NoticeDismissal?>>?, ModifiedContent<Spacer, _FrameLayout>)>>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<VStack<TupleView<(ModifiedContent<Spacer, _FrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<NoticeView, _PaddingLayout>, _PaddingLayout>, _PaddingLayout>, _TraitWritingModifier<TransitionTraitKey>>, _EnvironmentKeyWritingModifier<NoticeDismissal?>>?, ModifiedContent<Spacer, _FrameLayout>)>>, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t protocol witness for ShareSheetPresenting.present(_:) in conformance <A> PresentedViewState<A>(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = partial apply for closure #1 in static MusicEngagementExtension.performRequest(with:completion:);
  return PresentedViewState<A>.present(_:)(a1);
}

uint64_t ShareSheetModifier.body(content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  v26[1] = a2;
  uint64_t v29 = a1;
  uint64_t v32 = a4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ViewModifier_Content<ShareSheetModifier>);
  uint64_t v27 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<<<opaque return type of View.sharingPicker(isPresented:item:subject:message:)>>.0, _ViewModifier_Content<ShareSheetModifier>>.Storage);
  __chkstk_darwin();
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.sharingPicker(isPresented:item:subject:message:)>>.0);
  uint64_t v28 = *(void *)(v31 - 8);
  __chkstk_darwin();
  uint64_t v11 = (char *)v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&_s10Foundation3URLVSgMD_1);
  __chkstk_darwin();
  uint64_t v13 = (char *)v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for URL();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin();
  uint64_t v17 = (char *)v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = a3 + *(void *)(*(void *)a3 + 96);
  swift_beginAccess();
  _s10Foundation3URLVSgWOc_0(v18, (uint64_t)v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    _s10Foundation3URLVSgWOh_1((uint64_t)v13);
    uint64_t v19 = v27;
    uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(v27 + 16);
    v20(v7, v29, v5);
    v20(v9, (uint64_t)v7, v5);
    swift_storeEnumTagMultiPayload();
    uint64_t v21 = lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type _ViewModifier_Content<ShareSheetModifier> and conformance _ViewModifier_Content<A>, &demangling cache variable for type metadata for _ViewModifier_Content<ShareSheetModifier>);
    uint64_t v33 = v5;
    uint64_t v34 = v21;
    swift_getOpaqueTypeConformance2();
    _ConditionalContent<>.init(storage:)();
    return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v7, v5);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v13, v14);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for PresentedViewState<URL>);
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type PresentedViewState<URL> and conformance PresentedViewState<A>, &demangling cache variable for type metadata for PresentedViewState<URL>);
    ObservedObject.projectedValue.getter();
    swift_getKeyPath();
    ObservedObject.Wrapper.subscript.getter();
    swift_release();
    swift_release();
    uint64_t v25 = lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type _ViewModifier_Content<ShareSheetModifier> and conformance _ViewModifier_Content<A>, &demangling cache variable for type metadata for _ViewModifier_Content<ShareSheetModifier>);
    View.sharingPicker(isPresented:item:subject:message:)();
    swift_release();
    swift_release();
    uint64_t v23 = v28;
    uint64_t v24 = v31;
    (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v9, v11, v31);
    swift_storeEnumTagMultiPayload();
    uint64_t v33 = v5;
    uint64_t v34 = v25;
    swift_getOpaqueTypeConformance2();
    _ConditionalContent<>.init(storage:)();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v11, v24);
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  }
}

uint64_t protocol witness for ViewModifier.body(content:) in conformance ShareSheetModifier@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return ShareSheetModifier.body(content:)(a1, *v2, v2[1], a2);
}

uint64_t View.shareSheetPresenting(_:)()
{
  return swift_release();
}

uint64_t sub_10034F570()
{
  return swift_getWitnessTable();
}

unint64_t lazy protocol witness table accessor for type ShareSheetModifier and conformance ShareSheetModifier()
{
  unint64_t result = lazy protocol witness table cache variable for type ShareSheetModifier and conformance ShareSheetModifier;
  if (!lazy protocol witness table cache variable for type ShareSheetModifier and conformance ShareSheetModifier)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ShareSheetModifier and conformance ShareSheetModifier);
  }
  return result;
}

void *type metadata accessor for ShareSheetModifier()
{
  return &unk_100544EC0;
}

uint64_t associated type witness table accessor for ViewModifier.Body : View in ShareSheetModifier()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t _s10Foundation3URLVSgWOc_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&_s10Foundation3URLVSgMD_1);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10034F6BC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = PresentedViewState.isPresented.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_10034F6EC()
{
  return PresentedViewState.isPresented.setter();
}

unint64_t lazy protocol witness table accessor for type _ConditionalContent<<<opaque return type of View.sharingPicker(isPresented:item:subject:message:)>>.0, _ViewModifier_Content<ShareSheetModifier>> and conformance <> _ConditionalContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type _ConditionalContent<<<opaque return type of View.sharingPicker(isPresented:item:subject:message:)>>.0, _ViewModifier_Content<ShareSheetModifier>> and conformance <> _ConditionalContent<A, B>;
  if (!lazy protocol witness table cache variable for type _ConditionalContent<<<opaque return type of View.sharingPicker(isPresented:item:subject:message:)>>.0, _ViewModifier_Content<ShareSheetModifier>> and conformance <> _ConditionalContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _ConditionalContent<<<opaque return type of View.sharingPicker(isPresented:item:subject:message:)>>.0, _ViewModifier_Content<ShareSheetModifier>>);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _ViewModifier_Content<ShareSheetModifier>);
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type _ViewModifier_Content<ShareSheetModifier> and conformance _ViewModifier_Content<A>, &demangling cache variable for type metadata for _ViewModifier_Content<ShareSheetModifier>);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type _ConditionalContent<<<opaque return type of View.sharingPicker(isPresented:item:subject:message:)>>.0, _ViewModifier_Content<ShareSheetModifier>> and conformance <> _ConditionalContent<A, B>);
  }
  return result;
}

uint64_t Optional<A>.fontTextStyle.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for Font.TextStyle.body(_:);
  uint64_t v3 = type metadata accessor for Font.TextStyle();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);

  return v4(a1, v2, v3);
}

uint64_t protocol witness for FontTextStyleProvider.fontTextStyle.getter in conformance <A> A?@<X0>(uint64_t a1@<X8>)
{
  return Optional<A>.fontTextStyle.getter(a1);
}

uint64_t instantiation function for generic protocol witness table for <A> A?(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t MusicUIContentConfiguration.makeContentView()(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, a1);
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(AssociatedConformanceWitness + 32))(v5, AssociatedTypeWitness, AssociatedConformanceWitness);
}

uint64_t MusicUIContentConfiguration.updated(for:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a1 - 8) + 16))(a2, v2, a1);
}

uint64_t MusicUIContentView.configuration.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(a2 + 40);
  a3[3] = swift_getAssociatedTypeWitness();
  a3[4] = *(void *)(swift_getAssociatedConformanceWitness() + 16);
  __swift_allocate_boxed_opaque_existential_1(a3);
  return v6(a1, a2);
}

uint64_t MusicUIContentView.configuration.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_getAssociatedTypeWitness();
  __chkstk_darwin();
  uint64_t v7 = &v10[-v6 - 8];
  outlined init with copy of AlertPresenting(a1, (uint64_t)v10);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIContentConfiguration);
  swift_dynamicCast();
  (*(void (**)(char *, uint64_t, uint64_t))(a3 + 48))(v7, a2, a3);
  return __swift_destroy_boxed_opaque_existential_0Tm(a1);
}

void (*MusicUIContentView.configuration.modify(uint64_t **a1, uint64_t a2, uint64_t a3))(uint64_t *a1, char a2)
{
  uint64_t v7 = (uint64_t *)malloc(0x68uLL);
  *a1 = v7;
  v7[11] = a3;
  v7[12] = v3;
  v7[10] = a2;
  MusicUIContentView.configuration.getter(a2, a3, v7);
  return MusicUIContentView.configuration.modify;
}

void MusicUIContentView.configuration.modify(uint64_t *a1, char a2)
{
  uint64_t v2 = (uint64_t *)*a1;
  if (a2)
  {
    uint64_t v3 = v2[11];
    uint64_t v4 = v2[10];
    outlined init with copy of AlertPresenting(*a1, (uint64_t)(v2 + 5));
    MusicUIContentView.configuration.setter((uint64_t)(v2 + 5), v4, v3);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v2);
  }
  else
  {
    MusicUIContentView.configuration.setter(*a1, v2[10], v2[11]);
  }

  free(v2);
}

uint64_t ArtistRazzmatazzView.init(artist:navigationHandler:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = type metadata accessor for ArtistRazzmatazzView(0);
  uint64_t v9 = (void *)(a4 + *(int *)(v8 + 24));
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [Razzmatazz]);
  State.init(wrappedValue:)();
  void *v9 = v13;
  v9[1] = v14;
  lazy protocol witness table accessor for type CGFloat and conformance CGFloat();
  ScaledMetric.init(wrappedValue:)();
  uint64_t v10 = type metadata accessor for Artist();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(a4, a1, v10);
  uint64_t v12 = (void *)(a4 + *(int *)(v8 + 20));
  *uint64_t v12 = a2;
  v12[1] = a3;
  return result;
}

uint64_t type metadata accessor for ArtistRazzmatazzView(uint64_t a1)
{
  return type metadata accessor for Notice.Variant(a1, (uint64_t *)&type metadata singleton initialization cache for ArtistRazzmatazzView);
}

uint64_t property wrapper backing initializer of ArtistRazzmatazzView.razzmatazz()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [Razzmatazz]);
  State.init(wrappedValue:)();
  return v1;
}

uint64_t property wrapper backing initializer of ArtistRazzmatazzView.rowHeight()
{
  return ScaledMetric.init(wrappedValue:)();
}

uint64_t ArtistRazzmatazzView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v34 = a1;
  uint64_t v35 = type metadata accessor for TaskPriority();
  uint64_t v33 = *(void *)(v35 - 8);
  __chkstk_darwin();
  uint64_t v32 = (char *)v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28[0] = *(void *)(type metadata accessor for ArtistRazzmatazzView(0) - 8);
  __chkstk_darwin();
  v28[1] = v3;
  uint64_t v29 = (uint64_t)v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<Text, _PaddingLayout>, ModifiedContent<ModifiedContent<<<opaque return type of View.scrollIndicators(_:axes:)>>.0, _PaddingLayout>, _OverlayModifier<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _PaddingLayout>?>>)>>);
  __chkstk_darwin();
  uint64_t v31 = (void *)((char *)v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = type metadata accessor for GridItem.Size();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v8 = (void *)((char *)v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<GridItem>);
  type metadata accessor for GridItem();
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_100493D00;
  uint64_t v30 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScaledMetric<CGFloat>);
  ScaledMetric.wrappedValue.getter();
  *uint64_t v8 = v36;
  uint64_t v10 = enum case for GridItem.Size.fixed(_:);
  uint64_t v11 = *(void (**)(void *, uint64_t, uint64_t))(v6 + 104);
  v11(v8, enum case for GridItem.Size.fixed(_:), v5);
  GridItem.init(_:spacing:alignment:)();
  ScaledMetric.wrappedValue.getter();
  *uint64_t v8 = v36;
  v11(v8, v10, v5);
  GridItem.init(_:spacing:alignment:)();
  uint64_t v12 = static HorizontalAlignment.leading.getter();
  if (one-time initialization token for mediumSpacing != -1) {
    swift_once();
  }
  uint64_t v13 = static CGFloat.mediumSpacing;
  uint64_t v14 = (uint64_t)v31;
  uint64_t *v31 = v12;
  *(void *)(v14 + 8) = v13;
  *(unsigned char *)(v14 + 16) = 0;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_VStackLayout, TupleView<(ModifiedContent<Text, _PaddingLayout>, ModifiedContent<ModifiedContent<<<opaque return type of View.scrollIndicators(_:axes:)>>.0, _PaddingLayout>, _OverlayModifier<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _PaddingLayout>?>>)>>);
  uint64_t v16 = v30;
  closure #1 in ArtistRazzmatazzView.body.getter(v9, v30, v14 + *(int *)(v15 + 44));
  swift_bridgeObjectRelease();
  uint64_t v17 = v29;
  outlined init with copy of ArtistRazzmatazzView(v16, v29, type metadata accessor for ArtistRazzmatazzView);
  unint64_t v18 = (*(unsigned __int8 *)(v28[0] + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v28[0] + 80);
  uint64_t v19 = swift_allocObject();
  outlined init with take of ArtistRazzmatazzView(v17, v19 + v18, type metadata accessor for ArtistRazzmatazzView);
  uint64_t v20 = v32;
  static TaskPriority.userInitiated.getter();
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(ModifiedContent<Text, _PaddingLayout>, ModifiedContent<ModifiedContent<<<opaque return type of View.scrollIndicators(_:axes:)>>.0, _PaddingLayout>, _OverlayModifier<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _PaddingLayout>?>>)>>, _TaskModifier>);
  uint64_t v22 = v34;
  uint64_t v23 = (char *)(v34 + *(int *)(v21 + 36));
  uint64_t v24 = type metadata accessor for _TaskModifier();
  uint64_t v25 = v33;
  uint64_t v26 = v35;
  (*(void (**)(char *, char *, uint64_t))(v33 + 16))(&v23[*(int *)(v24 + 20)], v20, v35);
  *(void *)uint64_t v23 = &async function pointer to partial apply for closure #2 in ArtistRazzmatazzView.body.getter;
  *((void *)v23 + 1) = v19;
  outlined init with copy of (String, Any)(v14, v22, &demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<Text, _PaddingLayout>, ModifiedContent<ModifiedContent<<<opaque return type of View.scrollIndicators(_:axes:)>>.0, _PaddingLayout>, _OverlayModifier<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _PaddingLayout>?>>)>>);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v20, v26);
  return outlined destroy of TaskPriority?(v14, &demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<Text, _PaddingLayout>, ModifiedContent<ModifiedContent<<<opaque return type of View.scrollIndicators(_:axes:)>>.0, _PaddingLayout>, _OverlayModifier<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _PaddingLayout>?>>)>>);
}

uint64_t closure #1 in ArtistRazzmatazzView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)&long long v73 = a1;
  *(void *)&long long v62 = type metadata accessor for ScrollIndicatorVisibility();
  uint64_t v61 = *(void *)(v62 - 8);
  __chkstk_darwin();
  uint64_t v6 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScrollView<ModifiedContent<ModifiedContent<LazyHGrid<ForEach<[Razzmatazz], Razzmatazz, ArtistRazzmatazzView.RazzmatazzCell>>, _FrameLayout>, _PaddingLayout>>);
  uint64_t v58 = *(void *)(v60 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v70 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.scrollIndicators(_:axes:)>>.0);
  *(void *)&long long v68 = *(void *)(v70 - 8);
  __chkstk_darwin();
  *(void *)&long long v63 = (char *)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.scrollIndicators(_:axes:)>>.0, _PaddingLayout>);
  __chkstk_darwin();
  uint64_t v11 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.scrollIndicators(_:axes:)>>.0, _PaddingLayout>, _OverlayModifier<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _PaddingLayout>?>>);
  __chkstk_darwin();
  uint64_t v72 = (uint64_t)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v64 = (uint64_t)&v55 - v13;
  __chkstk_darwin();
  uint64_t v71 = (uint64_t)&v55 - v14;
  static Font.title2.getter();
  uint64_t v15 = Text.font(_:)();
  uint64_t v17 = v16;
  char v19 = v18;
  swift_release();
  static Font.Weight.semibold.getter();
  uint64_t v67 = Text.fontWeight(_:)();
  uint64_t v66 = v20;
  int v56 = v21;
  uint64_t v69 = v22;
  outlined consume of Text.Storage(v15, v17, v19 & 1);
  swift_bridgeObjectRelease();
  int v57 = static Edge.Set.horizontal.getter();
  static Axis.Set.horizontal.getter();
  uint64_t v74 = v73;
  uint64_t v75 = a2;
  *(void *)&long long v73 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<LazyHGrid<ForEach<[Razzmatazz], Razzmatazz, ArtistRazzmatazzView.RazzmatazzCell>>, _FrameLayout>, _PaddingLayout>);
  lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<LazyHGrid<ForEach<[Razzmatazz], Razzmatazz, ArtistRazzmatazzView.RazzmatazzCell>>, _FrameLayout>, _PaddingLayout> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<LazyHGrid<ForEach<[Razzmatazz], Razzmatazz, ArtistRazzmatazzView.RazzmatazzCell>>, _FrameLayout>, _PaddingLayout> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<LazyHGrid<ForEach<[Razzmatazz], Razzmatazz, ArtistRazzmatazzView.RazzmatazzCell>>, _FrameLayout>, _PaddingLayout>, (void (*)(void))lazy protocol witness table accessor for type ModifiedContent<LazyHGrid<ForEach<[Razzmatazz], Razzmatazz, ArtistRazzmatazzView.RazzmatazzCell>>, _FrameLayout> and conformance <> ModifiedContent<A, B>);
  ScrollView.init(_:showsIndicators:content:)();
  static ScrollIndicatorVisibility.hidden.getter();
  unsigned __int8 v23 = static Axis.Set.vertical.getter();
  unsigned __int8 v24 = static Axis.Set.horizontal.getter();
  Axis.Set.init(rawValue:)();
  Axis.Set.init(rawValue:)();
  if (Axis.Set.init(rawValue:)() != v23) {
    Axis.Set.init(rawValue:)();
  }
  Axis.Set.init(rawValue:)();
  if (Axis.Set.init(rawValue:)() != v24) {
    Axis.Set.init(rawValue:)();
  }
  uint64_t v25 = v63;
  lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type ScrollView<ModifiedContent<ModifiedContent<LazyHGrid<ForEach<[Razzmatazz], Razzmatazz, ArtistRazzmatazzView.RazzmatazzCell>>, _FrameLayout>, _PaddingLayout>> and conformance ScrollView<A>, &demangling cache variable for type metadata for ScrollView<ModifiedContent<ModifiedContent<LazyHGrid<ForEach<[Razzmatazz], Razzmatazz, ArtistRazzmatazzView.RazzmatazzCell>>, _FrameLayout>, _PaddingLayout>>);
  uint64_t v26 = v60;
  View.scrollIndicators(_:axes:)();
  (*(void (**)(char *, void))(v61 + 8))(v6, v62);
  (*(void (**)(char *, uint64_t))(v58 + 8))(v8, v26);
  char v27 = static Edge.Set.bottom.getter();
  if (one-time initialization token for standardSpacing != -1) {
    swift_once();
  }
  char v28 = v56 & 1;
  EdgeInsets.init(_all:)();
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  uint64_t v34 = v33;
  uint64_t v36 = v35;
  uint64_t v37 = v68;
  uint64_t v38 = v70;
  (*(void (**)(char *, uint64_t, void))(v68 + 16))(v11, v25, v70);
  uint64_t v39 = &v11[*(int *)(v59 + 36)];
  *uint64_t v39 = v27;
  *((void *)v39 + 1) = v30;
  *((void *)v39 + 2) = v32;
  *((void *)v39 + 3) = v34;
  *((void *)v39 + 4) = v36;
  v39[40] = 0;
  (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v25, v38);
  uint64_t v40 = static Alignment.center.getter();
  uint64_t v42 = v41;
  closure #2 in closure #1 in ArtistRazzmatazzView.body.getter((uint64_t)v76);
  long long v73 = v76[0];
  long long v70 = v76[1];
  long long v68 = v76[2];
  long long v63 = v76[3];
  long long v62 = v76[4];
  uint64_t v43 = v77;
  char v44 = v78;
  uint64_t v45 = v64;
  outlined init with copy of (String, Any)((uint64_t)v11, v64, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.scrollIndicators(_:axes:)>>.0, _PaddingLayout>);
  uint64_t v46 = v45 + *(int *)(v65 + 36);
  long long v47 = v70;
  *(_OWORD *)uint64_t v46 = v73;
  *(_OWORD *)(v46 + 16) = v47;
  long long v48 = v63;
  *(_OWORD *)(v46 + 32) = v68;
  *(_OWORD *)(v46 + 48) = v48;
  *(_OWORD *)(v46 + 64) = v62;
  *(void *)(v46 + 80) = v43;
  *(unsigned char *)(v46 + 88) = v44;
  *(void *)(v46 + 96) = v40;
  *(void *)(v46 + 104) = v42;
  outlined destroy of TaskPriority?((uint64_t)v11, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.scrollIndicators(_:axes:)>>.0, _PaddingLayout>);
  uint64_t v49 = v71;
  outlined init with take of PresentationSource?(v45, v71, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.scrollIndicators(_:axes:)>>.0, _PaddingLayout>, _OverlayModifier<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _PaddingLayout>?>>);
  uint64_t v50 = v72;
  outlined init with copy of (String, Any)(v49, v72, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.scrollIndicators(_:axes:)>>.0, _PaddingLayout>, _OverlayModifier<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _PaddingLayout>?>>);
  uint64_t v51 = v67;
  uint64_t v52 = v66;
  *(void *)a3 = v67;
  *(void *)(a3 + 8) = v52;
  *(unsigned char *)(a3 + 16) = v28;
  *(void *)(a3 + 24) = v69;
  *(unsigned char *)(a3 + 32) = v57;
  *(_OWORD *)(a3 + 40) = 0u;
  *(_OWORD *)(a3 + 56) = 0u;
  *(unsigned char *)(a3 + 72) = 1;
  uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModifiedContent<Text, _PaddingLayout>, ModifiedContent<ModifiedContent<<<opaque return type of View.scrollIndicators(_:axes:)>>.0, _PaddingLayout>, _OverlayModifier<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _PaddingLayout>?>>));
  outlined init with copy of (String, Any)(v50, a3 + *(int *)(v53 + 48), &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.scrollIndicators(_:axes:)>>.0, _PaddingLayout>, _OverlayModifier<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _PaddingLayout>?>>);
  outlined copy of Text.Storage(v51, v52, v28);
  swift_bridgeObjectRetain();
  outlined destroy of TaskPriority?(v49, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.scrollIndicators(_:axes:)>>.0, _PaddingLayout>, _OverlayModifier<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _PaddingLayout>?>>);
  outlined destroy of TaskPriority?(v50, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.scrollIndicators(_:axes:)>>.0, _PaddingLayout>, _OverlayModifier<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _PaddingLayout>?>>);
  outlined consume of Text.Storage(v51, v52, v28);
  return swift_bridgeObjectRelease();
}

uint64_t closure #1 in closure #1 in ArtistRazzmatazzView.body.getter@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v15 = a1;
  uint64_t v17 = a2;
  type metadata accessor for PinnedScrollableViews();
  __chkstk_darwin();
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for LazyHGrid<ForEach<[Razzmatazz], Razzmatazz, ArtistRazzmatazzView.RazzmatazzCell>>);
  uint64_t v2 = *(void *)(v16 - 8);
  __chkstk_darwin();
  uint64_t v4 = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<LazyHGrid<ForEach<[Razzmatazz], Razzmatazz, ArtistRazzmatazzView.RazzmatazzCell>>, _FrameLayout>);
  __chkstk_darwin();
  uint64_t v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  v13[1] = static VerticalAlignment.center.getter();
  if (one-time initialization token for standardSpacing != -1) {
    swift_once();
  }
  __chkstk_darwin();
  LODWORD(v18) = 0;
  _s7SwiftUI13_TaskModifierVAcA04ViewD0AAWlTm_0(&lazy protocol witness table cache variable for type PinnedScrollableViews and conformance PinnedScrollableViews, (void (*)(uint64_t))&type metadata accessor for PinnedScrollableViews);
  dispatch thunk of OptionSet.init(rawValue:)();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ForEach<[Razzmatazz], Razzmatazz, ArtistRazzmatazzView.RazzmatazzCell>);
  lazy protocol witness table accessor for type ForEach<[Razzmatazz], Razzmatazz, ArtistRazzmatazzView.RazzmatazzCell> and conformance <> ForEach<A, B, C>();
  LazyHGrid.init(rows:alignment:spacing:pinnedViews:content:)();
  type metadata accessor for ArtistRazzmatazzView(0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScaledMetric<CGFloat>);
  ScaledMetric.wrappedValue.getter();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v7 = v16;
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v6, v4, v16);
  uint64_t v8 = &v6[*(int *)(v14 + 36)];
  long long v9 = v19;
  *(_OWORD *)uint64_t v8 = v18;
  *((_OWORD *)v8 + 1) = v9;
  *((_OWORD *)v8 + 2) = v20;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v7);
  LOBYTE(v7) = static Edge.Set.horizontal.getter();
  uint64_t v10 = v17;
  outlined init with copy of (String, Any)((uint64_t)v6, v17, &demangling cache variable for type metadata for ModifiedContent<LazyHGrid<ForEach<[Razzmatazz], Razzmatazz, ArtistRazzmatazzView.RazzmatazzCell>>, _FrameLayout>);
  uint64_t v11 = v10
      + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<LazyHGrid<ForEach<[Razzmatazz], Razzmatazz, ArtistRazzmatazzView.RazzmatazzCell>>, _FrameLayout>, _PaddingLayout>)
               + 36);
  *(unsigned char *)uint64_t v11 = v7;
  *(_OWORD *)(v11 + 8) = 0u;
  *(_OWORD *)(v11 + 24) = 0u;
  *(unsigned char *)(v11 + 40) = 1;
  return outlined destroy of TaskPriority?((uint64_t)v6, &demangling cache variable for type metadata for ModifiedContent<LazyHGrid<ForEach<[Razzmatazz], Razzmatazz, ArtistRazzmatazzView.RazzmatazzCell>>, _FrameLayout>);
}

uint64_t closure #1 in closure #1 in closure #1 in ArtistRazzmatazzView.body.getter(uint64_t a1)
{
  uint64_t v2 = *(void *)(type metadata accessor for ArtistRazzmatazzView(0) - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  uint64_t v4 = (uint64_t *)(a1 + *(int *)(__chkstk_darwin() + 32));
  uint64_t v6 = *v4;
  uint64_t v5 = v4[1];
  v10[2] = v6;
  _OWORD v10[3] = v5;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<[Razzmatazz]>);
  State.wrappedValue.getter();
  swift_getKeyPath();
  outlined init with copy of ArtistRazzmatazzView(a1, (uint64_t)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for ArtistRazzmatazzView);
  unint64_t v7 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v8 = swift_allocObject();
  outlined init with take of ArtistRazzmatazzView((uint64_t)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v8 + v7, type metadata accessor for ArtistRazzmatazzView);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [Razzmatazz]);
  type metadata accessor for ArtistRazzmatazzView.RazzmatazzCell(0);
  lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type [Razzmatazz] and conformance [A], &demangling cache variable for type metadata for [Razzmatazz]);
  _s7SwiftUI13_TaskModifierVAcA04ViewD0AAWlTm_0(&lazy protocol witness table cache variable for type Razzmatazz and conformance Razzmatazz, (void (*)(uint64_t))type metadata accessor for Razzmatazz);
  _s7SwiftUI13_TaskModifierVAcA04ViewD0AAWlTm_0(&lazy protocol witness table cache variable for type ArtistRazzmatazzView.RazzmatazzCell and conformance ArtistRazzmatazzView.RazzmatazzCell, (void (*)(uint64_t))type metadata accessor for ArtistRazzmatazzView.RazzmatazzCell);
  return ForEach<>.init(_:id:content:)();
}

uint64_t closure #1 in closure #1 in closure #1 in closure #1 in ArtistRazzmatazzView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  outlined init with copy of ArtistRazzmatazzView(a1, a3, type metadata accessor for Razzmatazz);
  uint64_t v5 = (uint64_t *)(a2 + *(int *)(type metadata accessor for ArtistRazzmatazzView(0) + 20));
  uint64_t v7 = *v5;
  uint64_t v6 = v5[1];
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScaledMetric<CGFloat>);
  ScaledMetric.wrappedValue.getter();
  uint64_t result = type metadata accessor for ArtistRazzmatazzView.RazzmatazzCell(0);
  long long v9 = (void *)(a3 + *(int *)(result + 20));
  void *v9 = v7;
  v9[1] = v6;
  *(void *)(a3 + *(int *)(result + 24)) = v10;
  return result;
}

uint64_t closure #2 in closure #1 in ArtistRazzmatazzView.body.getter@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for ArtistRazzmatazzView(0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<[Razzmatazz]>);
  State.wrappedValue.getter();
  uint64_t v2 = *(void *)(v19 + 16);
  uint64_t result = swift_bridgeObjectRelease();
  long long v4 = 0uLL;
  if (v2)
  {
    uint64_t v5 = 0;
    uint64_t v6 = 0;
    uint64_t v7 = 0;
    uint64_t v8 = 0;
    uint64_t v9 = 0;
    char v10 = 0;
    int64x2_t v11 = 0uLL;
  }
  else
  {
    _StringGuts.grow(_:)(25);
    swift_bridgeObjectRelease();
    v12._countAndFlagsBits = Artist.name.getter();
    String.append(_:)(v12);
    swift_bridgeObjectRelease();
    v13._countAndFlagsBits = 46;
    v13._object = (void *)0xE100000000000000;
    String.append(_:)(v13);
    static HierarchicalShapeStyle.secondary.getter();
    uint64_t v5 = Text.foregroundStyle<A>(_:)();
    uint64_t v6 = v14;
    char v16 = v15;
    uint64_t v8 = v17;
    swift_bridgeObjectRelease();
    uint64_t v7 = v16 & 1;
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t result = static Edge.Set.horizontal.getter();
    long long v4 = 0uLL;
    uint64_t v9 = result;
    char v10 = 1;
    int64x2_t v11 = vdupq_n_s64(1uLL);
    v11.i64[0] = KeyPath;
  }
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v7;
  *(void *)(a1 + 24) = v8;
  *(int64x2_t *)(a1 + 32) = v11;
  *(void *)(a1 + 48) = v9;
  *(_OWORD *)(a1 + 56) = v4;
  *(_OWORD *)(a1 + 72) = v4;
  *(unsigned char *)(a1 + 88) = v10;
  return result;
}

uint64_t closure #2 in ArtistRazzmatazzView.body.getter(uint64_t a1)
{
  v1[6] = a1;
  v1[7] = type metadata accessor for MainActor();
  v1[8] = static MainActor.shared.getter();
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)&async function pointer to specialized static RazzmatazzAPI.razzmatazz(for:)
                                       + async function pointer to specialized static RazzmatazzAPI.razzmatazz(for:));
  uint64_t v3 = (void *)swift_task_alloc();
  v1[9] = v3;
  void *v3 = v1;
  v3[1] = closure #2 in ArtistRazzmatazzView.body.getter;
  return v5(a1);
}

{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  *(void *)(*(void *)v1 + 80) = a1;
  swift_task_dealloc();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(closure #2 in ArtistRazzmatazzView.body.getter, v3, v2);
}

uint64_t closure #2 in ArtistRazzmatazzView.body.getter()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[6];
  swift_release();
  v0[4] = v1;
  swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [Razzmatazz]);
  lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>((unint64_t *)&lazy protocol witness table cache variable for type [Razzmatazz] and conformance [A], &demangling cache variable for type metadata for [Razzmatazz]);
  _s7SwiftUI13_TaskModifierVAcA04ViewD0AAWlTm_0(&_s10Foundation4DateVACSLAAWL_0, (void (*)(uint64_t))&type metadata accessor for Date);
  uint64_t v3 = Sequence.sorted<A>(by:comparator:)();
  swift_release();
  swift_bridgeObjectRelease();
  long long v4 = (uint64_t *)(v2 + *(int *)(type metadata accessor for ArtistRazzmatazzView(0) + 24));
  uint64_t v6 = *v4;
  uint64_t v5 = v4[1];
  v0[2] = v6;
  v0[3] = v5;
  v0[5] = v3;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<[Razzmatazz]>);
  State.wrappedValue.setter();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t ArtistRazzmatazzView.RazzmatazzCell.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v39 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, _FrameLayout>, _BackgroundStyleModifier<Color>>, CornerRadiusModifier>, ModifiedContent<Button<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Int?>>>, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>);
  __chkstk_darwin();
  long long v4 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, _FrameLayout>, _BackgroundStyleModifier<Color>>, CornerRadiusModifier>, ModifiedContent<Button<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Int?>>>, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout>);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, _FrameLayout>, _BackgroundStyleModifier<Color>>, CornerRadiusModifier>, ModifiedContent<Button<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Int?>>>, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout>, _FrameLayout>);
  __chkstk_darwin();
  char v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, _FrameLayout>, _BackgroundStyleModifier<Color>>, CornerRadiusModifier>, ModifiedContent<Button<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Int?>>>, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout>, _FrameLayout>, _BackgroundStyleModifier<Color>>);
  __chkstk_darwin();
  Swift::String v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (one-time initialization token for standardSpacing != -1) {
    swift_once();
  }
  uint64_t v14 = static CGFloat.standardSpacing;
  *(void *)long long v4 = static VerticalAlignment.center.getter();
  *((void *)v4 + 1) = v14;
  v4[16] = 0;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_HStackLayout, TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, _FrameLayout>, _BackgroundStyleModifier<Color>>, CornerRadiusModifier>, ModifiedContent<Button<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Int?>>>, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>);
  closure #1 in ArtistRazzmatazzView.RazzmatazzCell.body.getter(v2, (uint64_t)&v4[*(int *)(v15 + 44)]);
  if (one-time initialization token for mediumSpacing != -1) {
    swift_once();
  }
  char v16 = static Edge.Set.all.getter();
  EdgeInsets.init(_all:)();
  uint64_t v18 = v17;
  uint64_t v20 = v19;
  uint64_t v22 = v21;
  uint64_t v24 = v23;
  outlined init with copy of (String, Any)((uint64_t)v4, (uint64_t)v7, &demangling cache variable for type metadata for HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, _FrameLayout>, _BackgroundStyleModifier<Color>>, CornerRadiusModifier>, ModifiedContent<Button<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Int?>>>, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>);
  uint64_t v25 = &v7[*(int *)(v5 + 36)];
  char *v25 = v16;
  *((void *)v25 + 1) = v18;
  *((void *)v25 + 2) = v20;
  *((void *)v25 + 3) = v22;
  *((void *)v25 + 4) = v24;
  v25[40] = 0;
  outlined destroy of TaskPriority?((uint64_t)v4, &demangling cache variable for type metadata for HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, _FrameLayout>, _BackgroundStyleModifier<Color>>, CornerRadiusModifier>, ModifiedContent<Button<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Int?>>>, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>);
  type metadata accessor for ArtistRazzmatazzView.RazzmatazzCell(0);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  outlined init with copy of (String, Any)((uint64_t)v7, (uint64_t)v10, &demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, _FrameLayout>, _BackgroundStyleModifier<Color>>, CornerRadiusModifier>, ModifiedContent<Button<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Int?>>>, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout>);
  uint64_t v26 = &v10[*(int *)(v8 + 36)];
  long long v27 = v41;
  *(_OWORD *)uint64_t v26 = v40;
  *((_OWORD *)v26 + 1) = v27;
  *((_OWORD *)v26 + 2) = v42;
  outlined destroy of TaskPriority?((uint64_t)v7, &demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, _FrameLayout>, _BackgroundStyleModifier<Color>>, CornerRadiusModifier>, ModifiedContent<Button<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Int?>>>, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout>);
  id v28 = [self secondarySystemBackgroundColor];
  uint64_t v29 = Color.init(_:)();
  char v30 = static Edge.Set.all.getter();
  outlined init with copy of (String, Any)((uint64_t)v10, (uint64_t)v13, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, _FrameLayout>, _BackgroundStyleModifier<Color>>, CornerRadiusModifier>, ModifiedContent<Button<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Int?>>>, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout>, _FrameLayout>);
  uint64_t v31 = &v13[*(int *)(v11 + 36)];
  *(void *)uint64_t v31 = v29;
  v31[8] = v30;
  outlined destroy of TaskPriority?((uint64_t)v10, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, _FrameLayout>, _BackgroundStyleModifier<Color>>, CornerRadiusModifier>, ModifiedContent<Button<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Int?>>>, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout>, _FrameLayout>);
  if (one-time initialization token for large != -1) {
    swift_once();
  }
  uint64_t v32 = static Corner.large;
  uint64_t v33 = unk_1005AE900;
  char v34 = byte_1005AE908;
  uint64_t v35 = v39;
  outlined init with copy of (String, Any)((uint64_t)v13, v39, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, _FrameLayout>, _BackgroundStyleModifier<Color>>, CornerRadiusModifier>, ModifiedContent<Button<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Int?>>>, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout>, _FrameLayout>, _BackgroundStyleModifier<Color>>);
  uint64_t v36 = v35
      + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, _FrameLayout>, _BackgroundStyleModifier<Color>>, CornerRadiusModifier>, ModifiedContent<Button<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Int?>>>, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout>, _FrameLayout>, _BackgroundStyleModifier<Color>>, CornerRadiusModifier>)
               + 36);
  *(void *)uint64_t v36 = v32;
  *(void *)(v36 + 8) = v33;
  *(unsigned char *)(v36 + 16) = v34;
  return outlined destroy of TaskPriority?((uint64_t)v13, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, _FrameLayout>, _BackgroundStyleModifier<Color>>, CornerRadiusModifier>, ModifiedContent<Button<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Int?>>>, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout>, _FrameLayout>, _BackgroundStyleModifier<Color>>);
}

uint64_t closure #1 in ArtistRazzmatazzView.RazzmatazzCell.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v58 = a2;
  uint64_t v49 = *(void *)(type metadata accessor for ArtistRazzmatazzView.RazzmatazzCell(0) - 8);
  __chkstk_darwin();
  uint64_t v50 = v3;
  uint64_t v51 = (uint64_t)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Button<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Int?>>>);
  uint64_t v55 = *(void *)(v4 - 8);
  uint64_t v56 = v4;
  __chkstk_darwin();
  uint64_t v54 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Button<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Int?>>>, _EnvironmentKeyWritingModifier<Color?>>);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v57 = (uint64_t)&v48 - v8;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Text)>>);
  __chkstk_darwin();
  char v10 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, _FrameLayout>);
  __chkstk_darwin();
  Swift::String v13 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, _FrameLayout>, _BackgroundStyleModifier<Color>>);
  __chkstk_darwin();
  char v16 = (char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, _FrameLayout>, _BackgroundStyleModifier<Color>>, CornerRadiusModifier>);
  __chkstk_darwin();
  uint64_t v19 = (char *)&v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v48 = (uint64_t)&v48 - v20;
  *(void *)char v10 = static HorizontalAlignment.center.getter();
  *((void *)v10 + 1) = 0;
  v10[16] = 1;
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_VStackLayout, TupleView<(ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Text)>>);
  closure #1 in closure #1 in ArtistRazzmatazzView.RazzmatazzCell.body.getter(a1, (uint64_t)&v10[*(int *)(v21 + 44)]);
  uint64_t v53 = a1;
  if (one-time initialization token for mediumSpacing != -1) {
    swift_once();
  }
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  outlined init with copy of (String, Any)((uint64_t)v10, (uint64_t)v13, &demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Text)>>);
  uint64_t v22 = &v13[*(int *)(v11 + 36)];
  long long v23 = v60;
  *(_OWORD *)uint64_t v22 = v59;
  *((_OWORD *)v22 + 1) = v23;
  *((_OWORD *)v22 + 2) = v61;
  outlined destroy of TaskPriority?((uint64_t)v10, &demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Text)>>);
  id v24 = [self systemBackgroundColor];
  uint64_t v25 = Color.init(_:)();
  char v26 = static Edge.Set.all.getter();
  outlined init with copy of (String, Any)((uint64_t)v13, (uint64_t)v16, &demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, _FrameLayout>);
  long long v27 = &v16[*(int *)(v14 + 36)];
  *(void *)long long v27 = v25;
  v27[8] = v26;
  outlined destroy of TaskPriority?((uint64_t)v13, &demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, _FrameLayout>);
  if (one-time initialization token for medium != -1) {
    swift_once();
  }
  uint64_t v28 = static Corner.medium;
  uint64_t v29 = *(void *)algn_1005AE8E8;
  char v30 = byte_1005AE8F0;
  outlined init with copy of (String, Any)((uint64_t)v16, (uint64_t)v19, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, _FrameLayout>, _BackgroundStyleModifier<Color>>);
  uint64_t v31 = &v19[*(int *)(v17 + 36)];
  *(void *)uint64_t v31 = v28;
  *((void *)v31 + 1) = v29;
  v31[16] = v30;
  outlined destroy of TaskPriority?((uint64_t)v16, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, _FrameLayout>, _BackgroundStyleModifier<Color>>);
  uint64_t v32 = v48;
  outlined init with take of PresentationSource?((uint64_t)v19, v48, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, _FrameLayout>, _BackgroundStyleModifier<Color>>, CornerRadiusModifier>);
  uint64_t v33 = v53;
  uint64_t v34 = v51;
  outlined init with copy of ArtistRazzmatazzView(v53, v51, type metadata accessor for ArtistRazzmatazzView.RazzmatazzCell);
  unint64_t v35 = (*(unsigned __int8 *)(v49 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80);
  uint64_t v36 = swift_allocObject();
  outlined init with take of ArtistRazzmatazzView(v34, v36 + v35, type metadata accessor for ArtistRazzmatazzView.RazzmatazzCell);
  __chkstk_darwin();
  *(&v48 - 2) = v33;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Int?>>);
  lazy protocol witness table accessor for type ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Int?>> and conformance <> ModifiedContent<A, B>();
  uint64_t v37 = v54;
  Button.init(action:label:)();
  uint64_t v38 = static Color.primary.getter();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v41 = v55;
  uint64_t v40 = v56;
  (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v7, v37, v56);
  long long v42 = (uint64_t *)&v7[*(int *)(v52 + 36)];
  *long long v42 = KeyPath;
  v42[1] = v38;
  (*(void (**)(char *, uint64_t))(v41 + 8))(v37, v40);
  uint64_t v43 = v57;
  outlined init with take of PresentationSource?((uint64_t)v7, v57, &demangling cache variable for type metadata for ModifiedContent<Button<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Int?>>>, _EnvironmentKeyWritingModifier<Color?>>);
  outlined init with copy of (String, Any)(v32, (uint64_t)v19, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, _FrameLayout>, _BackgroundStyleModifier<Color>>, CornerRadiusModifier>);
  outlined init with copy of (String, Any)(v43, (uint64_t)v7, &demangling cache variable for type metadata for ModifiedContent<Button<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Int?>>>, _EnvironmentKeyWritingModifier<Color?>>);
  uint64_t v44 = v58;
  outlined init with copy of (String, Any)((uint64_t)v19, v58, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, _FrameLayout>, _BackgroundStyleModifier<Color>>, CornerRadiusModifier>);
  uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, _FrameLayout>, _BackgroundStyleModifier<Color>>, CornerRadiusModifier>, ModifiedContent<Button<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Int?>>>, _EnvironmentKeyWritingModifier<Color?>>, Spacer));
  outlined init with copy of (String, Any)((uint64_t)v7, v44 + *(int *)(v45 + 48), &demangling cache variable for type metadata for ModifiedContent<Button<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Int?>>>, _EnvironmentKeyWritingModifier<Color?>>);
  uint64_t v46 = v44 + *(int *)(v45 + 64);
  *(void *)uint64_t v46 = 0;
  *(unsigned char *)(v46 + 8) = 1;
  outlined destroy of TaskPriority?(v43, &demangling cache variable for type metadata for ModifiedContent<Button<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Int?>>>, _EnvironmentKeyWritingModifier<Color?>>);
  outlined destroy of TaskPriority?(v32, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, _FrameLayout>, _BackgroundStyleModifier<Color>>, CornerRadiusModifier>);
  outlined destroy of TaskPriority?((uint64_t)v7, &demangling cache variable for type metadata for ModifiedContent<Button<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Int?>>>, _EnvironmentKeyWritingModifier<Color?>>);
  return outlined destroy of TaskPriority?((uint64_t)v19, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, _FrameLayout>, _BackgroundStyleModifier<Color>>, CornerRadiusModifier>);
}

uint64_t closure #1 in closure #1 in ArtistRazzmatazzView.RazzmatazzCell.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v113 = a2;
  uint64_t v3 = type metadata accessor for Date.FormatStyle.Symbol.Day();
  uint64_t v111 = *(void *)(v3 - 8);
  uint64_t v112 = v3;
  __chkstk_darwin();
  uint64_t v110 = (char *)&v85 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Text.Case?>)
       - 8;
  __chkstk_darwin();
  uint64_t v108 = (uint64_t *)((char *)&v85 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Text.Case?);
  __chkstk_darwin();
  uint64_t v104 = (char *)&v85 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = type metadata accessor for Date.FormatStyle.Symbol.Month();
  uint64_t v95 = *(void (***)(char *, uint64_t))(v96 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v85 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v117 = type metadata accessor for TimeZone();
  uint64_t v120 = *(void *)(v117 - 8);
  __chkstk_darwin();
  uint64_t v115 = (char *)&v85 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Date.FormatStyle();
  uint64_t v118 = *(void *)(v10 - 8);
  __chkstk_darwin();
  uint64_t v12 = (char *)&v85 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v14 = (char *)&v85 - v13;
  uint64_t v114 = type metadata accessor for Date();
  uint64_t v119 = *(void *)(v114 - 8);
  uint64_t v15 = v119;
  __chkstk_darwin();
  uint64_t v17 = (char *)&v85 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Text, _EnvironmentKeyWritingModifier<Text.Case?>>)
      - 8;
  __chkstk_darwin();
  uint64_t v19 = (char *)&v85 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Text.Case?>>, _EnvironmentKeyWritingModifier<Font?>>);
  __chkstk_darwin();
  uint64_t v92 = (uint64_t)&v85 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.fontWeight(_:)>>.0);
  uint64_t v106 = *(void *)(v21 - 8);
  uint64_t v107 = v21;
  __chkstk_darwin();
  char v93 = (char *)&v85 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>)
       - 8;
  __chkstk_darwin();
  uint64_t v116 = (uint64_t)&v85 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v103 = (uint64_t)&v85 - v24;
  uint64_t v25 = type metadata accessor for Razzmatazz(0);
  uint64_t v102 = a1 + *(int *)(v25 + 24);
  char v26 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  uint64_t v100 = v15 + 16;
  uint64_t v101 = v26;
  long long v27 = v17;
  uint64_t v28 = v17;
  uint64_t v29 = v114;
  ((void (*)(char *))v26)(v27);
  static ParseableFormatStyle<>.dateTime.getter();
  uint64_t v30 = a1 + *(int *)(v25 + 32);
  uint64_t v98 = v30 + *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t))(v120 + 16);
  v120 += 16;
  uint64_t v99 = v31;
  ((void (*)(char *))v31)(v115);
  Date.FormatStyle.timeZone.setter();
  static Date.FormatStyle.Symbol.Month.abbreviated.getter();
  uint64_t v32 = v12;
  uint64_t v86 = v12;
  Date.FormatStyle.month(_:)();
  v95[1](v8, v96);
  uint64_t v34 = v118 + 8;
  uint64_t v33 = *(void (**)(char *, uint64_t))(v118 + 8);
  v33(v32, v10);
  uint64_t v90 = v33;
  uint64_t v118 = v34;
  uint64_t v96 = _s7SwiftUI13_TaskModifierVAcA04ViewD0AAWlTm_0(&lazy protocol witness table cache variable for type Date.FormatStyle and conformance Date.FormatStyle, (void (*)(uint64_t))&type metadata accessor for Date.FormatStyle);
  CGFloat v89 = v14;
  uint64_t v91 = v10;
  uint64_t v87 = v28;
  Date.formatted<A>(_:)();
  v33(v14, v10);
  unint64_t v35 = *(void (***)(char *, uint64_t))(v119 + 8);
  v119 += 8;
  uint64_t v95 = v35;
  ((void (*)(char *, uint64_t))v35)(v28, v29);
  uint64_t v121 = v123;
  uint64_t v122 = v124;
  unint64_t v94 = _sS2SSysWl_1();
  uint64_t v36 = Text.init<A>(_:)();
  uint64_t v38 = v37;
  uint64_t v40 = v39;
  LOBYTE(v10) = v41 & 1;
  uint64_t v42 = enum case for Text.Case.uppercase(_:);
  uint64_t v43 = type metadata accessor for Text.Case();
  uint64_t v44 = *(void *)(v43 - 8);
  uint64_t v45 = (uint64_t)v104;
  (*(void (**)(char *, uint64_t, uint64_t))(v44 + 104))(v104, v42, v43);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v44 + 56))(v45, 0, 1, v43);
  uint64_t KeyPath = swift_getKeyPath();
  long long v47 = v108;
  outlined init with copy of (String, Any)(v45, (uint64_t)v108 + *(int *)(v109 + 36), &demangling cache variable for type metadata for Text.Case?);
  *long long v47 = KeyPath;
  outlined init with copy of (String, Any)((uint64_t)v47, (uint64_t)&v19[*(int *)(v88 + 44)], &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Text.Case?>);
  *(void *)uint64_t v19 = v36;
  *((void *)v19 + 1) = v38;
  v19[16] = v10;
  *((void *)v19 + 3) = v40;
  outlined copy of Text.Storage(v36, v38, v10);
  swift_bridgeObjectRetain();
  outlined destroy of TaskPriority?((uint64_t)v47, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Text.Case?>);
  outlined destroy of TaskPriority?(v45, &demangling cache variable for type metadata for Text.Case?);
  outlined consume of Text.Storage(v36, v38, v10);
  swift_bridgeObjectRelease();
  uint64_t v48 = static Font.caption.getter();
  uint64_t v49 = swift_getKeyPath();
  uint64_t v50 = v92;
  outlined init with copy of (String, Any)((uint64_t)v19, v92, &demangling cache variable for type metadata for ModifiedContent<Text, _EnvironmentKeyWritingModifier<Text.Case?>>);
  uint64_t v51 = (uint64_t *)(v50 + *(int *)(v97 + 36));
  *uint64_t v51 = v49;
  v51[1] = v48;
  outlined destroy of TaskPriority?((uint64_t)v19, &demangling cache variable for type metadata for ModifiedContent<Text, _EnvironmentKeyWritingModifier<Text.Case?>>);
  static Font.Weight.semibold.getter();
  lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Text.Case?>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>();
  uint64_t v52 = v93;
  View.fontWeight(_:)();
  outlined destroy of TaskPriority?(v50, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Text.Case?>>, _EnvironmentKeyWritingModifier<Font?>>);
  id v53 = [self systemRedColor];
  uint64_t v54 = Color.init(_:)();
  uint64_t v55 = swift_getKeyPath();
  uint64_t v56 = v106;
  uint64_t v57 = v116;
  uint64_t v58 = v52;
  long long v59 = v52;
  uint64_t v60 = v107;
  (*(void (**)(uint64_t, char *, uint64_t))(v106 + 16))(v116, v58, v107);
  long long v61 = (uint64_t *)(v57 + *(int *)(v105 + 44));
  *long long v61 = v55;
  v61[1] = v54;
  (*(void (**)(char *, uint64_t))(v56 + 8))(v59, v60);
  uint64_t v62 = v57;
  uint64_t v63 = v103;
  outlined init with take of PresentationSource?(v62, v103, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>);
  uint64_t v64 = v87;
  uint64_t v65 = v114;
  v101(v87, v102, v114);
  uint64_t v66 = v86;
  static ParseableFormatStyle<>.dateTime.getter();
  v99(v115, v98, v117);
  Date.FormatStyle.timeZone.setter();
  uint64_t v67 = v110;
  static Date.FormatStyle.Symbol.Day.defaultDigits.getter();
  long long v68 = v89;
  Date.FormatStyle.day(_:)();
  (*(void (**)(char *, uint64_t))(v111 + 8))(v67, v112);
  uint64_t v69 = v91;
  long long v70 = v90;
  v90(v66, v91);
  Date.formatted<A>(_:)();
  v70(v68, v69);
  ((void (*)(char *, uint64_t))v95)(v64, v65);
  uint64_t v121 = v123;
  uint64_t v122 = v124;
  uint64_t v71 = Text.init<A>(_:)();
  uint64_t v73 = v72;
  LOBYTE(v64) = v74 & 1;
  static Font.title3.getter();
  uint64_t v75 = Text.font(_:)();
  uint64_t v77 = v76;
  LOBYTE(v42) = v78;
  uint64_t v80 = v79;
  swift_release();
  outlined consume of Text.Storage(v71, v73, (char)v64);
  swift_bridgeObjectRelease();
  uint64_t v81 = v116;
  outlined init with copy of (String, Any)(v63, v116, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>);
  uint64_t v82 = v113;
  outlined init with copy of (String, Any)(v81, v113, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>);
  uint64_t v83 = v82
      + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Text))
               + 48);
  *(void *)uint64_t v83 = v75;
  *(void *)(v83 + 8) = v77;
  *(unsigned char *)(v83 + 16) = v42 & 1;
  *(void *)(v83 + 24) = v80;
  outlined copy of Text.Storage(v75, v77, v42 & 1);
  swift_bridgeObjectRetain();
  outlined destroy of TaskPriority?(v63, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>);
  outlined consume of Text.Storage(v75, v77, v42 & 1);
  swift_bridgeObjectRelease();
  return outlined destroy of TaskPriority?(v81, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>);
}

__n128 closure #3 in closure #1 in ArtistRazzmatazzView.RazzmatazzCell.body.getter@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X8>)
{
  uint64_t v4 = static HorizontalAlignment.leading.getter();
  closure #1 in closure #3 in closure #1 in ArtistRazzmatazzView.RazzmatazzCell.body.getter(a1, (uint64_t)v14);
  unint64_t v5 = v14[0];
  unint64_t v6 = v14[1];
  unsigned __int8 v7 = v15;
  __n128 v13 = v16;
  unint64_t v8 = v17;
  unsigned __int8 v9 = v18;
  unint64_t v10 = v19;
  uint64_t KeyPath = swift_getKeyPath();
  a2->n128_u64[0] = v4;
  a2->n128_u64[1] = 0x4000000000000000;
  a2[1].n128_u8[0] = 0;
  a2[1].n128_u64[1] = v5;
  a2[2].n128_u64[0] = v6;
  a2[2].n128_u8[8] = v7;
  __n128 result = v13;
  a2[3] = v13;
  a2[4].n128_u64[0] = v8;
  a2[4].n128_u8[8] = v9;
  a2[5].n128_u64[0] = v10;
  a2[5].n128_u64[1] = KeyPath;
  a2[6].n128_u64[0] = 1;
  a2[6].n128_u8[8] = 0;
  return result;
}

uint64_t closure #1 in closure #3 in closure #1 in ArtistRazzmatazzView.RazzmatazzCell.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  Razzmatazz.shortName.getter();
  _sS2SSysWl_1();
  uint64_t v3 = Text.init<A>(_:)();
  uint64_t v5 = v4;
  char v7 = v6 & 1;
  static Font.Weight.semibold.getter();
  uint64_t v8 = Text.fontWeight(_:)();
  uint64_t v37 = v9;
  uint64_t v38 = v8;
  char v11 = v10;
  uint64_t v39 = v12;
  outlined consume of Text.Storage(v3, v5, v7);
  swift_bridgeObjectRelease();
  __n128 v13 = (void *)(a1 + *(int *)(type metadata accessor for Razzmatazz(0) + 32));
  uint64_t v15 = v13[6];
  uint64_t v14 = v13[7];
  uint64_t v16 = v13[9];
  if (!v16) {
    goto LABEL_5;
  }
  uint64_t v17 = v13[8];
  swift_bridgeObjectRetain();
  if (String.count.getter() != 2)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    swift_bridgeObjectRetain();
    goto LABEL_6;
  }
  __swift_instantiateConcreteTypeFromMangledName(&_ss23_ContiguousArrayStorageCySSGMD_1);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_100493D00;
  *(void *)(v18 + 32) = v15;
  *(void *)(v18 + 40) = v14;
  *(void *)(v18 + 48) = v17;
  *(void *)(v18 + 56) = v16;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&_sSaySSGMD_1);
  lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>((unint64_t *)&_sSaySSGSayxGSKsWL_1, &_sSaySSGMD_1);
  BidirectionalCollection<>.joined(separator:)();
  swift_bridgeObjectRelease();
LABEL_6:
  uint64_t v19 = Text.init<A>(_:)();
  uint64_t v21 = v20;
  char v23 = v22 & 1;
  static HierarchicalShapeStyle.secondary.getter();
  uint64_t v24 = Text.foregroundStyle<A>(_:)();
  uint64_t v26 = v25;
  char v28 = v27 & 1;
  outlined consume of Text.Storage(v19, v21, v23);
  swift_bridgeObjectRelease();
  static Font.subheadline.getter();
  uint64_t v29 = Text.font(_:)();
  uint64_t v31 = v30;
  char v33 = v32;
  uint64_t v35 = v34;
  swift_release();
  outlined consume of Text.Storage(v24, v26, v28);
  swift_bridgeObjectRelease();
  *(void *)a2 = v38;
  *(void *)(a2 + 8) = v37;
  *(unsigned char *)(a2 + 16) = v11 & 1;
  *(void *)(a2 + 24) = v39;
  *(void *)(a2 + 32) = v29;
  *(void *)(a2 + 40) = v31;
  *(unsigned char *)(a2 + 48) = v33 & 1;
  *(void *)(a2 + 56) = v35;
  outlined copy of Text.Storage(v38, v37, v11 & 1);
  swift_bridgeObjectRetain();
  outlined copy of Text.Storage(v29, v31, v33 & 1);
  swift_bridgeObjectRetain();
  outlined consume of Text.Storage(v29, v31, v33 & 1);
  swift_bridgeObjectRelease();
  outlined consume of Text.Storage(v38, v37, v11 & 1);
  return swift_bridgeObjectRelease();
}

void one-time initialization function for standardSpacing()
{
  static CGFloat.standardSpacing = 0x4020000000000000;
}

void one-time initialization function for mediumSpacing()
{
  static CGFloat.mediumSpacing = 0x4028000000000000;
}

{
  static CGFloat.mediumSpacing = 0x4028000000000000;
}

uint64_t partial apply for closure #2 in ArtistRazzmatazzView.body.getter()
{
  uint64_t v2 = *(void *)(type metadata accessor for ArtistRazzmatazzView(0) - 8);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = partial apply for closure #1 in static MusicEngagementExtension.performRequest(with:completion:);
  return closure #2 in ArtistRazzmatazzView.body.getter(v3);
}

uint64_t associated type witness table accessor for View.Body : View in ArtistRazzmatazzView()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t *initializeBufferWithCopyOfBuffer for ArtistRazzmatazzView(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for Artist();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    char v10 = (uint64_t *)((char *)a1 + v8);
    char v11 = (uint64_t *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *char v10 = *v11;
    v10[1] = v12;
    __n128 v13 = (uint64_t *)((char *)a1 + v9);
    uint64_t v14 = (uint64_t *)((char *)a2 + v9);
    uint64_t v15 = v14[1];
    void *v13 = *v14;
    v13[1] = v15;
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScaledMetric<CGFloat>);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  }
  return a1;
}

uint64_t destroy for ArtistRazzmatazzView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Artist();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v5 = a1 + *(int *)(a2 + 28);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScaledMetric<CGFloat>);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);

  return v7(v5, v6);
}

uint64_t initializeWithCopy for ArtistRazzmatazzView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Artist();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  char v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  void *v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = (void *)(a1 + v8);
  __n128 v13 = (void *)(a2 + v8);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScaledMetric<CGFloat>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  return a1;
}

uint64_t assignWithCopy for ArtistRazzmatazzView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Artist();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  swift_retain();
  swift_release();
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(void *)(a1 + v11) = *(void *)(a2 + v11);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v12 + 8) = *(void *)(v13 + 8);
  swift_retain();
  swift_release();
  uint64_t v14 = a3[7];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScaledMetric<CGFloat>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 24))(v15, v16, v17);
  return a1;
}

uint64_t initializeWithTake for ArtistRazzmatazzView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Artist();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  uint64_t v8 = a3[7];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScaledMetric<CGFloat>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  return a1;
}

uint64_t assignWithTake for ArtistRazzmatazzView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Artist();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  swift_release();
  uint64_t v7 = a3[6];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  swift_bridgeObjectRelease();
  *(void *)(v8 + 8) = *(void *)(v9 + 8);
  swift_release();
  uint64_t v10 = a3[7];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScaledMetric<CGFloat>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 40))(v11, v12, v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for ArtistRazzmatazzView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003538FC);
}

uint64_t sub_1003538FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Artist();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScaledMetric<CGFloat>);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 28);
    return v12(v14, a2, v13);
  }
}

uint64_t storeEnumTagSinglePayload for ArtistRazzmatazzView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100353A40);
}

uint64_t sub_100353A40(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for Artist();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  else
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScaledMetric<CGFloat>);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 28);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

void type metadata completion function for ArtistRazzmatazzView()
{
  type metadata accessor for Artist();
  if (v0 <= 0x3F)
  {
    type metadata accessor for ScaledMetric<CGFloat>();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void type metadata accessor for ScaledMetric<CGFloat>()
{
  if (!lazy cache variable for type metadata for ScaledMetric<CGFloat>)
  {
    lazy protocol witness table accessor for type CGFloat and conformance CGFloat();
    unint64_t v0 = type metadata accessor for ScaledMetric();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for ScaledMetric<CGFloat>);
    }
  }
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<VStack<TupleView<(ModifiedContent<Text, _PaddingLayout>, ModifiedContent<ModifiedContent<<<opaque return type of View.scrollIndicators(_:axes:)>>.0, _PaddingLayout>, _OverlayModifier<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _PaddingLayout>?>>)>>, _TaskModifier> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<VStack<TupleView<(ModifiedContent<Text, _PaddingLayout>, ModifiedContent<ModifiedContent<<<opaque return type of View.scrollIndicators(_:axes:)>>.0, _PaddingLayout>, _OverlayModifier<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _PaddingLayout>?>>)>>, _TaskModifier> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<VStack<TupleView<(ModifiedContent<Text, _PaddingLayout>, ModifiedContent<ModifiedContent<<<opaque return type of View.scrollIndicators(_:axes:)>>.0, _PaddingLayout>, _OverlayModifier<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _PaddingLayout>?>>)>>, _TaskModifier> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(ModifiedContent<Text, _PaddingLayout>, ModifiedContent<ModifiedContent<<<opaque return type of View.scrollIndicators(_:axes:)>>.0, _PaddingLayout>, _OverlayModifier<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _PaddingLayout>?>>)>>, _TaskModifier>);
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type VStack<TupleView<(ModifiedContent<Text, _PaddingLayout>, ModifiedContent<ModifiedContent<<<opaque return type of View.scrollIndicators(_:axes:)>>.0, _PaddingLayout>, _OverlayModifier<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _PaddingLayout>?>>)>> and conformance VStack<A>, &demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<Text, _PaddingLayout>, ModifiedContent<ModifiedContent<<<opaque return type of View.scrollIndicators(_:axes:)>>.0, _PaddingLayout>, _OverlayModifier<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _PaddingLayout>?>>)>>);
    _s7SwiftUI13_TaskModifierVAcA04ViewD0AAWlTm_0(&_s7SwiftUI13_TaskModifierVAcA04ViewD0AAWL_0, (void (*)(uint64_t))&type metadata accessor for _TaskModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<VStack<TupleView<(ModifiedContent<Text, _PaddingLayout>, ModifiedContent<ModifiedContent<<<opaque return type of View.scrollIndicators(_:axes:)>>.0, _PaddingLayout>, _OverlayModifier<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _PaddingLayout>?>>)>>, _TaskModifier> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for ArtistRazzmatazzView.RazzmatazzCell(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v35 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v35 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    uint64_t v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    uint64_t v8 = (int *)type metadata accessor for Razzmatazz(0);
    uint64_t v9 = v8[6];
    unint64_t v10 = (char *)v4 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = type metadata accessor for Date();
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    uint64_t v14 = v8[7];
    uint64_t v15 = (char *)v4 + v14;
    uint64_t v16 = (char *)a2 + v14;
    uint64_t v17 = type metadata accessor for Artist();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    uint64_t v18 = v8[8];
    uint64_t v19 = (uint64_t *)((char *)v4 + v18);
    uint64_t v20 = (char *)a2 + v18;
    uint64_t v21 = *(uint64_t *)((char *)a2 + v18 + 8);
    void *v19 = *(uint64_t *)((char *)a2 + v18);
    v19[1] = v21;
    uint64_t v22 = *(uint64_t *)((char *)a2 + v18 + 24);
    _OWORD v19[2] = *(uint64_t *)((char *)a2 + v18 + 16);
    v19[3] = v22;
    uint64_t v23 = *(uint64_t *)((char *)a2 + v18 + 40);
    v19[4] = *(uint64_t *)((char *)a2 + v18 + 32);
    v19[5] = v23;
    uint64_t v24 = *(uint64_t *)((char *)a2 + v18 + 56);
    void v19[6] = *(uint64_t *)((char *)a2 + v18 + 48);
    v19[7] = v24;
    uint64_t v25 = *(uint64_t *)((char *)a2 + v18 + 72);
    v19[8] = *(uint64_t *)((char *)a2 + v18 + 64);
    v19[9] = v25;
    uint64_t v26 = *(uint64_t *)((char *)a2 + v18 + 88);
    v19[10] = *(uint64_t *)((char *)a2 + v18 + 80);
    v19[11] = v26;
    uint64_t v40 = *(void **)((char *)a2 + v18 + 96);
    v19[12] = v40;
    uint64_t v27 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
    uint64_t v38 = &v20[v27];
    uint64_t v39 = (char *)v19 + v27;
    uint64_t v28 = type metadata accessor for TimeZone();
    uint64_t v37 = *(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v29 = v40;
    v37(v39, v38, v28);
    uint64_t v30 = *(int *)(a3 + 20);
    uint64_t v31 = *(int *)(a3 + 24);
    char v32 = (uint64_t *)((char *)v4 + v30);
    char v33 = (uint64_t *)((char *)a2 + v30);
    uint64_t v34 = v33[1];
    *char v32 = *v33;
    v32[1] = v34;
    *(uint64_t *)((char *)v4 + v31) = *(uint64_t *)((char *)a2 + v31);
  }
  swift_retain();
  return v4;
}

uint64_t destroy for ArtistRazzmatazzView.RazzmatazzCell(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = (int *)type metadata accessor for Razzmatazz(0);
  uint64_t v3 = a1 + v2[6];
  uint64_t v4 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  uint64_t v5 = a1 + v2[7];
  uint64_t v6 = type metadata accessor for Artist();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + v2[8];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v8 = v7 + *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  uint64_t v9 = type metadata accessor for TimeZone();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);

  return swift_release();
}

void *initializeWithCopy for ArtistRazzmatazzView.RazzmatazzCell(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  uint64_t v7 = (int *)type metadata accessor for Razzmatazz(0);
  uint64_t v8 = v7[6];
  uint64_t v9 = (char *)a1 + v8;
  unint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for Date();
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  uint64_t v13 = v7[7];
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = type metadata accessor for Artist();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  uint64_t v17 = v7[8];
  uint64_t v18 = (void *)((char *)a1 + v17);
  uint64_t v19 = (char *)a2 + v17;
  uint64_t v20 = *(void *)((char *)a2 + v17 + 8);
  *uint64_t v18 = *(void *)((char *)a2 + v17);
  v18[1] = v20;
  uint64_t v21 = *(void *)((char *)a2 + v17 + 24);
  v18[2] = *(void *)((char *)a2 + v17 + 16);
  v18[3] = v21;
  uint64_t v22 = *(void *)((char *)a2 + v17 + 40);
  v18[4] = *(void *)((char *)a2 + v17 + 32);
  v18[5] = v22;
  uint64_t v23 = *(void *)((char *)a2 + v17 + 56);
  v18[6] = *(void *)((char *)a2 + v17 + 48);
  v18[7] = v23;
  uint64_t v24 = *(void *)((char *)a2 + v17 + 72);
  v18[8] = *(void *)((char *)a2 + v17 + 64);
  v18[9] = v24;
  uint64_t v25 = *(void *)((char *)a2 + v17 + 88);
  v18[10] = *(void *)((char *)a2 + v17 + 80);
  v18[11] = v25;
  uint64_t v38 = *(void **)((char *)a2 + v17 + 96);
  v18[12] = v38;
  uint64_t v26 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  uint64_t v36 = &v19[v26];
  uint64_t v37 = (char *)v18 + v26;
  uint64_t v27 = type metadata accessor for TimeZone();
  uint64_t v35 = *(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v28 = v38;
  v35(v37, v36, v27);
  uint64_t v29 = *(int *)(a3 + 20);
  uint64_t v30 = *(int *)(a3 + 24);
  uint64_t v31 = (void *)((char *)a1 + v29);
  char v32 = (void *)((char *)a2 + v29);
  uint64_t v33 = v32[1];
  void *v31 = *v32;
  v31[1] = v33;
  *(void *)((char *)a1 + v30) = *(void *)((char *)a2 + v30);
  swift_retain();
  return a1;
}

void *assignWithCopy for ArtistRazzmatazzView.RazzmatazzCell(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = (int *)type metadata accessor for Razzmatazz(0);
  uint64_t v7 = v6[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = v6[7];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = type metadata accessor for Artist();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = v6[8];
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (void *)((char *)a2 + v15);
  void *v16 = *(void *)((char *)a2 + v15);
  v16[1] = *(void *)((char *)a2 + v15 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16[2] = v17[2];
  v16[3] = v17[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16[4] = v17[4];
  v16[5] = v17[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16[6] = v17[6];
  v16[7] = v17[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16[8] = v17[8];
  v16[9] = v17[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16[10] = v17[10];
  v16[11] = v17[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = (void *)v17[12];
  uint64_t v19 = (void *)v16[12];
  v16[12] = v18;
  id v20 = v18;

  uint64_t v21 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  uint64_t v22 = (char *)v16 + v21;
  uint64_t v23 = (char *)v17 + v21;
  uint64_t v24 = type metadata accessor for TimeZone();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 24))(v22, v23, v24);
  uint64_t v25 = *(int *)(a3 + 20);
  uint64_t v26 = (void *)((char *)a1 + v25);
  uint64_t v27 = (void *)((char *)a2 + v25);
  uint64_t v28 = v27[1];
  void *v26 = *v27;
  v26[1] = v28;
  swift_retain();
  swift_release();
  *(void *)((char *)a1 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

_OWORD *initializeWithTake for ArtistRazzmatazzView.RazzmatazzCell(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = (int *)type metadata accessor for Razzmatazz(0);
  uint64_t v8 = v7[6];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  uint64_t v12 = v7[7];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = type metadata accessor for Artist();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
  uint64_t v16 = v7[8];
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  long long v19 = *(_OWORD *)((char *)a2 + v16 + 16);
  *(_OWORD *)uint64_t v17 = *(_OWORD *)((char *)a2 + v16);
  *((_OWORD *)v17 + 1) = v19;
  long long v20 = *(_OWORD *)((char *)a2 + v16 + 48);
  *((_OWORD *)v17 + 2) = *(_OWORD *)((char *)a2 + v16 + 32);
  *((_OWORD *)v17 + 3) = v20;
  long long v21 = *(_OWORD *)((char *)a2 + v16 + 80);
  *((_OWORD *)v17 + 4) = *(_OWORD *)((char *)a2 + v16 + 64);
  *((_OWORD *)v17 + 5) = v21;
  *((void *)v17 + 12) = *(void *)((char *)a2 + v16 + 96);
  uint64_t v22 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  uint64_t v23 = &v17[v22];
  uint64_t v24 = &v18[v22];
  uint64_t v25 = type metadata accessor for TimeZone();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(v23, v24, v25);
  uint64_t v26 = *(int *)(a3 + 24);
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 20));
  *(void *)((char *)a1 + v26) = *(void *)((char *)a2 + v26);
  return a1;
}

void *assignWithTake for ArtistRazzmatazzView.RazzmatazzCell(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = (int *)type metadata accessor for Razzmatazz(0);
  uint64_t v9 = v8[6];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 40))(v10, v11, v12);
  uint64_t v13 = v8[7];
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = type metadata accessor for Artist();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 40))(v14, v15, v16);
  uint64_t v17 = v8[8];
  uint64_t v18 = (void *)((char *)a1 + v17);
  long long v19 = (void *)((char *)a2 + v17);
  uint64_t v20 = *(void *)((char *)a2 + v17 + 8);
  *uint64_t v18 = *(void *)((char *)a2 + v17);
  v18[1] = v20;
  swift_bridgeObjectRelease();
  uint64_t v21 = v19[3];
  v18[2] = v19[2];
  v18[3] = v21;
  swift_bridgeObjectRelease();
  uint64_t v22 = v19[5];
  v18[4] = v19[4];
  v18[5] = v22;
  swift_bridgeObjectRelease();
  uint64_t v23 = v19[7];
  v18[6] = v19[6];
  v18[7] = v23;
  swift_bridgeObjectRelease();
  uint64_t v24 = v19[9];
  v18[8] = v19[8];
  v18[9] = v24;
  swift_bridgeObjectRelease();
  uint64_t v25 = v19[11];
  v18[10] = v19[10];
  v18[11] = v25;
  swift_bridgeObjectRelease();
  uint64_t v26 = (void *)v18[12];
  v18[12] = v19[12];

  uint64_t v27 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  uint64_t v28 = (char *)v18 + v27;
  uint64_t v29 = (char *)v19 + v27;
  uint64_t v30 = type metadata accessor for TimeZone();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 40))(v28, v29, v30);
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 20));
  swift_release();
  *(void *)((char *)a1 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t getEnumTagSinglePayload for ArtistRazzmatazzView.RazzmatazzCell(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100354944);
}

uint64_t sub_100354944(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Razzmatazz(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for ArtistRazzmatazzView.RazzmatazzCell(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100354A18);
}

uint64_t sub_100354A18(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for Razzmatazz(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for ArtistRazzmatazzView.RazzmatazzCell(uint64_t a1)
{
  return type metadata accessor for Notice.Variant(a1, (uint64_t *)&type metadata singleton initialization cache for ArtistRazzmatazzView.RazzmatazzCell);
}

uint64_t type metadata completion function for ArtistRazzmatazzView.RazzmatazzCell()
{
  uint64_t result = type metadata accessor for Razzmatazz(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t associated type witness table accessor for View.Body : View in ArtistRazzmatazzView.RazzmatazzCell()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t outlined init with copy of ArtistRazzmatazzView(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100354C20()
{
  uint64_t v1 = *(unsigned __int8 *)(*(void *)(type metadata accessor for ArtistRazzmatazzView.RazzmatazzCell(0) - 8) + 80);
  uint64_t v2 = v0 + ((v1 + 16) & ~v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v3 = (int *)type metadata accessor for Razzmatazz(0);
  uint64_t v4 = v2 + v3[6];
  uint64_t v5 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = v2 + v3[7];
  uint64_t v7 = type metadata accessor for Artist();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  uint64_t v8 = v2 + v3[8];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v9 = v8 + *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  uint64_t v10 = type metadata accessor for TimeZone();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  swift_release();

  return swift_deallocObject();
}

uint64_t outlined init with take of ArtistRazzmatazzView(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t partial apply for closure #2 in closure #1 in ArtistRazzmatazzView.RazzmatazzCell.body.getter()
{
  uint64_t v1 = type metadata accessor for ArtistRazzmatazzView.RazzmatazzCell(0);
  uint64_t v2 = *(void *)(v1 - 8);
  return (*(uint64_t (**)(unint64_t))(v0
                                                     + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))
                                                     + *(int *)(v1 + 20)))(v0 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80)));
}

double partial apply for closure #3 in closure #1 in ArtistRazzmatazzView.RazzmatazzCell.body.getter@<D0>(__n128 *a1@<X8>)
{
  *(void *)&double result = closure #3 in closure #1 in ArtistRazzmatazzView.RazzmatazzCell.body.getter(*(void *)(v1 + 16), a1).n128_u64[0];
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Int?>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Int?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Int?>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Int?>>);
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type VStack<TupleView<(Text, Text)>> and conformance VStack<A>, &demangling cache variable for type metadata for VStack<TupleView<(Text, Text)>>);
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>((unint64_t *)&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Int?> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Int?>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Int?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t _s7SwiftUI13_TaskModifierVAcA04ViewD0AAWlTm_0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Text.Case?>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Text.Case?>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Text.Case?>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Text.Case?>>, _EnvironmentKeyWritingModifier<Font?>>);
    lazy protocol witness table accessor for type ModifiedContent<Text, _EnvironmentKeyWritingModifier<Text.Case?>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>((unint64_t *)&_s7SwiftUI30_EnvironmentKeyWritingModifierVyAA4FontVSgGACyxGAA04ViewF0AAWL_0, &_s7SwiftUI30_EnvironmentKeyWritingModifierVyAA4FontVSgGMD_0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Text.Case?>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<Text, _EnvironmentKeyWritingModifier<Text.Case?>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<Text, _EnvironmentKeyWritingModifier<Text.Case?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<Text, _EnvironmentKeyWritingModifier<Text.Case?>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<Text, _EnvironmentKeyWritingModifier<Text.Case?>>);
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Text.Case?> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Text.Case?>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<Text, _EnvironmentKeyWritingModifier<Text.Case?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t partial apply for closure #1 in closure #1 in ArtistRazzmatazzView.body.getter@<X0>(uint64_t a1@<X8>)
{
  return closure #1 in closure #1 in ArtistRazzmatazzView.body.getter(*(void *)(v1 + 24), a1);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<LazyHGrid<ForEach<[Razzmatazz], Razzmatazz, ArtistRazzmatazzView.RazzmatazzCell>>, _FrameLayout> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<LazyHGrid<ForEach<[Razzmatazz], Razzmatazz, ArtistRazzmatazzView.RazzmatazzCell>>, _FrameLayout> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<LazyHGrid<ForEach<[Razzmatazz], Razzmatazz, ArtistRazzmatazzView.RazzmatazzCell>>, _FrameLayout> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<LazyHGrid<ForEach<[Razzmatazz], Razzmatazz, ArtistRazzmatazzView.RazzmatazzCell>>, _FrameLayout>);
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type LazyHGrid<ForEach<[Razzmatazz], Razzmatazz, ArtistRazzmatazzView.RazzmatazzCell>> and conformance LazyHGrid<A>, &demangling cache variable for type metadata for LazyHGrid<ForEach<[Razzmatazz], Razzmatazz, ArtistRazzmatazzView.RazzmatazzCell>>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<LazyHGrid<ForEach<[Razzmatazz], Razzmatazz, ArtistRazzmatazzView.RazzmatazzCell>>, _FrameLayout> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t partial apply for closure #1 in closure #1 in closure #1 in ArtistRazzmatazzView.body.getter()
{
  return closure #1 in closure #1 in closure #1 in ArtistRazzmatazzView.body.getter(*(void *)(v0 + 16));
}

unint64_t lazy protocol witness table accessor for type ForEach<[Razzmatazz], Razzmatazz, ArtistRazzmatazzView.RazzmatazzCell> and conformance <> ForEach<A, B, C>()
{
  unint64_t result = lazy protocol witness table cache variable for type ForEach<[Razzmatazz], Razzmatazz, ArtistRazzmatazzView.RazzmatazzCell> and conformance <> ForEach<A, B, C>;
  if (!lazy protocol witness table cache variable for type ForEach<[Razzmatazz], Razzmatazz, ArtistRazzmatazzView.RazzmatazzCell> and conformance <> ForEach<A, B, C>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ForEach<[Razzmatazz], Razzmatazz, ArtistRazzmatazzView.RazzmatazzCell>);
    _s7SwiftUI13_TaskModifierVAcA04ViewD0AAWlTm_0(&lazy protocol witness table cache variable for type ArtistRazzmatazzView.RazzmatazzCell and conformance ArtistRazzmatazzView.RazzmatazzCell, (void (*)(uint64_t))type metadata accessor for ArtistRazzmatazzView.RazzmatazzCell);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ForEach<[Razzmatazz], Razzmatazz, ArtistRazzmatazzView.RazzmatazzCell> and conformance <> ForEach<A, B, C>);
  }
  return result;
}

uint64_t objectdestroyTm_10()
{
  uint64_t v1 = (int *)(type metadata accessor for ArtistRazzmatazzView(0) - 8);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80));
  uint64_t v3 = type metadata accessor for Artist();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v4 = v2 + v1[9];
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScaledMetric<CGFloat>);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);

  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #1 in closure #1 in closure #1 in ArtistRazzmatazzView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for ArtistRazzmatazzView(0) - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return closure #1 in closure #1 in closure #1 in closure #1 in ArtistRazzmatazzView.body.getter(a1, v6, a2);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, _FrameLayout>, _BackgroundStyleModifier<Color>>, CornerRadiusModifier>, ModifiedContent<Button<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Int?>>>, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout>, _FrameLayout>, _BackgroundStyleModifier<Color>>, CornerRadiusModifier> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, _FrameLayout>, _BackgroundStyleModifier<Color>>, CornerRadiusModifier>, ModifiedContent<Button<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Int?>>>, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout>, _FrameLayout>, _BackgroundStyleModifier<Color>>, CornerRadiusModifier> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, _FrameLayout>, _BackgroundStyleModifier<Color>>, CornerRadiusModifier>, ModifiedContent<Button<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Int?>>>, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout>, _FrameLayout>, _BackgroundStyleModifier<Color>>, CornerRadiusModifier> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, _FrameLayout>, _BackgroundStyleModifier<Color>>, CornerRadiusModifier>, ModifiedContent<Button<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Int?>>>, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout>, _FrameLayout>, _BackgroundStyleModifier<Color>>, CornerRadiusModifier>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, _FrameLayout>, _BackgroundStyleModifier<Color>>, CornerRadiusModifier>, ModifiedContent<Button<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Int?>>>, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout>, _FrameLayout>, _BackgroundStyleModifier<Color>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type CornerRadiusModifier and conformance CornerRadiusModifier();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, _FrameLayout>, _BackgroundStyleModifier<Color>>, CornerRadiusModifier>, ModifiedContent<Button<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Int?>>>, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout>, _FrameLayout>, _BackgroundStyleModifier<Color>>, CornerRadiusModifier> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, _FrameLayout>, _BackgroundStyleModifier<Color>>, CornerRadiusModifier>, ModifiedContent<Button<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Int?>>>, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout>, _FrameLayout>, _BackgroundStyleModifier<Color>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, _FrameLayout>, _BackgroundStyleModifier<Color>>, CornerRadiusModifier>, ModifiedContent<Button<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Int?>>>, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout>, _FrameLayout>, _BackgroundStyleModifier<Color>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, _FrameLayout>, _BackgroundStyleModifier<Color>>, CornerRadiusModifier>, ModifiedContent<Button<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Int?>>>, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout>, _FrameLayout>, _BackgroundStyleModifier<Color>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, _FrameLayout>, _BackgroundStyleModifier<Color>>, CornerRadiusModifier>, ModifiedContent<Button<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Int?>>>, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout>, _FrameLayout>, _BackgroundStyleModifier<Color>>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<LazyHGrid<ForEach<[Razzmatazz], Razzmatazz, ArtistRazzmatazzView.RazzmatazzCell>>, _FrameLayout>, _PaddingLayout> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, _FrameLayout>, _BackgroundStyleModifier<Color>>, CornerRadiusModifier>, ModifiedContent<Button<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Int?>>>, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout>, _FrameLayout> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, _FrameLayout>, _BackgroundStyleModifier<Color>>, CornerRadiusModifier>, ModifiedContent<Button<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Int?>>>, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout>, _FrameLayout>, (void (*)(void))lazy protocol witness table accessor for type ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, _FrameLayout>, _BackgroundStyleModifier<Color>>, CornerRadiusModifier>, ModifiedContent<Button<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Int?>>>, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>);
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>((unint64_t *)&lazy protocol witness table cache variable for type _BackgroundStyleModifier<Color> and conformance _BackgroundStyleModifier<A>, &demangling cache variable for type metadata for _BackgroundStyleModifier<Color>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, _FrameLayout>, _BackgroundStyleModifier<Color>>, CornerRadiusModifier>, ModifiedContent<Button<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Int?>>>, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout>, _FrameLayout>, _BackgroundStyleModifier<Color>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<LazyHGrid<ForEach<[Razzmatazz], Razzmatazz, ArtistRazzmatazzView.RazzmatazzCell>>, _FrameLayout>, _PaddingLayout> and conformance <> ModifiedContent<A, B>(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, _FrameLayout>, _BackgroundStyleModifier<Color>>, CornerRadiusModifier>, ModifiedContent<Button<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Int?>>>, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, _FrameLayout>, _BackgroundStyleModifier<Color>>, CornerRadiusModifier>, ModifiedContent<Button<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Int?>>>, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, _FrameLayout>, _BackgroundStyleModifier<Color>>, CornerRadiusModifier>, ModifiedContent<Button<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Int?>>>, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, _FrameLayout>, _BackgroundStyleModifier<Color>>, CornerRadiusModifier>, ModifiedContent<Button<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Int?>>>, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout>);
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, _FrameLayout>, _BackgroundStyleModifier<Color>>, CornerRadiusModifier>, ModifiedContent<Button<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Int?>>>, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>> and conformance HStack<A>, &demangling cache variable for type metadata for HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, _FrameLayout>, _BackgroundStyleModifier<Color>>, CornerRadiusModifier>, ModifiedContent<Button<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Int?>>>, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<VStack<TupleView<(ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, Text)>>, _FrameLayout>, _BackgroundStyleModifier<Color>>, CornerRadiusModifier>, ModifiedContent<Button<ModifiedContent<VStack<TupleView<(Text, Text)>>, _EnvironmentKeyWritingModifier<Int?>>>, _EnvironmentKeyWritingModifier<Color?>>, Spacer)>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

id implicit closure #2 in implicit closure #1 in variable initialization expression of CitySelectionView._citySearchController()
{
  id v0 = objc_allocWithZone((Class)type metadata accessor for CitySearchController(0));

  return [v0 init];
}

uint64_t CitySelectionView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v14 = a1;
  uint64_t v15 = type metadata accessor for SearchFieldPlacement();
  uint64_t v2 = *(void *)(v15 - 8);
  __chkstk_darwin();
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NavigationStack<NavigationPath, <<opaque return type of View.navigationTitle<A>(_:)>>.0>);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.navigationTitle<A>(_:)>>.0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<List<Never, ForEach<[MusicMapKitLocalSearchCompletionWrapper], MusicMapKitLocalSearchCompletionWrapper, VStack<TupleView<(Text, ModifiedContent<Text, _PaddingLayout>?, ModifiedContent<Button<Text>, _FrameLayout>)>>>>, _OverlayModifier<ContentUnavailableView<SearchUnavailableContent.Label, SearchUnavailableContent.Description, SearchUnavailableContent.Actions>?>>);
  unint64_t v10 = lazy protocol witness table accessor for type ModifiedContent<List<Never, ForEach<[MusicMapKitLocalSearchCompletionWrapper], MusicMapKitLocalSearchCompletionWrapper, VStack<TupleView<(Text, ModifiedContent<Text, _PaddingLayout>?, ModifiedContent<Button<Text>, _FrameLayout>)>>>>, _OverlayModifier<ContentUnavailableView<SearchUnavailableContent.Label, SearchUnavailableContent.Description, SearchUnavailableContent.Actions>?>> and conformance <> ModifiedContent<A, B>();
  unint64_t v11 = _sS2SSysWl_1();
  uint64_t v17 = v9;
  uint64_t v18 = &type metadata for String;
  unint64_t v19 = v10;
  unint64_t v20 = v11;
  swift_getOpaqueTypeConformance2();
  NavigationStack.init<>(root:)();
  type metadata accessor for CitySearchController(0);
  lazy protocol witness table accessor for type CitySearchController and conformance CitySearchController(&lazy protocol witness table cache variable for type CitySearchController and conformance CitySearchController, (void (*)(uint64_t))type metadata accessor for CitySearchController);
  uint64_t v12 = (void *)StateObject.projectedValue.getter();
  swift_getKeyPath();
  ObservedObject.Wrapper.subscript.getter();
  swift_release();

  static SearchFieldPlacement.navigationBarDrawer.getter();
  lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type NavigationStack<NavigationPath, <<opaque return type of View.navigationTitle<A>(_:)>>.0> and conformance NavigationStack<A, B>, &demangling cache variable for type metadata for NavigationStack<NavigationPath, <<opaque return type of View.navigationTitle<A>(_:)>>.0>);
  View.searchable(text:placement:prompt:)();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v15);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t closure #1 in CitySelectionView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v19[1] = a2;
  uint64_t v3 = *(void *)(type metadata accessor for CitySelectionView(0) - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<List<Never, ForEach<[MusicMapKitLocalSearchCompletionWrapper], MusicMapKitLocalSearchCompletionWrapper, VStack<TupleView<(Text, ModifiedContent<Text, _PaddingLayout>?, ModifiedContent<Button<Text>, _FrameLayout>)>>>>, _OverlayModifier<ContentUnavailableView<SearchUnavailableContent.Label, SearchUnavailableContent.Description, SearchUnavailableContent.Actions>?>>);
  __chkstk_darwin();
  uint64_t v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for CitySearchController(0);
  lazy protocol witness table accessor for type CitySearchController and conformance CitySearchController(&lazy protocol witness table cache variable for type CitySearchController and conformance CitySearchController, (void (*)(uint64_t))type metadata accessor for CitySearchController);
  uint64_t v8 = (void *)StateObject.wrappedValue.getter();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();

  swift_release();
  swift_release();
  uint64_t v9 = v20[0];
  uint64_t KeyPath = swift_getKeyPath();
  outlined init with copy of CitySelectionView(a1, (uint64_t)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v12 = swift_allocObject();
  outlined init with take of CitySelectionView((uint64_t)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v12 + v11);
  v19[7] = v12;
  v20[0] = v9;
  v19[4] = v20;
  v19[5] = KeyPath;
  void v19[6] = partial apply for closure #1 in closure #1 in CitySelectionView.body.getter;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ForEach<[MusicMapKitLocalSearchCompletionWrapper], MusicMapKitLocalSearchCompletionWrapper, VStack<TupleView<(Text, ModifiedContent<Text, _PaddingLayout>?, ModifiedContent<Button<Text>, _FrameLayout>)>>>);
  lazy protocol witness table accessor for type ForEach<[MusicMapKitLocalSearchCompletionWrapper], MusicMapKitLocalSearchCompletionWrapper, VStack<TupleView<(Text, ModifiedContent<Text, _PaddingLayout>?, ModifiedContent<Button<Text>, _FrameLayout>)>>> and conformance <> ForEach<A, B, C>();
  List<>.init(content:)();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v13 = static Alignment.center.getter();
  uint64_t v15 = v14;
  uint64_t v16 = (uint64_t)&v7[*(int *)(v5 + 36)];
  closure #2 in closure #1 in CitySelectionView.body.getter(v16);
  uint64_t v17 = (uint64_t *)(v16
                  + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _OverlayModifier<ContentUnavailableView<SearchUnavailableContent.Label, SearchUnavailableContent.Description, SearchUnavailableContent.Actions>?>)
                           + 36));
  *uint64_t v17 = v13;
  v17[1] = v15;
  v20[0] = 0x686372616553;
  v20[1] = 0xE600000000000000;
  lazy protocol witness table accessor for type ModifiedContent<List<Never, ForEach<[MusicMapKitLocalSearchCompletionWrapper], MusicMapKitLocalSearchCompletionWrapper, VStack<TupleView<(Text, ModifiedContent<Text, _PaddingLayout>?, ModifiedContent<Button<Text>, _FrameLayout>)>>>>, _OverlayModifier<ContentUnavailableView<SearchUnavailableContent.Label, SearchUnavailableContent.Description, SearchUnavailableContent.Actions>?>> and conformance <> ModifiedContent<A, B>();
  _sS2SSysWl_1();
  View.navigationTitle<A>(_:)();
  return outlined destroy of TaskPriority?((uint64_t)v7, &demangling cache variable for type metadata for ModifiedContent<List<Never, ForEach<[MusicMapKitLocalSearchCompletionWrapper], MusicMapKitLocalSearchCompletionWrapper, VStack<TupleView<(Text, ModifiedContent<Text, _PaddingLayout>?, ModifiedContent<Button<Text>, _FrameLayout>)>>>>, _OverlayModifier<ContentUnavailableView<SearchUnavailableContent.Label, SearchUnavailableContent.Description, SearchUnavailableContent.Actions>?>>);
}

uint64_t CitySearchController.completionResults.getter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t closure #1 in closure #1 in CitySelectionView.body.getter@<X0>(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = *a1;
  *(void *)a3 = static HorizontalAlignment.leading.getter();
  *(void *)(a3 + 8) = 0;
  *(unsigned char *)(a3 + 16) = 0;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_VStackLayout, TupleView<(Text, ModifiedContent<Text, _PaddingLayout>?, ModifiedContent<Button<Text>, _FrameLayout>)>>);
  return closure #1 in closure #1 in closure #1 in CitySelectionView.body.getter(v5, a2, (void *)(a3 + *(int *)(v6 + 44)));
}

uint64_t closure #1 in closure #1 in closure #1 in CitySelectionView.body.getter@<X0>(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v80 = a3;
  uint64_t v84 = *(void *)(type metadata accessor for CitySelectionView(0) - 8);
  uint64_t v5 = *(void *)(v84 + 64);
  __chkstk_darwin();
  uint64_t v85 = (uint64_t)&v77 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&_s7SwiftUI6ButtonVyAA4TextVGMD_0);
  uint64_t v88 = *(void *)(v89 - 8);
  __chkstk_darwin();
  uint64_t v87 = (char *)&v77 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Button<Text>, _FrameLayout>);
  __chkstk_darwin();
  uint64_t v91 = (char *)&v77 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v90 = (uint64_t)&v77 - v8;
  id v9 = [a1 title];
  uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v12 = v11;

  *(void *)&long long v101 = v10;
  *((void *)&v101 + 1) = v12;
  _sS2SSysWl_1();
  uint64_t v13 = Text.init<A>(_:)();
  uint64_t v15 = v14;
  char v17 = v16 & 1;
  LODWORD(v101) = static HierarchicalShapeStyle.primary.getter();
  uint64_t v96 = Text.foregroundStyle<A>(_:)();
  uint64_t v99 = v18;
  uint64_t v100 = v19;
  char v21 = v20;
  outlined consume of Text.Storage(v13, v15, v17);
  swift_bridgeObjectRelease();
  id v22 = [a1 subtitle];
  uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v25 = v24;

  swift_bridgeObjectRelease();
  uint64_t v26 = HIBYTE(v25) & 0xF;
  if ((v25 & 0x2000000000000000) == 0) {
    uint64_t v26 = v23 & 0xFFFFFFFFFFFFLL;
  }
  if (v26)
  {
    id v27 = [a1 subtitle];
    uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v30 = v29;

    *(void *)&long long v101 = v28;
    *((void *)&v101 + 1) = v30;
    uint64_t v31 = Text.init<A>(_:)();
    uint64_t v33 = v32;
    char v35 = v34 & 1;
    LODWORD(v101) = static HierarchicalShapeStyle.secondary.getter();
    uint64_t v36 = Text.foregroundStyle<A>(_:)();
    uint64_t v77 = a1;
    uint64_t v37 = v36;
    uint64_t v39 = v38;
    uint64_t v79 = v5;
    uint64_t v78 = a2;
    char v40 = v21;
    char v42 = v41 & 1;
    outlined consume of Text.Storage(v31, v33, v35);
    swift_bridgeObjectRelease();
    static Font.subheadline.getter();
    uint64_t v95 = Text.font(_:)();
    uint64_t v98 = v43;
    LOBYTE(v33) = v44;
    uint64_t v83 = v45;
    swift_release();
    uint64_t v94 = v33 & 1;
    char v46 = v42;
    char v21 = v40;
    outlined consume of Text.Storage(v37, v39, v46);
    a2 = v78;
    uint64_t v5 = v79;
    swift_bridgeObjectRelease();
    LOBYTE(v37) = static Edge.Set.top.getter();
    EdgeInsets.init(_all:)();
    uint64_t v92 = v48;
    uint64_t v93 = v47;
    uint64_t v82 = v49;
    uint64_t v81 = v50;
    uint64_t v97 = v37;
    a1 = v77;
  }
  else
  {
    uint64_t v94 = 0;
    uint64_t v95 = 0;
    uint64_t v98 = 0;
    uint64_t v83 = 0;
    uint64_t v97 = 0;
    uint64_t v92 = 0;
    uint64_t v93 = 0;
    uint64_t v82 = 0;
    uint64_t v81 = 0;
  }
  char v51 = v21 & 1;
  *(void *)&long long v101 = 0;
  *((void *)&v101 + 1) = 0xE000000000000000;
  uint64_t v52 = v85;
  outlined init with copy of CitySelectionView(a2, v85);
  unint64_t v53 = (*(unsigned __int8 *)(v84 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v84 + 80);
  uint64_t v54 = swift_allocObject();
  outlined init with take of CitySelectionView(v52, v54 + v53);
  *(void *)(v54 + ((v5 + v53 + 7) & 0xFFFFFFFFFFFFFFF8)) = a1;
  id v55 = a1;
  uint64_t v56 = v87;
  Button<>.init<A>(_:action:)();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v57 = v88;
  uint64_t v58 = (uint64_t)v91;
  uint64_t v59 = v89;
  (*(void (**)(char *, char *, uint64_t))(v88 + 16))(v91, v56, v89);
  uint64_t v60 = (_OWORD *)(v58 + *(int *)(v86 + 36));
  long long v61 = v102;
  *uint64_t v60 = v101;
  v60[1] = v61;
  v60[2] = v103;
  (*(void (**)(char *, uint64_t))(v57 + 8))(v56, v59);
  uint64_t v62 = v90;
  outlined init with take of ModifiedContent<Button<Text>, _FrameLayout>(v58, v90);
  outlined init with copy of ModifiedContent<Button<Text>, _FrameLayout>(v62, v58);
  uint64_t v63 = v96;
  uint64_t v64 = v80;
  uint64_t v65 = v99;
  *uint64_t v80 = v96;
  v64[1] = v65;
  LODWORD(v79) = v21 & 1;
  *((unsigned char *)v64 + 16) = v21 & 1;
  uint64_t v66 = v95;
  v64[3] = v100;
  v64[4] = v66;
  uint64_t v67 = v97;
  uint64_t v68 = v98;
  uint64_t v69 = v94;
  v64[5] = v98;
  v64[6] = v69;
  uint64_t v70 = v83;
  v64[7] = v83;
  v64[8] = v67;
  uint64_t v97 = v67;
  uint64_t v71 = v92;
  v64[9] = v93;
  v64[10] = v71;
  uint64_t v72 = v81;
  v64[11] = v82;
  v64[12] = v72;
  *((unsigned char *)v64 + 104) = 0;
  uint64_t v73 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Text, ModifiedContent<Text, _PaddingLayout>?, ModifiedContent<Button<Text>, _FrameLayout>));
  outlined init with copy of ModifiedContent<Button<Text>, _FrameLayout>(v58, (uint64_t)v64 + *(int *)(v73 + 64));
  outlined copy of Text.Storage(v63, v99, v51);
  swift_bridgeObjectRetain();
  uint64_t v74 = v95;
  uint64_t v75 = v68;
  LOBYTE(v68) = v94;
  outlined copy of ModifiedContent<Text, _PaddingLayout>?(v95, v75, v94, v70);
  outlined destroy of TaskPriority?(v62, &demangling cache variable for type metadata for ModifiedContent<Button<Text>, _FrameLayout>);
  outlined destroy of TaskPriority?(v58, &demangling cache variable for type metadata for ModifiedContent<Button<Text>, _FrameLayout>);
  outlined consume of ModifiedContent<Text, _PaddingLayout>?(v74, v98, v68, v70);
  outlined consume of Text.Storage(v96, v99, v79);
  return swift_bridgeObjectRelease();
}

uint64_t closure #1 in closure #1 in closure #1 in closure #1 in CitySelectionView.body.getter(uint64_t a1, void *a2)
{
  uint64_t v20 = a1;
  uint64_t v21 = type metadata accessor for DismissAction();
  uint64_t v3 = *(void *)(v21 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  id v6 = [a2 title];
  uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v8 = v7;

  id v9 = [a2 subtitle];
  uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v12 = v11;

  [a2 coordinate];
  uint64_t v14 = v13;
  [a2 coordinate];
  uint64_t v16 = v15;
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  long long v25 = v22;
  long long v26 = v23;
  long long v27 = v24;
  swift_getKeyPath();
  swift_getKeyPath();
  *(void *)&long long v22 = v19;
  *((void *)&v22 + 1) = v8;
  *(void *)&long long v23 = v10;
  *((void *)&v23 + 1) = v12;
  *(void *)&long long v24 = v14;
  *((void *)&v24 + 1) = v16;
  swift_retain();
  static Published.subscript.setter();
  RazzmatazzController.location.didset((uint64_t)&v25);
  long long v28 = v25;
  outlined release of String?((uint64_t)&v28);
  long long v22 = v26;
  outlined release of String?((uint64_t)&v22);
  swift_release();
  type metadata accessor for CitySelectionView(0);
  specialized Environment.wrappedValue.getter((uint64_t)v5);
  DismissAction.callAsFunction()();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v21);
}

uint64_t closure #2 in closure #1 in CitySelectionView.body.getter@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for CitySearchController(0);
  lazy protocol witness table accessor for type CitySearchController and conformance CitySearchController(&lazy protocol witness table cache variable for type CitySearchController and conformance CitySearchController, (void (*)(uint64_t))type metadata accessor for CitySearchController);
  uint64_t v2 = (void *)StateObject.wrappedValue.getter();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();

  swift_release();
  swift_release();
  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v3)
  {
    uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ContentUnavailableView<SearchUnavailableContent.Label, SearchUnavailableContent.Description, SearchUnavailableContent.Actions>);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(a1, 1, 1, v4);
  }
  else
  {
    static ContentUnavailableView<>.search.getter();
    uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ContentUnavailableView<SearchUnavailableContent.Label, SearchUnavailableContent.Description, SearchUnavailableContent.Actions>);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(a1, 0, 1, v6);
  }
}

uint64_t CitySearchController.query.getter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t key path getter for CitySearchController.query : CitySearchController@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

void CitySearchController.query.setter(uint64_t a1, uint64_t a2)
{
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v8 = a1;
  uint64_t v9 = a2;
  uint64_t v5 = v2;
  static Published.subscript.setter();
  uint64_t v6 = *(void **)&v5[OBJC_IVAR____TtC11MusicCoreUIP33_66D9DE5C50A23191A347FA0B4F8C41B820CitySearchController_searchCompleter];
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, "setQuery:", v7, v8, v9);
}

uint64_t key path getter for CitySearchController.completionResults : CitySearchController@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t key path setter for CitySearchController.completionResults : CitySearchController(uint64_t a1, void **a2)
{
  uint64_t v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  id v3 = v2;
  return static Published.subscript.setter();
}

char *CitySearchController.init()()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<[MusicMapKitLocalSearchCompletionWrapper]>);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin();
  uint64_t v6 = (char *)&aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&_s7Combine9PublishedVySSGMD_0);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin();
  uint64_t v10 = (char *)&aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = &v1[OBJC_IVAR____TtC11MusicCoreUIP33_66D9DE5C50A23191A347FA0B4F8C41B820CitySearchController__query];
  CGAffineTransform aBlock = 0;
  unint64_t v23 = 0xE000000000000000;
  uint64_t v12 = v1;
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v11, v10, v7);
  uint64_t v13 = &v12[OBJC_IVAR____TtC11MusicCoreUIP33_66D9DE5C50A23191A347FA0B4F8C41B820CitySearchController__completionResults];
  CGAffineTransform aBlock = (void **)_swiftEmptyArrayStorage;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [MusicMapKitLocalSearchCompletionWrapper]);
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v13, v6, v3);
  id v14 = [objc_allocWithZone((Class)MusicMapKitLocalSearchWrapper) init];
  *(void *)&v12[OBJC_IVAR____TtC11MusicCoreUIP33_66D9DE5C50A23191A347FA0B4F8C41B820CitySearchController_searchCompleter] = v14;

  v28.receiver = v12;
  v28.super_class = ObjectType;
  uint64_t v15 = (char *)objc_msgSendSuper2(&v28, "init");
  uint64_t v16 = *(void **)&v15[OBJC_IVAR____TtC11MusicCoreUIP33_66D9DE5C50A23191A347FA0B4F8C41B820CitySearchController_searchCompleter];
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = v15;
  long long v26 = partial apply for closure #1 in CitySearchController.init();
  uint64_t v27 = v17;
  CGAffineTransform aBlock = _NSConcreteStackBlock;
  unint64_t v23 = 1107296256;
  long long v24 = thunk for @escaping @callee_guaranteed (@guaranteed [MusicMapKitLocalSearchCompletionWrapper]) -> ();
  long long v25 = &block_descriptor_65;
  uint64_t v18 = _Block_copy(&aBlock);
  uint64_t v19 = v15;
  id v20 = v16;
  swift_release();
  [v20 setDidUpdateResults:v18];

  _Block_release(v18);
  return v19;
}

uint64_t closure #1 in CitySearchController.init()(unint64_t a1, void *a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&_sScPSgMD_2);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = _swiftEmptyArrayStorage;
  if (!(a1 >> 62))
  {
    uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v6) {
      goto LABEL_3;
    }
LABEL_14:
    swift_bridgeObjectRelease();
    uint64_t v15 = _swiftEmptyArrayStorage;
LABEL_15:
    uint64_t v16 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v5, 1, 1, v16);
    type metadata accessor for MainActor();
    swift_bridgeObjectRetain();
    id v17 = a2;
    uint64_t v18 = static MainActor.shared.getter();
    uint64_t v19 = (void *)swift_allocObject();
    _OWORD v19[2] = v18;
    v19[3] = &protocol witness table for MainActor;
    v19[4] = v17;
    v19[5] = v15;
    void v19[6] = a1;
    _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5_1((uint64_t)v5, (uint64_t)&async function pointer to partial apply for closure #2 in closure #1 in CitySearchController.init(), (uint64_t)v19);
    return swift_release();
  }
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v6 = result;
  if (!result) {
    goto LABEL_14;
  }
LABEL_3:
  if (v6 >= 1)
  {
    uint64_t v21 = a2;
    long long v22 = v5;
    for (uint64_t i = 0; i != v6; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v9 = *(id *)(a1 + 8 * i + 32);
      }
      uint64_t v10 = v9;
      id v11 = [v9 subtitle];
      uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v14 = v13;

      uint64_t v25 = v12;
      uint64_t v26 = v14;
      uint64_t v23 = 44;
      unint64_t v24 = 0xE100000000000000;
      _sS2SSysWl_1();
      LOBYTE(v11) = StringProtocol.contains<A>(_:)();
      swift_bridgeObjectRelease();
      if (v11)
      {
      }
      else
      {
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v15 = v27;
    a2 = v21;
    uint64_t v5 = v22;
    goto LABEL_15;
  }
  __break(1u);
  return result;
}

uint64_t closure #2 in closure #1 in CitySearchController.init()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[4] = a5;
  v6[5] = a6;
  v6[3] = a4;
  type metadata accessor for MainActor();
  void v6[6] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(closure #2 in closure #1 in CitySearchController.init(), v8, v7);
}

uint64_t closure #2 in closure #1 in CitySearchController.init()()
{
  unint64_t v1 = v0[4];
  swift_release();
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v3 = v0 + 5;
  uint64_t v4 = (void *)v0[3];
  if (v2) {
    uint64_t v3 = v0 + 4;
  }
  uint64_t v5 = *v3;
  swift_bridgeObjectRetain();
  swift_getKeyPath();
  swift_getKeyPath();
  v0[2] = v5;
  id v6 = v4;
  static Published.subscript.setter();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t thunk for @escaping @callee_guaranteed (@guaranteed [MusicMapKitLocalSearchCompletionWrapper]) -> ()(uint64_t a1)
{
  unint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  type metadata accessor for MusicMapKitLocalSearchCompletionWrapper();
  uint64_t v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  swift_retain();
  v1(v2);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t ObjC metadata update function for CitySearchController()
{
  return type metadata accessor for CitySearchController(0);
}

uint64_t type metadata accessor for CitySearchController(uint64_t a1)
{
  return type metadata accessor for Notice.Variant(a1, (uint64_t *)&type metadata singleton initialization cache for CitySearchController);
}

void type metadata completion function for CitySearchController()
{
  type metadata accessor for Published<String>();
  if (v0 <= 0x3F)
  {
    type metadata accessor for Published<[MusicMapKitLocalSearchCompletionWrapper]>();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void type metadata accessor for Published<String>()
{
  if (!_s7Combine9PublishedVySSGML_0)
  {
    unint64_t v0 = type metadata accessor for Published();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&_s7Combine9PublishedVySSGML_0);
    }
  }
}

void type metadata accessor for Published<[MusicMapKitLocalSearchCompletionWrapper]>()
{
  if (!lazy cache variable for type metadata for Published<[MusicMapKitLocalSearchCompletionWrapper]>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [MusicMapKitLocalSearchCompletionWrapper]);
    unint64_t v0 = type metadata accessor for Published();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for Published<[MusicMapKitLocalSearchCompletionWrapper]>);
    }
  }
}

uint64_t initializeBufferWithCopyOfBuffer for CitySelectionView(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *(void *)a1 = *a2;
    a1 = v15 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    uint64_t v8 = a2[2];
    uint64_t v9 = (void *)a2[3];
    char v10 = *((unsigned char *)a2 + 32);
    swift_retain();
    outlined copy of StateObject<CitySearchController>.Storage(v8, v9, v10);
    *(void *)(a1 + 16) = v8;
    *(void *)(a1 + 24) = v9;
    *(unsigned char *)(a1 + 32) = v10;
    uint64_t v11 = *(int *)(a3 + 24);
    uint64_t v12 = (void *)(a1 + v11);
    uint64_t v13 = (uint64_t *)((char *)a2 + v11);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DismissAction>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v14 = type metadata accessor for DismissAction();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
    }
    else
    {
      *uint64_t v12 = *v13;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

id outlined copy of StateObject<CitySearchController>.Storage(uint64_t a1, void *a2, char a3)
{
  if (a3) {
    return a2;
  }
  else {
    return (id)swift_retain();
  }
}

uint64_t destroy for CitySelectionView(uint64_t a1, uint64_t a2)
{
  swift_release();
  outlined consume of StateObject<CitySearchController>.Storage(*(void *)(a1 + 16), *(void **)(a1 + 24), *(unsigned char *)(a1 + 32));
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DismissAction>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for DismissAction();
    id v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    return v6(v4, v5);
  }
  else
  {
    return swift_release();
  }
}

void outlined consume of StateObject<CitySearchController>.Storage(uint64_t a1, void *a2, char a3)
{
  if (a3) {

  }
  else {
    swift_release();
  }
}

uint64_t initializeWithCopy for CitySelectionView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v8 = *(void **)(a2 + 24);
  char v9 = *(unsigned char *)(a2 + 32);
  swift_retain();
  outlined copy of StateObject<CitySearchController>.Storage(v7, v8, v9);
  *(void *)(a1 + 16) = v7;
  *(void *)(a1 + 24) = v8;
  *(unsigned char *)(a1 + 32) = v9;
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DismissAction>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v13 = type metadata accessor for DismissAction();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
  }
  else
  {
    *uint64_t v11 = *v12;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for CitySelectionView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void **)(a2 + 24);
  char v8 = *(unsigned char *)(a2 + 32);
  outlined copy of StateObject<CitySearchController>.Storage(v6, v7, v8);
  uint64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = *(void **)(a1 + 24);
  char v11 = *(unsigned char *)(a1 + 32);
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = v8;
  outlined consume of StateObject<CitySearchController>.Storage(v9, v10, v11);
  if (a1 != a2)
  {
    uint64_t v12 = *(int *)(a3 + 24);
    uint64_t v13 = (void *)(a1 + v12);
    uint64_t v14 = (void *)(a2 + v12);
    outlined destroy of TaskPriority?(a1 + v12, &demangling cache variable for type metadata for Environment<DismissAction>.Content);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DismissAction>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v15 = type metadata accessor for DismissAction();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    }
    else
    {
      void *v13 = *v14;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t initializeWithTake for CitySelectionView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = (void *)(a1 + v5);
  uint64_t v7 = (const void *)(a2 + v5);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DismissAction>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = type metadata accessor for DismissAction();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 32))(v6, v7, v9);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v6, v7, *(void *)(*(void *)(v8 - 8) + 64));
  }
  return a1;
}

uint64_t assignWithTake for CitySelectionView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_release();
  char v7 = *(unsigned char *)(a2 + 32);
  uint64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = *(void **)(a1 + 24);
  char v10 = *(unsigned char *)(a1 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = v7;
  outlined consume of StateObject<CitySearchController>.Storage(v8, v9, v10);
  if (a1 != a2)
  {
    uint64_t v11 = *(int *)(a3 + 24);
    uint64_t v12 = (void *)(a1 + v11);
    uint64_t v13 = (const void *)(a2 + v11);
    outlined destroy of TaskPriority?(a1 + v11, &demangling cache variable for type metadata for Environment<DismissAction>.Content);
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DismissAction>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v15 = type metadata accessor for DismissAction();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v15 - 8) + 32))(v12, v13, v15);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for CitySelectionView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100357CF0);
}

uint64_t sub_100357CF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DismissAction>);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for CitySelectionView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100357DB8);
}

uint64_t sub_100357DB8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DismissAction>);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for CitySelectionView(uint64_t a1)
{
  return type metadata accessor for Notice.Variant(a1, (uint64_t *)&type metadata singleton initialization cache for CitySelectionView);
}

void type metadata completion function for CitySelectionView()
{
  type metadata accessor for Environment<DismissAction>.Content();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void type metadata accessor for Environment<DismissAction>.Content()
{
  if (!lazy cache variable for type metadata for Environment<DismissAction>.Content)
  {
    type metadata accessor for DismissAction();
    unint64_t v0 = type metadata accessor for Environment.Content();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for Environment<DismissAction>.Content);
    }
  }
}

uint64_t protocol witness for ObservableObject.objectWillChange.getter in conformance CitySearchController@<X0>(uint64_t *a1@<X8>)
{
  swift_getObjectType();
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

uint64_t associated type witness table accessor for View.Body : View in CitySelectionView()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t partial apply for closure #1 in CitySelectionView.body.getter@<X0>(uint64_t a1@<X8>)
{
  return closure #1 in CitySelectionView.body.getter(*(void *)(v1 + 16), a1);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<List<Never, ForEach<[MusicMapKitLocalSearchCompletionWrapper], MusicMapKitLocalSearchCompletionWrapper, VStack<TupleView<(Text, ModifiedContent<Text, _PaddingLayout>?, ModifiedContent<Button<Text>, _FrameLayout>)>>>>, _OverlayModifier<ContentUnavailableView<SearchUnavailableContent.Label, SearchUnavailableContent.Description, SearchUnavailableContent.Actions>?>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<List<Never, ForEach<[MusicMapKitLocalSearchCompletionWrapper], MusicMapKitLocalSearchCompletionWrapper, VStack<TupleView<(Text, ModifiedContent<Text, _PaddingLayout>?, ModifiedContent<Button<Text>, _FrameLayout>)>>>>, _OverlayModifier<ContentUnavailableView<SearchUnavailableContent.Label, SearchUnavailableContent.Description, SearchUnavailableContent.Actions>?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<List<Never, ForEach<[MusicMapKitLocalSearchCompletionWrapper], MusicMapKitLocalSearchCompletionWrapper, VStack<TupleView<(Text, ModifiedContent<Text, _PaddingLayout>?, ModifiedContent<Button<Text>, _FrameLayout>)>>>>, _OverlayModifier<ContentUnavailableView<SearchUnavailableContent.Label, SearchUnavailableContent.Description, SearchUnavailableContent.Actions>?>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<List<Never, ForEach<[MusicMapKitLocalSearchCompletionWrapper], MusicMapKitLocalSearchCompletionWrapper, VStack<TupleView<(Text, ModifiedContent<Text, _PaddingLayout>?, ModifiedContent<Button<Text>, _FrameLayout>)>>>>, _OverlayModifier<ContentUnavailableView<SearchUnavailableContent.Label, SearchUnavailableContent.Description, SearchUnavailableContent.Actions>?>>);
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type List<Never, ForEach<[MusicMapKitLocalSearchCompletionWrapper], MusicMapKitLocalSearchCompletionWrapper, VStack<TupleView<(Text, ModifiedContent<Text, _PaddingLayout>?, ModifiedContent<Button<Text>, _FrameLayout>)>>>> and conformance List<A, B>, &demangling cache variable for type metadata for List<Never, ForEach<[MusicMapKitLocalSearchCompletionWrapper], MusicMapKitLocalSearchCompletionWrapper, VStack<TupleView<(Text, ModifiedContent<Text, _PaddingLayout>?, ModifiedContent<Button<Text>, _FrameLayout>)>>>>);
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type _OverlayModifier<ContentUnavailableView<SearchUnavailableContent.Label, SearchUnavailableContent.Description, SearchUnavailableContent.Actions>?> and conformance _OverlayModifier<A>, &demangling cache variable for type metadata for _OverlayModifier<ContentUnavailableView<SearchUnavailableContent.Label, SearchUnavailableContent.Description, SearchUnavailableContent.Actions>?>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<List<Never, ForEach<[MusicMapKitLocalSearchCompletionWrapper], MusicMapKitLocalSearchCompletionWrapper, VStack<TupleView<(Text, ModifiedContent<Text, _PaddingLayout>?, ModifiedContent<Button<Text>, _FrameLayout>)>>>>, _OverlayModifier<ContentUnavailableView<SearchUnavailableContent.Label, SearchUnavailableContent.Description, SearchUnavailableContent.Actions>?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

void sub_1003580A8(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  swift_bridgeObjectRetain();
  CitySearchController.query.setter(v1, v2);
}

uint64_t outlined init with copy of CitySelectionView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CitySelectionView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100358154()
{
  uint64_t v1 = (int *)(type metadata accessor for CitySelectionView(0) - 8);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80));
  swift_release();
  outlined consume of StateObject<CitySearchController>.Storage(*(void *)(v2 + 16), *(void **)(v2 + 24), *(unsigned char *)(v2 + 32));
  uint64_t v3 = v2 + v1[8];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DismissAction>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for DismissAction();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  }
  else
  {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t outlined init with take of CitySelectionView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CitySelectionView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t partial apply for closure #1 in closure #1 in CitySelectionView.body.getter@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for CitySelectionView(0) - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return closure #1 in closure #1 in CitySelectionView.body.getter(a1, v6, a2);
}

double key path getter for RazzmatazzController.location : RazzmatazzController@<D0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  double result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(_OWORD *)(a1 + 32) = v6;
  return result;
}

uint64_t key path setter for RazzmatazzController.location : RazzmatazzController(void *a1)
{
  uint64_t v2 = a1[2];
  uint64_t v1 = a1[3];
  uint64_t v3 = a1[4];
  uint64_t v4 = a1[5];
  swift_getKeyPath();
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  long long v9 = v6;
  long long v10 = v7;
  long long v11 = v8;
  swift_getKeyPath();
  swift_getKeyPath();
  *(void *)&long long v7 = v2;
  *((void *)&v7 + 1) = v1;
  *(void *)&long long v8 = v3;
  *((void *)&v8 + 1) = v4;
  swift_retain();
  static Published.subscript.setter();
  RazzmatazzController.location.didset((uint64_t)&v9);
  long long v12 = v9;
  outlined release of String?((uint64_t)&v12);
  long long v6 = v10;
  return outlined release of String?((uint64_t)&v6);
}

uint64_t specialized closure #1 in List<>.init<A, B, C>(_:id:rowContent:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a3;
  *(void *)(v6 + 24) = a4;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [MusicMapKitLocalSearchCompletionWrapper]);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for VStack<TupleView<(Text, ModifiedContent<Text, _PaddingLayout>?, ModifiedContent<Button<Text>, _FrameLayout>)>>);
  lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type [MusicMapKitLocalSearchCompletionWrapper] and conformance [A], &demangling cache variable for type metadata for [MusicMapKitLocalSearchCompletionWrapper]);
  lazy protocol witness table accessor for type CitySearchController and conformance CitySearchController(&lazy protocol witness table cache variable for type MusicMapKitLocalSearchCompletionWrapper and conformance NSObject, (void (*)(uint64_t))type metadata accessor for MusicMapKitLocalSearchCompletionWrapper);
  lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type VStack<TupleView<(Text, ModifiedContent<Text, _PaddingLayout>?, ModifiedContent<Button<Text>, _FrameLayout>)>> and conformance VStack<A>, &demangling cache variable for type metadata for VStack<TupleView<(Text, ModifiedContent<Text, _PaddingLayout>?, ModifiedContent<Button<Text>, _FrameLayout>)>>);
  return ForEach<>.init(_:id:content:)();
}

uint64_t partial apply for specialized closure #1 in List<>.init<A, B, C>(_:id:rowContent:)()
{
  return specialized closure #1 in List<>.init<A, B, C>(_:id:rowContent:)(v0[2], v0[3], v0[4], v0[5]);
}

unint64_t lazy protocol witness table accessor for type ForEach<[MusicMapKitLocalSearchCompletionWrapper], MusicMapKitLocalSearchCompletionWrapper, VStack<TupleView<(Text, ModifiedContent<Text, _PaddingLayout>?, ModifiedContent<Button<Text>, _FrameLayout>)>>> and conformance <> ForEach<A, B, C>()
{
  unint64_t result = lazy protocol witness table cache variable for type ForEach<[MusicMapKitLocalSearchCompletionWrapper], MusicMapKitLocalSearchCompletionWrapper, VStack<TupleView<(Text, ModifiedContent<Text, _PaddingLayout>?, ModifiedContent<Button<Text>, _FrameLayout>)>>> and conformance <> ForEach<A, B, C>;
  if (!lazy protocol witness table cache variable for type ForEach<[MusicMapKitLocalSearchCompletionWrapper], MusicMapKitLocalSearchCompletionWrapper, VStack<TupleView<(Text, ModifiedContent<Text, _PaddingLayout>?, ModifiedContent<Button<Text>, _FrameLayout>)>>> and conformance <> ForEach<A, B, C>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ForEach<[MusicMapKitLocalSearchCompletionWrapper], MusicMapKitLocalSearchCompletionWrapper, VStack<TupleView<(Text, ModifiedContent<Text, _PaddingLayout>?, ModifiedContent<Button<Text>, _FrameLayout>)>>>);
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type VStack<TupleView<(Text, ModifiedContent<Text, _PaddingLayout>?, ModifiedContent<Button<Text>, _FrameLayout>)>> and conformance VStack<A>, &demangling cache variable for type metadata for VStack<TupleView<(Text, ModifiedContent<Text, _PaddingLayout>?, ModifiedContent<Button<Text>, _FrameLayout>)>>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ForEach<[MusicMapKitLocalSearchCompletionWrapper], MusicMapKitLocalSearchCompletionWrapper, VStack<TupleView<(Text, ModifiedContent<Text, _PaddingLayout>?, ModifiedContent<Button<Text>, _FrameLayout>)>>> and conformance <> ForEach<A, B, C>);
  }
  return result;
}

uint64_t sub_100358730()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t partial apply for specialized closure #1 in closure #1 in List<>.init<A, B, C>(_:id:rowContent:)(uint64_t *a1)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t *))(v1 + 16);
  uint64_t v4 = *a1;
  return v2(&v4);
}

uint64_t lazy protocol witness table accessor for type CitySearchController and conformance CitySearchController(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t type metadata accessor for MusicMapKitLocalSearchCompletionWrapper()
{
  unint64_t result = lazy cache variable for type metadata for MusicMapKitLocalSearchCompletionWrapper;
  if (!lazy cache variable for type metadata for MusicMapKitLocalSearchCompletionWrapper)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for MusicMapKitLocalSearchCompletionWrapper);
  }
  return result;
}

uint64_t sub_10035882C()
{
  uint64_t v1 = (int *)(type metadata accessor for CitySelectionView(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = *(void *)(*(void *)v1 + 64);
  swift_release();
  outlined consume of StateObject<CitySearchController>.Storage(*(void *)(v0 + v2 + 16), *(void **)(v0 + v2 + 24), *(unsigned char *)(v0 + v2 + 32));
  unint64_t v4 = v0 + v2 + v1[8];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DismissAction>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for DismissAction();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #1 in closure #1 in closure #1 in CitySelectionView.body.getter()
{
  uint64_t v1 = *(void *)(type metadata accessor for CitySelectionView(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void **)(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));

  return closure #1 in closure #1 in closure #1 in closure #1 in CitySelectionView.body.getter(v0 + v2, v3);
}

uint64_t outlined init with take of ModifiedContent<Button<Text>, _FrameLayout>(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Button<Text>, _FrameLayout>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t outlined init with copy of ModifiedContent<Button<Text>, _FrameLayout>(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Button<Text>, _FrameLayout>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined copy of ModifiedContent<Text, _PaddingLayout>?(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    outlined copy of Text.Storage(result, a2, a3 & 1);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t outlined consume of ModifiedContent<Text, _PaddingLayout>?(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    outlined consume of Text.Storage(result, a2, a3 & 1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100358B58()
{
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in CitySearchController.init()(unint64_t a1)
{
  return closure #1 in CitySearchController.init()(a1, *(void **)(v1 + 16));
}

uint64_t block_copy_helper_63(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_63()
{
  return swift_release();
}

uint64_t sub_100358BB0()
{
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t partial apply for closure #2 in closure #1 in CitySearchController.init()(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  long long v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  void *v9 = v2;
  v9[1] = partial apply for closure #1 in static MusicEngagementExtension.performRequest(with:completion:);
  return closure #2 in closure #1 in CitySearchController.init()(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_100358CC8()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for NavigationStack<NavigationPath, <<opaque return type of View.navigationTitle<A>(_:)>>.0>);
  lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type NavigationStack<NavigationPath, <<opaque return type of View.navigationTitle<A>(_:)>>.0> and conformance NavigationStack<A, B>, &demangling cache variable for type metadata for NavigationStack<NavigationPath, <<opaque return type of View.navigationTitle<A>(_:)>>.0>);
  return swift_getOpaqueTypeConformance2();
}

uint64_t Razzmatazz.shortName.getter()
{
  uint64_t v1 = v0;
  type metadata accessor for Razzmatazz(0);
  __chkstk_darwin();
  uint64_t v3 = &v20[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 16];
  uint64_t v4 = type metadata accessor for CharacterSet();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v7 = &v20[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 16];
  uint64_t v8 = *(void *)(v0 + 16);
  unint64_t v9 = *(void *)(v1 + 24);
  *(void *)&long long v22 = 64;
  *((void *)&v22 + 1) = 0xE100000000000000;
  uint64_t v21 = &v22;
  swift_bridgeObjectRetain_n();
  long long v10 = _sSlsE5split9maxSplits25omittingEmptySubsequences14whereSeparatorSay11SubSequenceQzGSi_S2b7ElementQzKXEtKFSS_Tg5_0(0x7FFFFFFFFFFFFFFFLL, 1, partial apply for specialized closure #1 in Collection<>.split(separator:maxSplits:omittingEmptySubsequences:), (uint64_t)v20, v8, v9);
  swift_bridgeObjectRelease();
  uint64_t v11 = *((void *)v10 + 2);
  if (!v11)
  {
    swift_bridgeObjectRelease();
    outlined init with copy of Razzmatazz(v1, (uint64_t)v3);
LABEL_5:
    uint64_t v15 = *((void *)v3 + 2);
    swift_bridgeObjectRetain();
    goto LABEL_6;
  }
  long long v12 = &v10[32 * v11];
  long long v19 = *(_OWORD *)v12;
  uint64_t v14 = *((void *)v12 + 2);
  uint64_t v13 = *((void *)v12 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v22 = v19;
  uint64_t v23 = v14;
  uint64_t v24 = v13;
  static CharacterSet.whitespaces.getter();
  lazy protocol witness table accessor for type Substring and conformance Substring();
  uint64_t v15 = StringProtocol.trimmingCharacters(in:)();
  uint64_t v17 = v16;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  swift_bridgeObjectRelease();
  outlined init with copy of Razzmatazz(v1, (uint64_t)v3);
  if (!v17) {
    goto LABEL_5;
  }
LABEL_6:
  outlined destroy of Razzmatazz((uint64_t)v3);
  return v15;
}

uint64_t Razzmatazz.Venue.Address.formatted(_:)(char a1)
{
  if (!a1)
  {
    _sSSSgWOb_0((uint64_t)v1, (uint64_t)&v54);
    _sSSSgWOb_0((uint64_t)&v54, (uint64_t)v45);
    uint64_t v6 = v1[3];
    uint64_t v46 = v1[2];
    uint64_t v47 = v6;
    _sSSSgWOb_0((uint64_t)(v1 + 4), (uint64_t)&v53);
    _sSSSgWOb_0((uint64_t)&v53, (uint64_t)&v48);
    uint64_t v7 = v1[7];
    uint64_t v50 = v1[6];
    uint64_t v51 = v7;
    uint64_t v9 = v45[0];
    uint64_t v8 = v45[1];
    outlined retain of String?((uint64_t)&v54);
    swift_bridgeObjectRetain();
    outlined retain of String?((uint64_t)&v53);
    if (v8)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFSS_Tg5_1 = _ss12_ArrayBufferV20_consumeAndCreateNew14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFSS_Tg5_1(0, 1, 1, (char *)_swiftEmptyArrayStorage);
      unint64_t v12 = *((void *)New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFSS_Tg5_1 + 2);
      unint64_t v11 = *((void *)New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFSS_Tg5_1 + 3);
      unint64_t v13 = v12 + 1;
      if (v12 >= v11 >> 1)
      {
        char v41 = _ss12_ArrayBufferV20_consumeAndCreateNew14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFSS_Tg5_1((char *)(v11 > 1), v12 + 1, 1, New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFSS_Tg5_1);
        unint64_t v13 = v12 + 1;
        New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFSS_Tg5_1 = v41;
      }
      *((void *)New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFSS_Tg5_1 + 2) = v13;
      uint64_t v14 = &New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFSS_Tg5_1[16 * v12];
      *((void *)v14 + 4) = v9;
      *((void *)v14 + 5) = v8;
      uint64_t v15 = v47;
      if (!v47) {
        goto LABEL_21;
      }
    }
    else
    {
      swift_bridgeObjectRetain();
      New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFSS_Tg5_1 = (char *)_swiftEmptyArrayStorage;
      uint64_t v15 = v47;
      if (!v47)
      {
LABEL_21:
        uint64_t v26 = v49;
        if (v49)
        {
          uint64_t v27 = v48;
          swift_bridgeObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFSS_Tg5_1 = _ss12_ArrayBufferV20_consumeAndCreateNew14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFSS_Tg5_1(0, *((void *)New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFSS_Tg5_1+ 2)+ 1, 1, New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFSS_Tg5_1);
          }
          unint64_t v29 = *((void *)New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFSS_Tg5_1 + 2);
          unint64_t v28 = *((void *)New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFSS_Tg5_1 + 3);
          unint64_t v30 = v29 + 1;
          if (v29 >= v28 >> 1)
          {
            uint64_t v43 = _ss12_ArrayBufferV20_consumeAndCreateNew14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFSS_Tg5_1((char *)(v28 > 1), v29 + 1, 1, New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFSS_Tg5_1);
            unint64_t v30 = v29 + 1;
            New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFSS_Tg5_1 = v43;
          }
          *((void *)New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFSS_Tg5_1 + 2) = v30;
          uint64_t v31 = &New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFSS_Tg5_1[16 * v29];
          *((void *)v31 + 4) = v27;
          *((void *)v31 + 5) = v26;
        }
        uint64_t v32 = v51;
        if (v51)
        {
          uint64_t v33 = v50;
          swift_bridgeObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFSS_Tg5_1 = _ss12_ArrayBufferV20_consumeAndCreateNew14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFSS_Tg5_1(0, *((void *)New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFSS_Tg5_1+ 2)+ 1, 1, New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFSS_Tg5_1);
          }
          unint64_t v35 = *((void *)New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFSS_Tg5_1 + 2);
          unint64_t v34 = *((void *)New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFSS_Tg5_1 + 3);
          unint64_t v36 = v35 + 1;
          if (v35 >= v34 >> 1)
          {
            char v44 = _ss12_ArrayBufferV20_consumeAndCreateNew14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFSS_Tg5_1((char *)(v34 > 1), v35 + 1, 1, New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFSS_Tg5_1);
            unint64_t v36 = v35 + 1;
            New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFSS_Tg5_1 = v44;
          }
          *((void *)New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFSS_Tg5_1 + 2) = v36;
          uint64_t v37 = &New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFSS_Tg5_1[16 * v35];
          *((void *)v37 + 4) = v33;
          *((void *)v37 + 5) = v32;
        }
        __swift_instantiateConcreteTypeFromMangledName(&_sSSSgMD_1);
        swift_arrayDestroy();
        uint64_t v52 = New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFSS_Tg5_1;
        goto LABEL_38;
      }
    }
    uint64_t v21 = v46;
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFSS_Tg5_1 = _ss12_ArrayBufferV20_consumeAndCreateNew14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFSS_Tg5_1(0, *((void *)New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFSS_Tg5_1+ 2)+ 1, 1, New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFSS_Tg5_1);
    }
    unint64_t v23 = *((void *)New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFSS_Tg5_1 + 2);
    unint64_t v22 = *((void *)New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFSS_Tg5_1 + 3);
    unint64_t v24 = v23 + 1;
    if (v23 >= v22 >> 1)
    {
      char v42 = _ss12_ArrayBufferV20_consumeAndCreateNew14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFSS_Tg5_1((char *)(v22 > 1), v23 + 1, 1, New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFSS_Tg5_1);
      unint64_t v24 = v23 + 1;
      New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFSS_Tg5_1 = v42;
    }
    *((void *)New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFSS_Tg5_1 + 2) = v24;
    uint64_t v25 = &New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFSS_Tg5_1[16 * v23];
    *((void *)v25 + 4) = v21;
    *((void *)v25 + 5) = v15;
    goto LABEL_21;
  }
  if (a1 != 1)
  {
    uint64_t v16 = v1[5];
    if (v16)
    {
      uint64_t v17 = v1[4];
      swift_bridgeObjectRetain();
      if (String.count.getter() == 2)
      {
        __swift_instantiateConcreteTypeFromMangledName(&_ss23_ContiguousArrayStorageCySSGMD_1);
        uint64_t v18 = swift_allocObject();
        long long v19 = *((_OWORD *)v1 + 1);
        *(_OWORD *)(v18 + 16) = xmmword_100493CE0;
        *(_OWORD *)(v18 + 32) = v19;
        *(void *)(v18 + 48) = v17;
        *(void *)(v18 + 56) = v16;
        long long v53 = *((_OWORD *)v1 + 3);
        long long v54 = v19;
        *(_OWORD *)(v18 + 64) = v53;
        uint64_t v52 = (_OWORD *)v18;
        outlined retain of String?((uint64_t)&v54);
        outlined retain of String?((uint64_t)&v53);
        __swift_instantiateConcreteTypeFromMangledName(&_sSaySSGMD_1);
        _sSaySSGSayxGSKsWl_1();
        goto LABEL_14;
      }
      swift_bridgeObjectRelease();
    }
    __swift_instantiateConcreteTypeFromMangledName(&_ss23_ContiguousArrayStorageCySSGMD_1);
    uint64_t v38 = (_OWORD *)swift_allocObject();
    long long v39 = *((_OWORD *)v1 + 1);
    v38[1] = xmmword_100493D00;
    v38[2] = v39;
    long long v53 = *((_OWORD *)v1 + 3);
    long long v54 = v39;
    void v38[3] = v53;
    uint64_t v52 = v38;
    outlined retain of String?((uint64_t)&v54);
    outlined retain of String?((uint64_t)&v53);
LABEL_38:
    __swift_instantiateConcreteTypeFromMangledName(&_sSaySSGMD_1);
    _sSaySSGSayxGSKsWl_1();
    uint64_t v20 = BidirectionalCollection<>.joined(separator:)();
    goto LABEL_39;
  }
  uint64_t v2 = v1[5];
  if (v2)
  {
    uint64_t v3 = v1[4];
    swift_bridgeObjectRetain();
    if (String.count.getter() == 2)
    {
      __swift_instantiateConcreteTypeFromMangledName(&_ss23_ContiguousArrayStorageCySSGMD_1);
      uint64_t v4 = swift_allocObject();
      long long v54 = *((_OWORD *)v1 + 1);
      long long v5 = v54;
      *(_OWORD *)(v4 + 16) = xmmword_100493D00;
      *(_OWORD *)(v4 + 32) = v5;
      *(void *)(v4 + 48) = v3;
      *(void *)(v4 + 56) = v2;
      *(void *)&long long v53 = v4;
      outlined retain of String?((uint64_t)&v54);
      __swift_instantiateConcreteTypeFromMangledName(&_sSaySSGMD_1);
      _sSaySSGSayxGSKsWl_1();
LABEL_14:
      uint64_t v20 = BidirectionalCollection<>.joined(separator:)();
LABEL_39:
      swift_bridgeObjectRelease();
      return v20;
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v20 = v1[2];
  swift_bridgeObjectRetain();
  return v20;
}

uint64_t Razzmatazz.date.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for Razzmatazz(0) + 24);
  uint64_t v4 = type metadata accessor for Date();
  long long v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t Razzmatazz.performingArtist.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for Razzmatazz(0) + 28);
  uint64_t v4 = type metadata accessor for Artist();
  long long v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for Razzmatazz(uint64_t a1)
{
  return type metadata accessor for Notice.Variant(a1, (uint64_t *)&type metadata singleton initialization cache for Razzmatazz);
}

uint64_t Razzmatazz.Venue.Address.hash(into:)()
{
  if (*(void *)(v0 + 8))
  {
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 40))
  {
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  swift_bridgeObjectRetain();
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance Razzmatazz.Venue.Address.CodingKeys()
{
  uint64_t result = 0x73736572646461;
  switch(*v0)
  {
    case 1:
      uint64_t result = 2037672291;
      break;
    case 2:
      uint64_t result = 0x6E6F69676572;
      break;
    case 3:
      uint64_t result = 0x7972746E756F63;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance Razzmatazz.Venue.Address.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = specialized Razzmatazz.Venue.Address.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance Razzmatazz.Venue.Address.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type Razzmatazz.Venue.Address.CodingKeys and conformance Razzmatazz.Venue.Address.CodingKeys();

  return CodingKey.description.getter(a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance Razzmatazz.Venue.Address.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type Razzmatazz.Venue.Address.CodingKeys and conformance Razzmatazz.Venue.Address.CodingKeys();

  return CodingKey.debugDescription.getter(a1, v2);
}

Swift::Int Razzmatazz.Venue.hashValue.getter()
{
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  long long v1 = *(_OWORD *)(v0 + 48);
  v5[0] = *(_OWORD *)(v0 + 32);
  v5[1] = v1;
  long long v2 = *(_OWORD *)(v0 + 80);
  v5[2] = *(_OWORD *)(v0 + 64);
  v5[3] = v2;
  outlined retain of Razzmatazz.Venue.Address((uint64_t)v5);
  Razzmatazz.Venue.Address.hash(into:)();
  outlined release of Razzmatazz.Venue.Address((uint64_t)v5);
  id v3 = *(id *)(v0 + 96);
  NSObject.hash(into:)();

  type metadata accessor for Razzmatazz.Venue(0);
  type metadata accessor for TimeZone();
  lazy protocol witness table accessor for type Date and conformance Date(&lazy protocol witness table cache variable for type TimeZone and conformance TimeZone, (void (*)(uint64_t))&type metadata accessor for TimeZone);
  dispatch thunk of Hashable.hash(into:)();
  return Hasher._finalize()();
}

double protocol witness for Decodable.init(from:) in conformance Razzmatazz.Venue.Address@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  specialized Razzmatazz.Venue.Address.init(from:)(a1, (uint64_t *)v7);
  if (!v2)
  {
    long long v5 = v7[1];
    *a2 = v7[0];
    a2[1] = v5;
    double result = *(double *)&v8;
    long long v6 = v9;
    a2[2] = v8;
    a2[3] = v6;
  }
  return result;
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance Razzmatazz.Venue.Address()
{
  return Hasher._finalize()();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance Razzmatazz.Venue.Address()
{
  return Hasher._finalize()();
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance Razzmatazz.Venue.Address(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  long long v3 = a1[3];
  _OWORD v7[2] = a1[2];
  v7[3] = v3;
  long long v4 = a2[1];
  v8[0] = *a2;
  v8[1] = v4;
  long long v5 = a2[3];
  _OWORD v8[2] = a2[2];
  void v8[3] = v5;
  return specialized static Razzmatazz.Venue.Address.__derived_struct_equals(_:_:)(v7, v8) & 1;
}

uint64_t protocol witness for Hashable.hash(into:) in conformance Razzmatazz.Venue()
{
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  long long v1 = *(_OWORD *)(v0 + 48);
  v5[0] = *(_OWORD *)(v0 + 32);
  v5[1] = v1;
  long long v2 = *(_OWORD *)(v0 + 80);
  v5[2] = *(_OWORD *)(v0 + 64);
  v5[3] = v2;
  outlined retain of Razzmatazz.Venue.Address((uint64_t)v5);
  Razzmatazz.Venue.Address.hash(into:)();
  outlined release of Razzmatazz.Venue.Address((uint64_t)v5);
  id v3 = *(id *)(v0 + 96);
  NSObject.hash(into:)();

  type metadata accessor for TimeZone();
  lazy protocol witness table accessor for type Date and conformance Date(&lazy protocol witness table cache variable for type TimeZone and conformance TimeZone, (void (*)(uint64_t))&type metadata accessor for TimeZone);
  return dispatch thunk of Hashable.hash(into:)();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance Razzmatazz.Venue()
{
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  long long v1 = *(_OWORD *)(v0 + 48);
  v5[0] = *(_OWORD *)(v0 + 32);
  v5[1] = v1;
  long long v2 = *(_OWORD *)(v0 + 80);
  v5[2] = *(_OWORD *)(v0 + 64);
  v5[3] = v2;
  outlined retain of Razzmatazz.Venue.Address((uint64_t)v5);
  Razzmatazz.Venue.Address.hash(into:)();
  outlined release of Razzmatazz.Venue.Address((uint64_t)v5);
  id v3 = *(id *)(v0 + 96);
  NSObject.hash(into:)();

  type metadata accessor for TimeZone();
  lazy protocol witness table accessor for type Date and conformance Date(&lazy protocol witness table cache variable for type TimeZone and conformance TimeZone, (void (*)(uint64_t))&type metadata accessor for TimeZone);
  dispatch thunk of Hashable.hash(into:)();
  return Hasher._finalize()();
}

uint64_t Razzmatazz.hash(into:)()
{
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  uint64_t v1 = type metadata accessor for Razzmatazz(0);
  type metadata accessor for Date();
  lazy protocol witness table accessor for type Date and conformance Date(&lazy protocol witness table cache variable for type Date and conformance Date, (void (*)(uint64_t))&type metadata accessor for Date);
  dispatch thunk of Hashable.hash(into:)();
  type metadata accessor for Artist();
  lazy protocol witness table accessor for type Date and conformance Date(&_s8MusicKit6ArtistVACSHAAWL_0, (void (*)(uint64_t))&type metadata accessor for Artist);
  dispatch thunk of Hashable.hash(into:)();
  uint64_t v2 = v0 + *(int *)(v1 + 32);
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  long long v3 = *(_OWORD *)(v2 + 48);
  v7[0] = *(_OWORD *)(v2 + 32);
  v7[1] = v3;
  long long v4 = *(_OWORD *)(v2 + 80);
  _OWORD v7[2] = *(_OWORD *)(v2 + 64);
  v7[3] = v4;
  outlined retain of Razzmatazz.Venue.Address((uint64_t)v7);
  Razzmatazz.Venue.Address.hash(into:)();
  outlined release of Razzmatazz.Venue.Address((uint64_t)v7);
  id v5 = *(id *)(v2 + 96);
  NSObject.hash(into:)();

  type metadata accessor for Razzmatazz.Venue(0);
  type metadata accessor for TimeZone();
  lazy protocol witness table accessor for type Date and conformance Date(&lazy protocol witness table cache variable for type TimeZone and conformance TimeZone, (void (*)(uint64_t))&type metadata accessor for TimeZone);
  return dispatch thunk of Hashable.hash(into:)();
}

Swift::Int Razzmatazz.hashValue.getter()
{
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  uint64_t v1 = type metadata accessor for Razzmatazz(0);
  type metadata accessor for Date();
  lazy protocol witness table accessor for type Date and conformance Date(&lazy protocol witness table cache variable for type Date and conformance Date, (void (*)(uint64_t))&type metadata accessor for Date);
  dispatch thunk of Hashable.hash(into:)();
  type metadata accessor for Artist();
  lazy protocol witness table accessor for type Date and conformance Date(&_s8MusicKit6ArtistVACSHAAWL_0, (void (*)(uint64_t))&type metadata accessor for Artist);
  dispatch thunk of Hashable.hash(into:)();
  uint64_t v2 = v0 + *(int *)(v1 + 32);
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  long long v3 = *(_OWORD *)(v2 + 48);
  v7[0] = *(_OWORD *)(v2 + 32);
  v7[1] = v3;
  long long v4 = *(_OWORD *)(v2 + 80);
  _OWORD v7[2] = *(_OWORD *)(v2 + 64);
  v7[3] = v4;
  outlined retain of Razzmatazz.Venue.Address((uint64_t)v7);
  Razzmatazz.Venue.Address.hash(into:)();
  outlined release of Razzmatazz.Venue.Address((uint64_t)v7);
  id v5 = *(id *)(v2 + 96);
  NSObject.hash(into:)();

  type metadata accessor for Razzmatazz.Venue(0);
  type metadata accessor for TimeZone();
  lazy protocol witness table accessor for type Date and conformance Date(&lazy protocol witness table cache variable for type TimeZone and conformance TimeZone, (void (*)(uint64_t))&type metadata accessor for TimeZone);
  dispatch thunk of Hashable.hash(into:)();
  return Hasher._finalize()();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance Razzmatazz()
{
  return Hasher._finalize()();
}

char *_sSlsE5split9maxSplits25omittingEmptySubsequences14whereSeparatorSay11SubSequenceQzGSi_S2b7ElementQzKXEtKFSS_Tg5_0(uint64_t a1, char a2, uint64_t (*a3)(void *), uint64_t a4, uint64_t a5, unint64_t a6)
{
  void v46[3] = a4;
  if (a1 < 0)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  uint64_t v11 = a5;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = _swiftEmptyArrayStorage;
  uint64_t v43 = swift_allocObject();
  *(void *)(v43 + 16) = 15;
  uint64_t v15 = HIBYTE(a6) & 0xF;
  if (!a1 || ((a6 & 0x2000000000000000) != 0 ? (uint64_t v16 = HIBYTE(a6) & 0xF) : (uint64_t v16 = v11 & 0xFFFFFFFFFFFFLL), !v16))
  {
    if ((a6 & 0x2000000000000000) == 0) {
      uint64_t v15 = v11 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v30 = 7;
    if (((a6 >> 60) & ((v11 & 0x800000000000000) == 0)) != 0) {
      uint64_t v30 = 11;
    }
    _sSlsE5split9maxSplits25omittingEmptySubsequences14whereSeparatorSay11SubSequenceQzGSi_S2b7ElementQzKXEtKF17appendSubsequenceL_3endSb5IndexQz_tSlRzlFSS_Tg5_0(v30 | (v15 << 16), v43, a2 & 1, v14);
    swift_bridgeObjectRelease();
    New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFSs_Tg5_0 = *(char **)(v14 + 16);
    swift_bridgeObjectRetain();
    swift_release();
    goto LABEL_38;
  }
  uint64_t v38 = a1;
  uint64_t v39 = v14;
  unint64_t v44 = 4 * v16;
  New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFSs_Tg5_0 = (char *)_swiftEmptyArrayStorage;
  unint64_t v9 = 15;
  unint64_t v8 = 15;
  unint64_t v17 = 15;
  while (1)
  {
    v46[0] = String.subscript.getter();
    v46[1] = v18;
    uint64_t v19 = a3(v46);
    if (v7)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFSs_Tg5_0;
    }
    uint64_t v6 = v19;
    swift_bridgeObjectRelease();
    if (v6) {
      break;
    }
    unint64_t v9 = String.index(after:)();
LABEL_9:
    if (v44 == v9 >> 14) {
      goto LABEL_29;
    }
  }
  if (v8 >> 14 == v9 >> 14 && (a2 & 1) != 0)
  {
    unint64_t v9 = String.index(after:)();
    *(void *)(v43 + 16) = v9;
    unint64_t v8 = v9;
    unint64_t v17 = v9;
    goto LABEL_9;
  }
  if (v9 >> 14 < v8 >> 14)
  {
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v20 = String.subscript.getter();
  uint64_t v40 = v21;
  uint64_t v41 = v20;
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFSs_Tg5_0 = _ss12_ArrayBufferV20_consumeAndCreateNew14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFSs_Tg5_0(0, *((void *)New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFSs_Tg5_0+ 2)+ 1, 1, New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFSs_Tg5_0);
  }
  unint64_t v27 = *((void *)New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFSs_Tg5_0 + 2);
  unint64_t v26 = *((void *)New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFSs_Tg5_0 + 3);
  uint64_t v6 = v27 + 1;
  if (v27 >= v26 >> 1) {
    New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFSs_Tg5_0 = _ss12_ArrayBufferV20_consumeAndCreateNew14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFSs_Tg5_0((char *)(v26 > 1), v27 + 1, 1, New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFSs_Tg5_0);
  }
  *((void *)New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFSs_Tg5_0 + 2) = v6;
  unint64_t v28 = &New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFSs_Tg5_0[32 * v27];
  *((void *)v28 + 4) = v41;
  *((void *)v28 + 5) = v23;
  *((void *)v28 + 6) = v25;
  *((void *)v28 + 7) = v40;
  *(void *)(v39 + 16) = New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFSs_Tg5_0;
  uint64_t v29 = String.index(after:)();
  unint64_t v9 = v29;
  *(void *)(v43 + 16) = v29;
  if (*((void *)New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFSs_Tg5_0 + 2) != v38)
  {
    unint64_t v8 = v29;
    unint64_t v17 = v29;
    goto LABEL_9;
  }
  unint64_t v17 = v29;
  unint64_t v8 = v29;
LABEL_29:
  if (v44 == v8 >> 14 && (a2 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_37;
  }
  if (v44 >= v17 >> 14)
  {
    uint64_t v6 = String.subscript.getter();
    unint64_t v8 = v31;
    unint64_t v9 = v32;
    uint64_t v11 = v33;
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      goto LABEL_43;
    }
    goto LABEL_34;
  }
LABEL_42:
  __break(1u);
LABEL_43:
  New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFSs_Tg5_0 = _ss12_ArrayBufferV20_consumeAndCreateNew14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFSs_Tg5_0(0, *((void *)New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFSs_Tg5_0+ 2)+ 1, 1, New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFSs_Tg5_0);
LABEL_34:
  unint64_t v35 = *((void *)New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFSs_Tg5_0 + 2);
  unint64_t v34 = *((void *)New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFSs_Tg5_0 + 3);
  if (v35 >= v34 >> 1) {
    New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFSs_Tg5_0 = _ss12_ArrayBufferV20_consumeAndCreateNew14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFSs_Tg5_0((char *)(v34 > 1), v35 + 1, 1, New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFSs_Tg5_0);
  }
  *((void *)New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFSs_Tg5_0 + 2) = v35 + 1;
  unint64_t v36 = &New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFSs_Tg5_0[32 * v35];
  *((void *)v36 + 4) = v6;
  *((void *)v36 + 5) = v8;
  *((void *)v36 + 6) = v9;
  *((void *)v36 + 7) = v11;
  *(void *)(v39 + 16) = New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFSs_Tg5_0;
LABEL_37:
  swift_bridgeObjectRetain();
  swift_release();
LABEL_38:
  swift_release();
  return New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFSs_Tg5_0;
}

uint64_t _sSlsE5split9maxSplits25omittingEmptySubsequences14whereSeparatorSay11SubSequenceQzGSi_S2b7ElementQzKXEtKF17appendSubsequenceL_3endSb5IndexQz_tSlRzlFSS_Tg5_0(unint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  unint64_t v10 = *(void *)(a2 + 16) >> 14;
  int v11 = (v10 == a1 >> 14) & a3;
  if (v11 == 1) {
    return v11 ^ 1u;
  }
  if (a1 >> 14 < v10)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v4 = a4;
  uint64_t v5 = String.subscript.getter();
  uint64_t v6 = v12;
  uint64_t v7 = v13;
  uint64_t v8 = v14;
  New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFSs_Tg5_0 = *(char **)(v4 + 16);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v4 + 16) = New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFSs_Tg5_0;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_9:
    New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFSs_Tg5_0 = _ss12_ArrayBufferV20_consumeAndCreateNew14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFSs_Tg5_0(0, *((void *)New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFSs_Tg5_0+ 2)+ 1, 1, New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFSs_Tg5_0);
    *(void *)(v4 + 16) = New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFSs_Tg5_0;
  }
  unint64_t v17 = *((void *)New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFSs_Tg5_0 + 2);
  unint64_t v16 = *((void *)New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFSs_Tg5_0 + 3);
  if (v17 >= v16 >> 1)
  {
    New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFSs_Tg5_0 = _ss12_ArrayBufferV20_consumeAndCreateNew14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFSs_Tg5_0((char *)(v16 > 1), v17 + 1, 1, New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFSs_Tg5_0);
    *(void *)(v4 + 16) = New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFSs_Tg5_0;
  }
  *((void *)New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFSs_Tg5_0 + 2) = v17 + 1;
  uint64_t v18 = &New14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtFSs_Tg5_0[32 * v17];
  *((void *)v18 + 4) = v5;
  *((void *)v18 + 5) = v6;
  *((void *)v18 + 6) = v7;
  *((void *)v18 + 7) = v8;
  return v11 ^ 1u;
}

uint64_t outlined init with copy of Razzmatazz(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Razzmatazz(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of Razzmatazz(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Razzmatazz(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t outlined retain of Razzmatazz.Venue.Address(uint64_t a1)
{
  return a1;
}

uint64_t outlined release of Razzmatazz.Venue.Address(uint64_t a1)
{
  return a1;
}

uint64_t type metadata accessor for Razzmatazz.Venue(uint64_t a1)
{
  return type metadata accessor for Notice.Variant(a1, (uint64_t *)&type metadata singleton initialization cache for Razzmatazz.Venue);
}

uint64_t specialized static Razzmatazz.Venue.Address.__derived_struct_equals(_:_:)(void *a1, void *a2)
{
  uint64_t v4 = a1[1];
  uint64_t v5 = a2[1];
  if (!v4)
  {
    if (v5) {
      return 0;
    }
    goto LABEL_10;
  }
  if (!v5) {
    return 0;
  }
  BOOL v6 = *a1 == *a2 && v4 == v5;
  if (v6 || (v7 = _stringCompareWithSmolCheck(_:_:expecting:)(), uint64_t result = 0, (v7 & 1) != 0))
  {
LABEL_10:
    if (a1[2] != a2[2] || a1[3] != a2[3])
    {
      char v10 = _stringCompareWithSmolCheck(_:_:expecting:)();
      uint64_t result = 0;
      if ((v10 & 1) == 0) {
        return result;
      }
    }
    uint64_t v11 = a1[5];
    uint64_t v12 = a2[5];
    if (v11)
    {
      if (v12)
      {
        if (a1[4] != a2[4] || v11 != v12)
        {
          char v13 = _stringCompareWithSmolCheck(_:_:expecting:)();
          uint64_t result = 0;
          if ((v13 & 1) == 0) {
            return result;
          }
        }
LABEL_24:
        if (a1[6] == a2[6] && a1[7] == a2[7]) {
          return 1;
        }
        return _stringCompareWithSmolCheck(_:_:expecting:)();
      }
    }
    else if (!v12)
    {
      goto LABEL_24;
    }
    return 0;
  }
  return result;
}

uint64_t specialized static Razzmatazz.Venue.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  BOOL v4 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (!v4 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
    return 0;
  }
  BOOL v5 = *(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24);
  if (!v5 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
    return 0;
  }
  long long v6 = *(_OWORD *)(a1 + 48);
  v12[0] = *(_OWORD *)(a1 + 32);
  v12[1] = v6;
  long long v7 = *(_OWORD *)(a1 + 80);
  v12[2] = *(_OWORD *)(a1 + 64);
  void v12[3] = v7;
  long long v8 = *(_OWORD *)(a2 + 48);
  v13[0] = *(_OWORD *)(a2 + 32);
  v13[1] = v8;
  long long v9 = *(_OWORD *)(a2 + 80);
  void v13[2] = *(_OWORD *)(a2 + 64);
  void v13[3] = v9;
  if ((specialized static Razzmatazz.Venue.Address.__derived_struct_equals(_:_:)(v12, v13) & 1) == 0) {
    return 0;
  }
  _sSo8NSObjectCMa_0();
  if ((static NSObject.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  uint64_t v10 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);

  return static TimeZone.== infix(_:_:)(a1 + v10, a2 + v10);
}

uint64_t specialized static Razzmatazz.__derived_struct_equals(_:_:)(void *a1, void *a2)
{
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (!v4 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
    return 0;
  }
  BOOL v5 = a1[2] == a2[2] && a1[3] == a2[3];
  if (!v5 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
    return 0;
  }
  uint64_t v6 = type metadata accessor for Razzmatazz(0);
  if ((static Date.== infix(_:_:)() & 1) == 0 || (static Artist.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  uint64_t v7 = *(int *)(v6 + 32);

  return specialized static Razzmatazz.Venue.__derived_struct_equals(_:_:)((uint64_t)a1 + v7, (uint64_t)a2 + v7);
}

uint64_t base witness table accessor for Equatable in Razzmatazz()
{
  return lazy protocol witness table accessor for type Date and conformance Date(&lazy protocol witness table cache variable for type Razzmatazz and conformance Razzmatazz, (void (*)(uint64_t))type metadata accessor for Razzmatazz);
}

uint64_t *initializeBufferWithCopyOfBuffer for Razzmatazz(uint64_t *a1, uint64_t *a2, int *a3)
{
  BOOL v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v32 = *a2;
    *BOOL v4 = *a2;
    BOOL v4 = (uint64_t *)(v32 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a3[6];
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = type metadata accessor for Date();
    char v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    uint64_t v14 = a3[7];
    uint64_t v15 = (char *)v4 + v14;
    unint64_t v16 = (char *)a2 + v14;
    uint64_t v17 = type metadata accessor for Artist();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    uint64_t v18 = a3[8];
    uint64_t v19 = (uint64_t *)((char *)v4 + v18);
    uint64_t v20 = (uint64_t *)((char *)a2 + v18);
    uint64_t v21 = *(uint64_t *)((char *)a2 + v18);
    uint64_t v22 = v20[1];
    void *v19 = v21;
    v19[1] = v22;
    uint64_t v23 = v20[3];
    _OWORD v19[2] = v20[2];
    v19[3] = v23;
    uint64_t v24 = v20[5];
    v19[4] = v20[4];
    v19[5] = v24;
    uint64_t v25 = v20[7];
    void v19[6] = v20[6];
    v19[7] = v25;
    uint64_t v26 = v20[9];
    void v19[8] = v20[8];
    v19[9] = v26;
    uint64_t v27 = v20[11];
    v19[10] = v20[10];
    v19[11] = v27;
    unint64_t v36 = (void *)v20[12];
    v19[12] = v36;
    uint64_t v28 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
    unint64_t v34 = (char *)v20 + v28;
    unint64_t v35 = (char *)v19 + v28;
    uint64_t v29 = type metadata accessor for TimeZone();
    uint64_t v30 = *(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v31 = v36;
    v30(v35, v34, v29);
  }
  return v4;
}

uint64_t destroy for Razzmatazz(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[6];
  uint64_t v5 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + a2[7];
  uint64_t v7 = type metadata accessor for Artist();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  uint64_t v8 = a1 + a2[8];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v9 = v8 + *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  uint64_t v10 = type metadata accessor for TimeZone();
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);

  return v11(v9, v10);
}

void *initializeWithCopy for Razzmatazz(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = a3[6];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for Date();
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  uint64_t v13 = a3[7];
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = type metadata accessor for Artist();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  uint64_t v17 = a3[8];
  uint64_t v18 = (void *)((char *)a1 + v17);
  uint64_t v19 = (void *)((char *)a2 + v17);
  uint64_t v20 = *(void *)((char *)a2 + v17);
  uint64_t v21 = v19[1];
  *uint64_t v18 = v20;
  v18[1] = v21;
  uint64_t v22 = v19[3];
  v18[2] = v19[2];
  v18[3] = v22;
  uint64_t v23 = v19[5];
  v18[4] = v19[4];
  v18[5] = v23;
  uint64_t v24 = v19[7];
  v18[6] = v19[6];
  v18[7] = v24;
  uint64_t v25 = v19[9];
  v18[8] = v19[8];
  v18[9] = v25;
  uint64_t v26 = v19[11];
  v18[10] = v19[10];
  v18[11] = v26;
  unint64_t v34 = (void *)v19[12];
  v18[12] = v34;
  uint64_t v27 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  uint64_t v32 = (char *)v19 + v27;
  uint64_t v33 = (char *)v18 + v27;
  uint64_t v28 = type metadata accessor for TimeZone();
  uint64_t v29 = *(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v30 = v34;
  v29(v33, v32, v28);
  return a1;
}

void *assignWithCopy for Razzmatazz(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[7];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = type metadata accessor for Artist();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  uint64_t v14 = a3[8];
  uint64_t v15 = (void *)((char *)a1 + v14);
  uint64_t v16 = (void *)((char *)a2 + v14);
  *uint64_t v15 = *(void *)((char *)a2 + v14);
  v15[1] = *(void *)((char *)a2 + v14 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15[2] = v16[2];
  v15[3] = v16[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  void v15[4] = v16[4];
  v15[5] = v16[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  void v15[6] = v16[6];
  v15[7] = v16[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15[8] = v16[8];
  v15[9] = v16[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15[10] = v16[10];
  v15[11] = v16[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v17 = (void *)v16[12];
  uint64_t v18 = (void *)v15[12];
  v15[12] = v17;
  id v19 = v17;

  uint64_t v20 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  uint64_t v21 = (char *)v15 + v20;
  uint64_t v22 = (char *)v16 + v20;
  uint64_t v23 = type metadata accessor for TimeZone();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 24))(v21, v22, v23);
  return a1;
}

_OWORD *initializeWithTake for Razzmatazz(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[7];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = type metadata accessor for Artist();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[8];
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  long long v18 = *((_OWORD *)v17 + 1);
  *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  *((_OWORD *)v16 + 1) = v18;
  long long v19 = *((_OWORD *)v17 + 3);
  *((_OWORD *)v16 + 2) = *((_OWORD *)v17 + 2);
  *((_OWORD *)v16 + 3) = v19;
  long long v20 = *((_OWORD *)v17 + 5);
  *((_OWORD *)v16 + 4) = *((_OWORD *)v17 + 4);
  *((_OWORD *)v16 + 5) = v20;
  *((void *)v16 + 12) = *((void *)v17 + 12);
  uint64_t v21 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  uint64_t v22 = &v16[v21];
  uint64_t v23 = &v17[v21];
  uint64_t v24 = type metadata accessor for TimeZone();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
  return a1;
}

void *assignWithTake for Razzmatazz(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a3[6];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  uint64_t v12 = a3[7];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = type metadata accessor for Artist();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  uint64_t v16 = a3[8];
  uint64_t v17 = (void *)((char *)a1 + v16);
  long long v18 = (void *)((char *)a2 + v16);
  uint64_t v19 = *(void *)((char *)a2 + v16 + 8);
  *uint64_t v17 = *(void *)((char *)a2 + v16);
  v17[1] = v19;
  swift_bridgeObjectRelease();
  uint64_t v20 = v18[3];
  v17[2] = v18[2];
  v17[3] = v20;
  swift_bridgeObjectRelease();
  uint64_t v21 = v18[5];
  void v17[4] = v18[4];
  v17[5] = v21;
  swift_bridgeObjectRelease();
  uint64_t v22 = v18[7];
  v17[6] = v18[6];
  v17[7] = v22;
  swift_bridgeObjectRelease();
  uint64_t v23 = v18[9];
  v17[8] = v18[8];
  v17[9] = v23;
  swift_bridgeObjectRelease();
  uint64_t v24 = v18[11];
  v17[10] = v18[10];
  v17[11] = v24;
  swift_bridgeObjectRelease();
  uint64_t v25 = (void *)v17[12];
  v17[12] = v18[12];

  uint64_t v26 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  uint64_t v27 = (char *)v17 + v26;
  uint64_t v28 = (char *)v18 + v26;
  uint64_t v29 = type metadata accessor for TimeZone();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 40))(v27, v28, v29);
  return a1;
}

uint64_t getEnumTagSinglePayload for Razzmatazz(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10035B610);
}

uint64_t sub_10035B610(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  uint64_t v8 = type metadata accessor for Date();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a2)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a3[6];
LABEL_9:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    return v13(a1 + v11, a2, v9);
  }
  uint64_t v12 = type metadata accessor for Artist();
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a3[7];
    goto LABEL_9;
  }
  uint64_t v14 = type metadata accessor for Razzmatazz.Venue(0);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + a3[8];

  return v15(v17, a2, v16);
}

uint64_t storeEnumTagSinglePayload for Razzmatazz(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10035B79C);
}

uint64_t sub_10035B79C(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
    return result;
  }
  uint64_t v8 = type metadata accessor for Date();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[6];
LABEL_7:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v13(v5 + v11, a2, a2, v9);
  }
  uint64_t v12 = type metadata accessor for Artist();
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[7];
    goto LABEL_7;
  }
  uint64_t v14 = type metadata accessor for Razzmatazz.Venue(0);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  uint64_t v16 = v14;
  uint64_t v17 = v5 + a4[8];

  return v15(v17, a2, a2, v16);
}

uint64_t type metadata completion function for Razzmatazz()
{
  uint64_t result = type metadata accessor for Date();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for Artist();
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for Razzmatazz.Venue(319);
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for Razzmatazz.Venue(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    uint64_t *v3 = *a2;
    unint64_t v3 = (uint64_t *)(v15 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    uint64_t v7 = a2[5];
    a1[4] = a2[4];
    a1[5] = v7;
    uint64_t v8 = a2[7];
    a1[6] = a2[6];
    a1[7] = v8;
    uint64_t v9 = a2[9];
    a1[8] = a2[8];
    a1[9] = v9;
    uint64_t v10 = a2[11];
    a1[10] = a2[10];
    a1[11] = v10;
    uint64_t v11 = (void *)a2[12];
    uint64_t v12 = *(int *)(a3 + 32);
    long long v18 = (char *)a2 + v12;
    uint64_t v19 = (char *)a1 + v12;
    a1[12] = (uint64_t)v11;
    uint64_t v13 = type metadata accessor for TimeZone();
    uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v14 = v11;
    v17(v19, v18, v13);
  }
  return v3;
}

uint64_t destroy for Razzmatazz.Venue(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v4 = a1 + *(int *)(a2 + 32);
  uint64_t v5 = type metadata accessor for TimeZone();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *initializeWithCopy for Razzmatazz.Venue(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  uint64_t v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  uint64_t v9 = a2[11];
  a1[10] = a2[10];
  a1[11] = v9;
  uint64_t v10 = (void *)a2[12];
  uint64_t v11 = *(int *)(a3 + 32);
  uint64_t v16 = (char *)a2 + v11;
  uint64_t v17 = (char *)a1 + v11;
  a1[12] = v10;
  uint64_t v12 = type metadata accessor for TimeZone();
  uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v13 = v10;
  v15(v17, v16, v12);
  return a1;
}

void *assignWithCopy for Razzmatazz.Venue(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = (void *)a2[12];
  uint64_t v7 = (void *)a1[12];
  a1[12] = v6;
  id v8 = v6;

  uint64_t v9 = *(int *)(a3 + 32);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = type metadata accessor for TimeZone();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  return a1;
}

uint64_t initializeWithTake for Razzmatazz.Venue(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  long long v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  long long v6 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v6;
  uint64_t v7 = *(int *)(a3 + 32);
  uint64_t v8 = a2 + v7;
  uint64_t v9 = a1 + v7;
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  uint64_t v10 = type metadata accessor for TimeZone();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v9, v8, v10);
  return a1;
}

void *assignWithTake for Razzmatazz.Venue(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a2[7];
  a1[6] = a2[6];
  a1[7] = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = a2[9];
  a1[8] = a2[8];
  a1[9] = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = a2[11];
  a1[10] = a2[10];
  a1[11] = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = (void *)a1[12];
  a1[12] = a2[12];

  uint64_t v13 = *(int *)(a3 + 32);
  id v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = type metadata accessor for TimeZone();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 40))(v14, v15, v16);
  return a1;
}

uint64_t getEnumTagSinglePayload for Razzmatazz.Venue(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10035C018);
}

uint64_t sub_10035C018(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for TimeZone();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 32);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for Razzmatazz.Venue(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10035C0DC);
}

uint64_t sub_10035C0DC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for TimeZone();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 32);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata completion function for Razzmatazz.Venue()
{
  uint64_t result = type metadata accessor for TimeZone();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t base witness table accessor for Equatable in Razzmatazz.Venue()
{
  return lazy protocol witness table accessor for type Date and conformance Date(&lazy protocol witness table cache variable for type Razzmatazz.Venue and conformance Razzmatazz.Venue, (void (*)(uint64_t))type metadata accessor for Razzmatazz.Venue);
}

uint64_t _sSSSgWOb_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&_sSSSgMD_1);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t _sSo8NSObjectCMa_0()
{
  unint64_t result = _sSo8NSObjectCML_1;
  if (!_sSo8NSObjectCML_1)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&_sSo8NSObjectCML_1);
  }
  return result;
}

uint64_t sub_10035C324()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_10035C35C()
{
  return swift_deallocObject();
}

ValueMetadata *type metadata accessor for Razzmatazz.Venue.Address()
{
  return &type metadata for Razzmatazz.Venue.Address;
}

unint64_t lazy protocol witness table accessor for type Razzmatazz.Venue.Address and conformance Razzmatazz.Venue.Address()
{
  unint64_t result = lazy protocol witness table cache variable for type Razzmatazz.Venue.Address and conformance Razzmatazz.Venue.Address;
  if (!lazy protocol witness table cache variable for type Razzmatazz.Venue.Address and conformance Razzmatazz.Venue.Address)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Razzmatazz.Venue.Address and conformance Razzmatazz.Venue.Address);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type Razzmatazz.Venue.Address and conformance Razzmatazz.Venue.Address;
  if (!lazy protocol witness table cache variable for type Razzmatazz.Venue.Address and conformance Razzmatazz.Venue.Address)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Razzmatazz.Venue.Address and conformance Razzmatazz.Venue.Address);
  }
  return result;
}

uint64_t specialized Razzmatazz.Venue.Address.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x73736572646461 && a2 == 0xE700000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 2037672291 && a2 == 0xE400000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E6F69676572 && a2 == 0xE600000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7972746E756F63 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t specialized Razzmatazz.Venue.Address.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<Razzmatazz.Venue.Address.CodingKeys>);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_0Tm(a1, a1[3]);
  lazy protocol witness table accessor for type Razzmatazz.Venue.Address.CodingKeys and conformance Razzmatazz.Venue.Address.CodingKeys();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  }
  char v31 = 0;
  uint64_t v9 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v11 = v10;
  uint64_t v26 = v9;
  char v30 = 1;
  swift_bridgeObjectRetain();
  uint64_t v12 = KeyedDecodingContainer.decode(_:forKey:)();
  uint64_t v27 = v13;
  uint64_t v25 = v12;
  char v29 = 2;
  swift_bridgeObjectRetain();
  uint64_t v23 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v24 = v14;
  char v28 = 3;
  swift_bridgeObjectRetain();
  uint64_t v15 = KeyedDecodingContainer.decode(_:forKey:)();
  uint64_t v17 = v16;
  long long v18 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v22 = v15;
  v18(v8, v5);
  swift_bridgeObjectRetain();
  uint64_t v19 = v27;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  swift_bridgeObjectRelease();
  uint64_t v20 = v24;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v26;
  a2[1] = v11;
  a2[2] = v25;
  a2[3] = v19;
  a2[4] = v23;
  a2[5] = v20;
  a2[6] = v22;
  a2[7] = v17;
  return result;
}

unint64_t lazy protocol witness table accessor for type Razzmatazz.Venue.Address.CodingKeys and conformance Razzmatazz.Venue.Address.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type Razzmatazz.Venue.Address.CodingKeys and conformance Razzmatazz.Venue.Address.CodingKeys;
  if (!lazy protocol witness table cache variable for type Razzmatazz.Venue.Address.CodingKeys and conformance Razzmatazz.Venue.Address.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Razzmatazz.Venue.Address.CodingKeys and conformance Razzmatazz.Venue.Address.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type Razzmatazz.Venue.Address.CodingKeys and conformance Razzmatazz.Venue.Address.CodingKeys;
  if (!lazy protocol witness table cache variable for type Razzmatazz.Venue.Address.CodingKeys and conformance Razzmatazz.Venue.Address.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Razzmatazz.Venue.Address.CodingKeys and conformance Razzmatazz.Venue.Address.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type Razzmatazz.Venue.Address.CodingKeys and conformance Razzmatazz.Venue.Address.CodingKeys;
  if (!lazy protocol witness table cache variable for type Razzmatazz.Venue.Address.CodingKeys and conformance Razzmatazz.Venue.Address.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Razzmatazz.Venue.Address.CodingKeys and conformance Razzmatazz.Venue.Address.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type Razzmatazz.Venue.Address.CodingKeys and conformance Razzmatazz.Venue.Address.CodingKeys;
  if (!lazy protocol witness table cache variable for type Razzmatazz.Venue.Address.CodingKeys and conformance Razzmatazz.Venue.Address.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Razzmatazz.Venue.Address.CodingKeys and conformance Razzmatazz.Venue.Address.CodingKeys);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for Razzmatazz.Venue.Address.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10035C9E0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

void *type metadata accessor for Razzmatazz.Venue.Address.CodingKeys()
{
  return &unk_1005451C8;
}

uint64_t specialized Sequence.compactMap<A>(_:)(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v48 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Razzmatazz?);
  __chkstk_darwin();
  uint64_t v47 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = type metadata accessor for Razzmatazz(0);
  uint64_t v6 = *(void *)(v44 - 8);
  __chkstk_darwin();
  uint64_t v39 = (uint64_t)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v37 = (uint64_t)&v37 - v8;
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (key: String, value: ShazamEvent));
  __chkstk_darwin();
  uint64_t v45 = (uint64_t)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v11 = (uint64_t *)((char *)&v37 - v10);
  uint64_t v12 = *(void *)(a3 + 64);
  uint64_t v41 = a3 + 64;
  uint64_t v13 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & v12;
  uint64_t v38 = v6;
  int64_t v42 = (unint64_t)(v13 + 63) >> 6;
  uint64_t v43 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  uint64_t v49 = a3;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v17 = 0;
  uint64_t v40 = _swiftEmptyArrayStorage;
  while (1)
  {
    if (v15)
    {
      unint64_t v18 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v19 = v18 | (v17 << 6);
      goto LABEL_19;
    }
    if (__OFADD__(v17++, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v17 >= v42) {
      goto LABEL_32;
    }
    unint64_t v21 = *(void *)(v41 + 8 * v17);
    if (!v21) {
      break;
    }
LABEL_18:
    unint64_t v15 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v17 << 6);
LABEL_19:
    uint64_t v23 = *(void *)(v49 + 56);
    uint64_t v24 = (uint64_t *)(*(void *)(v49 + 48) + 16 * v19);
    uint64_t v25 = *v24;
    uint64_t v26 = v24[1];
    uint64_t v27 = type metadata accessor for ShazamEvent(0);
    outlined init with copy of ShazamEvent(v23 + *(void *)(*(void *)(v27 - 8) + 72) * v19, (uint64_t)v11 + *(int *)(v46 + 48), type metadata accessor for ShazamEvent);
    *uint64_t v11 = v25;
    v11[1] = v26;
    uint64_t v28 = v45;
    outlined init with take of PresentationSource?((uint64_t)v11, v45, &demangling cache variable for type metadata for (key: String, value: ShazamEvent));
    swift_bridgeObjectRetain();
    uint64_t v29 = (uint64_t)v47;
    v48(v28);
    if (v3)
    {
      outlined destroy of TaskPriority?(v28, &demangling cache variable for type metadata for (key: String, value: ShazamEvent));
      unint64_t v36 = v40;
      swift_bridgeObjectRelease();
LABEL_33:
      swift_release();
      return (uint64_t)v36;
    }
    outlined destroy of TaskPriority?(v28, &demangling cache variable for type metadata for (key: String, value: ShazamEvent));
    if ((*v43)(v29, 1, v44) == 1)
    {
      uint64_t result = outlined destroy of TaskPriority?(v29, &demangling cache variable for type metadata for Razzmatazz?);
    }
    else
    {
      uint64_t v30 = v29;
      uint64_t v31 = v37;
      outlined init with take of Razzmatazz(v30, v37, type metadata accessor for Razzmatazz);
      outlined init with take of Razzmatazz(v31, v39, type metadata accessor for Razzmatazz);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v40 = (void *)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, v40[2] + 1, 1, v40);
      }
      unint64_t v33 = v40[2];
      unint64_t v32 = v40[3];
      if (v33 >= v32 >> 1) {
        uint64_t v40 = (void *)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v32 > 1, v33 + 1, 1, v40);
      }
      uint64_t v34 = v39;
      unint64_t v35 = v40;
      v40[2] = v33 + 1;
      uint64_t result = outlined init with take of Razzmatazz(v34, (uint64_t)v35+ ((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80))+ *(void *)(v38 + 72) * v33, type metadata accessor for Razzmatazz);
    }
  }
  int64_t v22 = v17 + 1;
  if (v17 + 1 >= v42) {
    goto LABEL_32;
  }
  unint64_t v21 = *(void *)(v41 + 8 * v22);
  if (v21) {
    goto LABEL_17;
  }
  int64_t v22 = v17 + 2;
  if (v17 + 2 >= v42) {
    goto LABEL_32;
  }
  unint64_t v21 = *(void *)(v41 + 8 * v22);
  if (v21) {
    goto LABEL_17;
  }
  int64_t v22 = v17 + 3;
  if (v17 + 3 >= v42) {
    goto LABEL_32;
  }
  unint64_t v21 = *(void *)(v41 + 8 * v22);
  if (v21) {
    goto LABEL_17;
  }
  int64_t v22 = v17 + 4;
  if (v17 + 4 >= v42)
  {
LABEL_32:
    unint64_t v36 = v40;
    goto LABEL_33;
  }
  unint64_t v21 = *(void *)(v41 + 8 * v22);
  if (v21)
  {
LABEL_17:
    int64_t v17 = v22;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v17 >= v42) {
      goto LABEL_32;
    }
    unint64_t v21 = *(void *)(v41 + 8 * v17);
    ++v22;
    if (v21) {
      goto LABEL_18;
    }
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t RazzmatazzController.razzmatazz.getter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

void RazzmatazzController.location.didset(uint64_t a1)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  BOOL v2 = v4[0] == *(void *)a1 && v4[1] == *(void *)(a1 + 8);
  if (!v2 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  if (v4[2] != *(void *)(a1 + 16) || v4[3] != *(void *)(a1 + 24))
  {
    char v3 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v3) {
      goto LABEL_10;
    }
LABEL_14:
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    specialized RazzmatazzController.persistedLocation.setter((uint64_t)v4);
    return;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_10:
  if (*(double *)&v4[4] != *(double *)(a1 + 32) || *(double *)&v4[5] != *(double *)(a1 + 40)) {
    goto LABEL_14;
  }
}

double RazzmatazzController.location.getter@<D0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  double result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(_OWORD *)(a1 + 32) = v6;
  return result;
}

uint64_t RazzmatazzController.init()()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<[Razzmatazz]>);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin();
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = v0 + OBJC_IVAR____TtC11MusicCoreUI20RazzmatazzController__razzmatazz;
  *(void *)&long long v15 = _swiftEmptyArrayStorage;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [Razzmatazz]);
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v2 + 32))(v5, v4, v1);
  swift_beginAccess();
  strcpy((char *)&v15, "Cupertino, CA");
  HIWORD(v15) = -4864;
  strcpy((char *)&v16, "United States");
  HIWORD(v16) = -4864;
  long long v17 = xmmword_1004A3CA0;
  Published.init(initialValue:)();
  swift_endAccess();
  specialized RazzmatazzController.persistedLocation.getter((uint64_t)v10);
  outlined init with take of PresentationSource?((uint64_t)v10, (uint64_t)v11, &demangling cache variable for type metadata for RazzmatazzController.Location?);
  if (*((void *)&v11[0] + 1))
  {
    long long v12 = v11[0];
    long long v13 = v11[1];
    long long v14 = v11[2];
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    long long v15 = v7;
    long long v16 = v8;
    long long v17 = v9;
    swift_getKeyPath();
    swift_getKeyPath();
    long long v7 = v12;
    long long v8 = v13;
    long long v9 = v14;
    swift_retain();
    static Published.subscript.setter();
    RazzmatazzController.location.didset((uint64_t)&v15);
    long long v18 = v15;
    outlined release of String?((uint64_t)&v18);
    long long v7 = v16;
    outlined release of String?((uint64_t)&v7);
  }
  return v0;
}

uint64_t closure #1 in RazzmatazzController.load(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _OWORD v5[4] = a4;
  uint64_t v5[5] = type metadata accessor for MainActor();
  v5[6] = static MainActor.shared.getter();
  long long v9 = (uint64_t (*)(uint64_t))((char *)&async function pointer to specialized static RazzmatazzAPI.razzmatazz(for:)
                                       + async function pointer to specialized static RazzmatazzAPI.razzmatazz(for:));
  long long v7 = (void *)swift_task_alloc();
  v5[7] = v7;
  void *v7 = v5;
  v7[1] = closure #1 in RazzmatazzController.load(for:);
  return v9(a5);
}

uint64_t closure #1 in RazzmatazzController.load(for:)(uint64_t a1)
{
  *(void *)(*(void *)v1 + 64) = a1;
  swift_task_dealloc();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(closure #1 in RazzmatazzController.load(for:), v3, v2);
}

uint64_t closure #1 in RazzmatazzController.load(for:)()
{
  uint64_t v1 = v0[8];
  swift_release();
  v0[2] = v1;
  swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [Razzmatazz]);
  lazy protocol witness table accessor for type [Razzmatazz] and conformance [A]();
  _s10Foundation4DateVACSLAAWlTm_0(&_s10Foundation4DateVACSLAAWL_0, (void (*)(uint64_t))&type metadata accessor for Date);
  uint64_t v2 = Sequence.sorted<A>(by:comparator:)();
  swift_release();
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  swift_getKeyPath();
  v0[3] = v2;
  swift_retain();
  static Published.subscript.setter();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

void RazzmatazzController.Location.hash(into:)()
{
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  if ((*(void *)(v0 + 32) & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v1 = *(void *)(v0 + 32);
  }
  else {
    Swift::UInt64 v1 = 0;
  }
  Hasher._combine(_:)(v1);
  if ((*(void *)(v0 + 40) & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v2 = *(void *)(v0 + 40);
  }
  else {
    Swift::UInt64 v2 = 0;
  }
  Hasher._combine(_:)(v2);
}

uint64_t RazzmatazzController.Location.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<RazzmatazzController.Location.CodingKeys>);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin();
  long long v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_0Tm(a1, a1[3]);
  lazy protocol witness table accessor for type RazzmatazzController.Location.CodingKeys and conformance RazzmatazzController.Location.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  v8[15] = 0;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v1)
  {
    v8[14] = 1;
    KeyedEncodingContainer.encode(_:forKey:)();
    v8[13] = 2;
    KeyedEncodingContainer.encode(_:forKey:)();
    v8[12] = 3;
    KeyedEncodingContainer.encode(_:forKey:)();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance RazzmatazzController.Location.CodingKeys()
{
  uint64_t result = 0x656C746974;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x656C746974627573;
      break;
    case 2:
      uint64_t result = 0x656475746974616CLL;
      break;
    case 3:
      uint64_t result = 0x64757469676E6F6CLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance RazzmatazzController.Location.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = specialized RazzmatazzController.Location.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance RazzmatazzController.Location.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type RazzmatazzController.Location.CodingKeys and conformance RazzmatazzController.Location.CodingKeys();

  return CodingKey.description.getter(a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance RazzmatazzController.Location.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type RazzmatazzController.Location.CodingKeys and conformance RazzmatazzController.Location.CodingKeys();

  return CodingKey.debugDescription.getter(a1, v2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance RazzmatazzController.Location()
{
  return Hasher._finalize()();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance RazzmatazzController.Location()
{
  return Hasher._finalize()();
}

double protocol witness for Decodable.init(from:) in conformance RazzmatazzController.Location@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  specialized RazzmatazzController.Location.init(from:)(a1, (uint64_t *)v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    double result = *(double *)&v7;
    a2[2] = v7;
  }
  return result;
}

uint64_t protocol witness for Encodable.encode(to:) in conformance RazzmatazzController.Location(void *a1)
{
  return RazzmatazzController.Location.encode(to:)(a1);
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance RazzmatazzController.Location(_OWORD *a1, long long *a2)
{
  long long v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  long long v3 = *a2;
  long long v4 = a2[1];
  _OWORD v7[2] = a1[2];
  v8[0] = v3;
  long long v5 = a2[2];
  v8[1] = v4;
  _OWORD v8[2] = v5;
  return specialized static RazzmatazzController.Location.__derived_struct_equals(_:_:)((uint64_t)v7, (uint64_t)v8);
}

uint64_t RazzmatazzController.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC11MusicCoreUI20RazzmatazzController__razzmatazz;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<[Razzmatazz]>);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC11MusicCoreUI20RazzmatazzController__location;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<RazzmatazzController.Location>);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  return swift_deallocClassInstance();
}

uint64_t ObjC metadata update function for RazzmatazzController()
{
  return type metadata accessor for RazzmatazzController(0);
}

uint64_t type metadata accessor for RazzmatazzController(uint64_t a1)
{
  return type metadata accessor for Notice.Variant(a1, (uint64_t *)&type metadata singleton initialization cache for RazzmatazzController);
}

void type metadata completion function for RazzmatazzController()
{
  type metadata accessor for Published<[Razzmatazz]>();
  if (v0 <= 0x3F)
  {
    type metadata accessor for Published<RazzmatazzController.Location>();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void type metadata accessor for Published<[Razzmatazz]>()
{
  if (!lazy cache variable for type metadata for Published<[Razzmatazz]>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [Razzmatazz]);
    unint64_t v0 = type metadata accessor for Published();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for Published<[Razzmatazz]>);
    }
  }
}

void type metadata accessor for Published<RazzmatazzController.Location>()
{
  if (!lazy cache variable for type metadata for Published<RazzmatazzController.Location>)
  {
    unint64_t v0 = type metadata accessor for Published();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for Published<RazzmatazzController.Location>);
    }
  }
}

uint64_t initializeWithCopy for RazzmatazzController.Location(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for RazzmatazzController.Location(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  return a1;
}

uint64_t assignWithTake for RazzmatazzController.Location(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  return a1;
}

ValueMetadata *type metadata accessor for RazzmatazzController.Location()
{
  return &type metadata for RazzmatazzController.Location;
}

unint64_t lazy protocol witness table accessor for type RazzmatazzController.Location and conformance RazzmatazzController.Location()
{
  unint64_t result = lazy protocol witness table cache variable for type RazzmatazzController.Location and conformance RazzmatazzController.Location;
  if (!lazy protocol witness table cache variable for type RazzmatazzController.Location and conformance RazzmatazzController.Location)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type RazzmatazzController.Location and conformance RazzmatazzController.Location);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type RazzmatazzController.Location and conformance RazzmatazzController.Location;
  if (!lazy protocol witness table cache variable for type RazzmatazzController.Location and conformance RazzmatazzController.Location)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type RazzmatazzController.Location and conformance RazzmatazzController.Location);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type RazzmatazzController.Location and conformance RazzmatazzController.Location;
  if (!lazy protocol witness table cache variable for type RazzmatazzController.Location and conformance RazzmatazzController.Location)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type RazzmatazzController.Location and conformance RazzmatazzController.Location);
  }
  return result;
}

uint64_t closure #1 in static RazzmatazzAPI.razzmatazz(for:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, char *a4@<X8>)
{
  uint64_t v9 = type metadata accessor for Artist();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin();
  long long v12 = (char *)v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (key: String, value: ShazamEvent));
  uint64_t v14 = *(int *)(__chkstk_darwin() + 56);
  long long v15 = (void *)((char *)v25 + v14 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  outlined init with copy of ShazamEvent(a1 + v14, (uint64_t)v15, type metadata accessor for ShazamEvent);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a3, v9);
  swift_bridgeObjectRetain();
  Razzmatazz.init(from:with:for:)(v15, a2, (uint64_t)v12, a4);
  if (v4)
  {
    if (one-time initialization token for razzmatazz != -1) {
      swift_once();
    }
    uint64_t v16 = type metadata accessor for Logger();
    __swift_project_value_buffer(v16, (uint64_t)static Logger.razzmatazz);
    swift_errorRetain();
    swift_errorRetain();
    long long v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = swift_slowAlloc();
      uint64_t v26 = swift_slowAlloc();
      *(_DWORD *)uint64_t v19 = 136315138;
      v25[1] = v4;
      swift_errorRetain();
      __swift_instantiateConcreteTypeFromMangledName(&_ss5Error_pMD_1);
      uint64_t v20 = String.init<A>(describing:)();
      *(void *)(v19 + 4) = _s2os32getNullTerminatedUTF8PointerImpl_21storingStringOwnersInSVSS_SpyypGSgztF_2(v20, v21, &v26);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Could not initialize Razzmatazz with error=%s", (uint8_t *)v19, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
    uint64_t v24 = type metadata accessor for Razzmatazz(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(a4, 1, 1, v24);
  }
  else
  {
    uint64_t v22 = type metadata accessor for Razzmatazz(0);
    return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(a4, 0, 1, v22);
  }
}

uint64_t Razzmatazz.init(from:with:for:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v82 = a3;
  uint64_t v9 = type metadata accessor for TimeZone();
  uint64_t v80 = *(void *)(v9 - 8);
  __chkstk_darwin();
  uint64_t v11 = (char *)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Date();
  uint64_t v81 = *(void *)(v12 - 8);
  __chkstk_darwin();
  uint64_t v14 = (char *)&v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for ShazamEvent(0);
  uint64_t v16 = *(void **)((char *)a1 + *(int *)(v15 + 24) + 8);
  if (v16[2] && *(void *)(a2 + 16))
  {
    uint64_t v17 = v15;
    uint64_t v79 = a4;
    uint64_t v18 = v16[4];
    uint64_t v19 = v16[5];
    swift_bridgeObjectRetain();
    unint64_t v20 = specialized __RawDictionaryStorage.find<A>(_:)(v18, v19);
    if (v21)
    {
      uint64_t v22 = (uint64_t *)(*(void *)(a2 + 56) + 104 * v20);
      uint64_t v23 = *v22;
      uint64_t v78 = v12;
      uint64_t v24 = v22[1];
      uint64_t v70 = v22[2];
      uint64_t v71 = v23;
      uint64_t v74 = v22[3];
      uint64_t v75 = v24;
      uint64_t v69 = v22[4];
      uint64_t v76 = v11;
      uint64_t v58 = v22[5];
      uint64_t v25 = v22[6];
      uint64_t v65 = v5;
      uint64_t v26 = v22[7];
      uint64_t v67 = v22[8];
      uint64_t v68 = v25;
      uint64_t v60 = v22[9];
      uint64_t v66 = v22[10];
      uint64_t v77 = v9;
      uint64_t v27 = (void *)v22[12];
      uint64_t v61 = v22[11];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v59 = v27;
      swift_bridgeObjectRetain();
      uint64_t v28 = v74;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v29 = *a1;
      uint64_t v30 = a1[1];
      uint64_t v31 = (char *)a1 + *(int *)(v17 + 20);
      uint64_t v32 = *((void *)v31 + 1);
      uint64_t v72 = *(void *)v31;
      uint64_t v73 = v29;
      uint64_t v62 = v32;
      uint64_t v63 = v30;
      uint64_t v33 = type metadata accessor for ShazamEvent.Attributes(0);
      (*(void (**)(char *, char *, uint64_t))(v81 + 16))(v14, &v31[*(int *)(v33 + 20)], v78);
      uint64_t v34 = &v31[*(int *)(v33 + 24)];
      uint64_t v35 = v80;
      (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v76, v34, v77);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v64 = v14;
      uint64_t v36 = v75;
      swift_bridgeObjectRetain();
      uint64_t v37 = v28;
      swift_bridgeObjectRetain();
      uint64_t v38 = v58;
      swift_bridgeObjectRetain();
      uint64_t v39 = v26;
      swift_bridgeObjectRetain();
      uint64_t v40 = v60;
      swift_bridgeObjectRetain();
      uint64_t v41 = v61;
      swift_bridgeObjectRetain();
      uint64_t v57 = v59;
      outlined destroy of ShazamEvent((uint64_t)a1, type metadata accessor for ShazamEvent);
      uint64_t v59 = (int *)type metadata accessor for Razzmatazz(0);
      int64_t v42 = v79;
      uint64_t v43 = &v79[v59[8]];
      *(void *)uint64_t v43 = v71;
      *((void *)v43 + 1) = v36;
      *((void *)v43 + 2) = v70;
      *((void *)v43 + 3) = v37;
      *((void *)v43 + 4) = v69;
      *((void *)v43 + 5) = v38;
      *((void *)v43 + 6) = v68;
      *((void *)v43 + 7) = v39;
      *((void *)v43 + 8) = v67;
      *((void *)v43 + 9) = v40;
      *((void *)v43 + 10) = v66;
      *((void *)v43 + 11) = v41;
      uint64_t v44 = v57;
      *((void *)v43 + 12) = v57;
      uint64_t v45 = type metadata accessor for Razzmatazz.Venue(0);
      (*(void (**)(char *, char *, uint64_t))(v35 + 32))(&v43[*(int *)(v45 + 32)], v76, v77);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v47 = v63;
      uint64_t v46 = v64;
      *(void *)int64_t v42 = v73;
      *((void *)v42 + 1) = v47;
      uint64_t v48 = v62;
      *((void *)v42 + 2) = v72;
      *((void *)v42 + 3) = v48;
      uint64_t v49 = v59;
      (*(void (**)(char *, char *, uint64_t))(v81 + 32))(&v42[v59[6]], v46, v78);
      uint64_t v50 = &v42[v49[7]];
      uint64_t v51 = type metadata accessor for Artist();
      return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v51 - 8) + 32))(v50, v82, v51);
    }
    swift_bridgeObjectRelease();
  }
  type metadata accessor for RazzmatazzAPI.CustomError(0);
  _s10Foundation4DateVACSLAAWlTm_0(&lazy protocol witness table cache variable for type RazzmatazzAPI.CustomError and conformance RazzmatazzAPI.CustomError, (void (*)(uint64_t))type metadata accessor for RazzmatazzAPI.CustomError);
  swift_allocError();
  uint64_t v54 = v53;
  uint64_t v55 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (event: ShazamEvent, venues: [String : VenueElement]))
               + 48);
  outlined init with copy of ShazamEvent((uint64_t)a1, v54, type metadata accessor for ShazamEvent);
  *(void *)(v54 + v55) = a2;
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  uint64_t v56 = type metadata accessor for Artist();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v56 - 8) + 8))(v82, v56);
  return outlined destroy of ShazamEvent((uint64_t)a1, type metadata accessor for ShazamEvent);
}

uint64_t closure #1 in static RazzmatazzAPI.razzmatazz(for:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  long long v6 = (uint64_t (*)(uint64_t))((char *)&async function pointer to specialized static RazzmatazzAPI.razzmatazz(for:)
                                       + async function pointer to specialized static RazzmatazzAPI.razzmatazz(for:));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  *uint64_t v4 = v2;
  v4[1] = closure #1 in static RazzmatazzAPI.razzmatazz(for:);
  return v6(a2);
}

uint64_t closure #1 in static RazzmatazzAPI.razzmatazz(for:)(uint64_t a1)
{
  *(void *)(*(void *)v1 + 32) = a1;
  swift_task_dealloc();
  return _swift_task_switch(closure #1 in static RazzmatazzAPI.razzmatazz(for:), 0, 0);
}

uint64_t closure #1 in static RazzmatazzAPI.razzmatazz(for:)()
{
  **(void **)(v0 + 16) = *(void *)(v0 + 32);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t specialized Collection.asyncMap<A>(transform:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[5] = a2;
  v3[6] = a3;
  v3[4] = a1;
  v3[2] = a3;
  return _swift_task_switch(specialized Collection.asyncMap<A>(transform:), 0, 0);
}

uint64_t specialized Collection.asyncMap<A>(transform:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  long long v14 = *(_OWORD *)(v9 + 32);
  *(void *)(v9 + 24) = specialized Array.init(repeating:count:)(0, *(void *)(*(void *)(v9 + 48) + 16));
  uint64_t v10 = swift_task_alloc();
  *(void *)(v9 + 56) = v10;
  *(void *)(v10 + 16) = v9 + 16;
  *(_OWORD *)(v10 + 24) = v14;
  *(void *)(v10 + 40) = v9 + 24;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, [Razzmatazz]));
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v9 + 64) = v12;
  *uint64_t v12 = v9;
  v12[1] = specialized Collection.asyncMap<A>(transform:);
  return withThrowingTaskGroup<A, B>(of:returning:isolation:body:)(v12, v11, (char *)&type metadata for () + 8, 0, 0, &async function pointer to partial apply for specialized closure #1 in Collection.asyncMap<A>(transform:), v10, v11, a9);
}

uint64_t specialized Collection.asyncMap<A>(transform:)()
{
  *(void *)(*(void *)v1 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = specialized Collection.asyncMap<A>(transform:);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = specialized Collection.asyncMap<A>(transform:);
  }
  return _swift_task_switch(v2, 0, 0);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t (*v8)(void *);
  uint64_t v10;

  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v3 = 0;
    uint64_t v4 = _swiftEmptyArrayStorage;
    do
    {
      uint64_t v5 = *(void *)(v1 + 8 * v3 + 32);
      if (v5)
      {
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v4 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, v4[2] + 1, 1, v4);
        }
        uint64_t v7 = v4[2];
        long long v6 = v4[3];
        if (v7 >= v6 >> 1) {
          uint64_t v4 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((void *)(v6 > 1), v7 + 1, 1, v4);
        }
        v4[2] = v7 + 1;
        v4[v7 + 4] = v5;
      }
      ++v3;
    }
    while (v2 != v3);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    uint64_t v4 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease();
  long long v8 = *(uint64_t (**)(void *))(v0 + 8);
  return v8(v4);
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance Root.CodingKeys()
{
  return 0x656372756F736572;
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance Root.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x656372756F736572 && a2 == 0xE900000000000073)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance Root.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type Root.CodingKeys and conformance Root.CodingKeys();

  return CodingKey.description.getter(a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance Root.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type Root.CodingKeys and conformance Root.CodingKeys();

  return CodingKey.debugDescription.getter(a1, v2);
}

void *protocol witness for Decodable.init(from:) in conformance Root@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = specialized Root.init(from:)(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance Resources.CodingKeys(char *a1, char *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance Resources.CodingKeys()
{
  return Hasher._finalize()();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance Resources.CodingKeys()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance Resources.CodingKeys()
{
  return Hasher._finalize()();
}

uint64_t protocol witness for RawRepresentable.init(rawValue:) in conformance Resources.CodingKeys@<X0>(Swift::String *a1@<X0>, char *a2@<X8>)
{
  v2._rawValue = &outlined read-only object #0 of Resources.CodingKeys.init(rawValue:);
  return protocol witness for RawRepresentable.init(rawValue:) in conformance Resources.CodingKeys(v2, a1, a2);
}

void protocol witness for RawRepresentable.rawValue.getter in conformance Resources.CodingKeys(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x652D6D617A616873;
  if (*v1) {
    uint64_t v2 = 0x7365756E6576;
  }
  unint64_t v3 = 0xED000073746E6576;
  if (*v1) {
    unint64_t v3 = 0xE600000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance Resources.CodingKeys()
{
  if (*v0) {
    return 0x7365756E6576;
  }
  else {
    return 0x652D6D617A616873;
  }
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance Resources.CodingKeys@<X0>(Swift::String a1@<X1:X0>, char *a2@<X8>)
{
  v2._rawValue = &outlined read-only object #0 of Resources.CodingKeys.init(rawValue:);
  return protocol witness for CodingKey.init(stringValue:) in conformance Resources.CodingKeys(a1, v2, a2);
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance Resources.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type Resources.CodingKeys and conformance Resources.CodingKeys();

  return CodingKey.description.getter(a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance Resources.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type Resources.CodingKeys and conformance Resources.CodingKeys();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t protocol witness for Decodable.init(from:) in conformance Resources@<X0>(uint64_t *a1@<X8>)
{
  return protocol witness for Decodable.init(from:) in conformance Resources((uint64_t (*)(void))specialized Resources.init(from:), a1);
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance ShazamEvent.Attributes.CodingKeys(char *a1, char *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance ShazamEvent.Attributes.CodingKeys()
{
  return Hasher._finalize()();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ShazamEvent.Attributes.CodingKeys()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance ShazamEvent.Attributes.CodingKeys()
{
  return Hasher._finalize()();
}

uint64_t protocol witness for RawRepresentable.init(rawValue:) in conformance ShazamEvent.Attributes.CodingKeys@<X0>(Swift::String *a1@<X0>, char *a2@<X8>)
{
  v2._rawValue = &outlined read-only object #0 of ShazamEvent.Attributes.CodingKeys.init(rawValue:);
  return protocol witness for RawRepresentable.init(rawValue:) in conformance Resources.CodingKeys(v2, a1, a2);
}

void protocol witness for RawRepresentable.rawValue.getter in conformance ShazamEvent.Attributes.CodingKeys(uint64_t *a1@<X8>)
{
  if (*v1) {
    uint64_t v2 = 1701669236;
  }
  else {
    uint64_t v2 = 1701667182;
  }
  *a1 = v2;
  a1[1] = 0xE400000000000000;
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance ShazamEvent.Attributes.CodingKeys()
{
  if (*v0) {
    return 1701669236;
  }
  else {
    return 1701667182;
  }
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance ShazamEvent.Attributes.CodingKeys@<X0>(Swift::String a1@<X1:X0>, char *a2@<X8>)
{
  v2._rawValue = &outlined read-only object #0 of ShazamEvent.Attributes.CodingKeys.init(rawValue:);
  return protocol witness for CodingKey.init(stringValue:) in conformance Resources.CodingKeys(a1, v2, a2);
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance ShazamEvent.Attributes.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type ShazamEvent.Attributes.CodingKeys and conformance ShazamEvent.Attributes.CodingKeys();

  return CodingKey.description.getter(a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ShazamEvent.Attributes.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type ShazamEvent.Attributes.CodingKeys and conformance ShazamEvent.Attributes.CodingKeys();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t ShazamEvent.Attributes.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v53 = a2;
  uint64_t v52 = type metadata accessor for Date();
  uint64_t v51 = *(void *)(v52 - 8);
  __chkstk_darwin();
  uint64_t v71 = (char *)v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Date.ISO8601FormatStyle.TimeZoneSeparator();
  uint64_t v69 = *(void *)(v4 - 8);
  uint64_t v70 = v4;
  __chkstk_darwin();
  uint64_t v68 = (char *)v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Date.ISO8601FormatStyle.TimeSeparator();
  uint64_t v63 = *(void *)(v6 - 8);
  uint64_t v64 = v6;
  __chkstk_darwin();
  uint64_t v65 = (char *)v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = type metadata accessor for Date.ISO8601FormatStyle.DateTimeSeparator();
  uint64_t v58 = *(void *)(v59 - 8);
  __chkstk_darwin();
  uint64_t v61 = (char *)v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = type metadata accessor for Date.ISO8601FormatStyle.DateSeparator();
  uint64_t v55 = *(void *)(v56 - 8);
  __chkstk_darwin();
  uint64_t v57 = (char *)v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Date.ISO8601FormatStyle();
  uint64_t v66 = *(void *)(v10 - 8);
  uint64_t v67 = v10;
  __chkstk_darwin();
  uint64_t v60 = (char *)v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v62 = (char *)v45 - v12;
  __swift_instantiateConcreteTypeFromMangledName(&_s10Foundation8TimeZoneVSgMD_0);
  __chkstk_darwin();
  uint64_t v72 = (void *)((char *)v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v75 = type metadata accessor for TimeZone();
  uint64_t v73 = *(void *)(v75 - 8);
  __chkstk_darwin();
  uint64_t v54 = (char *)v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v16 = (char *)v45 - v15;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<ShazamEvent.Attributes.CodingKeys>);
  uint64_t v74 = *(void *)(v17 - 8);
  __chkstk_darwin();
  uint64_t v19 = (char *)v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for ShazamEvent.Attributes(0);
  __chkstk_darwin();
  uint64_t v22 = (void *)((char *)v45 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_0Tm(a1, a1[3]);
  lazy protocol witness table accessor for type ShazamEvent.Attributes.CodingKeys and conformance ShazamEvent.Attributes.CodingKeys();
  uint64_t v23 = (uint64_t)v76;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v23) {
    return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  }
  uint64_t v50 = v16;
  uint64_t v76 = a1;
  uint64_t v26 = v74;
  uint64_t v25 = v75;
  LOBYTE(v77) = 0;
  uint64_t v27 = v17;
  uint64_t v28 = v22;
  uint64_t *v22 = KeyedDecodingContainer.decode(_:forKey:)();
  v22[1] = v29;
  char v81 = 1;
  lazy protocol witness table accessor for type ShazamEvent.Attributes.Time and conformance ShazamEvent.Attributes.Time();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  uint64_t v48 = v19;
  uint64_t v49 = v27;
  uint64_t v46 = v77;
  uint64_t v30 = v79;
  uint64_t v47 = v78;
  uint64_t v31 = v80;
  uint64_t v32 = (uint64_t)v72;
  TimeZone.init(identifier:)();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v73 + 48))(v32, 1, v25) == 1)
  {
    outlined destroy of TaskPriority?(v32, &_s10Foundation8TimeZoneVSgMD_0);
    type metadata accessor for RazzmatazzAPI.CustomError(0);
    _s10Foundation4DateVACSLAAWlTm_0(&lazy protocol witness table cache variable for type RazzmatazzAPI.CustomError and conformance RazzmatazzAPI.CustomError, (void (*)(uint64_t))type metadata accessor for RazzmatazzAPI.CustomError);
    swift_allocError();
    *uint64_t v33 = v30;
    v33[1] = v31;
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    swift_willThrow();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v48, v49);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v76);
    return swift_bridgeObjectRelease();
  }
  else
  {
    v45[1] = v31;
    uint64_t v34 = v73;
    uint64_t v35 = v50;
    (*(void (**)(char *, uint64_t, uint64_t))(v73 + 32))(v50, v32, v25);
    uint64_t v36 = (char *)v28 + *(int *)(v20 + 24);
    uint64_t v72 = v28;
    uint64_t v37 = *(void (**)(char *, char *, uint64_t))(v34 + 16);
    v37(v36, v35, v25);
    v37(v54, v35, v25);
    (*(void (**)(char *, void, uint64_t))(v55 + 104))(v57, enum case for Date.ISO8601FormatStyle.DateSeparator.dash(_:), v56);
    (*(void (**)(char *, void, uint64_t))(v58 + 104))(v61, enum case for Date.ISO8601FormatStyle.DateTimeSeparator.standard(_:), v59);
    (*(void (**)(char *, void, uint64_t))(v63 + 104))(v65, enum case for Date.ISO8601FormatStyle.TimeSeparator.colon(_:), v64);
    (*(void (**)(char *, void, uint64_t))(v69 + 104))(v68, enum case for Date.ISO8601FormatStyle.TimeZoneSeparator.omitted(_:), v70);
    uint64_t v38 = v62;
    Date.ISO8601FormatStyle.init(dateSeparator:dateTimeSeparator:timeSeparator:timeZoneSeparator:includingFractionalSeconds:timeZone:)();
    uint64_t v77 = v46;
    uint64_t v78 = v47;
    uint64_t v40 = v66;
    uint64_t v39 = v67;
    (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v60, v38, v67);
    _s10Foundation4DateVACSLAAWlTm_0(&lazy protocol witness table cache variable for type Date.ISO8601FormatStyle and conformance Date.ISO8601FormatStyle, (void (*)(uint64_t))&type metadata accessor for Date.ISO8601FormatStyle);
    uint64_t v41 = v71;
    Date.init<A>(_:strategy:)();
    uint64_t v42 = v73;
    uint64_t v43 = v48;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v40 + 8))(v38, v39);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v35, v75);
    (*(void (**)(char *, uint64_t))(v74 + 8))(v43, v49);
    uint64_t v44 = (uint64_t)v72;
    (*(void (**)(char *, char *, uint64_t))(v51 + 32))((char *)v72 + *(int *)(v20 + 20), v41, v52);
    outlined init with copy of ShazamEvent(v44, v53, type metadata accessor for ShazamEvent.Attributes);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v76);
    return outlined destroy of ShazamEvent(v44, type metadata accessor for ShazamEvent.Attributes);
  }
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance ShazamEvent.Attributes.Time.CodingKeys()
{
  if (*v0) {
    return 0x656E6F7A656D6974;
  }
  else {
    return 0x6D69547472617473;
  }
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance ShazamEvent.Attributes.Time.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = specialized ShazamEvent.Attributes.Time.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance ShazamEvent.Attributes.Time.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type ShazamEvent.Attributes.Time.CodingKeys and conformance ShazamEvent.Attributes.Time.CodingKeys();

  return CodingKey.description.getter(a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ShazamEvent.Attributes.Time.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type ShazamEvent.Attributes.Time.CodingKeys and conformance ShazamEvent.Attributes.Time.CodingKeys();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t protocol witness for Decodable.init(from:) in conformance ShazamEvent.Attributes.Time@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = specialized ShazamEvent.Attributes.Time.init(from:)(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t protocol witness for Decodable.init(from:) in conformance ShazamEvent.Attributes@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ShazamEvent.Attributes.init(from:)(a1, a2);
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance ShazamEvent.Relationships.CodingKeys(char *a1, char *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance ShazamEvent.Relationships.CodingKeys()
{
  return Hasher._finalize()();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ShazamEvent.Relationships.CodingKeys()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance ShazamEvent.Relationships.CodingKeys()
{
  return Hasher._finalize()();
}

uint64_t protocol witness for RawRepresentable.init(rawValue:) in conformance ShazamEvent.Relationships.CodingKeys@<X0>(Swift::String *a1@<X0>, char *a2@<X8>)
{
  v2._rawValue = &outlined read-only object #0 of ShazamEvent.Relationships.CodingKeys.init(rawValue:);
  return protocol witness for RawRepresentable.init(rawValue:) in conformance Resources.CodingKeys(v2, a1, a2);
}

uint64_t protocol witness for RawRepresentable.init(rawValue:) in conformance Resources.CodingKeys@<X0>(Swift::OpaquePointer cases@<0:X3>, Swift::String *a2@<X0>, char *a3@<X8>)
{
  Swift::Int v4 = _findStringSwitchCase(cases:string:)(cases, *a2);
  uint64_t result = swift_bridgeObjectRelease();
  if (v4 == 1) {
    char v6 = 1;
  }
  else {
    char v6 = 2;
  }
  if (!v4) {
    char v6 = 0;
  }
  *a3 = v6;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance ShazamEvent.Relationships.CodingKeys(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x73747369747261;
  if (*v1) {
    uint64_t v2 = 0x7365756E6576;
  }
  unint64_t v3 = 0xE700000000000000;
  if (*v1) {
    unint64_t v3 = 0xE600000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance ShazamEvent.Relationships.CodingKeys()
{
  if (*v0) {
    return 0x7365756E6576;
  }
  else {
    return 0x73747369747261;
  }
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance ShazamEvent.Relationships.CodingKeys@<X0>(Swift::String a1@<X1:X0>, char *a2@<X8>)
{
  v2._rawValue = &outlined read-only object #0 of ShazamEvent.Relationships.CodingKeys.init(rawValue:);
  return protocol witness for CodingKey.init(stringValue:) in conformance Resources.CodingKeys(a1, v2, a2);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance Resources.CodingKeys@<X0>(Swift::String string@<0:X0, 8:X1>, Swift::OpaquePointer cases@<0:X4>, char *a3@<X8>)
{
  object = string._object;
  v4._countAndFlagsBits = string._countAndFlagsBits;
  v4._object = object;
  Swift::Int v6 = _findStringSwitchCase(cases:string:)(cases, v4);
  uint64_t result = swift_bridgeObjectRelease();
  if (v6 == 1) {
    char v8 = 1;
  }
  else {
    char v8 = 2;
  }
  if (!v6) {
    char v8 = 0;
  }
  *a3 = v8;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance ShazamEvent.Relationships.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type ShazamEvent.Relationships.CodingKeys and conformance ShazamEvent.Relationships.CodingKeys();

  return CodingKey.description.getter(a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ShazamEvent.Relationships.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type ShazamEvent.Relationships.CodingKeys and conformance ShazamEvent.Relationships.CodingKeys();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t ShazamEvent.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v23 = a2;
  type metadata accessor for ShazamEvent.Attributes(0);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<ShazamEvent.CodingKeys>);
  uint64_t v24 = *(void *)(v6 - 8);
  uint64_t v25 = v6;
  __chkstk_darwin();
  char v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ShazamEvent(0);
  __chkstk_darwin();
  uint64_t v11 = (uint64_t *)((char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = a1[3];
  uint64_t v26 = a1;
  __swift_project_boxed_opaque_existential_0Tm(a1, v12);
  lazy protocol witness table accessor for type ShazamEvent.CodingKeys and conformance ShazamEvent.CodingKeys();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v26);
  }
  uint64_t v13 = v5;
  uint64_t v22 = v9;
  uint64_t v14 = v24;
  uint64_t v15 = v25;
  LOBYTE(v27) = 0;
  uint64_t v16 = (uint64_t)v11;
  *uint64_t v11 = KeyedDecodingContainer.decode(_:forKey:)();
  v11[1] = v17;
  LOBYTE(v27) = 1;
  _s10Foundation4DateVACSLAAWlTm_0(&lazy protocol witness table cache variable for type ShazamEvent.Attributes and conformance ShazamEvent.Attributes, (void (*)(uint64_t))type metadata accessor for ShazamEvent.Attributes);
  uint64_t v18 = (uint64_t)v13;
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  uint64_t v19 = v22;
  outlined init with take of Razzmatazz(v18, v16 + *(int *)(v22 + 20), type metadata accessor for ShazamEvent.Attributes);
  char v28 = 2;
  lazy protocol witness table accessor for type ShazamEvent.Relationships and conformance ShazamEvent.Relationships();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v15);
  *(_OWORD *)(v16 + *(int *)(v19 + 24)) = v27;
  outlined init with copy of ShazamEvent(v16, v23, type metadata accessor for ShazamEvent);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v26);
  return outlined destroy of ShazamEvent(v16, type metadata accessor for ShazamEvent);
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance ShazamEvent.Relationships.Data.ID.CodingKeys()
{
  return 25705;
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance ShazamEvent.Relationships.Data.ID.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 25705 && a2 == 0xE200000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance ShazamEvent.Relationships.Data.ID.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type ShazamEvent.Relationships.Data.ID.CodingKeys and conformance ShazamEvent.Relationships.Data.ID.CodingKeys();

  return CodingKey.description.getter(a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ShazamEvent.Relationships.Data.ID.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type ShazamEvent.Relationships.Data.ID.CodingKeys and conformance ShazamEvent.Relationships.Data.ID.CodingKeys();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t protocol witness for Decodable.init(from:) in conformance ShazamEvent.Relationships.Data.ID@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<ShazamEvent.Relationships.Data.ID.CodingKeys>);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  char v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_0Tm(a1, a1[3]);
  lazy protocol witness table accessor for type ShazamEvent.Relationships.Data.ID.CodingKeys and conformance ShazamEvent.Relationships.Data.ID.CodingKeys();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  }
  uint64_t v9 = KeyedDecodingContainer.decode(_:forKey:)();
  uint64_t v11 = v10;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t result = __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  *a2 = v9;
  a2[1] = v11;
  return result;
}

uint64_t protocol witness for Encodable.encode(to:) in conformance ShazamEvent.Relationships.Data.ID(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<ShazamEvent.Relationships.Data.ID.CodingKeys>);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_0Tm(a1, a1[3]);
  lazy protocol witness table accessor for type ShazamEvent.Relationships.Data.ID.CodingKeys and conformance ShazamEvent.Relationships.Data.ID.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  KeyedEncodingContainer.encode(_:forKey:)();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance ShazamEvent.Relationships.Data.CodingKeys()
{
  return 1635017060;
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance ShazamEvent.Relationships.Data.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 1635017060 && a2 == 0xE400000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance ShazamEvent.Relationships.Data.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type ShazamEvent.Relationships.Data.CodingKeys and conformance ShazamEvent.Relationships.Data.CodingKeys();

  return CodingKey.description.getter(a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ShazamEvent.Relationships.Data.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type ShazamEvent.Relationships.Data.CodingKeys and conformance ShazamEvent.Relationships.Data.CodingKeys();

  return CodingKey.debugDescription.getter(a1, v2);
}

void *protocol witness for Decodable.init(from:) in conformance ShazamEvent.Relationships.Data@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = specialized ShazamEvent.Relationships.Data.init(from:)(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t protocol witness for Decodable.init(from:) in conformance ShazamEvent.Relationships@<X0>(uint64_t *a1@<X8>)
{
  return protocol witness for Decodable.init(from:) in conformance Resources((uint64_t (*)(void))specialized ShazamEvent.Relationships.init(from:), a1);
}

uint64_t protocol witness for Decodable.init(from:) in conformance Resources@<X0>(uint64_t (*a1)(void)@<X3>, uint64_t *a2@<X8>)
{
  uint64_t result = a1();
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance ShazamEvent.CodingKeys()
{
  uint64_t v1 = 0x7475626972747461;
  if (*v0 != 1) {
    uint64_t v1 = 0x6E6F6974616C6572;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 25705;
  }
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance ShazamEvent.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = specialized ShazamEvent.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance ShazamEvent.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type ShazamEvent.CodingKeys and conformance ShazamEvent.CodingKeys();

  return CodingKey.description.getter(a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ShazamEvent.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type ShazamEvent.CodingKeys and conformance ShazamEvent.CodingKeys();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t protocol witness for Decodable.init(from:) in conformance ShazamEvent@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ShazamEvent.init(from:)(a1, a2);
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance VenueElement.Attributes.CodingKeys(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance VenueElement.Attributes.CodingKeys()
{
  return Hasher._finalize()();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance VenueElement.Attributes.CodingKeys()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance VenueElement.Attributes.CodingKeys()
{
  return Hasher._finalize()();
}

unint64_t protocol witness for RawRepresentable.init(rawValue:) in conformance VenueElement.Attributes.CodingKeys@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = specialized VenueElement.Attributes.CodingKeys.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance VenueElement.Attributes.CodingKeys(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE400000000000000;
  unint64_t v4 = 0xE700000000000000;
  uint64_t v5 = 0x73736572646461;
  if (v2 != 1)
  {
    uint64_t v5 = 7300455;
    unint64_t v4 = 0xE300000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 1701667182;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance VenueElement.Attributes.CodingKeys()
{
  uint64_t v1 = 0x73736572646461;
  if (*v0 != 1) {
    uint64_t v1 = 7300455;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 1701667182;
  }
}

unint64_t protocol witness for CodingKey.init(stringValue:) in conformance VenueElement.Attributes.CodingKeys@<X0>(Swift::String a1@<X1:X0>, unsigned char *a2@<X8>)
{
  unint64_t result = specialized VenueElement.Attributes.CodingKeys.init(rawValue:)(a1);
  *a2 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance VenueElement.Attributes.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type VenueElement.Attributes.CodingKeys and conformance VenueElement.Attributes.CodingKeys();

  return CodingKey.description.getter(a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance VenueElement.Attributes.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type VenueElement.Attributes.CodingKeys and conformance VenueElement.Attributes.CodingKeys();

  return CodingKey.debugDescription.getter(a1, v2);
}

unint64_t protocol witness for CodingKey.stringValue.getter in conformance VenueElement.Attributes.StructuredAddress.CodingKeys()
{
  return 0xD000000000000011;
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance VenueElement.Attributes.StructuredAddress.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = specialized VenueElement.Attributes.StructuredAddress.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance VenueElement.Attributes.StructuredAddress.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type VenueElement.Attributes.StructuredAddress.CodingKeys and conformance VenueElement.Attributes.StructuredAddress.CodingKeys();

  return CodingKey.description.getter(a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance VenueElement.Attributes.StructuredAddress.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type VenueElement.Attributes.StructuredAddress.CodingKeys and conformance VenueElement.Attributes.StructuredAddress.CodingKeys();

  return CodingKey.debugDescription.getter(a1, v2);
}

double protocol witness for Decodable.init(from:) in conformance VenueElement.Attributes.StructuredAddress@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  specialized VenueElement.Attributes.StructuredAddress.init(from:)(a1, (uint64_t)v7);
  if (!v2)
  {
    long long v5 = v7[1];
    *a2 = v7[0];
    a2[1] = v5;
    double result = *(double *)&v8;
    long long v6 = v9;
    a2[2] = v8;
    a2[3] = v6;
  }
  return result;
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance VenueElement.Attributes.Geo.CodingKeys()
{
  if (*v0) {
    return 6778476;
  }
  else {
    return 7627116;
  }
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance VenueElement.Attributes.Geo.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = specialized VenueElement.Attributes.Geo.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance VenueElement.Attributes.Geo.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type VenueElement.Attributes.Geo.CodingKeys and conformance VenueElement.Attributes.Geo.CodingKeys();

  return CodingKey.description.getter(a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance VenueElement.Attributes.Geo.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type VenueElement.Attributes.Geo.CodingKeys and conformance VenueElement.Attributes.Geo.CodingKeys();

  return CodingKey.debugDescription.getter(a1, v2);
}

void protocol witness for Decodable.init(from:) in conformance VenueElement.Attributes.Geo(void *a1@<X0>, uint64_t a2@<X8>)
{
  double v4 = specialized VenueElement.Attributes.Geo.init(from:)(a1);
  if (!v2)
  {
    *(double *)a2 = v4;
    *(void *)(a2 + 8) = v5;
  }
}

double protocol witness for Decodable.init(from:) in conformance VenueElement.Attributes@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  specialized VenueElement.Attributes.init(from:)(a1, (uint64_t *)v7);
  if (!v2)
  {
    long long v5 = v7[3];
    *(_OWORD *)(a2 + 32) = v7[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(_OWORD *)(a2 + 64) = v7[4];
    *(void *)(a2 + 80) = v8;
    double result = *(double *)v7;
    long long v6 = v7[1];
    *(_OWORD *)a2 = v7[0];
    *(_OWORD *)(a2 + 16) = v6;
  }
  return result;
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance VenueElement.CodingKeys()
{
  if (*v0) {
    return 0x7475626972747461;
  }
  else {
    return 25705;
  }
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance VenueElement.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = specialized VenueElement.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance VenueElement.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type VenueElement.CodingKeys and conformance VenueElement.CodingKeys();

  return CodingKey.description.getter(a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance VenueElement.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type VenueElement.CodingKeys and conformance VenueElement.CodingKeys();

  return CodingKey.debugDescription.getter(a1, v2);
}

__n128 protocol witness for Decodable.init(from:) in conformance VenueElement@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  specialized VenueElement.init(from:)(a1, (uint64_t *)v7);
  if (!v2)
  {
    long long v5 = v7[5];
    *(_OWORD *)(a2 + 64) = v7[4];
    *(_OWORD *)(a2 + 80) = v5;
    *(void *)(a2 + 96) = v8;
    long long v6 = v7[1];
    *(_OWORD *)a2 = v7[0];
    *(_OWORD *)(a2 + 16) = v6;
    __n128 result = (__n128)v7[3];
    *(_OWORD *)(a2 + 32) = v7[2];
    *(__n128 *)(a2 + 48) = result;
  }
  return result;
}

uint64_t one-time initialization function for razzmatazz()
{
  uint64_t v0 = type metadata accessor for Logger();
  __swift_allocate_value_buffer(v0, static Logger.razzmatazz);
  __swift_project_value_buffer(v0, (uint64_t)static Logger.razzmatazz);
  return static Logger.music(_:)();
}

uint64_t key path getter for RazzmatazzController.razzmatazz : RazzmatazzController@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t key path setter for RazzmatazzController.razzmatazz : RazzmatazzController()
{
  return static Published.subscript.setter();
}

uint64_t specialized implicit closure #1 in default argument 1 of Sequence.sorted<A>(by:comparator:)()
{
  return dispatch thunk of static Comparable.< infix(_:_:)() & 1;
}

void *specialized Array.init(repeating:count:)(void *result, uint64_t a2)
{
  if (a2 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v3 = result;
    if (a2)
    {
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [Razzmatazz]?);
      double v4 = (void *)static Array._allocateBufferUninitialized(minimumCapacity:)();
      long long v5 = v4;
      v4[2] = a2;
      v4[4] = v3;
      if (a2 != 1)
      {
        v4[5] = v3;
        uint64_t v6 = a2 - 2;
        if (v6)
        {
          uint64_t v7 = v4 + 6;
          do
          {
            *v7++ = v3;
            swift_bridgeObjectRetain();
            --v6;
          }
          while (v6);
        }
        swift_bridgeObjectRetain();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      return _swiftEmptyArrayStorage;
    }
    return v5;
  }
  return result;
}

uint64_t specialized closure #1 in Collection.asyncMap<A>(transform:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[15] = a5;
  v6[16] = a6;
  v6[13] = a3;
  v6[14] = a4;
  v6[12] = a2;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ThrowingTaskGroup<(Int, [Razzmatazz]), Error>.Iterator);
  v6[17] = v7;
  v6[18] = *(void *)(v7 - 8);
  v6[19] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for Artist();
  v6[20] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  v6[21] = v9;
  v6[22] = *(void *)(v9 + 64);
  v6[23] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&_sScPSgMD_2);
  unsigned char v6[24] = swift_task_alloc();
  v6[25] = swift_task_alloc();
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (offset: Int, element: Artist));
  v6[26] = v10;
  v6[27] = *(void *)(v10 - 8);
  v6[28] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (offset: Int, element: Artist)?);
  v6[29] = swift_task_alloc();
  v6[30] = swift_task_alloc();
  return _swift_task_switch(specialized closure #1 in Collection.asyncMap<A>(transform:), 0, 0);
}

uint64_t specialized closure #1 in Collection.asyncMap<A>(transform:)()
{
  uint64_t v2 = *(void *)(v1 + 216);
  uint64_t v40 = *(void *)(v1 + 208);
  unint64_t v3 = *(void *)(*(void *)(v1 + 104) + 16);
  uint64_t v39 = *(void *)(v1 + 168);
  uint64_t v38 = (void (**)(void, void, void, void))(v2 + 56);
  uint64_t v37 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
  swift_bridgeObjectRetain();
  unint64_t v4 = 0;
  unint64_t v36 = v3;
  while (1)
  {
    if (v4 == v3)
    {
      (*v38)(*(void *)(v1 + 232), 1, 1, *(void *)(v1 + 208));
      unint64_t v5 = v3;
    }
    else
    {
      if (v4 >= v3)
      {
        __break(1u);
        goto LABEL_23;
      }
      uint64_t v6 = *(unint64_t **)(v1 + 232);
      uint64_t v7 = *(void *)(v1 + 208);
      uint64_t v8 = *(void *)(v1 + 160);
      unint64_t v5 = v4 + 1;
      uint64_t v9 = *(void *)(v1 + 224) + *(int *)(v40 + 48);
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v39 + 16))(v9, *(void *)(v1 + 104)+ ((*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80))+ *(void *)(v39 + 72) * v4, v8);
      uint64_t v10 = (char *)v6 + *(int *)(v40 + 48);
      *uint64_t v6 = v4;
      (*(void (**)(char *, uint64_t, uint64_t))(v39 + 32))(v10, v9, v8);
      (*v38)(v6, 0, 1, v7);
    }
    uint64_t v11 = *(void *)(v1 + 240);
    uint64_t v12 = *(void *)(v1 + 208);
    outlined init with take of PresentationSource?(*(void *)(v1 + 232), v11, &demangling cache variable for type metadata for (offset: Int, element: Artist)?);
    if ((*v37)(v11, 1, v12) == 1) {
      break;
    }
    unint64_t v46 = v5;
    uint64_t v13 = *(uint64_t **)(v1 + 240);
    uint64_t v14 = *(void *)(v1 + 200);
    uint64_t v41 = v14;
    uint64_t v45 = *(void *)(v1 + 192);
    uint64_t v15 = *(char **)(v1 + 184);
    uint64_t v16 = *(void *)(v1 + 160);
    uint64_t v44 = *(void *)(v1 + 120);
    uint64_t v42 = *v13;
    uint64_t v43 = *(void *)(v1 + 112);
    uint64_t v17 = (char *)v13 + *(int *)(v40 + 48);
    uint64_t v18 = type metadata accessor for TaskPriority();
    uint64_t v19 = *(void *)(v18 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 56))(v14, 1, 1, v18);
    uint64_t v20 = *(void (**)(uint64_t, char *, uint64_t))(v39 + 32);
    v20((uint64_t)v15, v17, v16);
    unint64_t v21 = (*(unsigned __int8 *)(v39 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
    uint64_t v22 = (void *)swift_allocObject();
    v22[2] = 0;
    uint64_t v22[3] = 0;
    v22[4] = v42;
    v22[5] = v43;
    v22[6] = v44;
    v20((uint64_t)v22 + v21, v15, v16);
    _sScPSgWOc_1(v41, v45);
    LODWORD(v21) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v45, 1, v18);
    swift_retain();
    uint64_t v23 = *(void *)(v1 + 192);
    if (v21 == 1)
    {
      outlined destroy of TaskPriority?(*(void *)(v1 + 192), &_sScPSgMD_2);
    }
    else
    {
      TaskPriority.rawValue.getter();
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v23, v18);
    }
    unint64_t v3 = v36;
    unint64_t v4 = v46;
    if (v22[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v24 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v26 = v25;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v24 = 0;
      uint64_t v26 = 0;
    }
    uint64_t v27 = **(void **)(v1 + 96);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, [Razzmatazz]));
    uint64_t v28 = v26 | v24;
    if (v26 | v24)
    {
      uint64_t v28 = v1 + 16;
      *(void *)(v1 + 16) = 0;
      *(void *)(v1 + 24) = 0;
      *(void *)(v1 + 32) = v24;
      *(void *)(v1 + 40) = v26;
    }
    uint64_t v0 = *(void **)(v1 + 200);
    *(void *)(v1 + 48) = 1;
    *(void *)(v1 + 56) = v28;
    *(void *)(v1 + 64) = v27;
    swift_task_create();
    swift_release();
    outlined destroy of TaskPriority?((uint64_t)v0, &_sScPSgMD_2);
  }
  uint64_t v29 = *(void ***)(v1 + 128);
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, [Razzmatazz]));
  __swift_instantiateConcreteTypeFromMangledName(&_ss5Error_pMD_1);
  ThrowingTaskGroup.makeAsyncIterator()();
  uint64_t v0 = *v29;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  char *v29 = v0;
  if (isUniquelyReferenced_nonNull_native) {
    goto LABEL_17;
  }
LABEL_23:
  uint64_t v0 = specialized _ArrayBuffer._consumeAndCreateNew()(v0);
LABEL_17:
  uint64_t v31 = *(void **)(v1 + 128);
  char v32 = swift_isUniquelyReferenced_nonNull_native();
  void *v31 = v0;
  if ((v32 & 1) == 0) {
    uint64_t v0 = specialized _ArrayBuffer._consumeAndCreateNew()(v0);
  }
  **(void **)(v1 + 128) = v0;
  uint64_t v33 = (void *)swift_task_alloc();
  *(void *)(v1 + 248) = v33;
  *uint64_t v33 = v1;
  v33[1] = specialized closure #1 in Collection.asyncMap<A>(transform:);
  uint64_t v34 = *(void *)(v1 + 136);
  return __sScg8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v1 + 72, 0, 0, v34, v1 + 88);
}

{
  uint64_t v0;
  uint64_t (*v1)();
  uint64_t v3;

  swift_task_dealloc();
  if (v0) {
    uint64_t v1 = specialized closure #1 in Collection.asyncMap<A>(transform:);
  }
  else {
    uint64_t v1 = specialized closure #1 in Collection.asyncMap<A>(transform:);
  }
  return _swift_task_switch(v1, 0, 0);
}

{
  void *v0;
  uint64_t v1;
  void **v2;
  unint64_t v3;
  void *v4;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t (*v11)(void);
  uint64_t *v13;
  uint64_t v14;

  uint64_t v1 = v0[10];
  if (v1)
  {
    uint64_t v2 = (void **)v0[16];
    unint64_t v3 = v0[9];
    unint64_t v4 = *v2;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v2 = v4;
    if (isUniquelyReferenced_nonNull_native)
    {
      if ((v3 & 0x8000000000000000) == 0) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v13 = (uint64_t *)v0[16];
      char isUniquelyReferenced_nonNull_native = (uint64_t)specialized _ArrayBuffer._consumeAndCreateNew()(v4);
      unint64_t v4 = (void *)isUniquelyReferenced_nonNull_native;
      uint64_t *v13 = isUniquelyReferenced_nonNull_native;
      if ((v3 & 0x8000000000000000) == 0)
      {
LABEL_4:
        if (v3 < v4[2])
        {
          swift_bridgeObjectRelease();
          v4[v3 + 4] = v1;
          uint64_t v10 = (void *)swift_task_alloc();
          v0[31] = v10;
          *uint64_t v10 = v0;
          v10[1] = specialized closure #1 in Collection.asyncMap<A>(transform:);
          uint64_t v8 = v0[17];
          char isUniquelyReferenced_nonNull_native = (uint64_t)(v0 + 9);
          uint64_t v6 = 0;
          uint64_t v7 = 0;
          uint64_t v9 = v0 + 11;
          return __sScg8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(isUniquelyReferenced_nonNull_native, v6, v7, v8, v9);
        }
LABEL_13:
        __break(1u);
        return __sScg8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(isUniquelyReferenced_nonNull_native, v6, v7, v8, v9);
      }
    }
    __break(1u);
    goto LABEL_13;
  }
  (*(void (**)(void, void))(v0[18] + 8))(v0[19], v0[17]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

{
  void *v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  (*(void (**)(void, void))(v0[18] + 8))(v0[19], v0[17]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t specialized closure #1 in Collection.asyncMap<A>(transform:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = *a3;
  uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&async function pointer to specialized closure #1 in Collection.asyncMap<A>(transform:)
                                                                                     + async function pointer to specialized closure #1 in Collection.asyncMap<A>(transform:));
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v13;
  void *v13 = v6;
  v13[1] = partial apply for closure #1 in static MusicEngagementExtension.performRequest(with:completion:);
  return v15(a1, a2, v12, a4, a5, a6);
}

uint64_t specialized closure #1 in closure #1 in Collection.asyncMap<A>(transform:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int *a5, uint64_t a6, uint64_t a7)
{
  _OWORD v7[3] = a1;
  _OWORD v7[4] = a4;
  uint64_t v11 = (int *)((char *)a5 + *a5);
  uint64_t v9 = (void *)swift_task_alloc();
  _OWORD v7[5] = v9;
  void *v9 = v7;
  v9[1] = specialized closure #1 in closure #1 in Collection.asyncMap<A>(transform:);
  return ((uint64_t (*)(void *, uint64_t))v11)(v7 + 2, a7);
}

uint64_t specialized closure #1 in closure #1 in Collection.asyncMap<A>(transform:)()
{
  *(void *)(*(void *)v1 + 48) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = specialized closure #1 in closure #1 in Collection.asyncMap<A>(transform:);
  }
  else {
    uint64_t v2 = specialized closure #1 in closure #1 in Collection.asyncMap<A>(transform:);
  }
  return _swift_task_switch(v2, 0, 0);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  uint64_t v1 = *(void **)(v0 + 24);
  uint64_t v2 = *(void *)(v0 + 16);
  unsigned char *v1 = *(void *)(v0 + 32);
  v1[1] = v2;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

BOOL specialized static RazzmatazzController.Location.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  BOOL v4 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (v4 || (char v5 = _stringCompareWithSmolCheck(_:_:expecting:)(), result = 0, (v5 & 1) != 0))
  {
    if (*(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24)) {
      return *(double *)(a1 + 32) == *(double *)(a2 + 32) && *(double *)(a1 + 40) == *(double *)(a2 + 40);
    }
    char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
    BOOL result = 0;
    if (v8) {
      return *(double *)(a1 + 32) == *(double *)(a2 + 32) && *(double *)(a1 + 40) == *(double *)(a2 + 40);
    }
  }
  return result;
}

uint64_t specialized static RazzmatazzAPI.razzmatazz(for:)(uint64_t a1)
{
  v1[7] = a1;
  uint64_t v2 = type metadata accessor for URLRequest();
  v1[8] = v2;
  v1[9] = *(void *)(v2 - 8);
  v1[10] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for URL();
  v1[11] = v3;
  v1[12] = *(void *)(v3 - 8);
  v1[13] = swift_task_alloc();
  v1[14] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for Date.ISO8601FormatStyle();
  v1[15] = v4;
  v1[16] = *(void *)(v4 - 8);
  v1[17] = swift_task_alloc();
  v1[18] = swift_task_alloc();
  v1[19] = swift_task_alloc();
  v1[20] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for Date();
  v1[21] = v5;
  v1[22] = *(void *)(v5 - 8);
  v1[23] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for Locale();
  v1[24] = v6;
  v1[25] = *(void *)(v6 - 8);
  v1[26] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&_s10Foundation3URLVSgMD_1);
  v1[27] = swift_task_alloc();
  v1[28] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&_s10Foundation13URLComponentsVSgMD_1);
  v1[29] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for URLComponents();
  v1[30] = v7;
  v1[31] = *(void *)(v7 - 8);
  v1[32] = swift_task_alloc();
  return _swift_task_switch(specialized static RazzmatazzAPI.razzmatazz(for:), 0, 0);
}

{
  uint64_t v1;

  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(specialized static RazzmatazzAPI.razzmatazz(for:), 0, 0);
}

{
  uint64_t v1;
  uint64_t v3;

  *(void *)(*(void *)v1 + 40) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return _swift_task_switch(specialized static RazzmatazzAPI.razzmatazz(for:), 0, 0);
}

uint64_t specialized static RazzmatazzAPI.razzmatazz(for:)()
{
  v0[33] = Artist.catalogID.getter();
  v0[34] = v1;
  if (v1)
  {
    uint64_t v2 = v0[28];
    uint64_t v3 = v0[11];
    uint64_t v4 = v0[12];
    URL.init(string:)();
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
    uint64_t v6 = v5(v2, 1, v3);
    if (v6 == 1)
    {
      __break(1u);
    }
    else
    {
      uint64_t v39 = v5;
      uint64_t v9 = v0[30];
      uint64_t v8 = v0[31];
      uint64_t v11 = v0[28];
      uint64_t v10 = v0[29];
      uint64_t v12 = v0[11];
      uint64_t v13 = v0[12];
      URLComponents.init(url:resolvingAgainstBaseURL:)();
      uint64_t v14 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
      v0[35] = v14;
      v0[36] = (v13 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      v14(v11, v12);
      uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v10, 1, v9);
      if (v6 != 1)
      {
        uint64_t v15 = v0[26];
        uint64_t v38 = v0[27];
        uint64_t v16 = v0[25];
        uint64_t v35 = v0[22];
        uint64_t v36 = v0[21];
        uint64_t v34 = v0[20];
        uint64_t v33 = v0[19];
        uint64_t v31 = v0[23];
        uint64_t v32 = v0[18];
        uint64_t v17 = v0[16];
        uint64_t v29 = v0[24];
        uint64_t v30 = v0[17];
        uint64_t v18 = v0[15];
        uint64_t v37 = v0[11];
        (*(void (**)(void))(v0[31] + 32))();
        __swift_instantiateConcreteTypeFromMangledName(&_ss23_ContiguousArrayStorageCy10Foundation12URLQueryItemVGMD_1);
        type metadata accessor for URLQueryItem();
        *(_OWORD *)(swift_allocObject() + 16) = xmmword_100493CE0;
        static Locale.current.getter();
        Locale.identifier.getter();
        (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v29);
        URLQueryItem.init(name:value:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        URLQueryItem.init(name:value:)();
        swift_bridgeObjectRelease();
        static Date.now.getter();
        static FormatStyle<>.iso8601.getter();
        Date.ISO8601FormatStyle.day()();
        uint64_t v19 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
        v19(v30, v18);
        Date.ISO8601FormatStyle.month()();
        v19(v32, v18);
        Date.ISO8601FormatStyle.year()();
        v19(v33, v18);
        _s10Foundation4DateVACSLAAWlTm_0(&lazy protocol witness table cache variable for type Date.ISO8601FormatStyle and conformance Date.ISO8601FormatStyle, (void (*)(uint64_t))&type metadata accessor for Date.ISO8601FormatStyle);
        Date.formatted<A>(_:)();
        v19(v34, v18);
        (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v31, v36);
        URLQueryItem.init(name:value:)();
        swift_bridgeObjectRelease();
        URLComponents.queryItems.setter();
        URLComponents.url.getter();
        int v20 = v39(v38, 1, v37);
        uint64_t v21 = v0[27];
        if (v20 == 1)
        {
          swift_bridgeObjectRelease();
          outlined destroy of TaskPriority?(v21, &_s10Foundation3URLVSgMD_1);
          (*(void (**)(void, void))(v0[31] + 8))(v0[32], v0[30]);
          goto LABEL_6;
        }
        uint64_t v25 = v0[13];
        uint64_t v24 = v0[14];
        uint64_t v26 = v0[11];
        uint64_t v27 = v0[12];
        (*(void (**)(uint64_t, void, uint64_t))(v27 + 32))(v24, v0[27], v26);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 16))(v25, v24, v26);
        URLRequest.init(url:cachePolicy:timeoutInterval:)();
        v0[37] = [self sharedSession];
        uint64_t v28 = (void *)swift_task_alloc();
        v0[38] = v28;
        *uint64_t v28 = v0;
        v28[1] = specialized static RazzmatazzAPI.razzmatazz(for:);
        uint64_t v6 = v0[10];
        uint64_t v7 = 0;
        return NSURLSession.data(for:delegate:)(v6, v7);
      }
    }
    __break(1u);
    return NSURLSession.data(for:delegate:)(v6, v7);
  }
LABEL_6:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v22 = (uint64_t (*)(void *))v0[1];
  return v22(_swiftEmptyArrayStorage);
}

{
  void *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void (*v18)(uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(void *);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t);
  void *v31;
  uint64_t v32[2];
  void *v33;
  uint64_t v34;

  uint64_t v33 = v0;
  uint64_t v1 = v0[41];
  type metadata accessor for JSONDecoder();
  swift_allocObject();
  JSONDecoder.init()();
  lazy protocol witness table accessor for type Root and conformance Root();
  dispatch thunk of JSONDecoder.decode<A>(_:from:)();
  uint64_t v3 = v0[39];
  uint64_t v2 = v0[40];
  if (v1)
  {
    outlined consume of Data._Representation(v0[39], v0[40]);
    swift_release();
    if (one-time initialization token for razzmatazz != -1) {
      swift_once();
    }
    uint64_t v4 = type metadata accessor for Logger();
    __swift_project_value_buffer(v4, (uint64_t)static Logger.razzmatazz);
    swift_errorRetain();
    swift_bridgeObjectRetain();
    swift_errorRetain();
    uint64_t v5 = Logger.logObject.getter();
    uint64_t v6 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = swift_slowAlloc();
      v32[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v7 = 136315394;
      swift_bridgeObjectRetain();
      uint64_t v8 = MusicItemID.description.getter();
      uint64_t v10 = v9;
      swift_bridgeObjectRelease();
      *(void *)(v7 + 4) = _s2os32getNullTerminatedUTF8PointerImpl_21storingStringOwnersInSVSS_SpyypGSgztF_2(v8, v10, v32);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v7 + 12) = 2080;
      v0[6] = v1;
      swift_errorRetain();
      __swift_instantiateConcreteTypeFromMangledName(&_ss5Error_pMD_1);
      uint64_t v11 = String.init<A>(describing:)();
      *(void *)(v7 + 14) = _s2os32getNullTerminatedUTF8PointerImpl_21storingStringOwnersInSVSS_SpyypGSgztF_2(v11, v12, v32);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "Could not load for artistID=%s with error=%s", (uint8_t *)v7, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_errorRelease();
      swift_errorRelease();
    }

    uint64_t v18 = (void (*)(uint64_t, uint64_t))v0[35];
    uint64_t v19 = v0[14];
    uint64_t v21 = v0[10];
    int v20 = v0[11];
    uint64_t v22 = v0[8];
    uint64_t v23 = v0[9];
    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v21, v22);
    v18(v19, v20);
    uint64_t v31 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v30 = (void (*)(uint64_t, uint64_t))v0[35];
    uint64_t v28 = v0[11];
    uint64_t v29 = v0[14];
    uint64_t v13 = v0[9];
    uint64_t v14 = v0[7];
    uint64_t v26 = v0[8];
    uint64_t v27 = v0[10];
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v16 = v0[4];
    uint64_t v15 = v0[5];
    uint64_t v17 = (void *)swift_task_alloc();
    v17[2] = v16;
    v17[3] = v15;
    void v17[4] = v14;
    swift_bridgeObjectRetain();
    uint64_t v31 = (void *)specialized Sequence.compactMap<A>(_:)((void (*)(uint64_t))partial apply for closure #1 in static RazzmatazzAPI.razzmatazz(for:), (uint64_t)v17, v16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    outlined consume of Data._Representation(v3, v2);
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v27, v26);
    v30(v29, v28);
  }
  (*(void (**)(void, void))(v0[31] + 8))(v0[32], v0[30]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v24 = (uint64_t (*)(void *))v0[1];
  return v24(v31);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(void *);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  int v20 = v0;

  uint64_t v1 = *(void *)(v0 + 328);
  if (one-time initialization token for razzmatazz != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  __swift_project_value_buffer(v2, (uint64_t)static Logger.razzmatazz);
  swift_errorRetain();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  uint64_t v3 = Logger.logObject.getter();
  uint64_t v4 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315394;
    swift_bridgeObjectRetain();
    uint64_t v6 = MusicItemID.description.getter();
    uint64_t v8 = v7;
    swift_bridgeObjectRelease();
    *(void *)(v5 + 4) = _s2os32getNullTerminatedUTF8PointerImpl_21storingStringOwnersInSVSS_SpyypGSgztF_2(v6, v8, &v19);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v5 + 12) = 2080;
    *(void *)(v0 + 48) = v1;
    swift_errorRetain();
    __swift_instantiateConcreteTypeFromMangledName(&_ss5Error_pMD_1);
    uint64_t v9 = String.init<A>(describing:)();
    *(void *)(v5 + 14) = _s2os32getNullTerminatedUTF8PointerImpl_21storingStringOwnersInSVSS_SpyypGSgztF_2(v9, v10, &v19);
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Could not load for artistID=%s with error=%s", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_errorRelease();
    swift_errorRelease();
  }

  uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v0 + 280);
  uint64_t v12 = *(void *)(v0 + 112);
  uint64_t v14 = *(void *)(v0 + 80);
  uint64_t v13 = *(void *)(v0 + 88);
  uint64_t v15 = *(void *)(v0 + 64);
  uint64_t v16 = *(void *)(v0 + 72);
  swift_errorRelease();
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
  v11(v12, v13);
  (*(void (**)(void, void))(*(void *)(v0 + 248) + 8))(*(void *)(v0 + 256), *(void *)(v0 + 240));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v17 = *(uint64_t (**)(void *))(v0 + 8);
  return v17(_swiftEmptyArrayStorage);
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  char *v4;
  uint64_t v5;

  swift_getKeyPath();
  lazy protocol witness table accessor for type MusicItemID? and conformance <A> A?(&lazy protocol witness table cache variable for type MusicItemID? and conformance <A> A?, &demangling cache variable for type metadata for MusicItemID?, (void (*)(void))lazy protocol witness table accessor for type MusicItemID and conformance MusicItemID);
  uint64_t v1 = Array.removingDuplicates<A>(with:)();
  *(void *)(v0 + 24) = v1;
  swift_release();
  uint64_t v4 = (char *)&async function pointer to specialized Collection.asyncMap<A>(transform:)
     + async function pointer to specialized Collection.asyncMap<A>(transform:);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v2;
  *uint64_t v2 = v0;
  v2[1] = specialized static RazzmatazzAPI.razzmatazz(for:);
  return ((uint64_t (*)(void *, void, uint64_t))v4)(&async function pointer to closure #1 in static RazzmatazzAPI.razzmatazz(for:), 0, v1);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t result;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  int64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t (*v15)(void *);
  uint64_t v16;

  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = *(void *)(v1 + 16);
  if (!v2)
  {
    uint64_t v5 = _swiftEmptyArrayStorage;
LABEL_20:
    swift_bridgeObjectRelease();
    uint64_t v15 = *(uint64_t (**)(void *))(v0 + 8);
    return v15(v5);
  }
  uint64_t v3 = (uint64_t *)(v1 + 32);
  BOOL result = swift_bridgeObjectRetain();
  uint64_t v5 = _swiftEmptyArrayStorage;
  while (1)
  {
    uint64_t v6 = *v3;
    uint64_t v7 = *(void *)(*v3 + 16);
    uint64_t v8 = v5[2];
    uint64_t v9 = v8 + v7;
    if (__OFADD__(v8, v7)) {
      break;
    }
    swift_bridgeObjectRetain();
    BOOL result = swift_isUniquelyReferenced_nonNull_native();
    if (result && v9 <= v5[3] >> 1)
    {
      if (*(void *)(v6 + 16)) {
        goto LABEL_14;
      }
    }
    else
    {
      if (v8 <= v9) {
        uint64_t v10 = v8 + v7;
      }
      else {
        uint64_t v10 = v8;
      }
      BOOL result = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(result, v10, 1, v5);
      uint64_t v5 = (void *)result;
      if (*(void *)(v6 + 16))
      {
LABEL_14:
        uint64_t v11 = (v5[3] >> 1) - v5[2];
        BOOL result = type metadata accessor for Razzmatazz(0);
        if (v11 < v7) {
          goto LABEL_25;
        }
        BOOL result = swift_arrayInitWithCopy();
        if (v7)
        {
          uint64_t v12 = v5[2];
          uint64_t v13 = __OFADD__(v12, v7);
          uint64_t v14 = v12 + v7;
          if (v13) {
            goto LABEL_26;
          }
          v5[2] = v14;
        }
        goto LABEL_4;
      }
    }
    if (v7)
    {
      __break(1u);
      break;
    }
LABEL_4:
    BOOL result = swift_bridgeObjectRelease();
    ++v3;
    if (!--v2)
    {
      swift_bridgeObjectRelease();
      goto LABEL_20;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
  return result;
}

uint64_t specialized static RazzmatazzAPI.razzmatazz(for:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = (void *)*v4;
  v6[39] = a1;
  v6[40] = a2;
  v6[41] = v3;
  swift_task_dealloc();
  if (v3)
  {
    uint64_t v7 = specialized static RazzmatazzAPI.razzmatazz(for:);
  }
  else
  {
    uint64_t v8 = (void *)v6[37];

    uint64_t v7 = specialized static RazzmatazzAPI.razzmatazz(for:);
  }
  return _swift_task_switch(v7, 0, 0);
}

void specialized RazzmatazzController.persistedLocation.setter(uint64_t a1)
{
  outlined init with take of PresentationSource?(a1, (uint64_t)v9, &demangling cache variable for type metadata for RazzmatazzController.Location?);
  if (*((void *)&v9[0] + 1))
  {
    long long v10 = v9[0];
    long long v11 = v9[1];
    long long v12 = v9[2];
    type metadata accessor for JSONEncoder();
    swift_allocObject();
    JSONEncoder.init()();
    lazy protocol witness table accessor for type RazzmatazzController.Location and conformance RazzmatazzController.Location();
    uint64_t v3 = dispatch thunk of JSONEncoder.encode<A>(_:)();
    unint64_t v5 = v4;
    swift_release();
    long long v13 = v10;
    outlined release of String?((uint64_t)&v13);
    long long v14 = v11;
    outlined release of String?((uint64_t)&v14);
    id v6 = [self standardUserDefaults];
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    NSString v8 = String._bridgeToObjectiveC()();
    [v6 setValue:isa forKey:v8];

    outlined consume of Data._Representation(v3, v5);
  }
  else
  {
    id v1 = [self standardUserDefaults];
    NSString v2 = String._bridgeToObjectiveC()();
    [v1 setValue:0 forKey:v2];
  }
}

uint64_t specialized RazzmatazzController.persistedLocation.getter@<X0>(uint64_t a1@<X8>)
{
  id v2 = [self standardUserDefaults];
  NSString v3 = String._bridgeToObjectiveC()();
  id v4 = [v2 valueForKey:v3];

  if (v4)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v18, 0, sizeof(v18));
  }
  outlined init with take of PresentationSource?((uint64_t)v18, (uint64_t)v13, &_sypSgMD_2);
  if (!v14)
  {
    uint64_t result = outlined destroy of TaskPriority?((uint64_t)v13, &_sypSgMD_2);
    goto LABEL_8;
  }
  uint64_t result = swift_dynamicCast();
  if ((result & 1) == 0)
  {
LABEL_8:
    uint64_t v8 = 0;
    uint64_t v9 = 0;
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    long long v12 = 0uLL;
    goto LABEL_9;
  }
  uint64_t v7 = v16;
  unint64_t v6 = v17;
  type metadata accessor for JSONDecoder();
  swift_allocObject();
  JSONDecoder.init()();
  lazy protocol witness table accessor for type RazzmatazzController.Location and conformance RazzmatazzController.Location();
  dispatch thunk of JSONDecoder.decode<A>(_:from:)();
  outlined consume of Data._Representation(v7, v6);
  uint64_t result = swift_release();
  uint64_t v8 = v13[0];
  uint64_t v9 = v13[1];
  uint64_t v10 = v13[2];
  uint64_t v11 = v14;
  long long v12 = v15;
LABEL_9:
  *(void *)a1 = v8;
  *(void *)(a1 + 8) = v9;
  *(void *)(a1 + 16) = v10;
  *(void *)(a1 + 24) = v11;
  *(_OWORD *)(a1 + 32) = v12;
  return result;
}

uint64_t specialized RazzmatazzController.Location.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C746974627573 && a2 == 0xE800000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656475746974616CLL && a2 == 0xE800000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x64757469676E6F6CLL && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t specialized RazzmatazzController.Location.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<RazzmatazzController.Location.CodingKeys>);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_0Tm(a1, a1[3]);
  lazy protocol witness table accessor for type RazzmatazzController.Location.CodingKeys and conformance RazzmatazzController.Location.CodingKeys();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  }
  char v24 = 0;
  uint64_t v9 = KeyedDecodingContainer.decode(_:forKey:)();
  uint64_t v11 = v10;
  char v23 = 1;
  swift_bridgeObjectRetain();
  uint64_t v19 = KeyedDecodingContainer.decode(_:forKey:)();
  uint64_t v20 = v12;
  char v22 = 2;
  swift_bridgeObjectRetain();
  KeyedDecodingContainer.decode(_:forKey:)();
  uint64_t v14 = v13;
  char v21 = 3;
  KeyedDecodingContainer.decode(_:forKey:)();
  uint64_t v16 = v15;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  uint64_t v17 = v20;
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v9;
  a2[1] = v11;
  a2[2] = v19;
  a2[3] = v17;
  a2[4] = v14;
  a2[5] = v16;
  return result;
}

unint64_t lazy protocol witness table accessor for type RazzmatazzController.Location.CodingKeys and conformance RazzmatazzController.Location.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type RazzmatazzController.Location.CodingKeys and conformance RazzmatazzController.Location.CodingKeys;
  if (!lazy protocol witness table cache variable for type RazzmatazzController.Location.CodingKeys and conformance RazzmatazzController.Location.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type RazzmatazzController.Location.CodingKeys and conformance RazzmatazzController.Location.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type RazzmatazzController.Location.CodingKeys and conformance RazzmatazzController.Location.CodingKeys;
  if (!lazy protocol witness table cache variable for type RazzmatazzController.Location.CodingKeys and conformance RazzmatazzController.Location.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type RazzmatazzController.Location.CodingKeys and conformance RazzmatazzController.Location.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type RazzmatazzController.Location.CodingKeys and conformance RazzmatazzController.Location.CodingKeys;
  if (!lazy protocol witness table cache variable for type RazzmatazzController.Location.CodingKeys and conformance RazzmatazzController.Location.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type RazzmatazzController.Location.CodingKeys and conformance RazzmatazzController.Location.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type RazzmatazzController.Location.CodingKeys and conformance RazzmatazzController.Location.CodingKeys;
  if (!lazy protocol witness table cache variable for type RazzmatazzController.Location.CodingKeys and conformance RazzmatazzController.Location.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type RazzmatazzController.Location.CodingKeys and conformance RazzmatazzController.Location.CodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type [Razzmatazz] and conformance [A]()
{
  unint64_t result = lazy protocol witness table cache variable for type [Razzmatazz] and conformance [A];
  if (!lazy protocol witness table cache variable for type [Razzmatazz] and conformance [A])
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [Razzmatazz]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type [Razzmatazz] and conformance [A]);
  }
  return result;
}

uint64_t sub_100364AC4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = Artist.catalogID.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t lazy protocol witness table accessor for type MusicItemID and conformance MusicItemID()
{
  unint64_t result = lazy protocol witness table cache variable for type MusicItemID and conformance MusicItemID;
  if (!lazy protocol witness table cache variable for type MusicItemID and conformance MusicItemID)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MusicItemID and conformance MusicItemID);
  }
  return result;
}

uint64_t partial apply for specialized closure #1 in Collection.asyncMap<A>(transform:)(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = (uint64_t *)v2[2];
  uint64_t v7 = v2[3];
  uint64_t v9 = v2[4];
  uint64_t v8 = v2[5];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v10;
  *uint64_t v10 = v3;
  v10[1] = partial apply for closure #1 in static MusicEngagementExtension.performRequest(with:completion:);
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t *, uint64_t, uint64_t, uint64_t))((char *)&async function pointer to specialized closure #1 in Collection.asyncMap<A>(transform:)
                                                                                       + async function pointer to specialized closure #1 in Collection.asyncMap<A>(transform:));
  return v11(a1, a2, v6, v7, v9, v8);
}

uint64_t sub_100364C20()
{
  uint64_t v1 = type metadata accessor for Artist();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t partial apply for specialized closure #1 in closure #1 in Collection.asyncMap<A>(transform:)(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for Artist() - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (int *)v1[5];
  uint64_t v9 = v1[6];
  uint64_t v10 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = closure #3 in static Actions.ReportConcern.action(context:);
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, int *, uint64_t, uint64_t))((char *)&async function pointer to specialized closure #1 in closure #1 in Collection.asyncMap<A>(transform:)
                                                                                            + async function pointer to specialized closure #1 in closure #1 in Collection.asyncMap<A>(transform:));
  return v12(a1, v5, v6, v7, v8, v9, v10);
}

uint64_t _sScPSgWOc_1(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&_sScPSgMD_2);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t _s10Foundation4DateVACSLAAWlTm_0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type Root and conformance Root()
{
  unint64_t result = lazy protocol witness table cache variable for type Root and conformance Root;
  if (!lazy protocol witness table cache variable for type Root and conformance Root)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Root and conformance Root);
  }
  return result;
}

uint64_t partial apply for closure #1 in static RazzmatazzAPI.razzmatazz(for:)@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  return closure #1 in static RazzmatazzAPI.razzmatazz(for:)(a1, *(void *)(v2 + 24), *(void *)(v2 + 32), a2);
}

uint64_t type metadata accessor for ShazamEvent(uint64_t a1)
{
  return type metadata accessor for Notice.Variant(a1, (uint64_t *)&type metadata singleton initialization cache for ShazamEvent);
}

uint64_t type metadata accessor for RazzmatazzAPI.CustomError(uint64_t a1)
{
  return type metadata accessor for Notice.Variant(a1, (uint64_t *)&type metadata singleton initialization cache for RazzmatazzAPI.CustomError);
}

uint64_t type metadata accessor for ShazamEvent.Attributes(uint64_t a1)
{
  return type metadata accessor for Notice.Variant(a1, (uint64_t *)&type metadata singleton initialization cache for ShazamEvent.Attributes);
}

uint64_t *initializeBufferWithCopyOfBuffer for ShazamEvent.Attributes(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for Date();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = *(int *)(a3 + 24);
    uint64_t v14 = (char *)v4 + v13;
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = type metadata accessor for TimeZone();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  }
  return v4;
}

uint64_t destroy for ShazamEvent.Attributes(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 24);
  uint64_t v7 = type metadata accessor for TimeZone();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);

  return v8(v6, v7);
}

void *initializeWithCopy for ShazamEvent.Attributes(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = type metadata accessor for TimeZone();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  return a1;
}

void *assignWithCopy for ShazamEvent.Attributes(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = type metadata accessor for TimeZone();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  return a1;
}

_OWORD *initializeWithTake for ShazamEvent.Attributes(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = type metadata accessor for TimeZone();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  return a1;
}

void *assignWithTake for ShazamEvent.Attributes(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = type metadata accessor for TimeZone();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for ShazamEvent.Attributes(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100365588);
}

uint64_t sub_100365588(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for Date();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = type metadata accessor for TimeZone();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 24);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for ShazamEvent.Attributes(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003656C8);
}

uint64_t sub_1003656C8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for Date();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = type metadata accessor for TimeZone();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 24);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t type metadata completion function for ShazamEvent.Attributes()
{
  uint64_t result = type metadata accessor for Date();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for TimeZone();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

void destroy for VenueElement(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v2 = *(void **)(a1 + 96);
}

void *initializeWithCopy for VenueElement(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  uint64_t v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  uint64_t v8 = a2[11];
  a1[10] = a2[10];
  a1[11] = v8;
  uint64_t v9 = (void *)a2[12];
  a1[12] = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v10 = v9;
  return a1;
}

void *assignWithCopy for VenueElement(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)a2[12];
  uint64_t v5 = (void *)a1[12];
  a1[12] = v4;
  id v6 = v4;

  return a1;
}

uint64_t assignWithTake for VenueElement(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v8;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void **)(a1 + 96);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);

  return a1;
}

void *type metadata accessor for VenueElement()
{
  return &unk_1005452F0;
}

uint64_t *initializeBufferWithCopyOfBuffer for RazzmatazzAPI.CustomError(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v24 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v29 = type metadata accessor for ShazamEvent(0);
      uint64_t v8 = *(int *)(v29 + 20);
      uint64_t v9 = (uint64_t *)((char *)a1 + v8);
      id v10 = (char *)a2 + v8;
      uint64_t v11 = *(uint64_t *)((char *)a2 + v8 + 8);
      void *v9 = *(uint64_t *)((char *)a2 + v8);
      v9[1] = v11;
      uint64_t v12 = type metadata accessor for ShazamEvent.Attributes(0);
      uint64_t v13 = *(int *)(v12 + 20);
      uint64_t v27 = &v10[v13];
      uint64_t v28 = (char *)v9 + v13;
      uint64_t v14 = type metadata accessor for Date();
      uint64_t v26 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v26(v28, v27, v14);
      uint64_t v15 = *(int *)(v12 + 24);
      uint64_t v16 = (char *)v9 + v15;
      uint64_t v17 = &v10[v15];
      uint64_t v18 = type metadata accessor for TimeZone();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
      uint64_t v19 = *(int *)(v29 + 24);
      uint64_t v20 = (uint64_t *)((char *)a1 + v19);
      char v21 = (uint64_t *)((char *)a2 + v19);
      uint64_t v22 = v21[1];
      void *v20 = *v21;
      v20[1] = v22;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (event: ShazamEvent, venues: [String : VenueElement]));
      *(uint64_t *)((char *)a1 + *(int *)(v23 + 48)) = *(uint64_t *)((char *)a2 + *(int *)(v23 + 48));
    }
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for RazzmatazzAPI.CustomError(uint64_t a1)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t result = swift_bridgeObjectRelease();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v4 = a1 + *(int *)(type metadata accessor for ShazamEvent(0) + 20);
    swift_bridgeObjectRelease();
    uint64_t v5 = type metadata accessor for ShazamEvent.Attributes(0);
    uint64_t v6 = v4 + *(int *)(v5 + 20);
    uint64_t v7 = type metadata accessor for Date();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
    uint64_t v8 = v4 + *(int *)(v5 + 24);
    uint64_t v9 = type metadata accessor for TimeZone();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (event: ShazamEvent, venues: [String : VenueElement]));
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *initializeWithCopy for RazzmatazzAPI.CustomError(void *a1, void *a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v26 = type metadata accessor for ShazamEvent(0);
    uint64_t v6 = *(int *)(v26 + 20);
    uint64_t v7 = (void *)((char *)a1 + v6);
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = *(void *)((char *)a2 + v6 + 8);
    void *v7 = *(void *)((char *)a2 + v6);
    v7[1] = v9;
    uint64_t v10 = type metadata accessor for ShazamEvent.Attributes(0);
    uint64_t v11 = *(int *)(v10 + 20);
    uint64_t v24 = &v8[v11];
    uint64_t v25 = (char *)v7 + v11;
    uint64_t v12 = type metadata accessor for Date();
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v25, v24, v12);
    uint64_t v14 = *(int *)(v10 + 24);
    uint64_t v15 = (char *)v7 + v14;
    uint64_t v16 = &v8[v14];
    uint64_t v17 = type metadata accessor for TimeZone();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    uint64_t v18 = *(int *)(v26 + 24);
    uint64_t v19 = (void *)((char *)a1 + v18);
    uint64_t v20 = (void *)((char *)a2 + v18);
    uint64_t v21 = v20[1];
    void *v19 = *v20;
    v19[1] = v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (event: ShazamEvent, venues: [String : VenueElement]));
    *(void *)((char *)a1 + *(int *)(v22 + 48)) = *(void *)((char *)a2 + *(int *)(v22 + 48));
  }
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *assignWithCopy for RazzmatazzAPI.CustomError(void *a1, void *a2)
{
  if (a1 != a2)
  {
    outlined destroy of ShazamEvent((uint64_t)a1, type metadata accessor for RazzmatazzAPI.CustomError);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    a1[1] = a2[1];
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v23 = type metadata accessor for ShazamEvent(0);
      uint64_t v5 = *(int *)(v23 + 20);
      uint64_t v6 = (void *)((char *)a1 + v5);
      uint64_t v7 = (char *)a2 + v5;
      *uint64_t v6 = *(void *)((char *)a2 + v5);
      v6[1] = *(void *)((char *)a2 + v5 + 8);
      uint64_t v8 = type metadata accessor for ShazamEvent.Attributes(0);
      uint64_t v9 = *(int *)(v8 + 20);
      uint64_t v21 = &v7[v9];
      uint64_t v22 = (char *)v6 + v9;
      uint64_t v10 = type metadata accessor for Date();
      uint64_t v20 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v20(v22, v21, v10);
      uint64_t v11 = *(int *)(v8 + 24);
      uint64_t v12 = (char *)v6 + v11;
      uint64_t v13 = &v7[v11];
      uint64_t v14 = type metadata accessor for TimeZone();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
      uint64_t v15 = *(int *)(v23 + 24);
      uint64_t v16 = (void *)((char *)a1 + v15);
      uint64_t v17 = (void *)((char *)a2 + v15);
      void *v16 = *v17;
      v16[1] = v17[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (event: ShazamEvent, venues: [String : VenueElement]));
      *(void *)((char *)a1 + *(int *)(v18 + 48)) = *(void *)((char *)a2 + *(int *)(v18 + 48));
    }
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t outlined destroy of ShazamEvent(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

_OWORD *initializeWithTake for RazzmatazzAPI.CustomError(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    uint64_t v6 = type metadata accessor for ShazamEvent(0);
    uint64_t v7 = *(int *)(v6 + 20);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    *(_OWORD *)((char *)a1 + v7) = *(_OWORD *)((char *)a2 + v7);
    uint64_t v10 = type metadata accessor for ShazamEvent.Attributes(0);
    uint64_t v11 = *(int *)(v10 + 20);
    uint64_t v12 = &v8[v11];
    uint64_t v13 = &v9[v11];
    uint64_t v14 = type metadata accessor for Date();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
    uint64_t v15 = *(int *)(v10 + 24);
    uint64_t v16 = &v8[v15];
    uint64_t v17 = &v9[v15];
    uint64_t v18 = type metadata accessor for TimeZone();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
    *(_OWORD *)((char *)a1 + *(int *)(v6 + 24)) = *(_OWORD *)((char *)a2 + *(int *)(v6 + 24));
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (event: ShazamEvent, venues: [String : VenueElement]));
    *(void *)((char *)a1 + *(int *)(v19 + 48)) = *(void *)((char *)a2 + *(int *)(v19 + 48));
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

_OWORD *assignWithTake for RazzmatazzAPI.CustomError(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    outlined destroy of ShazamEvent((uint64_t)a1, type metadata accessor for RazzmatazzAPI.CustomError);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      uint64_t v6 = type metadata accessor for ShazamEvent(0);
      uint64_t v7 = *(int *)(v6 + 20);
      uint64_t v8 = (char *)a1 + v7;
      uint64_t v9 = (char *)a2 + v7;
      *(_OWORD *)((char *)a1 + v7) = *(_OWORD *)((char *)a2 + v7);
      uint64_t v10 = type metadata accessor for ShazamEvent.Attributes(0);
      uint64_t v11 = *(int *)(v10 + 20);
      uint64_t v12 = &v8[v11];
      uint64_t v13 = &v9[v11];
      uint64_t v14 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
      uint64_t v15 = *(int *)(v10 + 24);
      uint64_t v16 = &v8[v15];
      uint64_t v17 = &v9[v15];
      uint64_t v18 = type metadata accessor for TimeZone();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
      *(_OWORD *)((char *)a1 + *(int *)(v6 + 24)) = *(_OWORD *)((char *)a2 + *(int *)(v6 + 24));
      uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (event: ShazamEvent, venues: [String : VenueElement]));
      *(void *)((char *)a1 + *(int *)(v19 + 48)) = *(void *)((char *)a2 + *(int *)(v19 + 48));
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t type metadata completion function for RazzmatazzAPI.CustomError()
{
  v2[4] = &unk_1004A8AC8;
  uint64_t result = type metadata accessor for ShazamEvent(319);
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    v2[5] = v2;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for ShazamEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v23 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (uint64_t *)((char *)a1 + v8);
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = *(uint64_t *)((char *)a2 + v8 + 8);
    void *v9 = *(uint64_t *)((char *)a2 + v8);
    v9[1] = v11;
    uint64_t v12 = type metadata accessor for ShazamEvent.Attributes(0);
    uint64_t v13 = *(int *)(v12 + 20);
    uint64_t v26 = &v10[v13];
    uint64_t v27 = (char *)v9 + v13;
    uint64_t v14 = type metadata accessor for Date();
    uint64_t v25 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v25(v27, v26, v14);
    uint64_t v15 = *(int *)(v12 + 24);
    uint64_t v16 = (char *)v9 + v15;
    uint64_t v17 = &v10[v15];
    uint64_t v18 = type metadata accessor for TimeZone();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
    uint64_t v19 = *(int *)(a3 + 24);
    uint64_t v20 = (uint64_t *)((char *)v4 + v19);
    uint64_t v21 = (uint64_t *)((char *)a2 + v19);
    uint64_t v22 = v21[1];
    void *v20 = *v21;
    v20[1] = v22;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for ShazamEvent(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  swift_bridgeObjectRelease();
  uint64_t v5 = type metadata accessor for ShazamEvent.Attributes(0);
  uint64_t v6 = v4 + *(int *)(v5 + 20);
  uint64_t v7 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  uint64_t v8 = v4 + *(int *)(v5 + 24);
  uint64_t v9 = type metadata accessor for TimeZone();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for ShazamEvent(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (void *)((char *)a1 + v6);
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = *(void *)((char *)a2 + v6 + 8);
  void *v7 = *(void *)((char *)a2 + v6);
  v7[1] = v9;
  uint64_t v10 = type metadata accessor for ShazamEvent.Attributes(0);
  uint64_t v11 = *(int *)(v10 + 20);
  uint64_t v23 = &v8[v11];
  uint64_t v24 = (char *)v7 + v11;
  uint64_t v12 = type metadata accessor for Date();
  uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13(v24, v23, v12);
  uint64_t v14 = *(int *)(v10 + 24);
  uint64_t v15 = (char *)v7 + v14;
  uint64_t v16 = &v8[v14];
  uint64_t v17 = type metadata accessor for TimeZone();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
  uint64_t v18 = *(int *)(a3 + 24);
  uint64_t v19 = (void *)((char *)a1 + v18);
  uint64_t v20 = (void *)((char *)a2 + v18);
  uint64_t v21 = v20[1];
  void *v19 = *v20;
  v19[1] = v21;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ShazamEvent(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (void *)((char *)a1 + v6);
  uint64_t v8 = (char *)a2 + v6;
  void *v7 = *(void *)((char *)a2 + v6);
  v7[1] = *(void *)((char *)a2 + v6 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v9 = type metadata accessor for ShazamEvent.Attributes(0);
  uint64_t v10 = *(int *)(v9 + 20);
  uint64_t v11 = (char *)v7 + v10;
  uint64_t v12 = &v8[v10];
  uint64_t v13 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  uint64_t v14 = *(int *)(v9 + 24);
  uint64_t v15 = (char *)v7 + v14;
  uint64_t v16 = &v8[v14];
  uint64_t v17 = type metadata accessor for TimeZone();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 24))(v15, v16, v17);
  uint64_t v18 = *(int *)(a3 + 24);
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  *(void *)((char *)a1 + v18) = *(void *)((char *)a2 + v18);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v19 + 1) = *((void *)v20 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for ShazamEvent(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  *(_OWORD *)((char *)a1 + v6) = *(_OWORD *)((char *)a2 + v6);
  uint64_t v9 = type metadata accessor for ShazamEvent.Attributes(0);
  uint64_t v10 = *(int *)(v9 + 20);
  uint64_t v11 = &v7[v10];
  uint64_t v12 = &v8[v10];
  uint64_t v13 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  uint64_t v14 = *(int *)(v9 + 24);
  uint64_t v15 = &v7[v14];
  uint64_t v16 = &v8[v14];
  uint64_t v17 = type metadata accessor for TimeZone();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

void *assignWithTake for ShazamEvent(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = *(void *)((char *)a2 + v7 + 8);
  *uint64_t v8 = *(void *)((char *)a2 + v7);
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = type metadata accessor for ShazamEvent.Attributes(0);
  uint64_t v12 = *(int *)(v11 + 20);
  uint64_t v13 = (char *)v8 + v12;
  uint64_t v14 = &v9[v12];
  uint64_t v15 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  uint64_t v16 = *(int *)(v11 + 24);
  uint64_t v17 = (char *)v8 + v16;
  uint64_t v18 = &v9[v16];
  uint64_t v19 = type metadata accessor for TimeZone();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 40))(v17, v18, v19);
  uint64_t v20 = *(int *)(a3 + 24);
  uint64_t v21 = (char *)a1 + v20;
  uint64_t v22 = (void *)((char *)a2 + v20);
  *(void *)((char *)a1 + v20) = *v22;
  swift_bridgeObjectRelease();
  *((void *)v21 + 1) = v22[1];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ShazamEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100366E00);
}

uint64_t sub_100366E00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for ShazamEvent.Attributes(0);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for ShazamEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100366EC4);
}

uint64_t sub_100366EC4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for ShazamEvent.Attributes(0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata completion function for ShazamEvent()
{
  uint64_t result = type metadata accessor for ShazamEvent.Attributes(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *type metadata accessor for Root()
{
  return &unk_100545370;
}

unsigned char *storeEnumTagSinglePayload for RazzmatazzController.Location.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1003670E8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

void *type metadata accessor for RazzmatazzController.Location.CodingKeys()
{
  return &unk_100545408;
}

void *specialized Root.init(from:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<Root.CodingKeys>);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin();
  unsigned int v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_project_boxed_opaque_existential_0Tm(a1, a1[3]);
  lazy protocol witness table accessor for type Root.CodingKeys and conformance Root.CodingKeys();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  }
  else
  {
    lazy protocol witness table accessor for type Resources and conformance Resources();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    uint64_t v7 = v9;
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  }
  return v7;
}

unint64_t lazy protocol witness table accessor for type Root.CodingKeys and conformance Root.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type Root.CodingKeys and conformance Root.CodingKeys;
  if (!lazy protocol witness table cache variable for type Root.CodingKeys and conformance Root.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Root.CodingKeys and conformance Root.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type Root.CodingKeys and conformance Root.CodingKeys;
  if (!lazy protocol witness table cache variable for type Root.CodingKeys and conformance Root.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Root.CodingKeys and conformance Root.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type Root.CodingKeys and conformance Root.CodingKeys;
  if (!lazy protocol witness table cache variable for type Root.CodingKeys and conformance Root.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Root.CodingKeys and conformance Root.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type Root.CodingKeys and conformance Root.CodingKeys;
  if (!lazy protocol witness table cache variable for type Root.CodingKeys and conformance Root.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Root.CodingKeys and conformance Root.CodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type Resources and conformance Resources()
{
  unint64_t result = lazy protocol witness table cache variable for type Resources and conformance Resources;
  if (!lazy protocol witness table cache variable for type Resources and conformance Resources)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Resources and conformance Resources);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ShazamEvent.Attributes.CodingKeys and conformance ShazamEvent.Attributes.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type ShazamEvent.Attributes.CodingKeys and conformance ShazamEvent.Attributes.CodingKeys;
  if (!lazy protocol witness table cache variable for type ShazamEvent.Attributes.CodingKeys and conformance ShazamEvent.Attributes.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ShazamEvent.Attributes.CodingKeys and conformance ShazamEvent.Attributes.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ShazamEvent.Attributes.CodingKeys and conformance ShazamEvent.Attributes.CodingKeys;
  if (!lazy protocol witness table cache variable for type ShazamEvent.Attributes.CodingKeys and conformance ShazamEvent.Attributes.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ShazamEvent.Attributes.CodingKeys and conformance ShazamEvent.Attributes.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ShazamEvent.Attributes.CodingKeys and conformance ShazamEvent.Attributes.CodingKeys;
  if (!lazy protocol witness table cache variable for type ShazamEvent.Attributes.CodingKeys and conformance ShazamEvent.Attributes.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ShazamEvent.Attributes.CodingKeys and conformance ShazamEvent.Attributes.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ShazamEvent.Attributes.CodingKeys and conformance ShazamEvent.Attributes.CodingKeys;
  if (!lazy protocol witness table cache variable for type ShazamEvent.Attributes.CodingKeys and conformance ShazamEvent.Attributes.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ShazamEvent.Attributes.CodingKeys and conformance ShazamEvent.Attributes.CodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ShazamEvent.Attributes.Time and conformance ShazamEvent.Attributes.Time()
{
  unint64_t result = lazy protocol witness table cache variable for type ShazamEvent.Attributes.Time and conformance ShazamEvent.Attributes.Time;
  if (!lazy protocol witness table cache variable for type ShazamEvent.Attributes.Time and conformance ShazamEvent.Attributes.Time)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ShazamEvent.Attributes.Time and conformance ShazamEvent.Attributes.Time);
  }
  return result;
}

uint64_t outlined init with copy of ShazamEvent(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t specialized Resources.init(from:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<Resources.CodingKeys>);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin();
  unsigned int v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a1[3];
  __swift_project_boxed_opaque_existential_0Tm(a1, v7);
  lazy protocol witness table accessor for type Resources.CodingKeys and conformance Resources.CodingKeys();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String : ShazamEvent]);
    HIBYTE(v9) = 0;
    lazy protocol witness table accessor for type [String : ShazamEvent] and conformance <> [A : B]();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v7 = v10;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String : VenueElement]);
    HIBYTE(v9) = 1;
    lazy protocol witness table accessor for type [String : VenueElement] and conformance <> [A : B]();
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v7;
}

uint64_t specialized ShazamEvent.Attributes.Time.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6D69547472617473 && a2 == 0xE900000000000065;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656E6F7A656D6974 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t specialized ShazamEvent.Attributes.Time.init(from:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<ShazamEvent.Attributes.Time.CodingKeys>);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin();
  char v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a1[4];
  __swift_project_boxed_opaque_existential_0Tm(a1, a1[3]);
  lazy protocol witness table accessor for type ShazamEvent.Attributes.Time.CodingKeys and conformance ShazamEvent.Attributes.Time.CodingKeys();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  }
  else
  {
    char v11 = 0;
    uint64_t v7 = KeyedDecodingContainer.decode(_:forKey:)();
    char v10 = 1;
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decode(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v7;
}

void *specialized ShazamEvent.Relationships.init(from:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<ShazamEvent.Relationships.CodingKeys>);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (void *)a1[3];
  __swift_project_boxed_opaque_existential_0Tm(a1, (uint64_t)v8);
  lazy protocol witness table accessor for type ShazamEvent.Relationships.CodingKeys and conformance ShazamEvent.Relationships.CodingKeys();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  }
  else
  {
    char v34 = 0;
    unint64_t v9 = lazy protocol witness table accessor for type ShazamEvent.Relationships.Data and conformance ShazamEvent.Relationships.Data();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    char v11 = v35;
    int64_t v12 = v35[2];
    uint64_t v33 = v7;
    if (v12)
    {
      v28[1] = v9;
      uint64_t v30 = v5;
      uint64_t v31 = v4;
      uint64_t v32 = 0;
      uint64_t v35 = _swiftEmptyArrayStorage;
      uint64_t v29 = v11;
      _ss15ContiguousArrayV16_createNewBuffer14bufferIsUnique15minimumCapacity13growForAppendySb_SiSbtFSS_Tg5_1(0, v12, 0);
      uint64_t v8 = v35;
      uint64_t v13 = v29 + 5;
      do
      {
        uint64_t v14 = *(v13 - 1);
        uint64_t v15 = *v13;
        uint64_t v35 = v8;
        unint64_t v17 = v8[2];
        unint64_t v16 = v8[3];
        swift_bridgeObjectRetain();
        if (v17 >= v16 >> 1)
        {
          _ss15ContiguousArrayV16_createNewBuffer14bufferIsUnique15minimumCapacity13growForAppendySb_SiSbtFSS_Tg5_1((char *)(v16 > 1), v17 + 1, 1);
          uint64_t v8 = v35;
        }
        v13 += 2;
        _OWORD v8[2] = v17 + 1;
        uint64_t v18 = &v8[2 * v17];
        v18[4] = v14;
        v18[5] = v15;
        --v12;
      }
      while (v12);
      swift_bridgeObjectRelease();
      uint64_t v4 = v31;
      uint64_t v2 = v32;
      uint64_t v5 = v30;
      uint64_t v7 = v33;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v8 = _swiftEmptyArrayStorage;
    }
    char v34 = 1;
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    if (v2)
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v19 = v35;
      int64_t v20 = v35[2];
      if (v20)
      {
        uint64_t v30 = v5;
        uint64_t v31 = v4;
        uint64_t v32 = 0;
        uint64_t v35 = _swiftEmptyArrayStorage;
        _ss15ContiguousArrayV16_createNewBuffer14bufferIsUnique15minimumCapacity13growForAppendySb_SiSbtFSS_Tg5_1(0, v20, 0);
        uint64_t v21 = v35;
        uint64_t v29 = v19;
        uint64_t v22 = v19 + 5;
        do
        {
          uint64_t v23 = *(v22 - 1);
          uint64_t v24 = *v22;
          uint64_t v35 = v21;
          unint64_t v26 = v21[2];
          unint64_t v25 = v21[3];
          swift_bridgeObjectRetain();
          if (v26 >= v25 >> 1)
          {
            _ss15ContiguousArrayV16_createNewBuffer14bufferIsUnique15minimumCapacity13growForAppendySb_SiSbtFSS_Tg5_1((char *)(v25 > 1), v26 + 1, 1);
            uint64_t v21 = v35;
          }
          v22 += 2;
          v21[2] = v26 + 1;
          uint64_t v27 = &v21[2 * v26];
          v27[4] = v23;
          v27[5] = v24;
          --v20;
        }
        while (v20);
        swift_bridgeObjectRelease();
        uint64_t v4 = v31;
        uint64_t v5 = v30;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      (*(void (**)(char *, uint64_t))(v5 + 8))(v33, v4);
      swift_bridgeObjectRetain();
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  return v8;
}

void *specialized ShazamEvent.Relationships.Data.init(from:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<ShazamEvent.Relationships.Data.CodingKeys>);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin();
  uint64_t v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_project_boxed_opaque_existential_0Tm(a1, a1[3]);
  lazy protocol witness table accessor for type ShazamEvent.Relationships.Data.CodingKeys and conformance ShazamEvent.Relationships.Data.CodingKeys();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [ShazamEvent.Relationships.Data.ID]);
    lazy protocol witness table accessor for type MusicItemID? and conformance <A> A?(&lazy protocol witness table cache variable for type [ShazamEvent.Relationships.Data.ID] and conformance <A> [A], &demangling cache variable for type metadata for [ShazamEvent.Relationships.Data.ID], (void (*)(void))lazy protocol witness table accessor for type ShazamEvent.Relationships.Data.ID and conformance ShazamEvent.Relationships.Data.ID);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    uint64_t v7 = (void *)v9[1];
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  }
  return v7;
}

uint64_t specialized ShazamEvent.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7475626972747461 && a2 == 0xEA00000000007365 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E6F6974616C6572 && a2 == 0xED00007370696873)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

unint64_t specialized VenueElement.Attributes.CodingKeys.init(rawValue:)(Swift::String string)
{
  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of VenueElement.Attributes.CodingKeys.init(rawValue:), v2);
  swift_bridgeObjectRelease();
  if (v3 >= 3) {
    return 3;
  }
  else {
    return v3;
  }
}

uint64_t specialized VenueElement.Attributes.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<VenueElement.Attributes.CodingKeys>);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_0Tm(a1, a1[3]);
  lazy protocol witness table accessor for type VenueElement.Attributes.CodingKeys and conformance VenueElement.Attributes.CodingKeys();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  }
  LOBYTE(v34) = 0;
  uint64_t v9 = KeyedDecodingContainer.decode(_:forKey:)();
  uint64_t v11 = v10;
  uint64_t v33 = v9;
  char v42 = 1;
  lazy protocol witness table accessor for type VenueElement.Attributes.StructuredAddress and conformance VenueElement.Attributes.StructuredAddress();
  swift_bridgeObjectRetain();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  double v12 = v35;
  double v27 = v34;
  uint64_t v28 = v11;
  uint64_t v13 = v37;
  uint64_t v14 = v39;
  uint64_t v25 = v38;
  uint64_t v26 = v36;
  uint64_t v24 = v40;
  uint64_t v32 = v41;
  char v42 = 2;
  lazy protocol witness table accessor for type VenueElement.Attributes.Geo and conformance VenueElement.Attributes.Geo();
  double v31 = v12;
  swift_bridgeObjectRetain();
  uint64_t v30 = v13;
  swift_bridgeObjectRetain();
  uint64_t v29 = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  id v15 = [objc_allocWithZone((Class)CLLocation) initWithLatitude:v34 longitude:v35];
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v16 = v28;
  swift_bridgeObjectRetain();
  id v17 = v15;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);

  uint64_t v18 = v32;
  swift_bridgeObjectRelease();
  uint64_t v19 = v29;
  swift_bridgeObjectRelease();
  uint64_t v20 = v30;
  swift_bridgeObjectRelease();
  double v21 = v31;
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v33;
  a2[1] = v16;
  *((double *)a2 + 2) = v27;
  *((double *)a2 + 3) = v21;
  a2[4] = v26;
  a2[5] = v20;
  a2[6] = v25;
  a2[7] = v19;
  a2[8] = v24;
  a2[9] = v18;
  a2[10] = (uint64_t)v17;
  return result;
}

uint64_t specialized VenueElement.Attributes.StructuredAddress.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000011 && a2 == 0x8000000100474670)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t specialized VenueElement.Attributes.StructuredAddress.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<VenueElement.Attributes.StructuredAddress.CodingKeys>);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_0Tm(a1, a1[3]);
  lazy protocol witness table accessor for type VenueElement.Attributes.StructuredAddress.CodingKeys and conformance VenueElement.Attributes.StructuredAddress.CodingKeys();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  }
  lazy protocol witness table accessor for type Razzmatazz.Venue.Address and conformance Razzmatazz.Venue.Address();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  long long v14 = v17;
  long long v15 = v16;
  long long v13 = v18;
  uint64_t v9 = v19;
  uint64_t v10 = v20;
  uint64_t result = __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  long long v12 = v14;
  *(_OWORD *)a2 = v15;
  *(_OWORD *)(a2 + 16) = v12;
  *(_OWORD *)(a2 + 32) = v13;
  *(void *)(a2 + 48) = v9;
  *(void *)(a2 + 56) = v10;
  return result;
}

uint64_t specialized VenueElement.Attributes.Geo.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 7627116 && a2 == 0xE300000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 6778476 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

double specialized VenueElement.Attributes.Geo.init(from:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<VenueElement.Attributes.Geo.CodingKeys>);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_0Tm(a1, a1[3]);
  lazy protocol witness table accessor for type VenueElement.Attributes.Geo.CodingKeys and conformance VenueElement.Attributes.Geo.CodingKeys();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (!v1)
  {
    v10[15] = 0;
    KeyedDecodingContainer.decode(_:forKey:)();
    double v2 = v8;
    v10[14] = 1;
    KeyedDecodingContainer.decode(_:forKey:)();
    (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
  }
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  return v2;
}

uint64_t specialized VenueElement.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7475626972747461 && a2 == 0xEA00000000007365)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t specialized VenueElement.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<VenueElement.CodingKeys>);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  double v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_0Tm(a1, a1[3]);
  lazy protocol witness table accessor for type VenueElement.CodingKeys and conformance VenueElement.CodingKeys();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  }
  LOBYTE(v29) = 0;
  uint64_t v9 = KeyedDecodingContainer.decode(_:forKey:)();
  uint64_t v11 = v10;
  char v40 = 1;
  lazy protocol witness table accessor for type VenueElement.Attributes and conformance VenueElement.Attributes();
  swift_bridgeObjectRetain();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v26 = v31;
  uint64_t v27 = v29;
  uint64_t v21 = v32;
  uint64_t v22 = v30;
  uint64_t v12 = v34;
  uint64_t v24 = v35;
  uint64_t v25 = v33;
  uint64_t v28 = v36;
  uint64_t v13 = v38;
  uint64_t v23 = v37;
  long long v14 = v39;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v15 = v14;
  swift_bridgeObjectRetain();
  uint64_t v16 = v21;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v17 = v22;
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v9;
  a2[1] = v11;
  a2[2] = v27;
  a2[3] = v17;
  a2[4] = v26;
  a2[5] = v16;
  a2[6] = v25;
  a2[7] = v12;
  uint64_t v19 = v28;
  a2[8] = v24;
  a2[9] = v19;
  a2[10] = v23;
  a2[11] = v13;
  a2[12] = (uint64_t)v15;
  return result;
}

unint64_t lazy protocol witness table accessor for type VenueElement.CodingKeys and conformance VenueElement.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type VenueElement.CodingKeys and conformance VenueElement.CodingKeys;
  if (!lazy protocol witness table cache variable for type VenueElement.CodingKeys and conformance VenueElement.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type VenueElement.CodingKeys and conformance VenueElement.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type VenueElement.CodingKeys and conformance VenueElement.CodingKeys;
  if (!lazy protocol witness table cache variable for type VenueElement.CodingKeys and conformance VenueElement.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type VenueElement.CodingKeys and conformance VenueElement.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type VenueElement.CodingKeys and conformance VenueElement.CodingKeys;
  if (!lazy protocol witness table cache variable for type VenueElement.CodingKeys and conformance VenueElement.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type VenueElement.CodingKeys and conformance VenueElement.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type VenueElement.CodingKeys and conformance VenueElement.CodingKeys;
  if (!lazy protocol witness table cache variable for type VenueElement.CodingKeys and conformance VenueElement.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type VenueElement.CodingKeys and conformance VenueElement.CodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type VenueElement.Attributes and conformance VenueElement.Attributes()
{
  unint64_t result = lazy protocol witness table cache variable for type VenueElement.Attributes and conformance VenueElement.Attributes;
  if (!lazy protocol witness table cache variable for type VenueElement.Attributes and conformance VenueElement.Attributes)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type VenueElement.Attributes and conformance VenueElement.Attributes);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ShazamEvent.CodingKeys and conformance ShazamEvent.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type ShazamEvent.CodingKeys and conformance ShazamEvent.CodingKeys;
  if (!lazy protocol witness table cache variable for type ShazamEvent.CodingKeys and conformance ShazamEvent.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ShazamEvent.CodingKeys and conformance ShazamEvent.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ShazamEvent.CodingKeys and conformance ShazamEvent.CodingKeys;
  if (!lazy protocol witness table cache variable for type ShazamEvent.CodingKeys and conformance ShazamEvent.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ShazamEvent.CodingKeys and conformance ShazamEvent.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ShazamEvent.CodingKeys and conformance ShazamEvent.CodingKeys;
  if (!lazy protocol witness table cache variable for type ShazamEvent.CodingKeys and conformance ShazamEvent.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ShazamEvent.CodingKeys and conformance ShazamEvent.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ShazamEvent.CodingKeys and conformance ShazamEvent.CodingKeys;
  if (!lazy protocol witness table cache variable for type ShazamEvent.CodingKeys and conformance ShazamEvent.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ShazamEvent.CodingKeys and conformance ShazamEvent.CodingKeys);
  }
  return result;
}

uint64_t outlined init with take of Razzmatazz(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t lazy protocol witness table accessor for type ShazamEvent.Relationships and conformance ShazamEvent.Relationships()
{
  unint64_t result = lazy protocol witness table cache variable for type ShazamEvent.Relationships and conformance ShazamEvent.Relationships;
  if (!lazy protocol witness table cache variable for type ShazamEvent.Relationships and conformance ShazamEvent.Relationships)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ShazamEvent.Relationships and conformance ShazamEvent.Relationships);
  }
  return result;
}

void *type metadata accessor for ShazamEvent.CodingKeys()
{
  return &unk_100545498;
}

void *type metadata accessor for VenueElement.CodingKeys()
{
  return &unk_100545528;
}

void *type metadata accessor for ShazamEvent.Attributes.Time()
{
  return &unk_1005455A0;
}

void *type metadata accessor for ShazamEvent.Attributes.CodingKeys()
{
  return &unk_100545638;
}

void *type metadata accessor for Root.CodingKeys()
{
  return &unk_1005456C8;
}

void destroy for VenueElement.Attributes(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void **)(a1 + 80);
}

void *initializeWithCopy for VenueElement.Attributes(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  uint64_t v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  double v8 = (void *)a2[10];
  a1[10] = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v9 = v8;
  return a1;
}

void *assignWithCopy for VenueElement.Attributes(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)a2[10];
  uint64_t v5 = (void *)a1[10];
  a1[10] = v4;
  id v6 = v4;

  return a1;
}

uint64_t assignWithTake for VenueElement.Attributes(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  double v8 = *(void **)(a1 + 80);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);

  return a1;
}

void *type metadata accessor for VenueElement.Attributes()
{
  return &unk_100545740;
}

void *type metadata accessor for ShazamEvent.Relationships()
{
  return &unk_1005457C8;
}

void *type metadata accessor for Resources()
{
  return &unk_100545848;
}

unint64_t lazy protocol witness table accessor for type Resources.CodingKeys and conformance Resources.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type Resources.CodingKeys and conformance Resources.CodingKeys;
  if (!lazy protocol witness table cache variable for type Resources.CodingKeys and conformance Resources.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Resources.CodingKeys and conformance Resources.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type Resources.CodingKeys and conformance Resources.CodingKeys;
  if (!lazy protocol witness table cache variable for type Resources.CodingKeys and conformance Resources.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Resources.CodingKeys and conformance Resources.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type Resources.CodingKeys and conformance Resources.CodingKeys;
  if (!lazy protocol witness table cache variable for type Resources.CodingKeys and conformance Resources.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Resources.CodingKeys and conformance Resources.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type Resources.CodingKeys and conformance Resources.CodingKeys;
  if (!lazy protocol witness table cache variable for type Resources.CodingKeys and conformance Resources.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Resources.CodingKeys and conformance Resources.CodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type VenueElement and conformance VenueElement()
{
  unint64_t result = lazy protocol witness table cache variable for type VenueElement and conformance VenueElement;
  if (!lazy protocol witness table cache variable for type VenueElement and conformance VenueElement)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type VenueElement and conformance VenueElement);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ShazamEvent.Attributes.Time.CodingKeys and conformance ShazamEvent.Attributes.Time.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type ShazamEvent.Attributes.Time.CodingKeys and conformance ShazamEvent.Attributes.Time.CodingKeys;
  if (!lazy protocol witness table cache variable for type ShazamEvent.Attributes.Time.CodingKeys and conformance ShazamEvent.Attributes.Time.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ShazamEvent.Attributes.Time.CodingKeys and conformance ShazamEvent.Attributes.Time.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ShazamEvent.Attributes.Time.CodingKeys and conformance ShazamEvent.Attributes.Time.CodingKeys;
  if (!lazy protocol witness table cache variable for type ShazamEvent.Attributes.Time.CodingKeys and conformance ShazamEvent.Attributes.Time.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ShazamEvent.Attributes.Time.CodingKeys and conformance ShazamEvent.Attributes.Time.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ShazamEvent.Attributes.Time.CodingKeys and conformance ShazamEvent.Attributes.Time.CodingKeys;
  if (!lazy protocol witness table cache variable for type ShazamEvent.Attributes.Time.CodingKeys and conformance ShazamEvent.Attributes.Time.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ShazamEvent.Attributes.Time.CodingKeys and conformance ShazamEvent.Attributes.Time.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ShazamEvent.Attributes.Time.CodingKeys and conformance ShazamEvent.Attributes.Time.CodingKeys;
  if (!lazy protocol witness table cache variable for type ShazamEvent.Attributes.Time.CodingKeys and conformance ShazamEvent.Attributes.Time.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ShazamEvent.Attributes.Time.CodingKeys and conformance ShazamEvent.Attributes.Time.CodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type VenueElement.Attributes.CodingKeys and conformance VenueElement.Attributes.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type VenueElement.Attributes.CodingKeys and conformance VenueElement.Attributes.CodingKeys;
  if (!lazy protocol witness table cache variable for type VenueElement.Attributes.CodingKeys and conformance VenueElement.Attributes.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type VenueElement.Attributes.CodingKeys and conformance VenueElement.Attributes.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type VenueElement.Attributes.CodingKeys and conformance VenueElement.Attributes.CodingKeys;
  if (!lazy protocol witness table cache variable for type VenueElement.Attributes.CodingKeys and conformance VenueElement.Attributes.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type VenueElement.Attributes.CodingKeys and conformance VenueElement.Attributes.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type VenueElement.Attributes.CodingKeys and conformance VenueElement.Attributes.CodingKeys;
  if (!lazy protocol witness table cache variable for type VenueElement.Attributes.CodingKeys and conformance VenueElement.Attributes.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type VenueElement.Attributes.CodingKeys and conformance VenueElement.Attributes.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type VenueElement.Attributes.CodingKeys and conformance VenueElement.Attributes.CodingKeys;
  if (!lazy protocol witness table cache variable for type VenueElement.Attributes.CodingKeys and conformance VenueElement.Attributes.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type VenueElement.Attributes.CodingKeys and conformance VenueElement.Attributes.CodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type VenueElement.Attributes.StructuredAddress and conformance VenueElement.Attributes.StructuredAddress()
{
  unint64_t result = lazy protocol witness table cache variable for type VenueElement.Attributes.StructuredAddress and conformance VenueElement.Attributes.StructuredAddress;
  if (!lazy protocol witness table cache variable for type VenueElement.Attributes.StructuredAddress and conformance VenueElement.Attributes.StructuredAddress)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type VenueElement.Attributes.StructuredAddress and conformance VenueElement.Attributes.StructuredAddress);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type VenueElement.Attributes.Geo and conformance VenueElement.Attributes.Geo()
{
  unint64_t result = lazy protocol witness table cache variable for type VenueElement.Attributes.Geo and conformance VenueElement.Attributes.Geo;
  if (!lazy protocol witness table cache variable for type VenueElement.Attributes.Geo and conformance VenueElement.Attributes.Geo)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type VenueElement.Attributes.Geo and conformance VenueElement.Attributes.Geo);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ShazamEvent.Relationships.CodingKeys and conformance ShazamEvent.Relationships.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type ShazamEvent.Relationships.CodingKeys and conformance ShazamEvent.Relationships.CodingKeys;
  if (!lazy protocol witness table cache variable for type ShazamEvent.Relationships.CodingKeys and conformance ShazamEvent.Relationships.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ShazamEvent.Relationships.CodingKeys and conformance ShazamEvent.Relationships.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ShazamEvent.Relationships.CodingKeys and conformance ShazamEvent.Relationships.CodingKeys;
  if (!lazy protocol witness table cache variable for type ShazamEvent.Relationships.CodingKeys and conformance ShazamEvent.Relationships.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ShazamEvent.Relationships.CodingKeys and conformance ShazamEvent.Relationships.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ShazamEvent.Relationships.CodingKeys and conformance ShazamEvent.Relationships.CodingKeys;
  if (!lazy protocol witness table cache variable for type ShazamEvent.Relationships.CodingKeys and conformance ShazamEvent.Relationships.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ShazamEvent.Relationships.CodingKeys and conformance ShazamEvent.Relationships.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ShazamEvent.Relationships.CodingKeys and conformance ShazamEvent.Relationships.CodingKeys;
  if (!lazy protocol witness table cache variable for type ShazamEvent.Relationships.CodingKeys and conformance ShazamEvent.Relationships.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ShazamEvent.Relationships.CodingKeys and conformance ShazamEvent.Relationships.CodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ShazamEvent.Relationships.Data and conformance ShazamEvent.Relationships.Data()
{
  unint64_t result = lazy protocol witness table cache variable for type ShazamEvent.Relationships.Data and conformance ShazamEvent.Relationships.Data;
  if (!lazy protocol witness table cache variable for type ShazamEvent.Relationships.Data and conformance ShazamEvent.Relationships.Data)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ShazamEvent.Relationships.Data and conformance ShazamEvent.Relationships.Data);
  }
  return result;
}

void *type metadata accessor for ShazamEvent.Relationships.Data()
{
  return &unk_100545870;
}

void *type metadata accessor for ShazamEvent.Relationships.CodingKeys()
{
  return &unk_100545908;
}

void *type metadata accessor for VenueElement.Attributes.Geo()
{
  return &unk_100545980;
}

void *type metadata accessor for VenueElement.Attributes.StructuredAddress()
{
  return &unk_100545A00;
}

unsigned char *storeEnumTagSinglePayload for ShazamEvent.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100369B48);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

void *type metadata accessor for VenueElement.Attributes.CodingKeys()
{
  return &unk_100545A98;
}

void *type metadata accessor for ShazamEvent.Attributes.Time.CodingKeys()
{
  return &unk_100545B28;
}

void *type metadata accessor for Resources.CodingKeys()
{
  return &unk_100545BB8;
}

unint64_t lazy protocol witness table accessor for type VenueElement.Attributes.StructuredAddress.CodingKeys and conformance VenueElement.Attributes.StructuredAddress.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type VenueElement.Attributes.StructuredAddress.CodingKeys and conformance VenueElement.Attributes.StructuredAddress.CodingKeys;
  if (!lazy protocol witness table cache variable for type VenueElement.Attributes.StructuredAddress.CodingKeys and conformance VenueElement.Attributes.StructuredAddress.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type VenueElement.Attributes.StructuredAddress.CodingKeys and conformance VenueElement.Attributes.StructuredAddress.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type VenueElement.Attributes.StructuredAddress.CodingKeys and conformance VenueElement.Attributes.StructuredAddress.CodingKeys;
  if (!lazy protocol witness table cache variable for type VenueElement.Attributes.StructuredAddress.CodingKeys and conformance VenueElement.Attributes.StructuredAddress.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type VenueElement.Attributes.StructuredAddress.CodingKeys and conformance VenueElement.Attributes.StructuredAddress.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type VenueElement.Attributes.StructuredAddress.CodingKeys and conformance VenueElement.Attributes.StructuredAddress.CodingKeys;
  if (!lazy protocol witness table cache variable for type VenueElement.Attributes.StructuredAddress.CodingKeys and conformance VenueElement.Attributes.StructuredAddress.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type VenueElement.Attributes.StructuredAddress.CodingKeys and conformance VenueElement.Attributes.StructuredAddress.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type VenueElement.Attributes.StructuredAddress.CodingKeys and conformance VenueElement.Attributes.StructuredAddress.CodingKeys;
  if (!lazy protocol witness table cache variable for type VenueElement.Attributes.StructuredAddress.CodingKeys and conformance VenueElement.Attributes.StructuredAddress.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type VenueElement.Attributes.StructuredAddress.CodingKeys and conformance VenueElement.Attributes.StructuredAddress.CodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type VenueElement.Attributes.Geo.CodingKeys and conformance VenueElement.Attributes.Geo.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type VenueElement.Attributes.Geo.CodingKeys and conformance VenueElement.Attributes.Geo.CodingKeys;
  if (!lazy protocol witness table cache variable for type VenueElement.Attributes.Geo.CodingKeys and conformance VenueElement.Attributes.Geo.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type VenueElement.Attributes.Geo.CodingKeys and conformance VenueElement.Attributes.Geo.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type VenueElement.Attributes.Geo.CodingKeys and conformance VenueElement.Attributes.Geo.CodingKeys;
  if (!lazy protocol witness table cache variable for type VenueElement.Attributes.Geo.CodingKeys and conformance VenueElement.Attributes.Geo.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type VenueElement.Attributes.Geo.CodingKeys and conformance VenueElement.Attributes.Geo.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type VenueElement.Attributes.Geo.CodingKeys and conformance VenueElement.Attributes.Geo.CodingKeys;
  if (!lazy protocol witness table cache variable for type VenueElement.Attributes.Geo.CodingKeys and conformance VenueElement.Attributes.Geo.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type VenueElement.Attributes.Geo.CodingKeys and conformance VenueElement.Attributes.Geo.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type VenueElement.Attributes.Geo.CodingKeys and conformance VenueElement.Attributes.Geo.CodingKeys;
  if (!lazy protocol witness table cache variable for type VenueElement.Attributes.Geo.CodingKeys and conformance VenueElement.Attributes.Geo.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type VenueElement.Attributes.Geo.CodingKeys and conformance VenueElement.Attributes.Geo.CodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ShazamEvent.Relationships.Data.CodingKeys and conformance ShazamEvent.Relationships.Data.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type ShazamEvent.Relationships.Data.CodingKeys and conformance ShazamEvent.Relationships.Data.CodingKeys;
  if (!lazy protocol witness table cache variable for type ShazamEvent.Relationships.Data.CodingKeys and conformance ShazamEvent.Relationships.Data.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ShazamEvent.Relationships.Data.CodingKeys and conformance ShazamEvent.Relationships.Data.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ShazamEvent.Relationships.Data.CodingKeys and conformance ShazamEvent.Relationships.Data.CodingKeys;
  if (!lazy protocol witness table cache variable for type ShazamEvent.Relationships.Data.CodingKeys and conformance ShazamEvent.Relationships.Data.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ShazamEvent.Relationships.Data.CodingKeys and conformance ShazamEvent.Relationships.Data.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ShazamEvent.Relationships.Data.CodingKeys and conformance ShazamEvent.Relationships.Data.CodingKeys;
  if (!lazy protocol witness table cache variable for type ShazamEvent.Relationships.Data.CodingKeys and conformance ShazamEvent.Relationships.Data.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ShazamEvent.Relationships.Data.CodingKeys and conformance ShazamEvent.Relationships.Data.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ShazamEvent.Relationships.Data.CodingKeys and conformance ShazamEvent.Relationships.Data.CodingKeys;
  if (!lazy protocol witness table cache variable for type ShazamEvent.Relationships.Data.CodingKeys and conformance ShazamEvent.Relationships.Data.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ShazamEvent.Relationships.Data.CodingKeys and conformance ShazamEvent.Relationships.Data.CodingKeys);
  }
  return result;
}

uint64_t lazy protocol witness table accessor for type MusicItemID? and conformance <A> A?(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ShazamEvent.Relationships.Data.ID and conformance ShazamEvent.Relationships.Data.ID()
{
  unint64_t result = lazy protocol witness table cache variable for type ShazamEvent.Relationships.Data.ID and conformance ShazamEvent.Relationships.Data.ID;
  if (!lazy protocol witness table cache variable for type ShazamEvent.Relationships.Data.ID and conformance ShazamEvent.Relationships.Data.ID)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ShazamEvent.Relationships.Data.ID and conformance ShazamEvent.Relationships.Data.ID);
  }
  return result;
}

void *type metadata accessor for ShazamEvent.Relationships.Data.CodingKeys()
{
  return &unk_100545C48;
}

unsigned char *storeEnumTagSinglePayload for VenueElement.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10036A2ACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

void *type metadata accessor for VenueElement.Attributes.Geo.CodingKeys()
{
  return &unk_100545CD8;
}

void *type metadata accessor for VenueElement.Attributes.StructuredAddress.CodingKeys()
{
  return &unk_100545D68;
}

void *type metadata accessor for ShazamEvent.Relationships.Data.ID()
{
  return &unk_100545DE0;
}

unint64_t lazy protocol witness table accessor for type ShazamEvent.Relationships.Data.ID.CodingKeys and conformance ShazamEvent.Relationships.Data.ID.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type ShazamEvent.Relationships.Data.ID.CodingKeys and conformance ShazamEvent.Relationships.Data.ID.CodingKeys;
  if (!lazy protocol witness table cache variable for type ShazamEvent.Relationships.Data.ID.CodingKeys and conformance ShazamEvent.Relationships.Data.ID.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ShazamEvent.Relationships.Data.ID.CodingKeys and conformance ShazamEvent.Relationships.Data.ID.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ShazamEvent.Relationships.Data.ID.CodingKeys and conformance ShazamEvent.Relationships.Data.ID.CodingKeys;
  if (!lazy protocol witness table cache variable for type ShazamEvent.Relationships.Data.ID.CodingKeys and conformance ShazamEvent.Relationships.Data.ID.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ShazamEvent.Relationships.Data.ID.CodingKeys and conformance ShazamEvent.Relationships.Data.ID.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ShazamEvent.Relationships.Data.ID.CodingKeys and conformance ShazamEvent.Relationships.Data.ID.CodingKeys;
  if (!lazy protocol witness table cache variable for type ShazamEvent.Relationships.Data.ID.CodingKeys and conformance ShazamEvent.Relationships.Data.ID.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ShazamEvent.Relationships.Data.ID.CodingKeys and conformance ShazamEvent.Relationships.Data.ID.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ShazamEvent.Relationships.Data.ID.CodingKeys and conformance ShazamEvent.Relationships.Data.ID.CodingKeys;
  if (!lazy protocol witness table cache variable for type ShazamEvent.Relationships.Data.ID.CodingKeys and conformance ShazamEvent.Relationships.Data.ID.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ShazamEvent.Relationships.Data.ID.CodingKeys and conformance ShazamEvent.Relationships.Data.ID.CodingKeys);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for Root.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x10036A70CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

void *type metadata accessor for ShazamEvent.Relationships.Data.ID.CodingKeys()
{
  return &unk_100545E78;
}

uint64_t RazzmatazzDetailView.init(razzmatazz:noticePresenter:navigateToArtistHandler:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  _s11MusicCoreUI10RazzmatazzVWObTm_0(a1, a5, type metadata accessor for Razzmatazz);
  uint64_t result = type metadata accessor for RazzmatazzDetailView();
  *(void *)(a5 + *(int *)(result + 20)) = a2;
  uint64_t v10 = (void *)(a5 + *(int *)(result + 24));
  *uint64_t v10 = a3;
  v10[1] = a4;
  return result;
}

uint64_t type metadata accessor for RazzmatazzDetailView()
{
  uint64_t result = type metadata singleton initialization cache for RazzmatazzDetailView;
  if (!type metadata singleton initialization cache for RazzmatazzDetailView) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t RazzmatazzDetailView.body.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TupleView<(Section<EmptyView, Text, EmptyView>?, Section<Text, VStack<TupleView<(Text, Text, ModifiedContent<Spacer, _FrameLayout>, Button<<<opaque return type of View.labelStyle<A>(_:)>>.0>)>>, EmptyView>, Section<Text, HStack<TupleView<(ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, CornerRadiusModifier>, BorderViewModifier>, Text, TupleView<(Spacer, ListChevron)>?)>>, EmptyView>, Section<Text, <<opaque return type of View.onTapGesture(count:perform:)>>.0, EmptyView>)>);
  lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type TupleView<(Section<EmptyView, Text, EmptyView>?, Section<Text, VStack<TupleView<(Text, Text, ModifiedContent<Spacer, _FrameLayout>, Button<<<opaque return type of View.labelStyle<A>(_:)>>.0>)>>, EmptyView>, Section<Text, HStack<TupleView<(ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, CornerRadiusModifier>, BorderViewModifier>, Text, TupleView<(Spacer, ListChevron)>?)>>, EmptyView>, Section<Text, <<opaque return type of View.onTapGesture(count:perform:)>>.0, EmptyView>)> and conformance TupleView<A>, &demangling cache variable for type metadata for TupleView<(Section<EmptyView, Text, EmptyView>?, Section<Text, VStack<TupleView<(Text, Text, ModifiedContent<Spacer, _FrameLayout>, Button<<<opaque return type of View.labelStyle<A>(_:)>>.0>)>>, EmptyView>, Section<Text, HStack<TupleView<(ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, CornerRadiusModifier>, BorderViewModifier>, Text, TupleView<(Spacer, ListChevron)>?)>>, EmptyView>, Section<Text, <<opaque return type of View.onTapGesture(count:perform:)>>.0, EmptyView>)>);
  return List<>.init(content:)();
}

uint64_t closure #1 in RazzmatazzDetailView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v44 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Section<Text, <<opaque return type of View.onTapGesture(count:perform:)>>.0, EmptyView>);
  uint64_t v45 = *(void *)(v3 - 8);
  uint64_t v46 = v3;
  __chkstk_darwin();
  uint64_t v53 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v51 = (char *)&v40 - v5;
  uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Section<Text, HStack<TupleView<(ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, CornerRadiusModifier>, BorderViewModifier>, Text, TupleView<(Spacer, ListChevron)>?)>>, EmptyView>);
  uint64_t v43 = *(void *)(v52 - 8);
  __chkstk_darwin();
  uint64_t v56 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v49 = (char *)&v40 - v7;
  uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Section<Text, VStack<TupleView<(Text, Text, ModifiedContent<Spacer, _FrameLayout>, Button<<<opaque return type of View.labelStyle<A>(_:)>>.0>)>>, EmptyView>);
  uint64_t v50 = *(void *)(v55 - 8);
  __chkstk_darwin();
  uint64_t v54 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v10 = (char *)&v40 - v9;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Section<EmptyView, Text, EmptyView>?);
  __chkstk_darwin();
  uint64_t v48 = (uint64_t)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v13 = (char *)&v40 - v12;
  uint64_t v14 = Razzmatazz.shortName.getter();
  uint64_t v16 = *(void *)(a1 + 16);
  uint64_t v17 = *(void *)(a1 + 24);
  uint64_t v47 = v13;
  if (v14 == v16 && v15 == v17)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v18 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v18 & 1) == 0)
    {
      __chkstk_darwin();
      *(&v40 - 2) = (void (*)(char *, char *, uint64_t))a1;
      Section<>.init(content:)();
      uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Section<EmptyView, Text, EmptyView>);
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v13, 0, 1, v20);
      goto LABEL_7;
    }
  }
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Section<EmptyView, Text, EmptyView>);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v13, 1, 1, v19);
LABEL_7:
  uint64_t v59 = 1702125892;
  unint64_t v60 = 0xE400000000000000;
  __chkstk_darwin();
  *(&v40 - 2) = (void (*)(char *, char *, uint64_t))a1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for VStack<TupleView<(Text, Text, ModifiedContent<Spacer, _FrameLayout>, Button<<<opaque return type of View.labelStyle<A>(_:)>>.0>)>>);
  lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type VStack<TupleView<(Text, Text, ModifiedContent<Spacer, _FrameLayout>, Button<<<opaque return type of View.labelStyle<A>(_:)>>.0>)>> and conformance VStack<A>, &demangling cache variable for type metadata for VStack<TupleView<(Text, Text, ModifiedContent<Spacer, _FrameLayout>, Button<<<opaque return type of View.labelStyle<A>(_:)>>.0>)>>);
  char v42 = (void (*)(char *, char *, uint64_t))_sS2SSysWl_1();
  Section<>.init<A>(_:content:)();
  LocalizedStringKey.init(stringLiteral:)();
  __chkstk_darwin();
  *(&v40 - 2) = (void (*)(char *, char *, uint64_t))a1;
  uint64_t v41 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HStack<TupleView<(ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, CornerRadiusModifier>, BorderViewModifier>, Text, TupleView<(Spacer, ListChevron)>?)>>);
  lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type HStack<TupleView<(ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, CornerRadiusModifier>, BorderViewModifier>, Text, TupleView<(Spacer, ListChevron)>?)>> and conformance HStack<A>, &demangling cache variable for type metadata for HStack<TupleView<(ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, CornerRadiusModifier>, BorderViewModifier>, Text, TupleView<(Spacer, ListChevron)>?)>>);
  uint64_t v21 = v49;
  Section<>.init(_:content:)();
  uint64_t v59 = 0x6E6F697461636F4CLL;
  unint64_t v60 = 0xE800000000000000;
  __chkstk_darwin();
  *(&v40 - 2) = (void (*)(char *, char *, uint64_t))a1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.onTapGesture(count:perform:)>>.0);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(ModifiedContent<RazzmatazzDetailView.MapImage, _FrameLayout>, ModifiedContent<Text, _PaddingLayout>)>>, _TraitWritingModifier<ListRowInsetsTraitKey>>);
  unint64_t v23 = lazy protocol witness table accessor for type ModifiedContent<VStack<TupleView<(ModifiedContent<RazzmatazzDetailView.MapImage, _FrameLayout>, ModifiedContent<Text, _PaddingLayout>)>>, _TraitWritingModifier<ListRowInsetsTraitKey>> and conformance <> ModifiedContent<A, B>();
  uint64_t v57 = v22;
  unint64_t v58 = v23;
  swift_getOpaqueTypeConformance2();
  uint64_t v24 = v51;
  Section<>.init<A>(_:content:)();
  uint64_t v25 = v48;
  outlined init with copy of (String, Any)((uint64_t)v47, v48, &demangling cache variable for type metadata for Section<EmptyView, Text, EmptyView>?);
  uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v50 + 16);
  v26(v54, v10, v55);
  uint64_t v27 = v43;
  char v42 = *(void (**)(char *, char *, uint64_t))(v43 + 16);
  uint64_t v28 = v52;
  v42(v56, v21, v52);
  uint64_t v29 = v45;
  char v40 = *(void (**)(char *, char *, uint64_t))(v45 + 16);
  uint64_t v30 = v24;
  uint64_t v31 = v46;
  v40(v53, v30, v46);
  uint64_t v32 = v44;
  outlined init with copy of (String, Any)(v25, v44, &demangling cache variable for type metadata for Section<EmptyView, Text, EmptyView>?);
  uint64_t v33 = (int *)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Section<EmptyView, Text, EmptyView>?, Section<Text, VStack<TupleView<(Text, Text, ModifiedContent<Spacer, _FrameLayout>, Button<<<opaque return type of View.labelStyle<A>(_:)>>.0>)>>, EmptyView>, Section<Text, HStack<TupleView<(ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, CornerRadiusModifier>, BorderViewModifier>, Text, TupleView<(Spacer, ListChevron)>?)>>, EmptyView>, Section<Text, <<opaque return type of View.onTapGesture(count:perform:)>>.0, EmptyView>));
  v26((char *)(v32 + v33[12]), v54, v55);
  v42((char *)(v32 + v33[16]), v56, v28);
  uint64_t v34 = v53;
  v40((char *)(v32 + v33[20]), v53, v31);
  uint64_t v35 = *(void (**)(char *, uint64_t))(v29 + 8);
  v35(v51, v31);
  uint64_t v36 = *(void (**)(char *, uint64_t))(v27 + 8);
  v36(v49, v28);
  uint64_t v37 = *(void (**)(char *, uint64_t))(v50 + 8);
  uint64_t v38 = v55;
  v37(v41, v55);
  outlined destroy of TaskPriority?((uint64_t)v47, &demangling cache variable for type metadata for Section<EmptyView, Text, EmptyView>?);
  v35(v34, v31);
  v36(v56, v52);
  v37(v54, v38);
  return outlined destroy of TaskPriority?(v48, &demangling cache variable for type metadata for Section<EmptyView, Text, EmptyView>?);
}

uint64_t partial apply for closure #1 in RazzmatazzDetailView.body.getter@<X0>(uint64_t a1@<X8>)
{
  return closure #1 in RazzmatazzDetailView.body.getter(*(void *)(v1 + 16), a1);
}

uint64_t associated type witness table accessor for View.Body : View in RazzmatazzDetailView()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t closure #1 in closure #1 in RazzmatazzDetailView.body.getter@<X0>(uint64_t a1@<X8>)
{
  _sS2SSysWl_1();
  swift_bridgeObjectRetain();
  uint64_t v2 = Text.init<A>(_:)();
  uint64_t v4 = v3;
  char v6 = v5 & 1;
  static HierarchicalShapeStyle.secondary.getter();
  uint64_t v7 = Text.foregroundStyle<A>(_:)();
  uint64_t v9 = v8;
  char v11 = v10;
  uint64_t v13 = v12;
  outlined consume of Text.Storage(v2, v4, v6);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a1 = v7;
  *(void *)(a1 + 8) = v9;
  *(unsigned char *)(a1 + 16) = v11 & 1;
  *(void *)(a1 + 24) = v13;
  return result;
}

uint64_t closure #1 in closure #2 in closure #1 in RazzmatazzDetailView.body.getter@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v125 = a2;
  uint64_t v122 = *(void *)(type metadata accessor for RazzmatazzDetailView() - 8);
  uint64_t v121 = *(void *)(v122 + 64);
  __chkstk_darwin();
  uint64_t v120 = (uint64_t)&v87 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v124 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Button<<<opaque return type of View.labelStyle<A>(_:)>>.0>);
  uint64_t v134 = *(void *)(v124 - 8);
  __chkstk_darwin();
  uint64_t v123 = (char *)&v87 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v133 = (char *)&v87 - v5;
  uint64_t v119 = type metadata accessor for Date.FormatStyle.Symbol.Minute();
  uint64_t v118 = *(void *)(v119 - 8);
  __chkstk_darwin();
  uint64_t v117 = (char *)&v87 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v116 = type metadata accessor for Date.FormatStyle.Symbol.Hour.AMPMStyle();
  uint64_t v115 = *(void *)(v116 - 8);
  __chkstk_darwin();
  uint64_t v112 = (char *)&v87 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v114 = type metadata accessor for Date.FormatStyle.Symbol.Hour();
  uint64_t v113 = *(void *)(v114 - 8);
  __chkstk_darwin();
  uint64_t v111 = (char *)&v87 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = type metadata accessor for Date.FormatStyle.Symbol.Year();
  uint64_t v109 = *(void *)(v110 - 8);
  __chkstk_darwin();
  uint64_t v108 = (char *)&v87 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = type metadata accessor for Date.FormatStyle.Symbol.Month();
  uint64_t v105 = *(void *)(v106 - 8);
  __chkstk_darwin();
  long long v103 = (char *)&v87 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = type metadata accessor for Date.FormatStyle.Symbol.Day();
  uint64_t v101 = *(void *)(v102 - 8);
  __chkstk_darwin();
  uint64_t v100 = (char *)&v87 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Date.FormatStyle.Symbol.Weekday();
  uint64_t v131 = *(void *)(v12 - 8);
  uint64_t v132 = v12;
  __chkstk_darwin();
  uint64_t v14 = (char *)&v87 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v129 = type metadata accessor for TimeZone();
  uint64_t v135 = *(void *)(v129 - 8);
  __chkstk_darwin();
  uint64_t v126 = (char *)&v87 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for Date.FormatStyle();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin();
  uint64_t v95 = (char *)&v87 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v97 = (char *)&v87 - v19;
  __chkstk_darwin();
  uint64_t v98 = (char *)&v87 - v20;
  __chkstk_darwin();
  uint64_t v99 = (char *)&v87 - v21;
  __chkstk_darwin();
  unint64_t v23 = (char *)&v87 - v22;
  __chkstk_darwin();
  uint64_t v128 = (char *)&v87 - v24;
  uint64_t v127 = type metadata accessor for Date();
  uint64_t v25 = *(void *)(v127 - 8);
  __chkstk_darwin();
  uint64_t v27 = (char *)&v87 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = type metadata accessor for Razzmatazz(0);
  uint64_t v29 = *(int *)(v28 + 24);
  uint64_t v107 = a1;
  uint64_t v90 = a1 + v29;
  uint64_t v89 = *(void (**)(char *))(v25 + 16);
  v89(v27);
  static ParseableFormatStyle<>.dateTime.getter();
  uint64_t v30 = a1 + *(int *)(v28 + 32);
  uint64_t v87 = v30 + *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t))(v135 + 16);
  v135 += 16;
  uint64_t v88 = v31;
  ((void (*)(char *))v31)(v126);
  Date.FormatStyle.timeZone.setter();
  static Date.FormatStyle.Symbol.Weekday.wide.getter();
  uint64_t v32 = v128;
  uint64_t v91 = v23;
  Date.FormatStyle.weekday(_:)();
  (*(void (**)(char *, uint64_t))(v131 + 8))(v14, v132);
  uint64_t v33 = *(void (**)(char *, uint64_t))(v17 + 8);
  v33(v23, v16);
  uint64_t v96 = _sSo38UIApplicationOpenExternalURLOptionsKeyaABSHSCWlTm_0(&lazy protocol witness table cache variable for type Date.FormatStyle and conformance Date.FormatStyle, (void (*)(uint64_t))&type metadata accessor for Date.FormatStyle);
  uint64_t v34 = v27;
  Date.formatted<A>(_:)();
  v33(v32, v16);
  uint64_t v35 = *(void (**)(char *, uint64_t))(v25 + 8);
  uint64_t v93 = v25 + 8;
  uint64_t v94 = v35;
  uint64_t v36 = v27;
  uint64_t v37 = v127;
  v35(v36, v127);
  uint64_t v136 = v140;
  uint64_t v137 = v141;
  unint64_t v92 = _sS2SSysWl_1();
  uint64_t v38 = Text.init<A>(_:)();
  uint64_t v40 = v39;
  LOBYTE(v25) = v41 & 1;
  LODWORD(v140) = static HierarchicalShapeStyle.secondary.getter();
  uint64_t v132 = Text.foregroundStyle<A>(_:)();
  uint64_t v104 = v42;
  uint64_t v131 = v43;
  int v130 = v44 & 1;
  outlined consume of Text.Storage(v38, v40, v25);
  swift_bridgeObjectRelease();
  uint64_t v45 = v34;
  ((void (*)(char *, uint64_t, uint64_t))v89)(v34, v90, v37);
  uint64_t v46 = v95;
  static ParseableFormatStyle<>.dateTime.getter();
  v88(v126, v87, v129);
  Date.FormatStyle.timeZone.setter();
  uint64_t v47 = v100;
  static Date.FormatStyle.Symbol.Day.defaultDigits.getter();
  uint64_t v48 = v97;
  Date.FormatStyle.day(_:)();
  (*(void (**)(char *, uint64_t))(v101 + 8))(v47, v102);
  v33(v46, v16);
  uint64_t v49 = v103;
  static Date.FormatStyle.Symbol.Month.wide.getter();
  uint64_t v50 = v98;
  Date.FormatStyle.month(_:)();
  (*(void (**)(char *, uint64_t))(v105 + 8))(v49, v106);
  v33(v48, v16);
  uint64_t v51 = v108;
  static Date.FormatStyle.Symbol.Year.defaultDigits.getter();
  uint64_t v52 = v99;
  Date.FormatStyle.year(_:)();
  (*(void (**)(char *, uint64_t))(v109 + 8))(v51, v110);
  v33(v50, v16);
  uint64_t v53 = v112;
  static Date.FormatStyle.Symbol.Hour.AMPMStyle.abbreviated.getter();
  uint64_t v54 = v111;
  static Date.FormatStyle.Symbol.Hour.defaultDigits(amPM:)();
  (*(void (**)(char *, uint64_t))(v115 + 8))(v53, v116);
  uint64_t v55 = v91;
  Date.FormatStyle.hour(_:)();
  (*(void (**)(char *, uint64_t))(v113 + 8))(v54, v114);
  v33(v52, v16);
  uint64_t v56 = v117;
  static Date.FormatStyle.Symbol.Minute.defaultDigits.getter();
  uint64_t v57 = v128;
  Date.FormatStyle.minute(_:)();
  (*(void (**)(char *, uint64_t))(v118 + 8))(v56, v119);
  v33(v55, v16);
  Date.formatted<A>(_:)();
  v33(v57, v16);
  v94(v45, v127);
  uint64_t v136 = v140;
  uint64_t v137 = v141;
  uint64_t v58 = Text.init<A>(_:)();
  uint64_t v60 = v59;
  LOBYTE(v57) = v61 & 1;
  LODWORD(v140) = static HierarchicalShapeStyle.primary.getter();
  uint64_t v62 = Text.foregroundStyle<A>(_:)();
  uint64_t v128 = v63;
  uint64_t v135 = v64;
  LODWORD(v129) = v65 & 1;
  outlined consume of Text.Storage(v58, v60, (char)v57);
  swift_bridgeObjectRelease();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v127 = v140;
  LODWORD(v126) = v141;
  uint64_t v119 = v142;
  LODWORD(v118) = v143;
  uint64_t v117 = v144;
  uint64_t v116 = v145;
  uint64_t v66 = v120;
  outlined init with copy of RazzmatazzDetailView(v107, v120);
  unint64_t v67 = (*(unsigned __int8 *)(v122 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v122 + 80);
  uint64_t v68 = swift_allocObject();
  _s11MusicCoreUI10RazzmatazzVWObTm_0(v66, v68 + v67, (uint64_t (*)(void))type metadata accessor for RazzmatazzDetailView);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.labelStyle<A>(_:)>>.0);
  uint64_t v69 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&_s7SwiftUI5LabelVyAA4TextVAA5ImageVGMD_0);
  uint64_t v70 = type metadata accessor for TitleAndIconLabelStyle();
  uint64_t v71 = lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&_s7SwiftUI5LabelVyAA4TextVAA5ImageVGACyxq_GAA4ViewAAWL_0, &_s7SwiftUI5LabelVyAA4TextVAA5ImageVGMD_0);
  uint64_t v72 = _sSo38UIApplicationOpenExternalURLOptionsKeyaABSHSCWlTm_0(&lazy protocol witness table cache variable for type TitleAndIconLabelStyle and conformance TitleAndIconLabelStyle, (void (*)(uint64_t))&type metadata accessor for TitleAndIconLabelStyle);
  uint64_t v136 = v69;
  uint64_t v137 = v70;
  uint64_t v138 = v71;
  uint64_t v139 = v72;
  swift_getOpaqueTypeConformance2();
  uint64_t v73 = v133;
  Button.init(action:label:)();
  LOBYTE(v66) = v130;
  LOBYTE(v136) = v130;
  uint64_t v74 = *(void (**)(char *, char *, uint64_t))(v134 + 16);
  uint64_t v75 = v123;
  uint64_t v76 = v124;
  v74(v123, v73, v124);
  uint64_t v77 = v125;
  uint64_t v78 = v131;
  uint64_t v79 = v132;
  uint64_t v80 = v104;
  *uint64_t v125 = v132;
  v77[1] = v80;
  *((unsigned char *)v77 + 16) = v66;
  void v77[3] = v78;
  v77[4] = v62;
  uint64_t v81 = (uint64_t)v128;
  v77[5] = v128;
  *((unsigned char *)v77 + 48) = v129;
  v77[7] = v135;
  v77[8] = 0;
  *((unsigned char *)v77 + 72) = 1;
  v77[10] = v127;
  *((unsigned char *)v77 + 88) = (_BYTE)v126;
  v77[12] = v119;
  *((unsigned char *)v77 + 104) = v118;
  uint64_t v82 = v116;
  v77[14] = v117;
  v77[15] = v82;
  uint64_t v83 = (char *)v77;
  uint64_t v84 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Text, Text, ModifiedContent<Spacer, _FrameLayout>, Button<<<opaque return type of View.labelStyle<A>(_:)>>.0>));
  v74(&v83[*(int *)(v84 + 80)], v75, v76);
  outlined copy of Text.Storage(v79, v80, v130);
  swift_bridgeObjectRetain();
  LOBYTE(v79) = v129;
  outlined copy of Text.Storage(v62, v81, v129);
  uint64_t v85 = *(void (**)(char *, uint64_t))(v134 + 8);
  swift_bridgeObjectRetain();
  v85(v133, v76);
  v85(v75, v76);
  outlined consume of Text.Storage(v62, v81, v79);
  swift_bridgeObjectRelease();
  outlined consume of Text.Storage(v132, v80, v136);
  return swift_bridgeObjectRelease();
}

void closure #1 in closure #1 in closure #2 in closure #1 in RazzmatazzDetailView.body.getter(uint64_t a1)
{
  uint64_t v2 = *(void *)(type metadata accessor for RazzmatazzDetailView() - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  __chkstk_darwin();
  id v4 = [objc_allocWithZone((Class)EKEventStore) init];
  outlined init with copy of RazzmatazzDetailView(a1, (uint64_t)aBlock - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v5 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v4;
  _s11MusicCoreUI10RazzmatazzVWObTm_0((uint64_t)aBlock - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v6 + v5, (uint64_t (*)(void))type metadata accessor for RazzmatazzDetailView);
  aBlock[4] = partial apply for closure #1 in closure #1 in closure #1 in closure #2 in closure #1 in RazzmatazzDetailView.body.getter;
  aBlock[5] = v6;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed (@unowned Bool, @guaranteed Error?) -> ();
  void aBlock[3] = &block_descriptor_23_1;
  uint64_t v7 = _Block_copy(aBlock);
  id v8 = v4;
  swift_release();
  [v8 requestWriteOnlyAccessToEventsWithCompletion:v7];
  _Block_release(v7);
}

void closure #1 in closure #1 in closure #1 in closure #2 in closure #1 in RazzmatazzDetailView.body.getter(char a1, void *a2, void *a3, uint64_t a4)
{
  uint64_t v53 = *(NSObject **)(type metadata accessor for RazzmatazzDetailView() - 8);
  Class isa = v53[8].isa;
  __chkstk_darwin();
  __swift_instantiateConcreteTypeFromMangledName(&_sScPSgMD_2);
  __chkstk_darwin();
  uint64_t v10 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Date();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin();
  uint64_t v14 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v51 = v10;
    uint64_t v52 = (uint64_t)&v51 - (((unint64_t)isa + 15) & 0xFFFFFFFFFFFFFFF0);
    id v15 = [self eventWithEventStore:a3];
    NSString v16 = String._bridgeToObjectiveC()();
    [v15 setTitle:v16];

    uint64_t v17 = type metadata accessor for Razzmatazz(0);
    Class v18 = Date._bridgeToObjectiveC()().super.isa;
    [v15 setStartDate:v18];

    Date.addingTimeInterval(_:)();
    Class v19 = Date._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    [v15 setEndDate:v19];

    uint64_t v20 = (_OWORD *)(a4 + *(int *)(v17 + 32));
    long long v21 = v20[3];
    v56[0] = v20[2];
    v56[1] = v21;
    long long v22 = v20[5];
    v56[2] = v20[4];
    v56[3] = v22;
    id v23 = v15;
    Razzmatazz.Venue.Address.formatted(_:)(0);
    NSString v24 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v23 setLocation:v24];

    id v25 = v23;
    id v26 = [a3 defaultCalendarForNewEvents];
    [v25 setCalendar:v26];

    id v55 = 0;
    unsigned int v27 = [a3 saveEvent:v25 span:0 error:&v55];
    id v28 = v55;
    if (v27)
    {
      uint64_t v29 = type metadata accessor for TaskPriority();
      uint64_t v30 = (uint64_t)v51;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v51, 1, 1, v29);
      uint64_t v31 = v52;
      outlined init with copy of RazzmatazzDetailView(a4, v52);
      type metadata accessor for MainActor();
      id v32 = v28;
      uint64_t v33 = static MainActor.shared.getter();
      unint64_t v34 = (LOBYTE(v53[10].isa) + 32) & ~(unint64_t)LOBYTE(v53[10].isa);
      uint64_t v35 = swift_allocObject();
      *(void *)(v35 + 16) = v33;
      *(void *)(v35 + 24) = &protocol witness table for MainActor;
      _s11MusicCoreUI10RazzmatazzVWObTm_0(v31, v35 + v34, (uint64_t (*)(void))type metadata accessor for RazzmatazzDetailView);
      _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCytSg_Tgm5_0(v30, (uint64_t)&async function pointer to partial apply for closure #1 in closure #1 in closure #1 in closure #1 in closure #2 in closure #1 in RazzmatazzDetailView.body.getter, v35);
      swift_release();
    }
    else
    {
      id v42 = v55;
      uint64_t v43 = _convertNSErrorToError(_:)();

      swift_willThrow();
      if (one-time initialization token for razzmatazz != -1) {
        swift_once();
      }
      uint64_t v44 = type metadata accessor for Logger();
      __swift_project_value_buffer(v44, (uint64_t)static Logger.razzmatazz);
      swift_errorRetain();
      swift_errorRetain();
      uint64_t v45 = Logger.logObject.getter();
      os_log_type_t v46 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v45, v46))
      {
        uint64_t v47 = swift_slowAlloc();
        id v55 = (id)swift_slowAlloc();
        *(_DWORD *)uint64_t v47 = 136315138;
        uint64_t v54 = v43;
        swift_errorRetain();
        __swift_instantiateConcreteTypeFromMangledName(&_ss5Error_pMD_1);
        uint64_t v48 = String.init<A>(describing:)();
        *(void *)(v47 + 4) = _s2os32getNullTerminatedUTF8PointerImpl_21storingStringOwnersInSVSS_SpyypGSgztF_2(v48, v49, (uint64_t *)&v55);
        swift_bridgeObjectRelease();
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v45, v46, "Failed to save event: %s", (uint8_t *)v47, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        swift_errorRelease();
      }
      else
      {

        swift_errorRelease();
        swift_errorRelease();
        swift_errorRelease();
      }
    }
  }
  else
  {
    if (one-time initialization token for razzmatazz != -1) {
      swift_once();
    }
    uint64_t v36 = type metadata accessor for Logger();
    __swift_project_value_buffer(v36, (uint64_t)static Logger.razzmatazz);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v53 = Logger.logObject.getter();
    os_log_type_t v37 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v53, v37))
    {
      uint64_t v38 = swift_slowAlloc();
      uint64_t v39 = swift_slowAlloc();
      id v55 = a2;
      *(void *)&v56[0] = v39;
      *(_DWORD *)uint64_t v38 = 136315138;
      swift_errorRetain();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&_ss5Error_pSgMD_0);
      uint64_t v40 = String.init<A>(describing:)();
      *(void *)(v38 + 4) = _s2os32getNullTerminatedUTF8PointerImpl_21storingStringOwnersInSVSS_SpyypGSgztF_2(v40, v41, (uint64_t *)v56);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v53, v37, "No Calendar access: %s", (uint8_t *)v38, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      uint64_t v50 = v53;
    }
  }
}

uint64_t closure #1 in closure #1 in closure #1 in closure #1 in closure #2 in closure #1 in RazzmatazzDetailView.body.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a1;
  v4[3] = a4;
  uint64_t v5 = type metadata accessor for UUID();
  v4[4] = v5;
  v4[5] = *(void *)(v5 - 8);
  void v4[6] = swift_task_alloc();
  type metadata accessor for Notice(0);
  v4[7] = swift_task_alloc();
  type metadata accessor for MainActor();
  v4[8] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(closure #1 in closure #1 in closure #1 in closure #1 in closure #2 in closure #1 in RazzmatazzDetailView.body.getter, v7, v6);
}

uint64_t closure #1 in closure #1 in closure #1 in closure #1 in closure #2 in closure #1 in RazzmatazzDetailView.body.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_release();
  uint64_t v2 = *(void *)(v1 + *(int *)(type metadata accessor for RazzmatazzDetailView() + 20));
  if (v2)
  {
    uint64_t v3 = *(void *)(v0 + 48);
    id v4 = *(void **)(v0 + 56);
    uint64_t v5 = *(void *)(v0 + 32);
    uint64_t v6 = *(void *)(v0 + 40);
    UUID.init()();
    uint64_t v7 = UUID.uuidString.getter();
    uint64_t v9 = v8;
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v3, v5);
    Notice.init(id:symbol:message:headnote:link:hapticFeedback:)(v7, v9, 0xD000000000000011, 0x80000001004746E0, 0, 0, v4, 0, 0, 0, 0);
    specialized NoticePresenter.present(_:internalOnly:animated:)((uint64_t)v4, 0);
    outlined destroy of ArtworkImage.Placeholder((uint64_t)v4, type metadata accessor for Notice);
  }
  **(unsigned char **)(v0 + 16) = v2 == 0;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t closure #2 in closure #1 in closure #2 in closure #1 in RazzmatazzDetailView.body.getter()
{
  uint64_t v0 = type metadata accessor for TitleAndIconLabelStyle();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin();
  uint64_t v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&_s7SwiftUI5LabelVyAA4TextVAA5ImageVGMD_0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9[0] = 0x43206F7420646441;
  v9[1] = 0xEF7261646E656C61;
  _sS2SSysWl_1();
  Label<>.init<A>(_:systemImage:)();
  TitleAndIconLabelStyle.init()();
  lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&_s7SwiftUI5LabelVyAA4TextVAA5ImageVGACyxq_GAA4ViewAAWL_0, &_s7SwiftUI5LabelVyAA4TextVAA5ImageVGMD_0);
  _sSo38UIApplicationOpenExternalURLOptionsKeyaABSHSCWlTm_0(&lazy protocol witness table cache variable for type TitleAndIconLabelStyle and conformance TitleAndIconLabelStyle, (void (*)(uint64_t))&type metadata accessor for TitleAndIconLabelStyle);
  View.labelStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t closure #2 in closure #1 in RazzmatazzDetailView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t *a3@<X2>, uint64_t (*a4)(uint64_t)@<X3>, uint64_t a5@<X8>)
{
  *(void *)a5 = a2();
  *(void *)(a5 + 8) = 0;
  *(unsigned char *)(a5 + 16) = 1;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  return a4(a1);
}

uint64_t closure #1 in closure #3 in closure #1 in RazzmatazzDetailView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v51 = a2;
  uint64_t v3 = type metadata accessor for ArtworkImage.ReusePolicy();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin();
  uint64_t v6 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ArtworkImage.ViewModel?);
  __chkstk_darwin();
  uint64_t v10 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0);
  uint64_t v11 = *(void *)(v49 - 8);
  __chkstk_darwin();
  uint64_t v13 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, CornerRadiusModifier>);
  __chkstk_darwin();
  id v15 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, CornerRadiusModifier>, BorderViewModifier>);
  __chkstk_darwin();
  uint64_t v17 = (char *)&v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v52 = (uint64_t)&v47 - v18;
  type metadata accessor for Razzmatazz(0);
  uint64_t v50 = a1;
  specialized ArtworkImageViewModelAttributeProviding.artworkViewModel.getter(v10);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (type: Playlist.Variant?));
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v8, 6, 10, v19);
  if (one-time initialization token for artworkLength != -1) {
    swift_once();
  }
  uint64_t v55 = static RazzmatazzDetailView.Specs.artworkLength;
  char v56 = 0;
  uint64_t v57 = static RazzmatazzDetailView.Specs.artworkLength;
  char v58 = 0;
  uint64_t v59 = 0;
  __int16 v60 = 513;
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for ArtworkImage.ReusePolicy.reusableForDistinctItems(_:), v3);
  static ArtworkImage.with(_:placeholder:size:reusePolicy:)((uint64_t)v10, (uint64_t)v8, (uint64_t)&v55, (uint64_t)v6, (uint64_t)v13);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  outlined destroy of ArtworkImage.Placeholder((uint64_t)v8, type metadata accessor for ArtworkImage.Placeholder);
  outlined destroy of TaskPriority?((uint64_t)v10, (uint64_t *)&demangling cache variable for type metadata for ArtworkImage.ViewModel?);
  uint64_t v20 = v49;
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v15, v13, v49);
  long long v21 = &v15[*(int *)(v47 + 36)];
  *(void *)long long v21 = 0;
  *((void *)v21 + 1) = 0;
  v21[16] = 1;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v20);
  if (one-time initialization token for artwork != -1) {
    swift_once();
  }
  uint64_t v22 = static Border.artwork;
  uint64_t v23 = qword_1005AE930;
  char v24 = byte_1005AE938;
  outlined init with copy of (String, Any)((uint64_t)v15, (uint64_t)v17, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, CornerRadiusModifier>);
  id v25 = &v17[*(int *)(v48 + 36)];
  *(void *)id v25 = v22;
  *((void *)v25 + 1) = v23;
  v25[16] = v24;
  *((void *)v25 + 3) = 0;
  *((void *)v25 + 4) = 0;
  v25[40] = 1;
  swift_retain();
  outlined destroy of TaskPriority?((uint64_t)v15, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, CornerRadiusModifier>);
  outlined init with take of PresentationSource?((uint64_t)v17, v52, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, CornerRadiusModifier>, BorderViewModifier>);
  uint64_t v53 = Artist.name.getter();
  uint64_t v54 = v26;
  _sS2SSysWl_1();
  uint64_t v27 = Text.init<A>(_:)();
  uint64_t v29 = v28;
  char v31 = v30;
  uint64_t v49 = v32;
  uint64_t v33 = (uint64_t *)(v50 + *(int *)(type metadata accessor for RazzmatazzDetailView() + 24));
  uint64_t v34 = *v33;
  uint64_t v35 = (uint64_t)v17;
  if (*v33)
  {
    uint64_t v36 = v33[1];
    swift_retain();
    outlined copy of (@escaping @callee_guaranteed () -> ())?(v34);
    swift_release();
    uint64_t v37 = 1;
  }
  else
  {
    uint64_t v37 = 0;
    uint64_t v36 = 0;
  }
  char v38 = v31 & 1;
  uint64_t v39 = v52;
  uint64_t v40 = v35;
  outlined init with copy of (String, Any)(v52, v35, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, CornerRadiusModifier>, BorderViewModifier>);
  uint64_t v41 = v35;
  uint64_t v42 = v51;
  outlined init with copy of (String, Any)(v41, v51, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, CornerRadiusModifier>, BorderViewModifier>);
  uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, CornerRadiusModifier>, BorderViewModifier>, Text, TupleView<(Spacer, ListChevron)>?));
  uint64_t v44 = v42 + *(int *)(v43 + 48);
  *(void *)uint64_t v44 = v27;
  *(void *)(v44 + 8) = v29;
  *(unsigned char *)(v44 + 16) = v38;
  *(void *)(v44 + 24) = v49;
  uint64_t v45 = (void *)(v42 + *(int *)(v43 + 64));
  *uint64_t v45 = 0;
  v45[1] = v37;
  void v45[2] = v34;
  void v45[3] = v36;
  outlined copy of Text.Storage(v27, v29, v38);
  swift_bridgeObjectRetain();
  outlined copy of TupleView<(Spacer, ListChevron)>?(0, v37, v34);
  outlined destroy of TaskPriority?(v39, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, CornerRadiusModifier>, BorderViewModifier>);
  outlined consume of TupleView<(Spacer, ListChevron)>?(0, v37, v34);
  outlined consume of Text.Storage(v27, v29, v38);
  swift_bridgeObjectRelease();
  return outlined destroy of TaskPriority?(v40, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, CornerRadiusModifier>, BorderViewModifier>);
}

uint64_t closure #4 in closure #1 in RazzmatazzDetailView.body.getter(uint64_t a1)
{
  uint64_t v2 = *(void *)(type metadata accessor for RazzmatazzDetailView() - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  __chkstk_darwin();
  uint64_t v4 = static HorizontalAlignment.leading.getter();
  closure #1 in closure #4 in closure #1 in RazzmatazzDetailView.body.getter(a1, (uint64_t)v10);
  *(_OWORD *)((char *)&v12[7] + 7) = v10[7];
  *(_OWORD *)((char *)&v12[8] + 7) = v10[8];
  *(_OWORD *)((char *)&v12[9] + 7) = v11[0];
  v12[10] = *(_OWORD *)((char *)v11 + 9);
  *(_OWORD *)((char *)&v12[3] + 7) = v10[3];
  *(_OWORD *)((char *)&v12[4] + 7) = v10[4];
  *(_OWORD *)((char *)&v12[5] + 7) = v10[5];
  *(_OWORD *)((char *)&v12[6] + 7) = v10[6];
  *(_OWORD *)((char *)v12 + 7) = v10[0];
  *(_OWORD *)((char *)&v12[1] + 7) = v10[1];
  char v13 = 0;
  *(_OWORD *)((char *)&v12[2] + 7) = v10[2];
  if (one-time initialization token for zero != -1) {
    swift_once();
  }
  *(_OWORD *)((char *)&v9[7] + 1) = v12[7];
  *(_OWORD *)((char *)&v9[8] + 1) = v12[8];
  *(_OWORD *)((char *)&v9[9] + 1) = v12[9];
  *(_OWORD *)((char *)&v9[10] + 1) = v12[10];
  *(_OWORD *)((char *)&v9[3] + 1) = v12[3];
  *(_OWORD *)((char *)&v9[4] + 1) = v12[4];
  *(_OWORD *)((char *)&v9[5] + 1) = v12[5];
  *(_OWORD *)((char *)&v9[6] + 1) = v12[6];
  *(_OWORD *)((char *)v9 + 1) = v12[0];
  *(_OWORD *)((char *)&v9[1] + 1) = v12[1];
  *(_OWORD *)((char *)&v9[2] + 1) = v12[2];
  *(_OWORD *)((char *)&v9[11] + 8) = static EdgeInsets.zero;
  char v14 = 0;
  long long v8 = (unint64_t)v4;
  LOBYTE(v9[0]) = 0;
  *(_OWORD *)((char *)&v9[12] + 8) = *(_OWORD *)&qword_1005ADD88;
  BYTE8(v9[13]) = 0;
  outlined init with copy of RazzmatazzDetailView(a1, (uint64_t)&v9[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v5 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v6 = swift_allocObject();
  _s11MusicCoreUI10RazzmatazzVWObTm_0((uint64_t)&v9[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v6 + v5, (uint64_t (*)(void))type metadata accessor for RazzmatazzDetailView);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(ModifiedContent<RazzmatazzDetailView.MapImage, _FrameLayout>, ModifiedContent<Text, _PaddingLayout>)>>, _TraitWritingModifier<ListRowInsetsTraitKey>>);
  lazy protocol witness table accessor for type ModifiedContent<VStack<TupleView<(ModifiedContent<RazzmatazzDetailView.MapImage, _FrameLayout>, ModifiedContent<Text, _PaddingLayout>)>>, _TraitWritingModifier<ListRowInsetsTraitKey>> and conformance <> ModifiedContent<A, B>();
  View.onTapGesture(count:perform:)();
  swift_release();
  v15[12] = v9[11];
  v16[0] = v9[12];
  *(_OWORD *)((char *)v16 + 9) = *(_OWORD *)((char *)&v9[12] + 9);
  v15[8] = v9[7];
  v15[9] = v9[8];
  v15[10] = v9[9];
  v15[11] = v9[10];
  void v15[4] = v9[3];
  v15[5] = v9[4];
  void v15[6] = v9[5];
  v15[7] = v9[6];
  v15[0] = v8;
  v15[1] = v9[0];
  v15[2] = v9[1];
  v15[3] = v9[2];
  return outlined release of ModifiedContent<VStack<TupleView<(ModifiedContent<RazzmatazzDetailView.MapImage, _FrameLayout>, ModifiedContent<Text, _PaddingLayout>)>>, _TraitWritingModifier<ListRowInsetsTraitKey>>((uint64_t)v15);
}

uint64_t closure #1 in closure #4 in closure #1 in RazzmatazzDetailView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = a1 + *(int *)(type metadata accessor for Razzmatazz(0) + 32);
  [*(id *)(v3 + 96) coordinate];
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v27 = *(void *)(v3 + 24);
  uint64_t v28 = *(void *)(v3 + 16);
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIImage?);
  State.init(wrappedValue:)();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  DWORD1(v29) = (unint64_t)Razzmatazz.Venue.Address.formatted(_:)(0) >> 32;
  _sS2SSysWl_1();
  uint64_t v8 = Text.init<A>(_:)();
  uint64_t v10 = v9;
  char v12 = v11 & 1;
  LODWORD(v29) = static HierarchicalShapeStyle.secondary.getter();
  uint64_t v13 = Text.foregroundStyle<A>(_:)();
  uint64_t v15 = v14;
  uint64_t v17 = v16;
  char v19 = v18 & 1;
  outlined consume of Text.Storage(v8, v10, v12);
  swift_bridgeObjectRelease();
  char v20 = static Edge.Set.all.getter();
  EdgeInsets.init(_all:)();
  *(_DWORD *)(a2 + 57) = v29;
  *(_DWORD *)(a2 + 60) = *(_DWORD *)((char *)&v29 + 3);
  *(_DWORD *)(a2 + 73) = *(_DWORD *)v38;
  *(_DWORD *)(a2 + 76) = *(_DWORD *)&v38[3];
  *(_DWORD *)(a2 + 116) = *(_DWORD *)&v37[3];
  *(_DWORD *)(a2 + 113) = *(_DWORD *)v37;
  *(_DWORD *)(a2 + 132) = *(_DWORD *)&v36[3];
  *(_DWORD *)(a2 + 129) = *(_DWORD *)v36;
  *(void *)a2 = v5;
  *(void *)(a2 + 8) = v7;
  *(void *)(a2 + 16) = v28;
  *(void *)(a2 + 24) = v27;
  *(_OWORD *)(a2 + 32) = v35;
  *(void *)(a2 + 48) = 0;
  *(unsigned char *)(a2 + 56) = v30;
  *(void *)(a2 + 64) = v31;
  *(unsigned char *)(a2 + 72) = v32;
  *(void *)(a2 + 80) = v33;
  *(void *)(a2 + 88) = v34;
  *(void *)(a2 + 96) = v13;
  *(void *)(a2 + 104) = v15;
  *(unsigned char *)(a2 + 112) = v19;
  *(void *)(a2 + 120) = v17;
  *(unsigned char *)(a2 + 128) = v20;
  *(void *)(a2 + 136) = v21;
  *(void *)(a2 + 144) = v22;
  *(void *)(a2 + 152) = v23;
  *(void *)(a2 + 160) = v24;
  *(unsigned char *)(a2 + 168) = 0;
  swift_retain();
  swift_bridgeObjectRetain();
  id v25 = (id)v35;
  outlined copy of Text.Storage(v13, v15, v19);
  swift_bridgeObjectRetain();
  outlined consume of Text.Storage(v13, v15, v19);
  swift_release();

  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t closure #2 in closure #4 in closure #1 in RazzmatazzDetailView.body.getter(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&_s10Foundation3URLVSgMD_1);
  __chkstk_darwin();
  uint64_t v3 = (char *)v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = a1 + *(int *)(type metadata accessor for Razzmatazz(0) + 32);
  [*(id *)(v8 + 96) coordinate];
  v28[0] = 0;
  v28[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(25);
  v9._countAndFlagsBits = 0x3F2F2F3A7370616DLL;
  v9._object = (void *)0xEA00000000003D71;
  String.append(_:)(v9);
  uint64_t v10 = *(void *)(v8 + 16);
  char v11 = *(void **)(v8 + 24);
  swift_bridgeObjectRetain();
  v12._countAndFlagsBits = v10;
  v12._object = v11;
  String.append(_:)(v12);
  swift_bridgeObjectRelease();
  v13._countAndFlagsBits = 1030515750;
  v13._object = (void *)0xE400000000000000;
  String.append(_:)(v13);
  Double.write<A>(to:)();
  v14._countAndFlagsBits = 44;
  v14._object = (void *)0xE100000000000000;
  String.append(_:)(v14);
  Double.write<A>(to:)();
  v15._countAndFlagsBits = 893221414;
  v15._object = (void *)0xE400000000000000;
  String.append(_:)(v15);
  URL.init(string:)();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1) {
    return outlined destroy of TaskPriority?((uint64_t)v3, &_s10Foundation3URLVSgMD_1);
  }
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v3, v4);
  uint64_t v17 = self;
  id v18 = [v17 sharedApplication];
  URL._bridgeToObjectiveC()(v19);
  uint64_t v21 = v20;
  unsigned int v22 = [v18 canOpenURL:v20];

  if (v22)
  {
    id v23 = [v17 sharedApplication];
    URL._bridgeToObjectiveC()(v24);
    uint64_t v26 = v25;
    _sSD17dictionaryLiteralSDyxq_Gx_q_td_tcfCSo38UIApplicationOpenExternalURLOptionsKeya_ypTgm5_0((uint64_t)_swiftEmptyArrayStorage);
    _sSo38UIApplicationOpenExternalURLOptionsKeyaMa_0(0);
    _sSo38UIApplicationOpenExternalURLOptionsKeyaABSHSCWlTm_0(&_sSo38UIApplicationOpenExternalURLOptionsKeyaABSHSCWL_0, _sSo38UIApplicationOpenExternalURLOptionsKeyaMa_0);
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v23 openURL:v26 options:isa completionHandler:0];
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

double closure #1 in RazzmatazzDetailView.MapImage.body.getter@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v23 = a1;
  uint64_t v5 = type metadata accessor for Image.ResizingMode();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for GeometryProxy();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin();
  long long v34 = a2[2];
  long long v29 = a2[2];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<UIImage?>);
  State.wrappedValue.getter();
  if (v24)
  {
    id v12 = v24;
    Image.init(uiImage:)();
    (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, enum case for Image.ResizingMode.stretch(_:), v5);
    Swift::String v13 = (void *)Image.resizable(capInsets:resizingMode:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    id v24 = v13;
    long long v25 = xmmword_100493CF0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    char v28 = 0;
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Image, _AspectRatioLayout>);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Color, _AppearanceActionModifier>);
    lazy protocol witness table accessor for type ModifiedContent<Image, _AspectRatioLayout> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<Image, _AspectRatioLayout> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<Image, _AspectRatioLayout>);
    lazy protocol witness table accessor for type ModifiedContent<Image, _AspectRatioLayout> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<Color, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<Color, _AppearanceActionModifier>);
    _ConditionalContent<>.init(storage:)();
    swift_release();
  }
  else
  {
    outlined init with take of PresentationSource?((uint64_t)&v34, (uint64_t)v36, &demangling cache variable for type metadata for UIImage?);
    outlined init with take of PresentationSource?((uint64_t)&v34 + 8, (uint64_t)v35, &demangling cache variable for type metadata for AnyLocation<UIImage?>?);
    [objc_allocWithZone((Class)UIColor) initWithRed:0.97 green:0.96 blue:0.93 alpha:1.0];
    Swift::String v14 = (void *)Color.init(uiColor:)();
    long long v33 = a2[1];
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v23, v9);
    unint64_t v15 = (*(unsigned __int8 *)(v10 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    uint64_t v16 = (char *)swift_allocObject();
    long long v17 = a2[1];
    *((_OWORD *)v16 + 1) = *a2;
    *((_OWORD *)v16 + 2) = v17;
    *((_OWORD *)v16 + 3) = a2[2];
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v16[v15], (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
    id v24 = v14;
    *(void *)&long long v25 = partial apply for closure #1 in closure #1 in RazzmatazzDetailView.MapImage.body.getter;
    *((void *)&v25 + 1) = v16;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    char v28 = 1;
    outlined retain of String?((uint64_t)&v33);
    outlined retain of ICMusicSubscriptionStatus?(v36);
    outlined retain of AnyLocation<UIImage?>?((uint64_t)v35);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Image, _AspectRatioLayout>);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Color, _AppearanceActionModifier>);
    lazy protocol witness table accessor for type ModifiedContent<Image, _AspectRatioLayout> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<Image, _AspectRatioLayout> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<Image, _AspectRatioLayout>);
    lazy protocol witness table accessor for type ModifiedContent<Image, _AspectRatioLayout> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<Color, _AppearanceActionModifier> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<Color, _AppearanceActionModifier>);
    _ConditionalContent<>.init(storage:)();
  }
  double result = *(double *)&v29;
  long long v19 = v30;
  uint64_t v20 = v31;
  char v21 = v32;
  *(_OWORD *)a3 = v29;
  *(_OWORD *)(a3 + 16) = v19;
  *(void *)(a3 + 32) = v20;
  *(unsigned char *)(a3 + 40) = v21;
  return result;
}

void closure #1 in closure #1 in RazzmatazzDetailView.MapImage.body.getter()
{
  GeometryProxy.size.getter();
  double v1 = v0;
  GeometryProxy.size.getter();
  RazzmatazzDetailView.MapImage.createMapSnapshot(width:height:)(v1, v2);
}

void RazzmatazzDetailView.MapImage.createMapSnapshot(width:height:)(double a1, double a2)
{
  uint64_t v3 = v2;
  id v6 = objc_msgSend(objc_allocWithZone((Class)MKPlacemark), "initWithCoordinate:", *v2, v2[1]);
  id v7 = [objc_allocWithZone((Class)MKMapItem) initWithPlacemark:v6];

  NSString v8 = String._bridgeToObjectiveC()();
  [v7 setName:v8];

  __swift_instantiateConcreteTypeFromMangledName(&_ss23_ContiguousArrayStorageCyyXlGMD_1);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_100493D20;
  *(void *)(v9 + 32) = v7;
  v17[0] = v9;
  specialized Array._endMutation()();
  id v10 = objc_allocWithZone((Class)MusicMapKitAnnotatedMapSnapshotter);
  type metadata accessor for MKMapItem();
  id v11 = v7;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v13 = objc_msgSend(v10, "initWithMapItems:mapSize:distance:", isa, a1, a2, 5000.0, v17[0]);

  long long v18 = *((_OWORD *)v3 + 2);
  outlined init with take of PresentationSource?((uint64_t)&v18, (uint64_t)&v20, &demangling cache variable for type metadata for UIImage?);
  outlined init with take of PresentationSource?((uint64_t)&v18 + 8, (uint64_t)v19, &demangling cache variable for type metadata for AnyLocation<UIImage?>?);
  Swift::String v14 = (_OWORD *)swift_allocObject();
  long long v15 = *((_OWORD *)v3 + 1);
  v14[1] = *(_OWORD *)v3;
  void v14[2] = v15;
  v14[3] = *((_OWORD *)v3 + 2);
  void v17[4] = partial apply for closure #1 in RazzmatazzDetailView.MapImage.createMapSnapshot(width:height:);
  v17[5] = v14;
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 1107296256;
  v17[2] = thunk for @escaping @callee_guaranteed (@guaranteed ICURLResponse?, @guaranteed Error?) -> ();
  v17[3] = &block_descriptor_66;
  uint64_t v16 = _Block_copy(v17);
  swift_bridgeObjectRetain();
  outlined retain of ICMusicSubscriptionStatus?(&v20);
  outlined retain of AnyLocation<UIImage?>?((uint64_t)v19);
  swift_release();
  [v13 startWithCompletionHandler:v16];
  _Block_release(v16);
}

void *closure #1 in RazzmatazzDetailView.MapImage.createMapSnapshot(width:height:)(void *result, uint64_t a2, uint64_t a3)
{
  if (result)
  {
    id v4 = result;
    id v5 = [v4 image];
    long long v7 = *(_OWORD *)(a3 + 32);
    outlined init with take of PresentationSource?((uint64_t)&v7 + 8, (uint64_t)v9, &demangling cache variable for type metadata for AnyLocation<UIImage?>?);
    outlined init with take of PresentationSource?((uint64_t)&v7, (uint64_t)&v8, &demangling cache variable for type metadata for UIImage?);
    outlined retain of ICMusicSubscriptionStatus?(&v8);
    outlined retain of AnyLocation<UIImage?>?((uint64_t)v9);
    id v6 = v5;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<UIImage?>);
    State.wrappedValue.setter();

    outlined release of UIView.Shadow(&v8);
    return (void *)outlined release of AnyLocation<UIImage?>?((uint64_t)v9);
  }
  return result;
}

uint64_t protocol witness for View.body.getter in conformance RazzmatazzDetailView.MapImage@<X0>(double (**a1)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)@<X8>)
{
  long long v6 = v1[2];
  long long v7 = v1[1];
  long long v8 = v6;
  outlined init with take of PresentationSource?((uint64_t)&v8, (uint64_t)&v10, &demangling cache variable for type metadata for UIImage?);
  outlined init with take of PresentationSource?((uint64_t)&v8 + 8, (uint64_t)v9, &demangling cache variable for type metadata for AnyLocation<UIImage?>?);
  uint64_t v3 = (double (*)@<D0>(uint64_t@<X0>, uint64_t@<X8>))swift_allocObject();
  long long v4 = v1[1];
  *((_OWORD *)v3 + 1) = *v1;
  *((_OWORD *)v3 + 2) = v4;
  *((_OWORD *)v3 + 3) = v1[2];
  *a1 = partial apply for closure #1 in RazzmatazzDetailView.MapImage.body.getter;
  a1[1] = v3;
  outlined retain of String?((uint64_t)&v7);
  outlined retain of ICMusicSubscriptionStatus?(&v10);
  return outlined retain of AnyLocation<UIImage?>?((uint64_t)v9);
}

void one-time initialization function for artworkLength()
{
  static RazzmatazzDetailView.Specs.artworkLength = 0x4046000000000000;
}

{
  static RazzmatazzView.Specs.artworkLength = 0x404B000000000000;
}

uint64_t protocol witness for View.body.getter in conformance RazzmatazzDetailView()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TupleView<(Section<EmptyView, Text, EmptyView>?, Section<Text, VStack<TupleView<(Text, Text, ModifiedContent<Spacer, _FrameLayout>, Button<<<opaque return type of View.labelStyle<A>(_:)>>.0>)>>, EmptyView>, Section<Text, HStack<TupleView<(ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, CornerRadiusModifier>, BorderViewModifier>, Text, TupleView<(Spacer, ListChevron)>?)>>, EmptyView>, Section<Text, <<opaque return type of View.onTapGesture(count:perform:)>>.0, EmptyView>)>);
  lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type TupleView<(Section<EmptyView, Text, EmptyView>?, Section<Text, VStack<TupleView<(Text, Text, ModifiedContent<Spacer, _FrameLayout>, Button<<<opaque return type of View.labelStyle<A>(_:)>>.0>)>>, EmptyView>, Section<Text, HStack<TupleView<(ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, CornerRadiusModifier>, BorderViewModifier>, Text, TupleView<(Spacer, ListChevron)>?)>>, EmptyView>, Section<Text, <<opaque return type of View.onTapGesture(count:perform:)>>.0, EmptyView>)> and conformance TupleView<A>, &demangling cache variable for type metadata for TupleView<(Section<EmptyView, Text, EmptyView>?, Section<Text, VStack<TupleView<(Text, Text, ModifiedContent<Spacer, _FrameLayout>, Button<<<opaque return type of View.labelStyle<A>(_:)>>.0>)>>, EmptyView>, Section<Text, HStack<TupleView<(ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, CornerRadiusModifier>, BorderViewModifier>, Text, TupleView<(Spacer, ListChevron)>?)>>, EmptyView>, Section<Text, <<opaque return type of View.onTapGesture(count:perform:)>>.0, EmptyView>)>);
  return List<>.init(content:)();
}

uint64_t *initializeBufferWithCopyOfBuffer for RazzmatazzDetailView(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  long long v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v35 = *a2;
    *long long v4 = *a2;
    long long v4 = (uint64_t *)(v35 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    uint64_t v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    long long v8 = (int *)type metadata accessor for Razzmatazz(0);
    uint64_t v9 = v8[6];
    id v10 = (char *)v4 + v9;
    id v11 = (char *)a2 + v9;
    uint64_t v12 = type metadata accessor for Date();
    id v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    uint64_t v14 = v8[7];
    long long v15 = (char *)v4 + v14;
    uint64_t v16 = (char *)a2 + v14;
    uint64_t v17 = type metadata accessor for Artist();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    uint64_t v18 = v8[8];
    long long v19 = (uint64_t *)((char *)v4 + v18);
    id v20 = (char *)a2 + v18;
    uint64_t v21 = *(uint64_t *)((char *)a2 + v18 + 8);
    void *v19 = *(uint64_t *)((char *)a2 + v18);
    v19[1] = v21;
    uint64_t v22 = *(uint64_t *)((char *)a2 + v18 + 24);
    _OWORD v19[2] = *(uint64_t *)((char *)a2 + v18 + 16);
    v19[3] = v22;
    uint64_t v23 = *(uint64_t *)((char *)a2 + v18 + 40);
    v19[4] = *(uint64_t *)((char *)a2 + v18 + 32);
    v19[5] = v23;
    uint64_t v24 = *(uint64_t *)((char *)a2 + v18 + 56);
    void v19[6] = *(uint64_t *)((char *)a2 + v18 + 48);
    v19[7] = v24;
    uint64_t v25 = *(uint64_t *)((char *)a2 + v18 + 72);
    unsigned char v19[8] = *(uint64_t *)((char *)a2 + v18 + 64);
    v19[9] = v25;
    uint64_t v26 = *(uint64_t *)((char *)a2 + v18 + 88);
    v19[10] = *(uint64_t *)((char *)a2 + v18 + 80);
    v19[11] = v26;
    uint64_t v40 = *(void **)((char *)a2 + v18 + 96);
    v19[12] = v40;
    uint64_t v27 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
    char v38 = &v20[v27];
    uint64_t v39 = (char *)v19 + v27;
    uint64_t v28 = type metadata accessor for TimeZone();
    uint64_t v37 = *(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v29 = v40;
    v37(v39, v38, v28);
    uint64_t v30 = *(int *)(a3 + 24);
    *(uint64_t *)((char *)v4 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    uint64_t v31 = (uint64_t *)((char *)v4 + v30);
    char v32 = (uint64_t *)((char *)a2 + v30);
    uint64_t v33 = *v32;
    swift_retain();
    if (v33)
    {
      uint64_t v34 = v32[1];
      void *v31 = v33;
      v31[1] = v34;
      swift_retain();
    }
    else
    {
      *(_OWORD *)uint64_t v31 = *(_OWORD *)v32;
    }
  }
  return v4;
}

uint64_t destroy for RazzmatazzDetailView(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  long long v4 = (int *)type metadata accessor for Razzmatazz(0);
  uint64_t v5 = a1 + v4[6];
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + v4[7];
  uint64_t v8 = type metadata accessor for Artist();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + v4[8];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v10 = v9 + *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  uint64_t v11 = type metadata accessor for TimeZone();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  uint64_t result = swift_release();
  if (*(void *)(a1 + *(int *)(a2 + 24)))
  {
    return swift_release();
  }
  return result;
}

void *initializeWithCopy for RazzmatazzDetailView(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  uint64_t v7 = (int *)type metadata accessor for Razzmatazz(0);
  uint64_t v8 = v7[6];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for Date();
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  uint64_t v13 = v7[7];
  uint64_t v14 = (char *)a1 + v13;
  long long v15 = (char *)a2 + v13;
  uint64_t v16 = type metadata accessor for Artist();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  uint64_t v17 = v7[8];
  uint64_t v18 = (void *)((char *)a1 + v17);
  long long v19 = (char *)a2 + v17;
  uint64_t v20 = *(void *)((char *)a2 + v17 + 8);
  *uint64_t v18 = *(void *)((char *)a2 + v17);
  v18[1] = v20;
  uint64_t v21 = *(void *)((char *)a2 + v17 + 24);
  _OWORD v18[2] = *(void *)((char *)a2 + v17 + 16);
  v18[3] = v21;
  uint64_t v22 = *(void *)((char *)a2 + v17 + 40);
  v18[4] = *(void *)((char *)a2 + v17 + 32);
  v18[5] = v22;
  uint64_t v23 = *(void *)((char *)a2 + v17 + 56);
  v18[6] = *(void *)((char *)a2 + v17 + 48);
  v18[7] = v23;
  uint64_t v24 = *(void *)((char *)a2 + v17 + 72);
  v18[8] = *(void *)((char *)a2 + v17 + 64);
  v18[9] = v24;
  uint64_t v25 = *(void *)((char *)a2 + v17 + 88);
  v18[10] = *(void *)((char *)a2 + v17 + 80);
  v18[11] = v25;
  char v38 = *(void **)((char *)a2 + v17 + 96);
  v18[12] = v38;
  uint64_t v26 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  uint64_t v36 = &v19[v26];
  uint64_t v37 = (char *)v18 + v26;
  uint64_t v27 = type metadata accessor for TimeZone();
  uint64_t v35 = *(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v28 = v38;
  v35(v37, v36, v27);
  uint64_t v29 = *(int *)(a3 + 24);
  *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
  uint64_t v30 = (void *)((char *)a1 + v29);
  uint64_t v31 = (void *)((char *)a2 + v29);
  uint64_t v32 = *v31;
  swift_retain();
  if (v32)
  {
    uint64_t v33 = v31[1];
    void *v30 = v32;
    v30[1] = v33;
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v30 = *(_OWORD *)v31;
  }
  return a1;
}

void *assignWithCopy for RazzmatazzDetailView(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = (int *)type metadata accessor for Razzmatazz(0);
  uint64_t v7 = v6[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = v6[7];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = type metadata accessor for Artist();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = v6[8];
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (void *)((char *)a2 + v15);
  void *v16 = *(void *)((char *)a2 + v15);
  v16[1] = *(void *)((char *)a2 + v15 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  _OWORD v16[2] = v17[2];
  v16[3] = v17[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16[4] = v17[4];
  v16[5] = v17[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16[6] = v17[6];
  v16[7] = v17[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16[8] = v17[8];
  v16[9] = v17[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16[10] = v17[10];
  v16[11] = v17[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = (void *)v17[12];
  long long v19 = (void *)v16[12];
  v16[12] = v18;
  id v20 = v18;

  uint64_t v21 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  uint64_t v22 = (char *)v16 + v21;
  uint64_t v23 = (char *)v17 + v21;
  uint64_t v24 = type metadata accessor for TimeZone();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 24))(v22, v23, v24);
  *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
  swift_retain();
  swift_release();
  uint64_t v25 = *(int *)(a3 + 24);
  uint64_t v26 = (void *)((char *)a1 + v25);
  uint64_t v27 = (void *)((char *)a2 + v25);
  uint64_t v28 = *(void *)((char *)a1 + v25);
  uint64_t v29 = *v27;
  if (!v28)
  {
    if (v29)
    {
      uint64_t v31 = v27[1];
      void *v26 = v29;
      v26[1] = v31;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
    return a1;
  }
  if (!v29)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v30 = v27[1];
  void *v26 = v29;
  v26[1] = v30;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *initializeWithTake for RazzmatazzDetailView(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = (int *)type metadata accessor for Razzmatazz(0);
  uint64_t v8 = v7[6];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  uint64_t v12 = v7[7];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = type metadata accessor for Artist();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
  uint64_t v16 = v7[8];
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  long long v19 = *(_OWORD *)((char *)a2 + v16 + 16);
  *(_OWORD *)uint64_t v17 = *(_OWORD *)((char *)a2 + v16);
  *((_OWORD *)v17 + 1) = v19;
  long long v20 = *(_OWORD *)((char *)a2 + v16 + 48);
  *((_OWORD *)v17 + 2) = *(_OWORD *)((char *)a2 + v16 + 32);
  *((_OWORD *)v17 + 3) = v20;
  long long v21 = *(_OWORD *)((char *)a2 + v16 + 80);
  *((_OWORD *)v17 + 4) = *(_OWORD *)((char *)a2 + v16 + 64);
  *((_OWORD *)v17 + 5) = v21;
  *((void *)v17 + 12) = *(void *)((char *)a2 + v16 + 96);
  uint64_t v22 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  uint64_t v23 = &v17[v22];
  uint64_t v24 = &v18[v22];
  uint64_t v25 = type metadata accessor for TimeZone();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(v23, v24, v25);
  uint64_t v26 = *(int *)(a3 + 24);
  *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
  uint64_t v27 = (void *)((char *)a1 + v26);
  uint64_t v28 = (uint64_t *)((char *)a2 + v26);
  uint64_t v29 = *v28;
  if (*v28)
  {
    uint64_t v30 = v28[1];
    void *v27 = v29;
    v27[1] = v30;
  }
  else
  {
    *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
  }
  return a1;
}

void *assignWithTake for RazzmatazzDetailView(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = (int *)type metadata accessor for Razzmatazz(0);
  uint64_t v9 = v8[6];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 40))(v10, v11, v12);
  uint64_t v13 = v8[7];
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = type metadata accessor for Artist();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 40))(v14, v15, v16);
  uint64_t v17 = v8[8];
  uint64_t v18 = (void *)((char *)a1 + v17);
  long long v19 = (void *)((char *)a2 + v17);
  uint64_t v20 = *(void *)((char *)a2 + v17 + 8);
  *uint64_t v18 = *(void *)((char *)a2 + v17);
  v18[1] = v20;
  swift_bridgeObjectRelease();
  uint64_t v21 = v19[3];
  _OWORD v18[2] = v19[2];
  v18[3] = v21;
  swift_bridgeObjectRelease();
  uint64_t v22 = v19[5];
  v18[4] = v19[4];
  v18[5] = v22;
  swift_bridgeObjectRelease();
  uint64_t v23 = v19[7];
  v18[6] = v19[6];
  v18[7] = v23;
  swift_bridgeObjectRelease();
  uint64_t v24 = v19[9];
  v18[8] = v19[8];
  v18[9] = v24;
  swift_bridgeObjectRelease();
  uint64_t v25 = v19[11];
  v18[10] = v19[10];
  v18[11] = v25;
  swift_bridgeObjectRelease();
  uint64_t v26 = (void *)v18[12];
  v18[12] = v19[12];

  uint64_t v27 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  uint64_t v28 = (char *)v18 + v27;
  uint64_t v29 = (char *)v19 + v27;
  uint64_t v30 = type metadata accessor for TimeZone();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 40))(v28, v29, v30);
  *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
  swift_release();
  uint64_t v31 = *(int *)(a3 + 24);
  uint64_t v32 = (void *)((char *)a1 + v31);
  uint64_t v33 = (void *)((char *)a2 + v31);
  uint64_t v34 = *(void *)((char *)a1 + v31);
  uint64_t v35 = *v33;
  if (!v34)
  {
    if (v35)
    {
      uint64_t v37 = v33[1];
      *uint64_t v32 = v35;
      v32[1] = v37;
      return a1;
    }
LABEL_7:
    *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
    return a1;
  }
  if (!v35)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v36 = v33[1];
  *uint64_t v32 = v35;
  v32[1] = v36;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for RazzmatazzDetailView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10036F65C);
}

uint64_t sub_10036F65C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Razzmatazz(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for RazzmatazzDetailView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10036F73C);
}

uint64_t sub_10036F73C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for Razzmatazz(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = a2;
  }
  return result;
}

uint64_t type metadata completion function for RazzmatazzDetailView()
{
  uint64_t result = type metadata accessor for Razzmatazz(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_10036F898()
{
  return lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type List<Never, TupleView<(Section<EmptyView, Text, EmptyView>?, Section<Text, VStack<TupleView<(Text, Text, ModifiedContent<Spacer, _FrameLayout>, Button<<<opaque return type of View.labelStyle<A>(_:)>>.0>)>>, EmptyView>, Section<Text, HStack<TupleView<(ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, CornerRadiusModifier>, BorderViewModifier>, Text, TupleView<(Spacer, ListChevron)>?)>>, EmptyView>, Section<Text, <<opaque return type of View.onTapGesture(count:perform:)>>.0, EmptyView>)>> and conformance List<A, B>, &demangling cache variable for type metadata for List<Never, TupleView<(Section<EmptyView, Text, EmptyView>?, Section<Text, VStack<TupleView<(Text, Text, ModifiedContent<Spacer, _FrameLayout>, Button<<<opaque return type of View.labelStyle<A>(_:)>>.0>)>>, EmptyView>, Section<Text, HStack<TupleView<(ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, CornerRadiusModifier>, BorderViewModifier>, Text, TupleView<(Spacer, ListChevron)>?)>>, EmptyView>, Section<Text, <<opaque return type of View.onTapGesture(count:perform:)>>.0, EmptyView>)>>);
}

uint64_t destroy for RazzmatazzDetailView.MapImage(uint64_t a1)
{
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t initializeWithCopy for RazzmatazzDetailView.MapImage(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  uint64_t v5 = *(void **)(a2 + 32);
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = v5;
  *(void *)(a1 + 40) = v4;
  swift_bridgeObjectRetain();
  id v6 = v5;
  swift_retain();
  return a1;
}

void *assignWithCopy for RazzmatazzDetailView.MapImage(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)a1[4];
  uint64_t v5 = (void *)a2[4];
  a1[4] = v5;
  id v6 = v5;

  a1[5] = a2[5];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for RazzmatazzDetailView.MapImage(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);

  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_release();
  return a1;
}

void *type metadata accessor for RazzmatazzDetailView.MapImage()
{
  return &unk_100545EF0;
}

uint64_t associated type witness table accessor for View.Body : View in RazzmatazzDetailView.MapImage()
{
  return swift_getOpaqueTypeConformance2();
}

double partial apply for closure #1 in RazzmatazzDetailView.MapImage.body.getter@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return closure #1 in RazzmatazzDetailView.MapImage.body.getter(a1, (_OWORD *)(v2 + 16), a2);
}

uint64_t outlined retain of AnyLocation<UIImage?>?(uint64_t a1)
{
  return a1;
}

uint64_t sub_10036FABC()
{
  uint64_t v1 = type metadata accessor for GeometryProxy();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_bridgeObjectRelease();

  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

void partial apply for closure #1 in closure #1 in RazzmatazzDetailView.MapImage.body.getter()
{
  type metadata accessor for GeometryProxy();

  closure #1 in closure #1 in RazzmatazzDetailView.MapImage.body.getter();
}

uint64_t lazy protocol witness table accessor for type ModifiedContent<Image, _AspectRatioLayout> and conformance <> ModifiedContent<A, B>(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t type metadata accessor for MKMapItem()
{
  unint64_t result = lazy cache variable for type metadata for MKMapItem;
  if (!lazy cache variable for type metadata for MKMapItem)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for MKMapItem);
  }
  return result;
}

uint64_t objectdestroyTm_11()
{
  swift_bridgeObjectRelease();

  swift_release();

  return swift_deallocObject();
}

void *partial apply for closure #1 in RazzmatazzDetailView.MapImage.createMapSnapshot(width:height:)(void *a1, uint64_t a2)
{
  return closure #1 in RazzmatazzDetailView.MapImage.createMapSnapshot(width:height:)(a1, a2, v2 + 16);
}

uint64_t block_copy_helper_64(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_64()
{
  return swift_release();
}

uint64_t outlined release of AnyLocation<UIImage?>?(uint64_t a1)
{
  return a1;
}

uint64_t partial apply for closure #1 in closure #1 in RazzmatazzDetailView.body.getter@<X0>(uint64_t a1@<X8>)
{
  return closure #1 in closure #1 in RazzmatazzDetailView.body.getter(a1);
}

uint64_t partial apply for closure #2 in closure #1 in RazzmatazzDetailView.body.getter@<X0>(uint64_t a1@<X8>)
{
  return closure #2 in closure #1 in RazzmatazzDetailView.body.getter(*(void *)(v1 + 16), (uint64_t (*)(void))&static HorizontalAlignment.leading.getter, &demangling cache variable for type metadata for _VariadicView.Tree<_VStackLayout, TupleView<(Text, Text, ModifiedContent<Spacer, _FrameLayout>, Button<<<opaque return type of View.labelStyle<A>(_:)>>.0>)>>, (uint64_t (*)(uint64_t))closure #1 in closure #2 in closure #1 in RazzmatazzDetailView.body.getter, a1);
}

uint64_t partial apply for closure #3 in closure #1 in RazzmatazzDetailView.body.getter@<X0>(uint64_t a1@<X8>)
{
  return closure #2 in closure #1 in RazzmatazzDetailView.body.getter(*(void *)(v1 + 16), (uint64_t (*)(void))&static VerticalAlignment.center.getter, &demangling cache variable for type metadata for _VariadicView.Tree<_HStackLayout, TupleView<(ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, CornerRadiusModifier>, BorderViewModifier>, Text, TupleView<(Spacer, ListChevron)>?)>>, (uint64_t (*)(uint64_t))closure #1 in closure #3 in closure #1 in RazzmatazzDetailView.body.getter, a1);
}

uint64_t partial apply for closure #4 in closure #1 in RazzmatazzDetailView.body.getter()
{
  return closure #4 in closure #1 in RazzmatazzDetailView.body.getter(*(void *)(v0 + 16));
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<VStack<TupleView<(ModifiedContent<RazzmatazzDetailView.MapImage, _FrameLayout>, ModifiedContent<Text, _PaddingLayout>)>>, _TraitWritingModifier<ListRowInsetsTraitKey>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<VStack<TupleView<(ModifiedContent<RazzmatazzDetailView.MapImage, _FrameLayout>, ModifiedContent<Text, _PaddingLayout>)>>, _TraitWritingModifier<ListRowInsetsTraitKey>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<VStack<TupleView<(ModifiedContent<RazzmatazzDetailView.MapImage, _FrameLayout>, ModifiedContent<Text, _PaddingLayout>)>>, _TraitWritingModifier<ListRowInsetsTraitKey>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(ModifiedContent<RazzmatazzDetailView.MapImage, _FrameLayout>, ModifiedContent<Text, _PaddingLayout>)>>, _TraitWritingModifier<ListRowInsetsTraitKey>>);
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type VStack<TupleView<(ModifiedContent<RazzmatazzDetailView.MapImage, _FrameLayout>, ModifiedContent<Text, _PaddingLayout>)>> and conformance VStack<A>, &demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<RazzmatazzDetailView.MapImage, _FrameLayout>, ModifiedContent<Text, _PaddingLayout>)>>);
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type _TraitWritingModifier<ListRowInsetsTraitKey> and conformance _TraitWritingModifier<A>, &demangling cache variable for type metadata for _TraitWritingModifier<ListRowInsetsTraitKey>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<VStack<TupleView<(ModifiedContent<RazzmatazzDetailView.MapImage, _FrameLayout>, ModifiedContent<Text, _PaddingLayout>)>>, _TraitWritingModifier<ListRowInsetsTraitKey>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t outlined init with copy of RazzmatazzDetailView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RazzmatazzDetailView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t _s11MusicCoreUI10RazzmatazzVWObTm_0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t partial apply for closure #2 in closure #4 in closure #1 in RazzmatazzDetailView.body.getter()
{
  return partial apply for closure #2 in closure #4 in closure #1 in RazzmatazzDetailView.body.getter(closure #2 in closure #4 in closure #1 in RazzmatazzDetailView.body.getter);
}

uint64_t outlined release of ModifiedContent<VStack<TupleView<(ModifiedContent<RazzmatazzDetailView.MapImage, _FrameLayout>, ModifiedContent<Text, _PaddingLayout>)>>, _TraitWritingModifier<ListRowInsetsTraitKey>>(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 56);
  uint64_t v3 = *(void *)(a1 + 120);
  uint64_t v4 = *(void *)(a1 + 128);
  char v5 = *(unsigned char *)(a1 + 136);
  swift_bridgeObjectRelease();

  swift_release();
  outlined consume of Text.Storage(v3, v4, v5);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t outlined copy of TupleView<(Spacer, ListChevron)>?(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3) {
    return swift_retain();
  }
  return result;
}

uint64_t outlined consume of TupleView<(Spacer, ListChevron)>?(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3) {
    return swift_release();
  }
  return result;
}

uint64_t objectdestroy_12Tm_0()
{
  uint64_t v1 = (int *)(type metadata accessor for RazzmatazzDetailView() - 8);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v3 = (int *)type metadata accessor for Razzmatazz(0);
  uint64_t v4 = v2 + v3[6];
  uint64_t v5 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = v2 + v3[7];
  uint64_t v7 = type metadata accessor for Artist();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  uint64_t v8 = v2 + v3[8];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v9 = v8 + *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  uint64_t v10 = type metadata accessor for TimeZone();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  swift_release();
  if (*(void *)(v2 + v1[8])) {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #1 in closure #2 in closure #1 in RazzmatazzDetailView.body.getter()
{
  return partial apply for closure #2 in closure #4 in closure #1 in RazzmatazzDetailView.body.getter((uint64_t (*)(uint64_t))closure #1 in closure #1 in closure #2 in closure #1 in RazzmatazzDetailView.body.getter);
}

uint64_t partial apply for closure #2 in closure #4 in closure #1 in RazzmatazzDetailView.body.getter(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for RazzmatazzDetailView() - 8);
  uint64_t v3 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  return a1(v3);
}

uint64_t _sSo38UIApplicationOpenExternalURLOptionsKeyaABSHSCWlTm_0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1003702FC()
{
  uint64_t v1 = (int *)(type metadata accessor for RazzmatazzDetailView() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v3 = (int *)type metadata accessor for Razzmatazz(0);
  unint64_t v4 = v0 + v2 + v3[6];
  uint64_t v5 = type metadata accessor for Date();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  unint64_t v6 = v0 + v2 + v3[7];
  uint64_t v7 = type metadata accessor for Artist();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  unint64_t v8 = v0 + v2 + v3[8];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  unint64_t v9 = v8 + *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  uint64_t v10 = type metadata accessor for TimeZone();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  swift_release();
  if (*(void *)(v0 + v2 + v1[8])) {
    swift_release();
  }

  return swift_deallocObject();
}

void partial apply for closure #1 in closure #1 in closure #1 in closure #2 in closure #1 in RazzmatazzDetailView.body.getter(char a1, void *a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for RazzmatazzDetailView() - 8);
  unint64_t v6 = *(void **)(v2 + 16);
  uint64_t v7 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  closure #1 in closure #1 in closure #1 in closure #2 in closure #1 in RazzmatazzDetailView.body.getter(a1, a2, v6, v7);
}

uint64_t sub_10037057C()
{
  uint64_t v1 = (int *)(type metadata accessor for RazzmatazzDetailView() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v3 = (int *)type metadata accessor for Razzmatazz(0);
  unint64_t v4 = v0 + v2 + v3[6];
  uint64_t v5 = type metadata accessor for Date();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  unint64_t v6 = v0 + v2 + v3[7];
  uint64_t v7 = type metadata accessor for Artist();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  unint64_t v8 = v0 + v2 + v3[8];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  unint64_t v9 = v8 + *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  uint64_t v10 = type metadata accessor for TimeZone();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  swift_release();
  if (*(void *)(v0 + v2 + v1[8])) {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #1 in closure #1 in closure #1 in closure #2 in closure #1 in RazzmatazzDetailView.body.getter(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for RazzmatazzDetailView() - 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v7 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  unint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *unint64_t v8 = v2;
  v8[1] = partial apply for closure #1 in static MusicEngagementExtension.performRequest(with:completion:);
  return closure #1 in closure #1 in closure #1 in closure #1 in closure #2 in closure #1 in RazzmatazzDetailView.body.getter(a1, v5, v6, v7);
}

uint64_t outlined destroy of ArtworkImage.Placeholder(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1003708C4()
{
  return lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type GeometryReader<_ConditionalContent<ModifiedContent<Image, _AspectRatioLayout>, ModifiedContent<Color, _AppearanceActionModifier>>> and conformance GeometryReader<A>, &demangling cache variable for type metadata for GeometryReader<_ConditionalContent<ModifiedContent<Image, _AspectRatioLayout>, ModifiedContent<Color, _AppearanceActionModifier>>>);
}

uint64_t RazzmatazzView.init(navigationHandler:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  State.init(wrappedValue:)();
  uint64_t result = AppStorage.init<A>(wrappedValue:_:store:)();
  *(void *)a3 = a1;
  *(void *)(a3 + 8) = a2;
  *(void *)(a3 + 16) = implicit closure #2 in implicit closure #1 in variable initialization expression of RazzmatazzView._controller;
  *(void *)(a3 + 24) = 0;
  *(unsigned char *)(a3 + 32) = 0;
  *(unsigned char *)(a3 + 40) = v7;
  *(void *)(a3 + 48) = v8;
  *(void *)(a3 + 56) = result;
  return result;
}

uint64_t (*variable initialization expression of RazzmatazzView._controller())()
{
  return implicit closure #2 in implicit closure #1 in variable initialization expression of RazzmatazzView._controller;
}

uint64_t property wrapper backing initializer of Radiosity.ViewModifier.isRadiosityEnabled()
{
  State.init(wrappedValue:)();
  return v1;
}

uint64_t property wrapper backing initializer of RazzmatazzView.isFilteringToFavorites()
{
  return AppStorage.init<A>(wrappedValue:_:store:)();
}

uint64_t implicit closure #2 in implicit closure #1 in variable initialization expression of RazzmatazzView._controller()
{
  return RazzmatazzController.init()();
}

uint64_t RazzmatazzView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = (_OWORD *)v1;
  uint64_t v56 = a1;
  uint64_t v49 = type metadata accessor for TaskPriority();
  uint64_t v3 = *(void *)(v49 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for List<Never, TupleView<(Section<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Text.Case?>>, _PaddingLayout>, _TraitWritingModifier<ListRowInsetsTraitKey>>, _ConditionalContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, ForEach<[Razzmatazz], Razzmatazz, RazzmatazzView.CompactListCell>>, EmptyView>, Section<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Text.Case?>>, _PaddingLayout>, _TraitWritingModifier<ListRowInsetsTraitKey>>, ForEach<[Razzmatazz], Razzmatazz, RazzmatazzView.CompactListCell>, EmptyView>)>>);
  uint64_t v6 = *(void *)(v48 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<List<Never, TupleView<(Section<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Text.Case?>>, _PaddingLayout>, _TraitWritingModifier<ListRowInsetsTraitKey>>, _ConditionalContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, ForEach<[Razzmatazz], Razzmatazz, RazzmatazzView.CompactListCell>>, EmptyView>, Section<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Text.Case?>>, _PaddingLayout>, _TraitWritingModifier<ListRowInsetsTraitKey>>, ForEach<[Razzmatazz], Razzmatazz, RazzmatazzView.CompactListCell>, EmptyView>)>>, _TaskModifier>);
  uint64_t v46 = v9;
  __chkstk_darwin();
  uint64_t v57 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.sheet<A>(isPresented:onDismiss:content:)>>.0);
  uint64_t v53 = *(void *)(v52 - 8);
  __chkstk_darwin();
  uint64_t v50 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.toolbar<A>(content:)>>.0);
  uint64_t v55 = *(void *)(v54 - 8);
  __chkstk_darwin();
  uint64_t v51 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TupleView<(Section<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Text.Case?>>, _PaddingLayout>, _TraitWritingModifier<ListRowInsetsTraitKey>>, _ConditionalContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, ForEach<[Razzmatazz], Razzmatazz, RazzmatazzView.CompactListCell>>, EmptyView>, Section<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Text.Case?>>, _PaddingLayout>, _TraitWritingModifier<ListRowInsetsTraitKey>>, ForEach<[Razzmatazz], Razzmatazz, RazzmatazzView.CompactListCell>, EmptyView>)>);
  lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type TupleView<(Section<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Text.Case?>>, _PaddingLayout>, _TraitWritingModifier<ListRowInsetsTraitKey>>, _ConditionalContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, ForEach<[Razzmatazz], Razzmatazz, RazzmatazzView.CompactListCell>>, EmptyView>, Section<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Text.Case?>>, _PaddingLayout>, _TraitWritingModifier<ListRowInsetsTraitKey>>, ForEach<[Razzmatazz], Razzmatazz, RazzmatazzView.CompactListCell>, EmptyView>)> and conformance TupleView<A>, &demangling cache variable for type metadata for TupleView<(Section<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Text.Case?>>, _PaddingLayout>, _TraitWritingModifier<ListRowInsetsTraitKey>>, _ConditionalContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, ForEach<[Razzmatazz], Razzmatazz, RazzmatazzView.CompactListCell>>, EmptyView>, Section<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Text.Case?>>, _PaddingLayout>, _TraitWritingModifier<ListRowInsetsTraitKey>>, ForEach<[Razzmatazz], Razzmatazz, RazzmatazzView.CompactListCell>, EmptyView>)>);
  List<>.init(content:)();
  uint64_t v13 = *(void *)(v1 + 8);
  long long v14 = *(_OWORD *)(v1 + 16);
  char v68 = *(unsigned char *)(v1 + 32);
  long long v66 = *(_OWORD *)(v1 + 40);
  long long v67 = v14;
  uint64_t v58 = *(void *)(v1 + 56);
  uint64_t v15 = (_OWORD *)swift_allocObject();
  long long v16 = *(_OWORD *)(v1 + 16);
  v15[1] = *(_OWORD *)v1;
  v15[2] = v16;
  long long v17 = *(_OWORD *)(v1 + 48);
  v15[3] = *(_OWORD *)(v1 + 32);
  void v15[4] = v17;
  uint64_t v47 = v13;
  swift_retain();
  outlined retain of StateObject<RazzmatazzController>((uint64_t)&v67);
  outlined retain of State<Bool>((uint64_t)&v66);
  swift_retain();
  static TaskPriority.userInitiated.getter();
  uint64_t v18 = v57;
  long long v19 = &v57[*(int *)(v9 + 36)];
  uint64_t v20 = type metadata accessor for _TaskModifier();
  uint64_t v21 = v49;
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(&v19[*(int *)(v20 + 20)], v5, v49);
  *(void *)long long v19 = &async function pointer to partial apply for closure #2 in RazzmatazzView.body.getter;
  *((void *)v19 + 1) = v15;
  uint64_t v22 = v18;
  uint64_t v23 = v48;
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v22, v8, v48);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v21);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v23);
  long long v65 = v66;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Bool>);
  State.projectedValue.getter();
  uint64_t v24 = (_OWORD *)swift_allocObject();
  long long v25 = v2[1];
  v24[1] = *v2;
  v24[2] = v25;
  long long v26 = v2[3];
  v24[3] = v2[2];
  v24[4] = v26;
  swift_retain();
  outlined retain of StateObject<RazzmatazzController>((uint64_t)&v67);
  outlined retain of State<Bool>((uint64_t)&v66);
  uint64_t v27 = type metadata accessor for CitySelectionView(0);
  unint64_t v28 = lazy protocol witness table accessor for type ModifiedContent<List<Never, TupleView<(Section<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Text.Case?>>, _PaddingLayout>, _TraitWritingModifier<ListRowInsetsTraitKey>>, _ConditionalContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, ForEach<[Razzmatazz], Razzmatazz, RazzmatazzView.CompactListCell>>, EmptyView>, Section<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Text.Case?>>, _PaddingLayout>, _TraitWritingModifier<ListRowInsetsTraitKey>>, ForEach<[Razzmatazz], Razzmatazz, RazzmatazzView.CompactListCell>, EmptyView>)>>, _TaskModifier> and conformance <> ModifiedContent<A, B>();
  uint64_t v29 = _s7SwiftUI13_TaskModifierVAcA04ViewD0AAWlTm_1(&lazy protocol witness table cache variable for type CitySelectionView and conformance CitySelectionView, (void (*)(uint64_t))type metadata accessor for CitySelectionView);
  swift_retain();
  uint64_t v30 = v50;
  uint64_t v31 = v46;
  uint64_t v32 = (uint64_t)v57;
  View.sheet<A>(isPresented:onDismiss:content:)();
  swift_release();
  swift_release();
  swift_release();
  outlined destroy of TaskPriority?(v32, &demangling cache variable for type metadata for ModifiedContent<List<Never, TupleView<(Section<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Text.Case?>>, _PaddingLayout>, _TraitWritingModifier<ListRowInsetsTraitKey>>, _ConditionalContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, ForEach<[Razzmatazz], Razzmatazz, RazzmatazzView.CompactListCell>>, EmptyView>, Section<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Text.Case?>>, _PaddingLayout>, _TraitWritingModifier<ListRowInsetsTraitKey>>, ForEach<[Razzmatazz], Razzmatazz, RazzmatazzView.CompactListCell>, EmptyView>)>>, _TaskModifier>);
  uint64_t v59 = v2;
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of static ToolbarContentBuilder.buildBlock<A>(_:)>>.0);
  uint64_t v61 = v31;
  uint64_t v62 = v27;
  unint64_t v63 = v28;
  uint64_t v64 = v29;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ToolbarItem<(), <<opaque return type of View.menuStyle<A>(_:)>>.0>);
  uint64_t v36 = lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type ToolbarItem<(), <<opaque return type of View.menuStyle<A>(_:)>>.0> and conformance ToolbarItem<A, B>, &demangling cache variable for type metadata for ToolbarItem<(), <<opaque return type of View.menuStyle<A>(_:)>>.0>);
  uint64_t v61 = v35;
  uint64_t v62 = v36;
  uint64_t v37 = swift_getOpaqueTypeConformance2();
  char v38 = v51;
  uint64_t v39 = v52;
  View.toolbar<A>(content:)();
  (*(void (**)(char *, uint64_t))(v53 + 8))(v30, v39);
  AppStorage.wrappedValue.getter();
  LOBYTE(v65) = v61;
  uint64_t v40 = (_OWORD *)swift_allocObject();
  long long v41 = v2[1];
  v40[1] = *v2;
  v40[2] = v41;
  long long v42 = v2[3];
  v40[3] = v2[2];
  v40[4] = v42;
  swift_retain();
  outlined retain of StateObject<RazzmatazzController>((uint64_t)&v67);
  outlined retain of State<Bool>((uint64_t)&v66);
  swift_retain();
  uint64_t v61 = v39;
  uint64_t v62 = v33;
  unint64_t v63 = OpaqueTypeConformance2;
  uint64_t v64 = v37;
  swift_getOpaqueTypeConformance2();
  uint64_t v43 = v54;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(v38, v43);
}

uint64_t closure #1 in RazzmatazzView.body.getter@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  long long v42 = a2;
  uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Text.Case?>>, _PaddingLayout>, _TraitWritingModifier<ListRowInsetsTraitKey>>);
  __chkstk_darwin();
  uint64_t v4 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Section<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Text.Case?>>, _PaddingLayout>, _TraitWritingModifier<ListRowInsetsTraitKey>>, ForEach<[Razzmatazz], Razzmatazz, RazzmatazzView.CompactListCell>, EmptyView>);
  uint64_t v38 = *(void *)(v41 - 8);
  __chkstk_darwin();
  uint64_t v40 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v43 = (char *)&v34 - v6;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HStack<TupleView<(Text, Text, Button<Text>)>>);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Text.Case?>>, _PaddingLayout>, _TraitWritingModifier<ListRowInsetsTraitKey>>);
  __chkstk_darwin();
  uint64_t v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v12 = (char *)&v34 - v11;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Section<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Text.Case?>>, _PaddingLayout>, _TraitWritingModifier<ListRowInsetsTraitKey>>, _ConditionalContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, ForEach<[Razzmatazz], Razzmatazz, RazzmatazzView.CompactListCell>>, EmptyView>);
  uint64_t v36 = *(void *)(v13 - 8);
  uint64_t v14 = v36;
  uint64_t v37 = v13;
  __chkstk_darwin();
  long long v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v18 = (char *)&v34 - v17;
  uint64_t v45 = a1;
  *(void *)uint64_t v8 = static VerticalAlignment.center.getter();
  *((void *)v8 + 1) = 0;
  unsigned char v8[16] = 0;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_HStackLayout, TupleView<(Text, Text, Button<Text>)>>);
  closure #1 in closure #2 in closure #1 in RazzmatazzView.body.getter(a1, (uint64_t)&v8[*(int *)(v19 + 44)]);
  specialized View.sectionHeaderStyle()((uint64_t)v10);
  outlined destroy of TaskPriority?((uint64_t)v8, &demangling cache variable for type metadata for HStack<TupleView<(Text, Text, Button<Text>)>>);
  outlined init with take of PresentationSource?((uint64_t)v10, (uint64_t)v12, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Text.Case?>>, _PaddingLayout>, _TraitWritingModifier<ListRowInsetsTraitKey>>);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, ForEach<[Razzmatazz], Razzmatazz, RazzmatazzView.CompactListCell>>);
  lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Text.Case?>>, _PaddingLayout>, _TraitWritingModifier<ListRowInsetsTraitKey>> and conformance <> ModifiedContent<A, B>();
  lazy protocol witness table accessor for type _ConditionalContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, ForEach<[Razzmatazz], Razzmatazz, RazzmatazzView.CompactListCell>> and conformance <> _ConditionalContent<A, B>();
  uint64_t v20 = v18;
  uint64_t v35 = v18;
  Section<>.init(header:content:)();
  uint64_t v44 = a1;
  specialized View.sectionHeaderStyle()(0x6F637055206C6C41, 0xEC000000676E696DLL, 0, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v4);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ForEach<[Razzmatazz], Razzmatazz, RazzmatazzView.CompactListCell>);
  lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Text.Case?>>, _PaddingLayout>, _TraitWritingModifier<ListRowInsetsTraitKey>> and conformance <> ModifiedContent<A, B>();
  lazy protocol witness table accessor for type ForEach<[Razzmatazz], Razzmatazz, RazzmatazzView.CompactListCell> and conformance <> ForEach<A, B, C>();
  uint64_t v21 = v43;
  Section<>.init(header:content:)();
  uint64_t v22 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
  uint64_t v34 = v16;
  uint64_t v23 = v37;
  v22(v16, v20, v37);
  uint64_t v24 = v38;
  long long v25 = *(void (**)(char *, char *, uint64_t))(v38 + 16);
  long long v26 = v40;
  uint64_t v27 = v21;
  uint64_t v28 = v41;
  v25(v40, v27, v41);
  uint64_t v29 = v42;
  v22(v42, v16, v23);
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Section<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Text.Case?>>, _PaddingLayout>, _TraitWritingModifier<ListRowInsetsTraitKey>>, _ConditionalContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, ForEach<[Razzmatazz], Razzmatazz, RazzmatazzView.CompactListCell>>, EmptyView>, Section<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Text.Case?>>, _PaddingLayout>, _TraitWritingModifier<ListRowInsetsTraitKey>>, ForEach<[Razzmatazz], Razzmatazz, RazzmatazzView.CompactListCell>, EmptyView>));
  v25(&v29[*(int *)(v30 + 48)], v26, v28);
  uint64_t v31 = *(void (**)(char *, uint64_t))(v24 + 8);
  v31(v43, v28);
  uint64_t v32 = *(void (**)(char *, uint64_t))(v36 + 8);
  v32(v35, v23);
  v31(v26, v28);
  return ((uint64_t (*)(char *, uint64_t))v32)(v34, v23);
}

uint64_t partial apply for closure #1 in RazzmatazzView.body.getter@<X0>(char *a1@<X8>)
{
  return closure #1 in RazzmatazzView.body.getter(*(void *)(v1 + 16), a1);
}

uint64_t closure #1 in closure #1 in RazzmatazzView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v39 = a2;
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ForEach<[Razzmatazz], Razzmatazz, RazzmatazzView.CompactListCell>);
  uint64_t v36 = *(void *)(v40 - 8);
  __chkstk_darwin();
  uint64_t v35 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, ForEach<[Razzmatazz], Razzmatazz, RazzmatazzView.CompactListCell>>.Storage);
  __chkstk_darwin();
  uint64_t v38 = (uint64_t *)((char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = *(void *)(a1 + 24);
  char v7 = *(unsigned char *)(a1 + 32);
  type metadata accessor for RazzmatazzController(0);
  _s7SwiftUI13_TaskModifierVAcA04ViewD0AAWlTm_1(&lazy protocol witness table cache variable for type RazzmatazzController and conformance RazzmatazzController, (void (*)(uint64_t))type metadata accessor for RazzmatazzController);
  StateObject.wrappedValue.getter();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v8 = (uint64_t)v41;
  v46[0] = *(_OWORD *)(a1 + 40);
  uint64_t v45 = *(void *)(a1 + 56);
  swift_retain();
  KeyValueObservationTrigger.keyPath.getter();
  outlined retain of State<Bool>((uint64_t)v46);
  outlined retain of AnyLocation<UIImage?>?((uint64_t)&v45);
  uint64_t v9 = specialized _ArrayProtocol.filter(_:)(v8, v5, v6, v7);
  swift_release();
  outlined consume of StateObject<RazzmatazzController>.Storage();
  outlined release of NoticePresentationView((uint64_t)v46);
  outlined release of AnyLocation<UIImage?>?((uint64_t)&v45);
  swift_bridgeObjectRelease();
  uint64_t v10 = v9[2];
  swift_bridgeObjectRelease();
  if (v10)
  {
    StateObject.wrappedValue.getter();
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v11 = (uint64_t)v41;
    swift_retain();
    KeyValueObservationTrigger.keyPath.getter();
    outlined retain of State<Bool>((uint64_t)v46);
    outlined retain of AnyLocation<UIImage?>?((uint64_t)&v45);
    uint64_t v12 = specialized _ArrayProtocol.filter(_:)(v11, v5, v6, v7);
    swift_release();
    outlined consume of StateObject<RazzmatazzController>.Storage();
    outlined release of NoticePresentationView((uint64_t)v46);
    outlined release of AnyLocation<UIImage?>?((uint64_t)&v45);
    swift_bridgeObjectRelease();
    uint64_t v41 = v12;
    swift_getKeyPath();
    uint64_t v13 = (_OWORD *)swift_allocObject();
    long long v14 = *(_OWORD *)(a1 + 16);
    v13[1] = *(_OWORD *)a1;
    void v13[2] = v14;
    long long v15 = *(_OWORD *)(a1 + 48);
    void v13[3] = *(_OWORD *)(a1 + 32);
    _OWORD v13[4] = v15;
    swift_retain();
    KeyValueObservationTrigger.keyPath.getter();
    outlined retain of State<Bool>((uint64_t)v46);
    outlined retain of AnyLocation<UIImage?>?((uint64_t)&v45);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [Razzmatazz]);
    type metadata accessor for RazzmatazzView.CompactListCell();
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type [Razzmatazz] and conformance [A], &demangling cache variable for type metadata for [Razzmatazz]);
    _s7SwiftUI13_TaskModifierVAcA04ViewD0AAWlTm_1(&lazy protocol witness table cache variable for type Razzmatazz and conformance Razzmatazz, (void (*)(uint64_t))type metadata accessor for Razzmatazz);
    _s7SwiftUI13_TaskModifierVAcA04ViewD0AAWlTm_1(&lazy protocol witness table cache variable for type RazzmatazzView.CompactListCell and conformance RazzmatazzView.CompactListCell, (void (*)(uint64_t))type metadata accessor for RazzmatazzView.CompactListCell);
    long long v16 = v35;
    ForEach<>.init(_:id:content:)();
    uint64_t v17 = v36;
    uint64_t v18 = v40;
    (*(void (**)(uint64_t *, char *, uint64_t))(v36 + 16))(v38, v16, v40);
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type ForEach<[Razzmatazz], Razzmatazz, RazzmatazzView.CompactListCell> and conformance <> ForEach<A, B, C>();
    _ConditionalContent<>.init(storage:)();
    return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v16, v18);
  }
  else
  {
    uint64_t v41 = 0;
    unint64_t v42 = 0xE000000000000000;
    _StringGuts.grow(_:)(25);
    swift_bridgeObjectRelease();
    unint64_t v43 = 0xD000000000000017;
    unint64_t v44 = 0x8000000100474750;
    StateObject.wrappedValue.getter();
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v20 = (uint64_t)v41;
    uint64_t v21 = (void *)v42;
    swift_bridgeObjectRelease();
    v22._countAndFlagsBits = v20;
    v22._object = v21;
    String.append(_:)(v22);
    swift_bridgeObjectRelease();
    LODWORD(v41) = static HierarchicalShapeStyle.secondary.getter();
    uint64_t v23 = Text.foregroundStyle<A>(_:)();
    uint64_t v25 = v24;
    char v27 = v26;
    uint64_t v29 = v28;
    swift_bridgeObjectRelease();
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v31 = static Font.subheadline.getter();
    uint64_t v32 = swift_getKeyPath();
    uint64_t v33 = v38;
    *uint64_t v38 = v23;
    v33[1] = v25;
    *((unsigned char *)v33 + 16) = v27 & 1;
    v33[3] = v29;
    v33[4] = KeyPath;
    *((unsigned char *)v33 + 40) = 1;
    v33[6] = v32;
    v33[7] = v31;
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type ForEach<[Razzmatazz], Razzmatazz, RazzmatazzView.CompactListCell> and conformance <> ForEach<A, B, C>();
    return _ConditionalContent<>.init(storage:)();
  }
}

uint64_t closure #1 in closure #2 in closure #1 in RazzmatazzView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&_s7SwiftUI6ButtonVyAA4TextVGMD_0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v19 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v18 = (char *)&v18 - v7;
  type metadata accessor for RazzmatazzController(0);
  _s7SwiftUI13_TaskModifierVAcA04ViewD0AAWlTm_1(&lazy protocol witness table cache variable for type RazzmatazzController and conformance RazzmatazzController, (void (*)(uint64_t))type metadata accessor for RazzmatazzController);
  StateObject.wrappedValue.getter();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  long long v8 = v21;
  swift_bridgeObjectRelease();
  long long v20 = v8;
  long long v21 = *(_OWORD *)(a1 + 40);
  uint64_t v22 = *(void *)(a1 + 56);
  uint64_t v9 = (_OWORD *)swift_allocObject();
  long long v10 = *(_OWORD *)(a1 + 16);
  v9[1] = *(_OWORD *)a1;
  void v9[2] = v10;
  long long v11 = *(_OWORD *)(a1 + 48);
  _OWORD v9[3] = *(_OWORD *)(a1 + 32);
  v9[4] = v11;
  swift_retain();
  KeyValueObservationTrigger.keyPath.getter();
  outlined retain of State<Bool>((uint64_t)&v21);
  outlined retain of AnyLocation<UIImage?>?((uint64_t)&v22);
  _sS2SSysWl_1();
  uint64_t v12 = v18;
  Button<>.init<A>(_:action:)();
  uint64_t v13 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  long long v14 = v19;
  v13(v19, v12, v4);
  *(_OWORD *)a2 = xmmword_1004A3CB0;
  *(unsigned char *)(a2 + 16) = 0;
  *(void *)(a2 + 24) = _swiftEmptyArrayStorage;
  *(_OWORD *)(a2 + 32) = xmmword_1004A3CC0;
  *(unsigned char *)(a2 + 48) = 0;
  *(void *)(a2 + 56) = _swiftEmptyArrayStorage;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Text, Text, Button<Text>));
  v13((char *)(a2 + *(int *)(v15 + 64)), v14, v4);
  outlined copy of Text.Storage(1918985550, 0xE400000000000000, 0);
  swift_bridgeObjectRetain();
  outlined copy of Text.Storage(32, 0xE100000000000000, 0);
  long long v16 = *(void (**)(char *, uint64_t))(v5 + 8);
  swift_bridgeObjectRetain();
  v16(v12, v4);
  v16(v14, v4);
  outlined consume of Text.Storage(32, 0xE100000000000000, 0);
  swift_bridgeObjectRelease();
  outlined consume of Text.Storage(1918985550, 0xE400000000000000, 0);
  return swift_bridgeObjectRelease();
}

uint64_t specialized View.sectionHeaderStyle()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v40 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Text.Case?);
  __chkstk_darwin();
  uint64_t v2 = (char *)&v37 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(Text, Text, Button<Text>)>>, _EnvironmentKeyWritingModifier<Font?>>);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.fontWeight(_:)>>.0);
  uint64_t v6 = *(void *)(v38 - 8);
  __chkstk_darwin();
  long long v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Text.Case?>>)
     - 8;
  __chkstk_darwin();
  long long v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v39 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Text.Case?>>, _PaddingLayout>);
  __chkstk_darwin();
  uint64_t v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = static Font.callout.getter();
  uint64_t KeyPath = swift_getKeyPath();
  outlined init with copy of (String, Any)(v37, (uint64_t)v5, &demangling cache variable for type metadata for HStack<TupleView<(Text, Text, Button<Text>)>>);
  long long v16 = (uint64_t *)&v5[*(int *)(v3 + 36)];
  uint64_t *v16 = KeyPath;
  v16[1] = v14;
  static Font.Weight.semibold.getter();
  lazy protocol witness table accessor for type ModifiedContent<HStack<TupleView<(Text, Text, Button<Text>)>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>();
  View.fontWeight(_:)();
  outlined destroy of TaskPriority?((uint64_t)v5, &demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(Text, Text, Button<Text>)>>, _EnvironmentKeyWritingModifier<Font?>>);
  uint64_t v17 = type metadata accessor for Text.Case();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v2, 1, 1, v17);
  uint64_t v18 = swift_getKeyPath();
  uint64_t v19 = (uint64_t *)&v11[*(int *)(v9 + 44)];
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Text.Case?>);
  outlined init with copy of (String, Any)((uint64_t)v2, (uint64_t)v19 + *(int *)(v20 + 28), &demangling cache variable for type metadata for Text.Case?);
  uint64_t *v19 = v18;
  uint64_t v21 = v38;
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v11, v8, v38);
  outlined destroy of TaskPriority?((uint64_t)v2, &demangling cache variable for type metadata for Text.Case?);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v21);
  char v22 = static Edge.Set.horizontal.getter();
  if (one-time initialization token for mediumSpacing != -1) {
    swift_once();
  }
  EdgeInsets.init(_all:)();
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  outlined init with copy of (String, Any)((uint64_t)v11, (uint64_t)v13, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Text.Case?>>);
  uint64_t v31 = &v13[*(int *)(v39 + 36)];
  char *v31 = v22;
  *((void *)v31 + 1) = v24;
  *((void *)v31 + 2) = v26;
  *((void *)v31 + 3) = v28;
  *((void *)v31 + 4) = v30;
  v31[40] = 0;
  outlined destroy of TaskPriority?((uint64_t)v11, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Text.Case?>>);
  if (one-time initialization token for zero != -1) {
    swift_once();
  }
  long long v39 = static EdgeInsets.zero;
  uint64_t v32 = qword_1005ADD88;
  uint64_t v33 = unk_1005ADD90;
  uint64_t v34 = v40;
  outlined init with copy of (String, Any)((uint64_t)v13, v40, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Text.Case?>>, _PaddingLayout>);
  uint64_t v35 = v34
      + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Text.Case?>>, _PaddingLayout>, _TraitWritingModifier<ListRowInsetsTraitKey>>)
               + 36);
  *(_OWORD *)uint64_t v35 = v39;
  *(void *)(v35 + 16) = v32;
  *(void *)(v35 + 24) = v33;
  *(unsigned char *)(v35 + 32) = 0;
  return outlined destroy of TaskPriority?((uint64_t)v13, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Text.Case?>>, _PaddingLayout>);
}

uint64_t specialized View.sectionHeaderStyle()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v50 = a5;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Text.Case?);
  __chkstk_darwin();
  uint64_t v45 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.fontWeight(_:)>>.0);
  uint64_t v46 = *(void *)(v10 - 8);
  uint64_t v47 = v10;
  __chkstk_darwin();
  unint64_t v44 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Text.Case?>>)
      - 8;
  __chkstk_darwin();
  unint64_t v43 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v48 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Text.Case?>>, _PaddingLayout>);
  __chkstk_darwin();
  uint64_t v49 = (uint64_t)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = static Font.callout.getter();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v51 = a1;
  uint64_t v52 = a2;
  char v53 = a3 & 1;
  uint64_t v42 = a4;
  uint64_t v54 = a4;
  uint64_t v55 = KeyPath;
  uint64_t v56 = v15;
  outlined copy of Text.Storage(a1, a2, a3 & 1);
  swift_bridgeObjectRetain();
  static Font.Weight.semibold.getter();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Text, _EnvironmentKeyWritingModifier<Font?>>);
  lazy protocol witness table accessor for type ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<Text, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<Text, _EnvironmentKeyWritingModifier<Font?>>, (unint64_t *)&_s7SwiftUI30_EnvironmentKeyWritingModifierVyAA4FontVSgGACyxGAA04ViewF0AAWL_0, &_s7SwiftUI30_EnvironmentKeyWritingModifierVyAA4FontVSgGMD_0);
  uint64_t v17 = v44;
  View.fontWeight(_:)();
  outlined consume of Text.Storage(a1, a2, a3 & 1);
  uint64_t v18 = (uint64_t)v43;
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v19 = type metadata accessor for Text.Case();
  uint64_t v20 = (uint64_t)v45;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v45, 1, 1, v19);
  uint64_t v21 = swift_getKeyPath();
  char v22 = (uint64_t *)(v18 + *(int *)(v12 + 44));
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Text.Case?>);
  outlined init with copy of (String, Any)(v20, (uint64_t)v22 + *(int *)(v23 + 28), &demangling cache variable for type metadata for Text.Case?);
  uint64_t *v22 = v21;
  uint64_t v25 = v46;
  uint64_t v24 = v47;
  (*(void (**)(uint64_t, char *, uint64_t))(v46 + 16))(v18, v17, v47);
  outlined destroy of TaskPriority?(v20, &demangling cache variable for type metadata for Text.Case?);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v17, v24);
  char v26 = static Edge.Set.horizontal.getter();
  if (one-time initialization token for mediumSpacing != -1) {
    swift_once();
  }
  EdgeInsets.init(_all:)();
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  uint64_t v34 = v33;
  uint64_t v35 = v49;
  outlined init with copy of (String, Any)(v18, v49, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Text.Case?>>);
  uint64_t v36 = v35 + *(int *)(v48 + 36);
  *(unsigned char *)uint64_t v36 = v26;
  *(void *)(v36 + 8) = v28;
  *(void *)(v36 + 16) = v30;
  *(void *)(v36 + 24) = v32;
  *(void *)(v36 + 32) = v34;
  *(unsigned char *)(v36 + 40) = 0;
  outlined destroy of TaskPriority?(v18, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Text.Case?>>);
  if (one-time initialization token for zero != -1) {
    swift_once();
  }
  long long v48 = static EdgeInsets.zero;
  uint64_t v37 = qword_1005ADD88;
  uint64_t v38 = unk_1005ADD90;
  uint64_t v39 = v50;
  outlined init with copy of (String, Any)(v35, v50, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Text.Case?>>, _PaddingLayout>);
  uint64_t v40 = v39
      + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Text.Case?>>, _PaddingLayout>, _TraitWritingModifier<ListRowInsetsTraitKey>>)
               + 36);
  *(_OWORD *)uint64_t v40 = v48;
  *(void *)(v40 + 16) = v37;
  *(void *)(v40 + 24) = v38;
  *(unsigned char *)(v40 + 32) = 0;
  return outlined destroy of TaskPriority?(v35, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Text.Case?>>, _PaddingLayout>);
}

uint64_t closure #3 in closure #1 in RazzmatazzView.body.getter(uint64_t a1)
{
  type metadata accessor for RazzmatazzController(0);
  _s7SwiftUI13_TaskModifierVAcA04ViewD0AAWlTm_1(&lazy protocol witness table cache variable for type RazzmatazzController and conformance RazzmatazzController, (void (*)(uint64_t))type metadata accessor for RazzmatazzController);
  StateObject.wrappedValue.getter();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  swift_getKeyPath();
  long long v7 = *(_OWORD *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 56);
  uint64_t v2 = (_OWORD *)swift_allocObject();
  long long v3 = *(_OWORD *)(a1 + 16);
  v2[1] = *(_OWORD *)a1;
  v2[2] = v3;
  long long v4 = *(_OWORD *)(a1 + 48);
  v2[3] = *(_OWORD *)(a1 + 32);
  v2[4] = v4;
  swift_retain();
  KeyValueObservationTrigger.keyPath.getter();
  outlined retain of State<Bool>((uint64_t)&v7);
  outlined retain of AnyLocation<UIImage?>?((uint64_t)&v6);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [Razzmatazz]);
  type metadata accessor for RazzmatazzView.CompactListCell();
  lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type [Razzmatazz] and conformance [A], &demangling cache variable for type metadata for [Razzmatazz]);
  _s7SwiftUI13_TaskModifierVAcA04ViewD0AAWlTm_1(&lazy protocol witness table cache variable for type Razzmatazz and conformance Razzmatazz, (void (*)(uint64_t))type metadata accessor for Razzmatazz);
  _s7SwiftUI13_TaskModifierVAcA04ViewD0AAWlTm_1(&lazy protocol witness table cache variable for type RazzmatazzView.CompactListCell and conformance RazzmatazzView.CompactListCell, (void (*)(uint64_t))type metadata accessor for RazzmatazzView.CompactListCell);
  return ForEach<>.init(_:id:content:)();
}

uint64_t closure #1 in closure #1 in closure #1 in RazzmatazzView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  outlined init with copy of RazzmatazzView.CompactListCell(a1, a3, type metadata accessor for Razzmatazz);
  uint64_t v6 = *a2;
  uint64_t v5 = a2[1];
  long long v7 = (void *)(a3 + *(int *)(type metadata accessor for RazzmatazzView.CompactListCell() + 20));
  void *v7 = v6;
  v7[1] = v5;

  return swift_retain();
}

uint64_t closure #2 in RazzmatazzView.body.getter(uint64_t a1)
{
  v1[2] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&_sScPSgMD_2);
  v1[3] = swift_task_alloc();
  v1[4] = type metadata accessor for MainActor();
  v1[5] = static MainActor.shared.getter();
  v1[6] = static MainActor.shared.getter();
  uint64_t v3 = *(void *)(a1 + 56);
  long long v4 = (void *)swift_task_alloc();
  v1[7] = v4;
  *long long v4 = v1;
  v4[1] = closure #2 in RazzmatazzView.body.getter;
  return specialized RazzmatazzView.loadLibraryArtists()(v3);
}

{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  *(void *)(*(void *)v1 + 64) = a1;
  swift_task_dealloc();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(closure #2 in RazzmatazzView.body.getter, v3, v2);
}

uint64_t closure #2 in RazzmatazzView.body.getter()
{
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t v2 = *(void *)(v0 + 24);
  swift_release();
  type metadata accessor for RazzmatazzController(0);
  _s7SwiftUI13_TaskModifierVAcA04ViewD0AAWlTm_1(&lazy protocol witness table cache variable for type RazzmatazzController and conformance RazzmatazzController, (void (*)(uint64_t))type metadata accessor for RazzmatazzController);
  uint64_t v3 = StateObject.wrappedValue.getter();
  uint64_t v4 = type metadata accessor for TaskPriority();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v2, 1, 1, v4);
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v5 = static MainActor.shared.getter();
  uint64_t v6 = (void *)swift_allocObject();
  _OWORD v6[2] = v5;
  v6[3] = &protocol witness table for MainActor;
  v6[4] = v3;
  v6[5] = v1;
  _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5_1(v2, (uint64_t)&closure #1 in RazzmatazzController.load(for:)partial apply, (uint64_t)v6);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(closure #2 in RazzmatazzView.body.getter, v8, v7);
}

uint64_t outlined consume of StateObject<RazzmatazzController>.Storage()
{
  return swift_release();
}

uint64_t partial apply for closure #2 in RazzmatazzView.body.getter()
{
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = closure #3 in static Actions.ReportConcern.action(context:);
  return closure #2 in RazzmatazzView.body.getter(v0 + 16);
}

uint64_t outlined retain of StateObject<RazzmatazzController>(uint64_t a1)
{
  return a1;
}

uint64_t outlined retain of State<Bool>(uint64_t a1)
{
  return a1;
}

uint64_t closure #3 in RazzmatazzView.body.getter@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for RazzmatazzController(0);
  _s7SwiftUI13_TaskModifierVAcA04ViewD0AAWlTm_1(&lazy protocol witness table cache variable for type RazzmatazzController and conformance RazzmatazzController, (void (*)(uint64_t))type metadata accessor for RazzmatazzController);
  StateObject.wrappedValue.getter();
  *(void *)a1 = ObservedObject.init(wrappedValue:)();
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = implicit closure #2 in implicit closure #1 in variable initialization expression of CitySelectionView._citySearchController;
  *(void *)(a1 + 24) = 0;
  *(unsigned char *)(a1 + 32) = 0;
  uint64_t v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for CitySelectionView(0) + 24));
  uint64_t *v3 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DismissAction>.Content);

  return swift_storeEnumTagMultiPayload();
}

uint64_t partial apply for closure #3 in RazzmatazzView.body.getter@<X0>(uint64_t a1@<X8>)
{
  return closure #3 in RazzmatazzView.body.getter(a1);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<List<Never, TupleView<(Section<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Text.Case?>>, _PaddingLayout>, _TraitWritingModifier<ListRowInsetsTraitKey>>, _ConditionalContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, ForEach<[Razzmatazz], Razzmatazz, RazzmatazzView.CompactListCell>>, EmptyView>, Section<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Text.Case?>>, _PaddingLayout>, _TraitWritingModifier<ListRowInsetsTraitKey>>, ForEach<[Razzmatazz], Razzmatazz, RazzmatazzView.CompactListCell>, EmptyView>)>>, _TaskModifier> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<List<Never, TupleView<(Section<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Text.Case?>>, _PaddingLayout>, _TraitWritingModifier<ListRowInsetsTraitKey>>, _ConditionalContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, ForEach<[Razzmatazz], Razzmatazz, RazzmatazzView.CompactListCell>>, EmptyView>, Section<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Text.Case?>>, _PaddingLayout>, _TraitWritingModifier<ListRowInsetsTraitKey>>, ForEach<[Razzmatazz], Razzmatazz, RazzmatazzView.CompactListCell>, EmptyView>)>>, _TaskModifier> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<List<Never, TupleView<(Section<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Text.Case?>>, _PaddingLayout>, _TraitWritingModifier<ListRowInsetsTraitKey>>, _ConditionalContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, ForEach<[Razzmatazz], Razzmatazz, RazzmatazzView.CompactListCell>>, EmptyView>, Section<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Text.Case?>>, _PaddingLayout>, _TraitWritingModifier<ListRowInsetsTraitKey>>, ForEach<[Razzmatazz], Razzmatazz, RazzmatazzView.CompactListCell>, EmptyView>)>>, _TaskModifier> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<List<Never, TupleView<(Section<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Text.Case?>>, _PaddingLayout>, _TraitWritingModifier<ListRowInsetsTraitKey>>, _ConditionalContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, ForEach<[Razzmatazz], Razzmatazz, RazzmatazzView.CompactListCell>>, EmptyView>, Section<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Text.Case?>>, _PaddingLayout>, _TraitWritingModifier<ListRowInsetsTraitKey>>, ForEach<[Razzmatazz], Razzmatazz, RazzmatazzView.CompactListCell>, EmptyView>)>>, _TaskModifier>);
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type List<Never, TupleView<(Section<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Text.Case?>>, _PaddingLayout>, _TraitWritingModifier<ListRowInsetsTraitKey>>, _ConditionalContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, ForEach<[Razzmatazz], Razzmatazz, RazzmatazzView.CompactListCell>>, EmptyView>, Section<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Text.Case?>>, _PaddingLayout>, _TraitWritingModifier<ListRowInsetsTraitKey>>, ForEach<[Razzmatazz], Razzmatazz, RazzmatazzView.CompactListCell>, EmptyView>)>> and conformance List<A, B>, &demangling cache variable for type metadata for List<Never, TupleView<(Section<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Text.Case?>>, _PaddingLayout>, _TraitWritingModifier<ListRowInsetsTraitKey>>, _ConditionalContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, ForEach<[Razzmatazz], Razzmatazz, RazzmatazzView.CompactListCell>>, EmptyView>, Section<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Text.Case?>>, _PaddingLayout>, _TraitWritingModifier<ListRowInsetsTraitKey>>, ForEach<[Razzmatazz], Razzmatazz, RazzmatazzView.CompactListCell>, EmptyView>)>>);
    _s7SwiftUI13_TaskModifierVAcA04ViewD0AAWlTm_1(&_s7SwiftUI13_TaskModifierVAcA04ViewD0AAWL_0, (void (*)(uint64_t))&type metadata accessor for _TaskModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<List<Never, TupleView<(Section<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Text.Case?>>, _PaddingLayout>, _TraitWritingModifier<ListRowInsetsTraitKey>>, _ConditionalContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, ForEach<[Razzmatazz], Razzmatazz, RazzmatazzView.CompactListCell>>, EmptyView>, Section<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Text.Case?>>, _PaddingLayout>, _TraitWritingModifier<ListRowInsetsTraitKey>>, ForEach<[Razzmatazz], Razzmatazz, RazzmatazzView.CompactListCell>, EmptyView>)>>, _TaskModifier> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t closure #4 in RazzmatazzView.body.getter(uint64_t a1)
{
  type metadata accessor for ToolbarItemPlacement();
  __chkstk_darwin();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ToolbarItem<(), <<opaque return type of View.menuStyle<A>(_:)>>.0>);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = &v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  static ToolbarItemPlacement.topBarTrailing.getter();
  uint64_t v12 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.menuStyle<A>(_:)>>.0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Menu<ModifiedContent<Image, _ForegroundStyleModifier2<Color, Color>>, Picker<Text, Bool, TupleView<(ModifiedContent<ModifiedContent<Label<Text, Image>, _TraitWritingModifier<TagValueTraitKey<Bool>>>, _TraitWritingModifier<TagValueTraitKey<Bool?>>>, ModifiedContent<ModifiedContent<Label<Text, Image>, _TraitWritingModifier<TagValueTraitKey<Bool>>>, _TraitWritingModifier<TagValueTraitKey<Bool?>>>)>>>);
  uint64_t v7 = type metadata accessor for ButtonMenuStyle();
  uint64_t v8 = lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type Menu<ModifiedContent<Image, _ForegroundStyleModifier2<Color, Color>>, Picker<Text, Bool, TupleView<(ModifiedContent<ModifiedContent<Label<Text, Image>, _TraitWritingModifier<TagValueTraitKey<Bool>>>, _TraitWritingModifier<TagValueTraitKey<Bool?>>>, ModifiedContent<ModifiedContent<Label<Text, Image>, _TraitWritingModifier<TagValueTraitKey<Bool>>>, _TraitWritingModifier<TagValueTraitKey<Bool?>>>)>>> and conformance Menu<A, B>, &demangling cache variable for type metadata for Menu<ModifiedContent<Image, _ForegroundStyleModifier2<Color, Color>>, Picker<Text, Bool, TupleView<(ModifiedContent<ModifiedContent<Label<Text, Image>, _TraitWritingModifier<TagValueTraitKey<Bool>>>, _TraitWritingModifier<TagValueTraitKey<Bool?>>>, ModifiedContent<ModifiedContent<Label<Text, Image>, _TraitWritingModifier<TagValueTraitKey<Bool>>>, _TraitWritingModifier<TagValueTraitKey<Bool?>>>)>>>);
  uint64_t v9 = _s7SwiftUI13_TaskModifierVAcA04ViewD0AAWlTm_1(&lazy protocol witness table cache variable for type ButtonMenuStyle and conformance ButtonMenuStyle, (void (*)(uint64_t))&type metadata accessor for ButtonMenuStyle);
  uint64_t v13 = v6;
  uint64_t v14 = v7;
  uint64_t v15 = v8;
  uint64_t v16 = v9;
  swift_getOpaqueTypeConformance2();
  ToolbarItem<>.init(placement:content:)();
  lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type ToolbarItem<(), <<opaque return type of View.menuStyle<A>(_:)>>.0> and conformance ToolbarItem<A, B>, &demangling cache variable for type metadata for ToolbarItem<(), <<opaque return type of View.menuStyle<A>(_:)>>.0>);
  static ToolbarContentBuilder.buildBlock<A>(_:)();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t partial apply for closure #4 in RazzmatazzView.body.getter()
{
  return closure #4 in RazzmatazzView.body.getter(*(void *)(v0 + 16));
}

uint64_t closure #1 in closure #4 in RazzmatazzView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v11[1] = a2;
  uint64_t v3 = type metadata accessor for ButtonMenuStyle();
  v11[0] = *(void *)(v3 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Menu<ModifiedContent<Image, _ForegroundStyleModifier2<Color, Color>>, Picker<Text, Bool, TupleView<(ModifiedContent<ModifiedContent<Label<Text, Image>, _TraitWritingModifier<TagValueTraitKey<Bool>>>, _TraitWritingModifier<TagValueTraitKey<Bool?>>>, ModifiedContent<ModifiedContent<Label<Text, Image>, _TraitWritingModifier<TagValueTraitKey<Bool>>>, _TraitWritingModifier<TagValueTraitKey<Bool?>>>)>>>);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  uint64_t v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11[8] = a1;
  v11[4] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Image, _ForegroundStyleModifier2<Color, Color>>);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Picker<Text, Bool, TupleView<(ModifiedContent<ModifiedContent<Label<Text, Image>, _TraitWritingModifier<TagValueTraitKey<Bool>>>, _TraitWritingModifier<TagValueTraitKey<Bool?>>>, ModifiedContent<ModifiedContent<Label<Text, Image>, _TraitWritingModifier<TagValueTraitKey<Bool>>>, _TraitWritingModifier<TagValueTraitKey<Bool?>>>)>>);
  lazy protocol witness table accessor for type ModifiedContent<Image, _ForegroundStyleModifier2<Color, Color>> and conformance <> ModifiedContent<A, B>();
  lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type Picker<Text, Bool, TupleView<(ModifiedContent<ModifiedContent<Label<Text, Image>, _TraitWritingModifier<TagValueTraitKey<Bool>>>, _TraitWritingModifier<TagValueTraitKey<Bool?>>>, ModifiedContent<ModifiedContent<Label<Text, Image>, _TraitWritingModifier<TagValueTraitKey<Bool>>>, _TraitWritingModifier<TagValueTraitKey<Bool?>>>)>> and conformance Picker<A, B, C>, &demangling cache variable for type metadata for Picker<Text, Bool, TupleView<(ModifiedContent<ModifiedContent<Label<Text, Image>, _TraitWritingModifier<TagValueTraitKey<Bool>>>, _TraitWritingModifier<TagValueTraitKey<Bool?>>>, ModifiedContent<ModifiedContent<Label<Text, Image>, _TraitWritingModifier<TagValueTraitKey<Bool>>>, _TraitWritingModifier<TagValueTraitKey<Bool?>>>)>>);
  Menu.init(content:label:)();
  ButtonMenuStyle.init()();
  lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type Menu<ModifiedContent<Image, _ForegroundStyleModifier2<Color, Color>>, Picker<Text, Bool, TupleView<(ModifiedContent<ModifiedContent<Label<Text, Image>, _TraitWritingModifier<TagValueTraitKey<Bool>>>, _TraitWritingModifier<TagValueTraitKey<Bool?>>>, ModifiedContent<ModifiedContent<Label<Text, Image>, _TraitWritingModifier<TagValueTraitKey<Bool>>>, _TraitWritingModifier<TagValueTraitKey<Bool?>>>)>>> and conformance Menu<A, B>, &demangling cache variable for type metadata for Menu<ModifiedContent<Image, _ForegroundStyleModifier2<Color, Color>>, Picker<Text, Bool, TupleView<(ModifiedContent<ModifiedContent<Label<Text, Image>, _TraitWritingModifier<TagValueTraitKey<Bool>>>, _TraitWritingModifier<TagValueTraitKey<Bool?>>>, ModifiedContent<ModifiedContent<Label<Text, Image>, _TraitWritingModifier<TagValueTraitKey<Bool>>>, _TraitWritingModifier<TagValueTraitKey<Bool?>>>)>>>);
  _s7SwiftUI13_TaskModifierVAcA04ViewD0AAWlTm_1(&lazy protocol witness table cache variable for type ButtonMenuStyle and conformance ButtonMenuStyle, (void (*)(uint64_t))&type metadata accessor for ButtonMenuStyle);
  View.menuStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v11[0] + 8))(v5, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t closure #1 in closure #1 in closure #4 in RazzmatazzView.body.getter()
{
  return Picker<>.init<A>(_:selection:content:)();
}

uint64_t closure #1 in closure #1 in closure #1 in closure #4 in RazzmatazzView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v23 = a1;
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Label<Text, Image>, _TraitWritingModifier<TagValueTraitKey<Bool>>>)
      - 8;
  __chkstk_darwin();
  uint64_t v2 = (char *)v20 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&_s7SwiftUI5LabelVyAA4TextVAA5ImageVGMD_0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin();
  uint64_t v6 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Label<Text, Image>, _TraitWritingModifier<TagValueTraitKey<Bool>>>, _TraitWritingModifier<TagValueTraitKey<Bool?>>>)
     - 8;
  __chkstk_darwin();
  uint64_t v22 = (uint64_t)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v10 = (char *)v20 - v9;
  __chkstk_darwin();
  uint64_t v12 = (char *)v20 - v11;
  __chkstk_darwin();
  uint64_t v14 = (char *)v20 - v13;
  LocalizedStringKey.init(stringLiteral:)();
  Label<>.init(_:systemImage:)();
  uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
  v21(v2, v6, v3);
  v2[*(int *)(v24 + 44)] = 0;
  outlined init with copy of (String, Any)((uint64_t)v2, (uint64_t)v12, &demangling cache variable for type metadata for ModifiedContent<Label<Text, Image>, _TraitWritingModifier<TagValueTraitKey<Bool>>>);
  v12[*(int *)(v7 + 44)] = 0;
  outlined destroy of TaskPriority?((uint64_t)v2, &demangling cache variable for type metadata for ModifiedContent<Label<Text, Image>, _TraitWritingModifier<TagValueTraitKey<Bool>>>);
  uint64_t v15 = *(void (**)(char *, uint64_t))(v4 + 8);
  v20[1] = v4 + 8;
  v15(v6, v3);
  outlined init with take of PresentationSource?((uint64_t)v12, (uint64_t)v14, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Label<Text, Image>, _TraitWritingModifier<TagValueTraitKey<Bool>>>, _TraitWritingModifier<TagValueTraitKey<Bool?>>>);
  LocalizedStringKey.init(stringLiteral:)();
  Label<>.init(_:systemImage:)();
  v21(v2, v6, v3);
  v2[*(int *)(v24 + 44)] = 1;
  outlined init with copy of (String, Any)((uint64_t)v2, (uint64_t)v10, &demangling cache variable for type metadata for ModifiedContent<Label<Text, Image>, _TraitWritingModifier<TagValueTraitKey<Bool>>>);
  v10[*(int *)(v7 + 44)] = 1;
  outlined destroy of TaskPriority?((uint64_t)v2, &demangling cache variable for type metadata for ModifiedContent<Label<Text, Image>, _TraitWritingModifier<TagValueTraitKey<Bool>>>);
  v15(v6, v3);
  outlined init with take of PresentationSource?((uint64_t)v10, (uint64_t)v12, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Label<Text, Image>, _TraitWritingModifier<TagValueTraitKey<Bool>>>, _TraitWritingModifier<TagValueTraitKey<Bool?>>>);
  outlined init with copy of (String, Any)((uint64_t)v14, (uint64_t)v10, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Label<Text, Image>, _TraitWritingModifier<TagValueTraitKey<Bool>>>, _TraitWritingModifier<TagValueTraitKey<Bool?>>>);
  uint64_t v16 = v22;
  outlined init with copy of (String, Any)((uint64_t)v12, v22, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Label<Text, Image>, _TraitWritingModifier<TagValueTraitKey<Bool>>>, _TraitWritingModifier<TagValueTraitKey<Bool?>>>);
  uint64_t v17 = v23;
  outlined init with copy of (String, Any)((uint64_t)v10, v23, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Label<Text, Image>, _TraitWritingModifier<TagValueTraitKey<Bool>>>, _TraitWritingModifier<TagValueTraitKey<Bool?>>>);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModifiedContent<ModifiedContent<Label<Text, Image>, _TraitWritingModifier<TagValueTraitKey<Bool>>>, _TraitWritingModifier<TagValueTraitKey<Bool?>>>, ModifiedContent<ModifiedContent<Label<Text, Image>, _TraitWritingModifier<TagValueTraitKey<Bool>>>, _TraitWritingModifier<TagValueTraitKey<Bool?>>>));
  outlined init with copy of (String, Any)(v16, v17 + *(int *)(v18 + 48), &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Label<Text, Image>, _TraitWritingModifier<TagValueTraitKey<Bool>>>, _TraitWritingModifier<TagValueTraitKey<Bool?>>>);
  outlined destroy of TaskPriority?((uint64_t)v12, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Label<Text, Image>, _TraitWritingModifier<TagValueTraitKey<Bool>>>, _TraitWritingModifier<TagValueTraitKey<Bool?>>>);
  outlined destroy of TaskPriority?((uint64_t)v14, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Label<Text, Image>, _TraitWritingModifier<TagValueTraitKey<Bool>>>, _TraitWritingModifier<TagValueTraitKey<Bool?>>>);
  outlined destroy of TaskPriority?(v16, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Label<Text, Image>, _TraitWritingModifier<TagValueTraitKey<Bool>>>, _TraitWritingModifier<TagValueTraitKey<Bool?>>>);
  return outlined destroy of TaskPriority?((uint64_t)v10, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Label<Text, Image>, _TraitWritingModifier<TagValueTraitKey<Bool>>>, _TraitWritingModifier<TagValueTraitKey<Bool?>>>);
}

uint64_t closure #2 in closure #1 in closure #4 in RazzmatazzView.body.getter@<X0>(uint64_t *a1@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SymbolRenderingMode?);
  __chkstk_darwin();
  uint64_t v3 = &v10[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  Image.init(systemName:)();
  static SymbolRenderingMode.palette.getter();
  uint64_t v4 = type metadata accessor for SymbolRenderingMode();
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 0, 1, v4);
  uint64_t v5 = Image.symbolRenderingMode(_:)();
  swift_release();
  outlined destroy of TaskPriority?((uint64_t)v3, &demangling cache variable for type metadata for SymbolRenderingMode?);
  AppStorage.wrappedValue.getter();
  if (v10[15] == 1) {
    uint64_t v6 = static Color.white.getter();
  }
  else {
    uint64_t v6 = static Color.accentColor.getter();
  }
  uint64_t v7 = v6;
  AppStorage.wrappedValue.getter();
  if (v10[14] == 1)
  {
    uint64_t result = static Color.accentColor.getter();
  }
  else
  {
    id v9 = [self tertiarySystemFillColor];
    uint64_t result = Color.init(uiColor:)();
  }
  *a1 = v5;
  a1[1] = v7;
  a1[2] = result;
  return result;
}

uint64_t closure #5 in RazzmatazzView.body.getter(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  __swift_instantiateConcreteTypeFromMangledName(&_sScPSgMD_2);
  uint64_t result = __chkstk_darwin();
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*a1 != *a2)
  {
    uint64_t v9 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
    type metadata accessor for MainActor();
    long long v10 = *(_OWORD *)(a3 + 16);
    char v19 = *(unsigned char *)(a3 + 32);
    long long v17 = *(_OWORD *)(a3 + 40);
    long long v18 = v10;
    uint64_t v16 = *(void *)(a3 + 56);
    swift_retain();
    outlined retain of StateObject<RazzmatazzController>((uint64_t)&v18);
    outlined retain of State<Bool>((uint64_t)&v17);
    outlined retain of AnyLocation<UIImage?>?((uint64_t)&v16);
    uint64_t v11 = static MainActor.shared.getter();
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = v11;
    *(void *)(v12 + 24) = &protocol witness table for MainActor;
    long long v13 = *(_OWORD *)(a3 + 16);
    *(_OWORD *)(v12 + 32) = *(_OWORD *)a3;
    *(_OWORD *)(v12 + 48) = v13;
    long long v14 = *(_OWORD *)(a3 + 48);
    *(_OWORD *)(v12 + 64) = *(_OWORD *)(a3 + 32);
    *(_OWORD *)(v12 + 80) = v14;
    _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5_1((uint64_t)v8, (uint64_t)&async function pointer to partial apply for closure #1 in closure #5 in RazzmatazzView.body.getter, v12);
    return swift_release();
  }
  return result;
}

uint64_t partial apply for closure #5 in RazzmatazzView.body.getter(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return closure #5 in RazzmatazzView.body.getter(a1, a2, v2 + 16);
}

uint64_t associated type witness table accessor for View.Body : View in RazzmatazzView()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t closure #1 in closure #5 in RazzmatazzView.body.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a4;
  __swift_instantiateConcreteTypeFromMangledName(&_sScPSgMD_2);
  v4[3] = swift_task_alloc();
  v4[4] = type metadata accessor for MainActor();
  v4[5] = static MainActor.shared.getter();
  void v4[6] = static MainActor.shared.getter();
  uint64_t v6 = *(void *)(a4 + 56);
  uint64_t v7 = (void *)swift_task_alloc();
  v4[7] = v7;
  void *v7 = v4;
  v7[1] = closure #1 in closure #5 in RazzmatazzView.body.getter;
  return specialized RazzmatazzView.loadLibraryArtists()(v6);
}

uint64_t closure #1 in closure #5 in RazzmatazzView.body.getter(uint64_t a1)
{
  *(void *)(*(void *)v1 + 64) = a1;
  swift_task_dealloc();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(closure #1 in closure #5 in RazzmatazzView.body.getter, v3, v2);
}

uint64_t closure #1 in closure #5 in RazzmatazzView.body.getter()
{
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t v2 = *(void *)(v0 + 24);
  swift_release();
  type metadata accessor for RazzmatazzController(0);
  _s7SwiftUI13_TaskModifierVAcA04ViewD0AAWlTm_1(&lazy protocol witness table cache variable for type RazzmatazzController and conformance RazzmatazzController, (void (*)(uint64_t))type metadata accessor for RazzmatazzController);
  uint64_t v3 = StateObject.wrappedValue.getter();
  uint64_t v4 = type metadata accessor for TaskPriority();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v2, 1, 1, v4);
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v5 = static MainActor.shared.getter();
  uint64_t v6 = (void *)swift_allocObject();
  _OWORD v6[2] = v5;
  v6[3] = &protocol witness table for MainActor;
  v6[4] = v3;
  v6[5] = v1;
  _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5_1(v2, (uint64_t)&async function pointer to partial apply for closure #1 in RazzmatazzController.load(for:), (uint64_t)v6);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(closure #1 in closure #5 in RazzmatazzView.body.getter, v8, v7);
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t RazzmatazzView.CompactListCell.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v48 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HStack<TupleView<(ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, CornerRadiusModifier>, BorderViewModifier>, ModifiedContent<VStack<TupleView<(Text, Text, Text)>>, _EnvironmentKeyWritingModifier<Int?>>, Spacer, ListChevron)>>);
  __chkstk_darwin();
  uint64_t v3 = (char *)&v47 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, CornerRadiusModifier>, BorderViewModifier>, ModifiedContent<VStack<TupleView<(Text, Text, Text)>>, _EnvironmentKeyWritingModifier<Int?>>, Spacer, ListChevron)>>, _PaddingLayout>);
  __chkstk_darwin();
  uint64_t v6 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, CornerRadiusModifier>, BorderViewModifier>, ModifiedContent<VStack<TupleView<(Text, Text, Text)>>, _EnvironmentKeyWritingModifier<Int?>>, Spacer, ListChevron)>>, _PaddingLayout>, _PaddingLayout>);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, CornerRadiusModifier>, BorderViewModifier>, ModifiedContent<VStack<TupleView<(Text, Text, Text)>>, _EnvironmentKeyWritingModifier<Int?>>, Spacer, ListChevron)>>, _PaddingLayout>, _PaddingLayout>, _TraitWritingModifier<ListRowInsetsTraitKey>>);
  __chkstk_darwin();
  uint64_t v12 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = static VerticalAlignment.center.getter();
  if (one-time initialization token for mediumSpacing != -1) {
    swift_once();
  }
  uint64_t v14 = static CGFloat.mediumSpacing;
  *(void *)uint64_t v3 = v13;
  *((void *)v3 + 1) = v14;
  v3[16] = 0;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_HStackLayout, TupleView<(ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, CornerRadiusModifier>, BorderViewModifier>, ModifiedContent<VStack<TupleView<(Text, Text, Text)>>, _EnvironmentKeyWritingModifier<Int?>>, Spacer, ListChevron)>>);
  closure #1 in RazzmatazzView.CompactListCell.body.getter(v1, (uint64_t)&v3[*(int *)(v15 + 44)]);
  char v16 = static Edge.Set.all.getter();
  EdgeInsets.init(_all:)();
  uint64_t v18 = v17;
  uint64_t v20 = v19;
  uint64_t v22 = v21;
  uint64_t v24 = v23;
  outlined init with copy of (String, Any)((uint64_t)v3, (uint64_t)v6, &demangling cache variable for type metadata for HStack<TupleView<(ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, CornerRadiusModifier>, BorderViewModifier>, ModifiedContent<VStack<TupleView<(Text, Text, Text)>>, _EnvironmentKeyWritingModifier<Int?>>, Spacer, ListChevron)>>);
  uint64_t v25 = &v6[*(int *)(v4 + 36)];
  char *v25 = v16;
  *((void *)v25 + 1) = v18;
  *((void *)v25 + 2) = v20;
  *((void *)v25 + 3) = v22;
  *((void *)v25 + 4) = v24;
  v25[40] = 0;
  outlined destroy of TaskPriority?((uint64_t)v3, &demangling cache variable for type metadata for HStack<TupleView<(ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, CornerRadiusModifier>, BorderViewModifier>, ModifiedContent<VStack<TupleView<(Text, Text, Text)>>, _EnvironmentKeyWritingModifier<Int?>>, Spacer, ListChevron)>>);
  char v26 = static Edge.Set.leading.getter();
  if (one-time initialization token for smallSpacing != -1) {
    swift_once();
  }
  EdgeInsets.init(_all:)();
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  uint64_t v34 = v33;
  outlined init with copy of (String, Any)((uint64_t)v6, (uint64_t)v9, &demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, CornerRadiusModifier>, BorderViewModifier>, ModifiedContent<VStack<TupleView<(Text, Text, Text)>>, _EnvironmentKeyWritingModifier<Int?>>, Spacer, ListChevron)>>, _PaddingLayout>);
  uint64_t v35 = &v9[*(int *)(v7 + 36)];
  *uint64_t v35 = v26;
  *((void *)v35 + 1) = v28;
  *((void *)v35 + 2) = v30;
  *((void *)v35 + 3) = v32;
  *((void *)v35 + 4) = v34;
  v35[40] = 0;
  outlined destroy of TaskPriority?((uint64_t)v6, &demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, CornerRadiusModifier>, BorderViewModifier>, ModifiedContent<VStack<TupleView<(Text, Text, Text)>>, _EnvironmentKeyWritingModifier<Int?>>, Spacer, ListChevron)>>, _PaddingLayout>);
  if (one-time initialization token for zero != -1) {
    swift_once();
  }
  long long v47 = static EdgeInsets.zero;
  uint64_t v36 = qword_1005ADD88;
  uint64_t v37 = unk_1005ADD90;
  outlined init with copy of (String, Any)((uint64_t)v9, (uint64_t)v12, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, CornerRadiusModifier>, BorderViewModifier>, ModifiedContent<VStack<TupleView<(Text, Text, Text)>>, _EnvironmentKeyWritingModifier<Int?>>, Spacer, ListChevron)>>, _PaddingLayout>, _PaddingLayout>);
  uint64_t v38 = &v12[*(int *)(v10 + 36)];
  *(_OWORD *)uint64_t v38 = v47;
  *((void *)v38 + 2) = v36;
  *((void *)v38 + 3) = v37;
  v38[32] = 0;
  outlined destroy of TaskPriority?((uint64_t)v9, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, CornerRadiusModifier>, BorderViewModifier>, ModifiedContent<VStack<TupleView<(Text, Text, Text)>>, _EnvironmentKeyWritingModifier<Int?>>, Spacer, ListChevron)>>, _PaddingLayout>, _PaddingLayout>);
  uint64_t v39 = static Alignment.leading.getter();
  uint64_t v41 = v40;
  uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, CornerRadiusModifier>, BorderViewModifier>, ModifiedContent<VStack<TupleView<(Text, Text, Text)>>, _EnvironmentKeyWritingModifier<Int?>>, Spacer, ListChevron)>>, _PaddingLayout>, _PaddingLayout>, _TraitWritingModifier<ListRowInsetsTraitKey>>, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Image.Scale>>, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>?>>);
  uint64_t v43 = v48;
  uint64_t v44 = v48 + *(int *)(v42 + 36);
  closure #2 in RazzmatazzView.CompactListCell.body.getter(v44);
  uint64_t v45 = (uint64_t *)(v44
                  + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Image.Scale>>, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>?>)
                           + 36));
  *uint64_t v45 = v39;
  v45[1] = v41;
  return outlined init with take of PresentationSource?((uint64_t)v12, v43, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, CornerRadiusModifier>, BorderViewModifier>, ModifiedContent<VStack<TupleView<(Text, Text, Text)>>, _EnvironmentKeyWritingModifier<Int?>>, Spacer, ListChevron)>>, _PaddingLayout>, _PaddingLayout>, _TraitWritingModifier<ListRowInsetsTraitKey>>);
}

uint64_t closure #1 in RazzmatazzView.CompactListCell.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v68 = a2;
  uint64_t v64 = *(void *)(type metadata accessor for RazzmatazzView.CompactListCell() - 8);
  __chkstk_darwin();
  uint64_t v65 = v3;
  uint64_t v67 = (uint64_t)&KeyPath - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = type metadata accessor for ArtworkImage.ReusePolicy();
  uint64_t v4 = *(void *)(v74 - 8);
  __chkstk_darwin();
  uint64_t v6 = (char *)&KeyPath - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin();
  uint64_t v8 = (char *)&KeyPath - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ArtworkImage.ViewModel?);
  __chkstk_darwin();
  uint64_t v10 = (char *)&KeyPath - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin();
  uint64_t v14 = (char *)&KeyPath - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((void *)&v72 + 1) = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, CornerRadiusModifier>);
  __chkstk_darwin();
  char v16 = (char *)&KeyPath - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, CornerRadiusModifier>, BorderViewModifier>);
  __chkstk_darwin();
  uint64_t v76 = (uint64_t)&KeyPath - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v75 = (uint64_t)&KeyPath - v18;
  type metadata accessor for Razzmatazz(0);
  uint64_t v66 = a1;
  specialized ArtworkImageViewModelAttributeProviding.artworkViewModel.getter(v10);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (type: Playlist.Variant?));
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v8, 6, 10, v19);
  if (one-time initialization token for artworkLength != -1) {
    swift_once();
  }
  uint64_t v77 = static RazzmatazzView.Specs.artworkLength;
  char v78 = 0;
  uint64_t v79 = static RazzmatazzView.Specs.artworkLength;
  char v80 = 0;
  uint64_t v81 = 0;
  __int16 v82 = 513;
  uint64_t v20 = v74;
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for ArtworkImage.ReusePolicy.reusableForDistinctItems(_:), v74);
  static ArtworkImage.with(_:placeholder:size:reusePolicy:)((uint64_t)v10, (uint64_t)v8, (uint64_t)&v77, (uint64_t)v6, (uint64_t)v14);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v20);
  _s17_MusicKit_SwiftUI12ArtworkImageV0a4CoreD0E11PlaceholderOWOhTm_0((uint64_t)v8, type metadata accessor for ArtworkImage.Placeholder);
  outlined destroy of TaskPriority?((uint64_t)v10, (uint64_t *)&demangling cache variable for type metadata for ArtworkImage.ViewModel?);
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v16, v14, v11);
  uint64_t v21 = &v16[*(int *)(*((void *)&v72 + 1) + 36)];
  *(void *)uint64_t v21 = 0;
  *((void *)v21 + 1) = 0;
  v21[16] = 1;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  if (one-time initialization token for artwork != -1) {
    swift_once();
  }
  uint64_t v22 = static Border.artwork;
  uint64_t v23 = qword_1005AE930;
  char v24 = byte_1005AE938;
  uint64_t v25 = v76;
  outlined init with copy of (String, Any)((uint64_t)v16, v76, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, CornerRadiusModifier>);
  uint64_t v26 = v25 + *(int *)(v73 + 36);
  *(void *)uint64_t v26 = v22;
  *(void *)(v26 + 8) = v23;
  *(unsigned char *)(v26 + 16) = v24;
  *(void *)(v26 + 24) = 0;
  *(void *)(v26 + 32) = 0;
  *(unsigned char *)(v26 + 40) = 1;
  swift_retain();
  outlined destroy of TaskPriority?((uint64_t)v16, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, CornerRadiusModifier>);
  uint64_t v27 = v75;
  outlined init with take of PresentationSource?(v25, v75, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, CornerRadiusModifier>, BorderViewModifier>);
  uint64_t v28 = static HorizontalAlignment.leading.getter();
  if (one-time initialization token for smallSpacing != -1) {
    swift_once();
  }
  uint64_t v73 = static CGFloat.smallSpacing;
  uint64_t v29 = v66;
  closure #1 in closure #1 in RazzmatazzView.CompactListCell.body.getter(v66, &v100);
  uint64_t v69 = v101;
  uint64_t v70 = v100;
  unsigned __int8 v30 = v102;
  long long v72 = v104;
  uint64_t v74 = v105;
  unsigned __int8 v31 = v106;
  uint64_t v62 = v107;
  uint64_t v63 = *((void *)&v106 + 1);
  uint64_t v61 = v108;
  unsigned __int8 v32 = v109;
  uint64_t v71 = v110;
  uint64_t KeyPath = swift_getKeyPath();
  unsigned __int8 v91 = 0;
  unsigned __int8 v89 = v30;
  unsigned __int8 v87 = v31;
  unsigned __int8 v85 = v32;
  char v83 = 0;
  uint64_t v33 = v29;
  uint64_t v34 = v67;
  outlined init with copy of RazzmatazzView.CompactListCell(v33, v67, (uint64_t (*)(void))type metadata accessor for RazzmatazzView.CompactListCell);
  unint64_t v35 = (*(unsigned __int8 *)(v64 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80);
  uint64_t v36 = swift_allocObject();
  outlined init with take of RazzmatazzView.CompactListCell(v34, v36 + v35, (uint64_t (*)(void))type metadata accessor for RazzmatazzView.CompactListCell);
  outlined init with copy of (String, Any)(v27, v25, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, CornerRadiusModifier>, BorderViewModifier>);
  unsigned __int8 v37 = v91;
  LODWORD(v64) = v91;
  unsigned __int8 v38 = v89;
  LODWORD(v65) = v89;
  uint64_t v39 = v25;
  unsigned __int8 v40 = v87;
  LODWORD(v66) = v87;
  unsigned __int8 v41 = v85;
  LODWORD(v67) = v85;
  char v42 = v83;
  uint64_t v43 = v68;
  outlined init with copy of (String, Any)(v39, v68, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, CornerRadiusModifier>, BorderViewModifier>);
  uint64_t v44 = (int *)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, CornerRadiusModifier>, BorderViewModifier>, ModifiedContent<VStack<TupleView<(Text, Text, Text)>>, _EnvironmentKeyWritingModifier<Int?>>, Spacer, ListChevron));
  uint64_t v45 = (_OWORD *)(v43 + v44[12]);
  *(void *)&long long v92 = v28;
  *((void *)&v92 + 1) = v73;
  LOBYTE(v93) = v37;
  *(_DWORD *)((char *)&v93 + 1) = *(_DWORD *)v90;
  DWORD1(v93) = *(_DWORD *)&v90[3];
  *((void *)&v93 + 1) = v70;
  *(void *)&long long v94 = v69;
  BYTE8(v94) = v38;
  *(_DWORD *)((char *)&v94 + 9) = *(_DWORD *)v88;
  HIDWORD(v94) = *(_DWORD *)&v88[3];
  long long v95 = v72;
  *(void *)&long long v96 = v74;
  BYTE8(v96) = v40;
  *(_DWORD *)((char *)&v96 + 9) = *(_DWORD *)v86;
  HIDWORD(v96) = *(_DWORD *)&v86[3];
  uint64_t v47 = v62;
  uint64_t v46 = v63;
  *(void *)&long long v97 = v63;
  *((void *)&v97 + 1) = v62;
  uint64_t v48 = v61;
  *(void *)&long long v98 = v61;
  BYTE8(v98) = v41;
  *(_DWORD *)((char *)&v98 + 9) = *(_DWORD *)v84;
  HIDWORD(v98) = *(_DWORD *)&v84[3];
  uint64_t v49 = KeyPath;
  *(void *)&v99[0] = v71;
  *((void *)&v99[0] + 1) = KeyPath;
  *(void *)&v99[1] = 1;
  BYTE8(v99[1]) = v42;
  long long v50 = v92;
  long long v51 = v93;
  long long v52 = v72;
  long long v53 = v96;
  void v45[2] = v94;
  void v45[3] = v52;
  *uint64_t v45 = v50;
  v45[1] = v51;
  long long v54 = v97;
  long long v55 = v98;
  *(_OWORD *)((char *)v45 + 121) = *(_OWORD *)((char *)v99 + 9);
  long long v56 = v99[0];
  v45[6] = v55;
  v45[7] = v56;
  v45[4] = v53;
  v45[5] = v54;
  uint64_t v57 = v43 + v44[16];
  *(void *)uint64_t v57 = 0;
  *(unsigned char *)(v57 + 8) = 0;
  uint64_t v58 = (uint64_t (**)())(v43 + v44[20]);
  char *v58 = partial apply for closure #2 in closure #1 in RazzmatazzView.CompactListCell.body.getter;
  v58[1] = (uint64_t (*)())v36;
  outlined retain of ModifiedContent<VStack<TupleView<(Text, Text, Text)>>, _EnvironmentKeyWritingModifier<Int?>>((uint64_t)&v92);
  swift_retain();
  outlined destroy of TaskPriority?(v75, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, CornerRadiusModifier>, BorderViewModifier>);
  swift_release();
  uint64_t v100 = v28;
  uint64_t v101 = v73;
  unsigned __int8 v102 = v64;
  *(_DWORD *)long long v103 = *(_DWORD *)v90;
  *(_DWORD *)&v103[3] = *(_DWORD *)&v90[3];
  *(void *)&long long v104 = v70;
  *((void *)&v104 + 1) = v69;
  LOBYTE(v105) = v65;
  *(_DWORD *)((char *)&v105 + 1) = *(_DWORD *)v88;
  HIDWORD(v105) = *(_DWORD *)&v88[3];
  long long v106 = v72;
  uint64_t v107 = v74;
  LOBYTE(v108) = v66;
  HIDWORD(v108) = *(_DWORD *)&v86[3];
  *(_DWORD *)((char *)&v108 + 1) = *(_DWORD *)v86;
  uint64_t v109 = v46;
  uint64_t v110 = v47;
  uint64_t v111 = v48;
  char v112 = v67;
  *(_DWORD *)&v113[3] = *(_DWORD *)&v84[3];
  *(_DWORD *)uint64_t v113 = *(_DWORD *)v84;
  uint64_t v114 = v71;
  uint64_t v115 = v49;
  uint64_t v116 = 1;
  char v117 = v42;
  outlined release of ModifiedContent<VStack<TupleView<(Text, Text, Text)>>, _EnvironmentKeyWritingModifier<Int?>>((uint64_t)&v100);
  return outlined destroy of TaskPriority?(v76, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, CornerRadiusModifier>, BorderViewModifier>);
}

uint64_t closure #1 in closure #1 in RazzmatazzView.CompactListCell.body.getter@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v61 = a1;
  uint64_t v70 = a2;
  type metadata accessor for FormatStyleCapitalizationContext();
  __chkstk_darwin();
  uint64_t v64 = (char *)&v61 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Calendar();
  __chkstk_darwin();
  uint64_t v63 = (char *)&v61 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Locale();
  __chkstk_darwin();
  uint64_t v62 = type metadata accessor for TimeZone();
  uint64_t v4 = *(void *)(v62 - 8);
  __chkstk_darwin();
  uint64_t v6 = (char *)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date.FormatStyle.TimeStyle?);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Date.FormatStyle.DateStyle?);
  __chkstk_darwin();
  uint64_t v10 = (char *)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = type metadata accessor for Date.FormatStyle();
  uint64_t v69 = *(void *)(v73 - 8);
  __chkstk_darwin();
  uint64_t v71 = (char *)&v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Razzmatazz(0);
  *(void *)&long long v77 = Artist.name.getter();
  *((void *)&v77 + 1) = v13;
  unint64_t v65 = _sS2SSysWl_1();
  uint64_t v14 = Text.init<A>(_:)();
  uint64_t v16 = v15;
  char v18 = v17 & 1;
  LODWORD(v77) = static HierarchicalShapeStyle.primary.getter();
  uint64_t v72 = Text.foregroundStyle<A>(_:)();
  uint64_t v67 = v19;
  uint64_t v68 = v20;
  int v66 = v21 & 1;
  outlined consume of Text.Storage(v14, v16, v18);
  swift_bridgeObjectRelease();
  static Date.FormatStyle.DateStyle.abbreviated.getter();
  uint64_t v22 = type metadata accessor for Date.FormatStyle.DateStyle();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v10, 0, 1, v22);
  static Date.FormatStyle.TimeStyle.omitted.getter();
  uint64_t v23 = type metadata accessor for Date.FormatStyle.TimeStyle();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v8, 0, 1, v23);
  char v24 = (char *)(v61 + *(int *)(v12 + 32));
  uint64_t v25 = type metadata accessor for Razzmatazz.Venue(0);
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, &v24[*(int *)(v25 + 32)], v62);
  static Locale.autoupdatingCurrent.getter();
  static Calendar.autoupdatingCurrent.getter();
  static FormatStyleCapitalizationContext.unknown.getter();
  Date.FormatStyle.init(date:time:locale:calendar:timeZone:capitalizationContext:)();
  _s7SwiftUI13_TaskModifierVAcA04ViewD0AAWlTm_1(&lazy protocol witness table cache variable for type Date.FormatStyle and conformance Date.FormatStyle, (void (*)(uint64_t))&type metadata accessor for Date.FormatStyle);
  Date.formatted<A>(_:)();
  long long v77 = v76;
  v26._countAndFlagsBits = 12288995;
  v26._object = (void *)0xA300000000000000;
  String.append(_:)(v26);
  v27._countAndFlagsBits = Razzmatazz.shortName.getter();
  String.append(_:)(v27);
  swift_bridgeObjectRelease();
  LODWORD(v77) = static HierarchicalShapeStyle.secondary.getter();
  uint64_t v28 = Text.foregroundStyle<A>(_:)();
  uint64_t v30 = v29;
  LOBYTE(v8) = v31;
  swift_bridgeObjectRelease();
  static Font.footnote.getter();
  uint64_t v63 = (char *)Text.font(_:)();
  uint64_t v62 = v32;
  LOBYTE(v12) = v33;
  uint64_t v64 = v34;
  swift_release();
  char v35 = v12 & 1;
  outlined consume of Text.Storage(v28, v30, v8 & 1);
  swift_bridgeObjectRelease();
  long long v36 = *((_OWORD *)v24 + 3);
  long long v77 = *((_OWORD *)v24 + 2);
  long long v78 = v36;
  long long v37 = *((_OWORD *)v24 + 5);
  long long v79 = *((_OWORD *)v24 + 4);
  long long v80 = v37;
  *(void *)&long long v76 = Razzmatazz.Venue.Address.formatted(_:)(2);
  *((void *)&v76 + 1) = v38;
  uint64_t v39 = Text.init<A>(_:)();
  uint64_t v41 = v40;
  LOBYTE(v10) = v42 & 1;
  LODWORD(v76) = static HierarchicalShapeStyle.secondary.getter();
  uint64_t v43 = Text.foregroundStyle<A>(_:)();
  uint64_t v45 = v44;
  LOBYTE(v24) = v46 & 1;
  outlined consume of Text.Storage(v39, v41, (char)v10);
  swift_bridgeObjectRelease();
  static Font.footnote.getter();
  uint64_t v47 = Text.font(_:)();
  uint64_t v49 = v48;
  LOBYTE(v4) = v50;
  uint64_t v52 = v51;
  swift_release();
  LOBYTE(v4) = v4 & 1;
  outlined consume of Text.Storage(v43, v45, (char)v24);
  swift_bridgeObjectRelease();
  char v53 = v66;
  LOBYTE(v76) = v66;
  char v75 = v35;
  char v74 = v4;
  long long v54 = v70;
  uint64_t v55 = v72;
  uint64_t v56 = v67;
  *uint64_t v70 = v72;
  v54[1] = v56;
  *((unsigned char *)v54 + 16) = v53;
  uint64_t v57 = (uint64_t)v63;
  v54[3] = v68;
  v54[4] = v57;
  uint64_t v58 = v62;
  v54[5] = v62;
  *((unsigned char *)v54 + 48) = v35;
  v54[7] = v64;
  v54[8] = v47;
  v54[9] = v49;
  *((unsigned char *)v54 + 80) = v4;
  v54[11] = v52;
  outlined copy of Text.Storage(v55, v56, v53);
  swift_bridgeObjectRetain();
  outlined copy of Text.Storage(v57, v58, v35);
  swift_bridgeObjectRetain();
  outlined copy of Text.Storage(v47, v49, v4);
  uint64_t v59 = *(void (**)(char *, uint64_t))(v69 + 8);
  swift_bridgeObjectRetain();
  v59(v71, v73);
  outlined consume of Text.Storage(v47, v49, v74);
  swift_bridgeObjectRelease();
  outlined consume of Text.Storage(v57, v58, v75);
  swift_bridgeObjectRelease();
  outlined consume of Text.Storage(v72, v56, v76);
  return swift_bridgeObjectRelease();
}

uint64_t closure #2 in RazzmatazzView.CompactListCell.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v55 = a1;
  uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&_s7SwiftUI30_EnvironmentKeyWritingModifierVyAA5ImageV5ScaleOGMD_0);
  __chkstk_darwin();
  uint64_t v2 = (uint64_t *)((char *)&v46 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v52 = type metadata accessor for Image.Scale();
  uint64_t v50 = *(void *)(v52 - 8);
  __chkstk_darwin();
  uint64_t v49 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Font.Design?);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Image.Scale>>);
  __chkstk_darwin();
  uint64_t v7 = (uint64_t *)((char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Image.Scale>>, _EnvironmentKeyWritingModifier<Color?>>);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Image.Scale>>, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>);
  uint64_t v53 = *(void *)(v10 - 8);
  uint64_t v54 = v10;
  __chkstk_darwin();
  uint64_t v51 = (uint64_t)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for MusicFavoriteStatus();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin();
  uint64_t v15 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  char v17 = (char *)&v46 - v16;
  type metadata accessor for Razzmatazz(0);
  Artist.favoriteStatus.getter();
  (*(void (**)(char *, void, uint64_t))(v13 + 104))(v15, enum case for MusicFavoriteStatus.favorited(_:), v12);
  char v18 = static MusicFavoriteStatus.== infix(_:_:)();
  uint64_t v19 = *(void (**)(char *, uint64_t))(v13 + 8);
  v19(v15, v12);
  v19(v17, v12);
  if (v18)
  {
    uint64_t v20 = Image.init(systemName:)();
    static Font.Weight.semibold.getter();
    uint64_t v21 = type metadata accessor for Font.Design();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v5, 1, 1, v21);
    uint64_t v22 = static Font.system(size:weight:design:)();
    outlined destroy of TaskPriority?((uint64_t)v5, &demangling cache variable for type metadata for Font.Design?);
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v25 = v49;
    uint64_t v24 = v50;
    uint64_t v26 = v52;
    (*(void (**)(char *, void, uint64_t))(v50 + 104))(v49, enum case for Image.Scale.medium(_:), v52);
    uint64_t v27 = swift_getKeyPath();
    (*(void (**)(char *, char *, uint64_t))(v24 + 16))((char *)v2 + *(int *)(v48 + 28), v25, v26);
    *uint64_t v2 = v27;
    outlined init with copy of (String, Any)((uint64_t)v2, (uint64_t)v7 + *(int *)(v46 + 36), &_s7SwiftUI30_EnvironmentKeyWritingModifierVyAA5ImageV5ScaleOGMD_0);
    uint64_t *v7 = v20;
    v7[1] = KeyPath;
    _OWORD v7[2] = v22;
    swift_retain();
    swift_retain();
    swift_retain();
    outlined destroy of TaskPriority?((uint64_t)v2, &_s7SwiftUI30_EnvironmentKeyWritingModifierVyAA5ImageV5ScaleOGMD_0);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v25, v26);
    swift_release();
    swift_release();
    swift_release();
    uint64_t v28 = static Color.accentColor.getter();
    uint64_t v29 = swift_getKeyPath();
    outlined init with copy of (String, Any)((uint64_t)v7, (uint64_t)v9, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Image.Scale>>);
    uint64_t v30 = (uint64_t *)&v9[*(int *)(v47 + 36)];
    uint64_t *v30 = v29;
    v30[1] = v28;
    outlined destroy of TaskPriority?((uint64_t)v7, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Image.Scale>>);
    char v31 = static Edge.Set.leading.getter();
    if (one-time initialization token for smallSpacing != -1) {
      swift_once();
    }
    EdgeInsets.init(_all:)();
    uint64_t v33 = v32;
    uint64_t v35 = v34;
    uint64_t v37 = v36;
    uint64_t v39 = v38;
    uint64_t v40 = v51;
    outlined init with copy of (String, Any)((uint64_t)v9, v51, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Image.Scale>>, _EnvironmentKeyWritingModifier<Color?>>);
    uint64_t v41 = v54;
    uint64_t v42 = v40 + *(int *)(v54 + 36);
    *(unsigned char *)uint64_t v42 = v31;
    *(void *)(v42 + 8) = v33;
    *(void *)(v42 + 16) = v35;
    *(void *)(v42 + 24) = v37;
    *(void *)(v42 + 32) = v39;
    *(unsigned char *)(v42 + 40) = 0;
    outlined destroy of TaskPriority?((uint64_t)v9, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Image.Scale>>, _EnvironmentKeyWritingModifier<Color?>>);
    uint64_t v43 = v55;
    outlined init with take of PresentationSource?(v40, v55, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Image.Scale>>, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>);
    uint64_t v44 = 0;
  }
  else
  {
    uint64_t v44 = 1;
    uint64_t v41 = v54;
    uint64_t v43 = v55;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v53 + 56))(v43, v44, 1, v41);
}

uint64_t protocol witness for View.body.getter in conformance RazzmatazzView@<X0>(uint64_t a1@<X8>)
{
  return RazzmatazzView.body.getter(a1);
}

uint64_t destroy for RazzmatazzView()
{
  swift_release();
  outlined consume of StateObject<RazzmatazzController>.Storage();
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for RazzmatazzView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  swift_retain();
  KeyValueObservationTrigger.keyPath.getter();
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v8 = *(void *)(a2 + 48);
  uint64_t v9 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = v8;
  *(void *)(a1 + 56) = v9;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for RazzmatazzView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_retain();
  swift_release();
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  KeyValueObservationTrigger.keyPath.getter();
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  outlined consume of StateObject<RazzmatazzController>.Storage();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_retain();
  swift_release();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for RazzmatazzView(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  char v4 = *(unsigned char *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = v4;
  outlined consume of StateObject<RazzmatazzController>.Storage();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  swift_release();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for RazzmatazzView()
{
  return &type metadata for RazzmatazzView;
}

uint64_t sub_1003761D4()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for <<opaque return type of View.toolbar<A>(content:)>>.0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for <<opaque return type of View.sheet<A>(isPresented:onDismiss:content:)>>.0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for <<opaque return type of static ToolbarContentBuilder.buildBlock<A>(_:)>>.0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<List<Never, TupleView<(Section<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Text.Case?>>, _PaddingLayout>, _TraitWritingModifier<ListRowInsetsTraitKey>>, _ConditionalContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, ForEach<[Razzmatazz], Razzmatazz, RazzmatazzView.CompactListCell>>, EmptyView>, Section<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Text.Case?>>, _PaddingLayout>, _TraitWritingModifier<ListRowInsetsTraitKey>>, ForEach<[Razzmatazz], Razzmatazz, RazzmatazzView.CompactListCell>, EmptyView>)>>, _TaskModifier>);
  type metadata accessor for CitySelectionView(255);
  lazy protocol witness table accessor for type ModifiedContent<List<Never, TupleView<(Section<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Text.Case?>>, _PaddingLayout>, _TraitWritingModifier<ListRowInsetsTraitKey>>, _ConditionalContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, ForEach<[Razzmatazz], Razzmatazz, RazzmatazzView.CompactListCell>>, EmptyView>, Section<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Text.Case?>>, _PaddingLayout>, _TraitWritingModifier<ListRowInsetsTraitKey>>, ForEach<[Razzmatazz], Razzmatazz, RazzmatazzView.CompactListCell>, EmptyView>)>>, _TaskModifier> and conformance <> ModifiedContent<A, B>();
  _s7SwiftUI13_TaskModifierVAcA04ViewD0AAWlTm_1(&lazy protocol witness table cache variable for type CitySelectionView and conformance CitySelectionView, (void (*)(uint64_t))type metadata accessor for CitySelectionView);
  swift_getOpaqueTypeConformance2();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ToolbarItem<(), <<opaque return type of View.menuStyle<A>(_:)>>.0>);
  lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type ToolbarItem<(), <<opaque return type of View.menuStyle<A>(_:)>>.0> and conformance ToolbarItem<A, B>, &demangling cache variable for type metadata for ToolbarItem<(), <<opaque return type of View.menuStyle<A>(_:)>>.0>);
  swift_getOpaqueTypeConformance2();
  swift_getOpaqueTypeConformance2();
  return swift_getOpaqueTypeConformance2();
}

uint64_t *initializeBufferWithCopyOfBuffer for RazzmatazzView.CompactListCell(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  char v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v34 = *a2;
    *char v4 = *a2;
    char v4 = (uint64_t *)(v34 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    uint64_t v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    uint64_t v8 = (int *)type metadata accessor for Razzmatazz(0);
    uint64_t v9 = v8[6];
    uint64_t v10 = (char *)v4 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = type metadata accessor for Date();
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    uint64_t v14 = v8[7];
    uint64_t v15 = (char *)v4 + v14;
    uint64_t v16 = (char *)a2 + v14;
    uint64_t v17 = type metadata accessor for Artist();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    uint64_t v18 = v8[8];
    uint64_t v19 = (uint64_t *)((char *)v4 + v18);
    uint64_t v20 = (char *)a2 + v18;
    uint64_t v21 = *(uint64_t *)((char *)a2 + v18 + 8);
    void *v19 = *(uint64_t *)((char *)a2 + v18);
    v19[1] = v21;
    uint64_t v22 = *(uint64_t *)((char *)a2 + v18 + 24);
    _OWORD v19[2] = *(uint64_t *)((char *)a2 + v18 + 16);
    v19[3] = v22;
    uint64_t v23 = *(uint64_t *)((char *)a2 + v18 + 40);
    v19[4] = *(uint64_t *)((char *)a2 + v18 + 32);
    v19[5] = v23;
    uint64_t v24 = *(uint64_t *)((char *)a2 + v18 + 56);
    void v19[6] = *(uint64_t *)((char *)a2 + v18 + 48);
    v19[7] = v24;
    uint64_t v25 = *(uint64_t *)((char *)a2 + v18 + 72);
    unsigned char v19[8] = *(uint64_t *)((char *)a2 + v18 + 64);
    v19[9] = v25;
    uint64_t v26 = *(uint64_t *)((char *)a2 + v18 + 88);
    v19[10] = *(uint64_t *)((char *)a2 + v18 + 80);
    v19[11] = v26;
    uint64_t v39 = *(void **)((char *)a2 + v18 + 96);
    v19[12] = v39;
    uint64_t v27 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
    uint64_t v37 = &v20[v27];
    uint64_t v38 = (char *)v19 + v27;
    uint64_t v28 = type metadata accessor for TimeZone();
    uint64_t v36 = *(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v29 = v39;
    v36(v38, v37, v28);
    uint64_t v30 = *(int *)(a3 + 20);
    char v31 = (uint64_t *)((char *)v4 + v30);
    uint64_t v32 = (uint64_t *)((char *)a2 + v30);
    uint64_t v33 = v32[1];
    void *v31 = *v32;
    v31[1] = v33;
  }
  swift_retain();
  return v4;
}

void *initializeWithCopy for RazzmatazzView.CompactListCell(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  uint64_t v7 = (int *)type metadata accessor for Razzmatazz(0);
  uint64_t v8 = v7[6];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for Date();
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  uint64_t v13 = v7[7];
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = type metadata accessor for Artist();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  uint64_t v17 = v7[8];
  uint64_t v18 = (void *)((char *)a1 + v17);
  uint64_t v19 = (char *)a2 + v17;
  uint64_t v20 = *(void *)((char *)a2 + v17 + 8);
  *uint64_t v18 = *(void *)((char *)a2 + v17);
  v18[1] = v20;
  uint64_t v21 = *(void *)((char *)a2 + v17 + 24);
  _OWORD v18[2] = *(void *)((char *)a2 + v17 + 16);
  v18[3] = v21;
  uint64_t v22 = *(void *)((char *)a2 + v17 + 40);
  v18[4] = *(void *)((char *)a2 + v17 + 32);
  v18[5] = v22;
  uint64_t v23 = *(void *)((char *)a2 + v17 + 56);
  v18[6] = *(void *)((char *)a2 + v17 + 48);
  v18[7] = v23;
  uint64_t v24 = *(void *)((char *)a2 + v17 + 72);
  v18[8] = *(void *)((char *)a2 + v17 + 64);
  v18[9] = v24;
  uint64_t v25 = *(void *)((char *)a2 + v17 + 88);
  v18[10] = *(void *)((char *)a2 + v17 + 80);
  v18[11] = v25;
  uint64_t v37 = *(void **)((char *)a2 + v17 + 96);
  v18[12] = v37;
  uint64_t v26 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  uint64_t v35 = &v19[v26];
  uint64_t v36 = (char *)v18 + v26;
  uint64_t v27 = type metadata accessor for TimeZone();
  uint64_t v34 = *(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v28 = v37;
  v34(v36, v35, v27);
  uint64_t v29 = *(int *)(a3 + 20);
  uint64_t v30 = (void *)((char *)a1 + v29);
  char v31 = (void *)((char *)a2 + v29);
  uint64_t v32 = v31[1];
  void *v30 = *v31;
  v30[1] = v32;
  swift_retain();
  return a1;
}

void *assignWithCopy for RazzmatazzView.CompactListCell(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = (int *)type metadata accessor for Razzmatazz(0);
  uint64_t v7 = v6[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = v6[7];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = type metadata accessor for Artist();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = v6[8];
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (void *)((char *)a2 + v15);
  void *v16 = *(void *)((char *)a2 + v15);
  v16[1] = *(void *)((char *)a2 + v15 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  _OWORD v16[2] = v17[2];
  v16[3] = v17[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16[4] = v17[4];
  v16[5] = v17[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16[6] = v17[6];
  v16[7] = v17[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16[8] = v17[8];
  v16[9] = v17[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16[10] = v17[10];
  v16[11] = v17[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = (void *)v17[12];
  uint64_t v19 = (void *)v16[12];
  v16[12] = v18;
  id v20 = v18;

  uint64_t v21 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  uint64_t v22 = (char *)v16 + v21;
  uint64_t v23 = (char *)v17 + v21;
  uint64_t v24 = type metadata accessor for TimeZone();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 24))(v22, v23, v24);
  uint64_t v25 = *(int *)(a3 + 20);
  uint64_t v26 = (void *)((char *)a1 + v25);
  uint64_t v27 = (void *)((char *)a2 + v25);
  uint64_t v28 = v27[1];
  void *v26 = *v27;
  v26[1] = v28;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *initializeWithTake for RazzmatazzView.CompactListCell(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = (int *)type metadata accessor for Razzmatazz(0);
  uint64_t v8 = v7[6];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  uint64_t v12 = v7[7];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = type metadata accessor for Artist();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
  uint64_t v16 = v7[8];
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  long long v19 = *(_OWORD *)((char *)a2 + v16 + 16);
  *(_OWORD *)uint64_t v17 = *(_OWORD *)((char *)a2 + v16);
  *((_OWORD *)v17 + 1) = v19;
  long long v20 = *(_OWORD *)((char *)a2 + v16 + 48);
  *((_OWORD *)v17 + 2) = *(_OWORD *)((char *)a2 + v16 + 32);
  *((_OWORD *)v17 + 3) = v20;
  long long v21 = *(_OWORD *)((char *)a2 + v16 + 80);
  *((_OWORD *)v17 + 4) = *(_OWORD *)((char *)a2 + v16 + 64);
  *((_OWORD *)v17 + 5) = v21;
  *((void *)v17 + 12) = *(void *)((char *)a2 + v16 + 96);
  uint64_t v22 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  uint64_t v23 = &v17[v22];
  uint64_t v24 = &v18[v22];
  uint64_t v25 = type metadata accessor for TimeZone();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(v23, v24, v25);
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 20));
  return a1;
}

void *assignWithTake for RazzmatazzView.CompactListCell(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = (int *)type metadata accessor for Razzmatazz(0);
  uint64_t v9 = v8[6];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 40))(v10, v11, v12);
  uint64_t v13 = v8[7];
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = type metadata accessor for Artist();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 40))(v14, v15, v16);
  uint64_t v17 = v8[8];
  uint64_t v18 = (void *)((char *)a1 + v17);
  long long v19 = (void *)((char *)a2 + v17);
  uint64_t v20 = *(void *)((char *)a2 + v17 + 8);
  *uint64_t v18 = *(void *)((char *)a2 + v17);
  v18[1] = v20;
  swift_bridgeObjectRelease();
  uint64_t v21 = v19[3];
  _OWORD v18[2] = v19[2];
  v18[3] = v21;
  swift_bridgeObjectRelease();
  uint64_t v22 = v19[5];
  v18[4] = v19[4];
  v18[5] = v22;
  swift_bridgeObjectRelease();
  uint64_t v23 = v19[7];
  v18[6] = v19[6];
  v18[7] = v23;
  swift_bridgeObjectRelease();
  uint64_t v24 = v19[9];
  v18[8] = v19[8];
  v18[9] = v24;
  swift_bridgeObjectRelease();
  uint64_t v25 = v19[11];
  v18[10] = v19[10];
  v18[11] = v25;
  swift_bridgeObjectRelease();
  uint64_t v26 = (void *)v18[12];
  v18[12] = v19[12];

  uint64_t v27 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  uint64_t v28 = (char *)v18 + v27;
  uint64_t v29 = (char *)v19 + v27;
  uint64_t v30 = type metadata accessor for TimeZone();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 40))(v28, v29, v30);
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 20));
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for RazzmatazzView.CompactListCell(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100376DA0);
}

uint64_t sub_100376DA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Razzmatazz(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for RazzmatazzView.CompactListCell(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100376E74);
}

uint64_t sub_100376E74(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for Razzmatazz(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for RazzmatazzView.CompactListCell()
{
  uint64_t result = type metadata singleton initialization cache for RazzmatazzView.CompactListCell;
  if (!type metadata singleton initialization cache for RazzmatazzView.CompactListCell) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata completion function for RazzmatazzView.CompactListCell()
{
  uint64_t result = type metadata accessor for Razzmatazz(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t associated type witness table accessor for View.Body : View in RazzmatazzView.CompactListCell()
{
  return swift_getOpaqueTypeConformance2();
}

void one-time initialization function for smallSpacing()
{
  static CGFloat.smallSpacing = 0x4010000000000000;
}

uint64_t key path getter for EnvironmentValues.imageScale : EnvironmentValues, serialized()
{
  return EnvironmentValues.imageScale.getter();
}

uint64_t sub_10037707C()
{
  return EnvironmentValues.imageScale.getter();
}

uint64_t _s7SwiftUI17EnvironmentValuesV10imageScaleAA5ImageV0F0OvpACTkq_0(uint64_t a1)
{
  type metadata accessor for Image.Scale();
  __chkstk_darwin();
  (*(void (**)(char *, uint64_t))(v3 + 16))((char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return EnvironmentValues.imageScale.setter();
}

uint64_t sub_10037717C()
{
  uint64_t v1 = *(unsigned __int8 *)(*(void *)(type metadata accessor for RazzmatazzView.CompactListCell() - 8) + 80);
  uint64_t v2 = v0 + ((v1 + 16) & ~v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v3 = (int *)type metadata accessor for Razzmatazz(0);
  uint64_t v4 = v2 + v3[6];
  uint64_t v5 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = v2 + v3[7];
  uint64_t v7 = type metadata accessor for Artist();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  uint64_t v8 = v2 + v3[8];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v9 = v8 + *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  uint64_t v10 = type metadata accessor for TimeZone();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  swift_release();

  return swift_deallocObject();
}

uint64_t partial apply for closure #2 in closure #1 in RazzmatazzView.CompactListCell.body.getter()
{
  uint64_t v1 = type metadata accessor for RazzmatazzView.CompactListCell();
  uint64_t v2 = *(void *)(v1 - 8);
  return (*(uint64_t (**)(unint64_t))(v0
                                                     + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))
                                                     + *(int *)(v1 + 20)))(v0 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80)));
}

uint64_t outlined retain of ModifiedContent<VStack<TupleView<(Text, Text, Text)>>, _EnvironmentKeyWritingModifier<Int?>>(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 56);
  uint64_t v3 = *(void *)(a1 + 64);
  char v4 = *(unsigned char *)(a1 + 72);
  uint64_t v5 = *(void *)(a1 + 88);
  uint64_t v6 = *(void *)(a1 + 96);
  char v7 = *(unsigned char *)(a1 + 104);
  outlined copy of Text.Storage(*(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
  swift_bridgeObjectRetain();
  outlined copy of Text.Storage(v2, v3, v4);
  swift_bridgeObjectRetain();
  outlined copy of Text.Storage(v5, v6, v7);
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t outlined release of ModifiedContent<VStack<TupleView<(Text, Text, Text)>>, _EnvironmentKeyWritingModifier<Int?>>(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 56);
  uint64_t v3 = *(void *)(a1 + 64);
  char v4 = *(unsigned char *)(a1 + 72);
  uint64_t v5 = *(void *)(a1 + 88);
  uint64_t v6 = *(void *)(a1 + 96);
  char v7 = *(unsigned char *)(a1 + 104);
  outlined consume of Text.Storage(*(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
  swift_bridgeObjectRelease();
  outlined consume of Text.Storage(v2, v3, v4);
  swift_bridgeObjectRelease();
  outlined consume of Text.Storage(v5, v6, v7);
  swift_release();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10037754C()
{
  swift_unknownObjectRelease();
  swift_release();
  outlined consume of StateObject<RazzmatazzController>.Storage();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #5 in RazzmatazzView.body.getter(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = partial apply for closure #1 in static MusicEngagementExtension.performRequest(with:completion:);
  return closure #1 in closure #5 in RazzmatazzView.body.getter(a1, v4, v5, v1 + 32);
}

void *specialized _ArrayProtocol.filter(_:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  uint64_t v27 = type metadata accessor for Razzmatazz(0);
  __chkstk_darwin();
  uint64_t v26 = (uint64_t)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v10 = (char *)v23 - v9;
  uint64_t result = _swiftEmptyArrayStorage;
  uint64_t v32 = _swiftEmptyArrayStorage;
  uint64_t v12 = *(void *)(a1 + 16);
  if (v12)
  {
    int v25 = a4 & 1;
    uint64_t v13 = *(unsigned __int8 *)(v8 + 80);
    uint64_t v14 = *(void *)(v8 + 72);
    v23[1] = v4;
    uint64_t v24 = (v13 + 32) & ~v13;
    uint64_t v15 = a1 + v24;
    do
    {
      outlined init with copy of RazzmatazzView.CompactListCell(v15, (uint64_t)v10, type metadata accessor for Razzmatazz);
      uint64_t v16 = *(void **)&v10[*(int *)(v27 + 32) + 96];
      type metadata accessor for RazzmatazzController(0);
      _s7SwiftUI13_TaskModifierVAcA04ViewD0AAWlTm_1(&lazy protocol witness table cache variable for type RazzmatazzController and conformance RazzmatazzController, (void (*)(uint64_t))type metadata accessor for RazzmatazzController);
      StateObject.wrappedValue.getter();
      swift_getKeyPath();
      swift_getKeyPath();
      static Published.subscript.getter();
      swift_release();
      swift_release();
      swift_release();
      id v17 = [objc_allocWithZone((Class)CLLocation) initWithLatitude:v30 longitude:v31];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      [v16 distanceFromLocation:v17];
      double v19 = v18;

      if (v19 > 85000.0)
      {
        _s17_MusicKit_SwiftUI12ArtworkImageV0a4CoreD0E11PlaceholderOWOhTm_0((uint64_t)v10, type metadata accessor for Razzmatazz);
      }
      else
      {
        outlined init with take of RazzmatazzView.CompactListCell((uint64_t)v10, v26, type metadata accessor for Razzmatazz);
        uint64_t v20 = v32;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, v20[2] + 1, 1);
          uint64_t v20 = v32;
        }
        unint64_t v22 = v20[2];
        unint64_t v21 = v20[3];
        if (v22 >= v21 >> 1)
        {
          specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v21 > 1, v22 + 1, 1);
          uint64_t v20 = v32;
        }
        void v20[2] = v22 + 1;
        outlined init with take of RazzmatazzView.CompactListCell(v26, (uint64_t)v20 + v24 + v22 * v14, type metadata accessor for Razzmatazz);
      }
      v15 += v14;
      --v12;
    }
    while (v12);
    return v32;
  }
  return result;
}

uint64_t specialized RazzmatazzView.loadLibraryArtists()(uint64_t a1)
{
  v1[8] = a1;
  uint64_t v2 = type metadata accessor for Artist();
  v1[9] = v2;
  v1[10] = *(void *)(v2 - 8);
  v1[11] = swift_task_alloc();
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&_s8MusicKit0A14ItemCollectionVyAA6ArtistVGMD_0);
  v1[12] = v3;
  v1[13] = *(void *)(v3 - 8);
  v1[14] = swift_task_alloc();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicLibraryResponse<Artist>);
  v1[15] = v4;
  v1[16] = *(void *)(v4 - 8);
  v1[17] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for MusicFavoriteStatus();
  v1[18] = v5;
  v1[19] = *(void *)(v5 - 8);
  v1[20] = swift_task_alloc();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicLibraryRequest<Artist>);
  v1[21] = v6;
  v1[22] = *(void *)(v6 - 8);
  v1[23] = swift_task_alloc();
  type metadata accessor for MainActor();
  v1[24] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[25] = v8;
  v1[26] = v7;
  return _swift_task_switch(specialized RazzmatazzView.loadLibraryArtists(), v8, v7);
}

uint64_t specialized RazzmatazzView.loadLibraryArtists()()
{
  MusicLibraryRequest.init()();
  AppStorage.wrappedValue.getter();
  if (*(unsigned char *)(v0 + 232) == 1)
  {
    uint64_t v1 = *(void *)(v0 + 160);
    uint64_t v2 = *(void *)(v0 + 144);
    uint64_t v3 = *(void *)(v0 + 152);
    swift_getKeyPath();
    (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))(v1, enum case for MusicFavoriteStatus.favorited(_:), v2);
    _s7SwiftUI13_TaskModifierVAcA04ViewD0AAWlTm_1(&lazy protocol witness table cache variable for type MusicFavoriteStatus and conformance MusicFavoriteStatus, (void (*)(uint64_t))&type metadata accessor for MusicFavoriteStatus);
    MusicLibraryRequest<>.filter<A>(matching:equalTo:)();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  }
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 216) = v4;
  *uint64_t v4 = v0;
  v4[1] = specialized RazzmatazzView.loadLibraryArtists();
  uint64_t v5 = *(void *)(v0 + 168);
  uint64_t v6 = *(void *)(v0 + 136);
  return MusicLibraryRequest.response()(v6, v5);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();
  uint64_t v7;

  uint64_t v2 = *v1;
  *(void *)(*v1 + 224) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 208);
  uint64_t v4 = *(void *)(v2 + 200);
  if (v0) {
    uint64_t v5 = specialized RazzmatazzView.loadLibraryArtists();
  }
  else {
    uint64_t v5 = specialized RazzmatazzView.loadLibraryArtists();
  }
  return _swift_task_switch(v5, v4, v3);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void *, void);
  void *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(void *);
  uint64_t v22;

  uint64_t v2 = v0[16];
  uint64_t v1 = v0[17];
  uint64_t v3 = v0[15];
  swift_release();
  MusicLibraryResponse.items.getter();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v4 = lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&_s8MusicKit0A14ItemCollectionVyAA6ArtistVGACyxGSlAAWL_0, &_s8MusicKit0A14ItemCollectionVyAA6ArtistVGMD_0);
  uint64_t v5 = dispatch thunk of Collection.count.getter();
  if (v5)
  {
    uint64_t v6 = v5;
    uint64_t v7 = v0 + 7;
    specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, v5 & ~(v5 >> 63), 0);
    uint64_t result = dispatch thunk of Collection.startIndex.getter();
    if (v6 < 0)
    {
      __break(1u);
      return result;
    }
    uint64_t v9 = v0[10];
    do
    {
      uint64_t v10 = v0[11];
      uint64_t v11 = (void (*)(void *, void))dispatch thunk of Collection.subscript.read();
      (*(void (**)(uint64_t))(v9 + 16))(v10);
      v11(v0 + 2, 0);
      uint64_t v12 = v7;
      uint64_t v13 = v4;
      uint64_t v15 = _swiftEmptyArrayStorage[2];
      uint64_t v14 = _swiftEmptyArrayStorage[3];
      if (v15 >= v14 >> 1) {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v14 > 1, v15 + 1, 1);
      }
      uint64_t v16 = v0[11];
      id v17 = v0[9];
      _swiftEmptyArrayStorage[2] = v15 + 1;
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 32))((char *)_swiftEmptyArrayStorage+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(void *)(v9 + 72) * v15, v16, v17);
      dispatch thunk of Collection.formIndex(after:)();
      --v6;
      uint64_t v4 = v13;
      uint64_t v7 = v12;
    }
    while (v6);
  }
  double v19 = v0[22];
  double v18 = v0[23];
  uint64_t v20 = v0[21];
  (*(void (**)(void, void))(v0[13] + 8))(v0[14], v0[12]);
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v21 = (uint64_t (*)(void *))v0[1];
  return v21(_swiftEmptyArrayStorage);
}

{
  void *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  BOOL v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *);
  uint64_t v14;
  void *v15;
  uint64_t v16;

  uint64_t v15 = v0;
  swift_release();
  if (one-time initialization token for razzmatazz != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  __swift_project_value_buffer(v1, (uint64_t)static Logger.razzmatazz);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  uint64_t v3 = static os_log_type_t.error.getter();
  uint64_t v4 = os_log_type_enabled(v2, v3);
  uint64_t v5 = v0[28];
  if (v4)
  {
    uint64_t v6 = swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136315138;
    v0[6] = v5;
    swift_errorRetain();
    __swift_instantiateConcreteTypeFromMangledName(&_ss5Error_pMD_1);
    uint64_t v7 = String.init<A>(describing:)();
    *(void *)(v6 + 4) = _s2os32getNullTerminatedUTF8PointerImpl_21storingStringOwnersInSVSS_SpyypGSgztF_2(v7, v8, &v14);
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Could not load favorite artists error=%s", (uint8_t *)v6, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  uint64_t v10 = v0[22];
  uint64_t v9 = v0[23];
  uint64_t v11 = v0[21];
  swift_errorRelease();
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void *))v0[1];
  return v12(_swiftEmptyArrayStorage);
}

uint64_t partial apply for closure #1 in RazzmatazzController.load(for:)(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = closure #3 in static Actions.ReportConcern.action(context:);
  return closure #1 in RazzmatazzController.load(for:)(a1, v4, v5, v7, v6);
}

uint64_t sub_1003784D0(void *a1)
{
  return dispatch thunk of LibraryArtistInternalFilter.favoriteStatus.getter();
}

uint64_t partial apply for closure #1 in closure #4 in RazzmatazzView.body.getter@<X0>(uint64_t a1@<X8>)
{
  return closure #1 in closure #4 in RazzmatazzView.body.getter(*(void *)(v1 + 16), a1);
}

uint64_t partial apply for closure #1 in closure #1 in closure #4 in RazzmatazzView.body.getter()
{
  return closure #1 in closure #1 in closure #4 in RazzmatazzView.body.getter();
}

uint64_t partial apply for closure #2 in closure #1 in closure #4 in RazzmatazzView.body.getter@<X0>(uint64_t *a1@<X8>)
{
  return closure #2 in closure #1 in closure #4 in RazzmatazzView.body.getter(a1);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<Image, _ForegroundStyleModifier2<Color, Color>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<Image, _ForegroundStyleModifier2<Color, Color>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<Image, _ForegroundStyleModifier2<Color, Color>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<Image, _ForegroundStyleModifier2<Color, Color>>);
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type _ForegroundStyleModifier2<Color, Color> and conformance _ForegroundStyleModifier2<A, B>, &demangling cache variable for type metadata for _ForegroundStyleModifier2<Color, Color>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<Image, _ForegroundStyleModifier2<Color, Color>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t objectdestroy_34Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #1 in RazzmatazzView.body.getter@<X0>(uint64_t a1@<X8>)
{
  return closure #1 in closure #1 in RazzmatazzView.body.getter(*(void *)(v1 + 16), a1);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Text.Case?>>, _PaddingLayout>, _TraitWritingModifier<ListRowInsetsTraitKey>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Text.Case?>>, _PaddingLayout>, _TraitWritingModifier<ListRowInsetsTraitKey>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Text.Case?>>, _PaddingLayout>, _TraitWritingModifier<ListRowInsetsTraitKey>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Text.Case?>>, _PaddingLayout>, _TraitWritingModifier<ListRowInsetsTraitKey>>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Text.Case?>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Text.Case?>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Text.Case?>>, _PaddingLayout>, (void (*)(void))lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Text.Case?>> and conformance <> ModifiedContent<A, B>);
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type _TraitWritingModifier<ListRowInsetsTraitKey> and conformance _TraitWritingModifier<A>, &demangling cache variable for type metadata for _TraitWritingModifier<ListRowInsetsTraitKey>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Text.Case?>>, _PaddingLayout>, _TraitWritingModifier<ListRowInsetsTraitKey>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Text.Case?>>, _PaddingLayout>, _TraitWritingModifier<ListRowInsetsTraitKey>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Text.Case?>>, _PaddingLayout>, _TraitWritingModifier<ListRowInsetsTraitKey>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Text.Case?>>, _PaddingLayout>, _TraitWritingModifier<ListRowInsetsTraitKey>>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Text.Case?>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Text.Case?>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Text.Case?>>, _PaddingLayout>, (void (*)(void))lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Text.Case?>> and conformance <> ModifiedContent<A, B>);
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type _TraitWritingModifier<ListRowInsetsTraitKey> and conformance _TraitWritingModifier<A>, &demangling cache variable for type metadata for _TraitWritingModifier<ListRowInsetsTraitKey>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Text.Case?>>, _PaddingLayout>, _TraitWritingModifier<ListRowInsetsTraitKey>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Text.Case?>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Text.Case?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Text.Case?>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Text.Case?>>);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(Text, Text, Button<Text>)>>, _EnvironmentKeyWritingModifier<Font?>>);
    lazy protocol witness table accessor for type ModifiedContent<HStack<TupleView<(Text, Text, Button<Text>)>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>();
    swift_getOpaqueTypeConformance2();
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Text.Case?> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Text.Case?>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Text.Case?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Text.Case?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Text.Case?>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Text.Case?>>);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<Text, _EnvironmentKeyWritingModifier<Font?>>);
    lazy protocol witness table accessor for type ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<Text, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<Text, _EnvironmentKeyWritingModifier<Font?>>, (unint64_t *)&_s7SwiftUI30_EnvironmentKeyWritingModifierVyAA4FontVSgGACyxGAA04ViewF0AAWL_0, &_s7SwiftUI30_EnvironmentKeyWritingModifierVyAA4FontVSgGMD_0);
    swift_getOpaqueTypeConformance2();
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Text.Case?> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Text.Case?>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Text.Case?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<HStack<TupleView<(Text, Text, Button<Text>)>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<HStack<TupleView<(Text, Text, Button<Text>)>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<HStack<TupleView<(Text, Text, Button<Text>)>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(Text, Text, Button<Text>)>>, _EnvironmentKeyWritingModifier<Font?>>);
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type HStack<TupleView<(Text, Text, Button<Text>)>> and conformance HStack<A>, &demangling cache variable for type metadata for HStack<TupleView<(Text, Text, Button<Text>)>>);
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>((unint64_t *)&_s7SwiftUI30_EnvironmentKeyWritingModifierVyAA4FontVSgGACyxGAA04ViewF0AAWL_0, &_s7SwiftUI30_EnvironmentKeyWritingModifierVyAA4FontVSgGMD_0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<HStack<TupleView<(Text, Text, Button<Text>)>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type _ConditionalContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, ForEach<[Razzmatazz], Razzmatazz, RazzmatazzView.CompactListCell>> and conformance <> _ConditionalContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type _ConditionalContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, ForEach<[Razzmatazz], Razzmatazz, RazzmatazzView.CompactListCell>> and conformance <> _ConditionalContent<A, B>;
  if (!lazy protocol witness table cache variable for type _ConditionalContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, ForEach<[Razzmatazz], Razzmatazz, RazzmatazzView.CompactListCell>> and conformance <> _ConditionalContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, ForEach<[Razzmatazz], Razzmatazz, RazzmatazzView.CompactListCell>>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type ForEach<[Razzmatazz], Razzmatazz, RazzmatazzView.CompactListCell> and conformance <> ForEach<A, B, C>();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type _ConditionalContent<ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>, ForEach<[Razzmatazz], Razzmatazz, RazzmatazzView.CompactListCell>> and conformance <> _ConditionalContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>>);
    lazy protocol witness table accessor for type ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, &lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<TextAlignment> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<TextAlignment>);
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>((unint64_t *)&_s7SwiftUI30_EnvironmentKeyWritingModifierVyAA4FontVSgGACyxGAA04ViewF0AAWL_0, &_s7SwiftUI30_EnvironmentKeyWritingModifierVyAA4FontVSgGMD_0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ForEach<[Razzmatazz], Razzmatazz, RazzmatazzView.CompactListCell> and conformance <> ForEach<A, B, C>()
{
  unint64_t result = lazy protocol witness table cache variable for type ForEach<[Razzmatazz], Razzmatazz, RazzmatazzView.CompactListCell> and conformance <> ForEach<A, B, C>;
  if (!lazy protocol witness table cache variable for type ForEach<[Razzmatazz], Razzmatazz, RazzmatazzView.CompactListCell> and conformance <> ForEach<A, B, C>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ForEach<[Razzmatazz], Razzmatazz, RazzmatazzView.CompactListCell>);
    _s7SwiftUI13_TaskModifierVAcA04ViewD0AAWlTm_1(&lazy protocol witness table cache variable for type RazzmatazzView.CompactListCell and conformance RazzmatazzView.CompactListCell, (void (*)(uint64_t))type metadata accessor for RazzmatazzView.CompactListCell);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ForEach<[Razzmatazz], Razzmatazz, RazzmatazzView.CompactListCell> and conformance <> ForEach<A, B, C>);
  }
  return result;
}

uint64_t partial apply for closure #3 in closure #1 in RazzmatazzView.body.getter()
{
  return closure #3 in closure #1 in RazzmatazzView.body.getter(*(void *)(v0 + 16));
}

uint64_t lazy protocol witness table accessor for type ModifiedContent<Text, _EnvironmentKeyWritingModifier<TextAlignment>> and conformance <> ModifiedContent<A, B>(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(a3, a4);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t partial apply for closure #1 in closure #3 in closure #1 in RazzmatazzView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return closure #1 in closure #1 in closure #1 in RazzmatazzView.body.getter(a1, (uint64_t *)(v2 + 16), a2);
}

uint64_t _s7SwiftUI13_TaskModifierVAcA04ViewD0AAWlTm_1(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t outlined init with copy of RazzmatazzView.CompactListCell(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t partial apply for closure #1 in closure #1 in closure #2 in closure #1 in RazzmatazzView.body.getter()
{
  return State.wrappedValue.setter();
}

uint64_t objectdestroyTm_12()
{
  swift_release();
  outlined consume of StateObject<RazzmatazzController>.Storage();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t _s17_MusicKit_SwiftUI12ArtworkImageV0a4CoreD0E11PlaceholderOWOhTm_0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t outlined init with take of RazzmatazzView.CompactListCell(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, CornerRadiusModifier>, BorderViewModifier>, ModifiedContent<VStack<TupleView<(Text, Text, Text)>>, _EnvironmentKeyWritingModifier<Int?>>, Spacer, ListChevron)>>, _PaddingLayout>, _PaddingLayout>, _TraitWritingModifier<ListRowInsetsTraitKey>>, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Image.Scale>>, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>?>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, CornerRadiusModifier>, BorderViewModifier>, ModifiedContent<VStack<TupleView<(Text, Text, Text)>>, _EnvironmentKeyWritingModifier<Int?>>, Spacer, ListChevron)>>, _PaddingLayout>, _PaddingLayout>, _TraitWritingModifier<ListRowInsetsTraitKey>>, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Image.Scale>>, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, CornerRadiusModifier>, BorderViewModifier>, ModifiedContent<VStack<TupleView<(Text, Text, Text)>>, _EnvironmentKeyWritingModifier<Int?>>, Spacer, ListChevron)>>, _PaddingLayout>, _PaddingLayout>, _TraitWritingModifier<ListRowInsetsTraitKey>>, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Image.Scale>>, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>?>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, CornerRadiusModifier>, BorderViewModifier>, ModifiedContent<VStack<TupleView<(Text, Text, Text)>>, _EnvironmentKeyWritingModifier<Int?>>, Spacer, ListChevron)>>, _PaddingLayout>, _PaddingLayout>, _TraitWritingModifier<ListRowInsetsTraitKey>>, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Image.Scale>>, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>?>>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, CornerRadiusModifier>, BorderViewModifier>, ModifiedContent<VStack<TupleView<(Text, Text, Text)>>, _EnvironmentKeyWritingModifier<Int?>>, Spacer, ListChevron)>>, _PaddingLayout>, _PaddingLayout>, _TraitWritingModifier<ListRowInsetsTraitKey>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Image.Scale>>, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>?> and conformance _OverlayModifier<A>, &demangling cache variable for type metadata for _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Image.Scale>>, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>?>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, CornerRadiusModifier>, BorderViewModifier>, ModifiedContent<VStack<TupleView<(Text, Text, Text)>>, _EnvironmentKeyWritingModifier<Int?>>, Spacer, ListChevron)>>, _PaddingLayout>, _PaddingLayout>, _TraitWritingModifier<ListRowInsetsTraitKey>>, _OverlayModifier<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Image.Scale>>, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, CornerRadiusModifier>, BorderViewModifier>, ModifiedContent<VStack<TupleView<(Text, Text, Text)>>, _EnvironmentKeyWritingModifier<Int?>>, Spacer, ListChevron)>>, _PaddingLayout>, _PaddingLayout>, _TraitWritingModifier<ListRowInsetsTraitKey>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, CornerRadiusModifier>, BorderViewModifier>, ModifiedContent<VStack<TupleView<(Text, Text, Text)>>, _EnvironmentKeyWritingModifier<Int?>>, Spacer, ListChevron)>>, _PaddingLayout>, _PaddingLayout>, _TraitWritingModifier<ListRowInsetsTraitKey>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, CornerRadiusModifier>, BorderViewModifier>, ModifiedContent<VStack<TupleView<(Text, Text, Text)>>, _EnvironmentKeyWritingModifier<Int?>>, Spacer, ListChevron)>>, _PaddingLayout>, _PaddingLayout>, _TraitWritingModifier<ListRowInsetsTraitKey>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, CornerRadiusModifier>, BorderViewModifier>, ModifiedContent<VStack<TupleView<(Text, Text, Text)>>, _EnvironmentKeyWritingModifier<Int?>>, Spacer, ListChevron)>>, _PaddingLayout>, _PaddingLayout>, _TraitWritingModifier<ListRowInsetsTraitKey>>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Text.Case?>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, CornerRadiusModifier>, BorderViewModifier>, ModifiedContent<VStack<TupleView<(Text, Text, Text)>>, _EnvironmentKeyWritingModifier<Int?>>, Spacer, ListChevron)>>, _PaddingLayout>, _PaddingLayout> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, CornerRadiusModifier>, BorderViewModifier>, ModifiedContent<VStack<TupleView<(Text, Text, Text)>>, _EnvironmentKeyWritingModifier<Int?>>, Spacer, ListChevron)>>, _PaddingLayout>, _PaddingLayout>, (void (*)(void))lazy protocol witness table accessor for type ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, CornerRadiusModifier>, BorderViewModifier>, ModifiedContent<VStack<TupleView<(Text, Text, Text)>>, _EnvironmentKeyWritingModifier<Int?>>, Spacer, ListChevron)>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>);
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type _TraitWritingModifier<ListRowInsetsTraitKey> and conformance _TraitWritingModifier<A>, &demangling cache variable for type metadata for _TraitWritingModifier<ListRowInsetsTraitKey>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, CornerRadiusModifier>, BorderViewModifier>, ModifiedContent<VStack<TupleView<(Text, Text, Text)>>, _EnvironmentKeyWritingModifier<Int?>>, Spacer, ListChevron)>>, _PaddingLayout>, _PaddingLayout>, _TraitWritingModifier<ListRowInsetsTraitKey>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Text.Case?>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, CornerRadiusModifier>, BorderViewModifier>, ModifiedContent<VStack<TupleView<(Text, Text, Text)>>, _EnvironmentKeyWritingModifier<Int?>>, Spacer, ListChevron)>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, CornerRadiusModifier>, BorderViewModifier>, ModifiedContent<VStack<TupleView<(Text, Text, Text)>>, _EnvironmentKeyWritingModifier<Int?>>, Spacer, ListChevron)>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, CornerRadiusModifier>, BorderViewModifier>, ModifiedContent<VStack<TupleView<(Text, Text, Text)>>, _EnvironmentKeyWritingModifier<Int?>>, Spacer, ListChevron)>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, CornerRadiusModifier>, BorderViewModifier>, ModifiedContent<VStack<TupleView<(Text, Text, Text)>>, _EnvironmentKeyWritingModifier<Int?>>, Spacer, ListChevron)>>, _PaddingLayout>);
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type HStack<TupleView<(ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, CornerRadiusModifier>, BorderViewModifier>, ModifiedContent<VStack<TupleView<(Text, Text, Text)>>, _EnvironmentKeyWritingModifier<Int?>>, Spacer, ListChevron)>> and conformance HStack<A>, &demangling cache variable for type metadata for HStack<TupleView<(ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, CornerRadiusModifier>, BorderViewModifier>, ModifiedContent<VStack<TupleView<(Text, Text, Text)>>, _EnvironmentKeyWritingModifier<Int?>>, Spacer, ListChevron)>>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, CornerRadiusModifier>, BorderViewModifier>, ModifiedContent<VStack<TupleView<(Text, Text, Text)>>, _EnvironmentKeyWritingModifier<Int?>>, Spacer, ListChevron)>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t Logger.artwork.unsafeMutableAddressor()
{
  return Logger.artwork.unsafeMutableAddressor(&one-time initialization token for artwork, (uint64_t (*)(void))&type metadata accessor for Logger, (uint64_t)static Logger.artwork);
}

uint64_t MPModelPlaylistType.variant.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  switch(a1)
  {
    case 0:
      uint64_t v3 = (unsigned int *)&enum case for Playlist.Variant.regular(_:);
      goto LABEL_10;
    case 1:
      uint64_t v3 = (unsigned int *)&enum case for Playlist.Variant.smart(_:);
      goto LABEL_10;
    case 2:
      uint64_t v3 = (unsigned int *)&enum case for Playlist.Variant.genius(_:);
      goto LABEL_10;
    case 3:
      uint64_t v3 = (unsigned int *)&enum case for Playlist.Variant.folder(_:);
      goto LABEL_10;
    case 4:
    case 5:
    case 6:
    case 8:
      uint64_t v3 = (unsigned int *)&enum case for Playlist.Variant.subscribed(_:);
      goto LABEL_10;
    case 7:
      uint64_t v3 = (unsigned int *)&enum case for Playlist.Variant.personalMix(_:);
      goto LABEL_10;
    case 9:
      uint64_t v3 = (unsigned int *)&enum case for Playlist.Variant.favoriteSongs(_:);
LABEL_10:
      uint64_t v9 = *v3;
      uint64_t v10 = type metadata accessor for Playlist.Variant();
      uint64_t v12 = *(void *)(v10 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 104))(a2, v9, v10);
      uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56);
      uint64_t v7 = a2;
      uint64_t v8 = 0;
      uint64_t v6 = v10;
      break;
    default:
      uint64_t v4 = type metadata accessor for Playlist.Variant();
      uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
      uint64_t v6 = v4;
      uint64_t v7 = a2;
      uint64_t v8 = 1;
      break;
  }

  return v5(v7, v8, 1, v6);
}

uint64_t Playlist.Variant.symbolName.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Playlist.Variant();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, v2);
  int v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v6 == enum case for Playlist.Variant.smart(_:)) {
    return 0x7061687372616567;
  }
  if (v6 == enum case for Playlist.Variant.genius(_:)) {
    return 0x7375696E6567;
  }
  if (v6 == enum case for Playlist.Variant.folder(_:)) {
    return 0x7265646C6F66;
  }
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return 0x6F6E2E636973756DLL;
}

uint64_t ArtworkImage.ViewModel.init(artwork:cropStyle:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for Artwork();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a3, a1, v6);
  uint64_t v7 = type metadata accessor for ArtworkImage.ViewModel(0);
  return outlined init with take of PresentationSource?(a2, a3 + *(int *)(v7 + 20), &_s8MusicKit7ArtworkV0aB8InternalE9CropStyleVSgMD_0);
}

uint64_t Artwork.CropStyle.fallback.unsafeMutableAddressor()
{
  return Logger.artwork.unsafeMutableAddressor(&one-time initialization token for fallback, (uint64_t (*)(void))&type metadata accessor for Artwork.CropStyle, (uint64_t)static Artwork.CropStyle.fallback);
}

uint64_t Logger.artwork.unsafeMutableAddressor(void *a1, uint64_t (*a2)(void), uint64_t a3)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = a2(0);

  return __swift_project_value_buffer(v5, a3);
}

uint64_t Artwork.ImageFormat.fallback.unsafeMutableAddressor()
{
  return Logger.artwork.unsafeMutableAddressor(&one-time initialization token for fallback, (uint64_t (*)(void))&type metadata accessor for Artwork.ImageFormat, (uint64_t)static Artwork.ImageFormat.fallback);
}

uint64_t specialized Environment.wrappedValue.getter@<X0>(uint64_t a1@<X8>)
{
  return specialized Environment.wrappedValue.getter(&demangling cache variable for type metadata for Environment<DismissAction>.Content, (uint64_t (*)(void))&type metadata accessor for DismissAction, 0x417373696D736944, 0xED00006E6F697463, a1);
}

{
  return specialized Environment.wrappedValue.getter(&demangling cache variable for type metadata for Environment<LayoutDirection>.Content, (uint64_t (*)(void))&type metadata accessor for LayoutDirection, 0x694474756F79614CLL, 0xEF6E6F6974636572, a1);
}

{
  return specialized Environment.wrappedValue.getter((uint64_t *)&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content, (uint64_t (*)(void))&type metadata accessor for DynamicTypeSize, 0x5463696D616E7944, 0xEF657A6953657079, a1);
}

{
  return specialized Environment.wrappedValue.getter(&demangling cache variable for type metadata for Environment<ColorScheme>.Content, (uint64_t (*)(void))&type metadata accessor for ColorScheme, 0x686353726F6C6F43, 0xEB00000000656D65, a1);
}

{
  return specialized Environment.wrappedValue.getter(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content, &demangling cache variable for type metadata for UserInterfaceSizeClass?, 0xD000000000000020, 0x8000000100474800, a1);
}

{
  return specialized Environment.wrappedValue.getter(&demangling cache variable for type metadata for Environment<ColorSchemeContrast>.Content, (uint64_t (*)(void))&type metadata accessor for ColorSchemeContrast, 0xD000000000000013, 0x80000001004747A0, a1);
}

uint64_t specialized Environment.wrappedValue.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EnvironmentValues();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 0x100) == 0)
  {
    swift_retain();
    os_log_type_t v8 = static os_log_type_t.fault.getter();
    uint64_t v9 = static Log.runtimeIssuesLog.getter();
    if (os_log_type_enabled(v9, v8))
    {
      uint64_t v10 = swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      *(_DWORD *)uint64_t v10 = 136315138;
      *(void *)(v10 + 4) = _s2os32getNullTerminatedUTF8PointerImpl_21storingStringOwnersInSVSS_SpyypGSgztF_2(0xD000000000000011, 0x8000000100474830, &v12);
      _os_log_impl((void *)&_mh_execute_header, v9, v8, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", (uint8_t *)v10, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    EnvironmentValues.init()();
    swift_getAtKeyPath();
    outlined consume of Environment<CGFloat?>.Content(a1, a2, 0);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return v12;
  }
  return a1;
}

uint64_t specialized Environment.wrappedValue.getter@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  unint64_t v22 = a4;
  uint64_t v9 = v5;
  uint64_t v11 = type metadata accessor for EnvironmentValues();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin();
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(a1);
  __chkstk_darwin();
  uint64_t v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of (String, Any)(v9, (uint64_t)v16, a1);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v17 = a2(0);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v17 - 8) + 32))(a5, v16, v17);
  }
  else
  {
    os_log_type_t v19 = static os_log_type_t.fault.getter();
    uint64_t v20 = static Log.runtimeIssuesLog.getter();
    if (os_log_type_enabled(v20, v19))
    {
      uint64_t v21 = swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      *(_DWORD *)uint64_t v21 = 136315138;
      *(void *)(v21 + 4) = _s2os32getNullTerminatedUTF8PointerImpl_21storingStringOwnersInSVSS_SpyypGSgztF_2(a3, v22, &v23);
      _os_log_impl((void *)&_mh_execute_header, v20, v19, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", (uint8_t *)v21, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    EnvironmentValues.init()();
    swift_getAtKeyPath();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
}

uint64_t specialized Environment.wrappedValue.getter(uint64_t a1, char a2)
{
  uint64_t v4 = type metadata accessor for EnvironmentValues();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2) {
    return a1 & 1;
  }
  swift_retain();
  os_log_type_t v8 = static os_log_type_t.fault.getter();
  uint64_t v9 = static Log.runtimeIssuesLog.getter();
  if (os_log_type_enabled(v9, v8))
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136315138;
    *(void *)(v10 + 4) = _s2os32getNullTerminatedUTF8PointerImpl_21storingStringOwnersInSVSS_SpyypGSgztF_2(1819242306, 0xE400000000000000, &v12);
    _os_log_impl((void *)&_mh_execute_header, v9, v8, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", (uint8_t *)v10, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  EnvironmentValues.init()();
  swift_getAtKeyPath();
  outlined consume of Environment<SymbolButton.MaterialColor?>.Content(a1, 0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v13;
}

{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  os_log_type_t v8;
  NSObject *v9;
  uint64_t v10;
  uint64_t v12;
  unsigned __int8 v13;

  uint64_t v4 = type metadata accessor for EnvironmentValues();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) == 0)
  {
    swift_retain();
    os_log_type_t v8 = static os_log_type_t.fault.getter();
    uint64_t v9 = static Log.runtimeIssuesLog.getter();
    if (os_log_type_enabled(v9, v8))
    {
      uint64_t v10 = swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      *(_DWORD *)uint64_t v10 = 136315138;
      *(void *)(v10 + 4) = _s2os32getNullTerminatedUTF8PointerImpl_21storingStringOwnersInSVSS_SpyypGSgztF_2(0xD000000000000017, 0x80000001004747C0, &v12);
      _os_log_impl((void *)&_mh_execute_header, v9, v8, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", (uint8_t *)v10, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    EnvironmentValues.init()();
    swift_getAtKeyPath();
    outlined consume of Environment<SymbolButton.MaterialColor?>.Content(a1, 0);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return v13;
  }
  return a1;
}

{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  os_log_type_t v8;
  NSObject *v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;

  uint64_t v4 = type metadata accessor for EnvironmentValues();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  if ((a2 & 1) == 0)
  {
    os_log_type_t v8 = static os_log_type_t.fault.getter();
    uint64_t v9 = static Log.runtimeIssuesLog.getter();
    if (os_log_type_enabled(v9, v8))
    {
      uint64_t v10 = swift_slowAlloc();
      unsigned __int8 v13 = swift_slowAlloc();
      *(_DWORD *)uint64_t v10 = 136315138;
      *(void *)(v10 + 4) = _s2os32getNullTerminatedUTF8PointerImpl_21storingStringOwnersInSVSS_SpyypGSgztF_2(0x6C616E6F6974704FLL, 0xEF3E726F6C6F433CLL, &v13);
      _os_log_impl((void *)&_mh_execute_header, v9, v8, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", (uint8_t *)v10, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    EnvironmentValues.init()();
    swift_getAtKeyPath();
    outlined consume of Environment<Color?>.Content(a1, 0);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return v13;
  }
  return a1;
}

uint64_t specialized Environment.wrappedValue.getter@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  unint64_t v21 = a4;
  uint64_t v9 = v5;
  uint64_t v11 = type metadata accessor for EnvironmentValues();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin();
  uint64_t v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(a1);
  __chkstk_darwin();
  uint64_t v16 = (char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of (String, Any)(v9, (uint64_t)v16, a1);
  if (swift_getEnumCaseMultiPayload() == 1) {
    return outlined init with take of PresentationSource?((uint64_t)v16, a5, a2);
  }
  os_log_type_t v18 = static os_log_type_t.fault.getter();
  os_log_type_t v19 = static Log.runtimeIssuesLog.getter();
  if (os_log_type_enabled(v19, v18))
  {
    uint64_t v20 = swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    *(_DWORD *)uint64_t v20 = 136315138;
    *(void *)(v20 + 4) = _s2os32getNullTerminatedUTF8PointerImpl_21storingStringOwnersInSVSS_SpyypGSgztF_2(a3, v21, &v22);
    _os_log_impl((void *)&_mh_execute_header, v19, v18, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", (uint8_t *)v20, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  EnvironmentValues.init()();
  swift_getAtKeyPath();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

uint64_t specialized Environment.wrappedValue.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for EnvironmentValues();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a3 & 0x100) != 0)
  {
    outlined copy of NoticeDismissal?(a1, a2);
  }
  else
  {
    swift_retain();
    os_log_type_t v10 = static os_log_type_t.fault.getter();
    uint64_t v11 = static Log.runtimeIssuesLog.getter();
    if (os_log_type_enabled(v11, v10))
    {
      uint64_t v12 = swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      *(_DWORD *)uint64_t v12 = 136315138;
      *(void *)(v12 + 4) = _s2os32getNullTerminatedUTF8PointerImpl_21storingStringOwnersInSVSS_SpyypGSgztF_2(0xD000000000000019, 0x80000001004747E0, &v15);
      _os_log_impl((void *)&_mh_execute_header, v11, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", (uint8_t *)v12, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    EnvironmentValues.init()();
    swift_getAtKeyPath();
    outlined consume of Environment<NoticeDismissal?>.Content(a1, a2, a3, 0);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return v15;
  }
  return a1;
}

uint64_t ArtworkImage.Size.init(width:height:fittingAspectRatio:contentMode:)@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, char a6@<W5>, char a7@<W6>, uint64_t a8@<X8>)
{
  *(void *)a8 = result;
  *(unsigned char *)(a8 + 8) = a2 & 1;
  *(void *)(a8 + 16) = a3;
  *(unsigned char *)(a8 + 24) = a4 & 1;
  *(void *)(a8 + 32) = a5;
  *(unsigned char *)(a8 + 40) = a6 & 1;
  *(unsigned char *)(a8 + 41) = a7;
  return result;
}

uint64_t static ArtworkImage.with(_:placeholder:size:reusePolicy:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v52 = a4;
  uint64_t v63 = a2;
  uint64_t v61 = *(void *)(type metadata accessor for ArtworkImage.Placeholder(0) - 8);
  __chkstk_darwin();
  uint64_t v62 = v8;
  uint64_t v9 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&_s8MusicKit7ArtworkV0aB8InternalE9CropStyleVSgMD_0);
  __chkstk_darwin();
  uint64_t v56 = (uint64_t)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Artwork.CropStyle();
  uint64_t v57 = *(void *)(v11 - 8);
  __chkstk_darwin();
  uint64_t v55 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0);
  uint64_t v64 = *(void *)(v13 - 8);
  uint64_t v65 = v13;
  __chkstk_darwin();
  uint64_t v60 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ArtworkImage.ViewModel?);
  __chkstk_darwin();
  uint64_t v16 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  os_log_type_t v18 = (char *)&v49 - v17;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
  __chkstk_darwin();
  uint64_t v20 = (char *)&v49 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for ArtworkImage();
  uint64_t v58 = *(void *)(v21 - 8);
  uint64_t v59 = v21;
  __chkstk_darwin();
  int v66 = (char *)&v49 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v51 = (char *)&v49 - v23;
  __chkstk_darwin();
  uint64_t v54 = (char *)&v49 - v24;
  __chkstk_darwin();
  uint64_t v67 = (char *)&v49 - v25;
  uint64_t v53 = a1;
  outlined init with copy of (String, Any)(a1, (uint64_t)v18, (uint64_t *)&demangling cache variable for type metadata for ArtworkImage.ViewModel?);
  uint64_t v26 = type metadata accessor for ArtworkImage.ViewModel(0);
  uint64_t v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v26 - 8) + 48);
  if (v27(v18, 1, v26) == 1)
  {
    outlined destroy of TaskPriority?((uint64_t)v18, (uint64_t *)&demangling cache variable for type metadata for ArtworkImage.ViewModel?);
    uint64_t v28 = type metadata accessor for Artwork();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v20, 1, 1, v28);
  }
  else
  {
    uint64_t v29 = type metadata accessor for Artwork();
    uint64_t v49 = v11;
    uint64_t v50 = v9;
    uint64_t v30 = v29;
    uint64_t v31 = a5;
    uint64_t v32 = *(void *)(v29 - 8);
    (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v20, v18, v29);
    outlined destroy of ArtworkImage.ViewModel((uint64_t)v18, type metadata accessor for ArtworkImage.ViewModel);
    uint64_t v33 = v30;
    uint64_t v11 = v49;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v20, 0, 1, v33);
    a5 = v31;
    uint64_t v9 = v50;
  }
  ArtworkImage.init(artwork:width:height:)((uint64_t)v20, *(void *)a3, *(unsigned char *)(a3 + 8), *(void *)(a3 + 16), *(unsigned char *)(a3 + 24));
  ArtworkImage.artworkReusablePolicy(_:)();
  outlined init with copy of (String, Any)(v53, (uint64_t)v16, (uint64_t *)&demangling cache variable for type metadata for ArtworkImage.ViewModel?);
  unsigned int v34 = v27(v16, 1, v26);
  uint64_t v35 = v55;
  if (v34 == 1)
  {
    outlined destroy of TaskPriority?((uint64_t)v16, (uint64_t *)&demangling cache variable for type metadata for ArtworkImage.ViewModel?);
    uint64_t v37 = v56;
    uint64_t v36 = v57;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v57 + 56))(v56, 1, 1, v11);
  }
  else
  {
    uint64_t v37 = v56;
    outlined init with copy of (String, Any)((uint64_t)&v16[*(int *)(v26 + 20)], v56, &_s8MusicKit7ArtworkV0aB8InternalE9CropStyleVSgMD_0);
    outlined destroy of ArtworkImage.ViewModel((uint64_t)v16, type metadata accessor for ArtworkImage.ViewModel);
    uint64_t v36 = v57;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v57 + 48))(v37, 1, v11) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v36 + 32))(v35, v37, v11);
      goto LABEL_11;
    }
  }
  if (one-time initialization token for fallback != -1) {
    swift_once();
  }
  uint64_t v38 = __swift_project_value_buffer(v11, (uint64_t)static Artwork.CropStyle.fallback);
  (*(void (**)(char *, uint64_t, uint64_t))(v36 + 16))(v35, v38, v11);
  outlined destroy of TaskPriority?(v37, &_s8MusicKit7ArtworkV0aB8InternalE9CropStyleVSgMD_0);
LABEL_11:
  uint64_t v39 = v51;
  uint64_t v40 = v66;
  ArtworkImage.artworkCropStyle(_:)();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v35, v11);
  uint64_t v41 = v59;
  uint64_t v42 = *(void (**)(char *, uint64_t))(v58 + 8);
  v42(v40, v59);
  uint64_t v43 = v54;
  ArtworkImage.artworkIdealAspectRatio(_:contentMode:)();
  v42(v39, v41);
  outlined init with copy of ArtworkImage.Placeholder(v63, (uint64_t)v9, type metadata accessor for ArtworkImage.Placeholder);
  unint64_t v44 = (*(unsigned __int8 *)(v61 + 80) + 58) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80);
  uint64_t v45 = (_OWORD *)swift_allocObject();
  long long v46 = *(_OWORD *)(a3 + 16);
  v45[1] = *(_OWORD *)a3;
  void v45[2] = v46;
  *(_OWORD *)((char *)v45 + 42) = *(_OWORD *)(a3 + 26);
  outlined init with take of ArtworkImage.Placeholder((uint64_t)v9, (uint64_t)v45 + v44, type metadata accessor for ArtworkImage.Placeholder);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<ArtworkImage.Placeholder.View, _PreferenceWritingModifier<RadiosityEnabledPreferenceKey>>, _FrameLayout>, GeometryReader<ModifiedContent<ModifiedContent<ArtworkImage.Placeholder.View, _PreferenceWritingModifier<RadiosityEnabledPreferenceKey>>, _FrameLayout>>>);
  lazy protocol witness table accessor for type _ConditionalContent<ModifiedContent<ModifiedContent<ArtworkImage.Placeholder.View, _PreferenceWritingModifier<RadiosityEnabledPreferenceKey>>, _FrameLayout>, GeometryReader<ModifiedContent<ModifiedContent<ArtworkImage.Placeholder.View, _PreferenceWritingModifier<RadiosityEnabledPreferenceKey>>, _FrameLayout>>> and conformance <> _ConditionalContent<A, B>();
  uint64_t v47 = v60;
  ArtworkImage.artworkPlaceholder<A>(_:)();
  swift_release();
  v42(v43, v41);
  v42(v67, v41);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v64 + 32))(a5, v47, v65);
}

uint64_t ArtworkImage.ViewModel.artwork.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for Artwork();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t ArtworkImage.ViewModel.cropStyle.getter@<X0>(uint64_t a1@<X8>)
{
  return ArtworkImage.ViewModel.cropStyle.getter(type metadata accessor for ArtworkImage.ViewModel, (uint64_t)&_s8MusicKit7ArtworkV0aB8InternalE9CropStyleVSgMD_0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))outlined init with copy of (String, Any), a1);
}

uint64_t ArtworkImage.ViewModel.calculatedAspectRatio.getter()
{
  if (Artwork.maximumWidth.getter() < 1 || Artwork.maximumHeight.getter() < 1)
  {
    *(double *)&uint64_t result = 0.0;
  }
  else
  {
    double v0 = (double)Artwork.maximumWidth.getter();
    *(double *)&uint64_t result = v0 / (double)Artwork.maximumHeight.getter();
  }
  return result;
}

uint64_t ArtworkImage.Info.viewModel.getter@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of (String, Any)(v1, a1, (uint64_t *)&demangling cache variable for type metadata for ArtworkImage.ViewModel?);
}

uint64_t ArtworkImage.Info.placeholder.getter@<X0>(uint64_t a1@<X8>)
{
  return ArtworkImage.ViewModel.cropStyle.getter(type metadata accessor for ArtworkImage.Info, (uint64_t)type metadata accessor for ArtworkImage.Placeholder, (uint64_t (*)(uint64_t, uint64_t, uint64_t))outlined init with copy of ArtworkImage.Placeholder, a1);
}

uint64_t ArtworkImage.ViewModel.cropStyle.getter@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = a1(0);
  return a3(v4 + *(int *)(v8 + 20), a4, a2);
}

uint64_t ArtworkImage.Info.aspectRatio.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for ArtworkImage.Info(0) + 24));
}

uint64_t ArtworkImage.Info.size.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = type metadata accessor for ArtworkImage.Info(0);
  uint64_t v4 = (uint64_t *)(v1 + *(int *)(result + 28));
  uint64_t v5 = *v4;
  char v6 = *((unsigned char *)v4 + 8);
  uint64_t v7 = v4[2];
  char v8 = *((unsigned char *)v4 + 24);
  uint64_t v9 = v4[4];
  char v10 = *((unsigned char *)v4 + 40);
  LOBYTE(v4) = *((unsigned char *)v4 + 41);
  *(void *)a1 = v5;
  *(unsigned char *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v7;
  *(unsigned char *)(a1 + 24) = v8;
  *(void *)(a1 + 32) = v9;
  *(unsigned char *)(a1 + 40) = v10;
  *(unsigned char *)(a1 + 41) = (_BYTE)v4;
  return result;
}

uint64_t ArtworkImage.Info.corner.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for ArtworkImage.Info(0) + 32));
}

__n128 ArtworkImage.Info.init(viewModel:placeholder:aspectRatio:size:corner:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>)
{
  outlined init with take of PresentationSource?(a1, a9, (uint64_t *)&demangling cache variable for type metadata for ArtworkImage.ViewModel?);
  uint64_t v17 = (int *)type metadata accessor for ArtworkImage.Info(0);
  outlined init with take of ArtworkImage.Placeholder(a2, a9 + v17[5], type metadata accessor for ArtworkImage.Placeholder);
  uint64_t v18 = a9 + v17[6];
  *(void *)uint64_t v18 = a3;
  *(unsigned char *)(v18 + 8) = a4 & 1;
  uint64_t v19 = a9 + v17[7];
  long long v20 = *(_OWORD *)(a5 + 16);
  *(_OWORD *)uint64_t v19 = *(_OWORD *)a5;
  *(_OWORD *)(v19 + 16) = v20;
  __n128 result = *(__n128 *)(a5 + 26);
  *(__n128 *)(v19 + 26) = result;
  uint64_t v22 = a9 + v17[8];
  *(void *)uint64_t v22 = a6;
  *(void *)(v22 + 8) = a7;
  *(unsigned char *)(v22 + 16) = a8 & 1;
  return result;
}

uint64_t ArtworkImage.Size.width.getter()
{
  return *(void *)v0;
}

uint64_t ArtworkImage.Size.height.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t ArtworkImage.Size.height.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 16) = result;
  *(unsigned char *)(v2 + 24) = a2 & 1;
  return result;
}

uint64_t ArtworkImage.Size.fittingAspectRatio.getter()
{
  return *(void *)(v0 + 32);
}

uint64_t ArtworkImage.Size.fittingAspectRatio.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 32) = result;
  *(unsigned char *)(v2 + 40) = a2 & 1;
  return result;
}

uint64_t ArtworkImage.Size.init(cgSize:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  char v4 = a3 & 1;
  if (a3) {
    uint64_t v5 = 0;
  }
  else {
    uint64_t v5 = result;
  }
  *(void *)a4 = v5;
  *(unsigned char *)(a4 + 8) = v4;
  if (a3) {
    uint64_t v6 = 0;
  }
  else {
    uint64_t v6 = a2;
  }
  *(void *)(a4 + 16) = v6;
  *(unsigned char *)(a4 + 24) = v4;
  *(void *)(a4 + 32) = 0;
  *(_WORD *)(a4 + 40) = 513;
  return result;
}

void *CGFloat.squareAspectRatio.unsafeMutableAddressor()
{
  return &static CGFloat.squareAspectRatio;
}

uint64_t ArtworkImage.Size.init(width:aspectRatio:fittingAspectRatio:)@<X0>(uint64_t result@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, uint64_t a5@<X8>, double a6@<D0>)
{
  double v6 = 0.0;
  if ((a2 & 1) == 0)
  {
    double v6 = *(double *)&result / a6;
    if ((a4 & 1) == 0 && a3 > a6)
    {
      double v6 = *(double *)&result / a3;
      *(double *)&__n128 result = *(double *)&result / a3 * a6;
    }
  }
  *(double *)a5 = *(double *)&result;
  *(unsigned char *)(a5 + 8) = a2 & 1;
  *(double *)(a5 + 16) = v6;
  *(unsigned char *)(a5 + 24) = a2 & 1;
  *(double *)(a5 + 32) = a3;
  *(unsigned char *)(a5 + 40) = a4 & 1;
  *(unsigned char *)(a5 + 41) = 2;
  return result;
}

uint64_t ArtworkImage.Size.init(height:aspectRatio:fittingAspectRatio:)@<X0>(uint64_t result@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, uint64_t a5@<X8>, double a6@<D0>)
{
  double v6 = 0.0;
  if ((a2 & 1) == 0)
  {
    double v6 = *(double *)&result * a6;
    if ((a4 & 1) == 0 && a3 < a6)
    {
      double v6 = *(double *)&result * a3;
      *(double *)&__n128 result = *(double *)&result * a3 / a6;
    }
  }
  *(double *)a5 = v6;
  *(unsigned char *)(a5 + 8) = a2 & 1;
  *(double *)(a5 + 16) = *(double *)&result;
  *(unsigned char *)(a5 + 24) = a2 & 1;
  *(double *)(a5 + 32) = a3;
  *(unsigned char *)(a5 + 40) = a4 & 1;
  *(unsigned char *)(a5 + 41) = 2;
  return result;
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance ArtworkImage.Size(long long *a1, long long *a2)
{
  long long v2 = a1[1];
  long long v5 = *a1;
  v6[0] = v2;
  *(_OWORD *)((char *)v6 + 10) = *(long long *)((char *)a1 + 26);
  long long v3 = a2[1];
  long long v7 = *a2;
  v8[0] = v3;
  *(_OWORD *)((char *)v8 + 10) = *(long long *)((char *)a2 + 26);
  return specialized static ArtworkImage.Size.__derived_struct_equals(_:_:)((uint64_t)&v5, (uint64_t)&v7) & 1;
}

uint64_t ArtworkImage.init(artwork:width:height:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, char a5)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
  __chkstk_darwin();
  unint64_t v9 = (v8 + 15) & 0xFFFFFFFFFFFFFFF0;
  if (a3)
  {
    outlined init with copy of (String, Any)(a1, (uint64_t)&v11 - v9, (uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
    if (a5) {
      ArtworkImage.init(_:)();
    }
    else {
      ArtworkImage.init(_:height:)();
    }
  }
  else
  {
    outlined init with copy of (String, Any)(a1, (uint64_t)&v11 - v9, (uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
    if (a5) {
      ArtworkImage.init(_:width:)();
    }
    else {
      ArtworkImage.init(_:width:height:)();
    }
  }
  return outlined destroy of TaskPriority?(a1, (uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
}

uint64_t closure #1 in static ArtworkImage.with(_:placeholder:size:reusePolicy:)@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v39 = a2;
  uint64_t v42 = a3;
  uint64_t v38 = *(void *)(type metadata accessor for ArtworkImage.Placeholder(0) - 8);
  uint64_t v4 = *(void *)(v38 + 64);
  __chkstk_darwin();
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<ArtworkImage.Placeholder.View, _PreferenceWritingModifier<RadiosityEnabledPreferenceKey>>, _FrameLayout>, GeometryReader<ModifiedContent<ModifiedContent<ArtworkImage.Placeholder.View, _PreferenceWritingModifier<RadiosityEnabledPreferenceKey>>, _FrameLayout>>>.Storage);
  __chkstk_darwin();
  double v6 = (uint64_t (**)@<X0>(uint64_t@<X8>))((char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = type metadata accessor for ArtworkImage.Placeholder.View(0);
  __chkstk_darwin();
  unint64_t v9 = (double *)((char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin();
  uint64_t v11 = (char *)&v36 - v10;
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ArtworkImage.Placeholder.View, _PreferenceWritingModifier<RadiosityEnabledPreferenceKey>>);
  __chkstk_darwin();
  uint64_t v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ArtworkImage.Placeholder.View, _PreferenceWritingModifier<RadiosityEnabledPreferenceKey>>, _FrameLayout>);
  __chkstk_darwin();
  uint64_t v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v37 = (uint64_t)&v36 - v16;
  outlined init with take of PresentationSource?(a1, (uint64_t)v46, &demangling cache variable for type metadata for CGFloat?);
  outlined init with take of PresentationSource?((uint64_t)v46, (uint64_t)&v47, &demangling cache variable for type metadata for CGFloat?);
  if (v48 & 1) != 0 || (*(unsigned char *)(a1 + 24))
  {
    outlined init with copy of ArtworkImage.Placeholder(v39, (uint64_t)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for ArtworkImage.Placeholder);
    unint64_t v17 = (*(unsigned __int8 *)(v38 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
    uint64_t v18 = swift_allocObject();
    outlined init with take of ArtworkImage.Placeholder((uint64_t)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v18 + v17, type metadata accessor for ArtworkImage.Placeholder);
    uint64_t v19 = (_OWORD *)(v18 + ((v4 + v17 + 7) & 0xFFFFFFFFFFFFFFF8));
    long long v20 = *(_OWORD *)(a1 + 16);
    _OWORD *v19 = *(_OWORD *)a1;
    v19[1] = v20;
    *(_OWORD *)((char *)v19 + 26) = *(_OWORD *)(a1 + 26);
    *double v6 = partial apply for closure #1 in closure #1 in static ArtworkImage.with(_:placeholder:size:reusePolicy:);
    v6[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v18;
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for GeometryReader<ModifiedContent<ModifiedContent<ArtworkImage.Placeholder.View, _PreferenceWritingModifier<RadiosityEnabledPreferenceKey>>, _FrameLayout>>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ArtworkImage.Placeholder.View, _PreferenceWritingModifier<RadiosityEnabledPreferenceKey>>, _FrameLayout> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type GeometryReader<ModifiedContent<ModifiedContent<ArtworkImage.Placeholder.View, _PreferenceWritingModifier<RadiosityEnabledPreferenceKey>>, _FrameLayout>> and conformance GeometryReader<A>, (uint64_t *)&demangling cache variable for type metadata for GeometryReader<ModifiedContent<ModifiedContent<ArtworkImage.Placeholder.View, _PreferenceWritingModifier<RadiosityEnabledPreferenceKey>>, _FrameLayout>>);
    return _ConditionalContent<>.init(storage:)();
  }
  else
  {
    uint64_t v22 = *(void *)(a1 + 16);
    uint64_t v23 = v47;
    ArtworkImage.Placeholder.symbolConfiguration.getter();
    uint64_t v25 = v24;
    uint64_t v27 = v26;
    double v28 = ArtworkImage.Placeholder.symbolConfiguration.getter();
    swift_bridgeObjectRelease();
    ArtworkImage.Placeholder.symbolConfiguration.getter();
    uint64_t v30 = v29;
    swift_bridgeObjectRelease();
    uint64_t v31 = (uint64_t *)((char *)v9 + *(int *)(v7 + 32));
    uint64_t *v31 = swift_getKeyPath();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ArtworkImage.Placeholder.View.Style?>.Content);
    swift_storeEnumTagMultiPayload();
    uint64_t v32 = (uint64_t *)((char *)v9 + *(int *)(v7 + 36));
    *uint64_t v32 = swift_getKeyPath();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ColorSchemeContrast>.Content);
    swift_storeEnumTagMultiPayload();
    *(void *)unint64_t v9 = v25;
    *((void *)v9 + 1) = v27;
    void v9[2] = v28;
    *((void *)v9 + 3) = v23;
    *((void *)v9 + 4) = v22;
    *((void *)v9 + 5) = v30;
    outlined init with take of ArtworkImage.Placeholder((uint64_t)v9, (uint64_t)v11, type metadata accessor for ArtworkImage.Placeholder.View);
    outlined init with copy of ArtworkImage.Placeholder((uint64_t)v11, (uint64_t)v13, type metadata accessor for ArtworkImage.Placeholder.View);
    v13[*(int *)(v36 + 36)] = 0;
    outlined destroy of ArtworkImage.ViewModel((uint64_t)v11, type metadata accessor for ArtworkImage.Placeholder.View);
    static Alignment.center.getter();
    _FrameLayout.init(width:height:alignment:)();
    outlined init with copy of (String, Any)((uint64_t)v13, (uint64_t)v15, &demangling cache variable for type metadata for ModifiedContent<ArtworkImage.Placeholder.View, _PreferenceWritingModifier<RadiosityEnabledPreferenceKey>>);
    uint64_t v33 = &v15[*(int *)(v40 + 36)];
    long long v34 = v44;
    *(_OWORD *)uint64_t v33 = v43;
    *((_OWORD *)v33 + 1) = v34;
    *((_OWORD *)v33 + 2) = v45;
    outlined destroy of TaskPriority?((uint64_t)v13, &demangling cache variable for type metadata for ModifiedContent<ArtworkImage.Placeholder.View, _PreferenceWritingModifier<RadiosityEnabledPreferenceKey>>);
    uint64_t v35 = v37;
    outlined init with take of PresentationSource?((uint64_t)v15, v37, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ArtworkImage.Placeholder.View, _PreferenceWritingModifier<RadiosityEnabledPreferenceKey>>, _FrameLayout>);
    outlined init with copy of (String, Any)(v35, (uint64_t)v6, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ArtworkImage.Placeholder.View, _PreferenceWritingModifier<RadiosityEnabledPreferenceKey>>, _FrameLayout>);
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for GeometryReader<ModifiedContent<ModifiedContent<ArtworkImage.Placeholder.View, _PreferenceWritingModifier<RadiosityEnabledPreferenceKey>>, _FrameLayout>>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ArtworkImage.Placeholder.View, _PreferenceWritingModifier<RadiosityEnabledPreferenceKey>>, _FrameLayout> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type GeometryReader<ModifiedContent<ModifiedContent<ArtworkImage.Placeholder.View, _PreferenceWritingModifier<RadiosityEnabledPreferenceKey>>, _FrameLayout>> and conformance GeometryReader<A>, (uint64_t *)&demangling cache variable for type metadata for GeometryReader<ModifiedContent<ModifiedContent<ArtworkImage.Placeholder.View, _PreferenceWritingModifier<RadiosityEnabledPreferenceKey>>, _FrameLayout>>);
    _ConditionalContent<>.init(storage:)();
    return outlined destroy of TaskPriority?(v35, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ArtworkImage.Placeholder.View, _PreferenceWritingModifier<RadiosityEnabledPreferenceKey>>, _FrameLayout>);
  }
}

uint64_t ArtworkImage.Placeholder.view(availableSize:)@<X0>(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  uint64_t v6 = type metadata accessor for ArtworkImage.Placeholder.View(0) - 8;
  __chkstk_darwin();
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v10 = (char *)&v21 - v9;
  ArtworkImage.Placeholder.symbolConfiguration.getter();
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  double v15 = ArtworkImage.Placeholder.symbolConfiguration.getter();
  swift_bridgeObjectRelease();
  ArtworkImage.Placeholder.symbolConfiguration.getter();
  uint64_t v17 = v16;
  swift_bridgeObjectRelease();
  uint64_t v18 = (uint64_t *)&v8[*(int *)(v6 + 40)];
  *uint64_t v18 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ArtworkImage.Placeholder.View.Style?>.Content);
  swift_storeEnumTagMultiPayload();
  uint64_t v19 = (uint64_t *)&v8[*(int *)(v6 + 44)];
  uint64_t *v19 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ColorSchemeContrast>.Content);
  swift_storeEnumTagMultiPayload();
  *(void *)uint64_t v8 = v12;
  *((void *)v8 + 1) = v14;
  *((double *)v8 + 2) = v15;
  *((double *)v8 + 3) = a2;
  *((double *)v8 + 4) = a3;
  *((void *)v8 + 5) = v17;
  outlined init with take of ArtworkImage.Placeholder((uint64_t)v8, (uint64_t)v10, type metadata accessor for ArtworkImage.Placeholder.View);
  outlined init with copy of ArtworkImage.Placeholder((uint64_t)v10, a1, type metadata accessor for ArtworkImage.Placeholder.View);
  *(unsigned char *)(a1
           + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ArtworkImage.Placeholder.View, _PreferenceWritingModifier<RadiosityEnabledPreferenceKey>>)
                    + 36)) = 0;
  return outlined destroy of ArtworkImage.ViewModel((uint64_t)v10, type metadata accessor for ArtworkImage.Placeholder.View);
}

uint64_t closure #1 in closure #1 in static ArtworkImage.with(_:placeholder:size:reusePolicy:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v27 = a1;
  uint64_t v1 = type metadata accessor for ArtworkImage.Placeholder.View(0) - 8;
  __chkstk_darwin();
  long long v3 = (double *)((char *)&v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin();
  uint64_t v5 = (char *)&v26 - v4;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ArtworkImage.Placeholder.View, _PreferenceWritingModifier<RadiosityEnabledPreferenceKey>>)
     - 8;
  __chkstk_darwin();
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  GeometryProxy.size.getter();
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  ArtworkImage.Placeholder.symbolConfiguration.getter();
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  double v17 = ArtworkImage.Placeholder.symbolConfiguration.getter();
  swift_bridgeObjectRelease();
  ArtworkImage.Placeholder.symbolConfiguration.getter();
  uint64_t v19 = v18;
  swift_bridgeObjectRelease();
  long long v20 = (uint64_t *)((char *)v3 + *(int *)(v1 + 40));
  uint64_t *v20 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ArtworkImage.Placeholder.View.Style?>.Content);
  swift_storeEnumTagMultiPayload();
  uint64_t v21 = (uint64_t *)((char *)v3 + *(int *)(v1 + 44));
  *uint64_t v21 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ColorSchemeContrast>.Content);
  swift_storeEnumTagMultiPayload();
  *(void *)long long v3 = v14;
  *((void *)v3 + 1) = v16;
  v3[2] = v17;
  *((void *)v3 + 3) = v10;
  *((void *)v3 + 4) = v12;
  *((void *)v3 + 5) = v19;
  outlined init with take of ArtworkImage.Placeholder((uint64_t)v3, (uint64_t)v5, type metadata accessor for ArtworkImage.Placeholder.View);
  outlined init with copy of ArtworkImage.Placeholder((uint64_t)v5, (uint64_t)v8, type metadata accessor for ArtworkImage.Placeholder.View);
  v8[*(int *)(v6 + 44)] = 0;
  outlined destroy of ArtworkImage.ViewModel((uint64_t)v5, type metadata accessor for ArtworkImage.Placeholder.View);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v22 = v27;
  outlined init with copy of (String, Any)((uint64_t)v8, v27, &demangling cache variable for type metadata for ModifiedContent<ArtworkImage.Placeholder.View, _PreferenceWritingModifier<RadiosityEnabledPreferenceKey>>);
  uint64_t v23 = (_OWORD *)(v22
                 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ArtworkImage.Placeholder.View, _PreferenceWritingModifier<RadiosityEnabledPreferenceKey>>, _FrameLayout>)
                          + 36));
  long long v24 = v29;
  _OWORD *v23 = v28;
  v23[1] = v24;
  void v23[2] = v30;
  return outlined destroy of TaskPriority?((uint64_t)v8, &demangling cache variable for type metadata for ModifiedContent<ArtworkImage.Placeholder.View, _PreferenceWritingModifier<RadiosityEnabledPreferenceKey>>);
}

double ArtworkImage.Placeholder.symbolConfiguration.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Playlist.Variant();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v21 - v6;
  __swift_instantiateConcreteTypeFromMangledName(&_s8MusicKit8PlaylistV0aB8InternalE7VariantOSgMD_0);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v11 = (char *)&v21 - v10;
  type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin();
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of ArtworkImage.Placeholder(v1, (uint64_t)v13, type metadata accessor for ArtworkImage.Placeholder);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (type: Playlist.Variant?));
  switch((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v13, 10, v14))
  {
    case 1u:
    case 2u:
    case 3u:
    case 9u:
    case 0xAu:
      static Font.Weight.light.getter();
      goto LABEL_7;
    case 4u:
    case 5u:
    case 7u:
    case 8u:
      static Font.Weight.regular.getter();
LABEL_7:
      double v17 = v15;
      break;
    case 6u:
      static Font.Weight.regular.getter();
      double v17 = v16;
      break;
    default:
      outlined init with take of PresentationSource?((uint64_t)v13, (uint64_t)v11, &_s8MusicKit8PlaylistV0aB8InternalE7VariantOSgMD_0);
      outlined init with copy of (String, Any)((uint64_t)v11, (uint64_t)v9, &_s8MusicKit8PlaylistV0aB8InternalE7VariantOSgMD_0);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v9, 1, v2) == 1)
      {
        (*(void (**)(char *, void, uint64_t))(v3 + 104))(v7, enum case for Playlist.Variant.regular(_:), v2);
        outlined destroy of TaskPriority?((uint64_t)v9, &_s8MusicKit8PlaylistV0aB8InternalE7VariantOSgMD_0);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v7, v9, v2);
      }
      (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v7, v2);
      int v19 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
      if (v19 != enum case for Playlist.Variant.smart(_:)
        && v19 != enum case for Playlist.Variant.genius(_:)
        && v19 != enum case for Playlist.Variant.folder(_:))
      {
        (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      }
      (*(void (**)(char *, uint64_t))(v3 + 8))(v7, v2);
      static Font.Weight.light.getter();
      double v17 = v20;
      outlined destroy of TaskPriority?((uint64_t)v11, &_s8MusicKit8PlaylistV0aB8InternalE7VariantOSgMD_0);
      break;
  }
  return v17;
}

uint64_t ArtworkImage.Placeholder.View.init(name:weight:availableSize:scaleFactor:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>, double a6@<D2>, double a7@<D3>)
{
  uint64_t v14 = type metadata accessor for ArtworkImage.Placeholder.View(0);
  double v15 = (uint64_t *)(a3 + *(int *)(v14 + 32));
  *double v15 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ArtworkImage.Placeholder.View.Style?>.Content);
  swift_storeEnumTagMultiPayload();
  double v16 = (uint64_t *)(a3 + *(int *)(v14 + 36));
  uint64_t *v16 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ColorSchemeContrast>.Content);
  uint64_t result = swift_storeEnumTagMultiPayload();
  *(void *)a3 = a1;
  *(void *)(a3 + 8) = a2;
  *(double *)(a3 + 16) = a4;
  *(double *)(a3 + 24) = a5;
  *(double *)(a3 + 32) = a6;
  *(double *)(a3 + 40) = a7;
  return result;
}

uint64_t EnvironmentValues.placeholderStyle.getter()
{
  lazy protocol witness table accessor for type EnvironmentValues.PlaceholderStyleKey and conformance EnvironmentValues.PlaceholderStyleKey();

  return EnvironmentValues.subscript.getter();
}

uint64_t key path getter for EnvironmentValues.placeholderStyle : EnvironmentValues()
{
  return EnvironmentValues.subscript.getter();
}

uint64_t key path setter for EnvironmentValues.placeholderStyle : EnvironmentValues(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ArtworkImage.Placeholder.View.Style?);
  __chkstk_darwin();
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v7 - v4;
  outlined init with copy of (String, Any)(a1, (uint64_t)&v7 - v4, &demangling cache variable for type metadata for ArtworkImage.Placeholder.View.Style?);
  outlined init with copy of (String, Any)((uint64_t)v5, (uint64_t)v3, &demangling cache variable for type metadata for ArtworkImage.Placeholder.View.Style?);
  lazy protocol witness table accessor for type EnvironmentValues.PlaceholderStyleKey and conformance EnvironmentValues.PlaceholderStyleKey();
  EnvironmentValues.subscript.setter();
  return outlined destroy of TaskPriority?((uint64_t)v5, &demangling cache variable for type metadata for ArtworkImage.Placeholder.View.Style?);
}

uint64_t EnvironmentValues.placeholderStyle.setter(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ArtworkImage.Placeholder.View.Style?);
  __chkstk_darwin();
  outlined init with copy of (String, Any)(a1, (uint64_t)&v4 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), &demangling cache variable for type metadata for ArtworkImage.Placeholder.View.Style?);
  lazy protocol witness table accessor for type EnvironmentValues.PlaceholderStyleKey and conformance EnvironmentValues.PlaceholderStyleKey();
  EnvironmentValues.subscript.setter();
  return outlined destroy of TaskPriority?(a1, &demangling cache variable for type metadata for ArtworkImage.Placeholder.View.Style?);
}

uint64_t ArtworkImage.Placeholder.View.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v29 = a1;
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _OverlayModifier<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, AccessibilityAttachmentModifier>, _BlendModeEffect>>);
  __chkstk_darwin();
  uint64_t v2 = (char *)v26 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Color, _BackgroundStyleModifier<AnyShapeStyle>>, _OverlayModifier<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, AccessibilityAttachmentModifier>, _BlendModeEffect>>>);
  __chkstk_darwin();
  uint64_t v4 = (char *)v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ArtworkImage.Placeholder.View.Style?);
  __chkstk_darwin();
  uint64_t v6 = (char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v8 = (char *)v26 - v7;
  type metadata accessor for ArtworkImage.Placeholder.View(0);
  specialized Environment.wrappedValue.getter(&demangling cache variable for type metadata for Environment<ArtworkImage.Placeholder.View.Style?>.Content, &demangling cache variable for type metadata for ArtworkImage.Placeholder.View.Style?, 0x6C616E6F6974704FLL, 0xEF3E656C7974533CLL, (uint64_t)v8);
  uint64_t v9 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
  uint64_t v10 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
  if (v10(v8, 1, v9) == 1)
  {
    outlined destroy of TaskPriority?((uint64_t)v8, &demangling cache variable for type metadata for ArtworkImage.Placeholder.View.Style?);
    long long v30 = 0u;
    long long v31 = 0u;
    uint64_t v32 = 0;
  }
  else
  {
    outlined init with copy of (String, Any)((uint64_t)(v8 + 40), (uint64_t)&v30, (uint64_t *)&demangling cache variable for type metadata for ShapeStyle?);
    outlined destroy of ArtworkImage.ViewModel((uint64_t)v8, type metadata accessor for ArtworkImage.Placeholder.View.Style);
    if (*((void *)&v31 + 1))
    {
      outlined init with take of AlertPresenting(&v30, (uint64_t)v33);
      void v26[2] = v35;
      __swift_project_boxed_opaque_existential_0Tm(v33, v34);
      v26[1] = v26;
      __chkstk_darwin();
      (*(void (**)(char *))(v12 + 16))((char *)v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
      uint64_t v13 = AnyShapeStyle.init<A>(_:)();
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v33);
      goto LABEL_6;
    }
  }
  outlined destroy of TaskPriority?((uint64_t)&v30, (uint64_t *)&demangling cache variable for type metadata for ShapeStyle?);
  uint64_t v13 = 0;
LABEL_6:
  specialized Environment.wrappedValue.getter(&demangling cache variable for type metadata for Environment<ArtworkImage.Placeholder.View.Style?>.Content, &demangling cache variable for type metadata for ArtworkImage.Placeholder.View.Style?, 0x6C616E6F6974704FLL, 0xEF3E656C7974533CLL, (uint64_t)v6);
  if (v10(v6, 1, v9) == 1)
  {
    outlined destroy of TaskPriority?((uint64_t)v6, &demangling cache variable for type metadata for ArtworkImage.Placeholder.View.Style?);
    long long v30 = 0u;
    long long v31 = 0u;
    uint64_t v32 = 0;
  }
  else
  {
    outlined init with copy of (String, Any)((uint64_t)v6, (uint64_t)&v30, (uint64_t *)&demangling cache variable for type metadata for ShapeStyle?);
    outlined destroy of ArtworkImage.ViewModel((uint64_t)v6, type metadata accessor for ArtworkImage.Placeholder.View.Style);
    if (*((void *)&v31 + 1))
    {
      outlined init with take of AlertPresenting(&v30, (uint64_t)v33);
      __swift_project_boxed_opaque_existential_0Tm(v33, v34);
      __chkstk_darwin();
      (*(void (**)(char *))(v15 + 16))((char *)v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
      uint64_t v16 = AnyShapeStyle.init<A>(_:)();
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v33);
      goto LABEL_11;
    }
  }
  outlined destroy of TaskPriority?((uint64_t)&v30, (uint64_t *)&demangling cache variable for type metadata for ShapeStyle?);
  uint64_t v16 = 0;
LABEL_11:
  uint64_t v17 = static Color.clear.getter();
  if (v13)
  {
    uint64_t v18 = v13;
  }
  else
  {
    id v19 = [self secondarySystemFillColor];
    v33[0] = Color.init(_:)();
    uint64_t v18 = AnyShapeStyle.init<A>(_:)();
  }
  swift_retain();
  char v20 = static Edge.Set.all.getter();
  uint64_t v21 = static Alignment.center.getter();
  uint64_t v23 = v22;
  closure #1 in ArtworkImage.Placeholder.View.body.getter(v16, (uint64_t)v2);
  long long v24 = (uint64_t *)&v2[*(int *)(v28 + 36)];
  *long long v24 = v21;
  v24[1] = v23;
  outlined init with copy of (String, Any)((uint64_t)v2, (uint64_t)&v4[*(int *)(v27 + 36)], &demangling cache variable for type metadata for _OverlayModifier<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, AccessibilityAttachmentModifier>, _BlendModeEffect>>);
  *(void *)uint64_t v4 = v17;
  *((void *)v4 + 1) = v18;
  v4[16] = v20;
  swift_retain();
  swift_retain();
  outlined destroy of TaskPriority?((uint64_t)v2, &demangling cache variable for type metadata for _OverlayModifier<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, AccessibilityAttachmentModifier>, _BlendModeEffect>>);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return outlined init with take of PresentationSource?((uint64_t)v4, v29, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Color, _BackgroundStyleModifier<AnyShapeStyle>>, _OverlayModifier<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, AccessibilityAttachmentModifier>, _BlendModeEffect>>>);
}

uint64_t closure #1 in ArtworkImage.Placeholder.View.body.getter@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v45 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ArtworkImage.Placeholder.View.Style?);
  __chkstk_darwin();
  uint64_t v40 = (uint64_t)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for BlendMode?);
  __chkstk_darwin();
  uint64_t v41 = (uint64_t)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for BlendMode();
  uint64_t v43 = *(void *)(v5 - 8);
  uint64_t v44 = v5;
  __chkstk_darwin();
  uint64_t v42 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Font.Design?);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.fontWeight(_:)>>.0);
  uint64_t v35 = *(void *)(v9 - 8);
  uint64_t v36 = v9;
  __chkstk_darwin();
  uint64_t v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, AccessibilityAttachmentModifier>);
  __chkstk_darwin();
  uint64_t v39 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, AccessibilityAttachmentModifier>, _BlendModeEffect>);
  __chkstk_darwin();
  uint64_t v38 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  uint64_t v14 = Image.init(_internalSystemName:)();
  if (a1)
  {
    uint64_t v15 = a1;
  }
  else
  {
    id v16 = [self tertiaryLabelColor];
    uint64_t v46 = Color.init(_:)();
    uint64_t v15 = AnyShapeStyle.init<A>(_:)();
  }
  uint64_t v17 = type metadata accessor for Font.Design();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v8, 1, 1, v17);
  swift_retain();
  uint64_t v18 = static Font.system(size:weight:design:)();
  outlined destroy of TaskPriority?((uint64_t)v8, &demangling cache variable for type metadata for Font.Design?);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v46 = v14;
  unint64_t v47 = v15;
  uint64_t v48 = KeyPath;
  uint64_t v49 = v18;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<AnyShapeStyle>>, _EnvironmentKeyWritingModifier<Font?>>);
  unint64_t v21 = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<AnyShapeStyle>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>();
  View.fontWeight(_:)();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v46 = v20;
  unint64_t v47 = v21;
  swift_getOpaqueTypeConformance2();
  uint64_t v22 = (uint64_t)v39;
  uint64_t v23 = v36;
  View.accessibility(hidden:)();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v11, v23);
  type metadata accessor for ArtworkImage.Placeholder.View(0);
  uint64_t v24 = v40;
  specialized Environment.wrappedValue.getter(&demangling cache variable for type metadata for Environment<ArtworkImage.Placeholder.View.Style?>.Content, &demangling cache variable for type metadata for ArtworkImage.Placeholder.View.Style?, 0x6C616E6F6974704FLL, 0xEF3E656C7974533CLL, v40);
  uint64_t v25 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 48))(v24, 1, v25) == 1)
  {
    outlined destroy of TaskPriority?(v24, &demangling cache variable for type metadata for ArtworkImage.Placeholder.View.Style?);
    uint64_t v27 = v43;
    uint64_t v26 = v44;
    uint64_t v28 = v41;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v43 + 56))(v41, 1, 1, v44);
    uint64_t v29 = v42;
  }
  else
  {
    uint64_t v30 = v24 + *(int *)(v25 + 24);
    uint64_t v28 = v41;
    outlined init with copy of (String, Any)(v30, v41, &demangling cache variable for type metadata for BlendMode?);
    outlined destroy of ArtworkImage.ViewModel(v24, type metadata accessor for ArtworkImage.Placeholder.View.Style);
    uint64_t v27 = v43;
    uint64_t v26 = v44;
    int v31 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v43 + 48))(v28, 1, v44);
    uint64_t v29 = v42;
    if (v31 != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v27 + 32))(v42, v28, v26);
      goto LABEL_9;
    }
  }
  (*(void (**)(char *, void, uint64_t))(v27 + 104))(v29, enum case for BlendMode.normal(_:), v26);
  outlined destroy of TaskPriority?(v28, &demangling cache variable for type metadata for BlendMode?);
LABEL_9:
  uint64_t v32 = (uint64_t)v38;
  (*(void (**)(char *, char *, uint64_t))(v27 + 16))(&v38[*(int *)(v37 + 36)], v29, v26);
  outlined init with copy of (String, Any)(v22, v32, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, AccessibilityAttachmentModifier>);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v29, v26);
  outlined destroy of TaskPriority?(v22, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, AccessibilityAttachmentModifier>);
  return outlined init with take of PresentationSource?(v32, v45, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, AccessibilityAttachmentModifier>, _BlendModeEffect>);
}

uint64_t key path getter for EnvironmentValues.colorSchemeContrast : EnvironmentValues()
{
  return EnvironmentValues.colorSchemeContrast.getter();
}

uint64_t ArtworkImage.Placeholder.View.Style.foreground.getter@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of (String, Any)(v1, a1, (uint64_t *)&demangling cache variable for type metadata for ShapeStyle?);
}

uint64_t ArtworkImage.Placeholder.View.Style.foreground.setter(uint64_t a1)
{
  return outlined assign with take of Album?(a1, v1, (uint64_t *)&demangling cache variable for type metadata for ShapeStyle?);
}

uint64_t ArtworkImage.Placeholder.View.Style.background.getter@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of (String, Any)(v1 + 40, a1, (uint64_t *)&demangling cache variable for type metadata for ShapeStyle?);
}

uint64_t ArtworkImage.Placeholder.View.Style.background.setter(uint64_t a1)
{
  return outlined assign with take of Album?(a1, v1 + 40, (uint64_t *)&demangling cache variable for type metadata for ShapeStyle?);
}

uint64_t ArtworkImage.Placeholder.View.Style.blendMode.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
  return outlined init with copy of (String, Any)(v1 + *(int *)(v3 + 24), a1, &demangling cache variable for type metadata for BlendMode?);
}

uint64_t ArtworkImage.Placeholder.View.Style.blendMode.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
  return outlined assign with take of Album?(a1, v1 + *(int *)(v3 + 24), &demangling cache variable for type metadata for BlendMode?);
}

CFRange (__swiftcall *ArtworkImage.Placeholder.View.Style.blendMode.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

uint64_t ArtworkImage.Placeholder.View.Style.init(foreground:background:blendMode:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _OWORD *a4@<X8>)
{
  uint64_t v8 = (uint64_t)a4 + 40;
  uint64_t v9 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
  *a4 = 0u;
  a4[1] = 0u;
  a4[2] = 0u;
  a4[3] = 0u;
  a4[4] = 0u;
  uint64_t v10 = (uint64_t)a4 + *(int *)(v9 + 24);
  uint64_t v11 = type metadata accessor for BlendMode();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
  outlined assign with take of Album?(a1, (uint64_t)a4, (uint64_t *)&demangling cache variable for type metadata for ShapeStyle?);
  outlined assign with take of Album?(a2, v8, (uint64_t *)&demangling cache variable for type metadata for ShapeStyle?);
  return outlined assign with take of Album?(a3, v10, &demangling cache variable for type metadata for BlendMode?);
}

uint64_t one-time initialization function for nowPlaying()
{
  uint64_t v0 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
  __chkstk_darwin();
  uint64_t v2 = (_OWORD *)((char *)v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for BlendMode?);
  __chkstk_darwin();
  uint64_t v4 = (char *)v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_allocate_value_buffer(v0, static ArtworkImage.Placeholder.View.Style.nowPlaying);
  uint64_t v5 = __swift_project_value_buffer(v0, (uint64_t)static ArtworkImage.Placeholder.View.Style.nowPlaying);
  static Color.white.getter();
  uint64_t v6 = Color.opacity(_:)();
  swift_release();
  void v13[3] = &type metadata for Color;
  _OWORD v13[4] = &protocol witness table for Color;
  v13[0] = v6;
  static Color.black.getter();
  uint64_t v7 = Color.opacity(_:)();
  swift_release();
  void v12[3] = &type metadata for Color;
  _OWORD v12[4] = &protocol witness table for Color;
  v12[0] = v7;
  uint64_t v8 = type metadata accessor for BlendMode();
  uint64_t v9 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56);
  v9(v4, 1, 1, v8);
  v2[3] = 0u;
  v2[4] = 0u;
  v2[1] = 0u;
  v2[2] = 0u;
  *uint64_t v2 = 0u;
  uint64_t v10 = (uint64_t)v2 + *(int *)(v0 + 24);
  v9((char *)v10, 1, 1, v8);
  outlined assign with take of Album?((uint64_t)v13, (uint64_t)v2, (uint64_t *)&demangling cache variable for type metadata for ShapeStyle?);
  outlined assign with take of Album?((uint64_t)v12, (uint64_t)v2 + 40, (uint64_t *)&demangling cache variable for type metadata for ShapeStyle?);
  outlined assign with take of Album?((uint64_t)v4, v10, &demangling cache variable for type metadata for BlendMode?);
  return outlined init with take of ArtworkImage.Placeholder((uint64_t)v2, v5, type metadata accessor for ArtworkImage.Placeholder.View.Style);
}

uint64_t ArtworkImage.Placeholder.View.Style.nowPlaying.unsafeMutableAddressor()
{
  return Logger.artwork.unsafeMutableAddressor(&one-time initialization token for nowPlaying, type metadata accessor for ArtworkImage.Placeholder.View.Style, (uint64_t)static ArtworkImage.Placeholder.View.Style.nowPlaying);
}

uint64_t static ArtworkImage.Placeholder.View.Style.nowPlaying.getter@<X0>(uint64_t a1@<X8>)
{
  return static ArtworkImage.Placeholder.View.Style.nowPlaying.getter(&one-time initialization token for nowPlaying, (uint64_t)static ArtworkImage.Placeholder.View.Style.nowPlaying, a1);
}

uint64_t one-time initialization function for miniPlayer()
{
  uint64_t v0 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
  __chkstk_darwin();
  uint64_t v2 = (_OWORD *)((char *)v15 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for BlendMode?);
  __chkstk_darwin();
  uint64_t v4 = (char *)v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_allocate_value_buffer(v0, static ArtworkImage.Placeholder.View.Style.miniPlayer);
  uint64_t v5 = __swift_project_value_buffer(v0, (uint64_t)static ArtworkImage.Placeholder.View.Style.miniPlayer);
  uint64_t v6 = self;
  id v7 = [v6 quaternaryLabelColor];
  uint64_t v8 = Color.init(_:)();
  v16[3] = &type metadata for Color;
  v16[4] = &protocol witness table for Color;
  v16[0] = v8;
  id v9 = [v6 tertiarySystemFillColor];
  uint64_t v10 = Color.init(_:)();
  v15[3] = &type metadata for Color;
  void v15[4] = &protocol witness table for Color;
  v15[0] = v10;
  uint64_t v11 = type metadata accessor for BlendMode();
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
  v12(v4, 1, 1, v11);
  v2[3] = 0u;
  v2[4] = 0u;
  v2[1] = 0u;
  v2[2] = 0u;
  *uint64_t v2 = 0u;
  uint64_t v13 = (uint64_t)v2 + *(int *)(v0 + 24);
  v12((char *)v13, 1, 1, v11);
  outlined assign with take of Album?((uint64_t)v16, (uint64_t)v2, (uint64_t *)&demangling cache variable for type metadata for ShapeStyle?);
  outlined assign with take of Album?((uint64_t)v15, (uint64_t)v2 + 40, (uint64_t *)&demangling cache variable for type metadata for ShapeStyle?);
  outlined assign with take of Album?((uint64_t)v4, v13, &demangling cache variable for type metadata for BlendMode?);
  return outlined init with take of ArtworkImage.Placeholder((uint64_t)v2, v5, type metadata accessor for ArtworkImage.Placeholder.View.Style);
}

uint64_t ArtworkImage.Placeholder.View.Style.miniPlayer.unsafeMutableAddressor()
{
  return Logger.artwork.unsafeMutableAddressor(&one-time initialization token for miniPlayer, type metadata accessor for ArtworkImage.Placeholder.View.Style, (uint64_t)static ArtworkImage.Placeholder.View.Style.miniPlayer);
}

uint64_t static ArtworkImage.Placeholder.View.Style.miniPlayer.getter@<X0>(uint64_t a1@<X8>)
{
  return static ArtworkImage.Placeholder.View.Style.nowPlaying.getter(&one-time initialization token for miniPlayer, (uint64_t)static ArtworkImage.Placeholder.View.Style.miniPlayer, a1);
}

uint64_t one-time initialization function for widgets()
{
  uint64_t v0 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
  __chkstk_darwin();
  uint64_t v2 = (_OWORD *)((char *)v14 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for BlendMode?);
  __chkstk_darwin();
  uint64_t v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_allocate_value_buffer(v0, static ArtworkImage.Placeholder.View.Style.widgets);
  uint64_t v5 = __swift_project_value_buffer(v0, (uint64_t)static ArtworkImage.Placeholder.View.Style.widgets);
  static Color.white.getter();
  uint64_t v6 = Color.opacity(_:)();
  swift_release();
  v15[3] = &type metadata for Color;
  void v15[4] = &protocol witness table for Color;
  v15[0] = v6;
  static Color.white.getter();
  uint64_t v7 = Color.opacity(_:)();
  swift_release();
  v14[3] = &type metadata for Color;
  v14[4] = &protocol witness table for Color;
  v14[0] = v7;
  uint64_t v8 = enum case for BlendMode.plusLighter(_:);
  uint64_t v9 = type metadata accessor for BlendMode();
  uint64_t v10 = *(void *)(v9 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 104))(v4, v8, v9);
  uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
  v11(v4, 0, 1, v9);
  v2[3] = 0u;
  v2[4] = 0u;
  v2[1] = 0u;
  v2[2] = 0u;
  *uint64_t v2 = 0u;
  uint64_t v12 = (uint64_t)v2 + *(int *)(v0 + 24);
  v11((char *)v12, 1, 1, v9);
  outlined assign with take of Album?((uint64_t)v15, (uint64_t)v2, (uint64_t *)&demangling cache variable for type metadata for ShapeStyle?);
  outlined assign with take of Album?((uint64_t)v14, (uint64_t)v2 + 40, (uint64_t *)&demangling cache variable for type metadata for ShapeStyle?);
  outlined assign with take of Album?((uint64_t)v4, v12, &demangling cache variable for type metadata for BlendMode?);
  return outlined init with take of ArtworkImage.Placeholder((uint64_t)v2, v5, type metadata accessor for ArtworkImage.Placeholder.View.Style);
}

uint64_t ArtworkImage.Placeholder.View.Style.widgets.unsafeMutableAddressor()
{
  return Logger.artwork.unsafeMutableAddressor(&one-time initialization token for widgets, type metadata accessor for ArtworkImage.Placeholder.View.Style, (uint64_t)static ArtworkImage.Placeholder.View.Style.widgets);
}

uint64_t static ArtworkImage.Placeholder.View.Style.widgets.getter@<X0>(uint64_t a1@<X8>)
{
  return static ArtworkImage.Placeholder.View.Style.nowPlaying.getter(&one-time initialization token for widgets, (uint64_t)static ArtworkImage.Placeholder.View.Style.widgets, a1);
}

uint64_t one-time initialization function for accentuated()
{
  uint64_t v0 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
  __chkstk_darwin();
  uint64_t v2 = (_OWORD *)((char *)v11 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for BlendMode?);
  __chkstk_darwin();
  uint64_t v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_allocate_value_buffer(v0, static ArtworkImage.Placeholder.View.Style.accentuated);
  uint64_t v5 = __swift_project_value_buffer(v0, (uint64_t)static ArtworkImage.Placeholder.View.Style.accentuated);
  uint64_t v6 = static Color.accentColor.getter();
  void v13[3] = &type metadata for Color;
  _OWORD v13[4] = &protocol witness table for Color;
  v13[0] = v6;
  uint64_t v7 = type metadata accessor for BlendMode();
  memset(v11, 0, sizeof(v11));
  uint64_t v12 = 0;
  uint64_t v8 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
  v8(v4, 1, 1, v7);
  v2[3] = 0u;
  v2[4] = 0u;
  v2[1] = 0u;
  v2[2] = 0u;
  *uint64_t v2 = 0u;
  uint64_t v9 = (uint64_t)v2 + *(int *)(v0 + 24);
  v8((char *)v9, 1, 1, v7);
  outlined assign with take of Album?((uint64_t)v13, (uint64_t)v2, (uint64_t *)&demangling cache variable for type metadata for ShapeStyle?);
  outlined assign with take of Album?((uint64_t)v11, (uint64_t)v2 + 40, (uint64_t *)&demangling cache variable for type metadata for ShapeStyle?);
  outlined assign with take of Album?((uint64_t)v4, v9, &demangling cache variable for type metadata for BlendMode?);
  return outlined init with take of ArtworkImage.Placeholder((uint64_t)v2, v5, type metadata accessor for ArtworkImage.Placeholder.View.Style);
}

uint64_t ArtworkImage.Placeholder.View.Style.accentuated.unsafeMutableAddressor()
{
  return Logger.artwork.unsafeMutableAddressor(&one-time initialization token for accentuated, type metadata accessor for ArtworkImage.Placeholder.View.Style, (uint64_t)static ArtworkImage.Placeholder.View.Style.accentuated);
}

uint64_t static ArtworkImage.Placeholder.View.Style.accentuated.getter@<X0>(uint64_t a1@<X8>)
{
  return static ArtworkImage.Placeholder.View.Style.nowPlaying.getter(&one-time initialization token for accentuated, (uint64_t)static ArtworkImage.Placeholder.View.Style.accentuated, a1);
}

uint64_t static ArtworkImage.Placeholder.View.Style.nowPlaying.getter@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
  uint64_t v6 = __swift_project_value_buffer(v5, a2);
  return outlined init with copy of ArtworkImage.Placeholder(v6, a3, type metadata accessor for ArtworkImage.Placeholder.View.Style);
}

void ArtworkImage.Placeholder.hash(into:)()
{
  uint64_t v1 = type metadata accessor for Playlist.Variant();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin();
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&_s8MusicKit8PlaylistV0aB8InternalE7VariantOSgMD_0);
  __chkstk_darwin();
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v13 - v7;
  type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin();
  uint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of ArtworkImage.Placeholder(v0, (uint64_t)v10, type metadata accessor for ArtworkImage.Placeholder);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (type: Playlist.Variant?));
  switch((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v10, 10, v11))
  {
    case 1u:
      Swift::UInt v12 = 0;
      goto LABEL_14;
    case 2u:
      Swift::UInt v12 = 1;
      goto LABEL_14;
    case 3u:
      Swift::UInt v12 = 2;
      goto LABEL_14;
    case 4u:
      Swift::UInt v12 = 4;
      goto LABEL_14;
    case 5u:
      Swift::UInt v12 = 5;
      goto LABEL_14;
    case 6u:
      Swift::UInt v12 = 6;
      goto LABEL_14;
    case 7u:
      Swift::UInt v12 = 7;
      goto LABEL_14;
    case 8u:
      Swift::UInt v12 = 8;
      goto LABEL_14;
    case 9u:
      Swift::UInt v12 = 9;
      goto LABEL_14;
    case 0xAu:
      Swift::UInt v12 = 10;
LABEL_14:
      Hasher._combine(_:)(v12);
      break;
    default:
      outlined init with take of PresentationSource?((uint64_t)v10, (uint64_t)v8, &_s8MusicKit8PlaylistV0aB8InternalE7VariantOSgMD_0);
      Hasher._combine(_:)(3uLL);
      outlined init with copy of (String, Any)((uint64_t)v8, (uint64_t)v6, &_s8MusicKit8PlaylistV0aB8InternalE7VariantOSgMD_0);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v6, 1, v1) == 1)
      {
        Hasher._combine(_:)(0);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v6, v1);
        Hasher._combine(_:)(1u);
        lazy protocol witness table accessor for type ArtworkImage.Placeholder.View and conformance ArtworkImage.Placeholder.View(&_s8MusicKit8PlaylistV0aB8InternalE7VariantOAFSHADWL_0, (void (*)(uint64_t))&type metadata accessor for Playlist.Variant);
        dispatch thunk of Hashable.hash(into:)();
        (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
      }
      outlined destroy of TaskPriority?((uint64_t)v8, &_s8MusicKit8PlaylistV0aB8InternalE7VariantOSgMD_0);
      break;
  }
}

uint64_t ArtworkImage.Placeholder.CodingKeys.stringValue.getter(char a1)
{
  uint64_t result = 0x636973756DLL;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6979616C50776F6ELL;
      break;
    case 2:
      uint64_t result = 0x6C79616C5077656ELL;
      break;
    case 3:
      uint64_t result = 0x7473696C79616C70;
      break;
    case 4:
      uint64_t result = 0x646956636973756DLL;
      break;
    case 5:
      uint64_t result = 30324;
      break;
    case 6:
      uint64_t result = 0x6F68706F7263696DLL;
      break;
    case 7:
      uint64_t result = 0x6E6F73726570;
      break;
    case 8:
      uint64_t result = 0x6F69646172;
      break;
    case 9:
      uint64_t result = 0x65726E6567;
      break;
    case 10:
      uint64_t result = 0x7265736F706D6F63;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance ArtworkImage.Placeholder.CodingKeys()
{
  return ArtworkImage.Placeholder.CodingKeys.stringValue.getter(*v0);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance ArtworkImage.Placeholder.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = specialized ArtworkImage.Placeholder.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

void protocol witness for CodingKey.init(intValue:) in conformance ArtworkImage.Placeholder.CodingKeys(unsigned char *a1@<X8>)
{
  *a1 = 11;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance ArtworkImage.Placeholder.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type ArtworkImage.Placeholder.CodingKeys and conformance ArtworkImage.Placeholder.CodingKeys();

  return CodingKey.description.getter(a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ArtworkImage.Placeholder.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type ArtworkImage.Placeholder.CodingKeys and conformance ArtworkImage.Placeholder.CodingKeys();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance ArtworkImage.Placeholder.ComposerCodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type ArtworkImage.Placeholder.ComposerCodingKeys and conformance ArtworkImage.Placeholder.ComposerCodingKeys();

  return CodingKey.description.getter(a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ArtworkImage.Placeholder.ComposerCodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type ArtworkImage.Placeholder.ComposerCodingKeys and conformance ArtworkImage.Placeholder.ComposerCodingKeys();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance ArtworkImage.Placeholder.GenreCodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type ArtworkImage.Placeholder.GenreCodingKeys and conformance ArtworkImage.Placeholder.GenreCodingKeys();

  return CodingKey.description.getter(a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ArtworkImage.Placeholder.GenreCodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type ArtworkImage.Placeholder.GenreCodingKeys and conformance ArtworkImage.Placeholder.GenreCodingKeys();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance ArtworkImage.Placeholder.MicrophoneCodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type ArtworkImage.Placeholder.MicrophoneCodingKeys and conformance ArtworkImage.Placeholder.MicrophoneCodingKeys();

  return CodingKey.description.getter(a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ArtworkImage.Placeholder.MicrophoneCodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type ArtworkImage.Placeholder.MicrophoneCodingKeys and conformance ArtworkImage.Placeholder.MicrophoneCodingKeys();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance ArtworkImage.Placeholder.MusicCodingKeys@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance ArtworkImage.Placeholder.MusicCodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type ArtworkImage.Placeholder.MusicCodingKeys and conformance ArtworkImage.Placeholder.MusicCodingKeys();

  return CodingKey.description.getter(a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ArtworkImage.Placeholder.MusicCodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type ArtworkImage.Placeholder.MusicCodingKeys and conformance ArtworkImage.Placeholder.MusicCodingKeys();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance ArtworkImage.Placeholder.MusicVideoCodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type ArtworkImage.Placeholder.MusicVideoCodingKeys and conformance ArtworkImage.Placeholder.MusicVideoCodingKeys();

  return CodingKey.description.getter(a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ArtworkImage.Placeholder.MusicVideoCodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type ArtworkImage.Placeholder.MusicVideoCodingKeys and conformance ArtworkImage.Placeholder.MusicVideoCodingKeys();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance ArtworkImage.Placeholder.NewPlaylistCodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type ArtworkImage.Placeholder.NewPlaylistCodingKeys and conformance ArtworkImage.Placeholder.NewPlaylistCodingKeys();

  return CodingKey.description.getter(a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ArtworkImage.Placeholder.NewPlaylistCodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type ArtworkImage.Placeholder.NewPlaylistCodingKeys and conformance ArtworkImage.Placeholder.NewPlaylistCodingKeys();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance ArtworkImage.Placeholder.NowPlayingCodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type ArtworkImage.Placeholder.NowPlayingCodingKeys and conformance ArtworkImage.Placeholder.NowPlayingCodingKeys();

  return CodingKey.description.getter(a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ArtworkImage.Placeholder.NowPlayingCodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type ArtworkImage.Placeholder.NowPlayingCodingKeys and conformance ArtworkImage.Placeholder.NowPlayingCodingKeys();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance ArtworkImage.Placeholder.PersonCodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type ArtworkImage.Placeholder.PersonCodingKeys and conformance ArtworkImage.Placeholder.PersonCodingKeys();

  return CodingKey.description.getter(a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ArtworkImage.Placeholder.PersonCodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type ArtworkImage.Placeholder.PersonCodingKeys and conformance ArtworkImage.Placeholder.PersonCodingKeys();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance ArtworkImage.Placeholder.PlaylistCodingKeys()
{
  return 1701869940;
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance ArtworkImage.Placeholder.PlaylistCodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 1701869940 && a2 == 0xE400000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance ArtworkImage.Placeholder.PlaylistCodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type ArtworkImage.Placeholder.PlaylistCodingKeys and conformance ArtworkImage.Placeholder.PlaylistCodingKeys();

  return CodingKey.description.getter(a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ArtworkImage.Placeholder.PlaylistCodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type ArtworkImage.Placeholder.PlaylistCodingKeys and conformance ArtworkImage.Placeholder.PlaylistCodingKeys();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance ArtworkImage.Placeholder.RadioCodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type ArtworkImage.Placeholder.RadioCodingKeys and conformance ArtworkImage.Placeholder.RadioCodingKeys();

  return CodingKey.description.getter(a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ArtworkImage.Placeholder.RadioCodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type ArtworkImage.Placeholder.RadioCodingKeys and conformance ArtworkImage.Placeholder.RadioCodingKeys();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance ArtworkImage.Placeholder.TvCodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type ArtworkImage.Placeholder.TvCodingKeys and conformance ArtworkImage.Placeholder.TvCodingKeys();

  return CodingKey.description.getter(a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ArtworkImage.Placeholder.TvCodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type ArtworkImage.Placeholder.TvCodingKeys and conformance ArtworkImage.Placeholder.TvCodingKeys();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t ArtworkImage.Placeholder.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<ArtworkImage.Placeholder.ComposerCodingKeys>);
  uint64_t v72 = *(void *)(v2 - 8);
  uint64_t v73 = v2;
  __chkstk_darwin();
  uint64_t v71 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<ArtworkImage.Placeholder.GenreCodingKeys>);
  uint64_t v69 = *(void *)(v4 - 8);
  uint64_t v70 = v4;
  __chkstk_darwin();
  uint64_t v68 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<ArtworkImage.Placeholder.RadioCodingKeys>);
  uint64_t v45 = *(void *)(v46 - 8);
  __chkstk_darwin();
  uint64_t v44 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<ArtworkImage.Placeholder.PersonCodingKeys>);
  uint64_t v66 = *(void *)(v7 - 8);
  uint64_t v67 = v7;
  __chkstk_darwin();
  uint64_t v65 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<ArtworkImage.Placeholder.MicrophoneCodingKeys>);
  uint64_t v63 = *(void *)(v9 - 8);
  uint64_t v64 = v9;
  __chkstk_darwin();
  uint64_t v62 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<ArtworkImage.Placeholder.TvCodingKeys>);
  uint64_t v60 = *(void *)(v11 - 8);
  uint64_t v61 = v11;
  __chkstk_darwin();
  uint64_t v58 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<ArtworkImage.Placeholder.MusicVideoCodingKeys>);
  uint64_t v55 = *(void *)(v56 - 8);
  __chkstk_darwin();
  uint64_t v53 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<ArtworkImage.Placeholder.PlaylistCodingKeys>);
  uint64_t v57 = *(void *)(v59 - 8);
  __chkstk_darwin();
  uint64_t v54 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&_s8MusicKit8PlaylistV0aB8InternalE7VariantOSgMD_0);
  __chkstk_darwin();
  uint64_t v52 = (uint64_t)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<ArtworkImage.Placeholder.NewPlaylistCodingKeys>);
  uint64_t v50 = *(void *)(v51 - 8);
  __chkstk_darwin();
  uint64_t v17 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<ArtworkImage.Placeholder.NowPlayingCodingKeys>);
  uint64_t v48 = *(void *)(v49 - 8);
  __chkstk_darwin();
  id v19 = (char *)&v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<ArtworkImage.Placeholder.MusicCodingKeys>);
  uint64_t v47 = *(void *)(v20 - 8);
  __chkstk_darwin();
  uint64_t v22 = (char *)&v44 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin();
  uint64_t v24 = (char *)&v44 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<ArtworkImage.Placeholder.CodingKeys>);
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v74 = v25;
  uint64_t v75 = v26;
  __chkstk_darwin();
  uint64_t v28 = (char *)&v44 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_0Tm(a1, a1[3]);
  lazy protocol witness table accessor for type ArtworkImage.Placeholder.CodingKeys and conformance ArtworkImage.Placeholder.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  outlined init with copy of ArtworkImage.Placeholder(v76, (uint64_t)v24, type metadata accessor for ArtworkImage.Placeholder);
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (type: Playlist.Variant?));
  switch((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v29 - 8) + 48))(v24, 10, v29))
  {
    case 1u:
      v77[5] = 0;
      lazy protocol witness table accessor for type ArtworkImage.Placeholder.MusicCodingKeys and conformance ArtworkImage.Placeholder.MusicCodingKeys();
      uint64_t v35 = v74;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      (*(void (**)(char *, uint64_t))(v47 + 8))(v22, v20);
      goto LABEL_15;
    case 2u:
      v77[6] = 1;
      lazy protocol witness table accessor for type ArtworkImage.Placeholder.NowPlayingCodingKeys and conformance ArtworkImage.Placeholder.NowPlayingCodingKeys();
      uint64_t v35 = v74;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      uint64_t v36 = *(void (**)(char *, void))(v48 + 8);
      uint64_t v37 = v19;
      uint64_t v38 = (uint64_t *)v78;
      goto LABEL_14;
    case 3u:
      v77[7] = 2;
      lazy protocol witness table accessor for type ArtworkImage.Placeholder.NewPlaylistCodingKeys and conformance ArtworkImage.Placeholder.NewPlaylistCodingKeys();
      uint64_t v35 = v74;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      uint64_t v36 = *(void (**)(char *, void))(v50 + 8);
      uint64_t v37 = v17;
      uint64_t v38 = &v79;
      goto LABEL_14;
    case 4u:
      v78[1] = 4;
      lazy protocol witness table accessor for type ArtworkImage.Placeholder.MusicVideoCodingKeys and conformance ArtworkImage.Placeholder.MusicVideoCodingKeys();
      uint64_t v39 = v53;
      uint64_t v35 = v74;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      uint64_t v36 = *(void (**)(char *, void))(v55 + 8);
      uint64_t v37 = v39;
      uint64_t v38 = &v80;
      goto LABEL_14;
    case 5u:
      v78[2] = 5;
      lazy protocol witness table accessor for type ArtworkImage.Placeholder.TvCodingKeys and conformance ArtworkImage.Placeholder.TvCodingKeys();
      uint64_t v40 = v58;
      uint64_t v35 = v74;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      uint64_t v42 = v60;
      uint64_t v41 = v61;
      goto LABEL_12;
    case 6u:
      v78[3] = 6;
      lazy protocol witness table accessor for type ArtworkImage.Placeholder.MicrophoneCodingKeys and conformance ArtworkImage.Placeholder.MicrophoneCodingKeys();
      uint64_t v40 = v62;
      uint64_t v35 = v74;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      uint64_t v42 = v63;
      uint64_t v41 = v64;
      goto LABEL_12;
    case 7u:
      v78[4] = 7;
      lazy protocol witness table accessor for type ArtworkImage.Placeholder.PersonCodingKeys and conformance ArtworkImage.Placeholder.PersonCodingKeys();
      uint64_t v40 = v65;
      uint64_t v35 = v74;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      uint64_t v42 = v66;
      uint64_t v41 = v67;
      goto LABEL_12;
    case 8u:
      v78[5] = 8;
      lazy protocol witness table accessor for type ArtworkImage.Placeholder.RadioCodingKeys and conformance ArtworkImage.Placeholder.RadioCodingKeys();
      uint64_t v43 = v44;
      uint64_t v35 = v74;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      uint64_t v36 = *(void (**)(char *, void))(v45 + 8);
      uint64_t v37 = v43;
      uint64_t v38 = (uint64_t *)v77;
LABEL_14:
      v36(v37, *(v38 - 32));
      goto LABEL_15;
    case 9u:
      v78[6] = 9;
      lazy protocol witness table accessor for type ArtworkImage.Placeholder.GenreCodingKeys and conformance ArtworkImage.Placeholder.GenreCodingKeys();
      uint64_t v40 = v68;
      uint64_t v35 = v74;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      uint64_t v42 = v69;
      uint64_t v41 = v70;
      goto LABEL_12;
    case 0xAu:
      v78[7] = 10;
      lazy protocol witness table accessor for type ArtworkImage.Placeholder.ComposerCodingKeys and conformance ArtworkImage.Placeholder.ComposerCodingKeys();
      uint64_t v40 = v71;
      uint64_t v35 = v74;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      uint64_t v42 = v72;
      uint64_t v41 = v73;
LABEL_12:
      (*(void (**)(char *, uint64_t))(v42 + 8))(v40, v41);
LABEL_15:
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v75 + 8))(v28, v35);
      break;
    default:
      uint64_t v30 = v52;
      outlined init with take of PresentationSource?((uint64_t)v24, v52, &_s8MusicKit8PlaylistV0aB8InternalE7VariantOSgMD_0);
      v78[0] = 3;
      lazy protocol witness table accessor for type ArtworkImage.Placeholder.PlaylistCodingKeys and conformance ArtworkImage.Placeholder.PlaylistCodingKeys();
      int v31 = v54;
      uint64_t v32 = v74;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      type metadata accessor for Playlist.Variant();
      lazy protocol witness table accessor for type ArtworkImage.Placeholder.View and conformance ArtworkImage.Placeholder.View(&lazy protocol witness table cache variable for type Playlist.Variant and conformance Playlist.Variant, (void (*)(uint64_t))&type metadata accessor for Playlist.Variant);
      uint64_t v33 = v59;
      KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
      (*(void (**)(char *, uint64_t))(v57 + 8))(v31, v33);
      outlined destroy of TaskPriority?(v30, &_s8MusicKit8PlaylistV0aB8InternalE7VariantOSgMD_0);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v75 + 8))(v28, v32);
      break;
  }
  return result;
}

Swift::Int ArtworkImage.Placeholder.hashValue.getter()
{
  return Hasher._finalize()();
}

uint64_t ArtworkImage.Placeholder.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v104 = a2;
  uint64_t v109 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<ArtworkImage.Placeholder.ComposerCodingKeys>);
  uint64_t v95 = *(void *)(v109 - 8);
  __chkstk_darwin();
  uint64_t v108 = (char *)&v74 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<ArtworkImage.Placeholder.GenreCodingKeys>);
  uint64_t v93 = *(void *)(v4 - 8);
  uint64_t v94 = v4;
  __chkstk_darwin();
  long long v103 = (char *)&v74 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<ArtworkImage.Placeholder.RadioCodingKeys>);
  uint64_t v91 = *(void *)(v92 - 8);
  __chkstk_darwin();
  unsigned __int8 v102 = (char *)&v74 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<ArtworkImage.Placeholder.PersonCodingKeys>);
  uint64_t v89 = *(void *)(v90 - 8);
  __chkstk_darwin();
  uint64_t v101 = (char *)&v74 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<ArtworkImage.Placeholder.MicrophoneCodingKeys>);
  uint64_t v87 = *(void *)(v88 - 8);
  __chkstk_darwin();
  uint64_t v100 = (char *)&v74 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<ArtworkImage.Placeholder.TvCodingKeys>);
  uint64_t v85 = *(void *)(v86 - 8);
  __chkstk_darwin();
  uint64_t v99 = (char *)&v74 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<ArtworkImage.Placeholder.MusicVideoCodingKeys>);
  uint64_t v82 = *(void *)(v83 - 8);
  __chkstk_darwin();
  long long v98 = (char *)&v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<ArtworkImage.Placeholder.PlaylistCodingKeys>);
  uint64_t v96 = *(void *)(v84 - 8);
  __chkstk_darwin();
  uint64_t v107 = (char *)&v74 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<ArtworkImage.Placeholder.NewPlaylistCodingKeys>);
  uint64_t v80 = *(void *)(v81 - 8);
  __chkstk_darwin();
  long long v97 = (char *)&v74 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<ArtworkImage.Placeholder.NowPlayingCodingKeys>);
  uint64_t v79 = *(void *)(v78 - 8);
  __chkstk_darwin();
  long long v106 = (char *)&v74 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<ArtworkImage.Placeholder.MusicCodingKeys>);
  uint64_t v77 = *(void *)(v76 - 8);
  __chkstk_darwin();
  uint64_t v15 = (char *)&v74 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<ArtworkImage.Placeholder.CodingKeys>);
  uint64_t v105 = *(void *)(v16 - 8);
  __chkstk_darwin();
  uint64_t v18 = (char *)&v74 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin();
  uint64_t v21 = (char *)&v74 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v23 = (char *)&v74 - v22;
  uint64_t v24 = a1[3];
  uint64_t v110 = a1;
  __swift_project_boxed_opaque_existential_0Tm(a1, v24);
  lazy protocol witness table accessor for type ArtworkImage.Placeholder.CodingKeys and conformance ArtworkImage.Placeholder.CodingKeys();
  uint64_t v25 = v111;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v25)
  {
    uint64_t v26 = (uint64_t)v110;
  }
  else
  {
    uint64_t v75 = v15;
    uint64_t v27 = v106;
    uint64_t v74 = v21;
    uint64_t v111 = 0;
    uint64_t v28 = v107;
    uint64_t v29 = v108;
    uint64_t v30 = v109;
    uint64_t v31 = KeyedDecodingContainer.allKeys.getter();
    if (*(void *)(v31 + 16) == 1)
    {
      switch(*(unsigned char *)(v31 + 32))
      {
        case 1:
          char v113 = 1;
          lazy protocol witness table accessor for type ArtworkImage.Placeholder.NowPlayingCodingKeys and conformance ArtworkImage.Placeholder.NowPlayingCodingKeys();
          uint64_t v41 = v111;
          KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
          uint64_t v34 = v16;
          uint64_t v26 = (uint64_t)v110;
          if (v41) {
            goto LABEL_26;
          }
          (*(void (**)(char *, uint64_t))(v79 + 8))(v27, v78);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v105 + 8))(v18, v34);
          uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (type: Playlist.Variant?));
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v65 - 8) + 56))(v23, 2, 10, v65);
          goto LABEL_33;
        case 2:
          char v114 = 2;
          lazy protocol witness table accessor for type ArtworkImage.Placeholder.NewPlaylistCodingKeys and conformance ArtworkImage.Placeholder.NewPlaylistCodingKeys();
          uint64_t v42 = v97;
          uint64_t v43 = v111;
          KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
          uint64_t v34 = v16;
          uint64_t v26 = (uint64_t)v110;
          if (v43) {
            goto LABEL_26;
          }
          (*(void (**)(char *, uint64_t))(v80 + 8))(v42, v81);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v105 + 8))(v18, v34);
          uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (type: Playlist.Variant?));
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v23, 3, 10, v44);
          goto LABEL_33;
        case 3:
          char v115 = 3;
          lazy protocol witness table accessor for type ArtworkImage.Placeholder.PlaylistCodingKeys and conformance ArtworkImage.Placeholder.PlaylistCodingKeys();
          uint64_t v45 = v28;
          uint64_t v46 = v111;
          KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
          if (v46)
          {
            swift_bridgeObjectRelease();
            (*(void (**)(char *, uint64_t))(v105 + 8))(v18, v16);
            goto LABEL_8;
          }
          type metadata accessor for Playlist.Variant();
          lazy protocol witness table accessor for type ArtworkImage.Placeholder.View and conformance ArtworkImage.Placeholder.View(&lazy protocol witness table cache variable for type Playlist.Variant and conformance Playlist.Variant, (void (*)(uint64_t))&type metadata accessor for Playlist.Variant);
          uint64_t v66 = (uint64_t)v74;
          uint64_t v67 = v84;
          KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
          uint64_t v68 = v45;
          uint64_t v69 = v105;
          (*(void (**)(char *, uint64_t))(v96 + 8))(v68, v67);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v69 + 8))(v18, v16);
          uint64_t v73 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (type: Playlist.Variant?));
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v73 - 8) + 56))(v66, 0, 10, v73);
          outlined init with take of ArtworkImage.Placeholder(v66, (uint64_t)v23, type metadata accessor for ArtworkImage.Placeholder);
          uint64_t v26 = (uint64_t)v110;
          goto LABEL_33;
        case 4:
          char v116 = 4;
          lazy protocol witness table accessor for type ArtworkImage.Placeholder.MusicVideoCodingKeys and conformance ArtworkImage.Placeholder.MusicVideoCodingKeys();
          uint64_t v47 = v98;
          uint64_t v48 = v111;
          KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
          uint64_t v34 = v16;
          uint64_t v26 = (uint64_t)v110;
          if (v48) {
            goto LABEL_26;
          }
          (*(void (**)(char *, uint64_t))(v82 + 8))(v47, v83);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v105 + 8))(v18, v34);
          uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (type: Playlist.Variant?));
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(v23, 4, 10, v49);
          goto LABEL_33;
        case 5:
          char v117 = 5;
          lazy protocol witness table accessor for type ArtworkImage.Placeholder.TvCodingKeys and conformance ArtworkImage.Placeholder.TvCodingKeys();
          uint64_t v50 = v99;
          uint64_t v51 = v111;
          KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
          uint64_t v34 = v16;
          uint64_t v26 = (uint64_t)v110;
          if (v51) {
            goto LABEL_26;
          }
          (*(void (**)(char *, uint64_t))(v85 + 8))(v50, v86);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v105 + 8))(v18, v34);
          uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (type: Playlist.Variant?));
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56))(v23, 5, 10, v52);
          goto LABEL_33;
        case 6:
          char v118 = 6;
          lazy protocol witness table accessor for type ArtworkImage.Placeholder.MicrophoneCodingKeys and conformance ArtworkImage.Placeholder.MicrophoneCodingKeys();
          uint64_t v53 = v100;
          uint64_t v54 = v111;
          KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
          uint64_t v34 = v16;
          uint64_t v26 = (uint64_t)v110;
          if (v54) {
            goto LABEL_26;
          }
          (*(void (**)(char *, uint64_t))(v87 + 8))(v53, v88);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v105 + 8))(v18, v34);
          uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (type: Playlist.Variant?));
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v55 - 8) + 56))(v23, 6, 10, v55);
          goto LABEL_33;
        case 7:
          char v119 = 7;
          lazy protocol witness table accessor for type ArtworkImage.Placeholder.PersonCodingKeys and conformance ArtworkImage.Placeholder.PersonCodingKeys();
          uint64_t v56 = v101;
          uint64_t v57 = v111;
          KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
          uint64_t v34 = v16;
          uint64_t v26 = (uint64_t)v110;
          if (v57) {
            goto LABEL_26;
          }
          (*(void (**)(char *, uint64_t))(v89 + 8))(v56, v90);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v105 + 8))(v18, v34);
          uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (type: Playlist.Variant?));
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 56))(v23, 7, 10, v58);
          goto LABEL_33;
        case 8:
          char v120 = 8;
          lazy protocol witness table accessor for type ArtworkImage.Placeholder.RadioCodingKeys and conformance ArtworkImage.Placeholder.RadioCodingKeys();
          uint64_t v59 = v102;
          uint64_t v60 = v111;
          KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
          uint64_t v34 = v16;
          uint64_t v26 = (uint64_t)v110;
          if (v60) {
            goto LABEL_26;
          }
          (*(void (**)(char *, uint64_t))(v91 + 8))(v59, v92);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v105 + 8))(v18, v34);
          uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (type: Playlist.Variant?));
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v61 - 8) + 56))(v23, 8, 10, v61);
          goto LABEL_33;
        case 9:
          char v121 = 9;
          lazy protocol witness table accessor for type ArtworkImage.Placeholder.GenreCodingKeys and conformance ArtworkImage.Placeholder.GenreCodingKeys();
          uint64_t v62 = v103;
          uint64_t v63 = v111;
          KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
          uint64_t v34 = v16;
          uint64_t v26 = (uint64_t)v110;
          if (v63) {
            goto LABEL_26;
          }
          (*(void (**)(char *, uint64_t))(v93 + 8))(v62, v94);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v105 + 8))(v18, v34);
          uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (type: Playlist.Variant?));
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v70 - 8) + 56))(v23, 9, 10, v70);
          goto LABEL_33;
        case 0xA:
          char v122 = 10;
          lazy protocol witness table accessor for type ArtworkImage.Placeholder.ComposerCodingKeys and conformance ArtworkImage.Placeholder.ComposerCodingKeys();
          uint64_t v64 = v111;
          KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
          uint64_t v34 = v16;
          uint64_t v26 = (uint64_t)v110;
          if (v64) {
            goto LABEL_26;
          }
          (*(void (**)(char *, uint64_t))(v95 + 8))(v29, v30);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v105 + 8))(v18, v34);
          uint64_t v71 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (type: Playlist.Variant?));
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v71 - 8) + 56))(v23, 10, 10, v71);
          goto LABEL_33;
        default:
          char v112 = 0;
          lazy protocol witness table accessor for type ArtworkImage.Placeholder.MusicCodingKeys and conformance ArtworkImage.Placeholder.MusicCodingKeys();
          uint64_t v32 = v75;
          uint64_t v33 = v111;
          KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
          uint64_t v34 = v16;
          uint64_t v26 = (uint64_t)v110;
          if (v33)
          {
LABEL_26:
            swift_bridgeObjectRelease();
            (*(void (**)(char *, uint64_t))(v105 + 8))(v18, v34);
          }
          else
          {
            (*(void (**)(char *, uint64_t))(v77 + 8))(v32, v76);
            swift_bridgeObjectRelease();
            (*(void (**)(char *, uint64_t))(v105 + 8))(v18, v34);
            uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (type: Playlist.Variant?));
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v23, 1, 10, v35);
LABEL_33:
            outlined init with take of ArtworkImage.Placeholder((uint64_t)v23, v104, type metadata accessor for ArtworkImage.Placeholder);
          }
          break;
      }
    }
    else
    {
      uint64_t v36 = v16;
      uint64_t v37 = type metadata accessor for DecodingError();
      swift_allocError();
      uint64_t v38 = v18;
      uint64_t v40 = v39;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (@thick Any.Type, DecodingError.Context));
      *uint64_t v40 = v19;
      KeyedDecodingContainer.codingPath.getter();
      DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
      (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v37 - 8) + 104))(v40, enum case for DecodingError.typeMismatch(_:), v37);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v105 + 8))(v38, v36);
LABEL_8:
      uint64_t v26 = (uint64_t)v110;
    }
  }
  return __swift_destroy_boxed_opaque_existential_0Tm(v26);
}

uint64_t protocol witness for Decodable.init(from:) in conformance ArtworkImage.Placeholder@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ArtworkImage.Placeholder.init(from:)(a1, a2);
}

uint64_t protocol witness for Encodable.encode(to:) in conformance ArtworkImage.Placeholder(void *a1)
{
  return ArtworkImage.Placeholder.encode(to:)(a1);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance ArtworkImage.Placeholder()
{
  return Hasher._finalize()();
}

uint64_t GenericMusicItem.placeholder.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for Playlist();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin();
  uint64_t v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for GenericMusicItem();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin();
  uint64_t v39 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v11 = (char *)&v38 - v10;
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v12((char *)&v38 - v10, v1, v7);
  int v13 = (*(uint64_t (**)(char *, uint64_t))(v8 + 88))(v11, v7);
  if (v13 == enum case for GenericMusicItem.album(_:)) {
    goto LABEL_2;
  }
  uint64_t v40 = a1;
  if (v13 == enum case for GenericMusicItem.artist(_:)) {
    goto LABEL_13;
  }
  if (v13 == enum case for GenericMusicItem.composer(_:))
  {
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (type: Playlist.Variant?));
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v40, 10, 10, v18);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  }
  if (v13 == enum case for GenericMusicItem.creditArtist(_:) || v13 == enum case for GenericMusicItem.curator(_:)) {
    goto LABEL_13;
  }
  if (v13 == enum case for GenericMusicItem.editorialItem(_:))
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
LABEL_17:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (type: Playlist.Variant?));
    uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
    uint64_t v16 = v40;
    goto LABEL_3;
  }
  if (v13 == enum case for GenericMusicItem.genre(_:))
  {
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (type: Playlist.Variant?));
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v40, 9, 10, v21);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  }
  if (v13 == enum case for GenericMusicItem.musicMovie(_:)) {
    goto LABEL_21;
  }
  if (v13 == enum case for GenericMusicItem.musicVideo(_:))
  {
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (type: Playlist.Variant?));
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v40, 4, 10, v23);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  }
  if (v13 == enum case for GenericMusicItem.playlist(_:))
  {
    (*(void (**)(char *, uint64_t))(v8 + 96))(v11, v7);
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v11, v3);
    uint64_t v24 = v40;
    Playlist.variant.getter();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (type: Playlist.Variant?));
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v24, 0, 10, v25);
  }
  if (v13 == enum case for GenericMusicItem.radioShow(_:)) {
    goto LABEL_27;
  }
  if (v13 == enum case for GenericMusicItem.recordLabel(_:))
  {
LABEL_13:
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (type: Playlist.Variant?));
    uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
    uint64_t v16 = v40;
    uint64_t v17 = 6;
    return v15(v16, v17, 10, v14);
  }
  if (v13 == enum case for GenericMusicItem.socialProfile(_:))
  {
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (type: Playlist.Variant?));
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v40, 7, 10, v27);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  }
  a1 = v40;
  if (v13 == enum case for GenericMusicItem.song(_:)) {
    goto LABEL_2;
  }
  if (v13 == enum case for GenericMusicItem.station(_:))
  {
LABEL_27:
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (type: Playlist.Variant?));
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v40, 8, 10, v26);
  }
  if (v13 == enum case for GenericMusicItem.tvEpisode(_:)
    || v13 == enum case for GenericMusicItem.tvSeason(_:)
    || v13 == enum case for GenericMusicItem.tvShow(_:))
  {
LABEL_21:
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (type: Playlist.Variant?));
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v40, 5, 10, v22);
  }
  a1 = v40;
  if (v13 == enum case for GenericMusicItem.uploadedAudio(_:))
  {
LABEL_2:
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (type: Playlist.Variant?));
    uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
    uint64_t v16 = a1;
LABEL_3:
    uint64_t v17 = 1;
    return v15(v16, v17, 10, v14);
  }
  if (v13 == enum case for GenericMusicItem.uploadedVideo(_:)) {
    goto LABEL_21;
  }
  uint64_t v28 = v8;
  if (v13 == enum case for GenericMusicItem.other(_:))
  {
    (*(void (**)(char *, uint64_t))(v8 + 96))(v11, v7);
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  if (one-time initialization token for artwork != -1) {
    swift_once();
  }
  uint64_t v29 = type metadata accessor for Logger();
  __swift_project_value_buffer(v29, (uint64_t)static Logger.artwork);
  v12(v39, v1, v7);
  uint64_t v30 = Logger.logObject.getter();
  os_log_type_t v31 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v30, v31))
  {
    uint64_t v32 = swift_slowAlloc();
    uint64_t v41 = swift_slowAlloc();
    *(_DWORD *)uint64_t v32 = 136315394;
    *(void *)(v32 + 4) = _s2os32getNullTerminatedUTF8PointerImpl_21storingStringOwnersInSVSS_SpyypGSgztF_2(0xD000000000000010, 0x8000000100472AE0, &v41);
    *(_WORD *)(v32 + 12) = 2080;
    lazy protocol witness table accessor for type ArtworkImage.Placeholder.View and conformance ArtworkImage.Placeholder.View((unint64_t *)&_s16MusicKitInternal07GenericA4ItemOACs23CustomStringConvertibleAAWL_0, (void (*)(uint64_t))&type metadata accessor for GenericMusicItem);
    uint64_t v33 = v39;
    uint64_t v34 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v32 + 14) = _s2os32getNullTerminatedUTF8PointerImpl_21storingStringOwnersInSVSS_SpyypGSgztF_2(v34, v35, &v41);
    swift_bridgeObjectRelease();
    uint64_t v36 = *(void (**)(char *, uint64_t))(v28 + 8);
    v36(v33, v7);
    _os_log_impl((void *)&_mh_execute_header, v30, v31, "Unhandled case for %s: %s", (uint8_t *)v32, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v36 = *(void (**)(char *, uint64_t))(v28 + 8);
    v36(v39, v7);
  }

  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (type: Playlist.Variant?));
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v40, 1, 10, v37);
  return ((uint64_t (*)(char *, uint64_t))v36)(v11, v7);
}

uint64_t GenericMusicItem.aspectRatio.getter()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ArtworkImage.ViewModel?);
  __chkstk_darwin();
  uint64_t v2 = (char *)&v24 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for UploadedVideo();
  uint64_t v26 = *(void *)(v3 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for GenericMusicItem();
  double v7 = *(double *)(v6 - 8);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v11 = (char *)&v24 - v10;
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)&v7 + 16);
  v12((char *)&v24 - v10, v0, v6);
  int v13 = (*(uint64_t (**)(char *, uint64_t))(*(void *)&v7 + 88))(v11, v6);
  if (v13 == enum case for GenericMusicItem.album(_:)
    || v13 == enum case for GenericMusicItem.artist(_:)
    || v13 == enum case for GenericMusicItem.composer(_:)
    || v13 == enum case for GenericMusicItem.creditArtist(_:)
    || v13 == enum case for GenericMusicItem.curator(_:)
    || v13 == enum case for GenericMusicItem.editorialItem(_:)
    || v13 == enum case for GenericMusicItem.genre(_:)
    || v13 == enum case for GenericMusicItem.musicMovie(_:)
    || v13 == enum case for GenericMusicItem.musicVideo(_:)
    || v13 == enum case for GenericMusicItem.playlist(_:)
    || v13 == enum case for GenericMusicItem.radioShow(_:)
    || v13 == enum case for GenericMusicItem.recordLabel(_:)
    || v13 == enum case for GenericMusicItem.socialProfile(_:)
    || v13 == enum case for GenericMusicItem.song(_:))
  {
    return (*(uint64_t (**)(char *, uint64_t))(*(void *)&v7 + 8))(v11, v6);
  }
  double v25 = v7;
  if (v13 == enum case for GenericMusicItem.station(_:)) {
    return (*(uint64_t (**)(char *, uint64_t))(*(void *)&v25 + 8))(v11, v6);
  }
  double v7 = v25;
  if (v13 == enum case for GenericMusicItem.tvEpisode(_:)) {
    return (*(uint64_t (**)(char *, uint64_t))(*(void *)&v7 + 8))(v11, v6);
  }
  if (v13 == enum case for GenericMusicItem.tvSeason(_:)
    || v13 == enum case for GenericMusicItem.tvShow(_:)
    || v13 == enum case for GenericMusicItem.uploadedAudio(_:))
  {
    return (*(uint64_t (**)(char *, uint64_t))(*(void *)&v25 + 8))(v11, v6);
  }
  if (v13 == enum case for GenericMusicItem.uploadedVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(*(void *)&v25 + 96))(v11, v6);
    (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v5, v11, v3);
    specialized ArtworkImageViewModelAttributeProviding.artworkViewModel.getter(v2);
    uint64_t v15 = type metadata accessor for ArtworkImage.ViewModel(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v2, 1, v15) == 1)
    {
      outlined destroy of TaskPriority?((uint64_t)v2, (uint64_t *)&demangling cache variable for type metadata for ArtworkImage.ViewModel?);
    }
    else
    {
      if (Artwork.maximumWidth.getter() >= 1 && Artwork.maximumHeight.getter() >= 1)
      {
        double v16 = (double)Artwork.maximumWidth.getter();
        double v25 = v16 / (double)Artwork.maximumHeight.getter();
        outlined destroy of ArtworkImage.ViewModel((uint64_t)v2, type metadata accessor for ArtworkImage.ViewModel);
        return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v5, v3);
      }
      outlined destroy of ArtworkImage.ViewModel((uint64_t)v2, type metadata accessor for ArtworkImage.ViewModel);
    }
    double v25 = 1.77777778;
    return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v5, v3);
  }
  if (v13 == enum case for GenericMusicItem.other(_:))
  {
    (*(void (**)(char *, uint64_t))(*(void *)&v25 + 96))(v11, v6);
    return swift_bridgeObjectRelease();
  }
  else
  {
    if (one-time initialization token for artwork != -1) {
      swift_once();
    }
    uint64_t v17 = type metadata accessor for Logger();
    __swift_project_value_buffer(v17, (uint64_t)static Logger.artwork);
    v12(v9, v0, v6);
    uint64_t v18 = Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      *(_DWORD *)uint64_t v20 = 136315394;
      *(void *)(v20 + 4) = _s2os32getNullTerminatedUTF8PointerImpl_21storingStringOwnersInSVSS_SpyypGSgztF_2(0xD000000000000010, 0x8000000100472AE0, &v27);
      *(_WORD *)(v20 + 12) = 2080;
      lazy protocol witness table accessor for type ArtworkImage.Placeholder.View and conformance ArtworkImage.Placeholder.View((unint64_t *)&_s16MusicKitInternal07GenericA4ItemOACs23CustomStringConvertibleAAWL_0, (void (*)(uint64_t))&type metadata accessor for GenericMusicItem);
      uint64_t v21 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)(v20 + 14) = _s2os32getNullTerminatedUTF8PointerImpl_21storingStringOwnersInSVSS_SpyypGSgztF_2(v21, v22, &v27);
      swift_bridgeObjectRelease();
      uint64_t v23 = *(void (**)(char *, uint64_t))(*(void *)&v25 + 8);
      v23(v9, v6);
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "Unhandled case for %s: %s", (uint8_t *)v20, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      uint64_t v23 = *(void (**)(char *, uint64_t))(*(void *)&v25 + 8);
      v23(v9, v6);
    }

    return ((uint64_t (*)(char *, uint64_t))v23)(v11, v6);
  }
}

void *CGFloat.videoAspectRatio.unsafeMutableAddressor()
{
  return &static CGFloat.videoAspectRatio;
}

void *CGFloat.moviePosterAspectRatio.unsafeMutableAddressor()
{
  return &static CGFloat.moviePosterAspectRatio;
}

void Playlist.Variant.symbolImage.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Playlist.Variant();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, v2);
  int v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v6 != enum case for Playlist.Variant.smart(_:)
    && v6 != enum case for Playlist.Variant.genius(_:)
    && v6 != enum case for Playlist.Variant.folder(_:))
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v8 = [self _systemImageNamed:v7];

  if (!v8) {
    __break(1u);
  }
}

uint64_t ArtworkImage.ViewModel.init(_:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&_s8MusicKit7ArtworkV0aB8InternalE9CropStyleVSgMD_0);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Artwork();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v11 = (char *)&v26 - v10;
  uint64_t v12 = type metadata accessor for ArtworkImage.ViewModel(0);
  __chkstk_darwin();
  uint64_t v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v28 = v13;
    id v16 = a1;
    Artwork.init(_:)();
    id v17 = [v16 token];
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
    type metadata accessor for UIMenu(0, &_sSo26MPStoreArtworkRequestTokenCML_0);
    if (swift_dynamicCast())
    {
      uint64_t v27 = a2;
      id v18 = v29;
      id v19 = [v29 cropStyle];

      if (v19)
      {
        static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v26 = v5;

        (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, v11, v6);
        NSString v20 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        uint64_t v21 = (uint64_t)v26;
        Artwork.CropStyle.init(_:)(v20, (uint64_t)v26);

        (*(void (**)(char *, uint64_t))(v7 + 8))(v11, v6);
        (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v15, v9, v6);
        outlined init with take of PresentationSource?(v21, (uint64_t)&v15[*(int *)(v12 + 20)], &_s8MusicKit7ArtworkV0aB8InternalE9CropStyleVSgMD_0);
        a2 = v27;
LABEL_11:
        outlined init with take of ArtworkImage.Placeholder((uint64_t)v15, a2, type metadata accessor for ArtworkImage.ViewModel);
        return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v28 + 56))(a2, 0, 1, v12);
      }

      a2 = v27;
    }
    else
    {
    }
    uint64_t v24 = &v15[*(int *)(v12 + 20)];
    uint64_t v25 = type metadata accessor for Artwork.CropStyle();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v24, 1, 1, v25);
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v15, v11, v6);
    goto LABEL_11;
  }
  unint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56);

  return v22(a2, 1, 1, v12);
}

uint64_t Artwork.CropStyle.init(_:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for Artwork.CropStyle();
  __chkstk_darwin();
  uint64_t v7 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1) {
    goto LABEL_53;
  }
  uint64_t v60 = v5;
  uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v10 = v9;
  if (v8 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v10 == v11)
  {
    id v25 = a1;
    swift_bridgeObjectRelease_n();
    goto LABEL_16;
  }
  char v13 = _stringCompareWithSmolCheck(_:_:expecting:)();
  id v14 = a1;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v13)
  {
LABEL_16:
    static Artwork.CropStyle.boundedBox.getter();
LABEL_17:

    (*(void (**)(uint64_t, char *, uint64_t))(v60 + 32))(a2, v7, v4);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v60 + 56))(a2, 0, 1, v4);
  }
  uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v17 = v16;
  if (v15 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v17 == v18)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_19;
  }
  char v20 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v20)
  {
LABEL_19:
    static Artwork.CropStyle.constrainedWidth.getter();
    goto LABEL_17;
  }
  uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v23 = v22;
  if (v21 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v23 == v24)
  {
    swift_bridgeObjectRelease_n();
LABEL_21:
    static Artwork.CropStyle.constrainedHeight.getter();
    goto LABEL_17;
  }
  char v27 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v27) {
    goto LABEL_21;
  }
  uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v30 = v29;
  if (v28 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v30 == v31)
  {
    swift_bridgeObjectRelease_n();
LABEL_26:
    static Artwork.CropStyle.featuredContentCrop270.getter();
    goto LABEL_17;
  }
  char v32 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v32) {
    goto LABEL_26;
  }
  uint64_t v33 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v35 = v34;
  if (v33 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v35 == v36)
  {
    swift_bridgeObjectRelease_n();
LABEL_31:
    static Artwork.CropStyle.featuredContentCrop44.getter();
    goto LABEL_17;
  }
  char v37 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v37) {
    goto LABEL_31;
  }
  uint64_t v38 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v40 = v39;
  if (v38 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v40 == v41)
  {
    swift_bridgeObjectRelease_n();
LABEL_36:
    static Artwork.CropStyle.featuredContentCrop170T100B.getter();
    goto LABEL_17;
  }
  char v42 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v42) {
    goto LABEL_36;
  }
  uint64_t v43 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v45 = v44;
  if (v43 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v45 == v46)
  {
    swift_bridgeObjectRelease_n();
LABEL_41:
    static Artwork.CropStyle.sourceSize.getter();
    goto LABEL_17;
  }
  char v47 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v47) {
    goto LABEL_41;
  }
  uint64_t v48 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v50 = v49;
  if (v48 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v50 == v51)
  {
    swift_bridgeObjectRelease_n();
LABEL_46:
    static Artwork.CropStyle.specificRectangle.getter();
    goto LABEL_17;
  }
  char v52 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v52) {
    goto LABEL_46;
  }
  uint64_t v53 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v55 = v54;
  if (v53 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v55 == v56)
  {
    swift_bridgeObjectRelease_n();
LABEL_51:
    static Artwork.CropStyle.squareCenterCrop.getter();
    goto LABEL_17;
  }
  char v57 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v57) {
    goto LABEL_51;
  }

  uint64_t v5 = v60;
LABEL_53:
  uint64_t v58 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56);

  return v58(a2, 1, 1, v4);
}

uint64_t one-time initialization function for fallback()
{
  uint64_t v0 = type metadata accessor for Artwork.CropStyle();
  __swift_allocate_value_buffer(v0, static Artwork.CropStyle.fallback);
  __swift_project_value_buffer(v0, (uint64_t)static Artwork.CropStyle.fallback);
  return static Artwork.CropStyle.boundedBox.getter();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t vars8;

  uint64_t v0 = type metadata accessor for Artwork.ImageFormat();
  __swift_allocate_value_buffer(v0, static Artwork.ImageFormat.fallback);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)static Artwork.ImageFormat.fallback);
  uint64_t v2 = enum case for Artwork.ImageFormat.heic(_:);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 104);

  return v3(v1, v2, v0);
}

uint64_t static Artwork.CropStyle.fallback.getter@<X0>(uint64_t a1@<X8>)
{
  return static Artwork.CropStyle.fallback.getter(&one-time initialization token for fallback, (uint64_t (*)(void))&type metadata accessor for Artwork.CropStyle, (uint64_t)static Artwork.CropStyle.fallback, a1);
}

uint64_t static Artwork.ImageFormat.fallback.getter@<X0>(uint64_t a1@<X8>)
{
  return static Artwork.CropStyle.fallback.getter(&one-time initialization token for fallback, (uint64_t (*)(void))&type metadata accessor for Artwork.ImageFormat, (uint64_t)static Artwork.ImageFormat.fallback, a1);
}

double static CGFloat.videoAspectRatio.getter()
{
  return 1.77777778;
}

void *CGFloat.verticalVideoAspectRatio.unsafeMutableAddressor()
{
  return &static CGFloat.verticalVideoAspectRatio;
}

double static CGFloat.verticalVideoAspectRatio.getter()
{
  return 0.5625;
}

double static CGFloat.moviePosterAspectRatio.getter()
{
  return 0.666666667;
}

uint64_t static Artwork.monogramArtwork(for:layoutDirection:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  char v9 = a4 & 1;
  type metadata accessor for UIMenu(0, (unint64_t *)&lazy cache variable for type metadata for MPArtworkCatalog);
  if (static MPArtworkCatalog.monogram(for:layoutDirection:)(a1, a2, a3, v9))
  {
    Artwork.init(_:)();
    uint64_t v10 = type metadata accessor for Artwork();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
    uint64_t v12 = v10;
    uint64_t v13 = a5;
    uint64_t v14 = 0;
  }
  else
  {
    uint64_t v15 = type metadata accessor for Artwork();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
    uint64_t v12 = v15;
    uint64_t v13 = a5;
    uint64_t v14 = 1;
  }

  return v11(v13, v14, 1, v12);
}

uint64_t type metadata accessor for ArtworkImage.ViewModel(uint64_t a1)
{
  return type metadata accessor for Notice.Variant(a1, (uint64_t *)&type metadata singleton initialization cache for ArtworkImage.ViewModel);
}

uint64_t type metadata accessor for ArtworkImage.Placeholder(uint64_t a1)
{
  return type metadata accessor for Notice.Variant(a1, (uint64_t *)&type metadata singleton initialization cache for ArtworkImage.Placeholder);
}

uint64_t sub_100382B30()
{
  uint64_t v1 = *(void *)(type metadata accessor for ArtworkImage.Placeholder(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 58) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (type: Playlist.Variant?));
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 48))(v0 + v2, 10, v3))
  {
    uint64_t v4 = type metadata accessor for Playlist.Variant();
    uint64_t v5 = *(void *)(v4 - 8);
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v5 + 48))(v0 + v2, 1, v4)) {
      (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v2, v4);
    }
  }

  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in static ArtworkImage.with(_:placeholder:size:reusePolicy:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for ArtworkImage.Placeholder(0) - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 58) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return closure #1 in static ArtworkImage.with(_:placeholder:size:reusePolicy:)(v1 + 16, v4, a1);
}

unint64_t lazy protocol witness table accessor for type _ConditionalContent<ModifiedContent<ModifiedContent<ArtworkImage.Placeholder.View, _PreferenceWritingModifier<RadiosityEnabledPreferenceKey>>, _FrameLayout>, GeometryReader<ModifiedContent<ModifiedContent<ArtworkImage.Placeholder.View, _PreferenceWritingModifier<RadiosityEnabledPreferenceKey>>, _FrameLayout>>> and conformance <> _ConditionalContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type _ConditionalContent<ModifiedContent<ModifiedContent<ArtworkImage.Placeholder.View, _PreferenceWritingModifier<RadiosityEnabledPreferenceKey>>, _FrameLayout>, GeometryReader<ModifiedContent<ModifiedContent<ArtworkImage.Placeholder.View, _PreferenceWritingModifier<RadiosityEnabledPreferenceKey>>, _FrameLayout>>> and conformance <> _ConditionalContent<A, B>;
  if (!lazy protocol witness table cache variable for type _ConditionalContent<ModifiedContent<ModifiedContent<ArtworkImage.Placeholder.View, _PreferenceWritingModifier<RadiosityEnabledPreferenceKey>>, _FrameLayout>, GeometryReader<ModifiedContent<ModifiedContent<ArtworkImage.Placeholder.View, _PreferenceWritingModifier<RadiosityEnabledPreferenceKey>>, _FrameLayout>>> and conformance <> _ConditionalContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<ArtworkImage.Placeholder.View, _PreferenceWritingModifier<RadiosityEnabledPreferenceKey>>, _FrameLayout>, GeometryReader<ModifiedContent<ModifiedContent<ArtworkImage.Placeholder.View, _PreferenceWritingModifier<RadiosityEnabledPreferenceKey>>, _FrameLayout>>>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ArtworkImage.Placeholder.View, _PreferenceWritingModifier<RadiosityEnabledPreferenceKey>>, _FrameLayout> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type GeometryReader<ModifiedContent<ModifiedContent<ArtworkImage.Placeholder.View, _PreferenceWritingModifier<RadiosityEnabledPreferenceKey>>, _FrameLayout>> and conformance GeometryReader<A>, (uint64_t *)&demangling cache variable for type metadata for GeometryReader<ModifiedContent<ModifiedContent<ArtworkImage.Placeholder.View, _PreferenceWritingModifier<RadiosityEnabledPreferenceKey>>, _FrameLayout>>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type _ConditionalContent<ModifiedContent<ModifiedContent<ArtworkImage.Placeholder.View, _PreferenceWritingModifier<RadiosityEnabledPreferenceKey>>, _FrameLayout>, GeometryReader<ModifiedContent<ModifiedContent<ArtworkImage.Placeholder.View, _PreferenceWritingModifier<RadiosityEnabledPreferenceKey>>, _FrameLayout>>> and conformance <> _ConditionalContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ArtworkImage.Placeholder.View, _PreferenceWritingModifier<RadiosityEnabledPreferenceKey>>, _FrameLayout> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ArtworkImage.Placeholder.View, _PreferenceWritingModifier<RadiosityEnabledPreferenceKey>>, _FrameLayout> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ArtworkImage.Placeholder.View, _PreferenceWritingModifier<RadiosityEnabledPreferenceKey>>, _FrameLayout> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ArtworkImage.Placeholder.View, _PreferenceWritingModifier<RadiosityEnabledPreferenceKey>>, _FrameLayout>);
    lazy protocol witness table accessor for type ModifiedContent<ArtworkImage.Placeholder.View, _PreferenceWritingModifier<RadiosityEnabledPreferenceKey>> and conformance <> ModifiedContent<A, B>();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ArtworkImage.Placeholder.View, _PreferenceWritingModifier<RadiosityEnabledPreferenceKey>>, _FrameLayout> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ArtworkImage.Placeholder.View, _PreferenceWritingModifier<RadiosityEnabledPreferenceKey>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ArtworkImage.Placeholder.View, _PreferenceWritingModifier<RadiosityEnabledPreferenceKey>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ArtworkImage.Placeholder.View, _PreferenceWritingModifier<RadiosityEnabledPreferenceKey>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ArtworkImage.Placeholder.View, _PreferenceWritingModifier<RadiosityEnabledPreferenceKey>>);
    lazy protocol witness table accessor for type ArtworkImage.Placeholder.View and conformance ArtworkImage.Placeholder.View((unint64_t *)&lazy protocol witness table cache variable for type ArtworkImage.Placeholder.View and conformance ArtworkImage.Placeholder.View, (void (*)(uint64_t))type metadata accessor for ArtworkImage.Placeholder.View);
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type _PreferenceWritingModifier<RadiosityEnabledPreferenceKey> and conformance _PreferenceWritingModifier<A>, (uint64_t *)&demangling cache variable for type metadata for _PreferenceWritingModifier<RadiosityEnabledPreferenceKey>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ArtworkImage.Placeholder.View, _PreferenceWritingModifier<RadiosityEnabledPreferenceKey>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t type metadata accessor for ArtworkImage.Placeholder.View(uint64_t a1)
{
  return type metadata accessor for Notice.Variant(a1, (uint64_t *)&type metadata singleton initialization cache for ArtworkImage.Placeholder.View);
}

uint64_t static Logger.artwork.getter@<X0>(uint64_t a1@<X8>)
{
  return static Artwork.CropStyle.fallback.getter(&one-time initialization token for artwork, (uint64_t (*)(void))&type metadata accessor for Logger, (uint64_t)static Logger.artwork, a1);
}

uint64_t static Artwork.CropStyle.fallback.getter@<X0>(void *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v7 = a2(0);
  uint64_t v8 = __swift_project_value_buffer(v7, a3);
  char v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);

  return v9(a4, v8, v7);
}

uint64_t protocol witness for static EnvironmentKey.defaultValue.getter in conformance EnvironmentValues.PlaceholderStyleKey@<X0>(uint64_t a1@<X8>)
{
  if (one-time initialization token for defaultValue != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ArtworkImage.Placeholder.View.Style?);
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)static EnvironmentValues.PlaceholderStyleKey.defaultValue);
  return outlined init with copy of (String, Any)(v3, a1, &demangling cache variable for type metadata for ArtworkImage.Placeholder.View.Style?);
}

uint64_t protocol witness for static EnvironmentKey._valuesEqual(_:_:) in conformance EnvironmentValues.PlaceholderStyleKey()
{
  return static EnvironmentKey._valuesEqual(_:_:)();
}

void (*EnvironmentValues.placeholderStyle.modify(void *a1))(uint64_t **a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  void *v3 = v1;
  size_t v4 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ArtworkImage.Placeholder.View.Style?)
                             - 8)
                 + 64);
  v3[1] = malloc(v4);
  v3[2] = malloc(v4);
  v3[3] = malloc(v4);
  v3[4] = lazy protocol witness table accessor for type EnvironmentValues.PlaceholderStyleKey and conformance EnvironmentValues.PlaceholderStyleKey();
  EnvironmentValues.subscript.getter();
  return EnvironmentValues.placeholderStyle.modify;
}

void EnvironmentValues.placeholderStyle.modify(uint64_t **a1, char a2)
{
  uint64_t v3 = *a1;
  outlined init with copy of (String, Any)((*a1)[3], (*a1)[2], &demangling cache variable for type metadata for ArtworkImage.Placeholder.View.Style?);
  size_t v4 = (void *)v3[3];
  uint64_t v5 = (void *)v3[1];
  uint64_t v6 = (void *)v3[2];
  if (a2)
  {
    outlined init with copy of (String, Any)(v3[2], v3[1], &demangling cache variable for type metadata for ArtworkImage.Placeholder.View.Style?);
    EnvironmentValues.subscript.setter();
    outlined destroy of TaskPriority?((uint64_t)v6, &demangling cache variable for type metadata for ArtworkImage.Placeholder.View.Style?);
  }
  else
  {
    EnvironmentValues.subscript.setter();
  }
  outlined destroy of TaskPriority?((uint64_t)v4, &demangling cache variable for type metadata for ArtworkImage.Placeholder.View.Style?);
  free(v4);
  free(v6);
  free(v5);

  free(v3);
}

uint64_t closure #1 in PlaceholderStyleModifier.init(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v20 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for BlendMode?);
  __chkstk_darwin();
  size_t v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for BlendMode();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ArtworkImage.Placeholder.View.Style?);
  __chkstk_darwin();
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin();
  uint64_t v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of (String, Any)(a2, (uint64_t)v10, &demangling cache variable for type metadata for ArtworkImage.Placeholder.View.Style?);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1) {
    return outlined destroy of TaskPriority?((uint64_t)v10, &demangling cache variable for type metadata for ArtworkImage.Placeholder.View.Style?);
  }
  outlined init with take of ArtworkImage.Placeholder((uint64_t)v10, (uint64_t)v14, type metadata accessor for ArtworkImage.Placeholder.View.Style);
  outlined init with copy of (String, Any)((uint64_t)v14, (uint64_t)&v21, (uint64_t *)&demangling cache variable for type metadata for ShapeStyle?);
  if (v22)
  {
    outlined init with take of AlertPresenting(&v21, (uint64_t)v23);
    uint64_t v16 = v20;
    outlined destroy of TaskPriority?(v20, (uint64_t *)&demangling cache variable for type metadata for ShapeStyle?);
    outlined init with take of AlertPresenting(v23, v16);
  }
  else
  {
    outlined destroy of TaskPriority?((uint64_t)&v21, (uint64_t *)&demangling cache variable for type metadata for ShapeStyle?);
    uint64_t v16 = v20;
  }
  outlined init with copy of (String, Any)((uint64_t)(v14 + 40), (uint64_t)&v21, (uint64_t *)&demangling cache variable for type metadata for ShapeStyle?);
  if (v22)
  {
    outlined init with take of AlertPresenting(&v21, (uint64_t)v23);
    outlined destroy of TaskPriority?(v16 + 40, (uint64_t *)&demangling cache variable for type metadata for ShapeStyle?);
    outlined init with take of AlertPresenting(v23, v16 + 40);
  }
  else
  {
    outlined destroy of TaskPriority?((uint64_t)&v21, (uint64_t *)&demangling cache variable for type metadata for ShapeStyle?);
  }
  outlined init with copy of (String, Any)((uint64_t)&v14[*(int *)(v11 + 24)], (uint64_t)v4, &demangling cache variable for type metadata for BlendMode?);
  outlined destroy of ArtworkImage.ViewModel((uint64_t)v14, type metadata accessor for ArtworkImage.Placeholder.View.Style);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1) {
    return outlined destroy of TaskPriority?((uint64_t)v4, &demangling cache variable for type metadata for BlendMode?);
  }
  uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
  v17(v8, v4, v5);
  uint64_t v18 = v16 + *(int *)(v11 + 24);
  outlined destroy of TaskPriority?(v18, &demangling cache variable for type metadata for BlendMode?);
  v17((char *)v18, v8, v5);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v6 + 56))(v18, 0, 1, v5);
}

uint64_t PlaceholderStyleModifier.body(content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ArtworkImage.Placeholder.View.Style?);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t KeyPath = swift_getKeyPath();
  PlaceholderStyleModifier.configuredStyle.getter((uint64_t)v5);
  uint64_t v7 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v5, 0, 1, v7);
  uint64_t v8 = (uint64_t *)(a2
                 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<_ViewModifier_Content<PlaceholderStyleModifier>, _EnvironmentKeyWritingModifier<ArtworkImage.Placeholder.View.Style?>>)
                          + 36));
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<ArtworkImage.Placeholder.View.Style?>);
  outlined init with copy of (String, Any)((uint64_t)v5, (uint64_t)v8 + *(int *)(v9 + 28), &demangling cache variable for type metadata for ArtworkImage.Placeholder.View.Style?);
  *uint64_t v8 = KeyPath;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ViewModifier_Content<PlaceholderStyleModifier>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(a2, a1, v10);
  return outlined destroy of TaskPriority?((uint64_t)v5, &demangling cache variable for type metadata for ArtworkImage.Placeholder.View.Style?);
}

uint64_t PlaceholderStyleModifier.configuredStyle.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v7 = (_OWORD *)((char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for BlendMode?);
  __chkstk_darwin();
  uint64_t v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ArtworkImage.Placeholder.View.Style?);
  __chkstk_darwin();
  uint64_t v11 = (char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for PlaceholderStyleModifier(0);
  specialized Environment.wrappedValue.getter(&demangling cache variable for type metadata for Environment<ArtworkImage.Placeholder.View.Style?>.Content, &demangling cache variable for type metadata for ArtworkImage.Placeholder.View.Style?, 0x6C616E6F6974704FLL, 0xEF3E656C7974533CLL, (uint64_t)v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v11, 1, v4) == 1)
  {
    uint64_t v19 = 0;
    memset(v18, 0, sizeof(v18));
    uint64_t v12 = type metadata accessor for BlendMode();
    memset(v16, 0, sizeof(v16));
    uint64_t v17 = 0;
    uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    v13(v9, 1, 1, v12);
    _OWORD v7[3] = 0u;
    _OWORD v7[4] = 0u;
    v7[1] = 0u;
    _OWORD v7[2] = 0u;
    _OWORD *v7 = 0u;
    uint64_t v14 = (uint64_t)v7 + *(int *)(v4 + 24);
    v13((char *)v14, 1, 1, v12);
    outlined assign with take of Album?((uint64_t)v18, (uint64_t)v7, (uint64_t *)&demangling cache variable for type metadata for ShapeStyle?);
    outlined assign with take of Album?((uint64_t)v16, (uint64_t)v7 + 40, (uint64_t *)&demangling cache variable for type metadata for ShapeStyle?);
    outlined assign with take of Album?((uint64_t)v9, v14, &demangling cache variable for type metadata for BlendMode?);
    outlined init with take of ArtworkImage.Placeholder((uint64_t)v7, a1, type metadata accessor for ArtworkImage.Placeholder.View.Style);
    outlined destroy of TaskPriority?((uint64_t)v11, &demangling cache variable for type metadata for ArtworkImage.Placeholder.View.Style?);
  }
  else
  {
    outlined init with take of ArtworkImage.Placeholder((uint64_t)v11, a1, type metadata accessor for ArtworkImage.Placeholder.View.Style);
  }
  return (*v2)(a1);
}

uint64_t View.placeholderStyle(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v15 = a3;
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ArtworkImage.Placeholder.View.Style?)
                 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin();
  uint64_t v6 = type metadata accessor for PlaceholderStyleModifier(0);
  __chkstk_darwin();
  uint64_t v8 = (uint64_t *)((char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin();
  uint64_t v10 = (char *)&v15 - v9;
  outlined init with copy of (String, Any)(a1, (uint64_t)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), &demangling cache variable for type metadata for ArtworkImage.Placeholder.View.Style?);
  uint64_t v11 = (void *)((char *)v8 + *(int *)(v6 + 20));
  *uint64_t v11 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ArtworkImage.Placeholder.View.Style?>.Content);
  swift_storeEnumTagMultiPayload();
  unint64_t v12 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v13 = swift_allocObject();
  outlined init with take of PresentationSource?((uint64_t)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v13 + v12, &demangling cache variable for type metadata for ArtworkImage.Placeholder.View.Style?);
  *uint64_t v8 = partial apply for closure #1 in PlaceholderStyleModifier.init(_:);
  v8[1] = v13;
  outlined init with take of ArtworkImage.Placeholder((uint64_t)v8, (uint64_t)v10, type metadata accessor for PlaceholderStyleModifier);
  View.modifier<A>(_:)();
  return outlined destroy of ArtworkImage.ViewModel((uint64_t)v10, type metadata accessor for PlaceholderStyleModifier);
}

uint64_t View.placeholderStyle(_:)(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v17 = a4;
  uint64_t v5 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ArtworkImage.Placeholder.View.Style?)
                 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin();
  uint64_t v7 = type metadata accessor for PlaceholderStyleModifier(0);
  __chkstk_darwin();
  uint64_t v9 = (uint64_t *)((char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = __chkstk_darwin();
  unint64_t v12 = (char *)&v17 - v11;
  a1(v10);
  uint64_t v13 = (void *)((char *)v9 + *(int *)(v7 + 20));
  uint64_t *v13 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ArtworkImage.Placeholder.View.Style?>.Content);
  swift_storeEnumTagMultiPayload();
  unint64_t v14 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v15 = swift_allocObject();
  outlined init with take of PresentationSource?((uint64_t)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v15 + v14, &demangling cache variable for type metadata for ArtworkImage.Placeholder.View.Style?);
  void *v9 = partial apply for closure #1 in PlaceholderStyleModifier.init(_:);
  v9[1] = v15;
  outlined init with take of ArtworkImage.Placeholder((uint64_t)v9, (uint64_t)v12, type metadata accessor for PlaceholderStyleModifier);
  View.modifier<A>(_:)();
  return outlined destroy of ArtworkImage.ViewModel((uint64_t)v12, type metadata accessor for PlaceholderStyleModifier);
}

uint64_t View.placeholderStyle(_:)(uint64_t a1, uint64_t a2)
{
  type metadata accessor for PlaceholderStyleModifier(0);
  __chkstk_darwin();
  uint64_t v5 = (uint64_t *)((char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = __chkstk_darwin();
  uint64_t v8 = (char *)&v11 - v7;
  uint64_t v9 = (void *)((char *)v5 + *(int *)(v6 + 20));
  uint64_t *v9 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ArtworkImage.Placeholder.View.Style?>.Content);
  swift_storeEnumTagMultiPayload();
  *uint64_t v5 = a1;
  v5[1] = a2;
  outlined init with take of ArtworkImage.Placeholder((uint64_t)v5, (uint64_t)v8, type metadata accessor for PlaceholderStyleModifier);
  swift_retain();
  View.modifier<A>(_:)();
  return outlined destroy of ArtworkImage.ViewModel((uint64_t)v8, type metadata accessor for PlaceholderStyleModifier);
}

uint64_t specialized static ArtworkImage.Size.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  char v2 = *(unsigned char *)(a2 + 8);
  if ((*(unsigned char *)(a1 + 8) & 1) == 0)
  {
    if (*(double *)a1 != *(double *)a2) {
      char v2 = 1;
    }
    if (v2) {
      return 0;
    }
LABEL_7:
    char v3 = *(unsigned char *)(a2 + 24);
    if (*(unsigned char *)(a1 + 24))
    {
      if (!*(unsigned char *)(a2 + 24)) {
        return 0;
      }
    }
    else
    {
      if (*(double *)(a1 + 16) != *(double *)(a2 + 16)) {
        char v3 = 1;
      }
      if (v3) {
        return 0;
      }
    }
    char v4 = *(unsigned char *)(a2 + 40);
    if (*(unsigned char *)(a1 + 40))
    {
      if (!*(unsigned char *)(a2 + 40)) {
        return 0;
      }
    }
    else
    {
      if (*(double *)(a1 + 32) != *(double *)(a2 + 32)) {
        char v4 = 1;
      }
      if (v4) {
        return 0;
      }
    }
    int v5 = *(unsigned __int8 *)(a2 + 41);
    if (*(unsigned char *)(a1 + 41) == 2)
    {
      if (v5 != 2) {
        return 0;
      }
    }
    else if (v5 == 2 || (static ContentMode.== infix(_:_:)() & 1) == 0)
    {
      return 0;
    }
    return 1;
  }
  if (*(unsigned char *)(a2 + 8)) {
    goto LABEL_7;
  }
  return 0;
}

BOOL specialized static ArtworkImage.ViewModel.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Artwork.CropStyle();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Artwork.CropStyle?, Artwork.CropStyle?));
  __chkstk_darwin();
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&_s8MusicKit7ArtworkV0aB8InternalE9CropStyleVSgMD_0);
  __chkstk_darwin();
  unint64_t v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  unint64_t v14 = (char *)&v28 - v13;
  __chkstk_darwin();
  uint64_t v16 = (char *)&v28 - v15;
  if ((static Artwork.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  uint64_t v29 = v7;
  uint64_t v17 = v5;
  uint64_t v18 = type metadata accessor for ArtworkImage.ViewModel(0);
  outlined init with copy of (String, Any)(a1 + *(int *)(v18 + 20), (uint64_t)v16, &_s8MusicKit7ArtworkV0aB8InternalE9CropStyleVSgMD_0);
  uint64_t v19 = *(int *)(v18 + 20);
  uint64_t v20 = v17;
  outlined init with copy of (String, Any)(a2 + v19, (uint64_t)v14, &_s8MusicKit7ArtworkV0aB8InternalE9CropStyleVSgMD_0);
  uint64_t v21 = (uint64_t)&v10[*(int *)(v8 + 48)];
  outlined init with copy of (String, Any)((uint64_t)v16, (uint64_t)v10, &_s8MusicKit7ArtworkV0aB8InternalE9CropStyleVSgMD_0);
  outlined init with copy of (String, Any)((uint64_t)v14, v21, &_s8MusicKit7ArtworkV0aB8InternalE9CropStyleVSgMD_0);
  uint64_t v22 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48);
  if (v22((uint64_t)v10, 1, v4) == 1)
  {
    outlined destroy of TaskPriority?((uint64_t)v14, &_s8MusicKit7ArtworkV0aB8InternalE9CropStyleVSgMD_0);
    outlined destroy of TaskPriority?((uint64_t)v16, &_s8MusicKit7ArtworkV0aB8InternalE9CropStyleVSgMD_0);
    if (v22(v21, 1, v4) == 1)
    {
      outlined destroy of TaskPriority?((uint64_t)v10, &_s8MusicKit7ArtworkV0aB8InternalE9CropStyleVSgMD_0);
      return 1;
    }
    goto LABEL_7;
  }
  outlined init with copy of (String, Any)((uint64_t)v10, (uint64_t)v12, &_s8MusicKit7ArtworkV0aB8InternalE9CropStyleVSgMD_0);
  if (v22(v21, 1, v4) == 1)
  {
    outlined destroy of TaskPriority?((uint64_t)v14, &_s8MusicKit7ArtworkV0aB8InternalE9CropStyleVSgMD_0);
    outlined destroy of TaskPriority?((uint64_t)v16, &_s8MusicKit7ArtworkV0aB8InternalE9CropStyleVSgMD_0);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v12, v4);
LABEL_7:
    outlined destroy of TaskPriority?((uint64_t)v10, &demangling cache variable for type metadata for (Artwork.CropStyle?, Artwork.CropStyle?));
    return 0;
  }
  uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 32);
  uint64_t v24 = v29;
  v23(v29, v21, v4);
  lazy protocol witness table accessor for type ArtworkImage.Placeholder.View and conformance ArtworkImage.Placeholder.View(&lazy protocol witness table cache variable for type Artwork.CropStyle and conformance Artwork.CropStyle, (void (*)(uint64_t))&type metadata accessor for Artwork.CropStyle);
  char v25 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v26 = *(void (**)(char *, uint64_t))(v20 + 8);
  v26(v24, v4);
  outlined destroy of TaskPriority?((uint64_t)v14, &_s8MusicKit7ArtworkV0aB8InternalE9CropStyleVSgMD_0);
  outlined destroy of TaskPriority?((uint64_t)v16, &_s8MusicKit7ArtworkV0aB8InternalE9CropStyleVSgMD_0);
  v26(v12, v4);
  outlined destroy of TaskPriority?((uint64_t)v10, &_s8MusicKit7ArtworkV0aB8InternalE9CropStyleVSgMD_0);
  return (v25 & 1) != 0;
}

uint64_t type metadata accessor for ArtworkImage.Info(uint64_t a1)
{
  return type metadata accessor for Notice.Variant(a1, (uint64_t *)&type metadata singleton initialization cache for ArtworkImage.Info);
}

uint64_t specialized static ArtworkImage.Info.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ArtworkImage.ViewModel(0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v39 = (uint64_t)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ArtworkImage.ViewModel?, ArtworkImage.ViewModel?))
     - 8;
  __chkstk_darwin();
  uint64_t v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ArtworkImage.ViewModel?);
  __chkstk_darwin();
  uint64_t v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v13 = (char *)&v38 - v12;
  __chkstk_darwin();
  uint64_t v15 = (char *)&v38 - v14;
  uint64_t v40 = a1;
  outlined init with copy of (String, Any)(a1, (uint64_t)&v38 - v14, (uint64_t *)&demangling cache variable for type metadata for ArtworkImage.ViewModel?);
  uint64_t v41 = a2;
  outlined init with copy of (String, Any)(a2, (uint64_t)v13, (uint64_t *)&demangling cache variable for type metadata for ArtworkImage.ViewModel?);
  uint64_t v16 = (uint64_t)&v9[*(int *)(v7 + 56)];
  outlined init with copy of (String, Any)((uint64_t)v15, (uint64_t)v9, (uint64_t *)&demangling cache variable for type metadata for ArtworkImage.ViewModel?);
  outlined init with copy of (String, Any)((uint64_t)v13, v16, (uint64_t *)&demangling cache variable for type metadata for ArtworkImage.ViewModel?);
  uint64_t v17 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v17((uint64_t)v9, 1, v4) != 1)
  {
    outlined init with copy of (String, Any)((uint64_t)v9, (uint64_t)v11, (uint64_t *)&demangling cache variable for type metadata for ArtworkImage.ViewModel?);
    if (v17(v16, 1, v4) != 1)
    {
      uint64_t v18 = v39;
      outlined init with take of ArtworkImage.Placeholder(v16, v39, type metadata accessor for ArtworkImage.ViewModel);
      BOOL v19 = specialized static ArtworkImage.ViewModel.__derived_struct_equals(_:_:)((uint64_t)v11, v18);
      outlined destroy of ArtworkImage.ViewModel(v18, type metadata accessor for ArtworkImage.ViewModel);
      outlined destroy of TaskPriority?((uint64_t)v13, (uint64_t *)&demangling cache variable for type metadata for ArtworkImage.ViewModel?);
      outlined destroy of TaskPriority?((uint64_t)v15, (uint64_t *)&demangling cache variable for type metadata for ArtworkImage.ViewModel?);
      outlined destroy of ArtworkImage.ViewModel((uint64_t)v11, type metadata accessor for ArtworkImage.ViewModel);
      outlined destroy of TaskPriority?((uint64_t)v9, (uint64_t *)&demangling cache variable for type metadata for ArtworkImage.ViewModel?);
      if (!v19) {
        return 0;
      }
      goto LABEL_8;
    }
    outlined destroy of TaskPriority?((uint64_t)v13, (uint64_t *)&demangling cache variable for type metadata for ArtworkImage.ViewModel?);
    outlined destroy of TaskPriority?((uint64_t)v15, (uint64_t *)&demangling cache variable for type metadata for ArtworkImage.ViewModel?);
    outlined destroy of ArtworkImage.ViewModel((uint64_t)v11, type metadata accessor for ArtworkImage.ViewModel);
LABEL_6:
    outlined destroy of TaskPriority?((uint64_t)v9, &demangling cache variable for type metadata for (ArtworkImage.ViewModel?, ArtworkImage.ViewModel?));
    return 0;
  }
  outlined destroy of TaskPriority?((uint64_t)v13, (uint64_t *)&demangling cache variable for type metadata for ArtworkImage.ViewModel?);
  outlined destroy of TaskPriority?((uint64_t)v15, (uint64_t *)&demangling cache variable for type metadata for ArtworkImage.ViewModel?);
  if (v17(v16, 1, v4) != 1) {
    goto LABEL_6;
  }
  outlined destroy of TaskPriority?((uint64_t)v9, (uint64_t *)&demangling cache variable for type metadata for ArtworkImage.ViewModel?);
LABEL_8:
  uint64_t v20 = (int *)type metadata accessor for ArtworkImage.Info(0);
  uint64_t v22 = v40;
  uint64_t v21 = v41;
  if (specialized static ArtworkImage.Placeholder.__derived_enum_equals(_:_:)(v40 + v20[5], v41 + v20[5]))
  {
    uint64_t v23 = v20[6];
    uint64_t v24 = (double *)(v22 + v23);
    char v25 = *(unsigned char *)(v22 + v23 + 8);
    uint64_t v26 = (double *)(v21 + v23);
    int v27 = *(unsigned __int8 *)(v21 + v23 + 8);
    if (v25)
    {
      if (!v27) {
        return 0;
      }
    }
    else
    {
      if (*v24 != *v26) {
        LOBYTE(v27) = 1;
      }
      if (v27) {
        return 0;
      }
    }
    uint64_t v28 = (long long *)(v22 + v20[7]);
    long long v29 = *(long long *)((char *)v28 + 26);
    long long v30 = v28[1];
    long long v42 = *v28;
    v43[0] = v30;
    *(_OWORD *)((char *)v43 + 10) = v29;
    uint64_t v31 = (long long *)(v21 + v20[7]);
    *(_OWORD *)&v45[10] = *(long long *)((char *)v31 + 26);
    long long v32 = v31[1];
    long long v44 = *v31;
    *(_OWORD *)uint64_t v45 = v32;
    if (specialized static ArtworkImage.Size.__derived_struct_equals(_:_:)((uint64_t)&v42, (uint64_t)&v44))
    {
      uint64_t v33 = v20[8];
      uint64_t v34 = v22 + v33;
      char v35 = *(unsigned char *)(v22 + v33 + 16);
      uint64_t v36 = v21 + v33;
      if (v35)
      {
        if ((*(unsigned char *)(v36 + 16) & 1) == 0) {
          return 0;
        }
      }
      else if ((*(unsigned char *)(v36 + 16) & 1) != 0 {
             || *(double *)v34 != *(double *)v36
      }
             || *(void *)(v34 + 8) != *(void *)(v36 + 8))
      {
        return 0;
      }
      return 1;
    }
  }
  return 0;
}

uint64_t specialized static ArtworkImage.Placeholder.__derived_enum_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Playlist.Variant();
  uint64_t v32 = *(void *)(v4 - 8);
  uint64_t v33 = v4;
  __chkstk_darwin();
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&_s8MusicKit8PlaylistV0aB8InternalE7VariantOSg_AGtMD_0);
  __chkstk_darwin();
  uint64_t v31 = (uint64_t)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&_s8MusicKit8PlaylistV0aB8InternalE7VariantOSgMD_0);
  __chkstk_darwin();
  uint64_t v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v12 = (char *)&v30 - v11;
  type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin();
  uint64_t v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ArtworkImage.Placeholder, ArtworkImage.Placeholder));
  uint64_t v15 = __chkstk_darwin();
  uint64_t v17 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = (uint64_t)&v17[*(int *)(v15 + 56)];
  outlined init with copy of ArtworkImage.Placeholder(a1, (uint64_t)v17, type metadata accessor for ArtworkImage.Placeholder);
  outlined init with copy of ArtworkImage.Placeholder(a2, v18, type metadata accessor for ArtworkImage.Placeholder);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (type: Playlist.Variant?));
  uint64_t v20 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 48);
  switch(v20((uint64_t)v17, 10, v19))
  {
    case 1u:
      if (v20(v18, 10, v19) == 1) {
        goto LABEL_23;
      }
      goto LABEL_24;
    case 2u:
      if (v20(v18, 10, v19) != 2) {
        goto LABEL_24;
      }
      goto LABEL_23;
    case 3u:
      if (v20(v18, 10, v19) != 3) {
        goto LABEL_24;
      }
      goto LABEL_23;
    case 4u:
      if (v20(v18, 10, v19) != 4) {
        goto LABEL_24;
      }
      goto LABEL_23;
    case 5u:
      if (v20(v18, 10, v19) != 5) {
        goto LABEL_24;
      }
      goto LABEL_23;
    case 6u:
      if (v20(v18, 10, v19) != 6) {
        goto LABEL_24;
      }
      goto LABEL_23;
    case 7u:
      if (v20(v18, 10, v19) != 7) {
        goto LABEL_24;
      }
      goto LABEL_23;
    case 8u:
      if (v20(v18, 10, v19) != 8) {
        goto LABEL_24;
      }
      goto LABEL_23;
    case 9u:
      if (v20(v18, 10, v19) != 9) {
        goto LABEL_24;
      }
      goto LABEL_23;
    case 0xAu:
      if (v20(v18, 10, v19) == 10) {
        goto LABEL_23;
      }
      goto LABEL_24;
    default:
      outlined init with copy of ArtworkImage.Placeholder((uint64_t)v17, (uint64_t)v14, type metadata accessor for ArtworkImage.Placeholder);
      if (v20(v18, 10, v19))
      {
        outlined destroy of TaskPriority?((uint64_t)v14, &_s8MusicKit8PlaylistV0aB8InternalE7VariantOSgMD_0);
LABEL_24:
        outlined destroy of TaskPriority?((uint64_t)v17, &demangling cache variable for type metadata for (ArtworkImage.Placeholder, ArtworkImage.Placeholder));
        return 0;
      }
      outlined init with take of PresentationSource?(v18, (uint64_t)v12, &_s8MusicKit8PlaylistV0aB8InternalE7VariantOSgMD_0);
      uint64_t v22 = v31 + *(int *)(v7 + 48);
      uint64_t v23 = (uint64_t)v14;
      uint64_t v24 = v31;
      outlined init with take of PresentationSource?(v23, v31, &_s8MusicKit8PlaylistV0aB8InternalE7VariantOSgMD_0);
      outlined init with copy of (String, Any)((uint64_t)v12, v22, &_s8MusicKit8PlaylistV0aB8InternalE7VariantOSgMD_0);
      uint64_t v26 = v32;
      uint64_t v25 = v33;
      int v27 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 48);
      if (v27(v24, 1, v33) == 1)
      {
        outlined destroy of TaskPriority?((uint64_t)v12, &_s8MusicKit8PlaylistV0aB8InternalE7VariantOSgMD_0);
        if (v27(v22, 1, v25) == 1)
        {
          outlined destroy of TaskPriority?(v24, &_s8MusicKit8PlaylistV0aB8InternalE7VariantOSgMD_0);
LABEL_23:
          outlined destroy of ArtworkImage.ViewModel((uint64_t)v17, type metadata accessor for ArtworkImage.Placeholder);
          return 1;
        }
        goto LABEL_31;
      }
      outlined init with copy of (String, Any)(v24, (uint64_t)v10, &_s8MusicKit8PlaylistV0aB8InternalE7VariantOSgMD_0);
      if (v27(v22, 1, v25) == 1)
      {
        outlined destroy of TaskPriority?((uint64_t)v12, &_s8MusicKit8PlaylistV0aB8InternalE7VariantOSgMD_0);
        (*(void (**)(char *, uint64_t))(v26 + 8))(v10, v25);
LABEL_31:
        outlined destroy of TaskPriority?(v24, &_s8MusicKit8PlaylistV0aB8InternalE7VariantOSg_AGtMD_0);
        goto LABEL_33;
      }
      (*(void (**)(char *, uint64_t, uint64_t))(v26 + 32))(v6, v22, v25);
      lazy protocol witness table accessor for type ArtworkImage.Placeholder.View and conformance ArtworkImage.Placeholder.View(&_s8MusicKit8PlaylistV0aB8InternalE7VariantOAFSQADWL_0, (void (*)(uint64_t))&type metadata accessor for Playlist.Variant);
      char v28 = dispatch thunk of static Equatable.== infix(_:_:)();
      long long v29 = *(void (**)(char *, uint64_t))(v26 + 8);
      v29(v6, v25);
      outlined destroy of TaskPriority?((uint64_t)v12, &_s8MusicKit8PlaylistV0aB8InternalE7VariantOSgMD_0);
      v29(v10, v25);
      outlined destroy of TaskPriority?(v24, &_s8MusicKit8PlaylistV0aB8InternalE7VariantOSgMD_0);
      if (v28) {
        goto LABEL_23;
      }
LABEL_33:
      outlined destroy of ArtworkImage.ViewModel((uint64_t)v17, type metadata accessor for ArtworkImage.Placeholder);
      return 0;
  }
}

uint64_t sub_1003850AC()
{
  return EnvironmentValues.subscript.getter();
}

uint64_t sub_1003850F0()
{
  return EnvironmentValues.colorSchemeContrast.getter();
}

uint64_t outlined init with take of ArtworkImage.Placeholder(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t outlined init with copy of ArtworkImage.Placeholder(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t outlined destroy of ArtworkImage.ViewModel(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t lazy protocol witness table accessor for type EnvironmentValues.PlaceholderStyleKey and conformance EnvironmentValues.PlaceholderStyleKey()
{
  unint64_t result = lazy protocol witness table cache variable for type EnvironmentValues.PlaceholderStyleKey and conformance EnvironmentValues.PlaceholderStyleKey;
  if (!lazy protocol witness table cache variable for type EnvironmentValues.PlaceholderStyleKey and conformance EnvironmentValues.PlaceholderStyleKey)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type EnvironmentValues.PlaceholderStyleKey and conformance EnvironmentValues.PlaceholderStyleKey);
  }
  return result;
}

uint64_t type metadata accessor for ArtworkImage.Placeholder.View.Style(uint64_t a1)
{
  return type metadata accessor for Notice.Variant(a1, (uint64_t *)&type metadata singleton initialization cache for ArtworkImage.Placeholder.View.Style);
}

uint64_t lazy protocol witness table accessor for type ArtworkImage.Placeholder.View and conformance ArtworkImage.Placeholder.View(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ArtworkImage.Placeholder.CodingKeys and conformance ArtworkImage.Placeholder.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type ArtworkImage.Placeholder.CodingKeys and conformance ArtworkImage.Placeholder.CodingKeys;
  if (!lazy protocol witness table cache variable for type ArtworkImage.Placeholder.CodingKeys and conformance ArtworkImage.Placeholder.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ArtworkImage.Placeholder.CodingKeys and conformance ArtworkImage.Placeholder.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ArtworkImage.Placeholder.CodingKeys and conformance ArtworkImage.Placeholder.CodingKeys;
  if (!lazy protocol witness table cache variable for type ArtworkImage.Placeholder.CodingKeys and conformance ArtworkImage.Placeholder.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ArtworkImage.Placeholder.CodingKeys and conformance ArtworkImage.Placeholder.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ArtworkImage.Placeholder.CodingKeys and conformance ArtworkImage.Placeholder.CodingKeys;
  if (!lazy protocol witness table cache variable for type ArtworkImage.Placeholder.CodingKeys and conformance ArtworkImage.Placeholder.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ArtworkImage.Placeholder.CodingKeys and conformance ArtworkImage.Placeholder.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ArtworkImage.Placeholder.CodingKeys and conformance ArtworkImage.Placeholder.CodingKeys;
  if (!lazy protocol witness table cache variable for type ArtworkImage.Placeholder.CodingKeys and conformance ArtworkImage.Placeholder.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ArtworkImage.Placeholder.CodingKeys and conformance ArtworkImage.Placeholder.CodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ArtworkImage.Placeholder.ComposerCodingKeys and conformance ArtworkImage.Placeholder.ComposerCodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type ArtworkImage.Placeholder.ComposerCodingKeys and conformance ArtworkImage.Placeholder.ComposerCodingKeys;
  if (!lazy protocol witness table cache variable for type ArtworkImage.Placeholder.ComposerCodingKeys and conformance ArtworkImage.Placeholder.ComposerCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ArtworkImage.Placeholder.ComposerCodingKeys and conformance ArtworkImage.Placeholder.ComposerCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ArtworkImage.Placeholder.ComposerCodingKeys and conformance ArtworkImage.Placeholder.ComposerCodingKeys;
  if (!lazy protocol witness table cache variable for type ArtworkImage.Placeholder.ComposerCodingKeys and conformance ArtworkImage.Placeholder.ComposerCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ArtworkImage.Placeholder.ComposerCodingKeys and conformance ArtworkImage.Placeholder.ComposerCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ArtworkImage.Placeholder.ComposerCodingKeys and conformance ArtworkImage.Placeholder.ComposerCodingKeys;
  if (!lazy protocol witness table cache variable for type ArtworkImage.Placeholder.ComposerCodingKeys and conformance ArtworkImage.Placeholder.ComposerCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ArtworkImage.Placeholder.ComposerCodingKeys and conformance ArtworkImage.Placeholder.ComposerCodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ArtworkImage.Placeholder.GenreCodingKeys and conformance ArtworkImage.Placeholder.GenreCodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type ArtworkImage.Placeholder.GenreCodingKeys and conformance ArtworkImage.Placeholder.GenreCodingKeys;
  if (!lazy protocol witness table cache variable for type ArtworkImage.Placeholder.GenreCodingKeys and conformance ArtworkImage.Placeholder.GenreCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ArtworkImage.Placeholder.GenreCodingKeys and conformance ArtworkImage.Placeholder.GenreCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ArtworkImage.Placeholder.GenreCodingKeys and conformance ArtworkImage.Placeholder.GenreCodingKeys;
  if (!lazy protocol witness table cache variable for type ArtworkImage.Placeholder.GenreCodingKeys and conformance ArtworkImage.Placeholder.GenreCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ArtworkImage.Placeholder.GenreCodingKeys and conformance ArtworkImage.Placeholder.GenreCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ArtworkImage.Placeholder.GenreCodingKeys and conformance ArtworkImage.Placeholder.GenreCodingKeys;
  if (!lazy protocol witness table cache variable for type ArtworkImage.Placeholder.GenreCodingKeys and conformance ArtworkImage.Placeholder.GenreCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ArtworkImage.Placeholder.GenreCodingKeys and conformance ArtworkImage.Placeholder.GenreCodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ArtworkImage.Placeholder.RadioCodingKeys and conformance ArtworkImage.Placeholder.RadioCodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type ArtworkImage.Placeholder.RadioCodingKeys and conformance ArtworkImage.Placeholder.RadioCodingKeys;
  if (!lazy protocol witness table cache variable for type ArtworkImage.Placeholder.RadioCodingKeys and conformance ArtworkImage.Placeholder.RadioCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ArtworkImage.Placeholder.RadioCodingKeys and conformance ArtworkImage.Placeholder.RadioCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ArtworkImage.Placeholder.RadioCodingKeys and conformance ArtworkImage.Placeholder.RadioCodingKeys;
  if (!lazy protocol witness table cache variable for type ArtworkImage.Placeholder.RadioCodingKeys and conformance ArtworkImage.Placeholder.RadioCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ArtworkImage.Placeholder.RadioCodingKeys and conformance ArtworkImage.Placeholder.RadioCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ArtworkImage.Placeholder.RadioCodingKeys and conformance ArtworkImage.Placeholder.RadioCodingKeys;
  if (!lazy protocol witness table cache variable for type ArtworkImage.Placeholder.RadioCodingKeys and conformance ArtworkImage.Placeholder.RadioCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ArtworkImage.Placeholder.RadioCodingKeys and conformance ArtworkImage.Placeholder.RadioCodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ArtworkImage.Placeholder.PersonCodingKeys and conformance ArtworkImage.Placeholder.PersonCodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type ArtworkImage.Placeholder.PersonCodingKeys and conformance ArtworkImage.Placeholder.PersonCodingKeys;
  if (!lazy protocol witness table cache variable for type ArtworkImage.Placeholder.PersonCodingKeys and conformance ArtworkImage.Placeholder.PersonCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ArtworkImage.Placeholder.PersonCodingKeys and conformance ArtworkImage.Placeholder.PersonCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ArtworkImage.Placeholder.PersonCodingKeys and conformance ArtworkImage.Placeholder.PersonCodingKeys;
  if (!lazy protocol witness table cache variable for type ArtworkImage.Placeholder.PersonCodingKeys and conformance ArtworkImage.Placeholder.PersonCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ArtworkImage.Placeholder.PersonCodingKeys and conformance ArtworkImage.Placeholder.PersonCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ArtworkImage.Placeholder.PersonCodingKeys and conformance ArtworkImage.Placeholder.PersonCodingKeys;
  if (!lazy protocol witness table cache variable for type ArtworkImage.Placeholder.PersonCodingKeys and conformance ArtworkImage.Placeholder.PersonCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ArtworkImage.Placeholder.PersonCodingKeys and conformance ArtworkImage.Placeholder.PersonCodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ArtworkImage.Placeholder.MicrophoneCodingKeys and conformance ArtworkImage.Placeholder.MicrophoneCodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type ArtworkImage.Placeholder.MicrophoneCodingKeys and conformance ArtworkImage.Placeholder.MicrophoneCodingKeys;
  if (!lazy protocol witness table cache variable for type ArtworkImage.Placeholder.MicrophoneCodingKeys and conformance ArtworkImage.Placeholder.MicrophoneCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ArtworkImage.Placeholder.MicrophoneCodingKeys and conformance ArtworkImage.Placeholder.MicrophoneCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ArtworkImage.Placeholder.MicrophoneCodingKeys and conformance ArtworkImage.Placeholder.MicrophoneCodingKeys;
  if (!lazy protocol witness table cache variable for type ArtworkImage.Placeholder.MicrophoneCodingKeys and conformance ArtworkImage.Placeholder.MicrophoneCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ArtworkImage.Placeholder.MicrophoneCodingKeys and conformance ArtworkImage.Placeholder.MicrophoneCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ArtworkImage.Placeholder.MicrophoneCodingKeys and conformance ArtworkImage.Placeholder.MicrophoneCodingKeys;
  if (!lazy protocol witness table cache variable for type ArtworkImage.Placeholder.MicrophoneCodingKeys and conformance ArtworkImage.Placeholder.MicrophoneCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ArtworkImage.Placeholder.MicrophoneCodingKeys and conformance ArtworkImage.Placeholder.MicrophoneCodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ArtworkImage.Placeholder.TvCodingKeys and conformance ArtworkImage.Placeholder.TvCodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type ArtworkImage.Placeholder.TvCodingKeys and conformance ArtworkImage.Placeholder.TvCodingKeys;
  if (!lazy protocol witness table cache variable for type ArtworkImage.Placeholder.TvCodingKeys and conformance ArtworkImage.Placeholder.TvCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ArtworkImage.Placeholder.TvCodingKeys and conformance ArtworkImage.Placeholder.TvCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ArtworkImage.Placeholder.TvCodingKeys and conformance ArtworkImage.Placeholder.TvCodingKeys;
  if (!lazy protocol witness table cache variable for type ArtworkImage.Placeholder.TvCodingKeys and conformance ArtworkImage.Placeholder.TvCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ArtworkImage.Placeholder.TvCodingKeys and conformance ArtworkImage.Placeholder.TvCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ArtworkImage.Placeholder.TvCodingKeys and conformance ArtworkImage.Placeholder.TvCodingKeys;
  if (!lazy protocol witness table cache variable for type ArtworkImage.Placeholder.TvCodingKeys and conformance ArtworkImage.Placeholder.TvCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ArtworkImage.Placeholder.TvCodingKeys and conformance ArtworkImage.Placeholder.TvCodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ArtworkImage.Placeholder.MusicVideoCodingKeys and conformance ArtworkImage.Placeholder.MusicVideoCodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type ArtworkImage.Placeholder.MusicVideoCodingKeys and conformance ArtworkImage.Placeholder.MusicVideoCodingKeys;
  if (!lazy protocol witness table cache variable for type ArtworkImage.Placeholder.MusicVideoCodingKeys and conformance ArtworkImage.Placeholder.MusicVideoCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ArtworkImage.Placeholder.MusicVideoCodingKeys and conformance ArtworkImage.Placeholder.MusicVideoCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ArtworkImage.Placeholder.MusicVideoCodingKeys and conformance ArtworkImage.Placeholder.MusicVideoCodingKeys;
  if (!lazy protocol witness table cache variable for type ArtworkImage.Placeholder.MusicVideoCodingKeys and conformance ArtworkImage.Placeholder.MusicVideoCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ArtworkImage.Placeholder.MusicVideoCodingKeys and conformance ArtworkImage.Placeholder.MusicVideoCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ArtworkImage.Placeholder.MusicVideoCodingKeys and conformance ArtworkImage.Placeholder.MusicVideoCodingKeys;
  if (!lazy protocol witness table cache variable for type ArtworkImage.Placeholder.MusicVideoCodingKeys and conformance ArtworkImage.Placeholder.MusicVideoCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ArtworkImage.Placeholder.MusicVideoCodingKeys and conformance ArtworkImage.Placeholder.MusicVideoCodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ArtworkImage.Placeholder.PlaylistCodingKeys and conformance ArtworkImage.Placeholder.PlaylistCodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type ArtworkImage.Placeholder.PlaylistCodingKeys and conformance ArtworkImage.Placeholder.PlaylistCodingKeys;
  if (!lazy protocol witness table cache variable for type ArtworkImage.Placeholder.PlaylistCodingKeys and conformance ArtworkImage.Placeholder.PlaylistCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ArtworkImage.Placeholder.PlaylistCodingKeys and conformance ArtworkImage.Placeholder.PlaylistCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ArtworkImage.Placeholder.PlaylistCodingKeys and conformance ArtworkImage.Placeholder.PlaylistCodingKeys;
  if (!lazy protocol witness table cache variable for type ArtworkImage.Placeholder.PlaylistCodingKeys and conformance ArtworkImage.Placeholder.PlaylistCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ArtworkImage.Placeholder.PlaylistCodingKeys and conformance ArtworkImage.Placeholder.PlaylistCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ArtworkImage.Placeholder.PlaylistCodingKeys and conformance ArtworkImage.Placeholder.PlaylistCodingKeys;
  if (!lazy protocol witness table cache variable for type ArtworkImage.Placeholder.PlaylistCodingKeys and conformance ArtworkImage.Placeholder.PlaylistCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ArtworkImage.Placeholder.PlaylistCodingKeys and conformance ArtworkImage.Placeholder.PlaylistCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ArtworkImage.Placeholder.PlaylistCodingKeys and conformance ArtworkImage.Placeholder.PlaylistCodingKeys;
  if (!lazy protocol witness table cache variable for type ArtworkImage.Placeholder.PlaylistCodingKeys and conformance ArtworkImage.Placeholder.PlaylistCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ArtworkImage.Placeholder.PlaylistCodingKeys and conformance ArtworkImage.Placeholder.PlaylistCodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ArtworkImage.Placeholder.NewPlaylistCodingKeys and conformance ArtworkImage.Placeholder.NewPlaylistCodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type ArtworkImage.Placeholder.NewPlaylistCodingKeys and conformance ArtworkImage.Placeholder.NewPlaylistCodingKeys;
  if (!lazy protocol witness table cache variable for type ArtworkImage.Placeholder.NewPlaylistCodingKeys and conformance ArtworkImage.Placeholder.NewPlaylistCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ArtworkImage.Placeholder.NewPlaylistCodingKeys and conformance ArtworkImage.Placeholder.NewPlaylistCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ArtworkImage.Placeholder.NewPlaylistCodingKeys and conformance ArtworkImage.Placeholder.NewPlaylistCodingKeys;
  if (!lazy protocol witness table cache variable for type ArtworkImage.Placeholder.NewPlaylistCodingKeys and conformance ArtworkImage.Placeholder.NewPlaylistCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ArtworkImage.Placeholder.NewPlaylistCodingKeys and conformance ArtworkImage.Placeholder.NewPlaylistCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ArtworkImage.Placeholder.NewPlaylistCodingKeys and conformance ArtworkImage.Placeholder.NewPlaylistCodingKeys;
  if (!lazy protocol witness table cache variable for type ArtworkImage.Placeholder.NewPlaylistCodingKeys and conformance ArtworkImage.Placeholder.NewPlaylistCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ArtworkImage.Placeholder.NewPlaylistCodingKeys and conformance ArtworkImage.Placeholder.NewPlaylistCodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ArtworkImage.Placeholder.NowPlayingCodingKeys and conformance ArtworkImage.Placeholder.NowPlayingCodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type ArtworkImage.Placeholder.NowPlayingCodingKeys and conformance ArtworkImage.Placeholder.NowPlayingCodingKeys;
  if (!lazy protocol witness table cache variable for type ArtworkImage.Placeholder.NowPlayingCodingKeys and conformance ArtworkImage.Placeholder.NowPlayingCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ArtworkImage.Placeholder.NowPlayingCodingKeys and conformance ArtworkImage.Placeholder.NowPlayingCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ArtworkImage.Placeholder.NowPlayingCodingKeys and conformance ArtworkImage.Placeholder.NowPlayingCodingKeys;
  if (!lazy protocol witness table cache variable for type ArtworkImage.Placeholder.NowPlayingCodingKeys and conformance ArtworkImage.Placeholder.NowPlayingCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ArtworkImage.Placeholder.NowPlayingCodingKeys and conformance ArtworkImage.Placeholder.NowPlayingCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ArtworkImage.Placeholder.NowPlayingCodingKeys and conformance ArtworkImage.Placeholder.NowPlayingCodingKeys;
  if (!lazy protocol witness table cache variable for type ArtworkImage.Placeholder.NowPlayingCodingKeys and conformance ArtworkImage.Placeholder.NowPlayingCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ArtworkImage.Placeholder.NowPlayingCodingKeys and conformance ArtworkImage.Placeholder.NowPlayingCodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ArtworkImage.Placeholder.MusicCodingKeys and conformance ArtworkImage.Placeholder.MusicCodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type ArtworkImage.Placeholder.MusicCodingKeys and conformance ArtworkImage.Placeholder.MusicCodingKeys;
  if (!lazy protocol witness table cache variable for type ArtworkImage.Placeholder.MusicCodingKeys and conformance ArtworkImage.Placeholder.MusicCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ArtworkImage.Placeholder.MusicCodingKeys and conformance ArtworkImage.Placeholder.MusicCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ArtworkImage.Placeholder.MusicCodingKeys and conformance ArtworkImage.Placeholder.MusicCodingKeys;
  if (!lazy protocol witness table cache variable for type ArtworkImage.Placeholder.MusicCodingKeys and conformance ArtworkImage.Placeholder.MusicCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ArtworkImage.Placeholder.MusicCodingKeys and conformance ArtworkImage.Placeholder.MusicCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ArtworkImage.Placeholder.MusicCodingKeys and conformance ArtworkImage.Placeholder.MusicCodingKeys;
  if (!lazy protocol witness table cache variable for type ArtworkImage.Placeholder.MusicCodingKeys and conformance ArtworkImage.Placeholder.MusicCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ArtworkImage.Placeholder.MusicCodingKeys and conformance ArtworkImage.Placeholder.MusicCodingKeys);
  }
  return result;
}

uint64_t type metadata accessor for PlaceholderStyleModifier(uint64_t a1)
{
  return type metadata accessor for Notice.Variant(a1, (uint64_t *)&type metadata singleton initialization cache for PlaceholderStyleModifier);
}

uint64_t objectdestroy_8Tm_1()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ArtworkImage.Placeholder.View.Style?)
                 - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = v0 + v2;
  uint64_t v4 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(v0 + v2, 1, v4))
  {
    if (*(void *)(v3 + 24)) {
      __swift_destroy_boxed_opaque_existential_0Tm(v0 + v2);
    }
    if (*(void *)(v3 + 64)) {
      __swift_destroy_boxed_opaque_existential_0Tm(v3 + 40);
    }
    uint64_t v5 = v3 + *(int *)(v4 + 24);
    uint64_t v6 = type metadata accessor for BlendMode();
    uint64_t v7 = *(void *)(v6 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
    }
  }

  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in PlaceholderStyleModifier.init(_:)(uint64_t a1)
{
  uint64_t v3 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ArtworkImage.Placeholder.View.Style?)
                 - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return closure #1 in PlaceholderStyleModifier.init(_:)(a1, v4);
}

uint64_t associated type witness table accessor for View.Body : View in ArtworkImage.Placeholder.View()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t base witness table accessor for Equatable in ArtworkImage.Placeholder()
{
  return lazy protocol witness table accessor for type ArtworkImage.Placeholder.View and conformance ArtworkImage.Placeholder.View(&lazy protocol witness table cache variable for type ArtworkImage.Placeholder and conformance ArtworkImage.Placeholder, (void (*)(uint64_t))type metadata accessor for ArtworkImage.Placeholder);
}

uint64_t associated type witness table accessor for ViewModifier.Body : View in PlaceholderStyleModifier()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t *initializeBufferWithCopyOfBuffer for ArtworkImage.ViewModel(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for Artwork();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for Artwork.CropStyle();
    uint64_t v12 = *(void *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&_s8MusicKit7ArtworkV0aB8InternalE9CropStyleVSgMD_0);
      memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
  }
  return a1;
}

uint64_t destroy for ArtworkImage.ViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Artwork();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = type metadata accessor for Artwork.CropStyle();
  uint64_t v9 = *(void *)(v6 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v5, 1, v6);
  if (!result)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8);
    return v8(v5, v6);
  }
  return result;
}

uint64_t initializeWithCopy for ArtworkImage.ViewModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Artwork();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for Artwork.CropStyle();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&_s8MusicKit7ArtworkV0aB8InternalE9CropStyleVSgMD_0);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  return a1;
}

uint64_t assignWithCopy for ArtworkImage.ViewModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Artwork();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for Artwork.CropStyle();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&_s8MusicKit7ArtworkV0aB8InternalE9CropStyleVSgMD_0);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t initializeWithTake for ArtworkImage.ViewModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Artwork();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for Artwork.CropStyle();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&_s8MusicKit7ArtworkV0aB8InternalE9CropStyleVSgMD_0);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  return a1;
}

uint64_t assignWithTake for ArtworkImage.ViewModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Artwork();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for Artwork.CropStyle();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&_s8MusicKit7ArtworkV0aB8InternalE9CropStyleVSgMD_0);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for ArtworkImage.ViewModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10038626C);
}

uint64_t sub_10038626C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Artwork();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&_s8MusicKit7ArtworkV0aB8InternalE9CropStyleVSgMD_0);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for ArtworkImage.ViewModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10038637C);
}

uint64_t sub_10038637C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for Artwork();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&_s8MusicKit7ArtworkV0aB8InternalE9CropStyleVSgMD_0);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

void type metadata completion function for ArtworkImage.ViewModel()
{
  type metadata accessor for Artwork();
  if (v0 <= 0x3F)
  {
    type metadata accessor for Artwork.CropStyle?(319, &lazy cache variable for type metadata for Artwork.CropStyle?, (uint64_t (*)(uint64_t))&type metadata accessor for Artwork.CropStyle, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for ArtworkImage.Info(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for ArtworkImage.ViewModel(0);
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ArtworkImage.ViewModel?);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      uint64_t v11 = type metadata accessor for Artwork();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
      uint64_t v12 = *(int *)(v7 + 20);
      uint64_t v13 = (char *)a1 + v12;
      uint64_t v14 = (char *)a2 + v12;
      uint64_t v15 = type metadata accessor for Artwork.CropStyle();
      uint64_t v16 = *(void *)(v15 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
      {
        uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&_s8MusicKit7ArtworkV0aB8InternalE9CropStyleVSgMD_0);
        memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      }
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v18 = a3[5];
    uint64_t v19 = (char *)a1 + v18;
    uint64_t v20 = (char *)a2 + v18;
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (type: Playlist.Variant?));
    uint64_t v22 = *(void *)(v21 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 10, v21))
    {
      uint64_t v23 = type metadata accessor for ArtworkImage.Placeholder(0);
      memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      uint64_t v24 = type metadata accessor for Playlist.Variant();
      uint64_t v25 = *(void *)(v24 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v20, 1, v24))
      {
        uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&_s8MusicKit8PlaylistV0aB8InternalE7VariantOSgMD_0);
        memcpy(v19, v20, *(void *)(*(void *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v19, v20, v24);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v19, 0, 1, v24);
      }
      (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 10, v21);
    }
    uint64_t v27 = a3[6];
    uint64_t v28 = a3[7];
    long long v29 = (char *)a1 + v27;
    uint64_t v30 = (char *)a2 + v27;
    *(void *)long long v29 = *(void *)v30;
    v29[8] = v30[8];
    uint64_t v31 = (_OWORD *)((char *)a1 + v28);
    uint64_t v32 = (_OWORD *)((char *)a2 + v28);
    long long v33 = v32[1];
    _OWORD *v31 = *v32;
    v31[1] = v33;
    *(_OWORD *)((char *)v31 + 26) = *(_OWORD *)((char *)v32 + 26);
    uint64_t v34 = a3[8];
    char v35 = (char *)a1 + v34;
    uint64_t v36 = (char *)a2 + v34;
    *(_OWORD *)char v35 = *(_OWORD *)v36;
    v35[16] = v36[16];
  }
  return a1;
}

uint64_t destroy for ArtworkImage.Info(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ArtworkImage.ViewModel(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, 1, v4))
  {
    uint64_t v5 = type metadata accessor for Artwork();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
    uint64_t v6 = a1 + *(int *)(v4 + 20);
    uint64_t v7 = type metadata accessor for Artwork.CropStyle();
    uint64_t v8 = *(void *)(v7 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    }
  }
  uint64_t v9 = a1 + *(int *)(a2 + 20);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (type: Playlist.Variant?));
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v9, 10, v10);
  if (!result)
  {
    uint64_t v12 = type metadata accessor for Playlist.Variant();
    uint64_t v14 = *(void *)(v12 - 8);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v9, 1, v12);
    if (!result)
    {
      uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(v14 + 8);
      return v13(v9, v12);
    }
  }
  return result;
}

char *initializeWithCopy for ArtworkImage.Info(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for ArtworkImage.ViewModel(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ArtworkImage.ViewModel?);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    uint64_t v9 = type metadata accessor for Artwork();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
    uint64_t v10 = *(int *)(v6 + 20);
    uint64_t v11 = &a1[v10];
    uint64_t v12 = &a2[v10];
    uint64_t v13 = type metadata accessor for Artwork.CropStyle();
    uint64_t v14 = *(void *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&_s8MusicKit7ArtworkV0aB8InternalE9CropStyleVSgMD_0);
      memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v16 = a3[5];
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (type: Playlist.Variant?));
  uint64_t v20 = *(void *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 10, v19))
  {
    uint64_t v21 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    uint64_t v22 = type metadata accessor for Playlist.Variant();
    uint64_t v23 = *(void *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v18, 1, v22))
    {
      uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&_s8MusicKit8PlaylistV0aB8InternalE7VariantOSgMD_0);
      memcpy(v17, v18, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v17, v18, v22);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v17, 0, 1, v22);
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 10, v19);
  }
  uint64_t v25 = a3[6];
  uint64_t v26 = a3[7];
  uint64_t v27 = &a1[v25];
  uint64_t v28 = &a2[v25];
  *(void *)uint64_t v27 = *(void *)v28;
  v27[8] = v28[8];
  long long v29 = &a1[v26];
  uint64_t v30 = &a2[v26];
  long long v31 = *((_OWORD *)v30 + 1);
  *(_OWORD *)long long v29 = *(_OWORD *)v30;
  *((_OWORD *)v29 + 1) = v31;
  *(_OWORD *)(v29 + 26) = *(_OWORD *)(v30 + 26);
  uint64_t v32 = a3[8];
  long long v33 = &a1[v32];
  uint64_t v34 = &a2[v32];
  *(_OWORD *)long long v33 = *(_OWORD *)v34;
  v33[16] = v34[16];
  return a1;
}

uint64_t assignWithCopy for ArtworkImage.Info(uint64_t a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for ArtworkImage.ViewModel(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8((uint64_t)a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      uint64_t v21 = type metadata accessor for Artwork();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v21 - 8) + 24))(a1, a2, v21);
      uint64_t v22 = *(int *)(v6 + 20);
      uint64_t v23 = (void *)(a1 + v22);
      uint64_t v24 = &a2[v22];
      uint64_t v25 = type metadata accessor for Artwork.CropStyle();
      uint64_t v26 = *(void *)(v25 - 8);
      uint64_t v27 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v26 + 48);
      int v28 = v27(v23, 1, v25);
      int v29 = v27(v24, 1, v25);
      if (v28)
      {
        if (!v29)
        {
          (*(void (**)(void *, char *, uint64_t))(v26 + 16))(v23, v24, v25);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
          goto LABEL_14;
        }
      }
      else
      {
        if (!v29)
        {
          (*(void (**)(void *, char *, uint64_t))(v26 + 24))(v23, v24, v25);
          goto LABEL_14;
        }
        (*(void (**)(void *, uint64_t))(v26 + 8))(v23, v25);
      }
      size_t v18 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&_s8MusicKit7ArtworkV0aB8InternalE9CropStyleVSgMD_0)
                                  - 8)
                      + 64);
      uint64_t v19 = v23;
      uint64_t v20 = v24;
LABEL_8:
      memcpy(v19, v20, v18);
      goto LABEL_14;
    }
    outlined destroy of ArtworkImage.ViewModel(a1, type metadata accessor for ArtworkImage.ViewModel);
LABEL_7:
    size_t v18 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ArtworkImage.ViewModel?)
                                - 8)
                    + 64);
    uint64_t v19 = (void *)a1;
    uint64_t v20 = a2;
    goto LABEL_8;
  }
  if (v10) {
    goto LABEL_7;
  }
  uint64_t v11 = type metadata accessor for Artwork();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
  uint64_t v12 = *(int *)(v6 + 20);
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = &a2[v12];
  uint64_t v15 = type metadata accessor for Artwork.CropStyle();
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&_s8MusicKit7ArtworkV0aB8InternalE9CropStyleVSgMD_0);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_14:
  uint64_t v30 = a3[5];
  long long v31 = (void *)(a1 + v30);
  uint64_t v32 = &a2[v30];
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (type: Playlist.Variant?));
  uint64_t v34 = *(void *)(v33 - 8);
  char v35 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v34 + 48);
  int v36 = v35(v31, 10, v33);
  int v37 = v35(v32, 10, v33);
  if (!v36)
  {
    if (!v37)
    {
      uint64_t v42 = type metadata accessor for Playlist.Variant();
      uint64_t v43 = *(void *)(v42 - 8);
      long long v44 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v43 + 48);
      int v45 = v44(v31, 1, v42);
      int v46 = v44(v32, 1, v42);
      if (v45)
      {
        if (!v46)
        {
          (*(void (**)(void *, char *, uint64_t))(v43 + 16))(v31, v32, v42);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v43 + 56))(v31, 0, 1, v42);
          goto LABEL_27;
        }
      }
      else
      {
        if (!v46)
        {
          (*(void (**)(void *, char *, uint64_t))(v43 + 24))(v31, v32, v42);
          goto LABEL_27;
        }
        (*(void (**)(void *, uint64_t))(v43 + 8))(v31, v42);
      }
      uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&_s8MusicKit8PlaylistV0aB8InternalE7VariantOSgMD_0);
      goto LABEL_21;
    }
    outlined destroy of TaskPriority?((uint64_t)v31, &demangling cache variable for type metadata for (type: Playlist.Variant?));
LABEL_20:
    uint64_t v41 = type metadata accessor for ArtworkImage.Placeholder(0);
LABEL_21:
    memcpy(v31, v32, *(void *)(*(void *)(v41 - 8) + 64));
    goto LABEL_27;
  }
  if (v37) {
    goto LABEL_20;
  }
  uint64_t v38 = type metadata accessor for Playlist.Variant();
  uint64_t v39 = *(void *)(v38 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v32, 1, v38))
  {
    uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&_s8MusicKit8PlaylistV0aB8InternalE7VariantOSgMD_0);
    memcpy(v31, v32, *(void *)(*(void *)(v40 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v39 + 16))(v31, v32, v38);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v39 + 56))(v31, 0, 1, v38);
  }
  (*(void (**)(void *, void, uint64_t, uint64_t))(v34 + 56))(v31, 0, 10, v33);
LABEL_27:
  uint64_t v47 = a3[6];
  uint64_t v48 = a1 + v47;
  uint64_t v49 = &a2[v47];
  uint64_t v50 = *(void *)v49;
  *(unsigned char *)(v48 + 8) = v49[8];
  *(void *)uint64_t v48 = v50;
  uint64_t v51 = a3[7];
  uint64_t v52 = a1 + v51;
  uint64_t v53 = &a2[v51];
  uint64_t v54 = *(void *)v53;
  *(unsigned char *)(v52 + 8) = v53[8];
  *(void *)uint64_t v52 = v54;
  uint64_t v55 = *((void *)v53 + 2);
  *(unsigned char *)(v52 + 24) = v53[24];
  *(void *)(v52 + 16) = v55;
  uint64_t v56 = *((void *)v53 + 4);
  *(unsigned char *)(v52 + 40) = v53[40];
  *(void *)(v52 + 32) = v56;
  *(unsigned char *)(v52 + 41) = v53[41];
  uint64_t v57 = a3[8];
  uint64_t v58 = a1 + v57;
  uint64_t v59 = &a2[v57];
  long long v60 = *(_OWORD *)v59;
  *(unsigned char *)(v58 + 16) = v59[16];
  *(_OWORD *)uint64_t v58 = v60;
  return a1;
}

char *initializeWithTake for ArtworkImage.Info(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for ArtworkImage.ViewModel(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ArtworkImage.ViewModel?);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    uint64_t v9 = type metadata accessor for Artwork();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
    uint64_t v10 = *(int *)(v6 + 20);
    uint64_t v11 = &a1[v10];
    uint64_t v12 = &a2[v10];
    uint64_t v13 = type metadata accessor for Artwork.CropStyle();
    uint64_t v14 = *(void *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&_s8MusicKit7ArtworkV0aB8InternalE9CropStyleVSgMD_0);
      memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v16 = a3[5];
  uint64_t v17 = &a1[v16];
  size_t v18 = &a2[v16];
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (type: Playlist.Variant?));
  uint64_t v20 = *(void *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 10, v19))
  {
    uint64_t v21 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    uint64_t v22 = type metadata accessor for Playlist.Variant();
    uint64_t v23 = *(void *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v18, 1, v22))
    {
      uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&_s8MusicKit8PlaylistV0aB8InternalE7VariantOSgMD_0);
      memcpy(v17, v18, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v17, v18, v22);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v17, 0, 1, v22);
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 10, v19);
  }
  uint64_t v25 = a3[6];
  uint64_t v26 = a3[7];
  uint64_t v27 = &a1[v25];
  int v28 = &a2[v25];
  *(void *)uint64_t v27 = *(void *)v28;
  v27[8] = v28[8];
  int v29 = &a1[v26];
  uint64_t v30 = &a2[v26];
  long long v31 = *((_OWORD *)v30 + 1);
  *(_OWORD *)int v29 = *(_OWORD *)v30;
  *((_OWORD *)v29 + 1) = v31;
  *(_OWORD *)(v29 + 26) = *(_OWORD *)(v30 + 26);
  uint64_t v32 = a3[8];
  uint64_t v33 = &a1[v32];
  uint64_t v34 = &a2[v32];
  *(_OWORD *)uint64_t v33 = *(_OWORD *)v34;
  v33[16] = v34[16];
  return a1;
}

uint64_t assignWithTake for ArtworkImage.Info(uint64_t a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for ArtworkImage.ViewModel(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8((uint64_t)a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      uint64_t v21 = type metadata accessor for Artwork();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v21 - 8) + 40))(a1, a2, v21);
      uint64_t v22 = *(int *)(v6 + 20);
      uint64_t v23 = (void *)(a1 + v22);
      uint64_t v24 = &a2[v22];
      uint64_t v25 = type metadata accessor for Artwork.CropStyle();
      uint64_t v26 = *(void *)(v25 - 8);
      uint64_t v27 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v26 + 48);
      int v28 = v27(v23, 1, v25);
      int v29 = v27(v24, 1, v25);
      if (v28)
      {
        if (!v29)
        {
          (*(void (**)(void *, char *, uint64_t))(v26 + 32))(v23, v24, v25);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
          goto LABEL_14;
        }
      }
      else
      {
        if (!v29)
        {
          (*(void (**)(void *, char *, uint64_t))(v26 + 40))(v23, v24, v25);
          goto LABEL_14;
        }
        (*(void (**)(void *, uint64_t))(v26 + 8))(v23, v25);
      }
      size_t v18 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&_s8MusicKit7ArtworkV0aB8InternalE9CropStyleVSgMD_0)
                                  - 8)
                      + 64);
      uint64_t v19 = v23;
      uint64_t v20 = v24;
LABEL_8:
      memcpy(v19, v20, v18);
      goto LABEL_14;
    }
    outlined destroy of ArtworkImage.ViewModel(a1, type metadata accessor for ArtworkImage.ViewModel);
LABEL_7:
    size_t v18 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ArtworkImage.ViewModel?)
                                - 8)
                    + 64);
    uint64_t v19 = (void *)a1;
    uint64_t v20 = a2;
    goto LABEL_8;
  }
  if (v10) {
    goto LABEL_7;
  }
  uint64_t v11 = type metadata accessor for Artwork();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
  uint64_t v12 = *(int *)(v6 + 20);
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = &a2[v12];
  uint64_t v15 = type metadata accessor for Artwork.CropStyle();
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&_s8MusicKit7ArtworkV0aB8InternalE9CropStyleVSgMD_0);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_14:
  uint64_t v30 = a3[5];
  long long v31 = (void *)(a1 + v30);
  uint64_t v32 = &a2[v30];
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (type: Playlist.Variant?));
  uint64_t v34 = *(void *)(v33 - 8);
  char v35 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v34 + 48);
  int v36 = v35(v31, 10, v33);
  int v37 = v35(v32, 10, v33);
  if (!v36)
  {
    if (!v37)
    {
      uint64_t v42 = type metadata accessor for Playlist.Variant();
      uint64_t v43 = *(void *)(v42 - 8);
      long long v44 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v43 + 48);
      int v45 = v44(v31, 1, v42);
      int v46 = v44(v32, 1, v42);
      if (v45)
      {
        if (!v46)
        {
          (*(void (**)(void *, char *, uint64_t))(v43 + 32))(v31, v32, v42);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v43 + 56))(v31, 0, 1, v42);
          goto LABEL_27;
        }
      }
      else
      {
        if (!v46)
        {
          (*(void (**)(void *, char *, uint64_t))(v43 + 40))(v31, v32, v42);
          goto LABEL_27;
        }
        (*(void (**)(void *, uint64_t))(v43 + 8))(v31, v42);
      }
      uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&_s8MusicKit8PlaylistV0aB8InternalE7VariantOSgMD_0);
      goto LABEL_21;
    }
    outlined destroy of TaskPriority?((uint64_t)v31, &demangling cache variable for type metadata for (type: Playlist.Variant?));
LABEL_20:
    uint64_t v41 = type metadata accessor for ArtworkImage.Placeholder(0);
LABEL_21:
    memcpy(v31, v32, *(void *)(*(void *)(v41 - 8) + 64));
    goto LABEL_27;
  }
  if (v37) {
    goto LABEL_20;
  }
  uint64_t v38 = type metadata accessor for Playlist.Variant();
  uint64_t v39 = *(void *)(v38 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v32, 1, v38))
  {
    uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&_s8MusicKit8PlaylistV0aB8InternalE7VariantOSgMD_0);
    memcpy(v31, v32, *(void *)(*(void *)(v40 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v39 + 32))(v31, v32, v38);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v39 + 56))(v31, 0, 1, v38);
  }
  (*(void (**)(void *, void, uint64_t, uint64_t))(v34 + 56))(v31, 0, 10, v33);
LABEL_27:
  uint64_t v47 = a3[6];
  uint64_t v48 = a3[7];
  uint64_t v49 = a1 + v47;
  uint64_t v50 = &a2[v47];
  *(void *)uint64_t v49 = *(void *)v50;
  *(unsigned char *)(v49 + 8) = v50[8];
  uint64_t v51 = a1 + v48;
  uint64_t v52 = &a2[v48];
  *(void *)uint64_t v51 = *(void *)v52;
  *(unsigned char *)(v51 + 8) = v52[8];
  *(void *)(v51 + 16) = *((void *)v52 + 2);
  *(unsigned char *)(v51 + 24) = v52[24];
  *(unsigned char *)(v51 + 40) = v52[40];
  *(void *)(v51 + 32) = *((void *)v52 + 4);
  *(unsigned char *)(v51 + 41) = v52[41];
  uint64_t v53 = a3[8];
  uint64_t v54 = a1 + v53;
  uint64_t v55 = &a2[v53];
  *(_OWORD *)uint64_t v54 = *(_OWORD *)v55;
  *(unsigned char *)(v54 + 16) = v55[16];
  return a1;
}

uint64_t getEnumTagSinglePayload for ArtworkImage.Info(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003882C0);
}

uint64_t sub_1003882C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ArtworkImage.ViewModel?);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    int v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = type metadata accessor for ArtworkImage.Placeholder(0);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    int v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 28) + 41) <= 2u) {
    int v14 = 2;
  }
  else {
    int v14 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 28) + 41);
  }
  unsigned int v15 = v14 - 2;
  if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 28) + 41) >= 2u) {
    return v15;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ArtworkImage.Info(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003883F8);
}

uint64_t sub_1003883F8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ArtworkImage.ViewModel?);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = type metadata accessor for ArtworkImage.Placeholder(0);
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(unsigned char *)(a1 + *(int *)(a4 + 28) + 41) = a2 + 2;
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

void type metadata completion function for ArtworkImage.Info()
{
  type metadata accessor for Artwork.CropStyle?(319, &lazy cache variable for type metadata for ArtworkImage.ViewModel?, type metadata accessor for ArtworkImage.ViewModel, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if (v0 <= 0x3F)
  {
    type metadata accessor for ArtworkImage.Placeholder(319);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void type metadata accessor for Artwork.CropStyle?(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t getEnumTagSinglePayload for ArtworkImage.Size(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 42)) {
    return (*(_DWORD *)a1 + 254);
  }
  if (*(unsigned __int8 *)(a1 + 41) <= 2u) {
    int v3 = 2;
  }
  else {
    int v3 = *(unsigned __int8 *)(a1 + 41);
  }
  int v4 = v3 - 3;
  if (*(unsigned __int8 *)(a1 + 41) < 2u) {
    int v5 = -1;
  }
  else {
    int v5 = v4;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ArtworkImage.Size(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 40) = 0;
    *(void *)uint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 42) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 42) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 41) = a2 + 2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ArtworkImage.Size()
{
  return &type metadata for ArtworkImage.Size;
}

uint64_t *initializeBufferWithCopyOfBuffer for ArtworkImage.Placeholder(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (type: Playlist.Variant?));
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 10, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v10 = type metadata accessor for Playlist.Variant();
      uint64_t v11 = *(void *)(v10 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v11 + 48))(a2, 1, v10))
      {
        uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&_s8MusicKit8PlaylistV0aB8InternalE7VariantOSgMD_0);
        memcpy(a1, a2, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v11 + 16))(a1, a2, v10);
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v11 + 56))(a1, 0, 1, v10);
      }
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 10, v7);
    }
  }
  return a1;
}

uint64_t destroy for ArtworkImage.Placeholder(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (type: Playlist.Variant?));
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(a1, 10, v2);
  if (!result)
  {
    uint64_t v4 = type metadata accessor for Playlist.Variant();
    uint64_t v6 = *(void *)(v4 - 8);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v4);
    if (!result)
    {
      int v5 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
      return v5(a1, v4);
    }
  }
  return result;
}

void *initializeWithCopy for ArtworkImage.Placeholder(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (type: Playlist.Variant?));
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 10, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v8 = type metadata accessor for Playlist.Variant();
    uint64_t v9 = *(void *)(v8 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8))
    {
      uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&_s8MusicKit8PlaylistV0aB8InternalE7VariantOSgMD_0);
      memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 16))(a1, a2, v8);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 10, v6);
  }
  return a1;
}

void *assignWithCopy for ArtworkImage.Placeholder(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (type: Playlist.Variant?));
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 10, v6);
  int v10 = v8(a2, 10, v6);
  if (!v9)
  {
    if (!v10)
    {
      uint64_t v15 = type metadata accessor for Playlist.Variant();
      uint64_t v16 = *(void *)(v15 - 8);
      uint64_t v17 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48);
      int v18 = v17(a1, 1, v15);
      int v19 = v17(a2, 1, v15);
      if (v18)
      {
        if (!v19)
        {
          (*(void (**)(void *, void *, uint64_t))(v16 + 16))(a1, a2, v15);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(a1, 0, 1, v15);
          return a1;
        }
      }
      else
      {
        if (!v19)
        {
          (*(void (**)(void *, void *, uint64_t))(v16 + 24))(a1, a2, v15);
          return a1;
        }
        (*(void (**)(void *, uint64_t))(v16 + 8))(a1, v15);
      }
      size_t v14 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&_s8MusicKit8PlaylistV0aB8InternalE7VariantOSgMD_0)
                                  - 8)
                      + 64);
      goto LABEL_8;
    }
    outlined destroy of TaskPriority?((uint64_t)a1, &demangling cache variable for type metadata for (type: Playlist.Variant?));
LABEL_7:
    size_t v14 = *(void *)(*(void *)(a3 - 8) + 64);
LABEL_8:
    memcpy(a1, a2, v14);
    return a1;
  }
  if (v10) {
    goto LABEL_7;
  }
  uint64_t v11 = type metadata accessor for Playlist.Variant();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&_s8MusicKit8PlaylistV0aB8InternalE7VariantOSgMD_0);
    memcpy(a1, a2, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v12 + 16))(a1, a2, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
  }
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 10, v6);
  return a1;
}

void *initializeWithTake for ArtworkImage.Placeholder(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (type: Playlist.Variant?));
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 10, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v8 = type metadata accessor for Playlist.Variant();
    uint64_t v9 = *(void *)(v8 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8))
    {
      uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&_s8MusicKit8PlaylistV0aB8InternalE7VariantOSgMD_0);
      memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 32))(a1, a2, v8);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 10, v6);
  }
  return a1;
}

void *assignWithTake for ArtworkImage.Placeholder(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (type: Playlist.Variant?));
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 10, v6);
  int v10 = v8(a2, 10, v6);
  if (!v9)
  {
    if (!v10)
    {
      uint64_t v15 = type metadata accessor for Playlist.Variant();
      uint64_t v16 = *(void *)(v15 - 8);
      uint64_t v17 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48);
      int v18 = v17(a1, 1, v15);
      int v19 = v17(a2, 1, v15);
      if (v18)
      {
        if (!v19)
        {
          (*(void (**)(void *, void *, uint64_t))(v16 + 32))(a1, a2, v15);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(a1, 0, 1, v15);
          return a1;
        }
      }
      else
      {
        if (!v19)
        {
          (*(void (**)(void *, void *, uint64_t))(v16 + 40))(a1, a2, v15);
          return a1;
        }
        (*(void (**)(void *, uint64_t))(v16 + 8))(a1, v15);
      }
      size_t v14 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&_s8MusicKit8PlaylistV0aB8InternalE7VariantOSgMD_0)
                                  - 8)
                      + 64);
      goto LABEL_8;
    }
    outlined destroy of TaskPriority?((uint64_t)a1, &demangling cache variable for type metadata for (type: Playlist.Variant?));
LABEL_7:
    size_t v14 = *(void *)(*(void *)(a3 - 8) + 64);
LABEL_8:
    memcpy(a1, a2, v14);
    return a1;
  }
  if (v10) {
    goto LABEL_7;
  }
  uint64_t v11 = type metadata accessor for Playlist.Variant();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&_s8MusicKit8PlaylistV0aB8InternalE7VariantOSgMD_0);
    memcpy(a1, a2, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v12 + 32))(a1, a2, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
  }
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 10, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for ArtworkImage.Placeholder(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003894A4);
}

uint64_t sub_1003894A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (type: Playlist.Variant?));
  unsigned int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 0xB) {
    return v5 - 10;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ArtworkImage.Placeholder(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100389528);
}

uint64_t sub_100389528(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 10);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (type: Playlist.Variant?));
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(a1, v5, a3, v6);
}

uint64_t getEnumTag for ArtworkImage.Placeholder(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (type: Playlist.Variant?));
  int v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48);

  return v3(a1, 10, v2);
}

uint64_t destructiveInjectEnumTag for ArtworkImage.Placeholder(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (type: Playlist.Variant?));
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, 10, v4);
}

void type metadata completion function for ArtworkImage.Placeholder()
{
  type metadata accessor for Artwork.CropStyle?(319, &_s8MusicKit8PlaylistV0aB8InternalE7VariantOSgML_0, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Variant, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if (v0 <= 0x3F) {
    swift_initEnumMetadataSinglePayload();
  }
}

uint64_t initializeBufferWithCopyOfBuffer for ArtworkImage.Placeholder.View(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *(void *)a1 = *a2;
    a1 = v14 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    *(void *)(a1 + 16) = a2[2];
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
    uint64_t v8 = *(int *)(a3 + 32);
    int v9 = (_OWORD *)(a1 + v8);
    int v10 = (_OWORD *)((char *)a2 + v8);
    *(void *)(a1 + 40) = a2[5];
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ArtworkImage.Placeholder.View.Style?>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
      uint64_t v12 = *(void *)(v11 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
      {
        uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ArtworkImage.Placeholder.View.Style?);
        memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        uint64_t v15 = *((void *)v10 + 3);
        if (v15)
        {
          uint64_t v16 = *((void *)v10 + 4);
          *((void *)v9 + 3) = v15;
          *((void *)v9 + 4) = v16;
          (**(void (***)(_OWORD *, _OWORD *))(v15 - 8))(v9, v10);
        }
        else
        {
          long long v17 = v10[1];
          _OWORD *v9 = *v10;
          v9[1] = v17;
          *((void *)v9 + 4) = *((void *)v10 + 4);
        }
        int v18 = (_OWORD *)((char *)v9 + 40);
        int v19 = (_OWORD *)((char *)v10 + 40);
        uint64_t v20 = *((void *)v10 + 8);
        if (v20)
        {
          uint64_t v21 = *((void *)v10 + 9);
          *((void *)v9 + 8) = v20;
          *((void *)v9 + 9) = v21;
          (**(void (***)(_OWORD *, _OWORD *))(v20 - 8))(v18, v19);
        }
        else
        {
          long long v22 = *(_OWORD *)((char *)v10 + 56);
          *int v18 = *v19;
          *(_OWORD *)((char *)v9 + 56) = v22;
          *((void *)v9 + 9) = *((void *)v10 + 9);
        }
        uint64_t v23 = *(int *)(v11 + 24);
        __dst = (char *)v9 + v23;
        uint64_t v24 = (char *)v10 + v23;
        uint64_t v25 = type metadata accessor for BlendMode();
        uint64_t v26 = *(void *)(v25 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
        {
          uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for BlendMode?);
          memcpy(__dst, v24, *(void *)(*(void *)(v27 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v26 + 16))(__dst, v24, v25);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(__dst, 0, 1, v25);
        }
        (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      }
    }
    else
    {
      *(void *)int v9 = *(void *)v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v28 = *(int *)(a3 + 36);
    int v29 = (void *)(a1 + v28);
    uint64_t v30 = (uint64_t *)((char *)a2 + v28);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ColorSchemeContrast>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v31 = type metadata accessor for ColorSchemeContrast();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
    }
    else
    {
      void *v29 = *v30;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for ArtworkImage.Placeholder.View(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ArtworkImage.Placeholder.View.Style?>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5))
    {
      if (*(void *)(v4 + 24)) {
        __swift_destroy_boxed_opaque_existential_0Tm(v4);
      }
      if (*(void *)(v4 + 64)) {
        __swift_destroy_boxed_opaque_existential_0Tm(v4 + 40);
      }
      uint64_t v6 = v4 + *(int *)(v5 + 24);
      uint64_t v7 = type metadata accessor for BlendMode();
      uint64_t v8 = *(void *)(v7 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
        (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
      }
    }
  }
  else
  {
    swift_release();
  }
  uint64_t v9 = a1 + *(int *)(a2 + 36);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ColorSchemeContrast>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = type metadata accessor for ColorSchemeContrast();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
    return v11(v9, v10);
  }
  else
  {
    return swift_release();
  }
}

uint64_t initializeWithCopy for ArtworkImage.Placeholder.View(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v7 = *(int *)(a3 + 32);
  uint64_t v8 = (_OWORD *)(a1 + v7);
  uint64_t v9 = (_OWORD *)(a2 + v7);
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ArtworkImage.Placeholder.View.Style?>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ArtworkImage.Placeholder.View.Style?);
      memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      uint64_t v13 = *((void *)v9 + 3);
      if (v13)
      {
        uint64_t v14 = *((void *)v9 + 4);
        *((void *)v8 + 3) = v13;
        *((void *)v8 + 4) = v14;
        (**(void (***)(_OWORD *, _OWORD *))(v13 - 8))(v8, v9);
      }
      else
      {
        long long v15 = v9[1];
        *uint64_t v8 = *v9;
        v8[1] = v15;
        *((void *)v8 + 4) = *((void *)v9 + 4);
      }
      uint64_t v16 = (_OWORD *)((char *)v8 + 40);
      long long v17 = (_OWORD *)((char *)v9 + 40);
      uint64_t v18 = *((void *)v9 + 8);
      if (v18)
      {
        uint64_t v19 = *((void *)v9 + 9);
        *((void *)v8 + 8) = v18;
        *((void *)v8 + 9) = v19;
        (**(void (***)(_OWORD *, _OWORD *))(v18 - 8))(v16, v17);
      }
      else
      {
        long long v20 = *(_OWORD *)((char *)v9 + 56);
        _OWORD *v16 = *v17;
        *(_OWORD *)((char *)v8 + 56) = v20;
        *((void *)v8 + 9) = *((void *)v9 + 9);
      }
      uint64_t v21 = *(int *)(v10 + 24);
      __dst = (char *)v8 + v21;
      long long v22 = (char *)v9 + v21;
      uint64_t v23 = type metadata accessor for BlendMode();
      uint64_t v24 = *(void *)(v23 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
      {
        uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for BlendMode?);
        memcpy(__dst, v22, *(void *)(*(void *)(v25 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v24 + 16))(__dst, v22, v23);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(__dst, 0, 1, v23);
      }
      (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
  }
  else
  {
    *(void *)uint64_t v8 = *(void *)v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v26 = *(int *)(a3 + 36);
  uint64_t v27 = (void *)(a1 + v26);
  uint64_t v28 = (void *)(a2 + v26);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ColorSchemeContrast>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v29 = type metadata accessor for ColorSchemeContrast();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
  }
  else
  {
    void *v27 = *v28;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *assignWithCopy for ArtworkImage.Placeholder.View(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 32);
    uint64_t v7 = (_OWORD *)((char *)a1 + v6);
    uint64_t v8 = (long long *)((char *)a2 + v6);
    outlined destroy of TaskPriority?((uint64_t)a1 + v6, &demangling cache variable for type metadata for Environment<ArtworkImage.Placeholder.View.Style?>.Content);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ArtworkImage.Placeholder.View.Style?>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
      uint64_t v10 = *(void *)(v9 - 8);
      if ((*(unsigned int (**)(long long *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
      {
        uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ArtworkImage.Placeholder.View.Style?);
        memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
      }
      else
      {
        uint64_t v12 = *((void *)v8 + 3);
        if (v12)
        {
          *((void *)v7 + 3) = v12;
          *((void *)v7 + 4) = *((void *)v8 + 4);
          (**(void (***)(_OWORD *, long long *))(v12 - 8))(v7, v8);
        }
        else
        {
          long long v13 = *v8;
          long long v14 = v8[1];
          *((void *)v7 + 4) = *((void *)v8 + 4);
          _OWORD *v7 = v13;
          v7[1] = v14;
        }
        long long v15 = (_OWORD *)((char *)v7 + 40);
        uint64_t v16 = (long long *)((char *)v8 + 40);
        uint64_t v17 = *((void *)v8 + 8);
        if (v17)
        {
          *((void *)v7 + 8) = v17;
          *((void *)v7 + 9) = *((void *)v8 + 9);
          (**(void (***)(_OWORD *, long long *))(v17 - 8))(v15, v16);
        }
        else
        {
          long long v18 = *v16;
          long long v19 = *(long long *)((char *)v8 + 56);
          *((void *)v7 + 9) = *((void *)v8 + 9);
          *long long v15 = v18;
          *(_OWORD *)((char *)v7 + 56) = v19;
        }
        uint64_t v20 = *(int *)(v9 + 24);
        __dst = (char *)v7 + v20;
        uint64_t v21 = (char *)v8 + v20;
        uint64_t v22 = type metadata accessor for BlendMode();
        uint64_t v23 = *(void *)(v22 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
        {
          uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for BlendMode?);
          memcpy(__dst, v21, *(void *)(*(void *)(v24 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v23 + 16))(__dst, v21, v22);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(__dst, 0, 1, v22);
        }
        (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      }
    }
    else
    {
      *(void *)uint64_t v7 = *(void *)v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v25 = *(int *)(a3 + 36);
    uint64_t v26 = (void *)((char *)a1 + v25);
    uint64_t v27 = (void *)((char *)a2 + v25);
    outlined destroy of TaskPriority?((uint64_t)a1 + v25, &demangling cache variable for type metadata for Environment<ColorSchemeContrast>.Content);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ColorSchemeContrast>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v28 = type metadata accessor for ColorSchemeContrast();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
    }
    else
    {
      void *v26 = *v27;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t initializeWithTake for ArtworkImage.Placeholder.View(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v6 = *(int *)(a3 + 32);
  uint64_t v7 = (_OWORD *)(a1 + v6);
  uint64_t v8 = (_OWORD *)(a2 + v6);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ArtworkImage.Placeholder.View.Style?>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10))
    {
      uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ArtworkImage.Placeholder.View.Style?);
      memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      long long v13 = v8[1];
      _OWORD *v7 = *v8;
      v7[1] = v13;
      *((void *)v7 + 4) = *((void *)v8 + 4);
      *(_OWORD *)((char *)v7 + 40) = *(_OWORD *)((char *)v8 + 40);
      *(_OWORD *)((char *)v7 + 56) = *(_OWORD *)((char *)v8 + 56);
      *((void *)v7 + 9) = *((void *)v8 + 9);
      uint64_t v14 = *(int *)(v10 + 24);
      __dst = (char *)v7 + v14;
      long long v15 = (char *)v8 + v14;
      uint64_t v16 = type metadata accessor for BlendMode();
      uint64_t v17 = *(void *)(v16 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
      {
        uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for BlendMode?);
        memcpy(__dst, v15, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v17 + 32))(__dst, v15, v16);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(__dst, 0, 1, v16);
      }
      (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  uint64_t v19 = *(int *)(a3 + 36);
  uint64_t v20 = (void *)(a1 + v19);
  uint64_t v21 = (const void *)(a2 + v19);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ColorSchemeContrast>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v23 = type metadata accessor for ColorSchemeContrast();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v23 - 8) + 32))(v20, v21, v23);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
  }
  return a1;
}

uint64_t assignWithTake for ArtworkImage.Placeholder.View(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  long long v7 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v7;
  if (a1 != a2)
  {
    uint64_t v8 = *(int *)(a3 + 32);
    uint64_t v9 = (_OWORD *)(a1 + v8);
    uint64_t v10 = (_OWORD *)(a2 + v8);
    outlined destroy of TaskPriority?(a1 + v8, &demangling cache variable for type metadata for Environment<ArtworkImage.Placeholder.View.Style?>.Content);
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ArtworkImage.Placeholder.View.Style?>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
      uint64_t v13 = *(void *)(v12 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12))
      {
        uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ArtworkImage.Placeholder.View.Style?);
        memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        long long v15 = v10[1];
        _OWORD *v9 = *v10;
        v9[1] = v15;
        *((void *)v9 + 4) = *((void *)v10 + 4);
        *(_OWORD *)((char *)v9 + 40) = *(_OWORD *)((char *)v10 + 40);
        *(_OWORD *)((char *)v9 + 56) = *(_OWORD *)((char *)v10 + 56);
        *((void *)v9 + 9) = *((void *)v10 + 9);
        uint64_t v16 = *(int *)(v12 + 24);
        __dst = (char *)v9 + v16;
        uint64_t v17 = (char *)v10 + v16;
        uint64_t v18 = type metadata accessor for BlendMode();
        uint64_t v19 = *(void *)(v18 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
        {
          uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for BlendMode?);
          memcpy(__dst, v17, *(void *)(*(void *)(v20 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v19 + 32))(__dst, v17, v18);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(__dst, 0, 1, v18);
        }
        (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v12);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
    }
    uint64_t v21 = *(int *)(a3 + 36);
    uint64_t v22 = (void *)(a1 + v21);
    uint64_t v23 = (const void *)(a2 + v21);
    outlined destroy of TaskPriority?(a1 + v21, &demangling cache variable for type metadata for Environment<ColorSchemeContrast>.Content);
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ColorSchemeContrast>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v25 = type metadata accessor for ColorSchemeContrast();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v25 - 8) + 32))(v22, v23, v25);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for ArtworkImage.Placeholder.View(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10038ABD8);
}

uint64_t sub_10038ABD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ArtworkImage.Placeholder.View.Style?>);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 32);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ColorSchemeContrast>);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 36);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for ArtworkImage.Placeholder.View(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10038AD20);
}

uint64_t sub_10038AD20(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ArtworkImage.Placeholder.View.Style?>);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 32);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ColorSchemeContrast>);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 36);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void type metadata completion function for ArtworkImage.Placeholder.View()
{
  type metadata accessor for Environment<ArtworkImage.Placeholder.View.Style?>.Content();
  if (v0 <= 0x3F)
  {
    type metadata accessor for Artwork.CropStyle?(319, &lazy cache variable for type metadata for Environment<ColorSchemeContrast>.Content, (uint64_t (*)(uint64_t))&type metadata accessor for ColorSchemeContrast, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void type metadata accessor for Environment<ArtworkImage.Placeholder.View.Style?>.Content()
{
  if (!lazy cache variable for type metadata for Environment<ArtworkImage.Placeholder.View.Style?>.Content)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ArtworkImage.Placeholder.View.Style?);
    unint64_t v0 = type metadata accessor for Environment.Content();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for Environment<ArtworkImage.Placeholder.View.Style?>.Content);
    }
  }
}

uint64_t initializeBufferWithCopyOfBuffer for ArtworkImage.Placeholder.View.Style(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *(void *)uint64_t v4 = *a2;
    uint64_t v4 = v9 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[3];
    if (v7)
    {
      uint64_t v8 = a2[4];
      *(void *)(a1 + 24) = v7;
      *(void *)(a1 + 32) = v8;
      (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    }
    else
    {
      long long v10 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v10;
      *(void *)(a1 + 32) = a2[4];
    }
    uint64_t v11 = (_OWORD *)(v4 + 40);
    uint64_t v12 = a2 + 5;
    uint64_t v13 = a2[8];
    if (v13)
    {
      uint64_t v14 = a2[9];
      *(void *)(v4 + 64) = v13;
      *(void *)(v4 + 72) = v14;
      (**(void (***)(_OWORD *, _OWORD *))(v13 - 8))(v11, v12);
    }
    else
    {
      long long v15 = *(_OWORD *)(a2 + 7);
      *uint64_t v11 = *v12;
      *(_OWORD *)(v4 + 56) = v15;
      *(void *)(v4 + 72) = a2[9];
    }
    uint64_t v16 = *(int *)(a3 + 24);
    uint64_t v17 = (void *)(v4 + v16);
    uint64_t v18 = (char *)a2 + v16;
    uint64_t v19 = type metadata accessor for BlendMode();
    uint64_t v20 = *(void *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
    {
      uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for BlendMode?);
      memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    }
  }
  return v4;
}

uint64_t destroy for ArtworkImage.Placeholder.View.Style(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24)) {
    __swift_destroy_boxed_opaque_existential_0Tm(a1);
  }
  if (*(void *)(a1 + 64)) {
    __swift_destroy_boxed_opaque_existential_0Tm(a1 + 40);
  }
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = type metadata accessor for BlendMode();
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
    return v7(v4, v5);
  }
  return result;
}

uint64_t initializeWithCopy for ArtworkImage.Placeholder.View.Style(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 24);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 32);
    *(void *)(a1 + 24) = v6;
    *(void *)(a1 + 32) = v7;
    (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1, a2);
  }
  else
  {
    long long v8 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v8;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
  }
  uint64_t v9 = (_OWORD *)(a1 + 40);
  long long v10 = (_OWORD *)(a2 + 40);
  uint64_t v11 = *(void *)(a2 + 64);
  if (v11)
  {
    uint64_t v12 = *(void *)(a2 + 72);
    *(void *)(a1 + 64) = v11;
    *(void *)(a1 + 72) = v12;
    (**(void (***)(_OWORD *, _OWORD *))(v11 - 8))(v9, v10);
  }
  else
  {
    long long v13 = *(_OWORD *)(a2 + 56);
    _OWORD *v9 = *v10;
    *(_OWORD *)(a1 + 56) = v13;
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
  }
  uint64_t v14 = *(int *)(a3 + 24);
  long long v15 = (void *)(a1 + v14);
  uint64_t v16 = (const void *)(a2 + v14);
  uint64_t v17 = type metadata accessor for BlendMode();
  uint64_t v18 = *(void *)(v17 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for BlendMode?);
    memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v18 + 16))(v15, v16, v17);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  return a1;
}

uint64_t assignWithCopy for ArtworkImage.Placeholder.View.Style(uint64_t a1, long long *a2, uint64_t a3)
{
  uint64_t v6 = *((void *)a2 + 3);
  if (*(void *)(a1 + 24))
  {
    if (v6)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, (uint64_t *)a2);
      goto LABEL_8;
    }
    __swift_destroy_boxed_opaque_existential_0Tm(a1);
  }
  else if (v6)
  {
    *(void *)(a1 + 24) = v6;
    *(void *)(a1 + 32) = *((void *)a2 + 4);
    (**(void (***)(uint64_t, long long *))(v6 - 8))(a1, a2);
    goto LABEL_8;
  }
  long long v7 = *a2;
  long long v8 = a2[1];
  *(void *)(a1 + 32) = *((void *)a2 + 4);
  *(_OWORD *)a1 = v7;
  *(_OWORD *)(a1 + 16) = v8;
LABEL_8:
  uint64_t v9 = *((void *)a2 + 8);
  if (*(void *)(a1 + 64))
  {
    if (v9)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 40), (uint64_t *)a2 + 5);
      goto LABEL_15;
    }
    __swift_destroy_boxed_opaque_existential_0Tm(a1 + 40);
  }
  else if (v9)
  {
    *(void *)(a1 + 64) = v9;
    *(void *)(a1 + 72) = *((void *)a2 + 9);
    (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1 + 40, (uint64_t)a2 + 40);
    goto LABEL_15;
  }
  long long v10 = *(long long *)((char *)a2 + 40);
  long long v11 = *(long long *)((char *)a2 + 56);
  *(void *)(a1 + 72) = *((void *)a2 + 9);
  *(_OWORD *)(a1 + 40) = v10;
  *(_OWORD *)(a1 + 56) = v11;
LABEL_15:
  uint64_t v12 = *(int *)(a3 + 24);
  long long v13 = (void *)(a1 + v12);
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = type metadata accessor for BlendMode();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48);
  int v18 = v17(v13, 1, v15);
  int v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(void *, char *, uint64_t))(v16 + 24))(v13, v14, v15);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v16 + 8))(v13, v15);
    goto LABEL_20;
  }
  if (v19)
  {
LABEL_20:
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for BlendMode?);
    memcpy(v13, v14, *(void *)(*(void *)(v20 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  return a1;
}

uint64_t initializeWithTake for ArtworkImage.Placeholder.View.Style(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = (const void *)(a2 + v5);
  long long v7 = (void *)(a1 + v5);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  uint64_t v8 = type metadata accessor for BlendMode();
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8))
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for BlendMode?);
    memcpy(v7, v6, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v9 + 32))(v7, v6, v8);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
  }
  return a1;
}

uint64_t assignWithTake for ArtworkImage.Placeholder.View.Style(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a1 + 24)) {
    __swift_destroy_boxed_opaque_existential_0Tm(a1);
  }
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  if (*(void *)(a1 + 64)) {
    __swift_destroy_boxed_opaque_existential_0Tm(a1 + 40);
  }
  long long v7 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = v7;
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  uint64_t v11 = type metadata accessor for BlendMode();
  uint64_t v12 = *(void *)(v11 - 8);
  long long v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 40))(v9, v10, v11);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_10;
  }
  if (v15)
  {
LABEL_10:
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for BlendMode?);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for ArtworkImage.Placeholder.View.Style(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10038BA48);
}

uint64_t sub_10038BA48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for BlendMode?);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 24);
    return v10(v12, a2, v11);
  }
}

uint64_t storeEnumTagSinglePayload for ArtworkImage.Placeholder.View.Style(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10038BB1C);
}

uint64_t sub_10038BB1C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 24) = a2;
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for BlendMode?);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void type metadata completion function for ArtworkImage.Placeholder.View.Style()
{
  type metadata accessor for Artwork.CropStyle?(319, &lazy cache variable for type metadata for BlendMode?, (uint64_t (*)(uint64_t))&type metadata accessor for BlendMode, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void *initializeBufferWithCopyOfBuffer for PlaceholderStyleModifier(void *a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    *a1 = v5;
    a1 = (void *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    *a1 = v5;
    a1[1] = v6;
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = (_OWORD *)((char *)a1 + v7);
    uint64_t v9 = (_OWORD *)((char *)a2 + v7);
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ArtworkImage.Placeholder.View.Style?>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
      uint64_t v11 = *(void *)(v10 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      {
        uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ArtworkImage.Placeholder.View.Style?);
        memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        uint64_t v13 = *((void *)v9 + 3);
        if (v13)
        {
          uint64_t v14 = *((void *)v9 + 4);
          *((void *)v8 + 3) = v13;
          *((void *)v8 + 4) = v14;
          (**(void (***)(_OWORD *, _OWORD *))(v13 - 8))(v8, v9);
        }
        else
        {
          long long v15 = v9[1];
          *uint64_t v8 = *v9;
          v8[1] = v15;
          *((void *)v8 + 4) = *((void *)v9 + 4);
        }
        uint64_t v16 = (_OWORD *)((char *)v8 + 40);
        uint64_t v17 = (_OWORD *)((char *)v9 + 40);
        uint64_t v18 = *((void *)v9 + 8);
        if (v18)
        {
          uint64_t v19 = *((void *)v9 + 9);
          *((void *)v8 + 8) = v18;
          *((void *)v8 + 9) = v19;
          (**(void (***)(_OWORD *, _OWORD *))(v18 - 8))(v16, v17);
        }
        else
        {
          long long v20 = *(_OWORD *)((char *)v9 + 56);
          _OWORD *v16 = *v17;
          *(_OWORD *)((char *)v8 + 56) = v20;
          *((void *)v8 + 9) = *((void *)v9 + 9);
        }
        uint64_t v21 = *(int *)(v10 + 24);
        uint64_t v22 = (char *)v8 + v21;
        uint64_t v23 = (char *)v9 + v21;
        uint64_t v24 = type metadata accessor for BlendMode();
        uint64_t v25 = *(void *)(v24 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
        {
          uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for BlendMode?);
          memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v22, v23, v24);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
        }
        (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      }
    }
    else
    {
      *(void *)uint64_t v8 = *(void *)v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for PlaceholderStyleModifier(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ArtworkImage.Placeholder.View.Style?>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5);
    if (!result)
    {
      if (*(void *)(v4 + 24)) {
        __swift_destroy_boxed_opaque_existential_0Tm(v4);
      }
      if (*(void *)(v4 + 64)) {
        __swift_destroy_boxed_opaque_existential_0Tm(v4 + 40);
      }
      uint64_t v7 = v4 + *(int *)(v5 + 24);
      uint64_t v8 = type metadata accessor for BlendMode();
      uint64_t v10 = *(void *)(v8 - 8);
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v7, 1, v8);
      if (!result)
      {
        uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
        return v9(v7, v8);
      }
    }
  }
  else
  {
    return swift_release();
  }
  return result;
}

void *initializeWithCopy for PlaceholderStyleModifier(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (_OWORD *)((char *)a1 + v5);
  uint64_t v7 = (_OWORD *)((char *)a2 + v5);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ArtworkImage.Placeholder.View.Style?>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
    uint64_t v9 = *(void *)(v8 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
    {
      uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ArtworkImage.Placeholder.View.Style?);
      memcpy(v6, v7, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      uint64_t v11 = *((void *)v7 + 3);
      if (v11)
      {
        uint64_t v12 = *((void *)v7 + 4);
        *((void *)v6 + 3) = v11;
        *((void *)v6 + 4) = v12;
        (**(void (***)(_OWORD *, _OWORD *))(v11 - 8))(v6, v7);
      }
      else
      {
        long long v13 = v7[1];
        *uint64_t v6 = *v7;
        v6[1] = v13;
        *((void *)v6 + 4) = *((void *)v7 + 4);
      }
      uint64_t v14 = (_OWORD *)((char *)v6 + 40);
      long long v15 = (_OWORD *)((char *)v7 + 40);
      uint64_t v16 = *((void *)v7 + 8);
      if (v16)
      {
        uint64_t v17 = *((void *)v7 + 9);
        *((void *)v6 + 8) = v16;
        *((void *)v6 + 9) = v17;
        (**(void (***)(_OWORD *, _OWORD *))(v16 - 8))(v14, v15);
      }
      else
      {
        long long v18 = *(_OWORD *)((char *)v7 + 56);
        _OWORD *v14 = *v15;
        *(_OWORD *)((char *)v6 + 56) = v18;
        *((void *)v6 + 9) = *((void *)v7 + 9);
      }
      uint64_t v19 = *(int *)(v8 + 24);
      long long v20 = (char *)v6 + v19;
      uint64_t v21 = (char *)v7 + v19;
      uint64_t v22 = type metadata accessor for BlendMode();
      uint64_t v23 = *(void *)(v22 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
      {
        uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for BlendMode?);
        memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v20, v21, v22);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
      }
      (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
    }
  }
  else
  {
    *(void *)uint64_t v6 = *(void *)v7;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *assignWithCopy for PlaceholderStyleModifier(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = (_OWORD *)((char *)a1 + v7);
    uint64_t v9 = (long long *)((char *)a2 + v7);
    outlined destroy of TaskPriority?((uint64_t)a1 + v7, &demangling cache variable for type metadata for Environment<ArtworkImage.Placeholder.View.Style?>.Content);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ArtworkImage.Placeholder.View.Style?>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
      uint64_t v11 = *(void *)(v10 - 8);
      if ((*(unsigned int (**)(long long *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      {
        uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ArtworkImage.Placeholder.View.Style?);
        memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        uint64_t v13 = *((void *)v9 + 3);
        if (v13)
        {
          *((void *)v8 + 3) = v13;
          *((void *)v8 + 4) = *((void *)v9 + 4);
          (**(void (***)(_OWORD *, long long *))(v13 - 8))(v8, v9);
        }
        else
        {
          long long v14 = *v9;
          long long v15 = v9[1];
          *((void *)v8 + 4) = *((void *)v9 + 4);
          *uint64_t v8 = v14;
          v8[1] = v15;
        }
        uint64_t v16 = (_OWORD *)((char *)v8 + 40);
        uint64_t v17 = (long long *)((char *)v9 + 40);
        uint64_t v18 = *((void *)v9 + 8);
        if (v18)
        {
          *((void *)v8 + 8) = v18;
          *((void *)v8 + 9) = *((void *)v9 + 9);
          (**(void (***)(_OWORD *, long long *))(v18 - 8))(v16, v17);
        }
        else
        {
          long long v19 = *v17;
          long long v20 = *(long long *)((char *)v9 + 56);
          *((void *)v8 + 9) = *((void *)v9 + 9);
          _OWORD *v16 = v19;
          *(_OWORD *)((char *)v8 + 56) = v20;
        }
        uint64_t v21 = *(int *)(v10 + 24);
        uint64_t v22 = (char *)v8 + v21;
        uint64_t v23 = (char *)v9 + v21;
        uint64_t v24 = type metadata accessor for BlendMode();
        uint64_t v25 = *(void *)(v24 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
        {
          uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for BlendMode?);
          memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v22, v23, v24);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
        }
        (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      }
    }
    else
    {
      *(void *)uint64_t v8 = *(void *)v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *initializeWithTake for PlaceholderStyleModifier(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (_OWORD *)((char *)a1 + v4);
  uint64_t v6 = (_OWORD *)((char *)a2 + v4);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ArtworkImage.Placeholder.View.Style?>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
    uint64_t v9 = *(void *)(v8 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8))
    {
      uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ArtworkImage.Placeholder.View.Style?);
      memcpy(v5, v6, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      long long v11 = v6[1];
      *uint64_t v5 = *v6;
      v5[1] = v11;
      *((void *)v5 + 4) = *((void *)v6 + 4);
      *(_OWORD *)((char *)v5 + 40) = *(_OWORD *)((char *)v6 + 40);
      *(_OWORD *)((char *)v5 + 56) = *(_OWORD *)((char *)v6 + 56);
      *((void *)v5 + 9) = *((void *)v6 + 9);
      uint64_t v12 = *(int *)(v8 + 24);
      uint64_t v13 = (char *)v5 + v12;
      long long v14 = (char *)v6 + v12;
      uint64_t v15 = type metadata accessor for BlendMode();
      uint64_t v16 = *(void *)(v15 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
      {
        uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for BlendMode?);
        memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      }
      (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v9 + 56))(v5, 0, 1, v8);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v5, v6, *(void *)(*(void *)(v7 - 8) + 64));
  }
  return a1;
}

_OWORD *assignWithTake for PlaceholderStyleModifier(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_release();
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (_OWORD *)((char *)a1 + v6);
    uint64_t v8 = (_OWORD *)((char *)a2 + v6);
    outlined destroy of TaskPriority?((uint64_t)a1 + v6, &demangling cache variable for type metadata for Environment<ArtworkImage.Placeholder.View.Style?>.Content);
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ArtworkImage.Placeholder.View.Style?>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
      uint64_t v11 = *(void *)(v10 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10))
      {
        uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ArtworkImage.Placeholder.View.Style?);
        memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        long long v13 = v8[1];
        _OWORD *v7 = *v8;
        v7[1] = v13;
        *((void *)v7 + 4) = *((void *)v8 + 4);
        *(_OWORD *)((char *)v7 + 40) = *(_OWORD *)((char *)v8 + 40);
        *(_OWORD *)((char *)v7 + 56) = *(_OWORD *)((char *)v8 + 56);
        *((void *)v7 + 9) = *((void *)v8 + 9);
        uint64_t v14 = *(int *)(v10 + 24);
        uint64_t v15 = (char *)v7 + v14;
        uint64_t v16 = (char *)v8 + v14;
        uint64_t v17 = type metadata accessor for BlendMode();
        uint64_t v18 = *(void *)(v17 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
        {
          uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for BlendMode?);
          memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v15, v16, v17);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
        }
        (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for PlaceholderStyleModifier(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10038CCC8);
}

uint64_t sub_10038CCC8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ArtworkImage.Placeholder.View.Style?>);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for PlaceholderStyleModifier(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10038CD90);
}

void *sub_10038CD90(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ArtworkImage.Placeholder.View.Style?>);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

void type metadata completion function for PlaceholderStyleModifier()
{
  type metadata accessor for Environment<ArtworkImage.Placeholder.View.Style?>.Content();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_10038CED8()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Color, _BackgroundStyleModifier<AnyShapeStyle>>, _OverlayModifier<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, AccessibilityAttachmentModifier>, _BlendModeEffect>>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Color, _BackgroundStyleModifier<AnyShapeStyle>>, _OverlayModifier<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, AccessibilityAttachmentModifier>, _BlendModeEffect>>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Color, _BackgroundStyleModifier<AnyShapeStyle>>, _OverlayModifier<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, AccessibilityAttachmentModifier>, _BlendModeEffect>>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Color, _BackgroundStyleModifier<AnyShapeStyle>>, _OverlayModifier<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, AccessibilityAttachmentModifier>, _BlendModeEffect>>>);
    lazy protocol witness table accessor for type ModifiedContent<Color, _BackgroundStyleModifier<AnyShapeStyle>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type _OverlayModifier<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, AccessibilityAttachmentModifier>, _BlendModeEffect>> and conformance _OverlayModifier<A>, &demangling cache variable for type metadata for _OverlayModifier<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, AccessibilityAttachmentModifier>, _BlendModeEffect>>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Color, _BackgroundStyleModifier<AnyShapeStyle>>, _OverlayModifier<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, AccessibilityAttachmentModifier>, _BlendModeEffect>>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<Color, _BackgroundStyleModifier<AnyShapeStyle>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<Color, _BackgroundStyleModifier<AnyShapeStyle>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<Color, _BackgroundStyleModifier<AnyShapeStyle>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<Color, _BackgroundStyleModifier<AnyShapeStyle>>);
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type _BackgroundStyleModifier<AnyShapeStyle> and conformance _BackgroundStyleModifier<A>, &demangling cache variable for type metadata for _BackgroundStyleModifier<AnyShapeStyle>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<Color, _BackgroundStyleModifier<AnyShapeStyle>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<_ViewModifier_Content<PlaceholderStyleModifier>, _EnvironmentKeyWritingModifier<ArtworkImage.Placeholder.View.Style?>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<_ViewModifier_Content<PlaceholderStyleModifier>, _EnvironmentKeyWritingModifier<ArtworkImage.Placeholder.View.Style?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<_ViewModifier_Content<PlaceholderStyleModifier>, _EnvironmentKeyWritingModifier<ArtworkImage.Placeholder.View.Style?>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<_ViewModifier_Content<PlaceholderStyleModifier>, _EnvironmentKeyWritingModifier<ArtworkImage.Placeholder.View.Style?>>);
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type _ViewModifier_Content<PlaceholderStyleModifier> and conformance _ViewModifier_Content<A>, &demangling cache variable for type metadata for _ViewModifier_Content<PlaceholderStyleModifier>);
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<ArtworkImage.Placeholder.View.Style?> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<ArtworkImage.Placeholder.View.Style?>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<_ViewModifier_Content<PlaceholderStyleModifier>, _EnvironmentKeyWritingModifier<ArtworkImage.Placeholder.View.Style?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t sub_10038D144()
{
  return swift_getWitnessTable();
}

unsigned char *storeEnumTagSinglePayload for ArtworkImage.Placeholder.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *unint64_t result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10038D2ACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 10;
        break;
    }
  }
  return result;
}

void *type metadata accessor for ArtworkImage.Placeholder.CodingKeys()
{
  return &unk_100546430;
}

void *type metadata accessor for ArtworkImage.Placeholder.MusicCodingKeys()
{
  return &unk_100546450;
}

void *type metadata accessor for ArtworkImage.Placeholder.NowPlayingCodingKeys()
{
  return &unk_100546470;
}

void *type metadata accessor for ArtworkImage.Placeholder.NewPlaylistCodingKeys()
{
  return &unk_100546490;
}

unsigned char *storeEnumTagSinglePayload for ArtworkImage.Placeholder.PlaylistCodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x10038D3B0);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

void *type metadata accessor for ArtworkImage.Placeholder.PlaylistCodingKeys()
{
  return &unk_100546520;
}

void *type metadata accessor for ArtworkImage.Placeholder.MusicVideoCodingKeys()
{
  return &unk_100546540;
}

void *type metadata accessor for ArtworkImage.Placeholder.TvCodingKeys()
{
  return &unk_100546560;
}

void *type metadata accessor for ArtworkImage.Placeholder.MicrophoneCodingKeys()
{
  return &unk_100546580;
}

void *type metadata accessor for ArtworkImage.Placeholder.PersonCodingKeys()
{
  return &unk_1005465A0;
}

void *type metadata accessor for ArtworkImage.Placeholder.RadioCodingKeys()
{
  return &unk_1005465C0;
}

void *type metadata accessor for ArtworkImage.Placeholder.GenreCodingKeys()
{
  return &unk_1005465E0;
}

void *type metadata accessor for ArtworkImage.Placeholder.ComposerCodingKeys()
{
  return &unk_100546600;
}

void *type metadata accessor for EnvironmentValues.PlaceholderStyleKey()
{
  return &unk_100546620;
}

uint64_t specialized ArtworkImage.Placeholder.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x636973756DLL && a2 == 0xE500000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6979616C50776F6ELL && a2 == 0xEA0000000000676ELL {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6C79616C5077656ELL && a2 == 0xEB00000000747369 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7473696C79616C70 && a2 == 0xE800000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x646956636973756DLL && a2 == 0xEA00000000006F65 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 30324 && a2 == 0xE200000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6F68706F7263696DLL && a2 == 0xEA0000000000656ELL {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6E6F73726570 && a2 == 0xE600000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6F69646172 && a2 == 0xE500000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x65726E6567 && a2 == 0xE500000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x7265736F706D6F63 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 10;
    }
    else {
      return 11;
    }
  }
}

uint64_t outlined consume of Environment<SymbolButton.MaterialColor?>.Content(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return swift_release();
  }
  return result;
}

uint64_t outlined consume of Environment<NoticeDismissal?>.Content(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4) {
    return outlined consume of OrderedSet<A.Items.Element>?<A>(a1, a2);
  }
  else {
    return swift_release();
  }
}

uint64_t outlined copy of NoticeDismissal?(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t outlined consume of Environment<CGFloat?>.Content(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) == 0) {
    return swift_release();
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<AnyShapeStyle>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<AnyShapeStyle>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<AnyShapeStyle>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<AnyShapeStyle>>, _EnvironmentKeyWritingModifier<Font?>>);
    lazy protocol witness table accessor for type ModifiedContent<Image, _ForegroundStyleModifier<AnyShapeStyle>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>((unint64_t *)&_s7SwiftUI30_EnvironmentKeyWritingModifierVyAA4FontVSgGACyxGAA04ViewF0AAWL_0, &_s7SwiftUI30_EnvironmentKeyWritingModifierVyAA4FontVSgGMD_0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Image, _ForegroundStyleModifier<AnyShapeStyle>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<Image, _ForegroundStyleModifier<AnyShapeStyle>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<Image, _ForegroundStyleModifier<AnyShapeStyle>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<Image, _ForegroundStyleModifier<AnyShapeStyle>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<Image, _ForegroundStyleModifier<AnyShapeStyle>>);
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type _ForegroundStyleModifier<AnyShapeStyle> and conformance _ForegroundStyleModifier<A>, &demangling cache variable for type metadata for _ForegroundStyleModifier<AnyShapeStyle>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<Image, _ForegroundStyleModifier<AnyShapeStyle>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t sub_10038E370()
{
  uint64_t v1 = *(void *)(type metadata accessor for ArtworkImage.Placeholder(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (type: Playlist.Variant?));
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 48))(v0 + v2, 10, v3))
  {
    uint64_t v4 = type metadata accessor for Playlist.Variant();
    uint64_t v5 = *(void *)(v4 - 8);
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v5 + 48))(v0 + v2, 1, v4)) {
      (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v2, v4);
    }
  }

  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #1 in static ArtworkImage.with(_:placeholder:size:reusePolicy:)@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for ArtworkImage.Placeholder(0);

  return closure #1 in closure #1 in static ArtworkImage.with(_:placeholder:size:reusePolicy:)(a1);
}

uint64_t TextBadge.init(immersive:)(char a1)
{
  if (a1) {
    return 4;
  }
  else {
    return 2;
  }
}

uint64_t TextBadge.view.getter(char a1)
{
  id v2 = [objc_allocWithZone((Class)UIFontMetrics) initForTextStyle:UIFontTextStyleLargeTitle];
  [v2 scaledValueForValue:10.0];
  double v4 = v3;

  id v5 = [self configurationWithPointSize:7 weight:v4];
  _OWORD v10[3] = type metadata accessor for TintShapeStyle();
  void v10[4] = (uint64_t)&protocol witness table for TintShapeStyle;
  __swift_allocate_boxed_opaque_existential_1(v10);
  TintShapeStyle.init()();
  id v9 = v5;
  TextBadge.view(favoriteBadgeConfiguration:)(&v9, a1);
  uint64_t v7 = v6;
  outlined destroy of FavoriteBadgeConfiguration(&v9);
  return v7;
}

void TextBadge.view(favoriteBadgeConfiguration:)(void *a1, char a2)
{
  if (a2 != 2)
  {
    if (a2 == 3)
    {
      outlined init with copy of AlertPresenting((uint64_t)(a1 + 1), (uint64_t)v46);
      __swift_project_boxed_opaque_existential_0Tm(v46, v46[3]);
      String.nonBreakingSpace.unsafeMutableAddressor();
      swift_bridgeObjectRetain();
      NSString v18 = String._bridgeToObjectiveC()();
      id v19 = [self systemImageNamed:v18];

      if (v19)
      {
        id v20 = [v19 imageWithConfiguration:*a1];

        id v21 = [v20 imageWithRenderingMode:2];
        Image.init(uiImage:)();
        uint64_t v22 = Text.init(_:)();
        uint64_t v24 = v23;
        char v26 = v25 & 1;
        uint64_t v27 = static Text.+ infix(_:_:)();
        uint64_t v29 = v28;
        char v31 = v30 & 1;
        outlined consume of Text.Storage(v22, v24, v26);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v32 = Text.foregroundStyle<A>(_:)();
        uint64_t v34 = v33;
        char v36 = v35 & 1;
        outlined consume of Text.Storage(v27, v29, v31);
        swift_bridgeObjectRelease();
        AccessibilityString.favoriteBadgeLabel.unsafeMutableAddressor();
        swift_bridgeObjectRetain();
        Text.accessibilityLabel(_:)();
        swift_bridgeObjectRelease();
        outlined consume of Text.Storage(v32, v34, v36);
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v46);
      }
      else
      {
        __break(1u);
      }
    }
    else if (a2 == 4)
    {
      String.nonBreakingSpace.unsafeMutableAddressor();
      swift_bridgeObjectRetain();
      Image.init(_internalSystemName:)();
      uint64_t v2 = Text.init(_:)();
      uint64_t v4 = v3;
      char v6 = v5 & 1;
      uint64_t v7 = static Text.+ infix(_:_:)();
      uint64_t v9 = v8;
      char v11 = v10 & 1;
      outlined consume of Text.Storage(v2, v4, v6);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      LODWORD(v46[0]) = static HierarchicalShapeStyle.secondary.getter();
      uint64_t v12 = Text.foregroundStyle<A>(_:)();
      uint64_t v14 = v13;
      char v16 = v15 & 1;
      outlined consume of Text.Storage(v7, v9, v11);
      swift_bridgeObjectRelease();
      AccessibilityString.immersiveBadgeLabel.unsafeMutableAddressor();
      swift_bridgeObjectRetain();
      Text.accessibilityLabel(_:)();
      swift_bridgeObjectRelease();
      outlined consume of Text.Storage(v12, v14, v16);
      swift_bridgeObjectRelease();
    }
    else
    {
      char v37 = a2 & 1;
      uint64_t v38 = (uint64_t *)String.nonBreakingSpace.unsafeMutableAddressor();
      uint64_t v40 = *v38;
      uint64_t v39 = v38[1];
      v45[0] = v40;
      v45[1] = v39;
      swift_bridgeObjectRetain();
      uint64_t v41 = *ExplicitRestrictionsController.shared.unsafeMutableAddressor();
      swift_beginAccess();
      uint64_t v42 = *(void *)(v41 + 32);
      uint64_t v43 = *(void **)(v41 + 40);
      swift_bridgeObjectRetain();
      v44._countAndFlagsBits = v42;
      v44._object = v43;
      String.append(_:)(v44);
      swift_bridgeObjectRelease();
      LODWORD(v45[0]) = static HierarchicalShapeStyle.secondary.getter();
      Text.playableForegroundStyle<A>(_:isPlayable:)((uint64_t)v45, v37);
      swift_bridgeObjectRelease();
    }
  }
}

uint64_t static FavoriteBadgeConfiguration.default.getter@<X0>(void *a1@<X8>)
{
  id v2 = [objc_allocWithZone((Class)UIFontMetrics) initForTextStyle:UIFontTextStyleLargeTitle];
  [v2 scaledValueForValue:10.0];
  double v4 = v3;

  id v5 = [self configurationWithPointSize:7 weight:v4];
  a1[4] = type metadata accessor for TintShapeStyle();
  a1[5] = &protocol witness table for TintShapeStyle;
  __swift_allocate_boxed_opaque_existential_1(a1 + 1);
  uint64_t result = TintShapeStyle.init()();
  *a1 = v5;
  return result;
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance TextBadge.CodingKeys()
{
  uint64_t result = 0x7974706D65;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x746963696C707865;
      break;
    case 2:
      uint64_t result = 0x657469726F766166;
      break;
    case 3:
      uint64_t result = 0x76697372656D6D69;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance TextBadge.CodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = specialized TextBadge.CodingKeys.init(stringValue:)(a1, a2);
  *a3 = result;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance TextBadge.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type TextBadge.CodingKeys and conformance TextBadge.CodingKeys();

  return CodingKey.description.getter(a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance TextBadge.CodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type TextBadge.CodingKeys and conformance TextBadge.CodingKeys();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance TextBadge.EmptyCodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type TextBadge.EmptyCodingKeys and conformance TextBadge.EmptyCodingKeys();

  return CodingKey.description.getter(a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance TextBadge.EmptyCodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type TextBadge.EmptyCodingKeys and conformance TextBadge.EmptyCodingKeys();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t protocol witness for CodingKey.stringValue.getter in conformance TextBadge.ExplicitCodingKeys()
{
  return 0x626179616C507369;
}

uint64_t protocol witness for CodingKey.init(stringValue:) in conformance TextBadge.ExplicitCodingKeys@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x626179616C507369 && a2 == 0xEA0000000000656CLL)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance TextBadge.ExplicitCodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type TextBadge.ExplicitCodingKeys and conformance TextBadge.ExplicitCodingKeys();

  return CodingKey.description.getter(a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance TextBadge.ExplicitCodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type TextBadge.ExplicitCodingKeys and conformance TextBadge.ExplicitCodingKeys();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance TextBadge.FavoriteCodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type TextBadge.FavoriteCodingKeys and conformance TextBadge.FavoriteCodingKeys();

  return CodingKey.description.getter(a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance TextBadge.FavoriteCodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type TextBadge.FavoriteCodingKeys and conformance TextBadge.FavoriteCodingKeys();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t protocol witness for CustomStringConvertible.description.getter in conformance TextBadge.ImmersiveCodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type TextBadge.ImmersiveCodingKeys and conformance TextBadge.ImmersiveCodingKeys();

  return CodingKey.description.getter(a1, v2);
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance TextBadge.ImmersiveCodingKeys(uint64_t a1)
{
  unint64_t v2 = lazy protocol witness table accessor for type TextBadge.ImmersiveCodingKeys and conformance TextBadge.ImmersiveCodingKeys();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t TextBadge.encode(to:)(void *a1, unsigned __int8 a2)
{
  int v3 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<TextBadge.ImmersiveCodingKeys>);
  uint64_t v30 = *(void *)(v4 - 8);
  uint64_t v31 = v4;
  __chkstk_darwin();
  uint64_t v29 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<TextBadge.FavoriteCodingKeys>);
  uint64_t v27 = *(void *)(v6 - 8);
  uint64_t v28 = v6;
  __chkstk_darwin();
  uint64_t v24 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<TextBadge.ExplicitCodingKeys>);
  uint64_t v25 = *(void *)(v8 - 8);
  uint64_t v26 = v8;
  __chkstk_darwin();
  char v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<TextBadge.EmptyCodingKeys>);
  uint64_t v23 = *(void *)(v11 - 8);
  __chkstk_darwin();
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedEncodingContainer<TextBadge.CodingKeys>);
  uint64_t v32 = *(void *)(v14 - 8);
  __chkstk_darwin();
  char v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_0Tm(a1, a1[3]);
  lazy protocol witness table accessor for type TextBadge.CodingKeys and conformance TextBadge.CodingKeys();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  switch(v3)
  {
    case 2:
      char v33 = 0;
      lazy protocol witness table accessor for type TextBadge.EmptyCodingKeys and conformance TextBadge.EmptyCodingKeys();
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      (*(void (**)(char *, uint64_t))(v23 + 8))(v13, v11);
      return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v16, v14);
    case 3:
      char v35 = 2;
      lazy protocol witness table accessor for type TextBadge.FavoriteCodingKeys and conformance TextBadge.FavoriteCodingKeys();
      uint64_t v17 = v24;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      uint64_t v19 = v27;
      uint64_t v18 = v28;
      goto LABEL_7;
    case 4:
      char v36 = 3;
      lazy protocol witness table accessor for type TextBadge.ImmersiveCodingKeys and conformance TextBadge.ImmersiveCodingKeys();
      uint64_t v17 = v29;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      uint64_t v19 = v30;
      uint64_t v18 = v31;
LABEL_7:
      (*(void (**)(char *, uint64_t))(v19 + 8))(v17, v18);
      return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v16, v14);
  }
  char v34 = 1;
  lazy protocol witness table accessor for type TextBadge.ExplicitCodingKeys and conformance TextBadge.ExplicitCodingKeys();
  KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
  uint64_t v21 = v26;
  KeyedEncodingContainer.encode(_:forKey:)();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v10, v21);
  return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v16, v14);
}

uint64_t TextBadge.init(from:)(void *a1)
{
  return specialized TextBadge.init(from:)(a1);
}

uint64_t protocol witness for Decodable.init(from:) in conformance TextBadge@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = specialized TextBadge.init(from:)(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t protocol witness for Encodable.encode(to:) in conformance TextBadge(void *a1)
{
  return TextBadge.encode(to:)(a1, *v1);
}

uint64_t GenericMusicItem.favoriteBadge.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v50 = *(void *)(v2 - 8);
  uint64_t v51 = v2;
  __chkstk_darwin();
  uint64_t v49 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Artist();
  uint64_t v61 = *(void *)(v4 - 8);
  uint64_t v62 = v4;
  __chkstk_darwin();
  uint64_t v6 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Playlist();
  uint64_t v56 = *(void *)(v7 - 8);
  uint64_t v57 = v7;
  __chkstk_darwin();
  uint64_t v55 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Song();
  uint64_t v53 = *(void *)(v9 - 8);
  uint64_t v54 = v9;
  __chkstk_darwin();
  uint64_t v52 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for MusicVideo();
  uint64_t v59 = *(void *)(v11 - 8);
  uint64_t v60 = v11;
  __chkstk_darwin();
  uint64_t v58 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicFavoriteStatus?);
  __chkstk_darwin();
  uint64_t v14 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for Album();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin();
  uint64_t v18 = (char *)&v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = *(void *)(type metadata accessor for GenericMusicItem() - 8);
  __chkstk_darwin();
  uint64_t v48 = (char *)&v46 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v22 = (char *)&v46 - v21;
  uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 16);
  uint64_t v47 = v1;
  uint64_t v24 = v1;
  uint64_t v26 = v25;
  v23((char *)&v46 - v21, v24, v25);
  int v27 = (*(uint64_t (**)(char *, uint64_t))(v19 + 88))(v22, v26);
  if (v27 != enum case for GenericMusicItem.album(_:))
  {
    if (v27 == enum case for GenericMusicItem.artist(_:))
    {
      (*(void (**)(char *, uint64_t))(v19 + 96))(v22, v26);
      uint64_t v31 = v61;
      uint64_t v30 = v62;
      (*(void (**)(char *, char *, uint64_t))(v61 + 32))(v6, v22, v62);
      Artist.favoriteStatus.getter();
      uint64_t v32 = type metadata accessor for MusicFavoriteStatus();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v14, 0, 1, v32);
      uint64_t v29 = specialized TextBadge.init(for:)((uint64_t)v14);
      (*(void (**)(char *, uint64_t))(v31 + 8))(v6, v30);
      return v29;
    }
    if (v27 == enum case for GenericMusicItem.composer(_:)
      || v27 == enum case for GenericMusicItem.creditArtist(_:)
      || v27 == enum case for GenericMusicItem.curator(_:)
      || v27 == enum case for GenericMusicItem.editorialItem(_:)
      || v27 == enum case for GenericMusicItem.genre(_:)
      || v27 == enum case for GenericMusicItem.musicMovie(_:))
    {
      goto LABEL_12;
    }
    if (v27 == enum case for GenericMusicItem.musicVideo(_:))
    {
      (*(void (**)(char *, uint64_t))(v19 + 96))(v22, v26);
      char v34 = v58;
      uint64_t v35 = v59;
      uint64_t v36 = v60;
      (*(void (**)(char *, char *, uint64_t))(v59 + 32))(v58, v22, v60);
      MusicVideo.favoriteStatus.getter();
    }
    else
    {
      if (v27 != enum case for GenericMusicItem.playlist(_:))
      {
        if (v27 != enum case for GenericMusicItem.radioShow(_:)
          && v27 != enum case for GenericMusicItem.recordLabel(_:)
          && v27 != enum case for GenericMusicItem.socialProfile(_:))
        {
          if (v27 == enum case for GenericMusicItem.song(_:))
          {
            (*(void (**)(char *, uint64_t))(v19 + 96))(v22, v26);
            char v34 = v52;
            uint64_t v35 = v53;
            uint64_t v36 = v54;
            (*(void (**)(char *, char *, uint64_t))(v53 + 32))(v52, v22, v54);
            Song.favoriteStatus.getter();
            goto LABEL_19;
          }
          if (v27 != enum case for GenericMusicItem.station(_:)
            && v27 != enum case for GenericMusicItem.tvEpisode(_:)
            && v27 != enum case for GenericMusicItem.tvSeason(_:)
            && v27 != enum case for GenericMusicItem.tvShow(_:)
            && v27 != enum case for GenericMusicItem.uploadedAudio(_:)
            && v27 != enum case for GenericMusicItem.uploadedVideo(_:))
          {
            if (v27 == enum case for GenericMusicItem.other(_:))
            {
              (*(void (**)(char *, uint64_t))(v19 + 96))(v22, v26);
              swift_bridgeObjectRelease();
            }
            else
            {
              uint64_t v38 = Logger.badging.unsafeMutableAddressor();
              (*(void (**)(char *, uint64_t, uint64_t))(v50 + 16))(v49, v38, v51);
              v23(v48, v47, v26);
              uint64_t v39 = Logger.logObject.getter();
              os_log_type_t v40 = static os_log_type_t.fault.getter();
              if (os_log_type_enabled(v39, v40))
              {
                uint64_t v41 = swift_slowAlloc();
                uint64_t v62 = swift_slowAlloc();
                uint64_t v63 = v62;
                *(_DWORD *)uint64_t v41 = 136315394;
                *(void *)(v41 + 4) = _s2os32getNullTerminatedUTF8PointerImpl_21storingStringOwnersInSVSS_SpyypGSgztF_2(0xD000000000000010, 0x8000000100472AE0, &v63);
                *(_WORD *)(v41 + 12) = 2080;
                _s16MusicKitInternal07GenericA4ItemOACs23CustomStringConvertibleAAWlTm_0((unint64_t *)&_s16MusicKitInternal07GenericA4ItemOACs23CustomStringConvertibleAAWL_0, (void (*)(uint64_t))&type metadata accessor for GenericMusicItem);
                uint64_t v42 = v48;
                uint64_t v43 = dispatch thunk of CustomStringConvertible.description.getter();
                *(void *)(v41 + 14) = _s2os32getNullTerminatedUTF8PointerImpl_21storingStringOwnersInSVSS_SpyypGSgztF_2(v43, v44, &v63);
                swift_bridgeObjectRelease();
                int v45 = *(void (**)(char *, uint64_t))(v19 + 8);
                v45(v42, v26);
                _os_log_impl((void *)&_mh_execute_header, v39, v40, "Unhandled case for favorite badge with item: %s, %s", (uint8_t *)v41, 0x16u);
                swift_arrayDestroy();
                swift_slowDealloc();
                swift_slowDealloc();
              }
              else
              {
                int v45 = *(void (**)(char *, uint64_t))(v19 + 8);
                v45(v48, v26);
              }

              (*(void (**)(char *, uint64_t))(v50 + 8))(v49, v51);
              v45(v22, v26);
            }
            return 2;
          }
        }
LABEL_12:
        (*(void (**)(char *, uint64_t))(v19 + 8))(v22, v26);
        return 2;
      }
      (*(void (**)(char *, uint64_t))(v19 + 96))(v22, v26);
      char v34 = v55;
      uint64_t v35 = v56;
      uint64_t v36 = v57;
      (*(void (**)(char *, char *, uint64_t))(v56 + 32))(v55, v22, v57);
      Playlist.favoriteStatus.getter();
    }
LABEL_19:
    uint64_t v37 = type metadata accessor for MusicFavoriteStatus();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v14, 0, 1, v37);
    uint64_t v29 = specialized TextBadge.init(for:)((uint64_t)v14);
    (*(void (**)(char *, uint64_t))(v35 + 8))(v34, v36);
    return v29;
  }
  (*(void (**)(char *, uint64_t))(v19 + 96))(v22, v26);
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v22, v15);
  Album.favoriteStatus.getter();
  uint64_t v28 = type metadata accessor for MusicFavoriteStatus();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v14, 0, 1, v28);
  uint64_t v29 = specialized TextBadge.init(for:)((uint64_t)v14);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  return v29;
}

uint64_t GenericMusicItem.explicitBadge(_:)(int a1)
{
  int v93 = a1;
  uint64_t v65 = type metadata accessor for Logger();
  uint64_t v64 = *(void *)(v65 - 8);
  __chkstk_darwin();
  uint64_t v63 = (char *)&v59 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = type metadata accessor for TVSeason();
  uint64_t v73 = *(void *)(v74 - 8);
  __chkstk_darwin();
  uint64_t v72 = (char *)&v59 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for MusicMovie();
  uint64_t v90 = *(void *)(v3 - 8);
  uint64_t v91 = v3;
  __chkstk_darwin();
  uint64_t v89 = (char *)&v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = type metadata accessor for TVShow();
  uint64_t v70 = *(void *)(v71 - 8);
  __chkstk_darwin();
  uint64_t v69 = (char *)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for VideoContentRating?);
  __chkstk_darwin();
  uint64_t v92 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for TVEpisode();
  uint64_t v76 = *(void *)(v7 - 8);
  uint64_t v77 = v7;
  __chkstk_darwin();
  uint64_t v75 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = type metadata accessor for UploadedVideo();
  uint64_t v61 = *(void *)(v62 - 8);
  __chkstk_darwin();
  uint64_t v60 = (char *)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = type metadata accessor for UploadedAudio();
  uint64_t v67 = *(void *)(v68 - 8);
  __chkstk_darwin();
  uint64_t v66 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Playlist();
  uint64_t v85 = *(void *)(v11 - 8);
  uint64_t v86 = v11;
  __chkstk_darwin();
  uint64_t v84 = (char *)&v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for Station();
  uint64_t v79 = *(void *)(v13 - 8);
  uint64_t v80 = v13;
  __chkstk_darwin();
  uint64_t v78 = (char *)&v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for Song();
  uint64_t v82 = *(void *)(v15 - 8);
  uint64_t v83 = v15;
  __chkstk_darwin();
  uint64_t v81 = (char *)&v59 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for MusicVideo();
  uint64_t v87 = *(void *)(v17 - 8);
  uint64_t v88 = v17;
  __chkstk_darwin();
  uint64_t v19 = (char *)&v59 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ContentRating?);
  __chkstk_darwin();
  uint64_t v21 = (char *)&v59 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for Album();
  uint64_t v23 = *(void *)(v22 - 8);
  __chkstk_darwin();
  uint64_t v25 = (char *)&v59 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = type metadata accessor for GenericMusicItem();
  uint64_t v27 = *(void *)(v26 - 8);
  __chkstk_darwin();
  uint64_t v59 = (char *)&v59 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v30 = (char *)&v59 - v29;
  uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t))(v27 + 16);
  v31((char *)&v59 - v29, v94, v26);
  int v32 = (*(uint64_t (**)(char *, uint64_t))(v27 + 88))(v30, v26);
  if (v32 != enum case for GenericMusicItem.album(_:))
  {
    char v34 = v93;
    if (v32 == enum case for GenericMusicItem.artist(_:)
      || v32 == enum case for GenericMusicItem.composer(_:)
      || v32 == enum case for GenericMusicItem.creditArtist(_:)
      || v32 == enum case for GenericMusicItem.curator(_:)
      || v32 == enum case for GenericMusicItem.editorialItem(_:)
      || v32 == enum case for GenericMusicItem.genre(_:))
    {
      goto LABEL_9;
    }
    if (v32 == enum case for GenericMusicItem.musicMovie(_:))
    {
      (*(void (**)(char *, uint64_t))(v27 + 96))(v30, v26);
      uint64_t v36 = v89;
      uint64_t v37 = v90;
      uint64_t v38 = v91;
      (*(void (**)(char *, char *, uint64_t))(v90 + 32))(v89, v30, v91);
      uint64_t v39 = (uint64_t)v92;
      MusicMovie.contentRating.getter();
LABEL_14:
      uint64_t v40 = specialized TextBadge.init(for:isPlayable:)(v39, v34 & 1);
LABEL_20:
      uint64_t v33 = v40;
      (*(void (**)(char *, uint64_t))(v37 + 8))(v36, v38);
      return v33;
    }
    if (v32 == enum case for GenericMusicItem.musicVideo(_:))
    {
      (*(void (**)(char *, uint64_t))(v27 + 96))(v30, v26);
      uint64_t v41 = v87;
      uint64_t v42 = v30;
      uint64_t v43 = v88;
      (*(void (**)(char *, char *, uint64_t))(v87 + 32))(v19, v42, v88);
      MusicVideo.contentRating.getter();
      uint64_t v33 = specialized TextBadge.init(for:isPlayable:)((uint64_t)v21, v34 & 1);
      (*(void (**)(char *, uint64_t))(v41 + 8))(v19, v43);
      return v33;
    }
    if (v32 == enum case for GenericMusicItem.playlist(_:))
    {
      (*(void (**)(char *, uint64_t))(v27 + 96))(v30, v26);
      uint64_t v36 = v84;
      uint64_t v37 = v85;
      uint64_t v38 = v86;
      (*(void (**)(char *, char *, uint64_t))(v85 + 32))(v84, v30, v86);
      Playlist.contentRating.getter();
    }
    else
    {
      if (v32 == enum case for GenericMusicItem.radioShow(_:)
        || v32 == enum case for GenericMusicItem.recordLabel(_:)
        || v32 == enum case for GenericMusicItem.socialProfile(_:))
      {
LABEL_9:
        (*(void (**)(char *, uint64_t))(v27 + 8))(v30, v26);
        return 2;
      }
      if (v32 != enum case for GenericMusicItem.song(_:))
      {
        if (v32 == enum case for GenericMusicItem.station(_:))
        {
          (*(void (**)(char *, uint64_t))(v27 + 96))(v30, v26);
          int v45 = v78;
          uint64_t v44 = v79;
          uint64_t v46 = v80;
          (*(void (**)(char *, char *, uint64_t))(v79 + 32))(v78, v30, v80);
          Station.contentRating.getter();
        }
        else
        {
          if (v32 == enum case for GenericMusicItem.tvEpisode(_:))
          {
            (*(void (**)(char *, uint64_t))(v27 + 96))(v30, v26);
            uint64_t v36 = v75;
            uint64_t v37 = v76;
            uint64_t v38 = v77;
            (*(void (**)(char *, char *, uint64_t))(v76 + 32))(v75, v30, v77);
            uint64_t v39 = (uint64_t)v92;
            TVEpisode.contentRating.getter();
            goto LABEL_14;
          }
          if (v32 == enum case for GenericMusicItem.tvSeason(_:))
          {
            (*(void (**)(char *, uint64_t))(v27 + 96))(v30, v26);
            uint64_t v47 = v73;
            uint64_t v48 = v72;
            uint64_t v49 = v74;
            (*(void (**)(char *, char *, uint64_t))(v73 + 32))(v72, v30, v74);
            uint64_t v50 = (uint64_t)v92;
            TVSeason.contentRating.getter();
            uint64_t v33 = specialized TextBadge.init(for:isPlayable:)(v50, v34 & 1);
            (*(void (**)(char *, uint64_t))(v47 + 8))(v48, v49);
            return v33;
          }
          if (v32 == enum case for GenericMusicItem.tvShow(_:))
          {
            (*(void (**)(char *, uint64_t))(v27 + 96))(v30, v26);
            uint64_t v37 = v70;
            uint64_t v36 = v69;
            uint64_t v38 = v71;
            (*(void (**)(char *, char *, uint64_t))(v70 + 32))(v69, v30, v71);
            uint64_t v39 = (uint64_t)v92;
            TVShow.contentRating.getter();
            goto LABEL_14;
          }
          if (v32 == enum case for GenericMusicItem.uploadedAudio(_:))
          {
            (*(void (**)(char *, uint64_t))(v27 + 96))(v30, v26);
            uint64_t v44 = v67;
            int v45 = v66;
            uint64_t v46 = v68;
            (*(void (**)(char *, char *, uint64_t))(v67 + 32))(v66, v30, v68);
            UploadedAudio.contentRating.getter();
          }
          else
          {
            if (v32 != enum case for GenericMusicItem.uploadedVideo(_:))
            {
              if (v32 == enum case for GenericMusicItem.other(_:))
              {
                (*(void (**)(char *, uint64_t))(v27 + 96))(v30, v26);
                swift_bridgeObjectRelease();
              }
              else
              {
                uint64_t v51 = Logger.badging.unsafeMutableAddressor();
                (*(void (**)(char *, uint64_t, uint64_t))(v64 + 16))(v63, v51, v65);
                v31(v59, v94, v26);
                uint64_t v52 = Logger.logObject.getter();
                os_log_type_t v53 = static os_log_type_t.info.getter();
                if (os_log_type_enabled(v52, v53))
                {
                  uint64_t v54 = swift_slowAlloc();
                  uint64_t v95 = swift_slowAlloc();
                  *(_DWORD *)uint64_t v54 = 136315394;
                  *(void *)(v54 + 4) = _s2os32getNullTerminatedUTF8PointerImpl_21storingStringOwnersInSVSS_SpyypGSgztF_2(0xD000000000000010, 0x8000000100472AE0, &v95);
                  *(_WORD *)(v54 + 12) = 2080;
                  _s16MusicKitInternal07GenericA4ItemOACs23CustomStringConvertibleAAWlTm_0((unint64_t *)&_s16MusicKitInternal07GenericA4ItemOACs23CustomStringConvertibleAAWL_0, (void (*)(uint64_t))&type metadata accessor for GenericMusicItem);
                  uint64_t v55 = v59;
                  uint64_t v56 = dispatch thunk of CustomStringConvertible.description.getter();
                  *(void *)(v54 + 14) = _s2os32getNullTerminatedUTF8PointerImpl_21storingStringOwnersInSVSS_SpyypGSgztF_2(v56, v57, &v95);
                  swift_bridgeObjectRelease();
                  uint64_t v58 = *(void (**)(char *, uint64_t))(v27 + 8);
                  v58(v55, v26);
                  _os_log_impl((void *)&_mh_execute_header, v52, v53, "Unhandled case for explicit badge with item: %s, %s", (uint8_t *)v54, 0x16u);
                  swift_arrayDestroy();
                  swift_slowDealloc();
                  swift_slowDealloc();
                }
                else
                {
                  uint64_t v58 = *(void (**)(char *, uint64_t))(v27 + 8);
                  v58(v59, v26);
                }

                (*(void (**)(char *, uint64_t))(v64 + 8))(v63, v65);
                v58(v30, v26);
              }
              return 2;
            }
            (*(void (**)(char *, uint64_t))(v27 + 96))(v30, v26);
            uint64_t v44 = v61;
            int v45 = v60;
            uint64_t v46 = v62;
            (*(void (**)(char *, char *, uint64_t))(v61 + 32))(v60, v30, v62);
            UploadedVideo.contentRating.getter();
          }
        }
        uint64_t v33 = specialized TextBadge.init(for:isPlayable:)((uint64_t)v21, v34 & 1);
        (*(void (**)(char *, uint64_t))(v44 + 8))(v45, v46);
        return v33;
      }
      (*(void (**)(char *, uint64_t))(v27 + 96))(v30, v26);
      uint64_t v36 = v81;
      uint64_t v37 = v82;
      uint64_t v38 = v83;
      (*(void (**)(char *, char *, uint64_t))(v82 + 32))(v81, v30, v83);
      Song.contentRating.getter();
    }
    uint64_t v40 = specialized TextBadge.init(for:isPlayable:)((uint64_t)v21, v34 & 1);
    goto LABEL_20;
  }
  (*(void (**)(char *, uint64_t))(v27 + 96))(v30, v26);
  (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v25, v30, v22);
  Album.contentRating.getter();
  uint64_t v33 = specialized TextBadge.init(for:isPlayable:)((uint64_t)v21, v93 & 1);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v22);
  return v33;
}

uint64_t FavoriteBadgeConfiguration.foregroundStyle.getter@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of AlertPresenting(v1 + 8, a1);
}

uint64_t FavoriteBadgeConfiguration.init(symbolConfiguration:foregroundStyle:)@<X0>(uint64_t a1@<X0>, long long *a2@<X1>, void *a3@<X8>)
{
  *a3 = a1;
  return outlined init with take of AlertPresenting(a2, (uint64_t)(a3 + 1));
}

uint64_t specialized TextBadge.init(for:isPlayable:)(uint64_t a1, int a2)
{
  int v20 = a2;
  uint64_t v3 = type metadata accessor for ContentRating();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin();
  uint64_t v6 = &v19[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ContentRating?, ContentRating?))
     - 8;
  __chkstk_darwin();
  uint64_t v9 = &v19[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ContentRating?);
  __chkstk_darwin();
  uint64_t v11 = &v19[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin();
  uint64_t v13 = &v19[-v12];
  (*(void (**)(unsigned char *, void, uint64_t))(v4 + 104))(&v19[-v12], enum case for ContentRating.explicit(_:), v3);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v4 + 56))(v13, 0, 1, v3);
  uint64_t v14 = (uint64_t)&v9[*(int *)(v7 + 56)];
  outlined init with copy of (String, Any)(a1, (uint64_t)v9, &demangling cache variable for type metadata for ContentRating?);
  outlined init with copy of (String, Any)((uint64_t)v13, v14, &demangling cache variable for type metadata for ContentRating?);
  uint64_t v15 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v15((uint64_t)v9, 1, v3) == 1)
  {
    outlined destroy of TaskPriority?(a1, &demangling cache variable for type metadata for ContentRating?);
    outlined destroy of TaskPriority?((uint64_t)v13, &demangling cache variable for type metadata for ContentRating?);
    if (v15(v14, 1, v3) == 1)
    {
      outlined destroy of TaskPriority?((uint64_t)v9, &demangling cache variable for type metadata for ContentRating?);
      return v20 & 1;
    }
    goto LABEL_6;
  }
  outlined init with copy of (String, Any)((uint64_t)v9, (uint64_t)v11, &demangling cache variable for type metadata for ContentRating?);
  if (v15(v14, 1, v3) == 1)
  {
    outlined destroy of TaskPriority?(a1, &demangling cache variable for type metadata for ContentRating?);
    outlined destroy of TaskPriority?((uint64_t)v13, &demangling cache variable for type metadata for ContentRating?);
    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v11, v3);
LABEL_6:
    outlined destroy of TaskPriority?((uint64_t)v9, &demangling cache variable for type metadata for (ContentRating?, ContentRating?));
    return 2;
  }
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v4 + 32))(v6, v14, v3);
  _s16MusicKitInternal07GenericA4ItemOACs23CustomStringConvertibleAAWlTm_0(&lazy protocol witness table cache variable for type ContentRating and conformance ContentRating, (void (*)(uint64_t))&type metadata accessor for ContentRating);
  char v16 = dispatch thunk of static Equatable.== infix(_:_:)();
  outlined destroy of TaskPriority?(a1, &demangling cache variable for type metadata for ContentRating?);
  uint64_t v17 = *(void (**)(unsigned char *, uint64_t))(v4 + 8);
  v17(v6, v3);
  outlined destroy of TaskPriority?((uint64_t)v13, &demangling cache variable for type metadata for ContentRating?);
  v17(v11, v3);
  outlined destroy of TaskPriority?((uint64_t)v9, &demangling cache variable for type metadata for ContentRating?);
  if (v16) {
    return v20 & 1;
  }
  return 2;
}

uint64_t specialized TextBadge.init(for:isPlayable:)(uint64_t a1, char a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for VideoContentRating?);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for VideoContentRating();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of (String, Any)(a1, (uint64_t)v5, &demangling cache variable for type metadata for VideoContentRating?);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    outlined destroy of TaskPriority?(a1, &demangling cache variable for type metadata for VideoContentRating?);
    outlined destroy of TaskPriority?((uint64_t)v5, &demangling cache variable for type metadata for VideoContentRating?);
    return 2;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
    char v11 = VideoContentRating.isExplicit.getter();
    outlined destroy of TaskPriority?(a1, &demangling cache variable for type metadata for VideoContentRating?);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    uint64_t result = 2;
    if (v11 != 2)
    {
      if (v11) {
        return a2 & 1;
      }
      else {
        return 2;
      }
    }
  }
  return result;
}

uint64_t specialized TextBadge.init(for:)(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicFavoriteStatus?);
  __chkstk_darwin();
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v11 - v4;
  outlined init with copy of (String, Any)(a1, (uint64_t)&v11 - v4, &demangling cache variable for type metadata for MusicFavoriteStatus?);
  uint64_t v6 = type metadata accessor for MusicFavoriteStatus();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1
    || (outlined init with copy of (String, Any)((uint64_t)v5, (uint64_t)v3, &demangling cache variable for type metadata for MusicFavoriteStatus?), int v8 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v3, v6), v8 == enum case for MusicFavoriteStatus.neutral(_:)))
  {
LABEL_7:
    uint64_t v9 = 2;
    goto LABEL_8;
  }
  if (v8 != enum case for MusicFavoriteStatus.favorited(_:))
  {
    if (v8 != enum case for MusicFavoriteStatus.disliked(_:)) {
      (*(void (**)(char *, uint64_t))(v7 + 8))(v3, v6);
    }
    goto LABEL_7;
  }
  uint64_t v9 = 3;
LABEL_8:
  outlined destroy of TaskPriority?(a1, &demangling cache variable for type metadata for MusicFavoriteStatus?);
  outlined destroy of TaskPriority?((uint64_t)v5, &demangling cache variable for type metadata for MusicFavoriteStatus?);
  return v9;
}

id *outlined destroy of FavoriteBadgeConfiguration(id *a1)
{
  uint64_t v2 = (uint64_t)(a1 + 1);

  __swift_destroy_boxed_opaque_existential_0Tm(v2);
  return a1;
}

unint64_t lazy protocol witness table accessor for type TextBadge.CodingKeys and conformance TextBadge.CodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type TextBadge.CodingKeys and conformance TextBadge.CodingKeys;
  if (!lazy protocol witness table cache variable for type TextBadge.CodingKeys and conformance TextBadge.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type TextBadge.CodingKeys and conformance TextBadge.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type TextBadge.CodingKeys and conformance TextBadge.CodingKeys;
  if (!lazy protocol witness table cache variable for type TextBadge.CodingKeys and conformance TextBadge.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type TextBadge.CodingKeys and conformance TextBadge.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type TextBadge.CodingKeys and conformance TextBadge.CodingKeys;
  if (!lazy protocol witness table cache variable for type TextBadge.CodingKeys and conformance TextBadge.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type TextBadge.CodingKeys and conformance TextBadge.CodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type TextBadge.CodingKeys and conformance TextBadge.CodingKeys;
  if (!lazy protocol witness table cache variable for type TextBadge.CodingKeys and conformance TextBadge.CodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type TextBadge.CodingKeys and conformance TextBadge.CodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type TextBadge.ImmersiveCodingKeys and conformance TextBadge.ImmersiveCodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type TextBadge.ImmersiveCodingKeys and conformance TextBadge.ImmersiveCodingKeys;
  if (!lazy protocol witness table cache variable for type TextBadge.ImmersiveCodingKeys and conformance TextBadge.ImmersiveCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type TextBadge.ImmersiveCodingKeys and conformance TextBadge.ImmersiveCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type TextBadge.ImmersiveCodingKeys and conformance TextBadge.ImmersiveCodingKeys;
  if (!lazy protocol witness table cache variable for type TextBadge.ImmersiveCodingKeys and conformance TextBadge.ImmersiveCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type TextBadge.ImmersiveCodingKeys and conformance TextBadge.ImmersiveCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type TextBadge.ImmersiveCodingKeys and conformance TextBadge.ImmersiveCodingKeys;
  if (!lazy protocol witness table cache variable for type TextBadge.ImmersiveCodingKeys and conformance TextBadge.ImmersiveCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type TextBadge.ImmersiveCodingKeys and conformance TextBadge.ImmersiveCodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type TextBadge.FavoriteCodingKeys and conformance TextBadge.FavoriteCodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type TextBadge.FavoriteCodingKeys and conformance TextBadge.FavoriteCodingKeys;
  if (!lazy protocol witness table cache variable for type TextBadge.FavoriteCodingKeys and conformance TextBadge.FavoriteCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type TextBadge.FavoriteCodingKeys and conformance TextBadge.FavoriteCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type TextBadge.FavoriteCodingKeys and conformance TextBadge.FavoriteCodingKeys;
  if (!lazy protocol witness table cache variable for type TextBadge.FavoriteCodingKeys and conformance TextBadge.FavoriteCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type TextBadge.FavoriteCodingKeys and conformance TextBadge.FavoriteCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type TextBadge.FavoriteCodingKeys and conformance TextBadge.FavoriteCodingKeys;
  if (!lazy protocol witness table cache variable for type TextBadge.FavoriteCodingKeys and conformance TextBadge.FavoriteCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type TextBadge.FavoriteCodingKeys and conformance TextBadge.FavoriteCodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type TextBadge.ExplicitCodingKeys and conformance TextBadge.ExplicitCodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type TextBadge.ExplicitCodingKeys and conformance TextBadge.ExplicitCodingKeys;
  if (!lazy protocol witness table cache variable for type TextBadge.ExplicitCodingKeys and conformance TextBadge.ExplicitCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type TextBadge.ExplicitCodingKeys and conformance TextBadge.ExplicitCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type TextBadge.ExplicitCodingKeys and conformance TextBadge.ExplicitCodingKeys;
  if (!lazy protocol witness table cache variable for type TextBadge.ExplicitCodingKeys and conformance TextBadge.ExplicitCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type TextBadge.ExplicitCodingKeys and conformance TextBadge.ExplicitCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type TextBadge.ExplicitCodingKeys and conformance TextBadge.ExplicitCodingKeys;
  if (!lazy protocol witness table cache variable for type TextBadge.ExplicitCodingKeys and conformance TextBadge.ExplicitCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type TextBadge.ExplicitCodingKeys and conformance TextBadge.ExplicitCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type TextBadge.ExplicitCodingKeys and conformance TextBadge.ExplicitCodingKeys;
  if (!lazy protocol witness table cache variable for type TextBadge.ExplicitCodingKeys and conformance TextBadge.ExplicitCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type TextBadge.ExplicitCodingKeys and conformance TextBadge.ExplicitCodingKeys);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type TextBadge.EmptyCodingKeys and conformance TextBadge.EmptyCodingKeys()
{
  unint64_t result = lazy protocol witness table cache variable for type TextBadge.EmptyCodingKeys and conformance TextBadge.EmptyCodingKeys;
  if (!lazy protocol witness table cache variable for type TextBadge.EmptyCodingKeys and conformance TextBadge.EmptyCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type TextBadge.EmptyCodingKeys and conformance TextBadge.EmptyCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type TextBadge.EmptyCodingKeys and conformance TextBadge.EmptyCodingKeys;
  if (!lazy protocol witness table cache variable for type TextBadge.EmptyCodingKeys and conformance TextBadge.EmptyCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type TextBadge.EmptyCodingKeys and conformance TextBadge.EmptyCodingKeys);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type TextBadge.EmptyCodingKeys and conformance TextBadge.EmptyCodingKeys;
  if (!lazy protocol witness table cache variable for type TextBadge.EmptyCodingKeys and conformance TextBadge.EmptyCodingKeys)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type TextBadge.EmptyCodingKeys and conformance TextBadge.EmptyCodingKeys);
  }
  return result;
}

uint64_t specialized TextBadge.CodingKeys.init(stringValue:)(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7974706D65 && a2 == 0xE500000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746963696C707865 && a2 == 0xE800000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x657469726F766166 && a2 == 0xE800000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x76697372656D6D69 && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t specialized TextBadge.init(from:)(void *a1)
{
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<TextBadge.ImmersiveCodingKeys>);
  uint64_t v33 = *(void *)(v31 - 8);
  __chkstk_darwin();
  uint64_t v35 = (char *)&v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<TextBadge.FavoriteCodingKeys>);
  uint64_t v32 = *(void *)(v29 - 8);
  __chkstk_darwin();
  char v34 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<TextBadge.ExplicitCodingKeys>);
  uint64_t v30 = *(void *)(v27 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<TextBadge.EmptyCodingKeys>);
  uint64_t v28 = *(void *)(v6 - 8);
  __chkstk_darwin();
  int v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for KeyedDecodingContainer<TextBadge.CodingKeys>);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin();
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[3];
  uint64_t v36 = a1;
  __swift_project_boxed_opaque_existential_0Tm(a1, v13);
  lazy protocol witness table accessor for type TextBadge.CodingKeys and conformance TextBadge.CodingKeys();
  uint64_t v14 = v37;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v14) {
    goto LABEL_9;
  }
  uint64_t v26 = v6;
  uint64_t v37 = v5;
  uint64_t v15 = v34;
  char v16 = v35;
  uint64_t v17 = v10;
  uint64_t v18 = KeyedDecodingContainer.allKeys.getter();
  if (*(void *)(v18 + 16) != 1)
  {
    uint64_t v10 = type metadata accessor for DecodingError();
    swift_allocError();
    uint64_t v19 = v12;
    uint64_t v21 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (@thick Any.Type, DecodingError.Context));
    *uint64_t v21 = &type metadata for TextBadge;
    KeyedDecodingContainer.codingPath.getter();
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v10 - 8) + 104))(v21, enum case for DecodingError.typeMismatch(_:), v10);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v9);
LABEL_9:
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v36);
    return v10;
  }
  switch(*(unsigned char *)(v18 + 32))
  {
    case 1:
      char v39 = 1;
      lazy protocol witness table accessor for type TextBadge.ExplicitCodingKeys and conformance TextBadge.ExplicitCodingKeys();
      uint64_t v22 = v37;
      KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      uint64_t v23 = v27;
      char v24 = KeyedDecodingContainer.decode(_:forKey:)();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v22, v23);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      uint64_t v10 = v24 & 1;
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v36);
      break;
    case 2:
      char v40 = 2;
      lazy protocol witness table accessor for type TextBadge.FavoriteCodingKeys and conformance TextBadge.FavoriteCodingKeys();
      KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      (*(void (**)(char *, uint64_t))(v32 + 8))(v15, v29);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      uint64_t v10 = 3;
      goto LABEL_9;
    case 3:
      char v41 = 3;
      lazy protocol witness table accessor for type TextBadge.ImmersiveCodingKeys and conformance TextBadge.ImmersiveCodingKeys();
      KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      (*(void (**)(char *, uint64_t))(v33 + 8))(v16, v31);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      uint64_t v10 = 4;
      goto LABEL_9;
    default:
      char v38 = 0;
      lazy protocol witness table accessor for type TextBadge.EmptyCodingKeys and conformance TextBadge.EmptyCodingKeys();
      KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      (*(void (**)(char *, uint64_t))(v28 + 8))(v8, v26);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      uint64_t v10 = 2;
      goto LABEL_9;
  }
  return v10;
}

uint64_t getEnumTagSinglePayload for TextBadge(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFC)
  {
    unsigned int v2 = a2 + 4;
    if (a2 + 4 >= 0xFFFF00) {
      unsigned int v3 = 4;
    }
    else {
      unsigned int v3 = 2;
    }
    if (v2 >> 8 < 0xFF) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x100) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = a1[1];
        if (!a1[1]) {
          break;
        }
        return (*a1 | (v5 << 8)) - 4;
      case 2:
        int v5 = *(unsigned __int16 *)(a1 + 1);
        if (*(_WORD *)(a1 + 1)) {
          return (*a1 | (v5 << 8)) - 4;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1003921F0);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 8)) - 4;
      default:
        break;
    }
  }
  unsigned int v7 = *a1;
  if (v7 < 2) {
    return 0;
  }
  unsigned int v8 = (v7 + 2147483646) & 0x7FFFFFFF;
  uint64_t result = v8 - 2;
  if (v8 <= 2) {
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for TextBadge(unsigned char *result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 4;
  if (a3 + 4 >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xFC) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v7 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v6)
    {
      case 1:
        result[1] = v7;
        break;
      case 2:
        *(_WORD *)(result + 1) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0x1003922D8);
      case 4:
        *(_DWORD *)(result + 1) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TextBadge()
{
  return &type metadata for TextBadge;
}

uint64_t destroy for FavoriteBadgeConfiguration(id *a1)
{
  uint64_t v1 = (uint64_t)(a1 + 1);

  return __swift_destroy_boxed_opaque_existential_0Tm(v1);
}

uint64_t initializeWithCopy for FavoriteBadgeConfiguration(uint64_t a1, uint64_t a2)
{
  unsigned int v3 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  uint64_t v4 = a1 + 8;
  uint64_t v5 = a2 + 8;
  long long v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v6;
  uint64_t v7 = v6;
  unsigned int v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  id v9 = v3;
  v8(v4, v5, v7);
  return a1;
}

void **assignWithCopy for FavoriteBadgeConfiguration(void **a1, void **a2)
{
  uint64_t v4 = (uint64_t *)(a2 + 1);
  unsigned int v3 = *a2;
  uint64_t v5 = *a1;
  *a1 = *a2;
  long long v6 = (uint64_t *)(a1 + 1);
  id v7 = v3;

  __swift_assign_boxed_opaque_existential_1(v6, v4);
  return a1;
}

uint64_t assignWithTake for FavoriteBadgeConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  __swift_destroy_boxed_opaque_existential_0Tm(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  return a1;
}

ValueMetadata *type metadata accessor for FavoriteBadgeConfiguration()
{
  return &type metadata for FavoriteBadgeConfiguration;
}

unsigned char *storeEnumTagSinglePayload for TextBadge.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10039255CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

void *type metadata accessor for TextBadge.CodingKeys()
{
  return &unk_1005467E8;
}

void *type metadata accessor for TextBadge.EmptyCodingKeys()
{
  return &unk_100546808;
}

unsigned char *storeEnumTagSinglePayload for TextBadge.ExplicitCodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x100392640);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

void *type metadata accessor for TextBadge.ExplicitCodingKeys()
{
  return &unk_100546898;
}

void *type metadata accessor for TextBadge.FavoriteCodingKeys()
{
  return &unk_1005468B8;
}

void *type metadata accessor for TextBadge.ImmersiveCodingKeys()
{
  return &unk_1005468D8;
}

uint64_t _s16MusicKitInternal07GenericA4ItemOACs23CustomStringConvertibleAAWlTm_0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void one-time initialization function for contentPadding()
{
  static Card.DisplayStyle.Specs.contentPadding = 0x403E000000000000;
}

void one-time initialization function for defaultCardRadius()
{
  static Card.DisplayStyle.Specs.defaultCardRadius = 0x402A000000000000;
}

uint64_t one-time initialization function for insets()
{
  if (one-time initialization token for isVision != -1) {
    uint64_t result = swift_once();
  }
  double v0 = 20.0;
  if (static Card.DisplayStyle.Specs.CloseButton.isVision) {
    double v1 = 20.0;
  }
  else {
    double v1 = 0.0;
  }
  *(void *)&static Card.DisplayStyle.Specs.CloseButton.insets = 0x4034000000000000;
  *((double *)&static Card.DisplayStyle.Specs.CloseButton.insets + 1) = v1;
  if (static Card.DisplayStyle.Specs.CloseButton.isVision) {
    double v0 = 0.0;
  }
  qword_100580B90 = 0;
  qword_100580B98 = *(void *)&v0;
  return result;
}

uint64_t one-time initialization function for font()
{
  if (one-time initialization token for isVision != -1) {
    swift_once();
  }
  if (static Card.DisplayStyle.Specs.CloseButton.isVision == 1)
  {
    uint64_t result = static Font.headline.getter();
    uint64_t v1 = result;
  }
  else
  {
    static Font.caption.getter();
    uint64_t v1 = Font.bold()();
    uint64_t result = swift_release();
  }
  static Card.DisplayStyle.Specs.CloseButton.font = v1;
  return result;
}

void one-time initialization function for labelPadding()
{
  static Card.DisplayStyle.Specs.CloseButton.labelPadding = 0x4018000000000000;
}

uint64_t one-time initialization function for minSize()
{
  if (one-time initialization token for isVision != -1) {
    uint64_t result = swift_once();
  }
  double v0 = 44.0;
  if (!static Card.DisplayStyle.Specs.CloseButton.isVision) {
    double v0 = 24.0;
  }
  static Card.DisplayStyle.Specs.CloseButton.minSize = *(void *)&v0;
  *(double *)algn_100580BB8 = v0;
  return result;
}

uint64_t one-time initialization function for alignment()
{
  if (one-time initialization token for isVision != -1) {
    swift_once();
  }
  if (static Card.DisplayStyle.Specs.CloseButton.isVision == 1) {
    uint64_t result = static Alignment.topLeading.getter();
  }
  else {
    uint64_t result = static Alignment.topTrailing.getter();
  }
  static Card.DisplayStyle.Specs.CloseButton.alignment = result;
  *(void *)algn_100580BC8 = v1;
  return result;
}

uint64_t Card.DisplayStyle.body(content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v88 = a2;
  uint64_t v4 = type metadata accessor for ScrollBounceBehavior();
  uint64_t v85 = *(void *)(v4 - 8);
  uint64_t v86 = v4;
  __chkstk_darwin();
  uint64_t v84 = (char *)&v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ScrollIndicatorVisibility();
  uint64_t v79 = *(void *)(v6 - 8);
  uint64_t v80 = v6;
  __chkstk_darwin();
  uint64_t v76 = (char *)&v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = type metadata accessor for RoundedRectangle();
  __chkstk_darwin();
  id v9 = (double *)((char *)&v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScrollView<ModifiedContent<_ViewModifier_Content<Card.DisplayStyle>, _PaddingLayout>>);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin();
  uint64_t v13 = (char *)&v67 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ScrollView<ModifiedContent<_ViewModifier_Content<Card.DisplayStyle>, _PaddingLayout>>, _BackgroundStyleModifier<BackgroundStyle>>)
      - 8;
  __chkstk_darwin();
  char v16 = (char *)&v67 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ScrollView<ModifiedContent<_ViewModifier_Content<Card.DisplayStyle>, _PaddingLayout>>, _BackgroundStyleModifier<BackgroundStyle>>, _ClipEffect<RoundedRectangle>>);
  __chkstk_darwin();
  uint64_t v18 = (char *)&v67 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.scrollIndicators(_:axes:)>>.0);
  uint64_t v73 = *(void *)(v74 - 8);
  __chkstk_darwin();
  uint64_t v69 = (char *)&v67 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.scrollBounceBehavior(_:axes:)>>.0);
  uint64_t v75 = *(void *)(v77 - 8);
  __chkstk_darwin();
  uint64_t v72 = (char *)&v67 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.scrollBounceBehavior(_:axes:)>>.0, _SafeAreaRegionsIgnoringLayout>);
  __chkstk_darwin();
  uint64_t v78 = (char *)&v67 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.scrollBounceBehavior(_:axes:)>>.0, _SafeAreaRegionsIgnoringLayout>, _OverlayModifier<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _PaddingLayout>>>);
  __chkstk_darwin();
  uint64_t v83 = (char *)&v67 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.scrollBounceBehavior(_:axes:)>>.0, _SafeAreaRegionsIgnoringLayout>, _OverlayModifier<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _PaddingLayout>>>, _PaddingLayout>);
  __chkstk_darwin();
  uint64_t v82 = (uint64_t)&v67 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = a1;
  static Axis.Set.vertical.getter();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<_ViewModifier_Content<Card.DisplayStyle>, _PaddingLayout>);
  lazy protocol witness table accessor for type ModifiedContent<_ViewModifier_Content<Card.DisplayStyle>, _PaddingLayout> and conformance <> ModifiedContent<A, B>();
  ScrollView.init(_:showsIndicators:content:)();
  LOBYTE(a1) = static Edge.Set.all.getter();
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v16, v13, v10);
  v16[*(int *)(v14 + 44)] = a1;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  uint64_t v24 = *(void *)v2;
  uint64_t v25 = *(unsigned __int8 *)(v2 + 8);
  uint64_t v87 = v2;
  int v26 = *(unsigned __int8 *)(v2 + 9);
  outlined copy of Environment<CGFloat?>.Content(v24, v25, *(unsigned char *)(v2 + 9));
  double v27 = COERCE_DOUBLE(specialized Environment.wrappedValue.getter(v24, v25 | (v26 << 8)));
  LOBYTE(v13) = v28;
  outlined consume of Environment<CGFloat?>.Content(v24, v25, v26);
  if ((v13 & 1) != 0 || v27 <= 0.0)
  {
    if (one-time initialization token for defaultCardRadius != -1) {
      swift_once();
    }
    double v29 = *(double *)&static Card.DisplayStyle.Specs.defaultCardRadius;
  }
  else
  {
    if (one-time initialization token for padding != -1) {
      swift_once();
    }
    double v29 = v27 - *(double *)&static Card.DisplayStyle.Specs.padding;
  }
  uint64_t v30 = v84;
  uint64_t v31 = v70;
  uint64_t v32 = (char *)v9 + *(int *)(v67 + 20);
  uint64_t v33 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v34 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v34 - 8) + 104))(v32, v33, v34);
  double *v9 = v29;
  v9[1] = v29;
  uint64_t v35 = (uint64_t)&v18[*(int *)(v31 + 36)];
  _s7SwiftUI16RoundedRectangleVWOcTm_0((uint64_t)v9, v35, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  *(_WORD *)(v35
           + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ClipEffect<RoundedRectangle>)
                    + 36)) = 256;
  outlined init with copy of (String, Any)((uint64_t)v16, (uint64_t)v18, &demangling cache variable for type metadata for ModifiedContent<ScrollView<ModifiedContent<_ViewModifier_Content<Card.DisplayStyle>, _PaddingLayout>>, _BackgroundStyleModifier<BackgroundStyle>>);
  outlined destroy of RoundedRectangle((uint64_t)v9, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  outlined destroy of TaskPriority?((uint64_t)v16, &demangling cache variable for type metadata for ModifiedContent<ScrollView<ModifiedContent<_ViewModifier_Content<Card.DisplayStyle>, _PaddingLayout>>, _BackgroundStyleModifier<BackgroundStyle>>);
  uint64_t v36 = v76;
  static ScrollIndicatorVisibility.never.getter();
  unsigned __int8 v37 = static Axis.Set.vertical.getter();
  unsigned __int8 v38 = static Axis.Set.horizontal.getter();
  Axis.Set.init(rawValue:)();
  Axis.Set.init(rawValue:)();
  if (Axis.Set.init(rawValue:)() != v37) {
    Axis.Set.init(rawValue:)();
  }
  Axis.Set.init(rawValue:)();
  if (Axis.Set.init(rawValue:)() != v38) {
    Axis.Set.init(rawValue:)();
  }
  char v39 = v69;
  unint64_t v40 = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ScrollView<ModifiedContent<_ViewModifier_Content<Card.DisplayStyle>, _PaddingLayout>>, _BackgroundStyleModifier<BackgroundStyle>>, _ClipEffect<RoundedRectangle>> and conformance <> ModifiedContent<A, B>();
  View.scrollIndicators(_:axes:)();
  (*(void (**)(char *, uint64_t))(v79 + 8))(v36, v80);
  outlined destroy of TaskPriority?((uint64_t)v18, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ScrollView<ModifiedContent<_ViewModifier_Content<Card.DisplayStyle>, _PaddingLayout>>, _BackgroundStyleModifier<BackgroundStyle>>, _ClipEffect<RoundedRectangle>>);
  static ScrollBounceBehavior.basedOnSize.getter();
  unsigned __int8 v41 = static Axis.Set.vertical.getter();
  Axis.Set.init(rawValue:)();
  Axis.Set.init(rawValue:)();
  if (Axis.Set.init(rawValue:)() != v41) {
    Axis.Set.init(rawValue:)();
  }
  uint64_t v90 = v31;
  unint64_t v91 = v40;
  swift_getOpaqueTypeConformance2();
  uint64_t v42 = v72;
  uint64_t v43 = v74;
  View.scrollBounceBehavior(_:axes:)();
  (*(void (**)(char *, uint64_t))(v85 + 8))(v30, v86);
  (*(void (**)(char *, uint64_t))(v73 + 8))(v39, v43);
  uint64_t v44 = static SafeAreaRegions.all.getter();
  char v45 = static Edge.Set.all.getter();
  uint64_t v46 = v75;
  uint64_t v47 = (uint64_t)v78;
  uint64_t v48 = v77;
  (*(void (**)(char *, char *, uint64_t))(v75 + 16))(v78, v42, v77);
  uint64_t v49 = v47 + *(int *)(v68 + 36);
  *(void *)uint64_t v49 = v44;
  *(unsigned char *)(v49 + 8) = v45;
  (*(void (**)(char *, uint64_t))(v46 + 8))(v42, v48);
  if (one-time initialization token for alignment != -1) {
    swift_once();
  }
  uint64_t v50 = static Card.DisplayStyle.Specs.CloseButton.alignment;
  uint64_t v51 = *(void *)algn_100580BC8;
  uint64_t v52 = (uint64_t)v83;
  uint64_t v53 = (uint64_t)&v83[*(int *)(v71 + 36)];
  closure #2 in Card.DisplayStyle.body(content:)(v87, v53);
  uint64_t v54 = (uint64_t *)(v53
                  + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _OverlayModifier<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _PaddingLayout>>)
                           + 36));
  *uint64_t v54 = v50;
  v54[1] = v51;
  outlined init with take of PresentationSource?(v47, v52, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.scrollBounceBehavior(_:axes:)>>.0, _SafeAreaRegionsIgnoringLayout>);
  if (one-time initialization token for padding != -1) {
    swift_once();
  }
  char v55 = static Edge.Set.all.getter();
  EdgeInsets.init(_all:)();
  uint64_t v57 = v56;
  uint64_t v59 = v58;
  uint64_t v61 = v60;
  uint64_t v63 = v62;
  uint64_t v64 = v82;
  outlined init with copy of (String, Any)(v52, v82, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.scrollBounceBehavior(_:axes:)>>.0, _SafeAreaRegionsIgnoringLayout>, _OverlayModifier<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _PaddingLayout>>>);
  uint64_t v65 = v64 + *(int *)(v81 + 36);
  *(unsigned char *)uint64_t v65 = v55;
  *(void *)(v65 + 8) = v57;
  *(void *)(v65 + 16) = v59;
  *(void *)(v65 + 24) = v61;
  *(void *)(v65 + 32) = v63;
  *(unsigned char *)(v65 + 40) = 0;
  outlined destroy of TaskPriority?(v52, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.scrollBounceBehavior(_:axes:)>>.0, _SafeAreaRegionsIgnoringLayout>, _OverlayModifier<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _PaddingLayout>>>);
  return outlined init with take of PresentationSource?(v64, v88, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.scrollBounceBehavior(_:axes:)>>.0, _SafeAreaRegionsIgnoringLayout>, _OverlayModifier<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _PaddingLayout>>>, _PaddingLayout>);
}

uint64_t closure #1 in Card.DisplayStyle.body(content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (one-time initialization token for contentPadding != -1) {
    swift_once();
  }
  char v4 = static Edge.Set.all.getter();
  EdgeInsets.init(_all:)();
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ViewModifier_Content<Card.DisplayStyle>);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(a2, a1, v13);
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<_ViewModifier_Content<Card.DisplayStyle>, _PaddingLayout>);
  uint64_t v15 = a2 + *(int *)(result + 36);
  *(unsigned char *)uint64_t v15 = v4;
  *(void *)(v15 + 8) = v6;
  *(void *)(v15 + 16) = v8;
  *(void *)(v15 + 24) = v10;
  *(void *)(v15 + 32) = v12;
  *(unsigned char *)(v15 + 40) = 0;
  return result;
}

uint64_t partial apply for closure #1 in Card.DisplayStyle.body(content:)@<X0>(uint64_t a1@<X8>)
{
  return closure #1 in Card.DisplayStyle.body(content:)(*(void *)(v1 + 16), a1);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<_ViewModifier_Content<Card.DisplayStyle>, _PaddingLayout> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<_ViewModifier_Content<Card.DisplayStyle>, _PaddingLayout> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<_ViewModifier_Content<Card.DisplayStyle>, _PaddingLayout> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<_ViewModifier_Content<Card.DisplayStyle>, _PaddingLayout>);
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type _ViewModifier_Content<Card.DisplayStyle> and conformance _ViewModifier_Content<A>, &demangling cache variable for type metadata for _ViewModifier_Content<Card.DisplayStyle>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<_ViewModifier_Content<Card.DisplayStyle>, _PaddingLayout> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t outlined copy of Environment<CGFloat?>.Content(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) == 0) {
    return swift_retain();
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ScrollView<ModifiedContent<_ViewModifier_Content<Card.DisplayStyle>, _PaddingLayout>>, _BackgroundStyleModifier<BackgroundStyle>>, _ClipEffect<RoundedRectangle>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ScrollView<ModifiedContent<_ViewModifier_Content<Card.DisplayStyle>, _PaddingLayout>>, _BackgroundStyleModifier<BackgroundStyle>>, _ClipEffect<RoundedRectangle>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ScrollView<ModifiedContent<_ViewModifier_Content<Card.DisplayStyle>, _PaddingLayout>>, _BackgroundStyleModifier<BackgroundStyle>>, _ClipEffect<RoundedRectangle>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ScrollView<ModifiedContent<_ViewModifier_Content<Card.DisplayStyle>, _PaddingLayout>>, _BackgroundStyleModifier<BackgroundStyle>>, _ClipEffect<RoundedRectangle>>);
    lazy protocol witness table accessor for type ModifiedContent<ScrollView<ModifiedContent<_ViewModifier_Content<Card.DisplayStyle>, _PaddingLayout>>, _BackgroundStyleModifier<BackgroundStyle>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>((unint64_t *)&lazy protocol witness table cache variable for type _ClipEffect<RoundedRectangle> and conformance _ClipEffect<A>, (uint64_t *)&demangling cache variable for type metadata for _ClipEffect<RoundedRectangle>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ScrollView<ModifiedContent<_ViewModifier_Content<Card.DisplayStyle>, _PaddingLayout>>, _BackgroundStyleModifier<BackgroundStyle>>, _ClipEffect<RoundedRectangle>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ScrollView<ModifiedContent<_ViewModifier_Content<Card.DisplayStyle>, _PaddingLayout>>, _BackgroundStyleModifier<BackgroundStyle>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ScrollView<ModifiedContent<_ViewModifier_Content<Card.DisplayStyle>, _PaddingLayout>>, _BackgroundStyleModifier<BackgroundStyle>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ScrollView<ModifiedContent<_ViewModifier_Content<Card.DisplayStyle>, _PaddingLayout>>, _BackgroundStyleModifier<BackgroundStyle>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ScrollView<ModifiedContent<_ViewModifier_Content<Card.DisplayStyle>, _PaddingLayout>>, _BackgroundStyleModifier<BackgroundStyle>>);
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type ScrollView<ModifiedContent<_ViewModifier_Content<Card.DisplayStyle>, _PaddingLayout>> and conformance ScrollView<A>, &demangling cache variable for type metadata for ScrollView<ModifiedContent<_ViewModifier_Content<Card.DisplayStyle>, _PaddingLayout>>);
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type _BackgroundStyleModifier<BackgroundStyle> and conformance _BackgroundStyleModifier<A>, &demangling cache variable for type metadata for _BackgroundStyleModifier<BackgroundStyle>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ScrollView<ModifiedContent<_ViewModifier_Content<Card.DisplayStyle>, _PaddingLayout>>, _BackgroundStyleModifier<BackgroundStyle>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t closure #2 in Card.DisplayStyle.body(content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v44 = a2;
  uint64_t v3 = type metadata accessor for PlainButtonStyle();
  uint64_t v42 = *(void *)(v3 - 8);
  *(void *)&long long v43 = v3;
  __chkstk_darwin();
  unsigned __int8 v41 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = type metadata accessor for ContentShapeKinds();
  uint64_t v5 = *(void *)(v38 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(type metadata accessor for Card.DisplayStyle() - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin();
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, _ClipEffect<Circle>>>);
  uint64_t v10 = *(void *)(v36 - 8);
  __chkstk_darwin();
  uint64_t v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, _ClipEffect<Circle>>>, _ContentShapeKindModifier<Rectangle._Inset>>);
  __chkstk_darwin();
  uint64_t v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.buttonStyle<A>(_:)>>.0);
  uint64_t v39 = *(void *)(v15 - 8);
  uint64_t v40 = v15;
  __chkstk_darwin();
  uint64_t v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s7SwiftUI16RoundedRectangleVWOcTm_0(a1, (uint64_t)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for Card.DisplayStyle);
  unint64_t v18 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v19 = swift_allocObject();
  outlined init with take of Card.DisplayStyle((uint64_t)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v19 + v18);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, _ClipEffect<Circle>>);
  lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, _ClipEffect<Circle>> and conformance <> ModifiedContent<A, B>();
  Button.init(action:label:)();
  static ContentShapeKinds.interaction.getter();
  if (one-time initialization token for minSize != -1) {
    swift_once();
  }
  double v20 = (*(double *)&static Card.DisplayStyle.Specs.CloseButton.minSize + -44.0) * 0.5;
  uint64_t v21 = &v14[*(int *)(v37 + 36)];
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContentShapeKindModifier<Rectangle._Inset>);
  uint64_t v23 = v38;
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(&v21[*(int *)(v22 + 40)], v7, v38);
  *(double *)uint64_t v21 = v20;
  v21[8] = 0;
  uint64_t v24 = v36;
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v14, v12, v36);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v23);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v24);
  uint64_t v25 = v41;
  PlainButtonStyle.init()();
  lazy protocol witness table accessor for type ModifiedContent<Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, _ClipEffect<Circle>>>, _ContentShapeKindModifier<Rectangle._Inset>> and conformance <> ModifiedContent<A, B>();
  lazy protocol witness table accessor for type Card.DisplayStyle and conformance Card.DisplayStyle((unint64_t *)&lazy protocol witness table cache variable for type PlainButtonStyle and conformance PlainButtonStyle, (void (*)(uint64_t))&type metadata accessor for PlainButtonStyle);
  uint64_t v26 = v43;
  View.buttonStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v25, v26);
  outlined destroy of TaskPriority?((uint64_t)v14, &demangling cache variable for type metadata for ModifiedContent<Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, _ClipEffect<Circle>>>, _ContentShapeKindModifier<Rectangle._Inset>>);
  if (one-time initialization token for insets != -1) {
    swift_once();
  }
  long long v43 = static Card.DisplayStyle.Specs.CloseButton.insets;
  uint64_t v27 = qword_100580B90;
  uint64_t v28 = qword_100580B98;
  char v29 = static Edge.Set.all.getter();
  uint64_t v31 = v39;
  uint64_t v30 = v40;
  uint64_t v32 = v44;
  (*(void (**)(uint64_t, char *, uint64_t))(v39 + 16))(v44, v17, v40);
  uint64_t v33 = v32
      + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _PaddingLayout>)
               + 36);
  *(unsigned char *)uint64_t v33 = v29;
  *(_OWORD *)(v33 + 8) = v43;
  *(void *)(v33 + 24) = v27;
  *(void *)(v33 + 32) = v28;
  *(unsigned char *)(v33 + 40) = 0;
  return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v17, v30);
}

uint64_t closure #1 in closure #2 in Card.DisplayStyle.body(content:)()
{
  uint64_t v0 = type metadata accessor for DismissAction();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin();
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Card.DisplayStyle();
  specialized Environment.wrappedValue.getter((uint64_t)v3);
  DismissAction.callAsFunction()();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t closure #2 in closure #2 in Card.DisplayStyle.body(content:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v38 = a1;
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _BackgroundStyleModifier<Material>);
  __chkstk_darwin();
  uint64_t v2 = (char *)&v32 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = type metadata accessor for Material();
  uint64_t v36 = *(void *)(v41 - 8);
  __chkstk_darwin();
  uint64_t v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>);
  __chkstk_darwin();
  uint64_t v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, _ClipEffect<Circle>>);
  __chkstk_darwin();
  uint64_t v35 = (uint64_t)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = Image.init(systemName:)();
  uint64_t v39 = static Color.secondary.getter();
  uint64_t KeyPath = swift_getKeyPath();
  if (one-time initialization token for font != -1) {
    swift_once();
  }
  uint64_t v8 = static Card.DisplayStyle.Specs.CloseButton.font;
  uint64_t v9 = swift_getKeyPath();
  uint64_t v10 = one-time initialization token for labelPadding;
  swift_retain();
  if (v10 != -1) {
    swift_once();
  }
  LODWORD(v33) = static Edge.Set.all.getter();
  EdgeInsets.init(_all:)();
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  uint64_t v18 = v17;
  if (one-time initialization token for minSize != -1) {
    swift_once();
  }
  static Alignment.center.getter();
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  *(void *)&long long v44 = v43;
  *((void *)&v44 + 1) = KeyPath;
  *(void *)&long long v45 = v39;
  *((void *)&v45 + 1) = v9;
  *(void *)&long long v46 = v8;
  BYTE8(v46) = v33;
  *(void *)&long long v47 = v12;
  *((void *)&v47 + 1) = v14;
  *(void *)&long long v48 = v16;
  *((void *)&v48 + 1) = v18;
  LOBYTE(v49) = 0;
  *((void *)&v49 + 1) = v56;
  LOBYTE(v50) = v57;
  *((void *)&v50 + 1) = v58;
  LOBYTE(v51) = v59;
  *((void *)&v51 + 1) = v60;
  LOBYTE(v52) = v61;
  *((void *)&v52 + 1) = v62;
  LOBYTE(v53) = v63;
  *((void *)&v53 + 1) = v64;
  LOBYTE(v54) = v65;
  *((void *)&v54 + 1) = v66;
  v55[0] = v67;
  *(_OWORD *)&v55[8] = v68;
  static Material.thin.getter();
  char v19 = static Edge.Set.all.getter();
  uint64_t v33 = v9;
  uint64_t v20 = v36;
  uint64_t v21 = (uint64_t)v2;
  uint64_t v22 = v2;
  uint64_t v23 = v41;
  (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v22, v4, v41);
  *(unsigned char *)(v21 + *(int *)(v40 + 36)) = v19;
  outlined init with copy of (String, Any)(v21, (uint64_t)&v6[*(int *)(v34 + 36)], &demangling cache variable for type metadata for _BackgroundStyleModifier<Material>);
  long long v24 = *(_OWORD *)v55;
  *((_OWORD *)v6 + 10) = v54;
  *((_OWORD *)v6 + 11) = v24;
  *((void *)v6 + 24) = *(void *)&v55[16];
  long long v25 = v51;
  *((_OWORD *)v6 + 6) = v50;
  *((_OWORD *)v6 + 7) = v25;
  long long v26 = v53;
  *((_OWORD *)v6 + 8) = v52;
  *((_OWORD *)v6 + 9) = v26;
  long long v27 = v47;
  *((_OWORD *)v6 + 2) = v46;
  *((_OWORD *)v6 + 3) = v27;
  long long v28 = v49;
  *((_OWORD *)v6 + 4) = v48;
  *((_OWORD *)v6 + 5) = v28;
  long long v29 = v45;
  *(_OWORD *)uint64_t v6 = v44;
  *((_OWORD *)v6 + 1) = v29;
  outlined retain of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FlexFrameLayout>((uint64_t)&v44);
  outlined destroy of TaskPriority?(v21, &demangling cache variable for type metadata for _BackgroundStyleModifier<Material>);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v4, v23);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v30 = v35;
  outlined init with copy of (String, Any)((uint64_t)v6, v35, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>);
  *(_WORD *)(v30 + *(int *)(v42 + 36)) = 256;
  outlined destroy of TaskPriority?((uint64_t)v6, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>);
  return outlined init with take of PresentationSource?(v30, v38, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, _ClipEffect<Circle>>);
}

uint64_t Card.ViewController.__allocating_init(content:)(uint64_t a1)
{
  uint64_t v2 = v1;
  id v4 = objc_allocWithZone(v1);
  specialized Card.ViewController.init(content:)(a1);
  uint64_t v6 = v5;
  (*(void (**)(uint64_t))(*(void *)(*((void *)v2 + 10) - 8) + 8))(a1);
  return v6;
}

uint64_t Card.ViewController.init(content:)(uint64_t a1)
{
  uint64_t v3 = swift_isaMask & *v1;
  specialized Card.ViewController.init(content:)(a1);
  uint64_t v5 = v4;
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v3 + 80) - 8) + 8))(a1);
  return v5;
}

uint64_t closure #1 in Card.ViewController.init(content:)()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    Card.ViewController.preferredContentSize(forWidth:)(0, 1);
    uint64_t v3 = v2;

    return v3;
  }
  else
  {
    id v5 = [self largeDetent];
    uint64_t v4 = UISheetPresentationControllerDetent.resolvedValue(in:)();
  }
  return v4;
}

void @objc Card.ViewController.init(coder:)(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  specialized Card.ViewController.init(coder:)();
}

Swift::Void __swiftcall Card.ViewController.viewDidLoad()()
{
  uint64_t ObjectType = swift_getObjectType();
  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for Card.ViewController();
  objc_msgSendSuper2(&v3, "viewDidLoad");
  Card.ViewController.preferredContentSize(forWidth:)(0, 1);
  objc_msgSend(v0, "setPreferredContentSize:");
  __swift_instantiateConcreteTypeFromMangledName(&_ss23_ContiguousArrayStorageCy5UIKit17UITraitDefinition_pXpGMD_0);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_100493400;
  *(void *)(v2 + 32) = type metadata accessor for UITraitPreferredContentSizeCategory();
  *(void *)(v2 + 40) = &protocol witness table for UITraitPreferredContentSizeCategory;
  *(void *)(swift_allocObject() + 16) = ObjectType;
  UIViewController.registerForTraitChanges<A>(_:handler:)();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
}

void @objc Card.ViewController.viewDidLoad()(void *a1)
{
  id v1 = a1;
  Card.ViewController.viewDidLoad()();
}

id Card.ViewController.viewWillTransition(to:with:)(uint64_t a1, double a2, double a3)
{
  Card.ViewController.preferredContentSize(forWidth:)(*(uint64_t *)&a2, 0);
  objc_msgSend(v3, "setPreferredContentSize:");
  v8.receiver = v3;
  v8.super_class = (Class)type metadata accessor for Card.ViewController();
  return objc_msgSendSuper2(&v8, "viewWillTransitionToSize:withTransitionCoordinator:", a1, a2, a3);
}

void @objc Card.ViewController.viewWillTransition(to:with:)(void *a1, double a2, double a3, uint64_t a4, uint64_t a5)
{
  swift_unknownObjectRetain();
  id v9 = a1;
  Card.ViewController.viewWillTransition(to:with:)(a5, a2, a3);
  swift_unknownObjectRelease();
}

Swift::Void __swiftcall Card.ViewController.viewDidLayoutSubviews()()
{
  v49.receiver = v0;
  v49.super_class = (Class)type metadata accessor for Card.ViewController();
  objc_msgSendSuper2(&v49, "viewDidLayoutSubviews");
  id v1 = [v0 view];
  if (!v1)
  {
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v2 = v1;
  [v1 bounds];
  CGFloat v4 = v3;
  CGFloat v6 = v5;
  CGFloat v8 = v7;
  CGFloat v10 = v9;

  v50.origin.CGFloat x = v4;
  v50.origin.CGFloat y = v6;
  v50.size.width = v8;
  v50.size.CGFloat height = v10;
  *(double *)&uint64_t v11 = CGRectGetWidth(v50);
  Card.ViewController.preferredContentSize(forWidth:)(v11, 0);
  CGFloat v13 = v12;
  v51.size.CGFloat height = v14;
  v51.origin.CGFloat x = 0.0;
  v51.origin.CGFloat y = 0.0;
  v51.size.width = v13;
  double Height = CGRectGetHeight(v51);
  id v16 = [v0 view];
  if (!v16)
  {
LABEL_10:
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v17 = v16;
  [v16 bounds];
  CGFloat v19 = v18;
  CGFloat v21 = v20;
  CGFloat v23 = v22;
  CGFloat v25 = v24;

  v52.origin.CGFloat x = v19;
  v52.origin.CGFloat y = v21;
  v52.size.width = v23;
  v52.size.CGFloat height = v25;
  double v26 = CGRectGetHeight(v52);
  if (v26 < Height) {
    double Height = v26;
  }
  id v27 = [v0 view];
  if (!v27) {
    goto LABEL_11;
  }
  long long v28 = v27;
  [v27 bounds];
  CGFloat v30 = v29;
  CGFloat v32 = v31;
  CGFloat v34 = v33;
  CGFloat v36 = v35;

  v53.origin.CGFloat x = v30;
  v53.origin.CGFloat y = v32;
  v53.size.width = v34;
  v53.size.CGFloat height = v36;
  CGRectGetMaxY(v53);
  v54.origin.CGFloat x = 0.0;
  v54.origin.CGFloat y = 0.0;
  v54.size.width = v13;
  v54.size.CGFloat height = Height;
  CGRectGetHeight(v54);
  id v37 = [*(id *)&v0[direct field offset for Card.ViewController.hostingController] view];
  if (!v37)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v38 = v37;
  id v39 = [v0 view];
  if (v39)
  {
    uint64_t v40 = v39;
    CGRect.centeringAlong(axes:in:)();
    double v42 = v41;
    double v44 = v43;
    double v46 = v45;
    double v48 = v47;

    objc_msgSend(v38, "setFrame:", v42, v44, v46, v48);
    return;
  }
LABEL_13:
  __break(1u);
}

void @objc Card.ViewController.viewDidLayoutSubviews()(void *a1)
{
  id v1 = a1;
  Card.ViewController.viewDidLayoutSubviews()();
}

uint64_t @objc Card.ViewController.prefersHomeIndicatorAutoHidden.getter()
{
  return 1;
}

void Card.ViewController.preferredContentSize(forWidth:)(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0)
  {
LABEL_7:
    id v15 = [v2 presentingViewController];
    if (!v15
      || (id v16 = v15,
          id v17 = [v15 traitCollection],
          v16,
          !v17))
    {
      id v18 = [v2 presentationController];
      id v19 = v18;
      if (!v18)
      {
LABEL_12:
        id v20 = *(id *)&v2[direct field offset for Card.ViewController.hostingController];
        dispatch thunk of UIHostingController.sizeThatFits(in:)();

        return;
      }
      id v17 = [v18 traitCollection];

      if (!v17)
      {
        id v19 = 0;
        goto LABEL_12;
      }
    }
    id v19 = v17;
    [v19 horizontalSizeClass];

    goto LABEL_12;
  }
  id v3 = [v2 presentationController];
  if (v3)
  {
    CGFloat v4 = v3;
    id v5 = [v3 containerView];

    if (v5)
    {
LABEL_6:
      [v5 bounds];
      CGFloat v8 = v7;
      CGFloat v10 = v9;
      CGFloat v12 = v11;
      CGFloat v14 = v13;

      v21.origin.CGFloat x = v8;
      v21.origin.CGFloat y = v10;
      v21.size.width = v12;
      v21.size.CGFloat height = v14;
      CGRectGetWidth(v21);
      goto LABEL_7;
    }
  }
  id v6 = [v2 view];
  if (v6)
  {
    id v5 = v6;
    goto LABEL_6;
  }
  __break(1u);
}

void Card.ViewController.init(nibName:bundle:)()
{
}

void @objc Card.ViewController.init(nibName:bundle:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v4 = a4;

  specialized Card.ViewController.init(nibName:bundle:)();
}

id Card.ViewController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for Card.ViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

void @objc Card.ViewController.__ivar_destroyer(uint64_t a1)
{
}

uint64_t View.cardDisplayStyle()()
{
  uint64_t v0 = type metadata accessor for Card.DisplayStyle();
  __chkstk_darwin();
  objc_super v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  id v4 = (char *)&v7 - v3;
  *(void *)objc_super v2 = swift_getKeyPath();
  *((_WORD *)v2 + 4) = 0;
  id v5 = (uint64_t *)&v2[*(int *)(v0 + 20)];
  *id v5 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DismissAction>.Content);
  swift_storeEnumTagMultiPayload();
  outlined init with take of Card.DisplayStyle((uint64_t)v2, (uint64_t)v4);
  View.modifier<A>(_:)();
  return outlined destroy of RoundedRectangle((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for Card.DisplayStyle);
}

void specialized Card.ViewController.init(content:)(uint64_t a1)
{
  uint64_t v49 = swift_isaMask & *v1;
  uint64_t v3 = v49;
  uint64_t v4 = type metadata accessor for Card.DisplayStyle();
  __chkstk_darwin();
  id v6 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  CGFloat v8 = (char *)&v46 - v7;
  uint64_t v9 = *(void *)(v3 + 80);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin();
  CGFloat v12 = (char *)&v46 - v11;
  uint64_t v13 = type metadata accessor for ModifiedContent();
  uint64_t v50 = *(void *)(v13 - 8);
  __chkstk_darwin();
  double v48 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  id v16 = (char *)&v46 - v15;
  *(void *)((char *)v1 + direct field offset for Card.ViewController.maxRegularWidth) = 0x4079E00000000000;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a1, v9);
  *(void *)id v6 = swift_getKeyPath();
  *((_WORD *)v6 + 4) = 0;
  id v17 = (uint64_t *)&v6[*(int *)(v4 + 20)];
  *id v17 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DismissAction>.Content);
  swift_storeEnumTagMultiPayload();
  outlined init with take of Card.DisplayStyle((uint64_t)v6, (uint64_t)v8);
  id v18 = v1;
  ModifiedContent.init(content:modifier:)();
  uint64_t v19 = *(void *)(v49 + 88);
  uint64_t v20 = lazy protocol witness table accessor for type Card.DisplayStyle and conformance Card.DisplayStyle(&lazy protocol witness table cache variable for type Card.DisplayStyle and conformance Card.DisplayStyle, (void (*)(uint64_t))type metadata accessor for Card.DisplayStyle);
  uint64_t v53 = v19;
  uint64_t v54 = v20;
  swift_getWitnessTable();
  type metadata accessor for UIHostingController();
  CGRect v21 = *(void (**)(char *, char *, uint64_t))(v50 + 16);
  double v47 = v16;
  uint64_t v49 = v13;
  v21(v48, v16, v13);
  double v22 = (void *)UIHostingController.__allocating_init(rootView:)();
  uint64_t v23 = direct field offset for Card.ViewController.hostingController;
  *(void *)((char *)v18 + direct field offset for Card.ViewController.hostingController) = v22;
  id v24 = v22;
  UIHostingController.safeAreaRegions.setter();

  id v25 = [*(id *)((char *)v18 + v23) view];
  if (!v25)
  {

    __break(1u);
LABEL_9:

    __break(1u);
    goto LABEL_10;
  }
  double v26 = v25;
  id v27 = self;
  id v28 = [v27 clearColor];
  [v26 setBackgroundColor:v28];

  uint64_t v29 = v9;
  CGFloat v30 = (objc_class *)type metadata accessor for Card.ViewController();
  v52.receiver = v18;
  v52.super_class = v30;
  id v18 = objc_msgSendSuper2(&v52, "initWithNibName:bundle:", 0, 0);
  [v18 setModalPresentationStyle:2];
  id v31 = [v18 sheetPresentationController];
  if (v31)
  {
    CGFloat v32 = v31;
    __swift_instantiateConcreteTypeFromMangledName(&_ss23_ContiguousArrayStorageCyyXlGMD_1);
    uint64_t v33 = swift_allocObject();
    *(_OWORD *)(v33 + 16) = xmmword_100493D20;
    type metadata accessor for UISheetPresentationControllerDetent();
    uint64_t v34 = swift_allocObject();
    swift_unknownObjectWeakInit();
    double v35 = (void *)swift_allocObject();
    v35[2] = v29;
    v35[3] = v19;
    v35[4] = v34;
    swift_retain();
    uint64_t v36 = static UISheetPresentationControllerDetent.custom(identifier:resolver:)();
    swift_release();
    swift_release();
    *(void *)(v33 + 32) = v36;
    uint64_t v51 = v33;
    specialized Array._endMutation()();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v32 setDetents:isa];

    [v32 setWidthFollowsPreferredContentSizeWhenEdgeAttached:1];
  }
  id v38 = [v18 view];
  if (!v38) {
    goto LABEL_9;
  }
  id v39 = v38;
  id v40 = [v27 clearColor];
  [v39 setBackgroundColor:v40];

  uint64_t v41 = direct field offset for Card.ViewController.hostingController;
  [v18 addChildViewController:*(void *)((char *)v18 + direct field offset for Card.ViewController.hostingController)];
  id v42 = [v18 view];
  if (!v42)
  {
LABEL_10:

    __break(1u);
    goto LABEL_11;
  }
  double v43 = v42;
  id v44 = [*(id *)((char *)v18 + v41) view];
  if (v44)
  {
    double v45 = v44;
    [v43 addSubview:v44];

    (*(void (**)(char *, uint64_t))(v50 + 8))(v47, v49);
    return;
  }
LABEL_11:

  __break(1u);
}

void specialized Card.ViewController.init(coder:)()
{
  *(void *)&v0[direct field offset for Card.ViewController.maxRegularWidth] = 0x4079E00000000000;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t type metadata accessor for Card.ViewController()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1003959D8()
{
  return swift_deallocObject();
}

id specialized closure #1 in Card.ViewController.viewDidLoad()(void *a1)
{
  Card.ViewController.preferredContentSize(forWidth:)(0, 1);

  return objc_msgSend(a1, "setPreferredContentSize:");
}

void specialized Card.ViewController.init(nibName:bundle:)()
{
}

uint64_t type metadata accessor for Card.DisplayStyle()
{
  uint64_t result = type metadata singleton initialization cache for Card.DisplayStyle;
  if (!type metadata singleton initialization cache for Card.DisplayStyle) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t outlined init with take of Card.DisplayStyle(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Card.DisplayStyle();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of RoundedRectangle(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t associated type witness table accessor for ViewModifier.Body : View in Card.DisplayStyle()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for Card()
{
  return &type metadata for Card;
}

unint64_t initializeBufferWithCopyOfBuffer for Card.DisplayStyle(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v14 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = *(void *)a2;
    char v8 = *(unsigned char *)(a2 + 9);
    unsigned __int8 v9 = *(unsigned char *)(a2 + 8);
    outlined copy of Environment<CGFloat?>.Content(*(void *)a2, v9, v8);
    *(void *)a1 = v7;
    *(unsigned char *)(a1 + 8) = v9;
    *(unsigned char *)(a1 + 9) = v8;
    uint64_t v10 = *(int *)(a3 + 20);
    uint64_t v11 = (void *)(a1 + v10);
    CGFloat v12 = (void *)(a2 + v10);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DismissAction>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = type metadata accessor for DismissAction();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
    }
    else
    {
      *uint64_t v11 = *v12;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for Card.DisplayStyle(uint64_t a1, uint64_t a2)
{
  outlined consume of Environment<CGFloat?>.Content(*(void *)a1, *(unsigned __int8 *)(a1 + 8), *(unsigned char *)(a1 + 9));
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DismissAction>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for DismissAction();
    id v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    return v6(v4, v5);
  }
  else
  {
    return swift_release();
  }
}

uint64_t initializeWithCopy for Card.DisplayStyle(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 9);
  unsigned __int8 v8 = *(unsigned char *)(a2 + 8);
  outlined copy of Environment<CGFloat?>.Content(*(void *)a2, v8, v7);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v8;
  *(unsigned char *)(a1 + 9) = v7;
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (void *)(a2 + v9);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DismissAction>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = type metadata accessor for DismissAction();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
  }
  else
  {
    *uint64_t v10 = *v11;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for Card.DisplayStyle(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 9);
  unsigned __int8 v8 = *(unsigned char *)(a2 + 8);
  outlined copy of Environment<CGFloat?>.Content(*(void *)a2, v8, v7);
  uint64_t v9 = *(void *)a1;
  char v10 = *(unsigned char *)(a1 + 9);
  *(void *)a1 = v6;
  uint64_t v11 = *(unsigned __int8 *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v8;
  *(unsigned char *)(a1 + 9) = v7;
  outlined consume of Environment<CGFloat?>.Content(v9, v11, v10);
  if (a1 != a2)
  {
    uint64_t v12 = *(int *)(a3 + 20);
    uint64_t v13 = (void *)(a1 + v12);
    uint64_t v14 = (void *)(a2 + v12);
    outlined destroy of TaskPriority?(a1 + v12, &demangling cache variable for type metadata for Environment<DismissAction>.Content);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DismissAction>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v15 = type metadata accessor for DismissAction();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    }
    else
    {
      void *v13 = *v14;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t initializeWithTake for Card.DisplayStyle(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (void *)(a1 + v4);
  uint64_t v6 = (const void *)(a2 + v4);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DismissAction>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = type metadata accessor for DismissAction();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 32))(v5, v6, v8);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v5, v6, *(void *)(*(void *)(v7 - 8) + 64));
  }
  return a1;
}

uint64_t assignWithTake for Card.DisplayStyle(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6 = *(unsigned char *)(a2 + 8);
  char v7 = *(unsigned char *)(a2 + 9);
  uint64_t v8 = *(void *)a1;
  char v9 = *(unsigned char *)(a1 + 9);
  *(void *)a1 = *(void *)a2;
  uint64_t v10 = *(unsigned __int8 *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 9) = v7;
  outlined consume of Environment<CGFloat?>.Content(v8, v10, v9);
  if (a1 != a2)
  {
    uint64_t v11 = *(int *)(a3 + 20);
    uint64_t v12 = (void *)(a1 + v11);
    uint64_t v13 = (const void *)(a2 + v11);
    outlined destroy of TaskPriority?(a1 + v11, &demangling cache variable for type metadata for Environment<DismissAction>.Content);
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DismissAction>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v15 = type metadata accessor for DismissAction();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v15 - 8) + 32))(v12, v13, v15);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for Card.DisplayStyle(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003961CC);
}

uint64_t sub_1003961CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 9);
    if (v4 > 1) {
      return (v4 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DismissAction>);
    char v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for Card.DisplayStyle(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10039628C);
}

uint64_t sub_10039628C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 254)
  {
    *(unsigned char *)(result + 9) = -(char)a2;
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DismissAction>);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void type metadata completion function for Card.DisplayStyle()
{
  type metadata accessor for Environment<DismissAction>.Content();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t type metadata completion function for Card.ViewController()
{
  return swift_initClassMetadata2();
}

uint64_t sub_100396420()
{
  return lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.scrollBounceBehavior(_:axes:)>>.0, _SafeAreaRegionsIgnoringLayout>, _OverlayModifier<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _PaddingLayout>>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.scrollBounceBehavior(_:axes:)>>.0, _SafeAreaRegionsIgnoringLayout>, _OverlayModifier<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _PaddingLayout>>>, _PaddingLayout>, (void (*)(void))lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<<<opaque return type of View.scrollBounceBehavior(_:axes:)>>.0, _SafeAreaRegionsIgnoringLayout>, _OverlayModifier<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _PaddingLayout>>> and conformance <> ModifiedContent<A, B>);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<<<opaque return type of View.scrollBounceBehavior(_:axes:)>>.0, _SafeAreaRegionsIgnoringLayout>, _OverlayModifier<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _PaddingLayout>>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<<<opaque return type of View.scrollBounceBehavior(_:axes:)>>.0, _SafeAreaRegionsIgnoringLayout>, _OverlayModifier<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _PaddingLayout>>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<<<opaque return type of View.scrollBounceBehavior(_:axes:)>>.0, _SafeAreaRegionsIgnoringLayout>, _OverlayModifier<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _PaddingLayout>>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.scrollBounceBehavior(_:axes:)>>.0, _SafeAreaRegionsIgnoringLayout>, _OverlayModifier<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _PaddingLayout>>>);
    lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.scrollBounceBehavior(_:axes:)>>.0, _SafeAreaRegionsIgnoringLayout> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type _OverlayModifier<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _PaddingLayout>> and conformance _OverlayModifier<A>, &demangling cache variable for type metadata for _OverlayModifier<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _PaddingLayout>>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<<<opaque return type of View.scrollBounceBehavior(_:axes:)>>.0, _SafeAreaRegionsIgnoringLayout>, _OverlayModifier<ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _PaddingLayout>>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.scrollBounceBehavior(_:axes:)>>.0, _SafeAreaRegionsIgnoringLayout> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.scrollBounceBehavior(_:axes:)>>.0, _SafeAreaRegionsIgnoringLayout> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.scrollBounceBehavior(_:axes:)>>.0, _SafeAreaRegionsIgnoringLayout> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.scrollBounceBehavior(_:axes:)>>.0, _SafeAreaRegionsIgnoringLayout>);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for <<opaque return type of View.scrollIndicators(_:axes:)>>.0);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ScrollView<ModifiedContent<_ViewModifier_Content<Card.DisplayStyle>, _PaddingLayout>>, _BackgroundStyleModifier<BackgroundStyle>>, _ClipEffect<RoundedRectangle>>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ScrollView<ModifiedContent<_ViewModifier_Content<Card.DisplayStyle>, _PaddingLayout>>, _BackgroundStyleModifier<BackgroundStyle>>, _ClipEffect<RoundedRectangle>> and conformance <> ModifiedContent<A, B>();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.scrollBounceBehavior(_:axes:)>>.0, _SafeAreaRegionsIgnoringLayout> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t sub_1003965F0()
{
  return swift_getWitnessTable();
}

unint64_t type metadata accessor for UISheetPresentationControllerDetent()
{
  unint64_t result = lazy cache variable for type metadata for UISheetPresentationControllerDetent;
  if (!lazy cache variable for type metadata for UISheetPresentationControllerDetent)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for UISheetPresentationControllerDetent);
  }
  return result;
}

uint64_t sub_1003966CC()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_100396704()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in Card.ViewController.init(content:)()
{
  return closure #1 in Card.ViewController.init(content:)();
}

uint64_t _s7SwiftUI16RoundedRectangleVWOcTm_0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1003967B0()
{
  uint64_t v1 = (int *)(type metadata accessor for Card.DisplayStyle() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  outlined consume of Environment<CGFloat?>.Content(*(void *)(v0 + v2), *(unsigned __int8 *)(v0 + v2 + 8), *(unsigned char *)(v0 + v2 + 9));
  unint64_t v3 = v0 + v2 + v1[7];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DismissAction>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for DismissAction();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  }
  else
  {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #2 in Card.DisplayStyle.body(content:)()
{
  type metadata accessor for Card.DisplayStyle();

  return closure #1 in closure #2 in Card.DisplayStyle.body(content:)();
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, _ClipEffect<Circle>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, _ClipEffect<Circle>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, _ClipEffect<Circle>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, _ClipEffect<Circle>>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FlexFrameLayout>, _BackgroundStyleModifier<Material>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>((unint64_t *)&lazy protocol witness table cache variable for type _ClipEffect<Circle> and conformance _ClipEffect<A>, &demangling cache variable for type metadata for _ClipEffect<Circle>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, _ClipEffect<Circle>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FlexFrameLayout>, _BackgroundStyleModifier<Material>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FlexFrameLayout>, _BackgroundStyleModifier<Material>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FlexFrameLayout>, _BackgroundStyleModifier<Material>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FlexFrameLayout>, (void (*)(void))lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>);
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type _BackgroundStyleModifier<Material> and conformance _BackgroundStyleModifier<A>, &demangling cache variable for type metadata for _BackgroundStyleModifier<Material>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FlexFrameLayout>, _BackgroundStyleModifier<Material>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>()
{
  return lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, (void (*)(void))lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>);
    lazy protocol witness table accessor for type ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>((unint64_t *)&_s7SwiftUI30_EnvironmentKeyWritingModifierVyAA4FontVSgGACyxGAA04ViewF0AAWL_0, &_s7SwiftUI30_EnvironmentKeyWritingModifierVyAA4FontVSgGMD_0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>);
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Color?> and conformance _EnvironmentKeyWritingModifier<A>, (uint64_t *)&demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Color?>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, _ClipEffect<Circle>>>, _ContentShapeKindModifier<Rectangle._Inset>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, _ClipEffect<Circle>>>, _ContentShapeKindModifier<Rectangle._Inset>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, _ClipEffect<Circle>>>, _ContentShapeKindModifier<Rectangle._Inset>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, _ClipEffect<Circle>>>, _ContentShapeKindModifier<Rectangle._Inset>>);
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, _ClipEffect<Circle>>> and conformance Button<A>, &demangling cache variable for type metadata for Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, _ClipEffect<Circle>>>);
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type _ContentShapeKindModifier<Rectangle._Inset> and conformance _ContentShapeKindModifier<A>, &demangling cache variable for type metadata for _ContentShapeKindModifier<Rectangle._Inset>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<Button<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FlexFrameLayout>, _BackgroundStyleModifier<Material>>, _ClipEffect<Circle>>>, _ContentShapeKindModifier<Rectangle._Inset>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t lazy protocol witness table accessor for type Card.DisplayStyle and conformance Card.DisplayStyle(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t outlined retain of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _FlexFrameLayout>(uint64_t a1)
{
  return a1;
}

double CarouselView.init(items:selectedIndex:selectedItem:animatesProgrammaticSelection:itemSize:horizontalSpacing:carouselToPageIndicatorSpacing:content:didSelect:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, double a10@<D0>, double a11@<D1>, double a12@<D2>, double a13@<D3>, uint64_t a14, uint64_t a15, uint64_t a16, long long a17, uint64_t a18, uint64_t a19)
{
  uint64_t v50 = a7;
  uint64_t v51 = a8;
  int v47 = a6;
  uint64_t v45 = a4;
  uint64_t v46 = a5;
  uint64_t v44 = a3;
  uint64_t v48 = a14;
  uint64_t v49 = a15;
  long long v43 = a17;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScrollViewProxy?);
  __chkstk_darwin();
  id v27 = (char *)&v43 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  a9[1] = 0;
  a9[2] = 0;
  a9[3] = 0;
  *(void *)objc_super v52 = a16;
  *(_OWORD *)&v52[8] = v43;
  uint64_t v53 = a18;
  uint64_t v54 = a19;
  id v28 = (int *)type metadata accessor for CarouselView();
  uint64_t v29 = (char *)a9 + v28[16];
  uint64_t v30 = type metadata accessor for Binding();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v29, 1, 1, v30);
  uint64_t v31 = v28[17];
  *((unsigned char *)a9 + v31) = 1;
  CGFloat v32 = (void *)((char *)a9 + v28[22]);
  *CGFloat v32 = 0;
  v32[1] = 0;
  uint64_t v33 = v28[23];
  uint64_t v55 = 0;
  State.init(wrappedValue:)();
  *(_OWORD *)((char *)a9 + v33) = *(_OWORD *)v52;
  uint64_t v34 = type metadata accessor for ScrollViewProxy();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v27, 1, 1, v34);
  property wrapper backing initializer of CarouselView.scrollViewProxy((uint64_t)v27);
  double v35 = (void *)((char *)a9 + v28[26]);
  *double v35 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<LayoutDirection>.Content);
  swift_storeEnumTagMultiPayload();
  *a9 = a1;
  uint64_t v36 = (double *)((char *)a9 + v28[18]);
  *uint64_t v36 = a10;
  v36[1] = a11;
  outlined consume of OrderedSet<A.Items.Element>?<A>(a9[1], a9[2]);
  uint64_t v37 = v44;
  a9[1] = a2;
  a9[2] = v37;
  a9[3] = v45;
  uint64_t v38 = type metadata accessor for Optional();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v38 - 8) + 40))(v29, v46, v38);
  *((unsigned char *)a9 + v31) = v47;
  *(double *)((char *)a9 + v28[20]) = a12;
  *(double *)((char *)a9 + v28[21]) = a13;
  id v39 = (void *)((char *)a9 + v28[19]);
  uint64_t v40 = v51;
  *id v39 = v50;
  v39[1] = v40;
  outlined consume of (@escaping @callee_guaranteed () -> ())?(*v32);
  uint64_t v41 = v49;
  *CGFloat v32 = v48;
  v32[1] = v41;
  double result = *v36 + a12;
  *(double *)((char *)a9 + v28[25]) = result;
  return result;
}

uint64_t type metadata accessor for CarouselView()
{
  return swift_getGenericMetadata();
}

uint64_t property wrapper backing initializer of CarouselView.currentIndex()
{
  State.init(wrappedValue:)();
  return v1;
}

uint64_t property wrapper backing initializer of CarouselView.scrollViewProxy(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScrollViewProxy?);
  __chkstk_darwin();
  outlined init with copy of (String, Any)(a1, (uint64_t)&v4 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), &demangling cache variable for type metadata for ScrollViewProxy?);
  State.init(wrappedValue:)();
  return outlined destroy of TaskPriority?(a1, &demangling cache variable for type metadata for ScrollViewProxy?);
}

uint64_t CarouselView.body.getter@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  uint64_t v29 = a2;
  uint64_t v3 = a1[2];
  swift_getTupleTypeMetadata2();
  type metadata accessor for Array();
  uint64_t v26 = a1[3];
  unint64_t v4 = a1[6];
  uint64_t v23 = a1;
  unint64_t v27 = v4;
  unint64_t v47 = v4;
  uint64_t v48 = &protocol witness table for Int;
  uint64_t v45 = type metadata accessor for IDView();
  uint64_t WitnessTable = swift_getWitnessTable();
  id v25 = &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>;
  swift_getOpaqueTypeMetadata2();
  v22[2] = swift_getWitnessTable();
  uint64_t v5 = a1[5];
  v22[1] = v3;
  uint64_t v49 = v5;
  uint64_t v6 = v5;
  type metadata accessor for ForEach();
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  id v24 = &protocol conformance descriptor for <> ForEach<A, B, C>;
  swift_getWitnessTable();
  type metadata accessor for LazyHStack();
  swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  uint64_t v7 = type metadata accessor for ModifiedContent();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&_sSiSgMD_1);
  uint64_t v42 = swift_getOpaqueTypeConformance2();
  long long v43 = &protocol witness table for _AppearanceActionModifier;
  uint64_t v9 = swift_getWitnessTable();
  unint64_t v10 = lazy protocol witness table accessor for type Int? and conformance <A> A?();
  swift_getOpaqueTypeMetadata2();
  type metadata accessor for Optional();
  uint64_t v45 = v7;
  uint64_t WitnessTable = v8;
  unint64_t v47 = v9;
  uint64_t v48 = (void *)v10;
  swift_getOpaqueTypeConformance2();
  uint64_t v41 = *(void *)(v6 + 8);
  swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  swift_getOpaqueTypeConformance2();
  type metadata accessor for ScrollView();
  type metadata accessor for SafeAreaPaddingModifier();
  type metadata accessor for ModifiedContent();
  type metadata accessor for ViewAlignedScrollTargetBehavior();
  uint64_t v39 = swift_getWitnessTable();
  uint64_t v40 = lazy protocol witness table accessor for type SafeAreaPaddingModifier and conformance SafeAreaPaddingModifier(&lazy protocol witness table cache variable for type SafeAreaPaddingModifier and conformance SafeAreaPaddingModifier, (void (*)(uint64_t))&type metadata accessor for SafeAreaPaddingModifier);
  swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  swift_getOpaqueTypeConformance2();
  swift_getOpaqueTypeMetadata2();
  swift_getOpaqueTypeConformance2();
  lazy protocol witness table accessor for type CGFloat and conformance CGFloat();
  swift_getOpaqueTypeMetadata2();
  swift_getOpaqueTypeConformance2();
  swift_getOpaqueTypeMetadata2();
  swift_getOpaqueTypeConformance2();
  swift_getOpaqueTypeMetadata2();
  swift_getOpaqueTypeConformance2();
  type metadata accessor for GeometryReader();
  type metadata accessor for ModifiedContent();
  uint64_t v37 = swift_getWitnessTable();
  uint64_t v38 = &protocol witness table for _FrameLayout;
  swift_getWitnessTable();
  type metadata accessor for ScrollViewReader();
  type metadata accessor for ModifiedContent();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for <<opaque return type of View.onTapGesture(count:perform:)>>.0);
  uint64_t v11 = v3;
  uint64_t v49 = v6;
  type metadata accessor for ForEach();
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for <<opaque return type of View.hoverEffect<A>(_:isEnabled:)>>.0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<Group<_ConditionalContent<ModifiedContent<<<opaque return type of View.dynamicTypeSize(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<Circle, _FrameLayout>, _EnvironmentKeyWritingModifier<Color?>>>>, _AnimationModifier<Bool>>);
  type metadata accessor for AutomaticHoverEffect();
  unint64_t v47 = lazy protocol witness table accessor for type ModifiedContent<Group<_ConditionalContent<ModifiedContent<<<opaque return type of View.dynamicTypeSize(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<Circle, _FrameLayout>, _EnvironmentKeyWritingModifier<Color?>>>>, _AnimationModifier<Bool>> and conformance <> ModifiedContent<A, B>();
  uint64_t v48 = (void *)lazy protocol witness table accessor for type SafeAreaPaddingModifier and conformance SafeAreaPaddingModifier(&lazy protocol witness table cache variable for type AutomaticHoverEffect and conformance AutomaticHoverEffect, (void (*)(uint64_t))&type metadata accessor for AutomaticHoverEffect);
  uint64_t v45 = v12;
  uint64_t WitnessTable = swift_getOpaqueTypeConformance2();
  uint64_t v36 = swift_getOpaqueTypeConformance2();
  swift_getWitnessTable();
  type metadata accessor for HStack();
  type metadata accessor for ModifiedContent();
  type metadata accessor for Optional();
  swift_getTupleTypeMetadata2();
  type metadata accessor for TupleView();
  swift_getWitnessTable();
  uint64_t v13 = type metadata accessor for VStack();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin();
  id v16 = (char *)v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  id v18 = (char *)v22 - v17;
  uint64_t v30 = v11;
  uint64_t v31 = v26;
  uint64_t v32 = v23[4];
  uint64_t v33 = v6;
  unint64_t v34 = v27;
  uint64_t v35 = v28;
  static HorizontalAlignment.center.getter();
  VStack.init(alignment:spacing:content:)();
  swift_getWitnessTable();
  uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
  v19(v18, v16, v13);
  uint64_t v20 = *(void (**)(char *, uint64_t))(v14 + 8);
  v20(v16, v13);
  v19(v29, v18, v13);
  return ((uint64_t (*)(char *, uint64_t))v20)(v18, v13);
}

uint64_t closure #1 in CarouselView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, unint64_t a4@<X3>, void *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v110 = a6;
  uint64_t v104 = a7;
  uint64_t v105 = a1;
  swift_getTupleTypeMetadata2();
  uint64_t v97 = type metadata accessor for Array();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for <<opaque return type of View.onTapGesture(count:perform:)>>.0);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v145 = (uint64_t)a5;
  uint64_t v11 = type metadata accessor for ForEach();
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for <<opaque return type of View.hoverEffect<A>(_:isEnabled:)>>.0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<Group<_ConditionalContent<ModifiedContent<<<opaque return type of View.dynamicTypeSize(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<Circle, _FrameLayout>, _EnvironmentKeyWritingModifier<Color?>>>>, _AnimationModifier<Bool>>);
  type metadata accessor for AutomaticHoverEffect();
  unint64_t v143 = lazy protocol witness table accessor for type ModifiedContent<Group<_ConditionalContent<ModifiedContent<<<opaque return type of View.dynamicTypeSize(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<Circle, _FrameLayout>, _EnvironmentKeyWritingModifier<Color?>>>>, _AnimationModifier<Bool>> and conformance <> ModifiedContent<A, B>();
  int v144 = (void *)lazy protocol witness table accessor for type SafeAreaPaddingModifier and conformance SafeAreaPaddingModifier(&lazy protocol witness table cache variable for type AutomaticHoverEffect and conformance AutomaticHoverEffect, (void (*)(uint64_t))&type metadata accessor for AutomaticHoverEffect);
  uint64_t v141 = v12;
  uint64_t OpaqueTypeConformance2 = (char *)swift_getOpaqueTypeConformance2();
  uint64_t v94 = &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>;
  uint64_t v148 = swift_getOpaqueTypeConformance2();
  uint64_t v95 = &protocol conformance descriptor for <> ForEach<A, B, C>;
  uint64_t v91 = v11;
  uint64_t v86 = swift_getWitnessTable();
  uint64_t v90 = *(void *)(type metadata accessor for HStack() - 8);
  __chkstk_darwin();
  uint64_t v88 = (char *)&v86 - v13;
  uint64_t v103 = v14;
  uint64_t v101 = *(void *)(type metadata accessor for ModifiedContent() - 8);
  __chkstk_darwin();
  uint64_t v87 = (char *)&v86 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v89 = (char *)&v86 - v16;
  uint64_t v108 = v17;
  uint64_t v109 = type metadata accessor for Optional();
  uint64_t v102 = *(void *)(v109 - 8);
  __chkstk_darwin();
  uint64_t v107 = (char *)&v86 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  long long v106 = (char *)&v86 - v19;
  uint64_t v20 = (char *)a2;
  uint64_t v141 = a2;
  uint64_t OpaqueTypeConformance2 = a3;
  unint64_t v21 = a4;
  unint64_t v143 = a4;
  int v144 = a5;
  uint64_t v22 = (uint64_t)a5;
  uint64_t v145 = v110;
  uint64_t v23 = type metadata accessor for CarouselView();
  uint64_t v24 = *(void *)(v23 - 8);
  __chkstk_darwin();
  uint64_t v26 = (char *)&v86 - v25;
  unint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(v24 + 16);
  uint64_t v100 = v23;
  v27((char *)&v86 - v25, v105, v23);
  unint64_t v28 = (*(unsigned __int8 *)(v24 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  uint64_t v29 = (char *)swift_allocObject();
  uint64_t v99 = (uint64_t)v29;
  *((void *)v29 + 2) = v20;
  *((void *)v29 + 3) = a3;
  uint64_t v93 = v21;
  *((void *)v29 + 4) = v21;
  *((void *)v29 + 5) = v22;
  unint64_t v30 = v110;
  *((void *)v29 + 6) = v110;
  (*(void (**)(char *, char *, uint64_t))(v24 + 32))(&v29[v28], v26, v23);
  uint64_t v92 = (uint64_t)a3;
  uint64_t v141 = (uint64_t)a3;
  uint64_t OpaqueTypeConformance2 = (char *)&type metadata for Int;
  unint64_t v143 = v30;
  int v144 = &protocol witness table for Int;
  uint64_t v31 = type metadata accessor for IDView();
  uint64_t v32 = swift_getWitnessTable();
  uint64_t v141 = v31;
  uint64_t OpaqueTypeConformance2 = (char *)v32;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v141 = v97;
  uint64_t OpaqueTypeConformance2 = v20;
  uint64_t v98 = (uint64_t)v20;
  unint64_t v143 = OpaqueTypeMetadata2;
  int v144 = (void *)WitnessTable;
  uint64_t v145 = v22;
  uint64_t v34 = v22;
  type metadata accessor for ForEach();
  uint64_t v141 = v31;
  uint64_t OpaqueTypeConformance2 = (char *)v32;
  uint64_t v133 = swift_getOpaqueTypeConformance2();
  swift_getWitnessTable();
  uint64_t v35 = type metadata accessor for LazyHStack();
  uint64_t v36 = swift_getWitnessTable();
  uint64_t v141 = v35;
  uint64_t OpaqueTypeConformance2 = (char *)v36;
  swift_getOpaqueTypeMetadata2();
  uint64_t v37 = type metadata accessor for ModifiedContent();
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&_sSiSgMD_1);
  uint64_t v141 = v35;
  uint64_t OpaqueTypeConformance2 = (char *)v36;
  uint64_t v131 = swift_getOpaqueTypeConformance2();
  uint64_t v132 = &protocol witness table for _AppearanceActionModifier;
  uint64_t v39 = swift_getWitnessTable();
  unint64_t v40 = lazy protocol witness table accessor for type Int? and conformance <A> A?();
  uint64_t v141 = v37;
  uint64_t OpaqueTypeConformance2 = (char *)v38;
  unint64_t v143 = v39;
  int v144 = (void *)v40;
  uint64_t v41 = swift_getOpaqueTypeMetadata2();
  uint64_t v42 = type metadata accessor for Optional();
  uint64_t v141 = v37;
  uint64_t OpaqueTypeConformance2 = (char *)v38;
  unint64_t v143 = v39;
  int v144 = (void *)v40;
  uint64_t v43 = swift_getOpaqueTypeConformance2();
  uint64_t v97 = v34;
  uint64_t v130 = *(void *)(v34 + 8);
  uint64_t v44 = swift_getWitnessTable();
  uint64_t v141 = v41;
  uint64_t OpaqueTypeConformance2 = (char *)v42;
  unint64_t v143 = v43;
  int v144 = (void *)v44;
  swift_getOpaqueTypeMetadata2();
  uint64_t v141 = v41;
  uint64_t OpaqueTypeConformance2 = (char *)v42;
  unint64_t v143 = v43;
  int v144 = (void *)v44;
  swift_getOpaqueTypeConformance2();
  type metadata accessor for ScrollView();
  type metadata accessor for SafeAreaPaddingModifier();
  uint64_t v45 = type metadata accessor for ModifiedContent();
  uint64_t v46 = type metadata accessor for ViewAlignedScrollTargetBehavior();
  uint64_t v47 = swift_getWitnessTable();
  uint64_t v48 = lazy protocol witness table accessor for type SafeAreaPaddingModifier and conformance SafeAreaPaddingModifier(&lazy protocol witness table cache variable for type SafeAreaPaddingModifier and conformance SafeAreaPaddingModifier, (void (*)(uint64_t))&type metadata accessor for SafeAreaPaddingModifier);
  uint64_t v128 = v47;
  uint64_t v129 = v48;
  uint64_t v49 = swift_getWitnessTable();
  uint64_t v141 = v45;
  uint64_t OpaqueTypeConformance2 = (char *)v46;
  unint64_t v143 = v49;
  int v144 = &protocol witness table for ViewAlignedScrollTargetBehavior;
  uint64_t v50 = swift_getOpaqueTypeMetadata2();
  uint64_t v141 = v45;
  uint64_t OpaqueTypeConformance2 = (char *)v46;
  unint64_t v143 = v49;
  int v144 = &protocol witness table for ViewAlignedScrollTargetBehavior;
  uint64_t v51 = swift_getOpaqueTypeConformance2();
  uint64_t v141 = v50;
  uint64_t OpaqueTypeConformance2 = (char *)v51;
  uint64_t v52 = swift_getOpaqueTypeMetadata2();
  uint64_t v141 = v50;
  uint64_t OpaqueTypeConformance2 = (char *)v51;
  uint64_t v53 = swift_getOpaqueTypeConformance2();
  unint64_t v54 = lazy protocol witness table accessor for type CGFloat and conformance CGFloat();
  uint64_t v141 = v52;
  uint64_t OpaqueTypeConformance2 = (char *)&type metadata for CGFloat;
  unint64_t v143 = v53;
  int v144 = (void *)v54;
  uint64_t v55 = swift_getOpaqueTypeMetadata2();
  uint64_t v141 = v52;
  uint64_t OpaqueTypeConformance2 = (char *)&type metadata for CGFloat;
  unint64_t v143 = v53;
  int v144 = (void *)v54;
  uint64_t v56 = swift_getOpaqueTypeConformance2();
  uint64_t v141 = v55;
  uint64_t OpaqueTypeConformance2 = (char *)v56;
  uint64_t v57 = swift_getOpaqueTypeMetadata2();
  uint64_t v141 = v55;
  uint64_t OpaqueTypeConformance2 = (char *)v56;
  uint64_t v58 = swift_getOpaqueTypeConformance2();
  uint64_t v141 = v57;
  uint64_t OpaqueTypeConformance2 = (char *)v58;
  swift_getOpaqueTypeMetadata2();
  uint64_t v141 = v57;
  uint64_t OpaqueTypeConformance2 = (char *)v58;
  swift_getOpaqueTypeConformance2();
  type metadata accessor for GeometryReader();
  type metadata accessor for ModifiedContent();
  uint64_t v126 = swift_getWitnessTable();
  uint64_t v127 = &protocol witness table for _FrameLayout;
  swift_getWitnessTable();
  uint64_t v141 = ScrollViewReader.init(content:)();
  uint64_t OpaqueTypeConformance2 = v59;
  uint64_t v60 = v105;
  static Alignment.center.getter();
  type metadata accessor for ScrollViewReader();
  uint64_t v61 = swift_getWitnessTable();
  uint64_t v62 = v98;
  View.frame(width:height:alignment:)();
  swift_release();
  char v119 = (uint64_t *)v134;
  char v120 = v135;
  unint64_t v121 = v136;
  char v122 = v137;
  uint64_t v123 = v138;
  char v124 = v139;
  long long v125 = v140;
  uint64_t v63 = type metadata accessor for ModifiedContent();
  v118[4] = v61;
  v118[5] = &protocol witness table for _FrameLayout;
  uint64_t v99 = swift_getWitnessTable();
  uint64_t v64 = *(void (**)(uint64_t *, uint64_t **, uint64_t))(*(void *)(v63 - 8) + 16);
  uint64_t v100 = v63;
  v64(&v141, &v119, v63);
  swift_release();
  if (Array.count.getter() < 2)
  {
    uint64_t v77 = v107;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v101 + 56))(v107, 1, 1, v108);
    v118[2] = swift_getWitnessTable();
    v118[3] = &protocol witness table for _FrameLayout;
    swift_getWitnessTable();
  }
  else
  {
    id v65 = objc_msgSend(self, "currentTraitCollection", v86);
    [v65 userInterfaceIdiom];

    __chkstk_darwin();
    uint64_t v66 = v92;
    *(&v86 - 6) = v62;
    *(&v86 - 5) = v66;
    uint64_t v67 = v97;
    *(&v86 - 4) = v93;
    *(&v86 - 3) = v67;
    *(&v86 - 2) = v110;
    *(&v86 - 1) = v60;
    static VerticalAlignment.center.getter();
    long long v68 = v88;
    HStack.init(alignment:spacing:content:)();
    specialized CarouselView.pageIndicatorDotSize.getter();
    static Alignment.center.getter();
    uint64_t v69 = v103;
    uint64_t v70 = swift_getWitnessTable();
    uint64_t v71 = v87;
    View.frame(width:height:alignment:)();
    (*(void (**)(char *, uint64_t))(v90 + 8))(v68, v69);
    uint64_t v111 = v70;
    char v112 = &protocol witness table for _FrameLayout;
    uint64_t v72 = v108;
    swift_getWitnessTable();
    uint64_t v73 = v101;
    uint64_t v74 = *(void (**)(char *, char *, uint64_t))(v101 + 16);
    uint64_t v75 = v89;
    v74(v89, v71, v72);
    uint64_t v76 = *(void (**)(char *, uint64_t))(v73 + 8);
    v76(v71, v72);
    uint64_t v77 = v107;
    v74(v107, v75, v72);
    v76(v75, v72);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v73 + 56))(v77, 0, 1, v72);
  }
  uint64_t v78 = v102;
  uint64_t v79 = *(void (**)(char *, char *, uint64_t))(v102 + 16);
  uint64_t v80 = v109;
  v79(v106, v77, v109);
  uint64_t v81 = *(void (**)(char *, uint64_t))(v78 + 8);
  v81(v77, v80);
  uint64_t v134 = v141;
  uint64_t v135 = OpaqueTypeConformance2;
  unint64_t v136 = v143;
  char v137 = (char)v144;
  uint64_t v138 = v145;
  char v139 = v146;
  long long v140 = v147;
  char v119 = &v134;
  uint64_t v83 = v106;
  uint64_t v82 = v107;
  uint64_t v84 = v109;
  v79(v107, v106, v109);
  char v120 = v82;
  swift_retain();
  v118[0] = v100;
  v118[1] = v84;
  uint64_t v116 = v99;
  uint64_t v114 = swift_getWitnessTable();
  char v115 = &protocol witness table for _FrameLayout;
  uint64_t v113 = swift_getWitnessTable();
  uint64_t v117 = swift_getWitnessTable();
  _s7SwiftUI11ViewBuilderV10buildBlockyAA05TupleC0VyxxQp_tGxxQpRvzAA0C0RzlFZ_0((uint64_t *)&v119, 2uLL, (uint64_t)v118);
  v81(v83, v84);
  swift_release();
  v81(v82, v84);
  return swift_release();
}

uint64_t closure #1 in closure #1 in CarouselView.body.getter@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, void *a6@<X5>, void *a7@<X6>, uint64_t *a8@<X8>)
{
  uint64_t v70 = (uint64_t)a7;
  uint64_t v71 = a5;
  uint64_t v75 = a6;
  uint64_t v76 = a2;
  uint64_t v69 = a3;
  uint64_t v72 = a1;
  uint64_t v74 = a8;
  uint64_t v13 = type metadata accessor for ScrollViewProxy();
  uint64_t v67 = v13;
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  __chkstk_darwin();
  long long v68 = (char *)&v66 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = a3;
  uint64_t v98 = a4;
  uint64_t v16 = a4;
  uint64_t v66 = (uint64_t)a4;
  uint64_t v99 = a5;
  uint64_t v100 = a6;
  uint64_t v101 = a7;
  uint64_t v17 = type metadata accessor for CarouselView();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(void *)(v18 + 64);
  __chkstk_darwin();
  unint64_t v21 = (char *)&v66 - v20;
  uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 16);
  uint64_t v73 = v17;
  v22((char *)&v66 - v20, v76, v17);
  (*(void (**)(char *, void *, uint64_t))(v14 + 16))((char *)&v66 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v72, v13);
  unint64_t v23 = (*(unsigned __int8 *)(v18 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  unint64_t v24 = (v19 + *(unsigned __int8 *)(v14 + 80) + v23) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v25 = (void *)swift_allocObject();
  uint64_t v26 = (void *)v69;
  void v25[2] = v69;
  v25[3] = v16;
  uint64_t v27 = v70;
  unint64_t v28 = v75;
  v25[4] = v71;
  v25[5] = v28;
  v25[6] = v27;
  uint64_t v29 = (char *)v25 + v23;
  unint64_t v30 = v25;
  uint64_t v72 = v25;
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v29, v21, v17);
  (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))((unint64_t)v30 + v24, v68, v67);
  uint64_t v31 = v26;
  swift_getTupleTypeMetadata2();
  uint64_t v32 = type metadata accessor for Array();
  uint64_t v97 = v66;
  uint64_t v98 = &type metadata for Int;
  uint64_t v99 = v27;
  uint64_t v100 = &protocol witness table for Int;
  uint64_t v33 = type metadata accessor for IDView();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v97 = v33;
  uint64_t v98 = (void *)WitnessTable;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v36 = swift_getWitnessTable();
  uint64_t v97 = v32;
  uint64_t v98 = v31;
  uint64_t v99 = OpaqueTypeMetadata2;
  uint64_t v100 = (void *)v36;
  uint64_t v101 = v28;
  type metadata accessor for ForEach();
  uint64_t v97 = v33;
  uint64_t v98 = (void *)WitnessTable;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  swift_getWitnessTable();
  uint64_t v37 = type metadata accessor for LazyHStack();
  uint64_t v38 = swift_getWitnessTable();
  uint64_t v97 = v37;
  uint64_t v98 = (void *)v38;
  swift_getOpaqueTypeMetadata2();
  uint64_t v39 = type metadata accessor for ModifiedContent();
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&_sSiSgMD_1);
  uint64_t v97 = v37;
  uint64_t v98 = (void *)v38;
  uint64_t v87 = swift_getOpaqueTypeConformance2();
  uint64_t v88 = &protocol witness table for _AppearanceActionModifier;
  uint64_t v41 = swift_getWitnessTable();
  unint64_t v42 = lazy protocol witness table accessor for type Int? and conformance <A> A?();
  uint64_t v97 = v39;
  uint64_t v98 = (void *)v40;
  uint64_t v99 = v41;
  uint64_t v100 = (void *)v42;
  uint64_t v43 = swift_getOpaqueTypeMetadata2();
  uint64_t v44 = type metadata accessor for Optional();
  uint64_t v97 = v39;
  uint64_t v98 = (void *)v40;
  uint64_t v99 = v41;
  uint64_t v100 = (void *)v42;
  uint64_t v45 = swift_getOpaqueTypeConformance2();
  uint64_t v86 = v75[1];
  uint64_t v46 = swift_getWitnessTable();
  uint64_t v97 = v43;
  uint64_t v98 = (void *)v44;
  uint64_t v99 = v45;
  uint64_t v100 = (void *)v46;
  swift_getOpaqueTypeMetadata2();
  uint64_t v97 = v43;
  uint64_t v98 = (void *)v44;
  uint64_t v99 = v45;
  uint64_t v100 = (void *)v46;
  swift_getOpaqueTypeConformance2();
  type metadata accessor for ScrollView();
  type metadata accessor for SafeAreaPaddingModifier();
  uint64_t v47 = type metadata accessor for ModifiedContent();
  uint64_t v48 = type metadata accessor for ViewAlignedScrollTargetBehavior();
  uint64_t v49 = swift_getWitnessTable();
  uint64_t v50 = lazy protocol witness table accessor for type SafeAreaPaddingModifier and conformance SafeAreaPaddingModifier(&lazy protocol witness table cache variable for type SafeAreaPaddingModifier and conformance SafeAreaPaddingModifier, (void (*)(uint64_t))&type metadata accessor for SafeAreaPaddingModifier);
  uint64_t v84 = v49;
  uint64_t v85 = v50;
  uint64_t v51 = swift_getWitnessTable();
  uint64_t v97 = v47;
  uint64_t v98 = (void *)v48;
  uint64_t v99 = v51;
  uint64_t v100 = &protocol witness table for ViewAlignedScrollTargetBehavior;
  uint64_t v52 = swift_getOpaqueTypeMetadata2();
  uint64_t v97 = v47;
  uint64_t v98 = (void *)v48;
  uint64_t v99 = v51;
  uint64_t v100 = &protocol witness table for ViewAlignedScrollTargetBehavior;
  uint64_t v53 = swift_getOpaqueTypeConformance2();
  uint64_t v97 = v52;
  uint64_t v98 = (void *)v53;
  uint64_t v54 = swift_getOpaqueTypeMetadata2();
  uint64_t v97 = v52;
  uint64_t v98 = (void *)v53;
  uint64_t v55 = swift_getOpaqueTypeConformance2();
  unint64_t v56 = lazy protocol witness table accessor for type CGFloat and conformance CGFloat();
  uint64_t v97 = v54;
  uint64_t v98 = &type metadata for CGFloat;
  uint64_t v99 = v55;
  uint64_t v100 = (void *)v56;
  uint64_t v57 = swift_getOpaqueTypeMetadata2();
  uint64_t v97 = v54;
  uint64_t v98 = &type metadata for CGFloat;
  uint64_t v99 = v55;
  uint64_t v100 = (void *)v56;
  uint64_t v58 = swift_getOpaqueTypeConformance2();
  uint64_t v97 = v57;
  uint64_t v98 = (void *)v58;
  uint64_t v59 = swift_getOpaqueTypeMetadata2();
  uint64_t v97 = v57;
  uint64_t v98 = (void *)v58;
  uint64_t v60 = swift_getOpaqueTypeConformance2();
  uint64_t v97 = v59;
  uint64_t v98 = (void *)v60;
  swift_getOpaqueTypeMetadata2();
  uint64_t v97 = v59;
  uint64_t v98 = (void *)v60;
  swift_getOpaqueTypeConformance2();
  uint64_t v97 = GeometryReader.init(content:)();
  uint64_t v98 = v61;
  static Alignment.center.getter();
  type metadata accessor for GeometryReader();
  uint64_t v62 = swift_getWitnessTable();
  View.frame(width:height:alignment:)();
  swift_release();
  v79[0] = v90;
  v79[1] = v91;
  v79[2] = v92;
  char v80 = v93;
  uint64_t v81 = v94;
  char v82 = v95;
  long long v83 = v96;
  uint64_t v63 = type metadata accessor for ModifiedContent();
  uint64_t v77 = v62;
  uint64_t v78 = &protocol witness table for _FrameLayout;
  swift_getWitnessTable();
  uint64_t v64 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v63 - 8) + 16);
  v64(&v97, v79, v63);
  swift_release();
  uint64_t v90 = v97;
  uint64_t v91 = v98;
  uint64_t v92 = v99;
  char v93 = (char)v100;
  uint64_t v94 = v101;
  char v95 = v102;
  long long v96 = v103;
  v64(v74, &v90, v63);
  return swift_release();
}

uint64_t closure #1 in closure #1 in closure #1 in CarouselView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, void *a5@<X4>, uint64_t a6@<X5>, void *a7@<X6>, uint64_t a8@<X7>, char *a9@<X8>)
{
  uint64_t v140 = a6;
  uint64_t v130 = a3;
  uint64_t v141 = a2;
  uint64_t v127 = a1;
  unint64_t v136 = a9;
  uint64_t v157 = (uint64_t)a4;
  unint64_t v158 = a5;
  char v139 = a5;
  uint64_t v159 = a6;
  v160 = a7;
  uint64_t v161 = a8;
  uint64_t v142 = a8;
  uint64_t v125 = type metadata accessor for CarouselView();
  uint64_t v135 = *(void *)(v125 - 8);
  uint64_t v133 = *(void *)(v135 + 64);
  __chkstk_darwin();
  uint64_t v134 = (char *)&v96 - v13;
  uint64_t v132 = (void (*)(char *, uint64_t, uint64_t))type metadata accessor for ScrollIndicatorVisibility();
  uint64_t v131 = *((void *)v132 - 1);
  __chkstk_darwin();
  uint64_t v129 = (char *)&v96 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ViewAlignedScrollTargetBehavior.LimitBehavior();
  __chkstk_darwin();
  uint64_t v126 = (char *)&v96 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for ViewAlignedScrollTargetBehavior();
  uint64_t v128 = *(void *)(v16 - 8);
  __chkstk_darwin();
  char v124 = (char *)&v96 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getTupleTypeMetadata2();
  uint64_t v18 = type metadata accessor for Array();
  uint64_t v157 = (uint64_t)a5;
  unint64_t v158 = &type metadata for Int;
  uint64_t v159 = a8;
  v160 = &protocol witness table for Int;
  uint64_t v19 = type metadata accessor for IDView();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v157 = v19;
  unint64_t v158 = (void *)WitnessTable;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v22 = swift_getWitnessTable();
  uint64_t v157 = v18;
  unint64_t v158 = a4;
  unint64_t v143 = a4;
  uint64_t v159 = OpaqueTypeMetadata2;
  v160 = (void *)v22;
  uint64_t v161 = (uint64_t)a7;
  unint64_t v23 = a7;
  uint64_t v138 = a7;
  type metadata accessor for ForEach();
  uint64_t v157 = v19;
  unint64_t v158 = (void *)WitnessTable;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  swift_getWitnessTable();
  uint64_t v24 = type metadata accessor for LazyHStack();
  uint64_t v25 = swift_getWitnessTable();
  uint64_t v157 = v24;
  unint64_t v158 = (void *)v25;
  swift_getOpaqueTypeMetadata2();
  uint64_t v26 = type metadata accessor for ModifiedContent();
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&_sSiSgMD_1);
  uint64_t v157 = v24;
  unint64_t v158 = (void *)v25;
  uint64_t v154 = swift_getOpaqueTypeConformance2();
  unsigned int v155 = &protocol witness table for _AppearanceActionModifier;
  uint64_t v28 = swift_getWitnessTable();
  unint64_t v29 = lazy protocol witness table accessor for type Int? and conformance <A> A?();
  uint64_t v157 = v26;
  unint64_t v158 = (void *)v27;
  uint64_t v159 = v28;
  v160 = (void *)v29;
  uint64_t v30 = swift_getOpaqueTypeMetadata2();
  uint64_t v31 = type metadata accessor for Optional();
  uint64_t v157 = v26;
  unint64_t v158 = (void *)v27;
  uint64_t v159 = v28;
  v160 = (void *)v29;
  uint64_t v32 = swift_getOpaqueTypeConformance2();
  uint64_t v153 = v23[1];
  uint64_t v33 = swift_getWitnessTable();
  uint64_t v157 = v30;
  unint64_t v158 = (void *)v31;
  uint64_t v159 = v32;
  v160 = (void *)v33;
  uint64_t v102 = swift_getOpaqueTypeMetadata2();
  uint64_t v157 = v30;
  unint64_t v158 = (void *)v31;
  uint64_t v159 = v32;
  v160 = (void *)v33;
  uint64_t v101 = swift_getOpaqueTypeConformance2();
  uint64_t v34 = type metadata accessor for ScrollView();
  uint64_t v103 = *(void *)(v34 - 8);
  __chkstk_darwin();
  uint64_t v36 = (char *)&v96 - v35;
  type metadata accessor for SafeAreaPaddingModifier();
  uint64_t v37 = type metadata accessor for ModifiedContent();
  uint64_t v104 = *(void *)(v37 - 8);
  __chkstk_darwin();
  uint64_t v100 = (char *)&v96 - v38;
  uint64_t v39 = swift_getWitnessTable();
  uint64_t v99 = v39;
  uint64_t v40 = lazy protocol witness table accessor for type SafeAreaPaddingModifier and conformance SafeAreaPaddingModifier(&lazy protocol witness table cache variable for type SafeAreaPaddingModifier and conformance SafeAreaPaddingModifier, (void (*)(uint64_t))&type metadata accessor for SafeAreaPaddingModifier);
  uint64_t v151 = v39;
  uint64_t v152 = v40;
  uint64_t v41 = swift_getWitnessTable();
  uint64_t v157 = v37;
  unint64_t v158 = (void *)v16;
  uint64_t v97 = v16;
  uint64_t v159 = v41;
  v160 = &protocol witness table for ViewAlignedScrollTargetBehavior;
  uint64_t v42 = v41;
  uint64_t v98 = v41;
  uint64_t v43 = swift_getOpaqueTypeMetadata2();
  uint64_t v115 = *(void *)(v43 - 8);
  __chkstk_darwin();
  uint64_t v45 = (char *)&v96 - v44;
  uint64_t v157 = v37;
  unint64_t v158 = (void *)v16;
  uint64_t v159 = v42;
  v160 = &protocol witness table for ViewAlignedScrollTargetBehavior;
  uint64_t v46 = swift_getOpaqueTypeConformance2();
  uint64_t v157 = v43;
  unint64_t v158 = (void *)v46;
  uint64_t v47 = swift_getOpaqueTypeMetadata2();
  uint64_t v122 = *(void *)(v47 - 8);
  __chkstk_darwin();
  char v137 = (char *)&v96 - v48;
  uint64_t v113 = v43;
  uint64_t v157 = v43;
  unint64_t v158 = (void *)v46;
  uint64_t v105 = v46;
  uint64_t v49 = swift_getOpaqueTypeConformance2();
  unint64_t v50 = lazy protocol witness table accessor for type CGFloat and conformance CGFloat();
  uint64_t v157 = v47;
  unint64_t v158 = &type metadata for CGFloat;
  uint64_t v159 = v49;
  v160 = (void *)v50;
  uint64_t v51 = swift_getOpaqueTypeMetadata2();
  uint64_t v120 = *(void *)(v51 - 8);
  __chkstk_darwin();
  char v118 = (char *)&v96 - v52;
  uint64_t v123 = v47;
  uint64_t v157 = v47;
  unint64_t v158 = &type metadata for CGFloat;
  uint64_t v119 = v49;
  uint64_t v159 = v49;
  v160 = (void *)v50;
  unint64_t v114 = v50;
  uint64_t v53 = swift_getOpaqueTypeConformance2();
  uint64_t v157 = v51;
  unint64_t v158 = (void *)v53;
  uint64_t v54 = swift_getOpaqueTypeMetadata2();
  uint64_t v116 = *(void *)(v54 - 8);
  __chkstk_darwin();
  uint64_t v111 = (char *)&v96 - v55;
  uint64_t v121 = v51;
  uint64_t v157 = v51;
  unint64_t v158 = (void *)v53;
  uint64_t v109 = v53;
  uint64_t v56 = swift_getOpaqueTypeConformance2();
  uint64_t v117 = v54;
  uint64_t v157 = v54;
  unint64_t v158 = (void *)v56;
  uint64_t v108 = v56;
  uint64_t v112 = swift_getOpaqueTypeMetadata2();
  uint64_t v110 = *(void *)(v112 - 8);
  __chkstk_darwin();
  long long v106 = (char *)&v96 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v107 = (char *)&v96 - v58;
  GeometryProxy.size.getter();
  uint64_t v59 = v125;
  uint64_t v60 = v141;
  double v62 = (v61 - *(double *)(v141 + *(int *)(v125 + 72))) * 0.5;
  static Axis.Set.horizontal.getter();
  int v144 = v143;
  uint64_t v145 = v139;
  uint64_t v146 = v140;
  long long v147 = v138;
  uint64_t v148 = v142;
  uint64_t v149 = v60;
  uint64_t v63 = v60;
  uint64_t v150 = v130;
  ScrollView.init(_:content:)();
  uint64_t v64 = static Edge.Set.horizontal.getter();
  id v65 = v100;
  View.safeAreaPadding(_:_:)(v64, COERCE__INT64(round(v62)), 0);
  uint64_t v66 = v34;
  uint64_t v67 = v129;
  (*(void (**)(char *, uint64_t))(v103 + 8))(v36, v66);
  static ViewAlignedScrollTargetBehavior.LimitBehavior.automatic.getter();
  long long v68 = v124;
  ViewAlignedScrollTargetBehavior.init(limitBehavior:)();
  uint64_t v69 = v97;
  View.scrollTargetBehavior<A>(_:)();
  (*(void (**)(char *, uint64_t))(v128 + 8))(v68, v69);
  (*(void (**)(char *, uint64_t))(v104 + 8))(v65, v37);
  static ScrollIndicatorVisibility.hidden.getter();
  LOBYTE(v65) = static Axis.Set.vertical.getter();
  unsigned __int8 v70 = static Axis.Set.horizontal.getter();
  Axis.Set.init(rawValue:)();
  Axis.Set.init(rawValue:)();
  if (Axis.Set.init(rawValue:)() != v65) {
    Axis.Set.init(rawValue:)();
  }
  Axis.Set.init(rawValue:)();
  if (Axis.Set.init(rawValue:)() != v70) {
    Axis.Set.init(rawValue:)();
  }
  uint64_t v71 = v113;
  View.scrollIndicators(_:axes:)();
  (*(void (**)(char *, void (*)(char *, uint64_t, uint64_t)))(v131 + 8))(v67, v132);
  (*(void (**)(char *, uint64_t))(v115 + 8))(v45, v71);
  uint64_t v72 = v135;
  uint64_t v132 = *(void (**)(char *, uint64_t, uint64_t))(v135 + 16);
  uint64_t v73 = v134;
  uint64_t v74 = v59;
  v132(v134, v63, v59);
  uint64_t v75 = *(unsigned __int8 *)(v72 + 80);
  uint64_t v76 = (v75 + 56) & ~v75;
  v133 += v76;
  uint64_t v131 = v75 | 7;
  uint64_t v77 = (char *)swift_allocObject();
  uint64_t v78 = v139;
  *((void *)v77 + 2) = v143;
  *((void *)v77 + 3) = v78;
  uint64_t v79 = v140;
  char v80 = v138;
  *((void *)v77 + 4) = v140;
  *((void *)v77 + 5) = v80;
  *((void *)v77 + 6) = v142;
  uint64_t v81 = *(void (**)(char *, char *, uint64_t))(v72 + 32);
  v81(&v77[v76], v73, v74);
  v132(v73, v141, v74);
  char v82 = (char *)swift_allocObject();
  *((void *)v82 + 2) = v143;
  *((void *)v82 + 3) = v78;
  *((void *)v82 + 4) = v79;
  *((void *)v82 + 5) = v80;
  *((void *)v82 + 6) = v142;
  v81(&v82[v76], v73, v74);
  long long v83 = v118;
  uint64_t v84 = v123;
  uint64_t v85 = v137;
  View.onScrollGeometryChange<A>(for:of:action:)();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v122 + 8))(v85, v84);
  uint64_t v86 = v111;
  uint64_t v87 = v121;
  View.scrollClipDisabled(_:)();
  (*(void (**)(char *, uint64_t))(v120 + 8))(v83, v87);
  Array.count.getter();
  uint64_t v88 = v106;
  uint64_t v89 = v117;
  View.scrollDisabled(_:)();
  (*(void (**)(char *, uint64_t))(v116 + 8))(v86, v89);
  uint64_t v90 = v110;
  uint64_t v91 = *(void (**)(char *, char *, uint64_t))(v110 + 16);
  uint64_t v92 = v107;
  uint64_t v93 = v112;
  v91(v107, v88, v112);
  uint64_t v94 = *(void (**)(char *, uint64_t))(v90 + 8);
  v94(v88, v93);
  v91(v136, v92, v93);
  return ((uint64_t (*)(char *, uint64_t))v94)(v92, v93);
}

uint64_t closure #1 in closure #1 in closure #1 in closure #1 in CarouselView.body.getter@<X0>(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, void *a6@<X5>, uint64_t a7@<X6>, char *a8@<X8>)
{
  uint64_t v154 = a5;
  uint64_t v145 = a2;
  uint64_t v150 = a1;
  uint64_t v111 = a8;
  uint64_t v140 = type metadata accessor for Binding();
  uint64_t v139 = type metadata accessor for Optional();
  uint64_t v138 = *(void *)(v139 - 8);
  __chkstk_darwin();
  char v137 = (char *)&v108 - v13;
  uint64_t v14 = type metadata accessor for Optional();
  uint64_t v141 = *(void *)(v14 - 8);
  __chkstk_darwin();
  uint64_t v109 = (char *)&v108 - v15;
  uint64_t v134 = type metadata accessor for ScrollViewProxy();
  uint64_t v131 = *(void *)(v134 - 8);
  uint64_t v143 = *(void *)(v131 + 64);
  __chkstk_darwin();
  uint64_t v130 = (char *)&v108 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v167 = (uint64_t)a3;
  id v168 = a4;
  uint64_t v153 = a4;
  uint64_t v169 = a5;
  v170 = a6;
  uint64_t v17 = (uint64_t)a6;
  unsigned int v155 = a6;
  uint64_t v171 = a7;
  uint64_t v152 = a7;
  uint64_t v121 = type metadata accessor for CarouselView();
  uint64_t v123 = *(void (**)(char *, char *, uint64_t))(v121 - 8);
  uint64_t v144 = *((void *)v123 + 8);
  __chkstk_darwin();
  uint64_t v151 = (char *)&v108 - v18;
  type metadata accessor for PinnedScrollableViews();
  __chkstk_darwin();
  long long v147 = (char *)&v108 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = a3;
  uint64_t v149 = (uint64_t)a3;
  swift_getTupleTypeMetadata2();
  uint64_t v21 = type metadata accessor for Array();
  uint64_t v167 = (uint64_t)a4;
  id v168 = &type metadata for Int;
  uint64_t v169 = a7;
  v170 = &protocol witness table for Int;
  uint64_t v22 = type metadata accessor for IDView();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v167 = v22;
  id v168 = (void *)WitnessTable;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v25 = swift_getWitnessTable();
  uint64_t v167 = v21;
  id v168 = v20;
  uint64_t v169 = OpaqueTypeMetadata2;
  v170 = (void *)v25;
  uint64_t v171 = v17;
  type metadata accessor for ForEach();
  uint64_t v167 = v22;
  id v168 = (void *)WitnessTable;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v114 = swift_getWitnessTable();
  uint64_t v26 = type metadata accessor for LazyHStack();
  uint64_t v146 = *(void (***)(char *, void))(v26 - 8);
  __chkstk_darwin();
  uint64_t v28 = (char *)&v108 - v27;
  uint64_t v29 = swift_getWitnessTable();
  uint64_t v167 = v26;
  id v168 = (void *)v29;
  uint64_t v30 = v26;
  uint64_t v112 = v26;
  uint64_t v31 = (void *)v29;
  uint64_t v113 = v29;
  uint64_t v117 = swift_getOpaqueTypeMetadata2();
  uint64_t v118 = *(void *)(v117 - 8);
  __chkstk_darwin();
  uint64_t v142 = (char *)&v108 - v32;
  uint64_t v33 = type metadata accessor for ModifiedContent();
  uint64_t v124 = *(void *)(v33 - 8);
  __chkstk_darwin();
  uint64_t v116 = (char *)&v108 - v34;
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&_sSiSgMD_1);
  uint64_t v167 = v30;
  id v168 = v31;
  uint64_t v115 = swift_getOpaqueTypeConformance2();
  uint64_t v164 = v115;
  v165 = &protocol witness table for _AppearanceActionModifier;
  uint64_t v36 = swift_getWitnessTable();
  unint64_t v37 = lazy protocol witness table accessor for type Int? and conformance <A> A?();
  uint64_t v167 = v33;
  id v168 = (void *)v35;
  uint64_t v169 = v36;
  v170 = (void *)v37;
  uint64_t v38 = swift_getOpaqueTypeMetadata2();
  uint64_t v135 = *(void *)(v38 - 8);
  __chkstk_darwin();
  uint64_t v148 = (char *)&v108 - v39;
  uint64_t v125 = v33;
  uint64_t v167 = v33;
  id v168 = (void *)v35;
  uint64_t v122 = v35;
  uint64_t v120 = v36;
  uint64_t v169 = v36;
  v170 = (void *)v37;
  unint64_t v119 = v37;
  uint64_t v40 = swift_getOpaqueTypeConformance2();
  uint64_t v41 = v155;
  uint64_t v163 = v155[1];
  uint64_t v42 = swift_getWitnessTable();
  uint64_t v136 = v38;
  uint64_t v167 = v38;
  id v168 = (void *)v14;
  uint64_t v110 = v14;
  uint64_t v129 = v40;
  uint64_t v169 = v40;
  v170 = (void *)v42;
  uint64_t v126 = v42;
  uint64_t v133 = swift_getOpaqueTypeMetadata2();
  uint64_t v132 = *(void *)(v133 - 8);
  __chkstk_darwin();
  uint64_t v127 = (char *)&v108 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v128 = (char *)&v108 - v44;
  static VerticalAlignment.center.getter();
  uint64_t v45 = v121;
  uint64_t v46 = v150;
  uint64_t v47 = v149;
  uint64_t v156 = v149;
  uint64_t v157 = v153;
  uint64_t v158 = v154;
  uint64_t v159 = v41;
  uint64_t v160 = v152;
  uint64_t v161 = v150;
  default argument 2 of LazyHStack.init(alignment:spacing:pinnedViews:content:)();
  uint64_t v48 = v123;
  LazyHStack.init(alignment:spacing:pinnedViews:content:)();
  uint64_t v49 = v112;
  View.scrollTargetLayout(isEnabled:)();
  v146[1](v28, v49);
  unint64_t v50 = (void (**)(char *, void))*((void *)v48 + 2);
  uint64_t v51 = v151;
  long long v147 = (char *)v48 + 16;
  uint64_t v146 = v50;
  ((void (*)(char *, void *, uint64_t))v50)(v151, v46, v45);
  uint64_t v52 = v131;
  uint64_t v53 = v130;
  uint64_t v54 = v134;
  (*(void (**)(char *, uint64_t, uint64_t))(v131 + 16))(v130, v145, v134);
  uint64_t v55 = *((unsigned __int8 *)v48 + 80);
  uint64_t v56 = (v55 + 56) & ~v55;
  uint64_t v57 = v55 | 7;
  uint64_t v58 = *(unsigned __int8 *)(v52 + 80);
  uint64_t v59 = v52;
  v144 += v56;
  uint64_t v60 = (v144 + v58) & ~v58;
  uint64_t v143 = v57;
  double v61 = (char *)swift_allocObject();
  double v62 = v153;
  *((void *)v61 + 2) = v47;
  *((void *)v61 + 3) = v62;
  uint64_t v63 = v155;
  *((void *)v61 + 4) = v154;
  *((void *)v61 + 5) = v63;
  *((void *)v61 + 6) = v152;
  uint64_t v145 = v56;
  uint64_t v64 = &v61[v56];
  id v65 = (void (*)(char *, char *, uint64_t))*((void *)v48 + 4);
  v65(v64, v51, v45);
  uint64_t v66 = v116;
  (*(void (**)(char *, char *, uint64_t))(v59 + 32))(&v61[v60], v53, v54);
  uint64_t v67 = v117;
  long long v68 = v142;
  View.onAppear(perform:)();
  swift_release();
  uint64_t v69 = v150;
  (*(void (**)(char *, uint64_t))(v118 + 8))(v68, v67);
  unsigned __int8 v70 = (void *)v69[2];
  if (v70)
  {
    uint64_t v71 = v69[3];
    uint64_t v167 = v69[1];
    id v168 = v70;
    uint64_t v169 = v71;
    swift_retain();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<Int>);
    Binding.wrappedValue.getter();
    swift_release();
    swift_release();
    uint64_t v72 = v162;
  }
  else
  {
    uint64_t v72 = 0;
  }
  uint64_t v167 = v72;
  LOBYTE(v168) = v70 == 0;
  uint64_t v73 = v151;
  ((void (*)(char *, void *, uint64_t))v146)(v151, v69, v45);
  uint64_t v74 = (void *)swift_allocObject();
  uint64_t v75 = v153;
  v74[2] = v149;
  v74[3] = v75;
  uint64_t v76 = v155;
  v74[4] = v154;
  v74[5] = v76;
  uint64_t v77 = (char *)v74 + v145;
  uint64_t v78 = v152;
  v74[6] = v152;
  v65(v77, v73, v45);
  uint64_t v79 = v125;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v124 + 8))(v66, v79);
  char v80 = (char *)v69 + *(int *)(v45 + 64);
  uint64_t v81 = v45;
  uint64_t v82 = v138;
  long long v83 = v137;
  uint64_t v84 = v139;
  (*(void (**)(char *, char *, uint64_t))(v138 + 16))(v137, v80, v139);
  uint64_t v85 = v140;
  uint64_t v86 = *(void *)(v140 - 8);
  uint64_t v87 = 1;
  int v88 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v86 + 48))(v83, 1, v140);
  uint64_t v123 = v65;
  if (v88 == 1)
  {
    uint64_t v89 = v111;
    uint64_t v90 = v110;
    uint64_t v91 = v109;
    uint64_t v92 = v84;
  }
  else
  {
    uint64_t v91 = v109;
    Binding.wrappedValue.getter();
    uint64_t v87 = 0;
    uint64_t v82 = v86;
    uint64_t v92 = v85;
    uint64_t v89 = v111;
    uint64_t v90 = v110;
  }
  uint64_t v93 = v149;
  (*(void (**)(char *, uint64_t))(v82 + 8))(v83, v92);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v93 - 8) + 56))(v91, v87, 1, v93);
  uint64_t v94 = v151;
  ((void (*)(char *, void *, uint64_t))v146)(v151, v150, v81);
  char v95 = (void *)swift_allocObject();
  uint64_t v96 = v153;
  v95[2] = v93;
  v95[3] = v96;
  uint64_t v97 = v155;
  v95[4] = v154;
  v95[5] = v97;
  uint64_t v98 = (char *)v95 + v145;
  v95[6] = v78;
  v123(v98, v94, v81);
  uint64_t v99 = v127;
  uint64_t v100 = v136;
  uint64_t v101 = v148;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v141 + 8))(v91, v90);
  (*(void (**)(char *, uint64_t))(v135 + 8))(v101, v100);
  uint64_t v102 = v132;
  uint64_t v103 = *(void (**)(char *, char *, uint64_t))(v132 + 16);
  uint64_t v104 = v128;
  uint64_t v105 = v133;
  v103(v128, v99, v133);
  long long v106 = *(void (**)(char *, uint64_t))(v102 + 8);
  v106(v99, v105);
  v103(v89, v104, v105);
  return ((uint64_t (*)(char *, uint64_t))v106)(v104, v105);
}

uint64_t closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in CarouselView.body.getter@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, uint64_t a6@<X5>, char *a7@<X8>)
{
  uint64_t v51 = a4;
  double v62 = a7;
  *(void *)&long long v76 = a2;
  *((void *)&v76 + 1) = a3;
  uint64_t v45 = a3;
  uint64_t v77 = a4;
  uint64_t v78 = a5;
  uint64_t v79 = a6;
  uint64_t v58 = type metadata accessor for CarouselView();
  uint64_t v50 = *(void *)(v58 - 8);
  uint64_t v52 = *(void *)(v50 + 64);
  __chkstk_darwin();
  uint64_t v47 = (char *)&v43 - v12;
  swift_getTupleTypeMetadata2();
  uint64_t v13 = type metadata accessor for Array();
  uint64_t v59 = v13;
  *(void *)&long long v76 = a3;
  *((void *)&v76 + 1) = &type metadata for Int;
  uint64_t v77 = a6;
  uint64_t v78 = &protocol witness table for Int;
  uint64_t v14 = type metadata accessor for IDView();
  uint64_t v55 = v14;
  uint64_t WitnessTable = swift_getWitnessTable();
  *(void *)&long long v76 = v14;
  *((void *)&v76 + 1) = WitnessTable;
  uint64_t v53 = &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v57 = OpaqueTypeMetadata2;
  uint64_t v56 = swift_getWitnessTable();
  *(void *)&long long v76 = v13;
  *((void *)&v76 + 1) = a2;
  uint64_t v16 = a2;
  uint64_t v77 = OpaqueTypeMetadata2;
  uint64_t v78 = (void *)v56;
  uint64_t v79 = (uint64_t)a5;
  uint64_t v61 = type metadata accessor for ForEach();
  uint64_t v60 = *(void *)(v61 - 8);
  __chkstk_darwin();
  uint64_t v48 = (char *)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v49 = (char *)&v43 - v18;
  *(void *)&long long v74 = *a1;
  uint64_t v19 = v74;
  uint64_t v20 = type metadata accessor for Array();
  swift_getWitnessTable();
  RandomAccessCollection<>.indices.getter();
  long long v69 = v76;
  uint64_t v73 = v19;
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&_sSnySiGMD_0);
  unint64_t v22 = _sS2iSZsWl_0();
  uint64_t v71 = &protocol witness table for Int;
  unint64_t v72 = v22;
  uint64_t v23 = swift_getWitnessTable();
  uint64_t v24 = swift_getWitnessTable();
  zip<A, B>(_:_:)();
  long long v69 = v74;
  uint64_t v70 = v75;
  *(void *)&long long v76 = v21;
  *((void *)&v76 + 1) = v20;
  uint64_t v77 = v23;
  uint64_t v78 = (void *)v24;
  type metadata accessor for Zip2Sequence();
  swift_getWitnessTable();
  *(void *)&long long v74 = Array.init<A>(_:)();
  uint64_t v44 = v16;
  uint64_t v25 = v45;
  uint64_t v63 = v16;
  uint64_t v64 = v45;
  uint64_t v26 = v51;
  uint64_t v65 = v51;
  uint64_t v66 = a5;
  uint64_t v27 = a6;
  uint64_t v67 = a6;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v28 = v50;
  uint64_t v29 = v47;
  uint64_t v30 = a1;
  uint64_t v31 = v58;
  (*(void (**)(char *, void *, uint64_t))(v50 + 16))(v47, v30, v58);
  unint64_t v32 = (*(unsigned __int8 *)(v28 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  uint64_t v33 = (char *)swift_allocObject();
  *((void *)v33 + 2) = v16;
  *((void *)v33 + 3) = v25;
  *((void *)v33 + 4) = v26;
  *((void *)v33 + 5) = a5;
  *((void *)v33 + 6) = v27;
  (*(void (**)(char *, char *, uint64_t))(v28 + 32))(&v33[v32], v29, v31);
  uint64_t v34 = (void *)swift_allocObject();
  v34[2] = v44;
  void v34[3] = v25;
  v34[4] = v26;
  v34[5] = a5;
  v34[6] = v27;
  v34[7] = partial apply for closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in CarouselView.body.getter;
  v34[8] = v33;
  *(void *)&long long v76 = v55;
  *((void *)&v76 + 1) = WitnessTable;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v35 = v48;
  ForEach<>.init(_:id:content:)();
  uint64_t v68 = OpaqueTypeConformance2;
  uint64_t v36 = v61;
  swift_getWitnessTable();
  uint64_t v37 = v60;
  uint64_t v38 = *(void (**)(char *, char *, uint64_t))(v60 + 16);
  uint64_t v39 = v49;
  v38(v49, v35, v36);
  uint64_t v40 = *(void (**)(char *, uint64_t))(v37 + 8);
  v40(v35, v36);
  v38(v62, v39, v36);
  return ((uint64_t (*)(char *, uint64_t))v40)(v39, v36);
}

uint64_t closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in CarouselView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, uint64_t a6@<X5>, void *a7@<X6>, uint64_t a8@<X7>, char *a9@<X8>)
{
  uint64_t v51 = a6;
  uint64_t v52 = a7;
  uint64_t v50 = a4;
  uint64_t v45 = a3;
  uint64_t v46 = a2;
  uint64_t v53 = a9;
  uint64_t v54 = a1;
  uint64_t v55 = a4;
  uint64_t v56 = a5;
  uint64_t v57 = a6;
  uint64_t v58 = a7;
  uint64_t v59 = a8;
  uint64_t v11 = type metadata accessor for CarouselView();
  uint64_t v47 = *(void *)(v11 - 8);
  uint64_t v48 = *(void *)(v47 + 64);
  __chkstk_darwin();
  uint64_t v44 = (char *)&v37 - v12;
  uint64_t v41 = *((void *)a5 - 1);
  __chkstk_darwin();
  uint64_t v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = (uint64_t)a5;
  uint64_t v56 = &type metadata for Int;
  uint64_t v57 = a8;
  uint64_t v58 = &protocol witness table for Int;
  uint64_t v38 = a8;
  uint64_t v15 = type metadata accessor for IDView();
  uint64_t v42 = v15;
  uint64_t v49 = *(void *)(v15 - 8);
  __chkstk_darwin();
  uint64_t v39 = (char *)&v37 - v16;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v55 = v15;
  uint64_t v56 = (void *)WitnessTable;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v18 = *(void *)(OpaqueTypeMetadata2 - 8);
  __chkstk_darwin();
  uint64_t v20 = (char *)&v37 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v40 = (char *)&v37 - v21;
  uint64_t v22 = v45;
  (*(void (**)(uint64_t))(v45 + *(int *)(v11 + 76)))(v46);
  uint64_t v55 = v54;
  View.id<A>(_:)();
  (*(void (**)(char *, void *))(v41 + 8))(v14, a5);
  uint64_t v23 = v47;
  uint64_t v24 = v44;
  uint64_t v25 = v22;
  uint64_t v26 = v11;
  (*(void (**)(char *, uint64_t, uint64_t))(v47 + 16))(v44, v25, v11);
  unint64_t v27 = (*(unsigned __int8 *)(v23 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  unint64_t v28 = (v48 + v27 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v29 = (char *)swift_allocObject();
  *((void *)v29 + 2) = v50;
  *((void *)v29 + 3) = a5;
  uint64_t v30 = v52;
  *((void *)v29 + 4) = v51;
  *((void *)v29 + 5) = v30;
  *((void *)v29 + 6) = v38;
  (*(void (**)(char *, char *, uint64_t))(v23 + 32))(&v29[v27], v24, v26);
  *(void *)&v29[v28] = v54;
  uint64_t v31 = v42;
  unint64_t v32 = v39;
  View.onTapGesture(count:perform:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v49 + 8))(v32, v31);
  uint64_t v33 = *(void (**)(char *, char *, uint64_t))(v18 + 16);
  uint64_t v34 = v40;
  v33(v40, v20, OpaqueTypeMetadata2);
  uint64_t v35 = *(void (**)(char *, uint64_t))(v18 + 8);
  v35(v20, OpaqueTypeMetadata2);
  v33(v53, v34, OpaqueTypeMetadata2);
  return ((uint64_t (*)(char *, uint64_t))v35)(v34, OpaqueTypeMetadata2);
}

uint64_t CarouselView.scrollToIndex(_:animated:)(uint64_t a1, char a2)
{
  if (a2) {
    static Animation.default.getter();
  }
  __chkstk_darwin();
  withAnimation<A>(_:_:)();
  return swift_release();
}

uint64_t default argument 2 of LazyHStack.init(alignment:spacing:pinnedViews:content:)()
{
  return dispatch thunk of OptionSet.init(rawValue:)();
}

uint64_t closure #2 in closure #1 in closure #1 in closure #1 in closure #1 in CarouselView.body.getter(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v75 = a2;
  uint64_t v70 = *(void *)(a3 - 8);
  __chkstk_darwin();
  long long v69 = (char *)&v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Binding();
  uint64_t v73 = *(void *)(v14 - 8);
  __chkstk_darwin();
  uint64_t v67 = (uint64_t *)((char *)&v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin();
  uint64_t v71 = (char *)&v63 - v16;
  uint64_t v72 = a3;
  uint64_t v77 = a3;
  uint64_t v78 = a4;
  uint64_t v79 = a5;
  uint64_t v80 = a6;
  uint64_t v68 = a6;
  uint64_t v81 = a7;
  uint64_t v17 = type metadata accessor for CarouselView();
  uint64_t v65 = *(void *)(v17 - 8);
  __chkstk_darwin();
  uint64_t v63 = (char *)&v63 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v64 = (char *)&v63 - v19;
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&demangling cache variable for type metadata for Binding<Int>?);
  uint64_t v74 = v14;
  uint64_t v20 = type metadata accessor for Optional();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v66 = *(void *)(TupleTypeMetadata2 - 8);
  __chkstk_darwin();
  uint64_t v23 = (uint64_t *)((char *)&v63 - v22);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScrollViewProxy?);
  __chkstk_darwin();
  uint64_t v25 = (char *)&v63 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  unint64_t v27 = (char *)&v63 - v26;
  uint64_t v28 = type metadata accessor for ScrollViewProxy();
  uint64_t v29 = *(void *)(v28 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v29 + 16))(v27, v75, v28);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v27, 0, 1, v28);
  outlined init with copy of (String, Any)((uint64_t)v27, (uint64_t)v25, &demangling cache variable for type metadata for ScrollViewProxy?);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<ScrollViewProxy?>);
  State.wrappedValue.setter();
  outlined destroy of TaskPriority?((uint64_t)v27, &demangling cache variable for type metadata for ScrollViewProxy?);
  uint64_t v31 = a1[1];
  uint64_t v30 = a1[2];
  uint64_t v32 = a1[3];
  uint64_t v75 = v17;
  uint64_t v33 = a1;
  uint64_t v34 = (char *)a1 + *(int *)(v17 + 64);
  uint64_t v35 = (char *)v23 + *(int *)(TupleTypeMetadata2 + 48);
  uint64_t *v23 = v31;
  v23[1] = v30;
  long long v23[2] = v32;
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v35, v34, v20);
  if (v30)
  {
    uint64_t v37 = v73;
    uint64_t v36 = v74;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v73 + 48))(v35, 1, v74) == 1)
    {
      uint64_t v77 = v31;
      uint64_t v78 = v30;
      uint64_t v79 = v32;
      outlined copy of NoticeDismissal?(v31, v30);
      swift_retain();
      swift_retain();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<Int>);
      Binding.wrappedValue.getter();
      uint64_t v38 = v76;
      uint64_t v39 = v64;
      uint64_t v40 = v65;
      uint64_t v41 = *(void (**)(char *, uint64_t *, uint64_t))(v65 + 16);
      uint64_t v42 = v33;
      v41(v64, v33, v75);
      if (v38 < 0)
      {
        uint64_t v58 = *(void (**)(char *, uint64_t))(v40 + 8);
        uint64_t v59 = v39;
        uint64_t v60 = v75;
        v58(v59, v75);
        uint64_t v61 = v63;
        v41(v63, v42, v60);
        v58(v61, v75);
      }
      else
      {
        uint64_t v43 = Array.count.getter();
        uint64_t v44 = v39;
        uint64_t v45 = v43;
        uint64_t v46 = *(void (**)(char *, uint64_t))(v40 + 8);
        v46(v44, v75);
        if (v38 >= v45)
        {
          double v62 = v63;
          v41(v63, v33, v75);
          if (!v38) {
            Array.count.getter();
          }
          v46(v62, v75);
        }
        else
        {
          CarouselView.scrollToIndex(_:animated:)(v38, 1);
        }
      }
      swift_release();
      swift_release();
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v71, v35, v36);
      uint64_t v67 = v33;
      uint64_t v76 = *v33;
      outlined copy of NoticeDismissal?(v31, v30);
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v52 = v69;
      Binding.wrappedValue.getter();
      uint64_t v53 = v72;
      type metadata accessor for Array();
      swift_getWitnessTable();
      Collection<>.firstIndex(of:)();
      (*(void (**)(char *, uint64_t))(v70 + 8))(v52, v53);
      swift_bridgeObjectRelease();
      if (v78 != 1)
      {
        uint64_t v54 = v77;
        uint64_t v77 = v31;
        uint64_t v78 = v30;
        uint64_t v79 = v32;
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<Int>);
        Binding.wrappedValue.getter();
        if (v54 == v76) {
          CarouselView.scrollToIndex(_:animated:)(v54, 1);
        }
      }
      swift_release();
      swift_release();
      (*(void (**)(char *, uint64_t))(v37 + 8))(v71, v36);
    }
  }
  else
  {
    uint64_t v48 = v66;
    uint64_t v47 = (char *)v67;
    uint64_t v50 = v73;
    uint64_t v49 = v74;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v73 + 48))(v35, 1, v74) == 1) {
      return (*(uint64_t (**)(uint64_t *, uint64_t))(v48 + 8))(v23, TupleTypeMetadata2);
    }
    uint64_t v55 = v47;
    (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v47, v35, v49);
    uint64_t v76 = *v33;
    swift_bridgeObjectRetain();
    uint64_t v56 = v69;
    Binding.wrappedValue.getter();
    uint64_t v57 = v72;
    type metadata accessor for Array();
    swift_getWitnessTable();
    Collection<>.firstIndex(of:)();
    (*(void (**)(char *, uint64_t))(v70 + 8))(v56, v57);
    swift_bridgeObjectRelease();
    if (v78 != 1) {
      CarouselView.scrollToIndex(_:animated:)(v77, 1);
    }
    (*(void (**)(char *, uint64_t))(v50 + 8))(v55, v49);
  }
  return outlined consume of OrderedSet<A.Items.Element>?<A>(*v23, v23[1]);
}

void closure #3 in closure #1 in closure #1 in closure #1 in closure #1 in CarouselView.body.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((*(unsigned char *)(a2 + 8) & 1) == 0)
  {
    uint64_t v4 = *(void *)a2;
    uint64_t v5 = type metadata accessor for CarouselView();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Int>);
    State.wrappedValue.getter();
    if (v4 != v6) {
      CarouselView.scrollToIndex(_:animated:)(v4, *(unsigned char *)(a3 + *(int *)(v5 + 68)));
    }
  }
}

uint64_t closure #4 in closure #1 in closure #1 in closure #1 in closure #1 in CarouselView.body.getter(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v23 = a6;
  uint64_t v24 = a8;
  uint64_t v13 = type metadata accessor for Optional();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin();
  uint64_t v16 = (char *)&v23 - v15;
  uint64_t v17 = *(void *)(a4 - 8);
  __chkstk_darwin();
  uint64_t v19 = (char *)&v23 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a2, v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v16, 1, a4) == 1) {
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v19, v16, a4);
  uint64_t v29 = *a3;
  type metadata accessor for Array();
  swift_getWitnessTable();
  Collection<>.firstIndex(of:)();
  if (BYTE8(v25) != 1)
  {
    uint64_t v21 = v25;
    *(void *)&long long v25 = a4;
    *((void *)&v25 + 1) = a5;
    uint64_t v26 = v23;
    uint64_t v27 = a7;
    uint64_t v28 = v24;
    uint64_t v22 = type metadata accessor for CarouselView();
    long long v25 = *(_OWORD *)((char *)a3 + *(int *)(v22 + 92));
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Int>);
    State.wrappedValue.getter();
    if (v21 != v29) {
      CarouselView.scrollToIndex(_:animated:)(v21, *((unsigned char *)a3 + *(int *)(v22 + 68)));
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v19, a4);
}

uint64_t View.safeAreaPadding(_:_:)(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = type metadata accessor for SafeAreaPaddingModifier();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  if ((a3 & 1) == 0) {
    EdgeInsets.init(_all:)();
  }
  v13[1] = v8;
  void v13[2] = v9;
  void v13[3] = v10;
  _OWORD v13[4] = v11;
  char v14 = a3 & 1;
  SafeAreaPaddingModifier.init(edges:insets:)();
  View.modifier<A>(_:)();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t closure #2 in closure #1 in closure #1 in closure #1 in CarouselView.body.getter@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, double *a7@<X8>)
{
  v22[1] = a1;
  uint64_t v23 = a7;
  uint64_t v12 = type metadata accessor for LayoutDirection();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin();
  uint64_t v15 = (char *)v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  ScrollGeometry.contentOffset.getter();
  double v17 = v16;
  uint64_t v24 = a2;
  uint64_t v25 = a3;
  uint64_t v26 = a4;
  uint64_t v27 = a5;
  uint64_t v28 = a6;
  type metadata accessor for CarouselView();
  specialized Environment.wrappedValue.getter((uint64_t)v15);
  int v18 = (*(uint64_t (**)(char *, uint64_t))(v13 + 88))(v15, v12);
  if (v18 == enum case for LayoutDirection.leftToRight(_:))
  {
    uint64_t result = ScrollGeometry.contentInsets.getter();
    double v17 = v17 + v20;
  }
  else if (v18 == enum case for LayoutDirection.rightToLeft(_:))
  {
    uint64_t result = ScrollGeometry.contentInsets.getter();
    double v17 = v17 - v21;
  }
  else
  {
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
  double *v23 = v17;
  return result;
}

uint64_t CarouselView.layoutDirection.getter@<X0>(uint64_t a1@<X8>)
{
  return specialized Environment.wrappedValue.getter(a1);
}

uint64_t closure #3 in closure #1 in closure #1 in closure #1 in CarouselView.body.getter(uint64_t a1, double *a2, uint64_t a3)
{
  double v4 = *a2;
  uint64_t result = type metadata accessor for CarouselView();
  double v6 = v4 / *(double *)(a3 + *(int *)(result + 100));
  if ((~*(void *)&v6 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v6 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v6 < 9.22337204e18) {
    return CarouselView.updateCurrentIndex(newIndex:)((uint64_t)v6, result);
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t CarouselView.updateCurrentIndex(newIndex:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v34 = type metadata accessor for Binding();
  uint64_t v7 = type metadata accessor for Optional();
  uint64_t v32 = *(void *)(v7 - 8);
  uint64_t v33 = v7;
  __chkstk_darwin();
  uint64_t v31 = (char *)v28 - v8;
  uint64_t v30 = *(void *)(v6 - 8);
  __chkstk_darwin();
  uint64_t v10 = (char *)v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v35 = *(void *)v2;
  type metadata accessor for Array();
  swift_getWitnessTable();
  uint64_t result = Collection.isEmpty.getter();
  if (result) {
    return result;
  }
  uint64_t result = Array.count.getter();
  uint64_t v12 = result - 1;
  if (__OFSUB__(result, 1))
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v12 < 0)
  {
LABEL_17:
    __break(1u);
    return result;
  }
  if (v12 >= (a1 & ~(a1 >> 63))) {
    uint64_t v13 = a1 & ~(a1 >> 63);
  }
  else {
    uint64_t v13 = result - 1;
  }
  uint64_t v14 = (long long *)&v2[*(int *)(a2 + 92)];
  uint64_t v16 = *(void *)v14;
  uint64_t v15 = *((void *)v14 + 1);
  uint64_t v29 = v14;
  *(void *)&long long v35 = v16;
  *((void *)&v35 + 1) = v15;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Int>);
  uint64_t result = State.wrappedValue.getter();
  if (v13 != v37)
  {
    *(void *)&long long v35 = v16;
    *((void *)&v35 + 1) = v15;
    uint64_t v37 = v13;
    State.wrappedValue.setter();
    int v18 = &v2[*(int *)(a2 + 88)];
    uint64_t v19 = *(void (**)(void, char *))v18;
    if (*(void *)v18)
    {
      v28[1] = *((void *)v18 + 1);
      *(void *)&long long v35 = v16;
      *((void *)&v35 + 1) = v15;
      State.wrappedValue.getter();
      v28[0] = v37;
      *(void *)&long long v35 = v16;
      *((void *)&v35 + 1) = v15;
      State.wrappedValue.getter();
      Array.subscript.getter();
      v19(v28[0], v10);
      (*(void (**)(char *, uint64_t))(v30 + 8))(v10, v6);
    }
    uint64_t v30 = v17;
    uint64_t v20 = *((void *)v2 + 2);
    if (v20)
    {
      uint64_t v21 = *((void *)v2 + 3);
      uint64_t v22 = *((void *)v2 + 1);
      *(void *)&long long v35 = v16;
      *((void *)&v35 + 1) = v15;
      swift_retain();
      swift_retain();
      State.wrappedValue.getter();
      *(void *)&long long v35 = v22;
      *((void *)&v35 + 1) = v20;
      uint64_t v36 = v21;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Binding<Int>);
      Binding.wrappedValue.setter();
      swift_release();
      swift_release();
    }
    uint64_t v24 = v31;
    uint64_t v23 = v32;
    uint64_t v25 = v33;
    (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v31, &v3[*(int *)(a2 + 64)], v33);
    uint64_t v26 = v34;
    uint64_t v27 = *(void *)(v34 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v24, 1, v34) != 1)
    {
      long long v35 = *v29;
      State.wrappedValue.getter();
      Array.subscript.getter();
      Binding.wrappedValue.setter();
      uint64_t v23 = v27;
      uint64_t v25 = v26;
    }
    return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v24, v25);
  }
  return result;
}

uint64_t closure #2 in closure #1 in CarouselView.body.getter@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char *a7@<X8>)
{
  uint64_t v51 = a6;
  unint64_t v50 = a4;
  uint64_t v48 = a3;
  uint64_t v46 = a1;
  uint64_t v60 = a7;
  *(void *)&long long v74 = a2;
  *((void *)&v74 + 1) = a3;
  unint64_t v75 = a4;
  uint64_t v76 = a5;
  uint64_t v77 = a6;
  uint64_t v52 = type metadata accessor for CarouselView();
  uint64_t v10 = *(void *)(v52 - 8);
  __chkstk_darwin();
  uint64_t v49 = (char *)&v45 - v11;
  swift_getTupleTypeMetadata2();
  uint64_t v12 = type metadata accessor for Array();
  uint64_t v58 = v12;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for <<opaque return type of View.onTapGesture(count:perform:)>>.0);
  uint64_t v57 = v13;
  uint64_t WitnessTable = swift_getWitnessTable();
  *(void *)&long long v74 = v12;
  *((void *)&v74 + 1) = a2;
  unint64_t v75 = v13;
  uint64_t v76 = WitnessTable;
  uint64_t v77 = a5;
  uint64_t v53 = type metadata accessor for ForEach();
  uint64_t v59 = *(void *)(v53 - 8);
  __chkstk_darwin();
  uint64_t v54 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v55 = (char *)&v45 - v15;
  uint64_t v16 = *a1;
  *(void *)&long long v72 = v16;
  uint64_t v17 = type metadata accessor for Array();
  swift_getWitnessTable();
  RandomAccessCollection<>.indices.getter();
  long long v67 = v74;
  uint64_t v71 = v16;
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&_sSnySiGMD_0);
  unint64_t v19 = _sS2iSZsWl_0();
  long long v69 = &protocol witness table for Int;
  unint64_t v70 = v19;
  uint64_t v20 = swift_getWitnessTable();
  uint64_t v21 = swift_getWitnessTable();
  zip<A, B>(_:_:)();
  long long v67 = v72;
  uint64_t v68 = v73;
  *(void *)&long long v74 = v18;
  *((void *)&v74 + 1) = v17;
  unint64_t v75 = v20;
  uint64_t v76 = v21;
  type metadata accessor for Zip2Sequence();
  swift_getWitnessTable();
  *(void *)&long long v72 = Array.init<A>(_:)();
  uint64_t v22 = v48;
  uint64_t v61 = a2;
  uint64_t v62 = v48;
  unint64_t v23 = v50;
  unint64_t v63 = v50;
  uint64_t v64 = a5;
  uint64_t v24 = a5;
  uint64_t v25 = v51;
  uint64_t v65 = v51;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v26 = v49;
  uint64_t v27 = v52;
  (*(void (**)(char *, void *, uint64_t))(v10 + 16))(v49, v46, v52);
  unint64_t v28 = (*(unsigned __int8 *)(v10 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v29 = (char *)swift_allocObject();
  *((void *)v29 + 2) = a2;
  *((void *)v29 + 3) = v22;
  *((void *)v29 + 4) = v23;
  *((void *)v29 + 5) = v24;
  *((void *)v29 + 6) = v25;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v29[v28], v26, v27);
  uint64_t v30 = (void *)swift_allocObject();
  v30[2] = a2;
  v30[3] = v22;
  v30[4] = v23;
  v30[5] = v24;
  v30[6] = v25;
  v30[7] = partial apply for closure #1 in closure #2 in closure #1 in CarouselView.body.getter;
  v30[8] = v29;
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for <<opaque return type of View.hoverEffect<A>(_:isEnabled:)>>.0);
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<Group<_ConditionalContent<ModifiedContent<<<opaque return type of View.dynamicTypeSize(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<Circle, _FrameLayout>, _EnvironmentKeyWritingModifier<Color?>>>>, _AnimationModifier<Bool>>);
  uint64_t v33 = type metadata accessor for AutomaticHoverEffect();
  unint64_t v34 = lazy protocol witness table accessor for type ModifiedContent<Group<_ConditionalContent<ModifiedContent<<<opaque return type of View.dynamicTypeSize(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<Circle, _FrameLayout>, _EnvironmentKeyWritingModifier<Color?>>>>, _AnimationModifier<Bool>> and conformance <> ModifiedContent<A, B>();
  uint64_t v35 = lazy protocol witness table accessor for type SafeAreaPaddingModifier and conformance SafeAreaPaddingModifier(&lazy protocol witness table cache variable for type AutomaticHoverEffect and conformance AutomaticHoverEffect, (void (*)(uint64_t))&type metadata accessor for AutomaticHoverEffect);
  *(void *)&long long v74 = v32;
  *((void *)&v74 + 1) = v33;
  unint64_t v75 = v34;
  uint64_t v76 = v35;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  *(void *)&long long v74 = v31;
  *((void *)&v74 + 1) = OpaqueTypeConformance2;
  uint64_t v44 = swift_getOpaqueTypeConformance2();
  uint64_t v37 = v54;
  ForEach<>.init(_:id:content:)();
  uint64_t v66 = v44;
  uint64_t v38 = v53;
  swift_getWitnessTable();
  uint64_t v39 = v59;
  uint64_t v40 = *(void (**)(char *, char *, uint64_t))(v59 + 16);
  uint64_t v41 = v55;
  v40(v55, v37, v38);
  uint64_t v42 = *(void (**)(char *, uint64_t))(v39 + 8);
  v42(v37, v38);
  v40(v60, v41, v38);
  return ((uint64_t (*)(char *, uint64_t))v42)(v41, v38);
}

uint64_t closure #1 in closure #2 in closure #1 in CarouselView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>)
{
  void (*v25)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  unint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  long long v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void v75[5];
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;

  long long v69 = a1;
  uint64_t v65 = a8;
  uint64_t v76 = a3;
  uint64_t v77 = a4;
  uint64_t v78 = a5;
  uint64_t v79 = a6;
  uint64_t v80 = a7;
  unint64_t v70 = type metadata accessor for CarouselView();
  uint64_t v64 = *(void *)(v70 - 8);
  uint64_t v59 = *(void *)(v64 + 64);
  __chkstk_darwin();
  uint64_t v61 = (char *)&v49 - v14;
  uint64_t v60 = type metadata accessor for AutomaticHoverEffect();
  uint64_t v52 = *(void *)(v60 - 8);
  __chkstk_darwin();
  unint64_t v50 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Group<_ConditionalContent<ModifiedContent<<<opaque return type of View.dynamicTypeSize(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<Circle, _FrameLayout>, _EnvironmentKeyWritingModifier<Color?>>>>);
  __chkstk_darwin();
  uint64_t v17 = (char *)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Group<_ConditionalContent<ModifiedContent<<<opaque return type of View.dynamicTypeSize(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<Circle, _FrameLayout>, _EnvironmentKeyWritingModifier<Color?>>>>, _AnimationModifier<Bool>>);
  __chkstk_darwin();
  unint64_t v19 = (char *)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.hoverEffect<A>(_:isEnabled:)>>.0);
  uint64_t v57 = *(void *)(v58 - 8);
  __chkstk_darwin();
  uint64_t v55 = (char *)&v49 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.onTapGesture(count:perform:)>>.0);
  uint64_t v53 = *(void *)(v54 - 8);
  __chkstk_darwin();
  uint64_t v51 = (char *)&v49 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = a2;
  uint64_t v23 = a2;
  uint64_t v24 = v69;
  long long v67 = a4;
  uint64_t v62 = a6;
  unint64_t v63 = a7;
  closure #1 in closure #1 in closure #2 in closure #1 in CarouselView.body.getter(v23, v69, a3, a4, a5, a6, a7, (uint64_t)v17);
  uint64_t v25 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(a5 + 8);
  uint64_t v66 = a3;
  uint64_t v68 = a5;
  v25(v75, a3, a5);
  outlined init with take of PresentationSource?((uint64_t)v75, (uint64_t)&v76, &demangling cache variable for type metadata for PageIndicator?);
  if (v76)
  {
    uint64_t v26 = v77;
    uint64_t v27 = v78;
    unint64_t v28 = v79;
    uint64_t v29 = v80;
    uint64_t v81 = v76;
    swift_retain();
    outlined release of AnyLocation<UIImage?>?((uint64_t)&v81);
    uint64_t v82 = v26;
    outlined release of AnyLocation<UIImage?>?((uint64_t)&v82);
    swift_release();
    long long v83 = v28;
    outlined release of AnyLocation<UIImage?>?((uint64_t)&v83);
    uint64_t v84 = v29;
    outlined release of AnyLocation<UIImage?>?((uint64_t)&v84);
  }
  else
  {
    uint64_t v27 = static Animation.spring(response:dampingFraction:blendDuration:)();
  }
  uint64_t v30 = v22;
  uint64_t v71 = *(_OWORD *)(v22 + *(int *)(v70 + 92));
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Int>);
  State.wrappedValue.getter();
  uint64_t v31 = v74 == v24;
  outlined init with copy of (String, Any)((uint64_t)v17, (uint64_t)v19, &demangling cache variable for type metadata for Group<_ConditionalContent<ModifiedContent<<<opaque return type of View.dynamicTypeSize(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<Circle, _FrameLayout>, _EnvironmentKeyWritingModifier<Color?>>>>);
  uint64_t v32 = v56;
  uint64_t v33 = &v19[*(int *)(v56 + 36)];
  *(void *)uint64_t v33 = v27;
  v33[8] = v31;
  outlined destroy of TaskPriority?((uint64_t)v17, &demangling cache variable for type metadata for Group<_ConditionalContent<ModifiedContent<<<opaque return type of View.dynamicTypeSize(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<Circle, _FrameLayout>, _EnvironmentKeyWritingModifier<Color?>>>>);
  unint64_t v34 = v50;
  static CustomHoverEffect<>.automatic.getter();
  uint64_t v49 = lazy protocol witness table accessor for type ModifiedContent<Group<_ConditionalContent<ModifiedContent<<<opaque return type of View.dynamicTypeSize(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<Circle, _FrameLayout>, _EnvironmentKeyWritingModifier<Color?>>>>, _AnimationModifier<Bool>> and conformance <> ModifiedContent<A, B>();
  uint64_t v35 = lazy protocol witness table accessor for type SafeAreaPaddingModifier and conformance SafeAreaPaddingModifier(&lazy protocol witness table cache variable for type AutomaticHoverEffect and conformance AutomaticHoverEffect, (void (*)(uint64_t))&type metadata accessor for AutomaticHoverEffect);
  uint64_t v36 = v55;
  uint64_t v37 = v60;
  View.hoverEffect<A>(_:isEnabled:)();
  (*(void (**)(char *, uint64_t))(v52 + 8))(v34, v37);
  outlined destroy of TaskPriority?((uint64_t)v19, &demangling cache variable for type metadata for ModifiedContent<Group<_ConditionalContent<ModifiedContent<<<opaque return type of View.dynamicTypeSize(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<Circle, _FrameLayout>, _EnvironmentKeyWritingModifier<Color?>>>>, _AnimationModifier<Bool>>);
  uint64_t v38 = v64;
  uint64_t v39 = v61;
  uint64_t v40 = v70;
  (*(void (**)(char *, uint64_t, uint64_t))(v64 + 16))(v61, v30, v70);
  uint64_t v41 = (*(unsigned __int8 *)(v38 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
  uint64_t v42 = (v59 + v41 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v43 = (char *)swift_allocObject();
  uint64_t v44 = v67;
  *((void *)v43 + 2) = v66;
  *((void *)v43 + 3) = v44;
  uint64_t v45 = v62;
  *((void *)v43 + 4) = v68;
  *((void *)v43 + 5) = v45;
  *((void *)v43 + 6) = v63;
  (*(void (**)(char *, char *, uint64_t))(v38 + 32))(&v43[v41], v39, v40);
  *(void *)&v43[v42] = v69;
  *(void *)&uint64_t v71 = v32;
  *((void *)&v71 + 1) = v37;
  long long v72 = v49;
  uint64_t v73 = v35;
  swift_getOpaqueTypeConformance2();
  uint64_t v46 = v51;
  uint64_t v47 = v58;
  View.onTapGesture(count:perform:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v57 + 8))(v36, v47);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v53 + 32))(v65, v46, v54);
}

uint64_t closure #1 in closure #1 in closure #2 in closure #1 in CarouselView.body.getter@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>)
{
  void (*v22)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t KeyPath;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  char v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void v43[2];
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  long long v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  long long v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void v61[5];
  long long v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void v67[5];
  uint64_t v68;

  uint64_t v51 = a7;
  unint64_t v50 = a6;
  *((void *)&v48 + 1) = a4;
  uint64_t v53 = a2;
  uint64_t v52 = a1;
  uint64_t v56 = a8;
  uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<<<opaque return type of View.dynamicTypeSize(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<Circle, _FrameLayout>, _EnvironmentKeyWritingModifier<Color?>>>.Storage);
  __chkstk_darwin();
  uint64_t v11 = (char *)v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DynamicTypeSize();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin();
  uint64_t v15 = (char *)v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.dynamicTypeSize(_:)>>.0);
  uint64_t v16 = *(void *)(v45 - 8);
  __chkstk_darwin();
  uint64_t v18 = (char *)v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.dynamicTypeSize(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>);
  __chkstk_darwin();
  uint64_t v20 = (char *)v43 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v46 = (uint64_t)v43 - v21;
  uint64_t v22 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(a5 + 8);
  *(void *)&uint64_t v48 = a3;
  uint64_t v49 = a5;
  v22(v61, a3, a5);
  outlined init with take of PresentationSource?((uint64_t)v61, (uint64_t)v67, &demangling cache variable for type metadata for PageIndicator?);
  uint64_t v23 = v67[0];
  if (v67[0])
  {
    uint64_t v24 = v67[1];
    uint64_t v44 = v67[2];
    v43[0] = v67[3];
    uint64_t v47 = v67[4];
    uint64_t KeyPath = swift_getKeyPath();
    *(void *)&uint64_t v62 = v23;
    *((void *)&v62 + 1) = KeyPath;
    unint64_t v63 = v24;
    v43[1] = v24;
    (*(void (**)(char *, void, uint64_t))(v13 + 104))(v15, enum case for DynamicTypeSize.large(_:), v12);
    swift_retain();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&_s7SwiftUI15ModifiedContentVyAA5ImageVAA30_EnvironmentKeyWritingModifierVyAA4FontVSgGGMD_0);
    _s7SwiftUI15ModifiedContentVyAA5ImageVAA30_EnvironmentKeyWritingModifierVyAA4FontVSgGGACyxq_GAA4ViewA2aNRzAA0kI0R_rlWl_0();
    View.dynamicTypeSize(_:)();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    swift_release();
    swift_release();
    swift_release();
    uint64_t v62 = v48;
    unint64_t v63 = v49;
    uint64_t v64 = v50;
    uint64_t v65 = v51;
    uint64_t v62 = *(_OWORD *)(v52 + *(int *)(type metadata accessor for CarouselView() + 92));
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Int>);
    State.wrappedValue.getter();
    uint64_t v26 = v16;
    uint64_t v27 = v43[0];
    if ((void)v57 == v53) {
      unint64_t v28 = v43[0];
    }
    else {
      unint64_t v28 = v47;
    }
    swift_retain();
    uint64_t v29 = swift_getKeyPath();
    uint64_t v30 = v45;
    (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v20, v18, v45);
    uint64_t v31 = (uint64_t *)&v20[*(int *)(v54 + 36)];
    char *v31 = v29;
    v31[1] = v28;
    (*(void (**)(char *, uint64_t))(v26 + 8))(v18, v30);
    uint64_t v32 = (uint64_t)v20;
    uint64_t v33 = v46;
    outlined init with take of PresentationSource?(v32, v46, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.dynamicTypeSize(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>);
    outlined init with copy of (String, Any)(v33, (uint64_t)v11, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.dynamicTypeSize(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>);
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Circle, _FrameLayout>, _EnvironmentKeyWritingModifier<Color?>>);
    lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.dynamicTypeSize(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Circle, _FrameLayout>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>();
    _ConditionalContent<>.init(storage:)();
    swift_release();
    swift_release();
    uint64_t v68 = v44;
    outlined release of AnyLocation<UIImage?>?((uint64_t)&v68);
    *(void *)&uint64_t v57 = v27;
    outlined release of AnyLocation<UIImage?>?((uint64_t)&v57);
    *(void *)&uint64_t v62 = v47;
    outlined release of AnyLocation<UIImage?>?((uint64_t)&v62);
    return outlined destroy of TaskPriority?(v33, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.dynamicTypeSize(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>);
  }
  else
  {
    specialized CarouselView.pageIndicatorDotSize.getter();
    specialized CarouselView.pageIndicatorDotSize.getter();
    static Alignment.center.getter();
    _FrameLayout.init(width:height:alignment:)();
    uint64_t v35 = v62;
    uint64_t v36 = BYTE8(v62);
    uint64_t v37 = v63;
    uint64_t v38 = v64;
    uint64_t v39 = v65;
    uint64_t v40 = v66;
    static Color.primary.getter();
    uint64_t v57 = v48;
    uint64_t v58 = v49;
    uint64_t v59 = v50;
    uint64_t v60 = v51;
    uint64_t v57 = *(_OWORD *)(v52 + *(int *)(type metadata accessor for CarouselView() + 92));
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Int>);
    State.wrappedValue.getter();
    uint64_t v41 = Color.opacity(_:)();
    swift_release();
    uint64_t v42 = swift_getKeyPath();
    *(void *)uint64_t v11 = v35;
    v11[8] = v36;
    *((void *)v11 + 2) = v37;
    v11[24] = v38;
    *((void *)v11 + 4) = v39;
    *((void *)v11 + 5) = v40;
    *((void *)v11 + 6) = v42;
    *((void *)v11 + 7) = v41;
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Circle, _FrameLayout>, _EnvironmentKeyWritingModifier<Color?>>);
    lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.dynamicTypeSize(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Circle, _FrameLayout>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>();
    return _ConditionalContent<>.init(storage:)();
  }
}

uint64_t closure #1 in CarouselView.scrollToIndex(_:animated:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14 = type metadata accessor for ScrollViewProxy();
  uint64_t v24 = *(void *)(v14 - 8);
  __chkstk_darwin();
  uint64_t v23 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ScrollViewProxy?);
  __chkstk_darwin();
  uint64_t v17 = (char *)&v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v25 = a3;
  *((void *)&v25 + 1) = a4;
  uint64_t v26 = a5;
  uint64_t v27 = a6;
  uint64_t v28 = a7;
  uint64_t v18 = type metadata accessor for CarouselView();
  CarouselView.updateCurrentIndex(newIndex:)(a2, v18);
  long long v25 = *(_OWORD *)(a1 + *(int *)(v18 + 92));
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Int>);
  State.wrappedValue.getter();
  Int.seconds.getter(v29);
  uint64_t v19 = v24;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<ScrollViewProxy?>);
  State.wrappedValue.getter();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v14)) {
    return outlined destroy of TaskPriority?((uint64_t)v17, &demangling cache variable for type metadata for ScrollViewProxy?);
  }
  uint64_t v21 = v23;
  (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v23, v17, v14);
  outlined destroy of TaskPriority?((uint64_t)v17, &demangling cache variable for type metadata for ScrollViewProxy?);
  static UnitPoint.leading.getter();
  ScrollViewProxy.scrollTo(rect:anchor:)();
  return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v21, v14);
}

uint64_t key path getter for EnvironmentValues.layoutDirection : EnvironmentValues()
{
  return EnvironmentValues.layoutDirection.getter();
}

uint64_t sub_10039E904()
{
  return EnvironmentValues.layoutDirection.getter();
}

uint64_t key path setter for EnvironmentValues.layoutDirection : EnvironmentValues(uint64_t a1)
{
  type metadata accessor for LayoutDirection();
  __chkstk_darwin();
  (*(void (**)(char *, uint64_t))(v3 + 16))((char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return EnvironmentValues.layoutDirection.setter();
}

unint64_t lazy protocol witness table accessor for type Int? and conformance <A> A?()
{
  unint64_t result = lazy protocol witness table cache variable for type Int? and conformance <A> A?;
  if (!lazy protocol witness table cache variable for type Int? and conformance <A> A?)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&_sSiSgMD_1);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Int? and conformance <A> A?);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<Group<_ConditionalContent<ModifiedContent<<<opaque return type of View.dynamicTypeSize(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<Circle, _FrameLayout>, _EnvironmentKeyWritingModifier<Color?>>>>, _AnimationModifier<Bool>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<Group<_ConditionalContent<ModifiedContent<<<opaque return type of View.dynamicTypeSize(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<Circle, _FrameLayout>, _EnvironmentKeyWritingModifier<Color?>>>>, _AnimationModifier<Bool>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<Group<_ConditionalContent<ModifiedContent<<<opaque return type of View.dynamicTypeSize(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<Circle, _FrameLayout>, _EnvironmentKeyWritingModifier<Color?>>>>, _AnimationModifier<Bool>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<Group<_ConditionalContent<ModifiedContent<<<opaque return type of View.dynamicTypeSize(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<Circle, _FrameLayout>, _EnvironmentKeyWritingModifier<Color?>>>>, _AnimationModifier<Bool>>);
    lazy protocol witness table accessor for type Group<_ConditionalContent<ModifiedContent<<<opaque return type of View.dynamicTypeSize(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<Circle, _FrameLayout>, _EnvironmentKeyWritingModifier<Color?>>>> and conformance <A> Group<A>();
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type _AnimationModifier<Bool> and conformance _AnimationModifier<A>, &demangling cache variable for type metadata for _AnimationModifier<Bool>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<Group<_ConditionalContent<ModifiedContent<<<opaque return type of View.dynamicTypeSize(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<Circle, _FrameLayout>, _EnvironmentKeyWritingModifier<Color?>>>>, _AnimationModifier<Bool>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type Group<_ConditionalContent<ModifiedContent<<<opaque return type of View.dynamicTypeSize(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<Circle, _FrameLayout>, _EnvironmentKeyWritingModifier<Color?>>>> and conformance <A> Group<A>()
{
  unint64_t result = lazy protocol witness table cache variable for type Group<_ConditionalContent<ModifiedContent<<<opaque return type of View.dynamicTypeSize(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<Circle, _FrameLayout>, _EnvironmentKeyWritingModifier<Color?>>>> and conformance <A> Group<A>;
  if (!lazy protocol witness table cache variable for type Group<_ConditionalContent<ModifiedContent<<<opaque return type of View.dynamicTypeSize(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<Circle, _FrameLayout>, _EnvironmentKeyWritingModifier<Color?>>>> and conformance <A> Group<A>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Group<_ConditionalContent<ModifiedContent<<<opaque return type of View.dynamicTypeSize(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<Circle, _FrameLayout>, _EnvironmentKeyWritingModifier<Color?>>>>);
    lazy protocol witness table accessor for type _ConditionalContent<ModifiedContent<<<opaque return type of View.dynamicTypeSize(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<Circle, _FrameLayout>, _EnvironmentKeyWritingModifier<Color?>>> and conformance <> _ConditionalContent<A, B>();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Group<_ConditionalContent<ModifiedContent<<<opaque return type of View.dynamicTypeSize(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<Circle, _FrameLayout>, _EnvironmentKeyWritingModifier<Color?>>>> and conformance <A> Group<A>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type _ConditionalContent<ModifiedContent<<<opaque return type of View.dynamicTypeSize(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<Circle, _FrameLayout>, _EnvironmentKeyWritingModifier<Color?>>> and conformance <> _ConditionalContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type _ConditionalContent<ModifiedContent<<<opaque return type of View.dynamicTypeSize(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<Circle, _FrameLayout>, _EnvironmentKeyWritingModifier<Color?>>> and conformance <> _ConditionalContent<A, B>;
  if (!lazy protocol witness table cache variable for type _ConditionalContent<ModifiedContent<<<opaque return type of View.dynamicTypeSize(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<Circle, _FrameLayout>, _EnvironmentKeyWritingModifier<Color?>>> and conformance <> _ConditionalContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<<<opaque return type of View.dynamicTypeSize(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<Circle, _FrameLayout>, _EnvironmentKeyWritingModifier<Color?>>>);
    lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.dynamicTypeSize(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Circle, _FrameLayout>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type _ConditionalContent<ModifiedContent<<<opaque return type of View.dynamicTypeSize(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<Circle, _FrameLayout>, _EnvironmentKeyWritingModifier<Color?>>> and conformance <> _ConditionalContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.dynamicTypeSize(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.dynamicTypeSize(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.dynamicTypeSize(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.dynamicTypeSize(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>);
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&_s7SwiftUI15ModifiedContentVyAA5ImageVAA30_EnvironmentKeyWritingModifierVyAA4FontVSgGGMD_0);
    _s7SwiftUI15ModifiedContentVyAA5ImageVAA30_EnvironmentKeyWritingModifierVyAA4FontVSgGGACyxq_GAA4ViewA2aNRzAA0kI0R_rlWl_0();
    swift_getOpaqueTypeConformance2();
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Color?> and conformance _EnvironmentKeyWritingModifier<A>, (uint64_t *)&demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Color?>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.dynamicTypeSize(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t _s7SwiftUI15ModifiedContentVyAA5ImageVAA30_EnvironmentKeyWritingModifierVyAA4FontVSgGGACyxq_GAA4ViewA2aNRzAA0kI0R_rlWl_0()
{
  unint64_t result = _s7SwiftUI15ModifiedContentVyAA5ImageVAA30_EnvironmentKeyWritingModifierVyAA4FontVSgGGACyxq_GAA4ViewA2aNRzAA0kI0R_rlWL_0;
  if (!_s7SwiftUI15ModifiedContentVyAA5ImageVAA30_EnvironmentKeyWritingModifierVyAA4FontVSgGGACyxq_GAA4ViewA2aNRzAA0kI0R_rlWL_0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&_s7SwiftUI15ModifiedContentVyAA5ImageVAA30_EnvironmentKeyWritingModifierVyAA4FontVSgGGMD_0);
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>((unint64_t *)&_s7SwiftUI30_EnvironmentKeyWritingModifierVyAA4FontVSgGACyxGAA04ViewF0AAWL_0, &_s7SwiftUI30_EnvironmentKeyWritingModifierVyAA4FontVSgGMD_0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&_s7SwiftUI15ModifiedContentVyAA5ImageVAA30_EnvironmentKeyWritingModifierVyAA4FontVSgGGACyxq_GAA4ViewA2aNRzAA0kI0R_rlWL_0);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Circle, _FrameLayout>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Circle, _FrameLayout>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Circle, _FrameLayout>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Circle, _FrameLayout>, _EnvironmentKeyWritingModifier<Color?>>);
    lazy protocol witness table accessor for type ModifiedContent<Circle, _FrameLayout> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Color?> and conformance _EnvironmentKeyWritingModifier<A>, (uint64_t *)&demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Color?>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Circle, _FrameLayout>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<Circle, _FrameLayout> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<Circle, _FrameLayout> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<Circle, _FrameLayout> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<Circle, _FrameLayout>);
    lazy protocol witness table accessor for type Circle and conformance Circle();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<Circle, _FrameLayout> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type Circle and conformance Circle()
{
  unint64_t result = lazy protocol witness table cache variable for type Circle and conformance Circle;
  if (!lazy protocol witness table cache variable for type Circle and conformance Circle)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Circle and conformance Circle);
  }
  return result;
}

uint64_t partial apply for closure #1 in CarouselView.body.getter()
{
  return partial apply for closure #1 in CarouselView.body.getter((uint64_t (*)(void, void, void, void, void, void))closure #1 in CarouselView.body.getter);
}

uint64_t associated type witness table accessor for View.Body : View in CarouselView<A, B>()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for PageIndicator()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

void *initializeWithCopy for PageIndicator(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for PageIndicator(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for PageIndicator(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for PageIndicator()
{
  return &type metadata for PageIndicator;
}

uint64_t type metadata instantiation function for CarouselView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 96);
}

void type metadata completion function for CarouselView()
{
  type metadata accessor for Binding();
  type metadata accessor for Optional();
  if (v0 <= 0x3F)
  {
    type metadata accessor for State<ScrollViewProxy?>();
    if (v1 <= 0x3F)
    {
      type metadata accessor for Environment<LayoutDirection>.Content();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for CarouselView(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v81 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v81 - 8);
  int v6 = *(_DWORD *)(v5 + 80);
  int v82 = *(_DWORD *)(v5 + 84);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v5 + 64);
  uint64_t v9 = type metadata accessor for ScrollViewProxy();
  uint64_t v10 = *(void *)(v9 - 8);
  int v11 = *(_DWORD *)(v10 + 80);
  uint64_t v83 = v10;
  uint64_t v85 = v9;
  uint64_t v12 = v11 & 0xF8;
  if (*(_DWORD *)(v10 + 84)) {
    uint64_t v13 = *(void *)(v10 + 64);
  }
  else {
    uint64_t v13 = *(void *)(v10 + 64) + 1;
  }
  uint64_t v14 = type metadata accessor for LayoutDirection();
  uint64_t v15 = *(void *)(v14 - 8);
  int v16 = *(_DWORD *)(v15 + 80);
  uint64_t v17 = v16 & 0xF8;
  uint64_t v18 = v17 | 7;
  if (*(void *)(v15 + 64) <= 8uLL) {
    uint64_t v19 = 8;
  }
  else {
    uint64_t v19 = *(void *)(*(void *)(v14 - 8) + 64);
  }
  uint64_t v20 = v12 | v18 | v6;
  uint64_t v21 = *a2;
  *a1 = *a2;
  if (v20 == 7 && ((v11 | v16 | v6) & 0x100000) == 0)
  {
    uint64_t v23 = v6 | 7;
    size_t v24 = ((v6 + 16) & ~(unint64_t)v6) + v8;
    if (v19
       + ((v17
         + 15
         + ((v13 + 7) & 0xFFFFFFFFFFFFFFF8)
         + 8
         + ((v12
           + 23
           + ((((((((((((v24 + ((v6 + 32) & ~v23)) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8)
                   + 23) & 0xFFFFFFFFFFFFFFF8)
                 + 15) & 0xFFFFFFFFFFFFFFF8)
               + 15) & 0xFFFFFFFFFFFFFFF8)
             + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v12 & 0xFFFFFFFFFFFFFFF8)) & ~v18)
       + 1 <= 0x18)
    {
      uint64_t v71 = v12 + 23;
      unint64_t v72 = ~v12 & 0xFFFFFFFFFFFFFFF8;
      uint64_t v73 = v16 & 0xF8 | 7;
      uint64_t v74 = v13 + 7;
      unint64_t v75 = ((v13 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
      uint64_t v76 = v17 + 15;
      size_t v77 = v13;
      uint64_t v78 = v19;
      uint64_t v79 = v15;
      uint64_t v80 = a1;
      uint64_t v70 = v14;
      uint64_t v25 = ~v23;
      unint64_t v26 = ((unint64_t)v80 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v27 = ((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v28 = *(void *)(v27 + 8);
      swift_bridgeObjectRetain();
      if (v28 < 0xFFFFFFFF)
      {
        long long v30 = *(_OWORD *)v27;
        *(void *)(v26 + 16) = *(void *)(v27 + 16);
        *(_OWORD *)unint64_t v26 = v30;
      }
      else
      {
        *(void *)unint64_t v26 = *(void *)v27;
        *(void *)(v26 + 8) = *(void *)(v27 + 8);
        *(void *)(v26 + 16) = *(void *)(v27 + 16);
        swift_retain();
        swift_retain();
      }
      uint64_t v31 = v83;
      uint64_t v32 = ~v7;
      uint64_t v33 = (void *)((v26 + v23 + 24) & v25);
      unint64_t v34 = (void *)((v27 + v23 + 24) & v25);
      uint64_t v35 = (uint64_t *)(((unint64_t)v34 + 15) & 0xFFFFFFFFFFFFFFF8);
      if (v82 < 0)
      {
        if ((*(unsigned int (**)(unint64_t))(v5 + 48))(((unint64_t)v35 + v7 + 8) & v32))
        {
LABEL_21:
          memcpy(v33, v34, v24);
          goto LABEL_24;
        }
      }
      else
      {
        uint64_t v36 = *v35;
        if ((unint64_t)*v35 >= 0xFFFFFFFF) {
          LODWORD(v36) = -1;
        }
        if (v36 != -1) {
          goto LABEL_21;
        }
      }
      *uint64_t v33 = *v34;
      uint64_t v37 = (void *)(((unint64_t)v33 + 15) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v37 = *v35;
      uint64_t v84 = ((unint64_t)v37 + v7 + 8) & v32;
      uint64_t v38 = *(void (**)(uint64_t, unint64_t, uint64_t))(v5 + 16);
      swift_retain();
      swift_retain();
      v38(v84, ((unint64_t)v35 + v7 + 8) & v32, v81);
LABEL_24:
      *((unsigned char *)v33 + v24) = *((unsigned char *)v34 + v24);
      unint64_t v39 = ((unint64_t)v33 + v24) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v40 = ((unint64_t)v34 + v24) & 0xFFFFFFFFFFFFFFF8;
      *(_OWORD *)(v39 + 8) = *(_OWORD *)(v40 + 8);
      uint64_t v41 = (void *)((v39 + 31) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v42 = (void *)((v40 + 31) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v43 = v42[1];
      *uint64_t v41 = *v42;
      v41[1] = v43;
      uint64_t v44 = (void *)(((unint64_t)v42 + 23) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v45 = (void *)(((unint64_t)v41 + 23) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v45 = *v44;
      uint64_t v46 = (void *)(((unint64_t)v44 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v47 = (void *)(((unint64_t)v45 + 15) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v47 = *v46;
      unint64_t v48 = ((unint64_t)v47 + 15) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v49 = (unint64_t *)(((unint64_t)v46 + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v50 = *v49;
      swift_retain();
      if (v50 < 0xFFFFFFFF)
      {
        *(_OWORD *)unint64_t v48 = *(_OWORD *)v49;
      }
      else
      {
        unint64_t v51 = v49[1];
        *(void *)unint64_t v48 = v50;
        *(void *)(v48 + 8) = v51;
        swift_retain();
      }
      uint64_t v52 = ~v73;
      uint64_t v53 = (void *)((v48 + 23) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v54 = (void *)(((unint64_t)v49 + 23) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v53 = *v54;
      v53[1] = v54[1];
      uint64_t v55 = (char *)(((unint64_t)v53 + v71) & v72);
      uint64_t v56 = (char *)(((unint64_t)v54 + v71) & v72);
      uint64_t v57 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48);
      swift_retain();
      if (v57(v56, 1, v85))
      {
        memcpy(v55, v56, v77);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v55, v56, v85);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v55, 0, 1, v85);
      }
      *(void *)((unint64_t)&v55[v74] & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&v56[v74] & 0xFFFFFFFFFFFFFFF8);
      *(void *)&v55[v75] = *(void *)&v56[v75];
      uint64_t v58 = (void *)((unint64_t)&v55[v75 + v76] & v52);
      uint64_t v59 = (unsigned __int8 *)((unint64_t)&v56[v75 + v76] & v52);
      unsigned int v60 = v59[v78];
      swift_retain();
      if (v60 < 2)
      {
        uint64_t v62 = v79;
        uint64_t v63 = v78;
LABEL_37:
        if (v60 != 1)
        {
LABEL_46:
          void *v58 = *(void *)v59;
          *((unsigned char *)v58 + v63) = 0;
          swift_retain();
          return v80;
        }
      }
      else
      {
        if (v78 <= 3) {
          uint64_t v61 = v78;
        }
        else {
          uint64_t v61 = 4;
        }
        uint64_t v62 = v79;
        uint64_t v63 = v78;
        switch(v61)
        {
          case 1:
            int v64 = *v59;
            break;
          case 2:
            int v64 = *(unsigned __int16 *)v59;
            break;
          case 3:
            int v64 = *(unsigned __int16 *)v59 | (v59[2] << 16);
            break;
          case 4:
            int v64 = *(_DWORD *)v59;
            break;
          default:
            goto LABEL_37;
        }
        int v66 = (v64 | ((v60 - 2) << (8 * v78))) + 2;
        int v67 = v64 + 2;
        if (v78 >= 4) {
          int v68 = v67;
        }
        else {
          int v68 = v66;
        }
        if (v68 != 1) {
          goto LABEL_46;
        }
      }
      uint64_t v65 = v63;
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v62 + 16))(v58, v59, v70);
      *((unsigned char *)v58 + v65) = 1;
      return v80;
    }
  }
  uint64_t v29 = v21 + ((v20 + 16) & ~v20);
  swift_retain();
  return (uint64_t *)v29;
}

uint64_t destroy for CarouselView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1 + 15;
  swift_bridgeObjectRelease();
  unint64_t v4 = v3 & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)((v3 & 0xFFFFFFFFFFFFFFF8) + 8) >= 0xFFFFFFFFuLL)
  {
    swift_release();
    swift_release();
  }
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = (v4 + (v7 | 7) + 24) & ~(v7 | 7);
  uint64_t v9 = ~v7;
  uint64_t v10 = (v7 + 16) & ~v7;
  uint64_t v11 = *(void *)(v6 + 64);
  uint64_t v12 = (uint64_t *)((v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  if ((*(_DWORD *)(v6 + 84) & 0x80000000) != 0)
  {
    uint64_t v14 = v10 + v11;
    if (!(*(unsigned int (**)(unint64_t))(v6 + 48))(((unint64_t)v12 + v7 + 8) & v9))
    {
LABEL_7:
      swift_release();
      swift_release();
      (*(void (**)(unint64_t, uint64_t))(v6 + 8))(((unint64_t)v12 + v7 + 8) & v9, v5);
    }
  }
  else
  {
    uint64_t v13 = *v12;
    if ((unint64_t)*v12 >= 0xFFFFFFFF) {
      LODWORD(v13) = -1;
    }
    uint64_t v14 = v10 + v11;
    if (v13 == -1) {
      goto LABEL_7;
    }
  }
  swift_release();
  uint64_t v15 = (void *)((((((((((v14 + v8) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                    + 15) & 0xFFFFFFFFFFFFFFF8)
                  + 15) & 0xFFFFFFFFFFFFFFF8);
  if (*v15 >= 0xFFFFFFFFuLL) {
    swift_release();
  }
  swift_release();
  uint64_t v16 = type metadata accessor for ScrollViewProxy();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(_DWORD *)(v17 + 80) & 0xF8 | 7;
  unint64_t v19 = ((((unint64_t)v15 + 23) & 0xFFFFFFFFFFFFFFF8) + v18 + 16) & ~v18;
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v17 + 48))(v19, 1, v16)) {
    (*(void (**)(unint64_t, uint64_t))(v17 + 8))(v19, v16);
  }
  if (*(_DWORD *)(v17 + 84)) {
    uint64_t v20 = *(void *)(v17 + 64);
  }
  else {
    uint64_t v20 = *(void *)(v17 + 64) + 1;
  }
  swift_release();
  uint64_t v21 = *(void *)(type metadata accessor for LayoutDirection() - 8);
  uint64_t v22 = *(_DWORD *)(v21 + 80) & 0xF8 | 7;
  uint64_t v23 = (unsigned __int8 *)((v19 + ((v20 + 7) & 0xFFFFFFFFFFFFFFF8) + v22 + 16) & ~v22);
  unint64_t v24 = *(void *)(v21 + 64);
  if (v24 <= 8) {
    unint64_t v24 = 8;
  }
  unsigned int v25 = v23[v24];
  unsigned int v26 = v25 - 2;
  if (v25 >= 2)
  {
    if (v24 <= 3) {
      uint64_t v27 = v24;
    }
    else {
      uint64_t v27 = 4;
    }
    switch(v27)
    {
      case 1:
        int v28 = *v23;
        goto LABEL_28;
      case 2:
        int v28 = *(unsigned __int16 *)v23;
        goto LABEL_28;
      case 3:
        int v28 = *(unsigned __int16 *)v23 | (v23[2] << 16);
        goto LABEL_28;
      case 4:
        int v28 = *(_DWORD *)v23;
LABEL_28:
        int v29 = (v28 | (v26 << (8 * v24))) + 2;
        unsigned int v25 = v28 + 2;
        if (v24 < 4) {
          unsigned int v25 = v29;
        }
        break;
      default:
        break;
    }
  }
  if (v25 == 1)
  {
    long long v30 = *(uint64_t (**)(void))(v21 + 8);
    return v30();
  }
  else
  {
    return swift_release();
  }
}

void *initializeWithCopy for CarouselView(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  unint64_t v5 = ((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = ((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = *(void *)(v6 + 8);
  swift_bridgeObjectRetain();
  if (v7 < 0xFFFFFFFF)
  {
    long long v8 = *(_OWORD *)v6;
    *(void *)(v5 + 16) = *(void *)(v6 + 16);
    *(_OWORD *)unint64_t v5 = v8;
  }
  else
  {
    *(void *)unint64_t v5 = *(void *)v6;
    *(void *)(v5 + 8) = *(void *)(v6 + 8);
    *(void *)(v5 + 16) = *(void *)(v6 + 16);
    swift_retain();
    swift_retain();
  }
  uint64_t v9 = *(void *)(a3 + 16);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = (void *)((v5 + (v11 | 7) + 24) & ~(v11 | 7));
  uint64_t v13 = (void *)((v6 + (v11 | 7) + 24) & ~(v11 | 7));
  uint64_t v14 = ~v11;
  uint64_t v15 = (v11 + 16) & ~v11;
  uint64_t v16 = *(void *)(v10 + 64);
  uint64_t v17 = (uint64_t *)(((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFFFF8);
  if ((*(_DWORD *)(v10 + 84) & 0x80000000) != 0)
  {
    size_t v19 = v15 + v16;
    if ((*(unsigned int (**)(unint64_t))(v10 + 48))(((unint64_t)v17 + v11 + 8) & v14))
    {
LABEL_8:
      memcpy(v12, v13, v19);
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t v18 = *v17;
    if ((unint64_t)*v17 >= 0xFFFFFFFF) {
      LODWORD(v18) = -1;
    }
    size_t v19 = v15 + v16;
    if (v18 != -1) {
      goto LABEL_8;
    }
  }
  *uint64_t v12 = *v13;
  uint64_t v20 = (void *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF8);
  void *v20 = *v17;
  uint64_t v21 = v11 + 8;
  uint64_t v22 = ((unint64_t)v20 + v11 + 8) & v14;
  unint64_t v23 = ((unint64_t)v17 + v21) & v14;
  unint64_t v24 = *(void (**)(uint64_t, unint64_t, uint64_t))(v10 + 16);
  swift_retain();
  swift_retain();
  v24(v22, v23, v9);
LABEL_11:
  *((unsigned char *)v12 + v19) = *((unsigned char *)v13 + v19);
  unint64_t v25 = ((unint64_t)v12 + v19) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v26 = ((unint64_t)v13 + v19) & 0xFFFFFFFFFFFFFFF8;
  *(_OWORD *)(v25 + 8) = *(_OWORD *)(v26 + 8);
  uint64_t v27 = (void *)((v25 + 31) & 0xFFFFFFFFFFFFFFF8);
  int v28 = (void *)((v26 + 31) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v29 = v28[1];
  void *v27 = *v28;
  v27[1] = v29;
  long long v30 = (void *)(((unint64_t)v28 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v31 = (void *)(((unint64_t)v27 + 23) & 0xFFFFFFFFFFFFFFF8);
  void *v31 = *v30;
  uint64_t v32 = (void *)(((unint64_t)v30 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v33 = (void *)(((unint64_t)v31 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v33 = *v32;
  unint64_t v34 = ((unint64_t)v33 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v35 = (unint64_t *)(((unint64_t)v32 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v36 = *v35;
  swift_retain();
  if (v36 < 0xFFFFFFFF)
  {
    *(_OWORD *)unint64_t v34 = *(_OWORD *)v35;
  }
  else
  {
    unint64_t v37 = v35[1];
    *(void *)unint64_t v34 = v36;
    *(void *)(v34 + 8) = v37;
    swift_retain();
  }
  uint64_t v38 = (void *)((v34 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v39 = (void *)(((unint64_t)v35 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v38 = *v39;
  v38[1] = v39[1];
  uint64_t v40 = type metadata accessor for ScrollViewProxy();
  uint64_t v41 = *(void *)(v40 - 8);
  uint64_t v42 = *(_DWORD *)(v41 + 80) & 0xF8;
  uint64_t v43 = v42 + 23;
  unint64_t v44 = (unint64_t)v38 + v42 + 23;
  unint64_t v45 = ~v42 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v46 = v44 & v45;
  unint64_t v47 = ((unint64_t)v39 + v43) & v45;
  unint64_t v48 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v41 + 48);
  swift_retain();
  if (v48(v47, 1, v40))
  {
    int v49 = *(_DWORD *)(v41 + 84);
    uint64_t v50 = *(void *)(v41 + 64);
    if (v49) {
      size_t v51 = *(void *)(v41 + 64);
    }
    else {
      size_t v51 = v50 + 1;
    }
    memcpy((void *)v46, (const void *)v47, v51);
  }
  else
  {
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v41 + 16))(v46, v47, v40);
    uint64_t v53 = *(void (**)(unint64_t, void, uint64_t, uint64_t))(v41 + 56);
    uint64_t v52 = v41 + 56;
    v53(v46, 0, 1, v40);
    int v49 = *(_DWORD *)(v52 + 28);
    uint64_t v50 = *(void *)(v52 + 8);
  }
  if (v49) {
    uint64_t v54 = v50;
  }
  else {
    uint64_t v54 = v50 + 1;
  }
  *(void *)(((v46 | 7) + v54) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((v47 | 7) + v54) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v55 = ((v54 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v56 = (void *)(v55 + v46);
  uint64_t v57 = (char *)(v55 + v47);
  *uint64_t v56 = *(void *)(v55 + v47);
  uint64_t v58 = type metadata accessor for LayoutDirection();
  uint64_t v59 = *(void *)(v58 - 8);
  uint64_t v60 = *(_DWORD *)(v59 + 80) & 0xF8;
  uint64_t v61 = v60 + 15;
  unint64_t v62 = (unint64_t)v56 + v60 + 15;
  unint64_t v63 = ~v60 & 0xFFFFFFFFFFFFFFF8;
  int v64 = (void *)(v62 & v63);
  uint64_t v65 = (unsigned __int8 *)((unint64_t)&v57[v61] & v63);
  if (*(void *)(v59 + 64) <= 8uLL) {
    uint64_t v66 = 8;
  }
  else {
    uint64_t v66 = *(void *)(*(void *)(v58 - 8) + 64);
  }
  unsigned int v67 = v65[v66];
  swift_retain();
  if (v67 >= 2)
  {
    if (v66 <= 3) {
      uint64_t v68 = v66;
    }
    else {
      uint64_t v68 = 4;
    }
    switch(v68)
    {
      case 1:
        int v69 = *v65;
        goto LABEL_35;
      case 2:
        int v69 = *(unsigned __int16 *)v65;
        goto LABEL_35;
      case 3:
        int v69 = *(unsigned __int16 *)v65 | (v65[2] << 16);
        goto LABEL_35;
      case 4:
        int v69 = *(_DWORD *)v65;
LABEL_35:
        int v70 = (v69 | ((v67 - 2) << (8 * v66))) + 2;
        unsigned int v71 = v69 + 2;
        if (v66 >= 4) {
          unsigned int v67 = v71;
        }
        else {
          unsigned int v67 = v70;
        }
        break;
      default:
        break;
    }
  }
  if (v67 == 1)
  {
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(v59 + 16))(v64, v65, v58);
    char v72 = 1;
  }
  else
  {
    *int v64 = *(void *)v65;
    swift_retain();
    char v72 = 0;
  }
  *((unsigned char *)v64 + v66) = v72;
  return a1;
}

void *assignWithCopy for CarouselView(void *a1, void *a2, uint64_t a3)
{
  unint64_t v5 = (unint64_t)a2 + 15;
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v6 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v7 = (void *)(v5 & 0xFFFFFFFFFFFFFFF8);
  unint64_t v8 = *(void *)((v5 & 0xFFFFFFFFFFFFFFF8) + 8);
  if (v6[1] < 0xFFFFFFFFuLL)
  {
    if (v8 >= 0xFFFFFFFF)
    {
      *unint64_t v6 = *v7;
      v6[1] = v7[1];
      _OWORD v6[2] = v7[2];
      swift_retain();
      swift_retain();
      goto LABEL_8;
    }
  }
  else
  {
    if (v8 >= 0xFFFFFFFF)
    {
      *unint64_t v6 = *v7;
      swift_retain();
      swift_release();
      v6[1] = v7[1];
      swift_retain();
      swift_release();
      _OWORD v6[2] = v7[2];
      goto LABEL_8;
    }
    swift_release();
    swift_release();
  }
  long long v9 = *(_OWORD *)v7;
  _OWORD v6[2] = v7[2];
  *(_OWORD *)unint64_t v6 = v9;
LABEL_8:
  uint64_t v10 = *(void *)(a3 + 16);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v13 = (char *)v7 + (v12 | 7);
  uint64_t v14 = (void *)(((unint64_t)v6 + (v12 | 7) + 24) & ~(v12 | 7));
  uint64_t v15 = (void *)((unint64_t)(v13 + 24) & ~(v12 | 7));
  uint64_t v16 = *(unsigned int *)(v11 + 84);
  uint64_t v17 = *(void *)(v11 + 64);
  size_t v18 = ((v12 + 16) & ~v12) + v17;
  size_t v19 = (void *)(((unint64_t)v14 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v86 = ~v12;
  if ((v16 & 0x80000000) == 0)
  {
    uint64_t v20 = (uint64_t *)(((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v21 = *v20;
    if ((unint64_t)*v20 >= 0xFFFFFFFF) {
      LODWORD(v21) = -1;
    }
    int v22 = v21 + 1;
    if (*v19 > 0xFFFFFFFEuLL) {
      goto LABEL_12;
    }
LABEL_15:
    if (v22) {
      goto LABEL_16;
    }
    void *v14 = *v15;
    void *v19 = *v20;
    unint64_t v25 = *(void (**)(unint64_t, unint64_t, uint64_t))(v11 + 16);
    swift_retain();
    swift_retain();
    v25(((unint64_t)v19 + v12 + 8) & v86, ((unint64_t)v20 + v12 + 8) & v86, v10);
    goto LABEL_19;
  }
  uint64_t v84 = v14;
  size_t v85 = ((v12 + 16) & ~v12) + v17;
  uint64_t v23 = (unint64_t)(v13 + 24) & ~(v12 | 7);
  unint64_t v24 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v11 + 48);
  int v83 = v24(((unint64_t)v19 + v12 + 8) & ~v12, v16, v10);
  uint64_t v20 = (uint64_t *)((v23 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v15 = (void *)v23;
  uint64_t v14 = v84;
  int v22 = v24(((unint64_t)v20 + v12 + 8) & ~v12, v16, v10);
  size_t v18 = v85;
  if (v83) {
    goto LABEL_15;
  }
LABEL_12:
  if (v22)
  {
    swift_release();
    swift_release();
    (*(void (**)(unint64_t, uint64_t))(v11 + 8))(((unint64_t)v19 + v12 + 8) & v86, v10);
LABEL_16:
    memcpy(v14, v15, v18);
    goto LABEL_19;
  }
  void *v14 = *v15;
  swift_retain();
  swift_release();
  void *v19 = *v20;
  swift_retain();
  swift_release();
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v11 + 24))(((unint64_t)v19 + v12 + 8) & v86, ((unint64_t)v20 + v12 + 8) & v86, v10);
LABEL_19:
  *((unsigned char *)v14 + v18) = *((unsigned char *)v15 + v18);
  unint64_t v26 = ((unint64_t)v14 + v18) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v27 = ((unint64_t)v15 + v18) & 0xFFFFFFFFFFFFFFF8;
  *(void *)(v26 + 8) = *(void *)(v27 + 8);
  *(void *)(v26 + 16) = *(void *)(v27 + 16);
  int v28 = (void *)((v26 + 31) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v29 = (void *)((v27 + 31) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v30 = v29[1];
  *int v28 = *v29;
  v28[1] = v30;
  swift_retain();
  swift_release();
  uint64_t v31 = (void *)(((unint64_t)v28 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v32 = (void *)(((unint64_t)v29 + 23) & 0xFFFFFFFFFFFFFFF8);
  void *v31 = *v32;
  uint64_t v33 = (void *)(((unint64_t)v31 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v34 = (void *)(((unint64_t)v32 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v33 = *v34;
  uint64_t v35 = (void *)(((unint64_t)v33 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v36 = (unint64_t *)(((unint64_t)v34 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v37 = *v36;
  if (*v35 < 0xFFFFFFFFuLL)
  {
    if (v37 >= 0xFFFFFFFF)
    {
      unint64_t v39 = v36[1];
      *uint64_t v35 = v37;
      v35[1] = v39;
      swift_retain();
      goto LABEL_26;
    }
  }
  else
  {
    if (v37 >= 0xFFFFFFFF)
    {
      unint64_t v38 = v36[1];
      *uint64_t v35 = v37;
      v35[1] = v38;
      swift_retain();
      swift_release();
      goto LABEL_26;
    }
    swift_release();
  }
  *(_OWORD *)uint64_t v35 = *(_OWORD *)v36;
LABEL_26:
  uint64_t v40 = (void *)(((unint64_t)v35 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v41 = (void *)(((unint64_t)v36 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v40 = *v41;
  v40[1] = v41[1];
  swift_retain();
  swift_release();
  uint64_t v42 = type metadata accessor for ScrollViewProxy();
  uint64_t v43 = *(void *)(v42 - 8);
  uint64_t v44 = *(_DWORD *)(v43 + 80) & 0xF8;
  uint64_t v45 = v44 + 23;
  unint64_t v46 = (unint64_t)v40 + v44 + 23;
  unint64_t v47 = ~v44 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v48 = v46 & v47;
  unint64_t v49 = ((unint64_t)v41 + v45) & v47;
  uint64_t v50 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v43 + 48);
  int v51 = v50(v46 & v47, 1, v42);
  int v52 = v50(v49, 1, v42);
  if (v51)
  {
    if (!v52)
    {
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v43 + 16))(v48, v49, v42);
      (*(void (**)(unint64_t, void, uint64_t, uint64_t))(v43 + 56))(v48, 0, 1, v42);
      goto LABEL_37;
    }
    int v53 = *(_DWORD *)(v43 + 84);
    size_t v54 = *(void *)(v43 + 64);
  }
  else
  {
    if (!v52)
    {
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v43 + 24))(v48, v49, v42);
      goto LABEL_37;
    }
    (*(void (**)(unint64_t, uint64_t))(v43 + 8))(v48, v42);
    int v53 = *(_DWORD *)(v43 + 84);
    size_t v54 = *(void *)(v43 + 64);
  }
  if (v53) {
    size_t v55 = v54;
  }
  else {
    size_t v55 = v54 + 1;
  }
  memcpy((void *)v48, (const void *)v49, v55);
LABEL_37:
  if (*(_DWORD *)(v43 + 84)) {
    uint64_t v56 = *(void *)(v43 + 64);
  }
  else {
    uint64_t v56 = *(void *)(v43 + 64) + 1;
  }
  *(void *)(((v48 | 7) + v56) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((v49 | 7) + v56) & 0xFFFFFFFFFFFFFFF8);
  swift_retain();
  swift_release();
  unint64_t v57 = ((v56 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v58 = (char *)(v57 + v48);
  uint64_t v59 = (char *)(v57 + v49);
  *(void *)(v57 + v48) = *(void *)(v57 + v49);
  uint64_t v60 = type metadata accessor for LayoutDirection();
  uint64_t v61 = *(void *)(v60 - 8);
  uint64_t v62 = *(_DWORD *)(v61 + 80) & 0xF8;
  uint64_t v63 = v62 + 15;
  int v64 = &v58[v62 + 15];
  unint64_t v65 = ~v62 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v66 = (unsigned __int8 *)((unint64_t)v64 & v65);
  unsigned int v67 = &v59[v63];
  uint64_t v68 = (unsigned __int8 *)((unint64_t)v67 & v65);
  if (((unint64_t)v64 & v65) != ((unint64_t)v67 & v65))
  {
    uint64_t v69 = v60;
    uint64_t v70 = *(void *)(v60 - 8);
    if (*(void *)(v61 + 64) <= 8uLL) {
      uint64_t v71 = 8;
    }
    else {
      uint64_t v71 = *(void *)(v61 + 64);
    }
    unsigned int v72 = v66[v71];
    unsigned int v73 = v72 - 2;
    if (v72 >= 2)
    {
      if (v71 <= 3) {
        uint64_t v74 = v71;
      }
      else {
        uint64_t v74 = 4;
      }
      switch(v74)
      {
        case 1:
          int v75 = *v66;
          goto LABEL_53;
        case 2:
          int v75 = *(unsigned __int16 *)v66;
          goto LABEL_53;
        case 3:
          int v75 = *(unsigned __int16 *)v66 | (v66[2] << 16);
          goto LABEL_53;
        case 4:
          int v75 = *(_DWORD *)v66;
LABEL_53:
          int v76 = (v75 | (v73 << (8 * v71))) + 2;
          unsigned int v72 = v75 + 2;
          if (v71 < 4) {
            unsigned int v72 = v76;
          }
          break;
        default:
          break;
      }
    }
    if (v72 == 1) {
      (*(void (**)(unsigned __int8 *, uint64_t))(v70 + 8))(v66, v60);
    }
    else {
      swift_release();
    }
    unsigned int v77 = v68[v71];
    unsigned int v78 = v77 - 2;
    if (v77 >= 2)
    {
      if (v71 <= 3) {
        uint64_t v79 = v71;
      }
      else {
        uint64_t v79 = 4;
      }
      switch(v79)
      {
        case 1:
          int v80 = *v68;
          goto LABEL_67;
        case 2:
          int v80 = *(unsigned __int16 *)v68;
          goto LABEL_67;
        case 3:
          int v80 = *(unsigned __int16 *)v68 | (v68[2] << 16);
          goto LABEL_67;
        case 4:
          int v80 = *(_DWORD *)v68;
LABEL_67:
          int v81 = (v80 | (v78 << (8 * v71))) + 2;
          unsigned int v77 = v80 + 2;
          if (v71 < 4) {
            unsigned int v77 = v81;
          }
          break;
        default:
          break;
      }
    }
    if (v77 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v70 + 16))(v66, v68, v69);
      v66[v71] = 1;
    }
    else
    {
      *(void *)uint64_t v66 = *(void *)v68;
      v66[v71] = 0;
      swift_retain();
    }
  }
  return a1;
}

void *initializeWithTake for CarouselView(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  unint64_t v4 = ((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v5 = ((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8;
  long long v6 = *(_OWORD *)v5;
  *(void *)(v4 + 16) = *(void *)(v5 + 16);
  *(_OWORD *)unint64_t v4 = v6;
  uint64_t v7 = *(void *)(a3 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = (void *)((v4 + (v9 | 7) + 24) & ~(v9 | 7));
  uint64_t v11 = (void *)((v5 + (v9 | 7) + 24) & ~(v9 | 7));
  uint64_t v12 = ~v9;
  uint64_t v13 = (v9 + 16) & ~v9;
  uint64_t v14 = *(void *)(v8 + 64);
  uint64_t v15 = (uint64_t *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8);
  if ((*(_DWORD *)(v8 + 84) & 0x80000000) != 0)
  {
    size_t v17 = v13 + v14;
    if ((*(unsigned int (**)(unint64_t))(v8 + 48))(((unint64_t)v15 + v9 + 8) & v12))
    {
LABEL_5:
      memcpy(v10, v11, v17);
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t v16 = *v15;
    if ((unint64_t)*v15 >= 0xFFFFFFFF) {
      LODWORD(v16) = -1;
    }
    size_t v17 = v13 + v14;
    if (v16 != -1) {
      goto LABEL_5;
    }
  }
  *uint64_t v10 = *v11;
  size_t v18 = (void *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
  *size_t v18 = *v15;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 32))(((unint64_t)v18 + v9 + 8) & v12, ((unint64_t)v15 + v9 + 8) & v12, v7);
LABEL_8:
  *((unsigned char *)v10 + v17) = *((unsigned char *)v11 + v17);
  unint64_t v19 = ((unint64_t)v10 + v17) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v20 = ((unint64_t)v11 + v17) & 0xFFFFFFFFFFFFFFF8;
  *(_OWORD *)(v19 + 8) = *(_OWORD *)(v20 + 8);
  uint64_t v21 = (_OWORD *)((v19 + 31) & 0xFFFFFFFFFFFFFFF8);
  int v22 = (_OWORD *)((v20 + 31) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v21 = *v22;
  uint64_t v23 = (void *)(((unint64_t)v21 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v24 = (void *)(((unint64_t)v22 + 23) & 0xFFFFFFFFFFFFFFF8);
  void *v23 = *v24;
  unint64_t v25 = (void *)(((unint64_t)v23 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v26 = (void *)(((unint64_t)v24 + 15) & 0xFFFFFFFFFFFFFFF8);
  void *v25 = *v26;
  unint64_t v27 = ((unint64_t)v25 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v28 = ((unint64_t)v26 + 15) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)v28 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)unint64_t v27 = *(_OWORD *)v28;
  }
  else
  {
    uint64_t v29 = *(void *)(v28 + 8);
    *(void *)unint64_t v27 = *(void *)v28;
    *(void *)(v27 + 8) = v29;
  }
  uint64_t v30 = (_OWORD *)((v27 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v31 = (_OWORD *)((v28 + 23) & 0xFFFFFFFFFFFFFFF8);
  _OWORD *v30 = *v31;
  uint64_t v32 = type metadata accessor for ScrollViewProxy();
  uint64_t v33 = *(void *)(v32 - 8);
  uint64_t v34 = *(_DWORD *)(v33 + 80) & 0xF8;
  uint64_t v35 = v34 + 23;
  unint64_t v36 = (unint64_t)v30 + v34 + 23;
  unint64_t v37 = ~v34 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v38 = v36 & v37;
  unint64_t v39 = ((unint64_t)v31 + v35) & v37;
  if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v33 + 48))(v39, 1, v32))
  {
    int v40 = *(_DWORD *)(v33 + 84);
    size_t v41 = *(void *)(v33 + 64);
    if (v40) {
      size_t v42 = v41;
    }
    else {
      size_t v42 = v41 + 1;
    }
    memcpy((void *)v38, (const void *)v39, v42);
  }
  else
  {
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v33 + 32))(v38, v39, v32);
    uint64_t v44 = *(void (**)(unint64_t, void, uint64_t, uint64_t))(v33 + 56);
    uint64_t v43 = v33 + 56;
    v44(v38, 0, 1, v32);
    int v40 = *(_DWORD *)(v43 + 28);
    size_t v41 = *(void *)(v43 + 8);
  }
  if (v40) {
    size_t v45 = v41;
  }
  else {
    size_t v45 = v41 + 1;
  }
  *(void *)(((v38 | 7) + v45) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((v39 | 7) + v45) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v46 = ((v45 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  unint64_t v47 = (void *)(v46 + v38);
  unint64_t v48 = (void *)(v46 + v39);
  *unint64_t v47 = *v48;
  uint64_t v49 = *(void *)(type metadata accessor for LayoutDirection() - 8);
  uint64_t v50 = *(_DWORD *)(v49 + 80) & 0xF8;
  uint64_t v51 = v50 + 15;
  unint64_t v52 = (unint64_t)v47 + v50 + 15;
  unint64_t v53 = ~v50 & 0xFFFFFFFFFFFFFFF8;
  size_t v54 = (void *)(v52 & v53);
  size_t v55 = (unsigned __int8 *)(((unint64_t)v48 + v51) & v53);
  if (*(void *)(v49 + 64) <= 8uLL) {
    uint64_t v56 = 8;
  }
  else {
    uint64_t v56 = *(void *)(v49 + 64);
  }
  unsigned int v57 = v55[v56];
  unsigned int v58 = v57 - 2;
  if (v57 >= 2)
  {
    if (v56 <= 3) {
      uint64_t v59 = v56;
    }
    else {
      uint64_t v59 = 4;
    }
    switch(v59)
    {
      case 1:
        int v60 = *v55;
        goto LABEL_32;
      case 2:
        int v60 = *(unsigned __int16 *)v55;
        goto LABEL_32;
      case 3:
        int v60 = *(unsigned __int16 *)v55 | (v55[2] << 16);
        goto LABEL_32;
      case 4:
        int v60 = *(_DWORD *)v55;
LABEL_32:
        int v61 = (v60 | (v58 << (8 * v56))) + 2;
        unsigned int v57 = v60 + 2;
        if (v56 < 4) {
          unsigned int v57 = v61;
        }
        break;
      default:
        break;
    }
  }
  if (v57 == 1)
  {
    (*(void (**)(void *))(v49 + 32))(v54);
    char v62 = 1;
  }
  else
  {
    char v62 = 0;
    *size_t v54 = *(void *)v55;
  }
  *((unsigned char *)v54 + v56) = v62;
  return a1;
}

void *assignWithTake for CarouselView(void *a1, void *a2, uint64_t a3)
{
  unint64_t v5 = (unint64_t)a2 + 15;
  *a1 = *a2;
  swift_bridgeObjectRelease();
  long long v6 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v7 = (void *)(v5 & 0xFFFFFFFFFFFFFFF8);
  if (v6[1] >= 0xFFFFFFFFuLL)
  {
    if (v7[1] >= 0xFFFFFFFFuLL)
    {
      *long long v6 = *v7;
      swift_release();
      v6[1] = v7[1];
      swift_release();
      _OWORD v6[2] = v7[2];
      goto LABEL_6;
    }
    swift_release();
    swift_release();
  }
  long long v8 = *(_OWORD *)v7;
  _OWORD v6[2] = v7[2];
  *(_OWORD *)long long v6 = v8;
LABEL_6:
  uint64_t v9 = *(void *)(a3 + 16);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = (char *)v7 + (v11 | 7);
  uint64_t v13 = (void *)(((unint64_t)v6 + (v11 | 7) + 24) & ~(v11 | 7));
  uint64_t v14 = (void *)((unint64_t)(v12 + 24) & ~(v11 | 7));
  uint64_t v15 = *(unsigned int *)(v10 + 84);
  uint64_t v16 = *(void *)(v10 + 64);
  size_t v17 = ((v11 + 16) & ~v11) + v16;
  size_t v18 = (void *)(((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v86 = ~v11;
  if ((v15 & 0x80000000) == 0)
  {
    unint64_t v19 = (uint64_t *)(((unint64_t)v14 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v20 = *v19;
    if ((unint64_t)*v19 >= 0xFFFFFFFF) {
      LODWORD(v20) = -1;
    }
    int v21 = v20 + 1;
    if (*v18 > 0xFFFFFFFEuLL) {
      goto LABEL_10;
    }
LABEL_13:
    if (v21) {
      goto LABEL_14;
    }
    void *v13 = *v14;
    *size_t v18 = *v19;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v10 + 32))(((unint64_t)v18 + v11 + 8) & v86, ((unint64_t)v19 + v11 + 8) & v86, v9);
    goto LABEL_17;
  }
  uint64_t v84 = v13;
  size_t v85 = ((v11 + 16) & ~v11) + v16;
  uint64_t v22 = (unint64_t)(v12 + 24) & ~(v11 | 7);
  uint64_t v23 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v10 + 48);
  int v24 = v23(((unint64_t)v18 + v11 + 8) & ~v11, v15, v9);
  unint64_t v25 = v23;
  int v83 = v24;
  unint64_t v19 = (uint64_t *)((v22 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v14 = (void *)v22;
  uint64_t v13 = v84;
  int v21 = v25(((unint64_t)v19 + v11 + 8) & ~v11, v15, v9);
  size_t v17 = v85;
  if (v83) {
    goto LABEL_13;
  }
LABEL_10:
  if (v21)
  {
    swift_release();
    swift_release();
    (*(void (**)(unint64_t, uint64_t))(v10 + 8))(((unint64_t)v18 + v11 + 8) & v86, v9);
LABEL_14:
    memcpy(v13, v14, v17);
    goto LABEL_17;
  }
  void *v13 = *v14;
  swift_release();
  *size_t v18 = *v19;
  swift_release();
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v10 + 40))(((unint64_t)v18 + v11 + 8) & v86, ((unint64_t)v19 + v11 + 8) & v86, v9);
LABEL_17:
  *((unsigned char *)v13 + v17) = *((unsigned char *)v14 + v17);
  unint64_t v26 = ((unint64_t)v13 + v17) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v27 = ((unint64_t)v14 + v17) & 0xFFFFFFFFFFFFFFF8;
  *(void *)(v26 + 8) = *(void *)(v27 + 8);
  *(void *)(v26 + 16) = *(void *)(v27 + 16);
  unint64_t v28 = (_OWORD *)((v26 + 31) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v29 = (v27 + 31) & 0xFFFFFFFFFFFFFFF8;
  long long v30 = *(_OWORD *)v29;
  v29 += 23;
  *unint64_t v28 = v30;
  swift_release();
  uint64_t v31 = (void *)(((unint64_t)v28 + 23) & 0xFFFFFFFFFFFFFFF8);
  void *v31 = *(void *)(v29 & 0xFFFFFFFFFFFFFFF8);
  uint64_t v32 = (void *)(((unint64_t)v31 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v33 = (void *)(((v29 & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v32 = *v33;
  uint64_t v34 = (void *)(((unint64_t)v32 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v35 = (unint64_t *)(((unint64_t)v33 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v36 = *v35;
  if (*v34 < 0xFFFFFFFFuLL)
  {
    if (v36 >= 0xFFFFFFFF)
    {
      unint64_t v38 = v35[1];
      *uint64_t v34 = v36;
      v34[1] = v38;
      goto LABEL_24;
    }
  }
  else
  {
    if (v36 >= 0xFFFFFFFF)
    {
      unint64_t v37 = v35[1];
      *uint64_t v34 = v36;
      v34[1] = v37;
      swift_release();
      goto LABEL_24;
    }
    swift_release();
  }
  *(_OWORD *)uint64_t v34 = *(_OWORD *)v35;
LABEL_24:
  unint64_t v39 = (void *)(((unint64_t)v34 + 23) & 0xFFFFFFFFFFFFFFF8);
  int v40 = (void *)(((unint64_t)v35 + 23) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v39 = *v40;
  v39[1] = v40[1];
  swift_release();
  uint64_t v41 = type metadata accessor for ScrollViewProxy();
  uint64_t v42 = *(void *)(v41 - 8);
  uint64_t v43 = *(_DWORD *)(v42 + 80) & 0xF8;
  uint64_t v44 = v43 + 23;
  unint64_t v45 = (unint64_t)v39 + v43 + 23;
  unint64_t v46 = ~v43 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v47 = v45 & v46;
  unint64_t v48 = ((unint64_t)v40 + v44) & v46;
  uint64_t v49 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v42 + 48);
  int v50 = v49(v45 & v46, 1, v41);
  int v51 = v49(v48, 1, v41);
  if (v50)
  {
    if (!v51)
    {
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v42 + 32))(v47, v48, v41);
      (*(void (**)(unint64_t, void, uint64_t, uint64_t))(v42 + 56))(v47, 0, 1, v41);
      goto LABEL_35;
    }
    int v52 = *(_DWORD *)(v42 + 84);
    size_t v53 = *(void *)(v42 + 64);
  }
  else
  {
    if (!v51)
    {
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v42 + 40))(v47, v48, v41);
      goto LABEL_35;
    }
    (*(void (**)(unint64_t, uint64_t))(v42 + 8))(v47, v41);
    int v52 = *(_DWORD *)(v42 + 84);
    size_t v53 = *(void *)(v42 + 64);
  }
  if (v52) {
    size_t v54 = v53;
  }
  else {
    size_t v54 = v53 + 1;
  }
  memcpy((void *)v47, (const void *)v48, v54);
LABEL_35:
  if (*(_DWORD *)(v42 + 84)) {
    uint64_t v55 = *(void *)(v42 + 64);
  }
  else {
    uint64_t v55 = *(void *)(v42 + 64) + 1;
  }
  *(void *)(((v47 | 7) + v55) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((v48 | 7) + v55) & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  unint64_t v56 = ((v55 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  unsigned int v57 = (char *)(v56 + v47);
  unsigned int v58 = (char *)(v56 + v48);
  *(void *)(v56 + v47) = *(void *)(v56 + v48);
  uint64_t v59 = type metadata accessor for LayoutDirection();
  uint64_t v60 = *(void *)(v59 - 8);
  uint64_t v61 = *(_DWORD *)(v60 + 80) & 0xF8;
  uint64_t v62 = v61 + 15;
  uint64_t v63 = &v57[v61 + 15];
  unint64_t v64 = ~v61 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v65 = (unsigned __int8 *)((unint64_t)v63 & v64);
  uint64_t v66 = &v58[v62];
  unsigned int v67 = (unsigned __int8 *)((unint64_t)v66 & v64);
  if (((unint64_t)v63 & v64) != ((unint64_t)v66 & v64))
  {
    uint64_t v68 = v59;
    uint64_t v69 = *(void *)(v59 - 8);
    if (*(void *)(v60 + 64) <= 8uLL) {
      uint64_t v70 = 8;
    }
    else {
      uint64_t v70 = *(void *)(v60 + 64);
    }
    unsigned int v71 = v65[v70];
    unsigned int v72 = v71 - 2;
    if (v71 >= 2)
    {
      if (v70 <= 3) {
        uint64_t v73 = v70;
      }
      else {
        uint64_t v73 = 4;
      }
      switch(v73)
      {
        case 1:
          int v74 = *v65;
          goto LABEL_51;
        case 2:
          int v74 = *(unsigned __int16 *)v65;
          goto LABEL_51;
        case 3:
          int v74 = *(unsigned __int16 *)v65 | (v65[2] << 16);
          goto LABEL_51;
        case 4:
          int v74 = *(_DWORD *)v65;
LABEL_51:
          int v75 = (v74 | (v72 << (8 * v70))) + 2;
          unsigned int v71 = v74 + 2;
          if (v70 < 4) {
            unsigned int v71 = v75;
          }
          break;
        default:
          break;
      }
    }
    if (v71 == 1) {
      (*(void (**)(unsigned __int8 *, uint64_t))(v69 + 8))(v65, v59);
    }
    else {
      swift_release();
    }
    unsigned int v76 = v67[v70];
    unsigned int v77 = v76 - 2;
    if (v76 >= 2)
    {
      if (v70 <= 3) {
        uint64_t v78 = v70;
      }
      else {
        uint64_t v78 = 4;
      }
      switch(v78)
      {
        case 1:
          int v79 = *v67;
          goto LABEL_65;
        case 2:
          int v79 = *(unsigned __int16 *)v67;
          goto LABEL_65;
        case 3:
          int v79 = *(unsigned __int16 *)v67 | (v67[2] << 16);
          goto LABEL_65;
        case 4:
          int v79 = *(_DWORD *)v67;
LABEL_65:
          int v80 = (v79 | (v77 << (8 * v70))) + 2;
          unsigned int v76 = v79 + 2;
          if (v70 < 4) {
            unsigned int v76 = v80;
          }
          break;
        default:
          break;
      }
    }
    if (v76 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v69 + 32))(v65, v67, v68);
      char v81 = 1;
    }
    else
    {
      char v81 = 0;
      *(void *)unint64_t v65 = *(void *)v67;
    }
    v65[v70] = v81;
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for CarouselView(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  unsigned int v33 = v5;
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v5 = 0x7FFFFFFF;
  }
  unsigned int v6 = v5 - 1;
  uint64_t v32 = type metadata accessor for ScrollViewProxy();
  uint64_t v7 = *(void *)(v32 - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  unsigned int v9 = v8 - 1;
  if (!v8) {
    unsigned int v9 = 0;
  }
  if (v9 <= 0x7FFFFFFE) {
    unsigned int v9 = 2147483646;
  }
  unsigned int v34 = v6;
  if (v6 <= v9) {
    unsigned int v6 = v9;
  }
  if (v6 <= 0x7FFFFFFF) {
    unsigned int v10 = 0x7FFFFFFF;
  }
  else {
    unsigned int v10 = v6;
  }
  uint64_t v11 = *(void *)(type metadata accessor for LayoutDirection() - 8);
  if (*(void *)(v11 + 64) <= 8uLL) {
    uint64_t v12 = 8;
  }
  else {
    uint64_t v12 = *(void *)(v11 + 64);
  }
  uint64_t v13 = *(unsigned __int8 *)(v4 + 80);
  if (v8) {
    uint64_t v14 = 7;
  }
  else {
    uint64_t v14 = 8;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v15 = v13 | 7;
  uint64_t v16 = ((v13 + 16) & ~v13) + *(void *)(v4 + 64);
  uint64_t v17 = *(_DWORD *)(v7 + 80) & 0xF8;
  unint64_t v18 = ~v17 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v19 = v17 + 23;
  if (a2 <= v10) {
    goto LABEL_37;
  }
  uint64_t v20 = *(_DWORD *)(v11 + 80) & 0xF8 | 7;
  unint64_t v21 = v12
      + ((((v14 + *(void *)(v7 + 64)) & 0xFFFFFFFFFFFFFFF8)
        + v20
        + ((v19
          + ((((((((((((v16 + ((v13 + 32) & ~v15)) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                + 15) & 0xFFFFFFFFFFFFFFF8)
              + 15) & 0xFFFFFFFFFFFFFFF8)
            + 23) & 0xFFFFFFFFFFFFFFF8)) & v18)
        + 16) & ~v20)
      + 1;
  char v22 = 8 * v21;
  if (v21 <= 3)
  {
    unsigned int v25 = ((a2 - v10 + ~(-1 << v22)) >> v22) + 1;
    if (HIWORD(v25))
    {
      int v23 = *(_DWORD *)((char *)a1 + v21);
      if (!v23) {
        goto LABEL_37;
      }
      goto LABEL_29;
    }
    if (v25 > 0xFF)
    {
      int v23 = *(unsigned __int16 *)((char *)a1 + v21);
      if (!*(unsigned __int16 *)((char *)a1 + v21)) {
        goto LABEL_37;
      }
      goto LABEL_29;
    }
    if (v25 < 2)
    {
LABEL_37:
      if ((v6 & 0x80000000) != 0)
      {
        unint64_t v28 = ((((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8) + v15 + 24) & ~v15;
        if (v34 == v10)
        {
          unint64_t v29 = (unint64_t *)((v28 + 15) & 0xFFFFFFFFFFFFFFF8);
          if ((v33 & 0x80000000) != 0)
          {
            unsigned int v31 = (*(uint64_t (**)(unint64_t))(v4 + 48))(((unint64_t)v29 + v13 + 8) & ~v13);
          }
          else
          {
            unint64_t v30 = *v29;
            if (v30 >= 0xFFFFFFFF) {
              LODWORD(v30) = -1;
            }
            unsigned int v31 = v30 + 1;
          }
        }
        else
        {
          unsigned int v31 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))((v19+ ((((((((((((v28 + v16) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)+ 15) & 0xFFFFFFFFFFFFFFF8)+ 15) & 0xFFFFFFFFFFFFFFF8)+ 23) & 0xFFFFFFFFFFFFFFF8)) & v18, v8, v32);
        }
        if (v31 >= 2) {
          return v31 - 1;
        }
        else {
          return 0;
        }
      }
      else
      {
        uint64_t v27 = *(void *)a1;
        if (*(void *)a1 >= 0xFFFFFFFFuLL) {
          LODWORD(v27) = -1;
        }
        return (v27 + 1);
      }
    }
  }
  int v23 = *((unsigned __int8 *)a1 + v21);
  if (!*((unsigned char *)a1 + v21)) {
    goto LABEL_37;
  }
LABEL_29:
  int v26 = (v23 - 1) << v22;
  if (v21 > 3) {
    int v26 = 0;
  }
  if (v21)
  {
    if (v21 > 3) {
      LODWORD(v21) = 4;
    }
    switch((int)v21)
    {
      case 2:
        LODWORD(v21) = *a1;
        break;
      case 3:
        LODWORD(v21) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v21) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v21) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v10 + (v21 | v26) + 1;
}

void storeEnumTagSinglePayload for CarouselView(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v6 = *(_DWORD *)(v5 + 84);
  unsigned int v45 = v6;
  if (v6 <= 0x7FFFFFFF) {
    unsigned int v6 = 0x7FFFFFFF;
  }
  unsigned int v47 = v6;
  unsigned int v7 = v6 - 1;
  uint64_t v46 = type metadata accessor for ScrollViewProxy();
  uint64_t v8 = *(void *)(v46 - 8);
  uint64_t v48 = v8;
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  if (v9) {
    unsigned int v10 = v9 - 1;
  }
  else {
    unsigned int v10 = 0;
  }
  if (v10 <= 0x7FFFFFFE) {
    unsigned int v11 = 2147483646;
  }
  else {
    unsigned int v11 = v10;
  }
  if (v7 <= v11) {
    unsigned int v12 = v11;
  }
  else {
    unsigned int v12 = v7;
  }
  if (v12 <= 0x7FFFFFFF) {
    unsigned int v13 = 0x7FFFFFFF;
  }
  else {
    unsigned int v13 = v12;
  }
  uint64_t v14 = type metadata accessor for LayoutDirection();
  int v15 = 0;
  uint64_t v16 = *(void *)(v14 - 8);
  if (*(void *)(v16 + 64) <= 8uLL) {
    uint64_t v17 = 8;
  }
  else {
    uint64_t v17 = *(void *)(v16 + 64);
  }
  uint64_t v18 = *(unsigned __int8 *)(v5 + 80);
  size_t v19 = ((v18 + 16) & ~v18) + *(void *)(v5 + 64);
  uint64_t v20 = *(_DWORD *)(v8 + 80) & 0xF8;
  unint64_t v21 = ~v20 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v22 = v20 + 23;
  size_t v23 = *(void *)(v8 + 64);
  if (!v9) {
    ++v23;
  }
  uint64_t v24 = *(_DWORD *)(v16 + 80) & 0xF8 | 7;
  size_t v25 = v17
      + ((((v23 + 7) & 0xFFFFFFFFFFFFFFF8)
        + v24
        + ((v22
          + ((((((((((((v19 + ((v18 + 32) & ~(v18 | 7))) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                + 15) & 0xFFFFFFFFFFFFFFF8)
              + 15) & 0xFFFFFFFFFFFFFFF8)
            + 23) & 0xFFFFFFFFFFFFFFF8)) & v21)
        + 16) & ~v24)
      + 1;
  if (a3 > v13)
  {
    if (v25 <= 3)
    {
      unsigned int v26 = ((a3 - v13 + ~(-1 << (8 * v25))) >> (8 * v25)) + 1;
      if (HIWORD(v26))
      {
        int v15 = 4;
      }
      else if (v26 >= 0x100)
      {
        int v15 = 2;
      }
      else
      {
        int v15 = v26 > 1;
      }
    }
    else
    {
      int v15 = 1;
    }
  }
  if (v13 < a2)
  {
    unsigned int v27 = ~v13 + a2;
    if (v25 < 4)
    {
      int v29 = (v27 >> (8 * v25)) + 1;
      if (v25)
      {
        int v30 = v15;
        int v31 = v27 & ~(-1 << (8 * v25));
        bzero(a1, v25);
        if (v25 == 3)
        {
          *(_WORD *)a1 = v31;
          a1[2] = BYTE2(v31);
          int v15 = v30;
        }
        else
        {
          int v15 = v30;
          if (v25 == 2) {
            *(_WORD *)a1 = v31;
          }
          else {
            *a1 = v31;
          }
        }
      }
    }
    else
    {
      int v28 = v15;
      bzero(a1, v25);
      int v15 = v28;
      *(_DWORD *)a1 = v27;
      int v29 = 1;
    }
    switch(v15)
    {
      case 1:
        a1[v25] = v29;
        return;
      case 2:
        *(_WORD *)&a1[v25] = v29;
        return;
      case 3:
        goto LABEL_92;
      case 4:
        *(_DWORD *)&a1[v25] = v29;
        return;
      default:
        return;
    }
  }
  switch(v15)
  {
    case 1:
      a1[v25] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_40;
    case 2:
      *(_WORD *)&a1[v25] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_40;
    case 3:
LABEL_92:
      __break(1u);
      JUMPOUT(0x1003A2038);
    case 4:
      *(_DWORD *)&a1[v25] = 0;
      goto LABEL_39;
    default:
LABEL_39:
      if (a2)
      {
LABEL_40:
        if ((v12 & 0x80000000) != 0)
        {
          unint64_t v33 = (((unint64_t)(a1 + 15) & 0xFFFFFFFFFFFFFFF8) + (v18 | 7) + 24) & ~(v18 | 7);
          if (v7 == v13)
          {
            uint64_t v34 = a2 + 1;
            if (v34 <= v47)
            {
              if (a2 != -1)
              {
                uint64_t v42 = (void *)((v33 + 15) & 0xFFFFFFFFFFFFFFF8);
                if ((v45 & 0x80000000) != 0)
                {
                  uint64_t v44 = *(void (**)(unint64_t, uint64_t))(v5 + 56);
                  v44(((unint64_t)v42 + v18 + 8) & ~v18, v34);
                }
                else if ((v34 & 0x80000000) != 0)
                {
                  *uint64_t v42 = a2 - 0x7FFFFFFF;
                }
                else
                {
                  *uint64_t v42 = a2;
                }
              }
            }
            else
            {
              if (v19 <= 3) {
                int v35 = ~(-1 << (8 * v19));
              }
              else {
                int v35 = -1;
              }
              if (v19)
              {
                int v36 = v35 & (a2 - v47);
                if (v19 <= 3) {
                  int v37 = v19;
                }
                else {
                  int v37 = 4;
                }
                bzero((void *)((((unint64_t)(a1 + 15) & 0xFFFFFFFFFFFFFFF8) + (v18 | 7) + 24) & ~(v18 | 7)), v19);
                switch(v37)
                {
                  case 2:
                    *(_WORD *)unint64_t v33 = v36;
                    break;
                  case 3:
                    *(_WORD *)unint64_t v33 = v36;
                    *(unsigned char *)(v33 + 2) = BYTE2(v36);
                    break;
                  case 4:
                    *(_DWORD *)unint64_t v33 = v36;
                    break;
                  default:
                    *(unsigned char *)unint64_t v33 = v36;
                    break;
                }
              }
            }
          }
          else
          {
            unint64_t v38 = (v22
                 + ((((((((((((v33 + v19) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                       + 15) & 0xFFFFFFFFFFFFFFF8)
                     + 15) & 0xFFFFFFFFFFFFFFF8)
                   + 23) & 0xFFFFFFFFFFFFFFF8)) & v21;
            if (v10 >= a2)
            {
              uint64_t v43 = *(void (**)(unint64_t, void, uint64_t, uint64_t))(v48 + 56);
              v43(v38, a2 + 1, v9, v46);
            }
            else
            {
              if (v23 <= 3) {
                int v39 = ~(-1 << (8 * v23));
              }
              else {
                int v39 = -1;
              }
              if (v23)
              {
                int v40 = v39 & (~v10 + a2);
                if (v23 <= 3) {
                  int v41 = v23;
                }
                else {
                  int v41 = 4;
                }
                bzero((void *)((v22+ ((((((((((((v33 + v19) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)+ 15) & 0xFFFFFFFFFFFFFFF8)+ 15) & 0xFFFFFFFFFFFFFFF8)+ 23) & 0xFFFFFFFFFFFFFFF8)) & v21), v23);
                switch(v41)
                {
                  case 2:
                    *(_WORD *)unint64_t v38 = v40;
                    break;
                  case 3:
                    *(_WORD *)unint64_t v38 = v40;
                    *(unsigned char *)(v38 + 2) = BYTE2(v40);
                    break;
                  case 4:
                    *(_DWORD *)unint64_t v38 = v40;
                    break;
                  default:
                    *(unsigned char *)unint64_t v38 = v40;
                    break;
                }
              }
            }
          }
        }
        else
        {
          if ((a2 & 0x80000000) != 0) {
            uint64_t v32 = a2 ^ 0x80000000;
          }
          else {
            uint64_t v32 = a2 - 1;
          }
          *(void *)a1 = v32;
        }
      }
      return;
  }
}

void type metadata accessor for State<ScrollViewProxy?>()
{
  if (!lazy cache variable for type metadata for State<ScrollViewProxy?>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ScrollViewProxy?);
    unint64_t v0 = type metadata accessor for State();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for State<ScrollViewProxy?>);
    }
  }
}

void type metadata accessor for Environment<LayoutDirection>.Content()
{
  if (!lazy cache variable for type metadata for Environment<LayoutDirection>.Content)
  {
    type metadata accessor for LayoutDirection();
    unint64_t v0 = type metadata accessor for Environment.Content();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for Environment<LayoutDirection>.Content);
    }
  }
}

uint64_t sub_1003A2134()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for <<opaque return type of View.onTapGesture(count:perform:)>>.0);
  type metadata accessor for ForEach();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for <<opaque return type of View.hoverEffect<A>(_:isEnabled:)>>.0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<Group<_ConditionalContent<ModifiedContent<<<opaque return type of View.dynamicTypeSize(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<Circle, _FrameLayout>, _EnvironmentKeyWritingModifier<Color?>>>>, _AnimationModifier<Bool>>);
  type metadata accessor for AutomaticHoverEffect();
  lazy protocol witness table accessor for type ModifiedContent<Group<_ConditionalContent<ModifiedContent<<<opaque return type of View.dynamicTypeSize(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, ModifiedContent<ModifiedContent<Circle, _FrameLayout>, _EnvironmentKeyWritingModifier<Color?>>>>, _AnimationModifier<Bool>> and conformance <> ModifiedContent<A, B>();
  lazy protocol witness table accessor for type SafeAreaPaddingModifier and conformance SafeAreaPaddingModifier(&lazy protocol witness table cache variable for type AutomaticHoverEffect and conformance AutomaticHoverEffect, (void (*)(uint64_t))&type metadata accessor for AutomaticHoverEffect);
  swift_getOpaqueTypeConformance2();
  swift_getOpaqueTypeConformance2();
  swift_getWitnessTable();
  type metadata accessor for HStack();
  type metadata accessor for ModifiedContent();
  type metadata accessor for Optional();
  swift_getTupleTypeMetadata2();
  type metadata accessor for TupleView();
  swift_getWitnessTable();
  type metadata accessor for VStack();
  return swift_getWitnessTable();
}

uint64_t partial apply for closure #1 in closure #1 in CarouselView.body.getter@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = v2[2];
  unsigned int v6 = (void *)v2[3];
  uint64_t v7 = v2[4];
  uint64_t v8 = (void *)v2[5];
  uint64_t v9 = (void *)v2[6];
  uint64_t v10 = *(void *)(type metadata accessor for CarouselView() - 8);
  uint64_t v11 = (uint64_t)v2 + ((*(unsigned __int8 *)(v10 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));

  return closure #1 in closure #1 in CarouselView.body.getter(a1, v11, v5, v6, v7, v8, v9, a2);
}

uint64_t partial apply for closure #2 in closure #1 in CarouselView.body.getter()
{
  return partial apply for closure #1 in CarouselView.body.getter((uint64_t (*)(void, void, void, void, void, void))closure #2 in closure #1 in CarouselView.body.getter);
}

double specialized CarouselView.pageIndicatorDotSize.getter()
{
  unint64_t v0 = self;
  id v1 = [v0 currentTraitCollection];
  id v2 = [v1 userInterfaceIdiom];

  if (v2 == (id)6) {
    uint64_t v3 = 10;
  }
  else {
    uint64_t v3 = 8;
  }
  id v4 = [v0 currentTraitCollection];
  [v4 userInterfaceIdiom];

  return (double)v3;
}

unint64_t _sS2iSZsWl_0()
{
  unint64_t result = _sS2iSZsWL_0;
  if (!_sS2iSZsWL_0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&_sS2iSZsWL_0);
  }
  return result;
}

uint64_t partial apply for closure #1 in closure #2 in closure #1 in CarouselView.body.getter(uint64_t a1, uint64_t a2)
{
  return partial apply for closure #1 in closure #2 in closure #1 in CarouselView.body.getter(a1, a2, (uint64_t (*)(uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))closure #1 in closure #2 in closure #1 in CarouselView.body.getter);
}

uint64_t sub_1003A2A90()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in CarouselView.scrollToIndex(_:animated:)()
{
  return closure #1 in CarouselView.scrollToIndex(_:animated:)(v0[7], v0[8], v0[2], v0[3], v0[4], v0[5], v0[6]);
}

uint64_t partial apply for closure #1 in closure #1 in closure #1 in CarouselView.body.getter@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v5 = (void *)v2[2];
  unsigned int v6 = (void *)v2[3];
  uint64_t v7 = v2[4];
  uint64_t v8 = (void *)v2[5];
  uint64_t v9 = v2[6];
  uint64_t v10 = *(void *)(type metadata accessor for CarouselView() - 8);
  unint64_t v11 = (*(unsigned __int8 *)(v10 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = *(void *)(v10 + 64);
  uint64_t v13 = *(void *)(type metadata accessor for ScrollViewProxy() - 8);
  uint64_t v14 = (uint64_t)v2 + ((v11 + v12 + *(unsigned __int8 *)(v13 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));

  return closure #1 in closure #1 in closure #1 in CarouselView.body.getter(a1, (uint64_t)v2 + v11, v14, v5, v6, v7, v8, v9, a2);
}

uint64_t partial apply for closure #1 in closure #1 in closure #1 in closure #1 in CarouselView.body.getter@<X0>(char *a1@<X8>)
{
  return closure #1 in closure #1 in closure #1 in closure #1 in CarouselView.body.getter(*(void **)(v1 + 56), *(void *)(v1 + 64), *(void **)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32), *(void **)(v1 + 40), *(void *)(v1 + 48), a1);
}

uint64_t partial apply for closure #2 in closure #1 in closure #1 in closure #1 in CarouselView.body.getter@<X0>(double *a1@<X8>)
{
  uint64_t v3 = v1[2];
  uint64_t v4 = v1[3];
  uint64_t v5 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v7 = v1[6];
  uint64_t v8 = *(void *)(type metadata accessor for CarouselView() - 8);
  uint64_t v9 = (uint64_t)v1 + ((*(unsigned __int8 *)(v8 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));

  return closure #2 in closure #1 in closure #1 in closure #1 in CarouselView.body.getter(v9, v3, v4, v5, v6, v7, a1);
}

uint64_t partial apply for closure #3 in closure #1 in closure #1 in closure #1 in CarouselView.body.getter(uint64_t a1, double *a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for CarouselView() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return closure #3 in closure #1 in closure #1 in closure #1 in CarouselView.body.getter(a1, a2, v6);
}

uint64_t partial apply for closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in CarouselView.body.getter()
{
  return partial apply for closure #1 in CarouselView.body.getter((uint64_t (*)(void, void, void, void, void, void))closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in CarouselView.body.getter);
}

uint64_t partial apply for closure #1 in CarouselView.body.getter(uint64_t (*a1)(void, void, void, void, void, void))
{
  return a1(v1[7], v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t objectdestroy_31Tm_0()
{
  long long v14 = *(_OWORD *)(v0 + 16);
  uint64_t v1 = (int *)type metadata accessor for CarouselView();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v13 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v3 = type metadata accessor for ScrollViewProxy();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v0 + ((v2 + 56) & ~v2);
  swift_bridgeObjectRelease();
  if (*(void *)(v6 + 16))
  {
    swift_release();
    swift_release();
  }
  uint64_t v7 = v6 + v1[16];
  uint64_t v8 = type metadata accessor for Binding();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8))
  {
    swift_release();
    swift_release();
    (*(void (**)(uint64_t, void))(*(void *)(v14 - 8) + 8))(v7 + *(int *)(v8 + 32), v14);
  }
  swift_release();
  if (*(void *)(v6 + v1[22])) {
    swift_release();
  }
  swift_release();
  uint64_t v9 = v6 + v1[24];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v9, 1, v3)) {
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v9, v3);
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<ScrollViewProxy?>);
  swift_release();
  uint64_t v10 = v6 + v1[26];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<LayoutDirection>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = type metadata accessor for LayoutDirection();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  }
  else
  {
    swift_release();
  }
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v0 + ((((v2 + 56) & ~v2) + v13 + v5) & ~v5), v3);
  return swift_deallocObject();
}

uint64_t partial apply for closure #2 in closure #1 in closure #1 in closure #1 in closure #1 in CarouselView.body.getter()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[3];
  uint64_t v3 = v0[4];
  uint64_t v4 = v0[5];
  uint64_t v5 = v0[6];
  uint64_t v6 = *(void *)(type metadata accessor for CarouselView() - 8);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = *(void *)(v6 + 64);
  uint64_t v9 = *(void *)(type metadata accessor for ScrollViewProxy() - 8);
  uint64_t v10 = (uint64_t)v0 + ((v7 + v8 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));

  return closure #2 in closure #1 in closure #1 in closure #1 in closure #1 in CarouselView.body.getter((void *)((char *)v0 + v7), v10, v1, v2, v3, v4, v5);
}

void partial apply for closure #3 in closure #1 in closure #1 in closure #1 in closure #1 in CarouselView.body.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for CarouselView() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  closure #3 in closure #1 in closure #1 in closure #1 in closure #1 in CarouselView.body.getter(a1, a2, v6);
}

uint64_t partial apply for closure #4 in closure #1 in closure #1 in closure #1 in closure #1 in CarouselView.body.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = v2[2];
  uint64_t v6 = v2[3];
  uint64_t v7 = v2[4];
  uint64_t v8 = v2[5];
  uint64_t v9 = v2[6];
  uint64_t v10 = *(void *)(type metadata accessor for CarouselView() - 8);
  uint64_t v11 = (void *)((char *)v2
                 + ((*(unsigned __int8 *)(v10 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80)));

  return closure #4 in closure #1 in closure #1 in closure #1 in closure #1 in CarouselView.body.getter(a1, a2, v11, v5, v6, v7, v8, v9);
}

uint64_t lazy protocol witness table accessor for type SafeAreaPaddingModifier and conformance SafeAreaPaddingModifier(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t objectdestroyTm_13()
{
  long long v11 = *(_OWORD *)(v0 + 16);
  uint64_t v1 = (int *)type metadata accessor for CarouselView();
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*((void *)v1 - 1) + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v1 - 1) + 80));
  swift_bridgeObjectRelease();
  if (*(void *)(v2 + 16))
  {
    swift_release();
    swift_release();
  }
  uint64_t v3 = v2 + v1[16];
  uint64_t v4 = type metadata accessor for Binding();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(v3, 1, v4))
  {
    swift_release();
    swift_release();
    (*(void (**)(uint64_t, void))(*(void *)(v11 - 8) + 8))(v3 + *(int *)(v4 + 32), v11);
  }
  swift_release();
  if (*(void *)(v2 + v1[22])) {
    swift_release();
  }
  swift_release();
  uint64_t v5 = v2 + v1[24];
  uint64_t v6 = type metadata accessor for ScrollViewProxy();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<ScrollViewProxy?>);
  swift_release();
  uint64_t v8 = v2 + v1[26];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<LayoutDirection>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = type metadata accessor for LayoutDirection();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in CarouselView.body.getter(uint64_t a1, uint64_t a2)
{
  return partial apply for closure #1 in closure #2 in closure #1 in CarouselView.body.getter(a1, a2, (uint64_t (*)(uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in CarouselView.body.getter);
}

uint64_t partial apply for closure #1 in closure #2 in closure #1 in CarouselView.body.getter(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  uint64_t v8 = v3[4];
  uint64_t v9 = v3[5];
  uint64_t v10 = v3[6];
  uint64_t v11 = *(void *)(type metadata accessor for CarouselView() - 8);
  uint64_t v12 = (char *)v3 + ((*(unsigned __int8 *)(v11 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));

  return a3(a1, a2, v12, v6, v7, v8, v9, v10);
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed (@unowned Int, @in_guaranteed A) -> (@out <<opaque return type of View.onTapGesture(count:perform:)>>.0)(char *a1)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t, char *))(v1 + 56);
  uint64_t v4 = *(void *)a1;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return v3(v4, &a1[*(int *)(TupleTypeMetadata2 + 48)]);
}

uint64_t objectdestroy_20Tm()
{
  long long v11 = *(_OWORD *)(v0 + 16);
  uint64_t v1 = (int *)type metadata accessor for CarouselView();
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*((void *)v1 - 1) + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v1 - 1) + 80));
  swift_bridgeObjectRelease();
  if (*(void *)(v2 + 16))
  {
    swift_release();
    swift_release();
  }
  uint64_t v3 = v2 + v1[16];
  uint64_t v4 = type metadata accessor for Binding();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(v3, 1, v4))
  {
    swift_release();
    swift_release();
    (*(void (**)(uint64_t, void))(*(void *)(v11 - 8) + 8))(v3 + *(int *)(v4 + 32), v11);
  }
  swift_release();
  if (*(void *)(v2 + v1[22])) {
    swift_release();
  }
  swift_release();
  uint64_t v5 = v2 + v1[24];
  uint64_t v6 = type metadata accessor for ScrollViewProxy();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<ScrollViewProxy?>);
  swift_release();
  uint64_t v8 = v2 + v1[26];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<LayoutDirection>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = type metadata accessor for LayoutDirection();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t partial apply for closure #2 in closure #1 in closure #2 in closure #1 in CarouselView.body.getter()
{
  uint64_t v1 = *(void *)(type metadata accessor for CarouselView() - 8);
  uint64_t v2 = *(void *)(v0
                 + ((*(void *)(v1 + 64)
                   + ((*(unsigned __int8 *)(v1 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))
                   + 7) & 0xFFFFFFFFFFFFFFF8));
  type metadata accessor for CarouselView();
  return CarouselView.scrollToIndex(_:animated:)(v2, 1);
}

char *CircularProgressView.__allocating_init(size:)(double a1, double a2)
{
  id v5 = objc_allocWithZone(v2);
  return CircularProgressView.init(size:)(a1, a2);
}

void CircularProgressView.setState(_:animated:)(uint64_t a1, int a2, char a3)
{
  double v5 = *(double *)&a1;
  LOBYTE(v6) = a2;
  uint64_t v7 = &v3[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView__state];
  if ((a2 & 0x10000) != 0)
  {
    if (v3[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView__state + 10]) {
      return;
    }
    *(double *)uint64_t v7 = *(double *)&a1;
    *((_WORD *)v7 + 4) = a2;
    v7[10] = 1;
    if (a3)
    {
      uint64_t v8 = *(void **)&v3[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_progressLayer];
      goto LABEL_12;
    }
LABEL_11:
    uint64_t v12 = self;
    [v12 begin];
    [v12 setDisableActions:1];
    uint64_t v8 = *(void **)&v3[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_progressLayer];
    if ((v7[10] & 1) == 0)
    {
      double v5 = *(double *)v7;
      __int16 v6 = *((_WORD *)v7 + 4);
      if ((v6 & 0x100) == 0) {
        goto LABEL_5;
      }
      goto LABEL_21;
    }
LABEL_12:
    [v8 setLineDashPattern:0];
    if (!*(void *)&v3[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_spinAnimator]) {
      goto LABEL_32;
    }
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = v3;
    long long v14 = v3;
    swift_retain();
    CircularProgressView.SpinAnimator.stop(to:progressValueProvider:)((uint64_t)partial apply for closure #3 in CircularProgressView.setState(_:animated:), v13, 0.0);
    swift_release();
    goto LABEL_31;
  }
  if ((v3[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView__state + 10] & 1) == 0)
  {
    double v15 = *(double *)v7;
    __int16 v16 = *((_WORD *)v7 + 4);
    if ((a2 & 0x100) != 0)
    {
      if (a1 | a2)
      {
        if ((*((_WORD *)v7 + 4) & 0x100) != 0 && *(void *)&v15 | *((_WORD *)v7 + 4)) {
          return;
        }
      }
      else if ((*((_WORD *)v7 + 4) & 0x100) != 0 && !(*(void *)&v15 | *((_WORD *)v7 + 4)))
      {
        return;
      }
    }
    else if ((*((_WORD *)v7 + 4) & 0x100) == 0)
    {
      if (a2)
      {
        if (v16) {
          return;
        }
      }
      else if ((v16 & 1) == 0 && *(double *)&a1 == v15)
      {
        return;
      }
    }
  }
  *(double *)uint64_t v7 = *(double *)&a1;
  *((_WORD *)v7 + 4) = a2;
  v7[10] = 0;
  if ((a3 & 1) == 0) {
    goto LABEL_11;
  }
  uint64_t v8 = *(void **)&v3[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_progressLayer];
  if ((a2 & 0x100) == 0)
  {
LABEL_5:
    [v8 setLineDashPattern:0];
    LODWORD(v9) = 1.0;
    [v8 setOpacity:v9];
    if (v6)
    {
      uint64_t v17 = OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_spinAnimator;
      uint64_t v18 = *(void *)&v3[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_spinAnimator];
      if (!v18)
      {
        type metadata accessor for CircularProgressView.SpinAnimator();
        uint64_t v18 = swift_allocObject();
        *(unsigned char *)(v18 + 40) = 0;
        *(void *)(v18 + 16) = 0xD000000000000010;
        *(void *)(v18 + 24) = 0x80000001004748F0;
        *(void *)(v18 + 32) = v8;
        id v19 = v8;
      }
      *(void *)&v3[v17] = v18;
      if (!v18) {
        goto LABEL_32;
      }
      swift_retain();
      CircularProgressView.SpinAnimator.start()();
      goto LABEL_31;
    }
    if (*(void *)&v3[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_spinAnimator])
    {
      uint64_t v10 = swift_allocObject();
      *(void *)(v10 + 16) = v3;
      swift_retain();
      long long v11 = v3;
      CircularProgressView.SpinAnimator.stop(to:progressValueProvider:)((uint64_t)partial apply for closure #1 in CircularProgressView.setState(_:animated:), v10, v5);
      swift_release();
LABEL_31:
      swift_release();
      goto LABEL_32;
    }
    [v8 setStrokeEnd:v5];
    goto LABEL_32;
  }
LABEL_21:
  if (*(void *)&v5 | v6)
  {
    [v8 setOpacity:0.0];
    goto LABEL_32;
  }
  if (*(void *)&v3[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_spinAnimator])
  {
    uint64_t v21 = swift_allocObject();
    *(void *)(v21 + 16) = v3;
    *(void *)(v21 + 24) = v8;
    uint64_t v22 = v3;
    id v23 = v8;
    swift_retain();
    CircularProgressView.SpinAnimator.stop(to:progressValueProvider:)((uint64_t)partial apply for closure #2 in CircularProgressView.setState(_:animated:), v21, 1.0);
    swift_release();
    goto LABEL_31;
  }
  [v8 setStrokeEnd:1.0];
  __swift_instantiateConcreteTypeFromMangledName(&_ss23_ContiguousArrayStorageCyyXlGMD_1);
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_100493D20;
  type metadata accessor for UIMenu(0, &_sSo8NSNumberCML_1);
  *(NSNumber *)(v24 + 32) = NSNumber.init(integerLiteral:)(4);
  specialized Array._endMutation()();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v8 setLineDashPattern:isa];

LABEL_32:
  if ((a3 & 1) == 0)
  {
    uint64_t v20 = self;
    [v20 commit];
  }
}

uint64_t static CircularProgressView.State.__derived_enum_equals(_:_:)(uint64_t a1, __int16 a2, uint64_t a3, __int16 a4)
{
  if ((a2 & 0x100) != 0)
  {
    BOOL v5 = (a3 | a4) == 0;
    if ((a4 & 0x100) != 0)
    {
      BOOL v6 = (a3 | a4) != 0;
    }
    else
    {
      BOOL v5 = 0;
      BOOL v6 = 0;
    }
    if (a1 | a2) {
      return v6;
    }
    else {
      return v5;
    }
  }
  else
  {
    if ((a4 & 0x100) == 0)
    {
      if (a2)
      {
        if (a4) {
          return 1;
        }
      }
      else if ((a4 & 1) == 0 && *(double *)&a1 == *(double *)&a3)
      {
        return 1;
      }
    }
    return 0;
  }
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance CircularProgressView.State(uint64_t a1, uint64_t a2)
{
  double v2 = *(double *)a1;
  uint64_t v3 = *(unsigned __int8 *)(a1 + 8);
  double v4 = *(double *)a2;
  uint64_t v5 = *(unsigned __int8 *)(a2 + 8);
  if (*(unsigned char *)(a1 + 9) == 1)
  {
    if (*(void *)&v2 | v3)
    {
      if (*(unsigned char *)(a2 + 9)) {
        return (*(void *)&v4 | v5) != 0;
      }
    }
    else if (*(unsigned char *)(a2 + 9))
    {
      return (*(void *)&v4 | v5) == 0;
    }
    return 0;
  }
  if (*(unsigned char *)(a2 + 9)) {
    return 0;
  }
  if (v3) {
    return (v5 & 1) != 0;
  }
  return (v5 & 1) == 0 && v2 == v4;
}

char *CircularProgressView.init(size:)(double a1, double a2)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  BOOL v6 = &v2[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView__state];
  *(void *)BOOL v6 = 0;
  *((_WORD *)v6 + 4) = 0;
  v6[10] = 1;
  *(void *)&v2[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_image] = 0;
  *(void *)&v2[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_imageView] = 0;
  *(void *)&v2[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_imageScale] = 0x3FE0000000000000;
  *(void *)&v2[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_spinAnimator] = 0;
  uint64_t v7 = OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_progressLayer;
  id v8 = objc_allocWithZone((Class)CAShapeLayer);
  double v9 = v2;
  *(void *)&v2[v7] = [v8 init];
  uint64_t v10 = OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_trackLayer;
  *(void *)&v9[v10] = [objc_allocWithZone((Class)CAShapeLayer) init];
  long long v11 = (double *)&v9[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_preferredSize];
  *long long v11 = a1;
  v11[1] = a2;

  v30.receiver = v9;
  v30.super_class = ObjectType;
  uint64_t v12 = (char *)objc_msgSendSuper2(&v30, "initWithFrame:", 0.0, 0.0, a1, a2);
  uint64_t v13 = OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_trackLayer;
  long long v14 = *(void **)&v12[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_trackLayer];
  double v15 = self;
  __int16 v16 = v12;
  id v17 = v14;
  id v18 = [v15 clearColor];
  id v19 = [v18 CGColor];

  [v17 setFillColor:v19];
  uint64_t v20 = *(void **)&v12[v13];
  [v20 setLineWidth:2.5];
  id v21 = [v16 layer];
  [v21 addSublayer:v20];

  uint64_t v22 = OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_progressLayer;
  id v23 = *(void **)&v16[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_progressLayer];
  [v23 setLineCap:kCALineCapRound];
  [v23 setStrokeEnd:0.0];
  id v24 = v23;
  id v25 = [v15 clearColor];
  id v26 = [v25 CGColor];

  [v24 setFillColor:v26];
  unsigned int v27 = *(void **)&v16[v22];
  [v27 setLineWidth:2.5];
  [v27 setLineDashPhase:6.0];
  id v28 = [v16 layer];
  [v28 addSublayer:v27];

  CircularProgressView.updateColors()();
  return v16;
}

void CircularProgressView.updateColors()()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_trackLayer];
  id v2 = [self tertiarySystemFillColor];
  id v3 = [v2 CGColor];

  [v1 setStrokeColor:v3];
  double v4 = *(void **)&v0[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_progressLayer];
  id v5 = [v0 tintColor];
  if (v5)
  {
    BOOL v6 = v5;
    id v7 = [v5 CGColor];

    [v4 setStrokeColor:v7];
  }
  else
  {
    __break(1u);
  }
}

Swift::Void __swiftcall CircularProgressView.tintColorDidChange()()
{
  v1.receiver = v0;
  v1.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v1, "tintColorDidChange");
  CircularProgressView.updateColors()();
}

Swift::Void __swiftcall CircularProgressView.layoutSubviews()()
{
  v24.receiver = v0;
  v24.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v24, "layoutSubviews");
  [v0 bounds];
  double x = v25.origin.x;
  double y = v25.origin.y;
  double width = v25.size.width;
  double height = v25.size.height;
  double v5 = CGRectGetWidth(v25);
  v26.origin.double x = x;
  v26.origin.double y = y;
  v26.size.double width = width;
  v26.size.double height = height;
  double v6 = CGRectGetHeight(v26);
  if (v6 >= v5) {
    double v6 = v5;
  }
  double v7 = (v6 + -2.5) * 0.5;
  CGRect.center.getter();
  id v10 = objc_msgSend(self, "bezierPathWithArcCenter:radius:startAngle:endAngle:clockwise:", 1, v8, v9, v7, -1.57079633, 4.71238898);
  long long v11 = *(void **)&v0[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_trackLayer];
  id v12 = [v10 CGPath];
  [v11 setPath:v12];

  uint64_t v13 = *(void **)&v0[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_progressLayer];
  id v14 = [v10 CGPath];
  [v13 setPath:v14];

  objc_msgSend(v13, "setBounds:", x, y, width, height);
  v27.origin.double x = x;
  v27.origin.double y = y;
  v27.size.double width = width;
  v27.size.double height = height;
  CGFloat v15 = CGRectGetWidth(v27) * 0.5;
  v28.origin.double x = x;
  v28.origin.double y = y;
  v28.size.double width = width;
  v28.size.double height = height;
  objc_msgSend(v13, "setPosition:", v15, CGRectGetHeight(v28) * 0.5);
  uint64_t v16 = OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_imageView;
  id v17 = *(void **)&v0[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_imageView];
  if (v17)
  {
    objc_msgSend(v17, "setFrame:", x, y, width, height);
    id v18 = *(void **)&v0[v16];
    if (v18)
    {
      id v19 = v18;
      [v19 frame];
      double v20 = CGRectGetWidth(v29);
      [v19 frame];
      double v21 = CGRectGetHeight(v30);
      if (v21 < v20) {
        double v20 = v21;
      }
      uint64_t v22 = (double *)&v0[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_imageScale];
      swift_beginAccess();
      id v23 = [self configurationWithPointSize:v20 * *v22];
      [v19 setPreferredSymbolConfiguration:v23];

      id v10 = v23;
    }
  }
}

double CircularProgressView.sizeThatFits(_:)()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_preferredSize;
  swift_beginAccess();
  return *(double *)v1;
}

id CircularProgressView.preferredSize.setter(double a1, double a2)
{
  double v5 = (double *)&v2[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_preferredSize];
  id result = (id)swift_beginAccess();
  double v7 = *v5;
  double v8 = v5[1];
  *double v5 = a1;
  v5[1] = a2;
  if (v7 != a1 || v8 != a2) {
    return [v2 invalidateIntrinsicContentSize];
  }
  return result;
}

void (*CircularProgressView.preferredSize.modify(void *a1))(id **a1)
{
  id v3 = (char *)malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_preferredSize;
  *((void *)v3 + 5) = v1;
  *((void *)v3 + 6) = v4;
  double v5 = (_OWORD *)(v1 + v4);
  swift_beginAccess();
  *(_OWORD *)(v3 + 24) = *v5;
  return CircularProgressView.preferredSize.modify;
}

void CircularProgressView.preferredSize.modify(id **a1)
{
  uint64_t v1 = *a1;
  double v2 = *((double *)*a1 + 3);
  id v3 = (double *)((char *)(*a1)[6] + (void)(*a1)[5]);
  double v4 = *((double *)*a1 + 4);
  double v5 = *v3;
  double v6 = v3[1];
  double *v3 = v2;
  v3[1] = v4;
  if (v2 != v5 || v4 != v6) {
    [v1[5] invalidateIntrinsicContentSize];
  }

  free(v1);
}

uint64_t CircularProgressView.state.getter()
{
  return *(void *)(v0 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView__state);
}

void CircularProgressView.state.setter(uint64_t a1, int a2)
{
}

void (*CircularProgressView.state.modify(uint64_t a1))(uint64_t a1)
{
  *(void *)(a1 + 16) = v1;
  __int16 v2 = *(_WORD *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView__state + 8);
  char v3 = *(unsigned char *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView__state + 10);
  *(void *)a1 = *(void *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView__state);
  *(_WORD *)(a1 + 8) = v2;
  *(unsigned char *)(a1 + 10) = v3;
  return CircularProgressView.state.modify;
}

void CircularProgressView.state.modify(uint64_t a1)
{
}

double closure #2 in CircularProgressView.setState(_:animated:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = *(void *)(a2 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_spinAnimator);
  if (v5) {
    BOOL v6 = v5 == a1;
  }
  else {
    BOOL v6 = 0;
  }
  if (v6)
  {
    *(void *)(a2 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_spinAnimator) = 0;
    swift_release();
  }
  __swift_instantiateConcreteTypeFromMangledName(&_ss23_ContiguousArrayStorageCyyXlGMD_1);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_100493D20;
  type metadata accessor for UIMenu(0, &_sSo8NSNumberCML_1);
  *(NSNumber *)(v7 + 32) = NSNumber.init(integerLiteral:)(4);
  specialized Array._endMutation()();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [a3 setLineDashPattern:isa];

  uint64_t v9 = a2 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView__state;
  double result = 0.0;
  if ((*(unsigned char *)(a2 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView__state + 10) & 1) == 0)
  {
    double v11 = *(double *)v9;
    __int16 v12 = *(_WORD *)(v9 + 8);
    if ((v12 & 0x100) != 0)
    {
      if (!(*(void *)&v11 | v12)) {
        return 1.0;
      }
    }
    else
    {
      double result = v11;
      if (v12) {
        return 0.6;
      }
    }
  }
  return result;
}

double closure #1 in CircularProgressView.setState(_:animated:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_spinAnimator);
  if (v3) {
    BOOL v4 = v3 == a1;
  }
  else {
    BOOL v4 = 0;
  }
  if (v4)
  {
    *(void *)(a2 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_spinAnimator) = 0;
    swift_release();
  }
  uint64_t v5 = a2 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView__state;
  double result = 0.0;
  if ((*(unsigned char *)(a2 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView__state + 10) & 1) == 0)
  {
    double v7 = *(double *)v5;
    __int16 v8 = *(_WORD *)(v5 + 8);
    if ((v8 & 0x100) != 0)
    {
      if (!(*(void *)&v7 | v8)) {
        return 1.0;
      }
    }
    else
    {
      double result = v7;
      if (v8) {
        return 0.6;
      }
    }
  }
  return result;
}

uint64_t sub_1003A4EA8()
{
  return swift_deallocObject();
}

double partial apply for closure #3 in CircularProgressView.setState(_:animated:)(uint64_t a1)
{
  return closure #1 in CircularProgressView.setState(_:animated:)(a1, *(void *)(v1 + 16));
}

void CircularProgressView.image.didset()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_image);
  swift_beginAccess();
  __int16 v2 = *v1;
  if (v2)
  {
    uint64_t v3 = OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_imageView;
    BOOL v4 = *(void **)(v0 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_imageView);
    if (v4)
    {
      id v5 = v2;
      id v6 = v4;
    }
    else
    {
      id v8 = objc_allocWithZone((Class)UIImageView);
      id v9 = v2;
      id v6 = [v8 init];
    }
    id v10 = v4;
    [v6 setImage:v2];
    double v11 = *(void **)(v0 + v3);
    if (v11)
    {
      id v12 = v11;
      [v12 frame];
      double Width = CGRectGetWidth(v18);
      [v12 frame];
      double Height = CGRectGetHeight(v19);
      if (Height < Width) {
        double Width = Height;
      }
      CGFloat v15 = (double *)(v0 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_imageScale);
      swift_beginAccess();
      id v16 = [self configurationWithPointSize:Width * *v15];
      [v12 setPreferredSymbolConfiguration:v16];

      id v17 = *(void **)(v0 + v3);
    }
    else
    {
      id v17 = 0;
    }
    *(void *)(v0 + v3) = v6;
    id v7 = v6;
    CircularProgressView.imageView.didset(v17);
  }
  else
  {
    id v7 = *(id *)(v0 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_imageView);
    *(void *)(v0 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_imageView) = 0;
    CircularProgressView.imageView.didset(v7);
  }
}

void *CircularProgressView.image.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_image);
  swift_beginAccess();
  __int16 v2 = *v1;
  id v3 = v2;
  return v2;
}

void CircularProgressView.image.setter(void *a1)
{
  id v3 = (void **)(v1 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_image);
  swift_beginAccess();
  BOOL v4 = *v3;
  double *v3 = a1;
  id v5 = a1;

  CircularProgressView.image.didset();
}

void (*CircularProgressView.image.modify(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return CircularProgressView.image.modify;
}

void CircularProgressView.image.modify(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    CircularProgressView.image.didset();
  }
}

void CircularProgressView.imageView.didset(void *a1)
{
  __int16 v2 = v1;
  id v3 = a1;
  uint64_t v4 = OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_imageView;
  id v5 = *(void **)&v1[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_imageView];
  if (v5)
  {
    if (!a1)
    {
LABEL_10:
      id v13 = v5;
      [v13 setContentMode:4];
      [v2 addSubview:v13];

      return;
    }
    type metadata accessor for UIMenu(0, (unint64_t *)&lazy cache variable for type metadata for UIImageView);
    id v6 = v5;
    id v3 = v3;
    char v7 = static NSObject.== infix(_:_:)();

    if (v7) {
      return;
    }
  }
  else if (!a1)
  {
    return;
  }
  id v8 = v3;
  id v9 = [v8 superview];
  if (v9)
  {
    id v10 = v9;
    type metadata accessor for UIMenu(0, (unint64_t *)&_sSo6UIViewCML_0);
    double v11 = v2;
    id v12 = v10;
    LOBYTE(v10) = static NSObject.== infix(_:_:)();

    if (v10) {
      [v8 removeFromSuperview];
    }
  }

  id v5 = *(void **)&v2[v4];
  if (v5) {
    goto LABEL_10;
  }
}

double CircularProgressView.imageScale.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_imageScale;
  swift_beginAccess();
  return *(double *)v1;
}

void CircularProgressView.imageScale.setter(double a1)
{
  id v3 = (double *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_imageScale);
  swift_beginAccess();
  double v4 = *v3;
  double *v3 = a1;
  if (v4 != a1)
  {
    id v5 = *(void **)(v1 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_imageView);
    if (v5)
    {
      id v6 = v5;
      [v6 frame];
      double Width = CGRectGetWidth(v10);
      [v6 frame];
      double Height = CGRectGetHeight(v11);
      if (Height >= Width) {
        double Height = Width;
      }
      id v9 = [self configurationWithPointSize:*v3 * Height];
      [v6 setPreferredSymbolConfiguration:v9];
    }
  }
}

void (*CircularProgressView.imageScale.modify(void *a1))(uint64_t a1, char a2)
{
  id v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_imageScale;
  v3[4] = v1;
  v3[5] = v4;
  id v5 = (void *)(v1 + v4);
  swift_beginAccess();
  v3[3] = *v5;
  return CircularProgressView.imageScale.modify;
}

void CircularProgressView.imageScale.modify(uint64_t a1, char a2)
{
  __int16 v2 = *(void **)a1;
  double v3 = *(double *)(*(void *)a1 + 24);
  if (a2)
  {
    CircularProgressView.imageScale.setter(v3);
  }
  else
  {
    uint64_t v5 = v2[4];
    uint64_t v4 = v2[5];
    double v6 = *(double *)(v5 + v4);
    *(double *)(v5 + v4) = v3;
    if (v3 != v6)
    {
      uint64_t v7 = v2[4];
      id v8 = *(void **)(v7 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_imageView);
      if (v8)
      {
        uint64_t v9 = v2[5];
        id v10 = v8;
        [v10 frame];
        double Width = CGRectGetWidth(v15);
        [v10 frame];
        double Height = CGRectGetHeight(v16);
        if (Height >= Width) {
          double Height = Width;
        }
        id v13 = [self configurationWithPointSize:*(double *)(v7 + v9) * Height];
        [v10 setPreferredSymbolConfiguration:v13];
      }
    }
  }

  free(v2);
}

void CircularProgressView.SpinAnimator.start()()
{
  *(unsigned char *)(v0 + 40) = 0;
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v1 = *(void **)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 16);
  NSString v4 = String._bridgeToObjectiveC()();
  [v1 removeAnimationForKey:v4];

  v20[0] = v3;
  v20[1] = v2;
  swift_bridgeObjectRetain();
  v5._countAndFlagsBits = 0x676E69646E65;
  v5._object = (void *)0xE600000000000000;
  String.append(_:)(v5);
  NSString v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v1 removeAnimationForKey:v6];

  [v1 setStrokeEnd:0.6];
  NSString v7 = String._bridgeToObjectiveC()();
  id v8 = [self animationWithKeyPath:v7];

  id v9 = [v1 presentationLayer];
  if (!v9) {
    id v9 = v1;
  }
  NSString v10 = String._bridgeToObjectiveC()();
  id v11 = [v9 valueForKeyPath:v10];

  if (v11)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v19, 0, sizeof(v19));
  }
  _sypSgWOb_2((uint64_t)v19, (uint64_t)v20);
  if (v20[3]) {
    swift_dynamicCast();
  }
  else {
    _sypSgWOh_1((uint64_t)v20);
  }
  Class isa = Double._bridgeToObjectiveC()().super.super.isa;
  [v8 setFromValue:isa];

  if (one-time initialization token for zSpinToValue != -1) {
    swift_once();
  }
  Class v13 = Double._bridgeToObjectiveC()().super.super.isa;
  [v8 setToValue:v13];

  [v8 setRemovedOnCompletion:1];
  [v8 setFillMode:kCAFillModeBoth];
  [v8 setDuration:1.0];
  LODWORD(v14) = 2139095040;
  [v8 setRepeatCount:v14];
  CFTimeInterval v15 = CACurrentMediaTime();
  id v16 = v8;
  [v16 duration];
  objc_msgSend(v16, "setBeginTime:", (double)(v15 - fmod(v15, v17)));

  NSString v18 = String._bridgeToObjectiveC()();
  [v1 addAnimation:v16 forKey:v18];
}

void CircularProgressView.SpinAnimator.stop(to:progressValueProvider:)(uint64_t a1, uint64_t a2, double a3)
{
  if ((*(unsigned char *)(v3 + 40) & 1) == 0)
  {
    uint64_t v4 = v3;
    *(unsigned char *)(v3 + 40) = 1;
    NSString v7 = *(void **)(v3 + 32);
    id v8 = [v7 presentationLayer];
    if (!v8) {
      id v8 = v7;
    }
    NSString v9 = String._bridgeToObjectiveC()();
    id v10 = [v8 valueForKeyPath:v9];

    if (v10)
    {
      _bridgeAnyObjectToAny(_:)();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v42, 0, sizeof(v42));
    }
    _sypSgWOb_2((uint64_t)v42, (uint64_t)v43);
    if (v43[3]) {
      swift_dynamicCast();
    }
    else {
      _sypSgWOh_1((uint64_t)v43);
    }
    double v11 = fmin(a3, 0.1);
    NSString v12 = String._bridgeToObjectiveC()();
    Class v13 = self;
    id v14 = [v13 animationWithKeyPath:v12];

    if (one-time initialization token for zSpinToValue != -1) {
      swift_once();
    }
    double v15 = *(double *)&static CircularProgressView.SpinAnimator.zSpinToValue
        - (6.28318531
         - (1.0 - (0.6 - v11)) * 6.28318531);
    Class isa = Double._bridgeToObjectiveC()().super.super.isa;
    [v14 setFromValue:isa];

    Class v17 = Double._bridgeToObjectiveC()().super.super.isa;
    [v14 setToValue:v17];

    NSString v18 = String._bridgeToObjectiveC()();
    id v19 = [v13 animationWithKeyPath:v18];

    Class v20 = CGFloat._bridgeToObjectiveC()().super.super.isa;
    [v19 setToValue:v20];

    id v21 = [objc_allocWithZone((Class)CAAnimationGroup) init];
    __swift_instantiateConcreteTypeFromMangledName(&_ss23_ContiguousArrayStorageCyyXlGMD_1);
    uint64_t v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_100493E20;
    *(void *)(v22 + 32) = v14;
    *(void *)(v22 + 40) = v19;
    v43[0] = v22;
    specialized Array._endMutation()();
    type metadata accessor for UIMenu(0, &_sSo11CAAnimationCML_0);
    id v23 = v14;
    id v24 = v19;
    Class v25 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v21 setAnimations:v25];

    [v21 setDuration:v15 * (1.0 / *(double *)&static CircularProgressView.SpinAnimator.zSpinToValue)];
    [v21 setFillMode:kCAFillModeForwards];
    [v21 setRemovedOnCompletion:0];
    CGRect v26 = (objc_class *)type metadata accessor for CircularProgressView.SpinAnimator.Delegate();
    CGRect v27 = (char *)objc_allocWithZone(v26);
    CGRect v28 = &v27[OBJC_IVAR____TtCCC11MusicCoreUI20CircularProgressViewP33_2327D9925563EEC9FF3A63D4DED4721D12SpinAnimator8Delegate_onAnimationDidStop];
    *(void *)CGRect v28 = 0;
    *((void *)v28 + 1) = 0;
    v41.receiver = v27;
    v41.super_class = v26;
    id v29 = v21;
    CGRect v30 = (char *)objc_msgSendSuper2(&v41, "init");
    [v29 setDelegate:v30];

    uint64_t v31 = swift_allocObject();
    *(void *)(v31 + 16) = v30;
    *(void *)(v31 + 24) = v4;
    *(double *)(v31 + 32) = v11;
    *(void *)(v31 + 40) = a1;
    *(void *)(v31 + 48) = a2;
    *(double *)(v31 + 56) = a3;
    uint64_t v32 = (void (**)(uint64_t))&v30[OBJC_IVAR____TtCCC11MusicCoreUI20CircularProgressViewP33_2327D9925563EEC9FF3A63D4DED4721D12SpinAnimator8Delegate_onAnimationDidStop];
    uint64_t v33 = *(void *)&v30[OBJC_IVAR____TtCCC11MusicCoreUI20CircularProgressViewP33_2327D9925563EEC9FF3A63D4DED4721D12SpinAnimator8Delegate_onAnimationDidStop];
    *uint64_t v32 = partial apply for closure #1 in CircularProgressView.SpinAnimator.stop(to:progressValueProvider:);
    v32[1] = (void (*)(uint64_t))v31;
    uint64_t v34 = v30;
    swift_retain();
    swift_retain();
    outlined consume of (@escaping @callee_guaranteed () -> ())?(v33);
    uint64_t v35 = *(void *)(v4 + 16);
    uint64_t v36 = *(void *)(v4 + 24);
    NSString v37 = String._bridgeToObjectiveC()();
    [v7 removeAnimationForKey:v37];

    v43[0] = v35;
    v43[1] = v36;
    swift_bridgeObjectRetain();
    v38._countAndFlagsBits = 0x676E69646E65;
    v38._object = (void *)0xE600000000000000;
    String.append(_:)(v38);
    NSString v39 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v7 addAnimation:v29 forKey:v39];
  }
}

uint64_t sub_1003A5ECC()
{
  return swift_deallocObject();
}

double partial apply for closure #2 in CircularProgressView.setState(_:animated:)(uint64_t a1)
{
  return closure #2 in CircularProgressView.setState(_:animated:)(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t type metadata accessor for CircularProgressView.SpinAnimator()
{
  return self;
}

void closure #1 in CircularProgressView.SpinAnimator.stop(to:progressValueProvider:)(double a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t))
{
  if (*(unsigned char *)(a5 + 40) == 1)
  {
    id v10 = self;
    [v10 begin];
    [v10 setDisableActions:1];
    double v11 = *(void **)(a5 + 32);
    uint64_t v16 = *(void *)(a5 + 16);
    uint64_t v17 = *(void *)(a5 + 24);
    swift_bridgeObjectRetain();
    v12._countAndFlagsBits = 0x676E69646E65;
    v12._object = (void *)0xE600000000000000;
    String.append(_:)(v12);
    NSString v13 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    objc_msgSend(v11, "removeAnimationForKey:", v13, v16, v17);

    [v11 setStrokeStart:0.0];
    [v11 setStrokeEnd:a1];
    [v10 commit];
    double v14 = COERCE_DOUBLE(a6(a5));
    if (v15) {
      double v14 = a2;
    }
    [v11 setStrokeEnd:v14];
  }
}

void one-time initialization function for zSpinToValue()
{
  static CircularProgressView.SpinAnimator.zSpinToValue = 0x401921FB54442D18;
}

id CircularProgressView.SpinAnimator.Delegate.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CircularProgressView.SpinAnimator.Delegate();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t CircularProgressView.SpinAnimator.__deallocating_deinit()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

void CircularProgressView.init(frame:)()
{
}

void specialized CircularProgressView.init(coder:)()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView__state];
  *(void *)uint64_t v1 = 0;
  *((_WORD *)v1 + 4) = 0;
  v1[10] = 1;
  *(void *)&v0[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_image] = 0;
  *(void *)&v0[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_imageView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_imageScale] = 0x3FE0000000000000;
  *(void *)&v0[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_spinAnimator] = 0;
  uint64_t v2 = OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_progressLayer;
  *(void *)&v0[v2] = [objc_allocWithZone((Class)CAShapeLayer) init];
  uint64_t v3 = OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_trackLayer;
  *(void *)&v0[v3] = [objc_allocWithZone((Class)CAShapeLayer) init];

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t type metadata accessor for CircularProgressView()
{
  return self;
}

{
  return type metadata accessor for CircularProgressView();
}

uint64_t __swift_memcpy10_8_0(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(_WORD *)(result + 8) = *((_WORD *)a2 + 4);
  *(void *)double result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for CircularProgressView.State(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 10)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for CircularProgressView.State(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)double result = 0;
    *(_WORD *)(result + 8) = 0;
    *(_DWORD *)double result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 10) = v3;
  return result;
}

uint64_t getEnumTag for CircularProgressView.State(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t destructiveInjectEnumTag for CircularProgressView.State(uint64_t result, int a2)
{
  if (a2)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)double result = (a2 - 1);
    *(unsigned char *)(result + 9) = 1;
  }
  else
  {
    *(unsigned char *)(result + 9) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for CircularProgressView.State()
{
  return &type metadata for CircularProgressView.State;
}

uint64_t type metadata accessor for CircularProgressView.SpinAnimator.Delegate()
{
  return self;
}

uint64_t sub_1003A6554()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void partial apply for closure #1 in CircularProgressView.SpinAnimator.stop(to:progressValueProvider:)(uint64_t a1)
{
  closure #1 in CircularProgressView.SpinAnimator.stop(to:progressValueProvider:)(*(double *)(v1 + 32), *(double *)(v1 + 56), a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(uint64_t (**)(uint64_t))(v1 + 40));
}

size_t _sSa6append10contentsOfyqd__n_t7ElementQyd__RszSTRd__lF10Foundation3URLVSg_SayAHGTg5_0(size_t result)
{
  uint64_t v2 = *(void *)(result + 16);
  char v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  size_t v6 = result;
  double result = swift_isUniquelyReferenced_nonNull_native();
  if (result && v5 <= v3[3] >> 1)
  {
    if (*(void *)(v6 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
  if (v4 <= v5) {
    int64_t v11 = v4 + v2;
  }
  else {
    int64_t v11 = v4;
  }
  double result = _ss12_ArrayBufferV20_consumeAndCreateNew14bufferIsUnique15minimumCapacity13growForAppendAByxGSb_SiSbtF10Foundation3URLVSg_Tg5_0(result, v11, 1, v3);
  char v3 = (void *)result;
  if (!*(void *)(v6 + 16))
  {
LABEL_13:
    if (!v2) {
      goto LABEL_14;
    }
    goto LABEL_16;
  }
LABEL_5:
  uint64_t v7 = (v3[3] >> 1) - v3[2];
  double result = __swift_instantiateConcreteTypeFromMangledName(&_s10Foundation3URLVSgMD_1);
  if (v7 < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  double result = swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_14:
    double result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v8 = v3[2];
  BOOL v9 = __OFADD__(v8, v2);
  uint64_t v10 = v8 + v2;
  if (!v9)
  {
    v3[2] = v10;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t specialized Array.append<A>(contentsOf:)(unint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t *a4, uint64_t *a5)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v11 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (!((unint64_t)*v5 >> 62))
  {
    uint64_t v12 = *(void *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v13 = v12 + v11;
    if (!__OFADD__(v12, v11)) {
      goto LABEL_5;
    }
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  uint64_t v23 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  uint64_t v13 = v23 + v11;
  if (__OFADD__(v23, v11)) {
    goto LABEL_21;
  }
LABEL_5:
  unint64_t v14 = *v5;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *int64_t v5 = v14;
  if (isUniquelyReferenced_nonNull_bridgeObject)
  {
    if ((v14 & 0x8000000000000000) == 0 && (v14 & 0x4000000000000000) == 0)
    {
      uint64_t v16 = v14 & 0xFFFFFFFFFFFFFF8;
      if (v13 <= *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        goto LABEL_11;
      }
    }
  }
  uint64_t v24 = v11;
  uint64_t v11 = (uint64_t)a2;
  a2 = a3;
  a3 = (unint64_t *)a4;
  a4 = a5;
  if (v14 >> 62) {
    goto LABEL_23;
  }
  while (1)
  {
    swift_bridgeObjectRetain();
    uint64_t v17 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    swift_bridgeObjectRelease();
    *int64_t v5 = v17;
    uint64_t v16 = v17 & 0xFFFFFFFFFFFFFF8;
    a5 = a4;
    a4 = (uint64_t *)a3;
    a3 = a2;
    a2 = (unint64_t *)v11;
    uint64_t v11 = v24;
LABEL_11:
    uint64_t result = specialized Array._copyContents(initializing:)(v16 + 8 * *(void *)(v16 + 16) + 32, (*(void *)(v16 + 24) >> 1) - *(void *)(v16 + 16), a1, (void (*)(void))a2, a3, a4, (uint64_t (*)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))a5);
    if (v19 >= v11) {
      break;
    }
LABEL_22:
    __break(1u);
LABEL_23:
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  if (v19 >= 1)
  {
    uint64_t v20 = *(void *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v21 = __OFADD__(v20, v19);
    uint64_t v22 = v20 + v19;
    if (v21)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10) = v22;
  }
  swift_bridgeObjectRelease();

  return specialized Array._endMutation()();
}

uint64_t Collaboration.Management.Model.__allocating_init(manager:playlist:)(void (*a1)(char *, uint64_t), char *a2)
{
  swift_allocObject();
  uint64_t v4 = specialized Collaboration.Management.Model.init(manager:playlist:)(a1, a2);
  swift_release();
  return v4;
}

uint64_t Collaboration.Management.Model.init(manager:playlist:)(void (*a1)(char *, uint64_t), char *a2)
{
  uint64_t v2 = specialized Collaboration.Management.Model.init(manager:playlist:)(a1, a2);
  swift_release();
  return v2;
}

uint64_t property wrapper backing initializer of Collaboration.Management.Model.pendingCollaborators(uint64_t a1)
{
  return property wrapper backing initializer of Player.nowPlaying(a1, &demangling cache variable for type metadata for [Playlist.Collaborator]);
}

uint64_t property wrapper backing initializer of Collaboration.Management.Model.transientCollaborators(uint64_t a1)
{
  return property wrapper backing initializer of Player.nowPlaying(a1, &demangling cache variable for type metadata for Set<Playlist.Collaborator>);
}

uint64_t property wrapper backing initializer of Collaboration.Management.Model.playlist(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Playlist();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v6 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  Published.init(initialValue:)();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

uint64_t closure #1 in Collaboration.Management.Model.init(manager:playlist:)()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    static ApplicationCapabilities.shared.getter((uint64_t)&v1);
    outlined release of ApplicationCapabilities((uint64_t)&v1);
    swift_getKeyPath();
    swift_getKeyPath();
    return static Published.subscript.setter();
  }
  return result;
}

uint64_t closure #2 in Collaboration.Management.Model.init(manager:playlist:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5[5] = a4;
  v5[6] = a5;
  __swift_instantiateConcreteTypeFromMangledName(&_sSo17OS_dispatch_queueC8DispatchE16SchedulerOptionsVSgMD_1);
  v5[7] = swift_task_alloc();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<MusicLibrarySectionedResponse<Playlist, Playlist.Collaborator>?>.Publisher);
  v5[8] = v6;
  v5[9] = *(void *)(v6 - 8);
  v5[10] = swift_task_alloc();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Publishers.ReceiveOn<Published<MusicLibrarySectionedResponse<Playlist, Playlist.Collaborator>?>.Publisher, OS_dispatch_queue>);
  v5[11] = v7;
  v5[12] = *(void *)(v7 - 8);
  v5[13] = swift_task_alloc();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicLibrarySectionedRequest<Playlist, Playlist.Collaborator>);
  v5[14] = v8;
  v5[15] = *(void *)(v8 - 8);
  v5[16] = swift_task_alloc();
  v5[17] = swift_task_alloc();
  return _swift_task_switch(closure #2 in Collaboration.Management.Model.init(manager:playlist:), 0, 0);
}

uint64_t closure #2 in Collaboration.Management.Model.init(manager:playlist:)()
{
  uint64_t v2 = v0[16];
  uint64_t v1 = v0[17];
  uint64_t v3 = v0[14];
  uint64_t v4 = v0[15];
  type metadata accessor for Playlist();
  type metadata accessor for Playlist.Collaborator();
  lazy protocol witness table accessor for type Collaboration.Management.Model and conformance Collaboration.Management.Model(&lazy protocol witness table cache variable for type Playlist.Collaborator and conformance Playlist.Collaborator, (void (*)(uint64_t))&type metadata accessor for Playlist.Collaborator);
  MusicLibrarySectionedRequest.init()();
  swift_getKeyPath();
  v0[2] = Playlist.id.getter();
  v0[3] = v5;
  MusicLibrarySectionedRequest.filterSections<A>(matching:equalTo:)();
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v1, v3);
  type metadata accessor for MainActor();
  v0[18] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(closure #2 in Collaboration.Management.Model.init(manager:playlist:), v7, v6);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  uint64_t v6;

  uint64_t v2 = v0[15];
  uint64_t v1 = v0[16];
  uint64_t v3 = v0[14];
  swift_release();
  lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>((unint64_t *)&lazy protocol witness table cache variable for type MusicLibrarySectionedRequest<Playlist, Playlist.Collaborator> and conformance MusicLibrarySectionedRequest<A, B>, &demangling cache variable for type metadata for MusicLibrarySectionedRequest<Playlist, Playlist.Collaborator>);
  v0[19] = MusicAutoupdatableRequest.autoupdatingResponse.getter();
  uint64_t v4 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v0[20] = v4;
  v0[21] = (v2 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v4(v1, v3);
  return _swift_task_switch(closure #2 in Collaboration.Management.Model.init(manager:playlist:), 0, 0);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void);
  uint64_t v14;
  uint64_t v15;

  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model_autoupdatingResponse;
  *(void *)(v1 + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model_autoupdatingResponse) = *(void *)(v0 + 152);
  swift_release();
  uint64_t v3 = *(void *)(v1 + v2);
  if (v3)
  {
    uint64_t v5 = *(void *)(v0 + 96);
    uint64_t v4 = *(void *)(v0 + 104);
    uint64_t v6 = *(void *)(v0 + 80);
    uint64_t v8 = *(void *)(v0 + 64);
    uint64_t v7 = *(void *)(v0 + 72);
    uint64_t v9 = *(void *)(v0 + 56);
    unint64_t v14 = *(void *)(v0 + 88);
    swift_retain();
    dispatch thunk of MusicAutoupdatingResponse.$response.getter();
    swift_release();
    type metadata accessor for UIMenu(0, (unint64_t *)&_sSo17OS_dispatch_queueCML_1);
    *(void *)(v0 + 32) = static OS_dispatch_queue.main.getter();
    uint64_t v10 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type Published<MusicLibrarySectionedResponse<Playlist, Playlist.Collaborator>?>.Publisher and conformance Published<A>.Publisher, &demangling cache variable for type metadata for Published<MusicLibrarySectionedResponse<Playlist, Playlist.Collaborator>?>.Publisher);
    _sSo17OS_dispatch_queueCAB7Combine9Scheduler8DispatchWl_0();
    Publisher.receive<A>(on:options:)();
    outlined destroy of TaskPriority?(v9, &_sSo17OS_dispatch_queueC8DispatchE16SchedulerOptionsVSgMD_1);

    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    swift_allocObject();
    swift_weakInit();
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type Publishers.ReceiveOn<Published<MusicLibrarySectionedResponse<Playlist, Playlist.Collaborator>?>.Publisher, OS_dispatch_queue> and conformance Publishers.ReceiveOn<A, B>, &demangling cache variable for type metadata for Publishers.ReceiveOn<Published<MusicLibrarySectionedResponse<Playlist, Playlist.Collaborator>?>.Publisher, OS_dispatch_queue>);
    uint64_t v3 = Publisher<>.sink(receiveValue:)();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v14);
  }
  uint64_t v11 = *(void *)(v0 + 48);
  (*(void (**)(void, void))(v0 + 160))(*(void *)(v0 + 136), *(void *)(v0 + 112));
  *(void *)(v11
            + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model_autoupdatingResponseSubscription) = v3;
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t closure #1 in closure #2 in Collaboration.Management.Model.init(manager:playlist:)(void (*a1)(char *, uint64_t, uint64_t), uint64_t a2)
{
  v210 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Playlist.Collaborator?);
  __chkstk_darwin();
  uint64_t v206 = (uint64_t)&v175 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v222 = type metadata accessor for Playlist.Collaborator();
  uint64_t v216 = *(void *)(v222 - 8);
  __chkstk_darwin();
  v215 = (char *)&v175 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v214 = (char *)&v175 - v5;
  __chkstk_darwin();
  uint64_t v223 = (uint64_t)&v175 - v6;
  __chkstk_darwin();
  v213 = (char *)&v175 - v7;
  uint64_t v218 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicItemCollection<Playlist.Collaborator>);
  uint64_t v220 = *(void *)(v218 - 8);
  __chkstk_darwin();
  v217 = (char *)&v175 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v197 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for IndexingIterator<MusicItemCollection<Playlist.Collaborator>>);
  __chkstk_darwin();
  v196 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&v175 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin();
  v221 = (char *)&v175 - v10;
  uint64_t v189 = type metadata accessor for Date();
  uint64_t v187 = *(void *)(v189 - 8);
  __chkstk_darwin();
  v181 = (char *)&v175 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v185 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Date?, Date?));
  __chkstk_darwin();
  v188 = (char *)&v175 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v194 = type metadata accessor for Playlist();
  uint64_t v193 = *(void *)(v194 - 8);
  __chkstk_darwin();
  v191 = (char *)&v175 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v192 = (char *)&v175 - v14;
  __chkstk_darwin();
  v184 = (char *)&v175 - v15;
  __swift_instantiateConcreteTypeFromMangledName(&_s10Foundation4DateVSgMD_0);
  __chkstk_darwin();
  uint64_t v182 = (uint64_t)&v175 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v190 = (uint64_t)&v175 - v17;
  __chkstk_darwin();
  v186 = (char *)&v175 - v18;
  __swift_instantiateConcreteTypeFromMangledName(&_s8MusicKit8PlaylistV0aB8InternalE12CollaboratorV6StatusOSgMD_0);
  __chkstk_darwin();
  uint64_t v212 = (uint64_t)&v175 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v207 = type metadata accessor for Playlist.Collaborator.Status();
  uint64_t v201 = *(void *)(v207 - 8);
  __chkstk_darwin();
  v199 = (char *)&v175 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v200 = (char *)&v175 - v21;
  uint64_t v224 = type metadata accessor for Playlist.Collaboration();
  uint64_t v225 = *(void *)(v224 - 8);
  __chkstk_darwin();
  v202 = (char *)&v175 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v228 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicLibrarySection<Playlist, Playlist.Collaborator>);
  uint64_t v227 = *(void *)(v228 - 8);
  __chkstk_darwin();
  v208 = (char *)&v175 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v219 = type metadata accessor for Logger();
  uint64_t v230 = *(void *)(v219 - 8);
  __chkstk_darwin();
  v209 = (char *)&v175 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v195 = (char *)&v175 - v25;
  __chkstk_darwin();
  v198 = (char *)&v175 - v26;
  __chkstk_darwin();
  v211 = (uint64_t *)((char *)&v175 - v27);
  v204 = (void (*)(char *, uint64_t, uint64_t))__swift_instantiateConcreteTypeFromMangledName(&_s8MusicKit8PlaylistV0aB8InternalE13CollaborationVSgMD_0);
  __chkstk_darwin();
  v183 = (char *)&v175 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v205 = (uint64_t)&v175 - v29;
  __chkstk_darwin();
  v203 = (uint64_t *)((char *)&v175 - v30);
  __chkstk_darwin();
  uint64_t v32 = (char *)&v175 - v31;
  __chkstk_darwin();
  uint64_t v34 = (char *)&v175 - v33;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicLibrarySectionedResponse<Playlist, Playlist.Collaborator>?);
  __chkstk_darwin();
  uint64_t v36 = (char *)&v175 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicLibrarySection<Playlist, Playlist.Collaborator>?);
  __chkstk_darwin();
  Swift::String v38 = (char *)&v175 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  int v40 = (char *)&v175 - v39;
  __chkstk_darwin();
  uint64_t v42 = (char *)&v175 - v41;
  __chkstk_darwin();
  uint64_t v44 = (char *)&v175 - v43;
  __chkstk_darwin();
  uint64_t v229 = (uint64_t)&v175 - v45;
  swift_beginAccess();
  uint64_t v226 = a2 + 16;
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v47 = *(void *)(result
                    + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model_autoupdatingResponse);
    swift_retain();
    uint64_t result = swift_release();
    if (v47)
    {
      char v48 = dispatch thunk of MusicAutoupdatingResponse.isLoaded.getter();
      uint64_t result = swift_release();
      if (v48)
      {
        CGRect v180 = v34;
        outlined init with copy of (String, Any)((uint64_t)v210, (uint64_t)v36, &demangling cache variable for type metadata for MusicLibrarySectionedResponse<Playlist, Playlist.Collaborator>?);
        uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MusicLibrarySectionedResponse<Playlist, Playlist.Collaborator>);
        uint64_t v50 = *(void *)(v49 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48))(v36, 1, v49) == 1)
        {
          outlined destroy of TaskPriority?((uint64_t)v36, &demangling cache variable for type metadata for MusicLibrarySectionedResponse<Playlist, Playlist.Collaborator>?);
          uint64_t v51 = v227;
          uint64_t v52 = v229;
          uint64_t v53 = v228;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v227 + 56))(v229, 1, 1, v228);
        }
        else
        {
          uint64_t v54 = MusicLibrarySectionedResponse.sections.getter();
          (*(void (**)(char *, uint64_t))(v50 + 8))(v36, v49);
          uint64_t v51 = v227;
          uint64_t v52 = v229;
          uint64_t v53 = v228;
          if (*(void *)(v54 + 16))
          {
            (*(void (**)(uint64_t, unint64_t, uint64_t))(v227 + 16))(v229, v54 + ((*(unsigned __int8 *)(v227 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v227 + 80)), v228);
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v51 + 56))(v52, 0, 1, v53);
          }
          else
          {
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v227 + 56))(v229, 1, 1, v228);
          }
          swift_bridgeObjectRelease();
        }
        uint64_t v55 = (uint64_t)v180;
        outlined init with copy of (String, Any)(v52, (uint64_t)v44, &demangling cache variable for type metadata for MusicLibrarySection<Playlist, Playlist.Collaborator>?);
        unint64_t v56 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v51 + 48);
        CGRect v177 = (void (*)(void *, uint64_t))(v51 + 48);
        CGRect v176 = v56;
        if (v56(v44, 1, v53) == 1)
        {
          outlined destroy of TaskPriority?((uint64_t)v44, &demangling cache variable for type metadata for MusicLibrarySection<Playlist, Playlist.Collaborator>?);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v225 + 56))(v55, 1, 1, v224);
        }
        else
        {
          swift_getKeyPath();
          MusicLibrarySection.subscript.getter();
          uint64_t v55 = (uint64_t)v180;
          uint64_t v52 = v229;
          swift_release();
          (*(void (**)(char *, uint64_t))(v51 + 8))(v44, v53);
        }
        uint64_t v57 = Logger.collaboration.unsafeMutableAddressor();
        unsigned int v58 = *(void (**)(char *, uint64_t, uint64_t))(v230 + 16);
        uint64_t v59 = v211;
        uint64_t v179 = v57;
        uint64_t v60 = v219;
        uint64_t v178 = v230 + 16;
        v210 = v58;
        ((void (*)(void *))v58)(v211);
        outlined init with copy of (String, Any)(v52, (uint64_t)v42, &demangling cache variable for type metadata for MusicLibrarySection<Playlist, Playlist.Collaborator>?);
        outlined init with copy of (String, Any)(v55, (uint64_t)v32, &_s8MusicKit8PlaylistV0aB8InternalE13CollaborationVSgMD_0);
        uint64_t v61 = Logger.logObject.getter();
        os_log_type_t v62 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v61, v62))
        {
          uint64_t v63 = swift_slowAlloc();
          uint64_t v175 = swift_slowAlloc();
          uint64_t v232 = v175;
          *(_DWORD *)uint64_t v63 = 136446466;
          outlined init with copy of (String, Any)((uint64_t)v42, (uint64_t)v40, &demangling cache variable for type metadata for MusicLibrarySection<Playlist, Playlist.Collaborator>?);
          uint64_t v64 = String.init<A>(describing:)();
          *(void *)(v63 + 4) = _s2os32getNullTerminatedUTF8PointerImpl_21storingStringOwnersInSVSS_SpyypGSgztF_2(v64, v65, &v232);
          swift_bridgeObjectRelease();
          outlined destroy of TaskPriority?((uint64_t)v42, &demangling cache variable for type metadata for MusicLibrarySection<Playlist, Playlist.Collaborator>?);
          *(_WORD *)(v63 + 12) = 2082;
          outlined init with copy of (String, Any)((uint64_t)v32, (uint64_t)v203, &_s8MusicKit8PlaylistV0aB8InternalE13CollaborationVSgMD_0);
          uint64_t v66 = String.init<A>(describing:)();
          *(void *)(v63 + 14) = _s2os32getNullTerminatedUTF8PointerImpl_21storingStringOwnersInSVSS_SpyypGSgztF_2(v66, v67, &v232);
          swift_bridgeObjectRelease();
          outlined destroy of TaskPriority?((uint64_t)v32, &_s8MusicKit8PlaylistV0aB8InternalE13CollaborationVSgMD_0);
          _os_log_impl((void *)&_mh_execute_header, v61, v62, "    [Management] Did update collaborative playlist with:\n        playlist=%{public}s\")\n        collaboration=%{public}s", (uint8_t *)v63, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
          outlined destroy of TaskPriority?((uint64_t)v42, &demangling cache variable for type metadata for MusicLibrarySection<Playlist, Playlist.Collaborator>?);
          outlined destroy of TaskPriority?((uint64_t)v32, &_s8MusicKit8PlaylistV0aB8InternalE13CollaborationVSgMD_0);
        }

        uint64_t v68 = *(void (**)(char *, uint64_t))(v230 + 8);
        v68((char *)v59, v60);
        uint64_t v69 = v60;
        uint64_t v70 = v229;
        outlined init with copy of (String, Any)(v229, (uint64_t)v38, &demangling cache variable for type metadata for MusicLibrarySection<Playlist, Playlist.Collaborator>?);
        uint64_t v71 = v228;
        int v72 = v176(v38, 1, v228);
        uint64_t v73 = v227;
        uint64_t v74 = v224;
        uint64_t v75 = v225;
        uint64_t v76 = v212;
        if (v72 == 1)
        {
          outlined destroy of TaskPriority?((uint64_t)v38, &demangling cache variable for type metadata for MusicLibrarySection<Playlist, Playlist.Collaborator>?);
LABEL_25:
          uint64_t v89 = v209;
          v210(v209, v179, v69);
          uint64_t v90 = Logger.logObject.getter();
          os_log_type_t v91 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v90, v91))
          {
            uint64_t v92 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v92 = 0;
            _os_log_impl((void *)&_mh_execute_header, v90, v91, "[Management] Dismissing management sheet", v92, 2u);
            swift_slowDealloc();
          }

          v68(v89, v69);
          swift_beginAccess();
          if (swift_weakLoadStrong())
          {
            swift_getKeyPath();
            swift_getKeyPath();
            char v233 = 1;
            static Published.subscript.setter();
          }
          outlined destroy of TaskPriority?((uint64_t)v180, &_s8MusicKit8PlaylistV0aB8InternalE13CollaborationVSgMD_0);
          uint64_t v93 = v70;
          return outlined destroy of TaskPriority?(v93, &demangling cache variable for type metadata for MusicLibrarySection<Playlist, Playlist.Collaborator>?);
        }
        unsigned int v77 = v208;
        (*(void (**)(char *, char *, uint64_t))(v227 + 32))(v208, v38, v71);
        uint64_t v78 = v205;
        outlined init with copy of (String, Any)((uint64_t)v180, v205, &_s8MusicKit8PlaylistV0aB8InternalE13CollaborationVSgMD_0);
        v211 = *(void **)(v75 + 48);
        if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v211)(v78, 1, v74) == 1)
        {
          (*(void (**)(char *, uint64_t))(v73 + 8))(v77, v71);
          outlined destroy of TaskPriority?(v78, &_s8MusicKit8PlaylistV0aB8InternalE13CollaborationVSgMD_0);
          uint64_t v70 = v229;
          goto LABEL_25;
        }
        CGRect v177 = (void (*)(void *, uint64_t))v68;
        int v79 = v202;
        (*(void (**)(char *, uint64_t, uint64_t))(v75 + 32))(v202, v78, v74);
        Playlist.Collaboration.collaboratorStatus.getter();
        uint64_t v80 = v201;
        uint64_t v81 = v75;
        uint64_t v82 = v207;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v201 + 48))(v76, 1, v207) == 1)
        {
          (*(void (**)(char *, uint64_t))(v81 + 8))(v79, v74);
          (*(void (**)(char *, uint64_t))(v73 + 8))(v208, v71);
          outlined destroy of TaskPriority?(v76, &_s8MusicKit8PlaylistV0aB8InternalE12CollaboratorV6StatusOSgMD_0);
LABEL_24:
          uint64_t v70 = v229;
          uint64_t v68 = (void (*)(char *, uint64_t))v177;
          goto LABEL_25;
        }
        (*(void (**)(char *, uint64_t, uint64_t))(v80 + 32))(v200, v76, v82);
        int v83 = v199;
        (*(void (**)(char *, void, uint64_t))(v80 + 104))(v199, enum case for Playlist.Collaborator.Status.notJoined(_:), v82);
        lazy protocol witness table accessor for type Collaboration.Management.Model and conformance Collaboration.Management.Model(&lazy protocol witness table cache variable for type Playlist.Collaborator.Status and conformance Playlist.Collaborator.Status, (void (*)(uint64_t))&type metadata accessor for Playlist.Collaborator.Status);
        char v84 = dispatch thunk of static Equatable.== infix(_:_:)();
        uint64_t v85 = v207;
        char v86 = v84;
        uint64_t v88 = v80 + 8;
        uint64_t v87 = *(void (**)(char *, uint64_t))(v80 + 8);
        v87(v83, v207);
        if (v86)
        {
          v87(v200, v85);
          (*(void (**)(char *, uint64_t))(v225 + 8))(v202, v74);
          (*(void (**)(char *, uint64_t))(v73 + 8))(v208, v71);
          goto LABEL_24;
        }
        CGRect v176 = (uint64_t (*)(char *, uint64_t, uint64_t))v87;
        uint64_t v201 = v88;
        swift_beginAccess();
        uint64_t Strong = swift_weakLoadStrong();
        uint64_t v95 = v218;
        uint64_t v96 = (uint64_t)v221;
        if (!Strong
          || (swift_getKeyPath(),
              swift_getKeyPath(),
              static Published.subscript.getter(),
              swift_release(),
              swift_release(),
              swift_release(),
              v232 != 1))
        {
LABEL_48:
          swift_beginAccess();
          if (swift_weakLoadStrong())
          {
            uint64_t v111 = v192;
            MusicLibrarySection.item.getter();
            swift_getKeyPath();
            swift_getKeyPath();
            uint64_t v112 = v193;
            uint64_t v113 = v194;
            (*(void (**)(char *, char *, uint64_t))(v193 + 16))(v191, v111, v194);
            swift_retain();
            static Published.subscript.setter();
            (*(void (**)(char *, uint64_t))(v112 + 8))(v111, v113);
            swift_release();
          }
          swift_beginAccess();
          if (swift_weakLoadStrong())
          {
            char v114 = Playlist.Collaboration.isOpenInvitation.getter();
            swift_getKeyPath();
            swift_getKeyPath();
            LOBYTE(v232) = v114 & 1;
            static Published.subscript.setter();
          }
          uint64_t v115 = v217;
          MusicLibrarySection.items.getter();
          uint64_t v116 = v220;
          uint64_t v117 = *(void (**)(char *, uint64_t, uint64_t))(v220 + 16);
          uint64_t v118 = (uint64_t)v196;
          uint64_t v205 = v220 + 16;
          v204 = v117;
          v117((char *)v196, (uint64_t)v115, v95);
          uint64_t v119 = lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type MusicItemCollection<Playlist.Collaborator> and conformance MusicItemCollection<A>, &demangling cache variable for type metadata for MusicItemCollection<Playlist.Collaborator>);
          dispatch thunk of Collection.startIndex.getter();
          uint64_t v120 = *(uint64_t **)(v116 + 8);
          uint64_t v220 = v116 + 8;
          v203 = v120;
          ((void (*)(char *, uint64_t))v120)(v115, v95);
          uint64_t v121 = v197;
          *(void *)(v118 + *(int *)(v197 + 36)) = v232;
          outlined init with take of PresentationSource?(v118, v96, &demangling cache variable for type metadata for IndexingIterator<MusicItemCollection<Playlist.Collaborator>>);
          uint64_t v122 = (uint64_t *)(v96 + *(int *)(v121 + 36));
          swift_beginAccess();
          uint64_t v123 = *v122;
          dispatch thunk of Collection.endIndex.getter();
          if (v123 == v232)
          {
            v211 = _swiftEmptyArrayStorage;
            v209 = (char *)_swiftEmptyArrayStorage;
            uint64_t v124 = (uint64_t)v221;
          }
          else
          {
            uint64_t v139 = (void (**)(char *))(v216 + 16);
            uint64_t v212 = v216 + 32;
            uint64_t v197 = v216 + 8;
            v196 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v216 + 56);
            v209 = (char *)_swiftEmptyArrayStorage;
            v211 = _swiftEmptyArrayStorage;
            uint64_t v124 = (uint64_t)v221;
            v199 = (char *)v119;
            do
            {
              uint64_t v142 = (void (*)(uint64_t *, void))dispatch thunk of Collection.subscript.read();
              uint64_t v143 = v95;
              uint64_t v144 = *v139;
              uint64_t v145 = v213;
              uint64_t v146 = v222;
              (*v139)(v213);
              v142(&v232, 0);
              long long v147 = v217;
              uint64_t v148 = v124;
              uint64_t v149 = v146;
              v204(v217, v148, v143);
              dispatch thunk of Collection.formIndex(after:)();
              ((void (*)(char *, uint64_t))v203)(v147, v143);
              uint64_t v150 = *(void (**)(uint64_t, char *, uint64_t))v212;
              uint64_t v151 = v223;
              (*(void (**)(uint64_t, char *, uint64_t))v212)(v223, v145, v149);
              if (Playlist.Collaborator.isPending.getter())
              {
                ((void (*)(char *, uint64_t, uint64_t))v144)(v214, v151, v149);
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  v211 = (void *)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, v211[2] + 1, 1, v211);
                }
                uint64_t v160 = v216;
                uint64_t v161 = v211;
                unint64_t v163 = v211[2];
                unint64_t v162 = v211[3];
                if (v163 >= v162 >> 1) {
                  uint64_t v161 = (void *)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v162 > 1, v163 + 1, 1, v211);
                }
                v161[2] = v163 + 1;
                unint64_t v164 = (*(unsigned __int8 *)(v160 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v160 + 80);
                v211 = v161;
                v150((uint64_t)v161 + v164 + *(void *)(v160 + 72) * v163, v214, v149);
                (*(void (**)(uint64_t, uint64_t))(v160 + 8))(v151, v149);
              }
              else
              {
                ((void (*)(char *, uint64_t, uint64_t))v144)(v215, v151, v149);
                uint64_t v152 = v209;
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  uint64_t v152 = (char *)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *((void *)v152 + 2) + 1, 1, v152);
                }
                uint64_t v153 = v216;
                unint64_t v155 = *((void *)v152 + 2);
                unint64_t v154 = *((void *)v152 + 3);
                if (v155 >= v154 >> 1) {
                  uint64_t v152 = (char *)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v154 > 1, v155 + 1, 1, v152);
                }
                *((void *)v152 + 2) = v155 + 1;
                unint64_t v156 = (*(unsigned __int8 *)(v153 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v153 + 80);
                v209 = v152;
                v150((uint64_t)&v152[v156 + *(void *)(v153 + 72) * v155], v215, v149);
                if (swift_weakLoadStrong())
                {
                  swift_getKeyPath();
                  swift_getKeyPath();
                  uint64_t v157 = (void (*)(uint64_t *, void))static Published.subscript.modify();
                  uint64_t v158 = v206;
                  uint64_t v159 = v223;
                  specialized Set._Variant.remove(_:)(v223, v206);
                  outlined destroy of TaskPriority?(v158, &demangling cache variable for type metadata for Playlist.Collaborator?);
                  v157(&v232, 0);
                  swift_release();
                  swift_release();
                  swift_release();
                  (*(void (**)(uint64_t, uint64_t))v197)(v159, v222);
                }
                else
                {
                  (*(void (**)(uint64_t, uint64_t))v197)(v223, v149);
                  uint64_t v140 = v206;
                  (*v196)(v206, 1, 1, v149);
                  outlined destroy of TaskPriority?(v140, &demangling cache variable for type metadata for Playlist.Collaborator?);
                }
              }
              uint64_t v141 = *v122;
              uint64_t v124 = (uint64_t)v221;
              uint64_t v95 = v218;
              dispatch thunk of Collection.endIndex.getter();
            }
            while (v141 != v232);
          }
          outlined destroy of TaskPriority?(v124, &demangling cache variable for type metadata for IndexingIterator<MusicItemCollection<Playlist.Collaborator>>);
          swift_beginAccess();
          uint64_t v125 = swift_weakLoadStrong();
          uint64_t v126 = (uint64_t)v209;
          if (v125)
          {
            swift_getKeyPath();
            swift_getKeyPath();
            v231[1] = v126;
            swift_bridgeObjectRetain();
            static Published.subscript.setter();
          }
          swift_beginAccess();
          uint64_t v127 = swift_weakLoadStrong();
          uint64_t v128 = v219;
          uint64_t v129 = v198;
          uint64_t v130 = v179;
          uint64_t v131 = v211;
          if (v127)
          {
            swift_getKeyPath();
            swift_getKeyPath();
            v231[0] = (uint64_t)v131;
            swift_bridgeObjectRetain();
            static Published.subscript.setter();
          }
          uint64_t v132 = v210;
          v210(v129, v130, v128);
          swift_bridgeObjectRetain();
          uint64_t v133 = Logger.logObject.getter();
          os_log_type_t v134 = static os_log_type_t.debug.getter();
          if (os_log_type_enabled(v133, v134))
          {
            uint64_t v135 = swift_slowAlloc();
            v231[0] = swift_slowAlloc();
            *(_DWORD *)uint64_t v135 = 136315138;
            swift_bridgeObjectRetain();
            uint64_t v136 = Array.description.getter();
            unint64_t v138 = v137;
            swift_bridgeObjectRelease();
            *(void *)(v135 + 4) = _s2os32getNullTerminatedUTF8PointerImpl_21storingStringOwnersInSVSS_SpyypGSgztF_2(v136, v138, v231);
            uint64_t v130 = v179;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            _os_log_impl((void *)&_mh_execute_header, v133, v134, "[Management] pendingCollaborators=%s", (uint8_t *)v135, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            uint64_t v132 = v210;
            swift_slowDealloc();
          }
          else
          {
            swift_bridgeObjectRelease_n();
          }

          v177(v129, v128);
          v165 = v200;
          uint64_t v166 = v195;
          v132(v195, v130, v128);
          swift_bridgeObjectRetain();
          uint64_t v167 = Logger.logObject.getter();
          os_log_type_t v168 = static os_log_type_t.debug.getter();
          if (os_log_type_enabled(v167, v168))
          {
            uint64_t v169 = swift_slowAlloc();
            v231[0] = swift_slowAlloc();
            *(_DWORD *)uint64_t v169 = 136315138;
            swift_bridgeObjectRetain();
            uint64_t v170 = Array.description.getter();
            uint64_t v171 = v166;
            unint64_t v173 = v172;
            swift_bridgeObjectRelease();
            *(void *)(v169 + 4) = _s2os32getNullTerminatedUTF8PointerImpl_21storingStringOwnersInSVSS_SpyypGSgztF_2(v170, v173, v231);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            _os_log_impl((void *)&_mh_execute_header, v167, v168, "[Management] activeCollaborators=%s", (uint8_t *)v169, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            v177(v171, v128);
            v174 = v200;
          }
          else
          {

            swift_bridgeObjectRelease_n();
            v177(v166, v128);
            v174 = v165;
          }
          ((void (*)(char *, uint64_t))v176)(v174, v207);
          (*(void (**)(char *, uint64_t))(v225 + 8))(v202, v224);
          (*(void (**)(char *, uint64_t))(v227 + 8))(v208, v228);
          outlined destroy of TaskPriority?((uint64_t)v180, &_s8MusicKit8PlaylistV0aB8InternalE13CollaborationVSgMD_0);
          uint64_t v93 = v229;
          return outlined destroy of TaskPriority?(v93, &demangling cache variable for type metadata for MusicLibrarySection<Playlist, Playlist.Collaborator>?);
        }
        swift_beginAccess();
        uint64_t v97 = swift_weakLoadStrong();
        uint64_t v98 = v189;
        uint64_t v99 = (uint64_t)v188;
        uint64_t v100 = v187;
        uint64_t v101 = (uint64_t)v186;
        if (v97)
        {
          swift_getKeyPath();
          swift_getKeyPath();
          uint64_t v102 = v184;
          static Published.subscript.getter();
          swift_release();
          swift_release();
          swift_release();
          uint64_t v103 = (uint64_t)v183;
          Playlist.collaboration.getter();
          (*(void (**)(char *, uint64_t))(v193 + 8))(v102, v194);
          uint64_t v104 = v224;
          if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v211)(v103, 1, v224) != 1)
          {
            Playlist.Collaboration.invitationExpirationDate.getter();
            (*(void (**)(uint64_t, uint64_t))(v225 + 8))(v103, v104);
LABEL_39:
            uint64_t v105 = v190;
            Playlist.Collaboration.invitationExpirationDate.getter();
            uint64_t v106 = v99 + *(int *)(v185 + 48);
            outlined init with copy of (String, Any)(v101, v99, &_s10Foundation4DateVSgMD_0);
            outlined init with copy of (String, Any)(v105, v106, &_s10Foundation4DateVSgMD_0);
            uint64_t v107 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v100 + 48);
            if (v107(v99, 1, v98) == 1)
            {
              outlined destroy of TaskPriority?(v105, &_s10Foundation4DateVSgMD_0);
              outlined destroy of TaskPriority?(v101, &_s10Foundation4DateVSgMD_0);
              if (v107(v106, 1, v98) == 1)
              {
                outlined destroy of TaskPriority?(v99, &_s10Foundation4DateVSgMD_0);
                uint64_t v96 = (uint64_t)v221;
                goto LABEL_48;
              }
            }
            else
            {
              uint64_t v108 = v182;
              outlined init with copy of (String, Any)(v99, v182, &_s10Foundation4DateVSgMD_0);
              if (v107(v106, 1, v98) != 1)
              {
                uint64_t v109 = v181;
                (*(void (**)(char *, uint64_t, uint64_t))(v100 + 32))(v181, v106, v98);
                lazy protocol witness table accessor for type Collaboration.Management.Model and conformance Collaboration.Management.Model(&lazy protocol witness table cache variable for type Date and conformance Date, (void (*)(uint64_t))&type metadata accessor for Date);
                LODWORD(v212) = dispatch thunk of static Equatable.== infix(_:_:)();
                uint64_t v110 = *(void (**)(char *, uint64_t))(v100 + 8);
                v110(v109, v98);
                outlined destroy of TaskPriority?(v190, &_s10Foundation4DateVSgMD_0);
                outlined destroy of TaskPriority?(v101, &_s10Foundation4DateVSgMD_0);
                v110((char *)v108, v98);
                outlined destroy of TaskPriority?(v99, &_s10Foundation4DateVSgMD_0);
                uint64_t v96 = (uint64_t)v221;
                if (v212) {
                  goto LABEL_48;
                }
LABEL_46:
                swift_beginAccess();
                if (swift_weakLoadStrong())
                {
                  swift_getKeyPath();
                  swift_getKeyPath();
                  LOBYTE(v232) = 0;
                  static Published.subscript.setter();
                }
                goto LABEL_48;
              }
              outlined destroy of TaskPriority?(v190, &_s10Foundation4DateVSgMD_0);
              outlined destroy of TaskPriority?(v101, &_s10Foundation4DateVSgMD_0);
              (*(void (**)(uint64_t, uint64_t))(v100 + 8))(v108, v98);
            }
            outlined destroy of TaskPriority?(v99, &demangling cache variable for type metadata for (Date?, Date?));
            uint64_t v96 = (uint64_t)v221;
            goto LABEL_46;
          }
          outlined destroy of TaskPriority?(v103, &_s8MusicKit8PlaylistV0aB8InternalE13CollaborationVSgMD_0);
        }
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v100 + 56))(v101, 1, 1, v98);
        goto LABEL_39;
      }
    }
  }
  return result;
}

uint64_t Collaboration.Management.Model.pendingCollaborators.getter()
{
  return Player.nowPlaying.getter();
}

uint64_t Collaboration.Management.Model.activeCollaborators.getter()
{
  return Player.nowPlaying.getter();
}

uint64_t Collaboration.Management.Model.transientCollaborators.getter()
{
  return Player.nowPlaying.getter();
}

uint64_t Collaboration.Management.Model.playlist.getter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();

  return swift_release();
}

uint64_t Collaboration.Management.Model.isOpen.getter()
{
  return Player.isHostingSharePlayTogetherSession.getter();
}

uint64_t Collaboration.Management.Model.isResetingURL.getter()
{
  return Player.isHostingSharePlayTogetherSession.getter();
}

uint64_t Collaboration.Management.Model.shouldDismiss.getter()
{
  return Player.isHostingSharePlayTogetherSession.getter();
}

uint64_t Collaboration.Management.Model.hasNetworkConnectivity.getter()
{
  return Player.isHostingSharePlayTogetherSession.getter();
}

uint64_t key path getter for Collaboration.Management.Model.playlist : Collaboration.Management.Model()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();

  return swift_release();
}

uint64_t key path setter for Collaboration.Management.Model.playlist : Collaboration.Management.Model(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Playlist();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v10 - v6;
  uint64_t v8 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v8((char *)&v10 - v6, a1, v2);
  swift_getKeyPath();
  swift_getKeyPath();
  v8(v5, (uint64_t)v7, v2);
  swift_retain();
  static Published.subscript.setter();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v7, v2);
}

uint64_t Collaboration.Management.Model.isPending.getter()
{
  uint64_t v0 = type metadata accessor for Playlist.Collaborator.Status();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin();
  uint64_t v28 = (char *)&v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Playlist.Collaborator.Status?, Playlist.Collaborator.Status?));
  __chkstk_darwin();
  uint64_t v31 = (uint64_t)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Playlist();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&_s8MusicKit8PlaylistV0aB8InternalE13CollaborationVSgMD_0);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&_s8MusicKit8PlaylistV0aB8InternalE12CollaboratorV6StatusOSgMD_0);
  __chkstk_darwin();
  uint64_t v29 = (uint64_t)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v12 = (char *)&v27 - v11;
  __chkstk_darwin();
  uint64_t v14 = (char *)&v27 - v13;
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  Playlist.collaboration.getter();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v15 = type metadata accessor for Playlist.Collaboration();
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v9, 1, v15) == 1)
  {
    outlined destroy of TaskPriority?((uint64_t)v9, &_s8MusicKit8PlaylistV0aB8InternalE13CollaborationVSgMD_0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v1 + 56))(v14, 1, 1, v0);
  }
  else
  {
    Playlist.Collaboration.collaboratorStatus.getter();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v9, v15);
  }
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v12, enum case for Playlist.Collaborator.Status.pending(_:), v0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v1 + 56))(v12, 0, 1, v0);
  uint64_t v17 = v31;
  uint64_t v18 = v31 + *(int *)(v30 + 48);
  uint64_t v19 = &_s8MusicKit8PlaylistV0aB8InternalE12CollaboratorV6StatusOSgMD_0;
  outlined init with copy of (String, Any)((uint64_t)v14, v31, &_s8MusicKit8PlaylistV0aB8InternalE12CollaboratorV6StatusOSgMD_0);
  outlined init with copy of (String, Any)((uint64_t)v12, v18, &_s8MusicKit8PlaylistV0aB8InternalE12CollaboratorV6StatusOSgMD_0);
  uint64_t v20 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 48);
  if (v20(v17, 1, v0) == 1)
  {
    outlined destroy of TaskPriority?((uint64_t)v12, &_s8MusicKit8PlaylistV0aB8InternalE12CollaboratorV6StatusOSgMD_0);
    outlined destroy of TaskPriority?((uint64_t)v14, &_s8MusicKit8PlaylistV0aB8InternalE12CollaboratorV6StatusOSgMD_0);
    if (v20(v18, 1, v0) == 1)
    {
      char v21 = -1;
    }
    else
    {
      uint64_t v19 = &demangling cache variable for type metadata for (Playlist.Collaborator.Status?, Playlist.Collaborator.Status?);
      char v21 = 0;
    }
  }
  else
  {
    uint64_t v22 = v29;
    outlined init with copy of (String, Any)(v17, v29, &_s8MusicKit8PlaylistV0aB8InternalE12CollaboratorV6StatusOSgMD_0);
    if (v20(v18, 1, v0) == 1)
    {
      outlined destroy of TaskPriority?((uint64_t)v12, &_s8MusicKit8PlaylistV0aB8InternalE12CollaboratorV6StatusOSgMD_0);
      outlined destroy of TaskPriority?((uint64_t)v14, &_s8MusicKit8PlaylistV0aB8InternalE12CollaboratorV6StatusOSgMD_0);
      (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v22, v0);
      char v21 = 0;
      uint64_t v19 = &demangling cache variable for type metadata for (Playlist.Collaborator.Status?, Playlist.Collaborator.Status?);
    }
    else
    {
      uint64_t v23 = v22;
      uint64_t v24 = v28;
      (*(void (**)(char *, uint64_t, uint64_t))(v1 + 32))(v28, v18, v0);
      lazy protocol witness table accessor for type Collaboration.Management.Model and conformance Collaboration.Management.Model(&lazy protocol witness table cache variable for type Playlist.Collaborator.Status and conformance Playlist.Collaborator.Status, (void (*)(uint64_t))&type metadata accessor for Playlist.Collaborator.Status);
      char v21 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v25 = *(void (**)(char *, uint64_t))(v1 + 8);
      v25(v24, v0);
      uint64_t v19 = &_s8MusicKit8PlaylistV0aB8InternalE12CollaboratorV6StatusOSgMD_0;
      outlined destroy of TaskPriority?((uint64_t)v12, &_s8MusicKit8PlaylistV0aB8InternalE12CollaboratorV6StatusOSgMD_0);
      outlined destroy of TaskPriority?((uint64_t)v14, &_s8MusicKit8PlaylistV0aB8InternalE12CollaboratorV6StatusOSgMD_0);
      v25((char *)v23, v0);
    }
  }
  outlined destroy of TaskPriority?(v17, v19);
  return v21 & 1;
}

uint64_t Collaboration.Management.Model.canShare.getter()
{
  uint64_t v0 = type metadata accessor for Playlist();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin();
  uint64_t v3 = &v6[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (v6[15] == 1 && (Collaboration.Management.Model.isInvitationURLExpired.getter() & 1) == 0) {
    return 1;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  char v4 = Playlist.isOwner.getter();
  (*(void (**)(unsigned char *, uint64_t))(v1 + 8))(v3, v0);
  if (v4 == 2) {
    return 0;
  }
  else {
    return v4 & 1;
  }
}

size_t Collaboration.Management.Model.collaborators.getter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (v1 == 1)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    specialized Array.append<A>(contentsOf:)(v1);
  }
  return v1;
}

uint64_t Collaboration.Management.Model.collaboratorsString.getter()
{
  type metadata accessor for Locale();
  __chkstk_darwin();
  uint64_t v0 = type metadata accessor for String.LocalizationValue();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin();
  uint64_t v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v16 - v4;
  type metadata accessor for String.LocalizationValue.StringInterpolation();
  __chkstk_darwin();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v6 = *(void *)(v17 + 16);
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v7 = *(void *)(v17 + 16);
  swift_bridgeObjectRelease();
  if (v7 == 1)
  {
    if (!v6) {
      return 0;
    }
    String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v8._countAndFlagsBits = 0;
    v8._object = (void *)0xE000000000000000;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v8);
    uint64_t v17 = v6;
    String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)();
    unint64_t v9 = 0xD000000000000012;
    unint64_t v10 = 0x8000000100475120;
  }
  else
  {
    String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v11._countAndFlagsBits = 0;
    v11._object = (void *)0xE000000000000000;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v11);
    uint64_t v17 = v7;
    String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)();
    if (v6)
    {
      v12._countAndFlagsBits = 0x2064656E696F6A20;
      v12._object = (void *)0xAC00000020A280E2;
      String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v12);
      uint64_t v17 = v6;
      String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)();
      unint64_t v9 = 0x676E69646E657020;
      unint64_t v10 = 0xE800000000000000;
    }
    else
    {
      unint64_t v10 = 0x8000000100475100;
      unint64_t v9 = 0xD000000000000011;
    }
  }
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v9);
  String.LocalizationValue.init(stringInterpolation:)();
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v3, v5, v0);
  if (one-time initialization token for module != -1) {
    swift_once();
  }
  id v14 = (id)static NSBundle.module;
  static Locale.current.getter();
  uint64_t v13 = String.init(localized:table:bundle:locale:comment:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v5, v0);
  return v13;
}

uint64_t Collaboration.Management.Model.isInvitationURLExpired.getter()
{
  uint64_t v0 = type metadata accessor for Playlist();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin();
  uint64_t v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&_s8MusicKit8PlaylistV0aB8InternalE13CollaborationVSgMD_0);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&_s10Foundation4DateVSgMD_0);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin();
  uint64_t v19 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  Swift::String v12 = (char *)&v19 - v11;
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  Playlist.collaboration.getter();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  uint64_t v13 = type metadata accessor for Playlist.Collaboration();
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v5, 1, v13) == 1)
  {
    outlined destroy of TaskPriority?((uint64_t)v5, &_s8MusicKit8PlaylistV0aB8InternalE13CollaborationVSgMD_0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
  }
  else
  {
    Playlist.Collaboration.invitationExpirationDate.getter();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v5, v13);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v12, v7, v8);
      uint64_t v16 = v19;
      Date.init()();
      char v15 = static Date.> infix(_:_:)();
      uint64_t v17 = *(void (**)(char *, uint64_t))(v9 + 8);
      v17(v16, v8);
      v17(v12, v8);
      return v15 & 1;
    }
  }
  outlined destroy of TaskPriority?((uint64_t)v7, &_s10Foundation4DateVSgMD_0);
  char v15 = 1;
  return v15 & 1;
}

uint64_t Collaboration.Management.Model.invitationExpirationString.getter()
{
  uint64_t v1 = v0;
  type metadata accessor for String.LocalizationValue.StringInterpolation();
  __chkstk_darwin();
  uint64_t v64 = (char *)&v62 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for Calendar();
  uint64_t v73 = *(void *)(v3 - 8);
  uint64_t v74 = v3;
  __chkstk_darwin();
  int v72 = (char *)&v62 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DateComponents();
  uint64_t v76 = *(void *)(v5 - 8);
  uint64_t v77 = v5;
  __chkstk_darwin();
  uint64_t v75 = (char *)&v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Locale();
  __chkstk_darwin();
  unint64_t v67 = (char *)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for String.LocalizationValue();
  uint64_t v69 = *(void *)(v8 - 8);
  uint64_t v70 = v8;
  __chkstk_darwin();
  uint64_t v66 = (char *)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v68 = (char *)&v62 - v10;
  uint64_t v11 = type metadata accessor for Playlist();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin();
  uint64_t v63 = (char *)&v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  unint64_t v65 = (char *)&v62 - v14;
  __chkstk_darwin();
  uint64_t v16 = (char *)&v62 - v15;
  __swift_instantiateConcreteTypeFromMangledName(&_s8MusicKit8PlaylistV0aB8InternalE13CollaborationVSgMD_0);
  __chkstk_darwin();
  uint64_t v18 = (char *)&v62 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&_s10Foundation4DateVSgMD_0);
  __chkstk_darwin();
  uint64_t v20 = (char *)&v62 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for Date();
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin();
  uint64_t v71 = (char *)&v62 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v80 = (char *)&v62 - v24;
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v79 = v1;
  static Published.subscript.getter();
  swift_release();
  swift_release();
  Playlist.collaboration.getter();
  uint64_t v25 = *(void (**)(char *, uint64_t))(v12 + 8);
  uint64_t v78 = v11;
  v25(v16, v11);
  uint64_t v26 = type metadata accessor for Playlist.Collaboration();
  uint64_t v27 = *(void *)(v26 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v18, 1, v26) == 1)
  {
    outlined destroy of TaskPriority?((uint64_t)v18, &_s8MusicKit8PlaylistV0aB8InternalE13CollaborationVSgMD_0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56))(v20, 1, 1, v21);
LABEL_4:
    outlined destroy of TaskPriority?((uint64_t)v20, &_s10Foundation4DateVSgMD_0);
    return 0;
  }
  Playlist.Collaboration.invitationExpirationDate.getter();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v18, v26);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21) == 1) {
    goto LABEL_4;
  }
  uint64_t v30 = v21;
  uint64_t v31 = *(void (**)(char *, char *))(v22 + 32);
  uint64_t v32 = v80;
  uint64_t v62 = v30;
  v31(v80, v20);
  if ((Collaboration.Management.Model.isInvitationURLExpired.getter() & 1) == 0) {
    goto LABEL_9;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v33 = v65;
  static Published.subscript.getter();
  swift_release();
  swift_release();
  char v34 = Playlist.isOwner.getter();
  v25(v33, v78);
  if (v34)
  {
    uint64_t v55 = v68;
    String.LocalizationValue.init(stringLiteral:)();
    uint64_t v57 = v69;
    uint64_t v56 = v70;
    (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v66, v55, v70);
    if (one-time initialization token for module != -1) {
      swift_once();
    }
    id v58 = (id)static NSBundle.module;
    static Locale.current.getter();
    uint64_t v28 = String.init(localized:table:bundle:locale:comment:)();
    (*(void (**)(char *, uint64_t))(v57 + 8))(v55, v56);
    (*(void (**)(char *, uint64_t))(v22 + 8))(v80, v62);
  }
  else
  {
LABEL_9:
    uint64_t v35 = v25;
    uint64_t v36 = v72;
    static Calendar.autoupdatingCurrent.getter();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Calendar.Component>);
    uint64_t v37 = type metadata accessor for Calendar.Component();
    uint64_t v38 = *(void *)(v37 - 8);
    unint64_t v39 = (*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
    uint64_t v40 = swift_allocObject();
    *(_OWORD *)(v40 + 16) = xmmword_100493400;
    (*(void (**)(unint64_t, void, uint64_t))(v38 + 104))(v40 + v39, enum case for Calendar.Component.day(_:), v37);
    specialized Set.init(_nonEmptyArrayLiteral:)(v40);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    uint64_t v41 = v71;
    Date.init()();
    uint64_t v42 = v75;
    Calendar.dateComponents(_:from:to:)();
    swift_bridgeObjectRelease();
    uint64_t v43 = *(void (**)(char *, uint64_t))(v22 + 8);
    uint64_t v44 = v62;
    v43(v41, v62);
    (*(void (**)(char *, uint64_t))(v73 + 8))(v36, v74);
    uint64_t v45 = DateComponents.day.getter();
    if (v46)
    {
      (*(void (**)(char *, uint64_t))(v76 + 8))(v42, v77);
      v43(v32, v44);
      return 0;
    }
    uint64_t v47 = v45;
    swift_getKeyPath();
    swift_getKeyPath();
    char v48 = v63;
    static Published.subscript.getter();
    swift_release();
    swift_release();
    char v49 = Playlist.isOwner.getter();
    v35(v48, v78);
    uint64_t v50 = v69;
    uint64_t v51 = (void (**)(char *, char *, uint64_t))(v69 + 16);
    String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v52._object = (void *)0x8000000100475000;
    v52._countAndFlagsBits = 0xD000000000000010;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v52);
    uint64_t v81 = v47;
    String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)();
    if (v49)
    {
      unint64_t v53 = 0xD00000000000006CLL;
      unint64_t v54 = 0x8000000100475020;
    }
    else
    {
      unint64_t v53 = 0x2E29732879616420;
      unint64_t v54 = 0xE800000000000000;
    }
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v53);
    uint64_t v59 = v68;
    String.LocalizationValue.init(stringInterpolation:)();
    uint64_t v60 = v70;
    (*v51)(v66, v59, v70);
    if (one-time initialization token for module != -1) {
      swift_once();
    }
    id v61 = (id)static NSBundle.module;
    static Locale.current.getter();
    uint64_t v28 = String.init(localized:table:bundle:locale:comment:)();
    (*(void (**)(char *, uint64_t))(v50 + 8))(v59, v60);
    (*(void (**)(char *, uint64_t))(v76 + 8))(v42, v77);
    v43(v80, v62);
  }
  return v28;
}

uint64_t Collaboration.Management.Model.collaborationURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for Playlist();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&_s8MusicKit8PlaylistV0aB8InternalE13CollaborationVSgMD_0);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (Collaboration.Management.Model.isInvitationURLExpired.getter())
  {
    uint64_t v8 = type metadata accessor for URL();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56);
    return v9(a1, 1, 1, v8);
  }
  else
  {
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    Playlist.collaboration.getter();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    uint64_t v11 = type metadata accessor for Playlist.Collaboration();
    uint64_t v12 = *(void *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v7, 1, v11) == 1)
    {
      outlined destroy of TaskPriority?((uint64_t)v7, &_s8MusicKit8PlaylistV0aB8InternalE13CollaborationVSgMD_0);
      uint64_t v13 = type metadata accessor for URL();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(a1, 1, 1, v13);
    }
    else
    {
      Playlist.Collaboration.invitationURL.getter();
      return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v7, v11);
    }
  }
}

uint64_t Collaboration.Management.Model.artworkViewModel.getter@<X0>(char *a1@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ArtworkImage.ViewModel??);
  __chkstk_darwin();
  uint64_t v4 = &v11[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin();
  uint64_t v6 = &v11[-v5];
  uint64_t v7 = v1
     + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model____lazy_storage___artworkViewModel;
  swift_beginAccess();
  outlined init with copy of (String, Any)(v7, (uint64_t)v6, &demangling cache variable for type metadata for ArtworkImage.ViewModel??);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ArtworkImage.ViewModel?);
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) != 1) {
    return outlined init with take of PresentationSource?((uint64_t)v6, (uint64_t)a1, (uint64_t *)&demangling cache variable for type metadata for ArtworkImage.ViewModel?);
  }
  outlined destroy of TaskPriority?((uint64_t)v6, &demangling cache variable for type metadata for ArtworkImage.ViewModel??);
  closure #1 in Collaboration.Management.Model.artworkViewModel.getter(a1);
  outlined init with copy of (String, Any)((uint64_t)a1, (uint64_t)v4, (uint64_t *)&demangling cache variable for type metadata for ArtworkImage.ViewModel?);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v9 + 56))(v4, 0, 1, v8);
  swift_beginAccess();
  outlined assign with take of Album?((uint64_t)v4, v7, &demangling cache variable for type metadata for ArtworkImage.ViewModel??);
  return swift_endAccess();
}

uint64_t closure #1 in Collaboration.Management.Model.artworkViewModel.getter@<X0>(char *a1@<X8>)
{
  uint64_t v24 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&_s8MusicKit7ArtworkV0aB8InternalE9CropStyleVSgMD_0);
  __chkstk_darwin();
  uint64_t v23 = (char *)&v21 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
  __chkstk_darwin();
  uint64_t v3 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Playlist();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Artwork();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin();
  uint64_t v22 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v12 = (char *)&v21 - v11;
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  Playlist.artwork.getter();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v3, 1, v8) == 1)
  {
    outlined destroy of TaskPriority?((uint64_t)v3, (uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
    uint64_t v13 = type metadata accessor for ArtworkImage.ViewModel(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v24, 1, 1, v13);
  }
  else
  {
    uint64_t v15 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
    v15(v12, v3, v8);
    uint64_t v16 = v22;
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v22, v12, v8);
    uint64_t v17 = (uint64_t)v23;
    static Artwork.CropStyle.boundedBox.getter();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    uint64_t v18 = type metadata accessor for Artwork.CropStyle();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 0, 1, v18);
    uint64_t v19 = v24;
    v15(v24, v16, v8);
    uint64_t v20 = type metadata accessor for ArtworkImage.ViewModel(0);
    outlined init with take of PresentationSource?(v17, (uint64_t)&v19[*(int *)(v20 + 20)], &_s8MusicKit7ArtworkV0aB8InternalE9CropStyleVSgMD_0);
    return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v19, 0, 1, v20);
  }
}

uint64_t closure #1 in Collaboration.Management.Model.updateShareOption(isOpen:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(unsigned char *)(v5 + 80) = a5;
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a4;
  uint64_t v6 = type metadata accessor for Playlist();
  *(void *)(v5 + 32) = v6;
  *(void *)(v5 + 40) = *(void *)(v6 - 8);
  *(void *)(v5 + 48) = swift_task_alloc();
  return _swift_task_switch(closure #1 in Collaboration.Management.Model.updateShareOption(isOpen:), 0, 0);
}

uint64_t closure #1 in Collaboration.Management.Model.updateShareOption(isOpen:)()
{
  *(void *)(v0 + 56) = *(void *)(*(void *)(v0 + 24) + 16);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v1;
  void *v1 = v0;
  v1[1] = closure #1 in Collaboration.Management.Model.updateShareOption(isOpen:);
  uint64_t v2 = *(void *)(v0 + 48);
  char v3 = *(unsigned char *)(v0 + 80);
  return Collaboration.Manager.updateShareOption(_:for:)(v3, v2);
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v8;

  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 72) = v0;
  swift_task_dealloc();
  char v3 = v2[6];
  uint64_t v4 = v2[5];
  uint64_t v5 = v2[4];
  if (v0)
  {
    swift_release();
    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    uint64_t v6 = closure #1 in Collaboration.Management.Model.updateShareOption(isOpen:);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    swift_release();
    uint64_t v6 = closure #1 in Collaboration.Management.Model.updateShareOption(isOpen:);
  }
  return _swift_task_switch(v6, 0, 0);
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  **(unsigned char **)(v0 + 16) = *(void *)(v0 + 72) != 0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t Collaboration.Management.Model.end()()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&_sScPSgMD_2);
  __chkstk_darwin();
  char v3 = (char *)v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for TaskPriority();
  uint64_t v5 = *(void *)(v4 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
  uint64_t v6 = (void *)swift_allocObject();
  _OWORD v6[2] = 0;
  v6[3] = 0;
  v6[4] = v1;
  int v7 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4);
  swift_retain();
  if (v7 == 1)
  {
    outlined destroy of TaskPriority?((uint64_t)v3, &_sScPSgMD_2);
    uint64_t v8 = 0;
    uint64_t v9 = 0;
  }
  else
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v3, v4);
    if (v6[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v9 = v10;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v8 = 0;
      uint64_t v9 = 0;
    }
  }
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = &async function pointer to partial apply for closure #1 in Collaboration.Management.Model.end();
  *(void *)(v11 + 24) = v6;
  if (v9 | v8)
  {
    v13[0] = 0;
    v13[1] = 0;
    void v13[2] = v8;
    void v13[3] = v9;
  }
  swift_task_create();
  return swift_release();
}

uint64_t closure #1 in Collaboration.Management.Model.end()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a4;
  uint64_t v5 = type metadata accessor for Playlist();
  v4[3] = v5;
  v4[4] = *(void *)(v5 - 8);
  v4[5] = swift_task_alloc();
  void v4[6] = swift_task_alloc();
  return _swift_task_switch(closure #1 in Collaboration.Management.Model.end(), 0, 0);
}

uint64_t closure #1 in Collaboration.Management.Model.end()()
{
  v0[7] = *(void *)(v0[2] + 16);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[8] = v1;
  void *v1 = v0;
  v1[1] = closure #1 in Collaboration.Management.Model.end();
  uint64_t v3 = v0[5];
  uint64_t v2 = v0[6];
  return Collaboration.Manager.end(_:)(v2, v3);
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t (*v3)();
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v11;

  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    (*(void (**)(void, void))(v2[4] + 8))(v2[5], v2[3]);
    swift_release();
    uint64_t v3 = closure #1 in Collaboration.Management.Model.end();
  }
  else
  {
    uint64_t v5 = v2[5];
    uint64_t v4 = v2[6];
    uint64_t v8 = v2 + 3;
    uint64_t v6 = v2[3];
    uint64_t v7 = v8[1];
    swift_release();
    uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
    v9(v5, v6);
    v9(v4, v6);
    uint64_t v3 = closure #1 in Collaboration.Management.Model.end();
  }
  return _swift_task_switch(v3, 0, 0);
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v0[10] = *(void *)(v0[2] + 16);
  type metadata accessor for MainActor();
  swift_retain();
  v0[11] = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(closure #1 in Collaboration.Management.Model.end(), v2, v1);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;

  uint64_t v1 = *(void *)(v0 + 72);
  swift_release();
  Collaboration.Manager.handleError(_:)(v1);
  swift_release();
  return _swift_task_switch(closure #1 in Collaboration.Management.Model.end(), 0, 0);
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t closure #1 in Collaboration.Management.Model.resetInvitationURL()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a4;
  uint64_t v5 = type metadata accessor for Playlist();
  v4[3] = v5;
  v4[4] = *(void *)(v5 - 8);
  v4[5] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for URL();
  void v4[6] = v6;
  v4[7] = *(void *)(v6 - 8);
  v4[8] = swift_task_alloc();
  return _swift_task_switch(closure #1 in Collaboration.Management.Model.resetInvitationURL(), 0, 0);
}

uint64_t closure #1 in Collaboration.Management.Model.resetInvitationURL()()
{
  v0[9] = *(void *)(v0[2] + 16);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[10] = v1;
  void *v1 = v0;
  v1[1] = closure #1 in Collaboration.Management.Model.resetInvitationURL();
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[5];
  return Collaboration.Manager.resetInvitationURL(_:)(v2, v3);
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t (*v3)();
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v12;

  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 88) = v0;
  swift_task_dealloc();
  if (v0)
  {
    (*(void (**)(void, void))(v2[4] + 8))(v2[5], v2[3]);
    swift_release();
    uint64_t v3 = closure #1 in Collaboration.Management.Model.resetInvitationURL();
  }
  else
  {
    uint64_t v5 = v2[7];
    uint64_t v4 = v2[8];
    uint64_t v7 = v2[5];
    uint64_t v6 = v2[6];
    uint64_t v10 = v2 + 3;
    uint64_t v8 = v2[3];
    uint64_t v9 = v10[1];
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    uint64_t v3 = closure #1 in Collaboration.Management.Model.resetInvitationURL();
  }
  return _swift_task_switch(v3, 0, 0);
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  uint64_t v1 = *(void *)(v0 + 16);
  swift_getKeyPath();
  swift_getKeyPath();
  *(unsigned char *)(v0 + 112) = 0;
  swift_retain();
  static Published.subscript.setter();
  *(void *)(v0 + 96) = *(void *)(v1 + 16);
  type metadata accessor for MainActor();
  swift_retain();
  *(void *)(v0 + 104) = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(closure #1 in Collaboration.Management.Model.resetInvitationURL(), v3, v2);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;

  uint64_t v1 = *(void *)(v0 + 88);
  swift_release();
  Collaboration.Manager.handleError(_:)(v1);
  swift_release();
  return _swift_task_switch(closure #1 in Collaboration.Management.Model.resetInvitationURL(), 0, 0);
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t Collaboration.Management.Model.remove(_:)(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&_sScPSgMD_2);
  __chkstk_darwin();
  uint64_t v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Playlist.Collaborator?);
  __chkstk_darwin();
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Playlist.Collaborator();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin();
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v12 = (char *)&v18 - v11;
  outlined init with copy of (String, Any)(a1, (uint64_t)v6, &demangling cache variable for type metadata for Playlist.Collaborator?);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    outlined destroy of TaskPriority?((uint64_t)v6, &demangling cache variable for type metadata for Playlist.Collaborator?);
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v13(v12, v6, v7);
    uint64_t v14 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v4, 1, 1, v14);
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v10, v12, v7);
    unint64_t v15 = (*(unsigned __int8 *)(v8 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v16 = (char *)swift_allocObject();
    *((void *)v16 + 2) = 0;
    *((void *)v16 + 3) = 0;
    *((void *)v16 + 4) = v1;
    v13(&v16[v15], v10, v7);
    swift_retain();
    _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5_1((uint64_t)v4, (uint64_t)&async function pointer to partial apply for closure #1 in Collaboration.Management.Model.remove(_:), (uint64_t)v16);
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v12, v7);
  }
  return result;
}

uint64_t closure #1 in Collaboration.Management.Model.remove(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[2] = a4;
  v5[3] = a5;
  uint64_t v6 = type metadata accessor for Playlist();
  _OWORD v5[4] = v6;
  uint64_t v5[5] = *(void *)(v6 - 8);
  v5[6] = swift_task_alloc();
  v5[7] = swift_task_alloc();
  return _swift_task_switch(closure #1 in Collaboration.Management.Model.remove(_:), 0, 0);
}

uint64_t closure #1 in Collaboration.Management.Model.remove(_:)()
{
  v0[8] = *(void *)(v0[2] + 16);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[9] = v1;
  void *v1 = v0;
  v1[1] = closure #1 in Collaboration.Management.Model.remove(_:);
  uint64_t v3 = v0[6];
  uint64_t v2 = v0[7];
  uint64_t v4 = v0[3];
  return Collaboration.Manager.remove(collaborator:in:)(v2, v4, v3);
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t (*v3)();
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v11;

  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    (*(void (**)(void, void))(v2[5] + 8))(v2[6], v2[4]);
    swift_release();
    uint64_t v3 = closure #1 in Collaboration.Management.Model.remove(_:);
  }
  else
  {
    uint64_t v5 = v2[6];
    uint64_t v4 = v2[7];
    uint64_t v8 = v2 + 4;
    uint64_t v6 = v2[4];
    uint64_t v7 = v8[1];
    swift_release();
    uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
    v9(v5, v6);
    v9(v4, v6);
    uint64_t v3 = closure #1 in Collaboration.Management.Model.remove(_:);
  }
  return _swift_task_switch(v3, 0, 0);
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v0[11] = *(void *)(v0[2] + 16);
  type metadata accessor for MainActor();
  swift_retain();
  v0[12] = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(closure #1 in Collaboration.Management.Model.remove(_:), v2, v1);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;

  uint64_t v1 = *(void *)(v0 + 80);
  swift_release();
  Collaboration.Manager.handleError(_:)(v1);
  swift_release();
  return _swift_task_switch(closure #1 in Collaboration.Management.Model.remove(_:), 0, 0);
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t Collaboration.Management.Model.moderateCollaborator(_:action:)(uint64_t a1, char a2)
{
  v17[0] = a1;
  int v19 = a2 & 1;
  __swift_instantiateConcreteTypeFromMangledName(&_sScPSgMD_2);
  __chkstk_darwin();
  uint64_t v18 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Playlist.Collaborator();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin();
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v9 = (char *)v17 - v8;
  uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v10(v7, a1, v4);
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v11 = (void (*)(unsigned char *, void))static Published.subscript.modify();
  specialized Set._Variant.insert(_:)((uint64_t)v9, v7);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v9, v4);
  v11(v20, 0);
  swift_release();
  swift_release();
  uint64_t v12 = type metadata accessor for TaskPriority();
  uint64_t v13 = (uint64_t)v18;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v18, 1, 1, v12);
  v10(v9, v17[0], v4);
  unint64_t v14 = (*(unsigned __int8 *)(v5 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = 0;
  *(void *)(v15 + 24) = 0;
  *(void *)(v15 + 32) = v17[1];
  *(unsigned char *)(v15 + 40) = v19;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v15 + v14, v9, v4);
  swift_retain();
  _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5_1(v13, (uint64_t)&async function pointer to partial apply for closure #1 in Collaboration.Management.Model.moderateCollaborator(_:action:), v15);
  return swift_release();
}

uint64_t closure #1 in Collaboration.Management.Model.moderateCollaborator(_:action:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  *(unsigned char *)(v6 + 136) = a5;
  *(void *)(v6 + 16) = a4;
  *(void *)(v6 + 24) = a6;
  uint64_t v7 = type metadata accessor for Playlist.Collaborator();
  *(void *)(v6 + 32) = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  *(void *)(v6 + 40) = v8;
  *(void *)(v6 + 48) = *(void *)(v8 + 64);
  *(void *)(v6 + 56) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&_sScPSgMD_2);
  *(void *)(v6 + 64) = swift_task_alloc();
  uint64_t v9 = type metadata accessor for Playlist();
  *(void *)(v6 + 72) = v9;
  *(void *)(v6 + 80) = *(void *)(v9 - 8);
  *(void *)(v6 + 88) = swift_task_alloc();
  return _swift_task_switch(closure #1 in Collaboration.Management.Model.moderateCollaborator(_:action:), 0, 0);
}

uint64_t closure #1 in Collaboration.Management.Model.moderateCollaborator(_:action:)()
{
  char v1 = *(unsigned char *)(v0 + 136);
  *(void *)(v0 + 96) = *(void *)(*(void *)(v0 + 16) + 16);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 104) = v2;
  *uint64_t v2 = v0;
  v2[1] = closure #1 in Collaboration.Management.Model.moderateCollaborator(_:action:);
  uint64_t v3 = *(void *)(v0 + 88);
  uint64_t v4 = *(void *)(v0 + 24);
  return Collaboration.Manager.moderate(_:collaborator:in:)(v1 & 1, v4, v3);
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);
  uint64_t v8;

  uint64_t v2 = *(void *)(*v1 + 88);
  uint64_t v3 = *(void *)(*v1 + 80);
  uint64_t v4 = *(void *)(*v1 + 72);
  uint64_t v5 = *v1;
  *(void *)(v5 + 112) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_release();
  if (v0)
  {
    return _swift_task_switch(closure #1 in Collaboration.Management.Model.moderateCollaborator(_:action:), 0, 0);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  uint64_t v2 = v0[7];
  char v1 = v0[8];
  uint64_t v3 = v0[5];
  uint64_t v4 = v0[3];
  uint64_t v5 = v0[4];
  uint64_t v6 = v0[2];
  uint64_t v7 = type metadata accessor for TaskPriority();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v1, 1, 1, v7);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v4, v5);
  type metadata accessor for MainActor();
  swift_retain();
  uint64_t v8 = static MainActor.shared.getter();
  uint64_t v9 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v10 = (char *)swift_allocObject();
  *((void *)v10 + 2) = v8;
  *((void *)v10 + 3) = &protocol witness table for MainActor;
  *((void *)v10 + 4) = v6;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 32))(&v10[v9], v2, v5);
  _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfC8MusicKit8PlaylistV0dE8InternalE12CollaboratorVSg_Tgm5(v1, (uint64_t)&async function pointer to partial apply for closure #1 in closure #1 in Collaboration.Management.Model.moderateCollaborator(_:action:), (uint64_t)v10);
  swift_release();
  v0[15] = *(void *)(v6 + 16);
  swift_retain();
  v0[16] = static MainActor.shared.getter();
  uint64_t v12 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(closure #1 in Collaboration.Management.Model.moderateCollaborator(_:action:), v12, v11);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;

  char v1 = *(void *)(v0 + 112);
  swift_release();
  Collaboration.Manager.handleError(_:)(v1);
  swift_release();
  return _swift_task_switch(closure #1 in Collaboration.Management.Model.moderateCollaborator(_:action:), 0, 0);
}

{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  char v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t closure #1 in closure #1 in Collaboration.Management.Model.moderateCollaborator(_:action:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[7] = a4;
  v5[8] = a5;
  v5[6] = a1;
  type metadata accessor for MainActor();
  v5[9] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(closure #1 in closure #1 in Collaboration.Management.Model.moderateCollaborator(_:action:), v7, v6);
}

uint64_t closure #1 in closure #1 in Collaboration.Management.Model.moderateCollaborator(_:action:)()
{
  uint64_t v1 = v0[8];
  uint64_t v2 = v0[6];
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v3 = (void (*)(void *, void))static Published.subscript.modify();
  specialized Set._Variant.remove(_:)(v1, v2);
  v3(v0 + 2, 0);
  swift_release();
  swift_release();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t Collaboration.Management.Model.deinit()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model__pendingCollaborators;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<[Playlist.Collaborator]>);
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model__activeCollaborators, v2);
  uint64_t v4 = v0 + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model__transientCollaborators;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Set<Playlist.Collaborator>>);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = v0 + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model__playlist;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Playlist>);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  uint64_t v8 = v0 + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model__isOpen;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&_s7Combine9PublishedVySbGMD_0);
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
  v10(v8, v9);
  v10(v0 + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model__isResetingURL, v9);
  v10(v0 + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model__shouldDismiss, v9);
  v10(v0 + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model__hasNetworkConnectivity, v9);
  outlined destroy of TaskPriority?(v0 + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model____lazy_storage___artworkViewModel, &demangling cache variable for type metadata for ArtworkImage.ViewModel??);
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t Collaboration.Management.Model.__deallocating_deinit()
{
  Collaboration.Management.Model.deinit();

  return swift_deallocClassInstance();
}

uint64_t protocol witness for ObservableObject.objectWillChange.getter in conformance Collaboration.Management.Model@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for Collaboration.Management.Model(0);
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

uint64_t Collaboration.Management.View.init(model:)@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = (int *)type metadata accessor for Collaboration.Management.View(0);
  uint64_t v3 = (uint64_t *)((char *)a1 + v2[5]);
  uint64_t *v3 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DismissAction>.Content);
  swift_storeEnumTagMultiPayload();
  uint64_t v4 = (uint64_t *)((char *)a1 + v2[6]);
  *uint64_t v4 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
  swift_storeEnumTagMultiPayload();
  uint64_t v5 = (uint64_t *)((char *)a1 + v2[7]);
  *uint64_t v5 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<OpenURLAction>.Content);
  swift_storeEnumTagMultiPayload();
  uint64_t v6 = v2[8];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIActivityViewController?);
  State.init(wrappedValue:)();
  *(_OWORD *)((char *)a1 + v6) = v13;
  uint64_t v7 = (char *)a1 + v2[9];
  State.init(wrappedValue:)();
  char *v7 = v13;
  *((void *)v7 + 1) = *((void *)&v13 + 1);
  uint64_t v8 = (char *)a1 + v2[10];
  State.init(wrappedValue:)();
  *uint64_t v8 = v13;
  *((void *)v8 + 1) = *((void *)&v13 + 1);
  uint64_t v9 = (char *)a1 + v2[11];
  State.init(wrappedValue:)();
  char *v9 = v13;
  *((void *)v9 + 1) = *((void *)&v13 + 1);
  uint64_t v10 = (char *)a1 + v2[12];
  State.init(wrappedValue:)();
  *uint64_t v10 = v13;
  *((void *)v10 + 1) = *((void *)&v13 + 1);
  type metadata accessor for Collaboration.Management.Model(0);
  lazy protocol witness table accessor for type Collaboration.Management.Model and conformance Collaboration.Management.Model(&lazy protocol witness table cache variable for type Collaboration.Management.Model and conformance Collaboration.Management.Model, (void (*)(uint64_t))type metadata accessor for Collaboration.Management.Model);
  uint64_t result = ObservedObject.init(wrappedValue:)();
  *a1 = result;
  a1[1] = v12;
  return result;
}

uint64_t property wrapper backing initializer of Collaboration.Management.View.shareSheet()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIActivityViewController?);
  State.init(wrappedValue:)();
  return v1;
}

uint64_t property wrapper backing initializer of Collaboration.Management.View.viewModel()
{
  type metadata accessor for Collaboration.Management.Model(0);
  lazy protocol witness table accessor for type Collaboration.Management.Model and conformance Collaboration.Management.Model(&lazy protocol witness table cache variable for type Collaboration.Management.Model and conformance Collaboration.Management.Model, (void (*)(uint64_t))type metadata accessor for Collaboration.Management.Model);

  return ObservedObject.init(wrappedValue:)();
}

uint64_t Collaboration.Management.View.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v24 = a1;
  uint64_t v21 = *(void *)(type metadata accessor for Collaboration.Management.View(0) - 8);
  uint64_t v3 = *(void *)(v21 + 64);
  __chkstk_darwin();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NavigationStack<NavigationPath, <<opaque return type of View.navigationBarItems<A>(trailing:)>>.0>);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v22 = v4;
  uint64_t v23 = v5;
  __chkstk_darwin();
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.navigationBarItems<A>(trailing:)>>.0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for <<opaque return type of View.listStyle<A>(_:)>>.0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for <<opaque return type of View.fontWeight(_:)>>.0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<List<Never, TupleView<(<<opaque return type of View.headerProminence(_:)>>.0, TupleView<(Section<Text, Collaboration.Management.View.CollaboratorRowView, EmptyView>, Section<EmptyView, <<opaque return type of View.alert(isPresented:content:)>>.0, EmptyView>?, Section<Text, ForEach<[Playlist.Collaborator], MusicItemID, Collaboration.Management.View.CollaboratorRowView>, EmptyView>)>?, Section<Text, HStack<Toggle<Text>>, _ConditionalContent<_ConditionalContent<Text, Text>, Text>>?)>>, _EnvironmentKeyWritingModifier<CGFloat>>);
  uint64_t v11 = type metadata accessor for InsetGroupedListStyle();
  unint64_t v12 = lazy protocol witness table accessor for type ModifiedContent<List<Never, TupleView<(<<opaque return type of View.headerProminence(_:)>>.0, TupleView<(Section<Text, Collaboration.Management.View.CollaboratorRowView, EmptyView>, Section<EmptyView, <<opaque return type of View.alert(isPresented:content:)>>.0, EmptyView>?, Section<Text, ForEach<[Playlist.Collaborator], MusicItemID, Collaboration.Management.View.CollaboratorRowView>, EmptyView>)>?, Section<Text, HStack<Toggle<Text>>, _ConditionalContent<_ConditionalContent<Text, Text>, Text>>?)>>, _EnvironmentKeyWritingModifier<CGFloat>> and conformance <> ModifiedContent<A, B>();
  uint64_t v26 = v10;
  uint64_t v27 = v11;
  unint64_t v28 = v12;
  uint64_t v29 = &protocol witness table for InsetGroupedListStyle;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&_s7SwiftUI6ButtonVyAA4TextVGMD_0);
  uint64_t v15 = lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&_s7SwiftUI6ButtonVyAA4TextVGACyxGAA4ViewAAWL_0, (uint64_t *)&_s7SwiftUI6ButtonVyAA4TextVGMD_0);
  uint64_t v26 = v14;
  uint64_t v27 = v15;
  uint64_t v16 = swift_getOpaqueTypeConformance2();
  uint64_t v26 = v8;
  uint64_t v27 = v9;
  unint64_t v28 = OpaqueTypeConformance2;
  uint64_t v29 = (void *)v16;
  swift_getOpaqueTypeConformance2();
  NavigationStack.init<>(root:)();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  outlined init with copy of Collaboration.Management.View(v2, (uint64_t)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for Collaboration.Management.View);
  unint64_t v17 = (*(unsigned __int8 *)(v21 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  uint64_t v18 = swift_allocObject();
  outlined init with take of Collaboration.Management.View((uint64_t)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v18 + v17, type metadata accessor for Collaboration.Management.View);
  lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>((unint64_t *)&lazy protocol witness table cache variable for type NavigationStack<NavigationPath, <<opaque return type of View.navigationBarItems<A>(trailing:)>>.0> and conformance NavigationStack<A, B>, &demangling cache variable for type metadata for NavigationStack<NavigationPath, <<opaque return type of View.navigationBarItems<A>(trailing:)>>.0>);
  uint64_t v19 = v22;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v7, v19);
}

uint64_t closure #1 in Collaboration.Management.View.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v62 = a2;
  uint64_t v54 = *(void *)(type metadata accessor for Collaboration.Management.View(0) - 8);
  __chkstk_darwin();
  uint64_t v55 = v3;
  uint64_t v57 = (uint64_t)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Locale();
  __chkstk_darwin();
  uint64_t v51 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = type metadata accessor for String.LocalizationValue();
  uint64_t v47 = *(void *)(v48 - 8);
  __chkstk_darwin();
  char v46 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v45 = (char *)&v44 - v6;
  uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&_s7SwiftUI6ButtonVyAA4TextVGMD_0);
  uint64_t v53 = *(void *)(v59 - 8);
  __chkstk_darwin();
  Swift::String v52 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.fontWeight(_:)>>.0);
  uint64_t v60 = *(void *)(v8 - 8);
  uint64_t v61 = v8;
  __chkstk_darwin();
  id v58 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for InsetGroupedListStyle();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin();
  long long v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for List<Never, TupleView<(<<opaque return type of View.headerProminence(_:)>>.0, TupleView<(Section<Text, Collaboration.Management.View.CollaboratorRowView, EmptyView>, Section<EmptyView, <<opaque return type of View.alert(isPresented:content:)>>.0, EmptyView>?, Section<Text, ForEach<[Playlist.Collaborator], MusicItemID, Collaboration.Management.View.CollaboratorRowView>, EmptyView>)>?, Section<Text, HStack<Toggle<Text>>, _ConditionalContent<_ConditionalContent<Text, Text>, Text>>?)>>);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin();
  unint64_t v17 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<List<Never, TupleView<(<<opaque return type of View.headerProminence(_:)>>.0, TupleView<(Section<Text, Collaboration.Management.View.CollaboratorRowView, EmptyView>, Section<EmptyView, <<opaque return type of View.alert(isPresented:content:)>>.0, EmptyView>?, Section<Text, ForEach<[Playlist.Collaborator], MusicItemID, Collaboration.Management.View.CollaboratorRowView>, EmptyView>)>?, Section<Text, HStack<Toggle<Text>>, _ConditionalContent<_ConditionalContent<Text, Text>, Text>>?)>>, _EnvironmentKeyWritingModifier<CGFloat>>);
  __chkstk_darwin();
  uint64_t v19 = (char *)&v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.listStyle<A>(_:)>>.0);
  uint64_t v49 = *(void *)(v50 - 8);
  __chkstk_darwin();
  uint64_t v21 = (char *)&v44 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = a1;
  uint64_t v64 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TupleView<(<<opaque return type of View.headerProminence(_:)>>.0, TupleView<(Section<Text, Collaboration.Management.View.CollaboratorRowView, EmptyView>, Section<EmptyView, <<opaque return type of View.alert(isPresented:content:)>>.0, EmptyView>?, Section<Text, ForEach<[Playlist.Collaborator], MusicItemID, Collaboration.Management.View.CollaboratorRowView>, EmptyView>)>?, Section<Text, HStack<Toggle<Text>>, _ConditionalContent<_ConditionalContent<Text, Text>, Text>>?)>);
  lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type TupleView<(<<opaque return type of View.headerProminence(_:)>>.0, TupleView<(Section<Text, Collaboration.Management.View.CollaboratorRowView, EmptyView>, Section<EmptyView, <<opaque return type of View.alert(isPresented:content:)>>.0, EmptyView>?, Section<Text, ForEach<[Playlist.Collaborator], MusicItemID, Collaboration.Management.View.CollaboratorRowView>, EmptyView>)>?, Section<Text, HStack<Toggle<Text>>, _ConditionalContent<_ConditionalContent<Text, Text>, Text>>?)> and conformance TupleView<A>, &demangling cache variable for type metadata for TupleView<(<<opaque return type of View.headerProminence(_:)>>.0, TupleView<(Section<Text, Collaboration.Management.View.CollaboratorRowView, EmptyView>, Section<EmptyView, <<opaque return type of View.alert(isPresented:content:)>>.0, EmptyView>?, Section<Text, ForEach<[Playlist.Collaborator], MusicItemID, Collaboration.Management.View.CollaboratorRowView>, EmptyView>)>?, Section<Text, HStack<Toggle<Text>>, _ConditionalContent<_ConditionalContent<Text, Text>, Text>>?)>);
  List<>.init(content:)();
  uint64_t KeyPath = swift_getKeyPath();
  if (one-time initialization token for cellHeight != -1) {
    swift_once();
  }
  uint64_t v23 = static Collaboration.Management.View.Specs.cellHeight;
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v19, v17, v14);
  uint64_t v24 = (uint64_t *)&v19[*(int *)(v63 + 36)];
  *uint64_t v24 = KeyPath;
  v24[1] = v23;
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  InsetGroupedListStyle.init()();
  unint64_t v25 = lazy protocol witness table accessor for type ModifiedContent<List<Never, TupleView<(<<opaque return type of View.headerProminence(_:)>>.0, TupleView<(Section<Text, Collaboration.Management.View.CollaboratorRowView, EmptyView>, Section<EmptyView, <<opaque return type of View.alert(isPresented:content:)>>.0, EmptyView>?, Section<Text, ForEach<[Playlist.Collaborator], MusicItemID, Collaboration.Management.View.CollaboratorRowView>, EmptyView>)>?, Section<Text, HStack<Toggle<Text>>, _ConditionalContent<_ConditionalContent<Text, Text>, Text>>?)>>, _EnvironmentKeyWritingModifier<CGFloat>> and conformance <> ModifiedContent<A, B>();
  View.listStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  outlined destroy of TaskPriority?((uint64_t)v19, &demangling cache variable for type metadata for ModifiedContent<List<Never, TupleView<(<<opaque return type of View.headerProminence(_:)>>.0, TupleView<(Section<Text, Collaboration.Management.View.CollaboratorRowView, EmptyView>, Section<EmptyView, <<opaque return type of View.alert(isPresented:content:)>>.0, EmptyView>?, Section<Text, ForEach<[Playlist.Collaborator], MusicItemID, Collaboration.Management.View.CollaboratorRowView>, EmptyView>)>?, Section<Text, HStack<Toggle<Text>>, _ConditionalContent<_ConditionalContent<Text, Text>, Text>>?)>>, _EnvironmentKeyWritingModifier<CGFloat>>);
  uint64_t v26 = v45;
  String.LocalizationValue.init(stringLiteral:)();
  uint64_t v27 = v47;
  uint64_t v28 = v48;
  (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v46, v26, v48);
  uint64_t v29 = v21;
  if (one-time initialization token for module != -1) {
    swift_once();
  }
  id v30 = (id)static NSBundle.module;
  static Locale.current.getter();
  uint64_t v31 = String.init(localized:table:bundle:locale:comment:)();
  uint64_t v33 = v32;
  (*(void (**)(char *, uint64_t))(v27 + 8))(v26, v28);
  uint64_t v65 = v31;
  uint64_t v66 = v33;
  uint64_t v34 = v57;
  outlined init with copy of Collaboration.Management.View(v56, v57, type metadata accessor for Collaboration.Management.View);
  unint64_t v35 = (*(unsigned __int8 *)(v54 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80);
  uint64_t v36 = swift_allocObject();
  outlined init with take of Collaboration.Management.View(v34, v36 + v35, type metadata accessor for Collaboration.Management.View);
  _sS2SSysWl_1();
  uint64_t v37 = v52;
  Button<>.init<A>(_:action:)();
  static Font.Weight.semibold.getter();
  uint64_t v38 = lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&_s7SwiftUI6ButtonVyAA4TextVGACyxGAA4ViewAAWL_0, (uint64_t *)&_s7SwiftUI6ButtonVyAA4TextVGMD_0);
  uint64_t v40 = v58;
  uint64_t v39 = v59;
  View.fontWeight(_:)();
  (*(void (**)(char *, uint64_t))(v53 + 8))(v37, v39);
  uint64_t v65 = v63;
  uint64_t v66 = v10;
  unint64_t v67 = v25;
  uint64_t v68 = &protocol witness table for InsetGroupedListStyle;
  swift_getOpaqueTypeConformance2();
  uint64_t v65 = v39;
  uint64_t v66 = v38;
  swift_getOpaqueTypeConformance2();
  uint64_t v41 = v61;
  uint64_t v42 = v50;
  View.navigationBarItems<A>(trailing:)();
  (*(void (**)(char *, uint64_t))(v60 + 8))(v40, v41);
  return (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v29, v42);
}

uint64_t closure #1 in closure #1 in Collaboration.Management.View.body.getter@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v136 = a2;
  uint64_t v133 = type metadata accessor for Playlist();
  uint64_t v132 = *(void *)(v133 - 8);
  __chkstk_darwin();
  uint64_t v131 = (char *)&v106 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Section<Text, HStack<Toggle<Text>>, _ConditionalContent<_ConditionalContent<Text, Text>, Text>>?);
  __chkstk_darwin();
  uint64_t v135 = (uint64_t)&v106 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  os_log_type_t v134 = (char *)&v106 - v5;
  uint64_t v109 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Section<Text, ForEach<[Playlist.Collaborator], MusicItemID, Collaboration.Management.View.CollaboratorRowView>, EmptyView>);
  uint64_t v108 = *(void *)(v109 - 8);
  __chkstk_darwin();
  uint64_t v117 = (char *)&v106 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v115 = (char *)&v106 - v7;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Section<EmptyView, <<opaque return type of View.alert(isPresented:content:)>>.0, EmptyView>?);
  __chkstk_darwin();
  uint64_t v116 = (uint64_t)&v106 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v114 = (uint64_t)&v106 - v9;
  type metadata accessor for Locale();
  __chkstk_darwin();
  uint64_t v119 = (char *)&v106 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v129 = type metadata accessor for String.LocalizationValue();
  uint64_t v138 = *(void *)(v129 - 8);
  __chkstk_darwin();
  uint64_t v124 = (char *)&v106 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v118 = (char *)&v106 - v12;
  uint64_t v123 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Section<Text, Collaboration.Management.View.CollaboratorRowView, EmptyView>);
  uint64_t v113 = *(void *)(v123 - 8);
  __chkstk_darwin();
  uint64_t v112 = (char *)&v106 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v107 = (char *)&v106 - v14;
  __chkstk_darwin();
  uint64_t v120 = (char *)&v106 - v15;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Playlist.Collaborator?);
  __chkstk_darwin();
  uint64_t v110 = (char *)&v106 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v122 = type metadata accessor for Playlist.Collaborator();
  uint64_t v121 = *(void *)(v122 - 8);
  __chkstk_darwin();
  uint64_t v111 = (char *)&v106 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TupleView<(Section<Text, Collaboration.Management.View.CollaboratorRowView, EmptyView>, Section<EmptyView, <<opaque return type of View.alert(isPresented:content:)>>.0, EmptyView>?, Section<Text, ForEach<[Playlist.Collaborator], MusicItemID, Collaboration.Management.View.CollaboratorRowView>, EmptyView>)>?);
  __chkstk_darwin();
  unint64_t v137 = (char *)&v106 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v142 = (uint64_t)&v106 - v19;
  uint64_t v143 = type metadata accessor for Prominence();
  uint64_t v139 = *(void (***)(char *, uint64_t))(v143 - 8);
  __chkstk_darwin();
  uint64_t v21 = (char *)&v106 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v126 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.fullScreenCover<A>(isPresented:onDismiss:content:)>>.0);
  __chkstk_darwin();
  uint64_t v127 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Section<<<opaque return type of View.fullScreenCover<A>(isPresented:onDismiss:content:)>>.0, TupleView<(<<opaque return type of View.accessibilityElement(children:)>>.0, ForEach<[Playlist.Collaborator], MusicItemID, Collaboration.Management.View.CollaboratorRowView>)>?, EmptyView>);
  uint64_t v128 = *(void *)(v127 - 8);
  __chkstk_darwin();
  uint64_t v23 = (char *)&v106 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.headerProminence(_:)>>.0);
  uint64_t v140 = *(void *)(v24 - 8);
  uint64_t v141 = v24;
  __chkstk_darwin();
  uint64_t v130 = (char *)&v106 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v27 = (char *)&v106 - v26;
  __chkstk_darwin();
  uint64_t v29 = (void (**)(char *, uint64_t))((char *)&v106 - v28);
  uint64_t v144 = a1;
  closure #2 in closure #1 in closure #1 in Collaboration.Management.View.body.getter(a1);
  uint64_t v125 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TupleView<(<<opaque return type of View.accessibilityElement(children:)>>.0, ForEach<[Playlist.Collaborator], MusicItemID, Collaboration.Management.View.CollaboratorRowView>)>?);
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, CornerRadiusModifier>, BorderViewModifier>, _ShadowEffect>, Text, TupleView<(ModifiedContent<ModifiedContent<HStack<TupleView<(<<opaque return type of View.sheet<A>(isPresented:onDismiss:content:)>>.0, ModifiedContent<ModifiedContent<Collaboration.Management.View.Share.Button, _EnvironmentKeyTransformModifier<Bool>>, _TransactionModifier>?)>>, _FixedSizeLayout>, _PaddingLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Group<_ConditionalContent<HStack<TupleView<(ProgressView<EmptyView, EmptyView>, Text)>>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<OpenURLAction>>>?>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Int?>>, _FixedSizeLayout>, _For);
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Collaboration.Management.QRCodeView, _SafeAreaRegionsIgnoringLayout>, _BackgroundModifier<ClearBackground>>?);
  unint64_t v32 = lazy protocol witness table accessor for type ModifiedContent<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, CornerRadiusModifier>, BorderViewModifier>, _ShadowEffect>, Text, TupleView<(ModifiedContent<ModifiedContent<HStack<TupleView<(<<opaque return type of View.sheet<A>(isPresented:onDismiss:content:)>>.0, ModifiedContent<ModifiedContent<Collaboration.Management.View.Share.Button, _EnvironmentKeyTransformModifier<Bool>>, _TransactionModifier>?)>>, _FixedSizeLayout>, _PaddingLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Group<_ConditionalContent<HStack<TupleView<(ProgressView<EmptyView, EmptyView>, Text)>>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<OpenURLAction>>>?>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Int?>>, _FixedSizeLayout>, _Foreg();
  uint64_t v33 = lazy protocol witness table accessor for type ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>? and conformance <A> A?(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Collaboration.Management.QRCodeView, _SafeAreaRegionsIgnoringLayout>, _BackgroundModifier<ClearBackground>>? and conformance <A> A?, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Collaboration.Management.QRCodeView, _SafeAreaRegionsIgnoringLayout>, _BackgroundModifier<ClearBackground>>?, (void (*)(void))lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Collaboration.Management.QRCodeView, _SafeAreaRegionsIgnoringLayout>, _BackgroundModifier<ClearBackground>> and conformance <> ModifiedContent<A, B>);
  uint64_t v145 = v30;
  uint64_t v146 = v31;
  uint64_t v34 = a1;
  unint64_t v147 = v32;
  uint64_t v148 = v33;
  swift_getOpaqueTypeConformance2();
  lazy protocol witness table accessor for type TupleView<(<<opaque return type of View.accessibilityElement(children:)>>.0, ForEach<[Playlist.Collaborator], MusicItemID, Collaboration.Management.View.CollaboratorRowView>)>? and conformance <A> A?();
  Section<>.init(header:content:)();
  unint64_t v35 = v139;
  uint64_t v36 = v143;
  ((void (*)(char *, void, uint64_t))v139[13])(v21, enum case for Prominence.increased(_:), v143);
  lazy protocol witness table accessor for type Section<<<opaque return type of View.fullScreenCover<A>(isPresented:onDismiss:content:)>>.0, TupleView<(<<opaque return type of View.accessibilityElement(children:)>>.0, ForEach<[Playlist.Collaborator], MusicItemID, Collaboration.Management.View.CollaboratorRowView>)>?, EmptyView> and conformance <> Section<A, B, C>();
  uint64_t v37 = v127;
  View.headerProminence(_:)();
  v35[1](v21, v36);
  (*(void (**)(char *, uint64_t))(v128 + 8))(v23, v37);
  uint64_t v38 = *(void (**)(void (**)(char *, uint64_t), char *, uint64_t))(v140 + 32);
  uint64_t v139 = v29;
  uint64_t v39 = v27;
  uint64_t v40 = v138;
  v38(v29, v39, v141);
  uint64_t v143 = v34;
  if ((Collaboration.Management.Model.isPending.getter() & 1) == 0) {
    goto LABEL_7;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (*(void *)(v145 + 16))
  {
    uint64_t v41 = v121;
    uint64_t v42 = (uint64_t)v110;
    uint64_t v43 = v122;
    (*(void (**)(char *, unint64_t, uint64_t))(v121 + 16))(v110, v145 + ((*(unsigned __int8 *)(v121 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v121 + 80)), v122);
    uint64_t v44 = 0;
    uint64_t v45 = v124;
  }
  else
  {
    uint64_t v44 = 1;
    uint64_t v45 = v124;
    uint64_t v43 = v122;
    uint64_t v41 = v121;
    uint64_t v42 = (uint64_t)v110;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v41 + 56))(v42, v44, 1, v43);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v41 + 48))(v42, 1, v43) == 1)
  {
    outlined destroy of TaskPriority?(v42, &demangling cache variable for type metadata for Playlist.Collaborator?);
LABEL_7:
    uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TupleView<(Section<Text, Collaboration.Management.View.CollaboratorRowView, EmptyView>, Section<EmptyView, <<opaque return type of View.alert(isPresented:content:)>>.0, EmptyView>?, Section<Text, ForEach<[Playlist.Collaborator], MusicItemID, Collaboration.Management.View.CollaboratorRowView>, EmptyView>)>);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v142, 1, 1, v46);
    goto LABEL_14;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v41 + 32))(v111, v42, v43);
  __chkstk_darwin();
  uint64_t v47 = v118;
  String.LocalizationValue.init(stringLiteral:)();
  (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v45, v47, v129);
  if (one-time initialization token for module != -1) {
    swift_once();
  }
  id v48 = (id)static NSBundle.module;
  static Locale.current.getter();
  uint64_t v49 = String.init(localized:table:bundle:locale:comment:)();
  uint64_t v51 = v50;
  (*(void (**)(char *, uint64_t))(v40 + 8))(v47, v129);
  uint64_t v145 = v49;
  uint64_t v146 = v51;
  _sS2SSysWl_1();
  uint64_t v145 = Text.init<A>(_:)();
  uint64_t v146 = v52;
  LOBYTE(v147) = v53 & 1;
  uint64_t v148 = v54;
  type metadata accessor for Collaboration.Management.View.CollaboratorRowView(0);
  lazy protocol witness table accessor for type Collaboration.Management.Model and conformance Collaboration.Management.Model(&lazy protocol witness table cache variable for type Collaboration.Management.View.CollaboratorRowView and conformance Collaboration.Management.View.CollaboratorRowView, (void (*)(uint64_t))type metadata accessor for Collaboration.Management.View.CollaboratorRowView);
  uint64_t v55 = v107;
  Section<>.init(header:content:)();
  (*(void (**)(char *, char *, uint64_t))(v113 + 32))(v120, v55, v123);
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (v145 == 1)
  {
    __chkstk_darwin();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.alert(isPresented:content:)>>.0);
    uint64_t v56 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for <<opaque return type of View.buttonStyle<A>(_:)>>.0);
    uint64_t v57 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Button<ModifiedContent<ModifiedContent<Text, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>>);
    uint64_t v58 = type metadata accessor for BorderlessButtonStyle();
    uint64_t v59 = lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type Button<ModifiedContent<ModifiedContent<Text, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>> and conformance Button<A>, &demangling cache variable for type metadata for Button<ModifiedContent<ModifiedContent<Text, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>>);
    uint64_t v60 = lazy protocol witness table accessor for type Collaboration.Management.Model and conformance Collaboration.Management.Model(&lazy protocol witness table cache variable for type BorderlessButtonStyle and conformance BorderlessButtonStyle, (void (*)(uint64_t))&type metadata accessor for BorderlessButtonStyle);
    uint64_t v145 = v57;
    uint64_t v146 = v58;
    unint64_t v147 = v59;
    uint64_t v148 = v60;
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    uint64_t v145 = v56;
    uint64_t v146 = OpaqueTypeConformance2;
    swift_getOpaqueTypeConformance2();
    uint64_t v62 = v114;
    Section<>.init(content:)();
    uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Section<EmptyView, <<opaque return type of View.alert(isPresented:content:)>>.0, EmptyView>);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v63 - 8) + 56))(v62, 0, 1, v63);
  }
  else
  {
    uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Section<EmptyView, <<opaque return type of View.alert(isPresented:content:)>>.0, EmptyView>);
    uint64_t v62 = v114;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v64 - 8) + 56))(v114, 1, 1, v64);
  }
  __chkstk_darwin();
  closure #7 in closure #1 in closure #1 in Collaboration.Management.View.body.getter((uint64_t)&v145);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ForEach<[Playlist.Collaborator], MusicItemID, Collaboration.Management.View.CollaboratorRowView>);
  lazy protocol witness table accessor for type ForEach<[Playlist.Collaborator], MusicItemID, Collaboration.Management.View.CollaboratorRowView> and conformance <> ForEach<A, B, C>();
  uint64_t v65 = v115;
  Section<>.init(header:content:)();
  uint64_t v66 = v113;
  unint64_t v67 = *(void (**)(char *, char *, uint64_t))(v113 + 16);
  uint64_t v68 = v112;
  uint64_t v69 = v123;
  v67(v112, v120, v123);
  outlined init with copy of (String, Any)(v62, v116, &demangling cache variable for type metadata for Section<EmptyView, <<opaque return type of View.alert(isPresented:content:)>>.0, EmptyView>?);
  uint64_t v70 = v108;
  uint64_t v71 = *(void (**)(char *, char *, uint64_t))(v108 + 16);
  uint64_t v72 = v109;
  v71(v117, v65, v109);
  uint64_t v73 = (uint64_t)v137;
  v67(v137, v68, v69);
  uint64_t v74 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Section<Text, Collaboration.Management.View.CollaboratorRowView, EmptyView>, Section<EmptyView, <<opaque return type of View.alert(isPresented:content:)>>.0, EmptyView>?, Section<Text, ForEach<[Playlist.Collaborator], MusicItemID, Collaboration.Management.View.CollaboratorRowView>, EmptyView>));
  uint64_t v75 = v116;
  outlined init with copy of (String, Any)(v116, v73 + *(int *)(v74 + 48), &demangling cache variable for type metadata for Section<EmptyView, <<opaque return type of View.alert(isPresented:content:)>>.0, EmptyView>?);
  uint64_t v76 = v117;
  v71((char *)(v73 + *(int *)(v74 + 64)), v117, v72);
  uint64_t v77 = *(void (**)(char *, uint64_t))(v70 + 8);
  v77(v115, v72);
  outlined destroy of TaskPriority?(v114, &demangling cache variable for type metadata for Section<EmptyView, <<opaque return type of View.alert(isPresented:content:)>>.0, EmptyView>?);
  uint64_t v78 = *(void (**)(char *, uint64_t))(v66 + 8);
  uint64_t v79 = v123;
  v78(v120, v123);
  v77(v76, v72);
  outlined destroy of TaskPriority?(v75, &demangling cache variable for type metadata for Section<EmptyView, <<opaque return type of View.alert(isPresented:content:)>>.0, EmptyView>?);
  v78(v112, v79);
  uint64_t v80 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TupleView<(Section<Text, Collaboration.Management.View.CollaboratorRowView, EmptyView>, Section<EmptyView, <<opaque return type of View.alert(isPresented:content:)>>.0, EmptyView>?, Section<Text, ForEach<[Playlist.Collaborator], MusicItemID, Collaboration.Management.View.CollaboratorRowView>, EmptyView>)>);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v80 - 8) + 56))(v73, 0, 1, v80);
  outlined init with take of PresentationSource?(v73, v142, &demangling cache variable for type metadata for TupleView<(Section<Text, Collaboration.Management.View.CollaboratorRowView, EmptyView>, Section<EmptyView, <<opaque return type of View.alert(isPresented:content:)>>.0, EmptyView>?, Section<Text, ForEach<[Playlist.Collaborator], MusicItemID, Collaboration.Management.View.CollaboratorRowView>, EmptyView>)>?);
  (*(void (**)(char *, uint64_t))(v121 + 8))(v111, v122);
  uint64_t v40 = v138;
LABEL_14:
  uint64_t v81 = (uint64_t)v134;
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v82 = v131;
  static Published.subscript.getter();
  swift_release();
  swift_release();
  char v83 = Playlist.isOwner.getter();
  (*(void (**)(char *, uint64_t))(v132 + 8))(v82, v133);
  if ((v83 & 1) != 0
    && (swift_getKeyPath(),
        swift_getKeyPath(),
        static Published.subscript.getter(),
        swift_release(),
        swift_release(),
        v145 == 1))
  {
    __chkstk_darwin();
    char v84 = v118;
    String.LocalizationValue.init(stringLiteral:)();
    (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v124, v84, v129);
    if (one-time initialization token for module != -1) {
      swift_once();
    }
    id v85 = (id)static NSBundle.module;
    static Locale.current.getter();
    uint64_t v86 = String.init(localized:table:bundle:locale:comment:)();
    uint64_t v88 = v87;
    (*(void (**)(char *, uint64_t))(v40 + 8))(v84, v129);
    uint64_t v145 = v86;
    uint64_t v146 = v88;
    _sS2SSysWl_1();
    uint64_t v149 = Text.init<A>(_:)();
    uint64_t v150 = v89;
    char v151 = v90 & 1;
    uint64_t v152 = v91;
    closure #10 in closure #1 in closure #1 in Collaboration.Management.View.body.getter((uint64_t)&v145);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HStack<Toggle<Text>>);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<_ConditionalContent<Text, Text>, Text>);
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type HStack<Toggle<Text>> and conformance HStack<A>, &demangling cache variable for type metadata for HStack<Toggle<Text>>);
    lazy protocol witness table accessor for type _ConditionalContent<_ConditionalContent<Text, Text>, Text> and conformance <> _ConditionalContent<A, B>();
    Section<>.init(header:footer:content:)();
    uint64_t v92 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Section<Text, HStack<Toggle<Text>>, _ConditionalContent<_ConditionalContent<Text, Text>, Text>>);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v92 - 8) + 56))(v81, 0, 1, v92);
  }
  else
  {
    uint64_t v93 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Section<Text, HStack<Toggle<Text>>, _ConditionalContent<_ConditionalContent<Text, Text>, Text>>);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v93 - 8) + 56))(v81, 1, 1, v93);
  }
  uint64_t v94 = v140;
  uint64_t v95 = *(void (**)(char *, void (**)(char *, uint64_t), uint64_t))(v140 + 16);
  uint64_t v96 = (void (**)(char *, uint64_t))v130;
  uint64_t v97 = v141;
  v95(v130, v139, v141);
  uint64_t v98 = v142;
  uint64_t v99 = (uint64_t)v137;
  outlined init with copy of (String, Any)(v142, (uint64_t)v137, &demangling cache variable for type metadata for TupleView<(Section<Text, Collaboration.Management.View.CollaboratorRowView, EmptyView>, Section<EmptyView, <<opaque return type of View.alert(isPresented:content:)>>.0, EmptyView>?, Section<Text, ForEach<[Playlist.Collaborator], MusicItemID, Collaboration.Management.View.CollaboratorRowView>, EmptyView>)>?);
  uint64_t v100 = v135;
  outlined init with copy of (String, Any)(v81, v135, &demangling cache variable for type metadata for Section<Text, HStack<Toggle<Text>>, _ConditionalContent<_ConditionalContent<Text, Text>, Text>>?);
  uint64_t v101 = v81;
  uint64_t v102 = v136;
  v95(v136, v96, v97);
  uint64_t v103 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (<<opaque return type of View.headerProminence(_:)>>.0, TupleView<(Section<Text, Collaboration.Management.View.CollaboratorRowView, EmptyView>, Section<EmptyView, <<opaque return type of View.alert(isPresented:content:)>>.0, EmptyView>?, Section<Text, ForEach<[Playlist.Collaborator], MusicItemID, Collaboration.Management.View.CollaboratorRowView>, EmptyView>)>?, Section<Text, HStack<Toggle<Text>>, _ConditionalContent<_ConditionalContent<Text, Text>, Text>>?));
  outlined init with copy of (String, Any)(v99, (uint64_t)&v102[*(int *)(v103 + 48)], &demangling cache variable for type metadata for TupleView<(Section<Text, Collaboration.Management.View.CollaboratorRowView, EmptyView>, Section<EmptyView, <<opaque return type of View.alert(isPresented:content:)>>.0, EmptyView>?, Section<Text, ForEach<[Playlist.Collaborator], MusicItemID, Collaboration.Management.View.CollaboratorRowView>, EmptyView>)>?);
  outlined init with copy of (String, Any)(v100, (uint64_t)&v102[*(int *)(v103 + 64)], &demangling cache variable for type metadata for Section<Text, HStack<Toggle<Text>>, _ConditionalContent<_ConditionalContent<Text, Text>, Text>>?);
  outlined destroy of TaskPriority?(v101, &demangling cache variable for type metadata for Section<Text, HStack<Toggle<Text>>, _ConditionalContent<_ConditionalContent<Text, Text>, Text>>?);
  outlined destroy of TaskPriority?(v98, &demangling cache variable for type metadata for TupleView<(Section<Text, Collaboration.Management.View.CollaboratorRowView, EmptyView>, Section<EmptyView, <<opaque return type of View.alert(isPresented:content:)>>.0, EmptyView>?, Section<Text, ForEach<[Playlist.Collaborator], MusicItemID, Collaboration.Management.View.CollaboratorRowView>, EmptyView>)>?);
  uint64_t v104 = *(void (**)(void, uint64_t))(v94 + 8);
  v104(v139, v97);
  outlined destroy of TaskPriority?(v100, &demangling cache variable for type metadata for Section<Text, HStack<Toggle<Text>>, _ConditionalContent<_ConditionalContent<Text, Text>, Text>>?);
  outlined destroy of TaskPriority?(v99, &demangling cache variable for type metadata for TupleView<(Section<Text, Collaboration.Management.View.CollaboratorRowView, EmptyView>, Section<EmptyView, <<opaque return type of View.alert(isPresented:content:)>>.0, EmptyView>?, Section<Text, ForEach<[Playlist.Collaborator], MusicItemID, Collaboration.Management.View.CollaboratorRowView>, EmptyView>)>?);
  return ((uint64_t (*)(void, uint64_t))v104)(v96, v97);
}

uint64_t closure #1 in closure #1 in closure #1 in Collaboration.Management.View.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TupleView<(<<opaque return type of View.accessibilityElement(children:)>>.0, ForEach<[Playlist.Collaborator], MusicItemID, Collaboration.Management.View.CollaboratorRowView>)>?);
  __chkstk_darwin();
  uint64_t v77 = (char *)&v65 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = *(void *)(type metadata accessor for Collaboration.Management.View(0) - 8);
  __chkstk_darwin();
  uint64_t v72 = v5;
  uint64_t v73 = (uint64_t)&v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ForEach<[Playlist.Collaborator], MusicItemID, Collaboration.Management.View.CollaboratorRowView>);
  uint64_t v75 = *(void *)(v6 - 8);
  uint64_t v76 = v6;
  __chkstk_darwin();
  uint64_t v74 = (char *)&v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v81 = (char *)&v65 - v8;
  uint64_t v9 = type metadata accessor for AccessibilityChildBehavior();
  uint64_t v68 = *(void *)(v9 - 8);
  uint64_t v69 = v9;
  __chkstk_darwin();
  unint64_t v67 = (char *)&v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _FrameLayout>, _EnvironmentKeyWritingModifier<SymbolRenderingMode?>>, _EnvironmentKeyWritingModifier<Color?>>?, VStack<TupleView<(Text, Text?)>>, TupleView<(Spacer, <<opaque return type of View.alert(isPresented:content:)>>.0)>?)>>);
  __chkstk_darwin();
  uint64_t v12 = (char *)&v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _FrameLayout>, _EnvironmentKeyWritingModifier<SymbolRenderingMode?>>, _EnvironmentKeyWritingModifier<Color?>>?, VStack<TupleView<(Text, Text?)>>, TupleView<(Spacer, <<opaque return type of View.alert(isPresented:content:)>>.0)>?)>>, _PaddingLayout>);
  __chkstk_darwin();
  uint64_t v15 = (char *)&v65 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _FrameLayout>, _EnvironmentKeyWritingModifier<SymbolRenderingMode?>>, _EnvironmentKeyWritingModifier<Color?>>?, VStack<TupleView<(Text, Text?)>>, TupleView<(Spacer, <<opaque return type of View.alert(isPresented:content:)>>.0)>?)>>, _PaddingLayout>, _TraitWritingModifier<ListRowInsetsTraitKey>>);
  __chkstk_darwin();
  uint64_t v18 = (char *)&v65 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _FrameLayout>, _EnvironmentKeyWritingModifier<SymbolRenderingMode?>>, _EnvironmentKeyWritingModifier<Color?>>?, VStack<TupleView<(Text, Text?)>>, TupleView<(Spacer, <<opaque return type of View.alert(isPresented:content:)>>.0)>?)>>, _PaddingLayout>, _TraitWritingModifier<ListRowInsetsTraitKey>>, _AlignmentWritingModifier>);
  __chkstk_darwin();
  uint64_t v21 = (char *)&v65 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.accessibilityElement(children:)>>.0);
  uint64_t v79 = *(void *)(v70 - 8);
  __chkstk_darwin();
  uint64_t v23 = (char *)&v65 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v78 = (char *)&v65 - v24;
  uint64_t v80 = a1;
  if (Collaboration.Management.Model.isPending.getter())
  {
    uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TupleView<(<<opaque return type of View.accessibilityElement(children:)>>.0, ForEach<[Playlist.Collaborator], MusicItemID, Collaboration.Management.View.CollaboratorRowView>)>);
    uint64_t v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56);
    return v26(a2, 1, 1, v25);
  }
  else
  {
    uint64_t v66 = a2;
    *(void *)uint64_t v12 = static VerticalAlignment.center.getter();
    *((void *)v12 + 1) = 0x4028000000000000;
    v12[16] = 0;
    uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_HStackLayout, TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _FrameLayout>, _EnvironmentKeyWritingModifier<SymbolRenderingMode?>>, _EnvironmentKeyWritingModifier<Color?>>?, VStack<TupleView<(Text, Text?)>>, TupleView<(Spacer, <<opaque return type of View.alert(isPresented:content:)>>.0)>?)>>);
    closure #1 in closure #1 in closure #1 in closure #1 in Collaboration.Management.View.body.getter(v80, (uint64_t)&v12[*(int *)(v28 + 44)]);
    char v29 = static Edge.Set.horizontal.getter();
    EdgeInsets.init(_all:)();
    uint64_t v31 = v30;
    uint64_t v33 = v32;
    uint64_t v35 = v34;
    uint64_t v37 = v36;
    outlined init with copy of (String, Any)((uint64_t)v12, (uint64_t)v15, &demangling cache variable for type metadata for HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _FrameLayout>, _EnvironmentKeyWritingModifier<SymbolRenderingMode?>>, _EnvironmentKeyWritingModifier<Color?>>?, VStack<TupleView<(Text, Text?)>>, TupleView<(Spacer, <<opaque return type of View.alert(isPresented:content:)>>.0)>?)>>);
    uint64_t v38 = &v15[*(int *)(v13 + 36)];
    *uint64_t v38 = v29;
    *((void *)v38 + 1) = v31;
    *((void *)v38 + 2) = v33;
    *((void *)v38 + 3) = v35;
    *((void *)v38 + 4) = v37;
    v38[40] = 0;
    outlined destroy of TaskPriority?((uint64_t)v12, &demangling cache variable for type metadata for HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _FrameLayout>, _EnvironmentKeyWritingModifier<SymbolRenderingMode?>>, _EnvironmentKeyWritingModifier<Color?>>?, VStack<TupleView<(Text, Text?)>>, TupleView<(Spacer, <<opaque return type of View.alert(isPresented:content:)>>.0)>?)>>);
    if (one-time initialization token for zero != -1) {
      swift_once();
    }
    long long v65 = static EdgeInsets.zero;
    uint64_t v39 = qword_1005ADD88;
    uint64_t v40 = unk_1005ADD90;
    outlined init with copy of (String, Any)((uint64_t)v15, (uint64_t)v18, &demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _FrameLayout>, _EnvironmentKeyWritingModifier<SymbolRenderingMode?>>, _EnvironmentKeyWritingModifier<Color?>>?, VStack<TupleView<(Text, Text?)>>, TupleView<(Spacer, <<opaque return type of View.alert(isPresented:content:)>>.0)>?)>>, _PaddingLayout>);
    uint64_t v41 = &v18[*(int *)(v16 + 36)];
    *(_OWORD *)uint64_t v41 = v65;
    *((void *)v41 + 2) = v39;
    *((void *)v41 + 3) = v40;
    v41[32] = 0;
    outlined destroy of TaskPriority?((uint64_t)v15, &demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _FrameLayout>, _EnvironmentKeyWritingModifier<SymbolRenderingMode?>>, _EnvironmentKeyWritingModifier<Color?>>?, VStack<TupleView<(Text, Text?)>>, TupleView<(Spacer, <<opaque return type of View.alert(isPresented:content:)>>.0)>?)>>, _PaddingLayout>);
    uint64_t v42 = static HorizontalAlignment.listRowSeparatorLeading.getter();
    outlined init with copy of (String, Any)((uint64_t)v18, (uint64_t)v21, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _FrameLayout>, _EnvironmentKeyWritingModifier<SymbolRenderingMode?>>, _EnvironmentKeyWritingModifier<Color?>>?, VStack<TupleView<(Text, Text?)>>, TupleView<(Spacer, <<opaque return type of View.alert(isPresented:content:)>>.0)>?)>>, _PaddingLayout>, _TraitWritingModifier<ListRowInsetsTraitKey>>);
    uint64_t v43 = (uint64_t *)&v21[*(int *)(v19 + 36)];
    *uint64_t v43 = v42;
    v43[1] = (uint64_t)closure #2 in closure #1 in closure #1 in closure #1 in Collaboration.Management.View.body.getter;
    _OWORD v43[2] = 0;
    outlined destroy of TaskPriority?((uint64_t)v18, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _FrameLayout>, _EnvironmentKeyWritingModifier<SymbolRenderingMode?>>, _EnvironmentKeyWritingModifier<Color?>>?, VStack<TupleView<(Text, Text?)>>, TupleView<(Spacer, <<opaque return type of View.alert(isPresented:content:)>>.0)>?)>>, _PaddingLayout>, _TraitWritingModifier<ListRowInsetsTraitKey>>);
    uint64_t v44 = v67;
    static AccessibilityChildBehavior.combine.getter();
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _FrameLayout>, _EnvironmentKeyWritingModifier<SymbolRenderingMode?>>, _EnvironmentKeyWritingModifier<Color?>>?, VStack<TupleView<(Text, Text?)>>, TupleView<(Spacer, <<opaque return type of View.alert(isPresented:content:)>>.0)>?)>>, _PaddingLayout>, _TraitWritingModifier<ListRowInsetsTraitKey>>, _AlignmentWritingModifier> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _FrameLayout>, _EnvironmentKeyWritingModifier<SymbolRenderingMode?>>, _EnvironmentKeyWritingModifier<Color?>>?, VStack<TupleView<(Text, Text?)>>, TupleView<(Spacer, <<opaque return type of View.alert(isPresented:content:)>>.0)>?)>>, _PaddingLayout>, _TraitWritingModifier<ListRowInsetsTraitKey>>, _AlignmentWritingModifier> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _FrameLayout>, _EnvironmentKeyWritingModifier<SymbolRenderingMode?>>, _EnvironmentKeyWritingModifier<Color?>>?, VStack<TupleView<(Text, Text?)>>, TupleView<(Spacer, <<opaque return type of View.alert(isPresented:content:)>>.0)>?)>>, _PaddingLayout>, _TraitWritingModifier<ListRowInsetsTraitKey>>, _AlignmentWritingModifier>, (void (*)(void))lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _FrameLayout>, _EnvironmentKeyWritingModifier<SymbolRenderingMode?>>, _EnvironmentKeyWritingModifier<Color?>>?, VStack<TupleView<(Text, Text?)>>, TupleView<(Spacer, <<opaque return type of View.alert(isPresented:content:)>>.0)>?)>>, _PaddingLayout>, _TraitWritingModifier<ListRowInsetsTraitKey>> and conformance <> ModifiedContent<A, B>, (void (*)(void))lazy protocol witness table accessor for type _AlignmentWritingModifier and conformance _AlignmentWritingModifier);
    uint64_t v45 = v23;
    View.accessibilityElement(children:)();
    (*(void (**)(char *, uint64_t))(v68 + 8))(v44, v69);
    outlined destroy of TaskPriority?((uint64_t)v21, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _FrameLayout>, _EnvironmentKeyWritingModifier<SymbolRenderingMode?>>, _EnvironmentKeyWritingModifier<Color?>>?, VStack<TupleView<(Text, Text?)>>, TupleView<(Spacer, <<opaque return type of View.alert(isPresented:content:)>>.0)>?)>>, _PaddingLayout>, _TraitWritingModifier<ListRowInsetsTraitKey>>, _AlignmentWritingModifier>);
    uint64_t v46 = v78;
    uint64_t v47 = v79;
    uint64_t v48 = v70;
    (*(void (**)(char *, char *, uint64_t))(v79 + 32))(v78, v23, v70);
    uint64_t v49 = v80;
    size_t v82 = Collaboration.Management.Model.collaborators.getter();
    uint64_t v50 = v73;
    outlined init with copy of Collaboration.Management.View(v49, v73, type metadata accessor for Collaboration.Management.View);
    unint64_t v51 = (*(unsigned __int8 *)(v71 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v71 + 80);
    uint64_t v52 = swift_allocObject();
    outlined init with take of Collaboration.Management.View(v50, v52 + v51, type metadata accessor for Collaboration.Management.View);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [Playlist.Collaborator]);
    type metadata accessor for Collaboration.Management.View.CollaboratorRowView(0);
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type [Playlist.Collaborator] and conformance [A], &demangling cache variable for type metadata for [Playlist.Collaborator]);
    lazy protocol witness table accessor for type Collaboration.Management.Model and conformance Collaboration.Management.Model(&lazy protocol witness table cache variable for type Collaboration.Management.View.CollaboratorRowView and conformance Collaboration.Management.View.CollaboratorRowView, (void (*)(uint64_t))type metadata accessor for Collaboration.Management.View.CollaboratorRowView);
    lazy protocol witness table accessor for type Collaboration.Management.Model and conformance Collaboration.Management.Model(&lazy protocol witness table cache variable for type Playlist.Collaborator and conformance Playlist.Collaborator, (void (*)(uint64_t))&type metadata accessor for Playlist.Collaborator);
    char v53 = v81;
    ForEach<>.init(_:content:)();
    uint64_t v54 = *(void (**)(char *, char *, uint64_t))(v47 + 16);
    v54(v45, v46, v48);
    uint64_t v55 = v74;
    uint64_t v56 = v75;
    uint64_t v57 = *(void (**)(char *, char *, uint64_t))(v75 + 16);
    uint64_t v58 = v53;
    uint64_t v59 = v76;
    v57(v74, v58, v76);
    uint64_t v60 = (uint64_t)v77;
    v54(v77, v45, v48);
    uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (<<opaque return type of View.accessibilityElement(children:)>>.0, ForEach<[Playlist.Collaborator], MusicItemID, Collaboration.Management.View.CollaboratorRowView>));
    v57((char *)(v60 + *(int *)(v61 + 48)), v55, v59);
    uint64_t v62 = *(void (**)(char *, uint64_t))(v56 + 8);
    v62(v81, v59);
    uint64_t v63 = *(void (**)(char *, uint64_t))(v79 + 8);
    v63(v78, v48);
    v62(v55, v59);
    v63(v45, v48);
    uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TupleView<(<<opaque return type of View.accessibilityElement(children:)>>.0, ForEach<[Playlist.Collaborator], MusicItemID, Collaboration.Management.View.CollaboratorRowView>)>);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v64 - 8) + 56))(v60, 0, 1, v64);
    return outlined init with take of PresentationSource?(v60, v66, &demangling cache variable for type metadata for TupleView<(<<opaque return type of View.accessibilityElement(children:)>>.0, ForEach<[Playlist.Collaborator], MusicItemID, Collaboration.Management.View.CollaboratorRowView>)>?);
  }
}

uint64_t closure #1 in closure #1 in closure #1 in closure #1 in Collaboration.Management.View.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v200 = a2;
  uint64_t v189 = __swift_instantiateConcreteTypeFromMangledName(&_ss19PartialRangeThroughVy7SwiftUI15DynamicTypeSizeOGMD_0);
  __chkstk_darwin();
  uint64_t v4 = (char *)&v147 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Capsule();
  __chkstk_darwin();
  v186 = (char *)&v147 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Collaboration.Management.View(0);
  uint64_t v159 = *(void *)(v6 - 8);
  __chkstk_darwin();
  uint64_t v160 = v7;
  uint64_t v161 = (uint64_t)&v147 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v168 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&_s7SwiftUI6ButtonVyAA4TextVGMD_0);
  uint64_t v166 = *(void *)(v168 - 8);
  __chkstk_darwin();
  unint64_t v163 = (char *)&v147 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v165 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Font?>>);
  __chkstk_darwin();
  unint64_t v164 = (char *)&v147 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v170 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.fontWeight(_:)>>.0);
  uint64_t v169 = *(void *)(v170 - 8);
  __chkstk_darwin();
  uint64_t v167 = (char *)&v147 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v162 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>);
  __chkstk_darwin();
  unint64_t v173 = (char *)&v147 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v171 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>);
  __chkstk_darwin();
  uint64_t v174 = (uint64_t)&v147 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v172 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>);
  __chkstk_darwin();
  v198 = (char *)&v147 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v175 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>, _BackgroundStyleModifier<Color>>);
  __chkstk_darwin();
  uint64_t v176 = (uint64_t)&v147 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Capsule>>);
  __chkstk_darwin();
  CGRect v177 = (char *)&v147 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v182 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.dynamicTypeSize<A>(_:)>>.0);
  uint64_t v181 = *(void *)(v182 - 8);
  __chkstk_darwin();
  uint64_t v179 = (char *)&v147 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v185 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.alert(isPresented:content:)>>.0);
  uint64_t v184 = *(void *)(v185 - 8);
  __chkstk_darwin();
  v183 = (char *)&v147 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  CGRect v180 = (char *)&v147 - v19;
  type metadata accessor for Locale();
  __chkstk_darwin();
  unint64_t v156 = (char *)&v147 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v158 = type metadata accessor for String.LocalizationValue();
  uint64_t v190 = *(void *)(v158 - 8);
  __chkstk_darwin();
  unint64_t v155 = (char *)&v147 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v157 = (char *)&v147 - v22;
  uint64_t v154 = type metadata accessor for Playlist();
  uint64_t v153 = *(void *)(v154 - 8);
  __chkstk_darwin();
  uint64_t v152 = (char *)&v147 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TupleView<(Spacer, <<opaque return type of View.alert(isPresented:content:)>>.0)>?);
  __chkstk_darwin();
  v199 = (uint64_t *)((char *)&v147 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin();
  uint64_t v202 = (uint64_t)&v147 - v25;
  uint64_t v192 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<SymbolRenderingMode?>);
  __chkstk_darwin();
  uint64_t v194 = (uint64_t *)((char *)&v147 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SymbolRenderingMode?);
  __chkstk_darwin();
  uint64_t v193 = (char *)&v147 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v191 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _FrameLayout>, _EnvironmentKeyWritingModifier<SymbolRenderingMode?>>);
  __chkstk_darwin();
  char v29 = (char *)&v147 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v197 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _FrameLayout>, _EnvironmentKeyWritingModifier<SymbolRenderingMode?>>, _EnvironmentKeyWritingModifier<Color?>>);
  uint64_t v196 = *(void *)(v197 - 8);
  __chkstk_darwin();
  uint64_t v195 = (uint64_t)&v147 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = type metadata accessor for DynamicTypeSize();
  uint64_t v32 = *(void *)(v31 - 8);
  __chkstk_darwin();
  uint64_t v34 = (char *)&v147 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v36 = (char *)&v147 - v35;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _FrameLayout>, _EnvironmentKeyWritingModifier<SymbolRenderingMode?>>, _EnvironmentKeyWritingModifier<Color?>>?);
  __chkstk_darwin();
  uint64_t v201 = (uint64_t)&v147 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v203 = (uint64_t)&v147 - v38;
  uint64_t v187 = v6;
  specialized Environment.wrappedValue.getter((uint64_t)v36);
  if (one-time initialization token for maxDynamicSize != -1) {
    swift_once();
  }
  uint64_t v39 = __swift_project_value_buffer(v31, (uint64_t)static Collaboration.Management.View.Specs.maxDynamicSize);
  (*(void (**)(char *, uint64_t, uint64_t))(v32 + 16))(v34, v39, v31);
  lazy protocol witness table accessor for type Collaboration.Management.Model and conformance Collaboration.Management.Model((unint64_t *)&lazy protocol witness table cache variable for type DynamicTypeSize and conformance DynamicTypeSize, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  char v40 = dispatch thunk of static Comparable.< infix(_:_:)();
  uint64_t v41 = *(void (**)(char *, uint64_t))(v32 + 8);
  v41(v34, v31);
  v41(v36, v31);
  v188 = v4;
  uint64_t v178 = v15;
  if (v40)
  {
    uint64_t v42 = 1;
    uint64_t v43 = v203;
    uint64_t v44 = v197;
  }
  else
  {
    uint64_t v150 = Image.init(systemName:)();
    if (one-time initialization token for collaborationGlyphFont != -1) {
      swift_once();
    }
    uint64_t v151 = a1;
    uint64_t v45 = static Collaboration.Management.View.Specs.collaborationGlyphFont;
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v47 = one-time initialization token for avatarLength;
    swift_retain();
    if (v47 != -1) {
      swift_once();
    }
    static Alignment.center.getter();
    _FrameLayout.init(width:height:alignment:)();
    uint64_t v149 = v215;
    int v148 = v216;
    uint64_t v147 = v217;
    char v48 = v218;
    uint64_t v50 = v219;
    uint64_t v49 = v220;
    uint64_t v51 = (uint64_t)v193;
    static SymbolRenderingMode.hierarchical.getter();
    uint64_t v52 = type metadata accessor for SymbolRenderingMode();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56))(v51, 0, 1, v52);
    uint64_t v53 = swift_getKeyPath();
    uint64_t v54 = v194;
    outlined init with copy of (String, Any)(v51, (uint64_t)v194 + *(int *)(v192 + 28), &demangling cache variable for type metadata for SymbolRenderingMode?);
    *uint64_t v54 = v53;
    outlined init with copy of (String, Any)((uint64_t)v54, (uint64_t)&v29[*(int *)(v191 + 36)], &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<SymbolRenderingMode?>);
    *(void *)char v29 = v150;
    *((void *)v29 + 1) = KeyPath;
    uint64_t v55 = v149;
    *((void *)v29 + 2) = v45;
    *((void *)v29 + 3) = v55;
    v29[32] = v148;
    *((void *)v29 + 5) = v147;
    v29[48] = v48;
    *((void *)v29 + 7) = v50;
    *((void *)v29 + 8) = v49;
    swift_retain();
    swift_retain();
    swift_retain();
    outlined destroy of TaskPriority?((uint64_t)v54, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<SymbolRenderingMode?>);
    outlined destroy of TaskPriority?(v51, &demangling cache variable for type metadata for SymbolRenderingMode?);
    swift_release();
    swift_release();
    swift_release();
    if (one-time initialization token for keyColor != -1) {
      swift_once();
    }
    uint64_t v56 = static Collaboration.Management.View.Specs.keyColor;
    uint64_t v57 = swift_getKeyPath();
    uint64_t v58 = v195;
    outlined init with copy of (String, Any)((uint64_t)v29, v195, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _FrameLayout>, _EnvironmentKeyWritingModifier<SymbolRenderingMode?>>);
    uint64_t v44 = v197;
    uint64_t v59 = (uint64_t *)(v58 + *(int *)(v197 + 36));
    *uint64_t v59 = v57;
    v59[1] = v56;
    swift_retain();
    outlined destroy of TaskPriority?((uint64_t)v29, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _FrameLayout>, _EnvironmentKeyWritingModifier<SymbolRenderingMode?>>);
    uint64_t v43 = v203;
    outlined init with take of PresentationSource?(v58, v203, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _FrameLayout>, _EnvironmentKeyWritingModifier<SymbolRenderingMode?>>, _EnvironmentKeyWritingModifier<Color?>>);
    uint64_t v42 = 0;
    a1 = v151;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v196 + 56))(v43, v42, 1, v44);
  uint64_t v60 = static HorizontalAlignment.leading.getter();
  closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in Collaboration.Management.View.body.getter(a1, (uint64_t)&v210);
  uint64_t v192 = *((void *)&v210 + 1);
  uint64_t v193 = (char *)v210;
  LODWORD(v191) = v211;
  uint64_t v61 = v212;
  uint64_t v194 = (uint64_t *)*((void *)&v211 + 1);
  uint64_t v197 = *((void *)&v212 + 1);
  uint64_t v196 = v213;
  uint64_t v195 = v214;
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v62 = (uint64_t)v198;
  if (v210 == 1)
  {
    uint64_t v63 = v61;
    swift_getKeyPath();
    swift_getKeyPath();
    uint64_t v64 = v152;
    static Published.subscript.getter();
    swift_release();
    swift_release();
    Playlist.isOwner.getter();
    (*(void (**)(char *, uint64_t))(v153 + 8))(v64, v154);
    long long v65 = (void (**)(char *, char *, uint64_t))(v190 + 16);
    uint64_t v151 = v63;
    uint64_t v150 = v60;
    uint64_t v66 = v157;
    String.LocalizationValue.init(stringLiteral:)();
    uint64_t v70 = v158;
    (*v65)(v155, v66, v158);
    uint64_t v71 = (uint64_t)v173;
    if (one-time initialization token for module != -1) {
      swift_once();
    }
    id v72 = (id)static NSBundle.module;
    static Locale.current.getter();
    uint64_t v73 = String.init(localized:table:bundle:locale:comment:)();
    uint64_t v75 = v74;
    (*(void (**)(char *, uint64_t))(v190 + 8))(v66, v70);
    unint64_t v173 = (char *)v73;
    *(void *)&long long v210 = v73;
    *((void *)&v210 + 1) = v75;
    uint64_t v76 = v161;
    outlined init with copy of Collaboration.Management.View(a1, v161, type metadata accessor for Collaboration.Management.View);
    unint64_t v77 = (*(unsigned __int8 *)(v159 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v159 + 80);
    uint64_t v78 = swift_allocObject();
    outlined init with take of Collaboration.Management.View(v76, v78 + v77, type metadata accessor for Collaboration.Management.View);
    _sS2SSysWl_1();
    uint64_t v190 = v75;
    swift_bridgeObjectRetain();
    uint64_t v79 = v163;
    Button<>.init<A>(_:action:)();
    uint64_t v80 = static Font.subheadline.getter();
    uint64_t v81 = swift_getKeyPath();
    uint64_t v82 = v166;
    uint64_t v83 = (uint64_t)v164;
    uint64_t v84 = v168;
    (*(void (**)(char *, char *, uint64_t))(v166 + 16))(v164, v79, v168);
    id v85 = (uint64_t *)(v83 + *(int *)(v165 + 36));
    uint64_t *v85 = v81;
    v85[1] = v80;
    (*(void (**)(char *, uint64_t))(v82 + 8))(v79, v84);
    static Font.Weight.semibold.getter();
    lazy protocol witness table accessor for type ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>();
    uint64_t v86 = v167;
    View.fontWeight(_:)();
    outlined destroy of TaskPriority?(v83, &demangling cache variable for type metadata for ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Font?>>);
    uint64_t v87 = static Color.white.getter();
    uint64_t v88 = swift_getKeyPath();
    uint64_t v89 = v169;
    uint64_t v90 = v170;
    (*(void (**)(uint64_t, char *, uint64_t))(v169 + 16))(v71, v86, v170);
    uint64_t v91 = (uint64_t *)(v71 + *(int *)(v162 + 36));
    uint64_t *v91 = v88;
    v91[1] = v87;
    (*(void (**)(char *, uint64_t))(v89 + 8))(v86, v90);
    if (one-time initialization token for controlLength != -1) {
      swift_once();
    }
    static Alignment.center.getter();
    _FrameLayout.init(width:height:alignment:)();
    uint64_t v92 = v174;
    outlined init with copy of (String, Any)(v71, v174, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>);
    uint64_t v93 = (_OWORD *)(v92 + *(int *)(v171 + 36));
    long long v94 = v211;
    *uint64_t v93 = v210;
    v93[1] = v94;
    v93[2] = v212;
    outlined destroy of TaskPriority?(v71, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>);
    char v95 = static Edge.Set.horizontal.getter();
    EdgeInsets.init(_all:)();
    uint64_t v97 = v96;
    uint64_t v99 = v98;
    uint64_t v101 = v100;
    uint64_t v103 = v102;
    outlined init with copy of (String, Any)(v92, v62, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>);
    uint64_t v104 = v62 + *(int *)(v172 + 36);
    *(unsigned char *)uint64_t v104 = v95;
    *(void *)(v104 + 8) = v97;
    *(void *)(v104 + 16) = v99;
    *(void *)(v104 + 24) = v101;
    *(void *)(v104 + 32) = v103;
    *(unsigned char *)(v104 + 40) = 0;
    outlined destroy of TaskPriority?(v92, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>);
    uint64_t v105 = (uint64_t)v177;
    uint64_t v106 = (uint64_t)v188;
    uint64_t v107 = v178;
    if (one-time initialization token for normal != -1) {
      swift_once();
    }
    id v108 = (id)static UIColor.MusicTint.normal;
    uint64_t v109 = Color.init(_:)();
    char v110 = static Edge.Set.all.getter();
    uint64_t v111 = v176;
    outlined init with copy of (String, Any)(v62, v176, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>);
    uint64_t v112 = v111 + *(int *)(v175 + 36);
    *(void *)uint64_t v112 = v109;
    *(unsigned char *)(v112 + 8) = v110;
    outlined destroy of TaskPriority?(v62, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>);
    uint64_t v113 = enum case for RoundedCornerStyle.continuous(_:);
    uint64_t v114 = type metadata accessor for RoundedCornerStyle();
    uint64_t v115 = (uint64_t)v186;
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v114 - 8) + 104))(v186, v113, v114);
    uint64_t v116 = v105 + *(int *)(v107 + 36);
    outlined init with copy of Collaboration.Management.View(v115, v116, (uint64_t (*)(void))&type metadata accessor for Capsule);
    *(_WORD *)(v116
             + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ClipEffect<Capsule>)
                      + 36)) = 256;
    outlined init with copy of (String, Any)(v111, v105, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>, _BackgroundStyleModifier<Color>>);
    _s17_MusicKit_SwiftUI12ArtworkImageV0a4CoreD0E11PlaceholderOWOhTm_1(v115, (uint64_t (*)(void))&type metadata accessor for Capsule);
    outlined destroy of TaskPriority?(v111, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>, _BackgroundStyleModifier<Color>>);
    if (one-time initialization token for dynamicSizeRange != -1) {
      swift_once();
    }
    uint64_t v117 = v189;
    uint64_t v118 = __swift_project_value_buffer(v189, (uint64_t)static Collaboration.Management.View.Specs.dynamicSizeRange);
    outlined init with copy of (String, Any)(v118, v106, &_ss19PartialRangeThroughVy7SwiftUI15DynamicTypeSizeOGMD_0);
    unint64_t v119 = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Capsule>> and conformance <> ModifiedContent<A, B>();
    uint64_t v120 = lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&_ss19PartialRangeThroughVy7SwiftUI15DynamicTypeSizeOGAByxGSXsWL_0, &_ss19PartialRangeThroughVy7SwiftUI15DynamicTypeSizeOGMD_0);
    uint64_t v121 = v179;
    View.dynamicTypeSize<A>(_:)();
    outlined destroy of TaskPriority?(v106, &_ss19PartialRangeThroughVy7SwiftUI15DynamicTypeSizeOGMD_0);
    outlined destroy of TaskPriority?(v105, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Capsule>>);
    uint64_t v122 = a1 + *(int *)(v187 + 44);
    char v123 = *(unsigned char *)v122;
    uint64_t v124 = *(void *)(v122 + 8);
    char v208 = v123;
    uint64_t v209 = v124;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Bool>);
    State.projectedValue.getter();
    v198 = (char *)&v147;
    __chkstk_darwin();
    uint64_t v125 = v173;
    *(&v147 - 4) = a1;
    *(&v147 - 3) = (uint64_t)v125;
    *(&v147 - 2) = v190;
    uint64_t v204 = v107;
    uint64_t v205 = v117;
    unint64_t v206 = v119;
    uint64_t v207 = v120;
    swift_getOpaqueTypeConformance2();
    uint64_t v126 = v183;
    uint64_t v127 = v182;
    View.alert(isPresented:content:)();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v181 + 8))(v121, v127);
    uint64_t v128 = v184;
    uint64_t v129 = v180;
    uint64_t v130 = v185;
    (*(void (**)(char *, char *, uint64_t))(v184 + 32))(v180, v126, v185);
    uint64_t v131 = *(void (**)(char *, char *, uint64_t))(v128 + 16);
    v131(v126, v129, v130);
    uint64_t v69 = (uint64_t)v199;
    void *v199 = 0;
    *(unsigned char *)(v69 + 8) = 1;
    uint64_t v132 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Spacer, <<opaque return type of View.alert(isPresented:content:)>>.0));
    v131((char *)(v69 + *(int *)(v132 + 48)), v126, v130);
    uint64_t v133 = *(void (**)(char *, uint64_t))(v128 + 8);
    v133(v129, v130);
    v133(v126, v130);
    uint64_t v134 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TupleView<(Spacer, <<opaque return type of View.alert(isPresented:content:)>>.0)>);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v134 - 8) + 56))(v69, 0, 1, v134);
    uint64_t v68 = v202;
    outlined init with take of PresentationSource?(v69, v202, &demangling cache variable for type metadata for TupleView<(Spacer, <<opaque return type of View.alert(isPresented:content:)>>.0)>?);
    uint64_t v43 = v203;
    uint64_t v61 = v151;
    uint64_t v60 = v150;
  }
  else
  {
    uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TupleView<(Spacer, <<opaque return type of View.alert(isPresented:content:)>>.0)>);
    uint64_t v68 = v202;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v67 - 8) + 56))(v202, 1, 1, v67);
    uint64_t v69 = (uint64_t)v199;
  }
  uint64_t v135 = v201;
  outlined init with copy of (String, Any)(v43, v201, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _FrameLayout>, _EnvironmentKeyWritingModifier<SymbolRenderingMode?>>, _EnvironmentKeyWritingModifier<Color?>>?);
  outlined init with copy of (String, Any)(v68, v69, &demangling cache variable for type metadata for TupleView<(Spacer, <<opaque return type of View.alert(isPresented:content:)>>.0)>?);
  uint64_t v136 = v135;
  uint64_t v137 = v200;
  outlined init with copy of (String, Any)(v136, v200, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _FrameLayout>, _EnvironmentKeyWritingModifier<SymbolRenderingMode?>>, _EnvironmentKeyWritingModifier<Color?>>?);
  uint64_t v138 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _FrameLayout>, _EnvironmentKeyWritingModifier<SymbolRenderingMode?>>, _EnvironmentKeyWritingModifier<Color?>>?, VStack<TupleView<(Text, Text?)>>, TupleView<(Spacer, <<opaque return type of View.alert(isPresented:content:)>>.0)>?));
  uint64_t v139 = v137 + *(int *)(v138 + 48);
  *(void *)uint64_t v139 = v60;
  *(void *)(v139 + 8) = 0;
  *(unsigned char *)(v139 + 16) = 1;
  uint64_t v140 = (uint64_t)v193;
  uint64_t v141 = v192;
  *(void *)(v139 + 24) = v193;
  *(void *)(v139 + 32) = v141;
  char v142 = v191;
  *(unsigned char *)(v139 + 40) = v191;
  *(void *)(v139 + 48) = v194;
  *(void *)(v139 + 56) = v61;
  uint64_t v143 = v197;
  uint64_t v144 = v196;
  *(void *)(v139 + 64) = v197;
  *(void *)(v139 + 72) = v144;
  uint64_t v145 = v195;
  *(void *)(v139 + 80) = v195;
  outlined init with copy of (String, Any)(v69, v137 + *(int *)(v138 + 64), &demangling cache variable for type metadata for TupleView<(Spacer, <<opaque return type of View.alert(isPresented:content:)>>.0)>?);
  outlined copy of Text.Storage(v140, v141, v142);
  swift_bridgeObjectRetain();
  outlined copy of ModifiedContent<Text, _PaddingLayout>?(v61, v143, v144, v145);
  outlined destroy of TaskPriority?(v202, &demangling cache variable for type metadata for TupleView<(Spacer, <<opaque return type of View.alert(isPresented:content:)>>.0)>?);
  outlined destroy of TaskPriority?(v203, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _FrameLayout>, _EnvironmentKeyWritingModifier<SymbolRenderingMode?>>, _EnvironmentKeyWritingModifier<Color?>>?);
  outlined destroy of TaskPriority?(v69, &demangling cache variable for type metadata for TupleView<(Spacer, <<opaque return type of View.alert(isPresented:content:)>>.0)>?);
  outlined consume of Text.Storage(v140, v141, v142);
  swift_bridgeObjectRelease();
  outlined consume of ModifiedContent<Text, _PaddingLayout>?(v61, v143, v144, v145);
  return outlined destroy of TaskPriority?(v201, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _FrameLayout>, _EnvironmentKeyWritingModifier<SymbolRenderingMode?>>, _EnvironmentKeyWritingModifier<Color?>>?);
}

uint64_t closure #1 in closure #1 in closure #1 in closure #1 in closure #1 in Collaboration.Management.View.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v55 = a1;
  type metadata accessor for Locale();
  __chkstk_darwin();
  uint64_t v3 = type metadata accessor for String.LocalizationValue();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin();
  uint64_t v6 = &v51[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin();
  uint64_t v8 = &v51[-v7];
  String.LocalizationValue.init(stringLiteral:)();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v4 + 16))(v6, v8, v3);
  if (one-time initialization token for module != -1) {
    swift_once();
  }
  id v9 = (id)static NSBundle.module;
  static Locale.current.getter();
  uint64_t v10 = String.init(localized:table:bundle:locale:comment:)();
  uint64_t v12 = v11;
  (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v8, v3);
  uint64_t v56 = v10;
  uint64_t v57 = v12;
  _sS2SSysWl_1();
  uint64_t v24 = Text.init<A>(_:)();
  uint64_t v14 = v13;
  LOBYTE(v12) = v15 & 1;
  LODWORD(v56) = static HierarchicalShapeStyle.primary.getter();
  uint64_t v16 = Text.foregroundStyle<A>(_:)();
  uint64_t v18 = v17;
  char v20 = v19 & 1;
  outlined consume of Text.Storage(v24, v14, v12);
  swift_bridgeObjectRelease();
  static Font.callout.getter();
  uint64_t v21 = Text.font(_:)();
  uint64_t v54 = v22;
  LODWORD(v24) = v23;
  uint64_t v26 = v25;
  swift_release();
  outlined consume of Text.Storage(v16, v18, v20);
  swift_bridgeObjectRelease();
  uint64_t v27 = Collaboration.Management.Model.collaboratorsString.getter();
  if (v28)
  {
    uint64_t v56 = v27;
    uint64_t v57 = v28;
    uint64_t v29 = Text.init<A>(_:)();
    uint64_t v31 = v30;
    char v33 = v32 & 1;
    LODWORD(v56) = static HierarchicalShapeStyle.secondary.getter();
    uint64_t v34 = Text.foregroundStyle<A>(_:)();
    int v52 = v24;
    uint64_t v24 = v35;
    uint64_t v55 = v26;
    uint64_t v53 = v21;
    char v37 = v36 & 1;
    outlined consume of Text.Storage(v29, v31, v33);
    swift_bridgeObjectRelease();
    static Font.caption.getter();
    uint64_t v38 = Text.font(_:)();
    uint64_t v40 = v39;
    char v42 = v41;
    uint64_t v44 = v43;
    swift_release();
    uint64_t v45 = v42 & 1;
    uint64_t v46 = v24;
    LOBYTE(v24) = v52;
    char v47 = v37;
    uint64_t v21 = v53;
    outlined consume of Text.Storage(v34, v46, v47);
    uint64_t v26 = v55;
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v38 = 0;
    uint64_t v40 = 0;
    uint64_t v45 = 0;
    uint64_t v44 = 0;
  }
  char v48 = v24 & 1;
  uint64_t v49 = v54;
  *(void *)a2 = v21;
  *(void *)(a2 + 8) = v49;
  *(unsigned char *)(a2 + 16) = v48;
  *(void *)(a2 + 24) = v26;
  *(void *)(a2 + 32) = v38;
  *(void *)(a2 + 40) = v40;
  *(void *)(a2 + 48) = v45;
  *(void *)(a2 + 56) = v44;
  outlined copy of Text.Storage(v21, v49, v48);
  swift_bridgeObjectRetain();
  outlined copy of ModifiedContent<Text, _PaddingLayout>?(v38, v40, v45, v44);
  outlined consume of ModifiedContent<Text, _PaddingLayout>?(v38, v40, v45, v44);
  outlined consume of Text.Storage(v21, v49, v48);
  return swift_bridgeObjectRelease();
}

uint64_t closure #2 in closure #1 in closure #1 in closure #1 in closure #1 in Collaboration.Management.View.body.getter(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = &v14[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = (char *)(a1 + *(int *)(type metadata accessor for Collaboration.Management.View(0) + 44));
  char v7 = *v6;
  uint64_t v8 = *((void *)v6 + 1);
  v14[16] = v7;
  uint64_t v15 = v8;
  v14[15] = 1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Bool>);
  State.wrappedValue.setter();
  uint64_t v9 = Logger.collaboration.unsafeMutableAddressor();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v3 + 16))(v5, v9, v2);
  uint64_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v12 = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "[Management] Stop/Leave button tapped", v12, 2u);
    swift_slowDealloc();
  }

  return (*(uint64_t (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t closure #3 in closure #1 in closure #1 in closure #1 in closure #1 in Collaboration.Management.View.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v45 = a2;
  uint64_t v46 = a3;
  uint64_t v53 = a4;
  uint64_t v47 = *(void *)(type metadata accessor for Collaboration.Management.View(0) - 8);
  __chkstk_darwin();
  uint64_t v48 = v5;
  uint64_t v50 = (uint64_t)v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Alert.Button();
  __chkstk_darwin();
  int v52 = (char *)v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v51 = (char *)v41 - v7;
  type metadata accessor for Locale();
  __chkstk_darwin();
  uint64_t v54 = type metadata accessor for String.LocalizationValue();
  uint64_t v8 = *(void *)(v54 - 8);
  __chkstk_darwin();
  uint64_t v10 = (char *)v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v12 = (char *)v41 - v11;
  uint64_t v13 = type metadata accessor for Playlist();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin();
  uint64_t v16 = (char *)v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = a1;
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  LOBYTE(a1) = Playlist.isOwner.getter();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  uint64_t v17 = (void (**)(char *, char *, uint64_t))(v8 + 16);
  if ((a1 & 1) == 0)
  {
    String.LocalizationValue.init(stringLiteral:)();
    uint64_t v18 = *v17;
    (*v17)(v10, v12, v54);
    if (one-time initialization token for module == -1) {
      goto LABEL_5;
    }
    goto LABEL_6;
  }
  String.LocalizationValue.init(stringLiteral:)();
  uint64_t v18 = *v17;
  (*v17)(v10, v12, v54);
  if (one-time initialization token for module != -1) {
LABEL_6:
  }
    swift_once();
LABEL_5:
  id v19 = (id)static NSBundle.module;
  static Locale.current.getter();
  uint64_t v20 = String.init(localized:table:bundle:locale:comment:)();
  uint64_t v22 = v21;
  int v23 = *(void (**)(char *, uint64_t))(v8 + 8);
  uint64_t v24 = v54;
  v23(v12, v54);
  String.LocalizationValue.init(stringLiteral:)();
  v18(v10, v12, v24);
  id v25 = (id)static NSBundle.module;
  static Locale.current.getter();
  uint64_t v26 = String.init(localized:table:bundle:locale:comment:)();
  uint64_t v28 = v27;
  v23(v12, v24);
  uint64_t v55 = v20;
  uint64_t v56 = v22;
  _sS2SSysWl_1();
  uint64_t v54 = Text.init<A>(_:)();
  uint64_t v43 = v30;
  uint64_t v44 = v29;
  int v42 = v31;
  uint64_t v55 = v26;
  uint64_t v56 = v28;
  Text.init<A>(_:)();
  v41[1] = v32;
  uint64_t v55 = v45;
  uint64_t v56 = v46;
  swift_bridgeObjectRetain();
  uint64_t v33 = Text.init<A>(_:)();
  uint64_t v35 = v34;
  LOBYTE(v20) = v36 & 1;
  uint64_t v37 = v50;
  outlined init with copy of Collaboration.Management.View(v49, v50, type metadata accessor for Collaboration.Management.View);
  unint64_t v38 = (*(unsigned __int8 *)(v47 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
  uint64_t v39 = swift_allocObject();
  outlined init with take of Collaboration.Management.View(v37, v39 + v38, type metadata accessor for Collaboration.Management.View);
  static Alert.Button.destructive(_:action:)();
  outlined consume of Text.Storage(v33, v35, v20);
  swift_release();
  swift_bridgeObjectRelease();
  static Alert.Button.cancel(_:)();
  return Alert.init(title:message:primaryButton:secondaryButton:)();
}

uint64_t closure #2 in closure #1 in closure #1 in closure #1 in Collaboration.Management.View.body.getter()
{
  return ViewDimensions.subscript.getter();
}

uint64_t closure #2 in closure #1 in closure #1 in Collaboration.Management.View.body.getter(uint64_t a1)
{
  uint64_t v2 = (int *)(type metadata accessor for Collaboration.Management.View(0) - 8);
  uint64_t v3 = *(void *)v2;
  uint64_t v4 = *(void *)(*(void *)v2 + 64);
  __chkstk_darwin();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, CornerRadiusModifier>, BorderViewModifier>, _ShadowEffect>, Text, TupleView<(ModifiedContent<ModifiedContent<HStack<TupleView<(<<opaque return type of View.sheet<A>(isPresented:onDismiss:content:)>>.0, ModifiedContent<ModifiedContent<Collaboration.Management.View.Share.Button, _EnvironmentKeyTransformModifier<Bool>>, _TransactionModifier>?)>>, _FixedSizeLayout>, _PaddingLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Group<_ConditionalContent<HStack<TupleView<(ProgressView<EmptyView, EmptyView>, Text)>>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<OpenURLAction>>>?>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Int?>>, _FixedSizeLayout>, _ForegroundStyleModi);
  __chkstk_darwin();
  uint64_t v6 = &v18[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, CornerRadiusModifier>, BorderViewModifier>, _ShadowEffect>, Text, TupleView<(ModifiedContent<ModifiedContent<HStack<TupleView<(<<opaque return type of View.sheet<A>(isPresented:onDismiss:content:)>>.0, ModifiedContent<ModifiedContent<Collaboration.Management.View.Share.Button, _EnvironmentKeyTransformModifier<Bool>>, _TransactionModifier>?)>>, _FixedSizeLayout>, _PaddingLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Group<_ConditionalContent<HStack<TupleView<(ProgressView<EmptyView, EmptyView>, Text)>>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<OpenURLAction>>>?>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Int?>>, _FixedSizeLayout>, _For);
  __chkstk_darwin();
  uint64_t v9 = &v18[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(void *)uint64_t v6 = static HorizontalAlignment.center.getter();
  *((void *)v6 + 1) = 0x4028000000000000;
  unsigned char v6[16] = 0;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _VariadicView.Tree<_VStackLayout, TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, CornerRadiusModifier>, BorderViewModifier>, _ShadowEffect>, Text, TupleView<(ModifiedContent<ModifiedContent<HStack<TupleView<(<<opaque return type of View.sheet<A>(isPresented:onDismiss:content:)>>.0, ModifiedContent<ModifiedContent<Collaboration.Management.View.Share.Button, _EnvironmentKeyTransformModifier<Bool>>, _TransactionModifier>?)>>, _FixedSizeLayout>, _PaddingLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Group<_ConditionalContent<HStack<TupleView<(ProgressView<EmptyView, EmptyView>, Text)>>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<OpenURLAction>>>?>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Int?>>, _FixedSizeLa);
  closure #1 in closure #2 in closure #1 in closure #1 in Collaboration.Management.View.body.getter(a1, (uint64_t)&v6[*(int *)(v10 + 44)]);
  outlined init with copy of (String, Any)((uint64_t)v6, (uint64_t)v9, (uint64_t *)&demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, CornerRadiusModifier>, BorderViewModifier>, _ShadowEffect>, Text, TupleView<(ModifiedContent<ModifiedContent<HStack<TupleView<(<<opaque return type of View.sheet<A>(isPresented:onDismiss:content:)>>.0, ModifiedContent<ModifiedContent<Collaboration.Management.View.Share.Button, _EnvironmentKeyTransformModifier<Bool>>, _TransactionModifier>?)>>, _FixedSizeLayout>, _PaddingLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Group<_ConditionalContent<HStack<TupleView<(ProgressView<EmptyView, EmptyView>, Text)>>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<OpenURLAction>>>?>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Int?>>, _FixedSizeLayout>, _ForegroundStyleModi);
  uint64_t v11 = &v9[*(int *)(v7 + 36)];
  v11[32] = 0;
  *(_OWORD *)uint64_t v11 = 0u;
  *((_OWORD *)v11 + 1) = 0u;
  outlined destroy of TaskPriority?((uint64_t)v6, (uint64_t *)&demangling cache variable for type metadata for VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, CornerRadiusModifier>, BorderViewModifier>, _ShadowEffect>, Text, TupleView<(ModifiedContent<ModifiedContent<HStack<TupleView<(<<opaque return type of View.sheet<A>(isPresented:onDismiss:content:)>>.0, ModifiedContent<ModifiedContent<Collaboration.Management.View.Share.Button, _EnvironmentKeyTransformModifier<Bool>>, _TransactionModifier>?)>>, _FixedSizeLayout>, _PaddingLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Group<_ConditionalContent<HStack<TupleView<(ProgressView<EmptyView, EmptyView>, Text)>>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<OpenURLAction>>>?>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Int?>>, _FixedSizeLayout>, _ForegroundStyleModi);
  uint64_t v12 = a1 + v2[12];
  char v13 = *(unsigned char *)v12;
  uint64_t v14 = *(void *)(v12 + 8);
  v18[8] = v13;
  uint64_t v19 = v14;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Bool>);
  State.projectedValue.getter();
  outlined init with copy of Collaboration.Management.View(a1, (uint64_t)&v18[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)], type metadata accessor for Collaboration.Management.View);
  unint64_t v15 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v16 = swift_allocObject();
  outlined init with take of Collaboration.Management.View((uint64_t)&v18[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)], v16 + v15, type metadata accessor for Collaboration.Management.View);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Collaboration.Management.QRCodeView, _SafeAreaRegionsIgnoringLayout>, _BackgroundModifier<ClearBackground>>?);
  lazy protocol witness table accessor for type ModifiedContent<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, CornerRadiusModifier>, BorderViewModifier>, _ShadowEffect>, Text, TupleView<(ModifiedContent<ModifiedContent<HStack<TupleView<(<<opaque return type of View.sheet<A>(isPresented:onDismiss:content:)>>.0, ModifiedContent<ModifiedContent<Collaboration.Management.View.Share.Button, _EnvironmentKeyTransformModifier<Bool>>, _TransactionModifier>?)>>, _FixedSizeLayout>, _PaddingLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Group<_ConditionalContent<HStack<TupleView<(ProgressView<EmptyView, EmptyView>, Text)>>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<OpenURLAction>>>?>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Int?>>, _FixedSizeLayout>, _Foreg();
  lazy protocol witness table accessor for type ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>? and conformance <A> A?(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Collaboration.Management.QRCodeView, _SafeAreaRegionsIgnoringLayout>, _BackgroundModifier<ClearBackground>>? and conformance <A> A?, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Collaboration.Management.QRCodeView, _SafeAreaRegionsIgnoringLayout>, _BackgroundModifier<ClearBackground>>?, (void (*)(void))lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Collaboration.Management.QRCodeView, _SafeAreaRegionsIgnoringLayout>, _BackgroundModifier<ClearBackground>> and conformance <> ModifiedContent<A, B>);
  View.fullScreenCover<A>(isPresented:onDismiss:content:)();
  swift_release();
  swift_release();
  swift_release();
  return outlined destroy of TaskPriority?((uint64_t)v9, &demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, CornerRadiusModifier>, BorderViewModifier>, _ShadowEffect>, Text, TupleView<(ModifiedContent<ModifiedContent<HStack<TupleView<(<<opaque return type of View.sheet<A>(isPresented:onDismiss:content:)>>.0, ModifiedContent<ModifiedContent<Collaboration.Management.View.Share.Button, _EnvironmentKeyTransformModifier<Bool>>, _TransactionModifier>?)>>, _FixedSizeLayout>, _PaddingLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Group<_ConditionalContent<HStack<TupleView<(ProgressView<EmptyView, EmptyView>, Text)>>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<OpenURLAction>>>?>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Int?>>, _FixedSizeLayout>, _For);
}

uint64_t closure #1 in closure #2 in closure #1 in closure #1 in Collaboration.Management.View.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v187 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Group<_ConditionalContent<HStack<TupleView<(ProgressView<EmptyView, EmptyView>, Text)>>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<OpenURLAction>>>?>);
  __chkstk_darwin();
  uint64_t v162 = (uint64_t)&v152 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Group<_ConditionalContent<HStack<TupleView<(ProgressView<EmptyView, EmptyView>, Text)>>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<OpenURLAction>>>?>, _FlexFrameLayout>);
  __chkstk_darwin();
  uint64_t v164 = (uint64_t)&v152 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v158 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Group<_ConditionalContent<HStack<TupleView<(ProgressView<EmptyView, EmptyView>, Text)>>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<OpenURLAction>>>?>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Int?>>);
  __chkstk_darwin();
  uint64_t v161 = (uint64_t)&v152 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v157 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Group<_ConditionalContent<HStack<TupleView<(ProgressView<EmptyView, EmptyView>, Text)>>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<OpenURLAction>>>?>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Int?>>, _FixedSizeLayout>);
  __chkstk_darwin();
  uint64_t v160 = (uint64_t)&v152 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v156 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Group<_ConditionalContent<HStack<TupleView<(ProgressView<EmptyView, EmptyView>, Text)>>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<OpenURLAction>>>?>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Int?>>, _FixedSizeLayout>, _ForegroundStyleModifier<HierarchicalShapeStyle>>);
  __chkstk_darwin();
  uint64_t v165 = (uint64_t)&v152 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v159 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Group<_ConditionalContent<HStack<TupleView<(ProgressView<EmptyView, EmptyView>, Text)>>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<OpenURLAction>>>?>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Int?>>, _FixedSizeLayout>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Font?>>);
  __chkstk_darwin();
  uint64_t v167 = (uint64_t)&v152 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v163 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Group<_ConditionalContent<HStack<TupleView<(ProgressView<EmptyView, EmptyView>, Text)>>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<OpenURLAction>>>?>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Int?>>, _FixedSizeLayout>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>);
  __chkstk_darwin();
  uint64_t v170 = (uint64_t)&v152 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v169 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Group<_ConditionalContent<HStack<TupleView<(ProgressView<EmptyView, EmptyView>, Text)>>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<OpenURLAction>>>?>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Int?>>, _FixedSizeLayout>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _PaddingLayout>);
  __chkstk_darwin();
  uint64_t v172 = (uint64_t)&v152 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v171 = (uint64_t)&v152 - v11;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HStack<TupleView<(<<opaque return type of View.sheet<A>(isPresented:onDismiss:content:)>>.0, ModifiedContent<ModifiedContent<Collaboration.Management.View.Share.Button, _EnvironmentKeyTransformModifier<Bool>>, _TransactionModifier>?)>>);
  __chkstk_darwin();
  uint64_t v153 = (uint64_t *)((char *)&v152 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v152 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(<<opaque return type of View.sheet<A>(isPresented:onDismiss:content:)>>.0, ModifiedContent<ModifiedContent<Collaboration.Management.View.Share.Button, _EnvironmentKeyTransformModifier<Bool>>, _TransactionModifier>?)>>, _FixedSizeLayout>);
  __chkstk_darwin();
  uint64_t v155 = (uint64_t)&v152 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v154 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<HStack<TupleView<(<<opaque return type of View.sheet<A>(isPresented:onDismiss:content:)>>.0, ModifiedContent<ModifiedContent<Collaboration.Management.View.Share.Button, _EnvironmentKeyTransformModifier<Bool>>, _TransactionModifier>?)>>, _FixedSizeLayout>, _PaddingLayout>);
  __chkstk_darwin();
  uint64_t v168 = (uint64_t)&v152 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v166 = (uint64_t)&v152 - v15;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for TupleView<(ModifiedContent<ModifiedContent<HStack<TupleView<(<<opaque return type of View.sheet<A>(isPresented:onDismiss:content:)>>.0, ModifiedContent<ModifiedContent<Collaboration.Management.View.Share.Button, _EnvironmentKeyTransformModifier<Bool>>, _TransactionModifier>?)>>, _FixedSizeLayout>, _PaddingLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Group<_ConditionalContent<HStack<TupleView<(ProgressView<EmptyView, EmptyView>, Text)>>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<OpenURLAction>>>?>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Int?>>, _FixedSizeLayout>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _PaddingLayout>, Spacer)>?);
  __chkstk_darwin();
  v186 = (char *)&v152 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v185 = (char *)&v152 - v17;
  uint64_t v183 = type metadata accessor for Playlist();
  uint64_t v182 = *(void *)(v183 - 8);
  __chkstk_darwin();
  uint64_t v181 = (char *)&v152 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v174 = type metadata accessor for ArtworkImage.ReusePolicy();
  uint64_t v19 = *(void *)(v174 - 8);
  __chkstk_darwin();
  uint64_t v21 = (char *)&v152 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin();
  int v23 = (char *)&v152 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ArtworkImage.ViewModel?);
  __chkstk_darwin();
  id v25 = (char *)&v152 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v177 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0);
  uint64_t v176 = *(void *)(v177 - 8);
  __chkstk_darwin();
  uint64_t v27 = (char *)&v152 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v173 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>);
  __chkstk_darwin();
  uint64_t v29 = (char *)&v152 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v175 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, CornerRadiusModifier>);
  __chkstk_darwin();
  int v31 = (char *)&v152 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v178 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, CornerRadiusModifier>, BorderViewModifier>);
  __chkstk_darwin();
  uint64_t v180 = (uint64_t)&v152 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v179 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, CornerRadiusModifier>, BorderViewModifier>, _ShadowEffect>);
  __chkstk_darwin();
  uint64_t v189 = (uint64_t)&v152 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v188 = (uint64_t)&v152 - v34;
  uint64_t v184 = a1;
  Collaboration.Management.Model.artworkViewModel.getter(v25);
  uint64_t v35 = enum case for Playlist.Variant.regular(_:);
  uint64_t v36 = type metadata accessor for Playlist.Variant();
  uint64_t v37 = *(void *)(v36 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v37 + 104))(v23, v35, v36);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v23, 0, 1, v36);
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (type: Playlist.Variant?));
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v23, 0, 10, v38);
  uint64_t v195 = 0;
  char v196 = 1;
  uint64_t v197 = 0;
  char v198 = 1;
  uint64_t v199 = 0;
  __int16 v200 = 513;
  uint64_t v39 = v174;
  (*(void (**)(char *, void, uint64_t))(v19 + 104))(v21, enum case for ArtworkImage.ReusePolicy.reusableForDistinctItems(_:), v174);
  static ArtworkImage.with(_:placeholder:size:reusePolicy:)((uint64_t)v25, (uint64_t)v23, (uint64_t)&v195, (uint64_t)v21, (uint64_t)v27);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v39);
  _s17_MusicKit_SwiftUI12ArtworkImageV0a4CoreD0E11PlaceholderOWOhTm_1((uint64_t)v23, type metadata accessor for ArtworkImage.Placeholder);
  outlined destroy of TaskPriority?((uint64_t)v25, (uint64_t *)&demangling cache variable for type metadata for ArtworkImage.ViewModel?);
  if (one-time initialization token for artworkLength != -1) {
    swift_once();
  }
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v40 = v176;
  uint64_t v41 = v177;
  (*(void (**)(char *, char *, uint64_t))(v176 + 16))(v29, v27, v177);
  int v42 = &v29[*(int *)(v173 + 36)];
  long long v43 = v193;
  *(_OWORD *)int v42 = v192;
  *((_OWORD *)v42 + 1) = v43;
  *((_OWORD *)v42 + 2) = v194;
  (*(void (**)(char *, uint64_t))(v40 + 8))(v27, v41);
  if (one-time initialization token for small != -1) {
    swift_once();
  }
  uint64_t v44 = static Corner.small;
  uint64_t v45 = unk_1005AE8D0;
  char v46 = byte_1005AE8D8;
  outlined init with copy of (String, Any)((uint64_t)v29, (uint64_t)v31, (uint64_t *)&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>);
  uint64_t v47 = &v31[*(int *)(v175 + 36)];
  *(void *)uint64_t v47 = v44;
  *((void *)v47 + 1) = v45;
  v47[16] = v46;
  outlined destroy of TaskPriority?((uint64_t)v29, (uint64_t *)&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>);
  if (one-time initialization token for artwork != -1) {
    swift_once();
  }
  uint64_t v48 = static Border.artwork;
  uint64_t v49 = qword_1005AE930;
  char v50 = byte_1005AE938;
  uint64_t v51 = static Corner.small;
  uint64_t v52 = unk_1005AE8D0;
  char v53 = byte_1005AE8D8;
  uint64_t v54 = v180;
  outlined init with copy of (String, Any)((uint64_t)v31, v180, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, CornerRadiusModifier>);
  uint64_t v55 = v54 + *(int *)(v178 + 36);
  *(void *)uint64_t v55 = v48;
  *(void *)(v55 + 8) = v49;
  *(unsigned char *)(v55 + 16) = v50;
  *(void *)(v55 + 24) = v51;
  *(void *)(v55 + 32) = v52;
  *(unsigned char *)(v55 + 40) = v53;
  swift_retain();
  outlined destroy of TaskPriority?((uint64_t)v31, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, CornerRadiusModifier>);
  static Color.black.getter();
  uint64_t v56 = Color.opacity(_:)();
  swift_release();
  uint64_t v57 = v189;
  outlined init with copy of (String, Any)(v54, v189, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, CornerRadiusModifier>, BorderViewModifier>);
  uint64_t v58 = v57 + *(int *)(v179 + 36);
  *(void *)uint64_t v58 = v56;
  *(_OWORD *)(v58 + 8) = xmmword_1004A3CD0;
  *(void *)(v58 + 24) = 0x4000000000000000;
  outlined destroy of TaskPriority?(v54, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, CornerRadiusModifier>, BorderViewModifier>);
  outlined init with take of PresentationSource?(v57, v188, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, CornerRadiusModifier>, BorderViewModifier>, _ShadowEffect>);
  uint64_t v59 = v184;
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v60 = v181;
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v61 = Playlist.name.getter();
  uint64_t v63 = v62;
  (*(void (**)(char *, uint64_t))(v182 + 8))(v60, v183);
  uint64_t v190 = v61;
  uint64_t v191 = v63;
  _sS2SSysWl_1();
  uint64_t v64 = Text.init<A>(_:)();
  uint64_t v66 = v65;
  char v68 = v67 & 1;
  LODWORD(v190) = static HierarchicalShapeStyle.primary.getter();
  uint64_t v69 = Text.foregroundStyle<A>(_:)();
  uint64_t v71 = v70;
  char v73 = v72;
  outlined consume of Text.Storage(v64, v66, v68);
  swift_bridgeObjectRelease();
  if (one-time initialization token for titleFont != -1) {
    swift_once();
  }
  swift_retain();
  uint64_t v74 = Text.font(_:)();
  uint64_t v76 = v75;
  char v78 = v77;
  swift_release();
  outlined consume of Text.Storage(v69, v71, v73 & 1);
  swift_bridgeObjectRelease();
  static Font.Weight.semibold.getter();
  uint64_t v182 = Text.fontWeight(_:)();
  uint64_t v181 = v79;
  int v81 = v80;
  uint64_t v183 = v82;
  outlined consume of Text.Storage(v74, v76, v78 & 1);
  swift_bridgeObjectRelease();
  if (Collaboration.Management.Model.canShare.getter())
  {
    uint64_t v83 = v59;
    LODWORD(v180) = v81;
    uint64_t v84 = static VerticalAlignment.bottom.getter();
    uint64_t v85 = (uint64_t)v153;
    *uint64_t v153 = v84;
    *(void *)(v85 + 8) = 0x4020000000000000;
    *(unsigned char *)(v85 + 16) = 0;
    uint64_t v86 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_HStackLayout, TupleView<(<<opaque return type of View.sheet<A>(isPresented:onDismiss:content:)>>.0, ModifiedContent<ModifiedContent<Collaboration.Management.View.Share.Button, _EnvironmentKeyTransformModifier<Bool>>, _TransactionModifier>?)>>);
    closure #1 in closure #1 in closure #2 in closure #1 in closure #1 in Collaboration.Management.View.body.getter(v59, (char *)(v85 + *(int *)(v86 + 44)));
    uint64_t v87 = v155;
    outlined init with copy of (String, Any)(v85, v155, &demangling cache variable for type metadata for HStack<TupleView<(<<opaque return type of View.sheet<A>(isPresented:onDismiss:content:)>>.0, ModifiedContent<ModifiedContent<Collaboration.Management.View.Share.Button, _EnvironmentKeyTransformModifier<Bool>>, _TransactionModifier>?)>>);
    *(_WORD *)(v87 + *(int *)(v152 + 36)) = 256;
    outlined destroy of TaskPriority?(v85, &demangling cache variable for type metadata for HStack<TupleView<(<<opaque return type of View.sheet<A>(isPresented:onDismiss:content:)>>.0, ModifiedContent<ModifiedContent<Collaboration.Management.View.Share.Button, _EnvironmentKeyTransformModifier<Bool>>, _TransactionModifier>?)>>);
    char v88 = static Edge.Set.top.getter();
    uint64_t v89 = (uint64_t)v186;
    uint64_t v90 = (uint64_t)v185;
    if (one-time initialization token for shareButtonStackTopPadding != -1) {
      swift_once();
    }
    EdgeInsets.init(_all:)();
    uint64_t v92 = v91;
    uint64_t v94 = v93;
    uint64_t v96 = v95;
    uint64_t v98 = v97;
    uint64_t v99 = v168;
    outlined init with copy of (String, Any)(v87, v168, &demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(<<opaque return type of View.sheet<A>(isPresented:onDismiss:content:)>>.0, ModifiedContent<ModifiedContent<Collaboration.Management.View.Share.Button, _EnvironmentKeyTransformModifier<Bool>>, _TransactionModifier>?)>>, _FixedSizeLayout>);
    uint64_t v100 = v99 + *(int *)(v154 + 36);
    *(unsigned char *)uint64_t v100 = v88;
    *(void *)(v100 + 8) = v92;
    *(void *)(v100 + 16) = v94;
    *(void *)(v100 + 24) = v96;
    *(void *)(v100 + 32) = v98;
    *(unsigned char *)(v100 + 40) = 0;
    outlined destroy of TaskPriority?(v87, &demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(<<opaque return type of View.sheet<A>(isPresented:onDismiss:content:)>>.0, ModifiedContent<ModifiedContent<Collaboration.Management.View.Share.Button, _EnvironmentKeyTransformModifier<Bool>>, _TransactionModifier>?)>>, _FixedSizeLayout>);
    uint64_t v101 = v166;
    outlined init with take of PresentationSource?(v99, v166, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<HStack<TupleView<(<<opaque return type of View.sheet<A>(isPresented:onDismiss:content:)>>.0, ModifiedContent<ModifiedContent<Collaboration.Management.View.Share.Button, _EnvironmentKeyTransformModifier<Bool>>, _TransactionModifier>?)>>, _FixedSizeLayout>, _PaddingLayout>);
    uint64_t v102 = v162;
    closure #2 in closure #1 in closure #2 in closure #1 in closure #1 in Collaboration.Management.View.body.getter(v83, v162);
    uint64_t v103 = static Alignment.leading.getter();
    uint64_t v104 = v164;
    specialized View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v164, 0.0, 1, 0.0, 1, v103, v105);
    outlined destroy of TaskPriority?(v102, &demangling cache variable for type metadata for Group<_ConditionalContent<HStack<TupleView<(ProgressView<EmptyView, EmptyView>, Text)>>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<OpenURLAction>>>?>);
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v107 = v161;
    outlined init with copy of (String, Any)(v104, v161, &demangling cache variable for type metadata for ModifiedContent<Group<_ConditionalContent<HStack<TupleView<(ProgressView<EmptyView, EmptyView>, Text)>>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<OpenURLAction>>>?>, _FlexFrameLayout>);
    uint64_t v108 = v107 + *(int *)(v158 + 36);
    *(void *)uint64_t v108 = KeyPath;
    *(void *)(v108 + 8) = 0;
    *(unsigned char *)(v108 + 16) = 1;
    outlined destroy of TaskPriority?(v104, &demangling cache variable for type metadata for ModifiedContent<Group<_ConditionalContent<HStack<TupleView<(ProgressView<EmptyView, EmptyView>, Text)>>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<OpenURLAction>>>?>, _FlexFrameLayout>);
    uint64_t v109 = v160;
    outlined init with copy of (String, Any)(v107, v160, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Group<_ConditionalContent<HStack<TupleView<(ProgressView<EmptyView, EmptyView>, Text)>>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<OpenURLAction>>>?>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Int?>>);
    *(_WORD *)(v109 + *(int *)(v157 + 36)) = 256;
    outlined destroy of TaskPriority?(v107, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Group<_ConditionalContent<HStack<TupleView<(ProgressView<EmptyView, EmptyView>, Text)>>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<OpenURLAction>>>?>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Int?>>);
    LODWORD(KeyPath) = static HierarchicalShapeStyle.secondary.getter();
    uint64_t v110 = v165;
    outlined init with copy of (String, Any)(v109, v165, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Group<_ConditionalContent<HStack<TupleView<(ProgressView<EmptyView, EmptyView>, Text)>>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<OpenURLAction>>>?>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Int?>>, _FixedSizeLayout>);
    *(_DWORD *)(v110 + *(int *)(v156 + 36)) = KeyPath;
    outlined destroy of TaskPriority?(v109, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Group<_ConditionalContent<HStack<TupleView<(ProgressView<EmptyView, EmptyView>, Text)>>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<OpenURLAction>>>?>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Int?>>, _FixedSizeLayout>);
    uint64_t v111 = static Font.footnote.getter();
    uint64_t v112 = swift_getKeyPath();
    uint64_t v113 = v167;
    outlined init with copy of (String, Any)(v110, v167, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Group<_ConditionalContent<HStack<TupleView<(ProgressView<EmptyView, EmptyView>, Text)>>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<OpenURLAction>>>?>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Int?>>, _FixedSizeLayout>, _ForegroundStyleModifier<HierarchicalShapeStyle>>);
    uint64_t v114 = (uint64_t *)(v113 + *(int *)(v159 + 36));
    *uint64_t v114 = v112;
    v114[1] = v111;
    outlined destroy of TaskPriority?(v110, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Group<_ConditionalContent<HStack<TupleView<(ProgressView<EmptyView, EmptyView>, Text)>>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<OpenURLAction>>>?>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Int?>>, _FixedSizeLayout>, _ForegroundStyleModifier<HierarchicalShapeStyle>>);
    LOBYTE(v111) = static Edge.Set.horizontal.getter();
    EdgeInsets.init(_all:)();
    uint64_t v116 = v115;
    uint64_t v118 = v117;
    uint64_t v120 = v119;
    uint64_t v122 = v121;
    uint64_t v123 = v170;
    outlined init with copy of (String, Any)(v113, v170, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Group<_ConditionalContent<HStack<TupleView<(ProgressView<EmptyView, EmptyView>, Text)>>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<OpenURLAction>>>?>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Int?>>, _FixedSizeLayout>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Font?>>);
    uint64_t v124 = v123 + *(int *)(v163 + 36);
    *(unsigned char *)uint64_t v124 = v111;
    *(void *)(v124 + 8) = v116;
    *(void *)(v124 + 16) = v118;
    *(void *)(v124 + 24) = v120;
    *(void *)(v124 + 32) = v122;
    *(unsigned char *)(v124 + 40) = 0;
    outlined destroy of TaskPriority?(v113, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Group<_ConditionalContent<HStack<TupleView<(ProgressView<EmptyView, EmptyView>, Text)>>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<OpenURLAction>>>?>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Int?>>, _FixedSizeLayout>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Font?>>);
    char v125 = static Edge.Set.top.getter();
    if (one-time initialization token for resetLinkGroupTopPadding != -1) {
      swift_once();
    }
    EdgeInsets.init(_all:)();
    uint64_t v127 = v126;
    uint64_t v129 = v128;
    uint64_t v131 = v130;
    uint64_t v133 = v132;
    uint64_t v134 = v172;
    outlined init with copy of (String, Any)(v123, v172, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Group<_ConditionalContent<HStack<TupleView<(ProgressView<EmptyView, EmptyView>, Text)>>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<OpenURLAction>>>?>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Int?>>, _FixedSizeLayout>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>);
    uint64_t v135 = v134 + *(int *)(v169 + 36);
    *(unsigned char *)uint64_t v135 = v125;
    *(void *)(v135 + 8) = v127;
    *(void *)(v135 + 16) = v129;
    *(void *)(v135 + 24) = v131;
    *(void *)(v135 + 32) = v133;
    *(unsigned char *)(v135 + 40) = 0;
    outlined destroy of TaskPriority?(v123, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Group<_ConditionalContent<HStack<TupleView<(ProgressView<EmptyView, EmptyView>, Text)>>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<OpenURLAction>>>?>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Int?>>, _FixedSizeLayout>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>);
    uint64_t v136 = v171;
    outlined init with take of PresentationSource?(v134, v171, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Group<_ConditionalContent<HStack<TupleView<(ProgressView<EmptyView, EmptyView>, Text)>>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<OpenURLAction>>>?>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Int?>>, _FixedSizeLayout>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _PaddingLayout>);
    outlined init with copy of (String, Any)(v101, v99, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<HStack<TupleView<(<<opaque return type of View.sheet<A>(isPresented:onDismiss:content:)>>.0, ModifiedContent<ModifiedContent<Collaboration.Management.View.Share.Button, _EnvironmentKeyTransformModifier<Bool>>, _TransactionModifier>?)>>, _FixedSizeLayout>, _PaddingLayout>);
    outlined init with copy of (String, Any)(v136, v134, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Group<_ConditionalContent<HStack<TupleView<(ProgressView<EmptyView, EmptyView>, Text)>>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<OpenURLAction>>>?>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Int?>>, _FixedSizeLayout>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _PaddingLayout>);
    outlined init with copy of (String, Any)(v99, v89, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<HStack<TupleView<(<<opaque return type of View.sheet<A>(isPresented:onDismiss:content:)>>.0, ModifiedContent<ModifiedContent<Collaboration.Management.View.Share.Button, _EnvironmentKeyTransformModifier<Bool>>, _TransactionModifier>?)>>, _FixedSizeLayout>, _PaddingLayout>);
    uint64_t v137 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModifiedContent<ModifiedContent<HStack<TupleView<(<<opaque return type of View.sheet<A>(isPresented:onDismiss:content:)>>.0, ModifiedContent<ModifiedContent<Collaboration.Management.View.Share.Button, _EnvironmentKeyTransformModifier<Bool>>, _TransactionModifier>?)>>, _FixedSizeLayout>, _PaddingLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Group<_ConditionalContent<HStack<TupleView<(ProgressView<EmptyView, EmptyView>, Text)>>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<OpenURLAction>>>?>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Int?>>, _FixedSizeLayout>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _PaddingLayout>, Spacer));
    outlined init with copy of (String, Any)(v134, v89 + *(int *)(v137 + 48), &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Group<_ConditionalContent<HStack<TupleView<(ProgressView<EmptyView, EmptyView>, Text)>>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<OpenURLAction>>>?>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Int?>>, _FixedSizeLayout>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _PaddingLayout>);
    uint64_t v138 = v89 + *(int *)(v137 + 64);
    *(void *)uint64_t v138 = 0x3FF0000000000000;
    *(unsigned char *)(v138 + 8) = 0;
    outlined destroy of TaskPriority?(v136, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Group<_ConditionalContent<HStack<TupleView<(ProgressView<EmptyView, EmptyView>, Text)>>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<OpenURLAction>>>?>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Int?>>, _FixedSizeLayout>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _PaddingLayout>);
    outlined destroy of TaskPriority?(v101, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<HStack<TupleView<(<<opaque return type of View.sheet<A>(isPresented:onDismiss:content:)>>.0, ModifiedContent<ModifiedContent<Collaboration.Management.View.Share.Button, _EnvironmentKeyTransformModifier<Bool>>, _TransactionModifier>?)>>, _FixedSizeLayout>, _PaddingLayout>);
    outlined destroy of TaskPriority?(v134, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Group<_ConditionalContent<HStack<TupleView<(ProgressView<EmptyView, EmptyView>, Text)>>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<OpenURLAction>>>?>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Int?>>, _FixedSizeLayout>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _PaddingLayout>);
    outlined destroy of TaskPriority?(v99, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<HStack<TupleView<(<<opaque return type of View.sheet<A>(isPresented:onDismiss:content:)>>.0, ModifiedContent<ModifiedContent<Collaboration.Management.View.Share.Button, _EnvironmentKeyTransformModifier<Bool>>, _TransactionModifier>?)>>, _FixedSizeLayout>, _PaddingLayout>);
    uint64_t v139 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TupleView<(ModifiedContent<ModifiedContent<HStack<TupleView<(<<opaque return type of View.sheet<A>(isPresented:onDismiss:content:)>>.0, ModifiedContent<ModifiedContent<Collaboration.Management.View.Share.Button, _EnvironmentKeyTransformModifier<Bool>>, _TransactionModifier>?)>>, _FixedSizeLayout>, _PaddingLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Group<_ConditionalContent<HStack<TupleView<(ProgressView<EmptyView, EmptyView>, Text)>>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<OpenURLAction>>>?>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Int?>>, _FixedSizeLayout>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _PaddingLayout>, Spacer)>);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v139 - 8) + 56))(v89, 0, 1, v139);
    outlined init with take of PresentationSource?(v89, v90, (uint64_t *)&demangling cache variable for type metadata for TupleView<(ModifiedContent<ModifiedContent<HStack<TupleView<(<<opaque return type of View.sheet<A>(isPresented:onDismiss:content:)>>.0, ModifiedContent<ModifiedContent<Collaboration.Management.View.Share.Button, _EnvironmentKeyTransformModifier<Bool>>, _TransactionModifier>?)>>, _FixedSizeLayout>, _PaddingLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Group<_ConditionalContent<HStack<TupleView<(ProgressView<EmptyView, EmptyView>, Text)>>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<OpenURLAction>>>?>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Int?>>, _FixedSizeLayout>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _PaddingLayout>, Spacer)>?);
    LOBYTE(v81) = v180;
  }
  else
  {
    uint64_t v140 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TupleView<(ModifiedContent<ModifiedContent<HStack<TupleView<(<<opaque return type of View.sheet<A>(isPresented:onDismiss:content:)>>.0, ModifiedContent<ModifiedContent<Collaboration.Management.View.Share.Button, _EnvironmentKeyTransformModifier<Bool>>, _TransactionModifier>?)>>, _FixedSizeLayout>, _PaddingLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Group<_ConditionalContent<HStack<TupleView<(ProgressView<EmptyView, EmptyView>, Text)>>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<OpenURLAction>>>?>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Int?>>, _FixedSizeLayout>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _PaddingLayout>, Spacer)>);
    uint64_t v90 = (uint64_t)v185;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v140 - 8) + 56))(v185, 1, 1, v140);
    uint64_t v89 = (uint64_t)v186;
  }
  char v141 = v81 & 1;
  v186 = (char *)static VerticalAlignment.center.getter();
  uint64_t v142 = v188;
  uint64_t v143 = v189;
  outlined init with copy of (String, Any)(v188, v189, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, CornerRadiusModifier>, BorderViewModifier>, _ShadowEffect>);
  outlined init with copy of (String, Any)(v90, v89, (uint64_t *)&demangling cache variable for type metadata for TupleView<(ModifiedContent<ModifiedContent<HStack<TupleView<(<<opaque return type of View.sheet<A>(isPresented:onDismiss:content:)>>.0, ModifiedContent<ModifiedContent<Collaboration.Management.View.Share.Button, _EnvironmentKeyTransformModifier<Bool>>, _TransactionModifier>?)>>, _FixedSizeLayout>, _PaddingLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Group<_ConditionalContent<HStack<TupleView<(ProgressView<EmptyView, EmptyView>, Text)>>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<OpenURLAction>>>?>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Int?>>, _FixedSizeLayout>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _PaddingLayout>, Spacer)>?);
  uint64_t v144 = v187;
  outlined init with copy of (String, Any)(v143, v187, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, CornerRadiusModifier>, BorderViewModifier>, _ShadowEffect>);
  uint64_t v145 = v90;
  uint64_t v146 = (int *)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, CornerRadiusModifier>, BorderViewModifier>, _ShadowEffect>, Text, TupleView<(ModifiedContent<ModifiedContent<HStack<TupleView<(<<opaque return type of View.sheet<A>(isPresented:onDismiss:content:)>>.0, ModifiedContent<ModifiedContent<Collaboration.Management.View.Share.Button, _EnvironmentKeyTransformModifier<Bool>>, _TransactionModifier>?)>>, _FixedSizeLayout>, _PaddingLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Group<_ConditionalContent<HStack<TupleView<(ProgressView<EmptyView, EmptyView>, Text)>>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<OpenURLAction>>>?>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Int?>>, _FixedSizeLayout>, _ForegroundStyleModifier<Hierarchical);
  uint64_t v147 = v144 + v146[12];
  uint64_t v148 = v182;
  uint64_t v149 = (uint64_t)v181;
  *(void *)uint64_t v147 = v182;
  *(void *)(v147 + 8) = v149;
  *(unsigned char *)(v147 + 16) = v141;
  *(void *)(v147 + 24) = v183;
  outlined init with copy of (String, Any)(v89, v144 + v146[16], (uint64_t *)&demangling cache variable for type metadata for TupleView<(ModifiedContent<ModifiedContent<HStack<TupleView<(<<opaque return type of View.sheet<A>(isPresented:onDismiss:content:)>>.0, ModifiedContent<ModifiedContent<Collaboration.Management.View.Share.Button, _EnvironmentKeyTransformModifier<Bool>>, _TransactionModifier>?)>>, _FixedSizeLayout>, _PaddingLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Group<_ConditionalContent<HStack<TupleView<(ProgressView<EmptyView, EmptyView>, Text)>>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<OpenURLAction>>>?>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Int?>>, _FixedSizeLayout>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _PaddingLayout>, Spacer)>?);
  uint64_t v150 = v144 + v146[20];
  *(void *)uint64_t v150 = v186;
  *(void *)(v150 + 8) = 0;
  *(unsigned char *)(v150 + 16) = 1;
  *(void *)(v150 + 24) = 0;
  *(unsigned char *)(v150 + 32) = 1;
  outlined copy of Text.Storage(v148, v149, v141);
  swift_bridgeObjectRetain();
  outlined destroy of TaskPriority?(v145, (uint64_t *)&demangling cache variable for type metadata for TupleView<(ModifiedContent<ModifiedContent<HStack<TupleView<(<<opaque return type of View.sheet<A>(isPresented:onDismiss:content:)>>.0, ModifiedContent<ModifiedContent<Collaboration.Management.View.Share.Button, _EnvironmentKeyTransformModifier<Bool>>, _TransactionModifier>?)>>, _FixedSizeLayout>, _PaddingLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Group<_ConditionalContent<HStack<TupleView<(ProgressView<EmptyView, EmptyView>, Text)>>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<OpenURLAction>>>?>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Int?>>, _FixedSizeLayout>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _PaddingLayout>, Spacer)>?);
  outlined destroy of TaskPriority?(v142, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, CornerRadiusModifier>, BorderViewModifier>, _ShadowEffect>);
  outlined destroy of TaskPriority?(v89, (uint64_t *)&demangling cache variable for type metadata for TupleView<(ModifiedContent<ModifiedContent<HStack<TupleView<(<<opaque return type of View.sheet<A>(isPresented:onDismiss:content:)>>.0, ModifiedContent<ModifiedContent<Collaboration.Management.View.Share.Button, _EnvironmentKeyTransformModifier<Bool>>, _TransactionModifier>?)>>, _FixedSizeLayout>, _PaddingLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Group<_ConditionalContent<HStack<TupleView<(ProgressView<EmptyView, EmptyView>, Text)>>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<OpenURLAction>>>?>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Int?>>, _FixedSizeLayout>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _PaddingLayout>, Spacer)>?);
  outlined consume of Text.Storage(v148, v149, v141);
  swift_bridgeObjectRelease();
  return outlined destroy of TaskPriority?(v143, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, CornerRadiusModifier>, BorderViewModifier>, _ShadowEffect>);
}

uint64_t closure #1 in closure #1 in closure #2 in closure #1 in closure #1 in Collaboration.Management.View.body.getter@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v105 = a2;
  uint64_t v108 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Collaboration.Management.View.Share.Button, _EnvironmentKeyTransformModifier<Bool>>, _TransactionModifier>);
  uint64_t v103 = *(void *)(v108 - 8);
  __chkstk_darwin();
  uint64_t v91 = (uint64_t)&v79 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v90 = (uint64_t)&v79 - v4;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Collaboration.Management.View.Share.Button, _EnvironmentKeyTransformModifier<Bool>>, _TransactionModifier>?);
  __chkstk_darwin();
  uint64_t v104 = (uint64_t)&v79 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v101 = (char *)&v79 - v6;
  __swift_instantiateConcreteTypeFromMangledName(&_s10Foundation3URLVSgMD_1);
  __chkstk_darwin();
  uint64_t v89 = (uint64_t)&v79 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v79 - v8;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ColorScheme>);
  __chkstk_darwin();
  uint64_t v11 = (uint64_t *)((char *)&v79 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = type metadata accessor for Collaboration.Management.View(0);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v99 = v12 - 8;
  uint64_t v14 = v13;
  uint64_t v15 = *(void *)(v13 + 64);
  __chkstk_darwin();
  uint64_t v16 = type metadata accessor for Collaboration.Management.View.Share.Button(0);
  __chkstk_darwin();
  char v88 = (char *)&v79 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v19 = (char *)&v79 - v18;
  uint64_t v95 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Collaboration.Management.View.Share.Button, _EnvironmentKeyTransformModifier<Bool>>);
  __chkstk_darwin();
  uint64_t v87 = (uint64_t)&v79 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v22 = (char *)&v79 - v21;
  uint64_t v98 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.sheet<A>(isPresented:onDismiss:content:)>>.0);
  uint64_t v100 = *(void *)(v98 - 8);
  __chkstk_darwin();
  uint64_t v102 = (char *)&v79 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v97 = (char *)&v79 - v24;
  __chkstk_darwin();
  uint64_t v96 = (char *)&v79 - v25;
  uint64_t v94 = type metadata accessor for Collaboration.Management.View;
  uint64_t v92 = (uint64_t)&v79 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of Collaboration.Management.View(a1, v92, type metadata accessor for Collaboration.Management.View);
  uint64_t v26 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v27 = (v26 + 16) & ~v26;
  uint64_t v107 = v26 | 7;
  uint64_t v28 = swift_allocObject();
  uint64_t v93 = type metadata accessor for Collaboration.Management.View;
  outlined init with take of Collaboration.Management.View((uint64_t)&v79 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v28 + v27, type metadata accessor for Collaboration.Management.View);
  *uint64_t v11 = swift_getKeyPath();
  uint64_t v84 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ColorScheme>.Content);
  swift_storeEnumTagMultiPayload();
  uint64_t KeyPath = swift_getKeyPath();
  char *v19 = 0;
  *((void *)v19 + 1) = partial apply for closure #1 in closure #1 in closure #1 in closure #2 in closure #1 in closure #1 in Collaboration.Management.View.body.getter;
  *((void *)v19 + 2) = v28;
  uint64_t v30 = (uint64_t)&v19[*(int *)(v16 + 24)];
  uint64_t v86 = v11;
  outlined init with take of PresentationSource?((uint64_t)v11, v30, &demangling cache variable for type metadata for Environment<ColorScheme>);
  uint64_t v85 = v16;
  int v31 = &v19[*(int *)(v16 + 28)];
  *(void *)int v31 = KeyPath;
  v31[8] = 0;
  uint64_t v32 = a1;
  Collaboration.Management.Model.collaborationURL.getter((uint64_t)v9);
  uint64_t v33 = type metadata accessor for URL();
  uint64_t v34 = *(void *)(v33 - 8);
  uint64_t v35 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 48);
  unsigned int v106 = 1;
  uint64_t v83 = v33;
  uint64_t v82 = v35;
  uint64_t v81 = v34 + 48;
  LOBYTE(KeyPath) = ((unsigned int (*)(char *, uint64_t))v35)(v9, 1) == 1;
  outlined destroy of TaskPriority?((uint64_t)v9, &_s10Foundation3URLVSgMD_1);
  uint64_t v36 = swift_getKeyPath();
  uint64_t v37 = swift_allocObject();
  *(unsigned char *)(v37 + 16) = KeyPath;
  outlined init with copy of Collaboration.Management.View((uint64_t)v19, (uint64_t)v22, type metadata accessor for Collaboration.Management.View.Share.Button);
  uint64_t v38 = v95;
  uint64_t v39 = (uint64_t *)&v22[*(int *)(v95 + 36)];
  *uint64_t v39 = v36;
  v39[1] = (uint64_t)partial apply for closure #1 in View.disabled(_:);
  v39[2] = v37;
  _s17_MusicKit_SwiftUI12ArtworkImageV0a4CoreD0E11PlaceholderOWOhTm_1((uint64_t)v19, type metadata accessor for Collaboration.Management.View.Share.Button);
  uint64_t v40 = v32;
  uint64_t v41 = v92;
  uint64_t v42 = v40 + *(int *)(v99 + 44);
  char v43 = *(unsigned char *)v42;
  uint64_t v44 = *(void *)(v42 + 8);
  char v109 = v43;
  uint64_t v110 = v44;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Bool>);
  State.projectedValue.getter();
  uint64_t v99 = v40;
  outlined init with copy of Collaboration.Management.View(v40, v41, v94);
  uint64_t v94 = (uint64_t (*)(uint64_t))(v27 + v15);
  uint64_t v45 = swift_allocObject();
  uint64_t v80 = v27;
  outlined init with take of Collaboration.Management.View(v41, v45 + v27, v93);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Collaboration.Management.ActivityViewController?);
  lazy protocol witness table accessor for type ModifiedContent<Collaboration.Management.View.Share.Button, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>();
  uint64_t v46 = v98;
  lazy protocol witness table accessor for type ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>? and conformance <A> A?(&lazy protocol witness table cache variable for type Collaboration.Management.ActivityViewController? and conformance <A> A?, &demangling cache variable for type metadata for Collaboration.Management.ActivityViewController?, (void (*)(void))lazy protocol witness table accessor for type Collaboration.Management.ActivityViewController and conformance Collaboration.Management.ActivityViewController);
  uint64_t v47 = v96;
  uint64_t v48 = v38;
  uint64_t v49 = v97;
  View.sheet<A>(isPresented:onDismiss:content:)();
  uint64_t v50 = (uint64_t)v101;
  swift_release();
  swift_release();
  swift_release();
  uint64_t v51 = (uint64_t)v22;
  uint64_t v52 = v100;
  outlined destroy of TaskPriority?(v51, &demangling cache variable for type metadata for ModifiedContent<Collaboration.Management.View.Share.Button, _EnvironmentKeyTransformModifier<Bool>>);
  (*(void (**)(char *, char *, uint64_t))(v52 + 32))(v47, v49, v46);
  id v53 = [self currentTraitCollection];
  id v54 = [v53 userInterfaceIdiom];

  if (v54 != (id)6)
  {
    outlined init with copy of Collaboration.Management.View(v99, v41, type metadata accessor for Collaboration.Management.View);
    uint64_t v55 = swift_allocObject();
    outlined init with take of Collaboration.Management.View(v41, v55 + v80, type metadata accessor for Collaboration.Management.View);
    uint64_t v56 = swift_getKeyPath();
    uint64_t v57 = (uint64_t)v86;
    *uint64_t v86 = v56;
    swift_storeEnumTagMultiPayload();
    uint64_t v58 = swift_getKeyPath();
    uint64_t v59 = (uint64_t)v88;
    *char v88 = 1;
    *(void *)(v59 + 8) = partial apply for closure #3 in closure #1 in closure #1 in closure #2 in closure #1 in closure #1 in Collaboration.Management.View.body.getter;
    *(void *)(v59 + 16) = v55;
    uint64_t v60 = v85;
    outlined init with take of PresentationSource?(v57, v59 + *(int *)(v85 + 24), &demangling cache variable for type metadata for Environment<ColorScheme>);
    uint64_t v61 = v59 + *(int *)(v60 + 28);
    *(void *)uint64_t v61 = v58;
    *(unsigned char *)(v61 + 8) = 0;
    uint64_t v62 = v89;
    Collaboration.Management.Model.collaborationURL.getter(v89);
    BOOL v63 = v82(v62, 1, v83) == 1;
    outlined destroy of TaskPriority?(v62, &_s10Foundation3URLVSgMD_1);
    uint64_t v64 = swift_getKeyPath();
    uint64_t v65 = swift_allocObject();
    *(unsigned char *)(v65 + 16) = v63;
    uint64_t v66 = v87;
    outlined init with copy of Collaboration.Management.View(v59, v87, type metadata accessor for Collaboration.Management.View.Share.Button);
    char v67 = (uint64_t *)(v66 + *(int *)(v48 + 36));
    *char v67 = v64;
    v67[1] = (uint64_t)closure #1 in View.disabled(_:)partial apply;
    v67[2] = v65;
    _s17_MusicKit_SwiftUI12ArtworkImageV0a4CoreD0E11PlaceholderOWOhTm_1(v59, type metadata accessor for Collaboration.Management.View.Share.Button);
    uint64_t v68 = v91;
    outlined init with copy of (String, Any)(v66, v91, &demangling cache variable for type metadata for ModifiedContent<Collaboration.Management.View.Share.Button, _EnvironmentKeyTransformModifier<Bool>>);
    uint64_t v69 = (uint64_t (**)())(v68 + *(int *)(v108 + 36));
    *uint64_t v69 = closure #4 in closure #1 in closure #1 in closure #2 in closure #1 in closure #1 in Collaboration.Management.View.body.getter;
    v69[1] = 0;
    outlined destroy of TaskPriority?(v66, &demangling cache variable for type metadata for ModifiedContent<Collaboration.Management.View.Share.Button, _EnvironmentKeyTransformModifier<Bool>>);
    uint64_t v70 = v68;
    uint64_t v71 = v90;
    outlined init with take of PresentationSource?(v70, v90, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Collaboration.Management.View.Share.Button, _EnvironmentKeyTransformModifier<Bool>>, _TransactionModifier>);
    outlined init with take of PresentationSource?(v71, v50, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Collaboration.Management.View.Share.Button, _EnvironmentKeyTransformModifier<Bool>>, _TransactionModifier>);
    unsigned int v106 = 0;
  }
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v103 + 56))(v50, v106, 1, v108);
  char v72 = *(void (**)(char *, char *, uint64_t))(v52 + 16);
  char v73 = v102;
  v72(v102, v47, v46);
  uint64_t v74 = v104;
  outlined init with copy of (String, Any)(v50, v104, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Collaboration.Management.View.Share.Button, _EnvironmentKeyTransformModifier<Bool>>, _TransactionModifier>?);
  uint64_t v75 = v105;
  v72(v105, v73, v46);
  uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (<<opaque return type of View.sheet<A>(isPresented:onDismiss:content:)>>.0, ModifiedContent<ModifiedContent<Collaboration.Management.View.Share.Button, _EnvironmentKeyTransformModifier<Bool>>, _TransactionModifier>?));
  outlined init with copy of (String, Any)(v74, (uint64_t)&v75[*(int *)(v76 + 48)], &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Collaboration.Management.View.Share.Button, _EnvironmentKeyTransformModifier<Bool>>, _TransactionModifier>?);
  outlined destroy of TaskPriority?(v50, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Collaboration.Management.View.Share.Button, _EnvironmentKeyTransformModifier<Bool>>, _TransactionModifier>?);
  char v77 = *(void (**)(char *, uint64_t))(v52 + 8);
  v77(v47, v46);
  outlined destroy of TaskPriority?(v74, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Collaboration.Management.View.Share.Button, _EnvironmentKeyTransformModifier<Bool>>, _TransactionModifier>?);
  return ((uint64_t (*)(char *, uint64_t))v77)(v73, v46);
}

uint64_t closure #1 in closure #1 in closure #1 in closure #2 in closure #1 in closure #1 in Collaboration.Management.View.body.getter(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = &v14[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = (char *)(a1 + *(int *)(type metadata accessor for Collaboration.Management.View(0) + 36));
  char v7 = *v6;
  uint64_t v8 = *((void *)v6 + 1);
  v14[16] = v7;
  uint64_t v15 = v8;
  v14[15] = 1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Bool>);
  State.wrappedValue.setter();
  uint64_t v9 = Logger.collaboration.unsafeMutableAddressor();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v3 + 16))(v5, v9, v2);
  uint64_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v12 = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "[Management] Share Sheet button tapped", v12, 2u);
    swift_slowDealloc();
  }

  return (*(uint64_t (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t closure #2 in closure #1 in closure #1 in closure #2 in closure #1 in closure #1 in Collaboration.Management.View.body.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for Playlist();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&_s10Foundation3URLVSgMD_1);
  __chkstk_darwin();
  char v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for URL();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin();
  os_log_type_t v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  Collaboration.Management.Model.collaborationURL.getter((uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    uint64_t result = outlined destroy of TaskPriority?((uint64_t)v7, &_s10Foundation3URLVSgMD_1);
    uint64_t v13 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
    swift_getKeyPath();
    uint64_t v15 = v2;
    swift_getKeyPath();
    swift_retain();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    uint64_t v13 = Collaboration.Manager.activityViewController(for:url:)((uint64_t)v5, (uint64_t)v11);
    swift_release();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v15);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  *a1 = v13;
  return result;
}

uint64_t closure #3 in closure #1 in closure #1 in closure #2 in closure #1 in closure #1 in Collaboration.Management.View.body.getter(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = &v14[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = (char *)(a1 + *(int *)(type metadata accessor for Collaboration.Management.View(0) + 40));
  char v7 = *v6;
  uint64_t v8 = *((void *)v6 + 1);
  v14[16] = v7;
  uint64_t v15 = v8;
  v14[15] = 1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Bool>);
  State.wrappedValue.setter();
  uint64_t v9 = Logger.collaboration.unsafeMutableAddressor();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v3 + 16))(v5, v9, v2);
  uint64_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v12 = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "[Management] QRCode button tapped", v12, 2u);
    swift_slowDealloc();
  }

  return (*(uint64_t (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t closure #4 in closure #1 in closure #1 in closure #2 in closure #1 in closure #1 in Collaboration.Management.View.body.getter()
{
  return Transaction.disablesAnimations.setter();
}

uint64_t closure #2 in closure #1 in closure #2 in closure #1 in closure #1 in Collaboration.Management.View.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v62 = a2;
  uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<OpenURLAction>);
  __chkstk_darwin();
  uint64_t v60 = (uint64_t *)&v43[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v52 = *(void *)(type metadata accessor for Collaboration.Management.View(0) - 8);
  __chkstk_darwin();
  uint64_t v53 = v4;
  id v54 = &v43[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = type metadata accessor for OpenURLAction();
  uint64_t v58 = *(void *)(v5 - 8);
  uint64_t v59 = v5;
  __chkstk_darwin();
  uint64_t v56 = &v43[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<OpenURLAction>>);
  __chkstk_darwin();
  uint64_t v9 = &v43[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin();
  uint64_t v61 = &v43[-v10];
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<HStack<TupleView<(ProgressView<EmptyView, EmptyView>, Text)>>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<OpenURLAction>>>.Storage);
  __chkstk_darwin();
  uint64_t v13 = &v43[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<HStack<TupleView<(ProgressView<EmptyView, EmptyView>, Text)>>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<OpenURLAction>>>?);
  __chkstk_darwin();
  uint64_t v15 = &v43[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HStack<TupleView<(ProgressView<EmptyView, EmptyView>, Text)>>);
  __chkstk_darwin();
  uint64_t v18 = &v43[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v55 = a1;
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (v63 == 1)
  {
    *(void *)uint64_t v18 = static VerticalAlignment.center.getter();
    *((void *)v18 + 1) = 0x4020000000000000;
    unsigned char v18[16] = 0;
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_HStackLayout, TupleView<(ProgressView<EmptyView, EmptyView>, Text)>>);
    closure #1 in closure #2 in closure #1 in closure #2 in closure #1 in closure #1 in Collaboration.Management.View.body.getter(&v18[*(int *)(v19 + 44)]);
    outlined init with copy of (String, Any)((uint64_t)v18, (uint64_t)v13, &demangling cache variable for type metadata for HStack<TupleView<(ProgressView<EmptyView, EmptyView>, Text)>>);
    swift_storeEnumTagMultiPayload();
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type HStack<TupleView<(ProgressView<EmptyView, EmptyView>, Text)>> and conformance HStack<A>, &demangling cache variable for type metadata for HStack<TupleView<(ProgressView<EmptyView, EmptyView>, Text)>>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<OpenURLAction>> and conformance <> ModifiedContent<A, B>();
    _ConditionalContent<>.init(storage:)();
    outlined destroy of TaskPriority?((uint64_t)v18, &demangling cache variable for type metadata for HStack<TupleView<(ProgressView<EmptyView, EmptyView>, Text)>>);
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<HStack<TupleView<(ProgressView<EmptyView, EmptyView>, Text)>>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<OpenURLAction>>>);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v15, 0, 1, v20);
    uint64_t v21 = (uint64_t)v15;
    return outlined init with take of PresentationSource?(v21, v62, &demangling cache variable for type metadata for _ConditionalContent<HStack<TupleView<(ProgressView<EmptyView, EmptyView>, Text)>>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<OpenURLAction>>>?);
  }
  uint64_t v48 = v11;
  uint64_t v49 = v13;
  uint64_t v47 = v15;
  uint64_t v50 = v16;
  uint64_t v51 = v7;
  Collaboration.Management.Model.invitationExpirationString.getter();
  if (v22)
  {
    LocalizedStringKey.init(_:)();
    uint64_t v23 = Text.init(_:tableName:bundle:comment:)();
    uint64_t v25 = v24;
    uint64_t v46 = v26;
    int v28 = v27 & 1;
    uint64_t v29 = static Color.accentColor.getter();
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v45 = swift_getKeyPath();
    int v31 = v54;
    outlined init with copy of Collaboration.Management.View(v55, (uint64_t)v54, type metadata accessor for Collaboration.Management.View);
    unint64_t v32 = (*(unsigned __int8 *)(v52 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80);
    uint64_t v33 = swift_allocObject();
    outlined init with take of Collaboration.Management.View((uint64_t)v31, v33 + v32, type metadata accessor for Collaboration.Management.View);
    uint64_t v34 = v56;
    OpenURLAction.init(handler:)();
    uint64_t v35 = v58;
    uint64_t v37 = v59;
    uint64_t v36 = v60;
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v58 + 16))((unsigned char *)v60 + *(int *)(v57 + 28), v34, v59);
    *uint64_t v36 = v45;
    outlined init with copy of (String, Any)((uint64_t)v36, (uint64_t)&v9[*(int *)(v51 + 36)], &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<OpenURLAction>);
    *(void *)uint64_t v9 = v23;
    *((void *)v9 + 1) = v25;
    int v44 = v28;
    v9[16] = v28;
    *((void *)v9 + 3) = v46;
    *((void *)v9 + 4) = KeyPath;
    *((void *)v9 + 5) = v29;
    outlined copy of Text.Storage(v23, v25, v28);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    outlined destroy of TaskPriority?((uint64_t)v36, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<OpenURLAction>);
    (*(void (**)(unsigned char *, uint64_t))(v35 + 8))(v34, v37);
    outlined consume of Text.Storage(v23, v25, v44);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v38 = v61;
    outlined init with take of PresentationSource?((uint64_t)v9, (uint64_t)v61, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<OpenURLAction>>);
    outlined init with copy of (String, Any)((uint64_t)v38, (uint64_t)v49, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<OpenURLAction>>);
    swift_storeEnumTagMultiPayload();
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type HStack<TupleView<(ProgressView<EmptyView, EmptyView>, Text)>> and conformance HStack<A>, &demangling cache variable for type metadata for HStack<TupleView<(ProgressView<EmptyView, EmptyView>, Text)>>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<OpenURLAction>> and conformance <> ModifiedContent<A, B>();
    uint64_t v39 = (uint64_t)v47;
    _ConditionalContent<>.init(storage:)();
    outlined destroy of TaskPriority?((uint64_t)v38, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<OpenURLAction>>);
    uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<HStack<TupleView<(ProgressView<EmptyView, EmptyView>, Text)>>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<OpenURLAction>>>);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v39, 0, 1, v40);
    uint64_t v21 = v39;
    return outlined init with take of PresentationSource?(v21, v62, &demangling cache variable for type metadata for _ConditionalContent<HStack<TupleView<(ProgressView<EmptyView, EmptyView>, Text)>>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<OpenURLAction>>>?);
  }
  uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<HStack<TupleView<(ProgressView<EmptyView, EmptyView>, Text)>>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<OpenURLAction>>>);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v62, 1, 1, v42);
}

uint64_t closure #1 in closure #2 in closure #1 in closure #2 in closure #1 in closure #1 in Collaboration.Management.View.body.getter@<X0>(char *a1@<X8>)
{
  int v31 = a1;
  type metadata accessor for Locale();
  __chkstk_darwin();
  uint64_t v1 = type metadata accessor for String.LocalizationValue();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin();
  uint64_t v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v6 = (char *)&v29 - v5;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ProgressView<EmptyView, EmptyView>);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin();
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v12 = (char *)&v29 - v11;
  ProgressView<>.init<>()();
  String.LocalizationValue.init(stringLiteral:)();
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v4, v6, v1);
  if (one-time initialization token for module != -1) {
    swift_once();
  }
  id v13 = (id)static NSBundle.module;
  static Locale.current.getter();
  uint64_t v14 = String.init(localized:table:bundle:locale:comment:)();
  uint64_t v16 = v15;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v6, v1);
  uint64_t v32 = v14;
  uint64_t v33 = v16;
  _sS2SSysWl_1();
  uint64_t v17 = Text.init<A>(_:)();
  uint64_t v19 = v18;
  uint64_t v21 = v20;
  LOBYTE(v16) = v22 & 1;
  uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  v23(v10, v12, v7);
  uint64_t v30 = v12;
  uint64_t v24 = v10;
  uint64_t v25 = v31;
  v23(v31, v24, v7);
  uint64_t v26 = &v25[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ProgressView<EmptyView, EmptyView>, Text))
                    + 48)];
  *(void *)uint64_t v26 = v17;
  *((void *)v26 + 1) = v19;
  v26[16] = v16;
  *((void *)v26 + 3) = v21;
  outlined copy of Text.Storage(v17, v19, v16);
  char v27 = *(void (**)(char *, uint64_t))(v8 + 8);
  swift_bridgeObjectRetain();
  v27(v30, v7);
  outlined consume of Text.Storage(v17, v19, v16);
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(char *, uint64_t))v27)(v24, v7);
}

uint64_t key path getter for EnvironmentValues.openURL : EnvironmentValues()
{
  return EnvironmentValues.openURL.getter();
}

uint64_t key path setter for EnvironmentValues.openURL : EnvironmentValues(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for EnvironmentValues.openURL : EnvironmentValues(a1, a2, a3, a4, (uint64_t (*)(void))&type metadata accessor for OpenURLAction, (uint64_t (*)(char *))&EnvironmentValues.openURL.setter);
}

uint64_t closure #2 in closure #2 in closure #1 in closure #2 in closure #1 in closure #1 in Collaboration.Management.View.body.getter(uint64_t a1, uint64_t a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&_sScPSgMD_2);
  __chkstk_darwin();
  uint64_t v4 = &v9[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = *(void *)(a2 + 8);
  swift_getKeyPath();
  swift_getKeyPath();
  v9[15] = 1;
  swift_retain();
  static Published.subscript.setter();
  uint64_t v6 = type metadata accessor for TaskPriority();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v4, 1, 1, v6);
  uint64_t v7 = (void *)swift_allocObject();
  _OWORD v7[2] = 0;
  _OWORD v7[3] = 0;
  _OWORD v7[4] = v5;
  swift_retain();
  _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5_1((uint64_t)v4, (uint64_t)&async function pointer to partial apply for closure #1 in Collaboration.Management.Model.resetInvitationURL(), (uint64_t)v7);
  swift_release();
  return static OpenURLAction.Result.handled.getter();
}

uint64_t closure #2 in closure #2 in closure #1 in closure #1 in Collaboration.Management.View.body.getter@<X0>(uint64_t a1@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&_s10Foundation3URLVSgMD_1);
  __chkstk_darwin();
  uint64_t v3 = &v26[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v7 = &v26[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  Collaboration.Management.Model.collaborationURL.getter((uint64_t)v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    uint64_t result = outlined destroy of TaskPriority?((uint64_t)v3, &_s10Foundation3URLVSgMD_1);
    uint64_t v9 = 0;
    uint64_t v10 = 0;
LABEL_6:
    uint64_t v16 = 0;
    uint64_t v18 = 0;
    uint64_t v24 = 0;
    uint64_t v20 = 0;
    uint64_t v22 = 0;
    long long v23 = 0uLL;
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v3, v4);
  uint64_t v11 = URL.dataRepresentation.getter();
  QRCode.init(data:errorCorrectionLevel:)(v11, v12, 76, (uint64_t)v26);
  uint64_t v13 = v27;
  unint64_t v14 = v28;
  uint64_t v15 = v29;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t result = outlined init with take of PresentationSource?((uint64_t)v26, (uint64_t)&v30, (uint64_t *)&_s9MusicCore6QRCodeVSgMD_0);
  uint64_t v10 = v32;
  if (!v32)
  {
    uint64_t v9 = 0;
    goto LABEL_6;
  }
  long long v25 = v30;
  uint64_t v9 = v31;
  uint64_t v16 = v33;
  outlined copy of Data._Representation(v13, v14);
  id v17 = v15;
  uint64_t v18 = static SafeAreaRegions.all.getter();
  unsigned __int8 v19 = static Edge.Set.all.getter();
  uint64_t v20 = static Alignment.center.getter();
  uint64_t v22 = v21;
  uint64_t result = outlined release of QRCode?((uint64_t)v26);
  long long v23 = v25;
  uint64_t v24 = v19;
LABEL_7:
  *(_OWORD *)a1 = v23;
  *(void *)(a1 + 16) = v9;
  *(void *)(a1 + 24) = v10;
  *(void *)(a1 + 32) = v16;
  *(void *)(a1 + 40) = v18;
  *(void *)(a1 + 48) = v24;
  *(void *)(a1 + 56) = v20;
  *(void *)(a1 + 64) = v22;
  return result;
}

uint64_t closure #3 in closure #1 in closure #1 in closure #1 in Collaboration.Management.View.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Playlist.Collaborator?);
  __chkstk_darwin();
  uint64_t v7 = &v22[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin();
  uint64_t v9 = &v22[-v8];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<OpenURLAction>);
  __chkstk_darwin();
  uint64_t v11 = (uint64_t *)&v22[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = type metadata accessor for Playlist.Collaborator();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin();
  uint64_t v15 = &v22[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v13 + 16))(v15, a1, v12);
  uint64_t v16 = *(void *)(a2 + 8);
  *uint64_t v11 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<OpenURLAction>.Content);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v13 + 32))(a3, v15, v12);
  id v17 = (int *)type metadata accessor for Collaboration.Management.View.CollaboratorRowView(0);
  *(void *)(a3 + v17[5]) = v16;
  uint64_t v18 = a3 + v17[6];
  v22[15] = 0;
  swift_retain();
  State.init(wrappedValue:)();
  uint64_t v19 = v23;
  *(unsigned char *)uint64_t v18 = v22[16];
  *(void *)(v18 + 8) = v19;
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v9, 1, 1, v12);
  outlined init with copy of (String, Any)((uint64_t)v9, (uint64_t)v7, &demangling cache variable for type metadata for Playlist.Collaborator?);
  State.init(wrappedValue:)();
  outlined destroy of TaskPriority?((uint64_t)v9, &demangling cache variable for type metadata for Playlist.Collaborator?);
  uint64_t v20 = (uint64_t *)(a3 + v17[8]);
  uint64_t *v20 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
  swift_storeEnumTagMultiPayload();
  return outlined init with take of PresentationSource?((uint64_t)v11, a3 + v17[9], &demangling cache variable for type metadata for Environment<OpenURLAction>);
}

uint64_t closure #5 in closure #1 in closure #1 in Collaboration.Management.View.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v30 = a1;
  uint64_t v35 = a2;
  uint64_t v3 = type metadata accessor for BorderlessButtonStyle();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v31 = v3;
  uint64_t v32 = v4;
  __chkstk_darwin();
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (int *)(type metadata accessor for Collaboration.Management.View(0) - 8);
  uint64_t v8 = *(void *)v7;
  uint64_t v9 = *(void *)(*(void *)v7 + 64);
  __chkstk_darwin();
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Button<ModifiedContent<ModifiedContent<Text, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>>);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin();
  uint64_t v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.buttonStyle<A>(_:)>>.0);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v33 = v14;
  uint64_t v34 = v15;
  __chkstk_darwin();
  id v17 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of Collaboration.Management.View(a1, (uint64_t)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for Collaboration.Management.View);
  unint64_t v18 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v19 = swift_allocObject();
  outlined init with take of Collaboration.Management.View((uint64_t)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v19 + v18, type metadata accessor for Collaboration.Management.View);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Text, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>);
  lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Text, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>();
  Button.init(action:label:)();
  BorderlessButtonStyle.init()();
  uint64_t v20 = lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type Button<ModifiedContent<ModifiedContent<Text, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>> and conformance Button<A>, &demangling cache variable for type metadata for Button<ModifiedContent<ModifiedContent<Text, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>>);
  uint64_t v21 = lazy protocol witness table accessor for type Collaboration.Management.Model and conformance Collaboration.Management.Model(&lazy protocol witness table cache variable for type BorderlessButtonStyle and conformance BorderlessButtonStyle, (void (*)(uint64_t))&type metadata accessor for BorderlessButtonStyle);
  uint64_t v22 = v31;
  View.buttonStyle<A>(_:)();
  uint64_t v23 = v22;
  (*(void (**)(char *, uint64_t))(v32 + 8))(v6, v22);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  uint64_t v24 = v30;
  uint64_t v25 = v30 + v7[14];
  char v26 = *(unsigned char *)v25;
  uint64_t v27 = *(void *)(v25 + 8);
  char v41 = v26;
  uint64_t v42 = v27;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Bool>);
  State.projectedValue.getter();
  uint64_t v36 = v24;
  uint64_t v37 = v10;
  uint64_t v38 = v23;
  uint64_t v39 = v20;
  uint64_t v40 = v21;
  swift_getOpaqueTypeConformance2();
  uint64_t v28 = v33;
  View.alert(isPresented:content:)();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v17, v28);
}

uint64_t closure #1 in closure #5 in closure #1 in closure #1 in Collaboration.Management.View.body.getter(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = &v14[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = (char *)(a1 + *(int *)(type metadata accessor for Collaboration.Management.View(0) + 48));
  char v7 = *v6;
  uint64_t v8 = *((void *)v6 + 1);
  v14[16] = v7;
  uint64_t v15 = v8;
  v14[15] = 1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Bool>);
  State.wrappedValue.setter();
  uint64_t v9 = Logger.collaboration.unsafeMutableAddressor();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v3 + 16))(v5, v9, v2);
  uint64_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v12 = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "[Management] Remove Join Request button tapped", v12, 2u);
    swift_slowDealloc();
  }

  return (*(uint64_t (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
}

__n128 closure #2 in closure #5 in closure #1 in closure #1 in Collaboration.Management.View.body.getter@<Q0>(uint64_t a1@<X8>)
{
  type metadata accessor for Locale();
  __chkstk_darwin();
  uint64_t v2 = type metadata accessor for String.LocalizationValue();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = &v26[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin();
  char v7 = &v26[-v6];
  String.LocalizationValue.init(stringLiteral:)();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v3 + 16))(v5, v7, v2);
  if (one-time initialization token for module != -1) {
    swift_once();
  }
  id v8 = (id)static NSBundle.module;
  static Locale.current.getter();
  uint64_t v9 = String.init(localized:table:bundle:locale:comment:)();
  uint64_t v11 = v10;
  (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v7, v2);
  *(void *)&long long v28 = v9;
  *((void *)&v28 + 1) = v11;
  _sS2SSysWl_1();
  uint64_t v12 = Text.init<A>(_:)();
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  LOBYTE(v11) = v17 & 1;
  uint64_t v18 = static Alignment.center.getter();
  specialized View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v27, 0.0, 1, 0.0, 1, v18, v19, v12, v14, v11, v16);
  outlined consume of Text.Storage(v12, v14, v11);
  swift_bridgeObjectRelease();
  long long v34 = v27[6];
  long long v35 = v27[7];
  long long v36 = v27[8];
  long long v30 = v27[2];
  long long v31 = v27[3];
  long long v32 = v27[4];
  long long v33 = v27[5];
  long long v28 = v27[0];
  __n128 v29 = (__n128)v27[1];
  uint64_t v20 = static Color.red.getter();
  uint64_t KeyPath = swift_getKeyPath();
  long long v22 = v35;
  *(_OWORD *)(a1 + 96) = v34;
  *(_OWORD *)(a1 + 112) = v22;
  *(_OWORD *)(a1 + 128) = v36;
  long long v23 = v31;
  *(_OWORD *)(a1 + 32) = v30;
  *(_OWORD *)(a1 + 48) = v23;
  long long v24 = v33;
  *(_OWORD *)(a1 + 64) = v32;
  *(_OWORD *)(a1 + 80) = v24;
  __n128 result = v29;
  *(_OWORD *)a1 = v28;
  *(__n128 *)(a1 + 16) = result;
  *(void *)(a1 + 144) = KeyPath;
  *(void *)(a1 + 152) = v20;
  return result;
}

uint64_t closure #3 in closure #5 in closure #1 in closure #1 in Collaboration.Management.View.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v49 = a1;
  uint64_t v53 = a2;
  uint64_t v47 = *(void *)(type metadata accessor for Collaboration.Management.View(0) - 8);
  __chkstk_darwin();
  uint64_t v48 = v2;
  uint64_t v50 = (uint64_t)v41 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Alert.Button();
  __chkstk_darwin();
  uint64_t v52 = (char *)v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v51 = (char *)v41 - v4;
  type metadata accessor for Locale();
  __chkstk_darwin();
  uint64_t v5 = type metadata accessor for String.LocalizationValue();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  id v8 = (char *)v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v10 = (char *)v41 - v9;
  String.LocalizationValue.init(stringLiteral:)();
  uint64_t v42 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
  v42(v8, v10, v5);
  if (one-time initialization token for module != -1) {
    swift_once();
  }
  id v11 = (id)static NSBundle.module;
  static Locale.current.getter();
  uint64_t v12 = String.init(localized:table:bundle:locale:comment:)();
  uint64_t v14 = v13;
  uint64_t v15 = *(void (**)(char *, uint64_t))(v6 + 8);
  v15(v10, v5);
  uint64_t v54 = v12;
  uint64_t v55 = v14;
  v41[1] = _sS2SSysWl_1();
  uint64_t v16 = Text.init<A>(_:)();
  uint64_t v45 = v17;
  uint64_t v46 = v16;
  int v43 = v18;
  uint64_t v44 = v19;
  String.LocalizationValue.init(stringLiteral:)();
  uint64_t v20 = v42;
  v42(v8, v10, v5);
  id v21 = (id)static NSBundle.module;
  static Locale.current.getter();
  uint64_t v22 = String.init(localized:table:bundle:locale:comment:)();
  uint64_t v24 = v23;
  v15(v10, v5);
  uint64_t v54 = v22;
  uint64_t v55 = v24;
  uint64_t v25 = Text.init<A>(_:)();
  v41[4] = v26;
  v41[5] = v25;
  void v41[2] = v27 & 1;
  v41[3] = v28;
  String.LocalizationValue.init(stringLiteral:)();
  v20(v8, v10, v5);
  id v29 = (id)static NSBundle.module;
  static Locale.current.getter();
  uint64_t v30 = String.init(localized:table:bundle:locale:comment:)();
  uint64_t v32 = v31;
  v15(v10, v5);
  uint64_t v54 = v30;
  uint64_t v55 = v32;
  uint64_t v33 = Text.init<A>(_:)();
  uint64_t v35 = v34;
  LOBYTE(v20) = v36 & 1;
  uint64_t v37 = v50;
  outlined init with copy of Collaboration.Management.View(v49, v50, type metadata accessor for Collaboration.Management.View);
  unint64_t v38 = (*(unsigned __int8 *)(v47 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
  uint64_t v39 = swift_allocObject();
  outlined init with take of Collaboration.Management.View(v37, v39 + v38, type metadata accessor for Collaboration.Management.View);
  static Alert.Button.destructive(_:action:)();
  outlined consume of Text.Storage(v33, v35, (char)v20);
  swift_release();
  swift_bridgeObjectRelease();
  static Alert.Button.cancel(_:)();
  return Alert.init(title:message:primaryButton:secondaryButton:)();
}

uint64_t closure #1 in closure #3 in closure #1 in closure #1 in closure #1 in closure #1 in Collaboration.Management.View.body.getter()
{
  uint64_t v0 = type metadata accessor for DismissAction();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin();
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  Collaboration.Management.Model.end()();
  type metadata accessor for Collaboration.Management.View(0);
  specialized Environment.wrappedValue.getter((uint64_t)v3);
  DismissAction.callAsFunction()();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t closure #6 in closure #1 in closure #1 in Collaboration.Management.View.body.getter(uint64_t a1)
{
  uint64_t v2 = *(void *)(type metadata accessor for Collaboration.Management.View(0) - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  __chkstk_darwin();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  outlined init with copy of Collaboration.Management.View(a1, (uint64_t)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for Collaboration.Management.View);
  unint64_t v4 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v5 = swift_allocObject();
  outlined init with take of Collaboration.Management.View((uint64_t)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v5 + v4, type metadata accessor for Collaboration.Management.View);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [Playlist.Collaborator]);
  type metadata accessor for Collaboration.Management.View.CollaboratorRowView(0);
  lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type [Playlist.Collaborator] and conformance [A], &demangling cache variable for type metadata for [Playlist.Collaborator]);
  lazy protocol witness table accessor for type Collaboration.Management.Model and conformance Collaboration.Management.Model(&lazy protocol witness table cache variable for type Collaboration.Management.View.CollaboratorRowView and conformance Collaboration.Management.View.CollaboratorRowView, (void (*)(uint64_t))type metadata accessor for Collaboration.Management.View.CollaboratorRowView);
  lazy protocol witness table accessor for type Collaboration.Management.Model and conformance Collaboration.Management.Model(&lazy protocol witness table cache variable for type Playlist.Collaborator and conformance Playlist.Collaborator, (void (*)(uint64_t))&type metadata accessor for Playlist.Collaborator);
  return ForEach<>.init(_:content:)();
}

uint64_t closure #7 in closure #1 in closure #1 in Collaboration.Management.View.body.getter@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for Locale();
  __chkstk_darwin();
  uint64_t v2 = type metadata accessor for String.LocalizationValue();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v19 - v6;
  type metadata accessor for String.LocalizationValue.StringInterpolation();
  __chkstk_darwin();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v8 = *(void *)(v20 + 16);
  swift_bridgeObjectRelease();
  String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v9._countAndFlagsBits = 0;
  v9._object = (void *)0xE000000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v9);
  uint64_t v20 = v8;
  String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)();
  v10._object = (void *)0x80000001004751E0;
  v10._countAndFlagsBits = 0xD000000000000010;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v10);
  String.LocalizationValue.init(stringInterpolation:)();
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v7, v2);
  if (one-time initialization token for module != -1) {
    swift_once();
  }
  id v11 = (id)static NSBundle.module;
  static Locale.current.getter();
  uint64_t v12 = String.init(localized:table:bundle:locale:comment:)();
  uint64_t v14 = v13;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v7, v2);
  uint64_t v20 = v12;
  uint64_t v21 = v14;
  _sS2SSysWl_1();
  uint64_t result = Text.init<A>(_:)();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v16;
  *(unsigned char *)(a1 + 16) = v17 & 1;
  *(void *)(a1 + 24) = v18;
  return result;
}

uint64_t closure #8 in closure #1 in closure #1 in Collaboration.Management.View.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(type metadata accessor for Collaboration.Management.View(0) - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin();
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)a2 = static VerticalAlignment.center.getter();
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 1;
  uint64_t v13 = a2
      + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_HStackLayout, Toggle<Text>>)
               + 44);
  outlined init with copy of Collaboration.Management.View(a1, (uint64_t)v6, type metadata accessor for Collaboration.Management.View);
  type metadata accessor for MainActor();
  uint64_t v7 = static MainActor.shared.getter();
  unint64_t v8 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v7;
  *(void *)(v9 + 24) = &protocol witness table for MainActor;
  outlined init with take of Collaboration.Management.View((uint64_t)v6, v9 + v8, type metadata accessor for Collaboration.Management.View);
  outlined init with copy of Collaboration.Management.View(a1, (uint64_t)v6, type metadata accessor for Collaboration.Management.View);
  uint64_t v10 = static MainActor.shared.getter();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v10;
  *(void *)(v11 + 24) = &protocol witness table for MainActor;
  outlined init with take of Collaboration.Management.View((uint64_t)v6, v11 + v8, type metadata accessor for Collaboration.Management.View);
  Binding.init(get:set:)();
  return Toggle.init(isOn:label:)();
}

uint64_t closure #1 in closure #1 in closure #8 in closure #1 in closure #1 in Collaboration.Management.View.body.getter@<X0>(BOOL *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = (v3 & 1) == 0;
  return result;
}

uint64_t closure #2 in closure #1 in closure #8 in closure #1 in closure #1 in Collaboration.Management.View.body.getter(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __swift_instantiateConcreteTypeFromMangledName(&_sScPSgMD_2);
  __chkstk_darwin();
  uint64_t v7 = &v14[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  char v8 = *a1;
  uint64_t v9 = *(void *)(a4 + 8);
  swift_getKeyPath();
  swift_getKeyPath();
  BOOL v10 = (v8 & 1) == 0;
  v14[15] = v10;
  swift_retain();
  static Published.subscript.setter();
  uint64_t v11 = type metadata accessor for TaskPriority();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v7, 1, 1, v11);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = 0;
  *(void *)(v12 + 24) = 0;
  *(void *)(v12 + 32) = v9;
  *(unsigned char *)(v12 + 40) = v10;
  swift_retain();
  _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCytSg_Tgm5_0((uint64_t)v7, (uint64_t)&async function pointer to partial apply for closure #1 in Collaboration.Management.Model.updateShareOption(isOpen:), v12);
  return swift_release();
}

uint64_t closure #3 in closure #1 in closure #8 in closure #1 in closure #1 in Collaboration.Management.View.body.getter@<X0>(uint64_t a1@<X8>)
{
  return closure #3 in closure #1 in closure #8 in closure #1 in closure #1 in Collaboration.Management.View.body.getter(a1);
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  char v14;
  uint64_t v15;
  void v16[4];

  type metadata accessor for Locale();
  __chkstk_darwin();
  uint64_t v2 = type metadata accessor for String.LocalizationValue();
  char v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v7 = (char *)v16 - v6;
  String.LocalizationValue.init(stringLiteral:)();
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v7, v2);
  if (one-time initialization token for module != -1) {
    swift_once();
  }
  char v8 = (id)static NSBundle.module;
  static Locale.current.getter();
  uint64_t v9 = String.init(localized:table:bundle:locale:comment:)();
  uint64_t v11 = v10;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v7, v2);
  v16[1] = v9;
  _OWORD v16[2] = v11;
  _sS2SSysWl_1();
  uint64_t result = Text.init<A>(_:)();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v13;
  *(unsigned char *)(a1 + 16) = v14 & 1;
  *(void *)(a1 + 24) = v15;
  return result;
}

uint64_t closure #10 in closure #1 in closure #1 in Collaboration.Management.View.body.getter@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for Locale();
  __chkstk_darwin();
  uint64_t v2 = type metadata accessor for String.LocalizationValue();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = &v39[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin();
  uint64_t v7 = &v39[-v6];
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if ((v43 & 1) == 0)
  {
    String.LocalizationValue.init(stringLiteral:)();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v3 + 16))(v5, v7, v2);
    if (one-time initialization token for module != -1) {
      swift_once();
    }
    id v21 = (id)static NSBundle.module;
    static Locale.current.getter();
    uint64_t v22 = String.init(localized:table:bundle:locale:comment:)();
    uint64_t v24 = v23;
    (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v7, v2);
    *(void *)&long long v43 = v22;
    *((void *)&v43 + 1) = v24;
    _sS2SSysWl_1();
    uint64_t v14 = Text.init<A>(_:)();
    uint64_t v16 = v14;
    uint64_t v17 = v15;
    *(void *)&long long v40 = v14;
    *((void *)&v40 + 1) = v15;
    char v19 = v25 & 1;
    *(void *)&long long v41 = v25 & 1;
    *((void *)&v41 + 1) = v26;
    LOBYTE(v42) = 0;
    goto LABEL_9;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v8 = *(void *)(v43 + 16);
  swift_bridgeObjectRelease();
  uint64_t v9 = (void (**)(unsigned char *, unsigned char *, uint64_t))(v3 + 16);
  if (v8)
  {
    String.LocalizationValue.init(stringLiteral:)();
    (*v9)(v5, v7, v2);
    if (one-time initialization token for module != -1) {
      swift_once();
    }
    id v10 = (id)static NSBundle.module;
    static Locale.current.getter();
    uint64_t v11 = String.init(localized:table:bundle:locale:comment:)();
    uint64_t v13 = v12;
    (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v7, v2);
    *(void *)&long long v43 = v11;
    *((void *)&v43 + 1) = v13;
    _sS2SSysWl_1();
    uint64_t v14 = Text.init<A>(_:)();
    uint64_t v16 = v14;
    uint64_t v17 = v15;
    char v19 = v18 & 1;
    *(void *)&long long v40 = v14;
    *((void *)&v40 + 1) = v15;
    *(void *)&long long v41 = v18 & 1;
    *((void *)&v41 + 1) = v20;
    LOBYTE(v42) = 1;
LABEL_9:
    outlined copy of Text.Storage(v14, v15, v19);
    swift_bridgeObjectRetain();
    _ConditionalContent<>.init(storage:)();
    long long v40 = v43;
    long long v41 = v44;
    __int16 v42 = v45;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<Text, Text>);
    lazy protocol witness table accessor for type _ConditionalContent<Text, Text> and conformance <> _ConditionalContent<A, B>((unint64_t *)&lazy protocol witness table cache variable for type _ConditionalContent<Text, Text> and conformance <> _ConditionalContent<A, B>, &demangling cache variable for type metadata for _ConditionalContent<Text, Text>);
    _ConditionalContent<>.init(storage:)();
    outlined consume of Text.Storage(v16, v17, v19);
    uint64_t result = swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  String.LocalizationValue.init(stringLiteral:)();
  (*v9)(v5, v7, v2);
  if (one-time initialization token for module != -1) {
    swift_once();
  }
  id v32 = (id)static NSBundle.module;
  static Locale.current.getter();
  uint64_t v33 = String.init(localized:table:bundle:locale:comment:)();
  uint64_t v35 = v34;
  (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v7, v2);
  *(void *)&long long v43 = v33;
  *((void *)&v43 + 1) = v35;
  _sS2SSysWl_1();
  *(void *)&long long v40 = Text.init<A>(_:)();
  *((void *)&v40 + 1) = v36;
  *(void *)&long long v41 = v37 & 1;
  *((void *)&v41 + 1) = v38;
  __int16 v42 = 256;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<Text, Text>);
  lazy protocol witness table accessor for type _ConditionalContent<Text, Text> and conformance <> _ConditionalContent<A, B>((unint64_t *)&lazy protocol witness table cache variable for type _ConditionalContent<Text, Text> and conformance <> _ConditionalContent<A, B>, &demangling cache variable for type metadata for _ConditionalContent<Text, Text>);
  uint64_t result = _ConditionalContent<>.init(storage:)();
LABEL_10:
  uint64_t v28 = *((void *)&v43 + 1);
  long long v29 = v44;
  unsigned __int8 v30 = v45;
  char v31 = v46;
  *(void *)a1 = v43;
  *(void *)(a1 + 8) = v28;
  *(_OWORD *)(a1 + 16) = v29;
  *(unsigned char *)(a1 + 32) = v30;
  *(unsigned char *)(a1 + 33) = v31;
  return result;
}

uint64_t closure #2 in closure #1 in Collaboration.Management.View.body.getter()
{
  uint64_t v0 = type metadata accessor for DismissAction();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin();
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Collaboration.Management.View(0);
  specialized Environment.wrappedValue.getter((uint64_t)v3);
  DismissAction.callAsFunction()();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t closure #2 in Collaboration.Management.View.body.getter(uint64_t a1, unsigned char *a2)
{
  uint64_t v3 = type metadata accessor for DismissAction();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t result = __chkstk_darwin();
  uint64_t v7 = (char *)&v8 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*a2 == 1)
  {
    type metadata accessor for Collaboration.Management.View(0);
    specialized Environment.wrappedValue.getter((uint64_t)v7);
    DismissAction.callAsFunction()();
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  }
  return result;
}

uint64_t one-time initialization function for titleFont(uint64_t a1)
{
  return one-time initialization function for titleFont(a1, (uint64_t (*)(void))&static Font.largeTitle.getter, (uint64_t (*)(void))&static Font.title.getter, &static Collaboration.Management.View.Specs.titleFont);
}

uint64_t one-time initialization function for collaborationGlyphFont()
{
  if (one-time initialization token for isVision != -1) {
    swift_once();
  }
  if (static Collaboration.Management.View.Specs.isVision == 1)
  {
    uint64_t result = static Font.largeTitle.getter();
    uint64_t v1 = result;
  }
  else
  {
    static Font.title2.getter();
    uint64_t v1 = Font.bold()();
    uint64_t result = swift_release();
  }
  static Collaboration.Management.View.Specs.collaborationGlyphFont = v1;
  return result;
}

{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Font.Design?);
  __chkstk_darwin();
  uint64_t v1 = (char *)&v5 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (one-time initialization token for isVision != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Font.Design();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  uint64_t v3 = static Font.system(size:weight:design:)();
  uint64_t result = outlined destroy of TaskPriority?((uint64_t)v1, &demangling cache variable for type metadata for Font.Design?);
  static Collaboration.Flow.Specs.collaborationGlyphFont = v3;
  return result;
}

uint64_t one-time initialization function for cellHeight()
{
  if (one-time initialization token for isVision != -1) {
    uint64_t result = swift_once();
  }
  double v0 = 56.0;
  if (static Collaboration.Management.View.Specs.isVision) {
    double v0 = 68.0;
  }
  static Collaboration.Management.View.Specs.celldouble Height = *(void *)&v0;
  return result;
}

uint64_t one-time initialization function for collaboratorRowTitleFont(uint64_t a1)
{
  return one-time initialization function for titleFont(a1, (uint64_t (*)(void))&static Font.body.getter, (uint64_t (*)(void))&static Font.callout.getter, &static Collaboration.Management.View.Specs.collaboratorRowTitleFont);
}

uint64_t one-time initialization function for collaboratorRowSubtitleFont(uint64_t a1)
{
  return one-time initialization function for titleFont(a1, (uint64_t (*)(void))&static Font.footnote.getter, (uint64_t (*)(void))&static Font.caption.getter, &static Collaboration.Management.View.Specs.collaboratorRowSubtitleFont);
}

uint64_t one-time initialization function for shareButtonFont(uint64_t a1)
{
  return one-time initialization function for titleFont(a1, (uint64_t (*)(void))&static Font.body.getter, (uint64_t (*)(void))&static Font.caption2.getter, &static Collaboration.Management.View.Specs.shareButtonFont);
}

uint64_t one-time initialization function for titleFont(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(void), uint64_t *a4)
{
  if (one-time initialization token for isVision != -1) {
    swift_once();
  }
  if (static Collaboration.Management.View.Specs.isVision == 1) {
    uint64_t result = a2();
  }
  else {
    uint64_t result = a3();
  }
  *a4 = result;
  return result;
}

uint64_t one-time initialization function for shareButtonFontWeight()
{
  if (one-time initialization token for isVision != -1) {
    swift_once();
  }
  if (static Collaboration.Management.View.Specs.isVision == 1) {
    uint64_t result = static Font.Weight.semibold.getter();
  }
  else {
    uint64_t result = static Font.Weight.regular.getter();
  }
  static Collaboration.Management.View.Specs.shareButtonFontWeight = v1;
  return result;
}

uint64_t one-time initialization function for shareButtonStackTopPadding()
{
  if (one-time initialization token for isVision != -1) {
    uint64_t result = swift_once();
  }
  double v0 = 12.0;
  if (static Collaboration.Management.View.Specs.isVision) {
    double v0 = 0.0;
  }
  static Collaboration.Management.View.Specs.shareButtonStackTopPadding = *(void *)&v0;
  return result;
}

uint64_t one-time initialization function for resetLinkGroupTopPadding()
{
  if (one-time initialization token for isVision != -1) {
    uint64_t result = swift_once();
  }
  double v0 = -4.0;
  if (static Collaboration.Management.View.Specs.isVision) {
    double v0 = 0.0;
  }
  static Collaboration.Management.View.Specs.resetLinkGroupTopPadding = *(void *)&v0;
  return result;
}

uint64_t one-time initialization function for controlLength()
{
  if (one-time initialization token for isVision != -1) {
    uint64_t result = swift_once();
  }
  double v0 = 32.0;
  if (static Collaboration.Management.View.Specs.isVision) {
    double v0 = 44.0;
  }
  static Collaboration.Management.View.Specs.controlLength = *(void *)&v0;
  return result;
}

uint64_t one-time initialization function for artworkLength()
{
  if (one-time initialization token for isVision != -1) {
    uint64_t result = swift_once();
  }
  double v0 = 84.0;
  if (static Collaboration.Management.View.Specs.isVision) {
    double v0 = 169.0;
  }
  static Collaboration.Management.View.Specs.artworkLength = *(void *)&v0;
  return result;
}

uint64_t one-time initialization function for avatarLength()
{
  if (one-time initialization token for isVision != -1) {
    uint64_t result = swift_once();
  }
  double v0 = 38.0;
  if (static Collaboration.Management.View.Specs.isVision) {
    double v0 = 48.0;
  }
  static Collaboration.Management.View.Specs.avatarLength = *(void *)&v0;
  return result;
}

uint64_t one-time initialization function for keyColor()
{
  if (one-time initialization token for isVision != -1) {
    swift_once();
  }
  if (static Collaboration.Management.View.Specs.isVision == 1)
  {
    uint64_t result = static Color.accentColor.getter();
  }
  else
  {
    if (one-time initialization token for normal != -1) {
      swift_once();
    }
    id v1 = (id)static UIColor.MusicTint.normal;
    uint64_t result = Color.init(_:)();
  }
  static Collaboration.Management.View.Specs.keyColor = result;
  return result;
}

uint64_t one-time initialization function for maxDynamicSize()
{
  uint64_t v0 = type metadata accessor for DynamicTypeSize();
  __swift_allocate_value_buffer(v0, static Collaboration.Management.View.Specs.maxDynamicSize);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)static Collaboration.Management.View.Specs.maxDynamicSize);
  uint64_t v2 = enum case for DynamicTypeSize.accessibility2(_:);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 104);

  return v3(v1, v2, v0);
}

uint64_t one-time initialization function for dynamicSizeRange()
{
  uint64_t v0 = type metadata accessor for DynamicTypeSize();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin();
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&_ss19PartialRangeThroughVy7SwiftUI15DynamicTypeSizeOGMD_0);
  __swift_allocate_value_buffer(v4, static Collaboration.Management.View.Specs.dynamicSizeRange);
  uint64_t v5 = __swift_project_value_buffer(v4, (uint64_t)static Collaboration.Management.View.Specs.dynamicSizeRange);
  if (one-time initialization token for maxDynamicSize != -1) {
    swift_once();
  }
  uint64_t v6 = __swift_project_value_buffer(v0, (uint64_t)static Collaboration.Management.View.Specs.maxDynamicSize);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v6, v0);
  lazy protocol witness table accessor for type Collaboration.Management.Model and conformance Collaboration.Management.Model((unint64_t *)&_s7SwiftUI15DynamicTypeSizeOACSQAAWL_0, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  uint64_t result = dispatch thunk of static Equatable.== infix(_:_:)();
  if (result) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
  }
  __break(1u);
  return result;
}

uint64_t key path getter for EnvironmentValues.dynamicTypeSize : EnvironmentValues()
{
  return EnvironmentValues.dynamicTypeSize.getter();
}

uint64_t key path setter for EnvironmentValues.dynamicTypeSize : EnvironmentValues(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for EnvironmentValues.openURL : EnvironmentValues(a1, a2, a3, a4, (uint64_t (*)(void))&type metadata accessor for DynamicTypeSize, (uint64_t (*)(char *))&EnvironmentValues.dynamicTypeSize.setter);
}

uint64_t Collaboration.Management.View.CollaboratorRowView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v43 = a1;
  uint64_t v44 = type metadata accessor for AccessibilityTraits();
  uint64_t v42 = *(void *)(v44 - 8);
  __chkstk_darwin();
  long long v41 = (char *)&v31 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for AccessibilityChildBehavior();
  uint64_t v39 = *(void *)(v3 - 8);
  uint64_t v40 = v3;
  __chkstk_darwin();
  uint64_t v38 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, CornerRadiusModifier>, _FrameLayout>, _AspectRatioLayout>?, VStack<TupleView<(Text?, _ConditionalContent<Text, Text>?)>>, Spacer, _ConditionalContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FrameLayout>, TupleView<(Collaboration.Management.View.Moderation.Button, Collaboration.Management.View.Moderation.Button)>>?)>>);
  __chkstk_darwin();
  uint64_t v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, CornerRadiusModifier>, _FrameLayout>, _AspectRatioLayout>?, VStack<TupleView<(Text?, _ConditionalContent<Text, Text>?)>>, Spacer, _ConditionalContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FrameLayout>, TupleView<(Collaboration.Management.View.Moderation.Button, Collaboration.Management.View.Moderation.Button)>>?)>>, _ContentShapeModifier<Rectangle>>);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.swipeActions<A>(edge:allowsFullSwipe:content:)>>.0);
  uint64_t v33 = *(void *)(v32 - 8);
  __chkstk_darwin();
  uint64_t v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.alert(isPresented:content:)>>.0);
  uint64_t v35 = *(void *)(v34 - 8);
  __chkstk_darwin();
  uint64_t v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.accessibilityElement(children:)>>.0);
  uint64_t v37 = *(void *)(v36 - 8);
  __chkstk_darwin();
  char v31 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v6 = static VerticalAlignment.center.getter();
  *((void *)v6 + 1) = 0x4028000000000000;
  unsigned char v6[16] = 0;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_HStackLayout, TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, CornerRadiusModifier>, _FrameLayout>, _AspectRatioLayout>?, VStack<TupleView<(Text?, _ConditionalContent<Text, Text>?)>>, Spacer, _ConditionalContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FrameLayout>, TupleView<(Collaboration.Management.View.Moderation.Button, Collaboration.Management.View.Moderation.Button)>>?)>>);
  closure #1 in Collaboration.Management.View.CollaboratorRowView.body.getter(v1, (uint64_t)&v6[*(int *)(v15 + 44)]);
  outlined init with copy of (String, Any)((uint64_t)v6, (uint64_t)v9, &demangling cache variable for type metadata for HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, CornerRadiusModifier>, _FrameLayout>, _AspectRatioLayout>?, VStack<TupleView<(Text?, _ConditionalContent<Text, Text>?)>>, Spacer, _ConditionalContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FrameLayout>, TupleView<(Collaboration.Management.View.Moderation.Button, Collaboration.Management.View.Moderation.Button)>>?)>>);
  v9[*(int *)(v7 + 36)] = 0;
  outlined destroy of TaskPriority?((uint64_t)v6, &demangling cache variable for type metadata for HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, CornerRadiusModifier>, _FrameLayout>, _AspectRatioLayout>?, VStack<TupleView<(Text?, _ConditionalContent<Text, Text>?)>>, Spacer, _ConditionalContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FrameLayout>, TupleView<(Collaboration.Management.View.Moderation.Button, Collaboration.Management.View.Moderation.Button)>>?)>>);
  uint64_t v46 = v1;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>?);
  unint64_t v17 = lazy protocol witness table accessor for type ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, CornerRadiusModifier>, _FrameLayout>, _AspectRatioLayout>?, VStack<TupleView<(Text?, _ConditionalContent<Text, Text>?)>>, Spacer, _ConditionalContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FrameLayout>, TupleView<(Collaboration.Management.View.Moderation.Button, Collaboration.Management.View.Moderation.Button)>>?)>>, _ContentShapeModifier<Rectangle>> and conformance <> ModifiedContent<A, B>();
  uint64_t v18 = lazy protocol witness table accessor for type ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>? and conformance <A> A?(&lazy protocol witness table cache variable for type ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>? and conformance <A> A?, &demangling cache variable for type metadata for ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>?, (void (*)(void))lazy protocol witness table accessor for type ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>);
  View.swipeActions<A>(edge:allowsFullSwipe:content:)();
  outlined destroy of TaskPriority?((uint64_t)v9, &demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, CornerRadiusModifier>, _FrameLayout>, _AspectRatioLayout>?, VStack<TupleView<(Text?, _ConditionalContent<Text, Text>?)>>, Spacer, _ConditionalContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FrameLayout>, TupleView<(Collaboration.Management.View.Moderation.Button, Collaboration.Management.View.Moderation.Button)>>?)>>, _ContentShapeModifier<Rectangle>>);
  uint64_t v19 = v1 + *(int *)(type metadata accessor for Collaboration.Management.View.CollaboratorRowView(0) + 24);
  char v20 = *(unsigned char *)v19;
  uint64_t v21 = *(void *)(v19 + 8);
  char v51 = v20;
  uint64_t v52 = v21;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Bool>);
  State.projectedValue.getter();
  uint64_t v45 = v1;
  uint64_t v47 = v7;
  uint64_t v48 = v16;
  unint64_t v49 = v17;
  uint64_t v50 = v18;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v23 = v32;
  View.alert(isPresented:content:)();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v11, v23);
  uint64_t v24 = v38;
  static AccessibilityChildBehavior.combine.getter();
  uint64_t v47 = v23;
  uint64_t v48 = OpaqueTypeConformance2;
  uint64_t v25 = swift_getOpaqueTypeConformance2();
  uint64_t v26 = v31;
  uint64_t v27 = v34;
  View.accessibilityElement(children:)();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v24, v40);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v13, v27);
  uint64_t v28 = v41;
  static AccessibilityTraits.isButton.getter();
  uint64_t v47 = v27;
  uint64_t v48 = v25;
  swift_getOpaqueTypeConformance2();
  uint64_t v29 = v36;
  View.accessibilityAddTraits(_:)();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v28, v44);
  return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v26, v29);
}

uint64_t closure #1 in Collaboration.Management.View.CollaboratorRowView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v119 = a2;
  uint64_t v3 = type metadata accessor for Collaboration.Management.View.CollaboratorRowView(0);
  uint64_t v90 = *(void *)(v3 - 8);
  __chkstk_darwin();
  uint64_t v91 = v4;
  uint64_t v96 = (uint64_t)&v89 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FrameLayout>, TupleView<(Collaboration.Management.View.Moderation.Button, Collaboration.Management.View.Moderation.Button)>>.Storage);
  __chkstk_darwin();
  uint64_t v100 = (char *)&v89 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ProgressView<EmptyView, EmptyView>);
  uint64_t v93 = *(void *)(v94 - 8);
  __chkstk_darwin();
  uint64_t v92 = (char *)&v89 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ProgressView<EmptyView, EmptyView>, _FrameLayout>);
  __chkstk_darwin();
  uint64_t v89 = (char *)&v89 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v95 = (uint64_t)&v89 - v8;
  uint64_t v118 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FrameLayout>, TupleView<(Collaboration.Management.View.Moderation.Button, Collaboration.Management.View.Moderation.Button)>>);
  uint64_t v117 = *(void *)(v118 - 8);
  __chkstk_darwin();
  uint64_t v98 = (char *)&v89 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v115 = type metadata accessor for Playlist();
  uint64_t v114 = *(void *)(v115 - 8);
  __chkstk_darwin();
  uint64_t v113 = (char *)&v89 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FrameLayout>, TupleView<(Collaboration.Management.View.Moderation.Button, Collaboration.Management.View.Moderation.Button)>>?);
  __chkstk_darwin();
  uint64_t v123 = (uint64_t)&v89 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v124 = (uint64_t)&v89 - v12;
  uint64_t v111 = type metadata accessor for ArtworkImage.ReusePolicy();
  uint64_t v110 = *(void *)(v111 - 8);
  __chkstk_darwin();
  char v109 = (char *)&v89 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin();
  unsigned int v106 = (char *)&v89 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ArtworkImage.ViewModel?);
  __chkstk_darwin();
  uint64_t v103 = (char *)&v89 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0);
  uint64_t v104 = *(void *)(v105 - 8);
  __chkstk_darwin();
  uint64_t v102 = (uint64_t)&v89 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, CornerRadiusModifier>);
  __chkstk_darwin();
  uint64_t v18 = (char *)&v89 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v108 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, CornerRadiusModifier>, _FrameLayout>);
  __chkstk_darwin();
  char v20 = (char *)&v89 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, CornerRadiusModifier>, _FrameLayout>, _AspectRatioLayout>);
  uint64_t v112 = *(void *)(v21 - 8);
  __chkstk_darwin();
  uint64_t v107 = (uint64_t)&v89 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for DynamicTypeSize();
  uint64_t v24 = *(void *)(v23 - 8);
  __chkstk_darwin();
  uint64_t v26 = (char *)&v89 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v28 = (char *)&v89 - v27;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, CornerRadiusModifier>, _FrameLayout>, _AspectRatioLayout>?);
  __chkstk_darwin();
  uint64_t v122 = (uint64_t)&v89 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  char v31 = (char *)&v89 - v30;
  uint64_t v116 = v3;
  uint64_t v121 = a1;
  specialized Environment.wrappedValue.getter((uint64_t)v28);
  if (one-time initialization token for maxDynamicSize != -1) {
    swift_once();
  }
  uint64_t v32 = __swift_project_value_buffer(v23, (uint64_t)static Collaboration.Management.View.Specs.maxDynamicSize);
  (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v26, v32, v23);
  lazy protocol witness table accessor for type Collaboration.Management.Model and conformance Collaboration.Management.Model((unint64_t *)&lazy protocol witness table cache variable for type DynamicTypeSize and conformance DynamicTypeSize, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  char v33 = dispatch thunk of static Comparable.< infix(_:_:)();
  uint64_t v34 = *(void (**)(char *, uint64_t))(v24 + 8);
  v34(v26, v23);
  v34(v28, v23);
  uint64_t v35 = 1;
  uint64_t v36 = (uint64_t)v31;
  uint64_t v37 = v21;
  uint64_t v120 = v36;
  if ((v33 & 1) == 0)
  {
    uint64_t v38 = v103;
    Playlist.Collaborator.artworkViewModel.getter(v103);
    uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (type: Playlist.Variant?));
    uint64_t v40 = (uint64_t)v106;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v106, 7, 10, v39);
    uint64_t v134 = 0;
    char v135 = 1;
    uint64_t v136 = 0;
    char v137 = 1;
    uint64_t v138 = 0;
    __int16 v139 = 513;
    uint64_t v41 = v110;
    uint64_t v42 = (uint64_t)v109;
    uint64_t v43 = v111;
    (*(void (**)(char *, void, uint64_t))(v110 + 104))(v109, enum case for ArtworkImage.ReusePolicy.reusableForDistinctItems(_:), v111);
    uint64_t v44 = v102;
    static ArtworkImage.with(_:placeholder:size:reusePolicy:)((uint64_t)v38, v40, (uint64_t)&v134, v42, v102);
    (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v42, v43);
    _s17_MusicKit_SwiftUI12ArtworkImageV0a4CoreD0E11PlaceholderOWOhTm_1(v40, type metadata accessor for ArtworkImage.Placeholder);
    outlined destroy of TaskPriority?((uint64_t)v38, (uint64_t *)&demangling cache variable for type metadata for ArtworkImage.ViewModel?);
    uint64_t v45 = v104;
    uint64_t v46 = v105;
    (*(void (**)(char *, uint64_t, uint64_t))(v104 + 16))(v18, v44, v105);
    uint64_t v47 = &v18[*(int *)(v101 + 36)];
    *(void *)uint64_t v47 = 0;
    *((void *)v47 + 1) = 0;
    v47[16] = 1;
    (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v44, v46);
    if (one-time initialization token for avatarLength != -1) {
      swift_once();
    }
    static Alignment.center.getter();
    _FrameLayout.init(width:height:alignment:)();
    outlined init with copy of (String, Any)((uint64_t)v18, (uint64_t)v20, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, CornerRadiusModifier>);
    uint64_t v48 = &v20[*(int *)(v108 + 36)];
    long long v49 = v132;
    *(_OWORD *)uint64_t v48 = v131;
    *((_OWORD *)v48 + 1) = v49;
    *((_OWORD *)v48 + 2) = v133;
    outlined destroy of TaskPriority?((uint64_t)v18, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, CornerRadiusModifier>);
    uint64_t v50 = v107;
    outlined init with copy of (String, Any)((uint64_t)v20, v107, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, CornerRadiusModifier>, _FrameLayout>);
    uint64_t v51 = v50 + *(int *)(v37 + 36);
    *(void *)uint64_t v51 = 0;
    *(_WORD *)(v51 + 8) = 257;
    outlined destroy of TaskPriority?((uint64_t)v20, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, CornerRadiusModifier>, _FrameLayout>);
    uint64_t v36 = v120;
    outlined init with take of PresentationSource?(v50, v120, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, CornerRadiusModifier>, _FrameLayout>, _AspectRatioLayout>);
    uint64_t v35 = 0;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v112 + 56))(v36, v35, 1, v37);
  unsigned int v106 = (char *)static HorizontalAlignment.leading.getter();
  uint64_t v52 = v121;
  closure #1 in closure #1 in Collaboration.Management.View.CollaboratorRowView.body.getter((uint64_t)&v125);
  char v109 = (char *)*((void *)&v125 + 1);
  uint64_t v110 = v125;
  uint64_t v107 = *((void *)&v126 + 1);
  uint64_t v108 = v126;
  uint64_t v105 = v127;
  uint64_t v53 = v128;
  uint64_t v104 = *((void *)&v127 + 1);
  uint64_t v112 = v129;
  LODWORD(v111) = v130;
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v54 = v113;
  static Published.subscript.getter();
  swift_release();
  swift_release();
  char v55 = Playlist.isOwner.getter();
  (*(void (**)(char *, uint64_t))(v114 + 8))(v54, v115);
  uint64_t v56 = 1;
  if (v55)
  {
    if (Playlist.Collaborator.isPending.getter())
    {
      swift_getKeyPath();
      swift_getKeyPath();
      static Published.subscript.getter();
      swift_release();
      swift_release();
      char v57 = specialized Set.contains(_:)(v52, v125);
      swift_bridgeObjectRelease();
      if (v57)
      {
        uint64_t v58 = v92;
        ProgressView<>.init<>()();
        if (one-time initialization token for controlLength != -1) {
          swift_once();
        }
        static Alignment.center.getter();
        _FrameLayout.init(width:height:alignment:)();
        uint64_t v59 = v93;
        uint64_t v60 = v89;
        uint64_t v61 = v94;
        (*(void (**)(char *, char *, uint64_t))(v93 + 16))(v89, v58, v94);
        uint64_t v62 = &v60[*(int *)(v99 + 36)];
        long long v63 = v126;
        *(_OWORD *)uint64_t v62 = v125;
        *((_OWORD *)v62 + 1) = v63;
        *((_OWORD *)v62 + 2) = v127;
        (*(void (**)(char *, uint64_t))(v59 + 8))(v58, v61);
        uint64_t v64 = (uint64_t)v60;
        uint64_t v65 = v95;
        outlined init with take of PresentationSource?(v64, v95, &demangling cache variable for type metadata for ModifiedContent<ProgressView<EmptyView, EmptyView>, _FrameLayout>);
        outlined init with copy of (String, Any)(v65, (uint64_t)v100, &demangling cache variable for type metadata for ModifiedContent<ProgressView<EmptyView, EmptyView>, _FrameLayout>);
        swift_storeEnumTagMultiPayload();
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TupleView<(Collaboration.Management.View.Moderation.Button, Collaboration.Management.View.Moderation.Button)>);
        lazy protocol witness table accessor for type ModifiedContent<ProgressView<EmptyView, EmptyView>, _FrameLayout> and conformance <> ModifiedContent<A, B>();
        lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>((unint64_t *)&lazy protocol witness table cache variable for type TupleView<(Collaboration.Management.View.Moderation.Button, Collaboration.Management.View.Moderation.Button)> and conformance TupleView<A>, &demangling cache variable for type metadata for TupleView<(Collaboration.Management.View.Moderation.Button, Collaboration.Management.View.Moderation.Button)>);
        uint64_t v66 = (uint64_t)v98;
        _ConditionalContent<>.init(storage:)();
        outlined destroy of TaskPriority?(v65, &demangling cache variable for type metadata for ModifiedContent<ProgressView<EmptyView, EmptyView>, _FrameLayout>);
      }
      else
      {
        uint64_t v67 = v96;
        outlined init with copy of Collaboration.Management.View(v52, v96, type metadata accessor for Collaboration.Management.View.CollaboratorRowView);
        unint64_t v68 = (*(unsigned __int8 *)(v90 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v90 + 80);
        uint64_t v69 = swift_allocObject();
        outlined init with take of Collaboration.Management.View(v67, v69 + v68, type metadata accessor for Collaboration.Management.View.CollaboratorRowView);
        outlined init with copy of Collaboration.Management.View(v52, v67, type metadata accessor for Collaboration.Management.View.CollaboratorRowView);
        uint64_t v70 = swift_allocObject();
        outlined init with take of Collaboration.Management.View(v67, v70 + v68, type metadata accessor for Collaboration.Management.View.CollaboratorRowView);
        swift_retain();
        uint64_t v71 = v100;
        *uint64_t v100 = 1;
        *((void *)v71 + 1) = partial apply for closure #2 in closure #1 in Collaboration.Management.View.CollaboratorRowView.body.getter;
        *((void *)v71 + 2) = v69;
        v71[24] = 0;
        *((void *)v71 + 4) = partial apply for closure #3 in closure #1 in Collaboration.Management.View.CollaboratorRowView.body.getter;
        *((void *)v71 + 5) = v70;
        swift_retain();
        swift_storeEnumTagMultiPayload();
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TupleView<(Collaboration.Management.View.Moderation.Button, Collaboration.Management.View.Moderation.Button)>);
        lazy protocol witness table accessor for type ModifiedContent<ProgressView<EmptyView, EmptyView>, _FrameLayout> and conformance <> ModifiedContent<A, B>();
        lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>((unint64_t *)&lazy protocol witness table cache variable for type TupleView<(Collaboration.Management.View.Moderation.Button, Collaboration.Management.View.Moderation.Button)> and conformance TupleView<A>, &demangling cache variable for type metadata for TupleView<(Collaboration.Management.View.Moderation.Button, Collaboration.Management.View.Moderation.Button)>);
        uint64_t v66 = (uint64_t)v98;
        _ConditionalContent<>.init(storage:)();
        swift_release();
        swift_release();
      }
      outlined init with take of PresentationSource?(v66, v124, &demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FrameLayout>, TupleView<(Collaboration.Management.View.Moderation.Button, Collaboration.Management.View.Moderation.Button)>>);
      uint64_t v56 = 0;
    }
    else
    {
      uint64_t v56 = 1;
    }
  }
  uint64_t v72 = v124;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v117 + 56))(v124, v56, 1, v118);
  uint64_t v73 = v122;
  outlined init with copy of (String, Any)(v36, v122, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, CornerRadiusModifier>, _FrameLayout>, _AspectRatioLayout>?);
  outlined init with copy of (String, Any)(v72, v123, (uint64_t *)&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FrameLayout>, TupleView<(Collaboration.Management.View.Moderation.Button, Collaboration.Management.View.Moderation.Button)>>?);
  uint64_t v74 = v119;
  outlined init with copy of (String, Any)(v73, v119, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, CornerRadiusModifier>, _FrameLayout>, _AspectRatioLayout>?);
  uint64_t v75 = (int *)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, CornerRadiusModifier>, _FrameLayout>, _AspectRatioLayout>?, VStack<TupleView<(Text?, _ConditionalContent<Text, Text>?)>>, Spacer, _ConditionalContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FrameLayout>, TupleView<(Collaboration.Management.View.Moderation.Button, Collaboration.Management.View.Moderation.Button)>>?));
  uint64_t v76 = v74 + v75[12];
  *(void *)uint64_t v76 = v106;
  *(void *)(v76 + 8) = 0;
  *(unsigned char *)(v76 + 16) = 1;
  uint64_t v77 = v110;
  uint64_t v78 = (uint64_t)v109;
  *(void *)(v76 + 24) = v110;
  *(void *)(v76 + 32) = v78;
  char v79 = v108;
  uint64_t v80 = v107;
  *(void *)(v76 + 40) = v108;
  *(void *)(v76 + 48) = v80;
  uint64_t v81 = v105;
  uint64_t v82 = v104;
  *(void *)(v76 + 56) = v105;
  *(void *)(v76 + 64) = v82;
  uint64_t v83 = v112;
  *(void *)(v76 + 72) = v53;
  *(void *)(v76 + 80) = v83;
  unsigned __int8 v84 = v111;
  *(unsigned char *)(v76 + 88) = v111;
  uint64_t v85 = v74 + v75[16];
  *(void *)uint64_t v85 = 0;
  *(unsigned char *)(v85 + 8) = 1;
  uint64_t v86 = v74 + v75[20];
  uint64_t v87 = v123;
  outlined init with copy of (String, Any)(v123, v86, (uint64_t *)&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FrameLayout>, TupleView<(Collaboration.Management.View.Moderation.Button, Collaboration.Management.View.Moderation.Button)>>?);
  outlined copy of ModifiedContent<Text, _PaddingLayout>?(v77, v78, v79, v80);
  outlined copy of _ConditionalContent<Text, Text>?(v81, v82, v53, v83, v84);
  outlined destroy of TaskPriority?(v124, (uint64_t *)&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FrameLayout>, TupleView<(Collaboration.Management.View.Moderation.Button, Collaboration.Management.View.Moderation.Button)>>?);
  outlined destroy of TaskPriority?(v120, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, CornerRadiusModifier>, _FrameLayout>, _AspectRatioLayout>?);
  outlined destroy of TaskPriority?(v87, (uint64_t *)&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FrameLayout>, TupleView<(Collaboration.Management.View.Moderation.Button, Collaboration.Management.View.Moderation.Button)>>?);
  outlined consume of ModifiedContent<Text, _PaddingLayout>?(v77, v78, v79, v80);
  outlined consume of _ConditionalContent<Text, Text>?(v81, v82, v53, v83, v84);
  return outlined destroy of TaskPriority?(v122, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, CornerRadiusModifier>, _FrameLayout>, _AspectRatioLayout>?);
}

uint64_t Playlist.Collaborator.artworkViewModel.getter@<X0>(char *a1@<X8>)
{
  uint64_t v40 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&_s8MusicKit7ArtworkV0aB8InternalE9CropStyleVSgMD_0);
  __chkstk_darwin();
  uint64_t v37 = (char *)&v33 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = type metadata accessor for Artwork();
  uint64_t v3 = *(void **)(v2 - 8);
  __chkstk_darwin();
  uint64_t v36 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v35 = (char *)&v33 - v5;
  __chkstk_darwin();
  uint64_t v7 = (char *)&v33 - v6;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
  __chkstk_darwin();
  uint64_t v38 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v10 = (char *)&v33 - v9;
  __chkstk_darwin();
  uint64_t v12 = (char *)&v33 - v11;
  __chkstk_darwin();
  uint64_t v14 = (char *)&v33 - v13;
  uint64_t v15 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v3[7];
  v15((char *)&v33 - v13, 1, 1, v2);
  Playlist.Collaborator.artwork.getter();
  uint64_t v39 = (unsigned int (*)(char *, uint64_t, uint64_t))v3[6];
  unsigned int v16 = v39(v12, 1, v2);
  uint64_t v34 = v3;
  if (v16 == 1)
  {
    outlined destroy of TaskPriority?((uint64_t)v12, (uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
    type metadata accessor for UIMenu(0, (unint64_t *)&lazy cache variable for type metadata for MPArtworkCatalog);
    uint64_t v17 = Playlist.Collaborator.name.getter();
    id v19 = static MPArtworkCatalog.monogram(for:layoutDirection:)(v17, v18, 0, 1);
    swift_bridgeObjectRelease();
    uint64_t v21 = (uint64_t)v38;
    char v20 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v39;
    if (v19)
    {
      Artwork.init(_:)();
      outlined destroy of TaskPriority?((uint64_t)v14, (uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
      v15(v10, 0, 1, v2);
      outlined init with take of PresentationSource?((uint64_t)v10, (uint64_t)v14, (uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
    }
  }
  else
  {
    outlined destroy of TaskPriority?((uint64_t)v14, (uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
    uint64_t v22 = (void (*)(char *, char *, uint64_t))v3[4];
    v22(v7, v12, v2);
    v22(v14, v7, v2);
    v15(v14, 0, 1, v2);
    uint64_t v21 = (uint64_t)v38;
    char v20 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v39;
  }
  outlined init with copy of (String, Any)((uint64_t)v14, v21, (uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
  if (v20(v21, 1, v2) == 1)
  {
    outlined destroy of TaskPriority?((uint64_t)v14, (uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
    outlined destroy of TaskPriority?(v21, (uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
    uint64_t v23 = type metadata accessor for ArtworkImage.ViewModel(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v40, 1, 1, v23);
  }
  else
  {
    uint64_t v26 = v34;
    uint64_t v25 = v35;
    uint64_t v27 = (void (*)(char *, uint64_t, uint64_t))v34[4];
    v27(v35, v21, v2);
    uint64_t v28 = v36;
    ((void (*)(char *, char *, uint64_t))v26[2])(v36, v25, v2);
    uint64_t v29 = (uint64_t)v37;
    static Artwork.CropStyle.boundedBox.getter();
    ((void (*)(char *, uint64_t))v26[1])(v25, v2);
    outlined destroy of TaskPriority?((uint64_t)v14, (uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
    uint64_t v30 = type metadata accessor for Artwork.CropStyle();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v29, 0, 1, v30);
    char v31 = v40;
    v27(v40, (uint64_t)v28, v2);
    uint64_t v32 = type metadata accessor for ArtworkImage.ViewModel(0);
    outlined init with take of PresentationSource?(v29, (uint64_t)&v31[*(int *)(v32 + 20)], &_s8MusicKit7ArtworkV0aB8InternalE9CropStyleVSgMD_0);
    return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v31, 0, 1, v32);
  }
}

uint64_t closure #1 in closure #1 in Collaboration.Management.View.CollaboratorRowView.body.getter@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for String.LocalizationValue.StringInterpolation();
  __chkstk_darwin();
  uint64_t v93 = (char *)&v92 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Locale();
  __chkstk_darwin();
  uint64_t v97 = (char *)&v92 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for String.LocalizationValue();
  uint64_t v98 = *(void *)(v4 - 8);
  uint64_t v99 = v4;
  __chkstk_darwin();
  uint64_t v95 = (char *)&v92 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v96 = (char *)&v92 - v6;
  uint64_t v7 = type metadata accessor for Playlist();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin();
  uint64_t v10 = (char *)&v92 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = *(int *)(type metadata accessor for Collaboration.Management.View.CollaboratorRowView(0) + 20);
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  char v11 = Playlist.isOwner.getter();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  uint64_t v12 = Playlist.Collaborator.displayName(isDeviceHost:)(v11 & 1);
  if (v13)
  {
    uint64_t v106 = v12;
    uint64_t v107 = v13;
    _sS2SSysWl_1();
    uint64_t v14 = Text.init<A>(_:)();
    uint64_t v16 = v15;
    char v18 = v17 & 1;
    LODWORD(v106) = static HierarchicalShapeStyle.primary.getter();
    uint64_t v19 = Text.foregroundStyle<A>(_:)();
    uint64_t v21 = v20;
    char v23 = v22;
    outlined consume of Text.Storage(v14, v16, v18);
    swift_bridgeObjectRelease();
    if (one-time initialization token for collaboratorRowTitleFont != -1) {
      swift_once();
    }
    swift_retain();
    uint64_t v24 = Text.font(_:)();
    uint64_t v26 = v25;
    char v28 = v27;
    uint64_t v100 = v29;
    swift_release();
    uint64_t v30 = v28 & 1;
    outlined consume of Text.Storage(v19, v21, v23 & 1);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v24 = 0;
    uint64_t v26 = 0;
    uint64_t v30 = 0;
    uint64_t v100 = 0;
  }
  if ((Playlist.Collaborator.isPending.getter() & 1) != 0
    && (Collaboration.Management.Model.isPending.getter() & 1) == 0)
  {
    uint64_t v92 = v30;
    uint64_t v94 = v24;
    uint64_t v66 = v96;
    String.LocalizationValue.init(stringLiteral:)();
    uint64_t v68 = v98;
    uint64_t v67 = v99;
    (*(void (**)(char *, char *, uint64_t))(v98 + 16))(v95, v66, v99);
    if (one-time initialization token for module != -1) {
      swift_once();
    }
    uint64_t v93 = (char *)v26;
    id v69 = (id)static NSBundle.module;
    static Locale.current.getter();
    uint64_t v70 = String.init(localized:table:bundle:locale:comment:)();
    uint64_t v72 = v71;
    (*(void (**)(char *, uint64_t))(v68 + 8))(v66, v67);
    uint64_t v106 = v70;
    uint64_t v107 = v72;
    _sS2SSysWl_1();
    uint64_t v73 = Text.init<A>(_:)();
    uint64_t v75 = v74;
    char v77 = v76 & 1;
    LODWORD(v106) = static HierarchicalShapeStyle.secondary.getter();
    uint64_t v78 = Text.foregroundStyle<A>(_:)();
    uint64_t v80 = v79;
    char v82 = v81;
    outlined consume of Text.Storage(v73, v75, v77);
    swift_bridgeObjectRelease();
    if (one-time initialization token for collaboratorRowSubtitleFont != -1) {
      swift_once();
    }
    swift_retain();
    uint64_t v83 = Text.font(_:)();
    uint64_t v85 = v84;
    char v87 = v86;
    uint64_t v89 = v88;
    swift_release();
    outlined consume of Text.Storage(v78, v80, v82 & 1);
    swift_bridgeObjectRelease();
    uint64_t v101 = v83;
    uint64_t v102 = v85;
    uint64_t v103 = v87 & 1;
    uint64_t v104 = v89;
    char v105 = 0;
    goto LABEL_20;
  }
  uint64_t v31 = Playlist.Collaborator.handle.getter();
  uint64_t v33 = v32;
  if (v32)
  {
    uint64_t v34 = v31;
    uint64_t v92 = v30;
    uint64_t v94 = v24;
    String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v35._countAndFlagsBits = 64;
    v35._object = (void *)0xE100000000000000;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v35);
    v36._countAndFlagsBits = v34;
    v36._object = v33;
    String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v36);
    swift_bridgeObjectRelease();
    v37._countAndFlagsBits = 0;
    v37._object = (void *)0xE000000000000000;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v37);
    uint64_t v38 = v96;
    String.LocalizationValue.init(stringInterpolation:)();
    uint64_t v40 = v98;
    uint64_t v39 = v99;
    (*(void (**)(char *, char *, uint64_t))(v98 + 16))(v95, v38, v99);
    if (one-time initialization token for module != -1) {
      swift_once();
    }
    uint64_t v93 = (char *)v26;
    id v41 = (id)static NSBundle.module;
    static Locale.current.getter();
    uint64_t v42 = String.init(localized:table:bundle:locale:comment:)();
    uint64_t v44 = v43;
    (*(void (**)(char *, uint64_t))(v40 + 8))(v38, v39);
    uint64_t v106 = v42;
    uint64_t v107 = v44;
    _sS2SSysWl_1();
    uint64_t v45 = Text.init<A>(_:)();
    uint64_t v47 = v46;
    char v49 = v48 & 1;
    LODWORD(v106) = static HierarchicalShapeStyle.secondary.getter();
    uint64_t v50 = Text.foregroundStyle<A>(_:)();
    uint64_t v52 = v51;
    char v54 = v53;
    outlined consume of Text.Storage(v45, v47, v49);
    swift_bridgeObjectRelease();
    if (one-time initialization token for collaboratorRowSubtitleFont != -1) {
      swift_once();
    }
    swift_retain();
    uint64_t v55 = Text.font(_:)();
    uint64_t v57 = v56;
    char v59 = v58;
    uint64_t v61 = v60;
    swift_release();
    outlined consume of Text.Storage(v50, v52, v54 & 1);
    swift_bridgeObjectRelease();
    uint64_t v101 = v55;
    uint64_t v102 = v57;
    uint64_t v103 = v59 & 1;
    uint64_t v104 = v61;
    char v105 = 1;
LABEL_20:
    _ConditionalContent<>.init(storage:)();
    uint64_t v62 = v106;
    uint64_t v63 = v107;
    uint64_t v33 = v108;
    uint64_t v64 = v109;
    unsigned __int8 v65 = v110;
    uint64_t v24 = v94;
    uint64_t v26 = (uint64_t)v93;
    uint64_t v30 = v92;
    goto LABEL_21;
  }
  uint64_t v62 = 0;
  uint64_t v63 = 0;
  uint64_t v64 = 0;
  unsigned __int8 v65 = -1;
LABEL_21:
  *(void *)a1 = v24;
  *(void *)(a1 + 8) = v26;
  uint64_t v90 = v100;
  *(void *)(a1 + 16) = v30;
  *(void *)(a1 + 24) = v90;
  *(void *)(a1 + 32) = v62;
  *(void *)(a1 + 40) = v63;
  *(void *)(a1 + 48) = v33;
  *(void *)(a1 + 56) = v64;
  *(unsigned char *)(a1 + 64) = v65;
  outlined copy of ModifiedContent<Text, _PaddingLayout>?(v24, v26, v30, v90);
  outlined copy of _ConditionalContent<Text, Text>?(v62, v63, (char)v33, v64, v65);
  outlined consume of _ConditionalContent<Text, Text>?(v62, v63, (char)v33, v64, v65);
  return outlined consume of ModifiedContent<Text, _PaddingLayout>?(v24, v26, v30, v90);
}

uint64_t Playlist.Collaborator.displayName(isDeviceHost:)(char a1)
{
  type metadata accessor for Locale();
  __chkstk_darwin();
  type metadata accessor for String.LocalizationValue();
  __chkstk_darwin();
  type metadata accessor for String.LocalizationValue.StringInterpolation();
  __chkstk_darwin();
  uint64_t v2 = Playlist.Collaborator.name.getter();
  uint64_t v4 = v3;
  if (v3 && (Playlist.Collaborator.isHost.getter() & 1) != 0)
  {
    String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v5._countAndFlagsBits = 0;
    v5._object = (void *)0xE000000000000000;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v5);
    v6._countAndFlagsBits = v2;
    v6._object = v4;
    String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v6);
    swift_bridgeObjectRelease();
    v7._countAndFlagsBits = 0x2972656E774F2820;
    v7._object = (void *)0xE800000000000000;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v7);
    String.LocalizationValue.init(stringInterpolation:)();
    if (a1)
    {
      if (one-time initialization token for module != -1) {
        swift_once();
      }
    }
    else if (one-time initialization token for module != -1)
    {
      swift_once();
    }
    id v8 = (id)static NSBundle.module;
    static Locale.current.getter();
    return String.init(localized:defaultValue:table:bundle:locale:comment:)();
  }
  return v2;
}

uint64_t closure #2 in closure #1 in Collaboration.Management.View.CollaboratorRowView.body.getter(uint64_t a1, const char *a2, char a3)
{
  uint64_t v6 = type metadata accessor for Logger();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = Logger.collaboration.unsafeMutableAddressor();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v10, v6);
  char v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v13 = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, v12, a2, v13, 2u);
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  type metadata accessor for Collaboration.Management.View.CollaboratorRowView(0);
  return Collaboration.Management.Model.moderateCollaborator(_:action:)(a1, a3);
}

uint64_t closure #2 in Collaboration.Management.View.CollaboratorRowView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v38 = a2;
  uint64_t v32 = *(void *)(type metadata accessor for Collaboration.Management.View.CollaboratorRowView(0) - 8);
  uint64_t v3 = *(void *)(v32 + 64);
  __chkstk_darwin();
  uint64_t v34 = (uint64_t)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&_s7SwiftUI10ButtonRoleVSgMD_0);
  __chkstk_darwin();
  uint64_t v33 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&_s7SwiftUI6ButtonVyAA4TextVGMD_0);
  uint64_t v36 = *(void *)(v5 - 8);
  uint64_t v37 = v5;
  __chkstk_darwin();
  Swift::String v35 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin();
  uint64_t v31 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Playlist();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin();
  uint64_t v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  char v14 = Playlist.isOwner.getter();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  if ((v14 & 1) != 0 && (Playlist.Collaborator.isHost.getter() & 1) == 0)
  {
    char v18 = Playlist.Collaborator.isPending.getter();
    uint64_t v15 = 1;
    uint64_t v16 = v38;
    if (v18 != 2 && (v18 & 1) == 0)
    {
      uint64_t v19 = v33;
      static ButtonRole.cancel.getter();
      uint64_t v20 = type metadata accessor for ButtonRole();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v19, 0, 1, v20);
      uint64_t v21 = v34;
      outlined init with copy of Collaboration.Management.View(a1, v34, type metadata accessor for Collaboration.Management.View.CollaboratorRowView);
      unint64_t v22 = (*(unsigned __int8 *)(v32 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
      uint64_t v23 = swift_allocObject();
      outlined init with take of Collaboration.Management.View(v21, v23 + v22, type metadata accessor for Collaboration.Management.View.CollaboratorRowView);
      uint64_t v24 = v35;
      Button.init(role:action:label:)();
      uint64_t v25 = static Color.red.getter();
      uint64_t KeyPath = swift_getKeyPath();
      uint64_t v28 = v36;
      uint64_t v27 = v37;
      uint64_t v29 = (uint64_t)v31;
      (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v31, v24, v37);
      uint64_t v30 = (uint64_t *)(v29 + *(int *)(v7 + 36));
      uint64_t *v30 = KeyPath;
      v30[1] = v25;
      (*(void (**)(char *, uint64_t))(v28 + 8))(v24, v27);
      outlined init with take of PresentationSource?(v29, v16, (uint64_t *)&demangling cache variable for type metadata for ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>);
      uint64_t v15 = 0;
    }
  }
  else
  {
    uint64_t v15 = 1;
    uint64_t v16 = v38;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v16, v15, 1, v7);
}

uint64_t closure #1 in closure #2 in Collaboration.Management.View.CollaboratorRowView.body.getter(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = &v21[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Playlist.Collaborator?);
  __chkstk_darwin();
  uint64_t v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin();
  uint64_t v9 = &v21[-v8];
  uint64_t v10 = type metadata accessor for Playlist.Collaborator();
  uint64_t v11 = *(void *)(v10 - 8);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v11 + 16))(v9, a1, v10);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
  uint64_t v12 = type metadata accessor for Collaboration.Management.View.CollaboratorRowView(0);
  outlined init with copy of (String, Any)((uint64_t)v9, (uint64_t)v7, &demangling cache variable for type metadata for Playlist.Collaborator?);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Playlist.Collaborator?>);
  State.wrappedValue.setter();
  outlined destroy of TaskPriority?((uint64_t)v9, &demangling cache variable for type metadata for Playlist.Collaborator?);
  uint64_t v13 = (char *)(a1 + *(int *)(v12 + 24));
  char v14 = *v13;
  uint64_t v15 = *((void *)v13 + 1);
  v21[16] = v14;
  uint64_t v22 = v15;
  v21[15] = 1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Bool>);
  State.wrappedValue.setter();
  uint64_t v16 = Logger.collaboration.unsafeMutableAddressor();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v3 + 16))(v5, v16, v2);
  char v17 = Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v19 = 0;
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "[Management] Remove swipe action triggered", v19, 2u);
    swift_slowDealloc();
  }

  return (*(uint64_t (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t closure #2 in closure #2 in Collaboration.Management.View.CollaboratorRowView.body.getter@<X0>(uint64_t a1@<X8>)
{
  return closure #3 in closure #1 in closure #8 in closure #1 in closure #1 in Collaboration.Management.View.body.getter(a1);
}

uint64_t closure #3 in Collaboration.Management.View.CollaboratorRowView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v49 = a1;
  uint64_t v53 = a2;
  uint64_t v47 = *(void *)(type metadata accessor for Collaboration.Management.View.CollaboratorRowView(0) - 8);
  __chkstk_darwin();
  uint64_t v48 = v2;
  uint64_t v50 = (uint64_t)v41 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Alert.Button();
  __chkstk_darwin();
  uint64_t v52 = (char *)v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v51 = (char *)v41 - v4;
  type metadata accessor for Locale();
  __chkstk_darwin();
  uint64_t v5 = type metadata accessor for String.LocalizationValue();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v10 = (char *)v41 - v9;
  String.LocalizationValue.init(stringLiteral:)();
  uint64_t v42 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
  v42(v8, v10, v5);
  if (one-time initialization token for module != -1) {
    swift_once();
  }
  id v11 = (id)static NSBundle.module;
  static Locale.current.getter();
  uint64_t v12 = String.init(localized:table:bundle:locale:comment:)();
  uint64_t v14 = v13;
  uint64_t v15 = *(void (**)(char *, uint64_t))(v6 + 8);
  v15(v10, v5);
  uint64_t v54 = v12;
  uint64_t v55 = v14;
  v41[1] = _sS2SSysWl_1();
  uint64_t v16 = Text.init<A>(_:)();
  uint64_t v45 = v17;
  uint64_t v46 = v16;
  int v43 = v18;
  uint64_t v44 = v19;
  String.LocalizationValue.init(stringLiteral:)();
  uint64_t v20 = v42;
  v42(v8, v10, v5);
  id v21 = (id)static NSBundle.module;
  static Locale.current.getter();
  uint64_t v22 = String.init(localized:table:bundle:locale:comment:)();
  uint64_t v24 = v23;
  v15(v10, v5);
  uint64_t v54 = v22;
  uint64_t v55 = v24;
  uint64_t v25 = Text.init<A>(_:)();
  v41[4] = v26;
  v41[5] = v25;
  void v41[2] = v27 & 1;
  v41[3] = v28;
  String.LocalizationValue.init(stringLiteral:)();
  v20(v8, v10, v5);
  id v29 = (id)static NSBundle.module;
  static Locale.current.getter();
  uint64_t v30 = String.init(localized:table:bundle:locale:comment:)();
  uint64_t v32 = v31;
  v15(v10, v5);
  uint64_t v54 = v30;
  uint64_t v55 = v32;
  uint64_t v33 = Text.init<A>(_:)();
  uint64_t v35 = v34;
  LOBYTE(v20) = v36 & 1;
  uint64_t v37 = v50;
  outlined init with copy of Collaboration.Management.View(v49, v50, type metadata accessor for Collaboration.Management.View.CollaboratorRowView);
  unint64_t v38 = (*(unsigned __int8 *)(v47 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
  uint64_t v39 = swift_allocObject();
  outlined init with take of Collaboration.Management.View(v37, v39 + v38, type metadata accessor for Collaboration.Management.View.CollaboratorRowView);
  static Alert.Button.destructive(_:action:)();
  outlined consume of Text.Storage(v33, v35, (char)v20);
  swift_release();
  swift_bridgeObjectRelease();
  static Alert.Button.cancel(_:)();
  return Alert.init(title:message:primaryButton:secondaryButton:)();
}

uint64_t closure #1 in closure #3 in Collaboration.Management.View.CollaboratorRowView.body.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Playlist.Collaborator?);
  __chkstk_darwin();
  uint64_t v1 = (char *)&v3 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Collaboration.Management.View.CollaboratorRowView(0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Playlist.Collaborator?>);
  State.wrappedValue.getter();
  Collaboration.Management.Model.remove(_:)((uint64_t)v1);
  return outlined destroy of TaskPriority?((uint64_t)v1, &demangling cache variable for type metadata for Playlist.Collaborator?);
}

uint64_t Collaboration.Management.View.Share.title.getter()
{
  type metadata accessor for Locale();
  __chkstk_darwin();
  uint64_t v0 = type metadata accessor for String.LocalizationValue();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin();
  uint64_t v3 = &v9[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin();
  uint64_t v5 = &v9[-v4];
  String.LocalizationValue.init(stringLiteral:)();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v1 + 16))(v3, v5, v0);
  if (one-time initialization token for module != -1) {
    swift_once();
  }
  id v6 = (id)static NSBundle.module;
  static Locale.current.getter();
  uint64_t v7 = String.init(localized:table:bundle:locale:comment:)();
  (*(void (**)(unsigned char *, uint64_t))(v1 + 8))(v5, v0);
  return v7;
}

uint64_t Collaboration.Management.View.Share.Button.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v59 = a1;
  uint64_t v57 = type metadata accessor for RoundedRectangle();
  __chkstk_darwin();
  char v58 = (char *)&v50 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = type metadata accessor for ColorScheme();
  uint64_t v4 = *(void *)(v56 - 8);
  __chkstk_darwin();
  uint64_t v55 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v54 = (uint64_t)&v50 - v6;
  uint64_t v7 = type metadata accessor for Collaboration.Management.View.Share.Button(0);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin();
  uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Button<ModifiedContent<ModifiedContent<_VariadicView.Tree<_LayoutRoot<VStackLayout>, TupleView<(Spacer, <<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, Text, Spacer)>>, _OffsetEffect>, _FlexFrameLayout>>);
  uint64_t v10 = *(void *)(v50 - 8);
  __chkstk_darwin();
  uint64_t v12 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Button<ModifiedContent<ModifiedContent<_VariadicView.Tree<_LayoutRoot<VStackLayout>, TupleView<(Spacer, <<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, Text, Spacer)>>, _OffsetEffect>, _FlexFrameLayout>>, _FlexFrameLayout>);
  __chkstk_darwin();
  uint64_t v14 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Button<ModifiedContent<ModifiedContent<_VariadicView.Tree<_LayoutRoot<VStackLayout>, TupleView<(Spacer, <<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, Text, Spacer)>>, _OffsetEffect>, _FlexFrameLayout>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>);
  __chkstk_darwin();
  uint64_t v16 = (char *)&v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<ModifiedContent<_VariadicView.Tree<_LayoutRoot<VStackLayout>, TupleView<(Spacer, <<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, Text, Spacer)>>, _OffsetEffect>, _FlexFrameLayout>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>, _InsettableBackgroundShapeModifier<Color, RoundedRectangle>>);
  __chkstk_darwin();
  uint64_t v53 = (char *)&v50 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of Collaboration.Management.View(v2, (uint64_t)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for Collaboration.Management.View.Share.Button);
  unint64_t v18 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v19 = swift_allocObject();
  outlined init with take of Collaboration.Management.View((uint64_t)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v19 + v18, type metadata accessor for Collaboration.Management.View.Share.Button);
  uint64_t v60 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<_VariadicView.Tree<_LayoutRoot<VStackLayout>, TupleView<(Spacer, <<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, Text, Spacer)>>, _OffsetEffect>, _FlexFrameLayout>);
  lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<_VariadicView.Tree<_LayoutRoot<VStackLayout>, TupleView<(Spacer, <<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, Text, Spacer)>>, _OffsetEffect>, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<_VariadicView.Tree<_LayoutRoot<VStackLayout>, TupleView<(Spacer, <<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, Text, Spacer)>>, _OffsetEffect>, _FlexFrameLayout>, (void (*)(void))lazy protocol witness table accessor for type ModifiedContent<_VariadicView.Tree<_LayoutRoot<VStackLayout>, TupleView<(Spacer, <<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, Text, Spacer)>>, _OffsetEffect> and conformance <> ModifiedContent<A, B>);
  Button.init(action:label:)();
  static Alignment.center.getter();
  __n128 v20 = specialized View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v14, 0.0, 1, 0.0, 1);
  (*(void (**)(char *, uint64_t, __n128))(v10 + 8))(v12, v50, v20);
  uint64_t v21 = v2 + *(int *)(v7 + 28);
  uint64_t v22 = *(void *)v21;
  LOBYTE(v12) = *(unsigned char *)(v21 + 8);
  outlined copy of Environment<Bool>.Content(*(void *)v21, (char)v12);
  char v23 = specialized Environment.wrappedValue.getter(v22, (char)v12);
  outlined consume of Environment<SymbolButton.MaterialColor?>.Content(v22, (char)v12);
  if (v23)
  {
    if (one-time initialization token for keyColor != -1) {
      swift_once();
    }
    uint64_t v24 = static Collaboration.Management.View.Specs.keyColor;
    swift_retain();
  }
  else
  {
    id v25 = [self tertiaryLabelColor];
    uint64_t v24 = Color.init(_:)();
  }
  uint64_t KeyPath = swift_getKeyPath();
  outlined init with copy of (String, Any)((uint64_t)v14, (uint64_t)v16, &demangling cache variable for type metadata for ModifiedContent<Button<ModifiedContent<ModifiedContent<_VariadicView.Tree<_LayoutRoot<VStackLayout>, TupleView<(Spacer, <<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, Text, Spacer)>>, _OffsetEffect>, _FlexFrameLayout>>, _FlexFrameLayout>);
  char v27 = (uint64_t *)&v16[*(int *)(v51 + 36)];
  uint64_t *v27 = KeyPath;
  v27[1] = v24;
  outlined destroy of TaskPriority?((uint64_t)v14, &demangling cache variable for type metadata for ModifiedContent<Button<ModifiedContent<ModifiedContent<_VariadicView.Tree<_LayoutRoot<VStackLayout>, TupleView<(Spacer, <<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, Text, Spacer)>>, _OffsetEffect>, _FlexFrameLayout>>, _FlexFrameLayout>);
  uint64_t v28 = v54;
  specialized Environment.wrappedValue.getter(v54);
  uint64_t v30 = v55;
  uint64_t v29 = v56;
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v55, enum case for ColorScheme.light(_:), v56);
  char v31 = static ColorScheme.== infix(_:_:)();
  uint64_t v32 = *(void (**)(char *, uint64_t))(v4 + 8);
  v32(v30, v29);
  v32((char *)v28, v29);
  uint64_t v33 = self;
  uint64_t v34 = &selRef_systemBackgroundColor;
  if ((v31 & 1) == 0) {
    uint64_t v34 = &selRef_secondarySystemBackgroundColor;
  }
  id v35 = objc_msgSend(v33, *v34, v50);
  uint64_t v36 = Color.init(_:)();
  uint64_t v37 = v58;
  unint64_t v38 = &v58[*(int *)(v57 + 20)];
  uint64_t v39 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v40 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v40 - 8) + 104))(v38, v39, v40);
  __asm { FMOV            V0.2D, #10.0 }
  *uint64_t v37 = _Q0;
  uint64_t v46 = (uint64_t)v53;
  uint64_t v47 = (uint64_t *)&v53[*(int *)(v52 + 36)];
  uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _InsettableBackgroundShapeModifier<Color, RoundedRectangle>);
  outlined init with copy of Collaboration.Management.View((uint64_t)v37, (uint64_t)v47 + *(int *)(v48 + 52), (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  *uint64_t v47 = v36;
  *(_WORD *)((char *)v47 + *(int *)(v48 + 56)) = 256;
  outlined init with copy of (String, Any)((uint64_t)v16, v46, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Button<ModifiedContent<ModifiedContent<_VariadicView.Tree<_LayoutRoot<VStackLayout>, TupleView<(Spacer, <<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, Text, Spacer)>>, _OffsetEffect>, _FlexFrameLayout>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>);
  _s17_MusicKit_SwiftUI12ArtworkImageV0a4CoreD0E11PlaceholderOWOhTm_1((uint64_t)v37, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  outlined destroy of TaskPriority?((uint64_t)v16, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Button<ModifiedContent<ModifiedContent<_VariadicView.Tree<_LayoutRoot<VStackLayout>, TupleView<(Spacer, <<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, Text, Spacer)>>, _OffsetEffect>, _FlexFrameLayout>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>);
  return outlined init with take of PresentationSource?(v46, v59, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<ModifiedContent<_VariadicView.Tree<_LayoutRoot<VStackLayout>, TupleView<(Spacer, <<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, Text, Spacer)>>, _OffsetEffect>, _FlexFrameLayout>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>, _InsettableBackgroundShapeModifier<Color, RoundedRectangle>>);
}

uint64_t closure #2 in Collaboration.Management.View.Share.Button.body.getter@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_LayoutRoot<VStackLayout>, TupleView<(Spacer, <<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, Text, Spacer)>>)
     - 8;
  __chkstk_darwin();
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ModifiedContent<_VariadicView.Tree<_LayoutRoot<VStackLayout>, TupleView<(Spacer, <<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, Text, Spacer)>>, _OffsetEffect>)
     - 8;
  __chkstk_darwin();
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<_VariadicView.Tree<_LayoutRoot<VStackLayout>, TupleView<(Spacer, <<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, Text, Spacer)>>, _OffsetEffect>, _FlexFrameLayout>);
  __chkstk_darwin();
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v6 = static HorizontalAlignment.center.getter();
  *((void *)v6 + 1) = 0x4008000000000000;
  unsigned char v6[16] = 0;
  closure #2 in closure #2 in Collaboration.Management.View.Share.Button.body.getter(a1, &v6[*(int *)(v4 + 52)]);
  if (*a1) {
    double v12 = 2.5;
  }
  else {
    double v12 = 0.0;
  }
  outlined init with copy of (String, Any)((uint64_t)v6, (uint64_t)v9, &demangling cache variable for type metadata for _VariadicView.Tree<_LayoutRoot<VStackLayout>, TupleView<(Spacer, <<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, Text, Spacer)>>);
  uint64_t v13 = &v9[*(int *)(v7 + 44)];
  *(void *)uint64_t v13 = 0;
  *((double *)v13 + 1) = v12;
  outlined destroy of TaskPriority?((uint64_t)v6, &demangling cache variable for type metadata for _VariadicView.Tree<_LayoutRoot<VStackLayout>, TupleView<(Spacer, <<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, Text, Spacer)>>);
  uint64_t v14 = static Alignment.center.getter();
  specialized View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v11, 0.0, 1, 0.0, 1, v14, v15);
  outlined destroy of TaskPriority?((uint64_t)v9, (uint64_t *)&demangling cache variable for type metadata for ModifiedContent<_VariadicView.Tree<_LayoutRoot<VStackLayout>, TupleView<(Spacer, <<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, Text, Spacer)>>, _OffsetEffect>);
  return outlined init with take of PresentationSource?((uint64_t)v11, a2, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<_VariadicView.Tree<_LayoutRoot<VStackLayout>, TupleView<(Spacer, <<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, Text, Spacer)>>, _OffsetEffect>, _FlexFrameLayout>);
}

uint64_t closure #2 in closure #2 in Collaboration.Management.View.Share.Button.body.getter@<X0>(unsigned __int8 *a1@<X0>, void *a2@<X8>)
{
  uint64_t v55 = a2;
  uint64_t v57 = (char *)__swift_instantiateConcreteTypeFromMangledName(&_ss19PartialRangeThroughVy7SwiftUI15DynamicTypeSizeOGMD_0);
  __chkstk_darwin();
  uint64_t v4 = (char *)v50 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&_s7SwiftUI4ViewPAAE10fontWeightyQrAA4FontV0E0VSgFQOyAA15ModifiedContentVyAA5ImageVAA30_EnvironmentKeyWritingModifierVyAFSgGG_Qo_MD_0);
  uint64_t v52 = *(void *)(v5 - 8);
  uint64_t v53 = v5;
  __chkstk_darwin();
  uint64_t v7 = (char *)v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.dynamicTypeSize<A>(_:)>>.0);
  uint64_t v58 = *(void *)(v56 - 8);
  __chkstk_darwin();
  uint64_t v54 = (char *)v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v51 = (char *)v50 - v9;
  __chkstk_darwin();
  uint64_t v11 = (char *)v50 - v10;
  v50[1] = *a1;
  uint64_t v12 = Image.init(systemName:)();
  uint64_t v13 = static Font.body.getter();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v59 = v12;
  unint64_t v60 = KeyPath;
  uint64_t v61 = v13;
  static Font.Weight.semibold.getter();
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&_s7SwiftUI15ModifiedContentVyAA5ImageVAA30_EnvironmentKeyWritingModifierVyAA4FontVSgGGMD_0);
  unint64_t v16 = _s7SwiftUI15ModifiedContentVyAA5ImageVAA30_EnvironmentKeyWritingModifierVyAA4FontVSgGGACyxq_GAA4ViewA2aNRzAA0kI0R_rlWl_0();
  View.fontWeight(_:)();
  swift_release();
  swift_release();
  swift_release();
  if (one-time initialization token for dynamicSizeRange != -1) {
    swift_once();
  }
  uint64_t v17 = __swift_project_value_buffer((uint64_t)v57, (uint64_t)static Collaboration.Management.View.Specs.dynamicSizeRange);
  outlined init with copy of (String, Any)(v17, (uint64_t)v4, &_ss19PartialRangeThroughVy7SwiftUI15DynamicTypeSizeOGMD_0);
  uint64_t v59 = v15;
  unint64_t v60 = v16;
  swift_getOpaqueTypeConformance2();
  lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&_ss19PartialRangeThroughVy7SwiftUI15DynamicTypeSizeOGAByxGSXsWL_0, &_ss19PartialRangeThroughVy7SwiftUI15DynamicTypeSizeOGMD_0);
  unint64_t v18 = v51;
  uint64_t v19 = v53;
  View.dynamicTypeSize<A>(_:)();
  outlined destroy of TaskPriority?((uint64_t)v4, &_ss19PartialRangeThroughVy7SwiftUI15DynamicTypeSizeOGMD_0);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v7, v19);
  __n128 v20 = *(void (**)(char *, char *, uint64_t))(v58 + 32);
  uint64_t v57 = v11;
  v20(v11, v18, v56);
  uint64_t v59 = Collaboration.Management.View.Share.title.getter();
  unint64_t v60 = v21;
  _sS2SSysWl_1();
  uint64_t v22 = Text.init<A>(_:)();
  uint64_t v24 = v23;
  char v26 = v25;
  if (one-time initialization token for shareButtonFont != -1) {
    swift_once();
  }
  swift_retain();
  char v27 = v26 & 1;
  uint64_t v28 = Text.font(_:)();
  uint64_t v30 = v29;
  char v32 = v31;
  swift_release();
  outlined consume of Text.Storage(v22, v24, v27);
  swift_bridgeObjectRelease();
  if (one-time initialization token for shareButtonFontWeight != -1) {
    swift_once();
  }
  char v33 = v32 & 1;
  uint64_t v34 = Text.fontWeight(_:)();
  uint64_t v36 = v35;
  uint64_t v53 = v37;
  char v39 = v38 & 1;
  outlined consume of Text.Storage(v28, v30, v33);
  swift_bridgeObjectRelease();
  uint64_t v40 = v58;
  id v41 = *(void (**)(char *, char *, uint64_t))(v58 + 16);
  uint64_t v42 = v54;
  uint64_t v43 = v56;
  v41(v54, v57, v56);
  uint64_t v44 = v55;
  void *v55 = 0;
  *((unsigned char *)v44 + 8) = 1;
  uint64_t v45 = (int *)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Spacer, <<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, Text, Spacer));
  v41((char *)v44 + v45[12], v42, v43);
  uint64_t v46 = (char *)v44 + v45[16];
  *(void *)uint64_t v46 = v34;
  *((void *)v46 + 1) = v36;
  unsigned char v46[16] = v39;
  *((void *)v46 + 3) = v53;
  uint64_t v47 = (char *)v44 + v45[20];
  *(void *)uint64_t v47 = 0x4020000000000000;
  v47[8] = 0;
  outlined copy of Text.Storage(v34, v36, v39);
  uint64_t v48 = *(void (**)(char *, uint64_t))(v40 + 8);
  swift_bridgeObjectRetain();
  v48(v57, v43);
  outlined consume of Text.Storage(v34, v36, v39);
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(char *, uint64_t))v48)(v42, v43);
}

uint64_t Collaboration.Management.View.Moderation.Button.body.getter@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v44 = a4;
  char v6 = a1 & 1;
  uint64_t v45 = type metadata accessor for ButtonBorderShape();
  uint64_t v43 = *(void *)(v45 - 8);
  __chkstk_darwin();
  uint64_t v42 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for BorderlessButtonStyle();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v39 = v8;
  uint64_t v40 = v9;
  __chkstk_darwin();
  uint64_t v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Button<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0>);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v37 = v12;
  uint64_t v38 = v13;
  __chkstk_darwin();
  uint64_t v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.buttonStyle<A>(_:)>>.0);
  uint64_t v16 = *(void *)(v41 - 8);
  __chkstk_darwin();
  unint64_t v18 = (char *)&v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = swift_allocObject();
  *(unsigned char *)(v19 + 16) = v6;
  *(void *)(v19 + 24) = a2;
  *(void *)(v19 + 32) = a3;
  char v46 = v6;
  uint64_t v47 = a2;
  uint64_t v48 = a3;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.dynamicTypeSize<A>(_:)>>.0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&_ss19PartialRangeThroughVy7SwiftUI15DynamicTypeSizeOGMD_0);
  unint64_t v22 = lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>> and conformance <> ModifiedContent<A, B>();
  uint64_t v23 = lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&_ss19PartialRangeThroughVy7SwiftUI15DynamicTypeSizeOGAByxGSXsWL_0, &_ss19PartialRangeThroughVy7SwiftUI15DynamicTypeSizeOGMD_0);
  uint64_t v49 = v20;
  uint64_t v50 = v21;
  unint64_t v51 = v22;
  uint64_t v52 = v23;
  swift_getOpaqueTypeConformance2();
  Button.init(action:label:)();
  BorderlessButtonStyle.init()();
  lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type Button<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0> and conformance Button<A>, &demangling cache variable for type metadata for Button<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0>);
  lazy protocol witness table accessor for type Collaboration.Management.Model and conformance Collaboration.Management.Model(&lazy protocol witness table cache variable for type BorderlessButtonStyle and conformance BorderlessButtonStyle, (void (*)(uint64_t))&type metadata accessor for BorderlessButtonStyle);
  uint64_t v24 = v37;
  uint64_t v25 = v39;
  View.buttonStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v11, v25);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v15, v24);
  char v26 = v42;
  static ButtonBorderShape.circle.getter();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ButtonBorderShape>>);
  uint64_t v29 = v44;
  uint64_t v30 = (uint64_t *)(v44 + *(int *)(v28 + 36));
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<ButtonBorderShape>);
  uint64_t v32 = v43;
  uint64_t v33 = v45;
  (*(void (**)(char *, char *, uint64_t))(v43 + 16))((char *)v30 + *(int *)(v31 + 28), v26, v45);
  uint64_t *v30 = KeyPath;
  uint64_t v34 = v41;
  (*(void (**)(uint64_t, char *, uint64_t))(v16 + 16))(v29, v18, v41);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v26, v33);
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v34);
}

uint64_t closure #1 in Collaboration.Management.View.Moderation.Button.body.getter()
{
  return swift_release();
}

uint64_t closure #2 in Collaboration.Management.View.Moderation.Button.body.getter@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v27 = a2;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&_ss19PartialRangeThroughVy7SwiftUI15DynamicTypeSizeOGMD_0);
  __chkstk_darwin();
  uint64_t v4 = (char *)&KeyPath - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.dynamicTypeSize<A>(_:)>>.0);
  uint64_t v25 = *(void *)(v26 - 8);
  __chkstk_darwin();
  uint64_t v24 = (char *)&KeyPath - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = Image.init(systemName:)();
  static Font.subheadline.getter();
  uint64_t v21 = Font.bold()();
  swift_release();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v6 = static Color.white.getter();
  uint64_t v7 = swift_getKeyPath();
  if (one-time initialization token for controlLength != -1) {
    swift_once();
  }
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v8 = v42;
  char v9 = v43;
  uint64_t v10 = v44;
  char v11 = v45;
  uint64_t v12 = v46;
  uint64_t v13 = v47;
  if (a1) {
    uint64_t v14 = static Color.red.getter();
  }
  else {
    uint64_t v14 = static Color.green.getter();
  }
  uint64_t v15 = v14;
  char v16 = static Edge.Set.all.getter();
  uint64_t v28 = v22;
  uint64_t v29 = KeyPath;
  uint64_t v30 = v21;
  uint64_t v31 = v7;
  uint64_t v32 = v6;
  uint64_t v33 = v8;
  char v34 = v9;
  uint64_t v35 = v10;
  char v36 = v11;
  uint64_t v37 = v12;
  uint64_t v38 = v13;
  uint64_t v39 = v15;
  char v40 = v16;
  __int16 v41 = 256;
  if (one-time initialization token for dynamicSizeRange != -1) {
    swift_once();
  }
  uint64_t v17 = __swift_project_value_buffer(v23, (uint64_t)static Collaboration.Management.View.Specs.dynamicSizeRange);
  outlined init with copy of (String, Any)(v17, (uint64_t)v4, &_ss19PartialRangeThroughVy7SwiftUI15DynamicTypeSizeOGMD_0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>);
  lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>> and conformance <> ModifiedContent<A, B>();
  lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&_ss19PartialRangeThroughVy7SwiftUI15DynamicTypeSizeOGAByxGSXsWL_0, &_ss19PartialRangeThroughVy7SwiftUI15DynamicTypeSizeOGMD_0);
  unint64_t v18 = v24;
  View.dynamicTypeSize<A>(_:)();
  outlined destroy of TaskPriority?((uint64_t)v4, &_ss19PartialRangeThroughVy7SwiftUI15DynamicTypeSizeOGMD_0);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v25 + 32))(v27, v18, v26);
}

uint64_t protocol witness for View.body.getter in conformance Collaboration.Management.View.Moderation.Button@<X0>(uint64_t a1@<X8>)
{
  return Collaboration.Management.View.Moderation.Button.body.getter(*(unsigned char *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), a1);
}

uint64_t Collaboration.Management.ViewController.__allocating_init(model:)()
{
  type metadata accessor for Collaboration.Management.View(0);
  __chkstk_darwin();
  uint64_t v2 = (uint64_t *)((char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v3 = objc_allocWithZone(v0);
  swift_retain();
  Collaboration.Management.View.init(model:)(v2);
  uint64_t v4 = UIHostingController.init(rootView:)();
  swift_release();
  return v4;
}

uint64_t Collaboration.Management.ViewController.init(model:)()
{
  type metadata accessor for Collaboration.Management.View(0);
  __chkstk_darwin();
  uint64_t v1 = (uint64_t *)((char *)&v4 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_retain();
  Collaboration.Management.View.init(model:)(v1);
  uint64_t v2 = UIHostingController.init(rootView:)();
  swift_release();
  return v2;
}

void @objc Collaboration.Management.ViewController.init(coder:)()
{
}

Swift::Void __swiftcall Collaboration.Management.ViewController.viewWillLayoutSubviews()()
{
  v13.receiver = v0;
  v13.super_class = (Class)type metadata accessor for Collaboration.Management.ViewController(0);
  objc_msgSendSuper2(&v13, "viewWillLayoutSubviews");
  id v1 = [v0 view];
  if (v1)
  {
    uint64_t v2 = v1;
    id v3 = [v1 window];

    if (v3 && (id v4 = [v3 windowScene], v3, v4))
    {
      id v5 = [v4 coordinateSpace];

      [v5 bounds];
      uint64_t v7 = v6;
      uint64_t v9 = v8;
      swift_unknownObjectRelease();
      char v10 = 0;
      uint64_t v11 = v7;
      uint64_t v12 = v9;
    }
    else
    {
      uint64_t v11 = 0;
      uint64_t v12 = 0;
      char v10 = 1;
    }
    Collaboration.Management.ViewController.updatePreferredContentSize(sceneSize:)(v11, v12, v10);
  }
  else
  {
    __break(1u);
  }
}

void @objc Collaboration.Management.ViewController.viewWillLayoutSubviews()(void *a1)
{
  id v1 = a1;
  Collaboration.Management.ViewController.viewWillLayoutSubviews()();
}

id Collaboration.Management.ViewController.viewWillTransition(to:with:)(uint64_t a1, double a2, double a3)
{
  Collaboration.Management.ViewController.updatePreferredContentSize(sceneSize:)(*(uint64_t *)&a2, *(uint64_t *)&a3, 0);
  v8.receiver = v3;
  v8.super_class = (Class)type metadata accessor for Collaboration.Management.ViewController(0);
  return objc_msgSendSuper2(&v8, "viewWillTransitionToSize:withTransitionCoordinator:", a1, a2, a3);
}

void @objc Collaboration.Management.ViewController.viewWillTransition(to:with:)(void *a1, double a2, double a3, uint64_t a4, uint64_t a5)
{
  swift_unknownObjectRetain();
  id v11 = a1;
  Collaboration.Management.ViewController.updatePreferredContentSize(sceneSize:)(*(uint64_t *)&a2, *(uint64_t *)&a3, 0);
  v12.receiver = v11;
  v12.super_class = (Class)type metadata accessor for Collaboration.Management.ViewController(0);
  objc_msgSendSuper2(&v12, "viewWillTransitionToSize:withTransitionCoordinator:", a5, a2, a3);
  swift_unknownObjectRelease();
}

void Collaboration.Management.ViewController.updatePreferredContentSize(sceneSize:)(uint64_t a1, uint64_t a2, char a3)
{
  int v6 = a3 & 1;
  uint64_t v7 = self;
  id v8 = [v7 currentTraitCollection];
  id v9 = [v8 userInterfaceIdiom];

  if (v9 == (id)6) {
    double v10 = 512.0;
  }
  else {
    double v10 = 540.0;
  }
  if (v9 == (id)6) {
    double v11 = 620.0;
  }
  else {
    double v11 = 700.0;
  }
  id v12 = [v7 currentTraitCollection];
  id v13 = [v12 userInterfaceIdiom];

  if (v13 == (id)6 && v6 == 0)
  {
    if (one-time initialization token for padding != -1) {
      swift_once();
    }
    double v15 = *(double *)&static HI.Modal.padding + *(double *)&static HI.Modal.padding;
    if (v11 + *(double *)&static HI.Modal.padding + *(double *)&static HI.Modal.padding > *(double *)&a2) {
      double v11 = *(double *)&a2 - (*(double *)&static HI.Modal.padding + *(double *)&static HI.Modal.padding);
    }
    if (v10 + v15 > *(double *)&a1) {
      double v10 = *(double *)&a1 - v15;
    }
  }
  [v3 preferredContentSize];
  if (v10 != v17 || v11 != v16)
  {
    objc_msgSend(v3, "setPreferredContentSize:", v10, v11);
    id v19 = [v3 navigationController];
    if (v19)
    {
      id v20 = v19;
      objc_msgSend(v19, "setPreferredContentSize:", v10, v11);
    }
  }
}

void Collaboration.Management.ViewController.init(coder:rootView:)()
{
}

id Collaboration.Management.ViewController.__deallocating_deinit()
{
  return Collaboration.Management.ViewController.__deallocating_deinit(type metadata accessor for Collaboration.Management.ViewController);
}

uint64_t protocol witness for UIViewControllerRepresentable._resetUIViewController(_:coordinator:destroy:) in conformance Collaboration.Management.ActivityViewController()
{
  return UIViewControllerRepresentable._resetUIViewController(_:coordinator:destroy:)();
}

uint64_t protocol witness for static UIViewControllerRepresentable.dismantleUIViewController(_:coordinator:) in conformance Collaboration.Management.ActivityViewController()
{
  return static UIViewControllerRepresentable.dismantleUIViewController(_:coordinator:)();
}

uint64_t protocol witness for UIViewControllerRepresentable.makeCoordinator() in conformance Collaboration.Management.ActivityViewController()
{
  return UIViewControllerRepresentable<>.makeCoordinator()();
}

uint64_t protocol witness for UIViewControllerRepresentable.sizeThatFits(_:uiViewController:context:) in conformance Collaboration.Management.ActivityViewController()
{
  return UIViewControllerRepresentable.sizeThatFits(_:uiViewController:context:)();
}

uint64_t protocol witness for UIViewControllerRepresentable._identifiedViewTree(in:) in conformance Collaboration.Management.ActivityViewController()
{
  return UIViewControllerRepresentable._identifiedViewTree(in:)();
}

uint64_t protocol witness for static UIViewControllerRepresentable._layoutOptions(_:) in conformance Collaboration.Management.ActivityViewController()
{
  return static UIViewControllerRepresentable._layoutOptions(_:)();
}

uint64_t protocol witness for static View._makeView(view:inputs:) in conformance Collaboration.Management.ActivityViewController(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = lazy protocol witness table accessor for type Collaboration.Management.ActivityViewController and conformance Collaboration.Management.ActivityViewController();

  return static UIViewControllerRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t protocol witness for static View._makeViewList(view:inputs:) in conformance Collaboration.Management.ActivityViewController(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = lazy protocol witness table accessor for type Collaboration.Management.ActivityViewController and conformance Collaboration.Management.ActivityViewController();

  return static UIViewControllerRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void protocol witness for View.body.getter in conformance Collaboration.Management.ActivityViewController()
{
}

char *Collaboration.Management.QRCodeView.makeUIViewController(context:)()
{
  type metadata accessor for Locale();
  __chkstk_darwin();
  uint64_t v1 = type metadata accessor for String.LocalizationValue();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin();
  id v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  unint64_t v6 = (char *)v14 - v5;
  long long v7 = *(_OWORD *)(v0 + 16);
  v15[0] = *(_OWORD *)v0;
  v15[1] = v7;
  uint64_t v16 = *(void *)(v0 + 32);
  outlined retain of Collaboration.Management.QRCodeView((void *)v0);
  String.LocalizationValue.init(stringLiteral:)();
  id v8 = *(void (**)(char *, char *, uint64_t))(v2 + 16);
  v8(v4, v6, v1);
  if (one-time initialization token for module != -1) {
    swift_once();
  }
  id v9 = (id)static NSBundle.module;
  static Locale.current.getter();
  v14[0] = String.init(localized:table:bundle:locale:comment:)();
  double v10 = *(void (**)(char *, uint64_t))(v2 + 8);
  v10(v6, v1);
  String.LocalizationValue.init(stringLiteral:)();
  v8(v4, v6, v1);
  id v11 = (id)static NSBundle.module;
  static Locale.current.getter();
  String.init(localized:table:bundle:locale:comment:)();
  v10(v6, v1);
  id v12 = objc_allocWithZone((Class)type metadata accessor for QRCodeOverlayViewController());
  return QRCodeOverlayViewController.init(qrCode:title:subtitle:)(v15);
}

char *protocol witness for UIViewControllerRepresentable.makeUIViewController(context:) in conformance Collaboration.Management.QRCodeView()
{
  return Collaboration.Management.QRCodeView.makeUIViewController(context:)();
}

uint64_t protocol witness for static View._makeView(view:inputs:) in conformance Collaboration.Management.QRCodeView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = lazy protocol witness table accessor for type Collaboration.Management.QRCodeView and conformance Collaboration.Management.QRCodeView();

  return static UIViewControllerRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t protocol witness for static View._makeViewList(view:inputs:) in conformance Collaboration.Management.QRCodeView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = lazy protocol witness table accessor for type Collaboration.Management.QRCodeView and conformance Collaboration.Management.QRCodeView();

  return static UIViewControllerRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void protocol witness for View.body.getter in conformance Collaboration.Management.QRCodeView()
{
}

uint64_t PlaylistCurators.Curator.init(name:artwork:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = a1;
  a4[1] = a2;
  uint64_t v6 = type metadata accessor for PlaylistCurators.Curator(0);
  return outlined init with take of PresentationSource?(a3, (uint64_t)a4 + *(int *)(v6 + 20), (uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
}

uint64_t PlaylistCurators.Curator.artworkViewModel.getter@<X0>(char *a1@<X8>)
{
  uint64_t v2 = v1;
  __int16 v41 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&_s8MusicKit7ArtworkV0aB8InternalE9CropStyleVSgMD_0);
  __chkstk_darwin();
  uint64_t v38 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Artwork();
  uint64_t v5 = *(void **)(v4 - 8);
  __chkstk_darwin();
  uint64_t v37 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  char v36 = (char *)&v34 - v7;
  __chkstk_darwin();
  id v9 = (char *)&v34 - v8;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
  __chkstk_darwin();
  uint64_t v39 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  id v12 = (char *)&v34 - v11;
  __chkstk_darwin();
  uint64_t v14 = (char *)&v34 - v13;
  __chkstk_darwin();
  uint64_t v16 = (char *)&v34 - v15;
  double v17 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v5[7];
  v17((char *)&v34 - v15, 1, 1, v4);
  uint64_t v18 = type metadata accessor for PlaylistCurators.Curator(0);
  outlined init with copy of (String, Any)((uint64_t)v2 + *(int *)(v18 + 20), (uint64_t)v14, (uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
  char v40 = (unsigned int (*)(char *, uint64_t, uint64_t))v5[6];
  unsigned int v19 = v40(v14, 1, v4);
  uint64_t v35 = v5;
  if (v19 == 1)
  {
    outlined destroy of TaskPriority?((uint64_t)v14, (uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
    type metadata accessor for UIMenu(0, (unint64_t *)&lazy cache variable for type metadata for MPArtworkCatalog);
    id v20 = static MPArtworkCatalog.monogram(for:layoutDirection:)(*v2, v2[1], 0, 1);
    uint64_t v22 = (uint64_t)v39;
    uint64_t v21 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v40;
    if (v20)
    {
      Artwork.init(_:)();
      outlined destroy of TaskPriority?((uint64_t)v16, (uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
      v17(v12, 0, 1, v4);
      outlined init with take of PresentationSource?((uint64_t)v12, (uint64_t)v16, (uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
    }
  }
  else
  {
    outlined destroy of TaskPriority?((uint64_t)v16, (uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
    uint64_t v23 = (void (*)(char *, char *, uint64_t))v5[4];
    v23(v9, v14, v4);
    v23(v16, v9, v4);
    v17(v16, 0, 1, v4);
    uint64_t v22 = (uint64_t)v39;
    uint64_t v21 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v40;
  }
  outlined init with copy of (String, Any)((uint64_t)v16, v22, (uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
  if (v21(v22, 1, v4) == 1)
  {
    outlined destroy of TaskPriority?((uint64_t)v16, (uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
    outlined destroy of TaskPriority?(v22, (uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
    uint64_t v24 = type metadata accessor for ArtworkImage.ViewModel(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v41, 1, 1, v24);
  }
  else
  {
    uint64_t v27 = v35;
    uint64_t v26 = v36;
    uint64_t v28 = (void (*)(char *, uint64_t, uint64_t))v35[4];
    v28(v36, v22, v4);
    uint64_t v29 = v37;
    ((void (*)(char *, char *, uint64_t))v27[2])(v37, v26, v4);
    uint64_t v30 = (uint64_t)v38;
    static Artwork.CropStyle.boundedBox.getter();
    ((void (*)(char *, uint64_t))v27[1])(v26, v4);
    outlined destroy of TaskPriority?((uint64_t)v16, (uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
    uint64_t v31 = type metadata accessor for Artwork.CropStyle();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v30, 0, 1, v31);
    uint64_t v32 = v41;
    v28(v41, (uint64_t)v29, v4);
    uint64_t v33 = type metadata accessor for ArtworkImage.ViewModel(0);
    outlined init with take of PresentationSource?(v30, (uint64_t)&v32[*(int *)(v33 + 20)], &_s8MusicKit7ArtworkV0aB8InternalE9CropStyleVSgMD_0);
    return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v32, 0, 1, v33);
  }
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance PlaylistCurators.View.Configuration(uint64_t *a1, uint64_t *a2)
{
  return specialized static Array<A>.== infix(_:_:)(*a1, *a2);
}

uint64_t PlaylistCurators.View.init(configuration:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = (void *)((char *)a2 + *(int *)(type metadata accessor for PlaylistCurators.View(0) + 20));
  *uint64_t v4 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
  uint64_t result = swift_storeEnumTagMultiPayload();
  *a2 = a1;
  return result;
}

uint64_t PlaylistCurators.View.body.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HStack<TupleView<(ModifiedContent<HStack<TupleView<(HStack<ForEach<[(offset: Int, element: PlaylistCurators.Curator)], Int, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, PlaceholderStyleModifier>, _FrameLayout>, CornerRadiusModifier>, BorderViewModifier>, _TraitWritingModifier<ZIndexTraitKey>>>>, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.textSuffix(_:)>>.0, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Image.Scale>>, _EnvironmentKeyWritingModifier<Font?>>)>>, HoverViewModifier>, Spacer?)>>);
  __chkstk_darwin();
  uint64_t v2 = (char *)&v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v2 = static VerticalAlignment.center.getter();
  *((void *)v2 + 1) = 0;
  v2[16] = 0;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_HStackLayout, TupleView<(ModifiedContent<HStack<TupleView<(HStack<ForEach<[(offset: Int, element: PlaylistCurators.Curator)], Int, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, PlaceholderStyleModifier>, _FrameLayout>, CornerRadiusModifier>, BorderViewModifier>, _TraitWritingModifier<ZIndexTraitKey>>>>, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.textSuffix(_:)>>.0, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Image.Scale>>, _EnvironmentKeyWritingModifier<Font?>>)>>, HoverViewModifier>, Spacer?)>>);
  closure #1 in PlaylistCurators.View.body.getter(v0, (uint64_t)&v2[*(int *)(v3 + 44)]);
  lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type HStack<TupleView<(ModifiedContent<HStack<TupleView<(HStack<ForEach<[(offset: Int, element: PlaylistCurators.Curator)], Int, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, PlaceholderStyleModifier>, _FrameLayout>, CornerRadiusModifier>, BorderViewModifier>, _TraitWritingModifier<ZIndexTraitKey>>>>, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.textSuffix(_:)>>.0, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Image.Scale>>, _EnvironmentKeyWritingModifier<Font?>>)>>, HoverViewModifier>, Spacer?)>> and conformance HStack<A>, &demangling cache variable for type metadata for HStack<TupleView<(ModifiedContent<HStack<TupleView<(HStack<ForEach<[(offset: Int, element: PlaylistCurators.Curator)], Int, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, PlaceholderStyleModifier>, _FrameLayout>, CornerRadiusModifier>, BorderViewModifier>, _TraitWritingModifier<ZIndexTraitKey>>>>, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.textSuffix(_:)>>.0, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Image.Scale>>, _EnvironmentKeyWritingModifier<Font?>>)>>, HoverViewModifier>, Spacer?)>>);
  View.artworkCaching(id:limit:)();
  return outlined destroy of TaskPriority?((uint64_t)v2, &demangling cache variable for type metadata for HStack<TupleView<(ModifiedContent<HStack<TupleView<(HStack<ForEach<[(offset: Int, element: PlaylistCurators.Curator)], Int, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, PlaceholderStyleModifier>, _FrameLayout>, CornerRadiusModifier>, BorderViewModifier>, _TraitWritingModifier<ZIndexTraitKey>>>>, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.textSuffix(_:)>>.0, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Image.Scale>>, _EnvironmentKeyWritingModifier<Font?>>)>>, HoverViewModifier>, Spacer?)>>);
}

uint64_t closure #1 in PlaylistCurators.View.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v47 = a2;
  uint64_t v3 = type metadata accessor for UserInterfaceSizeClass();
  uint64_t v44 = *(void *)(v3 - 8);
  uint64_t v45 = v3;
  __chkstk_darwin();
  char v40 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v43 = (char *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (UserInterfaceSizeClass?, UserInterfaceSizeClass?));
  __chkstk_darwin();
  uint64_t v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UserInterfaceSizeClass?);
  __chkstk_darwin();
  uint64_t v41 = (uint64_t)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  id v9 = (char *)&v39 - v8;
  __chkstk_darwin();
  uint64_t v42 = (uint64_t)&v39 - v10;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HStack<TupleView<(HStack<ForEach<[(offset: Int, element: PlaylistCurators.Curator)], Int, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, PlaceholderStyleModifier>, _FrameLayout>, CornerRadiusModifier>, BorderViewModifier>, _TraitWritingModifier<ZIndexTraitKey>>>>, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.textSuffix(_:)>>.0, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Image.Scale>>, _EnvironmentKeyWritingModifier<Font?>>)>>);
  __chkstk_darwin();
  id v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(HStack<ForEach<[(offset: Int, element: PlaylistCurators.Curator)], Int, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, PlaceholderStyleModifier>, _FrameLayout>, CornerRadiusModifier>, BorderViewModifier>, _TraitWritingModifier<ZIndexTraitKey>>>>, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.textSuffix(_:)>>.0, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Image.Scale>>, _EnvironmentKeyWritingModifier<Font?>>)>>, HoverViewModifier>);
  __chkstk_darwin();
  uint64_t v46 = (uint64_t)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v16 = (char *)&v39 - v15;
  __chkstk_darwin();
  uint64_t v48 = (uint64_t)&v39 - v17;
  *(void *)id v12 = static VerticalAlignment.center.getter();
  *((void *)v12 + 1) = 0x4018000000000000;
  v12[16] = 0;
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_HStackLayout, TupleView<(HStack<ForEach<[(offset: Int, element: PlaylistCurators.Curator)], Int, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, PlaceholderStyleModifier>, _FrameLayout>, CornerRadiusModifier>, BorderViewModifier>, _TraitWritingModifier<ZIndexTraitKey>>>>, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.textSuffix(_:)>>.0, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Image.Scale>>, _EnvironmentKeyWritingModifier<Font?>>)>>);
  closure #1 in closure #1 in PlaylistCurators.View.body.getter(a1, (uint64_t)&v12[*(int *)(v18 + 44)]);
  if (one-time initialization token for medium != -1) {
    swift_once();
  }
  uint64_t v19 = *(void *)algn_1005AE8E8;
  char v20 = byte_1005AE8F0;
  if (byte_1005AE8F0) {
    double v21 = *(double *)&static Corner.medium;
  }
  else {
    double v21 = *(double *)&static Corner.medium + -3.0;
  }
  outlined init with copy of (String, Any)((uint64_t)v12, (uint64_t)v16, &demangling cache variable for type metadata for HStack<TupleView<(HStack<ForEach<[(offset: Int, element: PlaylistCurators.Curator)], Int, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, PlaceholderStyleModifier>, _FrameLayout>, CornerRadiusModifier>, BorderViewModifier>, _TraitWritingModifier<ZIndexTraitKey>>>>, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.textSuffix(_:)>>.0, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Image.Scale>>, _EnvironmentKeyWritingModifier<Font?>>)>>);
  uint64_t v22 = &v16[*(int *)(v13 + 36)];
  *(double *)uint64_t v22 = v21;
  *((void *)v22 + 1) = v19;
  v22[16] = v20;
  *((void *)v22 + 3) = 0x4008000000000000;
  *((void *)v22 + 4) = 0;
  *((_WORD *)v22 + 20) = 257;
  outlined destroy of TaskPriority?((uint64_t)v12, &demangling cache variable for type metadata for HStack<TupleView<(HStack<ForEach<[(offset: Int, element: PlaylistCurators.Curator)], Int, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, PlaceholderStyleModifier>, _FrameLayout>, CornerRadiusModifier>, BorderViewModifier>, _TraitWritingModifier<ZIndexTraitKey>>>>, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.textSuffix(_:)>>.0, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Image.Scale>>, _EnvironmentKeyWritingModifier<Font?>>)>>);
  outlined init with take of PresentationSource?((uint64_t)v16, v48, &demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(HStack<ForEach<[(offset: Int, element: PlaylistCurators.Curator)], Int, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, PlaceholderStyleModifier>, _FrameLayout>, CornerRadiusModifier>, BorderViewModifier>, _TraitWritingModifier<ZIndexTraitKey>>>>, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.textSuffix(_:)>>.0, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Image.Scale>>, _EnvironmentKeyWritingModifier<Font?>>)>>, HoverViewModifier>);
  type metadata accessor for PlaylistCurators.View(0);
  uint64_t v23 = v42;
  specialized Environment.wrappedValue.getter(v42);
  uint64_t v24 = v44;
  uint64_t v25 = v45;
  (*(void (**)(char *, void, uint64_t))(v44 + 104))(v9, enum case for UserInterfaceSizeClass.regular(_:), v45);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v9, 0, 1, v25);
  uint64_t v26 = (uint64_t)&v6[*((int *)v43 + 12)];
  outlined init with copy of (String, Any)(v23, (uint64_t)v6, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  outlined init with copy of (String, Any)((uint64_t)v9, v26, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  uint64_t v27 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48);
  if (v27((uint64_t)v6, 1, v25) != 1)
  {
    char v43 = v9;
    uint64_t v28 = v41;
    outlined init with copy of (String, Any)((uint64_t)v6, v41, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
    if (v27(v26, 1, v25) != 1)
    {
      uint64_t v29 = v40;
      (*(void (**)(char *, uint64_t, uint64_t))(v24 + 32))(v40, v26, v25);
      lazy protocol witness table accessor for type Collaboration.Management.Model and conformance Collaboration.Management.Model(&lazy protocol witness table cache variable for type UserInterfaceSizeClass and conformance UserInterfaceSizeClass, (void (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass);
      char v30 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v31 = *(void (**)(char *, uint64_t))(v24 + 8);
      v31(v29, v25);
      outlined destroy of TaskPriority?((uint64_t)v43, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
      outlined destroy of TaskPriority?(v23, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
      v31((char *)v28, v25);
      outlined destroy of TaskPriority?((uint64_t)v6, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
      if (v30) {
        goto LABEL_13;
      }
LABEL_14:
      char v33 = 0;
      char v32 = 1;
      goto LABEL_15;
    }
    outlined destroy of TaskPriority?((uint64_t)v43, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
    outlined destroy of TaskPriority?(v23, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v28, v25);
LABEL_11:
    outlined destroy of TaskPriority?((uint64_t)v6, (uint64_t *)&demangling cache variable for type metadata for (UserInterfaceSizeClass?, UserInterfaceSizeClass?));
    goto LABEL_14;
  }
  outlined destroy of TaskPriority?((uint64_t)v9, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  outlined destroy of TaskPriority?(v23, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  if (v27(v26, 1, v25) != 1) {
    goto LABEL_11;
  }
  outlined destroy of TaskPriority?((uint64_t)v6, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
LABEL_13:
  char v32 = 0;
  char v33 = 1;
LABEL_15:
  uint64_t v34 = v48;
  uint64_t v35 = v46;
  outlined init with copy of (String, Any)(v48, v46, &demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(HStack<ForEach<[(offset: Int, element: PlaylistCurators.Curator)], Int, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, PlaceholderStyleModifier>, _FrameLayout>, CornerRadiusModifier>, BorderViewModifier>, _TraitWritingModifier<ZIndexTraitKey>>>>, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.textSuffix(_:)>>.0, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Image.Scale>>, _EnvironmentKeyWritingModifier<Font?>>)>>, HoverViewModifier>);
  uint64_t v36 = v47;
  outlined init with copy of (String, Any)(v35, v47, &demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(HStack<ForEach<[(offset: Int, element: PlaylistCurators.Curator)], Int, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, PlaceholderStyleModifier>, _FrameLayout>, CornerRadiusModifier>, BorderViewModifier>, _TraitWritingModifier<ZIndexTraitKey>>>>, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.textSuffix(_:)>>.0, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Image.Scale>>, _EnvironmentKeyWritingModifier<Font?>>)>>, HoverViewModifier>);
  uint64_t v37 = v36
      + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (ModifiedContent<HStack<TupleView<(HStack<ForEach<[(offset: Int, element: PlaylistCurators.Curator)], Int, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, PlaceholderStyleModifier>, _FrameLayout>, CornerRadiusModifier>, BorderViewModifier>, _TraitWritingModifier<ZIndexTraitKey>>>>, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.textSuffix(_:)>>.0, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Image.Scale>>, _EnvironmentKeyWritingModifier<Font?>>)>>, HoverViewModifier>, Spacer?))
               + 48);
  *(void *)uint64_t v37 = 0;
  *(unsigned char *)(v37 + 8) = v33;
  *(unsigned char *)(v37 + 9) = v32;
  outlined destroy of TaskPriority?(v34, &demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(HStack<ForEach<[(offset: Int, element: PlaylistCurators.Curator)], Int, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, PlaceholderStyleModifier>, _FrameLayout>, CornerRadiusModifier>, BorderViewModifier>, _TraitWritingModifier<ZIndexTraitKey>>>>, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.textSuffix(_:)>>.0, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Image.Scale>>, _EnvironmentKeyWritingModifier<Font?>>)>>, HoverViewModifier>);
  return outlined destroy of TaskPriority?(v35, &demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(HStack<ForEach<[(offset: Int, element: PlaylistCurators.Curator)], Int, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, PlaceholderStyleModifier>, _FrameLayout>, CornerRadiusModifier>, BorderViewModifier>, _TraitWritingModifier<ZIndexTraitKey>>>>, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.textSuffix(_:)>>.0, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Image.Scale>>, _EnvironmentKeyWritingModifier<Font?>>)>>, HoverViewModifier>);
}

uint64_t closure #1 in closure #1 in PlaylistCurators.View.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v83 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Font.Design?);
  __chkstk_darwin();
  uint64_t v80 = (char *)&v60 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Font.TextStyle();
  uint64_t v81 = *(void *)(v4 - 8);
  uint64_t v82 = v4;
  __chkstk_darwin();
  uint64_t v79 = (uint64_t)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = type metadata accessor for Image.Scale();
  uint64_t v76 = *(void *)(v78 - 8);
  __chkstk_darwin();
  uint64_t v74 = (char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = type metadata accessor for Text.Suffix();
  uint64_t v67 = *(void *)(v70 - 8);
  __chkstk_darwin();
  uint64_t v61 = (char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.textSuffix(_:)>>.0);
  uint64_t v69 = *(void *)(v71 - 8);
  __chkstk_darwin();
  uint64_t v62 = (char *)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.textSuffix(_:)>>.0, _EnvironmentKeyWritingModifier<Int?>>)
      - 8;
  __chkstk_darwin();
  uint64_t v63 = (char *)&v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.textSuffix(_:)>>.0, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Image.Scale>>)
      - 8;
  __chkstk_darwin();
  uint64_t v66 = (char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.textSuffix(_:)>>.0, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Image.Scale>>, _EnvironmentKeyWritingModifier<Font?>>)
      - 8;
  __chkstk_darwin();
  uint64_t v73 = (uint64_t)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v75 = (uint64_t)&v60 - v12;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UserInterfaceSizeClass?);
  __chkstk_darwin();
  uint64_t v14 = (char *)&v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for HStack<ForEach<[(offset: Int, element: PlaylistCurators.Curator)], Int, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, PlaceholderStyleModifier>, _FrameLayout>, CornerRadiusModifier>, BorderViewModifier>, _TraitWritingModifier<ZIndexTraitKey>>>>);
  __chkstk_darwin();
  uint64_t v72 = (uint64_t)&v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v17 = (double *)((char *)&v60 - v16);
  type metadata accessor for PlaylistCurators.View(0);
  specialized Environment.wrappedValue.getter((uint64_t)v14);
  double v18 = specialized static PlaylistCurators.View.Specs.faceholeSpacing(for:)((uint64_t)v14);
  outlined destroy of TaskPriority?((uint64_t)v14, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  *(void *)uint64_t v17 = static VerticalAlignment.center.getter();
  v17[1] = v18;
  *((unsigned char *)v17 + 16) = 0;
  uint64_t v64 = v17;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_HStackLayout, ForEach<[(offset: Int, element: PlaylistCurators.Curator)], Int, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, PlaceholderStyleModifier>, _FrameLayout>, CornerRadiusModifier>, BorderViewModifier>, _TraitWritingModifier<ZIndexTraitKey>>>>);
  uint64_t v60 = a1;
  closure #1 in closure #1 in closure #1 in PlaylistCurators.View.body.getter(a1);
  uint64_t v84 = PlaylistCurators.View.curatorsString.getter();
  uint64_t v85 = v19;
  _sS2SSysWl_1();
  uint64_t v84 = Text.init<A>(_:)();
  uint64_t v85 = v20;
  char v86 = v21 & 1;
  uint64_t v87 = v22;
  String.nonBreakingSpace.unsafeMutableAddressor();
  swift_bridgeObjectRetain();
  Image.init(systemName:)();
  swift_retain();
  uint64_t v23 = Text.init(_:)();
  uint64_t v25 = v24;
  char v27 = v26 & 1;
  uint64_t v28 = static Text.+ infix(_:_:)();
  uint64_t v30 = v29;
  char v32 = v31 & 1;
  outlined consume of Text.Storage(v23, v25, v27);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  char v33 = v61;
  static Text.Suffix.alwaysVisible(_:)();
  outlined consume of Text.Storage(v28, v30, v32);
  swift_bridgeObjectRelease();
  uint64_t v34 = v62;
  View.textSuffix(_:)();
  (*(void (**)(char *, uint64_t))(v67 + 8))(v33, v70);
  outlined consume of Text.Storage(v84, v85, v86);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v36 = v69;
  uint64_t v37 = (uint64_t)v63;
  uint64_t v38 = v71;
  (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v63, v34, v71);
  uint64_t v39 = v37 + *(int *)(v65 + 44);
  *(void *)uint64_t v39 = KeyPath;
  *(void *)(v39 + 8) = 1;
  *(unsigned char *)(v39 + 16) = 0;
  (*(void (**)(char *, uint64_t))(v36 + 8))(v34, v38);
  uint64_t v40 = v76;
  uint64_t v41 = v74;
  uint64_t v42 = v78;
  (*(void (**)(char *, void, uint64_t))(v76 + 104))(v74, enum case for Image.Scale.small(_:), v78);
  uint64_t v43 = swift_getKeyPath();
  uint64_t v44 = (uint64_t)v66;
  uint64_t v45 = (uint64_t *)&v66[*(int *)(v68 + 44)];
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&_s7SwiftUI30_EnvironmentKeyWritingModifierVyAA5ImageV5ScaleOGMD_0);
  (*(void (**)(char *, char *, uint64_t))(v40 + 16))((char *)v45 + *(int *)(v46 + 28), v41, v42);
  *uint64_t v45 = v43;
  outlined init with copy of (String, Any)(v37, v44, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.textSuffix(_:)>>.0, _EnvironmentKeyWritingModifier<Int?>>);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v41, v42);
  outlined destroy of TaskPriority?(v37, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.textSuffix(_:)>>.0, _EnvironmentKeyWritingModifier<Int?>>);
  uint64_t v47 = v79;
  PlaylistCurators.View.fontTextStyle.getter(v79);
  uint64_t v48 = type metadata accessor for Font.Design();
  uint64_t v49 = (uint64_t)v80;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v80, 1, 1, v48);
  uint64_t v50 = static Font.system(_:design:weight:)();
  outlined destroy of TaskPriority?(v49, &demangling cache variable for type metadata for Font.Design?);
  (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v47, v82);
  uint64_t v51 = swift_getKeyPath();
  uint64_t v52 = v73;
  outlined init with copy of (String, Any)(v44, v73, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.textSuffix(_:)>>.0, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Image.Scale>>);
  uint64_t v53 = (uint64_t *)(v52 + *(int *)(v77 + 44));
  *uint64_t v53 = v51;
  v53[1] = v50;
  outlined destroy of TaskPriority?(v44, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.textSuffix(_:)>>.0, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Image.Scale>>);
  uint64_t v54 = v75;
  outlined init with take of PresentationSource?(v52, v75, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.textSuffix(_:)>>.0, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Image.Scale>>, _EnvironmentKeyWritingModifier<Font?>>);
  uint64_t v55 = (uint64_t)v64;
  uint64_t v56 = v72;
  outlined init with copy of (String, Any)((uint64_t)v64, v72, &demangling cache variable for type metadata for HStack<ForEach<[(offset: Int, element: PlaylistCurators.Curator)], Int, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, PlaceholderStyleModifier>, _FrameLayout>, CornerRadiusModifier>, BorderViewModifier>, _TraitWritingModifier<ZIndexTraitKey>>>>);
  outlined init with copy of (String, Any)(v54, v52, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.textSuffix(_:)>>.0, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Image.Scale>>, _EnvironmentKeyWritingModifier<Font?>>);
  uint64_t v57 = v83;
  outlined init with copy of (String, Any)(v56, v83, &demangling cache variable for type metadata for HStack<ForEach<[(offset: Int, element: PlaylistCurators.Curator)], Int, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, PlaceholderStyleModifier>, _FrameLayout>, CornerRadiusModifier>, BorderViewModifier>, _TraitWritingModifier<ZIndexTraitKey>>>>);
  uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (HStack<ForEach<[(offset: Int, element: PlaylistCurators.Curator)], Int, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, PlaceholderStyleModifier>, _FrameLayout>, CornerRadiusModifier>, BorderViewModifier>, _TraitWritingModifier<ZIndexTraitKey>>>>, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.textSuffix(_:)>>.0, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Image.Scale>>, _EnvironmentKeyWritingModifier<Font?>>));
  outlined init with copy of (String, Any)(v52, v57 + *(int *)(v58 + 48), &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.textSuffix(_:)>>.0, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Image.Scale>>, _EnvironmentKeyWritingModifier<Font?>>);
  outlined destroy of TaskPriority?(v54, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.textSuffix(_:)>>.0, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Image.Scale>>, _EnvironmentKeyWritingModifier<Font?>>);
  outlined destroy of TaskPriority?(v55, &demangling cache variable for type metadata for HStack<ForEach<[(offset: Int, element: PlaylistCurators.Curator)], Int, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, PlaceholderStyleModifier>, _FrameLayout>, CornerRadiusModifier>, BorderViewModifier>, _TraitWritingModifier<ZIndexTraitKey>>>>);
  outlined destroy of TaskPriority?(v52, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.textSuffix(_:)>>.0, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Image.Scale>>, _EnvironmentKeyWritingModifier<Font?>>);
  return outlined destroy of TaskPriority?(v56, &demangling cache variable for type metadata for HStack<ForEach<[(offset: Int, element: PlaylistCurators.Curator)], Int, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, PlaceholderStyleModifier>, _FrameLayout>, CornerRadiusModifier>, BorderViewModifier>, _TraitWritingModifier<ZIndexTraitKey>>>>);
}

uint64_t closure #1 in closure #1 in closure #1 in PlaylistCurators.View.body.getter(uint64_t a1)
{
  uint64_t v2 = *(void *)(type metadata accessor for PlaylistCurators.View(0) - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  __chkstk_darwin();
  uint64_t v4 = *(void *)a1;
  if (*(void *)(*(void *)a1 + 16) >= 3uLL) {
    uint64_t v5 = 3;
  }
  else {
    uint64_t v5 = *(void *)(*(void *)a1 + 16);
  }
  type metadata accessor for __ContiguousArrayStorageBase();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain_n();
  uint64_t v6 = (void *)swift_dynamicCastClass();
  if (!v6)
  {
    swift_bridgeObjectRelease();
    uint64_t v6 = _swiftEmptyArrayStorage;
  }
  uint64_t v7 = v6[2];
  swift_release();
  if (v7 == v5)
  {
    uint64_t v8 = (void *)swift_dynamicCastClass();
    if (!v8)
    {
      swift_bridgeObjectRelease();
      uint64_t v8 = _swiftEmptyArrayStorage;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v15 = *(void *)(type metadata accessor for PlaylistCurators.Curator(0) - 8);
    specialized _copyCollectionToContiguousArray<A>(_:)(v4, v4 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80)), 0, (2 * v5) | 1);
    uint64_t v8 = v16;
  }
  swift_bridgeObjectRelease();
  uint64_t v9 = swift_bridgeObjectRetain();
  size_t v10 = specialized _copySequenceToContiguousArray<A>(_:)(v9);
  swift_release();
  v17[1] = v10;
  swift_getKeyPath();
  outlined init with copy of Collaboration.Management.View(a1, (uint64_t)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for PlaylistCurators.View);
  unint64_t v11 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v8;
  outlined init with take of Collaboration.Management.View((uint64_t)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v12 + v11, type metadata accessor for PlaylistCurators.View);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = partial apply for closure #1 in closure #1 in closure #1 in closure #1 in PlaylistCurators.View.body.getter;
  *(void *)(v13 + 24) = v12;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [(offset: Int, element: PlaylistCurators.Curator)]);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, PlaceholderStyleModifier>, _FrameLayout>, CornerRadiusModifier>, BorderViewModifier>, _TraitWritingModifier<ZIndexTraitKey>>);
  lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type [(offset: Int, element: PlaylistCurators.Curator)] and conformance [A], &demangling cache variable for type metadata for [(offset: Int, element: PlaylistCurators.Curator)]);
  lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, PlaceholderStyleModifier>, _FrameLayout>, CornerRadiusModifier>, BorderViewModifier>, _TraitWritingModifier<ZIndexTraitKey>> and conformance <> ModifiedContent<A, B>();
  return ForEach<>.init(_:id:content:)();
}

uint64_t closure #1 in closure #1 in closure #1 in closure #1 in PlaylistCurators.View.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, PlaceholderStyleModifier>, _FrameLayout>, CornerRadiusModifier>, BorderViewModifier>);
  uint64_t result = __chkstk_darwin();
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(a2 + 16);
  BOOL v10 = __OFSUB__(v9, a1);
  uint64_t v11 = v9 - a1;
  if (v10)
  {
    __break(1u);
  }
  else
  {
    double v12 = (double)v11;
    PlaylistCurators.View.faceholeView(_:)((uint64_t)v8);
    outlined init with copy of (String, Any)((uint64_t)v8, a3, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, PlaceholderStyleModifier>, _FrameLayout>, CornerRadiusModifier>, BorderViewModifier>);
    *(double *)(a3
              + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, PlaceholderStyleModifier>, _FrameLayout>, CornerRadiusModifier>, BorderViewModifier>, _TraitWritingModifier<ZIndexTraitKey>>)
                       + 36)) = v12;
    return outlined destroy of TaskPriority?((uint64_t)v8, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, PlaceholderStyleModifier>, _FrameLayout>, CornerRadiusModifier>, BorderViewModifier>);
  }
  return result;
}

uint64_t PlaylistCurators.View.faceholeView(_:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v47 = a1;
  uint64_t v46 = type metadata accessor for PlaceholderStyleModifier(0) - 8;
  __chkstk_darwin();
  uint64_t v45 = (uint64_t (**)(uint64_t))((char *)&v37 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v42 = type metadata accessor for ArtworkImage.ReusePolicy();
  uint64_t v2 = *(void *)(v42 - 8);
  __chkstk_darwin();
  uint64_t v39 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ArtworkImage.ViewModel?);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0);
  uint64_t v43 = *(void *)(v8 - 8);
  uint64_t v44 = v8;
  __chkstk_darwin();
  uint64_t v37 = (uint64_t)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, PlaceholderStyleModifier>)
      - 8;
  __chkstk_darwin();
  double v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, PlaceholderStyleModifier>, _FrameLayout>)
      - 8;
  __chkstk_darwin();
  uint64_t v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, PlaceholderStyleModifier>, _FrameLayout>, CornerRadiusModifier>)
      - 8;
  __chkstk_darwin();
  uint64_t v38 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UserInterfaceSizeClass?);
  __chkstk_darwin();
  uint64_t v17 = (char *)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for PlaylistCurators.View(0);
  specialized Environment.wrappedValue.getter((uint64_t)v17);
  double v18 = specialized static PlaylistCurators.View.Specs.avatarLength(for:)((uint64_t)v17);
  outlined destroy of TaskPriority?((uint64_t)v17, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  PlaylistCurators.Curator.artworkViewModel.getter(v7);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (type: Playlist.Variant?));
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v5, 7, 10, v19);
  double v51 = v18;
  char v52 = 0;
  double v53 = v18;
  char v54 = 0;
  uint64_t v55 = 0;
  __int16 v56 = 257;
  uint64_t v20 = v2;
  uint64_t v21 = (uint64_t)v39;
  uint64_t v22 = v42;
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v39, enum case for ArtworkImage.ReusePolicy.reusableForDistinctItems(_:), v42);
  uint64_t v23 = v37;
  static ArtworkImage.with(_:placeholder:size:reusePolicy:)((uint64_t)v7, (uint64_t)v5, (uint64_t)&v51, v21, v37);
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v21, v22);
  _s17_MusicKit_SwiftUI12ArtworkImageV0a4CoreD0E11PlaceholderOWOhTm_1((uint64_t)v5, type metadata accessor for ArtworkImage.Placeholder);
  outlined destroy of TaskPriority?((uint64_t)v7, (uint64_t *)&demangling cache variable for type metadata for ArtworkImage.ViewModel?);
  uint64_t v24 = v45;
  uint64_t v25 = (uint64_t *)((char *)v45 + *(int *)(v46 + 28));
  uint64_t *v25 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ArtworkImage.Placeholder.View.Style?>.Content);
  swift_storeEnumTagMultiPayload();
  *uint64_t v24 = closure #1 in PlaylistCurators.View.faceholeView(_:);
  v24[1] = 0;
  outlined init with take of Collaboration.Management.View((uint64_t)v24, (uint64_t)&v12[*(int *)(v10 + 44)], type metadata accessor for PlaceholderStyleModifier);
  uint64_t v26 = v23;
  uint64_t v27 = (uint64_t)v38;
  (*(void (**)(char *, uint64_t, uint64_t))(v43 + 32))(v12, v26, v44);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  outlined init with copy of (String, Any)((uint64_t)v12, (uint64_t)v14, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, PlaceholderStyleModifier>);
  uint64_t v28 = &v14[*(int *)(v41 + 44)];
  long long v29 = v49;
  *(_OWORD *)uint64_t v28 = v48;
  *((_OWORD *)v28 + 1) = v29;
  *((_OWORD *)v28 + 2) = v50;
  outlined destroy of TaskPriority?((uint64_t)v12, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, PlaceholderStyleModifier>);
  outlined init with copy of (String, Any)((uint64_t)v14, v27, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, PlaceholderStyleModifier>, _FrameLayout>);
  uint64_t v30 = v27 + *(int *)(v40 + 44);
  *(void *)uint64_t v30 = 0;
  *(void *)(v30 + 8) = 0;
  *(unsigned char *)(v30 + 16) = 1;
  outlined destroy of TaskPriority?((uint64_t)v14, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, PlaceholderStyleModifier>, _FrameLayout>);
  if (one-time initialization token for faceholeBorder != -1) {
    swift_once();
  }
  uint64_t v31 = static PlaylistCurators.View.Specs.faceholeBorder;
  uint64_t v32 = qword_1005812C0;
  char v33 = byte_1005812C8;
  uint64_t v34 = v47;
  outlined init with copy of (String, Any)(v27, v47, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, PlaceholderStyleModifier>, _FrameLayout>, CornerRadiusModifier>);
  uint64_t v35 = v34
      + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, PlaceholderStyleModifier>, _FrameLayout>, CornerRadiusModifier>, BorderViewModifier>)
               + 36);
  *(void *)uint64_t v35 = v31;
  *(void *)(v35 + 8) = v32;
  *(unsigned char *)(v35 + 16) = v33;
  *(void *)(v35 + 24) = 0;
  *(void *)(v35 + 32) = 0;
  *(unsigned char *)(v35 + 40) = 1;
  swift_retain();
  return outlined destroy of TaskPriority?(v27, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, PlaceholderStyleModifier>, _FrameLayout>, CornerRadiusModifier>);
}

uint64_t PlaylistCurators.View.curatorsString.getter()
{
  type metadata accessor for Locale();
  __chkstk_darwin();
  uint64_t v1 = type metadata accessor for String.LocalizationValue();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin();
  uint64_t v4 = (char *)v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v6 = (char *)v21 - v5;
  type metadata accessor for String.LocalizationValue.StringInterpolation();
  __chkstk_darwin();
  type metadata accessor for PlaylistCurators.Curator(0);
  __chkstk_darwin();
  uint64_t v9 = (void *)((char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = *(void *)(*(void *)v0 + 16);
  if (v10)
  {
    outlined init with copy of Collaboration.Management.View(*(void *)v0 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)), (uint64_t)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for PlaylistCurators.Curator);
    uint64_t v11 = v10 - 1;
    if (v10 == 1)
    {
      uint64_t v12 = *v9;
      swift_bridgeObjectRetain();
    }
    else
    {
      String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v13._countAndFlagsBits = 0;
      v13._object = (void *)0xE000000000000000;
      String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v13);
      uint64_t v14 = *v9;
      uint64_t v15 = (void *)v9[1];
      swift_bridgeObjectRetain();
      v16._countAndFlagsBits = v14;
      v16._object = v15;
      String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v16);
      swift_bridgeObjectRelease();
      v17._countAndFlagsBits = 2106912;
      v17._object = (void *)0xE300000000000000;
      String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v17);
      v21[1] = v11;
      String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)();
      v18._countAndFlagsBits = 0x7328726568744F20;
      v18._object = (void *)0xE900000000000029;
      String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v18);
      String.LocalizationValue.init(stringInterpolation:)();
      (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v4, v6, v1);
      if (one-time initialization token for module != -1) {
        swift_once();
      }
      id v19 = (id)static NSBundle.module;
      static Locale.current.getter();
      uint64_t v12 = String.init(localized:table:bundle:locale:comment:)();
      (*(void (**)(char *, uint64_t))(v2 + 8))(v6, v1);
    }
    _s17_MusicKit_SwiftUI12ArtworkImageV0a4CoreD0E11PlaceholderOWOhTm_1((uint64_t)v9, type metadata accessor for PlaylistCurators.Curator);
    return v12;
  }
  else
  {
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

uint64_t PlaylistCurators.View.fontTextStyle.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v23 = a1;
  uint64_t v1 = type metadata accessor for UserInterfaceSizeClass();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin();
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (UserInterfaceSizeClass?, UserInterfaceSizeClass?))
     - 8;
  __chkstk_darwin();
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UserInterfaceSizeClass?);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v11 = (char *)&v22 - v10;
  __chkstk_darwin();
  Swift::String v13 = (char *)&v22 - v12;
  type metadata accessor for PlaylistCurators.View(0);
  specialized Environment.wrappedValue.getter((uint64_t)v13);
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v11, enum case for UserInterfaceSizeClass.compact(_:), v1);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v2 + 56))(v11, 0, 1, v1);
  uint64_t v14 = (uint64_t)&v7[*(int *)(v5 + 56)];
  outlined init with copy of (String, Any)((uint64_t)v13, (uint64_t)v7, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  outlined init with copy of (String, Any)((uint64_t)v11, v14, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  uint64_t v15 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
  if (v15((uint64_t)v7, 1, v1) != 1)
  {
    outlined init with copy of (String, Any)((uint64_t)v7, (uint64_t)v9, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
    if (v15(v14, 1, v1) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v2 + 32))(v4, v14, v1);
      lazy protocol witness table accessor for type Collaboration.Management.Model and conformance Collaboration.Management.Model(&lazy protocol witness table cache variable for type UserInterfaceSizeClass and conformance UserInterfaceSizeClass, (void (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass);
      char v16 = dispatch thunk of static Equatable.== infix(_:_:)();
      Swift::String v17 = *(void (**)(char *, uint64_t))(v2 + 8);
      v17(v4, v1);
      outlined destroy of TaskPriority?((uint64_t)v11, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
      outlined destroy of TaskPriority?((uint64_t)v13, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
      v17(v9, v1);
      outlined destroy of TaskPriority?((uint64_t)v7, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
      if (v16) {
        goto LABEL_8;
      }
LABEL_9:
      Swift::String v18 = (unsigned int *)&enum case for Font.TextStyle.title(_:);
      goto LABEL_10;
    }
    outlined destroy of TaskPriority?((uint64_t)v11, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
    outlined destroy of TaskPriority?((uint64_t)v13, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
    (*(void (**)(char *, uint64_t))(v2 + 8))(v9, v1);
LABEL_6:
    outlined destroy of TaskPriority?((uint64_t)v7, (uint64_t *)&demangling cache variable for type metadata for (UserInterfaceSizeClass?, UserInterfaceSizeClass?));
    goto LABEL_9;
  }
  outlined destroy of TaskPriority?((uint64_t)v11, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  outlined destroy of TaskPriority?((uint64_t)v13, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  if (v15(v14, 1, v1) != 1) {
    goto LABEL_6;
  }
  outlined destroy of TaskPriority?((uint64_t)v7, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
LABEL_8:
  Swift::String v18 = (unsigned int *)&enum case for Font.TextStyle.title3(_:);
LABEL_10:
  uint64_t v19 = *v18;
  uint64_t v20 = type metadata accessor for Font.TextStyle();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 104))(v23, v19, v20);
}

uint64_t closure #1 in PlaylistCurators.View.faceholeView(_:)(uint64_t a1)
{
  id v2 = [self secondarySystemBackgroundColor];
  v4[3] = &type metadata for Color;
  v4[4] = &protocol witness table for Color;
  v4[0] = Color.init(_:)();
  return outlined assign with take of Album?((uint64_t)v4, a1 + 40, (uint64_t *)&demangling cache variable for type metadata for ShapeStyle?);
}

uint64_t one-time initialization function for borderColor()
{
  id v0 = objc_allocWithZone((Class)UIColor);
  v4[4] = closure #1 in variable initialization expression of static PlaylistCurators.View.Specs.borderColor;
  void v4[5] = 0;
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 1107296256;
  v4[2] = thunk for @escaping @callee_guaranteed (@guaranteed UITraitCollection) -> (@owned UIColor);
  v4[3] = &block_descriptor_67;
  uint64_t v1 = _Block_copy(v4);
  id v2 = [v0 initWithDynamicProvider:v1];
  _Block_release(v1);
  uint64_t result = swift_release();
  static PlaylistCurators.View.Specs.borderColor = (uint64_t)v2;
  return result;
}

id closure #1 in variable initialization expression of static PlaylistCurators.View.Specs.borderColor(void *a1)
{
  if ([a1 userInterfaceIdiom] == (id)6)
  {
    id v2 = self;
    uint64_t v3 = &selRef_whiteColor;
  }
  else
  {
    id v4 = [a1 userInterfaceStyle];
    id v2 = self;
    uint64_t v3 = &selRef_whiteColor;
    if (v4 == (id)2) {
      uint64_t v3 = &selRef_blackColor;
    }
  }
  id v5 = [v2 *v3];

  return v5;
}

uint64_t one-time initialization function for faceholeBorder()
{
  if (one-time initialization token for borderColor != -1) {
    swift_once();
  }
  id v0 = (id)static PlaylistCurators.View.Specs.borderColor;
  uint64_t result = Color.init(uiColor:)();
  static PlaylistCurators.View.Specs.faceholeBorder = result;
  qword_1005812C0 = 0x3FF0000000000000;
  byte_1005812C8 = 1;
  return result;
}

uint64_t PlaylistCurators.ViewController.configuration.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PlaylistCurators.ViewController.configuration.setter(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(v1 + direct field offset for PlaylistCurators.ViewController.configuration);
  swift_beginAccess();
  uint64_t *v3 = a1;
  swift_bridgeObjectRelease();
  uint64_t v4 = *v3;
  swift_bridgeObjectRetain();
  id v5 = (uint64_t (*)(unsigned char *, void))dispatch thunk of UIHostingController.rootView.modify();
  *uint64_t v6 = v4;
  swift_bridgeObjectRelease();
  return v5(v8, 0);
}

void (*PlaylistCurators.ViewController.configuration.modify(void *a1))(void **a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = direct field offset for PlaylistCurators.ViewController.configuration;
  v3[4] = v1;
  v3[5] = v4;
  swift_beginAccess();
  return PlaylistCurators.ViewController.configuration.modify;
}

void PlaylistCurators.ViewController.configuration.modify(void **a1, char a2)
{
  uint64_t v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    uint64_t v4 = *(void *)(v3[4] + v3[5]);
    swift_bridgeObjectRetain();
    id v5 = (void (*)(void *, void))dispatch thunk of UIHostingController.rootView.modify();
    *uint64_t v6 = v4;
    swift_bridgeObjectRelease();
    v5(v3, 0);
  }

  free(v3);
}

uint64_t PlaylistCurators.ViewController.__allocating_init(configuration:)(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for PlaylistCurators.View(0) - 8;
  __chkstk_darwin();
  id v5 = (uint64_t *)((char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin();
  uint64_t v7 = (char *)&v11 - v6;
  uint64_t v8 = (char *)objc_allocWithZone(v1);
  *(void *)&v8[direct field offset for PlaylistCurators.ViewController.configuration] = a1;
  uint64_t v9 = (void *)((char *)v5 + *(int *)(v3 + 28));
  uint64_t *v9 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
  swift_storeEnumTagMultiPayload();
  *id v5 = a1;
  outlined init with take of Collaboration.Management.View((uint64_t)v5, (uint64_t)v7, type metadata accessor for PlaylistCurators.View);
  swift_bridgeObjectRetain();
  return UIHostingController.init(rootView:)();
}

uint64_t PlaylistCurators.ViewController.init(configuration:)(uint64_t a1)
{
  type metadata accessor for PlaylistCurators.View(0);
  __chkstk_darwin();
  uint64_t v4 = (uint64_t *)((char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = __chkstk_darwin();
  uint64_t v7 = (char *)&v10 - v6;
  *(void *)(v1 + direct field offset for PlaylistCurators.ViewController.configuration) = a1;
  uint64_t v8 = (void *)((char *)v4 + *(int *)(v5 + 28));
  *uint64_t v8 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
  swift_storeEnumTagMultiPayload();
  *uint64_t v4 = a1;
  outlined init with take of Collaboration.Management.View((uint64_t)v4, (uint64_t)v7, type metadata accessor for PlaylistCurators.View);
  swift_bridgeObjectRetain();
  return UIHostingController.init(rootView:)();
}

void @objc PlaylistCurators.ViewController.init(coder:)()
{
}

void PlaylistCurators.ViewController.init(rootView:)()
{
}

void PlaylistCurators.ViewController.__allocating_init(coder:rootView:)()
{
}

uint64_t PlaylistCurators.ViewController.__ivar_destroyer()
{
  return swift_bridgeObjectRelease();
}

id PlaylistCurators.ViewController.__deallocating_deinit()
{
  return Collaboration.Management.ViewController.__deallocating_deinit(type metadata accessor for PlaylistCurators.ViewController);
}

id Collaboration.Management.ViewController.__deallocating_deinit(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1(0);
  return objc_msgSendSuper2(&v3, "dealloc");
}

uint64_t @objc PlaylistCurators.ViewController.__ivar_destroyer()
{
  return swift_bridgeObjectRelease();
}

id ClearBackground.Controller.__deallocating_deinit()
{
  return Collaboration.Management.ViewController.__deallocating_deinit((uint64_t (*)(void))type metadata accessor for ClearBackground.Controller);
}

id protocol witness for UIViewControllerRepresentable.makeUIViewController(context:) in conformance ClearBackground()
{
  type metadata accessor for ClearBackground.Controller();
  id v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());

  return [v0 init];
}

uint64_t protocol witness for static View._makeView(view:inputs:) in conformance ClearBackground(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = lazy protocol witness table accessor for type ClearBackground and conformance ClearBackground();

  return static UIViewControllerRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t protocol witness for static View._makeViewList(view:inputs:) in conformance ClearBackground(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = lazy protocol witness table accessor for type ClearBackground and conformance ClearBackground();

  return static UIViewControllerRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void protocol witness for View.body.getter in conformance ClearBackground()
{
}

uint64_t key path getter for Collaboration.Management.Model.pendingCollaborators : Collaboration.Management.Model@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t key path setter for Collaboration.Management.Model.pendingCollaborators : Collaboration.Management.Model()
{
  return static Published.subscript.setter();
}

Swift::Int specialized _NativeSet.init(_:capacity:)(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _SetStorage<MSVLyricsAgent>);
    uint64_t v2 = static _SetStorage.convert(_:capacity:)();
    uint64_t v15 = v2;
    __CocoaSet.makeIterator()();
    if (__CocoaSet.Iterator.next()())
    {
      type metadata accessor for UIMenu(0, (unint64_t *)&lazy cache variable for type metadata for MSVLyricsAgent);
      do
      {
        swift_dynamicCast();
        uint64_t v2 = v15;
        unint64_t v9 = *(void *)(v15 + 16);
        if (*(void *)(v15 + 24) <= v9)
        {
          specialized _NativeSet.resize(capacity:)(v9 + 1, (uint64_t *)&demangling cache variable for type metadata for _SetStorage<MSVLyricsAgent>);
          uint64_t v2 = v15;
        }
        Swift::Int result = NSObject._rawHashValue(seed:)(*(void *)(v2 + 40));
        uint64_t v4 = v2 + 56;
        uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v6 = result & ~v5;
        unint64_t v7 = v6 >> 6;
        if (((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6))) != 0)
        {
          unint64_t v8 = __clz(__rbit64((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v10 = 0;
          unint64_t v11 = (unint64_t)(63 - v5) >> 6;
          do
          {
            if (++v7 == v11 && (v10 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v12 = v7 == v11;
            if (v7 == v11) {
              unint64_t v7 = 0;
            }
            v10 |= v12;
            uint64_t v13 = *(void *)(v4 + 8 * v7);
          }
          while (v13 == -1);
          unint64_t v8 = __clz(__rbit64(~v13)) + (v7 << 6);
        }
        *(void *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
        *(void *)(*(void *)(v2 + 48) + 8 * v8) = v14;
        ++*(void *)(v2 + 16);
      }
      while (__CocoaSet.Iterator.next()());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return (Swift::Int)&_swiftEmptySetSingleton;
  }
  return v2;
}

{
  uint64_t v2;
  Swift::Int result;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _SetStorage<SyncedLyricsLineView>);
    uint64_t v2 = static _SetStorage.convert(_:capacity:)();
    uint64_t v15 = v2;
    __CocoaSet.makeIterator()();
    if (__CocoaSet.Iterator.next()())
    {
      type metadata accessor for SyncedLyricsLineView();
      do
      {
        swift_dynamicCast();
        uint64_t v2 = v15;
        unint64_t v9 = *(void *)(v15 + 16);
        if (*(void *)(v15 + 24) <= v9)
        {
          specialized _NativeSet.resize(capacity:)(v9 + 1, &demangling cache variable for type metadata for _SetStorage<SyncedLyricsLineView>);
          uint64_t v2 = v15;
        }
        Swift::Int result = NSObject._rawHashValue(seed:)(*(void *)(v2 + 40));
        uint64_t v4 = v2 + 56;
        uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v6 = result & ~v5;
        unint64_t v7 = v6 >> 6;
        if (((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6))) != 0)
        {
          unint64_t v8 = __clz(__rbit64((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v10 = 0;
          unint64_t v11 = (unint64_t)(63 - v5) >> 6;
          do
          {
            if (++v7 == v11 && (v10 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v12 = v7 == v11;
            if (v7 == v11) {
              unint64_t v7 = 0;
            }
            v10 |= v12;
            uint64_t v13 = *(void *)(v4 + 8 * v7);
          }
          while (v13 == -1);
          unint64_t v8 = __clz(__rbit64(~v13)) + (v7 << 6);
        }
        *(void *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
        *(void *)(*(void *)(v2 + 48) + 8 * v8) = v14;
        ++*(void *)(v2 + 16);
      }
      while (__CocoaSet.Iterator.next()());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return (Swift::Int)&_swiftEmptySetSingleton;
  }
  return v2;
}

uint64_t specialized _NativeSet.resize(capacity:)(uint64_t a1)
{
  return specialized _NativeSet.resize(capacity:)(a1, (uint64_t *)&demangling cache variable for type metadata for _SetStorage<MSVLyricsAgent>);
}

uint64_t specialized _NativeSet.resize(capacity:)(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v5 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v30 = v2;
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    unint64_t v8 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v4 + 56);
    int64_t v11 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v12 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v14 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v17 = v16 | (v14 << 6);
      }
      else
      {
        int64_t v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v18 >= v11) {
          goto LABEL_33;
        }
        unint64_t v19 = v8[v18];
        ++v14;
        if (!v19)
        {
          int64_t v14 = v18 + 1;
          if (v18 + 1 >= v11) {
            goto LABEL_33;
          }
          unint64_t v19 = v8[v14];
          if (!v19)
          {
            int64_t v14 = v18 + 2;
            if (v18 + 2 >= v11) {
              goto LABEL_33;
            }
            unint64_t v19 = v8[v14];
            if (!v19)
            {
              int64_t v20 = v18 + 3;
              if (v20 >= v11)
              {
LABEL_33:
                swift_release();
                uint64_t v3 = v30;
                uint64_t v29 = 1 << *(unsigned char *)(v4 + 32);
                if (v29 > 63) {
                  bzero((void *)(v4 + 56), ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *unint64_t v8 = -1 << v29;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v19 = v8[v20];
              if (!v19)
              {
                while (1)
                {
                  int64_t v14 = v20 + 1;
                  if (__OFADD__(v20, 1)) {
                    goto LABEL_39;
                  }
                  if (v14 >= v11) {
                    goto LABEL_33;
                  }
                  unint64_t v19 = v8[v14];
                  ++v20;
                  if (v19) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v14 = v20;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v14 << 6);
      }
      uint64_t v21 = *(void *)(*(void *)(v4 + 48) + 8 * v17);
      uint64_t result = NSObject._rawHashValue(seed:)(*(void *)(v6 + 40));
      uint64_t v22 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v12 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v15 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(void *)(*(void *)(v6 + 48) + 8 * v15) = v21;
      ++*(void *)(v6 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v3 = v6;
  return result;
}

unint64_t specialized _NativeSet._unsafeInsertNew(_:)(uint64_t a1, void *a2)
{
  NSObject._rawHashValue(seed:)(a2[5]);
  unint64_t result = _HashTable.nextHole(atOrAfter:)();
  *(void *)((char *)a2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 56) |= 1 << result;
  *(void *)(a2[6] + 8 * result) = a1;
  ++a2[2];
  return result;
}

void specialized _NativeSet.insertNew(_:at:isUnique:)(uint64_t a1, unint64_t a2, char a3)
{
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  uint64_t v8 = v6 + 1;
  if (a3)
  {
    specialized _NativeSet.resize(capacity:)(v8, (uint64_t *)&demangling cache variable for type metadata for _SetStorage<MSVLyricsAgent>);
  }
  else
  {
    if (v7 > v6)
    {
      specialized _NativeSet.copy()((uint64_t *)&demangling cache variable for type metadata for _SetStorage<MSVLyricsAgent>);
      goto LABEL_14;
    }
    specialized _NativeSet.copyAndResize(capacity:)(v8, (uint64_t *)&demangling cache variable for type metadata for _SetStorage<MSVLyricsAgent>);
  }
  uint64_t v9 = *v3;
  Swift::Int v10 = NSObject._rawHashValue(seed:)(*(void *)(*v3 + 40));
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  a2 = v10 & ~v11;
  if ((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    type metadata accessor for UIMenu(0, (unint64_t *)&lazy cache variable for type metadata for MSVLyricsAgent);
    id v12 = *(id *)(*(void *)(v9 + 48) + 8 * a2);
    char v13 = static NSObject.== infix(_:_:)();

    if (v13)
    {
LABEL_13:
      ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
    }
    else
    {
      uint64_t v14 = ~v11;
      while (1)
      {
        a2 = (a2 + 1) & v14;
        if (((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        id v15 = *(id *)(*(void *)(v9 + 48) + 8 * a2);
        char v16 = static NSObject.== infix(_:_:)();

        if (v16) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v17 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v17 + 48) + 8 * a2) = a1;
  uint64_t v18 = *(void *)(v17 + 16);
  BOOL v19 = __OFADD__(v18, 1);
  uint64_t v20 = v18 + 1;
  if (v19) {
    __break(1u);
  }
  else {
    *(void *)(v17 + 16) = v20;
  }
}

{
  uint64_t *v3;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  Swift::Int v10;
  uint64_t v11;
  id v12;
  char v13;
  uint64_t v14;
  id v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  uint64_t v8 = v6 + 1;
  if (a3)
  {
    specialized _NativeSet.resize(capacity:)(v8, &demangling cache variable for type metadata for _SetStorage<SyncedLyricsLineView>);
  }
  else
  {
    if (v7 > v6)
    {
      specialized _NativeSet.copy()(&demangling cache variable for type metadata for _SetStorage<SyncedLyricsLineView>);
      goto LABEL_14;
    }
    specialized _NativeSet.copyAndResize(capacity:)(v8, &demangling cache variable for type metadata for _SetStorage<SyncedLyricsLineView>);
  }
  uint64_t v9 = *v3;
  Swift::Int v10 = NSObject._rawHashValue(seed:)(*(void *)(*v3 + 40));
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  a2 = v10 & ~v11;
  if ((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    type metadata accessor for SyncedLyricsLineView();
    id v12 = *(id *)(*(void *)(v9 + 48) + 8 * a2);
    char v13 = static NSObject.== infix(_:_:)();

    if (v13)
    {
LABEL_13:
      ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
    }
    else
    {
      uint64_t v14 = ~v11;
      while (1)
      {
        a2 = (a2 + 1) & v14;
        if (((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        id v15 = *(id *)(*(void *)(v9 + 48) + 8 * a2);
        char v16 = static NSObject.== infix(_:_:)();

        if (v16) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v17 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v17 + 48) + 8 * a2) = a1;
  uint64_t v18 = *(void *)(v17 + 16);
  BOOL v19 = __OFADD__(v18, 1);
  uint64_t v20 = v18 + 1;
  if (v19) {
    __break(1u);
  }
  else {
    *(void *)(v17 + 16) = v20;
  }
}

id specialized _NativeSet.copy()(uint64_t *a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = static _SetStorage.copy(original:)();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_28:
    id result = (id)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (id)(v4 + 56);
  uint64_t v7 = v3 + 56;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 56 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 56), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 56);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v19 >= v14) {
      goto LABEL_28;
    }
    unint64_t v20 = *(void *)(v7 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v20 = *(void *)(v7 + 8 * v10);
      if (!v20)
      {
        int64_t v10 = v19 + 2;
        if (v19 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v20 = *(void *)(v7 + 8 * v10);
        if (!v20) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v16 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 8 * v16;
    uint64_t v18 = *(void **)(*(void *)(v3 + 48) + v17);
    *(void *)(*(void *)(v5 + 48) + v17) = v18;
    id result = v18;
  }
  int64_t v21 = v19 + 3;
  if (v21 >= v14) {
    goto LABEL_28;
  }
  unint64_t v20 = *(void *)(v7 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_28;
    }
    unint64_t v20 = *(void *)(v7 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t specialized _NativeSet.copyAndResize(capacity:)(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v5 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v6 = v5;
  if (!*(void *)(v4 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v3 = v6;
    return result;
  }
  uint64_t v30 = v2;
  uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v8 = v4 + 56;
  if (v7 < 64) {
    uint64_t v9 = ~(-1 << v7);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v4 + 56);
  int64_t v11 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v12 = v5 + 56;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v17 = v16 | (v14 << 6);
      goto LABEL_24;
    }
    int64_t v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v18 >= v11) {
      goto LABEL_33;
    }
    unint64_t v19 = *(void *)(v8 + 8 * v18);
    ++v14;
    if (!v19)
    {
      int64_t v14 = v18 + 1;
      if (v18 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v19 = *(void *)(v8 + 8 * v14);
      if (!v19)
      {
        int64_t v14 = v18 + 2;
        if (v18 + 2 >= v11) {
          goto LABEL_33;
        }
        unint64_t v19 = *(void *)(v8 + 8 * v14);
        if (!v19) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v10 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v14 << 6);
LABEL_24:
    Swift::Int v21 = *(void *)(v6 + 40);
    id v22 = *(id *)(*(void *)(v4 + 48) + 8 * v17);
    uint64_t result = NSObject._rawHashValue(seed:)(v21);
    uint64_t v23 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v24 = result & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v12 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v24) & ~*(void *)(v12 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v28 = v25 == v27;
        if (v25 == v27) {
          unint64_t v25 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v25);
      }
      while (v29 == -1);
      unint64_t v15 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(void *)(*(void *)(v6 + 48) + 8 * v15) = v22;
    ++*(void *)(v6 + 16);
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v11)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v3 = v30;
    goto LABEL_35;
  }
  unint64_t v19 = *(void *)(v8 + 8 * v20);
  if (v19)
  {
    int64_t v14 = v20;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v14 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v14 >= v11) {
      goto LABEL_33;
    }
    unint64_t v19 = *(void *)(v8 + 8 * v14);
    ++v20;
    if (v19) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t specialized Set._Variant.remove(_:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  if ((*v1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    id v5 = a1;
    char v6 = __CocoaSet.contains(_:)();

    if (v6)
    {
      uint64_t v7 = specialized Set._Variant._migrateToNative(_:removing:)();
      swift_bridgeObjectRelease();
      return v7;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    return 0;
  }
  Swift::Int v8 = *(void *)(v4 + 40);
  swift_bridgeObjectRetain();
  Swift::Int v9 = NSObject._rawHashValue(seed:)(v8);
  uint64_t v10 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v11 = v9 & ~v10;
  if (((*(void *)(v4 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
    goto LABEL_12;
  }
  type metadata accessor for SyncedLyricsLineView();
  id v12 = *(id *)(*(void *)(v4 + 48) + 8 * v11);
  char v13 = static NSObject.== infix(_:_:)();

  if ((v13 & 1) == 0)
  {
    uint64_t v14 = ~v10;
    do
    {
      unint64_t v11 = (v11 + 1) & v14;
      if (((*(void *)(v4 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
        goto LABEL_12;
      }
      id v15 = *(id *)(*(void *)(v4 + 48) + 8 * v11);
      char v16 = static NSObject.== infix(_:_:)();
    }
    while ((v16 & 1) == 0);
  }
  swift_bridgeObjectRelease();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v18 = *v2;
  uint64_t v20 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    specialized _NativeSet.copy()(&demangling cache variable for type metadata for _SetStorage<SyncedLyricsLineView>);
    uint64_t v18 = v20;
  }
  uint64_t v7 = *(void *)(*(void *)(v18 + 48) + 8 * v11);
  specialized _NativeSet._delete(at:)(v11);
  *uint64_t v2 = v20;
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t specialized Set._Variant._migrateToNative(_:removing:)()
{
  uint64_t v1 = v0;
  swift_bridgeObjectRelease();
  uint64_t v2 = __CocoaSet.count.getter();
  uint64_t v3 = swift_unknownObjectRetain();
  Swift::Int v4 = specialized _NativeSet.init(_:capacity:)(v3, v2);
  Swift::Int v16 = v4;
  Swift::Int v5 = *(void *)(v4 + 40);
  swift_retain();
  Swift::Int v6 = NSObject._rawHashValue(seed:)(v5);
  uint64_t v7 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v8 = v6 & ~v7;
  if ((*(void *)(v4 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
  {
    type metadata accessor for SyncedLyricsLineView();
    id v9 = *(id *)(*(void *)(v4 + 48) + 8 * v8);
    char v10 = static NSObject.== infix(_:_:)();

    if (v10)
    {
LABEL_6:
      swift_release();
      uint64_t v14 = *(void *)(*(void *)(v4 + 48) + 8 * v8);
      specialized _NativeSet._delete(at:)(v8);
      if (static NSObject.== infix(_:_:)())
      {
        Swift::Int *v1 = v16;
        return v14;
      }
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v7;
      while (1)
      {
        unint64_t v8 = (v8 + 1) & v11;
        if (((*(void *)(v4 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
          break;
        }
        id v12 = *(id *)(*(void *)(v4 + 48) + 8 * v8);
        char v13 = static NSObject.== infix(_:_:)();

        if (v13) {
          goto LABEL_6;
        }
      }
    }
    swift_release();
    __break(1u);
  }
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t key path setter for EnvironmentValues.symbolRenderingMode : EnvironmentValues, serialized(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for SymbolRenderingMode?);
  __chkstk_darwin();
  outlined init with copy of (String, Any)(a1, (uint64_t)&v4 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), &demangling cache variable for type metadata for SymbolRenderingMode?);
  return EnvironmentValues.symbolRenderingMode.setter();
}

uint64_t key path setter for EnvironmentValues.openURL : EnvironmentValues(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void), uint64_t (*a6)(char *))
{
  uint64_t v8 = a5(0);
  __chkstk_darwin(v8);
  char v10 = (char *)&v13 - v9;
  (*(void (**)(char *, uint64_t))(v11 + 16))((char *)&v13 - v9, a1);
  return a6(v10);
}

uint64_t specialized Array._copyContents(initializing:)(uint64_t result, uint64_t a2, unint64_t a3, void (*a4)(void), unint64_t *a5, uint64_t *a6, uint64_t (*a7)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))
{
  uint64_t v13 = result;
  unint64_t v14 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v15) {
      return a3;
    }
  }
  else
  {
    uint64_t v15 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v15) {
      return a3;
    }
  }
  if (v13)
  {
    if (v14)
    {
      swift_bridgeObjectRetain();
      uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
      uint64_t result = swift_bridgeObjectRelease();
      if (v16 <= a2)
      {
        if (v15 >= 1)
        {
          uint64_t v17 = lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(a5, a6);
          swift_bridgeObjectRetain();
          for (uint64_t i = 0; i != v15; ++i)
          {
            uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(a6);
            uint64_t v20 = (void (*)(unsigned char *, void))a7(v23, i, a3, v19, v17);
            uint64_t v22 = *v21;
            swift_retain();
            v20(v23, 0);
            *(void *)(v13 + 8 * i) = v22;
          }
          swift_bridgeObjectRelease();
          return a3;
        }
        goto LABEL_16;
      }
    }
    else
    {
      if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) <= a2)
      {
        a4(0);
        swift_arrayInitWithCopy();
        return a3;
      }
      __break(1u);
    }
    __break(1u);
LABEL_16:
    __break(1u);
  }
  __break(1u);
  return result;
}

BOOL specialized static PlaylistCurators.Curator.__derived_struct_equals(_:_:)(void *a1, void *a2)
{
  uint64_t v4 = type metadata accessor for Artwork();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Artwork?, Artwork?));
  __chkstk_darwin();
  char v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
  __chkstk_darwin();
  id v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  unint64_t v14 = (char *)&v25 - v13;
  __chkstk_darwin();
  uint64_t v16 = (char *)&v25 - v15;
  if (*a1 == *a2 && a1[1] == a2[1]
    || (char v17 = _stringCompareWithSmolCheck(_:_:expecting:)(), result = 0, (v17 & 1) != 0))
  {
    char v26 = v7;
    uint64_t v19 = type metadata accessor for PlaylistCurators.Curator(0);
    outlined init with copy of (String, Any)((uint64_t)a1 + *(int *)(v19 + 20), (uint64_t)v16, (uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
    outlined init with copy of (String, Any)((uint64_t)a2 + *(int *)(v19 + 20), (uint64_t)v14, (uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
    uint64_t v20 = (uint64_t)&v10[*(int *)(v8 + 48)];
    outlined init with copy of (String, Any)((uint64_t)v16, (uint64_t)v10, (uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
    outlined init with copy of (String, Any)((uint64_t)v14, v20, (uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
    Swift::Int v21 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    if (v21((uint64_t)v10, 1, v4) == 1)
    {
      outlined destroy of TaskPriority?((uint64_t)v14, (uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
      outlined destroy of TaskPriority?((uint64_t)v16, (uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
      if (v21(v20, 1, v4) == 1)
      {
        outlined destroy of TaskPriority?((uint64_t)v10, (uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
        return 1;
      }
    }
    else
    {
      outlined init with copy of (String, Any)((uint64_t)v10, (uint64_t)v12, (uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
      if (v21(v20, 1, v4) != 1)
      {
        uint64_t v22 = v26;
        (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v26, v20, v4);
        lazy protocol witness table accessor for type Collaboration.Management.Model and conformance Collaboration.Management.Model(&lazy protocol witness table cache variable for type Artwork and conformance Artwork, (void (*)(uint64_t))&type metadata accessor for Artwork);
        char v23 = dispatch thunk of static Equatable.== infix(_:_:)();
        unint64_t v24 = *(void (**)(char *, uint64_t))(v5 + 8);
        v24(v22, v4);
        outlined destroy of TaskPriority?((uint64_t)v14, (uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
        outlined destroy of TaskPriority?((uint64_t)v16, (uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
        v24(v12, v4);
        outlined destroy of TaskPriority?((uint64_t)v10, (uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
        return (v23 & 1) != 0;
      }
      outlined destroy of TaskPriority?((uint64_t)v14, (uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
      outlined destroy of TaskPriority?((uint64_t)v16, (uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v12, v4);
    }
    outlined destroy of TaskPriority?((uint64_t)v10, &demangling cache variable for type metadata for (Artwork?, Artwork?));
    return 0;
  }
  return result;
}

uint64_t specialized Collaboration.Management.Model.init(manager:playlist:)(void (*a1)(char *, uint64_t), char *a2)
{
  uint64_t v3 = v2;
  uint64_t v59 = a2;
  uint64_t v60 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&_sScPSgMD_2);
  __chkstk_darwin();
  uint64_t v62 = (char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&_s8MusicKit8PlaylistV0aB8InternalE13CollaborationVSgMD_0);
  __chkstk_darwin();
  char v54 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Playlist();
  uint64_t v63 = *(void *)(v6 - 8);
  uint64_t v64 = v6;
  __chkstk_darwin();
  uint64_t v58 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = v7;
  __chkstk_darwin();
  uint64_t v57 = (char *)&v53 - v8;
  __int16 v56 = (void *)__swift_instantiateConcreteTypeFromMangledName(&_s7Combine9PublishedVySbGMD_0);
  uint64_t v55 = *(v56 - 1);
  __chkstk_darwin();
  char v10 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Set<Playlist.Collaborator>>);
  uint64_t v11 = *(void *)(v53 - 8);
  __chkstk_darwin();
  uint64_t v13 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<[Playlist.Collaborator]>);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin();
  char v17 = (char *)&v53 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = v3 + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model__pendingCollaborators;
  v67[0] = _swiftEmptyArrayStorage;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [Playlist.Collaborator]);
  Published.init(initialValue:)();
  uint64_t v19 = *(void (**)(uint64_t, char *, uint64_t))(v15 + 32);
  v19(v18, v17, v14);
  uint64_t v20 = v3 + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model__activeCollaborators;
  v67[0] = _swiftEmptyArrayStorage;
  Published.init(initialValue:)();
  v19(v20, v17, v14);
  uint64_t v21 = v3 + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model__transientCollaborators;
  v67[0] = &_swiftEmptySetSingleton;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Set<Playlist.Collaborator>);
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(v21, v13, v53);
  uint64_t v22 = v3 + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model__isResetingURL;
  LOBYTE(v67[0]) = 0;
  Published.init(initialValue:)();
  char v23 = *(void (**)(uint64_t, char *, void *))(v55 + 32);
  unint64_t v24 = v56;
  v23(v22, v10, v56);
  uint64_t v25 = v3 + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model__shouldDismiss;
  LOBYTE(v67[0]) = 0;
  Published.init(initialValue:)();
  v23(v25, v10, v24);
  uint64_t v26 = v3 + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model__hasNetworkConnectivity;
  static ApplicationCapabilities.shared.getter((uint64_t)v67);
  outlined release of ApplicationCapabilities((uint64_t)v67);
  char v66 = BYTE1(v67[0]);
  Published.init(initialValue:)();
  v23(v26, v10, v24);
  unint64_t v27 = v59;
  uint64_t v28 = v3
      + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model____lazy_storage___artworkViewModel;
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ArtworkImage.ViewModel?);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v28, 1, 1, v29);
  *(void *)(v3 + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model_autoupdatingResponse) = 0;
  *(void *)(v3
            + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model_autoupdatingResponseSubscription) = 0;
  uint64_t v55 = OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model_networkConnectivityNotificationObserver;
  *(void *)(v3
            + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model_networkConnectivityNotificationObserver) = 0;
  *(void *)(v3 + 16) = v60;
  uint64_t v31 = v63;
  uint64_t v30 = v64;
  uint64_t v32 = *(void (**)(char *, uint64_t, uint64_t))(v63 + 16);
  char v33 = v57;
  v32(v57, (uint64_t)v27, v64);
  swift_beginAccess();
  __int16 v56 = v32;
  v32(v58, (uint64_t)v33, v30);
  swift_retain();
  uint64_t v34 = v30;
  Published.init(initialValue:)();
  uint64_t v35 = v33;
  uint64_t v60 = *(void (**)(char *, uint64_t))(v31 + 8);
  v60(v33, v34);
  swift_endAccess();
  uint64_t v36 = (uint64_t)v54;
  uint64_t v37 = v27;
  Playlist.collaboration.getter();
  uint64_t v38 = type metadata accessor for Playlist.Collaboration();
  uint64_t v39 = *(void *)(v38 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v36, 1, v38) == 1)
  {
    outlined destroy of TaskPriority?(v36, &_s8MusicKit8PlaylistV0aB8InternalE13CollaborationVSgMD_0);
    char v40 = 0;
  }
  else
  {
    char v40 = Playlist.Collaboration.isOpenInvitation.getter();
    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v36, v38);
  }
  swift_beginAccess();
  char v65 = v40 & 1;
  Published.init(initialValue:)();
  swift_endAccess();
  id v41 = (id)*ApplicationCapabilities.NotificationNames.hasNetworkConnectivityDidChange.unsafeMutableAddressor();
  uint64_t v42 = *ApplicationCapabilities.Controller.shared.unsafeMutableAddressor();
  uint64_t v43 = swift_allocObject();
  swift_weakInit();
  type metadata accessor for NotificationObserver();
  swift_allocObject();
  swift_retain();
  uint64_t v44 = NotificationObserver.init(name:object:dispatchOnMainThread:usesLocalNotificationCenter:handler:)(v41, v42, 1, 1, (uint64_t)partial apply for closure #1 in Collaboration.Management.Model.init(manager:playlist:), v43);
  *(void *)(v3 + v55) = v44;
  swift_release();
  uint64_t v45 = type metadata accessor for TaskPriority();
  uint64_t v46 = (uint64_t)v62;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v62, 1, 1, v45);
  uint64_t v47 = v64;
  ((void (*)(char *, char *, uint64_t))v56)(v35, v37, v64);
  uint64_t v48 = v63;
  unint64_t v49 = (*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80);
  unint64_t v50 = (v61 + v49 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v51 = swift_allocObject();
  *(void *)(v51 + 16) = 0;
  *(void *)(v51 + 24) = 0;
  (*(void (**)(unint64_t, char *, uint64_t))(v48 + 32))(v51 + v49, v35, v47);
  *(void *)(v51 + v50) = v3;
  swift_retain();
  _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5_1(v46, (uint64_t)&async function pointer to partial apply for closure #2 in Collaboration.Management.Model.init(manager:playlist:), v51);
  swift_release();
  v60(v37, v47);
  return v3;
}

uint64_t type metadata accessor for Collaboration.Management.View(uint64_t a1)
{
  return type metadata accessor for Notice.Variant(a1, (uint64_t *)&type metadata singleton initialization cache for Collaboration.Management.View);
}

uint64_t sub_1003C7848()
{
  return EnvironmentValues.dynamicTypeSize.getter();
}

uint64_t sub_1003C786C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for EnvironmentValues.openURL : EnvironmentValues(a1, a2, a3, a4, (uint64_t (*)(void))&type metadata accessor for DynamicTypeSize, (uint64_t (*)(char *))&EnvironmentValues.dynamicTypeSize.setter);
}

uint64_t sub_1003C78AC()
{
  return EnvironmentValues.openURL.getter();
}

uint64_t sub_1003C78D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for EnvironmentValues.openURL : EnvironmentValues(a1, a2, a3, a4, (uint64_t (*)(void))&type metadata accessor for OpenURLAction, (uint64_t (*)(char *))&EnvironmentValues.openURL.setter);
}

uint64_t type metadata accessor for Collaboration.Management.Model(uint64_t a1)
{
  return type metadata accessor for Notice.Variant(a1, (uint64_t *)&type metadata singleton initialization cache for Collaboration.Management.Model);
}

uint64_t partial apply for closure #1 in Collaboration.Management.View.body.getter@<X0>(uint64_t a1@<X8>)
{
  return closure #1 in Collaboration.Management.View.body.getter(*(void *)(v1 + 16), a1);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<List<Never, TupleView<(<<opaque return type of View.headerProminence(_:)>>.0, TupleView<(Section<Text, Collaboration.Management.View.CollaboratorRowView, EmptyView>, Section<EmptyView, <<opaque return type of View.alert(isPresented:content:)>>.0, EmptyView>?, Section<Text, ForEach<[Playlist.Collaborator], MusicItemID, Collaboration.Management.View.CollaboratorRowView>, EmptyView>)>?, Section<Text, HStack<Toggle<Text>>, _ConditionalContent<_ConditionalContent<Text, Text>, Text>>?)>>, _EnvironmentKeyWritingModifier<CGFloat>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<List<Never, TupleView<(<<opaque return type of View.headerProminence(_:)>>.0, TupleView<(Section<Text, Collaboration.Management.View.CollaboratorRowView, EmptyView>, Section<EmptyView, <<opaque return type of View.alert(isPresented:content:)>>.0, EmptyView>?, Section<Text, ForEach<[Playlist.Collaborator], MusicItemID, Collaboration.Management.View.CollaboratorRowView>, EmptyView>)>?, Section<Text, HStack<Toggle<Text>>, _ConditionalContent<_ConditionalContent<Text, Text>, Text>>?)>>, _EnvironmentKeyWritingModifier<CGFloat>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<List<Never, TupleView<(<<opaque return type of View.headerProminence(_:)>>.0, TupleView<(Section<Text, Collaboration.Management.View.CollaboratorRowView, EmptyView>, Section<EmptyView, <<opaque return type of View.alert(isPresented:content:)>>.0, EmptyView>?, Section<Text, ForEach<[Playlist.Collaborator], MusicItemID, Collaboration.Management.View.CollaboratorRowView>, EmptyView>)>?, Section<Text, HStack<Toggle<Text>>, _ConditionalContent<_ConditionalContent<Text, Text>, Text>>?)>>, _EnvironmentKeyWritingModifier<CGFloat>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<List<Never, TupleView<(<<opaque return type of View.headerProminence(_:)>>.0, TupleView<(Section<Text, Collaboration.Management.View.CollaboratorRowView, EmptyView>, Section<EmptyView, <<opaque return type of View.alert(isPresented:content:)>>.0, EmptyView>?, Section<Text, ForEach<[Playlist.Collaborator], MusicItemID, Collaboration.Management.View.CollaboratorRowView>, EmptyView>)>?, Section<Text, HStack<Toggle<Text>>, _ConditionalContent<_ConditionalContent<Text, Text>, Text>>?)>>, _EnvironmentKeyWritingModifier<CGFloat>>);
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type List<Never, TupleView<(<<opaque return type of View.headerProminence(_:)>>.0, TupleView<(Section<Text, Collaboration.Management.View.CollaboratorRowView, EmptyView>, Section<EmptyView, <<opaque return type of View.alert(isPresented:content:)>>.0, EmptyView>?, Section<Text, ForEach<[Playlist.Collaborator], MusicItemID, Collaboration.Management.View.CollaboratorRowView>, EmptyView>)>?, Section<Text, HStack<Toggle<Text>>, _ConditionalContent<_ConditionalContent<Text, Text>, Text>>?)>> and conformance List<A, B>, &demangling cache variable for type metadata for List<Never, TupleView<(<<opaque return type of View.headerProminence(_:)>>.0, TupleView<(Section<Text, Collaboration.Management.View.CollaboratorRowView, EmptyView>, Section<EmptyView, <<opaque return type of View.alert(isPresented:content:)>>.0, EmptyView>?, Section<Text, ForEach<[Playlist.Collaborator], MusicItemID, Collaboration.Management.View.CollaboratorRowView>, EmptyView>)>?, Section<Text, HStack<Toggle<Text>>, _ConditionalContent<_ConditionalContent<Text, Text>, Text>>?)>>);
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<CGFloat> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<CGFloat>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<List<Never, TupleView<(<<opaque return type of View.headerProminence(_:)>>.0, TupleView<(Section<Text, Collaboration.Management.View.CollaboratorRowView, EmptyView>, Section<EmptyView, <<opaque return type of View.alert(isPresented:content:)>>.0, EmptyView>?, Section<Text, ForEach<[Playlist.Collaborator], MusicItemID, Collaboration.Management.View.CollaboratorRowView>, EmptyView>)>?, Section<Text, HStack<Toggle<Text>>, _ConditionalContent<_ConditionalContent<Text, Text>, Text>>?)>>, _EnvironmentKeyWritingModifier<CGFloat>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t sub_1003C79FC@<X0>(unsigned char *a1@<X8>)
{
  return key path getter for Player.isHostingSharePlayTogetherSession : Player(a1);
}

uint64_t sub_1003C7A24()
{
  return key path setter for Player.isHostingSharePlayTogetherSession : Player();
}

uint64_t partial apply for closure #2 in Collaboration.Management.View.body.getter(uint64_t a1, unsigned char *a2)
{
  type metadata accessor for Collaboration.Management.View(0);

  return closure #2 in Collaboration.Management.View.body.getter(a1, a2);
}

uint64_t type metadata accessor for Collaboration.Management.ViewController(uint64_t a1)
{
  return type metadata accessor for Notice.Variant(a1, (uint64_t *)&type metadata singleton initialization cache for Collaboration.Management.ViewController);
}

uint64_t type metadata accessor for PlaylistCurators.Curator(uint64_t a1)
{
  return type metadata accessor for Notice.Variant(a1, (uint64_t *)&type metadata singleton initialization cache for PlaylistCurators.Curator);
}

uint64_t type metadata accessor for PlaylistCurators.View(uint64_t a1)
{
  return type metadata accessor for Notice.Variant(a1, (uint64_t *)&type metadata singleton initialization cache for PlaylistCurators.View);
}

uint64_t lazy protocol witness table accessor for type Collaboration.Management.Model and conformance Collaboration.Management.Model(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t outlined init with take of Collaboration.Management.View(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for PlaylistCurators.ViewController(uint64_t a1)
{
  return type metadata accessor for Notice.Variant(a1, (uint64_t *)&type metadata singleton initialization cache for PlaylistCurators.ViewController);
}

uint64_t associated type witness table accessor for View.Body : View in Collaboration.Management.View()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t associated type witness table accessor for View.Body : View in PlaylistCurators.View()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t instantiation function for generic protocol witness table for PlaylistCurators.View(uint64_t a1)
{
  uint64_t result = lazy protocol witness table accessor for type Collaboration.Management.Model and conformance Collaboration.Management.Model(&lazy protocol witness table cache variable for type PlaylistCurators.View and conformance PlaylistCurators.View, (void (*)(uint64_t))type metadata accessor for PlaylistCurators.View);
  *(void *)(a1 + 8) = result;
  return result;
}

ValueMetadata *type metadata accessor for Collaboration.Management()
{
  return &type metadata for Collaboration.Management;
}

uint64_t ObjC metadata update function for Collaboration.Management.Model()
{
  return type metadata accessor for Collaboration.Management.Model(0);
}

void type metadata completion function for Collaboration.Management.Model()
{
  type metadata accessor for Published<[Playlist.Collaborator]>(319, &lazy cache variable for type metadata for Published<[Playlist.Collaborator]>, &demangling cache variable for type metadata for [Playlist.Collaborator], (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Published);
  if (v0 <= 0x3F)
  {
    type metadata accessor for Published<[Playlist.Collaborator]>(319, &lazy cache variable for type metadata for Published<Set<Playlist.Collaborator>>, &demangling cache variable for type metadata for Set<Playlist.Collaborator>, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Published);
    if (v1 <= 0x3F)
    {
      type metadata accessor for Published<Playlist>(319, &lazy cache variable for type metadata for Published<Playlist>, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Published);
      if (v2 <= 0x3F)
      {
        _s7Combine9PublishedVySbGMa_0();
        if (v3 <= 0x3F)
        {
          type metadata accessor for Published<[Playlist.Collaborator]>(319, (unint64_t *)&lazy cache variable for type metadata for ArtworkImage.ViewModel??, (uint64_t *)&demangling cache variable for type metadata for ArtworkImage.ViewModel?, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
          if (v4 <= 0x3F) {
            swift_updateClassMetadata2();
          }
        }
      }
    }
  }
}

void _s7Combine9PublishedVySbGMa_0()
{
  if (!_s7Combine9PublishedVySbGML_0)
  {
    unint64_t v0 = type metadata accessor for Published();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&_s7Combine9PublishedVySbGML_0);
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for Collaboration.Management.View(uint64_t *a1, uint64_t *a2, int *a3)
{
  unint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    unint64_t v4 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = a2[1];
    *unint64_t v4 = *a2;
    v4[1] = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (uint64_t *)((char *)v4 + v8);
    char v10 = (uint64_t *)((char *)a2 + v8);
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DismissAction>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = type metadata accessor for DismissAction();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    }
    else
    {
      void *v9 = *v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v13 = a3[6];
    uint64_t v14 = (uint64_t *)((char *)v4 + v13);
    uint64_t v15 = (uint64_t *)((char *)a2 + v13);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v16 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    }
    else
    {
      void *v14 = *v15;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v17 = a3[7];
    uint64_t v18 = (uint64_t *)((char *)v4 + v17);
    uint64_t v19 = (uint64_t *)((char *)a2 + v17);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<OpenURLAction>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v20 = type metadata accessor for OpenURLAction();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
    }
    else
    {
      *uint64_t v18 = *v19;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v21 = a3[8];
    uint64_t v22 = a3[9];
    char v23 = (uint64_t *)((char *)v4 + v21);
    unint64_t v24 = (char *)a2 + v21;
    uint64_t v25 = *(void **)v24;
    uint64_t v26 = *((void *)v24 + 1);
    void *v23 = *(void *)v24;
    v23[1] = v26;
    unint64_t v27 = (char *)v4 + v22;
    uint64_t v28 = (char *)a2 + v22;
    char *v27 = *v28;
    *((void *)v27 + 1) = *((void *)v28 + 1);
    uint64_t v29 = a3[10];
    uint64_t v30 = a3[11];
    uint64_t v31 = (char *)v4 + v29;
    uint64_t v32 = (char *)a2 + v29;
    char *v31 = *v32;
    *((void *)v31 + 1) = *((void *)v32 + 1);
    char v33 = (char *)v4 + v30;
    uint64_t v34 = (char *)a2 + v30;
    *char v33 = *v34;
    *((void *)v33 + 1) = *((void *)v34 + 1);
    uint64_t v35 = a3[12];
    uint64_t v36 = (char *)v4 + v35;
    uint64_t v37 = (char *)a2 + v35;
    *uint64_t v36 = *v37;
    *((void *)v36 + 1) = *((void *)v37 + 1);
    id v38 = v25;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t destroy for Collaboration.Management.View(uint64_t a1, int *a2)
{
  swift_release();
  uint64_t v4 = a1 + a2[5];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DismissAction>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for DismissAction();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = a1 + a2[6];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  uint64_t v8 = a1 + a2[7];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<OpenURLAction>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = type metadata accessor for OpenURLAction();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  }
  else
  {
    swift_release();
  }

  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

void *initializeWithCopy for Collaboration.Management.View(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DismissAction>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = type metadata accessor for DismissAction();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    *uint64_t v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v14 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  }
  else
  {
    *uint64_t v12 = *v13;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v15 = a3[7];
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (void *)((char *)a2 + v15);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<OpenURLAction>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v18 = type metadata accessor for OpenURLAction();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  }
  else
  {
    void *v16 = *v17;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v19 = a3[8];
  uint64_t v20 = a3[9];
  uint64_t v21 = (void *)((char *)a1 + v19);
  uint64_t v22 = (char *)a2 + v19;
  char v23 = *(void **)v22;
  uint64_t v24 = *((void *)v22 + 1);
  *uint64_t v21 = *(void *)v22;
  v21[1] = v24;
  uint64_t v25 = (char *)a1 + v20;
  uint64_t v26 = (char *)a2 + v20;
  char *v25 = *v26;
  *((void *)v25 + 1) = *((void *)v26 + 1);
  uint64_t v27 = a3[10];
  uint64_t v28 = a3[11];
  uint64_t v29 = (char *)a1 + v27;
  uint64_t v30 = (char *)a2 + v27;
  char *v29 = *v30;
  *((void *)v29 + 1) = *((void *)v30 + 1);
  uint64_t v31 = (char *)a1 + v28;
  uint64_t v32 = (char *)a2 + v28;
  char *v31 = *v32;
  *((void *)v31 + 1) = *((void *)v32 + 1);
  uint64_t v33 = a3[12];
  uint64_t v34 = (char *)a1 + v33;
  uint64_t v35 = (char *)a2 + v33;
  *uint64_t v34 = *v35;
  *((void *)v34 + 1) = *((void *)v35 + 1);
  id v36 = v23;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for Collaboration.Management.View(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v6 = a3[5];
    uint64_t v7 = (void *)((char *)a1 + v6);
    uint64_t v8 = (void *)((char *)a2 + v6);
    outlined destroy of TaskPriority?((uint64_t)a1 + v6, &demangling cache variable for type metadata for Environment<DismissAction>.Content);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DismissAction>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = type metadata accessor for DismissAction();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      void *v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v10 = a3[6];
    uint64_t v11 = (void *)((char *)a1 + v10);
    uint64_t v12 = (void *)((char *)a2 + v10);
    outlined destroy of TaskPriority?((uint64_t)a1 + v10, (uint64_t *)&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
    }
    else
    {
      *uint64_t v11 = *v12;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v14 = a3[7];
    uint64_t v15 = (void *)((char *)a1 + v14);
    uint64_t v16 = (void *)((char *)a2 + v14);
    outlined destroy of TaskPriority?((uint64_t)a1 + v14, (uint64_t *)&demangling cache variable for type metadata for Environment<OpenURLAction>.Content);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<OpenURLAction>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = type metadata accessor for OpenURLAction();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    }
    else
    {
      *uint64_t v15 = *v16;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v18 = a3[8];
  uint64_t v19 = (void *)((char *)a1 + v18);
  uint64_t v20 = (char *)a2 + v18;
  uint64_t v21 = *(void **)((char *)a1 + v18);
  uint64_t v22 = *(void **)((char *)a2 + v18);
  void *v19 = v22;
  id v23 = v22;

  v19[1] = *((void *)v20 + 1);
  swift_retain();
  swift_release();
  uint64_t v24 = a3[9];
  uint64_t v25 = (char *)a1 + v24;
  uint64_t v26 = (char *)a2 + v24;
  char *v25 = *v26;
  *((void *)v25 + 1) = *((void *)v26 + 1);
  swift_retain();
  swift_release();
  uint64_t v27 = a3[10];
  uint64_t v28 = (char *)a1 + v27;
  uint64_t v29 = (char *)a2 + v27;
  *uint64_t v28 = *v29;
  *((void *)v28 + 1) = *((void *)v29 + 1);
  swift_retain();
  swift_release();
  uint64_t v30 = a3[11];
  uint64_t v31 = (char *)a1 + v30;
  uint64_t v32 = (char *)a2 + v30;
  char *v31 = *v32;
  *((void *)v31 + 1) = *((void *)v32 + 1);
  swift_retain();
  swift_release();
  uint64_t v33 = a3[12];
  uint64_t v34 = (char *)a1 + v33;
  uint64_t v35 = (char *)a2 + v33;
  *uint64_t v34 = *v35;
  *((void *)v34 + 1) = *((void *)v35 + 1);
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *initializeWithTake for Collaboration.Management.View(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DismissAction>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = type metadata accessor for DismissAction();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  uint64_t v11 = a3[6];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v12, v13, v15);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
  }
  uint64_t v16 = a3[7];
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<OpenURLAction>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v20 = type metadata accessor for OpenURLAction();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v17, v18, v20);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
  }
  uint64_t v21 = a3[9];
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  *(_OWORD *)((char *)a1 + v21) = *(_OWORD *)((char *)a2 + v21);
  uint64_t v22 = a3[11];
  *(_OWORD *)((char *)a1 + a3[10]) = *(_OWORD *)((char *)a2 + a3[10]);
  *(_OWORD *)((char *)a1 + v22) = *(_OWORD *)((char *)a2 + v22);
  *(_OWORD *)((char *)a1 + a3[12]) = *(_OWORD *)((char *)a2 + a3[12]);
  return a1;
}

void *assignWithTake for Collaboration.Management.View(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_release();
  if (a1 != a2)
  {
    uint64_t v7 = a3[5];
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    outlined destroy of TaskPriority?((uint64_t)a1 + v7, &demangling cache variable for type metadata for Environment<DismissAction>.Content);
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DismissAction>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = type metadata accessor for DismissAction();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v8, v9, v11);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
    }
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    outlined destroy of TaskPriority?((uint64_t)a1 + v12, (uint64_t *)&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v16 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v13, v14, v16);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
    }
    uint64_t v17 = a3[7];
    uint64_t v18 = (char *)a1 + v17;
    uint64_t v19 = (char *)a2 + v17;
    outlined destroy of TaskPriority?((uint64_t)a1 + v17, (uint64_t *)&demangling cache variable for type metadata for Environment<OpenURLAction>.Content);
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<OpenURLAction>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v21 = type metadata accessor for OpenURLAction();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v18, v19, v21);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
    }
  }
  uint64_t v22 = a3[8];
  id v23 = (void *)((char *)a1 + v22);
  uint64_t v24 = (void *)((char *)a2 + v22);
  uint64_t v25 = *(void **)((char *)a1 + v22);
  void *v23 = *v24;

  v23[1] = v24[1];
  swift_release();
  uint64_t v26 = a3[9];
  uint64_t v27 = (char *)a1 + v26;
  uint64_t v28 = (char *)a2 + v26;
  char *v27 = *v28;
  *((void *)v27 + 1) = *((void *)v28 + 1);
  swift_release();
  uint64_t v29 = a3[10];
  uint64_t v30 = (char *)a1 + v29;
  uint64_t v31 = (char *)a2 + v29;
  char *v30 = *v31;
  *((void *)v30 + 1) = *((void *)v31 + 1);
  swift_release();
  uint64_t v32 = a3[11];
  uint64_t v33 = (char *)a1 + v32;
  uint64_t v34 = (char *)a2 + v32;
  *uint64_t v33 = *v34;
  *((void *)v33 + 1) = *((void *)v34 + 1);
  swift_release();
  uint64_t v35 = a3[12];
  id v36 = (char *)a1 + v35;
  uint64_t v37 = (char *)a2 + v35;
  *id v36 = *v37;
  *((void *)v36 + 1) = *((void *)v37 + 1);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for Collaboration.Management.View(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003C8F70);
}

uint64_t sub_1003C8F70(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DismissAction>);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a2)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a3[5];
LABEL_9:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    return v13(a1 + v11, a2, v9);
  }
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a3[6];
    goto LABEL_9;
  }
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<OpenURLAction>);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + a3[7];

  return v15(v17, a2, v16);
}

uint64_t storeEnumTagSinglePayload for Collaboration.Management.View(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003C9108);
}

uint64_t sub_1003C9108(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
    return result;
  }
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DismissAction>);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[5];
LABEL_7:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v13(v5 + v11, a2, a2, v9);
  }
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[6];
    goto LABEL_7;
  }
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<OpenURLAction>);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  uint64_t v16 = v14;
  uint64_t v17 = v5 + a4[7];

  return v15(v17, a2, a2, v16);
}

void type metadata completion function for Collaboration.Management.View()
{
  type metadata accessor for Published<Playlist>(319, (unint64_t *)&lazy cache variable for type metadata for Environment<DismissAction>.Content, (uint64_t (*)(uint64_t))&type metadata accessor for DismissAction, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v0 <= 0x3F)
  {
    type metadata accessor for Published<Playlist>(319, &lazy cache variable for type metadata for Environment<DynamicTypeSize>.Content, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (v1 <= 0x3F)
    {
      type metadata accessor for Published<Playlist>(319, &lazy cache variable for type metadata for Environment<OpenURLAction>.Content, (uint64_t (*)(uint64_t))&type metadata accessor for OpenURLAction, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t type metadata completion function for Collaboration.Management.ViewController()
{
  return swift_initClassMetadata2();
}

uint64_t ObjC metadata update function for Collaboration.Management.ViewController()
{
  return type metadata accessor for Collaboration.Management.ViewController(0);
}

ValueMetadata *type metadata accessor for PlaylistCurators()
{
  return &type metadata for PlaylistCurators;
}

uint64_t *initializeBufferWithCopyOfBuffer for PlaylistCurators.Curator(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    uint64_t *v3 = *a2;
    unint64_t v3 = (uint64_t *)(v13 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = type metadata accessor for Artwork();
    uint64_t v10 = *(void *)(v9 - 8);
    uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
    swift_bridgeObjectRetain();
    if (v11(v8, 1, v9))
    {
      uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
      memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
  }
  return v3;
}

uint64_t destroy for PlaylistCurators.Curator(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for Artwork();
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
    return v7(v4, v5);
  }
  return result;
}

void *initializeWithCopy for PlaylistCurators.Curator(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = type metadata accessor for Artwork();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  swift_bridgeObjectRetain();
  if (v10(v7, 1, v8))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
    memcpy(v6, v7, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v6, v7, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

void *assignWithCopy for PlaylistCurators.Curator(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Artwork();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

_OWORD *initializeWithTake for PlaylistCurators.Curator(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for Artwork();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
    memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

void *assignWithTake for PlaylistCurators.Curator(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for Artwork();
  uint64_t v11 = *(void *)(v10 - 8);
  int v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for PlaylistCurators.Curator(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003C9C44);
}

uint64_t sub_1003C9C44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for PlaylistCurators.Curator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003C9D0C);
}

uint64_t sub_1003C9D0C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void type metadata completion function for PlaylistCurators.Curator()
{
  type metadata accessor for Published<Playlist>(319, &_s8MusicKit7ArtworkVSgML_0, (uint64_t (*)(uint64_t))&type metadata accessor for Artwork, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for PlaylistCurators.View(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (uint64_t *)((char *)a1 + v6);
    uint64_t v8 = (uint64_t *)((char *)a2 + v6);
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = type metadata accessor for UserInterfaceSizeClass();
      uint64_t v10 = *(void *)(v9 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
      {
        uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UserInterfaceSizeClass?);
        memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v7, v8, v9);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      }
    }
    else
    {
      void *v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for PlaylistCurators.View(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for UserInterfaceSizeClass();
    uint64_t v8 = *(void *)(v5 - 8);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
    if (!result)
    {
      uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
      return v7(v4, v5);
    }
  }
  else
  {
    return swift_release();
  }
  return result;
}

void *initializeWithCopy for PlaylistCurators.View(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (void *)((char *)a1 + v4);
  uint64_t v6 = (void *)((char *)a2 + v4);
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for UserInterfaceSizeClass();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
    {
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UserInterfaceSizeClass?);
      memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 16))(v5, v6, v7);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
    }
  }
  else
  {
    *uint64_t v5 = *v6;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *assignWithCopy for PlaylistCurators.View(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (void *)((char *)a1 + v6);
    uint64_t v8 = (void *)((char *)a2 + v6);
    outlined destroy of TaskPriority?((uint64_t)a1 + v6, &demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = type metadata accessor for UserInterfaceSizeClass();
      uint64_t v10 = *(void *)(v9 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
      {
        uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UserInterfaceSizeClass?);
        memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v7, v8, v9);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      }
    }
    else
    {
      void *v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *initializeWithTake for PlaylistCurators.View(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = type metadata accessor for UserInterfaceSizeClass();
    uint64_t v9 = *(void *)(v8 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8))
    {
      uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UserInterfaceSizeClass?);
      memcpy(v5, v6, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v5, v6, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v5, 0, 1, v8);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v5, v6, *(void *)(*(void *)(v7 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for PlaylistCurators.View(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    outlined destroy of TaskPriority?((uint64_t)a1 + v6, &demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = type metadata accessor for UserInterfaceSizeClass();
      uint64_t v11 = *(void *)(v10 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10))
      {
        uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UserInterfaceSizeClass?);
        memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v7, v8, v10);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for PlaylistCurators.View(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003CA7CC);
}

uint64_t sub_1003CA7CC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for PlaylistCurators.View(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003CA894);
}

void *sub_1003CA894(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

void type metadata completion function for PlaylistCurators.View()
{
  type metadata accessor for Published<[Playlist.Collaborator]>(319, &lazy cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content, &demangling cache variable for type metadata for UserInterfaceSizeClass?, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

ValueMetadata *type metadata accessor for PlaylistCurators.View.Configuration()
{
  return &type metadata for PlaylistCurators.View.Configuration;
}

uint64_t type metadata completion function for PlaylistCurators.ViewController()
{
  return swift_initClassMetadata2();
}

uint64_t ObjC metadata update function for PlaylistCurators.ViewController()
{
  return type metadata accessor for PlaylistCurators.ViewController(0);
}

uint64_t type metadata accessor for ClearBackground.Controller()
{
  return self;
}

uint64_t sub_1003CAA8C()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for NavigationStack<NavigationPath, <<opaque return type of View.navigationBarItems<A>(trailing:)>>.0>);
  lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>((unint64_t *)&lazy protocol witness table cache variable for type NavigationStack<NavigationPath, <<opaque return type of View.navigationBarItems<A>(trailing:)>>.0> and conformance NavigationStack<A, B>, &demangling cache variable for type metadata for NavigationStack<NavigationPath, <<opaque return type of View.navigationBarItems<A>(trailing:)>>.0>);
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1003CAB20()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for HStack<TupleView<(ModifiedContent<HStack<TupleView<(HStack<ForEach<[(offset: Int, element: PlaylistCurators.Curator)], Int, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, PlaceholderStyleModifier>, _FrameLayout>, CornerRadiusModifier>, BorderViewModifier>, _TraitWritingModifier<ZIndexTraitKey>>>>, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.textSuffix(_:)>>.0, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Image.Scale>>, _EnvironmentKeyWritingModifier<Font?>>)>>, HoverViewModifier>, Spacer?)>>);
  lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type HStack<TupleView<(ModifiedContent<HStack<TupleView<(HStack<ForEach<[(offset: Int, element: PlaylistCurators.Curator)], Int, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, PlaceholderStyleModifier>, _FrameLayout>, CornerRadiusModifier>, BorderViewModifier>, _TraitWritingModifier<ZIndexTraitKey>>>>, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.textSuffix(_:)>>.0, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Image.Scale>>, _EnvironmentKeyWritingModifier<Font?>>)>>, HoverViewModifier>, Spacer?)>> and conformance HStack<A>, &demangling cache variable for type metadata for HStack<TupleView<(ModifiedContent<HStack<TupleView<(HStack<ForEach<[(offset: Int, element: PlaylistCurators.Curator)], Int, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, PlaceholderStyleModifier>, _FrameLayout>, CornerRadiusModifier>, BorderViewModifier>, _TraitWritingModifier<ZIndexTraitKey>>>>, ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.textSuffix(_:)>>.0, _EnvironmentKeyWritingModifier<Int?>>, _EnvironmentKeyWritingModifier<Image.Scale>>, _EnvironmentKeyWritingModifier<Font?>>)>>, HoverViewModifier>, Spacer?)>>);
  return swift_getOpaqueTypeConformance2();
}

uint64_t *initializeBufferWithCopyOfBuffer for Collaboration.Management.View.CollaboratorRowView(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for Playlist.Collaborator();
    uint64_t v8 = *(void *)(v7 - 8);
    uint64_t v28 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16);
    v28(a1, a2, v7);
    uint64_t v9 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    *uint64_t v10 = *v11;
    *((void *)v10 + 1) = *((void *)v11 + 1);
    uint64_t v12 = a3[7];
    int v13 = (char *)a1 + v12;
    int v14 = (char *)a2 + v12;
    uint64_t v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
    swift_retain();
    swift_retain();
    if (v15(v14, 1, v7))
    {
      uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Playlist.Collaborator?);
      memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      v28((uint64_t *)v13, (uint64_t *)v14, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v13, 0, 1, v7);
    }
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Playlist.Collaborator?>);
    *(void *)&v13[*(int *)(v18 + 28)] = *(void *)&v14[*(int *)(v18 + 28)];
    uint64_t v19 = a3[8];
    uint64_t v20 = (uint64_t *)((char *)a1 + v19);
    uint64_t v21 = (uint64_t *)((char *)a2 + v19);
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v22 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
    }
    else
    {
      void *v20 = *v21;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v23 = a3[9];
    uint64_t v24 = (uint64_t *)((char *)a1 + v23);
    uint64_t v25 = (uint64_t *)((char *)a2 + v23);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<OpenURLAction>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v26 = type metadata accessor for OpenURLAction();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
    }
    else
    {
      *uint64_t v24 = *v25;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for Collaboration.Management.View.CollaboratorRowView(uint64_t a1, int *a2)
{
  uint64_t v4 = type metadata accessor for Playlist.Collaborator();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v6(a1, v4);
  swift_release();
  swift_release();
  uint64_t v7 = a1 + a2[7];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v7, 1, v4)) {
    v6(v7, v4);
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Playlist.Collaborator?>);
  swift_release();
  uint64_t v8 = a1 + a2[8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  }
  else
  {
    swift_release();
  }
  uint64_t v10 = a1 + a2[9];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<OpenURLAction>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = type metadata accessor for OpenURLAction();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8);
    return v12(v10, v11);
  }
  else
  {
    return swift_release();
  }
}

uint64_t initializeWithCopy for Collaboration.Management.View.CollaboratorRowView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Playlist.Collaborator();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  v26(a1, a2, v6);
  uint64_t v8 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(unsigned char *)uint64_t v9 = *(unsigned char *)v10;
  *(void *)(v9 + 8) = *(void *)(v10 + 8);
  uint64_t v27 = a3;
  uint64_t v11 = a3[7];
  uint64_t v12 = (char *)(a1 + v11);
  int v13 = (char *)(a2 + v11);
  int v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  swift_retain();
  swift_retain();
  if (v14(v13, 1, v6))
  {
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Playlist.Collaborator?);
    memcpy(v12, v13, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    v26((uint64_t)v12, (uint64_t)v13, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v12, 0, 1, v6);
  }
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Playlist.Collaborator?>);
  *(void *)&v12[*(int *)(v16 + 28)] = *(void *)&v13[*(int *)(v16 + 28)];
  uint64_t v17 = v27[8];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (void *)(a2 + v17);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v20 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
  }
  else
  {
    *uint64_t v18 = *v19;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v21 = v27[9];
  uint64_t v22 = (void *)(a1 + v21);
  uint64_t v23 = (void *)(a2 + v21);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<OpenURLAction>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v24 = type metadata accessor for OpenURLAction();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
  }
  else
  {
    void *v22 = *v23;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for Collaboration.Management.View.CollaboratorRowView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Playlist.Collaborator();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  swift_retain();
  swift_release();
  uint64_t v9 = a3[6];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  *(unsigned char *)uint64_t v10 = *(unsigned char *)v11;
  *(void *)(v10 + 8) = *(void *)(v11 + 8);
  swift_retain();
  swift_release();
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  uint64_t v12 = a3[7];
  int v13 = (char *)(a1 + v12);
  int v14 = (char *)(a2 + v12);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  LODWORD(a2) = v15(a1 + v12, 1, v6);
  int v16 = v15((uint64_t)v14, 1, v6);
  if (a2)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v13, v14, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v13, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
LABEL_6:
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Playlist.Collaborator?);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  v8((uint64_t)v13, (uint64_t)v14, v6);
LABEL_7:
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Playlist.Collaborator?>);
  *(void *)&v13[*(int *)(v18 + 28)] = *(void *)&v14[*(int *)(v18 + 28)];
  swift_retain();
  swift_release();
  if (a1 != v28)
  {
    uint64_t v19 = v29[8];
    uint64_t v20 = (void *)(a1 + v19);
    uint64_t v21 = (void *)(v28 + v19);
    outlined destroy of TaskPriority?(a1 + v19, (uint64_t *)&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v22 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
    }
    else
    {
      void *v20 = *v21;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v23 = v29[9];
    uint64_t v24 = (void *)(a1 + v23);
    uint64_t v25 = (void *)(v28 + v23);
    outlined destroy of TaskPriority?(a1 + v23, (uint64_t *)&demangling cache variable for type metadata for Environment<OpenURLAction>.Content);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<OpenURLAction>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v26 = type metadata accessor for OpenURLAction();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
    }
    else
    {
      *uint64_t v24 = *v25;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t initializeWithTake for Collaboration.Management.View.CollaboratorRowView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Playlist.Collaborator();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32);
  v8(a1, a2, v6);
  uint64_t v9 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v9) = *(_OWORD *)(a2 + v9);
  uint64_t v10 = a3[7];
  uint64_t v11 = (char *)(a1 + v10);
  uint64_t v12 = (char *)(a2 + v10);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a2 + v10, 1, v6))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Playlist.Collaborator?);
    memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    v8((uint64_t)v11, (uint64_t)v12, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
  }
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Playlist.Collaborator?>);
  *(void *)&v11[*(int *)(v14 + 28)] = *(void *)&v12[*(int *)(v14 + 28)];
  uint64_t v15 = a3[8];
  int v16 = (void *)(a1 + v15);
  uint64_t v17 = (const void *)(a2 + v15);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v19 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v19 - 8) + 32))(v16, v17, v19);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
  }
  uint64_t v20 = a3[9];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (const void *)(a2 + v20);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<OpenURLAction>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v24 = type metadata accessor for OpenURLAction();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v24 - 8) + 32))(v21, v22, v24);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
  }
  return a1;
}

uint64_t assignWithTake for Collaboration.Management.View.CollaboratorRowView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Playlist.Collaborator();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  swift_release();
  uint64_t v9 = a3[6];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  *(unsigned char *)uint64_t v10 = *(unsigned char *)v11;
  *(void *)(v10 + 8) = *(void *)(v11 + 8);
  swift_release();
  uint64_t v31 = a2;
  uint64_t v32 = a3;
  uint64_t v12 = a3[7];
  uint64_t v13 = (char *)(a1 + v12);
  uint64_t v14 = (char *)(a2 + v12);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  int v16 = v15(a1 + v12, 1, v6);
  int v17 = v15((uint64_t)v14, 1, v6);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v13, v14, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v13, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
LABEL_6:
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Playlist.Collaborator?);
    memcpy(v13, v14, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  v8((uint64_t)v13, (uint64_t)v14, v6);
LABEL_7:
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Playlist.Collaborator?>);
  *(void *)&v13[*(int *)(v19 + 28)] = *(void *)&v14[*(int *)(v19 + 28)];
  swift_release();
  if (a1 != v31)
  {
    uint64_t v20 = v32[8];
    uint64_t v21 = (void *)(a1 + v20);
    uint64_t v22 = (const void *)(v31 + v20);
    outlined destroy of TaskPriority?(a1 + v20, (uint64_t *)&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v24 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v24 - 8) + 32))(v21, v22, v24);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
    }
    uint64_t v25 = v32[9];
    uint64_t v26 = (void *)(a1 + v25);
    uint64_t v27 = (const void *)(v31 + v25);
    outlined destroy of TaskPriority?(a1 + v25, (uint64_t *)&demangling cache variable for type metadata for Environment<OpenURLAction>.Content);
    uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<OpenURLAction>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v29 = type metadata accessor for OpenURLAction();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v29 - 8) + 32))(v26, v27, v29);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for Collaboration.Management.View.CollaboratorRowView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003CBD88);
}

uint64_t sub_1003CBD88(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Playlist.Collaborator();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_12:
    return v9(v10, a2, v8);
  }
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v11 = *(void *)(a1 + a3[5]);
    if (v11 >= 0xFFFFFFFF) {
      LODWORD(v11) = -1;
    }
    return (v11 + 1);
  }
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Playlist.Collaborator?>);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a2)
  {
    uint64_t v8 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a3[7];
LABEL_11:
    uint64_t v10 = a1 + v15;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
    goto LABEL_12;
  }
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v8 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a3[8];
    goto LABEL_11;
  }
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<OpenURLAction>);
  uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48);
  uint64_t v19 = v17;
  uint64_t v20 = a1 + a3[9];

  return v18(v20, a2, v19);
}

uint64_t storeEnumTagSinglePayload for Collaboration.Management.View.CollaboratorRowView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003CBF74);
}

uint64_t sub_1003CBF74(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result = type metadata accessor for Playlist.Collaborator();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    unint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_10:
    return v11(v12, a2, a2, v10);
  }
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + a4[5]) = (a2 - 1);
    return result;
  }
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Playlist.Collaborator?>);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[7];
LABEL_9:
    uint64_t v12 = a1 + v15;
    unint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_10;
  }
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DynamicTypeSize>);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[8];
    goto LABEL_9;
  }
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<OpenURLAction>);
  uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56);
  uint64_t v19 = v17;
  uint64_t v20 = a1 + a4[9];

  return v18(v20, a2, a2, v19);
}

uint64_t type metadata accessor for Collaboration.Management.View.CollaboratorRowView(uint64_t a1)
{
  return type metadata accessor for Notice.Variant(a1, (uint64_t *)&type metadata singleton initialization cache for Collaboration.Management.View.CollaboratorRowView);
}

void type metadata completion function for Collaboration.Management.View.CollaboratorRowView()
{
  type metadata accessor for Playlist.Collaborator();
  if (v0 <= 0x3F)
  {
    type metadata accessor for Published<[Playlist.Collaborator]>(319, &lazy cache variable for type metadata for State<Playlist.Collaborator?>, &demangling cache variable for type metadata for Playlist.Collaborator?, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for State);
    if (v1 <= 0x3F)
    {
      type metadata accessor for Published<Playlist>(319, &lazy cache variable for type metadata for Environment<DynamicTypeSize>.Content, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
      if (v2 <= 0x3F)
      {
        type metadata accessor for Published<Playlist>(319, &lazy cache variable for type metadata for Environment<OpenURLAction>.Content, (uint64_t (*)(uint64_t))&type metadata accessor for OpenURLAction, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

void type metadata accessor for Published<[Playlist.Collaborator]>(uint64_t a1, unint64_t *a2, uint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a3);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void *type metadata accessor for ClearBackground()
{
  return &unk_100546F90;
}

void *type metadata accessor for Collaboration.Management.QRCodeView()
{
  return &unk_100547008;
}

void *type metadata accessor for Collaboration.Management.ActivityViewController()
{
  return &unk_100547030;
}

void *type metadata accessor for Collaboration.Management.View.Share()
{
  return &unk_1005470C8;
}

uint64_t *initializeBufferWithCopyOfBuffer for Collaboration.Management.View.Share.Button(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v7 = a2[2];
    v4[1] = a2[1];
    v4[2] = v7;
    uint64_t v8 = *(int *)(a3 + 24);
    uint64_t v9 = (uint64_t *)((char *)v4 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ColorScheme>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = type metadata accessor for ColorScheme();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    }
    else
    {
      void *v9 = *v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v13 = *(int *)(a3 + 28);
    uint64_t v14 = (char *)v4 + v13;
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = *(void *)v15;
    char v17 = v15[8];
    outlined copy of Environment<Bool>.Content(*(void *)v15, v17);
    *(void *)uint64_t v14 = v16;
    v14[8] = v17;
  }
  return v4;
}

uint64_t outlined copy of Environment<Bool>.Content(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return swift_retain();
  }
  return result;
}

uint64_t destroy for Collaboration.Management.View.Share.Button(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ColorScheme>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for ColorScheme();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = a1 + *(int *)(a2 + 28);
  uint64_t v7 = *(void *)v6;
  char v8 = *(unsigned char *)(v6 + 8);

  return outlined consume of Environment<SymbolButton.MaterialColor?>.Content(v7, v8);
}

uint64_t initializeWithCopy for Collaboration.Management.View.Share.Button(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  uint64_t v7 = *(int *)(a3 + 24);
  char v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ColorScheme>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = type metadata accessor for ColorScheme();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    *char v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v11 = *(int *)(a3 + 28);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = *(void *)v13;
  char v15 = *(unsigned char *)(v13 + 8);
  outlined copy of Environment<Bool>.Content(*(void *)v13, v15);
  *(void *)uint64_t v12 = v14;
  *(unsigned char *)(v12 + 8) = v15;
  return a1;
}

uint64_t assignWithCopy for Collaboration.Management.View.Share.Button(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 24);
    char v8 = (void *)(a1 + v7);
    uint64_t v9 = (void *)(a2 + v7);
    outlined destroy of TaskPriority?(a1 + v7, &demangling cache variable for type metadata for Environment<ColorScheme>.Content);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ColorScheme>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = type metadata accessor for ColorScheme();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      *char v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v11 = *(int *)(a3 + 28);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = *(void *)v13;
  char v15 = *(unsigned char *)(v13 + 8);
  outlined copy of Environment<Bool>.Content(*(void *)v13, v15);
  uint64_t v16 = *(void *)v12;
  char v17 = *(unsigned char *)(v12 + 8);
  *(void *)uint64_t v12 = v14;
  *(unsigned char *)(v12 + 8) = v15;
  outlined consume of Environment<SymbolButton.MaterialColor?>.Content(v16, v17);
  return a1;
}

uint64_t initializeWithTake for Collaboration.Management.View.Share.Button(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (void *)(a1 + v6);
  char v8 = (const void *)(a2 + v6);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ColorScheme>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = type metadata accessor for ColorScheme();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  uint64_t v11 = *(int *)(a3 + 28);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(void *)uint64_t v12 = *(void *)v13;
  *(unsigned char *)(v12 + 8) = *(unsigned char *)(v13 + 8);
  return a1;
}

uint64_t assignWithTake for Collaboration.Management.View.Share.Button(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 24);
    uint64_t v7 = (void *)(a1 + v6);
    char v8 = (const void *)(a2 + v6);
    outlined destroy of TaskPriority?(a1 + v6, &demangling cache variable for type metadata for Environment<ColorScheme>.Content);
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ColorScheme>.Content);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = type metadata accessor for ColorScheme();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
    }
  }
  uint64_t v11 = *(int *)(a3 + 28);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = (uint64_t *)(a2 + v11);
  uint64_t v14 = *v13;
  LOBYTE(v13) = *((unsigned char *)v13 + 8);
  uint64_t v15 = *(void *)v12;
  char v16 = *(unsigned char *)(v12 + 8);
  *(void *)uint64_t v12 = v14;
  *(unsigned char *)(v12 + 8) = (_BYTE)v13;
  outlined consume of Environment<SymbolButton.MaterialColor?>.Content(v15, v16);
  return a1;
}

uint64_t getEnumTagSinglePayload for Collaboration.Management.View.Share.Button(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003CCAA0);
}

uint64_t sub_1003CCAA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ColorScheme>);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for Collaboration.Management.View.Share.Button(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003CCB68);
}

uint64_t sub_1003CCB68(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ColorScheme>);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for Collaboration.Management.View.Share.Button(uint64_t a1)
{
  return type metadata accessor for Notice.Variant(a1, (uint64_t *)&type metadata singleton initialization cache for Collaboration.Management.View.Share.Button);
}

void type metadata completion function for Collaboration.Management.View.Share.Button()
{
  type metadata accessor for Published<Playlist>(319, &lazy cache variable for type metadata for Environment<ColorScheme>.Content, (uint64_t (*)(uint64_t))&type metadata accessor for ColorScheme, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void type metadata accessor for Published<Playlist>(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t associated type witness table accessor for View.Body : View in Collaboration.Management.View.Share.Button()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t lazy protocol witness table accessor for type Collaboration.Management.View.Share and conformance Collaboration.Management.View.Share()
{
  unint64_t result = lazy protocol witness table cache variable for type Collaboration.Management.View.Share and conformance Collaboration.Management.View.Share;
  if (!lazy protocol witness table cache variable for type Collaboration.Management.View.Share and conformance Collaboration.Management.View.Share)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Collaboration.Management.View.Share and conformance Collaboration.Management.View.Share);
  }
  return result;
}

void *associated type witness table accessor for View.Body : View in Collaboration.Management.ActivityViewController()
{
  return &protocol witness table for Never;
}

unint64_t lazy protocol witness table accessor for type Collaboration.Management.ActivityViewController and conformance Collaboration.Management.ActivityViewController()
{
  unint64_t result = lazy protocol witness table cache variable for type Collaboration.Management.ActivityViewController and conformance Collaboration.Management.ActivityViewController;
  if (!lazy protocol witness table cache variable for type Collaboration.Management.ActivityViewController and conformance Collaboration.Management.ActivityViewController)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Collaboration.Management.ActivityViewController and conformance Collaboration.Management.ActivityViewController);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type Collaboration.Management.ActivityViewController and conformance Collaboration.Management.ActivityViewController;
  if (!lazy protocol witness table cache variable for type Collaboration.Management.ActivityViewController and conformance Collaboration.Management.ActivityViewController)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Collaboration.Management.ActivityViewController and conformance Collaboration.Management.ActivityViewController);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type Collaboration.Management.QRCodeView and conformance Collaboration.Management.QRCodeView()
{
  unint64_t result = lazy protocol witness table cache variable for type Collaboration.Management.QRCodeView and conformance Collaboration.Management.QRCodeView;
  if (!lazy protocol witness table cache variable for type Collaboration.Management.QRCodeView and conformance Collaboration.Management.QRCodeView)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Collaboration.Management.QRCodeView and conformance Collaboration.Management.QRCodeView);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type Collaboration.Management.QRCodeView and conformance Collaboration.Management.QRCodeView;
  if (!lazy protocol witness table cache variable for type Collaboration.Management.QRCodeView and conformance Collaboration.Management.QRCodeView)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Collaboration.Management.QRCodeView and conformance Collaboration.Management.QRCodeView);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ClearBackground and conformance ClearBackground()
{
  unint64_t result = lazy protocol witness table cache variable for type ClearBackground and conformance ClearBackground;
  if (!lazy protocol witness table cache variable for type ClearBackground and conformance ClearBackground)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ClearBackground and conformance ClearBackground);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type ClearBackground and conformance ClearBackground;
  if (!lazy protocol witness table cache variable for type ClearBackground and conformance ClearBackground)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ClearBackground and conformance ClearBackground);
  }
  return result;
}

uint64_t associated type witness table accessor for View.Body : View in Collaboration.Management.View.CollaboratorRowView()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t partial apply for closure #2 in Collaboration.Management.View.CollaboratorRowView.body.getter@<X0>(uint64_t a1@<X8>)
{
  return closure #2 in Collaboration.Management.View.CollaboratorRowView.body.getter(*(void *)(v1 + 16), a1);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, CornerRadiusModifier>, _FrameLayout>, _AspectRatioLayout>?, VStack<TupleView<(Text?, _ConditionalContent<Text, Text>?)>>, Spacer, _ConditionalContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FrameLayout>, TupleView<(Collaboration.Management.View.Moderation.Button, Collaboration.Management.View.Moderation.Button)>>?)>>, _ContentShapeModifier<Rectangle>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, CornerRadiusModifier>, _FrameLayout>, _AspectRatioLayout>?, VStack<TupleView<(Text?, _ConditionalContent<Text, Text>?)>>, Spacer, _ConditionalContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FrameLayout>, TupleView<(Collaboration.Management.View.Moderation.Button, Collaboration.Management.View.Moderation.Button)>>?)>>, _ContentShapeModifier<Rectangle>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, CornerRadiusModifier>, _FrameLayout>, _AspectRatioLayout>?, VStack<TupleView<(Text?, _ConditionalContent<Text, Text>?)>>, Spacer, _ConditionalContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FrameLayout>, TupleView<(Collaboration.Management.View.Moderation.Button, Collaboration.Management.View.Moderation.Button)>>?)>>, _ContentShapeModifier<Rectangle>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, CornerRadiusModifier>, _FrameLayout>, _AspectRatioLayout>?, VStack<TupleView<(Text?, _ConditionalContent<Text, Text>?)>>, Spacer, _ConditionalContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FrameLayout>, TupleView<(Collaboration.Management.View.Moderation.Button, Collaboration.Management.View.Moderation.Button)>>?)>>, _ContentShapeModifier<Rectangle>>);
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, CornerRadiusModifier>, _FrameLayout>, _AspectRatioLayout>?, VStack<TupleView<(Text?, _ConditionalContent<Text, Text>?)>>, Spacer, _ConditionalContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FrameLayout>, TupleView<(Collaboration.Management.View.Moderation.Button, Collaboration.Management.View.Moderation.Button)>>?)>> and conformance HStack<A>, &demangling cache variable for type metadata for HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, CornerRadiusModifier>, _FrameLayout>, _AspectRatioLayout>?, VStack<TupleView<(Text?, _ConditionalContent<Text, Text>?)>>, Spacer, _ConditionalContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FrameLayout>, TupleView<(Collaboration.Management.View.Moderation.Button, Collaboration.Management.View.Moderation.Button)>>?)>>);
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type _ContentShapeModifier<Rectangle> and conformance _ContentShapeModifier<A>, &demangling cache variable for type metadata for _ContentShapeModifier<Rectangle>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, CornerRadiusModifier>, _FrameLayout>, _AspectRatioLayout>?, VStack<TupleView<(Text?, _ConditionalContent<Text, Text>?)>>, Spacer, _ConditionalContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FrameLayout>, TupleView<(Collaboration.Management.View.Moderation.Button, Collaboration.Management.View.Moderation.Button)>>?)>>, _ContentShapeModifier<Rectangle>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&demangling cache variable for type metadata for ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>);
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&_s7SwiftUI6ButtonVyAA4TextVGACyxGAA4ViewAAWL_0, (uint64_t *)&_s7SwiftUI6ButtonVyAA4TextVGMD_0);
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Color?> and conformance _EnvironmentKeyWritingModifier<A>, (uint64_t *)&demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Color?>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t partial apply for closure #3 in Collaboration.Management.View.CollaboratorRowView.body.getter@<X0>(uint64_t a1@<X8>)
{
  return closure #3 in Collaboration.Management.View.CollaboratorRowView.body.getter(*(void *)(v1 + 16), a1);
}

uint64_t outlined init with copy of Collaboration.Management.View(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t partial apply for closure #1 in closure #3 in Collaboration.Management.View.CollaboratorRowView.body.getter()
{
  return partial apply for closure #1 in closure #3 in Collaboration.Management.View.CollaboratorRowView.body.getter(type metadata accessor for Collaboration.Management.View.CollaboratorRowView, (uint64_t (*)(uint64_t))closure #1 in closure #3 in Collaboration.Management.View.CollaboratorRowView.body.getter);
}

uint64_t objectdestroy_112Tm()
{
  uint64_t v1 = (int *)type metadata accessor for Collaboration.Management.View.CollaboratorRowView(0);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*((void *)v1 - 1) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v1 - 1) + 80));
  uint64_t v3 = type metadata accessor for Playlist.Collaborator();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v5(v2, v3);
  swift_release();
  swift_release();
  uint64_t v6 = v2 + v1[7];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v6, 1, v3)) {
    v5(v6, v3);
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Playlist.Collaborator?>);
  swift_release();
  uint64_t v7 = v2 + v1[8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  uint64_t v9 = v2 + v1[9];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<OpenURLAction>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = type metadata accessor for OpenURLAction();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  }
  else
  {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #2 in Collaboration.Management.View.CollaboratorRowView.body.getter()
{
  return partial apply for closure #1 in closure #3 in Collaboration.Management.View.CollaboratorRowView.body.getter(type metadata accessor for Collaboration.Management.View.CollaboratorRowView, closure #1 in closure #2 in Collaboration.Management.View.CollaboratorRowView.body.getter);
}

uint64_t outlined copy of _ConditionalContent<Text, Text>?(uint64_t a1, uint64_t a2, char a3, uint64_t a4, unsigned __int8 a5)
{
  if (a5 != 255) {
    return outlined copy of _ConditionalContent<Text, Text>.Storage(a1, a2, a3);
  }
  return a1;
}

uint64_t outlined copy of _ConditionalContent<Text, Text>.Storage(uint64_t a1, uint64_t a2, char a3)
{
  outlined copy of Text.Storage(a1, a2, a3 & 1);

  return swift_bridgeObjectRetain();
}

uint64_t outlined consume of _ConditionalContent<Text, Text>?(uint64_t a1, uint64_t a2, char a3, uint64_t a4, unsigned __int8 a5)
{
  if (a5 != 255) {
    return outlined consume of _ConditionalContent<Text, Text>.Storage(a1, a2, a3);
  }
  return a1;
}

uint64_t outlined consume of _ConditionalContent<Text, Text>.Storage(uint64_t a1, uint64_t a2, char a3)
{
  outlined consume of Text.Storage(a1, a2, a3 & 1);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1003CD494@<X0>(void *a1@<X8>)
{
  return key path getter for Collaboration.Management.Model.pendingCollaborators : Collaboration.Management.Model(a1);
}

uint64_t sub_1003CD4BC()
{
  return key path setter for Collaboration.Management.Model.pendingCollaborators : Collaboration.Management.Model();
}

uint64_t partial apply for closure #2 in closure #1 in Collaboration.Management.View.CollaboratorRowView.body.getter()
{
  return partial apply for closure #2 in closure #1 in Collaboration.Management.View.CollaboratorRowView.body.getter("[Management] Decline button tapped", 1);
}

uint64_t partial apply for closure #3 in closure #1 in Collaboration.Management.View.CollaboratorRowView.body.getter()
{
  return partial apply for closure #2 in closure #1 in Collaboration.Management.View.CollaboratorRowView.body.getter("[Management] Approve button tapped", 0);
}

uint64_t partial apply for closure #2 in closure #1 in Collaboration.Management.View.CollaboratorRowView.body.getter(const char *a1, char a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for Collaboration.Management.View.CollaboratorRowView(0) - 8);
  return closure #2 in closure #1 in Collaboration.Management.View.CollaboratorRowView.body.getter(v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)), a1, a2);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ProgressView<EmptyView, EmptyView>, _FrameLayout> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ProgressView<EmptyView, EmptyView>, _FrameLayout> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ProgressView<EmptyView, EmptyView>, _FrameLayout> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ProgressView<EmptyView, EmptyView>, _FrameLayout>);
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type ProgressView<EmptyView, EmptyView> and conformance ProgressView<A, B>, &demangling cache variable for type metadata for ProgressView<EmptyView, EmptyView>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ProgressView<EmptyView, EmptyView>, _FrameLayout> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

void *outlined retain of Collaboration.Management.QRCodeView(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  outlined copy of Data._Representation(a1[1], a1[2]);
  id v3 = v2;
  return a1;
}

uint64_t sub_1003CD750()
{
  uint64_t v1 = type metadata accessor for Collaboration.Management.View.Share.Button(0);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80));
  swift_release();
  uint64_t v3 = v2 + *(int *)(v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<ColorScheme>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for ColorScheme();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  }
  else
  {
    swift_release();
  }
  outlined consume of Environment<SymbolButton.MaterialColor?>.Content(*(void *)(v2 + *(int *)(v1 + 28)), *(unsigned char *)(v2 + *(int *)(v1 + 28) + 8));

  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in Collaboration.Management.View.Share.Button.body.getter()
{
  uint64_t v1 = *(void *)(type metadata accessor for Collaboration.Management.View.Share.Button(0) - 8);
  return (*(uint64_t (**)(void))(v0
                              + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))
                              + 8))();
}

uint64_t partial apply for closure #2 in Collaboration.Management.View.Share.Button.body.getter@<X0>(uint64_t a1@<X8>)
{
  return closure #2 in Collaboration.Management.View.Share.Button.body.getter(*(unsigned __int8 **)(v1 + 16), a1);
}

uint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout> and conformance <> ModifiedContent<A, B>(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t lazy protocol witness table accessor for type ModifiedContent<_VariadicView.Tree<_LayoutRoot<VStackLayout>, TupleView<(Spacer, <<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, Text, Spacer)>>, _OffsetEffect> and conformance <> ModifiedContent<A, B>()
{
  return lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout> and conformance <> ModifiedContent<A, B>((unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<_VariadicView.Tree<_LayoutRoot<VStackLayout>, TupleView<(Spacer, <<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, Text, Spacer)>>, _OffsetEffect> and conformance <> ModifiedContent<A, B>, (uint64_t *)&demangling cache variable for type metadata for ModifiedContent<_VariadicView.Tree<_LayoutRoot<VStackLayout>, TupleView<(Spacer, <<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, Text, Spacer)>>, _OffsetEffect>, (void (*)(void))lazy protocol witness table accessor for type _VariadicView.Tree<_LayoutRoot<VStackLayout>, TupleView<(Spacer, <<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, Text, Spacer)>> and conformance <> _VariadicView.Tree<A, B>);
}

unint64_t lazy protocol witness table accessor for type _VariadicView.Tree<_LayoutRoot<VStackLayout>, TupleView<(Spacer, <<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, Text, Spacer)>> and conformance <> _VariadicView.Tree<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type _VariadicView.Tree<_LayoutRoot<VStackLayout>, TupleView<(Spacer, <<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, Text, Spacer)>> and conformance <> _VariadicView.Tree<A, B>;
  if (!lazy protocol witness table cache variable for type _VariadicView.Tree<_LayoutRoot<VStackLayout>, TupleView<(Spacer, <<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, Text, Spacer)>> and conformance <> _VariadicView.Tree<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _VariadicView.Tree<_LayoutRoot<VStackLayout>, TupleView<(Spacer, <<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, Text, Spacer)>>);
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type _LayoutRoot<VStackLayout> and conformance _LayoutRoot<A>, &demangling cache variable for type metadata for _LayoutRoot<VStackLayout>);
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type TupleView<(Spacer, <<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, Text, Spacer)> and conformance TupleView<A>, &demangling cache variable for type metadata for TupleView<(Spacer, <<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, Text, Spacer)>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type _VariadicView.Tree<_LayoutRoot<VStackLayout>, TupleView<(Spacer, <<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, Text, Spacer)>> and conformance <> _VariadicView.Tree<A, B>);
  }
  return result;
}

uint64_t _s17_MusicKit_SwiftUI12ArtworkImageV0a4CoreD0E11PlaceholderOWOhTm_1(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1003CDADC()
{
  uint64_t v1 = type metadata accessor for Playlist.Collaborator();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in Collaboration.Management.Model.moderateCollaborator(_:action:)(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for Playlist.Collaborator() - 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v7 = *(void *)(v1 + 32);
  char v8 = *(unsigned char *)(v1 + 40);
  uint64_t v9 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = closure #3 in static Actions.ReportConcern.action(context:);
  return closure #1 in Collaboration.Management.Model.moderateCollaborator(_:action:)(a1, v5, v6, v7, v8, v9);
}

uint64_t partial apply for closure #1 in closure #1 in Collaboration.Management.Model.moderateCollaborator(_:action:)(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for Playlist.Collaborator() - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  void *v9 = v2;
  v9[1] = closure #3 in static Actions.ReportConcern.action(context:);
  return closure #1 in closure #1 in Collaboration.Management.Model.moderateCollaborator(_:action:)(a1, v5, v6, v7, v8);
}

uint64_t objectdestroy_155Tm()
{
  uint64_t v1 = type metadata accessor for Playlist.Collaborator();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in Collaboration.Management.Model.remove(_:)(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for Playlist.Collaborator() - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  void *v9 = v2;
  v9[1] = closure #3 in static Actions.ReportConcern.action(context:);
  return closure #1 in Collaboration.Management.Model.remove(_:)(a1, v5, v6, v7, v8);
}

uint64_t sub_1003CDF88()
{
  return objectdestroy_165Tm();
}

uint64_t partial apply for closure #1 in Collaboration.Management.Model.end()(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  void *v7 = v2;
  v7[1] = closure #3 in static Actions.ReportConcern.action(context:);
  return closure #1 in Collaboration.Management.Model.end()(a1, v4, v5, v6);
}

uint64_t sub_1003CE044()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTRyt_Tg5TA_3(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = partial apply for closure #1 in static MusicEngagementExtension.performRequest(with:completion:);
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&_sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTRyt_Tg5Tu_1
                                              + _sxIeAgHr_xs5Error_pIegHrzo_s8SendableRzs5NeverORs_r0_lTRyt_Tg5Tu_1);
  return v6(a1, v4);
}

uint64_t sub_1003CE134@<X0>(void *a1@<X8>)
{
  return key path getter for Collaboration.Management.Model.pendingCollaborators : Collaboration.Management.Model(a1);
}

uint64_t sub_1003CE15C()
{
  return key path setter for Collaboration.Management.Model.pendingCollaborators : Collaboration.Management.Model();
}

uint64_t sub_1003CE184@<X0>(void *a1@<X8>)
{
  return key path getter for Collaboration.Management.Model.pendingCollaborators : Collaboration.Management.Model(a1);
}

uint64_t sub_1003CE1AC()
{
  return key path setter for Collaboration.Management.Model.pendingCollaborators : Collaboration.Management.Model();
}

uint64_t sub_1003CE1D4@<X0>(unsigned char *a1@<X8>)
{
  return key path getter for Player.isHostingSharePlayTogetherSession : Player(a1);
}

uint64_t sub_1003CE1FC()
{
  return key path setter for Player.isHostingSharePlayTogetherSession : Player();
}

uint64_t sub_1003CE224@<X0>(unsigned char *a1@<X8>)
{
  return key path getter for Player.isHostingSharePlayTogetherSession : Player(a1);
}

uint64_t sub_1003CE24C()
{
  return key path setter for Player.isHostingSharePlayTogetherSession : Player();
}

uint64_t sub_1003CE274@<X0>(unsigned char *a1@<X8>)
{
  return key path getter for Player.isHostingSharePlayTogetherSession : Player(a1);
}

uint64_t sub_1003CE29C()
{
  return key path setter for Player.isHostingSharePlayTogetherSession : Player();
}

double specialized static PlaylistCurators.View.Specs.faceholeSpacing(for:)(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UserInterfaceSizeClass();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (UserInterfaceSizeClass?, UserInterfaceSizeClass?))
     - 8;
  __chkstk_darwin();
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UserInterfaceSizeClass?);
  __chkstk_darwin();
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v12 = (char *)&v18 - v11;
  (*(void (**)(char *, void, uint64_t))(v3 + 104))((char *)&v18 - v11, enum case for UserInterfaceSizeClass.compact(_:), v2);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v3 + 56))(v12, 0, 1, v2);
  uint64_t v13 = (uint64_t)&v8[*(int *)(v6 + 56)];
  outlined init with copy of (String, Any)(a1, (uint64_t)v8, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  outlined init with copy of (String, Any)((uint64_t)v12, v13, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  uint64_t v14 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  if (v14((uint64_t)v8, 1, v2) == 1)
  {
    outlined destroy of TaskPriority?((uint64_t)v12, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
    if (v14(v13, 1, v2) == 1)
    {
      outlined destroy of TaskPriority?((uint64_t)v8, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
      return -9.0;
    }
  }
  else
  {
    outlined init with copy of (String, Any)((uint64_t)v8, (uint64_t)v10, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
    if (v14(v13, 1, v2) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 32))(v5, v13, v2);
      lazy protocol witness table accessor for type Collaboration.Management.Model and conformance Collaboration.Management.Model(&lazy protocol witness table cache variable for type UserInterfaceSizeClass and conformance UserInterfaceSizeClass, (void (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass);
      char v16 = dispatch thunk of static Equatable.== infix(_:_:)();
      char v17 = *(void (**)(char *, uint64_t))(v3 + 8);
      v17(v5, v2);
      outlined destroy of TaskPriority?((uint64_t)v12, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
      v17(v10, v2);
      outlined destroy of TaskPriority?((uint64_t)v8, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
      double result = -9.0;
      if (v16) {
        return result;
      }
      return -12.0;
    }
    outlined destroy of TaskPriority?((uint64_t)v12, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v10, v2);
  }
  outlined destroy of TaskPriority?((uint64_t)v8, (uint64_t *)&demangling cache variable for type metadata for (UserInterfaceSizeClass?, UserInterfaceSizeClass?));
  return -12.0;
}

uint64_t sub_1003CE660()
{
  uint64_t v1 = (int *)(type metadata accessor for PlaylistCurators.View(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v3 = v0 + v2 + v1[7];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<UserInterfaceSizeClass?>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for UserInterfaceSizeClass();
    uint64_t v5 = *(void *)(v4 - 8);
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4)) {
      (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v3, v4);
    }
  }
  else
  {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in closure #1 in closure #1 in closure #1 in PlaylistCurators.View.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  type metadata accessor for PlaylistCurators.View(0);
  uint64_t v5 = *(void *)(v2 + 16);

  return closure #1 in closure #1 in closure #1 in closure #1 in PlaylistCurators.View.body.getter(a1, v5, a2);
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed (@unowned Int, @in_guaranteed PlaylistCurators.Curator) -> (@out ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, PlaceholderStyleModifier>, _FrameLayout>, CornerRadiusModifier>, BorderViewModifier>, _TraitWritingModifier<ZIndexTraitKey>>)(char *a1)
{
  unint64_t v3 = *(uint64_t (**)(uint64_t, char *))(v1 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (offset: Int, element: PlaylistCurators.Curator));
  return v3(v4, &a1[*(int *)(v5 + 48)]);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, PlaceholderStyleModifier>, _FrameLayout>, CornerRadiusModifier>, BorderViewModifier>, _TraitWritingModifier<ZIndexTraitKey>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, PlaceholderStyleModifier>, _FrameLayout>, CornerRadiusModifier>, BorderViewModifier>, _TraitWritingModifier<ZIndexTraitKey>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, PlaceholderStyleModifier>, _FrameLayout>, CornerRadiusModifier>, BorderViewModifier>, _TraitWritingModifier<ZIndexTraitKey>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, PlaceholderStyleModifier>, _FrameLayout>, CornerRadiusModifier>, BorderViewModifier>, _TraitWritingModifier<ZIndexTraitKey>>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _FrameLayout>, _EnvironmentKeyWritingModifier<SymbolRenderingMode?>>, _EnvironmentKeyWritingModifier<Color?>>?, VStack<TupleView<(Text, Text?)>>, TupleView<(Spacer, <<opaque return type of View.alert(isPresented:content:)>>.0)>?)>>, _PaddingLayout>, _TraitWritingModifier<ListRowInsetsTraitKey>>, _AlignmentWritingModifier> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, PlaceholderStyleModifier>, _FrameLayout>, CornerRadiusModifier>, BorderViewModifier> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, PlaceholderStyleModifier>, _FrameLayout>, CornerRadiusModifier>, BorderViewModifier>, (void (*)(void))lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, PlaceholderStyleModifier>, _FrameLayout>, CornerRadiusModifier> and conformance <> ModifiedContent<A, B>, (void (*)(void))lazy protocol witness table accessor for type BorderViewModifier and conformance BorderViewModifier);
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type _TraitWritingModifier<ZIndexTraitKey> and conformance _TraitWritingModifier<A>, &demangling cache variable for type metadata for _TraitWritingModifier<ZIndexTraitKey>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, PlaceholderStyleModifier>, _FrameLayout>, CornerRadiusModifier>, BorderViewModifier>, _TraitWritingModifier<ZIndexTraitKey>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _FrameLayout>, _EnvironmentKeyWritingModifier<SymbolRenderingMode?>>, _EnvironmentKeyWritingModifier<Color?>>?, VStack<TupleView<(Text, Text?)>>, TupleView<(Spacer, <<opaque return type of View.alert(isPresented:content:)>>.0)>?)>>, _PaddingLayout>, _TraitWritingModifier<ListRowInsetsTraitKey>>, _AlignmentWritingModifier> and conformance <> ModifiedContent<A, B>(unint64_t *a1, uint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, PlaceholderStyleModifier>, _FrameLayout>, CornerRadiusModifier> and conformance <> ModifiedContent<A, B>()
{
  return lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _FrameLayout>, _EnvironmentKeyWritingModifier<SymbolRenderingMode?>>, _EnvironmentKeyWritingModifier<Color?>>?, VStack<TupleView<(Text, Text?)>>, TupleView<(Spacer, <<opaque return type of View.alert(isPresented:content:)>>.0)>?)>>, _PaddingLayout>, _TraitWritingModifier<ListRowInsetsTraitKey>>, _AlignmentWritingModifier> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, PlaceholderStyleModifier>, _FrameLayout>, CornerRadiusModifier> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, PlaceholderStyleModifier>, _FrameLayout>, CornerRadiusModifier>, (void (*)(void))lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, PlaceholderStyleModifier>, _FrameLayout> and conformance <> ModifiedContent<A, B>, (void (*)(void))lazy protocol witness table accessor for type CornerRadiusModifier and conformance CornerRadiusModifier);
}

uint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, PlaceholderStyleModifier>, _FrameLayout> and conformance <> ModifiedContent<A, B>()
{
  return lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, PlaceholderStyleModifier>, _FrameLayout> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, PlaceholderStyleModifier>, _FrameLayout>, (void (*)(void))lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, PlaceholderStyleModifier> and conformance <> ModifiedContent<A, B>);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, PlaceholderStyleModifier> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, PlaceholderStyleModifier> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, PlaceholderStyleModifier> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, PlaceholderStyleModifier>);
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&demangling cache variable for type metadata for _ConditionalContent<ModifiedContent<ModifiedContent<ArtworkImage.Placeholder.View, _PreferenceWritingModifier<RadiosityEnabledPreferenceKey>>, _FrameLayout>, GeometryReader<ModifiedContent<ModifiedContent<ArtworkImage.Placeholder.View, _PreferenceWritingModifier<RadiosityEnabledPreferenceKey>>, _FrameLayout>>>);
    lazy protocol witness table accessor for type _ConditionalContent<ModifiedContent<ModifiedContent<ArtworkImage.Placeholder.View, _PreferenceWritingModifier<RadiosityEnabledPreferenceKey>>, _FrameLayout>, GeometryReader<ModifiedContent<ModifiedContent<ArtworkImage.Placeholder.View, _PreferenceWritingModifier<RadiosityEnabledPreferenceKey>>, _FrameLayout>>> and conformance <> _ConditionalContent<A, B>();
    swift_getOpaqueTypeConformance2();
    lazy protocol witness table accessor for type Collaboration.Management.Model and conformance Collaboration.Management.Model(&lazy protocol witness table cache variable for type PlaceholderStyleModifier and conformance PlaceholderStyleModifier, (void (*)(uint64_t))type metadata accessor for PlaceholderStyleModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, PlaceholderStyleModifier> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

double specialized static PlaylistCurators.View.Specs.avatarLength(for:)(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UserInterfaceSizeClass();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for (UserInterfaceSizeClass?, UserInterfaceSizeClass?))
     - 8;
  __chkstk_darwin();
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UserInterfaceSizeClass?);
  __chkstk_darwin();
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v12 = (char *)&v18 - v11;
  (*(void (**)(char *, void, uint64_t))(v3 + 104))((char *)&v18 - v11, enum case for UserInterfaceSizeClass.compact(_:), v2);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v3 + 56))(v12, 0, 1, v2);
  uint64_t v13 = (uint64_t)&v8[*(int *)(v6 + 56)];
  outlined init with copy of (String, Any)(a1, (uint64_t)v8, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  outlined init with copy of (String, Any)((uint64_t)v12, v13, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
  uint64_t v14 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  if (v14((uint64_t)v8, 1, v2) == 1)
  {
    outlined destroy of TaskPriority?((uint64_t)v12, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
    if (v14(v13, 1, v2) == 1)
    {
      outlined destroy of TaskPriority?((uint64_t)v8, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
      return 25.0;
    }
  }
  else
  {
    outlined init with copy of (String, Any)((uint64_t)v8, (uint64_t)v10, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
    if (v14(v13, 1, v2) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 32))(v5, v13, v2);
      lazy protocol witness table accessor for type Collaboration.Management.Model and conformance Collaboration.Management.Model(&lazy protocol witness table cache variable for type UserInterfaceSizeClass and conformance UserInterfaceSizeClass, (void (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass);
      char v16 = dispatch thunk of static Equatable.== infix(_:_:)();
      char v17 = *(void (**)(char *, uint64_t))(v3 + 8);
      v17(v5, v2);
      outlined destroy of TaskPriority?((uint64_t)v12, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
      v17(v10, v2);
      outlined destroy of TaskPriority?((uint64_t)v8, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
      double result = 25.0;
      if (v16) {
        return result;
      }
      return 29.0;
    }
    outlined destroy of TaskPriority?((uint64_t)v12, &demangling cache variable for type metadata for UserInterfaceSizeClass?);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v10, v2);
  }
  outlined destroy of TaskPriority?((uint64_t)v8, (uint64_t *)&demangling cache variable for type metadata for (UserInterfaceSizeClass?, UserInterfaceSizeClass?));
  return 29.0;
}

uint64_t block_copy_helper_65(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_65()
{
  return swift_release();
}

uint64_t partial apply for closure #1 in closure #1 in Collaboration.Management.View.body.getter@<X0>(char *a1@<X8>)
{
  return closure #1 in closure #1 in Collaboration.Management.View.body.getter(*(void *)(v1 + 16), a1);
}

uint64_t sub_1003CEF24@<X0>(void *a1@<X8>)
{
  uint64_t result = EnvironmentValues.defaultMinListRowHeight.getter();
  *a1 = v3;
  return result;
}

uint64_t sub_1003CEF50()
{
  return EnvironmentValues.defaultMinListRowHeight.setter();
}

uint64_t objectdestroyTm_14()
{
  uint64_t v1 = (int *)type metadata accessor for Collaboration.Management.View(0);
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = v0 + ((v2 + 16) & ~v2);
  swift_release();
  uint64_t v4 = v3 + v1[5];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DismissAction>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for DismissAction();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = v3 + v1[6];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  uint64_t v8 = v3 + v1[7];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<OpenURLAction>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = type metadata accessor for OpenURLAction();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  }
  else
  {
    swift_release();
  }

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t partial apply for closure #2 in closure #1 in Collaboration.Management.View.body.getter()
{
  return partial apply for closure #1 in closure #3 in Collaboration.Management.View.CollaboratorRowView.body.getter(type metadata accessor for Collaboration.Management.View, (uint64_t (*)(uint64_t))closure #2 in closure #1 in Collaboration.Management.View.body.getter);
}

uint64_t partial apply for closure #1 in closure #1 in closure #1 in Collaboration.Management.View.body.getter@<X0>(uint64_t a1@<X8>)
{
  return closure #1 in closure #1 in closure #1 in Collaboration.Management.View.body.getter(*(void *)(v1 + 16), a1);
}

uint64_t lazy protocol witness table accessor for type ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>? and conformance <A> A?(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Collaboration.Management.QRCodeView, _SafeAreaRegionsIgnoringLayout>, _BackgroundModifier<ClearBackground>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Collaboration.Management.QRCodeView, _SafeAreaRegionsIgnoringLayout>, _BackgroundModifier<ClearBackground>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Collaboration.Management.QRCodeView, _SafeAreaRegionsIgnoringLayout>, _BackgroundModifier<ClearBackground>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Collaboration.Management.QRCodeView, _SafeAreaRegionsIgnoringLayout>, _BackgroundModifier<ClearBackground>>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<Collaboration.Management.QRCodeView, _SafeAreaRegionsIgnoringLayout> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<Collaboration.Management.QRCodeView, _SafeAreaRegionsIgnoringLayout>, (void (*)(void))lazy protocol witness table accessor for type Collaboration.Management.QRCodeView and conformance Collaboration.Management.QRCodeView);
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type _BackgroundModifier<ClearBackground> and conformance _BackgroundModifier<A>, &demangling cache variable for type metadata for _BackgroundModifier<ClearBackground>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Collaboration.Management.QRCodeView, _SafeAreaRegionsIgnoringLayout>, _BackgroundModifier<ClearBackground>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type TupleView<(<<opaque return type of View.accessibilityElement(children:)>>.0, ForEach<[Playlist.Collaborator], MusicItemID, Collaboration.Management.View.CollaboratorRowView>)>? and conformance <A> A?()
{
  unint64_t result = lazy protocol witness table cache variable for type TupleView<(<<opaque return type of View.accessibilityElement(children:)>>.0, ForEach<[Playlist.Collaborator], MusicItemID, Collaboration.Management.View.CollaboratorRowView>)>? and conformance <A> A?;
  if (!lazy protocol witness table cache variable for type TupleView<(<<opaque return type of View.accessibilityElement(children:)>>.0, ForEach<[Playlist.Collaborator], MusicItemID, Collaboration.Management.View.CollaboratorRowView>)>? and conformance <A> A?)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for TupleView<(<<opaque return type of View.accessibilityElement(children:)>>.0, ForEach<[Playlist.Collaborator], MusicItemID, Collaboration.Management.View.CollaboratorRowView>)>?);
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type TupleView<(<<opaque return type of View.accessibilityElement(children:)>>.0, ForEach<[Playlist.Collaborator], MusicItemID, Collaboration.Management.View.CollaboratorRowView>)> and conformance TupleView<A>, &demangling cache variable for type metadata for TupleView<(<<opaque return type of View.accessibilityElement(children:)>>.0, ForEach<[Playlist.Collaborator], MusicItemID, Collaboration.Management.View.CollaboratorRowView>)>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type TupleView<(<<opaque return type of View.accessibilityElement(children:)>>.0, ForEach<[Playlist.Collaborator], MusicItemID, Collaboration.Management.View.CollaboratorRowView>)>? and conformance <A> A?);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type Section<<<opaque return type of View.fullScreenCover<A>(isPresented:onDismiss:content:)>>.0, TupleView<(<<opaque return type of View.accessibilityElement(children:)>>.0, ForEach<[Playlist.Collaborator], MusicItemID, Collaboration.Management.View.CollaboratorRowView>)>?, EmptyView> and conformance <> Section<A, B, C>()
{
  unint64_t result = lazy protocol witness table cache variable for type Section<<<opaque return type of View.fullScreenCover<A>(isPresented:onDismiss:content:)>>.0, TupleView<(<<opaque return type of View.accessibilityElement(children:)>>.0, ForEach<[Playlist.Collaborator], MusicItemID, Collaboration.Management.View.CollaboratorRowView>)>?, EmptyView> and conformance <> Section<A, B, C>;
  if (!lazy protocol witness table cache variable for type Section<<<opaque return type of View.fullScreenCover<A>(isPresented:onDismiss:content:)>>.0, TupleView<(<<opaque return type of View.accessibilityElement(children:)>>.0, ForEach<[Playlist.Collaborator], MusicItemID, Collaboration.Management.View.CollaboratorRowView>)>?, EmptyView> and conformance <> Section<A, B, C>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Section<<<opaque return type of View.fullScreenCover<A>(isPresented:onDismiss:content:)>>.0, TupleView<(<<opaque return type of View.accessibilityElement(children:)>>.0, ForEach<[Playlist.Collaborator], MusicItemID, Collaboration.Management.View.CollaboratorRowView>)>?, EmptyView>);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, CornerRadiusModifier>, BorderViewModifier>, _ShadowEffect>, Text, TupleView<(ModifiedContent<ModifiedContent<HStack<TupleView<(<<opaque return type of View.sheet<A>(isPresented:onDismiss:content:)>>.0, ModifiedContent<ModifiedContent<Collaboration.Management.View.Share.Button, _EnvironmentKeyTransformModifier<Bool>>, _TransactionModifier>?)>>, _FixedSizeLayout>, _PaddingLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Group<_ConditionalContent<HStack<TupleView<(ProgressView<EmptyView, EmptyView>, Text)>>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<OpenURLAction>>>?>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Int?>>, _FixedSizeLayout>, _For);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Collaboration.Management.QRCodeView, _SafeAreaRegionsIgnoringLayout>, _BackgroundModifier<ClearBackground>>?);
    lazy protocol witness table accessor for type ModifiedContent<VStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, CornerRadiusModifier>, BorderViewModifier>, _ShadowEffect>, Text, TupleView<(ModifiedContent<ModifiedContent<HStack<TupleView<(<<opaque return type of View.sheet<A>(isPresented:onDismiss:content:)>>.0, ModifiedContent<ModifiedContent<Collaboration.Management.View.Share.Button, _EnvironmentKeyTransformModifier<Bool>>, _TransactionModifier>?)>>, _FixedSizeLayout>, _PaddingLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Group<_ConditionalContent<HStack<TupleView<(ProgressView<EmptyView, EmptyView>, Text)>>, ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<OpenURLAction>>>?>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Int?>>, _FixedSizeLayout>, _Foreg();
    lazy protocol witness table accessor for type ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>? and conformance <A> A?(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Collaboration.Management.QRCodeView, _SafeAreaRegionsIgnoringLayout>, _BackgroundModifier<ClearBackground>>? and conformance <A> A?, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Collaboration.Management.QRCodeView, _SafeAreaRegionsIgnoringLayout>, _BackgroundModifier<ClearBackground>>?, (void (*)(void))lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Collaboration.Management.QRCodeView, _SafeAreaRegionsIgnoringLayout>, _BackgroundModifier<ClearBackground>> and conformance <> ModifiedContent<A, B>);
    swift_getOpaqueTypeConformance2();
    lazy protocol witness table accessor for type TupleView<(<<opaque return type of View.accessibilityElement(children:)>>.0, ForEach<[Playlist.Collaborator], MusicItemID, Collaboration.Management.View.CollaboratorRowView>)>? and conformance <A> A?();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Section<<<opaque return type of View.fullScreenCover<A>(isPresented:onDismiss:content:)>>.0, TupleView<(<<opaque return type of View.accessibilityElement(children:)>>.0, ForEach<[Playlist.Collaborator], MusicItemID, Collaboration.Management.View.CollaboratorRowView>)>?, EmptyView> and conformance <> Section<A, B, C>);
  }
  return result;
}

uint64_t partial apply for closure #8 in closure #1 in closure #1 in Collaboration.Management.View.body.getter@<X0>(uint64_t a1@<X8>)
{
  return closure #8 in closure #1 in closure #1 in Collaboration.Management.View.body.getter(*(void *)(v1 + 16), a1);
}

unint64_t lazy protocol witness table accessor for type _ConditionalContent<_ConditionalContent<Text, Text>, Text> and conformance <> _ConditionalContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type _ConditionalContent<_ConditionalContent<Text, Text>, Text> and conformance <> _ConditionalContent<A, B>;
  if (!lazy protocol witness table cache variable for type _ConditionalContent<_ConditionalContent<Text, Text>, Text> and conformance <> _ConditionalContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for _ConditionalContent<_ConditionalContent<Text, Text>, Text>);
    lazy protocol witness table accessor for type _ConditionalContent<Text, Text> and conformance <> _ConditionalContent<A, B>((unint64_t *)&lazy protocol witness table cache variable for type _ConditionalContent<Text, Text> and conformance <> _ConditionalContent<A, B>, &demangling cache variable for type metadata for _ConditionalContent<Text, Text>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type _ConditionalContent<_ConditionalContent<Text, Text>, Text> and conformance <> _ConditionalContent<A, B>);
  }
  return result;
}

uint64_t partial apply for closure #3 in closure #1 in closure #1 in Collaboration.Management.View.body.getter@<X0>(uint64_t a1@<X8>)
{
  return closure #3 in closure #1 in closure #1 in closure #1 in Collaboration.Management.View.body.getter(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t partial apply for closure #6 in closure #1 in closure #1 in Collaboration.Management.View.body.getter()
{
  return closure #6 in closure #1 in closure #1 in Collaboration.Management.View.body.getter(*(void *)(v0 + 16));
}

unint64_t lazy protocol witness table accessor for type ForEach<[Playlist.Collaborator], MusicItemID, Collaboration.Management.View.CollaboratorRowView> and conformance <> ForEach<A, B, C>()
{
  unint64_t result = lazy protocol witness table cache variable for type ForEach<[Playlist.Collaborator], MusicItemID, Collaboration.Management.View.CollaboratorRowView> and conformance <> ForEach<A, B, C>;
  if (!lazy protocol witness table cache variable for type ForEach<[Playlist.Collaborator], MusicItemID, Collaboration.Management.View.CollaboratorRowView> and conformance <> ForEach<A, B, C>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ForEach<[Playlist.Collaborator], MusicItemID, Collaboration.Management.View.CollaboratorRowView>);
    lazy protocol witness table accessor for type Collaboration.Management.Model and conformance Collaboration.Management.Model(&lazy protocol witness table cache variable for type Collaboration.Management.View.CollaboratorRowView and conformance Collaboration.Management.View.CollaboratorRowView, (void (*)(uint64_t))type metadata accessor for Collaboration.Management.View.CollaboratorRowView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ForEach<[Playlist.Collaborator], MusicItemID, Collaboration.Management.View.CollaboratorRowView> and conformance <> ForEach<A, B, C>);
  }
  return result;
}

uint64_t partial apply for closure #5 in closure #1 in closure #1 in Collaboration.Management.View.body.getter@<X0>(uint64_t a1@<X8>)
{
  return closure #5 in closure #1 in closure #1 in Collaboration.Management.View.body.getter(*(void *)(v1 + 16), a1);
}

uint64_t partial apply for closure #1 in closure #5 in closure #1 in closure #1 in Collaboration.Management.View.body.getter()
{
  return partial apply for closure #1 in closure #3 in Collaboration.Management.View.CollaboratorRowView.body.getter(type metadata accessor for Collaboration.Management.View, closure #1 in closure #5 in closure #1 in closure #1 in Collaboration.Management.View.body.getter);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Text, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Text, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Text, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Text, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>);
    lazy protocol witness table accessor for type _ConditionalContent<Text, Text> and conformance <> _ConditionalContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<Text, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<Text, _FlexFrameLayout>);
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Color?> and conformance _EnvironmentKeyWritingModifier<A>, (uint64_t *)&demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Color?>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Text, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t lazy protocol witness table accessor for type _ConditionalContent<Text, Text> and conformance <> _ConditionalContent<A, B>(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t partial apply for closure #3 in closure #5 in closure #1 in closure #1 in Collaboration.Management.View.body.getter@<X0>(uint64_t a1@<X8>)
{
  return closure #3 in closure #5 in closure #1 in closure #1 in Collaboration.Management.View.body.getter(*(void *)(v1 + 16), a1);
}

uint64_t partial apply for closure #1 in closure #1 in closure #8 in closure #1 in closure #1 in Collaboration.Management.View.body.getter@<X0>(BOOL *a1@<X8>)
{
  type metadata accessor for Collaboration.Management.View(0);

  return closure #1 in closure #1 in closure #8 in closure #1 in closure #1 in Collaboration.Management.View.body.getter(a1);
}

uint64_t objectdestroy_243Tm()
{
  uint64_t v1 = (int *)type metadata accessor for Collaboration.Management.View(0);
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  swift_unknownObjectRelease();
  uint64_t v3 = v0 + ((v2 + 32) & ~v2);
  swift_release();
  uint64_t v4 = v3 + v1[5];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DismissAction>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for DismissAction();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = v3 + v1[6];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<DynamicTypeSize>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  uint64_t v8 = v3 + v1[7];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Environment<OpenURLAction>.Content);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = type metadata accessor for OpenURLAction();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  }
  else
  {
    swift_release();
  }

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t partial apply for closure #2 in closure #1 in closure #8 in closure #1 in closure #1 in Collaboration.Management.View.body.getter(char *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for Collaboration.Management.View(0) - 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return closure #2 in closure #1 in closure #8 in closure #1 in closure #1 in Collaboration.Management.View.body.getter(a1, v4, v5, v6);
}

uint64_t sub_1003CFBFC()
{
  return objectdestroy_165Tm();
}

uint64_t partial apply for closure #1 in Collaboration.Management.Model.updateShareOption(isOpen:)(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  char v7 = *(unsigned char *)(v1 + 40);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = partial apply for closure #1 in static MusicEngagementExtension.performRequest(with:completion:);
  return closure #1 in Collaboration.Management.Model.updateShareOption(isOpen:)(a1, v4, v5, v6, v7);
}

uint64_t partial apply for closure #2 in closure #2 in closure #1 in closure #1 in Collaboration.Management.View.body.getter@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for Collaboration.Management.View(0);

  return closure #2 in closure #2 in closure #1 in closure #1 in Collaboration.Management.View.body.getter(a1);
}

uint64_t partial apply for closure #2 in closure #2 in closure #1 in closure #2 in closure #1 in closure #1 in Collaboration.Management.View.body.getter(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for Collaboration.Management.View(0) - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return closure #2 in closure #2 in closure #1 in closure #2 in closure #1 in closure #1 in Collaboration.Management.View.body.getter(a1, v4);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<OpenURLAction>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<OpenURLAction>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<OpenURLAction>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<OpenURLAction>>);
    lazy protocol witness table accessor for type ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<OpenURLAction> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<OpenURLAction>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>, _EnvironmentKeyWritingModifier<OpenURLAction>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>>);
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Color?> and conformance _EnvironmentKeyWritingModifier<A>, (uint64_t *)&demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Color?>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<Text, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t sub_1003CFF00()
{
  return objectdestroy_165Tm();
}

uint64_t objectdestroy_165Tm()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in Collaboration.Management.Model.resetInvitationURL()(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  char v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  void *v7 = v2;
  v7[1] = closure #3 in static Actions.ReportConcern.action(context:);
  return closure #1 in Collaboration.Management.Model.resetInvitationURL()(a1, v4, v5, v6);
}

uint64_t partial apply for closure #1 in closure #1 in closure #1 in closure #2 in closure #1 in closure #1 in Collaboration.Management.View.body.getter()
{
  return partial apply for closure #1 in closure #3 in Collaboration.Management.View.CollaboratorRowView.body.getter(type metadata accessor for Collaboration.Management.View, closure #1 in closure #1 in closure #1 in closure #2 in closure #1 in closure #1 in Collaboration.Management.View.body.getter);
}

uint64_t sub_1003D0050()
{
  return swift_deallocObject();
}

unsigned char *partial apply for closure #1 in View.disabled(_:)(unsigned char *a1)
{
  return closure #1 in View.disabled(_:)(a1, *(unsigned char *)(v1 + 16));
}

uint64_t partial apply for closure #2 in closure #1 in closure #1 in closure #2 in closure #1 in closure #1 in Collaboration.Management.View.body.getter@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for Collaboration.Management.View(0);

  return closure #2 in closure #1 in closure #1 in closure #2 in closure #1 in closure #1 in Collaboration.Management.View.body.getter(a1);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<Collaboration.Management.View.Share.Button, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<Collaboration.Management.View.Share.Button, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<Collaboration.Management.View.Share.Button, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<Collaboration.Management.View.Share.Button, _EnvironmentKeyTransformModifier<Bool>>);
    lazy protocol witness table accessor for type Collaboration.Management.Model and conformance Collaboration.Management.Model(&lazy protocol witness table cache variable for type Collaboration.Management.View.Share.Button and conformance Collaboration.Management.View.Share.Button, (void (*)(uint64_t))type metadata accessor for Collaboration.Management.View.Share.Button);
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type _EnvironmentKeyTransformModifier<Bool> and conformance _EnvironmentKeyTransformModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyTransformModifier<Bool>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<Collaboration.Management.View.Share.Button, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t partial apply for closure #3 in closure #1 in closure #1 in closure #2 in closure #1 in closure #1 in Collaboration.Management.View.body.getter()
{
  return partial apply for closure #1 in closure #3 in Collaboration.Management.View.CollaboratorRowView.body.getter(type metadata accessor for Collaboration.Management.View, closure #3 in closure #1 in closure #1 in closure #2 in closure #1 in closure #1 in Collaboration.Management.View.body.getter);
}

uint64_t sub_1003D01DC()
{
  return swift_deallocObject();
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _FrameLayout>, _EnvironmentKeyWritingModifier<SymbolRenderingMode?>>, _EnvironmentKeyWritingModifier<Color?>>?, VStack<TupleView<(Text, Text?)>>, TupleView<(Spacer, <<opaque return type of View.alert(isPresented:content:)>>.0)>?)>>, _PaddingLayout>, _TraitWritingModifier<ListRowInsetsTraitKey>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _FrameLayout>, _EnvironmentKeyWritingModifier<SymbolRenderingMode?>>, _EnvironmentKeyWritingModifier<Color?>>?, VStack<TupleView<(Text, Text?)>>, TupleView<(Spacer, <<opaque return type of View.alert(isPresented:content:)>>.0)>?)>>, _PaddingLayout>, _TraitWritingModifier<ListRowInsetsTraitKey>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _FrameLayout>, _EnvironmentKeyWritingModifier<SymbolRenderingMode?>>, _EnvironmentKeyWritingModifier<Color?>>?, VStack<TupleView<(Text, Text?)>>, TupleView<(Spacer, <<opaque return type of View.alert(isPresented:content:)>>.0)>?)>>, _PaddingLayout>, _TraitWritingModifier<ListRowInsetsTraitKey>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _FrameLayout>, _EnvironmentKeyWritingModifier<SymbolRenderingMode?>>, _EnvironmentKeyWritingModifier<Color?>>?, VStack<TupleView<(Text, Text?)>>, TupleView<(Spacer, <<opaque return type of View.alert(isPresented:content:)>>.0)>?)>>, _PaddingLayout>, _TraitWritingModifier<ListRowInsetsTraitKey>>);
    lazy protocol witness table accessor for type ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _FrameLayout>, _EnvironmentKeyWritingModifier<SymbolRenderingMode?>>, _EnvironmentKeyWritingModifier<Color?>>?, VStack<TupleView<(Text, Text?)>>, TupleView<(Spacer, <<opaque return type of View.alert(isPresented:content:)>>.0)>?)>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type _TraitWritingModifier<ListRowInsetsTraitKey> and conformance _TraitWritingModifier<A>, &demangling cache variable for type metadata for _TraitWritingModifier<ListRowInsetsTraitKey>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _FrameLayout>, _EnvironmentKeyWritingModifier<SymbolRenderingMode?>>, _EnvironmentKeyWritingModifier<Color?>>?, VStack<TupleView<(Text, Text?)>>, TupleView<(Spacer, <<opaque return type of View.alert(isPresented:content:)>>.0)>?)>>, _PaddingLayout>, _TraitWritingModifier<ListRowInsetsTraitKey>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _FrameLayout>, _EnvironmentKeyWritingModifier<SymbolRenderingMode?>>, _EnvironmentKeyWritingModifier<Color?>>?, VStack<TupleView<(Text, Text?)>>, TupleView<(Spacer, <<opaque return type of View.alert(isPresented:content:)>>.0)>?)>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _FrameLayout>, _EnvironmentKeyWritingModifier<SymbolRenderingMode?>>, _EnvironmentKeyWritingModifier<Color?>>?, VStack<TupleView<(Text, Text?)>>, TupleView<(Spacer, <<opaque return type of View.alert(isPresented:content:)>>.0)>?)>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _FrameLayout>, _EnvironmentKeyWritingModifier<SymbolRenderingMode?>>, _EnvironmentKeyWritingModifier<Color?>>?, VStack<TupleView<(Text, Text?)>>, TupleView<(Spacer, <<opaque return type of View.alert(isPresented:content:)>>.0)>?)>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _FrameLayout>, _EnvironmentKeyWritingModifier<SymbolRenderingMode?>>, _EnvironmentKeyWritingModifier<Color?>>?, VStack<TupleView<(Text, Text?)>>, TupleView<(Spacer, <<opaque return type of View.alert(isPresented:content:)>>.0)>?)>>, _PaddingLayout>);
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _FrameLayout>, _EnvironmentKeyWritingModifier<SymbolRenderingMode?>>, _EnvironmentKeyWritingModifier<Color?>>?, VStack<TupleView<(Text, Text?)>>, TupleView<(Spacer, <<opaque return type of View.alert(isPresented:content:)>>.0)>?)>> and conformance HStack<A>, &demangling cache variable for type metadata for HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _FrameLayout>, _EnvironmentKeyWritingModifier<SymbolRenderingMode?>>, _EnvironmentKeyWritingModifier<Color?>>?, VStack<TupleView<(Text, Text?)>>, TupleView<(Spacer, <<opaque return type of View.alert(isPresented:content:)>>.0)>?)>>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _FrameLayout>, _EnvironmentKeyWritingModifier<SymbolRenderingMode?>>, _EnvironmentKeyWritingModifier<Color?>>?, VStack<TupleView<(Text, Text?)>>, TupleView<(Spacer, <<opaque return type of View.alert(isPresented:content:)>>.0)>?)>>, _PaddingLayout> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type _AlignmentWritingModifier and conformance _AlignmentWritingModifier()
{
  unint64_t result = lazy protocol witness table cache variable for type _AlignmentWritingModifier and conformance _AlignmentWritingModifier;
  if (!lazy protocol witness table cache variable for type _AlignmentWritingModifier and conformance _AlignmentWritingModifier)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type _AlignmentWritingModifier and conformance _AlignmentWritingModifier);
  }
  return result;
}

uint64_t partial apply for closure #1 in closure #6 in closure #1 in closure #1 in Collaboration.Management.View.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for Collaboration.Management.View(0) - 8);
  return closure #3 in closure #1 in closure #1 in closure #1 in Collaboration.Management.View.body.getter(a1, v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)), a2);
}

uint64_t sub_1003D03F8()
{
  return EnvironmentValues.symbolRenderingMode.getter();
}

uint64_t partial apply for closure #2 in closure #1 in closure #1 in closure #1 in closure #1 in Collaboration.Management.View.body.getter()
{
  return partial apply for closure #1 in closure #3 in Collaboration.Management.View.CollaboratorRowView.body.getter(type metadata accessor for Collaboration.Management.View, closure #2 in closure #1 in closure #1 in closure #1 in closure #1 in Collaboration.Management.View.body.getter);
}

uint64_t partial apply for closure #1 in closure #3 in Collaboration.Management.View.CollaboratorRowView.body.getter(uint64_t (*a1)(void), uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = *(void *)(a1(0) - 8);
  uint64_t v4 = v2 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return a2(v4);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Font?>>);
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&_s7SwiftUI6ButtonVyAA4TextVGACyxGAA4ViewAAWL_0, (uint64_t *)&_s7SwiftUI6ButtonVyAA4TextVGMD_0);
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>((unint64_t *)&_s7SwiftUI30_EnvironmentKeyWritingModifierVyAA4FontVSgGACyxGAA04ViewF0AAWL_0, &_s7SwiftUI30_EnvironmentKeyWritingModifierVyAA4FontVSgGMD_0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Capsule>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Capsule>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Capsule>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Capsule>>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>, _BackgroundStyleModifier<Color>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type _ClipEffect<Capsule> and conformance _ClipEffect<A>, &demangling cache variable for type metadata for _ClipEffect<Capsule>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Capsule>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>, _BackgroundStyleModifier<Color>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>, _BackgroundStyleModifier<Color>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>, _BackgroundStyleModifier<Color>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>, _BackgroundStyleModifier<Color>>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>, (void (*)(void))lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout> and conformance <> ModifiedContent<A, B>);
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>((unint64_t *)&lazy protocol witness table cache variable for type _BackgroundStyleModifier<Color> and conformance _BackgroundStyleModifier<A>, &demangling cache variable for type metadata for _BackgroundStyleModifier<Color>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _PaddingLayout>, _BackgroundStyleModifier<Color>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout> and conformance <> ModifiedContent<A, B>()
{
  return lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, (void (*)(void))lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>>);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Font?>>);
    lazy protocol witness table accessor for type ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>();
    swift_getOpaqueTypeConformance2();
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Color?> and conformance _EnvironmentKeyWritingModifier<A>, (uint64_t *)&demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Color?>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.fontWeight(_:)>>.0, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t partial apply for closure #3 in closure #1 in closure #1 in closure #1 in closure #1 in Collaboration.Management.View.body.getter@<X0>(uint64_t a1@<X8>)
{
  return closure #3 in closure #1 in closure #1 in closure #1 in closure #1 in Collaboration.Management.View.body.getter(v1[2], v1[3], v1[4], a1);
}

uint64_t partial apply for closure #1 in closure #3 in closure #5 in closure #1 in closure #1 in Collaboration.Management.View.body.getter()
{
  return closure #1 in closure #3 in closure #1 in closure #1 in closure #1 in closure #1 in Collaboration.Management.View.body.getter();
}

uint64_t sub_1003D0864()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in Collaboration.Management.Model.init(manager:playlist:)()
{
  return closure #1 in Collaboration.Management.Model.init(manager:playlist:)();
}

uint64_t sub_1003D08A4()
{
  uint64_t v1 = type metadata accessor for Playlist();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();

  return swift_deallocObject();
}

uint64_t partial apply for closure #2 in Collaboration.Management.Model.init(manager:playlist:)(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for Playlist() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v8 = v1 + v5;
  uint64_t v9 = *(void *)(v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = closure #3 in static Actions.ReportConcern.action(context:);
  return closure #2 in Collaboration.Management.Model.init(manager:playlist:)(a1, v6, v7, v8, v9);
}

uint64_t sub_1003D0AB0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_0Tm(a1, a1[3]);
  uint64_t result = dispatch thunk of LibraryPlaylistFilter.id.getter();
  *a2 = result;
  a2[1] = v4;
  return result;
}

unint64_t _sSo17OS_dispatch_queueCAB7Combine9Scheduler8DispatchWl_0()
{
  unint64_t result = _sSo17OS_dispatch_queueCAB7Combine9Scheduler8DispatchWL_1;
  if (!_sSo17OS_dispatch_queueCAB7Combine9Scheduler8DispatchWL_1)
  {
    type metadata accessor for UIMenu(255, (unint64_t *)&_sSo17OS_dispatch_queueCML_1);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&_sSo17OS_dispatch_queueCAB7Combine9Scheduler8DispatchWL_1);
  }
  return result;
}

uint64_t partial apply for closure #1 in closure #2 in Collaboration.Management.Model.init(manager:playlist:)(void (*a1)(char *, uint64_t, uint64_t))
{
  return closure #1 in closure #2 in Collaboration.Management.Model.init(manager:playlist:)(a1, v1);
}

uint64_t sub_1003D0B68()
{
  return Playlist.collaboration.getter();
}

unsigned char *storeEnumTagSinglePayload for Collaboration.Management.View.Share(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1003D0C58);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

void *type metadata accessor for Collaboration.Management.View.Moderation()
{
  return &unk_100547680;
}

uint64_t destroy for Collaboration.Management.View.Moderation.Button()
{
  return swift_release();
}

uint64_t initializeBufferWithCopyOfBuffer for Collaboration.Management.View.Moderation.Button(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for Collaboration.Management.View.Moderation.Button(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy24_8_2(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for Collaboration.Management.View.Moderation.Button(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  return a1;
}

void *type metadata accessor for Collaboration.Management.View.Moderation.Button()
{
  return &unk_1005476F8;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.accessibilityElement(children:)>>.0, AccessibilityAttachmentModifier> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.accessibilityElement(children:)>>.0, AccessibilityAttachmentModifier> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.accessibilityElement(children:)>>.0, AccessibilityAttachmentModifier> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.accessibilityElement(children:)>>.0, AccessibilityAttachmentModifier>);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for <<opaque return type of View.alert(isPresented:content:)>>.0);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for <<opaque return type of View.swipeActions<A>(edge:allowsFullSwipe:content:)>>.0);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, CornerRadiusModifier>, _FrameLayout>, _AspectRatioLayout>?, VStack<TupleView<(Text?, _ConditionalContent<Text, Text>?)>>, Spacer, _ConditionalContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FrameLayout>, TupleView<(Collaboration.Management.View.Moderation.Button, Collaboration.Management.View.Moderation.Button)>>?)>>, _ContentShapeModifier<Rectangle>>);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>?);
    lazy protocol witness table accessor for type ModifiedContent<HStack<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, CornerRadiusModifier>, _FrameLayout>, _AspectRatioLayout>?, VStack<TupleView<(Text?, _ConditionalContent<Text, Text>?)>>, Spacer, _ConditionalContent<ModifiedContent<ProgressView<EmptyView, EmptyView>, _FrameLayout>, TupleView<(Collaboration.Management.View.Moderation.Button, Collaboration.Management.View.Moderation.Button)>>?)>>, _ContentShapeModifier<Rectangle>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>? and conformance <A> A?(&lazy protocol witness table cache variable for type ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>? and conformance <A> A?, &demangling cache variable for type metadata for ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>>?, (void (*)(void))lazy protocol witness table accessor for type ModifiedContent<Button<Text>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    lazy protocol witness table accessor for type Collaboration.Management.Model and conformance Collaboration.Management.Model(&_s7SwiftUI31AccessibilityAttachmentModifierVAcA04ViewE0AAWL_1, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.accessibilityElement(children:)>>.0, AccessibilityAttachmentModifier> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<ModifiedContent<_VariadicView.Tree<_LayoutRoot<VStackLayout>, TupleView<(Spacer, <<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, Text, Spacer)>>, _OffsetEffect>, _FlexFrameLayout>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>, _InsettableBackgroundShapeModifier<Color, RoundedRectangle>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<ModifiedContent<_VariadicView.Tree<_LayoutRoot<VStackLayout>, TupleView<(Spacer, <<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, Text, Spacer)>>, _OffsetEffect>, _FlexFrameLayout>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>, _InsettableBackgroundShapeModifier<Color, RoundedRectangle>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<ModifiedContent<_VariadicView.Tree<_LayoutRoot<VStackLayout>, TupleView<(Spacer, <<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, Text, Spacer)>>, _OffsetEffect>, _FlexFrameLayout>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>, _InsettableBackgroundShapeModifier<Color, RoundedRectangle>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<ModifiedContent<_VariadicView.Tree<_LayoutRoot<VStackLayout>, TupleView<(Spacer, <<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, Text, Spacer)>>, _OffsetEffect>, _FlexFrameLayout>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>, _InsettableBackgroundShapeModifier<Color, RoundedRectangle>>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Button<ModifiedContent<ModifiedContent<_VariadicView.Tree<_LayoutRoot<VStackLayout>, TupleView<(Spacer, <<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, Text, Spacer)>>, _OffsetEffect>, _FlexFrameLayout>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type _InsettableBackgroundShapeModifier<Color, RoundedRectangle> and conformance _InsettableBackgroundShapeModifier<A, B>, &demangling cache variable for type metadata for _InsettableBackgroundShapeModifier<Color, RoundedRectangle>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<Button<ModifiedContent<ModifiedContent<_VariadicView.Tree<_LayoutRoot<VStackLayout>, TupleView<(Spacer, <<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, Text, Spacer)>>, _OffsetEffect>, _FlexFrameLayout>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>, _InsettableBackgroundShapeModifier<Color, RoundedRectangle>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Button<ModifiedContent<ModifiedContent<_VariadicView.Tree<_LayoutRoot<VStackLayout>, TupleView<(Spacer, <<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, Text, Spacer)>>, _OffsetEffect>, _FlexFrameLayout>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Button<ModifiedContent<ModifiedContent<_VariadicView.Tree<_LayoutRoot<VStackLayout>, TupleView<(Spacer, <<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, Text, Spacer)>>, _OffsetEffect>, _FlexFrameLayout>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Button<ModifiedContent<ModifiedContent<_VariadicView.Tree<_LayoutRoot<VStackLayout>, TupleView<(Spacer, <<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, Text, Spacer)>>, _OffsetEffect>, _FlexFrameLayout>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Button<ModifiedContent<ModifiedContent<_VariadicView.Tree<_LayoutRoot<VStackLayout>, TupleView<(Spacer, <<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, Text, Spacer)>>, _OffsetEffect>, _FlexFrameLayout>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>>);
    lazy protocol witness table accessor for type ModifiedContent<Button<ModifiedContent<ModifiedContent<_VariadicView.Tree<_LayoutRoot<VStackLayout>, TupleView<(Spacer, <<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, Text, Spacer)>>, _OffsetEffect>, _FlexFrameLayout>>, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Color?> and conformance _EnvironmentKeyWritingModifier<A>, (uint64_t *)&demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Color?>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Button<ModifiedContent<ModifiedContent<_VariadicView.Tree<_LayoutRoot<VStackLayout>, TupleView<(Spacer, <<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, Text, Spacer)>>, _OffsetEffect>, _FlexFrameLayout>>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<Button<ModifiedContent<ModifiedContent<_VariadicView.Tree<_LayoutRoot<VStackLayout>, TupleView<(Spacer, <<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, Text, Spacer)>>, _OffsetEffect>, _FlexFrameLayout>>, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<Button<ModifiedContent<ModifiedContent<_VariadicView.Tree<_LayoutRoot<VStackLayout>, TupleView<(Spacer, <<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, Text, Spacer)>>, _OffsetEffect>, _FlexFrameLayout>>, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<Button<ModifiedContent<ModifiedContent<_VariadicView.Tree<_LayoutRoot<VStackLayout>, TupleView<(Spacer, <<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, Text, Spacer)>>, _OffsetEffect>, _FlexFrameLayout>>, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<Button<ModifiedContent<ModifiedContent<_VariadicView.Tree<_LayoutRoot<VStackLayout>, TupleView<(Spacer, <<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, Text, Spacer)>>, _OffsetEffect>, _FlexFrameLayout>>, _FlexFrameLayout>);
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type Button<ModifiedContent<ModifiedContent<_VariadicView.Tree<_LayoutRoot<VStackLayout>, TupleView<(Spacer, <<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, Text, Spacer)>>, _OffsetEffect>, _FlexFrameLayout>> and conformance Button<A>, &demangling cache variable for type metadata for Button<ModifiedContent<ModifiedContent<_VariadicView.Tree<_LayoutRoot<VStackLayout>, TupleView<(Spacer, <<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, Text, Spacer)>>, _OffsetEffect>, _FlexFrameLayout>>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<Button<ModifiedContent<ModifiedContent<_VariadicView.Tree<_LayoutRoot<VStackLayout>, TupleView<(Spacer, <<opaque return type of View.dynamicTypeSize<A>(_:)>>.0, Text, Spacer)>>, _OffsetEffect>, _FlexFrameLayout>>, _FlexFrameLayout> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t associated type witness table accessor for View.Body : View in Collaboration.Management.View.Moderation.Button()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t lazy protocol witness table accessor for type Collaboration.Management.View.Moderation and conformance Collaboration.Management.View.Moderation()
{
  unint64_t result = lazy protocol witness table cache variable for type Collaboration.Management.View.Moderation and conformance Collaboration.Management.View.Moderation;
  if (!lazy protocol witness table cache variable for type Collaboration.Management.View.Moderation and conformance Collaboration.Management.View.Moderation)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type Collaboration.Management.View.Moderation and conformance Collaboration.Management.View.Moderation);
  }
  return result;
}

uint64_t sub_1003D1174()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t partial apply for closure #1 in Collaboration.Management.View.Moderation.Button.body.getter()
{
  return closure #1 in Collaboration.Management.View.Moderation.Button.body.getter();
}

uint64_t partial apply for closure #2 in Collaboration.Management.View.Moderation.Button.body.getter@<X0>(uint64_t a1@<X8>)
{
  return closure #2 in Collaboration.Management.View.Moderation.Button.body.getter(*(unsigned char *)(v1 + 16), a1);
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _BackgroundStyleModifier<Color>> and conformance <> ModifiedContent<A, B>();
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>((unint64_t *)&lazy protocol witness table cache variable for type _ClipEffect<Circle> and conformance _ClipEffect<A>, &demangling cache variable for type metadata for _ClipEffect<Circle>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _BackgroundStyleModifier<Color>>, _ClipEffect<Circle>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _BackgroundStyleModifier<Color>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _BackgroundStyleModifier<Color>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _BackgroundStyleModifier<Color>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _BackgroundStyleModifier<Color>>);
    lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout> and conformance <> ModifiedContent<A, B>(&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout> and conformance <> ModifiedContent<A, B>, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, (void (*)(void))lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>);
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>((unint64_t *)&lazy protocol witness table cache variable for type _BackgroundStyleModifier<Color> and conformance _BackgroundStyleModifier<A>, &demangling cache variable for type metadata for _BackgroundStyleModifier<Color>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>, _FrameLayout>, _BackgroundStyleModifier<Color>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>>);
    _s7SwiftUI15ModifiedContentVyAA5ImageVAA30_EnvironmentKeyWritingModifierVyAA4FontVSgGGACyxq_GAA4ViewA2aNRzAA0kI0R_rlWl_0();
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<Color?> and conformance _EnvironmentKeyWritingModifier<A>, (uint64_t *)&demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<Color?>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<ModifiedContent<Image, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<Color?>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

uint64_t sub_1003D13D0()
{
  return EnvironmentValues._buttonBorderShape.getter();
}

uint64_t sub_1003D13F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return key path setter for EnvironmentValues.openURL : EnvironmentValues(a1, a2, a3, a4, (uint64_t (*)(void))&type metadata accessor for ButtonBorderShape, (uint64_t (*)(char *))&EnvironmentValues._buttonBorderShape.setter);
}

uint64_t partial apply for closure #1 in closure #1 in Collaboration.Management.View.Moderation.Button.body.getter()
{
  return (*(uint64_t (**)(void))(v0 + 24))();
}

unint64_t lazy protocol witness table accessor for type ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ButtonBorderShape>> and conformance <> ModifiedContent<A, B>()
{
  unint64_t result = lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ButtonBorderShape>> and conformance <> ModifiedContent<A, B>;
  if (!lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ButtonBorderShape>> and conformance <> ModifiedContent<A, B>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ButtonBorderShape>>);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for Button<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0>);
    type metadata accessor for BorderlessButtonStyle();
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type Button<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0> and conformance Button<A>, &demangling cache variable for type metadata for Button<<<opaque return type of View.dynamicTypeSize<A>(_:)>>.0>);
    lazy protocol witness table accessor for type Collaboration.Management.Model and conformance Collaboration.Management.Model(&lazy protocol witness table cache variable for type BorderlessButtonStyle and conformance BorderlessButtonStyle, (void (*)(uint64_t))&type metadata accessor for BorderlessButtonStyle);
    swift_getOpaqueTypeConformance2();
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>((unint64_t *)&lazy protocol witness table cache variable for type _EnvironmentKeyWritingModifier<ButtonBorderShape> and conformance _EnvironmentKeyWritingModifier<A>, &demangling cache variable for type metadata for _EnvironmentKeyWritingModifier<ButtonBorderShape>);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModifiedContent<<<opaque return type of View.buttonStyle<A>(_:)>>.0, _EnvironmentKeyWritingModifier<ButtonBorderShape>> and conformance <> ModifiedContent<A, B>);
  }
  return result;
}

void Collaboration.Management.ViewController.init(rootView:)()
{
}

uint64_t Collaboration.Flow.Collaborator.init(name:handle:artwork:canCollaborate:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, void *a7@<X8>)
{
  uint64_t v14 = type metadata accessor for Collaboration.Flow.Collaborator(0);
  uint64_t v15 = (uint64_t)a7 + *(int *)(v14 + 24);
  uint64_t v16 = type metadata accessor for Artwork();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
  uint64_t v17 = *(int *)(v14 + 28);
  *((unsigned char *)a7 + v17) = 0;
  *a7 = a1;
  a7[1] = a2;
  a7[2] = a3;
  a7[3] = a4;
  uint64_t result = outlined assign with take of Artwork?(a5, v15);
  *((unsigned char *)a7 + v17) = a6;
  return result;
}

uint64_t type metadata accessor for Collaboration.Flow.Collaborator(uint64_t a1)
{
  return type metadata accessor for Notice.Variant(a1, (uint64_t *)&type metadata singleton initialization cache for Collaboration.Flow.Collaborator);
}

uint64_t outlined assign with take of Artwork?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t Collaboration.Flow.Collaborator.artwork.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for Collaboration.Flow.Collaborator(0);
  return outlined init with copy of (String, Any)(v1 + *(int *)(v3 + 24), a1, (uint64_t *)&_s8MusicKit7ArtworkVSgMD_0);
}

uint64_t Collaboration.Flow.Collaborator.artwork.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for Collaboration.Flow.Collaborator(0) + 24);

  return outlined assign with take of Artwork?(a1, v3);
}

CFRange (__swiftcall *Collaboration.Flow.Collaborator.artwork.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

uint64_t Collaboration.Flow.Collaborator.canCollaborate.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Collaboration.Flow.Collaborator(0) + 28));
}

uint64_t Collaboration.Flow.Collaborator.canCollaborate.setter(char a1)
{
  uint64_t result = type metadata accessor for Collaboration.Flow.Collaborator(0);
  *(unsigned char *)(v1 + *(int *)(result + 28)) = a1;
  return result;
}

CFRange (__swiftcall *Collaboration.Flow.Collaborator.canCollaborate.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

uint64_t Collaboration.Flow.title.getter()
{
  uint64_t v1 = v0;
  v30[0] = type metadata accessor for Playlist.Collaborator();
  uint64_t v2 = *(void *)(v30[0] - 8);
  __chkstk_darwin();
  uint64_t v4 = (char *)v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Locale();
  __chkstk_darwin();
  uint64_t v5 = type metadata accessor for String.LocalizationValue();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v10 = (char *)v30 - v9;
  type metadata accessor for Collaboration.Flow(0);
  __chkstk_darwin();
  uint64_t v12 = (char *)v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of Collaboration.Flow(v1, (uint64_t)v12, type metadata accessor for Collaboration.Flow);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v14 = v2;
      uint64_t v15 = *(void (**)(char *, char *, void))(v2 + 32);
      uint64_t v16 = v30[0];
      v15(v4, v12, v30[0]);
      String.LocalizationValue.init(stringLiteral:)();
      (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, v10, v5);
      if (one-time initialization token for module != -1) {
        swift_once();
      }
      id v17 = (id)static NSBundle.module;
      static Locale.current.getter();
      String.init(localized:table:bundle:locale:comment:)();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v10, v5);
      __swift_instantiateConcreteTypeFromMangledName(&_ss23_ContiguousArrayStorageCys7CVarArg_pGMD_0);
      uint64_t v18 = swift_allocObject();
      *(_OWORD *)(v18 + 16) = xmmword_100493400;
      uint64_t v19 = Playlist.Collaborator.name.getter();
      unint64_t v21 = v20;
      *(void *)(v18 + 56) = &type metadata for String;
      *(void *)(v18 + 64) = _sS2Ss7CVarArg10FoundationWl_0();
      if (v21) {
        uint64_t v22 = v19;
      }
      else {
        uint64_t v22 = 0;
      }
      unint64_t v23 = 0xE000000000000000;
      if (v21) {
        unint64_t v23 = v21;
      }
      *(void *)(v18 + 32) = v22;
      *(void *)(v18 + 40) = v23;
      uint64_t v24 = static String.localizedStringWithFormat(_:_:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v14 + 8))(v4, v16);
    }
    else
    {
      String.LocalizationValue.init(stringLiteral:)();
      (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, v10, v5);
      if (one-time initialization token for module != -1) {
        swift_once();
      }
      id v26 = (id)static NSBundle.module;
      static Locale.current.getter();
      uint64_t v24 = String.init(localized:table:bundle:locale:comment:)();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v10, v5);
    }
  }
  else
  {
    uint64_t v25 = &v12[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Collaboration.Flow.Collaborator?, URL, Bool))
                      + 48)];
    String.LocalizationValue.init(stringLiteral:)();
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, v10, v5);
    if (one-time initialization token for module != -1) {
      swift_once();
    }
    id v27 = (id)static NSBundle.module;
    static Locale.current.getter();
    uint64_t v24 = String.init(localized:table:bundle:locale:comment:)();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v10, v5);
    uint64_t v28 = type metadata accessor for URL();
    (*(void (**)(char *, uint64_t))(*(void *)(v28 - 8) + 8))(v25, v28);
    outlined destroy of TaskPriority?((uint64_t)v12, &demangling cache variable for type metadata for Collaboration.Flow.Collaborator?);
  }
  return v24;
}

Swift::String __swiftcall Collaboration.Flow.subtitle(hasProfileEdit:)(Swift::Bool hasProfileEdit)
{
  BOOL v67 = hasProfileEdit;
  type metadata accessor for String.LocalizationValue.StringInterpolation();
  __chkstk_darwin();
  uint64_t v1 = type metadata accessor for Collaboration.Flow.Collaborator(0);
  uint64_t v65 = *(void *)(v1 - 8);
  uint64_t v66 = v1;
  __chkstk_darwin();
  uint64_t v3 = (Swift::String *)((char *)&v64 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin();
  uint64_t v5 = (Swift::String *)((char *)&v64 - v4);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Collaboration.Flow.Collaborator?, Bool));
  __chkstk_darwin();
  uint64_t v8 = (char *)&v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Collaboration.Flow.Collaborator?);
  __chkstk_darwin();
  uint64_t v10 = (char *)&v64 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Locale();
  __chkstk_darwin();
  uint64_t v68 = (char *)&v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for String.LocalizationValue();
  uint64_t v69 = *(void *)(v12 - 8);
  __chkstk_darwin();
  uint64_t v71 = (char *)&v64 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v15 = (char *)&v64 - v14;
  type metadata accessor for Collaboration.Flow(0);
  __chkstk_darwin();
  id v17 = (char *)&v64 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of Collaboration.Flow((uint64_t)v70, (uint64_t)v17, type metadata accessor for Collaboration.Flow);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    uint64_t v64 = v5;
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Collaboration.Flow.Collaborator?, URL, Bool));
    uint64_t v70 = &v17[*(int *)(v24 + 48)];
    int v25 = v17[*(int *)(v24 + 64)];
    outlined init with take of PresentationSource?((uint64_t)v17, (uint64_t)v10, &demangling cache variable for type metadata for Collaboration.Flow.Collaborator?);
    uint64_t v26 = *(int *)(v6 + 48);
    outlined init with copy of (String, Any)((uint64_t)v10, (uint64_t)v8, &demangling cache variable for type metadata for Collaboration.Flow.Collaborator?);
    v8[v26] = v25;
    uint64_t v27 = (uint64_t)v10;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v65 + 48))(v8, 1, v66) == 1)
    {
      uint64_t v28 = v69;
      uint64_t v29 = (void (**)(char *, char *, uint64_t))(v69 + 16);
      String.LocalizationValue.init(stringLiteral:)();
      (*v29)(v71, v15, v12);
      if (one-time initialization token for module != -1) {
        swift_once();
      }
      id v36 = (id)static NSBundle.module;
      static Locale.current.getter();
      uint64_t v21 = String.init(localized:table:bundle:locale:comment:)();
      unint64_t v23 = v37;
      (*(void (**)(char *, uint64_t))(v28 + 8))(v15, v12);
      outlined destroy of TaskPriority?(v27, &demangling cache variable for type metadata for Collaboration.Flow.Collaborator?);
      goto LABEL_28;
    }
    if (v25)
    {
      uint64_t v33 = v64;
      outlined init with take of Collaboration.Flow.Collaborator((uint64_t)v8, (uint64_t)v64, type metadata accessor for Collaboration.Flow.Collaborator);
      if (v67)
      {
LABEL_19:
        String.LocalizationValue.init(stringLiteral:)();
        uint64_t v38 = v69;
        (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v71, v15, v12);
        if (one-time initialization token for module == -1) {
          goto LABEL_26;
        }
        goto LABEL_34;
      }
      uint64_t countAndFlagsBits = v33[1]._countAndFlagsBits;
      object = v33[1]._object;
      id v41 = v71;
      if (object)
      {
        String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v42._uint64_t countAndFlagsBits = 0x100000000000002ELL;
        v42._object = (void *)0x8000000100475740;
        String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v42);
        String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(*v33);
        v43._uint64_t countAndFlagsBits = 4204576;
        v43._object = (void *)0xE300000000000000;
        String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v43);
        v44._uint64_t countAndFlagsBits = countAndFlagsBits;
        v44._object = object;
        String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v44);
        v45._uint64_t countAndFlagsBits = 0xD000000000000031;
        v45._object = (void *)0x8000000100475770;
        String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v45);
        goto LABEL_25;
      }
      String.LocalizationValue.init(stringLiteral:)();
      uint64_t v57 = v69;
      (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v41, v15, v12);
      if (one-time initialization token for module == -1) {
        goto LABEL_33;
      }
    }
    else
    {
      uint64_t v33 = v3;
      outlined init with take of Collaboration.Flow.Collaborator((uint64_t)v8, (uint64_t)v3, type metadata accessor for Collaboration.Flow.Collaborator);
      if (v67) {
        goto LABEL_19;
      }
      uint64_t v47 = v3[1]._countAndFlagsBits;
      uint64_t v46 = v3[1]._object;
      id v41 = v71;
      if (v46)
      {
        String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v48._uint64_t countAndFlagsBits = 0x100000000000002ALL;
        v48._object = (void *)0x8000000100475650;
        String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v48);
        String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(*v3);
        v49._uint64_t countAndFlagsBits = 4204576;
        v49._object = (void *)0xE300000000000000;
        String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v49);
        v50._uint64_t countAndFlagsBits = v47;
        v50._object = v46;
        String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v50);
        v51._uint64_t countAndFlagsBits = 0xD000000000000048;
        v51._object = (void *)0x8000000100475680;
        String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v51);
LABEL_25:
        String.LocalizationValue.init(stringInterpolation:)();
        uint64_t v38 = v69;
        (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v41, v15, v12);
        if (one-time initialization token for module == -1)
        {
LABEL_26:
          id v52 = (id)static NSBundle.module;
          static Locale.current.getter();
          uint64_t v21 = String.init(localized:table:bundle:locale:comment:)();
          unint64_t v23 = v53;
          (*(void (**)(char *, uint64_t))(v38 + 8))(v15, v12);
LABEL_27:
          outlined destroy of TaskPriority?(v27, &demangling cache variable for type metadata for Collaboration.Flow.Collaborator?);
          outlined destroy of Collaboration.Flow((uint64_t)v33, type metadata accessor for Collaboration.Flow.Collaborator);
LABEL_28:
          uint64_t v54 = type metadata accessor for URL();
          (*(void (**)(char *, uint64_t))(*(void *)(v54 - 8) + 8))(v70, v54);
          goto LABEL_29;
        }
LABEL_34:
        swift_once();
        goto LABEL_26;
      }
      String.LocalizationValue.init(stringLiteral:)();
      uint64_t v57 = v69;
      (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v41, v15, v12);
      if (one-time initialization token for module == -1)
      {
LABEL_33:
        id v58 = (id)static NSBundle.module;
        static Locale.current.getter();
        String.init(localized:table:bundle:locale:comment:)();
        (*(void (**)(char *, uint64_t))(v57 + 8))(v15, v12);
        __swift_instantiateConcreteTypeFromMangledName(&_ss23_ContiguousArrayStorageCys7CVarArg_pGMD_0);
        uint64_t v59 = swift_allocObject();
        *(_OWORD *)(v59 + 16) = xmmword_100493400;
        uint64_t v61 = v33->_countAndFlagsBits;
        uint64_t v60 = v33->_object;
        *(void *)(v59 + 56) = &type metadata for String;
        *(void *)(v59 + 64) = _sS2Ss7CVarArg10FoundationWl_0();
        *(void *)(v59 + 32) = v61;
        *(void *)(v59 + 40) = v60;
        swift_bridgeObjectRetain();
        uint64_t v21 = static String.localizedStringWithFormat(_:_:)();
        unint64_t v23 = v62;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_27;
      }
    }
    swift_once();
    goto LABEL_33;
  }
  if (EnumCaseMultiPayload == 1)
  {
    String.LocalizationValue.init(stringLiteral:)();
    uint64_t v19 = v69;
    (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v71, v15, v12);
    if (one-time initialization token for module != -1) {
      swift_once();
    }
    id v20 = (id)static NSBundle.module;
    static Locale.current.getter();
    uint64_t v21 = String.init(localized:table:bundle:locale:comment:)();
    unint64_t v23 = v22;
    (*(void (**)(char *, uint64_t))(v19 + 8))(v15, v12);
    outlined destroy of Collaboration.Flow((uint64_t)v17, type metadata accessor for Collaboration.Flow);
  }
  else
  {
    uint64_t v30 = v69;
    uint64_t v31 = (void (**)(char *, char *, uint64_t))(v69 + 16);
    uint64_t v32 = v71;
    String.LocalizationValue.init(stringLiteral:)();
    (*v31)(v32, v15, v12);
    if (one-time initialization token for module != -1) {
      swift_once();
    }
    id v34 = (id)static NSBundle.module;
    static Locale.current.getter();
    uint64_t v21 = String.init(localized:table:bundle:locale:comment:)();
    unint64_t v23 = v35;
    (*(void (**)(char *, uint64_t))(v30 + 8))(v15, v12);
  }
LABEL_29:
  uint64_t v55 = v21;
  __int16 v56 = v23;
  result._object = v56;
  result._uint64_t countAndFlagsBits = v55;
  return result;
}

uint64_t Collaboration.Flow.buttonActionTitle.getter()
{
  uint64_t v1 = v0;
  type metadata accessor for Locale();
  __chkstk_darwin();
  uint64_t v2 = type metadata accessor for String.LocalizationValue();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = &v17[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin();
  uint64_t v7 = &v17[-v6];
  type metadata accessor for Collaboration.Flow(0);
  __chkstk_darwin();
  uint64_t v9 = &v17[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  outlined init with copy of Collaboration.Flow(v1, (uint64_t)v9, type metadata accessor for Collaboration.Flow);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      outlined destroy of Collaboration.Flow((uint64_t)v9, type metadata accessor for Collaboration.Flow);
      return 0;
    }
    else
    {
      String.LocalizationValue.init(stringLiteral:)();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v3 + 16))(v5, v7, v2);
      if (one-time initialization token for module != -1) {
        swift_once();
      }
      id v13 = (id)static NSBundle.module;
      static Locale.current.getter();
      uint64_t v11 = String.init(localized:table:bundle:locale:comment:)();
      (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v7, v2);
    }
  }
  else
  {
    uint64_t v12 = &v9[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Collaboration.Flow.Collaborator?, URL, Bool))
                     + 48)];
    String.LocalizationValue.init(stringLiteral:)();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v3 + 16))(v5, v7, v2);
    if (one-time initialization token for module != -1) {
      swift_once();
    }
    id v14 = (id)static NSBundle.module;
    static Locale.current.getter();
    uint64_t v11 = String.init(localized:table:bundle:locale:comment:)();
    (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v7, v2);
    uint64_t v15 = type metadata accessor for URL();
    (*(void (**)(unsigned char *, uint64_t))(*(void *)(v15 - 8) + 8))(v12, v15);
    outlined destroy of TaskPriority?((uint64_t)v9, &demangling cache variable for type metadata for Collaboration.Flow.Collaborator?);
  }
  return v11;
}

uint64_t Collaboration.Flow.View.init(_:playlist:manager:showProfileCreation:profileUpdateHandler:completion:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>)
{
  *a9 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Environment<DismissAction>.Content);
  swift_storeEnumTagMultiPayload();
  uint64_t v16 = (int *)type metadata accessor for Collaboration.Flow.View(0);
  id v17 = (char *)a9 + v16[5];
  closure #1 in variable initialization expression of Collaboration.Flow.View._isRestricted();
  State.init(wrappedValue:)();
  *id v17 = v27;
  *((void *)v17 + 1) = v28;
  uint64_t v18 = (char *)a9 + v16[6];
  State.init(wrappedValue:)();
  *uint64_t v18 = v27;
  *((void *)v18 + 1) = v28;
  uint64_t v19 = (uint64_t *)((char *)a9 + v16[11]);
  id v20 = (char *)a9 + v16[13];
  *(void *)id v20 = implicit closure #2 in implicit closure #1 in variable initialization expression of Collaboration.Flow.View._profileContext;
  *((void *)v20 + 1) = 0;
  unsigned char v20[16] = 0;
  outlined init with take of Collaboration.Flow.Collaborator(a1, (uint64_t)a9 + v16[7], type metadata accessor for Collaboration.Flow);
  uint64_t v21 = (char *)a9 + v16[8];
  uint64_t v22 = type metadata accessor for Playlist();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v21, a2, v22);
  *(uint64_t *)((char *)a9 + v16[9]) = a3;
  *((unsigned char *)a9 + v16[10]) = a4;
  void *v19 = a5;
  v19[1] = a6;
  uint64_t v24 = (uint64_t *)((char *)a9 + v16[12]);
  *uint64_t v24 = a7;
  v24[1] = a8;
  return result;
}

uint64_t (*variable initialization expression of Collaboration.Flow.View._profileContext())()
{
  return implicit closure #2 in implicit closure #1 in variable initialization expression of Collaboration.Flow.View._profileContext;
}

uint64_t Collaboration.Flow.View.body.getter@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = static HorizontalAlignment.center.getter();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 0;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _VariadicView.Tree<_VStackLayout, TupleView<(ModifiedContent<<<opaque return type of View.bold(_:)>>.0, AccessibilityAttachmentModifier>?, ModifiedContent<ModifiedContent<<<opaque return type of View.bold(_:)>>.0, _EnvironmentKeyWritingModifier<TextAlignment>>, _PaddingLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FixedSizeLayout>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>, _PaddingLayout>, ModifiedContent<Collaboration.Flow.ProfileEditingView, _PaddingLayout>?, _ConditionalContent<_ConditionalContent<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Toggle<Text>, _PaddingLayout>, _BackgroundStyleModifier<Material>>, _ClipEffect<RoundedRectangle>>, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedC);
  return closure #1 in Collaboration.Flow.View.body.getter(v1, a1 + *(int *)(v3 + 44));
}

uint64_t closure #1 in Collaboration.Flow.View.body.getter@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v471 = a1;
  uint64_t v443 = a2;
  uint64_t v437 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>, ModifiedContent<Collaboration.Flow.ActionButton, _PaddingLayout>, ModifiedContent<Collaboration.Flow.ActionButton, _PaddingLayout>)>);
  __chkstk_darwin();
  uint64_t v414 = (uint64_t)&v365 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for ArtworkImage.ReusePolicy();
  uint64_t v398 = *(void *)(v3 - 8);
  uint64_t v399 = v3;
  __chkstk_darwin();
  v394 = (char *)&v365 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin();
  v391 = (char *)&v365 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ArtworkImage.ViewModel?);
  __chkstk_darwin();
  v388 = (char *)&v365 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0);
  uint64_t v396 = *(void *)(v7 - 8);
  uint64_t v397 = v7;
  __chkstk_darwin();
  uint64_t v393 = (uint64_t)&v365 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v387 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>);
  __chkstk_darwin();
  v392 = (char *)&v365 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v389 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, _ClipEffect<Circle>>);
  __chkstk_darwin();
  uint64_t v395 = (uint64_t)&v365 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v390 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>);
  __chkstk_darwin();
  uint64_t v450 = (uint64_t)&v365 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  id v13 = (char *)&v365 - v12;
  uint64_t v445 = type metadata accessor for Playlist.Collaborator();
  uint64_t v427 = *(void *)(v445 - 8);
  __chkstk_darwin();
  v410 = (char *)&v365 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v400 = v14;
  __chkstk_darwin();
  v444 = (char *)&v365 - v15;
  uint64_t v16 = type metadata accessor for URL();
  uint64_t v408 = *(void *)(v16 - 8);
  uint64_t v409 = v16;
  __chkstk_darwin();
  uint64_t v385 = v17;
  v386 = (char *)&v365 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v407 = (char *)&v365 - v18;
  uint64_t v434 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<_ConditionalContent<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Toggle<Text>, _PaddingLayout>, _BackgroundStyleModifier<Material>>, _ClipEffect<RoundedRectangle>>, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FixedSizeLayout>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<TextAlignment>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _PaddingLayout>, _PaddingLayout>, <<opaque return type of View.alert(isPresented:content:)>>.0)>, ModifiedContent<Collaboration.Flow.ActionButton, _EnvironmentKeyTransformModifier<Bool>>>, TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>, ModifiedContent<Collaboration.Flow.ActionBu);
  __chkstk_darwin();
  uint64_t v436 = (uint64_t)&v365 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v416 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Toggle<Text>, _PaddingLayout>, _BackgroundStyleModifier<Material>>, _ClipEffect<RoundedRectangle>>, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FixedSizeLayout>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<TextAlignment>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _PaddingLayout>, _PaddingLayout>, <<opaque return type of View.alert(isPresented:content:)>>.0)>, ModifiedContent<Collaboration.Flow.ActionButton, _EnvironmentKeyTransformModifier<Bool>>>.Storage);
  __chkstk_darwin();
  v418 = (void (*)(char *, char *, uint64_t))((char *)&v365 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v417 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Toggle<Text>, _PaddingLayout>, _BackgroundStyleModifier<Material>>, _ClipEffect<RoundedRectangle>>, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FixedSizeLayout>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<TextAlignment>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _PaddingLayout>, _PaddingLayout>, <<opaque return type of View.alert(isPresented:content:)>>.0)>);
  __chkstk_darwin();
  uint64_t v402 = (uint64_t)&v365 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v435 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Toggle<Text>, _PaddingLayout>, _BackgroundStyleModifier<Material>>, _ClipEffect<RoundedRectangle>>, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FixedSizeLayout>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<TextAlignment>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _PaddingLayout>, _PaddingLayout>, <<opaque return type of View.alert(isPresented:content:)>>.0)>, ModifiedContent<Collaboration.Flow.ActionButton, _EnvironmentKeyTransformModifier<Bool>>>);
  __chkstk_darwin();
  v419 = (uint64_t (*)(uint64_t))((char *)&v365 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v23 = type metadata accessor for Collaboration.Flow.View(0);
  uint64_t v430 = *(void *)(v23 - 8);
  __chkstk_darwin();
  uint64_t v431 = v24;
  uint64_t v433 = (uint64_t)&v365 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v432 = (void (*)(char *, char *, uint64_t))__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.alert(isPresented:content:)>>.0);
  uint64_t v446 = *((void *)v432 - 1);
  __chkstk_darwin();
  v401 = (char *)&v365 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v415 = (char *)&v365 - v26;
  type metadata accessor for Locale();
  __chkstk_darwin();
  v411 = (char *)&v365 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v426 = type metadata accessor for String.LocalizationValue();
  uint64_t v412 = *(void *)(v426 - 8);
  __chkstk_darwin();
  v424 = (char *)&v365 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v425 = (char *)&v365 - v29;
  uint64_t v383 = type metadata accessor for RoundedRectangle();
  __chkstk_darwin();
  v384 = (char *)&v365 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = type metadata accessor for Material();
  uint64_t v378 = *(void *)(v31 - 8);
  uint64_t v379 = v31;
  __chkstk_darwin();
  v376 = (char *)&v365 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Toggle<Text>);
  uint64_t v372 = *(void *)(v33 - 8);
  uint64_t v373 = v33;
  __chkstk_darwin();
  v371 = (char *)&v365 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v369 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Toggle<Text>, _PaddingLayout>);
  __chkstk_darwin();
  v375 = (char *)&v365 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v370 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Toggle<Text>, _PaddingLayout>, _BackgroundStyleModifier<Material>>);
  __chkstk_darwin();
  v377 = (char *)&v365 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v374 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Toggle<Text>, _PaddingLayout>, _BackgroundStyleModifier<Material>>, _ClipEffect<RoundedRectangle>>);
  __chkstk_darwin();
  v382 = (char *)&v365 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v380 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Toggle<Text>, _PaddingLayout>, _BackgroundStyleModifier<Material>>, _ClipEffect<RoundedRectangle>>, _FlexFrameLayout>);
  __chkstk_darwin();
  v413 = (uint64_t (*)(uint64_t))((char *)&v365 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin();
  uint64_t v381 = (uint64_t)&v365 - v39;
  __chkstk_darwin();
  v429 = (void (*)(char *, uint64_t))((char *)&v365 - v40);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ConditionalContent<_ConditionalContent<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Toggle<Text>, _PaddingLayout>, _BackgroundStyleModifier<Material>>, _ClipEffect<RoundedRectangle>>, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FixedSizeLayout>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<TextAlignment>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _PaddingLayout>, _PaddingLayout>, <<opaque return type of View.alert(isPresented:content:)>>.0)>, ModifiedContent<Collaboration.Flow.ActionButton, _EnvironmentKeyTransformModifier<Bool>>>, TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>, ModifiedContent<Collaboration.Flow.ActionBu);
  __chkstk_darwin();
  uint64_t v468 = (uint64_t)&v365 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v464 = (uint64_t)&v365 - v42;
  uint64_t v366 = type metadata accessor for Collaboration.Flow.ProfileEditingView(0);
  __chkstk_darwin();
  v368 = (uint64_t *)((char *)&v365 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v439 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Collaboration.Flow.ProfileEditingView, _PaddingLayout>);
  uint64_t v438 = *(void *)(v439 - 8);
  __chkstk_darwin();
  uint64_t v367 = (uint64_t)&v365 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Collaboration.Flow.ProfileEditingView, _PaddingLayout>?);
  __chkstk_darwin();
  uint64_t v467 = (uint64_t)&v365 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v469 = (uint64_t)&v365 - v46;
  uint64_t v458 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.bold(_:)>>.0);
  uint64_t v457 = *(void *)(v458 - 8);
  __chkstk_darwin();
  v456 = (char *)&v365 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v455 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.bold(_:)>>.0, _EnvironmentKeyWritingModifier<TextAlignment>>);
  __chkstk_darwin();
  v461 = (char *)&v365 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v460 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.bold(_:)>>.0, _EnvironmentKeyWritingModifier<TextAlignment>>, _PaddingLayout>);
  __chkstk_darwin();
  uint64_t v463 = (uint64_t)&v365 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v459 = (uint64_t)&v365 - v50;
  __chkstk_darwin();
  uint64_t v466 = (uint64_t)&v365 - v51;
  uint64_t v452 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of View.bold(_:)>>.0);
  unint64_t v447 = *(void *)(v452 - 8);
  __chkstk_darwin();
  uint64_t v53 = (char *)&v365 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v453 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.bold(_:)>>.0, AccessibilityAttachmentModifier>);
  uint64_t v54 = *(void *)(v453 - 8);
  __chkstk_darwin();
  __int16 v56 = (char *)&v365 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = type metadata accessor for Collaboration.Flow(0);
  __chkstk_darwin();
  uint64_t v448 = (uint64_t)&v365 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v454 = (uint64_t)&v365 - v59;
  __chkstk_darwin();
  uint64_t v61 = (char *)&v365 - v60;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.bold(_:)>>.0, AccessibilityAttachmentModifier>?);
  __chkstk_darwin();
  uint64_t v462 = (uint64_t)&v365 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v64 = (char *)&v365 - v63;
  uint64_t object = v23;
  v470 = (void *)(v471 + *(int *)(v23 + 28));
  outlined init with copy of Collaboration.Flow((uint64_t)v470, (uint64_t)v61, type metadata accessor for Collaboration.Flow);
  uint64_t v451 = v57;
  LODWORD(v23) = swift_getEnumCaseMultiPayload();
  outlined destroy of Collaboration.Flow((uint64_t)v61, type metadata accessor for Collaboration.Flow);
  v465 = v64;
  v428 = v13;
  if (v23 == 1)
  {
    uint64_t v65 = 1;
  }
  else
  {
    if (one-time initialization token for collaborationGlyphFont != -1) {
      swift_once();
    }
    uint64_t v66 = static Collaboration.Flow.Specs.collaborationGlyphFont;
    v499._uint64_t countAndFlagsBits = swift_getKeyPath();
    v499._uint64_t object = (void *)v66;
    swift_retain();
    uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Collaboration.Flow.GlyphImageView, _EnvironmentKeyWritingModifier<Font?>>);
    unint64_t v68 = lazy protocol witness table accessor for type ModifiedContent<Collaboration.Flow.GlyphImageView, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>();
    View.bold(_:)();
    swift_release();
    swift_release();
    v499._uint64_t countAndFlagsBits = v67;
    v499._uint64_t object = (void *)v68;
    swift_getOpaqueTypeConformance2();
    uint64_t v69 = v452;
    View.accessibilityHidden(_:)();
    (*(void (**)(char *, uint64_t))(v447 + 8))(v53, v69);
    uint64_t v64 = v465;
    outlined init with take of PresentationSource?((uint64_t)v56, (uint64_t)v465, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.bold(_:)>>.0, AccessibilityAttachmentModifier>);
    uint64_t v65 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v54 + 56))(v64, v65, 1, v453);
  v499._uint64_t countAndFlagsBits = Collaboration.Flow.title.getter();
  v499._uint64_t object = v70;
  unint64_t v447 = _sS2SSysWl_1();
  uint64_t v71 = Text.init<A>(_:)();
  uint64_t v73 = v72;
  char v75 = v74;
  uint64_t v77 = v76;
  if (one-time initialization token for subtitleFont != -1) {
    swift_once();
  }
  uint64_t v78 = static Collaboration.Flow.Specs.subtitleFont;
  uint64_t KeyPath = swift_getKeyPath();
  v499._uint64_t countAndFlagsBits = v71;
  v499._uint64_t object = (void *)v73;
  LOBYTE(v500._countAndFlagsBits) = v75 & 1;
  v500._uint64_t object = v77;
  LOWORD(v501._countAndFlagsBits) = 256;
  v501._uint64_t object = (void *)KeyPath;
  *(void *)&long long v502 = v78;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Text, _FixedSizeLayout>, _EnvironmentKeyWritingModifier<Font?>>);
  lazy protocol witness table accessor for type ModifiedContent<ModifiedContent<Text, _FixedSizeLayout>, _EnvironmentKeyWritingModifier<Font?>> and conformance <> ModifiedContent<A, B>();
  uint64_t v80 = v456;
  View.bold(_:)();
  outlined consume of Text.Storage(v71, v73, v75 & 1);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v81 = swift_getKeyPath();
  uint64_t v82 = v457;
  uint64_t v83 = (uint64_t)v461;
  uint64_t v84 = v458;
  (*(void (**)(char *, char *, uint64_t))(v457 + 16))(v461, v80, v458);
  uint64_t v85 = v83 + *(int *)(v455 + 36);
  *(void *)uint64_t v85 = v81;
  *(unsigned char *)(v85 + 8) = 1;
  (*(void (**)(char *, uint64_t))(v82 + 8))(v80, v84);
  LOBYTE(v81) = static Edge.Set.top.getter();
  uint64_t v86 = v454;
  outlined init with copy of Collaboration.Flow((uint64_t)v470, v454, type metadata accessor for Collaboration.Flow);
  swift_getEnumCaseMultiPayload();
  outlined destroy of Collaboration.Flow(v86, type metadata accessor for Collaboration.Flow);
  EdgeInsets.init(_all:)();
  uint64_t v88 = v87;
  uint64_t v90 = v89;
  uint64_t v92 = v91;
  uint64_t v94 = v93;
  uint64_t v95 = v459;
  outlined init with copy of (String, Any)(v83, v459, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.bold(_:)>>.0, _EnvironmentKeyWritingModifier<TextAlignment>>);
  uint64_t v96 = v95 + *(int *)(v460 + 36);
  *(unsigned char *)uint64_t v96 = v81;
  *(void *)(v96 + 8) = v88;
  *(void *)(v96 + 16) = v90;
  *(void *)(v96 + 24) = v92;
  *(void *)(v96 + 32) = v94;
  *(unsigned char *)(v96 + 40) = 0;
  outlined destroy of TaskPriority?(v83, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.bold(_:)>>.0, _EnvironmentKeyWritingModifier<TextAlignment>>);
  outlined init with take of PresentationSource?(v95, v466, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.bold(_:)>>.0, _EnvironmentKeyWritingModifier<TextAlignment>>, _PaddingLayout>);
  uint64_t v97 = object;
  uint64_t v98 = *(int *)(object + 40);
  Swift::String v499 = Collaboration.Flow.subtitle(hasProfileEdit:)(*(unsigned char *)(v471 + v98));
  uint64_t v459 = Text.init<A>(_:)();
  uint64_t v458 = v99;
  LODWORD(v83) = v100;
  v442 = v101;
  uint64_t v102 = static Collaboration.Flow.Specs.subtitleFont;
  uint64_t v460 = swift_getKeyPath();
  uint64_t v441 = swift_getKeyPath();
  v461 = (char *)v102;
  swift_retain();
  uint64_t v457 = static Color.secondary.getter();
  v456 = (char *)swift_getKeyPath();
  LODWORD(v455) = static Edge.Set.top.getter();
  EdgeInsets.init(_all:)();
  uint64_t v104 = v103;
  uint64_t v106 = v105;
  uint64_t v108 = v107;
  uint64_t v110 = v109;
  int v440 = v83;
  unsigned __int8 v544 = v83 & 1;
  unsigned __int8 v543 = 0;
  LODWORD(v454) = static Edge.Set.bottom.getter();
  if (one-time initialization token for subtitleBottomPadding != -1) {
    swift_once();
  }
  EdgeInsets.init(_all:)();
  uint64_t v112 = v111;
  uint64_t v114 = v113;
  uint64_t v116 = v115;
  uint64_t v118 = v117;
  LODWORD(v452) = v544;
  LODWORD(v453) = v543;
  unsigned __int8 v545 = 0;
  int v119 = *(unsigned __int8 *)(v471 + v98);
  uint64_t v120 = v450;
  uint64_t v422 = v108;
  uint64_t v423 = v106;
  uint64_t v420 = v117;
  uint64_t v421 = v110;
  if (v119 == 1 && *(void *)(v471 + *(int *)(v97 + 44)))
  {
    type metadata accessor for InlineProfileEditingView.Context();
    lazy protocol witness table accessor for type InlineProfileEditingView.Context and conformance InlineProfileEditingView.Context(&lazy protocol witness table cache variable for type InlineProfileEditingView.Context and conformance InlineProfileEditingView.Context, (void (*)(uint64_t))type metadata accessor for InlineProfileEditingView.Context);
    uint64_t v121 = StateObject.wrappedValue.getter();
    uint64_t v122 = v368;
    outlined init with copy of Collaboration.Flow((uint64_t)v470, (uint64_t)v368 + *(int *)(v366 + 20), type metadata accessor for Collaboration.Flow);
    *uint64_t v122 = v121;
    LOBYTE(v121) = static Edge.Set.bottom.getter();
    EdgeInsets.init(_all:)();
    uint64_t v123 = v104;
    uint64_t v124 = v112;
    uint64_t v126 = v125;
    uint64_t v127 = v114;
    uint64_t v129 = v128;
    uint64_t v130 = v116;
    uint64_t v132 = v131;
    uint64_t v134 = v133;
    uint64_t v135 = v367;
    outlined init with copy of Collaboration.Flow((uint64_t)v122, v367, type metadata accessor for Collaboration.Flow.ProfileEditingView);
    uint64_t v136 = v439;
    uint64_t v137 = v135 + *(int *)(v439 + 36);
    *(unsigned char *)uint64_t v137 = v121;
    *(void *)(v137 + 8) = v126;
    *(void *)(v137 + 16) = v129;
    uint64_t v112 = v124;
    uint64_t v104 = v123;
    uint64_t v114 = v127;
    uint64_t v106 = v423;
    *(void *)(v137 + 24) = v132;
    *(void *)(v137 + 32) = v134;
    uint64_t v116 = v130;
    uint64_t v110 = v421;
    uint64_t v108 = v422;
    uint64_t v118 = v420;
    *(unsigned char *)(v137 + 40) = 0;
    outlined destroy of Collaboration.Flow((uint64_t)v122, type metadata accessor for Collaboration.Flow.ProfileEditingView);
    outlined init with take of PresentationSource?(v135, v469, &demangling cache variable for type metadata for ModifiedContent<Collaboration.Flow.ProfileEditingView, _PaddingLayout>);
    uint64_t v138 = 0;
  }
  else
  {
    uint64_t v138 = 1;
    uint64_t v136 = v439;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v438 + 56))(v469, v138, 1, v136);
  type metadata accessor for InlineProfileEditingView.Context();
  lazy protocol witness table accessor for type InlineProfileEditingView.Context and conformance InlineProfileEditingView.Context(&lazy protocol witness table cache variable for type InlineProfileEditingView.Context and conformance InlineProfileEditingView.Context, (void (*)(uint64_t))type metadata accessor for InlineProfileEditingView.Context);
  StateObject.wrappedValue.getter();
  BOOL v139 = InlineProfileEditingView.Context.canValidate.getter();
  swift_release();
  int v140 = !v139;
  uint64_t v141 = v448;
  outlined init with copy of Collaboration.Flow((uint64_t)v470, v448, type metadata accessor for Collaboration.Flow);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    LODWORD(v451) = v140;
    uint64_t v405 = v112;
    uint64_t v406 = v104;
    uint64_t v403 = v116;
    uint64_t v404 = v114;
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v143 = *(void (**)(char *, uint64_t, uint64_t))(v427 + 32);
      v470 = (void *)(v427 + 32);
      uint64_t v451 = (uint64_t)v143;
      v143(v444, v141, v445);
      uint64_t v144 = v388;
      Playlist.Collaborator.artworkViewModel.getter(v388);
      uint64_t v145 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (type: Playlist.Variant?));
      uint64_t v146 = (uint64_t)v391;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v145 - 8) + 56))(v391, 7, 10, v145);
      if (one-time initialization token for avatarSizeLength != -1) {
        swift_once();
      }
      v474._uint64_t countAndFlagsBits = static Collaboration.Flow.Specs.avatarSizeLength;
      LOBYTE(v474._object) = 0;
      v475._uint64_t countAndFlagsBits = static Collaboration.Flow.Specs.avatarSizeLength;
      LOBYTE(v475._object) = 0;
      v476._uint64_t countAndFlagsBits = 0;
      LOWORD(v476._object) = 257;
      uint64_t v148 = v398;
      uint64_t v147 = v399;
      uint64_t v149 = (uint64_t)v394;
      (*(void (**)(char *, void, uint64_t))(v398 + 104))(v394, enum case for ArtworkImage.ReusePolicy.reusableForDistinctItems(_:), v399);
      uint64_t v150 = v393;
      static ArtworkImage.with(_:placeholder:size:reusePolicy:)((uint64_t)v144, v146, (uint64_t)&v474, v149, v393);
      (*(void (**)(uint64_t, uint64_t))(v148 + 8))(v149, v147);
      outlined destroy of Collaboration.Flow(v146, type metadata accessor for ArtworkImage.Placeholder);
      outlined destroy of TaskPriority?((uint64_t)v144, (uint64_t *)&demangling cache variable for type metadata for ArtworkImage.ViewModel?);
      static Alignment.center.getter();
      _FrameLayout.init(width:height:alignment:)();
      uint64_t v152 = v396;
      uint64_t v151 = v397;
      uint64_t v153 = (uint64_t)v392;
      (*(void (**)(char *, uint64_t, uint64_t))(v396 + 16))(v392, v150, v397);
      uint64_t v154 = (Swift::String *)(v153 + *(int *)(v387 + 36));
      Swift::String v155 = v487;
      *uint64_t v154 = v486;
      v154[1] = v155;
      v154[2] = v488;
      (*(void (**)(uint64_t, uint64_t))(v152 + 8))(v150, v151);
      uint64_t v156 = v395;
      outlined init with copy of (String, Any)(v153, v395, (uint64_t *)&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>);
      *(_WORD *)(v156 + *(int *)(v389 + 36)) = 256;
      outlined destroy of TaskPriority?(v153, (uint64_t *)&demangling cache variable for type metadata for ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>);
      LOBYTE(v151) = static Edge.Set.top.getter();
      EdgeInsets.init(_all:)();
      uint64_t v158 = v157;
      uint64_t v160 = v159;
      uint64_t v162 = v161;
      uint64_t v164 = v163;
      outlined init with copy of (String, Any)(v156, v120, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, _ClipEffect<Circle>>);
      uint64_t v165 = v120 + *(int *)(v390 + 36);
      *(unsigned char *)uint64_t v165 = v151;
      *(void *)(v165 + 8) = v158;
      *(void *)(v165 + 16) = v160;
      *(void *)(v165 + 24) = v162;
      *(void *)(v165 + 32) = v164;
      *(unsigned char *)(v165 + 40) = 0;
      outlined destroy of TaskPriority?(v156, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, _ClipEffect<Circle>>);
      outlined init with take of PresentationSource?(v120, (uint64_t)v428, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>);
      uint64_t v166 = v425;
      String.LocalizationValue.init(stringLiteral:)();
      uint64_t v167 = v412;
      uint64_t v168 = *(void **)(v412 + 16);
      uint64_t v169 = v426;
      uint64_t v439 = v412 + 16;
      v432 = (void (*)(char *, char *, uint64_t))v168;
      ((void (*)(char *, char *, uint64_t))v168)(v424, v166, v426);
      if (one-time initialization token for module != -1) {
        swift_once();
      }
      id v170 = (id)static NSBundle.module;
      static Locale.current.getter();
      uint64_t v448 = String.init(localized:table:bundle:locale:comment:)();
      unint64_t v447 = v171;
      v429 = *(void (**)(char *, uint64_t))(v167 + 8);
      v429(v166, v169);
      v419 = type metadata accessor for Collaboration.Flow.View;
      uint64_t v172 = v433;
      outlined init with copy of Collaboration.Flow(v471, v433, type metadata accessor for Collaboration.Flow.View);
      uint64_t v173 = v427;
      v418 = *(void (**)(char *, char *, uint64_t))(v427 + 16);
      uint64_t v174 = v410;
      uint64_t v175 = v445;
      v418(v410, v444, v445);
      uint64_t v176 = *(unsigned __int8 *)(v430 + 80);
      uint64_t v177 = (v176 + 16) & ~v176;
      uint64_t v178 = *(unsigned __int8 *)(v173 + 80);
      uint64_t v179 = (char *)((v431 + v178 + v177) & ~v178);
      v415 = v179;
      uint64_t v416 = v176 | v178 | 7;
      uint64_t v417 = (uint64_t)&v179[v400];
      uint64_t v180 = swift_allocObject();
      uint64_t v446 = v180;
      v413 = type metadata accessor for Collaboration.Flow.View;
      outlined init with take of Collaboration.Flow.Collaborator(v172, v180 + v177, type metadata accessor for Collaboration.Flow.View);
      ((void (*)(char *, char *, uint64_t))v451)(&v179[v180], v174, v175);
      LOBYTE(v498[0]) = 0;
      State.init(wrappedValue:)();
      LODWORD(v438) = LOBYTE(v499._countAndFlagsBits);
      uint64_t v181 = v426;
      uint64_t object = (uint64_t)v499._object;
      uint64_t v431 = swift_getKeyPath();
      LODWORD(v430) = static Edge.Set.top.getter();
      EdgeInsets.init(_all:)();
      uint64_t v183 = v182;
      uint64_t v185 = v184;
      uint64_t v187 = v186;
      uint64_t v189 = v188;
      uint64_t v190 = v425;
      String.LocalizationValue.init(stringLiteral:)();
      v432(v424, v190, v181);
      id v191 = (id)static NSBundle.module;
      static Locale.current.getter();
      uint64_t v439 = String.init(localized:table:bundle:locale:comment:)();
      long long v193 = v192;
      v429(v190, v181);
      outlined init with copy of Collaboration.Flow(v471, v172, v419);
      long long v194 = v410;
      uint64_t v195 = v445;
      v418(v410, v444, v445);
      uint64_t v196 = swift_allocObject();
      outlined init with take of Collaboration.Flow.Collaborator(v172, v196 + v177, v413);
      ((void (*)(char *, char *, uint64_t))v451)(&v415[v196], v194, v195);
      LOBYTE(v498[0]) = 0;
      State.init(wrappedValue:)();
      LODWORD(v451) = LOBYTE(v499._countAndFlagsBits);
      uint64_t v197 = (uint64_t)v499._object;
      unint64_t v198 = swift_getKeyPath();
      LOBYTE(v174) = static Edge.Set.top.getter();
      EdgeInsets.init(_all:)();
      uint64_t v200 = v199;
      uint64_t v202 = v201;
      uint64_t v204 = v203;
      uint64_t v206 = v205;
      uint64_t v207 = v450;
      outlined init with copy of (String, Any)((uint64_t)v428, v450, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>);
      LOBYTE(v499._countAndFlagsBits) = 0;
      uint64_t v208 = v207;
      uint64_t v209 = v414;
      outlined init with copy of (String, Any)(v208, v414, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>);
      uint64_t v210 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>, ModifiedContent<Collaboration.Flow.ActionButton, _PaddingLayout>, ModifiedContent<Collaboration.Flow.ActionButton, _PaddingLayout>));
      uint64_t v211 = v209;
      uint64_t v212 = v209 + *(int *)(v210 + 48);
      unint64_t v213 = v447;
      *(void *)uint64_t v212 = v448;
      *(void *)(v212 + 8) = v213;
      *(unsigned char *)(v212 + 16) = 0;
      uint64_t v214 = v446;
      *(void *)(v212 + 24) = partial apply for closure #5 in closure #1 in Collaboration.Flow.View.body.getter;
      *(void *)(v212 + 32) = v214;
      *(unsigned char *)(v212 + 40) = v438;
      uint64_t v215 = v431;
      *(void *)(v212 + 48) = object;
      *(void *)(v212 + 56) = v215;
      *(unsigned char *)(v212 + 64) = 0;
      *(unsigned char *)(v212 + 72) = v430;
      *(void *)(v212 + 80) = v183;
      *(void *)(v212 + 88) = v185;
      *(void *)(v212 + 96) = v187;
      *(void *)(v212 + 104) = v189;
      *(unsigned char *)(v212 + 112) = 0;
      uint64_t v216 = v211 + *(int *)(v210 + 64);
      *(void *)uint64_t v216 = v439;
      *(void *)(v216 + 8) = v193;
      *(unsigned char *)(v216 + 16) = 1;
      *(void *)(v216 + 24) = partial apply for closure #6 in closure #1 in Collaboration.Flow.View.body.getter;
      *(void *)(v216 + 32) = v196;
      *(unsigned char *)(v216 + 40) = v451;
      *(void *)(v216 + 48) = v197;
      *(void *)(v216 + 56) = v198;
      *(unsigned char *)(v216 + 64) = 0;
      *(unsigned char *)(v216 + 72) = (_BYTE)v174;
      *(void *)(v216 + 80) = v200;
      *(void *)(v216 + 88) = v202;
      *(void *)(v216 + 96) = v204;
      *(void *)(v216 + 104) = v206;
      *(unsigned char *)(v216 + 112) = 0;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      outlined copy of Environment<Bool>.Content(v215, 0);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      outlined copy of Environment<Bool>.Content(v198, 0);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      outlined copy of Environment<Bool>.Content(v215, 0);
      v432 = (void (*)(char *, char *, uint64_t))v193;
      swift_bridgeObjectRetain();
      v429 = (void (*)(char *, uint64_t))v196;
      swift_retain();
      v470 = (void *)v197;
      swift_retain();
      unint64_t v471 = v198;
      outlined copy of Environment<Bool>.Content(v198, 0);
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      outlined consume of Environment<SymbolButton.MaterialColor?>.Content(v198, 0);
      LOBYTE(v214) = v499._countAndFlagsBits;
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      outlined consume of Environment<SymbolButton.MaterialColor?>.Content(v215, v214);
      outlined destroy of TaskPriority?(v450, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>);
      uint64_t v217 = v414;
      outlined init with copy of (String, Any)(v414, v436, &demangling cache variable for type metadata for TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>, ModifiedContent<Collaboration.Flow.ActionButton, _PaddingLayout>, ModifiedContent<Collaboration.Flow.ActionButton, _PaddingLayout>)>);
      swift_storeEnumTagMultiPayload();
      lazy protocol witness table accessor for type _ConditionalContent<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Toggle<Text>, _PaddingLayout>, _BackgroundStyleModifier<Material>>, _ClipEffect<RoundedRectangle>>, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FixedSizeLayout>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<TextAlignment>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _PaddingLayout>, _PaddingLayout>, <<opaque return type of View.alert(isPresented:content:)>>.0)>, ModifiedContent<Collaboration.Flow.ActionButton, _EnvironmentKeyTransformModifier<Bool>>> and conformance <> _ConditionalContent<A, B>();
      lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>, ModifiedContent<Collaboration.Flow.ActionButton, _PaddingLayout>, ModifiedContent<Collaboration.Flow.ActionButton, _PaddingLayout>)> and conformance TupleView<A>, &demangling cache variable for type metadata for TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>, ModifiedContent<Collaboration.Flow.ActionButton, _PaddingLayout>, ModifiedContent<Collaboration.Flow.ActionButton, _PaddingLayout>)>);
      uint64_t v218 = v464;
      _ConditionalContent<>.init(storage:)();
      outlined destroy of TaskPriority?(v217, &demangling cache variable for type metadata for TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>, ModifiedContent<Collaboration.Flow.ActionButton, _PaddingLayout>, ModifiedContent<Collaboration.Flow.ActionButton, _PaddingLayout>)>);
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      outlined consume of Environment<SymbolButton.MaterialColor?>.Content(v471, 0);
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      outlined consume of Environment<SymbolButton.MaterialColor?>.Content(v215, 0);
      outlined destroy of TaskPriority?((uint64_t)v428, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>);
      (*(void (**)(char *, uint64_t))(v427 + 8))(v444, v445);
    }
    else
    {
      unint64_t v240 = v471 + *(int *)(v97 + 20);
      uint64_t v241 = *(void *)(v240 + 8);
      LOBYTE(v498[0]) = *(unsigned char *)v240;
      *((void *)&v498[0] + 1) = v241;
      uint64_t v450 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Bool>);
      State.projectedValue.getter();
      v242 = v371;
      Toggle.init(isOn:label:)();
      char v243 = static Edge.Set.all.getter();
      EdgeInsets.init(_all:)();
      uint64_t v245 = v244;
      uint64_t v247 = v246;
      uint64_t v249 = v248;
      uint64_t v251 = v250;
      uint64_t v253 = v372;
      uint64_t v252 = v373;
      uint64_t v254 = (uint64_t)v375;
      (*(void (**)(char *, char *, uint64_t))(v372 + 16))(v375, v242, v373);
      uint64_t v255 = v254 + *(int *)(v369 + 36);
      *(unsigned char *)uint64_t v255 = v243;
      *(void *)(v255 + 8) = v245;
      *(void *)(v255 + 16) = v247;
      *(void *)(v255 + 24) = v249;
      *(void *)(v255 + 32) = v251;
      *(unsigned char *)(v255 + 40) = 0;
      (*(void (**)(char *, uint64_t))(v253 + 8))(v242, v252);
      v256 = v376;
      static Material.thick.getter();
      char v257 = static Edge.Set.all.getter();
      uint64_t v258 = (uint64_t)v377;
      uint64_t v259 = v378;
      v260 = &v377[*(int *)(v370 + 36)];
      uint64_t v261 = v379;
      (*(void (**)(char *, char *, uint64_t))(v378 + 16))(v260, v256, v379);
      v260[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _BackgroundStyleModifier<Material>)
                  + 36)] = v257;
      outlined init with copy of (String, Any)(v254, v258, &demangling cache variable for type metadata for ModifiedContent<Toggle<Text>, _PaddingLayout>);
      (*(void (**)(char *, uint64_t))(v259 + 8))(v256, v261);
      outlined destroy of TaskPriority?(v254, &demangling cache variable for type metadata for ModifiedContent<Toggle<Text>, _PaddingLayout>);
      v262 = v384;
      v263 = &v384[*(int *)(v383 + 20)];
      uint64_t v264 = enum case for RoundedCornerStyle.continuous(_:);
      uint64_t v265 = type metadata accessor for RoundedCornerStyle();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v265 - 8) + 104))(v263, v264, v265);
      __asm { FMOV            V0.2D, #16.0 }
      _OWORD *v262 = _Q0;
      uint64_t v271 = (uint64_t)v382;
      uint64_t v272 = (uint64_t)&v382[*(int *)(v374 + 36)];
      outlined init with copy of Collaboration.Flow((uint64_t)v262, v272, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
      *(_WORD *)(v272
               + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ClipEffect<RoundedRectangle>)
                        + 36)) = 256;
      outlined init with copy of (String, Any)(v258, v271, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Toggle<Text>, _PaddingLayout>, _BackgroundStyleModifier<Material>>);
      outlined destroy of Collaboration.Flow((uint64_t)v262, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
      outlined destroy of TaskPriority?(v258, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<Toggle<Text>, _PaddingLayout>, _BackgroundStyleModifier<Material>>);
      static Alignment.center.getter();
      _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
      uint64_t v273 = v381;
      outlined init with copy of (String, Any)(v271, v381, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Toggle<Text>, _PaddingLayout>, _BackgroundStyleModifier<Material>>, _ClipEffect<RoundedRectangle>>);
      v274 = (_OWORD *)(v273 + *(int *)(v380 + 36));
      long long v275 = v556;
      v274[4] = v555;
      v274[5] = v275;
      v274[6] = v557;
      long long v276 = v552;
      _OWORD *v274 = v551;
      v274[1] = v276;
      long long v277 = v554;
      v274[2] = v553;
      v274[3] = v277;
      outlined destroy of TaskPriority?(v271, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<Toggle<Text>, _PaddingLayout>, _BackgroundStyleModifier<Material>>, _ClipEffect<RoundedRectangle>>);
      outlined init with take of PresentationSource?(v273, (uint64_t)v429, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Toggle<Text>, _PaddingLayout>, _BackgroundStyleModifier<Material>>, _ClipEffect<RoundedRectangle>>, _FlexFrameLayout>);
      v278 = *(void **)(v240 + 8);
      LOBYTE(v499._countAndFlagsBits) = *(unsigned char *)v240;
      v499._uint64_t object = v278;
      State.wrappedValue.getter();
      uint64_t v279 = v412;
      v280 = (void (**)(char *, char *, uint64_t))(v412 + 16);
      v281 = v425;
      String.LocalizationValue.init(stringLiteral:)();
      uint64_t v282 = v426;
      (*v280)(v424, v281, v426);
      if (one-time initialization token for module != -1) {
        swift_once();
      }
      id v283 = (id)static NSBundle.module;
      static Locale.current.getter();
      uint64_t v284 = String.init(localized:table:bundle:locale:comment:)();
      v286 = v285;
      (*(void (**)(char *, uint64_t))(v279 + 8))(v281, v282);
      v499._uint64_t countAndFlagsBits = v284;
      v499._uint64_t object = v286;
      uint64_t v287 = Text.init<A>(_:)();
      uint64_t v289 = v288;
      char v291 = v290 & 1;
      uint64_t v558 = v287;
      uint64_t v559 = v288;
      char v560 = v290 & 1;
      uint64_t v561 = v292;
      __int16 v562 = 256;
      static Alignment.leading.getter();
      specialized View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v534, 0.0, 1, 0.0, 1);
      outlined consume of Text.Storage(v287, v289, v291);
      swift_bridgeObjectRelease();
      uint64_t v293 = swift_getKeyPath();
      LODWORD(v287) = static HierarchicalShapeStyle.secondary.getter();
      uint64_t v294 = static Font.footnote.getter();
      uint64_t v295 = swift_getKeyPath();
      long long v481 = v534[7];
      long long v482 = v534[8];
      Swift::String v476 = (Swift::String)v534[2];
      long long v477 = v534[3];
      long long v478 = v534[4];
      long long v479 = v534[5];
      long long v480 = v534[6];
      Swift::String v474 = (Swift::String)v534[0];
      Swift::String v475 = (Swift::String)v534[1];
      *(void *)&long long v483 = v535;
      *((void *)&v483 + 1) = v293;
      LOBYTE(v484) = 0;
      *(_WORD *)((char *)&v484 + 1) = v539[0];
      BYTE3(v484) = BYTE2(v539[0]);
      DWORD1(v484) = v287;
      *((void *)&v484 + 1) = v295;
      uint64_t v485 = v294;
      LODWORD(v426) = static Edge.Set.horizontal.getter();
      EdgeInsets.init(_all:)();
      v424 = v297;
      v425 = v296;
      uint64_t v414 = v298;
      uint64_t v412 = v299;
      long long v494 = v482;
      long long v495 = v483;
      long long v496 = v484;
      uint64_t v497 = v485;
      long long v490 = v478;
      long long v491 = v479;
      long long v492 = v480;
      long long v493 = v481;
      Swift::String v486 = v474;
      Swift::String v487 = v475;
      Swift::String v488 = v476;
      long long v489 = v477;
      v536[0] = 0;
      LODWORD(v448) = static Edge.Set.top.getter();
      if (one-time initialization token for toggleDescriptionTextTopPadding != -1) {
        swift_once();
      }
      EdgeInsets.init(_all:)();
      uint64_t v301 = v300;
      uint64_t v303 = v302;
      uint64_t v305 = v304;
      uint64_t v307 = v306;
      LODWORD(v428) = v536[0];
      v537[0] = 0;
      LODWORD(v447) = static Edge.Set.bottom.getter();
      EdgeInsets.init(_all:)();
      uint64_t v445 = v308;
      v444 = v309;
      uint64_t v439 = v310;
      uint64_t v438 = v311;
      LODWORD(v427) = v537[0];
      LOBYTE(v538[0]) = 0;
      uint64_t v312 = Collaboration.Flow.buttonActionTitle.getter();
      v470 = (void *)v313;
      unint64_t v314 = v471;
      uint64_t v315 = v433;
      outlined init with copy of Collaboration.Flow(v471, v433, type metadata accessor for Collaboration.Flow.View);
      unint64_t v316 = (*(unsigned __int8 *)(v430 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v430 + 80);
      uint64_t v317 = swift_allocObject();
      outlined init with take of Collaboration.Flow.Collaborator(v315, v317 + v316, type metadata accessor for Collaboration.Flow.View);
      LOBYTE(v498[0]) = 0;
      State.init(wrappedValue:)();
      LOBYTE(v316) = v499._countAndFlagsBits;
      v318 = v499._object;
      uint64_t v319 = swift_getKeyPath();
      uint64_t v320 = swift_getKeyPath();
      uint64_t v321 = swift_allocObject();
      *(unsigned char *)(v321 + 16) = v451 & 1;
      v499._uint64_t countAndFlagsBits = v312;
      v499._uint64_t object = v470;
      LOBYTE(v500._countAndFlagsBits) = 0;
      v500._uint64_t object = partial apply for closure #2 in closure #1 in Collaboration.Flow.View.body.getter;
      v501._uint64_t countAndFlagsBits = v317;
      LOBYTE(v501._object) = v316;
      *(void *)&long long v502 = v318;
      *((void *)&v502 + 1) = v319;
      LOBYTE(v503) = 0;
      *((void *)&v503 + 1) = v320;
      *(void *)&long long v504 = closure #1 in View.disabled(_:)partial apply;
      *((void *)&v504 + 1) = v321;
      unint64_t v322 = v314 + *(int *)(object + 24);
      char v323 = *(unsigned char *)v322;
      uint64_t v324 = *(void *)(v322 + 8);
      LOBYTE(v472[0]) = v323;
      uint64_t v473 = v324;
      State.projectedValue.getter();
      uint64_t v451 = (uint64_t)&v365;
      __chkstk_darwin();
      v470 = (void *)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Collaboration.Flow.ActionButton, _EnvironmentKeyTransformModifier<Bool>>);
      unint64_t v471 = lazy protocol witness table accessor for type ModifiedContent<Collaboration.Flow.ActionButton, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>();
      v325 = v415;
      View.alert(isPresented:content:)();
      swift_release();
      swift_release();
      uint64_t v326 = *((void *)&v502 + 1);
      LOBYTE(v319) = v503;
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      outlined consume of Environment<SymbolButton.MaterialColor?>.Content(v326, v319);
      swift_release();
      swift_release();
      v327 = v413;
      outlined init with copy of (String, Any)((uint64_t)v429, (uint64_t)v413, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Toggle<Text>, _PaddingLayout>, _BackgroundStyleModifier<Material>>, _ClipEffect<RoundedRectangle>>, _FlexFrameLayout>);
      LOBYTE(v319) = v538[0];
      uint64_t v451 = *(void *)(v446 + 16);
      v328 = v401;
      ((void (*)(char *, char *, void))v451)(v401, v325, v432);
      uint64_t v329 = (uint64_t)v327;
      uint64_t v330 = v402;
      outlined init with copy of (String, Any)(v329, v402, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Toggle<Text>, _PaddingLayout>, _BackgroundStyleModifier<Material>>, _ClipEffect<RoundedRectangle>>, _FlexFrameLayout>);
      uint64_t v331 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Toggle<Text>, _PaddingLayout>, _BackgroundStyleModifier<Material>>, _ClipEffect<RoundedRectangle>>, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FixedSizeLayout>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<TextAlignment>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _PaddingLayout>, _PaddingLayout>, <<opaque return type of View.alert(isPresented:content:)>>.0));
      v332 = (void *)(v330 + *(int *)(v331 + 48));
      v498[8] = v494;
      v498[9] = v495;
      v498[10] = v496;
      *(void *)&v498[11] = v497;
      v498[4] = v490;
      v498[5] = v491;
      v498[6] = v492;
      v498[7] = v493;
      v498[0] = v486;
      v498[1] = v487;
      v498[2] = v488;
      v498[3] = v489;
      LOBYTE(v316) = v426;
      BYTE8(v498[11]) = v426;
      *(_DWORD *)((char *)&v498[11] + 9) = v542[0];
      HIDWORD(v498[11]) = *(_DWORD *)((char *)v542 + 3);
      v334 = v424;
      v333 = v425;
      *(void *)&v498[12] = v425;
      *((void *)&v498[12] + 1) = v424;
      uint64_t v335 = v414;
      uint64_t v336 = v412;
      *(void *)&v498[13] = v414;
      *((void *)&v498[13] + 1) = v412;
      LOBYTE(v498[14]) = (_BYTE)v428;
      *(_DWORD *)((char *)&v498[14] + 1) = *(_DWORD *)v547;
      DWORD1(v498[14]) = *(_DWORD *)&v547[3];
      BYTE8(v498[14]) = v448;
      HIDWORD(v498[14]) = *(_DWORD *)&v546[3];
      *(_DWORD *)((char *)&v498[14] + 9) = *(_DWORD *)v546;
      *(void *)&v498[15] = v301;
      *((void *)&v498[15] + 1) = v303;
      *(void *)&v498[16] = v305;
      *((void *)&v498[16] + 1) = v307;
      LOBYTE(v498[17]) = v427;
      *(_DWORD *)((char *)&v498[17] + 1) = v472[0];
      DWORD1(v498[17]) = *(_DWORD *)((char *)v472 + 3);
      BYTE8(v498[17]) = v447;
      *(_DWORD *)((char *)&v498[17] + 9) = *(_DWORD *)v548;
      HIDWORD(v498[17]) = *(_DWORD *)&v548[3];
      *(void *)&v498[18] = v445;
      *((void *)&v498[18] + 1) = v444;
      *(void *)&v498[19] = v439;
      *((void *)&v498[19] + 1) = v438;
      LOBYTE(v498[20]) = v319;
      memcpy(v332, v498, 0x141uLL);
      uint64_t v337 = v330 + *(int *)(v331 + 64);
      v338 = v432;
      ((void (*)(uint64_t, char *, void))v451)(v337, v328, v432);
      outlined retain of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FixedSizeLayout>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<TextAlignment>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _PaddingLayout>, _PaddingLayout>((uint64_t)v498);
      outlined retain of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FixedSizeLayout>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<TextAlignment>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _PaddingLayout>, _PaddingLayout>((uint64_t)&v474);
      v339 = *(void (**)(char *, void *))(v446 + 8);
      v446 += 8;
      uint64_t v451 = (uint64_t)v339;
      v339(v328, (void (*)(char *, char *, uint64_t))v338);
      long long v507 = v494;
      long long v508 = v495;
      long long v509 = v496;
      uint64_t v510 = v497;
      long long v503 = v490;
      long long v504 = v491;
      long long v505 = v492;
      long long v506 = v493;
      Swift::String v499 = v486;
      Swift::String v500 = v487;
      Swift::String v501 = v488;
      long long v502 = v489;
      char v511 = v316;
      *(_DWORD *)v512 = v542[0];
      *(_DWORD *)&v512[3] = *(_DWORD *)((char *)v542 + 3);
      v513 = v333;
      v514 = v334;
      uint64_t v515 = v335;
      uint64_t v516 = v336;
      char v517 = (char)v428;
      *(_DWORD *)v518 = *(_DWORD *)v547;
      *(_DWORD *)&v518[3] = *(_DWORD *)&v547[3];
      char v519 = v448;
      *(_DWORD *)&v520[3] = *(_DWORD *)&v546[3];
      *(_DWORD *)v520 = *(_DWORD *)v546;
      uint64_t v521 = v301;
      uint64_t v522 = v303;
      uint64_t v523 = v305;
      uint64_t v524 = v307;
      char v525 = v427;
      *(_DWORD *)v526 = v472[0];
      *(_DWORD *)&v526[3] = *(_DWORD *)((char *)v472 + 3);
      char v527 = v447;
      *(_DWORD *)v528 = *(_DWORD *)v548;
      *(_DWORD *)&v528[3] = *(_DWORD *)&v548[3];
      uint64_t v529 = v445;
      v530 = v444;
      uint64_t v531 = v439;
      uint64_t v532 = v438;
      char v533 = v319;
      outlined release of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FixedSizeLayout>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<TextAlignment>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _PaddingLayout>, _PaddingLayout>((uint64_t)&v499);
      outlined destroy of TaskPriority?((uint64_t)v413, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Toggle<Text>, _PaddingLayout>, _BackgroundStyleModifier<Material>>, _ClipEffect<RoundedRectangle>>, _FlexFrameLayout>);
      outlined init with copy of (String, Any)(v330, (uint64_t)v418, &demangling cache variable for type metadata for TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Toggle<Text>, _PaddingLayout>, _BackgroundStyleModifier<Material>>, _ClipEffect<RoundedRectangle>>, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FixedSizeLayout>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<TextAlignment>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _PaddingLayout>, _PaddingLayout>, <<opaque return type of View.alert(isPresented:content:)>>.0)>);
      swift_storeEnumTagMultiPayload();
      lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Toggle<Text>, _PaddingLayout>, _BackgroundStyleModifier<Material>>, _ClipEffect<RoundedRectangle>>, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FixedSizeLayout>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<TextAlignment>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _PaddingLayout>, _PaddingLayout>, <<opaque return type of View.alert(isPresented:content:)>>.0)> and conformance TupleView<A>, &demangling cache variable for type metadata for TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Toggle<Text>, _PaddingLayout>, _BackgroundStyleModifier<Material>>, _ClipEffect<RoundedRectangle>>, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FixedSizeLayout>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<TextAlignment>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _PaddingLayout>, _PaddingLayout>, <<opaque return type of View.alert(isPresented:content:)>>.0)>);
      v340 = v419;
      _ConditionalContent<>.init(storage:)();
      outlined destroy of TaskPriority?(v330, &demangling cache variable for type metadata for TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Toggle<Text>, _PaddingLayout>, _BackgroundStyleModifier<Material>>, _ClipEffect<RoundedRectangle>>, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FixedSizeLayout>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<TextAlignment>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _PaddingLayout>, _PaddingLayout>, <<opaque return type of View.alert(isPresented:content:)>>.0)>);
      outlined init with copy of (String, Any)((uint64_t)v340, v436, &demangling cache variable for type metadata for _ConditionalContent<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Toggle<Text>, _PaddingLayout>, _BackgroundStyleModifier<Material>>, _ClipEffect<RoundedRectangle>>, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FixedSizeLayout>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<TextAlignment>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _PaddingLayout>, _PaddingLayout>, <<opaque return type of View.alert(isPresented:content:)>>.0)>, ModifiedContent<Collaboration.Flow.ActionButton, _EnvironmentKeyTransformModifier<Bool>>>);
      swift_storeEnumTagMultiPayload();
      lazy protocol witness table accessor for type _ConditionalContent<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Toggle<Text>, _PaddingLayout>, _BackgroundStyleModifier<Material>>, _ClipEffect<RoundedRectangle>>, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FixedSizeLayout>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<TextAlignment>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _PaddingLayout>, _PaddingLayout>, <<opaque return type of View.alert(isPresented:content:)>>.0)>, ModifiedContent<Collaboration.Flow.ActionButton, _EnvironmentKeyTransformModifier<Bool>>> and conformance <> _ConditionalContent<A, B>();
      lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>, ModifiedContent<Collaboration.Flow.ActionButton, _PaddingLayout>, ModifiedContent<Collaboration.Flow.ActionButton, _PaddingLayout>)> and conformance TupleView<A>, &demangling cache variable for type metadata for TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>, ModifiedContent<Collaboration.Flow.ActionButton, _PaddingLayout>, ModifiedContent<Collaboration.Flow.ActionButton, _PaddingLayout>)>);
      uint64_t v218 = v464;
      _ConditionalContent<>.init(storage:)();
      outlined destroy of TaskPriority?((uint64_t)v340, &demangling cache variable for type metadata for _ConditionalContent<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Toggle<Text>, _PaddingLayout>, _BackgroundStyleModifier<Material>>, _ClipEffect<RoundedRectangle>>, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FixedSizeLayout>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<TextAlignment>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _PaddingLayout>, _PaddingLayout>, <<opaque return type of View.alert(isPresented:content:)>>.0)>, ModifiedContent<Collaboration.Flow.ActionButton, _EnvironmentKeyTransformModifier<Bool>>>);
      ((void (*)(char *, void (*)(char *, char *, uint64_t)))v451)(v415, v432);
      outlined release of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FixedSizeLayout>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<TextAlignment>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _PaddingLayout>, _PaddingLayout>((uint64_t)&v474);
      outlined destroy of TaskPriority?((uint64_t)v429, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Toggle<Text>, _PaddingLayout>, _BackgroundStyleModifier<Material>>, _ClipEffect<RoundedRectangle>>, _FlexFrameLayout>);
    }
    uint64_t v112 = v405;
    uint64_t v104 = v406;
    uint64_t v108 = v422;
    uint64_t v106 = v423;
    uint64_t v118 = v420;
    uint64_t v110 = v421;
    uint64_t v116 = v403;
    uint64_t v114 = v404;
  }
  else
  {
    uint64_t v219 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Collaboration.Flow.Collaborator?, URL, Bool));
    uint64_t v220 = v407;
    uint64_t v221 = v408;
    uint64_t v222 = *(void (**)(char *, uint64_t, uint64_t))(v408 + 32);
    uint64_t v223 = v409;
    v222(v407, v141 + *(int *)(v219 + 48), v409);
    uint64_t v450 = Collaboration.Flow.buttonActionTitle.getter();
    uint64_t v225 = v224;
    uint64_t v226 = v433;
    outlined init with copy of Collaboration.Flow(v471, v433, type metadata accessor for Collaboration.Flow.View);
    uint64_t v227 = v386;
    (*(void (**)(char *, char *, uint64_t))(v221 + 16))(v386, v220, v223);
    unint64_t v228 = (*(unsigned __int8 *)(v430 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v430 + 80);
    unint64_t v229 = (v431 + *(unsigned __int8 *)(v221 + 80) + v228) & ~(unint64_t)*(unsigned __int8 *)(v221 + 80);
    uint64_t v230 = swift_allocObject();
    uint64_t v231 = v230 + v228;
    uint64_t v232 = v230;
    outlined init with take of Collaboration.Flow.Collaborator(v226, v231, type metadata accessor for Collaboration.Flow.View);
    v222((char *)(v232 + v229), (uint64_t)v227, v223);
    LOBYTE(v498[0]) = 0;
    State.init(wrappedValue:)();
    LOBYTE(v223) = v499._countAndFlagsBits;
    char v233 = v499._object;
    uint64_t v234 = swift_getKeyPath();
    uint64_t v235 = swift_getKeyPath();
    uint64_t v236 = swift_allocObject();
    *(unsigned char *)(v236 + 16) = v140 & 1;
    v237 = v418;
    *(void *)v418 = v450;
    v237[1] = v225;
    v470 = (void *)v225;
    *((unsigned char *)v237 + 16) = 0;
    v237[3] = partial apply for closure #4 in closure #1 in Collaboration.Flow.View.body.getter;
    v237[4] = v232;
    *((unsigned char *)v237 + 40) = v223;
    v237[6] = v233;
    v237[7] = v234;
    uint64_t v451 = v234;
    *((unsigned char *)v237 + 64) = 0;
    unint64_t v471 = v235;
    v237[9] = v235;
    v237[10] = closure #1 in View.disabled(_:)partial apply;
    v237[11] = v236;
    swift_storeEnumTagMultiPayload();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    outlined copy of Environment<Bool>.Content(v234, 0);
    swift_retain();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModifiedContent<Collaboration.Flow.ActionButton, _EnvironmentKeyTransformModifier<Bool>>);
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Toggle<Text>, _PaddingLayout>, _BackgroundStyleModifier<Material>>, _ClipEffect<RoundedRectangle>>, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FixedSizeLayout>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<TextAlignment>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _PaddingLayout>, _PaddingLayout>, <<opaque return type of View.alert(isPresented:content:)>>.0)> and conformance TupleView<A>, &demangling cache variable for type metadata for TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Toggle<Text>, _PaddingLayout>, _BackgroundStyleModifier<Material>>, _ClipEffect<RoundedRectangle>>, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FixedSizeLayout>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<TextAlignment>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _PaddingLayout>, _PaddingLayout>, <<opaque return type of View.alert(isPresented:content:)>>.0)>);
    lazy protocol witness table accessor for type ModifiedContent<Collaboration.Flow.ActionButton, _EnvironmentKeyTransformModifier<Bool>> and conformance <> ModifiedContent<A, B>();
    v238 = v419;
    _ConditionalContent<>.init(storage:)();
    outlined init with copy of (String, Any)((uint64_t)v238, v436, &demangling cache variable for type metadata for _ConditionalContent<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Toggle<Text>, _PaddingLayout>, _BackgroundStyleModifier<Material>>, _ClipEffect<RoundedRectangle>>, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FixedSizeLayout>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<TextAlignment>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _PaddingLayout>, _PaddingLayout>, <<opaque return type of View.alert(isPresented:content:)>>.0)>, ModifiedContent<Collaboration.Flow.ActionButton, _EnvironmentKeyTransformModifier<Bool>>>);
    swift_storeEnumTagMultiPayload();
    lazy protocol witness table accessor for type _ConditionalContent<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Toggle<Text>, _PaddingLayout>, _BackgroundStyleModifier<Material>>, _ClipEffect<RoundedRectangle>>, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FixedSizeLayout>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<TextAlignment>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _PaddingLayout>, _PaddingLayout>, <<opaque return type of View.alert(isPresented:content:)>>.0)>, ModifiedContent<Collaboration.Flow.ActionButton, _EnvironmentKeyTransformModifier<Bool>>> and conformance <> _ConditionalContent<A, B>();
    lazy protocol witness table accessor for type Publishers.Autoconnect<NSTimer.TimerPublisher> and conformance Publishers.Autoconnect<A>(&lazy protocol witness table cache variable for type TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>, ModifiedContent<Collaboration.Flow.ActionButton, _PaddingLayout>, ModifiedContent<Collaboration.Flow.ActionButton, _PaddingLayout>)> and conformance TupleView<A>, &demangling cache variable for type metadata for TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>, ModifiedContent<Collaboration.Flow.ActionButton, _PaddingLayout>, ModifiedContent<Collaboration.Flow.ActionButton, _PaddingLayout>)>);
    uint64_t v239 = v464;
    _ConditionalContent<>.init(storage:)();
    uint64_t v218 = v239;
    outlined destroy of TaskPriority?((uint64_t)v238, &demangling cache variable for type metadata for _ConditionalContent<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Toggle<Text>, _PaddingLayout>, _BackgroundStyleModifier<Material>>, _ClipEffect<RoundedRectangle>>, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FixedSizeLayout>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<TextAlignment>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _PaddingLayout>, _PaddingLayout>, <<opaque return type of View.alert(isPresented:content:)>>.0)>, ModifiedContent<Collaboration.Flow.ActionButton, _EnvironmentKeyTransformModifier<Bool>>>);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    outlined consume of Environment<SymbolButton.MaterialColor?>.Content(v451, 0);
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v408 + 8))(v407, v409);
    outlined destroy of TaskPriority?(v448, &demangling cache variable for type metadata for Collaboration.Flow.Collaborator?);
  }
  uint64_t v341 = v462;
  outlined init with copy of (String, Any)((uint64_t)v465, v462, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.bold(_:)>>.0, AccessibilityAttachmentModifier>?);
  uint64_t v342 = v463;
  outlined init with copy of (String, Any)(v466, v463, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.bold(_:)>>.0, _EnvironmentKeyWritingModifier<TextAlignment>>, _PaddingLayout>);
  v542[0] = v534[0];
  *(_DWORD *)((char *)v542 + 3) = *(_DWORD *)((char *)v534 + 3);
  int v540 = v549;
  __int16 v541 = v550;
  v539[0] = v472[0];
  *(_DWORD *)((char *)v539 + 3) = *(_DWORD *)((char *)v472 + 3);
  *(_DWORD *)((char *)v538 + 3) = *(_DWORD *)&v548[3];
  v538[0] = *(_DWORD *)v548;
  *(_DWORD *)&v537[3] = *(_DWORD *)&v547[3];
  *(_DWORD *)v537 = *(_DWORD *)v547;
  *(_DWORD *)&v536[3] = *(_DWORD *)&v546[3];
  *(_DWORD *)v536 = *(_DWORD *)v546;
  LODWORD(v471) = v545;
  outlined init with copy of (String, Any)(v469, v467, &demangling cache variable for type metadata for ModifiedContent<Collaboration.Flow.ProfileEditingView, _PaddingLayout>?);
  outlined init with copy of (String, Any)(v218, v468, &demangling cache variable for type metadata for _ConditionalContent<_ConditionalContent<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Toggle<Text>, _PaddingLayout>, _BackgroundStyleModifier<Material>>, _ClipEffect<RoundedRectangle>>, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FixedSizeLayout>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<TextAlignment>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _PaddingLayout>, _PaddingLayout>, <<opaque return type of View.alert(isPresented:content:)>>.0)>, ModifiedContent<Collaboration.Flow.ActionButton, _EnvironmentKeyTransformModifier<Bool>>>, TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>, ModifiedContent<Collaboration.Flow.ActionBu);
  uint64_t v343 = v443;
  outlined init with copy of (String, Any)(v341, v443, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.bold(_:)>>.0, AccessibilityAttachmentModifier>?);
  v344 = (int *)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModifiedContent<<<opaque return type of View.bold(_:)>>.0, AccessibilityAttachmentModifier>?, ModifiedContent<ModifiedContent<<<opaque return type of View.bold(_:)>>.0, _EnvironmentKeyWritingModifier<TextAlignment>>, _PaddingLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FixedSizeLayout>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>, _PaddingLayout>, ModifiedContent<Collaboration.Flow.ProfileEditingView, _PaddingLayout>?, _ConditionalContent<_ConditionalContent<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Toggle<Text>, _PaddingLayout>, _BackgroundStyleModifier<Material>>, _ClipEffect<RoundedRectangle>>, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FixedSizeLayou);
  outlined init with copy of (String, Any)(v342, v343 + v344[12], &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.bold(_:)>>.0, _EnvironmentKeyWritingModifier<TextAlignment>>, _PaddingLayout>);
  uint64_t v345 = v343 + v344[16];
  uint64_t v346 = v459;
  uint64_t v347 = v458;
  *(void *)&v498[0] = v459;
  *((void *)&v498[0] + 1) = v458;
  LOBYTE(v498[1]) = v452;
  *(_DWORD *)((char *)&v498[1] + 1) = v534[0];
  DWORD1(v498[1]) = *(_DWORD *)((char *)v534 + 3);
  v348 = v442;
  *((void *)&v498[1] + 1) = v442;
  LOWORD(v498[2]) = 256;
  *(_DWORD *)((char *)&v498[2] + 2) = v549;
  WORD3(v498[2]) = v550;
  *((void *)&v498[2] + 1) = v460;
  *(void *)&v498[3] = v461;
  *((void *)&v498[3] + 1) = v441;
  uint64_t v349 = v441;
  LOBYTE(v498[4]) = 1;
  *(_DWORD *)((char *)&v498[4] + 1) = v472[0];
  DWORD1(v498[4]) = *(_DWORD *)((char *)v472 + 3);
  *((void *)&v498[4] + 1) = v456;
  *(void *)&v498[5] = v457;
  BYTE8(v498[5]) = v455;
  *(_DWORD *)((char *)&v498[5] + 9) = *(_DWORD *)v548;
  HIDWORD(v498[5]) = *(_DWORD *)&v548[3];
  *(void *)&v498[6] = v104;
  *((void *)&v498[6] + 1) = v106;
  *(void *)&v498[7] = v108;
  *((void *)&v498[7] + 1) = v110;
  LOBYTE(v498[8]) = v453;
  DWORD1(v498[8]) = *(_DWORD *)&v547[3];
  *(_DWORD *)((char *)&v498[8] + 1) = *(_DWORD *)v547;
  BYTE8(v498[8]) = v454;
  HIDWORD(v498[8]) = *(_DWORD *)&v546[3];
  *(_DWORD *)((char *)&v498[8] + 9) = *(_DWORD *)v546;
  *(void *)&v498[9] = v112;
  *((void *)&v498[9] + 1) = v114;
  *(void *)&v498[10] = v116;
  *((void *)&v498[10] + 1) = v118;
  LOBYTE(v498[11]) = v471;
  long long v351 = v498[8];
  long long v350 = v498[9];
  long long v352 = v498[10];
  *(unsigned char *)(v345 + 176) = v471;
  *(_OWORD *)(v345 + 144) = v350;
  *(_OWORD *)(v345 + 160) = v352;
  long long v353 = v498[0];
  long long v354 = v498[1];
  long long v355 = v498[3];
  *(_OWORD *)(v345 + 32) = v498[2];
  *(_OWORD *)(v345 + 48) = v355;
  *(_OWORD *)uint64_t v345 = v353;
  *(_OWORD *)(v345 + 16) = v354;
  long long v356 = v498[4];
  long long v357 = v498[5];
  long long v358 = v498[6];
  *(_OWORD *)(v345 + 112) = v498[7];
  *(_OWORD *)(v345 + 128) = v351;
  *(_OWORD *)(v345 + 80) = v357;
  *(_OWORD *)(v345 + 96) = v358;
  *(_OWORD *)(v345 + 64) = v356;
  outlined init with copy of (String, Any)(v467, v343 + v344[20], &demangling cache variable for type metadata for ModifiedContent<Collaboration.Flow.ProfileEditingView, _PaddingLayout>?);
  outlined init with copy of (String, Any)(v468, v343 + v344[24], &demangling cache variable for type metadata for _ConditionalContent<_ConditionalContent<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Toggle<Text>, _PaddingLayout>, _BackgroundStyleModifier<Material>>, _ClipEffect<RoundedRectangle>>, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FixedSizeLayout>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<TextAlignment>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _PaddingLayout>, _PaddingLayout>, <<opaque return type of View.alert(isPresented:content:)>>.0)>, ModifiedContent<Collaboration.Flow.ActionButton, _EnvironmentKeyTransformModifier<Bool>>>, TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>, ModifiedContent<Collaboration.Flow.ActionBu);
  outlined retain of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FixedSizeLayout>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>, _PaddingLayout>((uint64_t)v498);
  LOBYTE(v344) = v440 & 1;
  outlined copy of Text.Storage(v346, v347, v440 & 1);
  swift_bridgeObjectRetain();
  swift_retain();
  v359 = v461;
  swift_retain();
  uint64_t v360 = v349;
  swift_retain();
  v361 = v456;
  swift_retain();
  uint64_t v362 = v457;
  swift_retain();
  outlined destroy of TaskPriority?(v464, &demangling cache variable for type metadata for _ConditionalContent<_ConditionalContent<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Toggle<Text>, _PaddingLayout>, _BackgroundStyleModifier<Material>>, _ClipEffect<RoundedRectangle>>, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FixedSizeLayout>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<TextAlignment>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _PaddingLayout>, _PaddingLayout>, <<opaque return type of View.alert(isPresented:content:)>>.0)>, ModifiedContent<Collaboration.Flow.ActionButton, _EnvironmentKeyTransformModifier<Bool>>>, TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>, ModifiedContent<Collaboration.Flow.ActionBu);
  outlined destroy of TaskPriority?(v469, &demangling cache variable for type metadata for ModifiedContent<Collaboration.Flow.ProfileEditingView, _PaddingLayout>?);
  outlined consume of Text.Storage(v346, v347, (char)v344);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v363 = v460;
  swift_release();
  swift_bridgeObjectRelease();
  outlined destroy of TaskPriority?(v466, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.bold(_:)>>.0, _EnvironmentKeyWritingModifier<TextAlignment>>, _PaddingLayout>);
  outlined destroy of TaskPriority?((uint64_t)v465, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.bold(_:)>>.0, AccessibilityAttachmentModifier>?);
  outlined destroy of TaskPriority?(v468, &demangling cache variable for type metadata for _ConditionalContent<_ConditionalContent<TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Toggle<Text>, _PaddingLayout>, _BackgroundStyleModifier<Material>>, _ClipEffect<RoundedRectangle>>, _FlexFrameLayout>, ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FixedSizeLayout>, _FlexFrameLayout>, _EnvironmentKeyWritingModifier<TextAlignment>>, _ForegroundStyleModifier<HierarchicalShapeStyle>>, _EnvironmentKeyWritingModifier<Font?>>, _PaddingLayout>, _PaddingLayout>, _PaddingLayout>, <<opaque return type of View.alert(isPresented:content:)>>.0)>, ModifiedContent<Collaboration.Flow.ActionButton, _EnvironmentKeyTransformModifier<Bool>>>, TupleView<(ModifiedContent<ModifiedContent<ModifiedContent<<<opaque return type of ArtworkImage.artworkPlaceholder<A>(_:)>>.0, _FrameLayout>, _ClipEffect<Circle>>, _PaddingLayout>, ModifiedContent<Collaboration.Flow.ActionBu);
  outlined destroy of TaskPriority?(v467, &demangling cache variable for type metadata for ModifiedContent<Collaboration.Flow.ProfileEditingView, _PaddingLayout>?);
  v499._uint64_t countAndFlagsBits = v459;
  v499._uint64_t object = (void *)v458;
  LOBYTE(v500._countAndFlagsBits) = v452;
  *(_DWORD *)((char *)&v500._countAndFlagsBits + 1) = v542[0];
  HIDWORD(v500._countAndFlagsBits) = *(_DWORD *)((char *)v542 + 3);
  v500._uint64_t object = v348;
  LOWORD(v501._countAndFlagsBits) = 256;
  *(_DWORD *)((char *)&v501._countAndFlagsBits + 2) = v540;
  HIWORD(v501._countAndFlagsBits) = v541;
  v501._uint64_t object = (void *)v363;
  *(void *)&long long v502 = v359;
  *((void *)&v502 + 1) = v360;
  LOBYTE(v503) = 1;
  DWORD1(v503) = *(_DWORD *)((char *)v539 + 3);
  *(_DWORD *)((char *)&v503 + 1) = v539[0];
  *((void *)&v503 + 1) = v361;
  *(void *)&long long v504 = v362;
  BYTE8(v504) = v455;
  HIDWORD(v504) = *(_DWORD *)((char *)v538 + 3);
  *(_DWORD *)((char *)&v504 + 9) = v538[0];
  *(void *)&long long v505 = v104;
  *((void *)&v505 + 1) = v106;
  *(void *)&long long v506 = v108;
  *((void *)&v506 + 1) = v110;
  LOBYTE(v507) = v453;
  DWORD1(v507) = *(_DWORD *)&v537[3];
  *(_DWORD *)((char *)&v507 + 1) = *(_DWORD *)v537;
  BYTE8(v507) = v454;
  HIDWORD(v507) = *(_DWORD *)&v536[3];
  *(_DWORD *)((char *)&v507 + 9) = *(_DWORD *)v536;
  *(void *)&long long v508 = v112;
  *((void *)&v508 + 1) = v114;
  *(void *)&long long v509 = v116;
  *((void *)&v509 + 1) = v118;
  LOBYTE(v510) = v471;
  outlined release of ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<ModifiedContent<Text, _FixedSizeLayout>, _EnvironmentKeyWritingModifier<Font?>>, _EnvironmentKeyWritingModifier<TextAlignment>>, _EnvironmentKeyWritingModifier<Color?>>, _PaddingLayout>, _PaddingLayout>((uint64_t)&v499);
  outlined destroy of TaskPriority?(v463, &demangling cache variable for type metadata for ModifiedContent<ModifiedContent<<<opaque return type of View.bold(_:)>>.0, _EnvironmentKeyWritingModifier<TextAlignment>>, _PaddingLayout>);
  return outlined destroy of TaskPriority?(v462, &demangling cache variable for type metadata for ModifiedContent<<<opaque return type of View.bold(_:)>>.0, AccessibilityAttachmentModifier>?);
}

uint64_t closure #1 in closure #1 in Collaboration.Flow.View.body.getter@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for Locale();
  __chkstk_darwin();
  uint64_t v2 = type metadata accessor for String.LocalizationValue();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v7 = (char *)v16 - v6;
  String.LocalizationValue.init(stringLiteral:)();
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v7, v2);
  if (one-time initialization token for module != -1) {
    swift_once();
  }
  id v8 = (id)static NSBundle.module;
  static Locale.current.getter();
  uint64_t v9 = String.init(localized:table:bundle:locale:comment:)();
  uint64_t v11 = v10;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v7, v2);
  v16[1] = v9;
  _OWORD v16[2] = v11;
  _sS2SSysWl_1();
  uint64_t result = Text.init<A>(_:)();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v13;
  *(unsigned char *)(a1 + 16) = v14 & 1;
  *(void *)(a1 + 24) = v15;
  return result;
}

uint64_t closure #2 in closure #1 in Collaboration.Flow.View.body.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(type metadata accessor for Collaboration.Flow.View(0) - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&_sScPSgMD_2);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  outlined init with copy of Collaboration.Flow(a2, (uint64_t)v5, type metadata accessor for Collaboration.Flow.View);
  type metadata accessor for MainActor();
  uint64_t v9 = static MainActor.shared.getter();
  unint64_t v10 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v9;
  *(void *)(v11 + 24) = &protocol witness table for MainActor;
  outlined init with take of Collaboration.Flow.Collaborator((uint64_t)v5, v11 + v10, type metadata accessor for Collaboration.Flow.View);
  _sScTss5NeverORs_rlE8priority9operationScTyxABGScPSg_xyYaYAcntcfCyt_Tgm5_1((uint64_t)v7, (uint64_t)&async function pointer to partial apply for closure #1 in closure #2 in closure #1 in Collaboration.Flow.View.body.getter, v11);
  return swift_release();
}

uint64_t closure #1 in closure #2 in closure #1 in Collaboration.Flow.View.body.getter()
{
  v0[2] = type metadata accessor for MainActor();
  v0[3] = static MainActor.shared.getter();
  unint64_t v1 = (void *)swift_task_alloc();
  v0[4] = v1;
  void *v1 = v0;
  v1[1] = closure #3 in GroupActivitiesManager.join();
  return Collaboration.Flow.View.initiate(shouldDuplicate:)(0);
}

uint64_t Collaboration.Flow.View.initiate(shouldDuplicate:)(char a1)
{
  v2[10] = v1;
  uint64_t v4 = type metadata accessor for DismissAction();
  v2[11] = v4;
  v2[12] = *(void *)(v4 - 8);
  v2[13] = swift_task_alloc();
  v2[14] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Result<Playlist?, Error>);
  v2[15] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for Playlist();
  v2[16] = v5;
  v2[17] = *(void *)(v5 - 8);
  v2[18] = swift_task_alloc();
  v2[19] = type metadata accessor for MainActor();
  v2[20] = static MainActor.shared.getter();
  type metadata accessor for Collaboration.Flow.View(0);
  if (a1)
  {
    uint64_t v6 = (void *)swift_task_alloc();
    v2[21] = v6;
    *uint64_t v6 = v2;
    v6[1] = Collaboration.Flow.View.initiate(shouldDuplicate:);
    return Playlist.duplicate()();
  }
  else
  {
    uint64_t v8 = (void *)swift_task_alloc();
    v2[23] = v8;
    *uint64_t v8 = v2;
    v8[1] = Collaboration.Flow.View.initiate(shouldDuplicate:);
    return Playlist.hasUnsupportedContent.getter();
  }
}

{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  *(unsigned char *)(*(void *)v1 + 35) = a1;
  swift_task_dealloc();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(Collaboration.Flow.View.initiate(shouldDuplicate:), v3, v2);
}

uint64_t Collaboration.Flow.View.initiate(shouldDuplicate:)()
{
  *(void *)(*(void *)v1 + 176) = v0;
  swift_task_dealloc();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  if (v0) {
    uint64_t v4 = Collaboration.Flow.View.initiate(shouldDuplicate:);
  }
  else {
    uint64_t v4 = Collaboration.Flow.View.initiate(shouldDuplicate:);
  }
  return _swift_task_switch(v4, v3, v2);
}

{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  int *v3;
  uint64_t v4;
  void *v5;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v10;
  char v11;
  void *v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t);
  uint64_t v15;

  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v2 = (int *)type metadata accessor for Collaboration.Flow.View(0);
  *(void *)(v0 + 192) = v2;
  if (*(unsigned char *)(v1 + v2[10]) == 1 && (uint64_t v3 = *(int **)(v1 + v2[11])) != 0)
  {
    type metadata accessor for InlineProfileEditingView.Context();
    lazy protocol witness table accessor for type InlineProfileEditingView.Context and conformance InlineProfileEditingView.Context(&lazy protocol witness table cache variable for type InlineProfileEditingView.Context and conformance InlineProfileEditingView.Context, (void (*)(uint64_t))type metadata accessor for InlineProfileEditingView.Context);
    uint64_t v4 = StateObject.wrappedValue.getter();
    *(void *)(v0 + 200) = v4;
    char v14 = (uint64_t (*)(uint64_t))((char *)v3 + *v3);
    uint64_t v5 = (void *)swift_task_alloc();
    *(void *)(v0 + 208) = v5;
    *uint64_t v5 = v0;
    v5[1] = Collaboration.Flow.View.initiate(shouldDuplicate:);
    return v14(v4);
  }
  else
  {
    uint64_t v7 = v1 + v2[8];
    uint64_t v8 = (char *)(v1 + v2[5]);
    uint64_t v9 = *v8;
    unint64_t v10 = *((void *)v8 + 1);
    *(unsigned char *)(v0 + 40) = v9;
    *(void *)(v0 + 48) = v10;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Bool>);
    State.wrappedValue.getter();
    uint64_t v11 = *(unsigned char *)(v0 + 33);
    uint64_t v12 = (void *)swift_task_alloc();
    *(void *)(v0 + 224) = v12;
    *uint64_t v12 = v0;
    v12[1] = Collaboration.Flow.View.initiate(shouldDuplicate:);
    uint64_t v13 = *(void *)(v0 + 144);
    return Collaboration.Manager.start(_:isOpen:)(v13, v7, (v11 & 1) == 0);
  }
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  int *v12;
  uint64_t v13;
  void *v14;
  uint64_t v16;
  char *v17;
  char v18;
  uint64_t v19;
  char v20;
  void *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(void);
  uint64_t (*v30)(uint64_t);
  uint64_t v31;

  if (*(unsigned char *)(v0 + 35) == 1)
  {
    swift_release();
    _s9MusicCore13CollaborationO5ErrorOAEsAdAWl_0();
    uint64_t v1 = swift_allocError();
    *(_OWORD *)uint64_t v2 = xmmword_1004A3CE0;
    *(unsigned char *)(v2 + 16) = 3;
    swift_willThrow();
    *(void *)(v0 + 72) = v1;
    swift_errorRetain();
    __swift_instantiateConcreteTypeFromMangledName(&_ss5Error_pMD_1);
    if (swift_dynamicCast())
    {
      uint64_t v3 = *(void *)(v0 + 16);
      uint64_t v4 = *(void *)(v0 + 24);
      uint64_t v5 = *(unsigned __int8 *)(v0 + 32);
      if (v5 == 3 && v3 == 8 && !v4)
      {
        uint64_t v6 = *(void *)(v0 + 80);
        swift_errorRelease();
        uint64_t v7 = (char *)(v6 + *(int *)(type metadata accessor for Collaboration.Flow.View(0) + 24));
        uint64_t v8 = *v7;
        uint64_t v9 = *((void *)v7 + 1);
        *(unsigned char *)(v0 + 56) = v8;
        *(void *)(v0 + 64) = v9;
        *(unsigned char *)(v0 + 34) = 1;
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Bool>);
        State.wrappedValue.setter();
        swift_errorRelease();
LABEL_17:
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        uint64_t v29 = *(uint64_t (**)(void))(v0 + 8);
        return v29();
      }
      outlined consume of Collaboration.Error(v3, v4, v5);
    }
    uint64_t v23 = *(uint64_t **)(v0 + 120);
    uint64_t v25 = *(void *)(v0 + 96);
    uint64_t v24 = *(void *)(v0 + 104);
    uint64_t v27 = *(void *)(v0 + 80);
    uint64_t v26 = *(void *)(v0 + 88);
    swift_errorRelease();
    void *v23 = v1;
    swift_storeEnumTagMultiPayload();
    swift_errorRetain();
    specialized Environment.wrappedValue.getter(v24);
    DismissAction.callAsFunction()();
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v24, v26);
    uint64_t v28 = type metadata accessor for Collaboration.Flow.View(0);
    (*(void (**)(uint64_t *))(v27 + *(int *)(v28 + 48)))(v23);
    swift_errorRelease();
    outlined destroy of TaskPriority?((uint64_t)v23, &demangling cache variable for type metadata for Result<Playlist?, Error>);
    goto LABEL_17;
  }
  unint64_t v10 = *(void *)(v0 + 80);
  uint64_t v11 = (int *)type metadata accessor for Collaboration.Flow.View(0);
  *(void *)(v0 + 192) = v11;
  if (*(unsigned char *)(v10 + v11[10]) == 1 && (uint64_t v12 = *(int **)(v10 + v11[11])) != 0)
  {
    type metadata accessor for InlineProfileEditingView.Context();
    lazy protocol witness table accessor for type InlineProfileEditingView.Context and conformance InlineProfileEditingView.Context(&lazy protocol witness table cache variable for type InlineProfileEditingView.Context and conformance InlineProfileEditingView.Context, (void (*)(uint64_t))type metadata accessor for InlineProfileEditingView.Context);
    uint64_t v13 = StateObject.wrappedValue.getter();
    *(void *)(v0 + 200) = v13;
    uint64_t v30 = (uint64_t (*)(uint64_t))((char *)v12 + *v12);
    char v14 = (void *)swift_task_alloc();
    *(void *)(v0 + 208) = v14;
    char *v14 = v0;
    v14[1] = Collaboration.Flow.View.initiate(shouldDuplicate:);
    return v30(v13);
  }
  else
  {
    uint64_t v16 = v10 + v11[8];
    uint64_t v17 = (char *)(v10 + v11[5]);
    uint64_t v18 = *v17;
    uint64_t v19 = *((void *)v17 + 1);
    *(unsigned char *)(v0 + 40) = v18;
    *(void *)(v0 + 48) = v19;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Bool>);
    State.wrappedValue.getter();
    uint64_t v20 = *(unsigned char *)(v0 + 33);
    uint64_t v21 = (void *)swift_task_alloc();
    *(void *)(v0 + 224) = v21;
    *uint64_t v21 = v0;
    v21[1] = Collaboration.Flow.View.initiate(shouldDuplicate:);
    uint64_t v22 = *(void *)(v0 + 144);
    return Collaboration.Manager.start(_:isOpen:)(v22, v16, (v20 & 1) == 0);
  }
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();
  uint64_t v6;
  uint64_t v8;

  *(void *)(*(void *)v1 + 216) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v4 = v3;
    uint64_t v5 = Collaboration.Flow.View.initiate(shouldDuplicate:);
  }
  else
  {
    swift_release();
    uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v4 = v6;
    uint64_t v5 = Collaboration.Flow.View.initiate(shouldDuplicate:);
  }
  return _swift_task_switch(v5, v2, v4);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  void *v7;
  uint64_t v8;
  uint64_t v10;

  uint64_t v1 = *(void *)(v0 + 192);
  uint64_t v2 = *(void *)(v0 + 80);
  uint64_t v3 = v2 + *(int *)(v1 + 32);
  uint64_t v4 = v2 + *(int *)(v1 + 20);
  LOBYTE(v2) = *(unsigned char *)v4;
  uint64_t v5 = *(void *)(v4 + 8);
  *(unsigned char *)(v0 + 40) = v2;
  *(void *)(v0 + 48) = v5;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Bool>);
  State.wrappedValue.getter();
  uint64_t v6 = *(unsigned char *)(v0 + 33);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 224) = v7;
  char *v7 = v0;
  v7[1] = Collaboration.Flow.View.initiate(shouldDuplicate:);
  uint64_t v8 = *(void *)(v0 + 144);
  return Collaboration.Manager.start(_:isOpen:)(v8, v3, (v6 & 1) == 0);
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();
  uint64_t v6;

  *(void *)(*(void *)v1 + 232) = v0;
  swift_task_dealloc();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  if (v0) {
    uint64_t v4 = Collaboration.Flow.View.initiate(shouldDuplicate:);
  }
  else {
    uint64_t v4 = Collaboration.Flow.View.initiate(shouldDuplicate:);
  }
  return _swift_task_switch(v4, v3, v2);
}

{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void);
  uint64_t v11;
  uint64_t v12;

  uint64_t v11 = v0[24];
  uint64_t v2 = v0[17];
  uint64_t v1 = v0[18];
  uint64_t v4 = v0[15];
  uint64_t v3 = v0[16];
  uint64_t v5 = v0[13];
  uint64_t v6 = v0[11];
  uint64_t v7 = v0[12];
  uint64_t v8 = v0[10];
  swift_release();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v4, v1, v3);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v2 + 56))(v4, 0, 1, v3);
  swift_storeEnumTagMultiPayload();
  specialized Environment.wrappedValue.getter(v5);
  DismissAction.callAsFunction()();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  (*(void (**)(uint64_t))(v8 + *(int *)(v11 + 48)))(v4);
  outlined destroy of TaskPriority?(v4, &demangling cache variable for type metadata for Result<Playlist?, Error>);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void);
  uint64_t v15;
  char *v16;
  char v17;
  uint64_t v18;
  uint64_t v19;

  swift_release();
  uint64_t v1 = *(void *)(v0 + 176);
  *(void *)(v0 + 72) = v1;
  swift_errorRetain();
  __swift_instantiateConcreteTypeFromMangledName(&_ss5Error_pMD_1);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_10;
  }
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = *(unsigned __int8 *)(v0 + 32);
  if (v4 != 3 || v2 != 8 || v3 != 0)
  {
    outlined consume of Collaboration.Error(v2, v3, v4);
LABEL_10:
    uint64_t v7 = *(void **)(v0 + 120);
    uint64_t v9 = *(void *)(v0 + 96);
    uint64_t v8 = *(void *)(v0 + 104);
    uint64_t v11 = *(void *)(v0 + 80);
    unint64_t v10 = *(void *)(v0 + 88);
    swift_errorRelease();
    char *v7 = v1;
    swift_storeEnumTagMultiPayload();
    swift_errorRetain();
    specialized Environment.wrappedValue.getter(v8);
    DismissAction.callAsFunction()();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
    uint64_t v12 = type metadata accessor for Collaboration.Flow.View(0);
    (*(void (**)(void *))(v11 + *(int *)(v12 + 48)))(v7);
    swift_errorRelease();
    outlined destroy of TaskPriority?((uint64_t)v7, &demangling cache variable for type metadata for Result<Playlist?, Error>);
    goto LABEL_11;
  }
  uint64_t v15 = *(void *)(v0 + 80);
  swift_errorRelease();
  uint64_t v16 = (char *)(v15 + *(int *)(type metadata accessor for Collaboration.Flow.View(0) + 24));
  uint64_t v17 = *v16;
  uint64_t v18 = *((void *)v16 + 1);
  *(unsigned char *)(v0 + 56) = v17;
  *(void *)(v0 + 64) = v18;
  *(unsigned char *)(v0 + 34) = 1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Bool>);
  State.wrappedValue.setter();
  swift_errorRelease();
LABEL_11:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
  return v13();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  char *v6;
  char v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(void);
  uint64_t v17;

  swift_release();
  swift_release();
  uint64_t v1 = *(void *)(v0 + 216);
  *(void *)(v0 + 72) = v1;
  swift_errorRetain();
  __swift_instantiateConcreteTypeFromMangledName(&_ss5Error_pMD_1);
  if (swift_dynamicCast())
  {
    uint64_t v2 = *(void *)(v0 + 16);
    uint64_t v3 = *(void *)(v0 + 24);
    uint64_t v4 = *(unsigned __int8 *)(v0 + 32);
    if (v4 == 3 && v2 == 8 && !v3)
    {
      uint64_t v5 = *(void *)(v0 + 80);
      swift_errorRelease();
      uint64_t v6 = (char *)(v5 + *(int *)(type metadata accessor for Collaboration.Flow.View(0) + 24));
      uint64_t v7 = *v6;
      uint64_t v8 = *((void *)v6 + 1);
      *(unsigned char *)(v0 + 56) = v7;
      *(void *)(v0 + 64) = v8;
      *(unsigned char *)(v0 + 34) = 1;
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Bool>);
      State.wrappedValue.setter();
      swift_errorRelease();
      goto LABEL_8;
    }
    outlined consume of Collaboration.Error(v2, v3, v4);
  }
  uint64_t v9 = *(void **)(v0 + 120);
  uint64_t v11 = *(void *)(v0 + 96);
  unint64_t v10 = *(void *)(v0 + 104);
  uint64_t v13 = *(void *)(v0 + 80);
  uint64_t v12 = *(void *)(v0 + 88);
  swift_errorRelease();
  unsigned char *v9 = v1;
  swift_storeEnumTagMultiPayload();
  swift_errorRetain();
  specialized Environment.wrappedValue.getter(v10);
  DismissAction.callAsFunction()();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  char v14 = type metadata accessor for Collaboration.Flow.View(0);
  (*(void (**)(void *))(v13 + *(int *)(v14 + 48)))(v9);
  swift_errorRelease();
  outlined destroy of TaskPriority?((uint64_t)v9, &demangling cache variable for type metadata for Result<Playlist?, Error>);
LABEL_8:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v15 = *(uint64_t (**)(void))(v0 + 8);
  return v15();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void);
  uint64_t v15;
  char *v16;
  char v17;
  uint64_t v18;
  uint64_t v19;

  swift_release();
  uint64_t v1 = *(void *)(v0 + 232);
  *(void *)(v0 + 72) = v1;
  swift_errorRetain();
  __swift_instantiateConcreteTypeFromMangledName(&_ss5Error_pMD_1);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_10;
  }
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = *(unsigned __int8 *)(v0 + 32);
  if (v4 != 3 || v2 != 8 || v3 != 0)
  {
    outlined consume of Collaboration.Error(v2, v3, v4);
LABEL_10:
    uint64_t v7 = *(void **)(v0 + 120);
    uint64_t v9 = *(void *)(v0 + 96);
    uint64_t v8 = *(void *)(v0 + 104);
    uint64_t v11 = *(void *)(v0 + 80);
    unint64_t v10 = *(void *)(v0 + 88);
    swift_errorRelease();
    char *v7 = v1;
    swift_storeEnumTagMultiPayload();
    swift_errorRetain();
    specialized Environment.wrappedValue.getter(v8);
    DismissAction.callAsFunction()();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
    uint64_t v12 = type metadata accessor for Collaboration.Flow.View(0);
    (*(void (**)(void *))(v11 + *(int *)(v12 + 48)))(v7);
    swift_errorRelease();
    outlined destroy of TaskPriority?((uint64_t)v7, &demangling cache variable for type metadata for Result<Playlist?, Error>);
    goto LABEL_11;
  }
  uint64_t v15 = *(void *)(v0 + 80);
  swift_errorRelease();
  uint64_t v16 = (char *)(v15 + *(int *)(type metadata accessor for Collaboration.Flow.View(0) + 24));
  uint64_t v17 = *v16;
  uint64_t v18 = *((void *)v16 + 1);
  *(unsigned char *)(v0 + 56) = v17;
  *(void *)(v0 + 64) = v18;
  *(unsigned char *)(v0 + 34) = 1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for State<Bool>);
  State.wrappedValue.setter();
  swift_errorRelease();
LABEL_11:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
  return v13();
}